[00:04:16] *** Joins: tangy (tangy@user/tangy)
[00:04:18] *** Quits: rkta (~kt@62.113.246.111) (Read error: Connection reset by peer)
[00:04:26] *** Joins: rkta (~kt@62.113.246.111)
[00:05:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[00:08:16] *** Joins: chasmo77 (~chas77@71.63.241.168)
[00:09:14] *** Joins: chuck_ (~chuck@181.191.142.202)
[00:10:22] *** Quits: chuck_ (~chuck@181.191.142.202) (Client Quit)
[00:12:40] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[00:13:04] *** Quits: fuzzybear3965 (~fuzzybear@2a03:7380:2102:a812:c9b7:a086:37eb:f656) (Quit: Client closed)
[00:15:10] *** Joins: chuck_ (~chuck@181.191.142.202)
[00:15:21] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[00:15:31] *** Quits: chuck_ (~chuck@181.191.142.202) (Client Quit)
[00:17:31] *** Quits: testuser321 (~wandering@115.187.42.168) (Quit: Leaving)
[00:17:31] *** Joins: fuzzybear3965 (~fuzzybear@2a03:7380:2102:a812:c9b7:a086:37eb:f656)
[00:18:43] *** Quits: fuzzybear3965 (~fuzzybear@2a03:7380:2102:a812:c9b7:a086:37eb:f656) (Client Quit)
[00:22:49] *** Joins: akoana (~ah@user/akoana)
[00:24:44] *** Joins: ChmEarl (~chmearl@user/chmearl)
[00:26:44] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[00:29:17] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[00:30:06] <bn_work> Soliton: yes, but I need to do both a match and a non-match, can one do that both in one grep command w/o negating all the patterns? (my understanding of -v was that it negates all patterns specified, vs only one, which is what I want to do, hence the question)
[00:31:00] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:31:27] <twkm> at this point either pure bash (slow) or some other language (almost certainly faster) seems indicated.
[00:31:29] <greycat> So you want to read a shit-ton of files, line by line, and if a given line matches FOO and doesn't match BAR then you want to perform some substitution, and write out a new version of the file and then rename it to replace the original file?  Recursively?
[00:32:20] <greycat> (Sounds like a job for perl.)
[00:34:52] <phogg> pretty good fit for sed, too
[00:35:03] <phogg> and a modest shell script
[00:35:26] <greycat> I would definitely have to learn a lot more about sed to do it in sed.
[00:35:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:39:28] <bn_work> greycat: yes, that's why I was initially thinking find w/ exec or I guess pj's solution of just suffixing on | xargs -0 sed '...'
[00:40:43] <bn_work> the thing I wasn't sure about was how to get grep to only output a single list of files that matched both those conditions, ie:  A AND !B
[00:41:01] <greycat> The problem is, you keep trying to use tools like "grep" and "grep -v" which operate on entire files, but you need tools that operate on single lines.  That means commands within a programming language, usually.
[00:42:00] <bn_work> oh, I just had an idea!  I can just use uniq & awk to just give me the filenames to pass to xargs
[00:42:06] <greycat> *sigh*
[00:42:08] <Soliton> so it's two conditions now?
[00:42:16] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[00:42:24] <greycat> It's entirely hopeless.  You keep driving to the airport and then wondering why you can't get on the bus.
[00:43:05] <Soliton> i guess no one has a clue what the goal is.
[00:43:38] <bn_work> sure, it's not the most efficient but it gets the job done
[00:44:00] <greycat> But it doesn't.  You're still here scratching your head.  Because it's NOT working.
[00:44:33] <greycat> You should stop fucking around with the wrong tools, and write a perl program that reads line by line and performs the two comparisons per line and so on.
[00:44:37] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Ping timeout: 252 seconds)
[00:45:11] <bn_work> Soliton: sorry, should have made that clear from the beginning it was B AND !A vs just !A
[00:45:43] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 252 seconds)
[00:45:52] <Soliton> nothing is clear to me so far. just vague hints of some logic involving regex.
[00:46:19] <Soliton> uniq and awk make no sense so nothing to gain from that hint either.
[00:46:36] <greycat> Soliton: near as I can tell, they want to modify a shit-ton of files in place, recursively.  The rule is: if a given line matches FOO and does not match BAR, then perform some unspecified substitution on this line.
[00:47:01] <greycat> And they seem to think they can apply whole-file tools like grep to this.
[00:47:31] *** Quits: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2) (Remote host closed the connection)
[00:47:35] *** Joins: keypushe- (keypusher@user/keypusher)
[00:47:40] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[00:49:29] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:49:34] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[00:49:37] <bn_work> greycat:  not sure what you're talking about as I haven't even tried my suggestion yet so your comment of "But it doesn't.  You're still here scratching your head.  Because it's NOT working" makes no sense. Re. perl:  it would take me longer to re-learn perl to grok it vs just writing my pipeline
[00:50:07] <greycat> Then write it in pure bash, and accept that it'll be slow as hell.
[00:50:28] *** keypushe- is now known as keypusher
[00:51:52] <greycat> for f; do out=${f.tmp}; changed=0; while IFS= read -r line; do if [[ $line =~ FOO ]] && ! [[ $line =~ BAR ]]; then line=${line//something/something}; changed=1; fi; printf %s\\n "$line"; done < "$f" > "$out"; if ((changed)); then mv "$out" "$f"; else rm "$out"; fi; done
[00:51:56] <greycat> or something like that.
[00:55:49] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (Remote host closed the connection)
[01:02:23] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[01:02:40] *** Joins: vysn (~vysn@user/vysn)
[01:04:32] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:05:40] <phogg> greycat: the only things sed can't do itself are overwrite the file and recurse: sed -ne '/FOO/{/BAR/!s/some/replacement/p}'
[01:06:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[01:06:06] <phogg> except where -i exists it can do some of that, of course
[01:06:34] <greycat> even with -i, sed will never be able to decide "I didn't change anything, so let's not overwrite the original file after all"
[01:07:04] <phogg> if it's efficiency that's the problem then it's a bad idea for a lot of reasons
[01:07:18] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[01:07:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:07:36] <greycat> they can use the bash solution I gave (minus any bugs that I may have written), or they can translate that same algorithm to whatever language they like
[01:10:02] <greycat> once they've got the script that modifies files in place, they just drop it into a find ... -exec myscript {} +
[01:10:21] <phogg> indeed
[01:10:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b)
[01:11:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:12:07] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[01:13:32] *** Joins: zebrag (~chris@user/zebrag)
[01:14:18] *** Quits: sargon_ (~sargon@188.250.185.117) (Quit: Ex-Chat)
[01:15:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 260 seconds)
[01:19:36] *** Quits: cafkafk (~cafkafk@user/cafkafk) (Quit: WeeChat 3.1)
[01:22:59] <bn_work> Solition:  s/awk/cut/  (no need for awk)
[01:23:47] <greycat> 16:12  bn_work> oh, I just had an idea!  I can just use uniq & awk [...]
[01:23:53] <bn_work> Soliton: I've obtained a list of candidates using multiple incantations of grep & grep -v, and they all output the filenames, so I can just do grep -IRwi "B" . | grep -v "A" | cut -f1 -d: | uniq  (for my particular situation I know all the files don't end w/ NL so pj's concern shouldn't be an issue)
[01:24:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:24:19] <greycat> *plonk*
[01:26:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:26:10] *** Lord_of_Life_ is now known as Lord_of_Life
[01:27:27] <bn_work> phogg: where does -i not exist?  it seems to exist in BSD + GSED + SSED?
[01:27:55] *** Joins: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b)
[01:27:59] <phogg> bn_work: sed -i is not standard
[01:28:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[01:29:41] <twkm> if all you care about uses -i then by all means use it.  how it works varies across the systems you mention so check the docs.
[01:30:07] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:30:10] *** Quits: aliosablack (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[01:30:17] <greycat> dear gods, it got WORSE after the plonk?  now they want this shit to be cross-platform?
[01:30:19] *** Quits: magla (~gelignite@55d44c2f.access.ecotel.net) (Quit: Stay safe!)
[01:31:10] *** Joins: shad (~shad@user/shad)
[01:31:21] *** Joins: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr)
[01:31:31] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[01:32:04] *** Joins: LSD (~LSD@2.lsd.systems)
[01:32:10] <phogg> greycat: no
[01:33:06] <Soliton> so: grep | grep | cut | uniq | xargs sed -i? apart from the insanity i wouldn't be surprised if it's slower than the bash solution.
[01:34:40] <Soliton> hopefully this is a one time contraption where the result is carefully checked.
[01:34:50] <CrtxReavr> I'm strugglng with this command: ssmtp -C ~/etc/ssmtp.conf "${notify_recipients} < ${tmp_mail_file}"
[01:35:23] <CrtxReavr> It's getting interpreted as: ssmtp -C etc/ssmtp.conf 'gneff@cisco.com gneff@trioptimum.com < /tmp/tmosync.email.txt'
[01:35:26] <greycat> It seems quite unlikely that you actually want those two filesnames and the < between them to be a single argument.
[01:36:07] <CrtxReavr> ${notify_recipients} is a space separated list of addresses.
[01:36:08] <Soliton> is ssmtp expecting shell code or something?
[01:36:10] <greycat> Also, notify_recipients is plural.  Is it actually a list?
[01:36:20] <greycat> So, that's TWO bugs then.
[01:36:53] <greycat> You want each variable to be quoted separately (not just quote a whole chunk of a command as one arg), and you want the list to be stored as an array.  Or else go back to 1985 and use word splitting and pray it doesn't eat your soul.
[01:37:11] <CrtxReavr> Well, I tried quoting them separately too.
[01:38:26] *** Quits: guest856 (~guest@host211.190-224-209.telecom.net.ar) (Remote host closed the connection)
[01:38:37] <CrtxReavr> That's still leaving sinqle quotes though.
[01:38:47] <greycat> *sigh*
[01:38:49] <greycat> are you kidding me.
[01:38:54] <Soliton> no single quotes anywhere in your command.
[01:39:18] <CrtxReavr> ssmtp -C ~/etc/ssmtp.conf "${notify_recipients}" < "${tmp_mail_file}"
[01:39:18] <greycat> CrtxReavr: are you misinterpreting set -x output?
[01:39:30] <bn_work> Soliton:  it's one time, yes, I agree, it's not efficient but it gets the job done.  I'm assuming grey's solution is more efficient so I guess I'll study that (or even perl) for future use
[01:39:30] <greycat> OK, that's better.  That fixes one of the two bugs.
[01:39:31] <CrtxReavr> No, the -x output is what I was pasting from.
[01:39:32] <Soliton> i guess it's get confused by set -x output day.
[01:40:45] <greycat> you used set -x and saw single quotes in it.  and then you thought, "oh shit, there are single quotes!  I must ask #bash about it!"
[01:40:46] *** Joins: khoa (~khoa@user/khoa)
[01:40:56] <Soliton> bn_work: not only slow you're also matching file paths with grep.
[01:41:11] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[01:42:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 260 seconds)
[01:43:30] *** Joins: YaoNai (~YaoNai@user/yaonai)
[01:43:44] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[01:44:57] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:41] <akoana> CrtxReavr: maybe try something like this:  https://termbin.com/auam
[01:46:57] *** Joins: somlis (~somlis@user/somlis)
[01:48:13] *** Joins: gry_ (~quassel@botters/gry)
[01:48:16] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 252 seconds)
[01:48:57] <CrtxReavr> akoana, network I'm on blocks termbin.com (NFI why) - could you put that on bpaste.net instead?
[01:50:40] <Soliton> !lists
[01:50:40] <greybot> In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[01:50:56] <akoana> CrtxReavr: https://bpa.st/2PRA
[01:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:54:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[01:56:14] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:56:21] <CrtxReavr> akoana, thankyou. . . that seems to be the fix I needed.
[01:57:06] <akoana> CrtxReavr: as greycat said, use an array for the notify_recipients...
[01:58:37] <CrtxReavr> akoana, what exactly is that ``[@]`` operator for ${notify_recipients} though?
[01:58:43] <greycat> !faq 5
[01:58:43] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[01:59:39] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:59:55] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Remote host closed the connection)
[02:00:53] <akoana> CrtxReavr: ^^
[02:01:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:03:32] <CrtxReavr> notify_recipients could get. . . quite long - will the ()s allow for line-wrapping within them?
[02:04:08] <akoana> CrtxReavr: yes you can write  array=(
[02:04:13] <akoana> "entry1"
[02:04:19] <akoana> "entry2"
[02:04:20] <akoana> ...
[02:04:22] <akoana> )
[02:06:34] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[02:11:17] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[02:13:00] <CrtxReavr> Learned a lot for this ~100 line script. . .
[02:13:33] <CrtxReavr> Like that SSH banners get written to stderr. . . the hard way.
[02:15:13] *** Quits: mooz (~none@23.254.112.158) (Ping timeout: 252 seconds)
[02:18:07] <greycat> (and you can omit the quotes, as long as each recipient doesn't contain anything that needs quotes)
[02:19:05] <CrtxReavr> Shouldn't be anything in a valid E-mail address that *NEEDS* quotes, but I'm just going to leave them in the docs & config file comments anyways.
[02:19:23] *** gry_ is now known as gry
[02:22:00] <CrtxReavr> So when I see single quotes in -x output, I should understand they're not really there, they're just showing me how things are being interpreted?
[02:22:08] <greycat> yes
[02:22:13] <CrtxReavr> 'k
[02:22:52] *** Quits: zaratustra (~zaratustr@user/zaratustra) (Ping timeout: 250 seconds)
[02:23:45] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[02:24:47] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 240 seconds)
[02:24:55] <bn_work> Soliton:  what do you mean?
[02:26:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:26:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[02:27:07] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:27:17] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:27:17] *** Noventicx1 is now known as Noventicx
[02:27:20] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:27:47] *** Joins: zaratustra_ (~zaratustr@vps-9243601a.vps.ovh.net)
[02:27:47] *** Quits: zaratustra_ (~zaratustr@vps-9243601a.vps.ovh.net) (Changing host)
[02:27:47] *** Joins: zaratustra_ (~zaratustr@user/zaratustra)
[02:27:47] <akoana> and instead of  notify_recipients=(...) you could read the mail addresses from a file and use     mapfile -t notify_recipients < "file_with_one_mailaddress_per_line" to fill the notify_recipients array from a file
[02:27:47] <akoana> errm,  mapfile -t notify_recipients < file_with_one_mailaddress_per_line
[02:27:47] <akoana> this eliminates the need to quote anything in the file_with_one_mailaddress_per_line
[02:28:14] <greycat> they may not want two config files
[02:28:36] <akoana> hmm, fair enough
[02:28:43] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[02:29:05] <CrtxReavr> Will things like ash & dash support this?: https://bpa.st/6AHA
[02:30:13] <greycat> Is it an array?  Then no, they won't.
[02:30:20] <greycat> sh has no arrays.
[02:32:14] <CrtxReavr> Okay, thanks.
[02:33:20] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:33:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[02:33:33] <greycat> The lack of array/list support in sh is one of the reasons why people do incredibly stupid shit like  mylist="one two three"; foobar $mylist   -- because there's almost nothing else sh can *do*
[02:34:34] <greycat> 40 years of accumulated errors.  That's the sh playbook.
[02:36:10] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[02:37:16] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[02:37:19] <NRK[m]> you can change the IFS and use a less common char to split on
[02:37:26] <NRK[m]> but yeah, it's hacky
[02:37:31] <akoana> a poor workaround (using implicit $@ could be:
[02:37:34] <akoana> sh# f(){ for i; do printf %s\\n "$i"; done; }; f "foo" "bar" "baz"
[02:37:35] <shbot> akoana: foo
[02:37:35] <shbot> akoana: bar
[02:37:35] <shbot> akoana: baz
[02:39:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[02:39:20] *** Joins: strive (~strive@user/strive)
[02:39:40] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[02:40:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[02:40:41] <greycat> !shtricks
[02:40:41] <greybot> POSIX sh tricks and tips http://www.etalabs.net/sh_tricks.html
[02:40:46] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[02:41:46] <akoana> greycat: oh, that's a nice page, thanks for sharing
[02:42:42] *** Quits: FernandoBasso (~FernandoB@2804:d51:511d:4a00:d185:d5b9:d7f5:9153) (Remote host closed the connection)
[02:45:14] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:46:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:46:22] *** Joins: lalitmee_ (~lalitmee@180.94.32.166)
[02:46:43] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 252 seconds)
[02:48:47] *** Joins: dre (~dre@2001:8003:c932:c301:5cf6:8209:dad6:8a73)
[02:48:53] *** Quits: lalitmee__ (~lalitmee@180.94.32.100) (Ping timeout: 252 seconds)
[02:55:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:03:11] <NRK[m]> anyway to posix-ly grep AND case insensitively? 
[03:03:19] <NRK[m]> i can do `awk '/foo/ && /bar/'`
[03:03:25] <NRK[m]> but that's not case insensitive
[03:03:30] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Read error: Connection reset by peer)
[03:03:38] <NRK[m]> and afaik /I isn't posix
[03:03:47] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[03:04:17] <NRK[m]> piping the output of one grep into another is also not an option because i need the line number of the matches
[03:05:39] <twkm> grep -i, but then you asked about awk which isn't grep.
[03:06:25] <NRK[m]> i know, that's not the problem. problem is i need to grep pattern1 && pattern2
[03:06:41] <twkm> grep -i -e one -e two
[03:06:50] <NRK[m]> thats ||
[03:07:42] *** Joins: kj (~kj@kj.aerisnetwork.net)
[03:07:43] <twkm> grep doesn't have and, so indeed awk.  you get to use lots of [Pp][Aa][Tt]...
[03:08:19] <phogg> I saw someone do it this way once, but it's not efficient and works only on a pipeline: and-grep () { local pat="$1" ; shift ; test "$pat" && grep -- "$pat" | and-grep "$@" || cat ; }
[03:08:46] <emanuele6> local is not posix
[03:08:54] <greycat> We have a whole FAQ page for "grepping foo AND bar ...".  Whether that applies to whatever the question has mutated into, I dunno.
[03:08:56] <phogg> local is also not required
[03:09:16] <emanuele6> is it not?
[03:09:19] <twkm> awk 'tolower($0)~/pattern1/ && tolower($0)~/pattern2/ ...'
[03:09:20] <emanuele6> you are using recursion
[03:09:46] <emanuele6> i guess it is not required
[03:09:47] <phogg> emanuele6: by the time you get to the recursive part you aren't evaluating $pat any more, so I think it won't matter.
[03:10:26] <twkm> technically tolower can have issues, so it isn't always what you need.
[03:10:39] <phogg> obviously toupper is better because the numbers are smaller
[03:10:47] *** Joins: shad (~shad@user/shad)
[03:11:11] <NRK[m]> patterns aren't gureented to be lower case, i guess i'll need to do that too
[03:11:36] <phogg> sure sounds like you really want to use perl for this
[03:12:04] <greycat> 16:02  greycat> (Sounds like a job for perl.)
[03:12:05] <greycat> 18:41  phogg> sure sounds like you really want to use perl for this
[03:12:24] <greycat> 2 hours and 39 minutes.  2 HOURS and 39 MINUTES.  This shit.  Has.  Been.  Going.  On.
[03:12:34] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 252 seconds)
[03:12:42] <phogg> perl isn't posix but it's a de-facto standard. It's installed on a ridiculous number of systems and the parts you want to use haven't changed in decades, so any version ought to do
[03:12:43] <greycat> I gave them a complete pure bash solution.
[03:13:26] <phogg> greycat: yikes, in that case I'll stop trying
[03:13:39] <NRK[m]> hmm, me?
[03:13:48] <NRK[m]> i just came in
[03:14:53] <greycat> I'm getting closer to the point where I just auto-*plonk* anyone whose goal involves editing files in place.
[03:15:19] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[03:15:38] *** Joins: kj (~kj@kj.aerisnetwork.net)
[03:16:57] <twkm> awk -v "pat1=..." 'tolower($0)~tolower(pat1)'
[03:17:12] <phogg> sure would be nice if there were a scripting language built around ed
[03:17:34] <twkm> there is, it just isn't complete.
[03:17:42] <phogg> there is, it's called sh
[03:18:02] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[03:18:20] *** Joins: docmax__ (~docmax@dynamic-095-116-207-064.95.116.pool.telefonica.de)
[03:18:24] <phogg> but seriously, just add a little conditional branching and ed would neatly solve most of these problems
[03:21:32] <twkm> so make ed more like sed, since a sed or two is more like ed.
[03:21:47] *** Quits: docmax_ (~docmax@dynamic-077-000-154-222.77.0.pool.telefonica.de) (Ping timeout: 245 seconds)
[03:26:38] *** Joins: ccl (ccl@shell.xshellz.com)
[03:29:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:29:51] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:32:43] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:33:08] *** Joins: sublim20 (~sublim20@user/sublim20)
[03:33:10] *** Joins: jsrnop (~mark@user/jsrnop)
[03:35:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[03:35:35] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:35:48] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[03:37:56] *** Parts: theovod (~theovod@200116b8406d3d00bda3776eea905537.dip.versatel-1u1.de) ()
[03:38:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b)
[03:43:15] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[03:44:43] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 265 seconds)
[03:46:40] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 252 seconds)
[03:46:49] *** Parts: akoana (~ah@user/akoana) ()
[03:47:16] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:47:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:47:59] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:48:25] *** Joins: keypusher (keypusher@user/keypusher)
[03:48:33] *** Quits: xx (~xx@user/xx) (Quit: xx)
[03:49:06] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[03:49:40] *** Joins: Gothiclown (uid512238@id-512238.tinside.irccloud.com)
[03:49:51] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[03:50:15] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 260 seconds)
[03:50:17] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[03:50:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:58:18] *** Quits: Gamma (~Gamma@zsh/user/Gamma) (Ping timeout: 276 seconds)
[04:01:46] *** Joins: pj (~pj@ghettoforge/pj)
[04:08:38] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[04:09:45] *** Quits: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr) (Remote host closed the connection)
[04:09:53] *** Joins: motherr (~motherr@user/motherr)
[04:10:23] *** Quits: motherr (~motherr@user/motherr) (Client Quit)
[04:13:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:14:48] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:27] *** Joins: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:15:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:18:18] *** Quits: skered (~dereks@user/skered) (Quit: ircII EPIC5-2.1.5 -- Are we there yet?)
[04:18:41] *** Joins: skered (~dereks@user/skered)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:25] *** Quits: bgpepi (~quassel@ip-83-134-114-91.dsl.scarlet.be) (Remote host closed the connection)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:22:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[04:22:41] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[04:23:24] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[04:23:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 260 seconds)
[04:24:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:26:38] *** Joins: ccl (ccl@shell.xshellz.com)
[04:26:48] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:30:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:31:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b)
[04:35:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:8055:2cab:b555:3a9b) (Ping timeout: 252 seconds)
[04:36:15] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[04:36:19] *** Joins: mestre (~mestre@191.177.175.57)
[04:36:41] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[04:37:14] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[04:37:59] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[04:38:11] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[04:39:40] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[04:40:10] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[04:51:41] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Quit: leaving)
[04:52:53] *** Joins: travisghansen (~travisgha@192.74.130.86)
[04:53:06] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[04:55:13] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Quit: WeeChat 2.3)
[04:56:25] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[05:00:01] *** Joins: roadie (~user@2a02:8108:ec0:1427:61ec:f4ae:67ba:f61)
[05:04:55] *** Quits: roadie (~user@2a02:8108:ec0:1427:61ec:f4ae:67ba:f61) (Ping timeout: 260 seconds)
[05:05:36] *** Joins: Voxel (~Voxel@173-46-68-178.baltnet.ru)
[05:11:08] *** h4x0r is now known as MrDuckHunt
[05:11:53] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:12:28] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[05:19:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:23:29] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[05:23:32] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[05:24:05] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:24:32] *** Quits: ponies (~ponies@203.111.95.26) (Read error: Connection reset by peer)
[05:24:44] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Excess Flood)
[05:27:44] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[05:28:25] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 252 seconds)
[05:29:34] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:53] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[05:35:43] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:41:45] *** Joins: nbao (~nbao@187.20.16.119)
[05:42:42] *** Quits: strive (~strive@user/strive) (Remote host closed the connection)
[05:48:11] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.0.1)
[05:48:27] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 265 seconds)
[05:49:09] *** Joins: gry (~quassel@botters/gry)
[05:58:54] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:59:29] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:02:13] *** Joins: totenkoph (~scythe@user/totenkoph)
[06:03:59] *** Quits: Gothiclown (uid512238@id-512238.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:04:23] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:05:01] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[06:05:47] *** Joins: gnoo (~gnoo@user/gnoo)
[06:14:48] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[06:25:08] *** Joins: cdown_ (~cdown@89.32.122.5)
[06:25:35] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[06:27:22] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[06:27:33] *** cdown_ is now known as cdown
[06:36:24] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[06:36:47] *** Joins: nbao (~nbao@187.20.16.119)
[06:41:38] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[06:42:20] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 260 seconds)
[06:42:27] *** Joins: Architect (~MrDuckHun@user/h4x0r)
[06:42:28] *** Architect is now known as TheArchitect
[06:43:39] *** Joins: ferdna (~ferdna@user/ferdna)
[06:45:23] *** Quits: greknod2 (~grek@114-198-49-62.dyn.iinet.net.au) (Ping timeout: 252 seconds)
[06:45:53] *** Joins: greknod2 (~grek@ppp121-45-159-131.bri-pow-que-bras32.tpg.internode.on.net)
[06:48:21] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[06:48:26] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:48:41] *** Quits: jos2 (~jos3@dyndsl-091-248-055-065.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[06:50:48] *** Quits: TheArchitect (~MrDuckHun@user/h4x0r) (Ping timeout: 265 seconds)
[06:52:28] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[06:53:04] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[06:53:20] *** MrDuckHunt is now known as TheArchitect
[06:55:03] *** Joins: nbao (~nbao@187.20.16.119)
[06:55:15] *** Quits: nbao (~nbao@187.20.16.119) (Client Quit)
[06:55:50] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:56:53] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:58:03] *** Quits: falfool (~falfool@c-73-98-231-122.hsd1.ut.comcast.net) (Quit: Ping timeout (120 seconds))
[07:00:21] *** Joins: jos2 (~jos3@dyndsl-091-248-051-190.ewe-ip-backbone.de)
[07:00:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:00:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[07:06:15] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[07:07:37] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 245 seconds)
[07:07:52] *** Joins: twobitsprite (~twobitspr@195.181.171.248)
[07:10:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:13:08] <cliluw> Why can't I do if (( ! $possibly_undefined_var ))? It says error token is "!". I thought it the double parens allowed C expressions, which would allow !.
[07:14:08] <zgu> "$possible_undefined_var" ?
[07:16:14] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[07:16:50] <cliluw> Let's just call it "$foo". I want to use the arithmetic context to see if foo is not undefined and set to non-zero.
[07:19:23] <jetchisel> (( is for arithmetic expression
[07:20:51] <pj> you want it evaluated in a numeric context, and if the result is undefined return falsy?
[07:21:06] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:21:13] <pj> # (( ! foo )); echo $?
[07:21:14] <shbot> pj: 0
[07:21:25] <pj> # foo=1; (( ! foo )); echo $?
[07:21:26] <shbot> pj: 1
[07:21:28] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[07:21:40] <pj> # foo=0; (( ! foo )); echo $?
[07:21:41] <shbot> pj: 0
[07:21:47] <pj> # foo=bar; (( ! foo )); echo $?
[07:21:48] <shbot> pj: 0
[07:22:14] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:22:14] <cliluw> If foo is empty string or 0, return falsy.
[07:22:47] <pj> that's fine but if you're evaluating in a numeric context any non-numeric value will also be falsy.
[07:22:53] <pj> such as "bar"
[07:23:10] <pj> anyways, see above.
[07:23:26] <jetchisel> still, (( is not written to check if var is undefined or to something else
[07:23:34] <jetchisel> use [[
[07:24:07] <pj> (( is for checking numeric context.
[07:24:13] <pj> which is what he's asking for.
[07:24:54] <jetchisel> hmm, reading comprehension failed on this side ...
[07:26:05] <pj> cliluw: where you're messing up is you need to leave out the "$"
[07:26:05] *** Joins: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com)
[07:26:13] <kurahaupo> btw ! ((x)) and ((!x)) have the same exit status, but the former has the advantage that it doesn't blow up if you're in the habit of using set -e
[07:26:59] <pj> if you're using set -e you shouldn't be.
[07:27:10] <cliluw> pj: I always thought $foo was equivalent to foo in arithmetic context so I tended to keep the dollar sign, but I guess this is where it differs.
[07:27:38] <pj> cliluw: it's not, in several ways.
[07:30:13] <cliluw> pj: That's good to know. Thanks!
[07:30:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[07:32:38] <kurahaupo> cliluw: There are other cases where it changes operator precedence
[07:32:38] <kurahaupo> # a=1+2 ; echo withoutdollar=$(( a * 3 )) withdollar=$(( $a * 3 ))
[07:32:40] <shbot> kurahaupo: withoutdollar=9 withdollar=7
[07:33:18] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[07:33:43] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:35:47] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:37:22] <kurahaupo> # a=5 b=++n n=0 ; echo $((a+b)) $((a+b)) $((a+b)) a=$a b=$b n=$n ; n=0 ; echo $((a+$b)) $((a+$b)) $((a+$b)) a=$a b=$b n=$n ; 
[07:37:23] <shbot> kurahaupo: 6 7 8 a=5 b=++n n=3
[07:37:23] <shbot> kurahaupo: 5 6 7 a=8 b=++n n=0
[07:37:34] <pj> cliluw: basically put with the dollar sign bash interpolates the variable before the arithmetic expression, without it the variable becomes a part of the arithmetic expression, so when you have (( ! $undefined_var )) bash sees that as (( ! )) and complains because the "!" requires an operand which is missing.
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:22] <kurahaupo> And (obviously?) you use assignment operators like += or ++ if the dollar sign is used
[07:40:38] <kurahaupo> And (obviously?) you can't99,99 use assignment operators like += or ++ if the dollar sign is used
[07:42:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:43:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:35c8:cfc5:9c91:bef0)
[07:43:48] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:35c8:cfc5:9c91:bef0) (Changing host)
[07:43:48] *** Joins: skapata (~Skapata@user/skapata)
[07:44:03] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[07:50:05] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[07:50:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:50:49] *** Joins: sgn (~sgn@user/sgn)
[08:02:39] <pj> right
[08:08:51] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:11:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:13:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[08:30:44] *** Quits: tsp (~tsp@srv1.xen.prgmr.com) (Quit: ZNC - http://znc.in)
[08:30:54] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[08:34:19] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 252 seconds)
[08:35:25] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[08:36:02] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[08:37:32] *** TheArchitect is now known as GodMode
[08:37:32] *** GodMode is now known as TheArchitect
[08:37:44] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:37:47] *** TheArchitect is now known as GodMode
[08:37:47] *** GodMode is now known as TheArchitect
[08:37:49] *** TheArchitect is now known as h4x0r
[08:37:53] *** Joins: lalitmee__ (~lalitmee@180.94.32.185)
[08:39:32] *** Joins: vishal (~vishal@fedora/vishal)
[08:40:06] <cliluw> pj: TIL! Thank you.
[08:40:31] *** Quits: lalitmee_ (~lalitmee@180.94.32.166) (Ping timeout: 265 seconds)
[08:41:24] *** Joins: noarb (~noarb@user/noarb)
[08:43:48] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:54] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[08:44:33] *** Joins: vysn (~vysn@user/vysn)
[08:49:41] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[08:49:47] *** Joins: Weather7774 (~Weather77@124-170-121-245.dyn.iinet.net.au)
[08:53:35] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 260 seconds)
[08:53:40] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 240 seconds)
[08:54:05] *** Joins: MercilessDeth (~brad@136.49.61.2)
[08:55:01] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[08:55:57] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 245 seconds)
[08:56:40] *** Joins: Zauberfisch (~Zauberfis@62.240.156.18)
[08:57:03] *** Joins: sublim20 (~sublim20@user/sublim20)
[09:03:50] *** Joins: timj (~timj@user/timj)
[09:05:45] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 276 seconds)
[09:07:26] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[09:07:28] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[09:08:10] *** Joins: Everything (~Everythin@37.115.210.35)
[09:08:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:09:31] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 252 seconds)
[09:10:03] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:11:56] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[09:20:18] *** Joins: sublim20 (~sublim20@user/sublim20)
[09:22:30] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:27:32] <pystardust> I would like to understand the use of the redirection operator <>, what does it mean to open input and output to a file? What are some practicle uses of it? So stdout goes to file and stdin comes from file???
[09:28:30] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:20] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:31:22] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[09:33:41] <kurahaupo> pystardust: yes, but you wouldn't Normally use it that way. The main use case would be for connecting to a device rather than a file
[09:33:41] *** Joins: Guest36 (~textual@103.104.171.53)
[09:34:31] <pystardust> kurahaupo: could u give an example of such a command with a device
[09:36:01] <kurahaupo> ( cat >&3 & cat <&3 ) <> /dev/modem 
[09:36:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[09:36:42] <kurahaupo> The point is that just opening the device may cause it to do something, before you read or write it
[09:36:46] <pystardust> if i did something like this:: cat <> fifo ::, and then did something like :: echo hi > fifo ::, the output comes out of the :: cat <> fifo :: which was blocking, but wasn't the stdout of :: cat :: pointing into fifo again? (here i crreated fifo using mkfifo)
[09:37:02] <kurahaupo> So you don't want to open it twice, once for each direction
[09:37:37] <pystardust> What does ur example do on top?
[09:37:39] <kurahaupo> pystardust: You really don't want to have a bidirectional connection to a pipe or fifo, it won't do what you expect
[09:37:43] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:353b:afbb:2653:5a75)
[09:38:22] <pystardust> kurahaupo: this was suggested somewhere online, so that the fifo remains open even after some other command sends input once
[09:38:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[09:38:34] <kurahaupo> ( cat >&3 & cat <&3 ) 3<> /dev/modem  # missed a digit
[09:42:16] *** Joins: nbao (~nbao@187.20.16.119)
[09:43:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[09:43:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:49:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:50:47] <kurahaupo> pystardust: fifos are another example where opening it causes action elsewhere. In particular, opening the reader causes the writer to unblock
[09:54:48] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[09:55:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:55:29] *** h4x0r is now known as AllDucksMustDie
[10:00:29] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[10:01:45] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:05:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:06:01] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:06:17] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[10:06:34] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[10:07:00] *** Joins: AllDucksMustDie (~GodMode@user/h4x0r)
[10:08:00] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[10:08:01] *** AllDucksMustDie is now known as TheArchitect
[10:10:29] *** TheArchitect is now known as AllDucksMustDie
[10:14:16] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[10:17:18] *** Joins: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com)
[10:18:48] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:19:37] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[10:28:27] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[10:33:44] <pystardust> kurahaupo: okay, so the double redirection <>, is used for the action that it causes due to openening the device and it redirects comming out of the device into the command?
[10:35:12] <kurahaupo> The <> redirection operator causes a single file descriptor to be opened, in read+write mode, rather than read-only < or write-only >
[10:35:41] <kurahaupo> By default that's fd#0 ("stdin")
[10:36:44] <kurahaupo> The subsequent <& operator doesn't open any files, it just calls the dup2 system call 
[10:38:35] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[10:42:29] *** TheArchitect is now known as DuckFace
[10:45:15] <pystardust> so the <> open fd#0 for reading and writing? I can't really wrap my head around what it means to write to stdin
[10:46:10] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Quit: Leaving)
[10:54:00] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[10:55:37] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[10:55:42] *** Quits: qub411 (~user@220.253.95.124) (Quit: WeeChat 3.2)
[10:57:03] <gnoo> pystardust: try `cat` and write something. youre writing to cat's stdin. now if you do `echo somemsg | cat`, cat dosent ask you for anything because the output of echo is written into cat's fd0(aka stdin)
[10:57:53] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Quit: I'm going to give inphase the cock she behaves like she has, right up the fucking ass.)
[10:57:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:59:03] *** Quits: DuckFace (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:59:20] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[11:00:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[11:04:40] *** Joins: Atque (~Atque@user/atque)
[11:09:07] <pystardust> Yes, I understand that, but when I do something like this :: cat <> fifo ::, the contents that are coming out of the fifo go into the cat's stdin, but what does that <> signify with the output redirection (does it mean stdout is going into fifo ? But clearly thats not the case when I try it out)
[11:10:56] *** Joins: blink- (~x@cdn.awknode.com)
[11:13:40] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[11:13:48] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[11:13:52] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[11:14:07] *** Joins: vaio (~gary@user/ghost)
[11:15:40] *** Quits: blink- (~x@cdn.awknode.com) (Ping timeout: 265 seconds)
[11:15:59] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[11:16:28] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[11:16:30] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 260 seconds)
[11:18:34] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[11:20:25] *** Quits: af (~af@awalgarg.me) (Ping timeout: 252 seconds)
[11:22:04] *** Joins: af (~af@awalgarg.me)
[11:22:26] *** tobybl_ is now known as tobybl
[11:22:58] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[11:25:49] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[11:27:01] *** Quits: richardm75 (~richardm7@2600:8801:c507:2900:d411:52dd:aeaa:d25d) (Ping timeout: 252 seconds)
[11:27:55] *** Joins: TomyWork (~TomyLobo@p200300e80f06af00e8a8ce9348cb4bfe.dip0.t-ipconnect.de)
[11:29:42] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:40:45] <gnoo> it's slightly confusing in that while using <>, stdin is the one being used, stdout is unchanged. if you use `cat <> fifo 1>&0 ` and `echo asdf > fifo` from another terminal, you can see its effect in htop or top
[11:43:28] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[11:46:24] <pj> <> defaults to fd #0 so if you don't specify a fd # it will both read and write from stdin.
[11:47:07] <pj>               [n]<>word       causes  the file whose name is the expansion of word to be opened for both reading and writing on file descriptor n, or on file descriptor 0 if n is not specified.  If the file does not exist, it is       created.
[11:48:01] <pj> so no, it will not read from stdout, unless you specify 1 as the fd, in which case it won't write to stdin.
[11:50:24] <gnoo> yeah, thats what stdout is unchanged means. anyway, the above example is bad and you should instead use `cat <> fifo 1>fifo` to see what happens
[11:51:04] <pj> honestly it's rather confusing and I have yet to find an actual use case for <>.
[11:51:14] <gnoo> sorry, mistook you for py-stardust
[11:52:06] *** Parts: khoa (~khoa@user/khoa) ()
[11:52:56] <pj> I was trying to answer pystardust's question, irt "does it mean stdout is going into fifo", the answer is "no, because stdout is fd1 and <> defaults to fd0."
[11:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[11:55:06] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2.1)
[11:55:20] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:55:22] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:55:45] <pj> now, I honestly don't know what would happen if you did: cat <> fifo 1>&0
[11:57:57] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:58:18] * pj wonders if there's such a thing as a digital feedback loop and if that would create one.
[11:58:53] *** Quits: StathisA (~StathisA@80.107.129.192) (Ping timeout: 252 seconds)
[11:59:57] <pystardust> thankks gnoo , pj I understand it now
[12:00:40] <pystardust> one more question, why does this give an error :: cat 1<~/.bashrc :: i was just wondering what happens if I redirect stuff into stdout
[12:00:55] <pystardust> It says cat: write error: Bad file descriptro
[12:06:10] *** TheArchitect is now known as AllDucksMustDie
[12:06:26] <gnoo> (guess): cat 1<file opens file for reading. when it wants to write, it cant. but cat 1<>file opens it for both reading and writing. so it works here
[12:06:33] *** Joins: rendar (~rendar@user/rendar)
[12:09:35] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:12:53] *** Joins: frostwork (~frostwork@user/frostwork)
[12:13:33] <pystardust> gnoo: so a fd can only be associated to one (special)file? As in I can't have 1<file1 and 1>file2 together?
[12:14:20] <pystardust> if not then 1<file , should still keep 1's output to stdout
[12:15:37] <Soliton> that's not how it works, no.
[12:16:11] <Soliton> it's file descriptor not list-of-files descriptor.
[12:20:53] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[12:21:12] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:22:18] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[12:23:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:24:31] *** Joins: StathisA (~StathisA@80.107.133.52)
[12:24:36] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[12:26:43] *** Joins: vaio (~gary@user/ghost)
[12:27:12] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 245 seconds)
[12:30:31] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[12:32:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[12:33:12] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[12:34:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[12:35:20] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:36:42] *** Joins: lalitmee_ (~lalitmee@180.94.32.190)
[12:36:52] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 252 seconds)
[12:37:00] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[12:37:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:39:17] *** Quits: lalitmee__ (~lalitmee@180.94.32.185) (Ping timeout: 265 seconds)
[12:40:38] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[12:42:12] *** Joins: shad (~shad@user/shad)
[12:42:39] <kurahaupo> pystardust: It's important to understand that when we talk of file descriptors, there are two layers involved: there's an invisible "open file connection", which remembers the access permissions that were requested when the file was opened, and tracks a read-write cursor in the file. And then there are the numeric descriptors, which may share an open file connection. Moreover, open file connections are also routinely shared between numeric descriptors in 
[12:42:39] <kurahaupo> multiple processes.
[12:43:25] *** Joins: lalitmee (~lalitmee@180.94.32.16)
[12:43:26] *** Quits: lalitmee_ (~lalitmee@180.94.32.190) (Ping timeout: 252 seconds)
[12:43:53] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:46:11] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:49:18] <pystardust> kurahaupo: so if we talk in terms how how files are handled in other languages like c/python. Do you mean a fd is like a file pointer, and the redirection is like the mode ie "r" "w" "a" etc?
[12:49:46] <kurahaupo> that's fairly close, yes
[12:50:15] <pystardust> oh, thanks. It makes more sense now
[12:50:29] *** Gerula is now known as Guest1955
[12:50:29] *** Joins: Gerula_ (~Gerula@user/gerula)
[12:50:29] *** Quits: Guest1955 (~Gerula@user/gerula) (Killed (copper.libera.chat (Nickname regained by services)))
[12:50:29] *** Gerula_ is now known as Gerula
[12:50:33] <kurahaupo> c's FILE* doesn't have any equivalent of dup though
[12:51:03] <pystardust> what do you mean by dup?
[12:51:29] <kurahaupo> it's a system call: man 2 dup2
[12:52:26] <kurahaupo> Well, you can go: FILE * file2 = fdopen(dup(fileno(file1)),"r+")
[12:52:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:52:59] <pystardust> ill need to look into fd in c. I only know how to open files with their names using fopen etc
[12:53:52] <kurahaupo> start by reading man 2 open
[12:55:35] *** Joins: earnestly (~earnest@user/earnestly)
[12:56:24] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:56:35] <pystardust> okie
[12:57:34] <kurahaupo> The redirection operators <& and >& are synonyms, and map exactly onto a single dup2 syscall. 5>&3 → dup2(3,5)
[12:57:56] *** Joins: gtz_ (~gtz@185.12.215.241)
[12:58:52] <kurahaupo> You might find "man 2 intro" useful as well
[12:59:14] *** Joins: gtz__ (~gtz@185.12.215.241)
[12:59:34] *** Joins: fdan (~fdan@192.146.154.3)
[12:59:35] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[13:01:31] *** Quits: gtz (~gtz@185.12.215.241) (Ping timeout: 265 seconds)
[13:01:43] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[13:02:02] *** Joins: gtz (~gtz@185.12.215.241)
[13:03:15] *** Quits: gtz_ (~gtz@185.12.215.241) (Ping timeout: 260 seconds)
[13:03:56] *** Quits: gtz__ (~gtz@185.12.215.241) (Ping timeout: 265 seconds)
[13:04:19] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:06:12] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Remote host closed the connection)
[13:06:40] <TomyWork> mind blown
[13:07:03] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[13:07:31] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:08:15] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:08:55] *** Joins: lavaball (felix@31.204.155.215)
[13:11:09] *** Joins: sublim20 (~sublim20@user/sublim20)
[13:11:16] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:11:28] <TomyWork> # ls blah 2<&1 | sed "s/cannot/can't/"
[13:11:29] <shbot> TomyWork: /bin/ls: can't access 'blah': No such file or directory
[13:12:35] *** Joins: gtz_ (~gtz@185.12.215.241)
[13:13:15] <izabera> dup doesn't have a read/write flag
[13:16:28] *** Quits: gtz (~gtz@185.12.215.241) (Ping timeout: 252 seconds)
[13:16:52] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:23:45] *** Joins: theovod (~theovod@200116b84089eb006e4b75a06842b4aa.dip.versatel-1u1.de)
[13:24:06] *** Parts: theovod (~theovod@200116b84089eb006e4b75a06842b4aa.dip.versatel-1u1.de) ()
[13:26:28] *** Joins: thyriaen (~thyriaen@x4dbfb542.dyn.telefonica.de)
[13:28:01] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:28:07] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:29:36] *** Joins: groscon (~groscon@ns3180824.ip-37-187-100.eu)
[13:30:07] <TomyWork> yeah, but bash could, in theory, check if you're doing it properly before making the syscall
[13:30:17] <TomyWork> right?
[13:34:54] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[13:36:23] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:37:30] *** Joins: Bhavuk (~BTaneja@103.132.28.33)
[13:40:15] *** Joins: medard (~mithrin@stip-static-62.213-81-207.telecom.sk)
[13:40:16] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[13:40:19] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[13:40:21] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Remote host closed the connection)
[13:41:46] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[13:42:07] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 245 seconds)
[13:45:10] *** Joins: legola (~legola@46.235.100.27)
[13:48:44] *** Joins: Mo (~Mo@dynamic-077-001-076-159.77.1.pool.telefonica.de)
[13:49:37] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 245 seconds)
[13:49:59] *** Joins: DrSlony (~morgan@2.65.68.165.mobile.tre.se)
[13:50:20] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[13:51:08] <DrSlony> Hey, I need to split a string "foo,bar,cow,dow,moo" by IFS=, into something like an array, as I need to know how many fields there are and to do things with each field. How do I do that when I don't know how many fields there are?
[13:51:12] *** Joins: cebor (~cebor@user/cebor)
[13:52:01] <Soliton> IFS=, read -ra
[13:52:53] <Soliton> # IFS=, read -ra fields <<< foo,bar,baz; declare -p fields
[13:52:54] <shbot> Soliton: declare -a fields=([0]="foo" [1]="bar" [2]="baz")
[13:54:17] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:54:20] <DrSlony> thank you Soliton
[13:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[13:54:49] *** Joins: xx (~xx@user/xx)
[13:55:02] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:55:05] <DrSlony> is this the most efficient way to read just the first line from a file?
[13:55:11] <DrSlony> IFS=, read -a headers < <(head -n1 'foo.csv')
[13:55:46] <xx> DrSlony: you'll mangle backslashes without -r
[13:56:23] <izabera> you don't need the head -n1
[13:56:33] <izabera> just    read ... < foo.csv
[13:57:16] <izabera> !faq 1
[13:57:17] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[13:57:51] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:57:56] <xx> if ! command -v curl >/dev/null; then echo "curl not found in PATH"; fi
[13:58:00] <xx> am I doing it right?
[13:59:00] <izabera> it's alright
[13:59:00] <xx> can I do better?
[14:00:26] <izabera> i think what you're doing is fine, i would maybe just try to run curl and check if it fails, which also automatically handles any error curl might encounter, but that's more of a stylistic choice 
[14:00:34] <DrSlony> thank you xx izabera
[14:01:23] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[14:05:13] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[14:08:14] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[14:09:40] *** Quits: mestre (~mestre@191.177.175.57) (Quit: Lost terminal)
[14:10:00] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[14:11:25] *** Joins: thiras (~thiras@user/thiras)
[14:15:09] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[14:15:11] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Remote host closed the connection)
[14:15:31] *** Joins: gnoo_ (~gnoo@user/gnoo)
[14:15:50] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[14:16:11] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:16:44] *** Quits: legola (~legola@46.235.100.27) ()
[14:17:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:19:03] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[14:21:34] *** Quits: DrSlony (~morgan@2.65.68.165.mobile.tre.se) ()
[14:22:05] <furrymcgee> bash writes command not found to stderr
[14:22:21] *** Joins: legola (~legola@46.235.100.27)
[14:22:49] <xx> furrymcgee: when?
[14:22:53] <furrymcgee> # aa
[14:22:54] <shbot> furrymcgee: bash: aa: command not found
[14:23:23] <xx> furrymcgee: is that in reference to what I said earlier, or something else?
[14:23:37] *** Joins: testuser321 (~wandering@115.187.42.121)
[14:23:42] <furrymcgee> yes
[14:23:58] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[14:24:24] <xx> oh right, I'd have to be careful with 2>/dev/null there if I were to run the command directly. Hence testing for existence is probably better.
[14:24:25] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:25:49] <furrymcgee> # command -v command
[14:25:50] <shbot> furrymcgee: command
[14:27:05] <geirha> I just let type print error messages for any missing commands.  type curl jq yomomma >/dev/null || exit
[14:34:22] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[14:34:57] *** Joins: ponies (~ponies@203.111.95.26)
[14:37:56] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[14:38:40] <jetchisel> yomama! ^^
[14:40:14] *** Joins: sQVe (~sQVe@user/sqve)
[14:40:41] <medard> Hey. I don't know if this is the right place to ask about copy/paste behaviour in terminal
[14:41:40] <medard> Is it possible to somehow set that whenever I mark text in terminal and click right mouse button that it will be added to clipboard?
[14:42:56] <geirha> !nabq
[14:42:56] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. ##linux #openssh #ubuntu #zsh #systemd or PM alis with "list keyword" to search for channels).
[14:43:07] *** Quits: downtrip (~downtrip@188.166.151.198) (Quit: WeeChat 3.2)
[14:45:20] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 260 seconds)
[14:45:39] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[14:50:04] *** Quits: unixman_home (~unixman2@85-235-137-216.mtaonline.net) (Remote host closed the connection)
[14:50:23] *** Joins: unixman_home (~unixman2@85-235-137-216.mtaonline.net)
[14:50:43] *** Joins: downtrip (~downtrip@188.166.151.198)
[14:51:11] <xx> nabq unless you're asking about bracketed paste
[14:52:05] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[14:56:32] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:02:04] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 252 seconds)
[15:04:44] <Soliton> in X you have the selection buffer. no need to press a button.
[15:04:49] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[15:05:43] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:06:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[15:07:36] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[15:08:19] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[15:09:40] *** Quits: waxfire8 (~waxfire@65.119.2.240) (Ping timeout: 252 seconds)
[15:09:40] *** waxfire82 is now known as waxfire8
[15:12:20] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[15:12:34] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:14:25] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[15:14:41] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[15:15:05] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[15:15:35] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:16:36] *** Joins: zaz\ (~zaz@poneybl.eu)
[15:16:40] *** Joins: seninha (~seninha@user/seninha)
[15:19:36] *** Joins: goldfish (~goldfish@user/goldfish)
[15:25:28] *** Joins: Bhavuk_ (~BTaneja@103.132.28.33)
[15:25:52] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 245 seconds)
[15:26:10] *** Quits: Bhavuk_ (~BTaneja@103.132.28.33) (Client Quit)
[15:26:58] *** Joins: Bhavuk_ (~BTaneja@103.132.28.33)
[15:27:28] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th)
[15:27:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:28:28] *** Quits: Bhavuk (~BTaneja@103.132.28.33) (Ping timeout: 252 seconds)
[15:35:06] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[15:37:38] *** Quits: lalitmee (~lalitmee@180.94.32.16) (Ping timeout: 265 seconds)
[15:38:40] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 240 seconds)
[15:40:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:41:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[15:41:18] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:41:55] *** Joins: askall (~askall@197.210.79.195)
[15:42:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[15:42:13] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[15:46:41] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:46:49] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[15:47:09] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:48:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:49:04] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:50:11] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[15:50:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[15:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[15:57:29] *** Joins: Bhavuk (~BTaneja@103.132.28.33)
[16:00:20] *** Quits: Bhavuk_ (~BTaneja@103.132.28.33) (Ping timeout: 252 seconds)
[16:01:01] *** Joins: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2)
[16:01:31] *** Joins: motherr (~motherr@user/motherr)
[16:02:17] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[16:03:36] *** TheArchitect is now known as AllDucksMustDie
[16:05:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:05:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[16:07:36] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[16:10:07] *** Quits: mrtnt (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0) (Quit: WeeChat 2.3)
[16:11:22] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[16:12:48] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[16:13:16] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:13:38] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[16:13:42] <p-i-_> Can I split the first CLI arg from the rest?
[16:14:08] <geirha> var=$1; shift
[16:14:09] <p-i-_> as in `first, remainder = cli_args`
[16:14:17] <p-i-_> Thanks!
[16:14:20] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:14:25] <geirha> or "${@:2}" to get "$@" starting from "$2"
[16:15:03] <geirha> former is posix, latter is bash
[16:16:31] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:23:18] <LuksNuke> !join
[16:23:18] <greybot> You can "join" an array (write it with a single character of your choice between elements) using: IFS='|'; echo "${array[*]}"; unset IFS
[16:25:45] <LuksNuke> why the semicolon before echo?
[16:25:58] <LuksNuke> because i'm always using -- IFS= read -r line etc.
[16:26:18] <Soliton> otherwise IFS would be set in echo's environment where it does nothing.
[16:26:30] <LuksNuke> ok
[16:27:15] <Soliton> the point of setting IFS is to determine how "${array[*]}" expands.
[16:27:21] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[16:27:37] *** Joins: vysn (~vysn@user/vysn)
[16:28:11] <LuksNuke> ok. what about this:
[16:28:14] <LuksNuke> # IFS=x; echo $IFS
[16:28:16] <shbot> LuksNuke: no output
[16:28:22] <LuksNuke> expected x
[16:28:24] <Soliton> !wordsplitting
[16:28:25] <greybot> echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo" -- http://mywiki.wooledge.org/WordSplitting
[16:29:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:30:35] <LuksNuke> ok i'm aware of quoting everything but i don't understand why it's not simply expanding to "x"
[16:30:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:30:39] <LuksNuke> # x=10; echo $x;
[16:30:40] <shbot> LuksNuke: 10
[16:30:46] <LuksNuke> # x=x; echo $x;
[16:30:48] <shbot> LuksNuke: x
[16:31:25] <Soliton> "The result of the expansion is broken into separate words based on the characters of the IFS variable."
[16:31:31] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[16:31:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[16:31:44] <Soliton> unquoted $IFS will never expand to anything but a bunch of empty arguments.
[16:31:54] <LuksNuke> ok
[16:33:33] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:33:42] <LuksNuke> is there a more elegant way instead of -- OLD_IFS="${IFS}"; IFS=x; ...; IFS="${OLD_IFS}" ?
[16:34:15] <Soliton> IFS='|'; echo "${array[*]}"; unset IFS
[16:34:43] <Soliton> in a function you can also make IFS local.
[16:34:54] <LuksNuke> ok
[16:35:13] <LuksNuke> but if you unset IFS then [[ -v IFS ]] becomes false
[16:35:27] <Soliton> and how is that relevant?
[16:36:17] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 245 seconds)
[16:36:23] <LuksNuke> it may do the same but you're not putting IFS in it's original state again
[16:36:42] <Soliton> "If IFS is not set, then it will be performed as if IFS contained a space, a tab, and a newline."
[16:36:52] <LuksNuke> ok
[16:37:01] <LuksNuke> thanks so far
[16:37:03] <Soliton> if this is in a script where you set IFS to something else then you as the author should know that.
[16:37:18] <Swahili> Q: Moved some code to a function that verifies if an env variable exists and throws otherwise with a message. Iterate over a list of variable names and calls the function. Do I have to check the exit code to exit the script on the iterator? https://paste.sh/YOrUzb57#d37zgUt7U1_2QcsncYZXw483
[16:37:53] <Soliton> !check
[16:37:54] <checkbot> Soliton: Unable to read that :/
[16:38:08] <Soliton> that function does not check any env variable.
[16:38:17] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:38:58] <Soliton> anyway if you want to exit the script calling exit would a good choice.
[16:39:06] <Swahili> Soliton: oh yeh, so should be for name in $VAR1 $VAR2; do, right?
[16:39:20] <Swahili> Soliton: the exit in the fn should be enough?
[16:39:35] <Soliton> yes.
[16:40:07] <Swahili> Soliton: thanks :)
[16:40:15] <Soliton> leaving out the quotes is bad and you're checking for empty value not for unset.
[16:40:18] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[16:40:44] <Soliton> if you must do this in a function you probably want indirection.
[16:41:10] *** Joins: shad (~shad@user/shad)
[16:41:11] <Soliton> because as it is your function has not clue what the variable name is.
[16:42:54] <Swahili> Soliton: ok, I'll research unset
[16:43:35] <Soliton> # f() { for var do [[ ${!var+set} ]] || echo "$var is unset"; done; }; f PATH PATH2
[16:43:36] <shbot> Soliton: PATH2 is unset
[16:43:59] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[16:44:30] <Soliton>  if you really want to check for empty then you can use :+
[16:44:33] <Swahili> Soliton: nice :) 
[16:44:36] <Soliton> !:+
[16:44:36] <greybot> ${parameter:+word} Use Alternate Value. If parameter is null or unset, nothing is substituted, otherwise the expansion of word is substituted.
[16:44:50] <Swahili> So, ok now I understand your point above, I noticed that this doesn't work when unset: for name in $VAR1 $VAR2; do
[16:44:59] <Soliton> !quotes
[16:45:00] <greybot> https://mywiki.wooledge.org/Quotes
[16:45:13] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:45:19] <Swahili> Oh sorry
[16:45:21] <Swahili> Thanks!
[16:45:39] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[16:46:27] <Soliton> the ${!var} thing does the indirection so that you can hand in variable NAMES not their content.
[16:46:55] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[16:52:27] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[16:52:55] *** Quits: askall (~askall@197.210.79.195) (Read error: Connection reset by peer)
[16:53:01] <Swahili> Soliton: what is happening when you did `for var do`, is var a special keyword in bash?
[16:53:30] <Soliton> it's the same as: for var in "$@"; do
[16:53:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:54:00] <Swahili> Ok, nice, thank you! I'll use this last syntax, as I don't often have to write bash scripts
[16:54:44] <Soliton> good choice.
[16:55:26] *** Quits: xx (~xx@user/xx) (Quit: xx)
[16:57:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[16:57:08] <LuksNuke> !split
[16:57:09] <greybot> split(1): POSIX command to break a file into multiple pieces by lines or bytes; or, to split a string into an array of substrings: IFS=: read -ra array <<< "foo:bar:baz" (but see !pf47)
[16:57:42] *** Joins: askall (~askall@197.210.53.180)
[16:57:47] *** Joins: tangyQED (tangy@user/tangy)
[16:58:19] <p-i-_> I'm trying to run commands on a remote using `ssh -tt user@ip << 'EOF'; echo foo > bar; EOF (but with 3 separate lines). But the script hangs and no bar file exists on the remote.
[16:58:25] <p-i-_> What am I missing?
[16:58:48] *** TheArchitect is now known as AllDucksMustDie
[17:00:11] <p-i-_> (those 3 commands are executed from within a .sh on my local machine)
[17:00:23] <Soliton> remove -tt
[17:00:50] *** Quits: tangy (tangy@user/tangy) (Ping timeout: 252 seconds)
[17:01:09] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Remote host closed the connection)
[17:01:11] <p-i-_> Then I get the same, only now I get a warning: "Pseudo-terminal will not be allocated because stdin is not a terminal."
[17:01:28] <p-i-_> local is macOS remote is ubuntu, if that matters
[17:01:34] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[17:02:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[17:02:58] <p-i-_> oh I forgot to -i my.pem
[17:06:05] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:06:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:12:01] *** Joins: tangy (tangy@user/tangy)
[17:12:20] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[17:12:22] *** Quits: askall (~askall@197.210.53.180) (Ping timeout: 265 seconds)
[17:15:02] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[17:15:08] *** Quits: tangyQED (tangy@user/tangy) (Ping timeout: 252 seconds)
[17:15:45] *** Joins: sublim20 (~sublim20@user/sublim20)
[17:17:18] <geirha> it is expanding to x
[17:17:35] <geirha> err, was scrolled way up. Nevermind me
[17:18:56] <geirha> ssh user@ip bash << 'EOF'   should get rid of the warning
[17:20:58] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[17:21:18] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[17:22:22] *** Joins: tangyQED (tangy@user/tangy)
[17:22:32] *** Quits: tangy (tangy@user/tangy) (Ping timeout: 245 seconds)
[17:27:07] <LuksNuke> i wanted to do ${param:-$'\n'} but realized if param is $'\0' it will still take the newline
[17:27:20] <LuksNuke> now i could do -- [[ ! -v param ]] && param=$'\n'
[17:27:27] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:27:31] <Soliton> you cannot have NUL in a parameter.
[17:28:11] <Soliton> if you don't want the default for empty then leave out the colon.
[17:29:05] <Soliton> !pe:
[17:29:05] <greybot> When using the default value parameter expansion (${var:-default}), the test checks if var is not set (unset -v var) or empty (var=''). If you omit the colon (${var-default}) it only checks if the var is not set. Same applies for :=, :?, and :+
[17:29:38] <LuksNuke> ok
[17:33:13] *** Joins: Kvothe (~weechat@user/elodin)
[17:34:07] *** Quits: tangyQED (tangy@user/tangy) (Ping timeout: 265 seconds)
[17:35:08] <LuksNuke> Soliton, because my idea was to allow passing $'\0' as output delimiter to my split() function; preferably without a switch: https://gist.github.com/sspiri/1ec8f9f35a83b47f68ae8d7d11cd9afb
[17:35:54] <Soliton> $'\0' is not useful. it's basically the empty string.
[17:37:29] <Soliton> if you want to use read to split newline delimited input you need to use -d ''.
[17:38:14] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[17:38:15] <Soliton> i assume the loop in the function is just for testing?
[17:38:26] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[17:38:30] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:34] *** Joins: tangy (tangy@user/tangy)
[17:38:38] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:39:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[17:40:04] <Soliton> though results shouldn't be local or the function is fairly useless.
[17:41:32] *** Quits: Weather7774 (~Weather77@124-170-121-245.dyn.iinet.net.au) (Read error: Connection reset by peer)
[17:41:55] <Soliton> oh, it has a misleading name. it's not only to split i guess.
[17:42:29] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:43:31] <Soliton> if you just want to replace stuff there are better ways.
[17:43:40] <LuksNuke> i'm just playing around a bit. i thought if you want to split a string and pass it to e.g. xargs it should be null-terminated
[17:43:45] <Soliton> ${var//foo/bar}
[17:44:32] <Soliton> you should have NUL delimited data to begin with.
[17:44:50] <Soliton> not much point in replacing newline with NUL later on.
[17:45:32] <Soliton> maybe to get sane xargs -0 behaviour but that is specific to xargs.
[17:45:32] *** Joins: cafkafk (~cafkafk@user/cafkafk)
[17:46:49] <LuksNuke> yea you're right if i'm trying to just change the delimiter i could simply use ${var//foo/bar}
[17:46:52] <Soliton> if all you want is replacing newline with NUL for xargs you can just do: tr \\n \\0
[17:46:57] *** Joins: haroon (~haroon@62.214.19.26)
[17:47:40] <LuksNuke> actually (i guess) i'm trying to just convert the delimiter
[17:48:00] <p-i-_> https://bpa.st/JB7A <-- how can I get the contents of $local_var thru to the remote here?
[17:48:12] <Soliton> if the data is in a variable use PE. if in a stream use tr.
[17:48:30] <Soliton> !ssh
[17:48:31] <greybot> Secure SHell (#openssh, http://mywiki.wooledge.org/CategorySsh). To run rm "$localVar" remotely, use: printf 'rm %q\n' "$localVar" | ssh user@host bash
[17:48:57] <Soliton> you can also use @Q in newer bash.
[17:49:08] <Soliton> either way you should make sure you're running bash.
[17:49:58] <p-i-_> jeez Apple dragging their heels again.
[17:50:07] <p-i-_> macOS bash is 3.2.x still
[17:50:43] <Soliton> that will never change. they don't like the license.
[17:50:49] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[17:50:54] <cafkafk> Dragging their heels != simply not giving a fuck
[17:50:59] <cafkafk> Wait did license change?
[17:51:01] <Soliton> afaik they default to zsh now though.
[17:51:19] <p-i-_> haha yes maybe I was too generous cafkafk
[17:51:50] <p-i-_> maybe that's why they migrated
[17:52:33] <cafkafk> I mean, I might be to cynical, but...
[17:53:18] <Soliton> they don't like GPLv3 so they cannot update bash.
[17:53:32] <p-i-_> I'm sure the people making the corporate decisions are so far from the engineers in that company now that they are more worried about the form-factor on the next iphone :/
[17:53:41] *** Quits: haroon (~haroon@62.214.19.26) (Quit: Client closed)
[17:54:50] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:55:11] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[17:57:27] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[17:57:54] <p-i-_> https://bpa.st/JB7A (same paste) If I use `ssh -tt` I get to see the console on the remote as commands execute which is useful. But then the script never reaches EOF. And if I `ssh -t` it completes, but doesn't show the commands executing on the remote terminal. Is there any way to have my cake and eat it here?
[17:58:50] <Soliton> what do you expect to see?
[17:58:58] <Soliton> why are you adding -t at all?
[17:59:43] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[18:00:42] *** Quits: rkta (~kt@62.113.246.111) (Ping timeout: 265 seconds)
[18:01:32] <Soliton> also weird to call exit 0 there.
[18:02:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[18:03:03] *** Joins: zoe (~zoe@fsf/member/zoe)
[18:03:10] <p-i-_> https://bpa.st/GSAQ <-- that's the 3 outputs I get from using `ssh` `ssh -t` and `ssh -tt`
[18:03:33] <p-i-_> I'd like to get the third one, if I can. So I can see the commands executing in the remote terminal.
[18:04:01] <p-i-_> The exit 0 is because I'm executing that function on multiple remotes, and I want to terminate after the first until I've got it debugged.
[18:04:57] *** AllDucksMustDie is now known as Chevron
[18:05:29] *** Chevron is now known as TheArchitect
[18:07:43] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:07:49] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:07:54] <Soliton> setup() { local var=foo; ssh -i "$pem" "$login" bash <<EOF   printf '%s %s\n' ${var@Q} "\$(hostname)" > _test   EOF   }
[18:08:13] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[18:10:48] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[18:13:37] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[18:14:32] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[18:16:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:16:47] *** Joins: rkta (~kt@62.113.246.111)
[18:17:36] *** Quits: gnoo_ (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[18:18:03] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[18:18:32] *** Quits: winstonsmith (~winstonsm@77.247.181.214) (Remote host closed the connection)
[18:18:48] *** Joins: gnoo_ (~gnoo@user/gnoo)
[18:18:57] *** Joins: winstonsmith (~winstonsm@77.247.181.216)
[18:22:38] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[18:22:52] *** Joins: DrSlony (~morgan@2.65.68.165.mobile.tre.se)
[18:24:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 245 seconds)
[18:25:15] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 260 seconds)
[18:25:42] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:26:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:26:44] *** Joins: kj (~kj@kj.aerisnetwork.net)
[18:28:54] <p-i-_> Thanks Soliton!
[18:29:55] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:30:29] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[18:32:09] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[18:32:17] *** Joins: keypusher (keypusher@user/keypusher)
[18:33:53] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:34:55] *** Quits: thyriaen (~thyriaen@x4dbfb542.dyn.telefonica.de) (Quit: Leaving)
[18:37:16] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:37:19] <DrSlony> Hey, how can I print a comma-separated list of numbers 0..${#foo[@]} so that the last number does not have a comma following it? This is part of a longer string, the full string is e.g. 'rs.AddNew Array(0, 1, 2, 3, 4);'
[18:37:32] <DrSlony> This works except for the trailing comma: headers=(foo bar baz cow meow); for ((i=0; i<${#headers[@]}; i+=1)); do printf '%s, ' $i; done
[18:39:17] *** Quits: rkta (~kt@62.113.246.111) (Ping timeout: 252 seconds)
[18:40:03] <Soliton> !join
[18:40:04] <greybot> You can "join" an array (write it with a single character of your choice between elements) using: IFS='|'; echo "${array[*]}"; unset IFS
[18:40:27] *** Joins: BenA (~Ben@v6.chiark.greenend.org.uk)
[18:40:49] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[18:40:50] <geirha> you could pass it \0 and have printf convert it to a NUL byte with %b
[18:41:15] <geirha> damnit, again. I must be hitting something by accident that scrolls me up
[18:41:15] <Soliton> # headers=(foo bar baz cow meow); IFS=,; echo "${!headers[*]}"
[18:41:17] <shbot> Soliton: 0,1,2,3,4
[18:41:59] *** Quits: Voxel (~Voxel@173-46-68-178.baltnet.ru) (Quit: Client closed)
[18:42:41] <DrSlony> amazing, thank you
[18:42:47] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[18:45:03] <Soliton> # headers=(foo bar baz cow meow); printf -v out '%s, ' "${!headers[@]}"; echo "${out%, }"
[18:45:05] <shbot> Soliton: 0, 1, 2, 3, 4
[18:45:40] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 265 seconds)
[18:45:49] *** Quits: cafkafk (~cafkafk@user/cafkafk) (Read error: Connection reset by peer)
[18:46:06] *** Joins: rkta (~kt@62.113.246.111)
[18:48:22] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[18:51:10] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[18:51:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:53:32] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[18:55:43] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[18:55:47] *** Joins: numsima (~numsima@101.175.64.73)
[18:56:21] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[18:58:33] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:00:53] <p-i-_> https://bpa.st/2T6A This seems to work pretty well for executing a multiline chunk of commands on the remote, while allowing both local and variable $ expansions. 
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:07:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:09:15] <DrSlony> How can I skip the first line of a file in a "while read -r line; do ... ; done < foo.csv" loop?
[19:09:28] *** Joins: kill (~killown@user/killown)
[19:09:48] <phy1729> { read -r; while IFS= read -r line; do ...; done; } < foo.csv
[19:09:49] <yitz> { read ; while read -r ...; done; } < file
[19:15:04] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[19:16:34] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[19:18:20] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[19:21:33] *** Joins: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th)
[19:22:42] *** Joins: mihael (~mihael@2001:4454:297:f800:6df9:e802:2de7:ab65)
[19:24:58] *** Quits: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2) (Ping timeout: 252 seconds)
[19:28:01] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[19:28:27] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[19:30:15] <DrSlony> thank you phy1729
[19:30:20] *** Quits: esselfe (~steph@user/esselfe) (Read error: Connection reset by peer)
[19:30:26] <DrSlony> and yitz
[19:31:22] *** Joins: esselfe (~steph@user/esselfe)
[19:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:26] *** Joins: killown (~killown@user/killown)
[19:33:37] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:34:48] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:35:15] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[19:35:28] *** Quits: DrSlony (~morgan@2.65.68.165.mobile.tre.se) ()
[19:36:25] *** Quits: kill (~killown@user/killown) (Ping timeout: 265 seconds)
[19:42:13] *** Quits: anton (anton@tloks.com) (Quit: anton)
[19:46:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[19:48:48] <Soliton> p-i-: looks terrible. you seem adamant to let wordsplitting and pathname expansion mess with your data and add shell injection on top.
[19:52:59] *** Quits: testuser321 (~wandering@115.187.42.121) (Ping timeout: 252 seconds)
[19:53:03] *** Joins: guest856 (~guest@181.91.156.94)
[19:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[19:55:16] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:57:38] <p-i-> I'm getting unexpected behaviour here: https://bpa.st/V73Q  I can launch an interactive ssh shell from within my .sh.  But if I do it from within a read block, it now fails.  Can anyone suggest why this is happening?
[19:58:32] <izabera> !ffmpeg > p-i- 
[19:58:32] <greybot> p-i-: http://mywiki.wooledge.org/BashFAQ/089 -- I'm using a loop which runs once per line of input but it only seems to run once; everything after the first line is ignored?
[19:59:23] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:59:43] <Soliton> now args are getting mangled, too. i guess this is not meant to do anything reasonable.
[20:01:12] *** Joins: vysn (~vysn@user/vysn)
[20:01:14] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[20:01:26] <Soliton> not a single hint from here was taken. why are you even here?
[20:01:45] *** Joins: thiras (~thiras@user/thiras)
[20:02:07] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 245 seconds)
[20:02:31] *** Joins: sudomann (~sudomann@131.118.76.71)
[20:03:36] <sudomann> in our CI system I wanted to grep something and use $? based on a 0 or 1 returned. My CI system kills the task in the case where 1 is returned. Can I consume this return code into a variable?
[20:03:56] <Soliton> !-e
[20:03:57] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[20:03:57] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[20:04:26] <sudomann> Can that be set for just the single command somehow?
[20:04:27] <Soliton> you can disable set -e or do funny workarounds like: cmd && :
[20:04:49] <Soliton> set +e disables set -e.
[20:05:04] *** Joins: kj (~kj@beta.aerisnetwork.net)
[20:05:25] <Soliton> there is no reason to use $? just for 0/1 anyway though.
[20:05:35] <Soliton> just write a normal if or whatever.
[20:05:36] <sudomann> Because I type the commands into an array and then the ci system takes each element and compiles into a script file which is executed on the agent. I'm not sure what other manipulations it does, so I'm not sure I can rely on setting -e at some point
[20:05:57] <sudomann> Oh....wow that didnt cross my mind
[20:06:15] <Soliton> set -e is in effect. the point would be to disable it.
[20:06:44] <sudomann> oh with +e :D
[20:06:52] *** Quits: StathisA (~StathisA@80.107.133.52) (Ping timeout: 265 seconds)
[20:07:15] <sudomann> always thought the symbols used were kind of silly. You would think -e to remove, +e to add
[20:08:24] <Soliton> yeah, but then options generally start with a dash and not a plus.
[20:09:35] *** Joins: cousteau (~cousteau@user/cousteau)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:09] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:13:11] <sudomann> odd... `if [ $(git ls-remote --quiet --heads | grep "$TODAY_RELEASE_BRANCH") -eq 0 ]; ....` returns `zsh: condition expected: c656e93e17d05dda3e64e1c85dd50967a2c00d7d`
[20:13:11] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[20:13:26] <Soliton> !zsh
[20:13:26] <greybot> zsh is NOT an enhanced version of bash. It's a different shell, with different features and there's a different channel for your questions: #zsh For zsh-like menu completion, bind '\C-i':menu-complete # there is nothing similar to menu selection
[20:13:55] <sudomann> and bash says `bash: !: event not found`
[20:13:56] <phy1729> that and also
[20:13:59] <phy1729> !ifgrep
[20:13:59] <greybot> if grep -q word "$file"; then blah blah; fi # DO NOT use [[ or [ or ` or $() or any other crap. "if" expects a command. "grep" is a command. "[" is too. You don't need both. Likewise, if foo | grep -q bar; then ...
[20:14:28] <Soliton> there is no ! anywhere in what you've shown.
[20:14:43] <p-i-> Soliton: Thanks. I see the problem now.
[20:15:02] <Soliton> what crazy CI is that that it enables history expansion anyway??
[20:15:37] <sudomann> dangit this thing is a moving target - it was due to my echo statement which was unquoted if [ $(git ls-remote --quiet --heads | grep "$TODAY_RELEASE_BRANCH") -eq 0 ]; then echo yes!; fi
[20:16:06] <Soliton> if git ls-remote --quiet --heads | grep -F "$TODAY_RELEASE_BRANCH"; then ...
[20:16:26] <cousteau> Also, quote the $(...) 
[20:16:29] <Soliton> probably should ask #git for a better way.
[20:17:18] <sudomann> All I'm checking for is whether a certain branch exists
[20:17:32] <sudomann> And they are extra quiet over there :)
[20:17:42] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[20:17:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 252 seconds)
[20:17:55] <cousteau> (and, as the bot suggested, using grep like that probably requires adding -q to what Soliton pasted) 
[20:18:06] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[20:18:27] <phy1729> git ls-remote has --exit-code which seems handy here
[20:18:35] <cousteau> Extra quiet my ass; I just gave a seminar on stderr redirection there 
[20:19:10] <cousteau> But yeah, the issue is that you went to #git and asked how to use grep, rather than asking what you wanted to achieve 
[20:20:06] *** Joins: richardm75 (~richardm7@2600:8801:c507:2900:5871:1a9a:f329:6eb)
[20:20:56] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[20:22:10] <cousteau> !xy
[20:22:10] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[20:22:24] <ychaouche> yo #bash, what's bash's programming style vis à vis global variables ? can my functions simply change global variables inside their code or should they take arguments and return values as "usual " ?
[20:22:25] <sudomann> my apologies, i had not checked back there since asking
[20:22:33] <Soliton> perhaps: git ls-remote --quiet --exit-code origin "$TODAY_RELEASE_BRANCH"
[20:23:23] <cousteau> sudomann: it doesn't matter because what I answered wasn't useful to you anyway :/
[20:23:30] <ychaouche> or would my functions only read global variables but not change them ?
[20:24:06] <phy1729> ychaouche: I like only using parameters (although using env variables is ok I guess) and return via REPLY to avoid a fork
[20:24:55] *** Joins: testuser321 (~wandering@115.187.42.121)
[20:25:27] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:49] <cousteau> Isn't it a better idea to use lowercase variable names for "local" (program-scope) variables, and uppercase for "global" (exported) ones? 
[20:26:06] <cousteau> Or would $REPLY kinda count as global? 
[20:27:29] *** Joins: blackbart (~sv@pool-173-63-184-70.nwrknj.fios.verizon.net)
[20:28:04] <phy1729> in general yes, but bash uses REPLY for read, so it's pseudo-conventional
[20:29:40] *** Quits: mihael (~mihael@2001:4454:297:f800:6df9:e802:2de7:ab65) (Quit: Client closed)
[20:29:52] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[20:30:31] <cousteau> Oh 
[20:32:49] *** Quits: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[20:35:02] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[20:37:07] *** Quits: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[20:37:07] *** Joins: stevenm__ (~stevenm@user/stevenm)
[20:38:18] <Soliton> select also uses REPLY.
[20:39:27] *** Joins: Betal (~Betal@user/betal)
[20:39:46] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[20:40:34] *** Joins: zro (~zro@user/zro)
[20:41:10] *** Quits: cousteau (~cousteau@user/cousteau) (Ping timeout: 260 seconds)
[20:41:18] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[20:42:33] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[20:43:42] *** Joins: cousteau (~cousteau@user/cousteau)
[20:44:10] <cousteau> Why is my router so mean?  :'(
[20:45:20] <yitz> Turn it off and back on
[20:46:17] <Soliton> to show it who's boss?
[20:46:55] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[20:48:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[20:49:21] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[20:53:01] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:56:38] *** Quits: sudomann (~sudomann@131.118.76.71) (Ping timeout: 265 seconds)
[20:57:11] *** Joins: Krail (~Krail@user/alexdelarge)
[20:57:20] *** Quits: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[20:58:39] *** Joins: Guest (~hentai@2a01:e0a:a5c:a070:b5d6:39db:9ee6:b6fa)
[20:58:39] *** Quits: Guest (~hentai@2a01:e0a:a5c:a070:b5d6:39db:9ee6:b6fa) (Changing host)
[20:58:39] *** Joins: Guest (~hentai@user/hentai)
[21:02:46] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 252 seconds)
[21:03:24] *** Joins: zebrag (~chris@user/zebrag)
[21:03:24] *** Joins: sublim20 (~sublim20@user/sublim20)
[21:05:45] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:06:04] <ychaouche> so use global variables at will ?
[21:06:14] <ychaouche> it simpilfies so much
[21:08:23] *** Joins: p-i-_ (~Ohmu@223.206.69.159)
[21:08:49] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 252 seconds)
[21:09:10] <phy1729> I'd generally avoid them
[21:09:26] <phy1729> but it may also mean that you've
[21:09:28] <phy1729> !graduated
[21:09:28] <greybot> Congratulations! You've graduated to needing to use a real language!
[21:09:52] <ychaouche> :p
[21:10:02] *** Joins: fdan (~fdan@192.146.154.3)
[21:10:16] *** Parts: ychaouche (~ychaouche@user/ychaouche) (Konversation terminated!)
[21:11:01] *** Joins: meator (~meator@user/meator)
[21:14:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:14:46] *** Joins: greycat (~greg@209.142.155.49)
[21:15:10] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:15:42] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[21:19:48] *** Joins: magla (~gelignite@55d4c46b.access.ecotel.net)
[21:20:08] *** Joins: StathisA (~StathisA@178-147-85-183.haap.nym.cosmote.net)
[21:20:29] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[21:21:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:26:07] *** Quits: Mo (~Mo@dynamic-077-001-076-159.77.1.pool.telefonica.de) (Ping timeout: 265 seconds)
[21:26:40] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[21:27:58] *** Quits: BenA (~Ben@v6.chiark.greenend.org.uk) (Quit: joined channel #quit, type /quit to join him)
[21:28:30] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:11] *** Joins: numsima (~numsima@101.175.64.73)
[21:30:20] *** LSD is now known as acidsys
[21:30:41] *** Joins: gabriele (~gabriele@user/gabriele)
[21:31:54] *** Joins: besnn (~besnn@user/besnn)
[21:33:07] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[21:36:51] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[21:37:10] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[21:37:54] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:38:25] *** Joins: killall (~killown@user/killown)
[21:39:47] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[21:40:16] *** Joins: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de)
[21:41:06] *** Quits: killown (~killown@user/killown) (Ping timeout: 265 seconds)
[21:43:54] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:45:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 245 seconds)
[21:45:57] *** Quits: Dotz0cat (~Dotz0cat@h119.237.31.71.dynamic.ip.windstream.net) (Ping timeout: 245 seconds)
[21:46:16] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[21:47:32] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:47:51] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[21:47:57] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[21:49:25] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[21:51:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:51:54] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:53:38] *** Joins: ninjabuf- (~ninjabuff@user/ninjabuffet)
[21:53:40] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 265 seconds)
[21:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:55:21] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:cc76:2832:9e6e:9023)
[21:55:21] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:cc76:2832:9e6e:9023) (Changing host)
[21:55:21] *** Joins: skapata (~Skapata@user/skapata)
[21:55:25] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:56:02] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:57:52] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[21:58:01] *** Quits: cousteau (~cousteau@user/cousteau) (Ping timeout: 265 seconds)
[21:58:02] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[21:59:26] *** Joins: reset (~reset@user/reset)
[21:59:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[22:00:26] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[22:00:44] *** Quits: Bhavuk (~BTaneja@103.132.28.33) (Quit: Leaving)
[22:02:22] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[22:02:23] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 265 seconds)
[22:06:06] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[22:11:02] *** Quits: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[22:13:35] *** Quits: TomyWork (~TomyLobo@p200300e80f06af00e8a8ce9348cb4bfe.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:14:47] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:14:57] *** Quits: guest856 (~guest@181.91.156.94) (Remote host closed the connection)
[22:24:36] *** Quits: gnoo_ (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[22:25:54] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 276 seconds)
[22:26:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[22:28:29] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:28:36] *** Joins: lalitmee__ (~lalitmee@180.94.33.33)
[22:28:47] *** Joins: sudomann (~sudomann@73.183.118.9)
[22:29:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[22:31:25] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Ping timeout: 260 seconds)
[22:32:28] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[22:41:33] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[22:42:00] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 265 seconds)
[22:42:05] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[22:42:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[22:42:46] *** Joins: legola (~legola@46.235.100.27)
[22:42:56] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:42:59] *** Quits: legola (~legola@46.235.100.27) (Read error: Connection reset by peer)
[22:45:08] *** Quits: lalitmee__ (~lalitmee@180.94.33.33) (Ping timeout: 252 seconds)
[22:47:00] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[22:47:31] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:47:48] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 265 seconds)
[22:48:28] *** Quits: killall (~killown@user/killown) (Ping timeout: 252 seconds)
[22:49:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:50:52] *** Joins: miw (~miw@user/miw)
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:52:23] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[22:52:44] *** Joins: vysn (~vysn@user/vysn)
[22:53:09] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:53:40] *** Joins: nvmd (~nvmd@user/nvmd)
[22:55:03] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[22:55:50] *** Joins: jkwnki (~jkwnki@p2e5797dc.dip0.t-ipconnect.de)
[22:56:19] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[23:01:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 252 seconds)
[23:01:27] *** Joins: austin987 (~null@100.42.98.196)
[23:03:54] *** Quits: jkwnki (~jkwnki@p2e5797dc.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[23:04:06] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:05:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[23:06:17] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client closed)
[23:06:54] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[23:07:24] *** Joins: jkwnki (~jkwnki@p2e5797dc.dip0.t-ipconnect.de)
[23:07:38] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[23:08:17] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[23:10:59] *** Quits: frostwork (~frostwork@user/frostwork) (Ping timeout: 252 seconds)
[23:11:40] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 260 seconds)
[23:14:26] *** Joins: jkwnki1 (~jkwnki@p2e5797dc.dip0.t-ipconnect.de)
[23:14:57] *** Quits: jkwnki1 (~jkwnki@p2e5797dc.dip0.t-ipconnect.de) (Client Quit)
[23:16:19] *** Joins: kill (~killown@user/killown)
[23:17:36] *** Joins: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net)
[23:18:07] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[23:21:08] *** Joins: Voxel (~Voxel@173-46-68-178.baltnet.ru)
[23:21:12] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[23:21:30] *** Joins: jkwnki1 (~jkwnki@p2e5797dc.dip0.t-ipconnect.de)
[23:21:34] *** Quits: jkwnki1 (~jkwnki@p2e5797dc.dip0.t-ipconnect.de) (Client Quit)
[23:22:45] *** Joins: skylite (~skylite@2E6B2CD6.unconfigured.pool.telekom.hu)
[23:28:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 260 seconds)
[23:32:45] <ullbeking> Does anybody here have "bash Cookbook" (2nd ed.) in both PDF and hardcopy?  Is the PDF in color while the paperback is B&W?
[23:36:45] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[23:38:25] *** Joins: totenkoph (~scythe@user/totenkoph)
[23:38:39] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[23:40:23] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[23:41:08] *** Quits: marlinc_ (~marlinc@user/marlinc) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[23:42:21] *** Joins: Dotz0cat (~Dotz0cat@h176.93.187.173.dynamic.ip.windstream.net)
[23:42:30] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[23:43:26] *** Joins: marlinc (~marlinc@user/marlinc)
[23:43:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65)
[23:45:55] *** Joins: alzgh (~alzgh@user/alzgh)
[23:46:17] <earnestly> !books
[23:46:17] <greybot> Most of the published shell/bash books are relatively poor. They may have a few gems here and there, but they're few and far between. Try the BashGuide instead: http://mywiki.wooledge.org/BashGuide
[23:46:54] <earnestly> Hm, the factoid suggests there are some good ones.  I've not come across any, which might they be?
[23:48:21] *** Quits: testuser321 (~wandering@115.187.42.121) (Quit: Leaving)
[23:48:25] *** Quits: roadie (~user@2a02:8108:ec0:1427:38ea:9068:7e01:cb65) (Ping timeout: 252 seconds)
[23:50:24] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:53:17] <ullbeking> The authors of many of the O'Reilly shell and Bash books are top Unix programmers.
[23:53:18] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:53:44] <ullbeking> Robbins, for example
[23:53:53] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[23:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:54:48] *** Joins: defjam (~eb0t@90.214.8.179)
[23:55:01] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[23:55:43] *** Joins: r00t^ (~foobar@ip4d17075a.dynamic.kabel-deutschland.de)
[23:56:40] *** Quits: eb0t (~eb0t@90.204.61.71) (Ping timeout: 240 seconds)
[23:57:10] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:57:51] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
