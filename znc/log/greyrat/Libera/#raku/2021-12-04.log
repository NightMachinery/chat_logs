[00:04:44] *** Quits: A26F64 (~A26F64@cpe-74-69-167-143.stny.res.rr.com) (Quit: Connection closed)
[00:08:15] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[00:09:10] <nine> patrickb: it may be about time to have a real look at how embedding MoarVM should work. When I wrote that code I had pratically no experience at all with MoarVM internals.
[00:09:37] <nine> That's why I did the thing with the native callback. It's what I knew from writing Inline::Perl5
[00:10:07] <Skarsnik> yes, please, I want to use Raku from C/C++ software xD
[00:11:10] <patrickb> nine: My idea was, to get that mod_rakudo apache thing going, and then write a blog post explaining how it works.
[00:11:49] <patrickb> :-P
[00:12:47] <patrickb> but I'm not yet at the point of having a good understanding of things.
[00:14:32] <patrickb> So I'm grateful if you beat me to a writeup. That would probably be a welcome read given my current state of knowledge.
[00:16:51] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[00:17:07] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[00:21:48] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[00:23:52] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[00:25:55] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:27:09] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[00:27:17] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[00:33:31] *** Quits: aoeuidhtns (~aoeuidhtn@31-208-34-104.cust.bredband2.com) (Quit: Connection closed)
[00:33:59] *** Joins: gfldex (~dex@ip5f5ab74b.dynamic.kabel-deutschland.de)
[00:52:24] *** Quits: TheAthlete (~TheAthlet@176.96.230.103) (Quit: Connection closed)
[00:53:30] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[00:53:46] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[01:04:09] <tbrowder> lizmat: is yr day 4 scheduled? jj just told me he went to bed.
[01:05:35] <tbrowder> i see yr draft is titled day 4. jj told me to publish mine but i’m not sure he saw  day 4 in yr title
[01:08:43] <tbrowder> .ask lizmat are you going to publish yr day 4 at midnight utc today?
[01:08:45] <tellable6> tbrowder, I'll pass your message to lizmat
[01:29:11] <tonyo> patrickb: at the very base isn't it just a matter of calling a rakudo script with the request data?
[01:29:47] <tonyo> or nogo on cgi?
[01:29:53] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[01:30:08] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[01:34:34] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Client Quit)
[01:34:50] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[01:39:26] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[01:42:36] <patrickb> tomyo: Basically yes. But then I pay the startup penalty.
[01:43:45] <patrickb> But without restarts I lose the typical dynamic nature of those mod_* thingies. I.e. drop a new .rakumod file in there, press F5 in the browser and it'll just work.
[01:48:31] <tonyo> do you have something running evaluators in a pool?
[01:49:56] <tonyo> err, oh misread that - disregard
[02:22:45] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[02:25:43] <moon-child> patrickb: https://github.com/moon-chilled/libport  prior art
[02:36:39] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 256 seconds)
[02:48:40] <patrickb> moon-child: Ha! Had I noticed that earlier! The prototype code I have isn't nearly as fleshed out as what you have there, but what I have is almost identical (I also took Inline::Perl6) as a starting point.
[02:51:05] <patrickb> moon-child: Did you manage to make raku state transient? I. e. could a piece of code one evaluates add modules and stuff and afterwards remove all that and start fresh?
[02:53:13] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:02:29] *** Quits: Ergo444 (~Ergo444@2E8B6AFC.catv.pool.telekom.hu) (Quit: Connection closed)
[03:20:03] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[03:23:02] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[03:24:40] <moon-child> patrickb: sadly no.  I wasn't even able to create more than one mvm state!  (Though I expect this is mvm's fault, not mine)
[03:26:23] <moon-child> checkpointing would be really cool, though, as a language feature
[03:26:33] <moon-child> (terrible idea of the day: do it with fork)
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:32:39] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:34:04] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:39:00] <patrickb> tony-o, moon-child: Thanks for your input! I'm off to bed.
[03:39:02] <patrickb> o/
[03:39:05] *** Quits: patrickb (~quassel@37.123.120.35) (Quit: Quit.)
[04:12:26] *** Parts: pony (sid524992@smol/hors) ()
[04:17:27] <Geth> ¦ doc: rakool++ created pull request #3990: Fix error re: delegation and simplify some text.
[04:17:27] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3990
[04:28:54] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[04:35:24] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[04:40:12] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[04:48:27] <tbrowder> .tell lizmat i published yr day 4 article, mine is in draft for day 5. for some reason i cannot find the way to schedule the post, just publish manually.
[04:48:28] <tellable6> tbrowder, I'll pass your message to lizmat
[04:49:09] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:50:45] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[05:09:25] <Summer> > The iterator of this Seq is already in use/consumed by another Seq
[05:09:35] * Summer adds .cache to everything with a @
[05:09:47] <Summer> nothing changes aaaaa
[05:12:15] <[Coke]> can you golf it?
[05:16:23] <Summer> oh it was a list of seqs
[05:16:23] <[Coke]> rant: why did we call it Seq and not Sequence?
[05:16:42] <[Coke]> It's not like we create them by hand a lot.
[05:16:43] <moon-child> same reason it's grep and not global-regular-expression-print
[05:16:46] <moon-child> ?
[05:16:51] <moon-child> ;)
[05:17:15] <[Coke]> no, *we* call it grep because perl did.
[05:17:20] <Summer> i'll have you know I have my own specs fork just to fix that bug with grep
[05:18:31] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[05:18:41] <[Coke]> I mean, I get it's shorter, but seems like we could have used the full name for clarity there.
[05:19:09] <Summer> I kinda like it, ending on a q is cute
[05:20:53] <Summer> so you know how assigning a Seq to a @variable makes it into an Array? I wish that would continue into its children too
[05:21:52] <Summer> I know that would open a problimatic pile of discussions, la other types, custom types, etc, so better left untouched, but still, every year for AoC thats my number one stumbling blocks
[05:22:43] <Summer> - my @input = $*ARGFILES.lines.map: *.comb;
[05:22:48] <Summer> + my @input = $*ARGFILES.lines.map: *.comb.Array;
[05:26:36] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[05:38:31] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[05:38:52] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[06:14:36] <SmokeMachine> Would you people want to use my post for the advent calendar? I don’t think I’ll have time to make it better… (that’s ok if it’s not used… I just tried to help to have enough posts)
[06:15:25] <SmokeMachine> (https://gist.github.com/FCO/8ad2bd4cc3723ea25eb22de1690ed9df)
[06:34:10] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Remote host closed the connection)
[06:35:57] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[06:40:20] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[07:40:20] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:40:20] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:40:20] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:40:20] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:40:20] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:40:20] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:40:20] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:40:49] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[07:41:20] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[07:41:30] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:41:31] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[07:42:01] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[07:42:02] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[07:42:08] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[07:42:42] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[07:43:27] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[08:00:10] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[08:01:02] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Client Quit)
[08:01:14] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[08:41:11] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:41:55] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:42:05] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:42:58] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:43:05] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:02:48] <Geth> ¦ doc/codesections-d-is-dec: b662d1aa96 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[09:02:48] <Geth> ¦ doc/codesections-d-is-dec: \d is for decimal
[09:02:48] <Geth> ¦ doc/codesections-d-is-dec: 
[09:02:48] <Geth> ¦ doc/codesections-d-is-dec: As we correctly note [further down the page](https://docs.raku.org/language/regexes#Predefined_character_classes), `\d` matches _decimal digits_ 
[09:02:48] <Geth> ¦ doc/codesections-d-is-dec: (Unicode `Nd`) not all numbers (Unicode `N`).  This commit fixes the description here, adds an example of where that makes a difference, and provides
[09:02:49] <Geth> ¦ doc/codesections-d-is-dec: a way to match against Numbers if that's what the user meant.
[09:02:49] <Geth> ¦ doc/codesections-d-is-dec: review: https://github.com/Raku/doc/commit/b662d1aa96
[09:03:16] <Geth> ¦ doc: codesections++ created pull request #3991: \d is for decimal
[09:03:16] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3991
[09:30:58] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[09:31:15] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[09:32:24] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:33:09] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:42:58] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:42:50] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[10:42:50] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[11:04:12] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:05:17] *** Joins: seednode (~seednode@user/seednode)
[11:41:30] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[12:05:14] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[12:19:47] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:20:32] *** Joins: Sgeo (~Sgeo@user/sgeo)
[12:35:43] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[12:35:59] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[12:40:44] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[12:43:13] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[12:49:55] *** Joins: Oshawott (~archenoth@2604:3d09:681:f00:918b:ecd9:869:3108)
[12:53:49] *** Quits: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net) (Ping timeout: 256 seconds)
[13:06:26] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[13:59:26] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:01:39] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[14:07:54] <Geth> ¦ doc: 2ea6db7ed1 | rir++ (committed using GitHub Web editor) | doc/Language/objects.pod6
[14:07:54] <Geth> ¦ doc: Fix error re: delegation and simplify some text. (#3990)
[14:07:54] <Geth> ¦ doc: 
[14:07:54] <Geth> ¦ doc: * Fix error re: delegation and simplify some text.
[14:07:54] <Geth> ¦ doc: 
[14:07:55] <Geth> ¦ doc: * Clarify quantity of delegated methods.
[14:07:55] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/2ea6db7ed1
[14:07:57] <linkable6> Link: https://docs.raku.org/language/objects
[14:08:42] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:09:44] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:10:55] <SmokeMachine> Would you people want to use my post for the advent calendar? I don’t think I’ll have time to make it better… (that’s ok if it’s not used… I just tried to help to have enough posts) https://gist.github.com/FCO/8ad2bd4cc3723ea25eb22de1690ed9df
[14:12:28] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:18:08] <timo> do you still take suggestions?
[14:19:09] <Geth> ¦ doc: aa2ccc2ff2 | Smylers++ (committed using GitHub Web editor) | doc/Language/5to6-perlfunc.pod6
[14:19:09] <Geth> ¦ doc: Correct equivalent for split without a pattern (#3988)
[14:19:09] <Geth> ¦ doc: 
[14:19:09] <Geth> ¦ doc: * Correct equivalent for split without a pattern
[14:19:09] <Geth> ¦ doc: 
[14:19:10] <Geth> ¦ doc: In Perl, split without a pattern is different from split "" — telling users of the former to switch to the latter changes from splitting by words to splitting by characters.
[14:19:10] <Geth> ¦ doc: 
[14:19:11] <Geth> ¦ doc: * Update 5to6-perlfunc.pod6
[14:19:12] <linkable6> Link: https://docs.raku.org/language/5to6-perlfunc
[14:19:13] <Geth> ¦ doc: 
[14:19:15] <Geth> ¦ doc: * Update 5to6-perlfunc.pod6
[14:19:17] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/aa2ccc2ff2
[14:19:50] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:20:05] <timo> for example, the specialized factory does .title x= 20; does that mean the default value for title gets used from the outer factory?
[14:20:57] <timo> a little more text about how exactly traits work and when they are preferable to using attributes. like, can you still pass "archived" to the factory?
[14:21:23] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:27:48] <Geth> ¦ doc: 7980f9556d | (Luis F. Uceta)++ (committed using GitHub Web editor) | 2 files
[14:27:48] <Geth> ¦ doc: Add clarification about private methods (#3778)
[14:27:48] <Geth> ¦ doc: 
[14:27:48] <Geth> ¦ doc: * Add clarification about private methods
[14:27:48] <Geth> ¦ doc: 
[14:27:49] <Geth> ¦ doc: * Add small clarification
[14:27:49] <Geth> ¦ doc: 
[14:27:50] <Geth> ¦ doc: From https://github.com/rakudo/rakudo/issues/3801
[14:27:52] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7980f9556d
[14:28:31] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:47:43] *** Joins: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net)
[14:56:57] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.3)
[15:12:54] <Geth> ¦ doc: f9cb0a2655 | (JJ Merelo)++ | doc/Language/exceptions.pod6
[15:12:54] <Geth> ¦ doc: Mentioning the role of status in exceptions closes #3977
[15:12:54] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/f9cb0a2655
[15:22:03] <SmokeMachine> timo: thanks! I’ll try to add that!
[15:23:33] <SmokeMachine> And yes, the outer default value is used
[15:32:49] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:33:26] <SmokeMachine> timo: could you see if it’s better now, please? https://gist.github.com/FCO/8ad2bd4cc3723ea25eb22de1690ed9df
[15:33:49] <tbrowder> hi, i just saw some code like
[15:35:14] <tbrowder> *** a  with / else block just like an if/ else block.
[15:35:44] <tbrowder> how are they different?
[15:36:12] <tbrowder> i've never looked at with
[15:36:20] <tbrowder> much
[15:37:14] <SmokeMachine> tbrowder: `with xyz` is kind of equivalent to `if xyz.defined`
[15:39:08] <tbrowder> ok, i see, thanks. i see it topicalizes, too.
[15:39:48] <SmokeMachine> m: sub a($a) { say “if $a” if $a; say “with $a” with $a }; a “bla”; a “”; a Str; a 42; a 0; a Int
[15:39:49] <camelia> rakudo-moar d7152ea59: OUTPUT: «if bla␤with bla␤with ␤if 42␤with 42␤with 0␤»
[15:40:12] <tbrowder> i've been pretty casually using if when maybe i should have been using with
[15:41:06] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[15:42:28] <tbrowder> m: my $a; say $a if $a
[15:42:28] <camelia> rakudo-moar d7152ea59: ( no output )
[15:43:07] <tbrowder> m: my $a; say $a with $a
[15:43:07] <camelia> rakudo-moar d7152ea59: ( no output )
[15:43:51] <SmokeMachine> m: my $a = 0; .say with $a
[15:43:51] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»
[15:44:04] <tbrowder> m: my $a = 0; say $a if $a; say $a with $a
[15:44:05] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»
[15:45:53] <tbrowder> what i've been doing is "if $a.defined" when i could have used "with $a"
[15:47:03] <tbrowder> i'm not sure in my mind if my way isn't clearer but it certainly takes more key strokess
[15:48:31] <tbrowder> BUT use of with shows the user is more than a novice at this beautiful language
[15:48:32] <lizmat> tbrowder: note that there's also "without"
[15:48:48] <lizmat> m: my $a; say "without value" without $a
[15:48:49] <camelia> rakudo-moar d7152ea59: OUTPUT: «without value␤»
[15:49:17] <tbrowder> ah, my head hurts!
[15:51:12] <tbrowder> lizmat: sorry i felt i had to forcecpublished yr art last night. i tried to get you and jj had left the buildng. i didn't see it scheduled so i waited an xra hr just in case
[15:51:45] <tbrowder> it did have
[15:51:50] <lizmat> tbrowder: thanks for doing that
[15:52:05] <lizmat> I *had* scheduled it for 0100 am UTC I thought
[15:52:10] <tbrowder> yr welcome
[15:52:25] <lizmat> but apparently WP is then lying to me
[15:53:42] <tbrowder> it may have been but i couldn't see that it was. i did push publish at almost exactly 0100 utc
[15:54:33] <tbrowder> as much money as wp makes you would think they could improve the user interface
[15:55:16] <tbrowder> how did you get yr comment hook added?
[15:55:34] <SmokeMachine> lizmat, tbrowder: if there are no enough advent posts, please https://gist.github.com/FCO/8ad2bd4cc3723ea25eb22de1690ed9df
[15:55:36] <lizmat> I have no idea
[15:56:44] <tbrowder> hm, seems a neat thing but i haven't noticed it on the others.
[15:57:16] <tbrowder> SmokeMachine: be sure and let jmerelo know
[15:59:15] <lizmat> SmokeMachine: so if I gather correctly what RedFactory is about, it's about generating objects of a given type with automatic (incremented) setting of attributues
[15:59:35] <lizmat> feels like something that's not exactly related to Red per se?
[16:00:23] <SmokeMachine> lizmat: no, it’s for generating db entries for tests, using Red
[16:01:03] *** Joins: jjido (~Denis@90.213.58.125)
[16:01:36] <lizmat> but that's just because you're creating Red objects... but what if they weren't ?
[16:01:42] <SmokeMachine> It’s a way of doing “fixtures” but more clear… because you create each row on your own test code
[16:02:17] <lizmat> but each row corresponds to an instance of the type determined by the table, no?
[16:04:33] <SmokeMachine> If it was not using Red models, a big part of that would work… but not the .create itself (that uses Red’s .^create) but you could still use factory-new and factory-args… but I don’t see that being very useful… would that be useful?
[16:05:24] <SmokeMachine> yes, each row based on the used model
[16:11:09] <lizmat> Well, in conjunction with Test::Mock, I guess a generic object factory could be useful
[16:12:23] <SmokeMachine> It works like: you are testing if, for example, your controller helper returns the user’s full name. But the user table needs a lot of required data, so passing all that data on your test would make it unreadable. So you pre configure your user factory and on your test you can do: `is full-name-helper(factory-create “user”, :first-name<a>, :last-name<b>), “a b”, “returns the right full name”`
[16:13:48] <SmokeMachine> (Much more readable and understandable than using fixtures)
[16:14:35] <lizmat> right, I understand that
[16:15:20] <lizmat> but that could be useful outside of Red, for any application, whether they'd be using a database backend or not, don't you think?
[16:16:00] <SmokeMachine> Yes, I think you have a point…
[16:18:01] <SmokeMachine> But there is also a differentiation on when you want to test something you added on your DB and something the is not (or is not anymore) on your DB… the difference between new and create, it is DB specific…
[16:20:39] <lizmat> but, shouldn't all changes go through the API that Red provides?
[16:20:58] <lizmat> would you really let other processes make changes to the DB when you're using an ORM ?
[16:21:50] <SmokeMachine> No, everything to DB goes through Red…
[16:22:41] <SmokeMachine> RedFactory uses Red for it, using the model’s meta methods
[16:26:05] <lizmat> so how could the db change then without the objects knowing about it ?
[16:26:21] <SmokeMachine> lizmat: probably this is the only line where it really needs Red: https://github.com/FCO/RedFactory/blob/main/lib/RedFactory.rakumod#L137
[16:27:17] <SmokeMachine> lizmat: it can’t. My point is that RedFactory needs to know Red’s API to ask it to create new rows
[16:28:22] <SmokeMachine> (And to create a in-memory SQLite for your test…)
[16:28:46] <SmokeMachine> (Creating all needed tables on it)
[16:28:58] <SmokeMachine> (All that using Red)
[16:30:08] <SmokeMachine> I think I’m probably missing your point, sorry… I’m trying to reread that
[16:33:44] <lizmat> but isn't "using the Red API" the same as "creating an object" ?
[16:34:19] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:34:39] <SmokeMachine> 12:29 <lizmat> feels like something that's not exactly related to Red per se? -> I partially agree, the creating obj feature (the method new and the method args-to) are not related to Red, but the DB interaction features (.create and .run) uses Red API
[16:37:18] <SmokeMachine> 13:03 <lizmat> but isn't "using the Red API" the same as "creating an object" ? -> almost, but not quite. You can create a row using .new.^save but you can also use directly .^create that has some facilitators ( like creating the row and its relationship rows for you inside a transaction)
[16:38:03] *** Joins: Ergo444 (~Ergo444@2E8B6AFC.catv.pool.telekom.hu)
[16:38:11] <Ergo444> hello
[16:38:43] <Ergo444> how would you convert Buf[uint8] into a hexadecimal string?
[16:39:17] <SmokeMachine> Red’s models are just usual objects, but its metaclass has the methods to interact with the DB. So if I want RedFactory to do everything to me, it needs to know Red’s “meta API”
[16:40:47] <SmokeMachine> Or I would need to instead of doing: `factory-create “user”` I would have to do: `factory-new(“user”).^save`
[16:41:36] <SmokeMachine> And it wouldn’t work for, for example, when the factory also creates its relationships
[16:42:55] <lizmat> aahh,..  ok, thanks for clearing up that misconception in my minde
[16:42:58] <lizmat> *mond
[16:43:00] <lizmat> *mind
[16:43:04] <lizmat> hehe
[16:43:22] <SmokeMachine> "using the Red API" is the same as "creating an object" until you want to interact with the database
[16:44:16] <Geth> ¦ doc/codesections-d-is-dec: 9ebcd5dc9d | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[16:44:16] <Geth> ¦ doc/codesections-d-is-dec: Minor fixes from reviews
[16:44:16] <Geth> ¦ doc/codesections-d-is-dec: review: https://github.com/Raku/doc/commit/9ebcd5dc9d
[16:45:21] <SmokeMachine> lizmat: But yes, I think I can remove Red’s dependency where it’s not needed and make it more generic
[16:49:29] *** Quits: [Coke] (~coke@172.58.225.143) (Ping timeout: 256 seconds)
[16:56:14] <Ergo444> how can I convert a buffer into hexadecimal strings
[16:57:13] <lizmat> m: say Buf.new(1,2,3).raku
[16:57:13] <camelia> rakudo-moar d7152ea59: OUTPUT: «Buf.new(1,2,3)␤»
[16:57:19] <lizmat> hmmm
[16:57:25] <lizmat> m: say Buf.new(1,2,3)
[16:57:25] <camelia> rakudo-moar d7152ea59: OUTPUT: «Buf:0x<01 02 03>␤»
[16:57:51] <lizmat> Ergo444: something like that ^^ ?
[16:58:12] <lizmat> m: say Buf.new(1,2,3).substr(7).chop
[16:58:12] <camelia> rakudo-moar d7152ea59: OUTPUT: «No such method 'substr' for invocant of type 'Buf'␤  in block <unit> at <tmp> line 1␤␤»
[16:58:13] <Ergo444> Ad00BfA0
[16:58:19] <lizmat> m: say Buf.new(1,2,3).gist.substr(7).chop
[16:58:19] <camelia> rakudo-moar d7152ea59: OUTPUT: «01 02 03␤»
[16:58:56] <Ergo444> maybe using map and.. number system stuff
[16:59:23] <Ergo444> there was unpack in Perl5
[16:59:58] <lizmat> m: dd Buf.new(1,2,3).map(*.fmt("%02x")).join
[16:59:58] <camelia> rakudo-moar d7152ea59: OUTPUT: «"010203"␤»
[17:00:28] <Ergo444> m: pack("C*", [1, 2, 3]); 
[17:00:28] <camelia> rakudo-moar d7152ea59: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Use of pack is experimental; please 'use experimental :pack'␤at <tmp>:1␤------> 3pack("C*", [1, 2, 3]);7⏏5<EOL>␤»
[17:01:12] <Ergo444> m:   Buf.new(111,2,3).map(*.fmt("%02x")).join
[17:01:12] <camelia> rakudo-moar d7152ea59: ( no output )
[17:01:39] <Ergo444> m:   Buf.new(1,2,3).map(*.fmt("%02x")).join
[17:01:40] <camelia> rakudo-moar d7152ea59: ( no output )
[17:01:53] <Ergo444> m:   say Buf.new(1,2,3).map(*.fmt("%02x")).join
[17:01:53] <camelia> rakudo-moar d7152ea59: OUTPUT: «010203␤»
[17:01:59] <Ergo444> m:   say Buf.new(111,2,3).map(*.fmt("%02x")).join
[17:02:00] <camelia> rakudo-moar d7152ea59: OUTPUT: «6f0203␤»
[17:02:17] <Ergo444> that is good enough
[17:04:47] <lizmat> hmmm..   I wonder why we don't have .fmt on Buf
[17:05:04] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[17:42:39] <Skarsnik> probably because Buf does not have an encoding?
[17:46:08] <lizmat> I guess that's a good point, but I guess for all intents and purposes we could assume ASCII  :-)
[17:50:06] <Ergo444> Default constructor for 'FileSender' only takes named arguments
[17:50:22] <Skarsnik> maybe there could be like a .raw method/adverse that say "don't encode' ?
[17:50:24] <Ergo444> How do I make a class accept positional arguments for the constructor?
[17:50:51] <Skarsnik> constructor are weird x)
[17:51:05] <Skarsnik> s/adverse/abverb/
[17:51:36] <Ergo444> for submethod TWEAK
[17:52:31] <Ergo444> what is the idea behind TWEAK?
[17:55:12] <moritz_> run code at the end of the object creation cycle
[17:56:50] <Skarsnik> BUILD is before?
[18:01:44] <lizmat> if you want .new to take positionals, you need to create your own .new
[18:02:31] <lizmat> m: class Foo { has $.bar; method new($bar) { self.bless(:$bar) } }; dd Foo.new(42);
[18:02:32] <camelia> rakudo-moar d7152ea59: OUTPUT: «Foo.new(bar => 42)␤»
[18:02:48] <lizmat> m: class Foo { has $.bar; multi method new($bar) { self.bless(:$bar) } }; dd Foo.new(bar => 42);
[18:02:48] <camelia> rakudo-moar d7152ea59: OUTPUT: «Foo.new(bar => 42)␤»
[18:03:07] <lizmat> m: class Foo { has $.bar; multi method new($bar) { self.bless(:$bar) } }; dd Foo.new(bar => 42); dd Foo.new(666);  # if you want to allow both forms
[18:03:07] <camelia> rakudo-moar d7152ea59: OUTPUT: «Foo.new(bar => 42)␤Foo.new(bar => 666)␤»
[18:05:04] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:05:52] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[18:10:19] <Skarsnik> I think that self.bless is not really great if you don't know how Perl 5 class were made. I think like a trait on constructor method would have be more clear.
[18:10:22] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Read error: No route to host)
[18:12:45] <lizmat> Skarsnik: class Foo { has $.foo is Positional }  ??
[18:13:52] <Skarsnik> class Foo { method mynew($bar) is constructor {}
[18:16:43] <lizmat> but you can make any method a constructor
[18:17:23] <Skarsnik> I guess you can't control if you want to create the object or not this way
[18:17:46] <lizmat> m: class Foo { has $.bar; method init($bar) { self.new(:$bar) } }; dd Foo.init(42)
[18:17:46] <camelia> rakudo-moar d7152ea59: OUTPUT: «Foo.new(bar => 42)␤»
[18:18:23] <lizmat> afk for a bit&
[18:29:23] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[18:29:57] <Skarsnik> http://blogs.perl.org/users/sylvain_colinet/2021/12/writing-a-snes-assembler-compilerdisassembler---day-2.html if someone has an awnser for my last issue from this x)
[18:36:25] <SmokeMachine> lizmat: https://usercontent.irccloud-cdn.com/file/aLwXuvC2/image.png
[18:39:28] *** Joins: MoC (~moc@user/moc)
[18:42:05] <Ergo444> is it possible to asm code in Raku?
[18:42:18] <Ergo444> to write.
[18:43:13] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:44:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:45:26] <Skarsnik> I don't think you can directly, since Raku can run on top of the JVM or Javascript
[19:04:37] *** Joins: monkey_ (~user@190.104.116.153)
[19:08:32] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 240 seconds)
[19:08:57] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 256 seconds)
[19:17:02] <Skarsnik> hm, how do you split an Int to bytes?
[19:44:24] <lizmat> something with https://docs.raku.org/routine/read-uint8 perhaps ?
[19:44:41] <lizmat> Skarsnik ^
[19:46:45] <Skarsnik> this is on a Blob x)
[19:47:39] <Skarsnik> I want like to write 0x4578.something and that give me like (0x45 0x78)
[20:06:11] <lizmat> well, if you want strings, then:
[20:06:29] <lizmat> m: .say for "0x4578".comb(2).skip
[20:06:29] <camelia> rakudo-moar d7152ea59: OUTPUT: «45␤78␤»
[20:06:48] <lizmat> m: say "0x$_" for "0x4578".comb(2).skip
[20:06:49] <camelia> rakudo-moar d7152ea59: OUTPUT: «0x45␤0x78␤»
[20:08:57] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:08:57] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:09:11] <Skarsnik> m:0x587.Str.comb(2)
[20:09:14] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:09:23] <Skarsnik> m:say 0x587.Str.comb(2)
[20:09:23] <evalable6> Skarsnik, rakudo-moar 925d0bef8: OUTPUT: «(14 15)␤»
[20:17:48] <lizmat> converting it to a string, will lose its hexiness  :-)
[20:19:33] <Skarsnik> I just want each individual bytes of the Int, the 0x notation is more to see these bytes x)
[20:20:16] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[20:22:00] <Skarsnik> m: say 0x484.base16.reverse.comb(2)
[20:22:00] <camelia> rakudo-moar d7152ea59: OUTPUT: «No such method 'base16' for invocant of type 'Int'.  Did you mean␤'base'?␤  in block <unit> at <tmp> line 1␤␤»
[20:22:09] <Skarsnik> m: say 0x484.base(16).reverse.comb(2)
[20:22:09] <camelia> rakudo-moar d7152ea59: OUTPUT: «(48 4)␤»
[20:24:49] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[20:25:16] <Skarsnik> Also found an interesting thing, don't name the argment / in a method an class use has action if you want to do some ~~. like class MyAction {method mytoken($/) {if $/<something> ~~ /foo/}}} The error message is... interesting
[20:25:44] <lizmat> m: sub bytes(Int:D $a) { (0,8...Inf).map({ (($a +> $_) +& 0xff).fmt("0x%02x") }) }; .say for bytes(12345).head(3)
[20:25:44] <camelia> rakudo-moar d7152ea59: OUTPUT: «0x39␤0x30␤0x00␤»
[20:26:21] <Skarsnik> xD
[20:33:13] <Skarsnik> less fancy
[20:33:16] <Skarsnik> m:sub bytes(Int:D $int) {my $i = $int;my @toret; while $i != 0 {@toret.push($i +& 0xFF);$i = $i +> 8;}; @toret}; say $_.base(16) for bytes(0x4855);
[20:33:17] <evalable6> Skarsnik, rakudo-moar 925d0bef8: OUTPUT: «55␤48␤»
[20:33:26] *** Joins: [Coke] (~coke@172.58.225.143)
[20:55:57] <tbrowder> .tell tonyo my fez user name was entered as tbrowder. new App::Mi6 expects it to be "zef:tbrowder". can i change it in the .fez-config.json file or do i have to start over with a new fez account, or should mi6 deal with it?
[20:55:58] <tellable6> tbrowder, I'll pass your message to tonyo
[21:04:43] *** Joins: hobbs (~andrew@pool-96-242-144-62.nwrknj.fios.verizon.net)
[21:07:19] *** Joins: jjido (~Denis@90.213.58.125)
[21:09:11] <hobbs> is there a nice way to map over all of the elements of a shaped array and get out an array of the same shape? e.g. Array.new(:shape(2,2), [[1,2],[3,4]]).bettermap: *² should give a shaped array containg [[1,4],[9,16]]
[21:09:47] <ugexe> maybe .tree ?
[21:10:11] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[21:11:06] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[21:11:54] <hobbs> alternatively/additionally, is there a nice way to take a flat list of n*m*k items and shlurp it up into a shape(n,m,k) array? :)
[21:14:11] *** Joins: monkey_ (~user@190.104.116.153)
[21:28:46] <Geth> ¦ doc: rakool++ created pull request #3993: Simple deletion of "of course" phrases.
[21:28:46] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3993
[21:32:38] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:34:07] *** Quits: hobbs (~andrew@pool-96-242-144-62.nwrknj.fios.verizon.net) (Quit: Leaving)
[21:39:37] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 256 seconds)
[21:39:41] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 256 seconds)
[21:44:08] <tbrowder> lizmat: can you please ck yr .fez-config.json file and see if it has a "zef:" or "fez:" prefix?
[21:44:53] <tbrowder> or can any other fez user check the same thing, please?
[21:57:53] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[22:05:35] *** Joins: monkey_ (~user@190.104.116.153)
[22:11:34] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[22:11:48] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[22:16:33] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:16:38] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[22:19:13] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[22:19:26] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[22:23:55] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 252 seconds)
[22:33:44] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[22:35:12] *** Joins: jjido (~Denis@90.213.58.125)
[22:35:59] *** Joins: patrickb (~quassel@37.123.120.35)
[22:39:19] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[23:01:09] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[23:34:30] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[23:50:46] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[23:51:00] *** Joins: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu)
[23:53:10] <Geth> ¦ doc: c712268b89 | (Daniel Green)++ | doc/Language/hashmap.pod6
[23:53:10] <Geth> ¦ doc: Index "hash slice"
[23:53:10] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c712268b89
[23:53:13] <linkable6> Link: https://docs.raku.org/language/hashmap
[23:56:12] *** Quits: riffraff18 (~riffraff1@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[23:57:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
