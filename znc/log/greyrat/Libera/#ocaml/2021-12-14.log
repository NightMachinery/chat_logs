[00:24:36] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 268 seconds)
[00:32:04] *** Joins: mro (~mro@port-92-195-202-167.dynamic.as20676.net)
[00:40:07] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[00:42:15] <Drup> tyxml's svg part is indeed .... undertested
[00:49:43] *** Joins: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505)
[00:53:12] <rgrinberg> thizanne yes you're right but it's still gratuitous imo.
[00:54:24] <rgrinberg> and can be implemented for free on top with a key like type 'a key = { hash : int ; key : 'a }
[01:01:59] *** Quits: mro (~mro@port-92-195-202-167.dynamic.as20676.net) (Read error: Connection reset by peer)
[01:02:04] *** Joins: mro_ (~mro@2002:5cc3:caa7:0:7d9f:caf6:d45a:2361)
[01:29:12] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[01:31:19] *** Joins: vicfred (~vicfred@user/vicfred)
[01:35:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:46:09] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:06:24] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:fff3:c59c:b8a9:6efa) (Quit: Konversation terminated!)
[02:27:46] *** Quits: mro_ (~mro@2002:5cc3:caa7:0:7d9f:caf6:d45a:2361) (Quit: Leaving...)
[02:58:01] *** Quits: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505) (Ping timeout: 252 seconds)
[03:00:34] *** Joins: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505)
[03:02:45] *** Quits: hannes (~hannes@193.30.40.133) (Ping timeout: 250 seconds)
[03:05:58] *** Joins: hannes (~hannes@193.30.40.133)
[03:08:55] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[03:17:58] *** Joins: oriba (~oriba@dynamic-078-054-061-195.78.54.pool.telefonica.de)
[03:30:06] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 260 seconds)
[03:53:25] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[04:10:01] *** Joins: SdeSousa (~SdeSousa@bl15-208-21.dsl.telepac.pt)
[04:10:53] *** Quits: SdeSousa (~SdeSousa@bl15-208-21.dsl.telepac.pt) (Client Quit)
[04:54:12] *** Quits: oriba (~oriba@dynamic-078-054-061-195.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:04:53] *** Quits: quernd (~quernd@boethin.uberspace.de) (Quit: Ping timeout (120 seconds))
[05:05:04] *** Joins: quernd (~quernd@boethin.uberspace.de)
[05:11:19] *** Quits: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:19:43] *** Quits: quernd (~quernd@boethin.uberspace.de) (Read error: Connection reset by peer)
[05:19:54] *** Joins: quernd (~quernd@boethin.uberspace.de)
[05:22:51] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[05:41:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:51:55] <lagash> Is either SILE or Patoline far enough along for real book publishing?
[05:52:22] <lagash> Pardon, I meant SATySFi not SILE
[06:47:40] *** Joins: spip (~bobo@37.165.143.193)
[06:47:53] *** Quits: Guest4923 (~bobo@37.164.145.215) (Ping timeout: 265 seconds)
[06:48:04] *** spip is now known as Guest8403
[06:51:15] *** Joins: rgrinberg (~textual@187.223.209.106)
[06:58:24] *** Joins: mbuf (~Shakthi@122.178.176.47)
[07:34:37] <d_bot> <cemerick> @Drup that's fair. For my use case (copy-pasting svg icons, mostly), it seems fine enough to just Html.Unsafe those snippets ðŸ¤·
[07:51:09] *** Quits: Guest8403 (~bobo@37.165.143.193) (Ping timeout: 250 seconds)
[07:51:12] *** Joins: spip (~bobo@37.165.143.193)
[07:51:36] *** spip is now known as Guest4325
[07:54:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:03:18] <hackinghorn> I would like to make several executables from 1 dune file. How do I separate which source code files is for which executable?
[08:04:04] <rgrinberg> You can use the (modules ..) field to list the modules explicitly. Or you can use an executables and let dune detect this for you
[08:07:03] <hackinghorn> hmm how does it detect?
[08:07:32] <hackinghorn> does the executable name need to match some file name?
[08:10:28] <d_bot> <darrenldl> i believe so
[08:25:31] <rgrinberg> hackinghorn if you have (executables (names x y ..)) you will need a x.ml and y.ml
[08:25:47] <rgrinberg> and dune figures it out from the dependency graph it computes using ocamldep
[08:35:19] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:56:50] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[09:32:24] *** Joins: humasect (~humasect@2001:1970:57e0:4100::9e43)
[09:45:15] <hackinghorn> ahh thankss
[10:05:32] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 240 seconds)
[10:05:54] *** Quits: humasect (~humasect@2001:1970:57e0:4100::9e43) (Quit: Leaving...)
[10:09:00] *** Joins: humasect (~humasect@2001:1970:57e0:4100::9e43)
[10:26:55] *** Joins: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2)
[10:28:35] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[10:33:52] *** Quits: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2) (Remote host closed the connection)
[10:35:48] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[10:36:04] *** Quits: remexre (~remexre@user/remexre) (Remote host closed the connection)
[10:47:11] *** Quits: humasect (~humasect@2001:1970:57e0:4100::9e43) (Remote host closed the connection)
[10:50:34] *** Joins: humasect (~humasect@2001:1970:57e0:4100::9e43)
[10:50:48] *** Joins: remexre (~remexre@user/remexre)
[11:01:45] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[11:07:33] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[11:11:35] *** Joins: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2)
[11:14:45] *** Quits: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2) (Remote host closed the connection)
[11:17:38] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Ping timeout: 256 seconds)
[11:22:57] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[11:24:02] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:26:37] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[11:38:16] *** Quits: humasect (~humasect@2001:1970:57e0:4100::9e43) (Read error: Connection reset by peer)
[11:38:22] *** Joins: humasect_ (~humasect@2001:1970:57e0:4100::9e43)
[11:41:41] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[11:41:50] *** hackinghorn is now known as dave0smommy
[11:41:59] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[11:43:00] *** dave0smommy is now known as hackinghorn
[11:46:50] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[11:49:10] *** humasect_ is now known as humasect
[12:11:43] *** Joins: bartholin (~bartholin@158.110.70.215)
[12:13:04] <hackinghorn> hi, is there any problem with reassign variables like this: let tests = ["test"];; let tests = "test2" :: tests;;
[12:13:32] <d_bot> <antron> nope
[12:14:07] <d_bot> <antron> but this isn't reassigning in ocaml. it's "shadowing." the second tests is a new variable that just has the same name, which makes the original one inaccessible in that scope afterwards
[12:14:46] <d_bot> <antron> the compiler does know that the first one is shadowed, though, so this can be optimized in various ways
[12:15:16] <hackinghorn> it will be garbage collected always immediately, I suppose?
[12:15:38] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[12:15:53] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[12:16:29] <hackinghorn> I just think it looks like bad code
[12:16:33] <d_bot> <antron> i don't believe so. and in this particular case there is nothing to garbage collect from the first tests, since the actual value that the name referred to is still being pointed to as part of the value in the second tests
[12:16:52] <d_bot> <antron> well, i write code like this rather often, but it depends on the situation
[12:17:16] <d_bot> <antron> sometimes you want to shadow previous names so that you dont accidentally access old "states" (notionally) of a computation in later code
[12:18:00] <hackinghorn> I see now, thankss
[12:18:12] <d_bot> <antron> it vaguely "consumes" them and makes a block of code with shadowing have a sort of "linearity" to it
[12:30:32] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[12:37:39] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:51:23] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 268 seconds)
[12:58:04] *** Joins: rgrinberg (~textual@187.223.209.106)
[13:01:18] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:09:17] *** Quits: quernd (~quernd@boethin.uberspace.de) (Killed (NickServ (GHOST command used by quernd7)))
[13:09:17] *** quernd7 is now known as quernd
[13:10:20] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[13:10:22] *** Joins: hannes_ (~hannes@193.30.40.133)
[13:10:37] *** Joins: engil2 (~engil@163.172.65.89)
[13:11:01] *** Joins: p4bl01 (~p4bl0@berthold.uzy.me)
[13:11:22] *** Joins: gdd1 (~gdd@129.199.146.230)
[13:12:19] *** Server sets mode: +CScnpt 
[13:14:26] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:16:44] *** Quits: hannes (~hannes@193.30.40.133) (*.net *.split)
[13:16:44] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[13:16:44] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[13:16:44] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (*.net *.split)
[13:16:45] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[13:16:45] *** Quits: theblatte (~theblatte@82-71-49-100.dsl.in-addr.zen.co.uk) (*.net *.split)
[13:16:45] *** Quits: Absalom (~Absalom@envs.net) (*.net *.split)
[13:16:45] *** Quits: grobe0ba (~grobe0ba@mars.pulpie.xyz) (*.net *.split)
[13:16:45] *** Quits: rwmjones (~rwmjones@26.54.187.81.in-addr.arpa) (*.net *.split)
[13:16:45] *** Quits: kandu (~kandu@138.68.48.10) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: p4bl0 (~p4bl0@berthold.uzy.me) (*.net *.split)
[13:16:46] *** Quits: asm (~alexander@user/asm) (*.net *.split)
[13:16:46] *** Quits: engil1 (~engil@163.172.65.89) (*.net *.split)
[13:17:17] *** Quits: grobe0ba_ (~grobe0ba@mars.pulpie.xyz) (Ping timeout: 268 seconds)
[13:17:38] *** Joins: grobe0ba (~grobe0ba@mars.pulpie.xyz)
[13:21:51] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[13:21:51] *** Joins: drewolson (~drewolson@user/drewolson)
[13:21:51] *** Joins: theblatte (~theblatte@82-71-49-100.dsl.in-addr.zen.co.uk)
[13:21:51] *** Joins: Absalom (~Absalom@envs.net)
[13:21:51] *** Joins: kandu (~kandu@138.68.48.10)
[13:22:30] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[13:22:57] *** Joins: Colt (~Colt@user/colt)
[13:23:12] *** Joins: asm (~alexander@burner.asm89.io)
[13:34:41] <d_bot> <Wulfman> So I have a question, that I'm not sure where to ask so tell me if i should ask in another channel.
[13:34:42] <d_bot> <Wulfman> I'm writing a CLI with Core.command  To write the command I need to  apply a function `f : 'a1 -> 'a2 -> ... -> 'an -> unit -> unit` to arguments `'a1 t, 'a2 t, ... 'an t` . After trying some stuff, I ended up finding monadic binary operators  :
[13:34:43] <d_bot> <Wulfman> ```
[13:34:44] <d_bot> <Wulfman> (*>) : unit t -> 'a t -> 'a t
[13:34:45] <d_bot> <Wulfman> (<*) : 'a t -> unit t -> 'a t
[13:34:47] <d_bot> <Wulfman> (<*>) : ('a -> 'b) t -> 'a t -> 'b t
[13:34:48] <d_bot> <Wulfman> (>>|) : 'a t -> ('a -> 'b) -> 'b t
[13:34:49] <d_bot> <Wulfman> ```
[13:34:51] <d_bot> <Wulfman> So I end up writting `f +> a1 <*> a2 <*> ... <*> an`  with `let (+>) a b = b >>| a`  which works fine but left me with some question.
[13:34:52] <d_bot> <Wulfman> I don't understand the point of `*>` and `<*` . For me they don't make any sense.
[13:34:53] <d_bot> <Wulfman> I don't understand how to use `>>|` correctly with multiple arguments function. (In my case that would be `a1 >>| f <*> a2 ... <*> an` which is just weird.
[13:34:55] <d_bot> <Wulfman> Or is there a way to use `>>|` better ? I though that `a1 <*> .... <*> an >>| f` could be nice but that doesn't really work either, you would need `<*>` to be flipped and change the priority of operation.
[13:34:56] <d_bot> <Wulfman> Do you guys have some ideas ?
[13:36:29] <Anarchos> wulfman maybe use some parentheses ?
[13:48:50] <d_bot> <Kakadu> @Wulfman does this lib have any functions with a type `'a -> 'a t` ?
[14:05:09] <d_bot> <Wulfman> Well yes, you have a `return`
[14:27:38] <Anarchos> I try to use Fmt to format text : i want to format "Ax(1)" with "Ax" in Cyan and "1" in white. I come up with  Fmt.(( styled `Bold (styled `Cyan string)) ++ char ++ int ++ char) f id '(' i ')'
[14:27:52] <Anarchos> but (++) doesn't seem to be concatenation of format strings ?
[14:29:17] <d_bot> <Wulfman> > wulfman maybe use some parentheses ?
[14:29:18] <d_bot> <Wulfman> you mean in the code or in the question ðŸ˜…  ?
[14:30:21] <Anarchos> Wulfman in the code, of course...
[14:37:30] <humasect> ocaml concat is (^) , in haskell it is (++)
[14:37:45] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[14:38:55] <Anarchos> humasect are you aware i am speaking of the library Fmt : https://erratique.ch/software/fmt/doc/Fmt/index.html#val-(++)
[14:39:16] <humasect> Anarchos: ahh
[14:39:56] <humasect> but it looks as though 'concat' acts differently
[14:41:43] <octachron> Anarchos, "Fmt.pf "%a(%a)" Fmt.(styled `Cyan string) "Ax" Fmt.(styled `Bold int) 1"
[14:43:21] <octachron> (++) is the concatenation of printers
[14:46:31] <Anarchos> octachron i  could not grasp dbunzli logic....
[14:47:26] <Drup> in this case, it's not dbunzli's logic, it's exactly how Format works
[14:53:39] <Anarchos> octachron you mean Fmt.pf Fmt.stdout "%a(%a)" .... ?
[14:54:27] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[14:55:16] <octachron> In fact, either `Fmt.pf ppf` or `Fmt.pr`.
[14:55:17] <Anarchos> so every format specifier ends up being %a, and Fmt is used to format every basic type, is that right ?
[14:55:56] <Drup> if you want to style, yes
[14:57:38] <Anarchos> and to finish my line with a return, should i put \n in the format, or use "%a" and "Fmt.cut" ?
[14:58:54] <octachron> It is better to never use `\n` with Format/Fmt.
[14:59:02] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Ping timeout: 240 seconds)
[14:59:08] <octachron> You can use `@,`.
[15:00:04] <octachron> If you are ending a message to the tty/log, you can use `@.` (which also resets the formatting engine)
[15:03:17] <Anarchos> octachron yes it is the end of my log
[15:07:44] *** Quits: humasect (~humasect@2001:1970:57e0:4100::9e43) (Quit: Leaving...)
[15:11:17] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[15:17:00] <Anarchos> octachron thanks for the help
[15:19:08] *** Quits: noze (~uber@2001:41d0:a:21f1::1) (Remote host closed the connection)
[15:22:55] <d_bot> <leviroth> @Wulfman I'm not sure `<*` and `*>` are particularly likely to be useful with Command. They're probably just there because they're part of the applicative interface that Command follows.
[15:28:22] <d_bot> <leviroth> For constructing `Command.Param.t`s, I like to use the let syntax, example: https://github.com/janestreet/sexp/blob/6127c1d8ce909ce49b8460ed2460dc23b7a0bd60/bin/main_print.ml
[15:29:07] <d_bot> <leviroth> Though if I were writing that example, I would get rid of the `let open Command.Let_syntax in` and instead write `let%map_open.Command`.
[15:30:32] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[15:32:59] *** Joins: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2)
[15:34:53] *** Quits: asm (~alexander@burner.asm89.io) (Changing host)
[15:34:53] *** Joins: asm (~alexander@user/asm)
[15:47:46] *** Quits: mro (~mro@2002:5cc3:8f31:0:a8b5:7ec4:b290:8ee2) (Ping timeout: 265 seconds)
[16:27:02] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[16:29:23] <d_bot> <cemerick> Okay, I'll file an umbrella issue and try to capture good testcases of each missing piece. I was going to submit PRs for at least some of them, but I honestly don't grok how the svg bits are working (or, how they _should_ work, I guess), while I basically understand the HTML/XML side.
[16:29:33] <d_bot> <cemerick> Maybe I'll take another swing at some point ðŸ™‚
[16:31:34] <d_bot> <cemerick> Your efforts are greatly appreciated in any case, tyxml is great!
[16:31:59] <d_bot> <cemerick> taking on svg in the first place is a little mad lol
[16:33:44] *** Joins: mro_ (~mro@2002:5cc3:8f31:0:9481:ee02:cc56:ef39)
[16:34:24] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Ping timeout: 256 seconds)
[16:39:58] *** Quits: mro_ (~mro@2002:5cc3:8f31:0:9481:ee02:cc56:ef39) (Remote host closed the connection)
[16:46:00] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[16:50:51] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Ping timeout: 256 seconds)
[16:54:05] <d_bot> <Drup> thanks ðŸ˜Š
[17:04:47] *** Quits: Guest4325 (~bobo@37.165.143.193) (Remote host closed the connection)
[17:06:22] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[17:08:10] *** Joins: Guest4325 (~bobo@37.165.143.193)
[17:10:32] <d_bot> <darrenldl> is there ongoing effort on ocaml implementation of wireguard? (or some binding usable in mirage)
[17:14:35] <hannes_> darrenIdl: the most recent approach I am aware of is https://github.com/janestreet/noise-wireguard-ocaml/ which is not ready for MirageOS, but may be straightforward to use there (port to lwt, use mirage-crypto{-ec} and digestif)
[17:16:09] *** hannes_ is now known as hannes
[17:17:58] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Ping timeout: 260 seconds)
[17:42:20] <d_bot> <darrenldl> hannes_: cheers. been a while since last commit though hmm, shall check it out in more detail
[17:42:44] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:46:46] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[17:51:35] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Ping timeout: 252 seconds)
[17:57:17] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[18:07:17] *** Joins: mro (~mro@2002:5cc3:8f31:0:e871:d5e5:f37e:e476)
[18:13:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[18:24:00] *** Quits: wagle (~wagle@quassel.wagle.io) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:33] *** Joins: wagle (~wagle@quassel.wagle.io)
[18:25:38] *** Quits: mro (~mro@2002:5cc3:8f31:0:e871:d5e5:f37e:e476) (Remote host closed the connection)
[18:25:51] *** Joins: beise (~beise@85.17.52.17)
[18:41:54] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[18:44:56] *** Joins: Haudegen (~quassel@91.114.49.10)
[18:45:33] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[18:45:42] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[18:45:49] *** Quits: Guest4325 (~bobo@37.165.143.193) (Read error: Connection reset by peer)
[18:46:34] *** Joins: Guest4325 (~bobo@37.172.101.14)
[18:51:23] *** Joins: zebrag (~chris@user/zebrag)
[19:04:26] *** p4bl01 is now known as p4bl0
[19:06:42] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[19:07:45] *** Joins: SdeSousa (~SdeSousa@2001:818:db64:7500:e8e3:8725:aa51:16be)
[19:18:30] <d_bot> <injuly> Damm we got some frank herbert fans here
[19:18:33] <d_bot> <injuly> Go #dune !
[19:53:38] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Quit: Leaving...)
[20:09:35] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[20:13:12] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[20:14:00] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[20:16:47] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:32:02] *** Joins: gareppa (~gareppa@user/gareppa)
[20:34:27] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:34:48] *** Joins: olle (~olle@i5E866D88.versanet.de)
[21:07:54] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[21:11:34] *** Quits: kakadu (~kakadu@195.19.236.234) (Quit: Konversation terminated!)
[21:22:28] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Read error: Connection reset by peer)
[21:25:08] *** Quits: bartholin (~bartholin@158.110.70.215) (Quit: Leaving)
[21:26:22] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[21:27:30] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:01:15] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:02:56] *** Joins: mro (~mro@port-92-195-143-49.dynamic.as20676.net)
[22:03:22] *** Quits: mro (~mro@port-92-195-143-49.dynamic.as20676.net) (Remote host closed the connection)
[22:12:37] *** Quits: SdeSousa (~SdeSousa@2001:818:db64:7500:e8e3:8725:aa51:16be) (Ping timeout: 256 seconds)
[22:23:38] *** Quits: mbuf (~Shakthi@122.178.176.47) (Quit: Leaving)
[22:23:38] *** Quits: olle (~olle@i5E866D88.versanet.de) (Ping timeout: 260 seconds)
[22:33:00] *** Joins: Guest8 (~Guest8@88-149-66-61.du.xdsl.is)
[22:50:13] <Guest8> hey, my build is failing with "Error: syntax error" the location it hints at is past the end of input so I have no clue whats going on
[22:52:31] <d_bot> <NULL> What's your code ?
[22:53:57] <Guest8> it had something to do with ; vs ;; apparently
[22:54:01] <Guest8> seems to be working now
[23:25:40] <d_bot> <ostera> has there been any interest in upstreaming the work Bob Zhang did on extending Lambda (particularly the Pmakeblock extension)?
[23:38:51] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 256 seconds)
[23:40:02] *** Joins: SdeSousa (~SdeSousa@2001:818:db64:7500:e8e3:8725:aa51:16be)
[23:40:27] *** Joins: olle (~olle@i5E866D88.versanet.de)
[23:41:04] *** Quits: Guest8 (~Guest8@88-149-66-61.du.xdsl.is) (Quit: Client closed)
[23:47:07] <d_bot> <ostera> this is super useful for building backends from lambda rather than the typedtree or bytecode, with what would otherwise be lost information (eg., is this block a module, a record, etc)
[23:47:07] <d_bot> <ostera>
[23:47:09] <d_bot> <ostera> https://github.com/rescript-lang/rescript-compiler/blob/master/jscomp/ml/lambda.mli#L41-L64
[23:47:31] *** Joins: mro (~mro@2002:5cc3:8f31:0:b8c9:9c5d:86b9:b2e4)
[23:48:21] <d_bot> <ostera> alas, i'm definitely missing a thing or two wrt the block representation
[23:48:28] <d_bot> <ostera> but i thought i'd ask here first
[23:48:45] <d_bot> <octachron> I don't remember anyone trying to upstream any ReScript features
