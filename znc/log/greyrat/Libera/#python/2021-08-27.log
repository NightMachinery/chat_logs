[00:01:07] <OliverUK> p-i-: Ah, might not be possible to do what I want then
[00:01:10] <OliverUK> Not to worry
[00:01:37] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[00:01:37] <gloin> Trying to figure out a logic error. What I'm trying to get is a nested dict like {'eth0': {'ipv4': '1.2.3.4', 'ipv6': 'fe80:1', 'MAC': '00:50:12:12:12:12'}, 'eth1': {#interface stuff like eth0}} but I'm assigning things the wrong way somehow: https://bpa.st/YH6Q
[00:02:04] <nedbat> OliverUK: you can choose a random value from a generator without running the whole generator, or storing all the values.
[00:02:58] <nedbat> OliverUK: hmm, maybe.
[00:04:34] <p-i-> gloin: you're repeatedly populating the inter[0] key
[00:04:50] <nedbat> OliverUK: you can do it without storing all the values, but you do have to iterate the entire generator
[00:04:57] <p-i-> Did you try printing out inter each iteration?
[00:05:09] <nedbat> OliverUK: look at "one-pass solution" here: https://medium.com/swlh/how-to-get-a-random-line-from-a-file-one-pass-solution-using-python-901f3ff4ac82
[00:05:34] <ammar2> OliverUK: do you know how many elements your generator is going to generate?
[00:05:53] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[00:06:33] <nedbat> OliverUK: here's a shorter explanation: https://www.oreilly.com/library/view/python-cookbook/0596001673/ch04s06.html
[00:06:41] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:07:31] *** Joins: skali (~skali@178.214.254.136)
[00:07:36] *** Quits: Raichvent (~Raichvent@raik.cc) (Ping timeout: 276 seconds)
[00:07:43] *** Quits: Allegretto (~allegrett@78-131-16-239.pool.digikabel.hu) (Ping timeout: 252 seconds)
[00:07:43] <gloin> p-i-: yeah, it says "eth0" three times, then "eth1" three times
[00:07:43] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:07:53] *** Quits: skali (~skali@178.214.254.136) (Client Quit)
[00:08:00] <gloin> I'm trying to add entries to each, not repopulate
[00:08:09] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 248 seconds)
[00:08:11] *** Joins: digilink (~digilink@user/digilink)
[00:08:24] <gloin> three times matches the number of entries I expect
[00:08:48] <p-i-> gloin: Did you put debug prints in the if statements?
[00:09:19] <gloin> I put it right after "for subs in inter[1]:"
[00:09:32] <OliverUK> It's okay, my code works for now, I was able to generate a few million strings so that'll get us started
[00:09:41] <p-i-> gloin: Try checking if the 'if's are getting hit
[00:10:29] <gloin> They are - I was printing the output of subs.address prior to setting them to a variable
[00:10:41] <gloin> oh jeez
[00:10:42] *** Parts: friddo (~friddo@94.147.158.188) ()
[00:10:45] <gloin> lol I think I see what's going on
[00:10:56] <gloin> all_interfaces[inter[0]] = current_interface["ipv4"] = subs.address
[00:11:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:11:07] <gloin> how many assignments did I add there
[00:12:03] <gloin> actually, is that valid?
[00:12:22] <p-i-> I had to check it in ipython myself as it looked odd
[00:12:26] <p-i-> seems to work
[00:12:43] <p-i-> a=b=2
[00:13:16] <gloin> so anyhow I put those print statements in each if and it printed the same, expected values of eth0 3x, eth1 3x
[00:13:25] <gloin> so I'm at least working on the right interfaces each time
[00:13:51] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9d7c-c2fd-8741-43d9.res6.spectrum.com)
[00:14:53] *** Joins: lastshell (~lastshell@user/lastshell)
[00:15:31] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:16:49] *** Quits: MacGyver (~macgyver@user/macgyver) (Remote host closed the connection)
[00:16:54] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[00:19:01] *** Joins: MacGyver (~macgyver@user/macgyver)
[00:19:51] *** Joins: Allegretto (~allegrett@91-83-192-103.pool.digikabel.hu)
[00:20:03] <gloin> alright, getting there - I've at least got the nested dict being created - this is a variable scope problem
[00:21:18] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[00:21:59] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[00:22:48] <ash_worksi> this isn't really a python question, but I'm not sure where to ask: does anyone know if you can search history in `hangups` -- the console app for google hangouts
[00:23:37] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 248 seconds)
[00:24:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:24:30] <jean-luc> -_-
[00:25:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:25:45] *** amblina is now known as amblina[m]
[00:25:50] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:26:54] *** amblina[m] is now known as amblina
[00:28:27] *** Joins: Auron (Auron956@user/auron)
[00:29:57] *** Joins: Pickchea (~private@user/pickchea)
[00:30:10] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:596:1858:3d2d:8f70) (Ping timeout: 240 seconds)
[00:31:33] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:7aef:abde:d5ad:bb0c)
[00:33:14] *** Joins: MikZyth (~MikZyth@188.65.242.195)
[00:33:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[00:34:13] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[00:36:01] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:36:33] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:36:34] <SirScott> any suggestions for parsing systemd unit files? Using configparser, I get errors about duplicate options as I have multiple "Environment=..." lines in the [Service] section.
[00:36:44] *** Joins: ano (~ano@user/ano)
[00:37:08] *** Joins: Myst (~Myst@user/myst)
[00:37:47] <Myst> Hello, I've a question about setup.cfg packaging (build --sdist --wheel)
[00:37:47] <Myst> When I do "C:\Python39\python.exe -m build --sdist --wheel ." I only got the .py in my options.packages folder and not the subdirectories, how I can include these.py and the subdirectories in the same package ?
[00:38:52] *** Joins: martums (~martums@user/martums)
[00:39:55] <nedbat> Myst: naming a package does not include its subdirectories. you can tell setup.cfg to find the packages: https://setuptools.readthedocs.io/en/latest/userguide/package_discovery.html
[00:40:07] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[00:40:13] <grym> jinx
[00:41:11] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:42:46] <aphysically> What way would you suggest to determine the type of an object I'm not sure about? I'd been using type(object), but sometimes it returns generic types mypy doesn't like
[00:43:27] <nedbat> aphysically: who wrote the code? Also, what types doesn't mypy like?
[00:44:01] <aphysically> I was repeatedly trying to raise all exceptions for some futures when I closed them, so I was trying writing a little subroutine: https://bpa.st/RDNQ
[00:44:23] <aphysically> it says the future is of type concurrent.futures._base.Future
[00:44:36] <aphysically> this feels wrong because _base suggestions it's internal, but also because mypy complains:
[00:44:38] <aphysically> .scripts/pyffstream.py:1250: error: Missing type parameters for generic type "Future"
[00:45:04] <aphysically> the type printout is <class 'concurrent.futures._base.Future'>
[00:46:15] <Myst> nedbat I tried this, but I get the opposite, I've the subdirectories (and theirs .py) but not the .py in my "main" folder. (find: or find_namespace:)
[00:46:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:47:47] <aphysically> How would you recommend I annotate the futures here? the futures are ones submitted to a ThreadPoolExecutor
[00:47:48] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[00:48:08] <nedbat> aphysically: 1) I wonder if type hinting this completely is worth the effort. 2) you can try printing type(object).__mro__ to see all of the classes it is an instance of.
[00:48:57] <rendar> i have a coroutine `while True: line = await get_input('> ', is_password=False)`  to get prompt lines from command line.. now i want a temporary prompt to get a password, so i have to change the prompt text and is_password=True, but how to do this from another coroutine?
[00:49:29] <aphysically> re 1) I'm not completely convinced of exhaustive type hinting myself, but I think it makes sense to continue the effort in this script I'm writing mostly self-pedagogically to make sure I'm comfortable with even thornier issues that may crop up later
[00:49:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:50:11] *** Quits: FLHerne (flh@flherne.uk) (Ping timeout: 252 seconds)
[00:51:09] <aphysically> (<class 'concurrent.futures._base.Future'>, <class 'object'>)
[00:51:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[00:51:50] <nedbat> aphysically: you can call it  concurrent.futures.Future
[00:52:27] <Payam> hi dears, I would like to return all the values of a list that are greater than a value, perferebly using a map lambda function : https://bpa.st/HFKQ
[00:52:46] <Payam> This example returns only true and false, is it possible to return the values?
[00:52:57] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Ping timeout: 248 seconds)
[00:53:00] <grym> Payam: [val for val in x if val>=2]
[00:53:03] *** Joins: FLHerne (flh@flherne.uk)
[00:53:15] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[00:53:23] <grym> (comprehensions are more idiomatic, especially if you're gonna list(map())
[00:53:26] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[00:53:36] <aphysically> nedbat: ah, that's not internal _base anymore, but still a generic that mypy complains about. I just remembered about reveal_type though! .scripts/pyffstream.py:1267: note: Revealed type is "builtins.list[concurrent.futures._base.Future[None]]"
[00:54:13] <Payam> grym, yeah. how about filter?
[00:54:24] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:54:33] <Myst> I don't understand why my files are ignored :(
[00:54:44] <Payam> list(filter(lambda x: x>2, input))
[00:54:47] <grym> Payam: (val for val in x if val>=2, then
[00:54:50] <nedbat> Myst: link us to your repo
[00:54:57] <grym> Payam: (val for val in x if val>=2), then, if you want it lazy like filter
[00:54:58] <Payam> grym, which one would you perferr?
[00:55:03] <grym> Payam: well, do you want a list?
[00:55:07] <Payam> yes
[00:55:11] <grym> listcomp, then
[00:55:11] <Myst> nedbat: https://github.com/LeMyst/WikibaseIntegrator
[00:55:19] *** Quits: kn10003 (~kn100@wireguard/tunneler/kn100) (Remote host closed the connection)
[00:55:34] <Payam> grym, for huge amount of data would you perferr list(filter.. or listcomp?
[00:55:46] <grym> Payam: gencomp
[00:55:51] <Myst> nedbat: branch rewrite_wbi
[00:55:53] <grym> the ( form, not the [ form
[00:55:59] <Payam> yes I know.
[00:56:00] <grym> and then iterate over it or listify as required
[00:56:12] <Payam> hmm. but isn
[00:56:25] <Payam> but isn't list(filter... faster?
[00:56:34] <Payam> than the list comp
[00:56:35] <grym> i have no idea and i kind of don't care
[00:56:38] <grym> you can test it
[00:56:53] <Payam> yes i will do a timeit
[00:56:59] *** Joins: kn10003 (~kn100@wireguard/tunneler/kn100)
[00:58:17] <nedbat> Payam: is this the slow part of your program?
[00:58:38] <Payam> nedbat, not at all. Just experimenting. Gonna be an expert in python
[00:58:46] <deniska> (list comp doesn't do function calls, filter does one per element)
[00:59:02] <nedbat> Payam: many experts don't pay any attention to micro-optimization questions
[00:59:15] <deniska> but yeah, it's very rarely a slow part of a program
[00:59:18] <Payam> nedbat, I am open for suggestion where to dig more into
[00:59:19] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 250 seconds)
[00:59:39] <nedbat> Myst: you have "packages = wikibaseintegrator" in this branch
[01:00:46] <Myst> I do tests on my own computer before pushing to the repository, you can see my current here https://bpa.st/E44Q
[01:00:56] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:7aef:abde:d5ad:bb0c) (Ping timeout: 250 seconds)
[01:00:57] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 248 seconds)
[01:00:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:01:05] <nedbat> Myst: why point me to a branch that doesn't have the latest code?
[01:01:47] <Myst> I only have changes in the setup.cfg
[01:02:12] <nedbat> Myst: right, something you didn't mention :(
[01:02:33] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 248 seconds)
[01:02:35] <Payam> so filter itself is a generator
[01:02:49] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[01:04:15] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[01:04:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:05:12] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[01:05:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:05:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:06:02] *** Joins: blingrang_ (~blingrang@user/blingrang)
[01:06:05] <Payam> I din
[01:06:07] <Payam> sorry
[01:06:28] <Payam> I though that you can not loop over the same generator twice. but when I try it in ipython I can.
[01:06:42] <Myst> The result of python build... : https://bpa.st/CEOA
[01:06:52] <nedbat> Payam: you are probably restarting the generator
[01:06:58] *** Joins: syxi (~sy@omega.zm.is)
[01:08:11] <nedbat> Myst: you want all of this to be within the wikibaseintegrator package, right?
[01:08:19] <Myst> yes
[01:08:48] <nedbat> Myst: remove the package_dir setting
[01:08:51] <syxi> Hello everyone, I'm trying to use topic modelling on a live stream of data. How is the best way to go about this? All the examples online I see are for large static sets. My approach of using a growing dictionary that new content is added to, is likely to run out of memory, and I'm not sure a fixed size one is solving anything. Is there a way to do this with gensim without seemingly having to fool
[01:08:51] <syxi> corpora.Dictionary with a list containing only one entry?
[01:09:30] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[01:10:13] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:10:30] *** Quits: Elzington_ (~Elzington@68.235.43.109) (Quit: Leaving)
[01:10:35] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[01:10:40] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[01:10:59] <Myst> nedbat: only this setting? I get an error: https://bpa.st/XQWQ
[01:11:24] <nedbat> Myst: sorry, i don't know
[01:11:53] <Myst> nedbat: :( Thank you for your time!
[01:12:56] *** Joins: nomic (~nomic@185.217.117.169)
[01:13:30] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[01:13:40] *** Joins: blingrang_ (~blingrang@user/blingrang)
[01:16:51] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[01:19:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:19:53] *** Joins: jwhisnant_ (~jwhisnant@user/jwhisnant)
[01:20:26] *** Quits: niv (~niv@limbo.cypherpunks.io) (Ping timeout: 250 seconds)
[01:20:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:21:10] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[01:21:25] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[01:21:52] *** Joins: fikran (~fikran@user/fikran)
[01:22:07] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[01:22:08] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:23:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:25:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:25:12] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:26:11] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 250 seconds)
[01:26:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:27:54] *** Joins: Elzington (~Elzington@68.235.43.173)
[01:28:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:28:10] *** Joins: y1n (~y1n@84-115-65-30.wifi.dynamic.surfer.at)
[01:28:10] *** Joins: Alan3 (~alan@user/alan)
[01:28:29] *** Joins: southey (~foxtrot@user/foxtrot)
[01:28:38] *** Joins: mchlumsky8 (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[01:28:38] *** Joins: MJ94_ (mj94@user/mj94)
[01:28:39] *** Joins: JayDoubleu_ (sid339529@id-339529.stonehaven.irccloud.com)
[01:28:46] *** Joins: kiska4 (~kiska@user/kiska)
[01:28:48] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[01:28:48] *** Joins: BrenBarn1 (~brenbarn@2001:470:69fc:105::2da2)
[01:29:01] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:259c:2413:d1f1:9fbc) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:01] *** Joins: Lvl4Sword_ (sid483043@user/lvl4sword)
[01:29:17] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:29:21] *** Joins: znf_ (~ibm86@toaster.linge-ma.ro)
[01:29:50] *** Joins: Fossil_ (~Fossil@2a03:b0c0:0:1010::398:b001)
[01:29:55] *** Joins: dthpulse_ (~quassel@podciarou.sk)
[01:30:07] *** Joins: beanzilla_ (beanzilla@user/beanzilla)
[01:30:08] *** Joins: ironfroggy_ (sid495156@id-495156.tooting.irccloud.com)
[01:30:13] *** Joins: libussa_ (~libussa@libussa.net)
[01:30:18] *** Joins: dTal_ (quassel@dragonbox/wizzard/dtal)
[01:30:54] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[01:31:04] *** Joins: LSD (~LSD@2.lsd.systems)
[01:31:23] *** Joins: d3fn (~n0b0dy@user/defn)
[01:31:43] *** Quits: JayDoubleu (sid339529@id-339529.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: kiska (~kiska@user/kiska) (Quit: Ping timeout (120 seconds))
[01:31:43] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[01:31:43] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: dthpulse (~quassel@podciarou.sk) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: beanzilla (~beanzilla@user/beanzilla) (Remote host closed the connection)
[01:31:43] *** Quits: ironfroggy (sid495156@id-495156.tooting.irccloud.com) (Read error: Connection reset by peer)
[01:31:43] *** Quits: acidsys (~LSD@2.lsd.systems) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: Masklin (~joel@89-233-200-127.cust.bredband2.com) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: maxpowa (~maxpowa@107.150.39.146) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (Read error: Connection reset by peer)
[01:31:43] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:31:43] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Read error: Connection reset by peer)
[01:31:43] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Remote host closed the connection)
[01:31:43] *** Quits: Alan (~alan@user/alan) (Read error: Connection reset by peer)
[01:31:43] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: crazysim (sid86009@id-86009.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (Ping timeout: 276 seconds)
[01:31:43] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Ping timeout: 276 seconds)
[01:31:43] *** kiska4 is now known as kiska
[01:31:43] *** JayDoubleu_ is now known as JayDoubleu
[01:31:43] *** Alan3 is now known as Alan
[01:31:43] *** Fossil_ is now known as Fossil
[01:31:43] *** ironfroggy_ is now known as ironfroggy
[01:31:44] *** Lvl4Sword_ is now known as Lvl4Sword
[01:31:44] *** mchlumsky8 is now known as mchlumsky
[01:31:49] *** Quits: MJ94 (mj94@user/mj94) (Read error: Connection reset by peer)
[01:31:49] *** MJ94_ is now known as MJ94
[01:31:52] *** beanzilla_ is now known as beanzilla
[01:32:06] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 276 seconds)
[01:32:06] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 276 seconds)
[01:32:06] *** Quits: foxtrot (~foxtrot@user/foxtrot) (Ping timeout: 276 seconds)
[01:32:07] *** Joins: crazysim (sid86009@id-86009.stonehaven.irccloud.com)
[01:32:08] *** Joins: canardo1 (~canardo@2001:470:69fc:105::e110)
[01:32:13] *** Quits: libussa (~libussa@libussa.net) (Read error: Connection reset by peer)
[01:32:38] *** Joins: morgabra (sid500580@user/morgabra)
[01:32:48] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:33:49] *** dTal_ is now known as dTal
[01:37:20] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[01:38:15] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:39:02] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Quit: Leaving...)
[01:39:38] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:40:42] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:40:47] *** Joins: aead (~aead@user/aead)
[01:42:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[01:42:42] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[01:43:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[01:43:36] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[01:44:12] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[01:44:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:45:13] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:45:30] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:45:41] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[01:46:26] *** Quits: lastshell (~lastshell@user/lastshell) (Read error: Connection reset by peer)
[01:46:45] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:47:53] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (Ping timeout: 248 seconds)
[01:48:06] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:48:37] *** Joins: besnn (~besnn@user/besnn)
[01:51:43] *** Quits: delarge (~v@ctm.linuxers.cl) (Quit: leaving)
[01:52:51] *** Joins: delarge (~v@ctm.linuxers.cl)
[01:53:19] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[01:53:26] <Gurkenglas> Suppose foo has function argument bar and I make bar use yield. Can I thus make foo yield?
[01:53:56] <Repiphany> yield from bar()
[01:53:58] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:54:36] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[01:55:02] <Repiphany> or `for b in bar(): <...process b>; yield blah`?
[01:57:33] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:58:22] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[01:59:20] *** LSD is now known as acidsys
[01:59:47] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:01:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:02:28] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:d073:8b5b:cf40:6020) (Ping timeout: 250 seconds)
[02:07:12] *** LabMonkey is now known as Mechanismus
[02:08:50] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:10:20] *** Joins: cedric (~cedric@2a01:cb11:867:c200:4236:3085:b28d:bb06)
[02:12:04] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[02:12:34] *** Joins: c10l (~c10l@89.34.167.207)
[02:12:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:12:48] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[02:14:34] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:303e:5b49:2ced:cafd)
[02:14:47] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Ping timeout: 240 seconds)
[02:14:50] *** Joins: Guest26_ (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net)
[02:14:51] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[02:17:23] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[02:18:53] <Myst> nedbat: simply replacing my packages=wikibaseintegrator by packages=find: was enough
[02:18:53] <Myst> I'm sure I tested this at one time before asking here :/ maybe I got some cache issues at one time
[02:18:53] <Myst> The code on my repository is up to date if you want to check
[02:18:53] <Myst> Thank you again for your time
[02:19:12] <nedbat> Myst: glad you found the answer
[02:19:54] *** Joins: erica (~erica@user/erica)
[02:20:49] *** Quits: y1n (~y1n@84-115-65-30.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[02:21:07] *** Joins: Papa (~papa@user/papa)
[02:21:50] *** Quits: Barones (~Barones@2804:48dc:8500:0:d14e:a4cd:a71a:dece) (Quit: Leaving)
[02:24:50] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[02:25:30] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[02:25:35] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:26:37] *** Joins: akimbo (~thelounge@customer-145-40-27-9.stosn.net)
[02:26:55] *** Joins: theprophet (~theprophe@85.114.228.184)
[02:27:06] <theprophet> hello everybody. can you help me with little problem i am having with python? i am trying to understand super() and i got kind of lost while learning. does super() overrides __init__ method in parent class if super() is called in child class with a slight change? like maybe one more atribute was added?
[02:27:51] <stealth_> super() calls the parent __init__
[02:28:36] <stealth_> if you subclass `__init__` parent `__init__` is not run, with `super().__init__` you are saying, also run parent `__init__` method.
[02:29:23] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[02:29:27] <theprophet> no no  thats not what i am asking, sorry let me be more specific
[02:29:53] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[02:30:06] <mdk> So super() don't call __init__, super allow you to call the parent __init__ (or any other method on the parent)
[02:30:32] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[02:30:33] *** Joins: jwhisnant_ (~jwhisnant@user/jwhisnant)
[02:32:46] <theprophet> stealth_ for example iimagine a parent class with a __init__ which has atributes, and then imagine child class of that parent class and that child class has super(),  meanwhille both parent and a child class have method with same name, and i add something new to child class under super(), does this mean that i am overiding the init method in parent
[02:32:47] <theprophet> class?
[02:32:54] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Client Quit)
[02:33:01] *** Joins: y1n (~y1n@84-115-65-32.wifi.dynamic.surfer.at)
[02:33:18] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[02:33:22] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[02:34:48] <mdk> theprophet: can you provide a toy example? It's not clear for me when you say "child class has super()"
[02:35:04] <stealth_> theprophet, hmm... no! when you call super() you are calling parent __init__ maybe you could change the value you pass to it
[02:35:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[02:35:10] <mdk> theprophet: but super() does no magic, it only give you a way to call methods on your parent class, that's it.
[02:35:16] <theprophet> ok i will paste pastebin link
[02:35:54] *** pizzaiolo is now known as pizza
[02:35:57] <stealth_> theprophet, also ya, if you write a simple test example you can see it in action what is happen, wring some dummy `print(...)` to identify methods
[02:36:35] *** Joins: fofoni (~fofoni@user/fofoni)
[02:37:39] <lxer> theprophet: do you know about method resolution order?
[02:37:50] <lxer> might want to look into that
[02:38:09] <theprophet> kind of yes not entirly but yes
[02:38:22] <theprophet> i know the logic of it yes
[02:38:25] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[02:41:07] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[02:43:32] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:45:16] <theprophet> here is the link of my code on pastebin https://pastebin.com/QDxGEwx4
[02:46:03] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Read error: Connection reset by peer)
[02:46:25] *** Quits: Narrat (~omnius@p200300df5f01471506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:47:21] <theprophet> as you can see there 3 objects cat goat and a dog. and all of them methods with similar, name and only dog has something color atribute inside. so does this mean that  i override the init method inside the cat class?
[02:47:29] *** Joins: heco (~redrum@user/redrum88)
[02:47:32] <theprophet> there are*
[02:47:34] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[02:47:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:47:58] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:48:05] *** Quits: doko (~doko@2a02:8106:1a:7600:6f3d:557c:584b:716d) (Ping timeout: 250 seconds)
[02:48:06] <stealth_> theprophet, add some `print()` inside your methods to identify it, then you can see what is happening when you run it
[02:48:08] <theprophet> as you can see there are  3 objects cat goat and a dog. and all of them methods with similar, name and only dog has new color atribute inside. so does this mean that  i override the init method inside the cat class?
[02:48:49] <theprophet> what do you mean by that, can you be more specific please?
[02:49:20] <theprophet> dont they already have those print methods? like meow , beee and bark?
[02:50:48] <KirkMcDonald> theprophet: If cat.__init__ assigns to self.name, and then dog.__init__ also assigns to self.name, then it is the same attribute; `self` only has the one attribute dict.
[02:51:06] <KirkMcDonald> One will overwrite the other.
[02:52:21] *** Joins: Fiji (~Fiji@user/fiji)
[02:52:27] <gloin> I'm understanding right that dict is just a set of key-value pairs, right? And that assigning a new key/value pair to that dict should simply add another entry, right? Because that's not the behavior I'm seeing here: https://bpa.st/GDIQ
[02:52:30] <theprophet> oh i see, so i am overwriting the cat init with the goat super()? cause i got a name atribute there?
[02:53:00] <gloin> it looks like the dict is being overwritten entirely each time I attempt to add a new key/value pair to it
[02:54:01] <KirkMcDonald> gloin: You appear to be making a new dict on each iteration of the loop.
[02:54:06] <theprophet> if so, how come that goat still has the its own name when printed and cat has its own and nothing is messing up?
[02:54:40] <gloin> KirkMcDonald: that's the behavior I'm seeing. What I want to do is add entries to the dict, not wipe it each time
[02:54:43] <grym> gloin: move line two to ablve line one
[02:54:44] <KirkMcDonald> theprophet: Each instance of each class is still a separate object, with its own attributes.
[02:55:00] <gloin> grym: lol
[02:55:01] <grym> gloin: s/2/1, outdent, try again.  sorry, keyboard went insane
[02:55:13] <gloin> yeah I think I see what you mean
[02:55:18] <KirkMcDonald> gloin: Lines 2 and 6 are the key ones, here.
[02:55:19] <theprophet> ohh, i see, i see. so it is better not the add the same atribute name in super right?
[02:55:26] * gloin is still _much_ more comfortable with curly braces than indent
[02:55:40] <KirkMcDonald> theprophet: The goat class's __init__ method is entirely redundant.
[02:55:41] <grym> gloin: https://bpa.st/STQA  that
[02:55:41] *** Quits: sazawal (~sazawal@182.64.58.123) (Quit: Leaving)
[02:56:08] <grym> gloin: uh, yes, and the other dict too
[02:56:11] <grym> as KirkMcDonald says
[02:56:47] <gloin> I knew it was a scoping problem, hah. Didn't realize it was that dumb. Thanks!
[02:56:49] *** Joins: Dotz0cat (~Dotz0cat@h85.15.31.71.dynamic.ip.windstream.net)
[02:56:58] <theprophet> KirkMcDonald i see, since it does not have anytthing differrent inside right?
[02:57:09] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:57:15] <KirkMcDonald> theprophet: You could delete it and nothing would change.
[02:57:38] <grym> gloin: incidentally it will eventually become useful to know about collections.defaultdict
[02:57:47] <p-i-> For some reason np_arr_of_uint8t.astype(float) is taking a HUGE amount of time
[02:58:04] <grym> p-i-: probably because it's going to a non-numpy dtype
[02:58:07] <theprophet> so i dont actually need super, if i am not planing to add some new atribute to the specific object is that correct?
[02:58:15] <grym> p-i-: is it faster if you say .astype(np.float64)
[02:58:19] <p-i-> ooooh lemme check that
[02:58:41] <p-i-> barely
[02:58:45] <p-i-> 5% faster
[02:59:10] <grym> uint8 is a lot smaller than float64, maybe it's gotta take some time to grab a chunk of memory
[02:59:31] <amblina> Hey there, it looks like multiprocessing is getting the wrong exit code here... https://www.irccloud.com/pastebin/BM4fQ88J/multiprocessing_exitcode_issue.py
[02:59:31] <amblina> Heres the output https://www.irccloud.com/pastebin/A5WzMo6l/out.pytb
[03:00:03] <grym> gloin: (round about the time when you start writing things like `if there's no key by this name, insert it with an empty list as a value, otherwise, append something to it`, usually)
[03:00:06] <theprophet> KirkMcDonald  so i dont actually need super, if i am not planing to add some new atribute to the specific object is that correct?.
[03:00:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:10] <PantelicGR> theprophet: goat's super().__init__(name,age) calls the parent init function and passes name and age as a parameter.
[03:01:36] <KirkMcDonald> theprophet: I would say, you don't need to override __init__, if you don't need to do anything other than call super().__init__.
[03:01:56] <PantelicGR> then name is stored into the object's name and age is stored into the object's age
[03:02:00] *** Joins: Vonter (~Vonter@user/vonter)
[03:02:13] <theprophet> so i can just add some new atribute without super()?
[03:02:25] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[03:02:41] *** Joins: theprophet (~theprophe@85.114.228.184)
[03:02:42] <theprophet> to a specific object, not for everybody ?
[03:02:58] <KirkMcDonald> If you override __init__, then it will not call the superclass's __init__ on its own.
[03:03:08] <KirkMcDonald> That's what super() is for.
[03:03:45] <theprophet> so how do i override init?
[03:03:48] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[03:03:59] <theprophet> by having same method names?
[03:04:19] <amblina> should I raise a bug ticket? This is my first time raising something like this, I don't want to do the wrong thing
[03:04:23] <PantelicGR> theprophet: in line 13 you run self.name= name. That isn't needed because you run super().__init__(name,age)
[03:04:35] <PantelicGR> in lin 12
[03:04:41] <PantelicGR> *in line 12
[03:04:54] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[03:04:55] <KirkMcDonald> theprophet: https://bpa.st/3WZQ
[03:05:12] <theprophet> ok so, having the same atribute after super in chil class means i am overriding the parent init is that correct?
[03:05:23] <PantelicGR> theprophet: no
[03:05:49] <PantelicGR> you just overwrite self.name
[03:05:52] <KirkMcDonald> theprophet: The word "override" has a specific meaning in the context of OOP.
[03:06:11] <theprophet> then what do you mean by overiding the init? how did i do that?
[03:06:28] <theprophet> did i do that in my code?
[03:06:42] <PantelicGR> theprophet: also there is a mistake in line 22: self.name = age instead of self.name = name
[03:06:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[03:06:59] <PantelicGR> which again it is not needed
[03:07:08] <PantelicGR> since you run super().__init__(name,age)
[03:07:28] <KirkMcDonald> theprophet: The `cat` class defines an __init__ method. The `goat` and `dog` class are each a subclass of cat, which also define a method named `__init__`. This is overriding the __init__ method.
[03:07:29] <theprophet> yes i did that on purpose so i can understand that it was uneccessary guys already told me
[03:07:37] <theprophet> PantelicGR
[03:07:41] *** Joins: amblina[m] (~amblinama@2001:470:69fc:105::e2de)
[03:09:22] <theprophet> KirkMcDonald ok i understand, now let me ask you this and thank you for your time, i understand that i dont need super()  or init method in child classes when theres no need, but do i need it if i plan to add some new atribute the to child class?
[03:09:35] <KirkMcDonald> theprophet: Sure.
[03:10:41] <PantelicGR> theprophet: If you add super().__init__(name,age) then you don't have to initialize self.name and self.age
[03:10:49] <PantelicGR> so you need super()
[03:11:03] <theprophet> KirkMcDonald i am sorry if i annoy you, but i got this questions and i dont know how to figure them out.
[03:11:11] <theprophet> PantelicGR yes kirk already told me that thanks man
[03:12:28] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[03:12:55] <PantelicGR> if you want to add a new attribute to your child class you can add it under super().init like you do in line 23: self.color = color
[03:13:11] <theprophet> when  i google all the answers say that super() does not take arguments, but when i tried to do so, it does. i mean  is not name and age are arguments?
[03:13:43] <theprophet> parameter arguments?
[03:15:06] <bjs> theprophet: those are arguments to __init__ not super
[03:15:23] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[03:15:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 250 seconds)
[03:15:49] <theprophet> ok then what is this? can you please explain?   super().__init__(name,age) inside parentheses?
[03:16:24] <PantelicGR> theprophet: super() has no arguments. __init__(name,age) has 2 arguments: name and age
[03:17:33] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:18:05] <theprophet> ohhhhhhhh i get omg, i am so stupid, i get its not a super argument its a part of the  init method that super called
[03:18:33] <PantelicGR> that's true
[03:18:42] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[03:18:45] <PantelicGR> and you are not stupid. you are just learning
[03:19:34] <theprophet> thank you so much man , thanks all of you,.
[03:19:43] <PantelicGR> you are welcome
[03:20:21] <theprophet> ty mam/sir i am greateful
[03:20:35] *** Quits: y1n (~y1n@84-115-65-32.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[03:21:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:21:37] <stealth_> theprophet, https://www.pythonsheets.com/notes/python-new-py3.html?highlight=super#new-super
[03:21:59] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:3cec:2df:79d7:bc58)
[03:22:24] <theprophet> thanks for that i will 100% check it
[03:23:15] *** Joins: reset (~reset@user/reset)
[03:24:23] <theprophet> can i ask you one more question?
[03:25:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[03:25:17] <PantelicGR> theprophet: Don't ask to ask. Just ask your question.
[03:25:49] <theprophet> ok let me quote something and then ill ask
[03:26:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:26:25] <theprophet> If the derived class has any input parameters in common with the parent class, then it should invoke the super() function on those parameters so they get sent to the parent class for instantiation. In other words, if the parent has a self.name attrtibute, then the derived class should send its name parameter to the parent.
[03:26:47] <theprophet> what did he mean by saying  "then the derived class should send its name parameter to the parent."
[03:27:05] <bjs> theprophet: not sure where that quote came from but I guess they mean to do the above, `super().__init__(name)`
[03:27:09] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[03:27:38] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:27:39] <theprophet> https://discuss.codecademy.com/t/does-the-constructor-for-an-inherited-class-have-to-call-the-parent-constructor/361313 thiis is the  topic i was reading
[03:27:48] <theprophet> thats where i quote from
[03:27:57] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:28:40] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[03:29:10] <PantelicGR> theprophet: parent class has self.name and self.age and child class has self.name and self.age. You should run super().__init__(name,age) to instantiate both self.name and self.age of child object at once.
[03:29:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[03:30:09] <PantelicGR> and then instantiate new child attributes under super().__init__
[03:30:22] <theprophet> thats what he meant? not like when you have a same atribute name in child class?
[03:30:26] *** Joins: besnn (~besnn@user/besnn)
[03:30:57] <bjs> theprophet: well it sounds badly written but if your parent has `def __init__(self, name, age, height): ...` then in the child class you should go `super().__init__(some_name, some_age, some_height)`
[03:31:07] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[03:31:15] <bjs> that way the parent's __init__ will be called and setup things properly for you so you don't have to repeat it all
[03:31:17] *** Joins: fikran (~fikran@user/fikran)
[03:31:39] <theprophet> so ok its basssicaly what the guys have already told me
[03:31:52] <PantelicGR> if you have the same attributes in both parent and child class then you could run super().__init__ because the parent class has already a __init__ function ready.
[03:32:58] *** Joins: y1n (~y1n@84-115-65-32.wifi.dynamic.surfer.at)
[03:33:20] <PantelicGR> you don't need to reinvent the wheel for child class
[03:33:36] <theprophet> yes but it was confusing because i tought that guy in that site meant ,you need to have same atribute name super() in child class to work
[03:33:51] <theprophet> in super()*
[03:34:12] <bjs> no you shouldn't have anything in the super() part
[03:34:20] <theprophet> and thats where all my questions and confusion came from
[03:34:54] <theprophet> ok got it , thanks again to everybody, you really shed light on everything i was confused about.
[03:34:55] <PantelicGR> theprophet: that's Inheritance
[03:35:22] <PantelicGR> if something is already written as a function you can call it using super()
[03:35:39] <theprophet> yes, i understand
[03:35:40] <PantelicGR> you don't have to write it again
[03:38:08] *** Joins: Vonter (~Vonter@user/vonter)
[03:40:09] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:41:07] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[03:41:52] *** Joins: travaldo (~travaldo@159.203.88.148)
[03:42:49] <Gurkenglas> Repiphany, I don't control foo's source code though.
[03:43:46] <Repiphany> I don't understand what you're trying to do, then
[03:45:30] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[03:46:21] *** Joins: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net)
[03:46:24] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9d7c-c2fd-8741-43d9.res6.spectrum.com) (Quit: jarthur)
[03:47:04] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:47:44] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[03:48:05] *** Joins: Leliana (is@2a02:2658:1133:0:dead:babe:0:1)
[03:48:11] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:49:45] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-514d-3b06-3b0d-5d8f.res6.spectrum.com) (Read error: Connection reset by peer)
[03:49:49] <Vaurien> Hello, folks, been banging my head over an issue that I've been unable to find any fully workable solution via Googling/searching.  I need to be able to run a program via 'subprocess' that requires user input that MUST be done interactively while displaying the output of the command in real time (in this case, the command is 'terraform apply'; for
[03:49:49] <Vaurien> those who have used Terraform will know what I'm referring to).  The issue I'm hitting with everything I tried is that the user prompt doesn't end in a newline, so the output will "pause" without displaying the final part for the user to see.
[03:50:42] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:51:16] <Vaurien> I had a solution that depended on the final part of the output read matching a certain string, but sadly that won't always be the case (other input might come up).  I'm trying to find a way to 'flush' the output even when a newline hasn't been reached, and so far haven't found a working solution.  Might someone have encountered this before who
[03:51:16] <Vaurien> would know how to help?
[03:53:46] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[03:55:51] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7072-405b-f95f-69ad.res6.spectrum.com)
[03:56:26] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 250 seconds)
[03:57:40] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[03:58:00] <nubonix> looking for some help with asyncio, producer, consumer, and asyncio queue. what im trying to do: i have several servers that i want to check if they are online, and they are online, i want to run a few async coros. id like to do run the few async coros for each server at the same time if there is more than one server online. heres what i have currrently [simplified code] https://bpa.st/3VHQ
[03:58:38] *** Quits: fikran (~fikran@user/fikran) (Remote host closed the connection)
[03:59:10] <PantelicGR> nubonix: There is also #asyncio channel.
[03:59:16] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:59:35] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[04:00:12] <nubonix> PantelicGR: erm, ive asked for help in python for years about asyncio lols :D is asyncio python specific?
[04:00:16] *** Joins: ripdog (~quassel@user/ripdog)
[04:00:31] <nubonix> is #asyncio python specific*
[04:00:43] <PantelicGR> nubonix: yes
[04:00:50] <nubonix> hmm alright, ill try there as well
[04:00:50] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[04:00:51] <nubonix> thanks
[04:00:53] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[04:01:09] <PantelicGR> You could in both channels.
[04:01:16] <PantelicGR> *You could ask
[04:01:28] <nubonix> channel is dead [8 ppl :-/\]]
[04:01:50] <PantelicGR> You could try and see if it's dead.
[04:01:59] <PantelicGR> Also consider time zones.
[04:02:01] <nubonix> will do
[04:02:49] *** Quits: m4r35n357 (~m4r35n357@host-92-13-130-45.as13285.net) (Ping timeout: 248 seconds)
[04:04:39] <greatgatsby> Hi.  Python 3.8, testing package resources (using importlib_resources).  My layout and setup.py:  https://paste.debian.net/1209212/
[04:05:11] <greatgatsby> however, importlib_resources.files("pkg_test") simply gives me a PosixPath to my package directory, no files, not even in the data directory.  Am I misunderstanding what this should be doing?
[04:05:25] <greatgatsby> https://docs.python.org/3/library/importlib.html#importlib.resources.files
[04:08:03] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[04:13:06] *** Joins: m4r35n357 (~m4r35n357@host-92-20-125-21.as13285.net)
[04:13:46] *** Quits: optimant (~prime@user/optimant) (Quit: Quitting)
[04:13:58] *** Joins: optimant (~prime@user/optimant)
[04:14:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:15:07] <nubonix> greatgatsby: yah, google resource_path, its a function, copy the function and use it in place of what ur doing
[04:15:31] *** Joins: brunodOut (~brunodOut@170.84.57.174)
[04:15:37] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[04:16:28] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:41] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[04:18:22] *** Joins: emika6 (~emika@83.136.182.121)
[04:18:40] *** Quits: emika (~emika@83.136.182.26) (Ping timeout: 240 seconds)
[04:18:40] *** emika6 is now known as emika
[04:18:54] *** Joins: ogis_ (~Android@neoau1-133-203-129-172.tky.mesh.ad.jp)
[04:19:04] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 252 seconds)
[04:20:13] *** znf_ is now known as znf
[04:20:25] *** Quits: y1n (~y1n@84-115-65-32.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[04:22:33] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 248 seconds)
[04:24:45] *** Quits: brelod (~me@90.251.226.93) (Quit: leaving)
[04:25:11] *** Quits: cedric (~cedric@2a01:cb11:867:c200:4236:3085:b28d:bb06) (Quit: Konversation terminated!)
[04:26:32] *** Joins: linguist (~brunodOut@170.84.57.174)
[04:26:53] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 250 seconds)
[04:28:21] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:29:45] *** Quits: brunodOut (~brunodOut@170.84.57.174) (Read error: Connection reset by peer)
[04:30:29] *** Quits: wender (~Wender@189.37.67.196) (Quit: Leaving)
[04:30:37] *** Joins: computeiro (~Wender@189.37.67.196)
[04:33:00] *** Joins: y1n (~y1n@84-115-64-142.wifi.dynamic.surfer.at)
[04:33:33] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[04:34:27] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[04:34:55] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[04:36:19] *** Quits: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net) (Quit: Client closed)
[04:36:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:38:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:43:58] *** Joins: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net)
[04:48:03] <Vaurien> (I'm going to assume no one has a good idea on the subprocess question...)
[04:49:25] *** Joins: mago (~mago@87.125.58.80)
[04:49:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:50:26] *** Joins: ikwyl6 (~ikwyl6@2.58.44.226)
[04:50:42] *** Joins: jazzy (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404)
[04:50:50] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[04:51:36] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:53:11] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:54:00] <ikwyl6> I'm having projblems updating some pkgs using pip: https://pastebin.com/M8bkUYKE This same error happens with any other pkg (not just pip). I tried updating pip because I thought maybe that was the issue.. I did update resolvelib to 0.7.1 (using pip) before I have this problem... Anyone know which stable version i should revert to?
[04:55:02] *** Joins: mumixam (~m@user/mumixam)
[04:56:03] <InPhase> ikwyl6: sudo python -m pip can be hazardous, and is generally not recommended.
[04:56:35] *** Joins: p-i-_ (~Ohmu@mx-ll-171.6.224-171.dynamic.3bb.co.th)
[04:57:38] <InPhase> ikwyl6: You have the potential to break operating system features in ways that can make your day unpleasant.
[04:58:09] <ikwyl6> InPhase: if I change 'pip' to any pkg, say, 'arrow' or any other pkg that is '--outdated' I get the same error
[04:58:33] <InPhase> ikwyl6: Yes, you might have already done the damage.
[04:59:29] <muhblockchain> pip install ./downloads/SomePackage-1.0.4.tar.gz
[04:59:40] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:78f6:6880:badc:454d) (Ping timeout: 240 seconds)
[04:59:43] <muhblockchain> how to use pip to download and save to local file the SomePackage-..tar.gz ?
[04:59:49] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 250 seconds)
[04:59:51] <ikwyl6> I upgrades 'acme', 'progress qrcode resolvelib packaging'... if I find the revert version, should I go back to that?
[04:59:53] *** Quits: yte3 (~0@151.15.160.239) (Ping timeout: 248 seconds)
[05:00:13] <muhblockchain> who signs this packages? how to check them on download?  how to re-verify the crypto signature while pip install ./downloads/..local file ?
[05:00:32] *** Quits: mago (~mago@87.125.58.80) (Quit: Client closed)
[05:01:18] <meejah> pip doesn't check signatures, and currently PyPI tries to pretend they don't exist :/
[05:01:47] <stealth_> muhblockchain, find the package and download from https://pypi.org/
[05:03:41] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[05:06:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[05:06:57] <jabberwock> is there an open-source Pythex type GUI (web or thick)?
[05:07:17] <muhblockchain> stealth_: and signatures?
[05:07:25] <muhblockchain> oh it doesn't? lol
[05:07:34] *** Quits: ShorTie (~ShorTie@171.sub-72-105-245.myvzw.com) (Ping timeout: 268 seconds)
[05:07:47] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[05:08:09] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:08:13] <muhblockchain> so the official way of installing python packages is like 10-15 years behind normal distributions (eg like Debian)?
[05:08:15] <stealth_> muhblockchain, https://pypi.org/project/liburing/#modal-close it has hashes
[05:08:24] *** Joins: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com)
[05:08:57] <jabberwock> muhblockchain: maybe you can create a signature db :D
[05:09:07] <muhblockchain> jabberwock: any sane developer would
[05:09:17] <muhblockchain> like, it's 101 of development
[05:09:27] <jabberwock> muhblockchain: where?
[05:09:31] <jabberwock> Not in any big corp. I've seen
[05:09:41] <muhblockchain> jabberwock: I said "sain"
[05:09:52] <jabberwock> you literally typed sane. I'm lost
[05:09:59] <muhblockchain> er, right
[05:10:06] <muhblockchain> any competent developer
[05:10:09] <muhblockchain> of a repository
[05:10:11] <meejah> you could help complete the TUF work for PyPI
[05:10:28] *** Joins: flyingchef (~flyingche@user/flyingchef)
[05:10:28] <InPhase> ikwyl6: If you cannot even run pip at all anymore, one thing you can possibly try is renaming /usr/lib/python3.9/site-packages to /usr/lib/python3.9/site-packages.off  Then see if you can run pip again.  If you can, stop using sudo with pip, and look into another solution with environments if you need special packages for root access that are not provided by your system package manager.
[05:10:29] <meejah> if _you_ want to verify signatures, you can of course
[05:10:33] <jabberwock> muhblockchain: JS integrity checks are new. I think "sane" is relative
[05:10:37] <muhblockchain> meejah: already have like 5 buggy or bad open source projects who said the same thing in the queue
[05:11:12] <meejah> which thing? that you can check them yourself?
[05:11:14] *** Quits: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net) (Quit: Client closed)
[05:11:33] <muhblockchain> jabberwock: ok: anyone competent enough to not get your user infected just by taking over https connection
[05:11:54] <stealth_> ?
[05:12:06] <stealth_> don't use windows!
[05:12:08] <jabberwock> muhblockchain: https infection?
[05:12:13] * jabberwock is really not following
[05:12:20] <jabberwock> so is there a pythex type GUI that I can run locally?
[05:12:59] <muhblockchain> jabberwock: it seems, from what was said above, that if someone can take over https connections to pypi.org, then he has the power to infect all pip users with malware
[05:13:00] <jabberwock> muhblockchain: https is just masking malicious data. Malicious pip projects are an epidemic that hasn't yet fully been realized, sadly
[05:13:12] <jabberwock> without a MITM. Just plain malicious packages
[05:13:25] <meejah> muhblockchain: yes, that is true
[05:13:29] *** Joins: mumixam (~m@user/mumixam)
[05:13:35] <jabberwock> if you can MITM a connection then PIP is just a means
[05:13:43] <muhblockchain> well malicious projects are yet other problem
[05:13:47] *** Quits: alxndr (~alexander@ybti.net) (Ping timeout: 240 seconds)
[05:13:54] <jabberwock> but infiltrating via a pip package has been done and written up
[05:14:01] *** Joins: alxndr (~alexander@ybti.net)
[05:14:19] <stealth_> muhblockchain, use the hash key to confirm someone hasn't "taken it over"
[05:14:36] <meejah> without something like TUF, jabberwock's problem is still a problem (even with "signatures")
[05:14:45] <muhblockchain> proper way would be of course to have each package author sign package with a key, and have that key signed by admins of pypi.org (they attest that project foo belongs to author with fingerprint 0xabcd...)
[05:15:02] <meejah> muhblockchain: you have just tried to describe TUF
[05:15:15] <muhblockchain> then, at least attacks on https (or web server, or CA) are a solved problem. if package foo is malicious then it is only it's author who is to blame
[05:15:37] <jabberwock> meejah: I don't disagree with what you're saying. "Trust" is still extremely subjective.
[05:15:38] <muhblockchain> s/it's/its
[05:16:23] <jabberwock> muhblockchain: what you're talking about might deter the layman in the basement. Not the government at the manufacturing facility
[05:16:32] <muhblockchain> jabberwock: trust might be hard, but at least we can get accountability.  and trust that e.g. "package foo, as released by 0xabcd... seems o.k." can be built over time (and code can be reviewed; pin down versions using sha256 of package, in addition of other checks)
[05:16:32] <jabberwock> but not trying to discount any progress.
[05:17:19] <meejah> muhblockchain: this is the best kind of problem: a solution exists, and just needs money thrown at it
[05:17:24] <muhblockchain> jabberwock: well above model make it possible to audit package foo, and then trust it's author 0xabcd, or perhaps also audit exact version with sha256=12345..
[05:17:44] <jabberwock> sure. until 0xabcd turns up to be a spy... after the damage has been done. lenovo cough
[05:17:44] <muhblockchain> meejah: btw this is more or less what debian is doing, since like 2000-2005
[05:17:45] *** Joins: eramirez (~eramirez@49.149.135.207)
[05:18:13] <meejah> muhblockchain: sure .. so "apt install" your python packages instead
[05:18:19] <stealth_> muhblockchain, why don't you create a patch and submit it to pypi?
[05:18:28] <jabberwock> muhblockchain: debian, as in, circa 2009 generates all SSh keys from a 16 bit PID? :P
[05:18:33] <muhblockchain> jabberwock: far better to know.  you can audit if you want, and freeze version. and manually review security upgrades to it.    to start on any of this at all, you first need these signatures and hashes
[05:18:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:18:38] *** Quits: flyingchef (~flyingche@user/flyingchef) (Quit: WeeChat 3.2)
[05:18:47] <jabberwock> muhblockchain: fair enough. I think it depends on the long term
[05:19:13] <muhblockchain> meejah: right, but not all that are in pip are available in debian (afaik)
[05:19:16] <meejah> muhblockchain: run devpi and audit (or at least confirm sigs) before putting updates in then
[05:19:19] <jabberwock> I was being devil's advocate. I really think it's a good idea though. Just nowhere near the #1 solution (to which I have no idea)
[05:19:46] <meejah> muhblockchain: true, PyPI has many newer updates than Debian. This geneeralizes to all of debian, though: bleeding-edge or security, pick one
[05:19:52] <muhblockchain> jabberwock: any better solution builds on that, with additive security of audits from various groups, with track record, and all that
[05:20:10] <meejah> (also, all my machines are Debian, so ... )
[05:20:16] <jabberwock> muhblockchain: the stink that I see is that folks are trusting something that is signed and shows a green shiny icon.
[05:20:17] <muhblockchain> so, really nothing like that was yet done for pypi? no one started?
[05:20:35] <meejah> muhblockchain: yes, TUF
[05:20:40] *** Quits: y1n (~y1n@84-115-64-142.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[05:20:48] <meejah> "the update framework"
[05:20:58] <jabberwock> muhblockchain: fun read: https://github.com/g0tmi1k/debian-ssh
[05:20:59] <meejah> their example was PyPI
[05:21:19] <jabberwock> tl;dr Debian's ssh keys from that era could be brute forced in less than an hour
[05:21:20] <meejah> it's not deployed, or finished. needs money.
[05:21:30] <muhblockchain> jabberwock: I know this one
[05:21:35] <meejah> ("money" == "developer time" here)
[05:22:59] <muhblockchain> buy btc now, problem will resolve itself in dozen of years ;)
[05:23:18] <jabberwock> speaking of cbc.. I think there's potential to use that with what you're talking about
[05:23:22] <meejah> muhblockchain: convert some to fiat and throw it at PSF for this use-case
[05:23:34] <jabberwock> maybe for tracing
[05:24:07] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:24:38] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[05:24:41] <muhblockchain> jabberwock: system built on blockchain might indeed assure no developer releases e.g. two different copies of his software, both claiming to be package foo version 5. but that comes later
[05:24:51] <jabberwock> yeah
[05:25:02] <jabberwock> and leaves a breadcrumb trail that gets copied indefinitely. I like it
[05:25:06] *** Joins: c10l (~c10l@89.34.167.207)
[05:25:12] <jabberwock> but someone will figure out how to make me hate it. probably me
[05:27:57] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:30:13] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:30:34] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:47] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[05:31:02] *** Joins: flyingchef (~flyingche@user/flyingchef)
[05:32:14] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:33:32] *** Joins: pankid (~quassel@pankid.club)
[05:33:33] *** Joins: y1n (~y1n@84-115-64-190.wifi.dynamic.surfer.at)
[05:33:44] *** Quits: pankid (~quassel@pankid.club) (Client Quit)
[05:34:02] *** Joins: pankid (~quassel@pankid.club)
[05:34:33] *** Joins: vlm (~vlm@user/vlm)
[05:36:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:36:20] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[05:37:05] *** Quits: kmh (~kmh@p200300df5f09e900a9cd8784ae32cbea.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:40:05] *** Quits: devcpu (~rusty@207.61.176.35) (Quit: leaving)
[05:42:25] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:43:37] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[05:43:53] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:44:53] *** Quits: jochum (~jochum@user/jochum) (Ping timeout: 250 seconds)
[05:45:07] *** Quits: ogis_ (~Android@neoau1-133-203-129-172.tky.mesh.ad.jp) (Ping timeout: 240 seconds)
[05:46:37] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 250 seconds)
[05:47:27] *** Joins: mago (~mago@87.125.58.80)
[05:47:32] *** Joins: ogis (~Android@p2417104-omed01.tokyo.ocn.ne.jp)
[05:48:10] *** Quits: ente_ (~ente@p200300dc5f0e7900bda5e81a81626884.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:48:40] *** Quits: cul8r (~cul8r@2601:8c3:4280:ae00::1a9f) (Ping timeout: 240 seconds)
[05:48:50] <nubonix> looking for some help with producer, consumer, and asyncio queue. what im trying to do: i have several servers that i want to check if they are online, and they are online, i want to run a few async coros. id like to do run the few async coros for each server at the same time if there is more than one server online. heres what i have currrently [simplified code] https://bpa.st/3VHQ
[05:49:51] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[05:49:57] <harpia> Can anyone help me figure out how to import this function "any_of"? https://www.selenium.dev/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html?highlight=expected#selenium.webdriver.support.expected_conditions.any_of
[05:50:06] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[05:50:06] *** Joins: ente_ (~ente@p200300dc5f08a700f4d3246f9ebf70ac.dip0.t-ipconnect.de)
[05:50:10] <harpia> the #selenium channel is so dead.
[05:50:28] <meejah> nubonix: can you be more specific about your question? (gather() is probably the right thing for "multiple concurrent coroutines" but you use that already)
[05:51:07] *** Quits: y1n (~y1n@84-115-64-190.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[05:51:31] *** Quits: ogis (~Android@p2417104-omed01.tokyo.ocn.ne.jp) (Read error: Connection reset by peer)
[05:52:02] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c2f:9700:bb87:a420:c383:c992)
[05:52:17] <nubonix> meejah: so the part that im struggling with is as soon as i get a server that is online, i would like to start the other two coros, as i need the queue that is looking for servers that are online to run forever, as i may add a new server in the future, so i need to look to see if thats online, but atm i just want to focus on how to run the other coros as soon as a server is online
[05:52:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:52:47] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[05:52:49] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Max SendQ exceeded)
[05:54:25] *** Quits: sharperguy__ (~sharpergu@89.244.123.53) (Ping timeout: 250 seconds)
[05:54:36] <meejah> "somewhere" you'll want an infinite loop: "pull from queue, do stuff"
[05:54:51] *** Quits: junktext (~junktext@109.201.152.163) (Ping timeout: 250 seconds)
[05:54:53] <nubonix> perhaps explaining what function1 and function2 are actually supposed to do will help. so lets say i have 2 brand new servers. i need to download software on them, and install the software [checks to see if the software/programs are already being done, so this part is irrelevant to my question atm, just for understanding purposes]. so instead of looking to see if one server is online, performing the checks to see if the software
[05:54:53] <nubonix> has already been downloaded and installed, i want to do this for all the servers at the same time [assuming they are online]
[05:55:03] <nubonix> meejah: ye, the consumer i believe
[05:55:48] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[05:55:57] *** Joins: jaymzwork (~jaymz@ec2-54-175-12-73.compute-1.amazonaws.com)
[05:56:01] <Samian> do you consider this good code? https://github.com/pytorch/FBGEMM/blob/main/fbgemm_gpu/test/split_table_batched_embeddings_test.py
[05:56:11] <Samian> I think it's bad. Meaningless single-letter variables and zero comments
[05:56:13] <Samian> wtf
[05:56:14] <nubonix> meejah so basically i have 4 steps, check what severs are online, check what has been downloaded, check what has been installed, download if needed, install if needed
[05:56:47] *** Joins: ogis_ (~Android@p2417104-omed01.tokyo.ocn.ne.jp)
[05:57:13] <meejah> Samian: ...and no docstrings
[05:57:22] <meejah> (oh, "zero comments")
[05:57:29] <grym> Samian: not the best ever, no.  par for the course for torch!
[05:57:30] <Samian> meejah  bad code right?
[05:57:36] <grym> slightly below par, actually
[05:57:36] <meejah> yeah, i had 1-letter vars
[05:57:43] <meejah> s/had/hate/
[05:57:47] <Samian> par for the course for torch? What does that mean?
[05:57:52] <grym> torch is shitty code
[05:57:59] <grym> this is about what i'd expect
[05:58:12] <Samian> this is one of the shittier pieces I've seen. The pytorch docs are nice
[05:58:20] <grym> oh, i've seen waaaaay worse in this space
[05:58:31] <grym> where's that representative "oh god my eyes"
[05:58:46] <meejah> "import hypothesis.strategies as st" -> yeeeeesh
[05:58:53] <Samian> the guy who wrote that code is a total prick. He ignored my pms. He makes his code cryptic on purpose. One of those assholes who try to make it so only he understands his code
[05:58:59] <grym> Samian: https://github.com/mahyarnajibi/SNIPER/blob/b048b19653abef72b1826e5d6c357e6fed7bf52e/lib/iterators/MNIteratorE2E.py#L117 there we go
[05:59:11] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[05:59:29] <meejah> Samian: i had to work with someone like that once; literally every function would alias a bunch of "nice" variables to single-letters. I guess because pixels cost money?
[05:59:35] <Samian> grym  but that's not pytorch
[05:59:47] <grym> Samian: it's someone else's research code, yes
[06:00:03] <grym> meejah: i have written, on purpose, Capital Single Letter Variable Code
[06:00:09] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:19] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:00:23] <meejah> nubonix: that sounds like your "infinite loop"
[06:00:29] <grym> meejah: the doctring for that function was: """ Implement Eq 4.2 from Foo et. al, (2013) doi: ... """
[06:00:42] <nubonix> meejah: ? the consumer?
[06:00:44] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[06:01:02] <grym> and it was 1-1 with the variable names in that equation.  that's like, the one good reason to do that, and i went on to have a useful docstring on top
[06:01:09] <meejah> grym: i'm not saying it's _always_ wrong ... but like "private_key" is a lot more readable than "PK" or so
[06:01:29] <meejah> (even if "The Paper" uses "PK" because mathematicians...)
[06:01:30] <grym> meejah: yep.  and i'm not up on the domain for this pytorch code, so i've not the first clue what it means
[06:01:57] <meejah> i bet we could both read it better if "B" was ... whatever it actually means ;) (I'm in the same boat)
[06:02:25] *** Joins: ogis (~Android@neoau1-133-202-120-199.tky.mesh.ad.jp)
[06:03:28] *** Quits: MikZyth (~MikZyth@188.65.242.195) (Quit: WeeChat 3.1)
[06:03:34] *** Quits: ogis_ (~Android@p2417104-omed01.tokyo.ocn.ne.jp) (Ping timeout: 252 seconds)
[06:03:36] *** Quits: ogis (~Android@neoau1-133-202-120-199.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[06:03:43] *** Joins: mgedmin (~mg@user/mgedmin)
[06:04:09] *** Quits: lethu (~lethu@user/lethu) (Quit: Quit())
[06:04:55] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:06:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:07:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[06:07:58] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[06:09:18] <nubonix> anyone want to help me build the logic for an asyncio consumer/producer, queue? [heres the steps im trying to complete by doing so] https://bpa.st/7KEQ
[06:11:37] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:11:47] <dale> Docs for functools.cached_property suggest using property+cache if your object doesn't have a __dict__, but I feel like that leaves out the crucial distinction that the cached value from @cached_property will disappear when the instance it's on gets GC'ed, whereas a @cache'd method will (AFAIK) keep a reference to self, as well as the cached value, around forever--at least, as far as I can tell
[06:11:50] <dale> from reading the lru_cache source.
[06:12:22] <dale> Is there any reason one could not build a useful alternative version of lru_cache that uses a WeakKeyDictionary?
[06:16:22] <dale> Well, I guess when I squint harder at the lru_cache implementation, you'd have to come up with a weak ref version of functools._HashedSeq, but maybe that's not outrageous.
[06:17:58] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[06:18:00] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Max SendQ exceeded)
[06:18:27] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[06:18:28] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:19:40] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:19:40] *** brabrax_ is now known as brabrax
[06:20:57] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 248 seconds)
[06:22:33] *** Joins: zeden (~zeden@user/zeden)
[06:22:54] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:25:07] *** Joins: Forty-Bot (~kvirc@pool-108-45-127-224.washdc.fios.verizon.net)
[06:27:25] <Forty-Bot> is there a more concise way to write something like `try: foo['bar']['baz'] = 'qux'; catch KeyError: foo['bar'] = {}; foo['bar']['baz'] = 'qux'`?
[06:28:22] <grym> Forty-Bot: defaultdict makes this somewhat easier
[06:29:28] <nedbat> Forty-Bot: foo = collections.defaultdict(dict);   foo['bar']['baz'] = 'quux'
[06:29:33] <grym> Forty-Bot: e.g., `foo = collections.defaultdict(dict); foo['bar']['baz']='quux'` will always work
[06:30:07] <Forty-Bot> cool, thanks
[06:32:02] <Forty-Bot> hm, this makes me want infinite defaultdicts...
[06:32:23] <grym> you can do that
[06:32:58] <grym> you need to be slightly more clever
[06:33:45] <grym> and the repr's ugly
[06:33:59] <Samian> meejah  what happened to the guy you worked with who had a bunch of single-letter variables?
[06:34:16] <grym> Forty-Bot: but it does work: https://bpa.st/KKIA
[06:34:28] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:35:39] <meejah> Samian: company imploded. he quit. nice guy, i've worked with him before .. but we "agreed to disagree" on that strategy.....
[06:36:10] <meejah> he's a C programmer, traditionally, so ....
[06:36:38] <Samian> probably an old guy
[06:36:52] <nedbat> be nice to old guys :)
[06:37:02] *** Joins: dez (uid92154@user/dez)
[06:37:11] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:45c0:1ff4:9c9c:c5af)
[06:37:18] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[06:39:16] <meejah> he was .. nearly my age even ;)
[06:40:23] <grym> yeah, better be nice to him!
[06:40:24] <grym> >:)
[06:41:07] *** Joins: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net)
[06:41:45] <Vaurien> Good f-ing grief, is there NO way to around read() blocking on waiting for a newline?
[06:42:05] *** Quits: muhblockchain (~muhblockc@user/muhblockchain) (Ping timeout: 250 seconds)
[06:45:18] *** Quits: mago (~mago@87.125.58.80) (Quit: Client closed)
[06:46:29] *** Quits: Vaurien (~Vaurien@76-225-61-105.lightspeed.frokca.sbcglobal.net) (Quit: Client closed)
[06:47:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[06:47:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[06:48:59] *** Joins: dre (~dre@2001:8003:c932:c301:9c54:731:9f58:86e1)
[06:49:59] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[06:50:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:51:40] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:53:40] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[06:53:44] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:56:13] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[06:56:23] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:56:29] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[06:57:35] *** Quits: n000g (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[07:00:13] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[07:00:42] *** Joins: nrg (~NRG@user/nrg)
[07:00:44] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[07:01:41] *** Joins: jazzy2 (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404)
[07:03:10] *** Quits: nrg (~NRG@user/nrg) (Client Quit)
[07:04:19] *** Joins: nrg (~NRG@user/nrg)
[07:05:07] *** Joins: JavaBean (~JavaBean@user/javabean)
[07:05:29] *** Quits: jazzy (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404) (Ping timeout: 250 seconds)
[07:08:29] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:09:06] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:12:22] *** Joins: m33k (dexter@user/m33k)
[07:19:26] *** Joins: Fiji (~Fiji@user/fiji)
[07:23:15] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[07:24:37] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:25:31] *** Quits: Shikadi (~Shikadi@136.27.89.236) (Ping timeout: 252 seconds)
[07:26:17] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[07:29:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:30:16] <dodobrain> hi all.. is there builtin support for a processmanager in python multiprocessing?
[07:30:46] <dodobrain> i want to launch a subprocess but have only 1 instance of it ever. The launched subprocess is another python script that I am free to make modifications on
[07:34:07] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 240 seconds)
[07:36:22] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[07:36:55] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:d83c:9b21:bea5:7f16)
[07:37:29] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[07:37:44] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[07:43:19] *** Joins: Celelibi (celelibi@user/celelibi)
[07:44:39] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[07:46:26] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[07:48:47] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 240 seconds)
[07:49:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:49:56] *** Joins: aphysically (~aphysical@user/aphysically)
[07:52:11] *** Joins: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br)
[07:58:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:59:36] *** Joins: pycurious (~Adium@user/pycurious)
[08:01:41] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[08:02:15] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 250 seconds)
[08:02:23] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-c748-066b-9bf0-7da3.res6.spectrum.com)
[08:03:33] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 250 seconds)
[08:05:40] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[08:06:01] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[08:06:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:10:06] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[08:10:16] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[08:10:36] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[08:13:24] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:d83c:9b21:bea5:7f16) (Quit: Leaving)
[08:13:53] *** Quits: p-i-_ (~Ohmu@mx-ll-171.6.224-171.dynamic.3bb.co.th) (Remote host closed the connection)
[08:15:38] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:16:32] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:22:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[08:23:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:25:04] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[08:25:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:26:30] *** Joins: Guddu (~Guddu@190.84.88.92)
[08:26:32] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 256 seconds)
[08:26:54] <Guddu> Has anyone developed android mobile apps using python?
[08:27:14] *** Joins: kmh_ (~kmh@p200300df5f053300d595a1d9a4479d55.dip0.t-ipconnect.de)
[08:28:02] *** Joins: loamranger (~loamrange@user/loamranger)
[08:28:22] *** Quits: ziky (sid27087@user/ziky) (Ping timeout: 258 seconds)
[08:29:10] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[08:29:54] *** Joins: graingert (sid128301@tinside.irccloud.com)
[08:30:21] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[08:30:44] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[08:30:58] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 240 seconds)
[08:32:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:33:40] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Remote host closed the connection)
[08:33:49] <stealth_> Guddu, it seems doable!
[08:34:03] <Guddu> stealth_, I came across Kivy
[08:34:17] <Guddu> Is that the one recommended?
[08:35:08] <stealth_> Guddu, there are few other options out there, can't think of many, qt as well.
[08:35:25] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[08:35:55] <Guddu> stealth_, have you used any personally? How was the experience?
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:11] <stealth_> Guddu, mobile development on is on the weak side of python. no i haven't yet, its on the to do list
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:43] <stealth_> Guddu, there is also https://beeware.org/ not sure how good/usable it is
[08:39:08] *** Joins: ziky (sid27087@user/ziky)
[08:39:29] <Guddu> stealth_, I checked that too but the app packaging documentation has a "coming soon" in it so it was ruled out.
[08:39:30] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Remote host closed the connection)
[08:39:39] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[08:40:27] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[08:40:35] <stealth_> Guddu, https://docs.beeware.org/en/latest/tutorial/tutorial-5/android.html
[08:40:40] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 240 seconds)
[08:41:18] <Guddu> stealth_, The publishing part https://docs.beeware.org/en/latest/tutorial/tutorial-7.html
[08:42:36] <stealth_> Guddu, aww that sucks
[08:42:58] <FunkyBob> as a volunteer run effort.... RKM is doing what he can, y'know? :)
[08:43:37] *** Quits: emika (~emika@83.136.182.121) (Ping timeout: 252 seconds)
[08:44:11] <FunkyBob> hmm... I thought someone gave a fix for android packaging
[08:44:22] *** Joins: emika (~emika@185.207.249.227)
[08:45:01] <FunkyBob> just confirmed with him, android backend is working for beeware
[08:45:33] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[08:45:46] <stealth_> FunkyBob, how about actually being able to publish the app?
[08:46:15] <FunkyBob> am asking
[08:46:26] <FunkyBob> in $DAYJOB slack
[08:46:37] <stealth_> FunkyBob, this part https://docs.beeware.org/en/latest/tutorial/tutorial-7.html
[08:47:37] *** Quits: ziky (sid27087@user/ziky) (Ping timeout: 248 seconds)
[08:48:04] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[08:48:11] <FunkyBob> stealth_: his reply - https://briefcase.readthedocs.io/en/latest/how-to/publishing/index.html
[08:48:31] *** Joins: Jigsy (~Jigsy@user/jigsy)
[08:48:34] <Santzes> Script I'm editing (https://github.com/orakaro/rainbowstream/blob/0e6d22d6fb2c54f5eb37028da1414279e2d1a625/rainbowstream/draw.py) seems to use: formater = tweet.join(formater.split('#tweet'))   instead of .replace(), is there a reason why this way should be preferred sometimes?
[08:49:02] <FunkyBob> so, yeah, the packaging and publishing is briefcase's job...
[08:49:34] <stealth_> FunkyBob, tag Guddu
[08:49:46] <FunkyBob> Guddu: ^^
[08:49:58] <stealth_> FunkyBob, maybe that person should have added a link vs "coming soon"
[08:50:13] <FunkyBob> there is a link in that page to the briefcase docs...
[08:50:14] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:f000:a003:caa:6517)
[08:50:19] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:50:26] <FunkyBob> i'm sure he'd welcome tickets and PRs
[08:50:32] <Guddu> Thanks stealth_ FunkyBob
[08:52:26] <stealth_> FunkyBob, just mention he should replace coming soon with a link to briefcase. everyone looks at the default docs
[08:52:31] <stealth_> FunkyBob, https://docs.beeware.org/en/latest/tutorial/tutorial-7.html
[08:53:07] <FunkyBob> stealth_: here you go - https://github.com/beeware/beeware/blob/master/docs/tutorial/tutorial-7.rst
[08:53:23] *** Joins: beencubed (~beencubed@209.131.238.248)
[08:56:26] *** Joins: graingert (sid128301@tinside.irccloud.com)
[08:57:21] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:57:41] *** Joins: wender (~Wender@189.37.65.124)
[08:58:33] *** Joins: easter_egg (~jeffry@user/easter-egg/x-4406379)
[08:59:27] <stealth_> FunkyBob, thanks btw for being the middleman :)
[08:59:43] *** Joins: ziky (sid27087@user/ziky)
[08:59:46] <FunkyBob> np
[09:00:03] *** Joins: node1 (~node1@user/node1)
[09:00:12] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Remote host closed the connection)
[09:00:14] <Guddu> https://twitter.com/freakboy3742/status/1429288035934371850
[09:01:08] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:d9db:d6a:7dc5:64e7)
[09:01:13] *** Quits: computeiro (~Wender@189.37.67.196) (Ping timeout: 252 seconds)
[09:03:21] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[09:03:24] *** Joins: chromis (sid150893@tinside.irccloud.com)
[09:04:46] *** Parts: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260) (WeeChat 2.8)
[09:10:51] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:11:30] <FunkyBob> Guddu: yes, he said much the same to me :)
[09:11:37] <Guddu> :-)
[09:14:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:15:05] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:15:19] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:17:27] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[09:21:31] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:29:45] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:d9db:d6a:7dc5:64e7) (Quit: zumba_addict)
[09:30:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7072-405b-f95f-69ad.res6.spectrum.com) (Quit: jarthur)
[09:35:49] *** Joins: setuid (sid191390@canonical/setuid)
[09:37:27] <setuid> I have an interesting question... related to seeking Python talent for open roles. We currently ask for a self-scored rating out of 1-10, and in we see MANY people who rate themselves at an 8, and have used Python "for scripting". What's a good set of skills that we should ask for instead, at each level? So instead of a 1-10, we provide a dropdown list of 1-10, with a description instead.
[09:38:12] *** Joins: frost (~frost@59.71.240.119)
[09:39:53] <setuid> I'm thinking something like 3 is an average junior developerl, 5 as an average senior developer and 7 as your average tech lead/language architect..
[09:40:35] *** Quits: eramirez (~eramirez@49.149.135.207) (Read error: Connection reset by peer)
[09:43:39] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[09:47:05] <nubonix> stealth_ pyqt5 can do mobile as well?
[09:48:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:50:17] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[09:50:57] *** veegee_ is now known as veegee
[09:51:16] <stealth_> nubonix, https://pypi.org/project/PyQt5/#description says it does!
[09:51:32] <nubonix> very interesting
[09:52:28] <nubonix> stealth_: wait what, it also supports in browser display???
[09:53:37] <stealth_> nubonix, i am probably not the best person to ask about it, but it might be more to do with webgl and such
[09:53:58] *** Parts: shugo (~shugo@user/shugo) ()
[09:54:12] <nubonix> `Qt is set of cross-platform C++ libraries that implement high-level APIs for accessing many aspects of modern desktop and mobile systems. These include location and positioning services, multimedia, NFC and Bluetooth connectivity, a Chromium based web browser, as well as traditional UI development.`
[09:54:39] <nubonix> `as well as traditional UI development.` is wording to suggestion in addition to?
[09:55:03] <stealth_> nubonix, ya that doesn't mean its going to write html for you :p
[09:55:04] <nubonix> huh, well thats cool, didnt know it could do mobile
[09:55:20] <nubonix> stealth_: no but if it supports it, that would be super cool
[09:55:39] <stealth_> maybe like web-assembly based function
[09:55:51] <stealth_> there are maybe other tiny library that provide those features as well
[09:55:54] <nubonix> id still probably use fastapi for browser stuff, but i think the option is pre cool
[09:56:10] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[09:56:36] <stealth_> nubonix, fastapi is for communication, qt is more like games and such
[09:57:15] <nubonix> well ya, but u can also use it like django
[09:59:24] <stealth_> nubonix, djnago maybe for back-end server stuff!
[09:59:59] <stealth_> u know Graphical User Interface is more what users interact with
[10:01:05] <nubonix> .............
[10:01:20] <nubonix> yes.... ive been deving 2 projects for the past 6 months with pyqt5 so :P
[10:04:21] <ksynwa> Asking because I am not able to test this. This is about the urllib.error.HTTPError object's reasons attribute: https://docs.python.org/3/library/urllib.error.html#urllib.error.HTTPError.reason
[10:04:40] *** Joins: Meteorhead (~Meteorhea@165.225.76.202)
[10:04:53] *** Quits: emerent (~quassel@p200300cd5701a187ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:05:07] <ksynwa> Will the reason be something that is sent by the server I making a request to?
[10:05:08] *** Joins: emerent (~quassel@p200300cd5701a1bcba27ebfffed28a59.dip0.t-ipconnect.de)
[10:05:32] <ksynwa> Or is it something generic like "Forbidden" for 403.
[10:06:07] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 240 seconds)
[10:06:13] <stealth_> ksynwa, later
[10:08:08] <ksynwa> stealth_: Thanks
[10:08:36] *** Parts: setuid (sid191390@canonical/setuid) ()
[10:09:15] *** Joins: fortuno51_ (~fortuno51@37.120.156.254)
[10:10:41] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Client Quit)
[10:11:24] <stealth_> ksynwa, are you writing a server? https://docs.python.org/3/library/http.html
[10:14:06] <stealth_> ksynwa, the server does send you header code like 404.
[10:15:27] *** Joins: mei (~mei@user/mei)
[10:19:22] <ksynwa> stealth_: No not a server.
[10:19:31] <ksynwa> I am using it to make requests to GitHub's API
[10:19:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:20:06] <ksynwa> Using urllib to make the script more portable
[10:20:55] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[10:21:02] *** Joins: netsan (~netsan@user/netsan)
[10:22:01] <jinsun> why urllib and not requests, even the urllib docs say just use requests
[10:22:21] <ksynwa> Don't want to use any external libraries
[10:22:36] <ksynwa> It's stupid but it;s a hole I have dug myself into
[10:22:39] <stealth_> ksynwa, i see, that's cool
[10:24:20] *** Joins: aaguilera (~aaguilera@185.41.96.12)
[10:25:07] *** Quits: aaguilera (~aaguilera@185.41.96.12) (Client Quit)
[10:25:15] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[10:25:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[10:26:30] *** Quits: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com) (Read error: Connection reset by peer)
[10:27:19] *** Joins: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com)
[10:30:18] *** Joins: ppang (~ppang@user/ppang)
[10:34:24] <ksynwa> Thanks for understanding
[10:35:00] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[10:35:35] <pyeverything> hi can someone please help me with this error? https://bpa.st/GXEQ please let me know if it is not clear. AttributeError: module 'custom_resnet18' has no attribute 'ResNet18'
[10:35:40] *** jazzy2 is now known as jazzy
[10:38:33] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 248 seconds)
[10:40:49] *** Quits: lexx (~scsi@78-63-38-194.static.zebra.lt) (Quit: WeeChat 3.0)
[10:41:33] <ksynwa> pyeverything: does it still throw the error if you use `model_ft = custom_resnet18.ResNet18()` instead?
[10:42:07] *** Joins: ihristov (~ihristov@85.187.46.226)
[10:42:44] *** Joins: minip (minip@user/minip)
[10:43:45] <theprophet> is torch a py module or his ?
[10:44:24] <ksynwa> it;s pytorch i think
[10:44:32] <ksynwa> a machine learning module that is pretty famous
[10:46:14] <pyeverything> ksynwa: yes unfortunately same error AttributeError: module 'custom_resnet18' has no attribute 'ResNet18'
[10:46:18] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:32] <jinsun> pyeverything: you can `print(custom_resnet18.__file__)` and see if it is importing the right file, also from the definition of ResNet18 seems like youa re calling it wrong, it has no pretrained parameter
[10:46:32] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[10:46:51] *** Joins: seednode (~seednode@user/seednode)
[10:46:58] <pyeverything> i had no problem using a torch vision resnet 18 and this custom resnet isn't even my code and should work right off the bat. ksynwa
[10:47:14] <stealth_> pyeverything, `ResNet18` does not have `pretrained` parameter
[10:47:21] <pyeverything> jinsun: /scratch3/research/code/fashion/fashion-compatibility/custom_resnet18.py
[10:47:47] <stealth_> pyeverything, https://bpa.st/GXEQ#1L107
[10:47:48] <pyeverything> I don't think it is a pretrained parameter issue per se since i removed it and still get the same error stealth_
[10:47:52] <ksynwa> Is that path correct? Only you would know that pyeverything
[10:48:09] *** Joins: lexx (~scsi@78-63-38-194.static.zebra.lt)
[10:48:18] <jinsun> pyeverything: okay, and can you open that file and check if ResNet18 defined there?
[10:48:20] <pyeverything> oh yeah the path is correct ksynwa I am using vscode for debugging the code in a remote machine via vpn
[10:48:35] <pyeverything> yes it is  jinsun
[10:48:53] <pyeverything> jinsun: def ResNet18(img_channels=3, num_classes=1000):
[10:49:47] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:50:00] *** Joins: gusto (~Augustus@109.255.100.54)
[10:50:08] <theprophet> can you double check your parameter arguments in def make_layer?
[10:50:12] <pyeverything> ksynwa: jinsun stealth_ so i put this code https://gist.github.com/nikogamulin/7774e0e3988305a78fd73e1c4364aded into a file named custom_resnet18.py
[10:50:44] <pyeverything> theprophet: the code is here https://bpa.st/GXEQ how do you want me to double-check?
[10:51:05] <theprophet> with debugger
[10:51:15] <theprophet> just follow the mro there
[10:51:16] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Remote host closed the connection)
[10:51:18] <stealth_> pyeverything, well if the `import custom_resnet18` it would have raised error! could you update the code
[10:51:38] <stealth_> pyeverything, that github link isn't loading
[10:52:19] <pyeverything> stealth_: i am not getting any error for import custom_resnet18
[10:52:43] <stealth_> pyeverything, thats what i mean, if the file didn't exit it would have raised error
[10:52:58] <stealth_> pyeverything, you are using jupyter? it might be issue with that
[10:53:11] <pyeverything> yes jupyter stealth_
[10:53:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:53:52] <stealth_> pyeverything, could up update code paste exactly as you have it now, ran?
[10:54:36] *** Joins: kosh (~kosh@user/kosh)
[10:55:06] <theprophet> submodules are not automatically imported. You have to explicitly import the  module:
[10:55:06] <theprophet> import the api module
[10:55:29] <jinsun> pyeverything: did you change the contents of custom_resnet18.py after starting jupyter? you can try reloading, `import importlib; importlib.reload(custom_resnet18)`
[10:56:14] <cluelessperson> well, modules can choose to import submodules
[10:56:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[10:57:09] <theprophet> check whether you didn't name your python file the same as the module you are trying to import.
[10:57:36] <pyeverything> i didn't theprophet
[10:57:38] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 250 seconds)
[10:59:08] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[10:59:56] *** Joins: upsala (~zcb@185.213.155.160)
[11:00:01] <theprophet> hold on let me copy the link to my pycharm
[11:00:09] <theprophet> code*
[11:01:12] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[11:01:34] <stealth_> pyeverything, just close and start jupyter and try again, most likely cached the old import
[11:01:58] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[11:02:09] <pyeverything> stealth_: theprophet cluelessperson ksynwa jinsun so I documented my question here to make it better readable https://stackoverflow.com/questions/68948922/using-a-custom-resnet18-code-in-pytorch-transfer-learning
[11:02:19] <pyeverything> let me try that thanks
[11:02:35] <pyeverything> though I am running jupyter notebook from within the VSCode itself not a browser
[11:03:54] <bookworm> vscode is a browser my dear XD
[11:04:08] <pyeverything> stealth_:  sadly after closing the notebook (clicking on X in VSCode) and opening it again and running all cells still same error
[11:04:20] <theprophet> in which soft are you working with this code?
[11:04:23] <pyeverything> I meant a browser like Firefox
[11:04:32] <pyeverything> I am running the jupyter notebook from within the IDE
[11:04:38] <pyeverything> VSCode in OSX
[11:05:53] <stealth_> pyeverything, could you `print(dir(custom_resnet18))` just below the import and see what you get
[11:07:19] <pyeverything> stealth_: ['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__']
[11:08:08] <stealth_> pyeverything, its not importing any of the functions/class for `custom_resnet18.py` file
[11:09:02] <jinsun> reload vscode completely, it is a bit aggresive in caching imports, and you might have imported when the file was empty
[11:09:27] <pyeverything> ok will take me a bit since i have to reconnect to remote host -- i'll update
[11:10:02] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[11:11:00] <pyeverything> jinsun: well no luck still same ['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__']
[11:11:35] <jinsun> also check that the custom_resnet.py file as actaully saved, vscode shows the unsaved stuff too, open the file then press ctrl+S
[11:11:43] *** Joins: mrwick (~mrwick@user/mrwick)
[11:12:01] <pyeverything> it was saved jinsun
[11:12:43] *** Joins: cheater (~Username@user/cheater)
[11:13:15] <theprophet> pyeverything the code you linked ' you're not missing anything right? did you copied all of it?
[11:13:28] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:13:43] *** Joins: palasso (~palasso@user/palasso)
[11:14:32] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:17:04] <jinsun> pyeverything: did you try importlib.reload? before running your jupyter cell?
[11:17:34] <pyeverything> yes I did copy ALL of it! theprophet
[11:18:00] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Remote host closed the connection)
[11:18:02] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:19:44] <pyeverything> jinsun: madly enough even though i installed it with pip and restarted the jupyter notebook i still get this error NameError: name 'importlib' is not defined
[11:20:36] <jinsun> you have to import importlib, before using importlib.reload
[11:21:26] <pyeverything> nice problem fixed jinsun
[11:21:35] *** Quits: jazzy (~jaziz@2600:380:842b:9c51:c88b:6426:3ff5:7404) (Ping timeout: 250 seconds)
[11:21:38] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[11:21:56] <pyeverything> would you like to answer it on stackoverflow as answer since your solution worked https://stackoverflow.com/questions/68948922/using-a-custom-resnet18-code-in-pytorch-transfer-learning?noredirect=1#comment121853162_68948922
[11:22:00] <pyeverything> jinsun:
[11:22:36] <pyeverything> Thank you!
[11:22:54] <pyeverything> stealth_: and now I get all of it ['Block', 'ResNet', 'ResNet101', 'ResNet152', 'ResNet18', 'ResNet34', 'ResNet50', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'nn', 'test', 'torch']
[11:23:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:23:52] <jinsun> pyeverything: nice, so your vscode restart had not restarted the jupyter kernel, and I don't really want to login to stackoverflow to answer, you can answer your own question there
[11:24:43] *** Joins: theprophet (~theprophe@85.114.228.184)
[11:25:39] <stealth_> pyeverything, cool, it should work now.
[11:25:42] <pyeverything> yeah it is weird quitting vscode and getting back to it through remote-ssh didn't solve the problem jinsun
[11:26:33] <theprophet> so its fixed?
[11:27:07] <jinsun> well if it is remote ssh then you had to kill jupyter on the remote server through ssh, your local vscode cannot stop the remote jupyter
[11:27:15] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:45c0:1ff4:9c9c:c5af) (Quit: Leaving)
[11:29:50] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:31:11] <pyeverything> jinsun: gave credits to your help https://stackoverflow.com/a/68949199/2414957v
[11:32:13] <nubonix> stealth_:  have you seen an example of a pyqt5 mobile app? cause googling ~> stackoverflow says its a nogo
[11:32:54] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:32:57] <jinsun> pyeverything: that shouldn't have solved it actually, something else went right for you then, I wanted you to do `importlib.reload(custom_resnet18)`
[11:33:14] <nubonix> stealth_ o, dat post is 8 years old, however, still havent found anything showing how to do so
[11:33:25] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[11:34:13] <pyeverything> lol weird that it worked then?
[11:35:40] <stealth_> nubonix, no, i haven't seen one, https://www.qt.io/ it could be a paid feature! not sure.
[11:36:19] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[11:36:52] <jinsun> nubonix: there is this https://community.kde.org/Necessitas, although they give C++ examples, but they can probably be translated to pyqt or pyside
[11:37:14] <pyeverything> does anyone here know pytorch? or resnet? now that I have trained my model, how can I extract the feature vectors before the FC layer?
[11:37:15] <nubonix> perhaps https://medium.com/@Lola_Dam/packaging-pyqt-application-using-pyqtdeploy-for-both-linux-and-android-32ac7824708b
[11:37:26] <pyeverything> [:-1]
[11:37:35] <nubonix> pyeverything: mm, there might be a #pytorch channel
[11:37:53] <nubonix> or ##machinelearning if that doesnt exist [## is not a type]
[11:38:01] <nubonix> ## is not a typo*
[11:38:06] <pyeverything> sadly only 3 people there
[11:38:11] <nubonix> ah
[11:38:19] <nubonix> ##machinelearning then?
[11:38:33] <nubonix> havent seem much pytorch talk here
[11:38:53] *** Joins: rendar (~rendar@user/rendar)
[11:38:54] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:39:00] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[11:39:11] <pyeverything> omg sad to know only 96 ppl in ml channel~ how is it even possible!
[11:39:31] <pyeverything> lol gonna make lots of pytorch talk here from now on :D
[11:39:35] <nubonix> lolz
[11:39:42] <nubonix> try tensorflow :D
[11:39:45] <nubonix> lololol jkjk
[11:39:47] <pyeverything> no way kill me
[11:39:50] <nubonix> haha
[11:40:16] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:40:48] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[11:41:11] <nubonix> not really sure i understand ur question tho
[11:41:19] <nubonix> how can u know resnet, its just a pretrained model
[11:41:44] <nubonix> extract feature vectors? u mean features, as in classes for a classifier?
[11:42:10] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[11:42:13] <nubonix> like, 'dog', 'bird', 'motorcyle'
[11:42:24] <nubonix> [i know very little ml]
[11:42:55] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:43:35] <pyeverything> nubonix: so now I can actually do the predictions. please check the part where he is using the model_ft after being trained. https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html however, i want to just extract the feature vectors before being fed to the fully connected (FC) layer I know you should do some sort of [:-1]
[11:43:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[11:44:04] *** Joins: brelod (~me@90.251.226.93)
[11:44:28] <pyeverything> to give you an idea, assume I wanna calculate the cosine distance between these feature vectors to find their similarities or find the nearest neighbors based on the distance of these vectors nubonix
[11:44:50] <nubonix> ah ok, so vectors are the features
[11:44:51] <DnzAtWrk> need to render a lot of real-time 3d points
[11:44:55] <DnzAtWrk> what are some good options
[11:44:57] <pyeverything> I actually trained the model from scratch now using my own custom resnet18 nubonix
[11:44:59] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 250 seconds)
[11:45:18] *** Joins: Skyfire (~pyon@user/pyon)
[11:45:20] <pyeverything> yes also called embeddings nubonix
[11:45:44] <nubonix> ye, u seem to know more than me so :-/ been to long for me to be of help i think
[11:46:42] <pyeverything> nubonix: when I do nn.Sequential(*list(model_ft.children())[:-1]) It only prints the model as in https://discuss.pytorch.org/t/use-resnet18-as-feature-extractor/8267/8?u=mona_jalal
[11:47:27] <pyeverything> i am gonna document my question with more proper details in Stackoverflow in a bit and keep y'all updated
[11:48:07] <nubonix> mm, pre sure this isnt what u want for features
[11:49:48] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[11:50:20] <nubonix> pyeverything: perhaps look at the inputs
[11:51:11] <nubonix> the features are somewhere, u just gotta find where the are, did u create the dataset or does it already exist, cause they are probably in the dataset, ignore what i said about input
[11:52:40] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:52:50] <nubonix> perhaps i should ask what u think feature vectors are though
[11:53:55] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:55:34] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:56:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[11:57:28] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[11:57:28] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:57:59] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[12:01:57] <pyeverything> let's say some sort of mathematical representation of text or image (or audio/video for that matter)
[12:02:19] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[12:02:56] <pyeverything> open-sourced dataset accessible from official pytorch website (bees and ants images) https://download.pytorch.org/tutorial/hymenoptera_data.zip nubonix
[12:03:47] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[12:04:23] <ApostleInTriumph> Hello. How do I get line by line execution speed of a method?
[12:04:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[12:04:43] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[12:04:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:04:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:05:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[12:05:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:05:40] *** Joins: NeoCore (~neocore@195.200.221.19)
[12:05:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:06:24] <stealth_> ApostleInTriumph, maye not line by line, but what really matter https://github.com/joerick/pyinstrument/
[12:07:37] <susam> Yes, never needed line-by-line profiling in practice. Almost always, needed call stack profiling to find where the bottlenecks are.
[12:07:47] <ApostleInTriumph> stealth_ basically I do some array operation in each line and my code is taking longer than expected. I wanted to know which of them are costly
[12:07:57] <ApostleInTriumph> would this library suit my purpose?
[12:08:36] <stealth_> ApostleInTriumph, yes overall
[12:08:42] <susam> ApostleInTriumph: Wouldn't call stack profiling achieve that? A call stack profiler would sort your call stacks in the decreasing order of time consumed (actually it is more complicated than that).
[12:09:02] <susam> ApostleInTriumph: Then you can drill down into each level of the call stack and zero in on the function that is consuming most of your CPU time.
[12:09:17] <nubonix> pyeverything: and features?
[12:09:24] <ApostleInTriumph> susam stealth_ I see. thanks I will give this a shot
[12:09:33] <nubonix> pyeverything: and what are features*?
[12:09:34] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[12:10:48] <stealth_> ApostleInTriumph, `pyinstrument --html your_file.py` should give you nice html file to look at
[12:11:07] <nubonix> or, are you trying to extract where in the image that the model classified the bee or ant to be?
[12:11:26] <susam> By the way, there is another trick I used to use that has worked well for me. In fact, it works quite well if the bottleneck consumes more than 95% CPU. Just Ctrl + C when the program seems to be busy. Do it 5 times. The KeyboardInterrupt backtrace will show the busy call stack about 4 out of 5 times.
[12:11:45] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[12:12:35] <stealth_> :/
[12:12:57] *** Joins: niv (~niv@limbo.cypherpunks.io)
[12:13:15] <nubonix> how can i share a variable between my pyqt5 app and an async function?
[12:13:20] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[12:14:08] <stealth_> nubonix, `await some_function(pass_variable)` ?
[12:14:26] <nubonix> stealth_:  >.>
[12:14:33] <stealth_> :D
[12:14:41] <nubonix> no >.> lols
[12:15:13] <nubonix> im using apscheduler to run the coros, b/c async is annoying in gui's
[12:15:56] <nubonix> if only tho...
[12:16:08] <stealth_> nubonix, ya don't think any of those support those yet or more like it would be a major rewrite!
[12:16:16] <nubonix> qasync does
[12:16:44] <nubonix> well, supports async, but passing no
[12:17:43] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:17:49] <stealth_> not sure what they did, normally they run it in subprocess or something like that
[12:18:09] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[12:18:35] <stealth_> true async io is still new to programing world.
[12:18:47] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 250 seconds)
[12:18:48] <nubonix> stealth_: okay so heres my problem... ive got a list of servers from server_ips.json, and im trying to send some commands to them [as they are running restful apis], so as soon as the pyqt5 app starts, the async functions call the restful apis', basically just downloading stuff to the servers if the download doesnt already exist. however, with the pyqt5 app, i can add another server, and it would be really inconvient to have to
[12:18:48] <nubonix> restart the app to get it to install on the new server
[12:19:04] *** Joins: ttkap (~ttkap@user/ttkap)
[12:19:07] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[12:19:08] *** Joins: nattiestnate (~nate@103.2.146.186)
[12:19:23] <nubonix> restart the app to get it to download on the new server*
[12:20:10] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[12:20:12] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Max SendQ exceeded)
[12:20:12] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[12:20:16] <nubonix> cause what im doing atm is: load the list of server_ips from a json file, and use these servers to send requests to the restful apis, so getting a new server with the pyqt5 app is kind of a problem atm
[12:20:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:20:39] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[12:21:08] <nubonix> cause i can just be a noob and read the file over and over again and check for updates in the file, but then idk how to send requests to the servers that are already present
[12:21:18] <stealth_> nubonix, why don't you start with just a software that does that first, later you can add pyqt5 over it?
[12:21:42] *** Joins: theprophet (~theprophe@85.114.228.184)
[12:21:42] <nubonix> wdym, like chocolatey
[12:22:05] <stealth_> nubonix, just send a HEAD request and check for make time
[12:22:09] <nubonix> cause ive already written everything i need, except for the calling of the urls
[12:23:09] <nubonix> stealth_: not sure i follow
[12:23:38] <nubonix> ive already written everything except for the part that gets new servers*
[12:23:54] <stealth_> nubonix, gets new server?
[12:24:05] <nubonix> yeah, when i add it to the json file via the pyqt5 app
[12:24:17] <nubonix> here ill post some short code, should make more sense
[12:24:25] <stealth_> nubonix, o you mean it connects to that server ip?
[12:24:29] <pyeverything> https://stackoverflow.com/questions/68949640/extracting-the-feature-vector-before-the-fully-connected-layer-in-a-custom-resne
[12:24:47] <nubonix> stealth_: na, ill post code, sec
[12:25:20] <nubonix> stealth_: https://bpa.st/BXQQ
[12:25:44] <nubonix> line 19 is kind of a problem with the way this works tho...
[12:25:50] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Remote host closed the connection)
[12:25:53] <nubonix> cause it can only detect new ips, not ones that already exist
[12:26:38] <theprophet> guys is it possible to check  chat history here?
[12:26:49] <nubonix> theprophet: ye with something like irccloud
[12:27:03] <theprophet> can you be more specific please?
[12:27:08] <stealth_> nubonix, you need to account for `get_new_server_id` returning `None` to `server_id` on line: 38
[12:27:09] <nubonix> depends on your client
[12:27:25] <theprophet> i am using browser
[12:27:38] <nubonix> still, you have to have a client that connects to irc
[12:27:43] <nubonix> suchas kiwi
[12:27:51] *** Joins: DXR (~lyrical@77.49.61.174.dsl.dyn.forthnet.gr)
[12:27:53] <theprophet> no other way around?
[12:27:54] <nubonix> im using a browser too, but im connected via irccloud.com
[12:28:58] <nubonix> mm, not sure if there is a history for this channel, only way that i know of would be to use an irccloud paid account as it keeps logs of all servers that u are in from the moment u start using it [paid]
[12:29:13] <stealth_> nubonix, i don't get why you have 3 await on line: 2, 5, 10
[12:29:18] *** Joins: pycode (~pycode@2001:b07:5d28:551:2871:4174:6694:470f)
[12:29:31] <theprophet> i see
[12:29:40] <nubonix> stealth_: these coros have to be done in a sychronous fashion
[12:29:55] <theprophet> does libra count?
[12:30:07] <nubonix> libra is the provider of the irc network
[12:30:17] <theprophet> ok, i see
[12:30:17] <stealth_> nubonix, you have no checks, if previous condition actually passed
[12:30:21] <nubonix> so no, its just a network
[12:30:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:30:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:30:35] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[12:30:40] <nubonix> stealth_: previous condition?
[12:31:02] <stealth_> nubonix, ya like only install if file is different
[12:31:04] <nubonix> oh, like the none u mentioned earlier
[12:31:21] <nubonix> stealth_: the checks are done within the coro
[12:31:44] <nubonix> stealth_: basically, if a file hasnt been downloaded, download it [these are two endpoints on the restful api], same goes for installation
[12:31:44] *** Quits: nattiestnate (~nate@103.2.146.186) (Quit: WeeChat 3.2)
[12:32:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:32:34] <nubonix> theprophet: libra has the capability of logging, but im not sure they do
[12:32:58] <theprophet> i tought libera had the option to go back and see the history
[12:32:59] <nubonix> esp this channel, since i think its actually against the toc but im not sure
[12:33:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:33:33] <nubonix> ask in #libra ?
[12:33:40] <nubonix> as this isnt really python related
[12:33:49] <theprophet> i forgot to note something i asked earlier. i tought this window would never refresh by itself
[12:34:02] <theprophet> yea i will
[12:34:11] <nubonix> could probably ask again
[12:34:33] <nubonix> ive done it, just try not to make a habbit of it :P
[12:34:41] <stealth_> nubonix, anyways you need `if server_id:` on line:39
[12:34:56] <nubonix> stealth_: yeah, makes sense
[12:35:05] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:59c3:37e8:f3c1:3d30)
[12:35:24] <nubonix> stealth_: still doesnt really answer my q about the server id problem tho
[12:35:28] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:36] <pyeverything> did someone from the channel responded this https://stackoverflow.com/a/68949902/2414957 I have hard time following it
[12:35:38] <nubonix> howto use the old ips to check
[12:35:52] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[12:36:20] <pyeverything> I prefer to use the forward hook as mentioned in https://stackoverflow.com/a/68949902/2414957 meaning I prefer not to change the original "forward" code i have in the custom_resnet18.py code
[12:36:36] <theprophet> how often you guys use super()?
[12:37:10] <pycode> hello everybody, i am using pandas most of times but now i need to create a project that works with a "stream" with a stream i mean that via API i receive 1 call every 1 second less or more with some prices and then i need to store those prices AND do few stats over that data, so at the beginning, for example i do df['mean'] = df['price'].mean() then when new data i need to update that "mean" column because i have another endpoint
[12:37:10] <pycode> that need to returns mean/std and other stats so basically i have 1 endpoint to store that "stream" and another one to return stats
[12:37:32] <nubonix> theprophet: super is used when using inheritance for classes
[12:37:39] <pycode> i think pandas is not good for "real time" data, so what can i do to handle that data and do realtime stats over it
[12:37:54] <stealth_> nubonix, you should like pop ip from the `previous_server_ips`
[12:38:05] <stealth_> nubonix, you might be going in loop without it
[12:38:07] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Ping timeout: 240 seconds)
[12:38:09] <nubonix> theprophet: because when u use super in __init__ it overrides the classes __init__ method that you are inheriting from
[12:38:27] *** mdk is now known as mdk[m]
[12:38:27] <nubonix> stealth_: o...
[12:38:34] <theprophet> yes i know that  nubonix
[12:38:35] *** mdk[m] is now known as mdk
[12:38:54] <theprophet> what exactly is overridiging?
[12:39:05] <theprophet> riding*
[12:39:07] <nubonix> theprophet: gemme like 5 mins ill write u an example
[12:39:21] <theprophet> ok ty
[12:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:34] <nubonix> stealth_: but im not iterating through it at all, b/c im checking if server ip doesnt exist in the previous server ips
[12:40:36] <stealth_> nubonix, then where is the new ip coming from?
[12:40:49] <nubonix> theprophet: https://bpa.st/G5KQ
[12:41:07] *** Joins: gtristan (~tristan@223.38.30.239)
[12:41:22] *** Joins: cth (~Cthulchu@193.194.107.250)
[12:41:38] <nubonix> stealth_: when i add the new server via the pyqt5 app, it re-writes the json file, and this is how im getting ips. within the get_new_server_ip function, im comparing the ips that were loaded on the startup of the pyqt5 app to the ips that are in the file right now
[12:41:40] *** Joins: darksun (~darksun@user/darksun)
[12:42:13] <theprophet> ok for what i know about overriding is when you gotta methods with same name, but what is overriding in that code you wrote?
[12:42:36] <nubonix> if you notice, it prints foo, then it prints bar, this is because of inheritence
[12:42:57] <nubonix> so if you inherit in a class, you have access to all the variables and methods [functions] within the other class
[12:43:00] <theprophet> yes i did but, what is the benefit there?
[12:43:30] <nubonix> you grabbed the previously declared variable self.msg
[12:43:46] <nubonix> self.msg was declared in foo, and you are passing it to bar
[12:44:17] <nubonix> then with overriding, you basically did self.msg = 'bar', so the foo self.msg is ignored, as it is overwritten by the self.msg in the bar class
[12:45:01] <nubonix> so inheritance is used when you have two classes, and the second class builds upon the first class
[12:45:10] *** Quits: molt (~molt@79.140.150.225) (Ping timeout: 240 seconds)
[12:45:11] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[12:45:14] <nubonix> you can use more classes than just two, but this is just a simple example
[12:45:39] <pycode> anyone?
[12:45:39] <stealth_> nubonix, comment out line:30, its ben called again in line:17
[12:45:40] <theprophet> ok, so overriding bassicaly means like overwriting but not entirely?
[12:45:43] <nubonix> stealth_: still with me or
[12:46:06] <nubonix> overriding is a term used in classes, overwriting is a term used in files, they are basically doing the same thing though
[12:46:39] *** Joins: manti7 (~manti7@176.10.104.94)
[12:46:42] <theprophet> ohh ok
[12:46:45] <nubonix> so if you write this program in python "msg = 'foo'; msg='bar' "', which will print?
[12:46:56] <theprophet> msg bar
[12:47:11] <nubonix> it will print bar, because it basically deleted the previously stored variable
[12:47:54] <theprophet> so overriding means litteraly overwriting over previous variable is that correct?
[12:47:59] <nubonix> there is a technical term for this double something, but this is the same idea as overriding
[12:48:11] <nubonix> yes
[12:48:21] <nubonix> or you can think of it as that
[12:48:31] <nubonix> as im not sure how python actually handles it, but it doesnt really matter
[12:48:58] <theprophet> i was confused, because everytime i googled overriding the answers were all saying that its just a situation where you have 2 or more function with same name
[12:49:11] <nubonix> so yeah, if you write hello on a piece of paper, then erase it, and write world, this is a similar concept
[12:49:31] <theprophet> ok that makes sense. ty
[12:49:36] <nubonix> np
[12:49:44] <nubonix> overriding is also used with __init__.py
[12:49:53] <theprophet> let me ask you this
[12:50:15] <nubonix> stealth_: damn... lost you
[12:50:47] <p-i-> Suppose I have https://foo.com/bar/quux How to split into https://foo.com/bar and quux?
[12:51:03] <theprophet> nubonix do you override anything here? https://pastebin.com/QDxGEwx4
[12:51:03] <nubonix> depends
[12:51:07] <nubonix> is your url dynamic?
[12:51:23] <p-i-> Actually quux is a number, so it's like https://foo.com/bar/12345 so I could regex match on / + number
[12:51:47] <theprophet> cause pycharm says i do, but ur not saying anything about methods having the same name. or earlier when i asked if i was overriding anything there i was asnwered that i dont.
[12:51:57] <jinsun> pycode: pandas is definitely not good for appending continuosl, if it is just simple stats like mean I would just write my own class that stores lists and append to that
[12:52:12] <nubonix> theprophet: last time i checked, a goat isnt a cat
[12:52:15] *** Joins: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br)
[12:52:20] <p-i-> Actually https://foo.com/ is always constant, so I could do url[len('https://foo.com
[12:52:31] <nubonix> p-i-: no...
[12:52:42] <theprophet> what u mean by that? like i should not put cat in goat?
[12:52:47] <nubonix> .split('/')[3]
[12:53:07] <p-i-> bar, quux = url[len('https://foo.com/'):].split('/')
[12:53:08] <nubonix> theprophet: they share the trait animal, but a cat in a goat makes no sense
[12:53:31] <p-i-> Feels inelegant, but it works
[12:53:31] <nubonix> p-i-: nope :P
[12:53:34] <nubonix> it doesnt
[12:53:38] <theprophet> how so? how else i would inherit the atributes from the parent class?
[12:53:47] <nubonix> p-i-: cause ur going to split by the first /
[12:54:24] <nubonix> theprophet: what is your overall goal with this program
[12:55:43] <theprophet> so that all animals share name and age but dog had color atribute without rest of the animals
[12:55:57] <nubonix> theprophet: it seems you are using inheritence correctly, but your naming convention is terrible, create a new class `animal` that you can pass to cat, and the rest
[12:57:18] <theprophet> i wanna know why is it bad idea to insert cat class in goat class, how else i would inherit the atributes?
[12:57:42] <theprophet> even if i create animal class, i still need to insert the parent class in child classes am i wrong?
[12:58:24] <nubonix> yes, instead of using the cat, you would use animal, for all of them, cat, goat, dog
[12:58:35] *** Joins: szymon (~ugh@staticline-31-183-186-12.toya.net.pl)
[12:58:35] <theprophet> i mean i was thinking the same and i would most def mind what you said about naming but still
[12:58:47] <nubonix> a dog has nothing to do with a cat, and a goat has nothing to do with a cat, you need to find a similarity between them to use inheritence
[12:58:54] <theprophet> so thats the problem  u saw in my code or is there anything else u wanna add?
[12:59:13] <theprophet> so you are pointing at the clean logic right?
[12:59:44] <theprophet> mathematical order
[13:00:21] <nubonix> the problem is just logic, it doesnt make code logic sense to do what you are doing, but technically it works. however, you want to create the animal class because you want to keep the stuff that doesnt matter out. for example, if you used the dog class instead of the cat, then you would have a color variable for each animal, and the only one that uses color is the dog
[13:00:48] *** Joins: ogis (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[13:01:22] <nubonix> not sure you need name, age in super().__init__() but i could be wrong
[13:01:23] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[13:01:28] <nubonix> no nvm, u do, ignore that
[13:02:13] <nubonix> p-i-: why are using using len there??
[13:02:20] *** Joins: dvx (~dvx@185.63.97.64)
[13:02:24] <Gurkenglas> Can I make yield pause its caller?
[13:02:35] <nubonix> wdym
[13:03:10] <Gurkenglas> library has function foo, it has an argument function bar which i supply and control, i wanna use yield in it and make the function pause when i do
[13:03:27] <Gurkenglas> (and collect the yielded values on the side)
[13:04:19] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:04:26] <nubonix> mm, generates are paused until u get the next value?
[13:04:30] <nubonix> generators*
[13:04:33] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[13:04:36] <Gurkenglas> aka use a function of type (function -> noreturnvalue) as (Generator -> Generator)
[13:05:06] <nubonix> so you want to store the yielded values and process them yah?
[13:05:35] <Gurkenglas> replace every `bar(*args,**kwargs)` in foo with `yield from bar(*args,**kwargs)` without actually being the foo author
[13:06:23] <KirkMcDonald> If you can't change foo, then you can't change what it does with this callback.
[13:06:27] <theprophet> nubonix TypeError: __init__() missing 2 required positional arguments: 'name' and 'age' this is the error i am getting if i remove name and age from the super().__init__. still think why i need it?
[13:06:46] <nubonix> `no nvm, u do, ignore that`
[13:06:56] <Gurkenglas> KirkMcDonald, right but bar should technically be able to do "okay and now we pause my thread which happens to be running foo until the next time someone wakes it up"
[13:07:12] <theprophet> but i wanna know why did you wonder :P
[13:07:49] <nubonix> theprophet: cause i forgot, doesnt make sense for it to be inheriting if it doesnt have at minimum the same variables being passed to the class
[13:07:52] <KirkMcDonald> Gurkenglas: If it's a matter of pausing a thread, then there are ways to block a thread.
[13:07:58] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[13:08:04] *** Joins: sharperguy__ (~sharpergu@89.244.121.180)
[13:08:04] <KirkMcDonald> Gurkenglas: A mutex or a blocking queue or whatever.
[13:08:08] <Gurkenglas> KirkMcDonald, does yield use threads? I would expect to use whatever yield uses
[13:08:12] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[13:08:16] *** Joins: dimbag (~Couture@194.4.149.204)
[13:08:16] <theprophet> nubonix i see
[13:08:18] <KirkMcDonald> Gurkenglas: Yield does not use threads, no.
[13:08:32] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:08:34] <Gurkenglas> right so yield has a way to make the surrounding function pause, i wanna pause the calling function too
[13:08:34] <theprophet> @nub
[13:08:38] <nubonix> Gurkenglas: y would it use threads, its only reading sequentially
[13:09:10] <Gurkenglas> nubonix, i was using threads as a proof that what i want is possible, now i want it properly :)
[13:09:13] <KirkMcDonald> Gurkenglas: This you cannot do, because it's not that yield pauses a function, it's that the presence of a yield means it isn't really a function at all, but a generator.
[13:09:29] <theprophet> nubonix can you tell me why methods with the same name called overriding?
[13:09:33] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[13:09:46] <Gurkenglas> KirkMcDonald, okay so whichever python machinery turns a function into a generator when there's a yield, can I apply it to foo?
[13:09:49] <KirkMcDonald> Gurkenglas: And you can't change foo from a function to a generator from a callback.
[13:10:00] <KirkMcDonald> Gurkenglas: This happens at compile time.
[13:10:05] <Gurkenglas> python is compiled?
[13:10:11] <KirkMcDonald> To bytecode.
[13:10:15] <nubonix> theprophet: cause they conflict, if you install a package and then name your python file the same name, they will conflict, so you need to use a __init__.py to distinguish the two
[13:10:28] *** Joins: emika8 (~emika@83.136.182.183)
[13:10:29] <KirkMcDonald> There are, in fact, some things that happen at compile time.
[13:10:44] <KirkMcDonald> Determining whether something is a function or a generator is one of them.
[13:10:47] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c2f:9700:bb87:a420:c383:c992) (Ping timeout: 250 seconds)
[13:10:50] <Gurkenglas> hmm. sad. do you agree that this makes yield, in a sense, second-class?
[13:10:56] <KirkMcDonald> No.
[13:11:01] <nubonix> theprophet: however, this example could be incorrect, so ill retract it. not sure, perhaps the defintion of the word fits
[13:11:27] *** Quits: emika (~emika@185.207.249.227) (Ping timeout: 240 seconds)
[13:11:27] *** emika8 is now known as emika
[13:11:32] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[13:11:46] <Gurkenglas> ...how does yield interact with decorators?
[13:12:02] *** Quits: ogis (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[13:12:03] <KirkMcDonald> Gurkenglas: It doesn't. I guess I'm not sure what you're asking.
[13:12:03] *** Joins: shugo (~shugo@user/shugo)
[13:12:28] *** Joins: ogis (~Android@dw49-106-188-52.m-zone.jp)
[13:12:32] <theprophet> do you consider overriding methods a bad practice?
[13:12:36] <Gurkenglas> if i put `@foo` above the definition of bar does foo get the generator or the function
[13:12:39] <theprophet> nubonix
[13:12:51] <KirkMcDonald> Gurkenglas: It gets whatever bar is.
[13:13:00] <Gurkenglas> suppose bar includes yield.
[13:13:06] *** Joins: saroy (~Sandipan@43.252.250.83)
[13:13:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 240 seconds)
[13:13:26] <KirkMcDonald> Gurkenglas: Then bar is a generator. (Or, to be especially pedantic, bar is a generator function, which when called returns a generator.)
[13:13:26] <nubonix> theprophet: this also might be incorrect, so take it with a grain of salt, but i think that its called overriding because python still keeps the variable saved, even when its overridden, and is garbage collected
[13:13:54] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[13:13:59] <nubonix> theprophet: depends on how its used, in classes, no, in functions, probably
[13:14:53] <theprophet> nubonix how often do you use overriding?
[13:17:01] <theprophet> nubonix
[13:17:01] <theprophet> The main advantage of method overriding is that the class can give its own specific implementation to a inherited method without even modifying the parent class code.
[13:17:05] <theprophet> do you agreee on that?
[13:17:19] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[13:17:39] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[13:17:58] <Gurkenglas> I can have bar append its argument to a nonlocal list, call foo(bar), and then have a list of everything foo called bar with. Can I have a generator of the values foo calls bar with instead?
[13:18:10] <theprophet> KirkMcDonald how about you?  do you agree that
[13:18:11] <theprophet> The main advantage of method overriding is that the class can give its own specific implementation to a inherited method without even modifying the parent class code.?
[13:18:52] *** Quits: Meteorhead (~Meteorhea@165.225.76.202) (Quit: Client closed)
[13:19:32] <nubonix> theprophet: the advantage of overriding in classes is using inheritence, think of it as building blocks. building block2 relies on building block 1, as building block 2 inherits from building block2. you can build , building block 2 without building block 1, but it makes it easier if you use inheritence
[13:19:37] <nubonix> theprophet: overriding in classes? quite often, in functions, rarely, and its usually only to comply with pep8 characters in a line limitation
[13:20:30] <KirkMcDonald> theprophet: I would not frame it in terms of advantage. That is the thing that it does.
[13:20:34] *** Quits: Abrax (~Abrax@user/abrax) (Read error: Connection reset by peer)
[13:20:45] <nubonix> theprophet: i think this could be considered as overriding, but perhaps its a stretch, same idea though. using url = 'https://google.com' and then in the next line new_url = url
[13:20:56] <Gurkenglas> yield is much cheaper than the equivalent implementation using a queue, right?
[13:21:32] <nubonix> theprophet: this is not something i would do... i would definitely consider this example to be a bad practice
[13:21:59] <theprophet> nubonix i see, thank you.
[13:22:00] <KirkMcDonald> Gurkenglas: I'm not sure I can answer this without seeing code. It is not clear to me what you mean by "a generator of the values."
[13:22:07] <nubonix> theprophet: np
[13:22:42] <Gurkenglas> KirkMcDonald, suppose I have `foo = lambda bar: bar(1) + bar(2) + bar(3)`. How do you generate [1,2,3]?
[13:23:20] <KirkMcDonald> Gurkenglas: Append a value to a list each time you call bar(), I suppose.
[13:23:21] <nubonix> theprophet: also, another reason overriding in a function is kind of a bad idea, is if you are going to learn other programming languages, because unlike python, there are languages that do not support this feature
[13:23:24] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: No Ping reply in 180 seconds.)
[13:24:19] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[13:24:21] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Max SendQ exceeded)
[13:24:34] <Gurkenglas> KirkMcDonald, suppose I have `foo = lambda bar: fooi(bar,1)` and `fooi = lambda bar i: = bar(i)+fooi(i+1)`. How do you generate [1,2,3,...]?
[13:24:43] <theprophet> nubonix oh i see. then can you telll me, when you made that little code to show me overriding example, what was the benefit from it? like why did you override there? is it a shortcut or something?
[13:24:47] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[13:25:00] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[13:25:07] <nubonix> theprophet: it was to demonstrate how inheritance works
[13:25:17] <Gurkenglas> *fooi(bar,i+1), of course.
[13:25:33] <theprophet> yea i get that, but what are the cases when you actually need to override when its really usefull?
[13:25:50] *** Joins: ice9 (~ice9@user/ice9)
[13:26:02] <nubonix> theprophet: when one or more classes use the same base class [inherit from the base class]
[13:26:10] *** Quits: szymon (~ugh@staticline-31-183-186-12.toya.net.pl) (Ping timeout: 240 seconds)
[13:26:17] <nubonix> theprophet: an example would be in guis
[13:26:46] <nubonix> theprophet: do you know how classes differ from functions?
[13:26:51] <KirkMcDonald> Gurkenglas: This example seems convoluted. And it is not clear to me which thing it is you want to generate these values.
[13:27:01] <theprophet> yes
[13:27:07] <theprophet> nubonix
[13:27:30] <nubonix> gemme a short sentence
[13:27:37] *** Quits: ogis (~Android@dw49-106-188-52.m-zone.jp) (Ping timeout: 248 seconds)
[13:27:45] <theprophet> nubonix ok
[13:29:27] <Gurkenglas> KirkMcDonald, I don't follow your last sentence; suppose foo calls bar for every even number. How do you therefore produce a generator of the even numbers?
[13:29:44] <theprophet> i was going to write the code but , i changed my mind, ok for example class are something specific, and functions do something specific for those classes
[13:30:11] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:30:37] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[13:30:39] <nubonix> theprophet: mm, id have to disagree. classes are a set of functions used for w/e purpose, while a function is only one function used for w/e purpose
[13:30:51] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[13:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:15] *** Joins: driib3 (~driib@185.195.233.163)
[13:31:16] *** Quits: libussa_ (~libussa@libussa.net) (Ping timeout: 252 seconds)
[13:31:32] *** Joins: phylaz1 (~phylaz@219.92-221-176.customer.lyse.net)
[13:31:34] <nubonix> they are both "re-usable" code, a class just do more, basically an advanced function if you will
[13:31:49] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Ping timeout: 252 seconds)
[13:31:54] <nubonix> re-reading your response, id have to say that you arent incorrect
[13:31:59] <Gurkenglas> KirkMcDonald, if that still sounds convoluted: "call bar for every _" is a mathematically neat way to represent generators. For example, turning a generator of generators into a single generator is in this formulation just the composition of the two higher-order functions.
[13:32:00] *** Quits: fxrs (~fxrs@192.227.212.130) (Quit: ZNC 1.7.x-git-653-187f617 - http://znc.in)
[13:32:10] *** Joins: szymon (~ugh@staticline-31-183-186-12.toya.net.pl)
[13:32:14] *** Joins: fxrs (~fxrs@192.227.212.130)
[13:32:17] <theprophet> reuseble in inheritance or in general? nubonix?
[13:32:22] *** Joins: libussa (~libussa@libussa.net)
[13:32:22] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[13:32:30] <nubonix> either
[13:32:30] *** Joins: Bardon (~Bardon@user/Bardon)
[13:32:34] *** Joins: Abrax (~Abrax@user/abrax)
[13:32:55] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: xx (~xx@user/xx) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 252 seconds)
[13:32:55] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[13:32:55] *** driib3 is now known as driib
[13:33:09] <nubonix> you can re-use a class by itself to do multiple things, or u can use a class as a base class [used for inheritence]
[13:33:12] <theprophet> what do you mean by w/e btw?
[13:33:18] <nubonix> whatever == w/e
[13:33:23] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[13:33:28] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[13:33:28] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 252 seconds)
[13:33:28] *** phylaz1 is now known as phylaz
[13:33:29] <KirkMcDonald> Gurkenglas: You can certainly call a generator recursively and yield its results from the calling generator.
[13:33:47] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[13:34:07] *** Joins: aead (~aead@user/aead)
[13:34:07] <shugo> can i convert a panda dataframe into a python array ? it is a column of excelsheet which i am opening using pandas
[13:34:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[13:34:14] <theprophet> nubonix ok so what was your following question about me knowing whats the differ?
[13:34:15] *** Joins: snalty (~Shhh@user/snalty)
[13:34:24] <Gurkenglas> KirkMcDonald, that requires the caller to cooperate; the specific foo I am interested in is re.sub - I'd like a generator of all the matches.
[13:34:48] *** Joins: m4v (~znc@ubuntu/member/m4v)
[13:34:51] <nubonix> theprophet: was to help you understand why inheritance is good / usable
[13:35:04] *** Joins: Betal (~Betal@user/betal)
[13:35:06] *** Joins: mrwick (~mrwick@user/mrwick)
[13:35:08] *** Joins: mdk (~mdk@python/psf/mdk)
[13:35:36] <theprophet> yes i know that, nubonix trust me i do, but i dont understand the purpose of overriding when what you override can be done without overriding..
[13:36:06] <nubonix> theprophet: faster to write, cleaner
[13:36:20] <KirkMcDonald> Gurkenglas: This just isn't going to work. Are you familiar with the notion, with respect to coroutines, of "red functions" and "blue functions"?
[13:36:42] <theprophet> nubonix can you write the unclean not overriden version of the code you showed me? please
[13:36:43] <nubonix> theprophet more concise, as its very good to eliminate any redundancy in programming
[13:36:44] <Kingsy> what is the best way of adding query string parameters to a url string? i.e auto determining ? and & depending on its current state
[13:37:18] <Gurkenglas> rings a bell. it's whether a function is thread safe, right?
[13:37:21] <theprophet> nubonix not like worst version of but the previous level.
[13:37:23] <KirkMcDonald> Gurkenglas: Generators are effectively coroutines; Python implements its coroutines using them.
[13:37:29] <nubonix> theprophet: just remove the super line in the bar class, and then add another line to re-assign the self.msg variable
[13:37:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-c748-066b-9bf0-7da3.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:37:59] <lxer> Question:  __get__ and __getattribute__ works on a instance, but is there a way to access Class attributes like that?
[13:38:07] *** Joins: someguy123 (~someguy@user/someguy123)
[13:38:09] <KirkMcDonald> Gurkenglas: This isn't about thread safety. It's about whether something will block.
[13:38:16] <nubonix> theprophet: by doing this, these classes are no longer sharing information
[13:38:45] <theprophet> nubonix between eachother?
[13:39:03] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:39:04] <theprophet> nubonix or what you mean is parent class does not share anymore?
[13:39:08] <KirkMcDonald> lxer: I'm unclear on what you're asking. And I suspect you mean __getattr__ rather than __get__
[13:39:13] <nubonix> no, as foo does not inherit bar, its only a one way communication by using inheritence
[13:40:08] <nubonix> theprophet: if you remove the super, and (foo) from the bar class, [i forgot to add this step], then bar no longer has access / cannot use the information from foo
[13:40:27] *** Quits: someguy1233 (~someguy@user/someguy123) (Ping timeout: 240 seconds)
[13:40:37] <nubonix> theprophet: so in order to mimic the behavior of foo, you need to assign the variable twice in the bar class
[13:40:47] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[13:41:17] <nubonix> theprophet: please send me the link, as id prefer to not write it again
[13:41:45] <theprophet> @nubonix
[13:41:51] <theprophet>  the link you gave me ? https://bpa.st/G5KQ
[13:42:31] <lxer> KirkMcDonald: no, I mean __getattribute__.  I have some class attributes (not instance attributes), I can access it like Myclass.something , but I would like to modify it a bit before it is returned. I ould do that using __getattribute__ , but that requires instantiating: Myclass().something
[13:43:25] <nubonix> theprophet: yes, b/c [because] im lazy, and cba to write it again, but here is the unclean version you asked for, however, i might need to add something like opening a file to better demonstrate why using inhertience can be good. https://bpa.st/YRJA
[13:43:55] <KirkMcDonald> lxer: And __get__ doesn't help here? I believe the descriptor protocol can do this.
[13:44:20] <theprophet> nubonix ok thank you so much, i aprecciate that.
[13:44:35] <nubonix> that or this?
[13:45:01] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[13:45:07] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[13:45:22] <theprophet> nubonix i need both to compare
[13:45:32] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[13:45:34] <nubonix> alright, gemme a min
[13:45:36] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[13:45:40] <KirkMcDonald> lxer: That or a metaclass, but best avoid that if possible, I think.
[13:46:26] <Gurkenglas> KirkMcDonald, were you about to give some short proof that this just isn't going to work? :)
[13:46:38] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:16d:5419:a8cf:3833)
[13:47:08] *** Joins: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp)
[13:47:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:48:27] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:48:33] <KirkMcDonald> Gurkenglas: Not like you want it to. Attempting to yield a value will block until it is received. The re.sub() call is going to block on the yield. There's no way to yield a value out with a single thread of execution.
[13:48:49] *** Quits: ogis_ (~Android@neoau1-133-203-96-116.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[13:49:13] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:49:15] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[13:49:34] <nubonix> theprophet:  https://bpa.st/NYUA
[13:49:35] <Gurkenglas> And a second thread is expensive enough that you wouldn't want to use it for library-level code unless absolutely necessary, right?
[13:49:40] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[13:49:47] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[13:49:55] <KirkMcDonald> Gurkenglas: It would be very *silly* to use a thread for this.
[13:50:07] <theprophet> nubonix thank you so much, i will never forget this .
[13:50:11] <Gurkenglas> KirkMcDonald, silly how, if it's not otherwise possible?
[13:50:30] <nubonix> theprophet: lols dw about it, people here have helped me 1000x as much
[13:51:18] <theprophet> nubonix yea but this means alot to me so i am greatfull you''ve done amazing job for me today.
[13:51:19] *** Joins: fortuno51 (~fortuno51@public-gprs232995.centertel.pl)
[13:51:28] <nubonix> :)
[13:51:33] <KirkMcDonald> Gurkenglas: I mean, whatever you're operating on is already small enough to fit in memory.
[13:52:07] <Gurkenglas> And threads are meant for things that are larger than that?
[13:52:21] <KirkMcDonald> Gurkenglas: I mean that you can just collect the result into a list and have done.
[13:52:44] <Gurkenglas> Unless the list is infinite, or foo has other side effects that you want to get ahead of.
[13:52:45] *** Joins: fortuno51_ (~fortuno51@37.120.156.254)
[13:52:55] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:53:20] <KirkMcDonald> Gurkenglas: This was about re.sub().
[13:53:49] <Gurkenglas> Yeah, but I'm trying to get code into python-lenses which in particular can handle re.sub :)
[13:54:02] <KirkMcDonald> Gurkenglas: But if you want to generalize the issue, then you've got a blue function trying to call a red one, yeah? https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/
[13:54:18] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[13:55:40] *** Quits: fortuno51 (~fortuno51@public-gprs232995.centertel.pl) (Ping timeout: 240 seconds)
[13:55:53] <Gurkenglas> yeah ive read that long ago! cheap threads are what the last section hopes for.
[13:56:12] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[13:56:15] <rendar> in a console prompt application, what is the best method to insert a password, for instance? do i have to interrupt the normal flow, to create a new prompt?
[13:57:00] <Gurkenglas> and how expensive can that be, anyway? just have a tree of callstacks like git branches share most of their history and having multiple callstacks is cheap, right?
[13:57:00] <KirkMcDonald> Gurkenglas: Which are not a thing that Python has; it has coroutines.
[13:57:21] <iomari891> greetings, How can I exit my code with a subprocess.call command? I want to my code to exit and run something like "less file.txt"
[13:58:34] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:58:40] <Gurkenglas> KirkMcDonald, sure. But still this means that using a thread for this isn't *silly*, yes?
[13:59:03] <KirkMcDonald> iomari891: There are a few possible approaches. The simplest is probably to just wait for the subprocess to finish, and then exit.
[13:59:09] *** Joins: The_Loko (~The_Loko@86.127.251.186)
[13:59:50] <KirkMcDonald> Gurkenglas: What is consuming this generator?
[14:00:21] *** Joins: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at)
[14:00:58] <iomari891> KirkMcDonald: I thought of that but the user may be viewing the output file for quite some time and I thought it would good to terminate the python code while viewing.
[14:01:01] <KirkMcDonald> iomari891: Another option is os.execve() and friends, though this can have other concerns.
[14:01:10] <DnzAtWrk> why is tkinter not more popular
[14:01:23] <DnzAtWrk> seems to be perfectly sufficient for most of your needs
[14:01:32] <KirkMcDonald> iomari891: You can also launch the subprocess with subprocess.Popen() and then end the Python script before it finishes.
[14:01:32] <Gurkenglas> KirkMcDonald, the user of the library! ;_; maybe instead of returning a generator he should return a "foo that calls bar with _", because you can convert one way but not the other? ...
[14:02:31] <KirkMcDonald> Gurkenglas: To go back to the re.sub() example, the questions I'd have are: What is consuming the generator? And what is receiving the return value from re.sub()?
[14:03:01] <iomari891> KirkMcDonald: I didn't know I could do that with Popen.
[14:03:26] <KirkMcDonald> iomari891: All of these things behave in slightly different ways.
[14:04:08] <iomari891> KirkMcDonald: How can I make Popen exit while a process is open?
[14:04:43] <KirkMcDonald> iomari891: subprocess.Popen() does not block. It starts the process and gives you a Popen object.
[14:05:22] <iomari891> KirkMcDonald: I should have know that. Thanks. That's exactly what I'm looking for.
[14:05:32] <Kingsy> what is the best way of adding query string parameters to a url string? i.e auto determining ? and & depending on its current state
[14:05:36] <KirkMcDonald> But note that if you started this Python script from a shell, this is going to kick you back to the shell as soon as the Python script ends.
[14:05:55] <iomari891> KirkMcDonald: understood
[14:06:46] <KirkMcDonald> Kingsy: It is probably most sensible to parse the URL and its query parameters, then add the new parameters and format it back out.
[14:07:56] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:08:27] <rendar> any help?
[14:08:48] <KirkMcDonald> rendar: There is the getpass module.
[14:09:01] <rud0lf> hello, i'm not sure if it's linux or python question...
[14:09:03] <rud0lf> `su -s /bin/bash -c "/usr/sbin/nut_pushover.py \"$m2\"" rud0lf`    - if $m2 contains "\n", python's argv[1] contains LITERALLY "\n"
[14:09:11] <rud0lf> any idea how to mitigate it?
[14:09:39] <rud0lf> it works for notify-send bash command but not python script so i think it's python's fault...
[14:09:45] *** Joins: linguist (~brunodOut@170.84.57.174)
[14:09:55] <rendar> KirkMcDonald, my problem is that i already use another library for console prompt: prompt_toolkit
[14:10:02] <rendar> i should use that one
[14:10:08] <rud0lf> i used argv[1].replace(r"\n", "\n") but i feel dirty,,,
[14:10:08] <KirkMcDonald> rendar: I do not know this library.
[14:11:28] <KirkMcDonald> rud0lf: I'd expect that this is the shell quoting it out, then. Python isn't magically transforming 0x0A into r"\n".
[14:12:06] <Kingsy> KirkMcDonald: yeah I was hoping for some documentation or an example. still looking.
[14:12:36] <KirkMcDonald> Kingsy: The urllib.parse module has the functions for all this stuff: https://docs.python.org/3/library/urllib.parse.html
[14:12:55] <Kingsy> perhaps IO could use requests.models import PreparedRequest
[14:14:31] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 258 seconds)
[14:16:57] <DnzAtWrk> what is a good workflow for separating functions and gui for tkinter
[14:17:01] <DnzAtWrk> into different files
[14:17:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 248 seconds)
[14:18:34] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:19:10] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[14:21:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:22:01] *** Joins: Deepfriedice (~Deepfried@60-241-43-208.static.tpgi.com.au)
[14:22:07] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Ping timeout: 240 seconds)
[14:22:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:23:27] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[14:24:06] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[14:26:12] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:29:07] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[14:30:02] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[14:33:45] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 248 seconds)
[14:35:36] *** Joins: upsala (~zcb@185.213.155.160)
[14:36:05] *** Joins: acresearch (~acresearc@user/acresearch)
[14:36:07] <rendar> there is this prompt_toolkit library that at some points it blocks everything for like 1 second, how can i check what's happening?
[14:37:02] *** Joins: jazzy (~jaziz@2600:380:842b:9c51:853a:31ba:318f:4161)
[14:42:12] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[14:42:41] *** Quits: saroy (~Sandipan@43.252.250.83) (Remote host closed the connection)
[14:42:58] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[14:43:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[14:44:56] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:45:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[14:45:31] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[14:45:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[14:47:18] *** Quits: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[14:47:21] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[14:48:15] *** Joins: xx (~xx@user/xx)
[14:48:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[14:50:58] *** Joins: trace987 (~trace@95.90.106.112)
[14:51:07] *** Quits: gtristan (~tristan@223.38.30.239) (Ping timeout: 240 seconds)
[14:52:11] *** Joins: jaggz (~jaggz@user/jaggz)
[14:52:14] <jaggz> No module named 'importlib.metadata'
[14:52:16] <jaggz> whycome?
[14:52:38] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Quit: Leaving)
[14:53:12] *** Joins: legola (~legola@46.235.100.27)
[14:54:02] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:54:40] *** Quits: dimbag (~Couture@194.4.149.204) (Ping timeout: 240 seconds)
[14:56:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:56:42] <jaggz> interesting.  didn't have python3-importlib-metadata installed..
[14:57:15] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[14:57:29] *** Joins: kosh (~kosh@user/kosh)
[14:59:20] *** Joins: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at)
[14:59:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:01:20] <ExeciN> Hi people. I'm trying to start a python service but it gives me this error "OSError: [Errno 99] error while attempting to bind on address ('::1', 52900, 0, 0): cannot assign requested address". I tried poking around, checked what processes are bound to what ports but 52900 does not seem bound. What exactly is the issue here?
[15:06:48] <jinsun> maybe that "::1" is the problem not the port, ipv6 vs ipv4, try "127.0.0.1" ?
[15:07:33] <ExeciN> after a few suggestions from #linux it seems like lo interface does not have an ipv6 address
[15:07:44] <ExeciN> jinsun: but yes, you are correct
[15:08:08] *** Joins: eson123 (~eson123@118.69.128.37)
[15:09:34] <eson123> question, is it possible to do real-time recording in python ? like currently i am trying to record my voice and it will keep on recording until i say "end" then it will stop recording and print out everything i have been saying, i think i can use pyaudio and speechrecognition, but not sure how, anyone have any ide a?
[15:12:20] <Kingsy> so I used prepared request -> https://www.test.org/testing?utm_source=app&amp;utm_campaign=app&amp;utm_medium=app <- is this a valid struct? I am guessing &amp; is the same as & its just escaped and it valid and a proper url?
[15:12:21] *** Joins: azy (~azy@2a01:4f9:c010:9415::1)
[15:13:34] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[15:14:28] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[15:14:58] <jinsun> if you unescape that `&amp;` to `&` then it looks right
[15:15:01] *** Joins: legola (~legola@46.235.100.27)
[15:16:31] <Kingsy> the browser does this for you right? Basically its raw html so just want to make sure its vAlid
[15:17:38] *** Parts: azy (~azy@2a01:4f9:c010:9415::1) ()
[15:19:11] <jinsun> &amp; is & in html, in url encoding it should be %26, the browser will convert to url encoding, it will not unescape html
[15:19:37] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 248 seconds)
[15:20:14] <jinsun> if you wanted to display it in html then it is fine I guess
[15:20:51] <Kingsy> alright cool
[15:21:08] <Kingsy> one more question -> https://bpa.st/X6SQ <- what is wrong with that? I cant seem to reference the functions from my List there.
[15:21:10] <jinsun> but if you want to paste in address bar then fix those &amp; manually, browser won't do it
[15:22:42] <Kingsy> I THINK it should be ok.
[15:22:44] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[15:22:54] <p-i-> Does anyone know how I might optimize download speed for a single .jpg image? I've looked at pycurl, requests.get and wget so far.
[15:23:16] <p-i-> It's a small .jpg and it's still taking >700ms
[15:23:16] <jinsun> Kingsy: self is not defined there, you probably want to `def __init__(self): self.callbacks = [...]`
[15:23:20] *** Quits: trace987 (~trace@95.90.106.112) (Remote host closed the connection)
[15:24:25] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:24:34] <jinsun> Kingsy: self is not some magic thing that is defined when you define your class, that is why all the methods have to explicitly take self
[15:24:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:25:20] <p-i-> Is there any Python lib that parallizes/multiparts a download?
[15:25:27] <p-i-> (for a single file)
[15:25:40] <Kingsy> ahhh got you.
[15:27:54] <Kingsy> and after which. if I use the callbacks like this  for callback in self.CALLBACKS: callback(a,b) how come my IDE is complaining about unexpected arguments?
[15:27:57] *** Joins: Vonter (~Vonter@user/vonter)
[15:31:55] <jinsun> p-i-: maybe this will workf or parallel downloads, https://pypi.org/project/pySmartDL/ , but since you say it is a small file I don't think it will make much difference, probably most of the time is spent in creating the connection itself
[15:33:56] <jinsun> if you just have multiple small files to download then just reusing the same connection will make the later downloads faster, if it is just that one file then not much can be done I guess
[15:35:05] *** Quits: pycode (~pycode@2001:b07:5d28:551:2871:4174:6694:470f) (Ping timeout: 250 seconds)
[15:35:37] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[15:36:00] <raek> p-i-: are you in control of the server too? (that is, can you use other protocols than HTTP(S)?)
[15:36:55] <p-i-> raek: I don't have any control over the server
[15:37:12] <raek> p-i-: do you know that the round trip latency is to the server?
[15:37:47] <raek> (you can use ping to find it)
[15:38:14] <p-i-> This file is small, so multipart won't be effective. Size ranges from 5Kb to 300Kb.
[15:38:19] <p-i-> lemme check that now
[15:38:20] <raek> that will be the mininum time it has to take
[15:38:41] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:39:03] <p-i-> ping is 200ms
[15:40:50] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[15:42:02] <raek> establishing a TCP connection is one round trip. unencypted HTTP could be one rountrip for small files to transfer the request and response. probably one more round trip is needed to close the connection too.
[15:42:39] <raek> (I don't know if HTTPS adds extra roundtrips)
[15:42:43] <p-i-> Here's an example https://t.me/testgrp_pi/11032?embed=1 I'm trying to get the embedded image (which has a super-long filename, so I won't paste it here)
[15:43:22] *** Joins: xon (~xon@host-42-net-68-160-119.mobilinkinfinity.net.pk)
[15:43:30] <p-i-> URL is https://cdn4.telesco.pe/file/some_long_string.jpg
[15:43:42] <p-i-> Even for a tiny image, I'm still facing >600ms download time
[15:43:47] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 240 seconds)
[15:43:53] <p-i-> ping to cdn4.telesco.po is ~200ms
[15:44:06] *** Quits: dre (~dre@2001:8003:c932:c301:9c54:731:9f58:86e1) (Quit: Leaving)
[15:44:40] <raek> from my understanding, 600 ms is about the best you can get with 200ms round trip latency
[15:45:12] <raek> you can use wireshark if you want to dig deeper into the timing by looking at the individual packets
[15:46:08] <rendar> there is this prompt_toolkit library that at some points it blocks everything for like 1 second, how can i check what's happening?
[15:46:29] <raek> p-i-: if you don't mind the question, why do you need to download a single image this fast?
[15:47:07] *** Quits: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:47:17] <p-i-> It's a potential trading signal
[15:47:47] <Kingsy> different question -> self.BASE_SECURE + ('' if url.startswith("/") else '/') + img['src'] <- does this look correct? It is supposed to insert a / if url.startswith doesnt start with one.
[15:47:55] <Kingsy> I think its good. just looking for a sense check.
[15:48:58] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[15:49:29] <Kingsy> tbh I think that is good
[15:49:40] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[15:53:05] *** Joins: bitplane (~bitplane@185.119.152.130)
[15:53:35] <bitplane> hallo. did something bad happen to pyusb 1.1.1 today?
[15:53:58] <supakeen> Kingsy: sure, that works
[15:54:12] <nedbat> bitplane: looks like 1.1.1 was yanked: https://pypi.org/project/pyusb/#history
[15:54:14] <bitplane> I had a requirements.txt with `1.1.*` in, and it started selecting 1.1.0 instead, failed to build and broke all the things
[15:54:44] <nedbat> bitplane: change it to ==1.1.1 and it will install
[15:54:56] <bitplane> yeah I've done that now, thanks nedbat :)
[15:57:35] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[15:57:47] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Quit: imp)
[15:58:30] <bjs> bitplane: you might want to investigate *why* it got yanked, usually it means there was a problem with that release
[15:59:54] *** Joins: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at)
[16:01:07] <bitplane> yeah I was thinking that one of you lot might know!
[16:01:28] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[16:02:07] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 240 seconds)
[16:02:24] <bitplane> seems pretty reckless to pull a release that's 3 months old, that people might be using in production, and go back to one that doesn't build - at least not on my machines anyway
[16:03:18] <bitplane> but everything in the world of libusb on Linux is tied together with bits of old string and sticky tape, so it probably makes sense to pin every version of everything
[16:03:49] <bitplane> it's not like you an unit test most of this stuff :|
[16:03:54] <bitplane> *can
[16:04:49] <bjs> bitplane: yanking is less reckless than deleting,  it's still there for pinned things but if if you were keeping things up to date it'll skip over the yanked release
[16:05:06] <bitplane> yeah fair enough
[16:05:31] <bjs> bitplane: sounds like the library had an unfortunate/problematic versioning if going from 1.1.1 to 1.1.0 broke your code
[16:05:49] <bjs> perhaps thats why 1.1.1 got yanked?  Sadly pypi doesn't seem to record when/why yanks happen
[16:06:30] <bjs> bitplane: perhaps https://github.com/pyusb/pyusb/issues/363 is the reason?  Sounds like they mistagged it as python 2 (? I didn't read the whole thread)
[16:07:09] <bitplane> oof, thanks :)
[16:08:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:10:01] *** Joins: magla (~gelignite@55d40b1a.access.ecotel.net)
[16:11:30] * enyc meows
[16:11:39] <enyc> back to python based task soon!
[16:15:42] <ephemer0l> stealth_ thanks again for your help the other day with that language work around
[16:17:00] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:1489:810:2bd4:7c64:23ea)
[16:17:01] <enyc> ephemer0l: hrrm you make me wonder how much language/translation stuff python has!
[16:17:01] *** Ellenor is now known as LightningB
[16:17:16] <enyc> e.g. are python keywords translated to other languages?
[16:17:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:17:35] <ephemer0l> enyc It was an encoding issue
[16:17:51] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[16:17:54] *** Joins: the_rat (~ratto@emily.sorcio.org)
[16:18:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:55f9:483c:6523:6a07)
[16:18:39] <ephemer0l> enyc the program I was trying to use wouldn't accept utf8 for something. It needed latin encoding to work
[16:20:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:59c3:37e8:f3c1:3d30) (Ping timeout: 240 seconds)
[16:22:04] *** Joins: ukwiz (~dma@2a02:8010:6009:0:a98c:8026:9b1b:d901)
[16:22:08] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:24:05] <enyc> ephemer0l: eurgh, something windows-based ?!?!?
[16:24:34] *** Joins: burakcank (~burakcank@159.146.41.103)
[16:24:48] *** Quits: vodkra (~vodkra@user/vodkra) (Ping timeout: 250 seconds)
[16:24:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[16:26:35] *** Joins: dez (uid92154@user/dez)
[16:29:18] *** Joins: nomic (~nomic@185.217.117.169)
[16:32:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:33:23] <Kabouik> Could anyone help me getting the last print command to work here? https://0x0.st/-t4v.py I don't know Python so I'm really struggling. The json data is in that form: https://0x0.st/-t43.json
[16:34:04] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[16:34:35] *** Joins: dimbag (~Couture@62.76.35.194)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:06] <The-Compiler> Kabouik: I assume you get a TypeError there?
[16:36:08] <bjs> Kabouik: looks like you're trying to concatenate an int with a str. So you cannot use +
[16:36:25] <bjs> Kabouik: try `print("{} events.".format(len(json_data[0]['Date'])))`
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:36] <The-Compiler> Kabouik: https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python will make this work (because the integer gets turned into a string implicitly), and it will also make the other print statements a bit nicer
[16:36:40] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[16:36:56] <The-Compiler> Kabouik: or what bjs said, though f-strings are the more modern (and simple, IMHO) thing
[16:39:21] <Kabouik> But actually regardless of the 'events.' part, I think there is an error with my len() because it doesn't return anything
[16:39:39] <bjs> Kabouik: doesn't return anything?  that doesn't even sound possible ;)
[16:39:43] <Kabouik> I would like it to count the number of items in Date
[16:40:17] <Kabouik> Let me get my things together, I was asking from my phone during a meeting, neet to synchronize my git stuff now on the PC :p
[16:41:20] <bjs> Kabouik: hmm your code is very weird, why are you dumping the JSON to do these calculations?
[16:41:49] <Kabouik> I use the json data elsewhere: https://git.teknik.io/matf/worldevents
[16:41:51] <bjs> Kabouik: don't you just want len(AAT) ?
[16:42:14] * enyc meows =)
[16:42:29] <Kabouik> That would do if that works, but really I don't know Python, I worked mostly on the we bash script and altered the python scripts with huge pain :p
[16:43:18] <enyc> Kabouik: to me there is a weird  âœ”  "tick" character in that text .......
[16:43:31] <shugo> hi, i am stuck at this small thing how df = pd.read_excel (r'{file}')
[16:43:40] <Kabouik> That's what it does enyc: https://0x0.st/-t46.png
[16:43:42] <shugo> how can i use a variable here
[16:44:17] *** Joins: zeden (~zeden@user/zeden)
[16:44:27] *** Joins: pro_z (~pro_z@37.214.45.81)
[16:44:39] <shugo> agh nvm found it
[16:45:23] <bjs> shugo: why not just read_excel(file)
[16:45:31] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:46:49] *** Joins: Voyager2Spirit (~Voyager2S@188.48.214.26)
[16:47:27] *** Quits: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[16:49:12] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[16:50:08] <Kabouik> I got it to work with just `print('Appended event(s) to '+wedir+'/data/replaceme.json. \033[32;1mâœ”\033[0m')
[16:50:08] <Kabouik>     print(len(replaceme))`, thank you! Now I would like to merge both in one print() but I'm facing this int/string issue mentioned above.
[16:51:28] *** Joins: VaniaPy (~VaniaPy@79.103.106.1.dsl.dyn.forthnet.gr)
[16:52:22] <VaniaPy> Hello,i pickled a ml model that gets fed with 205 mb data. Is it normal that takes around 3 minutes to run it?
[16:53:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:53:30] <Kabouik> Awesome. `print('Appended {} events to '.format(len(replaceme))+wedir+'/data/replaceme.json. \033[32;1mâœ”\033[0m')` works, thanks for the pointers. Now I only have to find a way to avoid duplicates when using the script repeatedly and trying to append the same events to the json file.
[16:53:30] <Kabouik>  
[16:53:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:53:50] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[16:55:17] *** Quits: Voyager2Spirit (~Voyager2S@188.48.214.26) (Remote host closed the connection)
[16:56:00] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 250 seconds)
[16:56:31] <The-Compiler> Kabouik: with f-strings, you can write this as    print(f'Appended {len(replaceme)} events to {wedir}/data/replaceme.json. [...]')    instead
[16:57:13] *** Joins: inviz (~user@user/inviz)
[16:58:05] <inviz> Hi, I am writing a simple program that needs to be running all the time, waiting for new files in directory and process them. would it be a good way to use `while True:` in my case?
[16:58:13] <Kabouik> Cool, thanks The-Compiler, that works too indeed
[16:58:43] <inviz> I use `while True:` and `time.sleep(3)` at the end of the loop
[17:00:29] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:00:35] <bitplane> inviz you could do, or you could be smarter about it and use a sequence generator
[17:00:47] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[17:00:55] *** Joins: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at)
[17:00:56] <bitplane> if you use a generator it'll make your loop unit-testable
[17:00:58] <The-Compiler> inviz: FWIW there's https://pythonhosted.org/watchdog/ too which lets you wait for new files without having to check manually all the time
[17:01:20] *** Quits: xon (~xon@host-42-net-68-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[17:01:39] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[17:01:44] <bitplane> that's pretty cool
[17:01:52] <inviz> The-Compiler, I am thinking to run this in several docker containers using replicas. I considered watchdog.
[17:02:41] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:1489:810:2bd4:7c64:23ea) (Remote host closed the connection)
[17:02:57] *** Parts: shugo (~shugo@user/shugo) ()
[17:03:12] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:f1e7:a239:fd4d:dd14)
[17:05:44] <inviz> bitplane, I assume "sequence" means program will run for finite number of times? I need it running as service until stopped.
[17:07:18] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[17:07:35] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[17:07:45] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[17:07:54] <bitplane> you can have an infinite sequence
[17:08:19] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:08:40] <Kabouik> bjs: to illustrate what I'm doing with this .py scripts and json dumps, there's a bash wrapper to use them: https://asciinema.org/a/oTGVhzNEOkFL5OoE4FUkFzRB4
[17:08:43] *** Joins: Voyager2Spirit (~Voyager2S@188.48.214.26)
[17:09:22] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:09:25] <Kabouik> It's very WIP and I'm a biologist, not a programmer, so there are surely a lot of quircks. The main one right now is I need to fix how .py scripts append data on multiple consecutive requests, to avoid duplicates.
[17:13:20] *** Quits: Voyager2Spirit (~Voyager2S@188.48.214.26) (Remote host closed the connection)
[17:13:59] *** Joins: nixture (sid240036@id-240036.helmsley.irccloud.com)
[17:14:13] <inviz> ok thanks bitplane , that's a food for thought. I am not a programmer so maybe will understand some time why should I seek for alternative to "while true"
[17:16:13] *** Quits: bitplane (~bitplane@185.119.152.130) (Ping timeout: 246 seconds)
[17:17:59] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[17:18:02] *** Joins: plastico (~plastico@neomutt/plastico)
[17:22:47] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ad59:6a1e:d467:94d6)
[17:22:57] *** Joins: pycurious (~Adium@user/pycurious)
[17:24:58] <pycode> jinsun, pardon, i am back....not it is not just mean there are many analytical stats
[17:26:19] <trace987> I have [a for a in [b for b in ["abcdef", "hijkl"]]]
[17:26:27] <trace987> but this is not what I want
[17:26:42] <trace987> I want to have 2 lists, that combine each other to a matrix
[17:27:00] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[17:27:10] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[17:27:22] <trace987> like in math combining two vectors making a matrix out of it
[17:27:36] <trace987> but doing it that way with generation
[17:27:38] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[17:27:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[17:28:02] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:28:54] <trace987> is it even possible to do that this way
[17:29:01] <pycode> what "architecture" can i use for real time analysis? for the moment i always used pandas but pandas is not good for append rows and to stats incrementally
[17:29:06] <pycode> what can i use?
[17:29:19] <The-Compiler> trace987: do you have an example of how the result would look like?
[17:29:27] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[17:30:12] <jinsun> pycode: ok then I have no idea, just that you can't use pandas, pandas would work if you could wait for all the data and then do the stats
[17:30:24] *** Quits: daevski (~daevski_@76-253-184-89.lightspeed.rlghnc.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[17:30:43] <trace987> [1,2] and [3,4] shall result in [[1,3],[3,2]]
[17:31:12] <trace987> no
[17:31:22] <trace987> [1,2] and [3,4] shall result in [[1,4],[3,2]]
[17:31:35] <trace987> or however
[17:31:46] <bjs> trace987: "or however"?
[17:31:56] <trace987> I just want any way to create a matrix out of two lists
[17:32:01] <trace987> with that kind of programming
[17:32:10] <bjs> trace987: but it's not even obvious what matrix you want given [1,2] and [3,4]
[17:32:23] <trace987> this is now not important for me
[17:32:35] <bjs> trace987: well if a=[1,2] and b=[3,4] then [a,b] is [[1,2],[3,4]]
[17:32:38] *** Joins: Voyager2Spirit (~Voyager2S@188.48.214.26)
[17:32:40] <bjs> is that what you wanted?
[17:32:50] <trace987> this is also okay
[17:33:19] <trace987> but I do not want to solve that with zip()
[17:33:25] <pycode> jinsun, yes exactly
[17:33:26] <pycode> hmm
[17:33:28] <bjs> trace987: my solution didn't use zip?
[17:33:33] <trace987> good
[17:33:34] <bjs> trace987: I'm confused, why do you mention zip.
[17:33:45] <trace987> and where is your solution
[17:33:50] <bjs> trace987: [a,b]
[17:33:58] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[17:34:33] <bjs> trace987: https://bpa.st/2GFA  is that not what you wanted?
[17:34:55] <trace987> I want it that way: [a for a in [b for b in ["abcdef", "hijkl"]]]
[17:35:02] <trace987> in that kind of programming
[17:35:08] <trace987> generation
[17:35:17] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[17:35:22] <bjs> trace987: your question is very confusing,  you're very unclear what you're asking for
[17:35:29] <bjs> trace987: does my code not do what you want?
[17:35:43] <trace987> it does not do it the way I want it
[17:35:45] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[17:35:51] <trace987> I want a generator object
[17:36:01] <bjs> trace987: your way doesn't make a generator object either
[17:36:10] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:36:26] <trace987> how is it called then
[17:36:29] <bjs> trace987: a list
[17:36:29] *** Joins: emika9 (~emika@185.207.249.244)
[17:36:32] <trace987> falsae
[17:36:32] <bjs> my way makes a list
[17:36:33] <trace987> falase
[17:36:35] <trace987> falsae
[17:36:39] <bjs> trace987: what?
[17:36:41] <trace987> false
[17:36:46] <bjs> trace987: what is false
[17:36:46] <trace987> this is not a list
[17:36:51] <bjs> trace987: what is not a list?
[17:37:04] <trace987> this is not a list: [a for a in [b for b in ["abcdef", "hijkl"]]]
[17:37:09] <trace987> this is a generation
[17:37:09] <bjs> trace987: yes iti s.
[17:37:12] <bjs> trace987: no it is not.
[17:37:13] *** Quits: emika (~emika@83.136.182.183) (Ping timeout: 248 seconds)
[17:37:13] *** emika9 is now known as emika
[17:37:23] <bjs> trace987: Just ask Python: `print(type(that_thing))` it says list
[17:37:29] <trace987> if you would do list([a for a in [b for b in ["abcdef", "hijkl"]]]) then it would be a list
[17:37:33] <bjs> no
[17:37:40] <bjs> trace987: [a for a in [b for b in ["abcdef", "hijkl"]]] is a list
[17:37:55] <bjs> and it's the same as just ["abcdef", "hijkl"]
[17:38:01] *** Quits: Voyager2Spirit (~Voyager2S@188.48.214.26) (Remote host closed the connection)
[17:38:10] *** Quits: mspe (~user@tilde.team/user/mspe) (Ping timeout: 240 seconds)
[17:38:30] <trace987> but it uses lazy evaluation
[17:38:33] <bjs> trace987: no
[17:38:34] <bjs> it's just a list
[17:38:43] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[17:39:12] <bjs> trace987: your question is very confused,  you talk about making a matrix but you say the matrix you get is unimportant,  you say you want a generator object,  but then you say you want it written in this way that makes a list
[17:39:15] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Remote host closed the connection)
[17:39:16] <bjs> what do you actually want?
[17:39:23] *** Joins: cheater (~Username@user/cheater)
[17:39:27] *** Quits: ppang (~ppang@user/ppang) (Ping timeout: 250 seconds)
[17:39:34] *** Joins: Voyager2Spirit (~Voyager2S@188.48.214.26)
[17:39:39] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[17:39:42] *** Joins: computeiro (~Wender@179.104.242.74)
[17:39:57] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[17:40:21] <trace987> I want a matrix that can be read the lazy evaluation way, that when a coordinate is readed its only then created
[17:40:49] *** Joins: rsx (~dummy@ppp-188-174-134-86.dynamic.mnet-online.de)
[17:41:04] <bjs> trace987: that's a difficult thing to do and certainly Python doesn't have any pre-made "lazy matrix" object you can use
[17:41:31] *** Quits: wender (~Wender@189.37.65.124) (Ping timeout: 252 seconds)
[17:41:40] *** Quits: burakcank (~burakcank@159.146.41.103) (Ping timeout: 240 seconds)
[17:42:37] *** Quits: Voyager2Spirit (~Voyager2S@188.48.214.26) (Remote host closed the connection)
[17:42:45] <trace987> https://wiki.python.org/moin/Generators
[17:42:57] <trace987> here it is spoken about [a for a in bla]
[17:43:14] <bjs> trace987: you mean (a for a in bla) not [a for a in bla] and yes
[17:43:14] <trace987>    1 #square is a generator
[17:43:14] <trace987>    2 square = (i*i for i in irange(1000000))
[17:43:34] <bjs> trace987: but if you have two *lists* then it's already too late to make it lazy
[17:44:00] <_Mocramis> trace987: Ther is a lazyArray package that is probably what you are looking for
[17:44:02] <trace987> not if the two things are generators and not lists
[17:44:11] <bjs> trace987: okay well now you're asking a very different question
[17:44:12] <trace987> possibly
[17:44:17] <_Mocramis> trace987: https://lazyarray.readthedocs.io/en/latest/
[17:44:45] <bjs> trace987: is it always 2 lists/generators you want to combine into a matrix?
[17:45:21] <trace987> first 2, but later I want more than 2 generators to create a combined generator being like a matrix
[17:45:33] <bjs> trace987: okay was there any part of your question that is actually what you wanted to do :P
[17:46:20] <bjs> trace987: if you have generators then all you can do is iterate them, a matrix made of generators doesn't really behave like a matrix at all
[17:46:28] *** Quits: y1n (~y1n@84-115-65-214.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[17:46:40] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:f000:a003:caa:6517) (Ping timeout: 240 seconds)
[17:46:42] <bjs> there really isn't a notion of a shape or row/columns if it's all lazy like that
[17:46:46] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:49:04] *** Quits: magla (~gelignite@55d40b1a.access.ecotel.net) (Quit: Stay safe!)
[17:51:59] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:52:19] *** Joins: masoudd (~masoudd@user/masoudd)
[17:52:47] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:53:06] <kosh> the problem is that the lazy way is REALLY slow compared to numpy
[17:55:14] *** Joins: node1 (~node1@user/node1)
[17:55:19] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Ping timeout: 258 seconds)
[17:55:33] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:55:35] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[17:56:03] *** Quits: bboles (~bboles@64.94.212.195) (Read error: Connection reset by peer)
[17:56:24] *** Joins: bboles (~bboles@64.94.212.195)
[17:57:45] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Remote host closed the connection)
[17:58:09] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[17:58:26] *** Joins: besnn (~besnn@user/besnn)
[17:59:22] *** Joins: blingrang_ (~blingrang@user/blingrang)
[17:59:25] *** Joins: y1n (~y1n@212095005126.public.telering.at)
[18:00:08] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:00:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:01:37] <ApostleInTriumph> Hello. i've two lists of length 5220000. what is the fastest way to create a dict out of this? using {k:v for k,v in zip(l1, l2)} seems expensive
[18:02:01] <grym> ApostleInTriumph: that's how i'd do it
[18:02:10] <grym> length isn't really relevant here
[18:02:27] <kosh> I can't think of a faster way to do it
[18:02:34] <grym> or a clearer one
[18:02:39] <kosh> regardless of length because of how hashtables work
[18:03:19] <ApostleInTriumph> what do you mean by length being irrelevant here?
[18:03:21] <bjs> ApostleInTriumph: yeah I don't think it's the solution that's expensive but the problem :)
[18:03:40] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[18:03:50] <bjs> lists just don't convert into hashtables very easily,  you basically have to individually pair up elements and insert no matter which solution you pick
[18:03:52] <grym> ApostleInTriumph: no matter how long your lists are, a dict comp is how i'd make a dict
[18:04:07] <kosh> ApostleInTriumph, as in we don't know of a way to pre-allocate the dictionary to speed the creation
[18:04:07] <ApostleInTriumph> I see
[18:04:30] <ApostleInTriumph> bjs instead of starting with lists, is there a data structure that is more hashtable friendly?
[18:04:31] <kosh> ApostleInTriumph, if you where creating a matrix out of it there are ways to make it MUCH faster
[18:04:52] <bjs> ApostleInTriumph: well you can start with the dictionary and just insert directly :)
[18:04:59] <ApostleInTriumph> kosh what is the matrix you refer to here?
[18:05:37] <ApostleInTriumph> bjs not sure I understand well (though sounds simple), can you please show a small example?
[18:05:38] <kosh> ApostleInTriumph, I mean if you where creating a matrix or even just creating another list there are ways to speed up the creation but you can't do that with a dict
[18:06:24] *** Joins: blingrang_ (~blingrang@user/blingrang)
[18:06:31] <bjs> ApostleInTriumph: I mean, there's no efficient way to "convert" things to a dictionary,  the best way is to always just create the dictionary straight-up
[18:08:12] *** Joins: cth (~Cthulchu@193.194.107.250)
[18:08:38] *** Joins: FLHerne_ (flh@flherne.uk)
[18:09:10] *** Quits: FLHerne (flh@flherne.uk) (Read error: Connection reset by peer)
[18:10:22] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[18:11:54] *** Quits: Deepfriedice (~Deepfried@60-241-43-208.static.tpgi.com.au) (Quit: Leaving)
[18:12:54] *** FLHerne_ is now known as FLHerne
[18:14:13] <jinsun> ApostleInTriumph: if you can use pandas, you could make Series like `pandas.Series(list2, index=list1)`, then you can use items of list1 as index in the series to acccess items in list2, just like your dict
[18:14:53] <ApostleInTriumph> jinsun let me give it a shot
[18:14:59] <ApostleInTriumph> only concern is speed
[18:15:09] *** Joins: roteiro (~roteiro@i5C7585D8.versanet.de)
[18:15:40] <ApostleInTriumph> because I create and access such a dict 200x for each run. 10 sec + 10 sec is too expensive
[18:15:59] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:18:05] <kosh> jinsun, you can do that with pure numpy also
[18:18:21] *** Quits: kmh_ (~kmh@p200300df5f053300d595a1d9a4479d55.dip0.t-ipconnect.de) (Quit: Leaving)
[18:18:45] <Gurkenglas> KirkMcDonald, about yield being second-class: A first-class yield should, I'd say, pause not just the function it's in but also all functions up the call stack until it's "caught".
[18:18:53] <ApostleInTriumph> kosh how?
[18:18:55] *** Joins: daoudr (~daoudr@178.197.205.81)
[18:19:10] *** Quits: y1n (~y1n@212095005126.public.telering.at) (Ping timeout: 240 seconds)
[18:19:44] <Gurkenglas> *just* like return vs. throw, in fact.
[18:19:54] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[18:20:03] <kosh> ApostleInTriumph, exactly the same as pandas, it is just indexing
[18:20:20] *** Joins: mickey (~user@user/mickey)
[18:20:23] <kosh> ApostleInTriumph, is your list in order? what kind of data is in it?
[18:20:29] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[18:20:30] <dontyouloveshort> hi
[18:21:04] <bjs> Gurkenglas: that doesn't really sound "first" vs "second" class in the way people usually mean those terms.  It just sounds like a totally different feature
[18:21:19] <ApostleInTriumph> kosh there's a small issue. yes it's in order. Basically keys are hashes i constructed. The values of my dict are pytorch tensors. They must remain so because they will be back propagated at a later time
[18:21:22] <dontyouloveshort> how do you mock a funtion withon a function that you would like to test?  in my case the funtion that is tested gets its data from sql, and i want to set that result
[18:21:30] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[18:21:35] *** Joins: shla (~root@user/shla)
[18:21:44] <bjs> Gurkenglas: Python typically wants to make things explicit.  It's why we have `yield from` and `async def`,  which enforce explicit annotation of functions that yield control
[18:21:49] <bjs> even if deeper in the call stack
[18:23:23] <bjs> Gurkenglas: Python *could* have designed them in different ways and got something like lua coroutines or C's setjmp/longjmp but it's just not the typical Python style of programming.
[18:23:35] <Gurkenglas> bjs, something is first-class if you can manipulate it like any other object. In this case the thing that it should be invariant under but isn't is extracting a block a a function :)
[18:23:52] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:1489:810:2bd4:7c64:23ea)
[18:23:57] <bjs> Gurkenglas: I mean your solution isn't first-class either,  since "yield" is more a bit of syntax and semantics rather than an object
[18:24:30] <bjs> in Python the `yield` syntax just means you create a generator object when you call the function and that generator is very much first-class
[18:24:42] <Gurkenglas> I suppose so. Ideally yield be a function that you call, and then its implementation manipulates the callstack.
[18:25:36] *** Parts: OnlineCop (~OnlineCop@user/onlinecop) ()
[18:25:37] <bjs> Gurkenglas: why do you say "ideally"
[18:25:38] <Gurkenglas> the varname package does well enough at this; having to specify the number of stackframes to skip is a relatively small price i suppose
[18:25:51] <bjs> Does "ideally" just mean "in Gurkenglas's opinion" ;)
[18:25:57] <kosh> ApostleInTriumph, if the keys and the order is static you could just create a dictionary once that maps key to index position
[18:25:59] <Gurkenglas> bjs, I agreed that my solution wasn't really first-class either, and what it'd take to get there
[18:27:07] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ad59:6a1e:d467:94d6) (Quit: WeeChat 3.2)
[18:27:33] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:f1e7:a239:fd4d:dd14) (Ping timeout: 250 seconds)
[18:29:20] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[18:29:30] <AhmedAmerican> Which API builder you advise with ?
[18:30:30] <grym> AhmedAmerican: for what sort of api?
[18:31:30] <AhmedAmerican> Simple api which will receive a post request which holds query data and internally Iâ€™ll query that data from a website and return the result
[18:31:37] <grym> a REST api
[18:31:41] <AhmedAmerican> Yes
[18:31:47] <grym> ok.  best to be clear
[18:31:50] <grym> AhmedAmerican: i like fastAPI
[18:32:09] <AhmedAmerican> Sorry , Iâ€™m new to API building so I donâ€™t know what type of API is called
[18:32:14] <jinsun> kosh: oh, does numpy have a way to make mapping? I used only arrays in numpy and jumped to pandas when I needed more fancy stuff
[18:32:23] <AhmedAmerican> Thanks grym
[18:32:31] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[18:33:00] <kosh> jinsun, there is nothing fancy about mapping, you just use the index position from one array to index into another way
[18:33:25] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:34:20] <jinsun> how would I get the index? numpy.where? I don't know if that would be the same speed as pandas Series indexing
[18:34:27] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[18:34:48] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[18:35:45] <jinsun> oh not where, numpy.argmax or maybe something better
[18:36:44] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-fd87-b3ae-f773-e94f.res6.spectrum.com)
[18:36:52] <jinsun> but anyway, there would be one extra step to get the index from the value, so a bit annoying to use, even if same speed
[18:38:10] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[18:38:56] <kosh> should be identical to pandas performance since most of their stuff is just sitting on top of numy
[18:39:07] *** Joins: Speakz (speakz@rfc1459.evilnet.org)
[18:39:31] <Speakz> hello, any idea about this error: Error: cannot import name 'text_cost' from 'ftfy.badness' (/usr/local/lib/python3.8/dist-packages/ftfy/badness.py)
[18:43:28] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[18:44:06] <jinsun> that means text_cost is not defined in ftfy.badness, did that ever work before?
[18:44:42] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:46:22] *** Quits: catbeard (~noise@user/catbeard) (Ping timeout: 245 seconds)
[18:46:30] *** Joins: zaquest (~notzaques@5.128.210.178)
[18:46:58] *** Joins: xon (~xon@host-42-net-68-160-119.mobilinkinfinity.net.pk)
[18:48:48] *** Joins: srhm (~srhm@user/srhm)
[18:49:29] <jinsun> Speakz: looks like it was removed few months back https://github.com/rspeer/python-ftfy/commit/dd5f594567ae3bc23105ecdce32c5af8493de32a
[18:53:28] *** Quits: daoudr (~daoudr@178.197.205.81) (Quit: Leaving)
[18:53:40] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:53:57] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[18:54:09] *** Joins: srhm (~srhm@user/srhm)
[18:56:32] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[18:56:47] *** Joins: CombatVet (~c4@user/combatvet)
[18:57:04] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:57:11] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[18:58:22] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:59:07] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[18:59:34] *** Joins: Fiji (~Fiji@user/fiji)
[19:04:15] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:04:18] *** Joins: daoudr (~daoudr@178.197.205.81)
[19:04:52] *** Joins: derelict (~derelict@user/derelict)
[19:05:45] *** Joins: srhm (~srhm@user/srhm)
[19:06:00] *** Quits: pycode (~pycode@2001:b07:5d28:551:55f9:483c:6523:6a07) (Ping timeout: 250 seconds)
[19:06:05] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[19:07:12] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[19:07:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:10:31] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:1489:810:2bd4:7c64:23ea) (Remote host closed the connection)
[19:10:45] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:11:09] *** Joins: p-i- (~Ohmu@2403:6200:8870:1489:157b:1299:b4a3:e5a1)
[19:11:23] *** Joins: srhm (~srhm@user/srhm)
[19:13:23] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[19:15:30] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:15:43] *** Quits: daoudr (~daoudr@178.197.205.81) (Quit: Leaving)
[19:15:48] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:16:11] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[19:16:24] *** Joins: srhm (~srhm@user/srhm)
[19:18:06] *** Quits: VaniaPy (~VaniaPy@79.103.106.1.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[19:18:43] *** Joins: daoudr (~daoudr@178.197.205.81)
[19:20:10] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 240 seconds)
[19:20:23] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:21:14] *** Quits: szymon (~ugh@staticline-31-183-186-12.toya.net.pl) (Remote host closed the connection)
[19:21:23] *** Joins: linguist (~brunodOut@170.84.57.174)
[19:22:22] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:22:44] *** Joins: srhm (~srhm@user/srhm)
[19:23:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:23:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:24:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:25:00] *** Joins: node1 (~node1@user/node1)
[19:25:21] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[19:25:35] *** Joins: Shikadi (~Shikadi@136-27-89-236.cab.webpass.net)
[19:25:38] *** Parts: bjonnh (~jo@about/aquilenet/bjonnh) (WeeChat 3.0-dev)
[19:26:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:26:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:26:43] *** Joins: shiriru (~shiriru@84.40.100.94)
[19:27:05] *** Parts: rapha (~jrs@user/rapha) (WeeChat 2.3)
[19:27:10] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[19:27:14] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:27:21] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:27:42] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:27:55] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:28:09] *** Joins: srhm (~srhm@user/srhm)
[19:29:12] *** Joins: orion (~orion@user/orion)
[19:29:55] <orion> Hi. Is there a way to get a trace of all object creation/deletion in real time with stack frames?
[19:30:21] <orion> (Without manually adding statements to every class I want to watch)
[19:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:30:38] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[19:30:42] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[19:30:59] <ELFrederich> Python2 ... in 2021... https://docs.unity3d.com/Packages/com.unity.scripting.python@2.0/manual/installation.html
[19:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:42] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:31:49] <ELFrederich> Perhaps some underlying technology that is bridging Python and C# is stuck on Python2 support... similar to Jython?  Otherwise I have no idea why something that's not even released (in development) is targeting Python 2
[19:32:01] <grym> ELFrederich: ironpython is 2.x, iirc
[19:32:28] <InPhase> ELFrederich: I have some Unity code I inherited at work that uses ironpython, and this was a HUGE strategical error.  It's a disaster to work with and fix bugs that arise.
[19:33:00] <jinsun> yeah most like they are using ironpython and ironpython3 is still alpha
[19:33:27] <InPhase> ELFrederich: It's on our agenda to purge all ironpython from our codebases and never touch it again.
[19:33:30] <jinsun> and 3.4 only which means bad even if it was not alpha
[19:33:41] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:33:41] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:33:49] *** Joins: zln (~golluq@c80-217-230-193.bredband.tele2.se)
[19:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:35:26] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:35:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:36:09] <jinsun> pythonnet can be used from cpython, but never used ironpython, so can't say how easy it would be to convert from ironpython to cpython + pythonnet
[19:38:05] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:38:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[19:38:09] <ELFrederich> InPhase, I'm pretty disappointed in all the marketing Microsoft does about Python but doesn't really support it.
[19:38:51] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[19:39:02] *** Joins: srhm (~srhm@user/srhm)
[19:39:21] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[19:39:27] *** Quits: shiriru (~shiriru@84.40.100.94) (Changing host)
[19:39:27] *** Joins: shiriru (~shiriru@user/shiriru)
[19:39:40] *** Joins: icy (~icy@user/icy)
[19:39:41] *** Joins: thiras (~thiras@user/thiras)
[19:40:00] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:40:07] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:40:33] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[19:40:42] <dontyouloveshort> how do you write:    with patch('__main__.baz') as baz_mock:         when the method baz comes from another module?       the example here: https://stackoverflow.com/questions/24221545/how-to-mock-a-method-that-is-not-in-the-scope-of-a-test     seems quite nice, but is far from reality
[19:40:50] <deniska> iirc ironpython was (is?) a community effort
[19:40:54] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:41:42] <deniska> Unity also had a language called JS which wasn't what most people would call JS :)
[19:42:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[19:43:27] <grym> and, uh, that not-python thing
[19:43:40] <grym> boo?
[19:43:47] <grym> which is very dead now iirc
[19:44:50] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[19:45:24] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:46:32] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:47:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:47:04] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:47:43] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:48:02] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:49:06] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:49:22] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:50:00] *** Joins: srhm (~srhm@user/srhm)
[19:50:08] *** Joins: y1n (~y1n@213162073035.public.t-mobile.at)
[19:50:39] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[19:50:47] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[19:54:30] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:54:35] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:54:48] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:55:51] *** Joins: srhm (~srhm@user/srhm)
[19:56:07] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[19:56:15] *** Joins: doko (~doko@2a02:8106:1a:7600:7474:87ee:4196:59d9)
[19:56:28] *** Parts: Speakz (speakz@rfc1459.evilnet.org) ()
[19:58:01] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[19:58:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:00:52] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:00:56] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[20:02:02] <mrtnt> A library provides me a class named "modules" which contains 28 sub-classes: https://paste.debian.net/plainh/8c80ff29 I would like to add another sub-class to "modules" class. Is it possible to do this?
[20:02:37] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:03:11] <jinsun> maybe, what is `type(modules)` ?
[20:03:17] <cloudbender> I have mastered the ttk.progressbar. I am the best. Nobody is better than me.
[20:03:58] <mrtnt> jinsun: "type(modules)" is "<class 'jnpr.junos.factory.OpTable.ModuleTable'>"
[20:04:10] <grym> mrtnt: does it have an .append() ?
[20:04:17] *** Quits: xon (~xon@host-42-net-68-160-119.mobilinkinfinity.net.pk) (Quit: Leaving...)
[20:04:51] *** glider_ is now known as glider
[20:05:16] <mrtnt> grym: do you mean 'module.append("foo")'? If yes, then this returns "ValueError: Unknown field: 'append'".
[20:05:29] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:05:36] <grym> mrtnt: modules.append, not module.append
[20:06:04] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:06:10] <mrtnt> grym: sorry. 'modules.append("foo")' returns 'AttributeError: 'ModuleTable' object has no attribute 'append''
[20:06:19] <cloudbender> rather impressed with the Tk widgetses performances, suprizing responsiveness
[20:06:21] *** Quits: brelod (~me@90.251.226.93) (Quit: Lost terminal)
[20:06:21] <grym> ah, ok.  then no, i geuss that won't go
[20:06:43] *** Quits: daoudr (~daoudr@178.197.205.81) (Ping timeout: 252 seconds)
[20:07:46] <The-Compiler> mrtnt: dir(modules) or help(modules) might tell you more about what this ModuleTable thing supports
[20:08:50] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[20:09:49] *** Quits: dulanic (~dulanic@47.187.144.163) (Ping timeout: 250 seconds)
[20:10:45] *** Joins: asthasr (~asthasr@162.210.28.151)
[20:11:00] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:11:37] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:12:30] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:13:45] <raek> mrtnt: type(modules).__bases__ could be interesting to look at too
[20:13:56] <raek> maybe it inherits from some better known class
[20:15:24] <grym> the only docs i can find are from 2014 :(
[20:15:31] <grym> for this jnpr thing
[20:16:10] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 240 seconds)
[20:16:40] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[20:17:13] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[20:17:42] <mrtnt> thanks! I did check with "help(modules)", "dir(modules)" and "type(modules).__bases__", but as much as I can tell, there does not seem to be a built-in way to append sub-classes.
[20:17:47] <jinsun> there is https://github.com/Juniper/py-junos-eznc/tree/master/lib/jnpr/junos/factory, but OpTable or ModuleTable are not defined in the code there, maybe it is dynamically generated, because some .yml file mentions tit
[20:17:58] <jinsun> *it :D
[20:18:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:18:40] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 240 seconds)
[20:18:52] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[20:19:33] <jinsun> oh there is OpTable also https://github.com/Juniper/py-junos-eznc/blob/master/lib/jnpr/junos/factory/optable.py
[20:20:01] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[20:20:15] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[20:20:39] *** Joins: Roey (~Roey@user/Roey)
[20:21:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[20:22:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:23:00] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[20:23:46] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:23:47] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:25:13] *** Quits: y1n (~y1n@213162073035.public.t-mobile.at) (Ping timeout: 248 seconds)
[20:26:02] *** Joins: spreadsheet (~shang@2601:586:500:153:552a:2bb2:f79f:3453)
[20:28:21] *** Joins: magla (~gelignite@55d40b1a.access.ecotel.net)
[20:28:53] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[20:29:29] *** Joins: cheater (~Username@user/cheater)
[20:30:20] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:31:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:31:47] *** Quits: orion (~orion@user/orion) (Quit: Leaving...)
[20:33:45] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[20:34:14] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:36:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[20:37:25] *** Quits: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de) (Quit: WeeChat 3.0.1)
[20:39:42] *** Joins: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at)
[20:39:45] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:40:13] *** Joins: pgib (~textual@173.38.117.82)
[20:41:24] *** Joins: Barones (~Barones@2804:48dc:8500:0:95b0:57a4:fdd0:5995)
[20:41:48] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:42:28] *** Quits: spreadsheet (~shang@2601:586:500:153:552a:2bb2:f79f:3453) (Quit: Konversation terminated!)
[20:44:04] *** Quits: zln (~golluq@c80-217-230-193.bredband.tele2.se) (Quit: leaving)
[20:44:48] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:46:02] *** Joins: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net)
[20:46:04] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:47:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[20:48:11] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[20:50:59] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:51:11] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[20:51:26] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[20:51:40] *** Quits: oz4ga (~tim@93.90.4.233) (Ping timeout: 240 seconds)
[20:52:04] *** Joins: zln (~golluq@c80-217-230-193.bredband.tele2.se)
[20:52:30] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Client Quit)
[20:53:00] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:56:03] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[20:57:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:57:43] <ApostleInTriumph> Hello. I've two numpy arrays, A and B. I'd like to create a mask of size of A (containing 0s and 1) based on whether each element of A is in B. The traditional way of doing (using a forloop and np.where) is costly for my usecase. Is there a faster alternative?
[20:58:13] *** Joins: jvh (~jvh@user/jvh)
[20:58:57] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[20:59:03] <grym> ApostleInTriumph: A==B
[20:59:25] <grym> ApostleInTriumph: (A==B).astype(int) if you _really_ want the int
[21:01:25] *** Joins: shiriru (~shiriru@user/shiriru)
[21:02:20] <ApostleInTriumph> grym : https://bpa.st/R4MA doesn't seem to work
[21:02:25] *** Joins: daoudr (~daoudr@178.197.205.81)
[21:02:40] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 240 seconds)
[21:02:44] *** Quits: rsx (~dummy@ppp-188-174-134-86.dynamic.mnet-online.de) (Quit: rsx)
[21:02:48] <ApostleInTriumph> grym the naive way of doing what I intend to : https://bpa.st/UBYQ
[21:03:11] *** Joins: linguist (~brunodOut@170.84.57.174)
[21:04:05] *** Gerula is now known as Guest6161
[21:04:05] *** Quits: Guest6161 (~Gerula@user/gerula) (Killed (cadmium.libera.chat (Nickname regained by services)))
[21:04:07] *** Joins: Gerula (~Gerula@user/gerula)
[21:04:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:04:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[21:06:15] *** Quits: Gerula (~Gerula@user/gerula) (Killed (zinc.libera.chat (Nickname regained by services)))
[21:06:17] *** Joins: Gerula (~Gerula@user/gerula)
[21:06:46] <grym> ApostleInTriumph: https://bpa.st/PKZQ
[21:07:17] <ApostleInTriumph> grym what if both arrays are different size?
[21:07:46] <grym> ApostleInTriumph: does it matter at which indexes in B the value is
[21:08:38] *** Quits: jazzy (~jaziz@2600:380:842b:9c51:853a:31ba:318f:4161) (Ping timeout: 250 seconds)
[21:08:45] <grym> ApostleInTriumph: you might want np.isin(A,B)
[21:08:47] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[21:08:51] <ApostleInTriumph> my usecase is basically different sized array. B is a subset of A. I'd need to know if each element in B, whether or not it is in A.
[21:08:53] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:08:57] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[21:08:58] <grym> ApostleInTriumph: https://numpy.org/doc/stable/reference/generated/numpy.isin.html#numpy.isin
[21:09:04] *** Joins: darksun (~darksun@user/darksun)
[21:09:09] <grym> there are set ops for ndarrays, and i think that's what you want
[21:09:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:09:30] <ApostleInTriumph> perfect, np.isin is similar to what I ask
[21:09:43] <ApostleInTriumph> thanks grym
[21:09:57] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:10:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[21:10:49] <grym> cheers
[21:11:40] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 240 seconds)
[21:11:51] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[21:12:26] *** Joins: linguist (~brunodOut@170.84.57.174)
[21:14:52] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:15:51] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[21:18:35] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[21:20:24] *** Joins: Betal (~Betal@user/betal)
[21:22:41] *** Joins: kosh_ (~kosh@user/kosh)
[21:23:20] *** Joins: dulanic (~dulanic@47.187.144.163)
[21:24:06] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[21:24:49] *** Joins: darksun (~darksun@user/darksun)
[21:25:06] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[21:27:31] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[21:29:35] *** Joins: qlixed (~qlixed@host236.186-111-135.telecom.net.ar)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:51] *** Quits: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[21:33:48] <dontyouloveshort> is there a way to have this:  print({k: v for k, v in sorted(seen.items(), key=lambda item: item[1])}       print one entry per line?
[21:33:50] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:561a:e0c2:9163:ccd5)
[21:34:21] <Wooble> dontyouloveshort: pprint module instead of plain print()
[21:35:56] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Ping timeout: 250 seconds)
[21:39:08] <dontyouloveshort> Wooble, that lambda thingy actually sorted the output by value, but pprint reverses that for prettier printing
[21:39:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:39:16] <Xavierdarkness>  
[21:39:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[21:40:04] *** Quits: daoudr (~daoudr@178.197.205.81) (Remote host closed the connection)
[21:40:19] *** Joins: DaNeenjah (~jake@218.sub-72-105-221.myvzw.com)
[21:40:24] <Wooble> dontyouloveshort: pprint({...}, sort_dicts=False)
[21:40:53] *** Joins: daoudr (~daoudr@178.197.205.81)
[21:41:05] *** Joins: fdan (~fdan@192.146.154.3)
[21:41:25] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[21:41:35] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[21:42:10] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[21:42:38] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[21:43:05] <dontyouloveshort> Wooble, perfect
[21:43:08] *** Quits: daoudr (~daoudr@178.197.205.81) (Remote host closed the connection)
[21:43:19] *** Joins: nomic (~nomic@185.217.117.169)
[21:43:19] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[21:43:57] *** Joins: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at)
[21:44:04] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:45:16] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3d62-46ba-a48f-7c27.res6.spectrum.com)
[21:46:05] *** Joins: daoudr (~daoudr@178.197.205.81)
[21:47:14] *** Joins: nomic (~nomic@185.217.117.169)
[21:48:49] *** Quits: daoudr (~daoudr@178.197.205.81) (Remote host closed the connection)
[21:49:24] *** Joins: daoudr (~daoudr@178.197.205.81)
[21:51:18] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[21:51:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[21:51:53] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:52:58] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[21:53:14] *** Joins: MikZyth (~MikZyth@188.65.242.195)
[21:53:17] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[21:53:42] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:53:50] *** Quits: daoudr (~daoudr@178.197.205.81) (Read error: Connection reset by peer)
[21:54:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:56:35] *** Joins: mickey6 (~user@user/mickey)
[21:56:44] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[21:57:10] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 250 seconds)
[21:59:00] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[21:59:01] *** mickey6 is now known as mickey
[22:00:02] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 245 seconds)
[22:00:03] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[22:00:19] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:561a:e0c2:9163:ccd5) (Ping timeout: 250 seconds)
[22:00:46] <cloudbender> I'm using window.after(20,func), but func seems to be blocking UI updates.
[22:01:01] <cloudbender> does .after spawn a new thread ?
[22:01:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[22:02:08] <cloudbender> ok sorry too vague
[22:02:21] *** Joins: emika8 (~emika@83.136.182.111)
[22:03:52] *** Quits: emika (~emika@185.207.249.244) (Ping timeout: 252 seconds)
[22:03:52] *** emika8 is now known as emika
[22:04:28] *** Joins: shiriru (~shiriru@user/shiriru)
[22:06:55] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[22:07:22] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[22:07:24] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[22:07:33] <whatsupdoc> Hi anyone know why this keeps crashing?
[22:07:34] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[22:07:40] <whatsupdoc> 	sx = set(re.findall('(?<=\[)([^\[\]]*?)(?=\])', page1_content)[1:] + re.findall('(?<=\[)([^\[\]]*?)(?=\])', page2_content)[1:])
[22:07:40] *** Quits: ukwiz (~dma@2a02:8010:6009:0:a98c:8026:9b1b:d901) (Quit: Leaving)
[22:07:50] *** Quits: inviz (~user@user/inviz) (Quit: Leaving)
[22:08:00] <Wooble> whatsupdoc: "crashing" how?
[22:08:07] <whatsupdoc> for i in sx: if i.islower(): sx.remove(i)
[22:08:36] <whatsupdoc> ^ when I add that to remove all that start with a lowercase letter
[22:09:26] <whatsupdoc> I get this error: https://pastebin.com/raw/nLQjujRD
[22:09:44] <Wooble> whatsupdoc: you can't modify things while iterating over them.
[22:09:55] *** Joins: nomic (~nomic@185.217.117.169)
[22:10:09] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:1489:810:2bd4:7c64:23ea)
[22:10:24] <Wooble> although... the error you pasted has nothing to do with that line.
[22:11:13] <whatsupdoc> well there is no error if i remove that line
[22:11:19] <whatsupdoc> and everything appears to be workign correctly
[22:11:31] *** Joins: Skyfire (~pyon@user/pyon)
[22:11:38] <Wooble> whatsupdoc: best to make a new set with a comprehension like new_sx = {i for i in sx if not i.islower()}
[22:12:14] <Wooble> whatsupdoc: that line should cause a RuntimeError itself, not a problem in xlsxwriter...
[22:12:26] <whatsupdoc> it worked
[22:12:40] *** Joins: mokulus (~mokulus@user/mokulus)
[22:12:46] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[22:12:59] <whatsupdoc> wait nmv lol
[22:13:05] <whatsupdoc> nvm didn't work
[22:13:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:1489:157b:1299:b4a3:e5a1) (Ping timeout: 240 seconds)
[22:14:14] <whatsupdoc> it worked
[22:14:15] <whatsupdoc> lol
[22:14:16] <Wooble> if the real problem is something is calling int() on things that aren't numeric, removing the lowercase ones and leaving uppercase letters isn't going to help.
[22:14:17] <whatsupdoc> thanks Wooble
[22:14:23] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[22:14:45] <whatsupdoc> i don't understand why you can't modify the same variable, but create a new one works
[22:15:25] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 252 seconds)
[22:15:35] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[22:15:58] *** Quits: aead (~aead@user/aead) (Quit: aead)
[22:16:44] *** Joins: badsektor (~badsektor@user/badsektor)
[22:16:57] <whatsupdoc> the error seems so random also doesn't even help with the problem
[22:17:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:17:34] <bjs> whatsupdoc: the problem is trying to modify the set while you're looping over it
[22:17:57] <bjs> it's not really about variables,  but about how safe that operation on the underlying set is (or rather how safe it is not)
[22:19:05] <whatsupdoc> why can't you make it safe?
[22:19:35] <whatsupdoc> can't you just decrease the size of the array or list and just continue from the same index where you left off after deleting and you'll be fine?
[22:19:44] <whatsupdoc> why is it bad to delete and iterate?
[22:19:51] <bjs> whatsupdoc: that's _exaclty_ the situation that is not fine
[22:20:16] <bjs> whatsupdoc: when you insert/delete from a set you have no idea where (in the order of the set) the element will be inserted
[22:20:31] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[22:20:36] <bjs> and if you delete then if you're deleting from an index "earlier" in the iteration you might skip elements if you continue from the index you were at
[22:21:12] <whatsupdoc> but you can account for these things, can't you?
[22:21:17] <bjs> whatsupdoc: how
[22:21:30] <whatsupdoc> like i said
[22:21:41] <cloudbender> sx.remove breaks the iterator
[22:21:49] <whatsupdoc> just keep track what you're deleting and what you are inserting
[22:21:55] <whatsupdoc> and keep track of the size of the list
[22:21:58] <bjs> whatsupdoc: but when you insert/delete you mess up the order
[22:22:00] <bjs> it's not a list, it's a set
[22:22:28] <whatsupdoc> i would assume it would work the same for both, no?
[22:22:36] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[22:22:43] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Remote host closed the connection)
[22:22:50] <bjs> whatsupdoc: no, your method doesn't even work for lists if it uses indexes
[22:23:26] <bjs> and for sets it's very broken because the order isn't even fixed and inserting/deleting messes the order up
[22:23:31] <Wooble> except you don't get a RuntimeError, you just get a weird bug.
[22:23:35] <Wooble> (with the list)
[22:26:02] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[22:26:07] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[22:26:17] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 248 seconds)
[22:26:30] <cloudbender> for d in deletionlist: originallist,remove(d)
[22:26:45] <cloudbender> for d in deletionlist: originallist.remove(d)
[22:28:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:28:13] <grym> cloudbender: i'd almost consider sorted(set(originallist)-set(deletionlist))
[22:28:33] <bjs> whatsupdoc: for instance, look at https://bpa.st/7CWA  : inserting "baz" didn't just put it "between" two other elements of the set,  the set is totally different after it got added.
[22:28:40] <cloudbender> was wondering if there were a set notation to do that, yes
[22:28:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:29:01] <cloudbender> sets are not of fixed order
[22:29:31] <grym> yes they're not
[22:29:37] <grym> sorted() takes a key though
[22:29:59] <grym> and, returns a lit
[22:30:01] <grym> list*
[22:30:15] <grym> cloudbender: https://bpa.st/HMRQ
[22:30:53] <cloudbender> nice
[22:31:05] *** Quits: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[22:31:23] <grym> cloudbender: uh, though that also uniqifies the list
[22:31:25] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[22:31:58] <grym> so if you have [1,1,1,3] and want to remove 3, you'll wind up with [1]
[22:32:17] <grym> not [1,1,]
[22:32:19] <grym> not [1,1,1]
[22:32:40] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:32:47] <cloudbender> t's ok, we are morphing from a set, presume to be a set of unique values
[22:32:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:33:26] <grym> great
[22:34:20] *** Joins: aead (~aead@user/aead)
[22:34:21] *** Joins: N3X15_ (~nexis@mail.nexisonline.net)
[22:34:27] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[22:34:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:34:43] <cloudbender> tkinter window.after does not seem to allow ui updates.  I had to use threading.TImer
[22:34:45] <whatsupdoc> bjs: that's kinda weird, i need to review the set data structure again....it's been a while
[22:34:52] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 250 seconds)
[22:34:59] *** N3X15_ is now known as N3X15
[22:35:06] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:303e:5b49:2ced:cafd) (Quit: Textual IRC Client: www.textualapp.com)
[22:35:33] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:36:43] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 250 seconds)
[22:36:52] <bjs> whatsupdoc: right, so instead of making everyone have to worry about how sets are actually implemented underneath,  and instead of adding a huge amount of extra state to the set to keep track of "in-progress" iterations so it remembers the previous ordering, and instead of totally changing the set structure to something else it's much easier just to say "no" to that particular case
[22:37:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:37:41] *** Joins: wender (~Wender@186.210.45.185)
[22:38:27] *** Quits: esaym153 (~esaym153@162.222.245.132) (Ping timeout: 250 seconds)
[22:38:46] <Wooble> cloudbender: been a while since I used tkinter but I don't think it ever does things in background threads automatically.
[22:38:51] *** Joins: nomic (~nomic@185.217.117.169)
[22:40:11] *** Quits: computeiro (~Wender@179.104.242.74) (Ping timeout: 250 seconds)
[22:41:06] <cloudbender> I'm just using a threading.Timers to start code blocks which retire the timers in turn.  Seems to work, but it's a bit hacky
[22:42:34] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[22:42:55] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Ping timeout: 252 seconds)
[22:43:09] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[22:43:42] *** Joins: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at)
[22:44:01] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[22:47:45] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[22:47:51] *** Quits: et (~et@user/et) (Quit: ZNC 1.8.0 - https://znc.in)
[22:48:12] *** Joins: et (~et@user/et)
[22:49:04] *** Joins: manti7 (~manti7@176.10.104.94)
[22:49:31] *** Joins: zebrag (~chris@user/zebrag)
[22:51:34] *** Joins: BigShip (~BigShip@user/bigship)
[22:52:49] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Ping timeout: 252 seconds)
[22:53:34] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: No route to host)
[22:54:41] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[22:56:07] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 240 seconds)
[22:56:39] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[22:59:27] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[22:59:40] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[23:00:01] *** Quits: kosh_ (~kosh@user/kosh) (Read error: Connection reset by peer)
[23:03:07] *** Quits: y1n (~y1n@84-115-65-104.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[23:04:48] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:4e9:a0cf:d372:3f6d)
[23:05:53] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[23:06:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:06:27] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[23:09:06] *** Joins: esaym153 (~esaym153@net153.net)
[23:09:30] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[23:11:04] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[23:11:38] *** Quits: carbolymer (~carbolyme@dropacid.net) (Quit: carbolymer)
[23:11:41] *** Joins: nomic (~nomic@185.217.117.169)
[23:11:47] *** Joins: masoudd (~masoudd@user/masoudd)
[23:11:51] *** Joins: carbolymer (~carbolyme@dropacid.net)
[23:13:12] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[23:15:36] *** Joins: Elzington_ (~Elzington@68.235.43.36)
[23:16:10] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[23:16:17] *** Joins: Voyager2Spirit (~Voyager2S@188.53.177.51)
[23:16:18] *** Quits: Voyager2Spirit (~Voyager2S@188.53.177.51) (Client Quit)
[23:16:32] *** Parts: dba (uid502594@id-502594.stonehaven.irccloud.com) ()
[23:16:54] *** Quits: Elzington (~Elzington@68.235.43.173) (Ping timeout: 250 seconds)
[23:18:04] *** Joins: mumixam (~m@user/mumixam)
[23:21:01] *** Joins: Adoi (~Adoi@user/adoi)
[23:21:48] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:29:07] <Payam> hi
[23:29:33] *** Quits: magla (~gelignite@55d40b1a.access.ecotel.net) (Quit: Stay safe!)
[23:30:08] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Read error: Connection reset by peer)
[23:30:31] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[23:31:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:31:49] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Client Quit)
[23:32:52] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[23:33:11] *** Joins: CombatVet (~c4@user/combatvet)
[23:34:17] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Quit: Leaving)
[23:35:39] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 250 seconds)
[23:36:24] <Adoi> hello ladies and gentlemen
[23:36:40] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:37:45] <jean-luc> hielao
[23:38:09] *** Joins: et_ (~et@user/et)
[23:38:26] *** Joins: heco (~redrum@user/redrum88)
[23:38:49] *** Quits: et (~et@user/et) (Ping timeout: 248 seconds)
[23:38:49] *** et_ is now known as et
[23:39:07] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[23:40:45] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[23:41:24] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[23:41:29] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Ping timeout: 248 seconds)
[23:42:14] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[23:42:43] *** Joins: fofoni (~fofoni@user/fofoni)
[23:43:26] *** Joins: argento (~argent0@191.81.228.237)
[23:44:38] <dld> o/
[23:44:54] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[23:45:27] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[23:47:05] *** Parts: stemid_ (~nocturnal@i-lands.anark.ist) ()
[23:47:08] *** Quits: kmikita (uid461814@id-461814.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:48:08] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[23:49:28] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[23:49:37] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:52:33] *** Joins: brelod (~me@90.251.226.93)
[23:52:44] *** Joins: Adoi (~Adoi@user/adoi)
[23:53:59] *** Quits: Elzington_ (~Elzington@68.235.43.36) (Quit: Leaving)
[23:54:43] *** Joins: paravida (~myChateau@user/paravida)
[23:55:22] *** Joins: Warped (~Warped@user/warped)
[23:57:29] *** Joins: bandithijo (~bandithij@fedora/bandithijo)
[23:58:30] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
