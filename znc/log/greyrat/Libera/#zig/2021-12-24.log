[00:01:13] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[00:21:02] *** Quits: frett27 (~frett27@2a01:cb14:45a:ac00:12ee:22c:ec7d:1508) (Ping timeout: 240 seconds)
[00:23:33] *** Joins: livoreno (~livoreno@user/notzmv)
[00:29:17] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 240 seconds)
[00:32:33] *** Joins: rgrinberg (~textual@187.223.250.159)
[00:44:17] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[00:45:13] *** Joins: rgrinberg (~textual@187.223.144.204)
[00:51:17] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[00:58:31] <Franciman> https://libs.suckless.org/libgrapheme/ wooo
[01:03:50] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[01:09:26] *** Joins: xiamx[m]1 (~xiamxmatr@2001:470:69fc:105::1:5692)
[01:12:51] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:15:04] *** Quits: tomku (~tomku@user/tomku) (Quit: leaving)
[01:15:35] *** Joins: tomku (~tomku@user/tomku)
[01:20:49] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[01:26:07] *** Joins: frett27 (~frett27@2a01:e0a:58a:6c00:3bd1:a8c4:6936:2a8b)
[01:27:05] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 250 seconds)
[01:27:54] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:3bd1:a8c4:6936:2a8b) (Client Quit)
[01:30:23] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:35:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[01:46:10] *** Joins: rgrinberg (~textual@187.223.144.204)
[01:53:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[01:56:21] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:59:37] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 240 seconds)
[02:01:19] *** Quits: breavyn (~breavyn@user/breavyn) (Quit: ZNC 1.8.2 - https://znc.in)
[02:12:37] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 240 seconds)
[02:20:37] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[02:25:40] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[02:30:10] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:33:52] *** Quits: rgrinberg (~textual@187.223.250.159) (Client Quit)
[02:44:35] *** Joins: tomku (~tomku@user/tomku)
[02:48:55] *** Joins: breavyn (~breavyn@user/breavyn)
[02:53:17] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[03:07:37] *** Quits: frmdstryr (~jrm@172.58.206.137) (Ping timeout: 240 seconds)
[03:14:47] *** Joins: frmdstryr (~jrm@172.58.206.137)
[03:26:00] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:44:37] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[03:45:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:45:38] *** Joins: livoreno (~livoreno@user/notzmv)
[03:51:57] *** Joins: qaph (~weechat@user/qaph)
[03:53:02] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[03:53:04] *** qaph is now known as kron
[03:57:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:03:20] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:07:37] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:11:27] <Franciman> i think the zig package on arch linux is broken
[04:11:34] <Franciman> I get: zig: error while loading shared libraries: libLLVM-13.so: cannot open shared object file: No such file or directory
[04:11:37] <Franciman> when running zig --help
[04:11:44] <Franciman> or any zig command
[04:12:08] <Franciman> isn't it stating the depenendencies correctly?
[04:13:15] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:13:17] <Franciman> i had to manually install llvm and clang
[04:14:10] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[04:14:58] <Franciman> uhm i think there is something wrong with my arch linux, actually
[04:18:07] <mischief> xD
[04:21:38] <daurnimator> Franciman: if you installed zig with pacman then it would have installed llvm 13 as a dependency
[04:21:58] <daurnimator> Franciman: `which zig` `pacman -Qi zig`
[04:38:07] <Franciman> daurnimator: for some strange reason pacman is not installing the deps anymore
[04:38:18] <Franciman> of anything not just zig, so sorry for the false alarm
[04:43:21] <mischief> daurnimator: were you able to try my bcrypt_pbkdf code?
[04:43:40] <daurnimator> mischief: nope. have barely sat down at computer since the other day
[04:43:51] <mischief> aha, no problem.
[05:01:33] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[05:20:59] *** Joins: xd1le (~xd1le@user/xd1le)
[05:24:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[05:38:51] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:d897:2052:df35:5fc4)
[05:39:28] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:6d22:dfe2:e098:70c3) (Killed (NickServ (GHOST command used by cr1901_!~cr1901@2601:8d:8600:911:d897:2052:df35:5fc4)))
[05:39:34] *** cr1901_ is now known as cr1901
[05:39:57] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[05:48:13] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[06:37:17] *** Quits: skipwich (~skipwich@user/skipwich) (Ping timeout: 240 seconds)
[06:38:59] *** Joins: rgrinberg (~textual@2806:101e:1:83af:d58f:1e2d:50a:b565)
[06:41:57] *** Quits: frmdstryr (~jrm@172.58.206.137) (Ping timeout: 240 seconds)
[06:42:38] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:51:17] *** Quits: lovekr08 (~lovekr08@195.213.139.6) (Ping timeout: 240 seconds)
[07:20:53] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:21:47] *** Joins: redj (~quassel@74.15.230.188)
[07:23:16] *** Quits: redj (~quassel@74.15.230.188) (Client Quit)
[07:24:23] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[07:35:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:44:05] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[07:50:53] *** Joins: skipwich (~skipwich@user/skipwich)
[07:52:50] *** Quits: breavyn (~breavyn@user/breavyn) (Quit: ZNC 1.8.2 - https://znc.in)
[08:23:55] *** Quits: moog (~moog@107.126.53.157) (Remote host closed the connection)
[08:30:39] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[08:33:57] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:34:37] *** Quits: rgrinberg (~textual@2806:101e:1:83af:d58f:1e2d:50a:b565) (Ping timeout: 240 seconds)
[08:34:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[08:47:48] *** Joins: livoreno (~livoreno@user/notzmv)
[08:50:56] *** Joins: rgrinberg (~textual@200.68.178.24)
[09:06:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[09:17:47] *** Joins: ntgg (~ntgg@pool-108-52-163-71.phlapa.fios.verizon.net)
[09:18:38] *** Quits: ntgg (~ntgg@pool-108-52-163-71.phlapa.fios.verizon.net) (Client Quit)
[09:20:35] *** Quits: rgrinberg (~textual@200.68.178.24) (Read error: Connection reset by peer)
[10:04:06] *** Joins: notzmv (~zmv@user/notzmv)
[11:26:16] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[11:27:23] *** Joins: breavyn (~breavyn@user/breavyn)
[11:27:36] *** Joins: jkl (~jkl@user/jkl)
[11:38:31] *** Joins: rgrinberg (~textual@2806:101e:1:83af:d9bb:a7ba:7414:84f2)
[12:30:20] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:34:53] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[12:41:55] *** Quits: rgrinberg (~textual@2806:101e:1:83af:d9bb:a7ba:7414:84f2) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:55:40] *** Quits: scj (~scj@m90-129-218-50.cust.tele2.se) (Quit: Client closed)
[13:50:59] *** Quits: Tekk (~tekk@94.198.42.201) (Ping timeout: 268 seconds)
[13:58:59] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[14:00:14] *** Joins: earnestly (~earnest@user/earnestly)
[14:20:07] <Franciman> hi, is there an ordered set structure in zig?
[14:30:14] <squeek502> Franciman, not in the standard library; not sure if someone else has written one
[14:30:27] <Franciman> thanks
[14:30:44] <squeek502> might not be too hard to combine ArrayList and HashMap to make one though
[14:31:33] <squeek502> Franciman, actually ArrayHashMap might work for you, if you use `void` as the value
[14:32:38] <Franciman> thanks squeek502 
[14:34:37] <andrewrk> yep that's exactly what you want, ArrayHashMap with void value type
[14:35:12] <Franciman> but does it allow an ordered traversal?
[14:35:24] <Franciman> by ordered i mean i insert integers in some order
[14:35:33] <squeek502> yeah it maintains insertion order
[14:35:34] <Franciman> and i want to traverse from the smallest to the greatest
[14:35:41] <Franciman> no not insertion order
[14:35:46] <Franciman> the insertion order may be mixed up
[14:36:07] <Franciman> i want to have traverse from the min int to the max int i inserted
[14:37:55] <Franciman> i think i can make this easier and just sort my slice :P
[14:38:47] *** Joins: neceve (~quassel@2.26.93.228)
[14:51:59] <andrewrk> I believe that is called a heap
[14:52:46] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:01:00] <Franciman> i see. Does zig stdlib have something similar?
[15:01:02] <Franciman> thanks
[15:01:04] <Franciman> in advance
[15:07:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Quit: Leaving)
[15:18:30] *** Joins: xackus (~xackus@185.15.0.3)
[15:30:33] <bw> Franciman: something like a b-tree is probably going to be the most efficient. i don't think std has one yet. in lieu of that, it's probably pretty easy to whip up a binary tree. it wouldn't be very cache-efficient though
[15:31:19] <bw> Franciman: what do you plan to store in the set? that might help decide on a good solution
[15:32:29] <Franciman> u8
[15:34:35] <Franciman> I want to store integers, small ones, for now u8
[15:34:39] <Franciman> probably u16 at most
[15:36:55] <bw> well, for a set of u8, i'd just have a bitmap
[15:37:30] <bw> it would only be 32 bytes of memory ;)
[15:37:58] <bw> for u16, the same would be 8 KiB
[15:38:11] <bw> how dense?
[15:39:17] <bw> Franciman: try this? https://github.com/ziglang/zig/blob/master/lib/std/bit_set.zig
[15:42:31] <Franciman> bw: uhm i am not sure
[15:42:41] <Franciman> i think it needs 216 bits
[15:43:01] <bw> yeah, definitely a bit set then
[15:44:18] <Franciman> bw and what if I switch to u16
[15:44:28] <Franciman> i would need 65536 bytes
[15:44:30] <Franciman> :P
[15:44:33] <Franciman> it seems excessive
[15:44:37] <bw> no, it would need 8 KiB
[15:44:55] <Franciman> err bits* hm i see
[15:45:00] <Franciman> 8kib seems a bit too much
[15:45:09] <Franciman> for potentially storing around 5 u16
[15:46:01] <bw> something like roaring bitmaps would probably be the "most efficient" but if you have an upper bound on the number of bits that will be set (or unset), you might be able to get away with a sorted array
[15:46:42] <Franciman> well thanks
[15:46:57] <bw> https://github.com/ziglang/zig/blob/master/lib/std/sort.zig
[15:48:17] <Franciman> ty
[16:04:13] *** Joins: frmdstryr (~jrm@172.58.206.137)
[16:07:34] <shachaf> If you have around 5 entries then a B-tree would just end up being an array anyway.
[16:08:07] <shachaf> Since a B-tree leaf node would probably be around 32 entries or something.
[16:10:42] <shachaf> Maybe I should write a B+ tree thing for Zig. My C version (for 64-bit keys and values) was pretty good.
[16:11:29] <Franciman> please shachaf do
[16:13:52] <shachaf> Hmm, I haven't written enough Zig to have a good idea of what the API should be like.
[16:19:50] <bw> hmm, i'm trying to define my own `_start` function (instead of using the one from `std`, but zig seems confused
[16:19:53] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:20:12] <bw> >error: root source file has no member called 'main'
[16:21:52] <bw> oh, i need to make it `pub`
[16:29:34] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:47:34] *** Joins: pkap (~pkap@193.32.127.214)
[17:01:05] *** Quits: pkap (~pkap@193.32.127.214) (Ping timeout: 256 seconds)
[17:14:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[17:20:26] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:25:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[17:29:36] *** Joins: pkap (~pkap@193.32.127.214)
[17:42:34] *** Joins: lovekr08 (~lovekr08@195.213.139.6)
[17:51:23] *** Joins: notapenguin (~ryu@187.3.254.107)
[17:58:46] <Franciman> i'd like to write a ranges library for zig
[17:58:50] <Franciman> but it is too much work
[17:59:27] *** Quits: pkap (~pkap@193.32.127.214) (Ping timeout: 256 seconds)
[18:07:30] *** Joins: nyah (~nyah@94.6.71.219)
[18:19:04] <companion_cube> probably too abstract anyway
[18:20:00] <Franciman> yeah i guess
[18:20:07] <Franciman> i am using zig 0.9.0
[18:20:15] <Franciman> and zls 0.9.0
[18:20:20] <Franciman> but it is super bugged
[18:20:24] <Franciman> or am i doing wrong?
[18:20:37] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[18:20:45] <Franciman> zls 0.8.1 used to be more responsive, i can't even get completions to struct fields most of the time
[18:24:22] <luuk> There's no such thing as zls 0.8.1
[18:24:50] <Franciman> lol well the previous one xd
[18:25:26] <Franciman> 0.2.0 sorry
[18:26:42] <luuk> There's only 2 commit differences, of which neither should affect performance
[18:26:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[18:27:04] <luuk> Maybe try building from source and ensure it's built using release-safe/release-fast
[18:27:25] <Franciman> takk
[18:27:31] <Franciman> luuk
[18:51:47] *** Joins: ziguy (~ziguy@2a01:586:9397:1:5771:d9e3:b972:9f9c)
[18:53:05] *** Quits: ziguy (~ziguy@2a01:586:9397:1:5771:d9e3:b972:9f9c) (Remote host closed the connection)
[18:53:49] *** Joins: terminalpusher (~terminalp@2a01:586:9397:1:5771:d9e3:b972:9f9c)
[18:53:57] <terminalpusher> what was the rationale behind having an additional keyword `inline` for unrolling loops instead of `comptime while` and `comptime for`?
[18:57:03] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[18:57:37] <luuk> They're seperate things. inline while/for unrolls the loop during comptime but can evaluate code paths at runtime. comptime while/for runs entirely during comptime.
[18:58:10] *** Joins: moog (~moog@107.77.244.157)
[19:00:04] <terminalpusher> hmm, ahh ok, makes sense now
[19:01:18] <terminalpusher> btw, are there outdated docs here? the `inline` description in the keyword reference says " It can also be used to force a function to be inlined at all call sites. " How would that work?
[19:01:20] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:01:37] <terminalpusher> Wouldn't you do `fn shiftLeftOne(a: u32) callconv(.Inline) u32 {`? That doesn't make use of the `inline` keyword
[19:02:02] <luuk> You can also do `inline fn shiftLeftOne`
[19:02:40] <terminalpusher> oh, I thought I had tried that. But that means there are 2 ways to do it right?
[19:04:26] <terminalpusher> well, I suppose that alias is fine. It's probably the most common calling convention 
[19:06:11] <luuk> There's some GH issues that explain why there's 2 ways.
[19:06:34] <terminalpusher> Would you mind linking some?
[19:06:55] <terminalpusher> The GitHub issue search bar is really not that good 
[19:07:13] <luuk> That's why I didn't link them yet haha
[19:07:35] <terminalpusher> ah haha
[19:30:17] *** Quits: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb) (Quit: You have been kicked for being idle)
[19:31:24] *** Quits: lovekr08 (~lovekr08@195.213.139.6) (Quit: Leaving)
[19:32:57] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:42:29] <Pistahh_> OA
[19:47:37] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[19:59:20] *** Joins: xackus (~xackus@185.15.0.3)
[20:10:21] <ifreund> shachaf: the std.HashMap API is pretty good if you want inspiration for a B+ tree API
[20:10:34] *** Quits: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu) (Remote host closed the connection)
[20:10:34] <ifreund> it does err on the side of generality rather than simplicity though
[20:10:42] *** Quits: terminalpusher (~terminalp@2a01:586:9397:1:5771:d9e3:b972:9f9c) (Remote host closed the connection)
[20:20:34] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[20:29:41] *** Quits: dcx (~dcx@user/dac) (Remote host closed the connection)
[20:31:05] *** Joins: dcx (~dcx@user/dac)
[20:52:31] <bw> Can zig compile to bpf yet?
[20:55:48] <ifreund> bw: it's a Tier 3 target: https://ziglang.org/download/0.9.0/release-notes.html#Tier-3-Support
[20:56:04] <ifreund> so yes but there are caveats and TODOs
[21:36:04] *** Joins: frett27 (~frett27@2a01:cb14:5fa:7e00:e8ca:9741:bd7f:84bd)
[21:42:56] <bw> Whatâ€™s the entry point for a bpf program?
[21:43:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:47:34] <ifreund> bw: this talk is a year old but is probably still useful: https://www.youtube.com/watch?v=vZYKq3Dvv0g
[21:51:34] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[21:57:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:02:00] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:04:46] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[22:11:02] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:15:51] *** Quits: moog (~moog@107.77.244.157) (Remote host closed the connection)
[22:16:15] *** Joins: moog (~moog@107.77.244.157)
[22:25:45] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[22:35:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:43:46] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 268 seconds)
[23:01:57] *** Quits: frmdstryr (~jrm@172.58.206.137) (Ping timeout: 240 seconds)
[23:02:03] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[23:24:51] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[23:38:40] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:50:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:51:29] *** Quits: frett27 (~frett27@2a01:cb14:5fa:7e00:e8ca:9741:bd7f:84bd) (Remote host closed the connection)
