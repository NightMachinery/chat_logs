[00:01:45] <b0nn> saml: um, what exactly are you wanting?
[00:02:54] <saml> I want to set timeout on IO so that the server can handle traffic without getting things queued up too much and get OOM
[00:03:41] <saml> googled little's law. looks like queue length = rate*timeout
[00:04:59] *** Joins: crashrep (~crashrep@user/crashrep)
[00:05:30] <foobaz> in addition to a timeout, it might be useful to respond with a 503 error when too many requests pile up
[00:06:11] <b0nn> hmm am thinking it's a calculation for queue depth
[00:06:32] <b0nn> ie. how many requests can my queue handle, with x timeout
[00:07:01] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[00:07:44] <b0nn> eg https://www.ibm.com/docs/en/flashsystem-7x00/8.2.x?topic=qdifch-homogeneous-queue-depth-calculation-in-fibre-channel-hosts
[00:09:32] *** Joins: arcatech (~arcatech@user/arcatech)
[00:09:42] *** Joins: neurocyte0917090 (~neurocyte@IP-046243082200.dynamic.medianet-world.de)
[00:09:42] *** Quits: neurocyte0917090 (~neurocyte@IP-046243082200.dynamic.medianet-world.de) (Changing host)
[00:09:42] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:10:00] *** halden^ is now known as halden
[00:10:45] <ikke> isn't 429 more appropriate?
[00:10:58] *** Joins: Jad_ (~Nashmi@109.107.229.24)
[00:11:46] <foobaz> no, that's only for a single user, and it's a client error
[00:11:53] <Batzy> ikke:  429 tends to be for a rate limit violation of the client
[00:12:01] <foobaz> 503 is a server error, because having too many requests in the queue is a server limitation
[00:12:57] *** Quits: Jad (~Nashmi@user/jad) (Ping timeout: 240 seconds)
[00:13:07] <b0nn> yeah - you're communicating to the caller that the server is unable to handle their request and they should lok at other options
[00:13:17] *** Quits: fjb (~fjb@2804:378:90ac:400:36d3:7e6a:cea5:aba4) (Ping timeout: 240 seconds)
[00:13:42] <foobaz> sending 429's to malicious clients could help prevent your queue from maxing out, but once it has, it's 503 time
[00:15:18] <b0nn> hmm, if you have a LB that forwards requests to any of a number of queues, the 503 lets the LB know that it should use a different queue
[00:22:13] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:25:43] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Remote host closed the connection)
[00:26:03] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:28:36] *** Joins: jla (~jordi@64.225.79.195)
[00:28:38] *** Joins: dr0n (~nabromov@176.26.119.61)
[00:29:13] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Remote host closed the connection)
[00:29:34] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:30:51] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:37:42] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Remote host closed the connection)
[00:38:01] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:38:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:38:51] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:42:12] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Remote host closed the connection)
[00:42:31] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:45:18] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 256 seconds)
[00:52:34] *** Quits: SuperL4g (~akulbe@user/superlag) (Remote host closed the connection)
[00:54:09] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:54:32] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[00:55:17] *** Joins: shtirlic_ (~shtirlic@pppoe.95-55-137-7.dynamic.avangarddsl.ru)
[00:56:11] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 245 seconds)
[00:58:49] *** Quits: shtirlic (~shtirlic@pppoe.95-55-137-7.dynamic.avangarddsl.ru) (Ping timeout: 250 seconds)
[01:00:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[01:02:33] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[01:14:02] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:14:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:19:27] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:20:38] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[01:22:26] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[01:24:42] *** Quits: Jad_ (~Nashmi@109.107.229.24) (Quit: Benefits I derive from freeÂ­dom are largely the result of the uses of freedom by others, and mostly of those uses of freedom that I could never avail myself of.)
[01:28:37] *** LiftLeft2 is now known as LiftLeft
[01:34:48] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[01:36:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:37:16] <b0nn> I meant to paste this earlier https://www.embedded.com/how-to-size-message-queues/
[01:38:53] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[01:44:37] *** Joins: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za)
[01:52:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[01:56:08] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[02:00:22] *** Quits: analogsalad (~analogsal@user/analogsalad) (Remote host closed the connection)
[02:02:45] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:04:01] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:04:50] *** Joins: deia (~deia@cpe-24-165-220-143.neo.res.rr.com)
[02:07:49] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[02:08:23] *** Joins: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net)
[02:09:11] *** Joins: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net)
[02:10:30] <domino14> Hi all. I have this loop in a function and I guess I still don't understand channels or something. https://dpaste.org/G5Pr#
[02:11:07] <domino14> when I call `cancel()` outside this function, it prints out this line log.Info().Msg("pubsub context done, draining subscriptions")
[02:11:11] <domino14> hundreds of thousands of times
[02:11:48] <domino14> i don't understand why. why would case <-ctx.Done keep triggering over and over again? I only canceled once
[02:12:15] <fizzie> Because the channel gets closed when you cancel.
[02:12:27] <fizzie> And a closed channel is *always* ready for receiving (a zero value) from.
[02:12:58] <b0nn> domino14: once you handle ctx.Done() the loop starts again
[02:14:05] <fizzie> Here's one potential way to handle the situation where you need to stay in the loop for a while: before the loop, do `done := ctx.Done()`, and in the `case <-done:` do `done = nil` to essentially take it out of the select.
[02:14:06] <b0nn> the only time you leave that loop is when you read from exit
[02:15:08] <b0nn> are you expecting line 26 to call the exit case when the done case is handled?
[02:15:14] <domino14> thanks, i see now. Yes, I need to stay in the loop for a little while, while it's draining messages
[02:15:20] <b0nn> hmm call isn't the right word
[02:15:24] <domino14> yes i am
[02:15:47] <domino14> instead it seems like i started like 1 million timers :D
[02:15:50] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:4917:bc56:f54d:812b) (Ping timeout: 252 seconds)
[02:15:56] <b0nn> :)
[02:16:15] <domino14> so that done = nil certainly seems like a hack. is that the best way?
[02:16:17] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:16:21] <domino14> let me try it anyway
[02:17:07] <fizzie> A nil channel is pretty much the opposite of a closed channel when it comes to select: it can never be received from.
[02:17:29] *** Quits: flughafen (~flughafen@p5de8e515.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:17:34] <fizzie> Another alternative would be to fall out of the loop and have a *different* loop for the "I've been canceled, but I'm still doing some work" situation.
[02:19:11] <foobaz> it doesn't seem like a hack to me, i think it's an elegant solution
[02:19:54] <fizzie> Which one's better may depend on how similarly (or differently) you need the code to behave in the "before cancel" and "after cancel" situations.
[02:21:37] *** Quits: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net) (Remote host closed the connection)
[02:24:10] <b0nn> if you have multiple goroutines reading from the channel, there's a race when the nil is applied
[02:24:49] *** Quits: deia (~deia@cpe-24-165-220-143.neo.res.rr.com) (Ping timeout: 256 seconds)
[02:25:04] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 250 seconds)
[02:26:29] <fizzie> To be clear about that, I was assuming the only two references to the (local) `done` variable would be the `case <-done:` of that select statement, and the `done = nil` in that case.
[02:26:39] *** Joins: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net)
[02:26:41] <foobaz> if done is a local variable, it has no effect on other goroutines
[02:26:52] <domino14> got briefly disconnected. is there a log for this chat?
[02:27:41] <domino14> so the solution seems to work, but my test fails. not sure if that's because sending messages and immediately draining maybe doesn't work as i expect it to
[02:27:42] <fizzie> I don't know if there is post the move to Libera, but here's a quick paste: https://0x0.st/oHcy.txt
[02:28:12] <domino14> thanks :)
[02:28:18] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[02:28:21] <b0nn> WRT log bots, there's a problem with the GDPR
[02:29:15] <b0nn> That is, the GDPR prohibits publication of data that might identify an indvidual
[02:29:31] <b0nn> There's a carve out where the person has said things in public
[02:29:46] <b0nn> The question is, is IRC (which requires you to have an account) public
[02:29:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:29:53] <b0nn> (for the purposes of their law)
[02:29:59] <foobaz> so as long as the operator of the log bot is not european, it should be fine right?
[02:30:05] *** Joins: mickey8 (~user@user/mickey)
[02:30:08] <b0nn> no
[02:30:18] <foobaz> sounds like a job for AMERICAN FREEDOM
[02:30:23] <b0nn> it's the european citizen's identification that's at issue
[02:30:55] <domino14> ah, it appears that if I publish messages to the NATS channels, and i immediately cancel() (so that the drain starts immediately), it doesn't actually receive the msgs. hm
[02:31:06] <domino14> so it's not actually "draining" properly..
[02:31:15] <domino14> but if i set a timer for one millisecond before canceling, then it works
[02:31:25] <b0nn> https://gdpr-info.eu/art-9-gdpr/
[02:31:36] <foobaz> don't rely on that, timers can easily be delayed by a millisecond or more
[02:31:58] <domino14> right, i don't know why i even need a timer
[02:32:25] *** Joins: iryith1 (~iryith3@207.81-166-89.customer.lyse.net)
[02:32:27] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:8cbb:90c8:fb87:52b1) (Quit: Client closed)
[02:33:26] <foobaz> maybe instead of closing the channel, you could use a stop message
[02:33:27] <b0nn> section e of article 9 is the carve out
[02:34:32] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: Ping timeout (120 seconds))
[02:34:40] <foobaz> ok but what penalties would an american face for violating EU law? i don't think such a minor crime would qualify for extradition
[02:34:56] *** Joins: henry40408 (~henry4040@175.181.155.165)
[02:34:58] <foobaz> worst case, the operator of the log bot would need to avoid visiting europe
[02:35:48] *** Quits: iryith (~iryith3@user/iryith) (Ping timeout: 256 seconds)
[02:36:09] <b0nn> I mean, I am not a lawyer, but I think that you are right that the operator's travels would be the biggest impact
[02:37:19] <foobaz> maybe there is a safe harbor clause that says the operator may only be penalized after refusing a takedown request
[02:37:33] <foobaz> if so, it would be safe to operate until receiving such a request
[02:37:55] *** Joins: crashrep (~crashrep@user/crashrep)
[02:38:50] <b0nn> I'm not aware of such a carve out
[02:39:10] <b0nn> In fact I think that the GDPR was written with a more punitive mindset
[02:39:57] <b0nn> Companies have to prove that the individual agreed to a certain action, for example, to receive their monthly newsletter by email. It is no longer enough to only add a disclaimer to communications or simply provide an opt-out.
[02:40:17] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[02:42:46] *** Quits: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net) (Remote host closed the connection)
[02:45:28] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[02:47:40] <b0nn> The Safe Harbour agreement between the EU and the US was voided in 2015 (before GDPR) https://en.wikipedia.org/wiki/International_Safe_Harbor_Privacy_Principles
[02:48:13] <b0nn> There was a major concern that EU data transferred to the US was being accessed by the NSA (etc)
[02:48:52] <b0nn> And there was (also on that page) the issue of the US Patriot Act allowing the US Law Enforcement access to data stored on EU soil
[02:50:22] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[02:51:24] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[02:53:22] *** Quits: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[02:54:26] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[02:54:40] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:59:19] <chilversc> is there an idomatic way to create pipes for both stdout and stderr when using exec.Cmd?
[03:00:01] <chilversc> specifically for handling clean up if requesting the second pipe errors
[03:00:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[03:02:58] <albertito> chilversc: do Cmd.StdoutPipe and friends not work for your use case?
[03:07:29] <chilversc> I was just wondering the correct way to clean up if you ask for StdoutPipe, but then StderrPipe fails, I would guess you need to close stdout manually?
[03:13:49] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (Remote host closed the connection)
[03:23:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:27:49] *** Quits: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net) (Ping timeout: 240 seconds)
[03:31:33] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 250 seconds)
[03:33:54] *** Joins: mgd (~mgd@85.210.231.115)
[03:36:28] *** Quits: mgd (~mgd@85.210.231.115) (Client Quit)
[03:37:41] <chilversc> so the general advice for errors is to keep the all lower case, but what if the error message comes from some external source such as a http response?
[03:38:27] <chilversc> and what if the error message might be multiple lines, is there a standard pattern people use, or do I just wrap the external error with errors.New(msg) ?
[03:39:50] *** Joins: mgd (~mgd@85.210.231.115)
[03:41:26] *** Quits: mgd (~mgd@85.210.231.115) (Client Quit)
[03:41:41] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[03:42:43] *** Joins: mgd (~mgd@85.210.231.115)
[04:00:14] *** Quits: mgd (~mgd@85.210.231.115) (Quit: Igloo IRC: https://iglooirc.com)
[04:01:31] *** Joins: [Coke] (~coke@172.58.235.132)
[04:02:21] <[Coke]> Hi - I just had someone ask if I knew any Go developers for a position - is there a go specific jobs site somewhere I can redirect them?
[04:03:33] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[04:03:55] *** Joins: mgd (~mgd@85.210.231.115)
[04:04:27] <mike18_> hi, can someone recommend a rest api to test things?
[04:04:28] *** Joins: crashrep (~crashrep@user/crashrep)
[04:04:34] <mike18_> e.g. https://kevin.burke.dev/kevin/golang-json-http/
[04:05:25] <mike18_> i mean https://mholt.github.io/json-to-go/
[04:07:07] <mike18_> sorry im stupid: here: https://gorest.co.in/
[04:07:32] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[04:08:50] *** Joins: Everything (~Everythin@37.115.210.35)
[04:09:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[04:10:06] *** Quits: mgd (~mgd@85.210.231.115) (Remote host closed the connection)
[04:11:46] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:14:15] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:4c8f:ea0e:1c15:da19) (Ping timeout: 250 seconds)
[04:15:01] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Remote host closed the connection)
[04:15:18] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3)
[04:16:00] *** Joins: fef (~thedawn@user/thedawn)
[04:16:43] *** Joins: mgd (~mgd@85.210.231.115)
[04:16:46] *** Quits: mgd (~mgd@85.210.231.115) (Client Quit)
[04:24:28] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[04:25:11] *** Joins: mgd (~mgd@85.210.231.115)
[04:25:46] *** Quits: mgd (~mgd@85.210.231.115) (Client Quit)
[04:28:41] *** Joins: cnf0 (~cnf@d5152daf0.static.telenet.be)
[04:29:11] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Read error: Connection reset by peer)
[04:29:11] *** cnf0 is now known as cnf
[04:31:15] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:40:19] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:43:53] *** Joins: yoonkn (~user@175.197.208.79)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:14] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:47:21] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:52:55] *** Quits: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399) (Remote host closed the connection)
[04:53:08] *** Joins: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399)
[04:53:42] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:57:34] <mike18_> hi can someone give some feedback to this simple code? https://go.dev/play/p/QPQUxg58Qkh
[04:58:42] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[05:16:53] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[05:18:33] <mike18_> How to compare JSON with varying order?
[05:22:57] *** Quits: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:24:59] *** Joins: Ponyo (~steph@50.54.159.160)
[05:25:12] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[05:26:04] *** Parts: Ponyo (~steph@50.54.159.160) ()
[05:26:58] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:27:38] *** Joins: Fuzai (~steph@50.54.159.160)
[05:32:12] <Fuzai> https://goplay.tools/snippet/vNFyV8lpnvr is there a way to combine line 27 and 28 into one line?  I get trying to do "&make..." is trying to ask for the address of make, but is there a way to ask for address the result of make without having to assign it to a variable first?
[05:32:56] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca)
[05:33:21] <fizzie> Not for the result of make, but you can write `&map[string][]string{}`.
[05:34:29] <fizzie> (There's a special dispensation for applying & to a composite literal.)
[05:35:21] <Fuzai> Oh, ok, thank you :)
[05:37:32] <fizzie> FWIW, having a pointer to a map in the first place is a pretty odd thing to do.
[05:38:25] <fizzie> A map value is already pretty much pointer-like.
[05:40:26] <Fuzai> I have a really basic http server where one thread is polling a database and swapping a map in of the current results of a sql query.  The thing is it is easier to start with a blank map, populate, and swap in, than try to update in place
[05:40:53] <fizzie> Fair, but you don't need a pointer for that. You can "swap in" a map by just assigning map values around.
[05:41:12] <Fuzai> I'm also really new to doing golang specifically so I'll take any advice
[05:43:15] <Fuzai> Originally, I was trying to avoid using globals to complete this task, but after reading online, people kept saying if it's something simple and small, globals are ok, as long as you understand what you are doing
[05:49:21] <fizzie> Mm, well. That's reasonable enough. But if you're writing to a variable from one goroutine and reading from another, strictly speaking some synchronization is needed to guarantee goroutine A observes the write from goroutine B.
[05:49:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[05:50:33] <fizzie> Your pasted example snippet causes the race detector (`go run -race tmp.go`) to complain.
[05:51:36] <Fuzai> Hrm, I'll look into that, thanks
[06:18:58] <Fuzai> @fizzie Thank you for that hint. I added a WaitGroup for good measures to the real code and that -race isn't complaining anymore
[06:21:29] *** Joins: califax- (~califax@user/califx)
[06:23:36] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[06:24:33] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[06:26:18] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:26:18] *** califax- is now known as califax
[06:27:55] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[06:28:22] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[06:29:41] *** Quits: karan (uid537552@id-537552.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:30:20] *** Joins: prologic (~prologic@mail.mills.io)
[06:30:42] <prologic> Q: Do I need a custom MarshalJSON() on a struct with read-locks around it to protect against data races?
[06:30:55] <prologic> Or does Go's encoding/json library somehow handle this automagically?
[06:31:29] <prologic> I suspect I have to just do an RLock() explicitly?
[06:31:36] *** Joins: SuperLag (~akulbe@user/superlag)
[06:33:07] <foobaz> yes, you need a lock if another goroutine could be modifying it
[06:33:41] <foobaz> i recommend using a normal lock, not an read-lock, because the normal lock is 2x faster when there is no contention for it
[06:34:15] <prologic> Rightio
[06:34:17] <prologic> Thanks!
[06:34:44] *** Joins: Techcable (~Techcable@168.235.93.147)
[06:38:30] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[06:44:02] *** Parts: prologic (~prologic@mail.mills.io) (Textual IRC Client: www.textualapp.com)
[06:49:25] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[06:50:37] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 240 seconds)
[06:54:18] *** Joins: jespada (~jespada@87.74.36.188)
[07:06:01] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Quit: Bridge terminating on SIGTERM)
[07:07:56] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[07:09:33] *** Joins: Compy (~compy@user/compy)
[07:22:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:37:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[07:39:04] *** Joins: fef (~thedawn@user/thedawn)
[07:53:12] *** Joins: Maxattax97 (~max@199.8.13.227)
[08:23:10] *** batdog_ is now known as batdog
[08:29:51] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:32:05] *** Quits: Maxattax97 (~max@199.8.13.227) (Remote host closed the connection)
[08:38:00] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:38:57] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:39:58] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Client Quit)
[08:40:55] *** Quits: moog (~moog@107.77.244.129) (Remote host closed the connection)
[08:41:51] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:42:49] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:44:28] *** Joins: Batzy (~quassel@user/batzy)
[08:44:52] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[09:20:08] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:20:22] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[09:23:59] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Quit: boof)
[09:24:17] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[09:25:09] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[09:41:25] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[09:43:59] *** Joins: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net)
[09:47:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:48:10] *** Joins: mickey8 (~user@user/mickey)
[09:55:08] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[10:10:08] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:11:05] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:14:41] *** Quits: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net) (Quit: ben_)
[10:24:56] *** Joins: JuanMiguel (~juanmi@72.red-79-158-14.dynamicip.rima-tde.net)
[10:26:13] *** Quits: JuanMiguel (~juanmi@72.red-79-158-14.dynamicip.rima-tde.net) (Client Quit)
[10:30:04] *** Joins: bluedust (~bluedust@103.161.144.140)
[10:44:11] *** Joins: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk)
[10:49:02] *** Quits: zwr (~zwr@2804:d45:b966:fb00:1493:7e75:a195:6d65) (Ping timeout: 240 seconds)
[10:50:14] *** Joins: fef (~thedawn@user/thedawn)
[10:50:16] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3) (Read error: Connection reset by peer)
[10:53:17] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[10:54:06] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[10:54:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[10:55:52] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[10:56:07] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3)
[11:11:49] *** Quits: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk) (Quit: WeeChat 3.4)
[11:12:44] *** Joins: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk)
[11:23:49] <j416> foobaz: huh, wow. didn't know
[11:24:07] <j416> @ rw vs r
[11:24:23] <j416> er, rw vs regular
[11:24:56] <j416> foobaz: you don't happen to have more info on this?
[11:25:57] <ikke> A regular lock is a Locker?
[11:26:39] <ikke> Oh, that's just an interface (name says it)
[11:28:07] <ikke> Ah, you mean using Lock in a RWMutex instead of RLock
[11:28:10] <ikke> ?
[11:30:27] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[11:30:52] *** Joins: fef (~thedawn@user/thedawn)
[11:31:53] <j416> that's what I assume they meant, yes
[11:32:17] <j416> sync.Mutex vs sync.RWMutex
[11:32:37] <ikke> nod
[11:37:11] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[11:38:19] <j416> sync.RWMutex does have a lot more stuff, so it makes sense that it could be slower, but can't figure out a real use-case
[11:38:44] <j416> I suppose if there aren't many readers
[11:39:36] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[11:40:37] *** Joins: huoy99 (~huoy99@gateway/vpn/pia/huoy99)
[11:40:42] *** Parts: huoy99 (~huoy99@gateway/vpn/pia/huoy99) ()
[11:44:56] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3) (Quit: trafficjam)
[11:50:06] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3)
[11:53:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[11:57:41] <ikke> https://www.reddit.com/r/golang/comments/seih1i/understanding_concurrency_mutexes/
[12:06:40] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[12:08:39] *** Joins: bluedust_ (~bluedust@185.248.85.32)
[12:12:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[12:13:32] *** Quits: transacid_ (~transacid@transacid.de) (Ping timeout: 240 seconds)
[12:20:19] *** Joins: transacid (~transacid@transacid.de)
[12:23:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[12:25:51] <j416> ah, I mean a use-case for using a sync.Mutex over sync.RWMutex; but I'm biased from writing read-heavy things so probably that
[12:26:59] <j416> I suppose it makes sense for a once-in-a-while read/write thing, config or whatnot
[12:30:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[12:30:41] *** Joins: camelliose (~camellios@180.245.227.2)
[12:31:06] *** Quits: camelliose (~camellios@180.245.227.2) (Client Quit)
[12:32:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:37:06] <ikke> They mentioned in the thread that a RWMutex was not a good fit there
[12:39:18] <j416> oh. missed that; didn't read in detail. will read. thanks.
[12:40:56] <ikke> To be fair, they said: "This is unfortunately not a great example of mutexes, because (for the reasons you described), this Get operation requires a write lock."
[12:47:17] *** Joins: shka (~herr@109.231.0.226)
[12:51:17] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[12:52:46] <j416> nod
[12:59:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[12:59:36] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[13:01:56] *** Joins: noarb (~noarb@user/noarb)
[13:07:16] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 250 seconds)
[13:09:43] *** Joins: jespada (~jespada@87.74.36.188)
[13:10:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[13:11:05] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:e0df:a77b:c4c1:ed3) (Read error: Connection reset by peer)
[13:13:57] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[13:16:51] *** Joins: trafficjam (~qubes@2001:8004:1500:3ec6:efb:b734:1850:7ee0)
[13:20:01] *** Joins: rendar (~rendar@user/rendar)
[13:28:59] *** Quits: iryith1 (~iryith3@207.81-166-89.customer.lyse.net) (Quit: Leaving)
[13:29:22] *** Joins: iryith (~iryith3@207.81-166-89.customer.lyse.net)
[13:29:22] *** Quits: iryith (~iryith3@207.81-166-89.customer.lyse.net) (Changing host)
[13:29:22] *** Joins: iryith (~iryith3@user/iryith)
[13:29:45] *** Quits: trafficjam (~qubes@2001:8004:1500:3ec6:efb:b734:1850:7ee0) (Remote host closed the connection)
[13:30:11] *** Joins: trafficjam (~qubes@2001:8004:1500:3ec6:55e1:701b:d0e0:5904)
[13:31:48] *** Joins: leonarth (~leonarth@user/leonarth)
[13:34:02] *** Quits: atstefan (~stefan@99-41-248-215.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 240 seconds)
[13:34:36] *** Joins: walterwhip (~www@user/walterwhip)
[13:35:01] *** Joins: atstefan (~stefan@99-41-248-215.lightspeed.rcsntx.sbcglobal.net)
[13:37:08] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[13:41:07] *** Quits: trafficjam (~qubes@2001:8004:1500:3ec6:55e1:701b:d0e0:5904) (Remote host closed the connection)
[13:52:37] *** Joins: Atque (~Atque@user/atque)
[14:03:53] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[14:07:15] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[14:12:50] *** Quits: leonarth (~leonarth@user/leonarth) (Remote host closed the connection)
[14:14:55] *** Joins: leonarth (~leonarth@user/leonarth)
[14:21:18] *** Joins: bq (~david@oh.not.bad.aye.yeah.nah.nz)
[14:21:32] *** Joins: jla (~jordi@64.225.79.195)
[14:21:48] *** Quits: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399) (Ping timeout: 250 seconds)
[14:24:00] <bq> Almost accidentally joined #no-guts instead. If I'm streaming JSON objects down over an io.Reader and I want to unmarshal it to a different struct depending on a "type" field, is there a better way to do this than buffer the JSON string and unmarshal it twice: once to extract "type" and a second time to get my final, full unmarshaling after knowing the type?
[14:26:13] <j416> haha. no-guts.
[14:26:32] <j416> bq: if by that you mean to a json.RawMessage field, then I think not really
[14:26:51] <j416> the json needs to be parsed to get the type out
[14:27:29] <bq> Ah yeah, RawMessage not string heh
[14:27:58] <j416> you might be able to get away with using the tokenizer or a third-party json parser, but seems like premature optimization unless you're already there trying to make it faster
[14:28:09] <bq> yeah true
[14:28:57] <bq> I thought maybe there was some magic dance I was missing but I guess not. I guess it'd make more sense for the author of this protocol to indicate the message's type in a more hierarchical way
[14:29:28] <j416> even with a hierarchy, you'd need to parse it like that, as long as it's the same json object
[14:29:37] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 240 seconds)
[14:29:47] <j416> you've probably already seen https://pkg.go.dev/encoding/json#example-RawMessage-Unmarshal
[14:29:52] <bq> Mmm shoot. True
[14:30:14] <j416> ^ judging from there being an example in the docs doing it in the way you describe, I bet that's the way to go
[14:30:24] <bq> Oh hey how did I miss that
[14:30:37] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[14:30:57] <bq> j416, thanks! Looks like it's the right way to go after all then
[14:31:02] <j416> :)
[14:31:09] <j416> has worked fine for me
[14:31:48] <bq> Yeah seems more efficient on CPU than decoding to a map[string]interface{}, peeking, then re-serialisng that to JSON and unmarshaling into a struct
[14:31:57] <j416> definitely
[14:32:13] <j416> and you also have the option to just store the data as-is to parse at a later time (json.RawMessage is []byte)
[14:32:29] <bq> true
[14:34:06] <j416> now you just have to hope that your data is nested like that and not type field alongside all the other fields inline >:<
[14:34:08] <j416> >.>
[14:35:49] <bq> Ah yeah, it's not
[14:36:16] <bq> That's fine though I just need to pull RawMessages from the Reader and work on it twice
[14:37:29] <bq> The messages are generally speaking fairly small, maxing out at a few kB worst case
[14:44:11] <foobaz> j416: i learned about RWMutex performance overhead by reading the source and benchmarking/optimizing my code
[14:44:46] <foobaz> so i can't point you to a blog post or anything, but you should read the mutex source, there's not much to it
[14:45:32] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[15:00:19] *** Joins: flughafen (~flughafen@p5796945c.dip0.t-ipconnect.de)
[15:00:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[15:05:40] *** Quits: bluedust_ (~bluedust@185.248.85.32) (Remote host closed the connection)
[15:06:10] *** Joins: bluedust (~bluedust@185.248.85.32)
[15:10:38] *** Quits: bluedust (~bluedust@185.248.85.32) (Ping timeout: 260 seconds)
[15:14:52] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Quit: mugen)
[15:20:29] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[15:27:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:28:18] *** Joins: jla (~jordi@64.225.79.195)
[15:28:28] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[15:29:16] *** Quits: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk) (Quit: WeeChat 3.4)
[15:31:32] *** Quits: jeromenerf (~jerome@176-149-34-153.abo.bbox.fr) (Ping timeout: 240 seconds)
[15:31:40] *** Joins: jeromenerf (~jerome@per92-h03-176-149-34-153.dsl.sta.abo.bbox.fr)
[15:32:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:33:09] <j416> foobaz: thanks!
[15:34:50] *** Joins: rogersm (~rogersm@90.166.180.250)
[15:40:16] * be3uykpy waves
[15:41:44] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[15:58:06] *** Quits: __alex_ (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[16:00:31] *** Joins: leonarth (~leonarth@user/leonarth)
[16:01:48] *** Joins: noteness_ (noteness@user/noteness)
[16:04:15] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:04:29] *** Joins: mickey8 (~user@user/mickey)
[16:08:19] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[16:09:27] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[16:15:14] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[16:17:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[16:17:49] *** Joins: bluedust (~bluedust@185.248.85.32)
[16:20:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:23:22] *** Joins: fikran (~fikran@user/fikran)
[16:30:07] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[16:31:01] *** Quits: iryith (~iryith3@user/iryith) (Read error: Connection reset by peer)
[16:32:53] *** Joins: Nigthknight (~Nigthknig@user/nigthknight)
[16:32:56] *** Joins: iryith (~iryith3@207.81-166-89.customer.lyse.net)
[16:32:56] *** Quits: iryith (~iryith3@207.81-166-89.customer.lyse.net) (Changing host)
[16:32:56] *** Joins: iryith (~iryith3@user/iryith)
[16:39:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[16:42:02] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[16:42:10] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[16:43:30] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[16:48:38] *** Quits: Nigthknight (~Nigthknig@user/nigthknight) (Ping timeout: 256 seconds)
[16:50:15] *** Joins: Nigthknight (~Nigthknig@user/nigthknight)
[16:51:57] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:03:38] *** Parts: Nigthknight (~Nigthknig@user/nigthknight) ()
[17:06:17] *** Quits: noteness_ (noteness@user/noteness) (Ping timeout: 240 seconds)
[17:09:43] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
[17:15:24] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:16:01] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[17:18:57] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:20:17] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[17:21:58] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 268 seconds)
[17:24:38] *** Joins: jespada (~jespada@87.74.36.188)
[17:46:08] *** nikos_ is now known as nikos
[17:49:51] *** Joins: rudi_sx (~simon@bmc2.informatik.uni-erlangen.de)
[17:50:14] *** Quits: rudi_sx (~simon@bmc2.informatik.uni-erlangen.de) (Client Quit)
[17:56:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7)
[18:05:01] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[18:09:06] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 256 seconds)
[18:10:50] *** Joins: zwr (~zwr@2804:d45:b966:fb00:d3a7:44f8:3616:d9d)
[18:16:42] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[18:21:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:21:45] *** Joins: arkurious (~arkurious@user/arkurious)
[18:23:19] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[18:26:38] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[18:28:22] *** Joins: Atque (~Atque@user/atque)
[18:30:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:32:43] *** Joins: fikran (~fikran@user/fikran)
[18:40:45] *** Quits: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net) (Quit: v8IbXNTl)
[18:41:51] *** rdg_ is now known as rdg
[18:44:24] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 250 seconds)
[18:48:31] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:297f:fa61:535f:aa91)
[18:50:50] *** Joins: Nigthknight (~Nigthknig@user/nigthknight)
[18:58:21] *** Quits: Nigthknight (~Nigthknig@user/nigthknight) (Ping timeout: 276 seconds)
[19:01:02] *** Joins: shtirlic (~shtirlic@pppoe.95-55-137-7.dynamic.avangarddsl.ru)
[19:02:54] *** Joins: leonarth_ (~leonarth@user/leonarth)
[19:04:37] *** Quits: leonarth (~leonarth@user/leonarth) (Ping timeout: 240 seconds)
[19:04:42] *** Joins: Nigthknight (~Nigthknig@user/nigthknight)
[19:05:01] *** Quits: shtirlic_ (~shtirlic@pppoe.95-55-137-7.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[19:05:30] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[19:07:36] *** Joins: califax (~califax@user/califx)
[19:11:13] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:15:30] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[19:16:46] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:17:00] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:20:27] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[19:20:48] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:25:02] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[19:31:12] *** Quits: leonarth_ (~leonarth@user/leonarth) (Ping timeout: 250 seconds)
[19:41:39] *** Joins: moog (~moog@107.126.53.129)
[19:42:07] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[19:47:13] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[19:49:23] *** Joins: fef (~thedawn@user/thedawn)
[19:51:08] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36)
[19:51:40] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 256 seconds)
[19:52:48] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[19:53:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7) (Ping timeout: 250 seconds)
[19:59:13] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[20:02:50] *** Quits: moog (~moog@107.126.53.129) (Ping timeout: 250 seconds)
[20:07:19] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:08:31] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[20:08:42] *** Joins: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com)
[20:10:36] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:13:25] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:15:15] *** Joins: xse (~xse@user/xse)
[20:18:20] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Quit: WeeChat 3.3)
[20:19:03] *** Joins: fef (~thedawn@user/thedawn)
[20:19:06] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Quit: Leaving)
[20:27:22] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[20:28:42] *** Joins: rudi_sx (~simon@bmc2.informatik.uni-erlangen.de)
[20:29:21] *** Quits: rudi_sx (~simon@bmc2.informatik.uni-erlangen.de) (Client Quit)
[20:30:35] *** Joins: crashrep (~crashrep@user/crashrep)
[20:30:40] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 268 seconds)
[20:32:55] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[20:40:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:42:04] *** Joins: fikran (~fikran@user/fikran)
[20:59:39] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 268 seconds)
[21:03:34] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[21:04:13] *** Joins: FiskFan1999 (~FiskFan19@wvlist.net)
[21:04:52] <FiskFan1999> Hey everyone, I understand that http.Handler automatically sets the response code to 200 after handling a request unless i call http.Error and then return. How can I return the respnose code 201, for example. Do I have to use http.Error?
[21:05:54] <j416> FiskFan1999: w.WriteHeader(http.StatusCreated)
[21:06:13] <FiskFan1999> j416: Thank you
[21:10:53] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[21:11:15] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[21:11:29] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[21:12:43] *** rudi_s is now known as rudi_sy
[21:12:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0)
[21:14:05] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[21:15:37] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[21:16:58] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36) (Ping timeout: 260 seconds)
[21:18:45] *** Joins: hanzo (uid532183@user/hanzo)
[21:21:32] *** Quits: bluedust (~bluedust@185.248.85.32) (Remote host closed the connection)
[21:22:03] *** Joins: bluedust (~bluedust@185.248.85.32)
[21:25:19] *** Joins: moog (~moog@107.126.53.88)
[21:26:52] *** Quits: bluedust (~bluedust@185.248.85.32) (Ping timeout: 256 seconds)
[21:28:15] *** Parts: FiskFan1999 (~FiskFan19@wvlist.net) (WeeChat 3.4)
[21:34:16] *** Quits: moog (~moog@107.126.53.88) (Ping timeout: 250 seconds)
[21:35:04] *** Joins: moog (~moog@107.126.53.88)
[21:36:52] *** Quits: j416 (~j416@user/j416) (Ping timeout: 250 seconds)
[21:37:55] *** Joins: j416 (~j416@user/j416)
[21:38:54] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 260 seconds)
[21:46:16] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[21:57:28] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 256 seconds)
[21:58:32] *** Quits: nathanael (~nathanael@user/nathanael) (Quit: connection reset by purr)
[21:58:43] *** Joins: nathanael (~nathanael@user/nathanael)
[22:01:17] *** Joins: tane (~tane@user/tane)
[22:05:16] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[22:09:14] *** Joins: stealth[] (~stealth]@2001:9e8:36f4:3800:e114:3e5a:4188:44b2)
[22:20:47] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:21:54] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[22:27:55] *** Quits: rudi_sy (~simon@user/rudi-s/x-7673890) (Quit: leaving)
[22:48:40] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[22:49:05] <senoraraton> Is there a place that can explain to me how to structure my project?  I'm getting errors because I'm trying to move things out of a single file
[22:53:48] <jimeh> senoraraton: are you extracting things into new files in the same directory?
[22:55:31] <j416> senoraraton: https://go.dev/doc/code
[22:56:00] <senoraraton> No, I'm building a full stack application.  So I'm trying to move my "main" function to a relatively benign file that just starts the server.  The actual nuts and bolts are in their own files
[22:58:00] <senoraraton> Will I need to init the seperate "sub-modules" in their own directory, am I understanding that correctly
[22:58:11] <j416> packages.
[22:59:51] <j416> function main should be in package main
[22:59:55] <j416> one directory is one package
[23:00:05] <j416> you cannot import package main
[23:00:21] <senoraraton> So my database implementation is in package db and its in db.go that needs its own directory?
[23:00:59] <j416> testing aside, you cannot have multiple packages in the same directory
[23:02:43] <crashrep> the way i do multiple file compiling is every file is package main and i just write it like every file were concatanated into one large one
[23:02:48] <crashrep> that might not be useful for your use case
[23:02:49] <jimeh> Yeah, each directory is a package, so every Go file in the same directory must have the same package declaration at the top of itâ¦ then you import packages into other packages where you need themâ¦ and the âmainâ package name is special as only a main package can start the app, and main packages canât be importedâ¦
[23:04:18] <crashrep> otherwise you have to put the other packages into subdirectories of the main working directory and import them into every file
[23:04:46] <jimeh> As far as code is concerned, thereâs no real difference between having a single go file in a directory, or lots of small files in the same directory, thereâs no concept of importing other files in the directory like in most languagesâ¦ you just import other packagesâ¦
[23:05:09] <crashrep> yes
[23:05:37] <senoraraton> I.e. if the variable is declared in file1.go and I want to use it in file2.go I can just reference it as long as they are both part of the same package(in the same working directory), correct?
[23:05:52] <jimeh> senoraraton: exactly :)
[23:06:03] <crashrep> yes, but just be careful about namespace. I.e. if you define the variable outside of all functions then it does work that way
[23:08:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[23:08:33] <jimeh> Basically think of all go files within a directory as basically all being part of the same file, scope-vise at leastâ¦ the only differing thing between files in the same package would be the imports, as each file should only have imports which are used within that file, but tools like goimports and gopls can automatically take care of adding/removing imports as you use themâ¦
[23:08:34] <senoraraton> https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1
[23:08:45] <j416> that's a good article.
[23:10:40] <jimeh> Thereâs lots of different ways to structure projectsâ¦ personally I try to break things down into self-contained conceptual problem domains, and create packages around those thingsâ¦
[23:11:19] <senoraraton> Ultimately I'm putting the cart before the horse, but its nice to know what is possible, and understand how the ecosystem interacts so that you CAN compartmentalize, should you choose to.
[23:11:51] <jimeh> As far as package naming/structure, the only other rule I think of is that any packages placed under a âinternalâ folder will prevent them from being imported outside of that projectâ¦
[23:12:23] <j416> senoraraton: sounds sane. Just package main can get you quite far.
[23:15:29] *** Joins: rogersm (~rogersm@90.166.180.250)
[23:33:53] *** Quits: stealth[] (~stealth]@2001:9e8:36f4:3800:e114:3e5a:4188:44b2) (Quit: Leaving)
[23:38:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:47:44] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:49:43] *** Quits: shtirlic (~shtirlic@pppoe.95-55-137-7.dynamic.avangarddsl.ru) (Remote host closed the connection)
[23:53:21] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Quit: boof)
[23:54:54] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:56:26] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
[23:59:41] <mikoto-chan> is there any performance to be gained from from using a rune instead of a one char string?
