[00:06:13] *** Joins: rgrinberg (~textual@187.223.183.192)
[00:11:04] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:1c21:9777:b34f:a2a4)
[00:13:32] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:1c21:9777:b34f:a2a4) (Client Quit)
[00:17:46] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[00:31:22] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[00:31:37] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:33:00] *** Joins: humberto1 (~humbertow@189.131.31.180)
[00:37:57] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[00:38:10] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:40:59] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:44:33] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:1c21:9777:b34f:a2a4)
[00:50:00] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Quit: WeeChat 3.3)
[00:50:00] *** Joins: humberto1 (~humbertow@189.131.31.180)
[00:55:06] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[01:00:50] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[01:02:37] *** Joins: sagax (~sagax_nb@user/sagax)
[01:05:57] *** Joins: humberto1 (~humbertow@189.131.31.180)
[01:05:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:07:59] *** Joins: rgrinberg (~textual@187.223.183.192)
[01:10:17] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[01:16:08] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[01:18:58] *** Joins: rgrinberg (~textual@187.223.218.43)
[01:25:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:27:25] *** Quits: kawen (~quassel@static.208.191.216.95.clients.your-server.de) (Ping timeout: 250 seconds)
[01:27:33] *** Joins: kawen (~quassel@static.208.191.216.95.clients.your-server.de)
[01:29:35] *** Quits: danieli (~danieli@user/danieli) (Ping timeout: 250 seconds)
[01:29:53] *** Joins: danieli (~danieli@user/danieli)
[01:34:50] *** Quits: rgrinberg (~textual@187.223.218.43) (Ping timeout: 256 seconds)
[01:39:01] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:53:32] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[01:55:05] *** Joins: humberto1 (~humbertow@189.131.31.180)
[01:55:17] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[02:00:28] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[02:00:55] *** Joins: rgrinberg (~textual@187.223.183.192)
[02:13:52] *** Joins: humberto1 (~humbertow@189.131.31.180)
[02:20:19] *** Quits: trafficjam (~trafficja@119.17.42.59) (Quit: Ping timeout (120 seconds))
[02:23:00] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[02:33:38] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[02:53:30] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[03:04:17] *** Joins: humberto1 (~humbertow@189.131.31.180)
[03:08:54] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[03:20:03] *** Joins: humberto1 (~humbertow@189.131.31.180)
[03:24:46] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[03:33:34] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[03:35:51] *** Joins: humberto1 (~humbertow@189.131.31.180)
[03:40:59] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[03:48:35] *** Joins: humberto1 (~humbertow@189.131.31.180)
[03:52:37] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[04:01:19] *** Quits: koollman (~samson_t@sp1.kooll.org) (Changing host)
[04:01:19] *** Joins: koollman (~samson_t@user/koollman)
[04:03:55] *** Joins: humberto1 (~humbertow@189.131.31.180)
[04:04:24] *** Joins: DNH_ (~DNH@2a02:8108:1100:16d8:c018:4e56:978b:50e2)
[04:05:09] *** Quits: DNH_ (~DNH@2a02:8108:1100:16d8:c018:4e56:978b:50e2) (Client Quit)
[04:06:53] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:1c21:9777:b34f:a2a4) (Ping timeout: 268 seconds)
[04:08:24] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[04:19:43] *** Joins: humberto1 (~humbertow@189.131.31.180)
[04:24:16] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[04:35:29] *** Joins: humberto1 (~humbertow@189.131.31.180)
[04:40:08] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[04:42:18] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[04:44:40] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[04:51:17] *** Joins: humberto1 (~humbertow@189.131.31.180)
[04:55:37] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[04:55:45] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Read error: Connection reset by peer)
[04:57:31] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[04:57:39] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Client Quit)
[05:06:49] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[05:07:17] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Changing host)
[05:07:17] *** Joins: hoppity (~hoppity@user/hoppity)
[05:09:17] *** Joins: humberto1 (~humbertow@189.131.31.180)
[05:14:06] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[05:26:52] *** Joins: humberto1 (~humbertow@189.131.31.180)
[05:31:59] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[05:43:26] *** Joins: humberto1 (~humbertow@189.131.31.180)
[05:47:57] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[05:52:16] *** antranigv is now known as antranigv[afk]
[05:55:16] *** Quits: hoppity (~hoppity@user/hoppity) ()
[05:56:45] *** antranigv[afk] is now known as antranigv
[05:57:14] *** antranigv is now known as antranigv[afk]
[05:57:21] *** Joins: trafficjam (~trafficja@119.17.42.59)
[05:59:22] *** Joins: humberto1 (~humbertow@189.131.31.180)
[06:04:00] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[06:13:58] *** antranigv[afk] is now known as antranigv
[06:14:28] *** antranigv is now known as antranigv[afk]
[06:15:15] *** antranigv[afk] is now known as antranigv
[06:15:32] *** antranigv is now known as antranigv[afk]
[06:15:57] *** Joins: humberto1 (~humbertow@189.131.31.180)
[06:16:26] *** antranigv[afk] is now known as antranigv
[06:16:53] *** antranigv is now known as antranigv[afk]
[06:17:07] *** antranigv[afk] is now known as antranigv
[06:20:42] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[06:31:30] *** Joins: rgrinberg (~textual@177.246.217.138)
[06:31:37] *** Joins: humberto1 (~humbertow@189.131.31.180)
[06:35:57] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[06:50:19] *** Joins: humberto1 (~humbertow@189.131.31.180)
[06:54:37] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[07:03:36] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[07:07:52] *** Joins: humberto1 (~humbertow@189.131.31.180)
[07:12:17] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[07:20:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[07:24:22] *** Joins: humberto1 (~humbertow@189.131.31.180)
[07:29:09] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[07:31:07] *** Joins: yauhsien_ (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[07:31:07] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:40:54] *** Joins: humberto1 (~humbertow@189.131.31.180)
[07:45:26] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[07:57:47] *** Joins: humberto1 (~humbertow@189.131.31.180)
[08:03:04] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[08:15:58] *** Joins: humberto1 (~humbertow@189.131.31.180)
[08:20:34] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[08:22:40] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[08:29:13] *** Quits: rgrinberg (~textual@177.246.217.138) (Read error: Connection reset by peer)
[08:30:43] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[08:32:05] *** Joins: humberto1 (~humbertow@189.131.31.180)
[08:37:00] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[08:49:05] *** Joins: humberto1 (~humbertow@189.131.31.180)
[08:49:54] *** Quits: trafficjam (~trafficja@119.17.42.59) (Ping timeout: 256 seconds)
[08:54:15] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[08:56:02] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[08:56:34] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[09:00:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[09:05:51] *** Joins: humberto1 (~humbertow@189.131.31.180)
[09:10:54] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[09:11:51] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:17:21] *** Joins: trafficjam (~trafficja@119.17.42.59)
[09:20:04] *** Quits: trafficjam (~trafficja@119.17.42.59) (Client Quit)
[09:23:24] *** Joins: humberto1 (~humbertow@189.131.31.180)
[09:27:37] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[09:33:46] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[09:34:01] *** Joins: rgrinberg (~textual@177.246.217.138)
[09:38:03] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[09:38:50] *** Joins: thojanssens (~thojansse@184.22.27.119)
[09:40:10] *** Joins: humberto1 (~humbertow@189.131.31.180)
[09:43:50] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[09:45:26] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 268 seconds)
[09:54:04] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[09:55:28] *** Quits: rgrinberg (~textual@177.246.217.138) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:56:35] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[09:57:17] *** Joins: humberto1 (~humbertow@189.131.31.180)
[10:01:37] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[10:01:51] *** Joins: rgrinberg (~textual@177.246.219.153)
[10:13:05] *** Joins: humberto1 (~humbertow@189.131.31.180)
[10:17:52] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[10:21:32] *** Quits: rgrinberg (~textual@177.246.219.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:23:04] *** Quits: yauhsien_ (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:23:36] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:30:45] *** Joins: humberto1 (~humbertow@189.131.31.180)
[10:33:42] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:34:13] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:34:16] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:35:26] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[10:44:19] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:44:53] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:45:44] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[10:47:05] *** Joins: humberto1 (~humbertow@189.131.31.180)
[10:51:52] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[10:54:56] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:55:31] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:03:13] *** Joins: humberto1 (~humbertow@189.131.31.180)
[11:05:33] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:06:02] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[11:06:08] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:07:44] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[11:16:10] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:16:46] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:17:18] *** Joins: humberto1 (~humbertow@189.131.31.180)
[11:20:28] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[11:21:54] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[11:26:48] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:27:23] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:35:04] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[11:37:25] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:38:00] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:43:17] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 256 seconds)
[11:48:02] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:48:37] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:58:38] *** Joins: humberto1 (~humbertow@189.131.31.180)
[11:58:39] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:59:14] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[12:03:16] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[12:16:07] *** Joins: ur5us__ (~ur5us@203.86.198.200)
[12:18:47] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:18:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[12:24:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[12:46:17] *** Joins: notzmv (~zmv@user/notzmv)
[12:49:00] *** Joins: humberto1 (~humbertow@189.131.31.180)
[12:54:14] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[13:03:27] *** Joins: mizi (~mizi@user/mizi)
[13:05:22] *** Joins: trafficjam (~qubes@119.17.42.59)
[13:42:28] *** Joins: rito_ (~rito_gh@45.112.243.206)
[13:43:40] <trafficjam> is there a reason that mix doesn't let you add packages using a command like `mix install <package_name>`?
[13:44:33] *** Quits: ur5us__ (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[13:48:06] *** Quits: humberto1 (~humbertow@189.131.31.180) (Ping timeout: 256 seconds)
[13:54:33] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:58:17] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[14:12:46] *** Joins: mahmutov (~mahmutov@5.176.49.198)
[14:20:39] *** Joins: Guest13 (~Guest13@2607:fea8:f440:7d5:92a2:1945:b84f:2795)
[14:21:05] *** Quits: Guest13 (~Guest13@2607:fea8:f440:7d5:92a2:1945:b84f:2795) (Client Quit)
[14:25:54] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[14:30:36] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[14:44:34] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:45:27] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[14:47:25] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:48:45] *** Joins: gitgooood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:51:49] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:52:04] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:53:01] *** Quits: gitgooood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:55:36] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Read error: Connection reset by peer)
[14:57:06] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[15:23:49] *** Quits: thojanssens (~thojansse@184.22.27.119) (Ping timeout: 240 seconds)
[15:41:35] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:42:10] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[15:48:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[16:08:44] *** Joins: thojanssens (~thojansse@182.232.149.253)
[16:10:21] <tristan> to the local project? my guess would be just not wanting to edit mix.exs. at least that is why we wouldkn't do it in rebar3, it would mean changing the users rebar.config and losing all their formatting *shrug*
[16:11:36] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:12:11] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[16:34:53] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[16:42:21] *** Joins: phaleth (~user@user/phaleth)
[16:47:56] <trafficjam> surely the logic for programmatically updating a dependency file isn't that complicated though?
[16:48:54] <trafficjam> having that functionality, similar to how yarn / pip / etc handle it, would be neat 
[16:51:01] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 240 seconds)
[16:51:18] <trafficjam> i'm guessing there's some design reason for this, just wonder what it is
[17:05:43] *** Quits: phaleth (~user@user/phaleth) (Ping timeout: 256 seconds)
[17:09:32] *** Joins: Luchotiz (~user@2a02:3102:8210:a0:8dd4:6e83:3eb6:e866)
[17:15:12] <v0idpwn> trafficjam: npm/yarn use json, json is way simpler to manipulate than code. pip uses an even simpler txt.
[17:15:27] *** Joins: Guest69 (~Guest69@c31-152.i13-08.melita.com)
[17:16:58] *** Quits: Guest69 (~Guest69@c31-152.i13-08.melita.com) (Client Quit)
[17:17:18] <v0idpwn> for example, your `deps` function could have a big if instead of the usual list inside of it. how would a mix command handle that?
[17:27:32] *** Joins: mahmutov (~mahmutov@5.176.49.198)
[17:38:35] <benwilson512> trafficjam: mix.exs is _arbitrary code_
[17:38:47] <benwilson512> not a deps file
[17:39:00] *** Joins: user_ (~user@dynamic-002-212-042-214.2.212.pool.telefonica.de)
[17:39:05] <benwilson512> mix.lock is a deps file (a data structure) and is managed automatically
[17:39:09] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[17:41:17] *** Quits: Luchotiz (~user@2a02:3102:8210:a0:8dd4:6e83:3eb6:e866) (Ping timeout: 240 seconds)
[17:42:00] <trafficjam> v0idpwn, benwilson512: but it's still structured though right? like there's only one way of defining which packages you want (deps), so shouldn't it be possible to programmatically update it?
[17:44:37] <trafficjam> maybe i'm massively oversimplifying it, but let's take a command like `mix add jason`, wouldn't you simply have to run the usual dependency/conflict checks, and if everything passes, you just append {:jason, <latest_version>} to the deps array?
[17:45:02] <trafficjam> there's probably quite a few steps i've missed, but you get the idea
[17:55:58] <Zarathu> trafficjam: you mean having a command like `mix add jason` actually modify mix.exs on the disk? or are you trying to eliminate the mix.exs deps altogether?
[17:57:54] <trafficjam> Zarathu: update mix.lock and if there are no issues modify.exs with the added/removed/upgraded packages
[17:58:13] <trafficjam> basically the same way yarn does it
[17:58:14] <Zarathu> how would this program know where the dependency list is in mix.exs?
[17:59:06] <Zarathu> it's standard to call that function deps() because that's the default, but what if i called it something else? or had two identical functions both returning the dep list, but only one of them gets called?
[17:59:37] <Zarathu> like benwilson512 mentioned, mix.exs is arbitrary code. it's not a data structure the way package.json is
[18:00:35] <trafficjam> ah so `mix deps.get` doesn't specifically look at the `deps` list in mix.exs?
[18:00:56] <trafficjam> could you run `mix foo.get` and have it work the same way?
[18:02:19] <Zarathu> `mix deps.get` calls the project() function, which returns a keyword list containing the `:deps` key. but that key could be formed any number of ways. notice deps() is a private function
[18:02:49] <Zarathu> imagine a defp deps() that contained: api_deps() ++ admin_deps() ++ other_deps()
[18:04:31] <trafficjam> yeah i see your point, do many people generate their deps() this way?
[18:04:39] *** Quits: rito_ (~rito_gh@45.112.243.206) (Ping timeout: 256 seconds)
[18:04:39] *** Joins: ianfleeton (~ianfleeto@217.155.195.246)
[18:04:52] <Zarathu> no, but they can, and that's the problem
[18:05:01] <Zarathu> with package.json, they can't, because it's just json 
[18:06:17] <trafficjam> couldn't it be an option then? so just have `defp deps do [] end` by default, and then if people want more flexibility, it's just a config option
[18:07:01] <Zarathu> i don't know what you mean
[18:08:47] <trafficjam> putting the config option aside for a minute, couldn't one way be to append any `mix add <package>` packages to the existing deps list?
[18:09:31] <trafficjam> so say you normally generate your deps list with `api_deps() ++ admin_deps() ++ other_deps()`, why couldn't you just append to that list?
[18:10:07] *** Joins: phaleth (~user@user/phaleth)
[18:10:34] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[18:12:11] <trafficjam> for those that want to split up their dependencies into api_deps(), admin_deps(), etc, they can define those functions, and if mix detects any functions inside the `deps` function, then it just appends any packages you install using `mix add <package>` to the end of that list
[18:12:42] <trafficjam> you could have several different ways of handling that situation, depends what people want
[18:14:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[18:15:32] <Zarathu> https://gist.github.com/whitepaperclip/06282896fe5f8df0696bfe0a527e7f66
[18:17:57] <Zarathu> probably more demonstrative: https://gist.github.com/whitepaperclip/307bf6b6d3f935d9984b6dea3fbcf1da
[18:18:11] <trafficjam> Zarathu: right, so in this case you could just concat another "managed" list where packages installed with the command are stored
[18:18:13] <Zarathu> can you write a program to update this mix.exs?
[18:19:01] <Zarathu> oh i see, you want this `mix add` to add its own dedicated deps function?
[18:19:11] <trafficjam> that's an option yeah
[18:20:35] <trafficjam> in the end it's just a list of dependencies, no matter how convoluted it might look
[18:21:33] <Zarathu> https://gist.github.com/whitepaperclip/5bb2750bbcdde23471cbfddf7de520f4
[18:21:41] <Zarathu> (don't try this at home, kids)
[18:21:59] <Zarathu> benwilson512: this is how i spend my sundays :P
[18:22:59] <trafficjam> lol that definitely makes it more difficult
[18:23:11] <trafficjam> but i guarantee you nobody has a mixe.exs file that looks like that
[18:25:25] <Zarathu> https://gist.github.com/whitepaperclip/2af25e167ff0261e56a8de3a823c75ca
[18:25:35] <Zarathu> see you in a trillion years
[18:26:46] <trafficjam> ok but you've borked it regardless of `mix add`
[18:29:26] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[18:32:28] <trafficjam> like why not have defp deps() only return a list, and all 'managed' (command-driven) packages are listed here, and then you can append onto that all your other oddly defined dependencies (admin_deps(), api_deps(), etc)
[18:34:09] <trafficjam> s/only return a list/only contain a simple list like how it does by default
[18:35:54] <trafficjam> that way the majority of users (who only use the simple way anyway) can more convenitently manage their package directly from the cli, and the more hardcore users can split them up however they like, and everybody wins
[18:37:04] <trafficjam> obviously only packages listed in deps do [ ... ] end could be managed via the cli, but again that's not really a problem
[18:42:37] *** Quits: ianfleeton (~ianfleeto@217.155.195.246) (Ping timeout: 256 seconds)
[18:53:14] <benwilson512> trafficjam: FWIW this is 100% handleable by a library
[18:53:25] <benwilson512> precisely because it's arbitrary code
[18:53:59] <benwilson512> if folks want to do a more static `mix_deps.json` file or something and then have Mix.exs read / parse it and have a mix command that adds to that json list, that is 100% possible
[18:55:16] <trafficjam> oh yeah a separate file would work too, that's probably even better than just putting it in mix.exs
[18:58:52] <trafficjam> only thing i don't like about that is that it introduces another file into an elixir project, but maybe the tradeoffs are work it
[19:00:13] <trafficjam> i guess only generating it after someone runs `mix add` would help keep things looking clean though
[19:01:26] <trafficjam> but yeah in the long run i think it would save quite a bit of time for elixir developers
[19:04:48] <trafficjam> or at the very least provide a better developer experience
[19:30:28] *** Joins: PeterMarreck[m] (~pmarreckm@2001:470:69fc:105::1:64f0)
[19:38:43] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4)
[19:43:44] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[19:44:12] *** herme5 is now known as el_kevino
[19:57:04] *** Quits: henry40408 (~henry4040@175.182.108.239) (Remote host closed the connection)
[19:57:30] *** Joins: henry40408 (~henry4040@175.182.108.239)
[20:09:09] *** Quits: henry40408 (~henry4040@175.182.108.239) (Remote host closed the connection)
[20:09:34] *** Joins: henry40408 (~henry4040@175.182.108.239)
[20:13:04] *** Quits: henry40408 (~henry4040@175.182.108.239) (Remote host closed the connection)
[20:13:29] *** Joins: henry40408 (~henry4040@175.182.108.239)
[20:18:52] *** Quits: henry40408 (~henry4040@175.182.108.239) (Quit: The Lounge - https://thelounge.chat)
[20:19:17] *** Joins: henry40408 (~henry4040@175.182.108.239)
[20:20:39] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 256 seconds)
[20:26:39] *** Joins: mahmutov (~mahmutov@37.155.21.112)
[20:31:20] *** Joins: EnigmaCurry[m] (~enigmacur@2001:470:69fc:105::1:4a7f)
[20:32:02] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[20:32:15] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[20:45:14] <benwilson512> trafficjam: I agree it's a developer experience, I'm sort of unconvinced it's that much of a time saver. adding dependencies is skewed heavily to the start of a project, and `mix add dep` isn't that much worse than `mix hex.info dep` and then copy / pasting the result. Even if it's twice as fast it saves ~5 seconds?
[21:03:05] <nickjj> there's also mix hex.outdated for existing dependencies
[21:04:26] <nickjj> since i manage a bunch of dockerized example apps (phoenix included), i wrote a few line script which will modify your mix.exs and replace your currently set version with the latest version from the outdated command
[21:13:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[21:18:58] *** Joins: Sgeo (~Sgeo@user/sgeo)
[21:19:17] *** Quits: thojanssens (~thojansse@182.232.149.253) (Ping timeout: 240 seconds)
[21:27:35] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) ()
[21:32:11] <tristan> trafficjam: the issue isn't the logic its just users probably not wanting their file chnanged in a way that effects how they formatted it
[21:50:46] <m1dnight> Can somebody help me how I can reproduce the following in the new phoenix heex templates: <span data-values=<%= raw(["1.23", "4.56"]) %></span> would result in <span data-values='["1.23","4.56"]'</span>
[21:51:00] <m1dnight> the new heex template uses double quotes instead of single quotes.
[21:52:41] <m1dnight> https://exbin.call-cc.be/AtticiseCompleteness
[21:52:46] <m1dnight> This is what I had, and what I want to craete.
[21:53:05] <m1dnight> I can't find my way in the docs to figure out how the attribute interpolation works.
[21:53:21] <m1dnight> (I did find this: https://hexdocs.pm/phoenix/views.html#rendering-templates)
[21:54:22] *** Joins: rito_ (~rito_gh@45.112.243.149)
[22:04:34] <m1dnight> Ah nvm, it seems to work fine with json parsing. Carry on!
[22:26:24] *** Joins: humberto1 (~humbertow@189.131.31.180)
[22:35:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:50:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[22:50:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:53:36] *** Quits: user_ (~user@dynamic-002-212-042-214.2.212.pool.telefonica.de) (Quit: Leaving)
[22:56:05] *** Joins: chgr (~ek@nat-91-137-25-18.net.encoline.de)
[23:21:00] *** Quits: mahmutov (~mahmutov@37.155.21.112) (Ping timeout: 256 seconds)
[23:57:36] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Quit: WeeChat 3.3)
