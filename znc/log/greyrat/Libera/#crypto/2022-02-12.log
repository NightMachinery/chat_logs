[00:00:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[00:19:47] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 250 seconds)
[00:21:53] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Quit: Ping timeout (120 seconds))
[00:22:16] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[00:26:31] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Client Quit)
[00:27:03] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[00:28:13] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 240 seconds)
[00:29:26] *** Joins: cwebber` (~user@068-191-078-066.res.spectrum.com)
[00:31:04] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 250 seconds)
[00:32:37] *** Joins: zro (~zro@user/zro)
[00:36:32] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Quit: The Lounge - https://thelounge.chat)
[00:37:05] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[00:37:14] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Client Quit)
[00:39:06] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[00:39:25] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[00:40:23] *** Parts: Guest59 (~Guest59@p5ddd0cd1.dip0.t-ipconnect.de) ()
[00:44:35] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0::11)
[00:48:34] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[00:56:57] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0::11) (Ping timeout: 240 seconds)
[00:57:13] *** Joins: Pythayr (~pither195@64.42.181.51)
[00:59:45] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[01:14:15] *** Joins: Sofia (~sofia@user/sofia)
[01:18:43] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[01:21:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[01:29:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[01:33:15] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[01:33:33] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[01:37:42] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:38:19] *** Quits: LordOfLive (uid538075@tinside.irccloud.com) (Changing host)
[01:38:19] *** Joins: LordOfLive (uid538075@user/joeroot)
[01:38:40] *** LordOfLive is now known as JOEROOT
[01:40:59] *** kish` is now known as kish`2
[01:41:32] *** kish`2 is now known as kish`
[01:53:12] *** Quits: halosghost (~halosghos@user/halosghost) (Quit: WeeChat 3.4)
[01:53:41] *** Joins: epony (epony@user/epony)
[01:55:39] *** Quits: cwebber` (~user@068-191-078-066.res.spectrum.com) (Ping timeout: 256 seconds)
[02:05:31] *** Joins: synaps3 (~void@user/synaps3)
[02:07:46] *** Joins: cwebber (~user@user/cwebber)
[02:09:32] *** Joins: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net)
[02:15:31] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:21:25] *** Quits: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net) (Remote host closed the connection)
[02:27:34] *** Joins: Malvolio (~Malvolio@user/malvolio)
[02:28:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[02:43:07] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[02:46:32] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[03:02:51] *** Joins: jeroenimo[m] (~jeroenimo@2001:470:69fc:105::1:b641)
[03:08:28] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[03:08:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[03:10:46] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[03:13:26] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Remote host closed the connection)
[03:14:07] *** Joins: halosghost (~halosghos@user/halosghost)
[03:17:38] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[03:32:38] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[03:41:10] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5830-81a9-b2a9-186d.res6.spectrum.com)
[03:44:37] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[03:48:12] *** Joins: zxrqmz88 (~private@2603-7000-1302-b6f3-3d8a-a376-fc0f-5cee.res6.spectrum.com)
[03:52:56] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[03:54:29] *** Joins: frost (~frost@user/frost)
[03:56:43] *** Quits: zxrqmz88 (~private@2603-7000-1302-b6f3-3d8a-a376-fc0f-5cee.res6.spectrum.com) (Quit: Quit)
[03:56:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:56:57] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 240 seconds)
[03:57:36] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[03:58:11] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:58:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:02:19] <nadio> anyone with truecrypt experience? cracking containers
[04:16:22] <TimMc> Huh. Suddenly a very popular question here.
[04:17:19] <TimMc> Oh, that most recent one was also you, OK. So just 2 people. :-)
[04:18:16] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:19:44] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[04:27:39] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[04:28:54] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:28:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:46:26] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[05:01:47] *** Parts: jeroenimo[m] (~jeroenimo@2001:470:69fc:105::1:b641) ()
[05:06:24] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[05:06:54] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[05:11:24] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 256 seconds)
[05:12:47] *** Joins: igemnace (~ian@user/igemnace)
[05:16:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:24:04] *** Joins: gabriel1_ (~gabriel1@37.173.205.10)
[05:24:31] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[05:25:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[05:26:27] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[05:32:07] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 256 seconds)
[05:35:02] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[05:52:13] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:03:51] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[06:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:30:21] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[06:33:50] *** Quits: gabriel1_ (~gabriel1@37.173.205.10) (Remote host closed the connection)
[06:37:57] *** Malvolio is now known as Guest3648
[06:37:57] *** Quits: Guest3648 (~Malvolio@user/malvolio) (Killed (strontium.libera.chat (Nickname regained by services)))
[06:44:08] *** Joins: Malvolio (~Malvolio@user/malvolio)
[07:17:21] *** Quits: brolin (~brolin@179.13.18.50) (Remote host closed the connection)
[07:21:09] *** Joins: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[07:26:30] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[07:29:32] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[07:38:26] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[07:40:51] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[07:53:43] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:09:46] *** ekaj is now known as a1
[08:19:32] *** Joins: void_ (~void@109-93-185-230.dynamic.isp.telekom.rs)
[08:19:32] *** Quits: synaps3 (~void@user/synaps3) (Read error: Connection reset by peer)
[08:23:31] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (Quit: ZNC 1.8.2 - https://znc.in)
[08:25:53] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[08:26:32] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz5igz2mq1z4zh.ipv6.telus.net) (Remote host closed the connection)
[08:28:15] *** Joins: frost (~frost@user/frost)
[08:33:08] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[08:43:49] *** Quits: Saloframes (~Saloframe@user/Saloframes) (Ping timeout: 240 seconds)
[08:47:30] *** Quits: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) (Quit: leaving)
[08:49:15] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Quit: Leaving)
[08:53:40] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:57:09] *** Joins: Saloframes (~Saloframe@user/Saloframes)
[09:03:34] <rk4> "truecrypt experience" hah
[09:10:46] *** Joins: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d)
[09:11:30] *** Parts: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) ()
[09:19:11] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:20:29] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Ping timeout: 256 seconds)
[09:29:29] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:49:17] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 240 seconds)
[09:49:31] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[09:50:01] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[09:51:19] *** Quits: rqsd (~rqsd@user/rqsd) (Quit: rebootan)
[09:54:59] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:57:23] *** Joins: rqsd (~rqsd@user/rqsd)
[10:07:05] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwmnyhm7crbo4a.ipv6.telus.net)
[10:09:00] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:28:38] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:39:10] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwmnyhm7crbo4a.ipv6.telus.net) (Remote host closed the connection)
[10:41:30] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[10:57:47] *** Quits: xx (~xx@user/xx) (Quit: xx)
[11:01:58] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Remote host closed the connection)
[11:02:17] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[11:30:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[11:33:28] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[11:43:10] *** Joins: Sofia (~sofia@user/sofia)
[12:06:18] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:17:32] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Ping timeout: 256 seconds)
[12:17:42] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[12:26:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:31:26] *** Joins: Sofia (~sofia@user/sofia)
[12:45:22] *** Joins: ardell (~ardell@user/ardell)
[12:46:18] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[12:52:27] *** Quits: void_ (~void@109-93-185-230.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[12:58:43] *** Joins: Sofia (~sofia@user/sofia)
[13:06:27] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[13:20:49] *** Joins: Sofia (~sofia@user/sofia)
[13:28:35] <pagios> hi, can ssl pinning be bypassed by an https interceptor ?
[13:30:15] <Peng> How?
[13:30:22] <Peng> What's an HTTPS interceptor?
[13:32:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[13:35:42] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[13:37:59] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[13:39:55] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[13:43:17] <pagios> Peng: somethign like brp suite
[13:43:20] <pagios>  hi all, reading about ssl pinning, so aibly the SSL public cert is pinned down to the application level, my question is say in the case of whatsapp the public cert on phone1 will be the same as the one on phone2 (which is the public cert ) of whatsapp server?
[13:43:20] <pagios> 12:10 pagios: or will it be unique per user ? so that if it is reveals it cant be used on another proxy interceptor?
[13:44:36] <lacernet[m]> pagios: probably. not necessarily. 
[13:45:31] <pagios> lacernet[m]: so it depends how it was implemented, a server can generate a global subordinate cert per user or use a global one right?
[13:45:59] <lacernet[m]> yes, but I'm not sure why people would do that
[13:46:23] <lacernet[m]> certificate pinning is a bit weird, it doesn't work well with us switching almost exclusively to using very short lived certificates now.
[13:46:34] <lacernet[m]> so instead, the certificate above it may be pinned
[13:48:56] *** Joins: Sofia (~sofia@user/sofia)
[13:54:04] <pagios> lacernet[m]: i assume most applications when initially installed, will request a cert from the remote app server, at this point, (only on initial request) there is a risk for a man in the middle attack where the interceptor geta s copy of the returned private key right used for encryption right?
[13:54:20] <pagios> i mean public key
[13:55:17] <pagios> client requests certt, cert trturns, cert stored at client and at proxy, proxy can now encrypt/decrypt using that key
[13:59:19] *** Quits: Vitto (~Vitto@2a01:e0a:981:cd30:1216:5465:cd5f:e5ba) (Quit: Leaving.)
[14:11:45] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:12:15] *** Joins: igemnace (~ian@user/igemnace)
[14:14:10] *** ChanServ sets mode: +o litharge
[14:14:11] *** litharge sets mode: -bo $a:caveman litharge
[14:21:05] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:32:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:34:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:38:22] *** Joins: somlis (~somlis@user/somlis)
[14:39:55] <yawkat> does anyone have a reference for the fact that hash functions are easy to reverse for low-entropy input
[14:40:58] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:43:29] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[14:45:37] <wasamasa> nadio: lol, I'll get the experience if people are willing to pay me adequately
[14:58:47] *** Joins: cheater (~Username@user/cheater)
[14:58:49] <cheater> hi
[14:59:47] <cheater> what is the size of md5 collision domains, given the input is known to be 4MB? i.e. how many such files could satisfy a certain md5 checksum? how do i calculate this?
[15:02:11] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:05:46] <yawkat> ld(4MB)-ld(128bit)
[15:06:30] <yawkat> so 18 bit => 2^18 files
[15:10:27] <sshine> ld?
[15:10:44] <sonOfRa> log_2
[15:11:07] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[15:15:25] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:17:58] <cheater> why is it called ld?
[15:18:13] <cheater> yawkat: i see, makes sense
[15:19:15] *** Joins: frigor (~osi@5.53.148.124)
[15:19:53] <cheater> yawkat: how would i calculate how fast that could be brute forced on a modern GPU? i guess i should first ask how many FLOPs you need per a megabyte hashed, and then look up the relevant GPU specs
[15:19:57] <sshine> cheater, the size of the domain is one thing, a simple ratio between the input size and the hash size. the work invovled in finding collisions is another. I suppose you're interested in both?
[15:20:08] <cheater> i'm not expecting that it *could* be brute forced. just wondering how much time it would take :)
[15:20:16] <cheater> sshine: yeah
[15:20:20] <sshine> md5s can be brute forced
[15:20:32] <cheater> right, but even 4MB ones?
[15:20:35] <sshine> cheater, did you read https://www.mscs.dal.ca/~selinger/md5collision/ ?
[15:20:36] <sshine> yeah
[15:20:38] <sshine> even 128 byte ones
[15:21:02] <cheater> i haven't read that, no.
[15:21:03] <sshine> even with very few bit flips
[15:21:09] <cheater> here's the problem i'm wondering about.
[15:21:29] <sshine> I don't know the computational effort that went into finding such a small example. but I'm sure that increasing the input size does not increase the problem size of finding a collision.
[15:22:03] <sshine> "the algorithm of Wang and Yu can be used to create files of arbitrary length that have identical MD5 hashes, and that differ only in 128 bytes somewhere in the middle of the file"
[15:22:20] <cheater> hmm
[15:22:29] <cheater> that's not exactly the kind of brute forcing i'm talking about
[15:22:40] <cheater> here's my problem. let's say you have a torrent with a 20 GB movie file in it, and it's stuck at 99.9%, missing 12 megabytes (3 parts of 4 MB each). shouldn't it be possible to 1) enumerate all possible contents of a specific piece, given the md5 and 2) splice it into the file, and check playback errors, and limit only to ones that give least decoder errors?
[15:23:11] <cheater> the structure of the video stream should probably inform the generating code on what values are valid, lowering the input domain
[15:23:42] <yawkat> video streams are already very compressed so you often cant tell whether an input is valid
[15:23:44] <sshine> torrents use md5 hashes?
[15:23:50] <cheater> apparently yes
[15:24:10] <yawkat> https://gist.github.com/epixoip/a83d38f412b4737e99bbef804a270c40 says 200GH/s, it should be very easy to find a preimage
[15:24:15] <cheater> ah, sorry. you were right to ask me. it's sha-128.
[15:24:22] <cheater> no... sha1
[15:24:46] <cheater> "Pieces: SHA1 Hash of EVERY piece of this torrent"
[15:24:55] <cheater> https://stackoverflow.com/questions/28348678/what-exactly-is-the-info-hash-in-a-torrent-file
[15:25:04] <cheater> pieces are 4MB in size.
[15:25:25] <cheater> yawkat: i'm not sure what you mean with "can't tell whether an input is valid"?
[15:25:47] <yawkat> video formats do not have a lot of redundant information with which you could do so
[15:26:07] <sshine> cheater, what problem are you trying to solve with md5 collisions for a torrent? if you just want to play the movie, picking a video player that skips on errors instead of stops (e.g. mplayer instead of vlc) will let you play the movie with those 12MB missing. if you want to give every future downloader a false feeling of having downloaded it without those 12MB (because it's good enough without), then it 
[15:26:13] <sshine> makes sense to create collision chunks and spam the network with stuff that only causes artifacts in rendering :)
[15:26:15] <cheater> yawkat: i have 20 GB of context from the original file. a 4MB hole is missing. if I understand x264 correctly, the frames there will be made up out of small squares that take up a finite amount of values.
[15:26:37] <cheater> sshine: i'd like to figure out whether it's at all possible to re-create the video file
[15:27:13] <sshine> cheater, does the video codec use md5 to check correctness?
[15:27:28] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[15:27:46] <yawkat> cheater: https://en.wikipedia.org/wiki/Entropy_coding
[15:27:49] <cheater> i don't know. as i said just now, torrents use sha1, not md5. i just checked again. someone else told me it was md5, that's why i was asking about md5
[15:27:58] <sshine> cheater, it'd be pretty cool to just fill *something* inthere that both fits the video format and hashes to what's in the torrent :P
[15:28:50] <cheater> yawkat: hmm, right. but given possible frames that follow the last frame that can be correctly decoded, only some of them would be /visually/ similar to that frame
[15:29:04] <cheater> assuming there's no harsh transitions
[15:29:47] <yawkat> even then, maybe not, since video encoding is often based on neighbouring frames
[15:29:59] <cheater> mhm
[15:30:14] <cheater> but isn't that just a factor of 2?
[15:30:17] <yawkat> and well, it's still millions of possible inputs to inspect manually
[15:30:39] <cheater> how do you know it's millions?
[15:30:52] <cheater> oh, you mean inspect for visual similarity?
[15:30:58] <yawkat> yes
[15:31:04] <cheater> no, i think that could be done algorithmically
[15:31:38] <yawkat> also, i just realized, my math up top was wrong.
[15:32:05] <yawkat> it's actually 4MB-128bits, nothing ld about it.
[15:32:23] <yawkat> so the search space is much much bigger.
[15:32:37] <cheater> yeah, i was just looking at that...
[15:39:26] <sshine> it seems that with Wang & Yu's method, you could generate whatever 4MB you like the most, and then patch it with at most 128 bytes of noise.
[15:41:19] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[15:41:56] <sshine> in that case, you could generate some 4MB with the least amount of constraints to validate the video format (e.g. if there's something related to key-frames or whatever, I don't know how video formats work), and apply the collision flips, and see if that works. and then iterate on improving the 4MB to minimize visual jitter.
[15:41:57] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[15:43:50] *** Joins: dez (uid92154@user/dez)
[15:45:13] <maroon> because of the structure of md5 and sha1/2 hashes, once you find 1 collision, you can create infinitely many collisions by simply appending the same random string to both
[15:49:59] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[15:52:46] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[15:53:18] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[15:53:33] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[15:57:46] <lacernet[m]> <cheater> "i don't know. as i said just now..." <- modern torrents use sha256.
[15:58:30] *** Joins: vusis (~vu@user/vusis)
[15:58:49] <lacernet[m]> <cheater> "yawkat: i have 20 GB of context..." <- generally video formats can just handle missing chunks. 
[15:59:09] <lacernet[m]> something like h265 will decode garbage for the missing data but whatever
[16:05:16] <cheater> lacernet[m]: thanks
[16:05:27] <cheater> lacernet[m]: yes, they can handle missing chunks. the idea is to restore them.
[16:06:00] <cheater> sshine: the idea isn't to patch some garbage into the file. the idea is to restore the original data.
[16:06:02] <lacernet[m]> you can't, you don't have the data.
[16:06:22] <cheater> lacernet[m]: well, i was wondering if given the amount of contextual information you're given, maybe it's possible after all.
[16:06:30] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[16:06:45] <cheater> you have hashes, you know what the frames should look like roughly, you have motion data, you have color data, spectrograms, etc
[16:07:05] <lacernet[m]> I doubt it. compressed video is not predictable in its format, otherwise it would be pretty shitty compression.
[16:07:18] <cheater> no, but video in general *is* predictable in what it'll output
[16:07:28] <cheater> at least in the short term
[16:07:47] <lacernet[m]> well, no, if it was predictable it would be bad video compression.
[16:08:17] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:08:38] <lacernet[m]> the whole purpose of something like h265/h264 is to exploit consistencies in video and produce a dense representation of it, ideally it'll be close to random looking.
[16:08:42] <cheater> you're thinking of the bit stream. i'm talking about the visual output.
[16:09:24] <lacernet[m]> you're talking about matching hashes, which is the binary representation.
[16:09:45] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[16:09:51] <cheater> yes, and also i'm talking about visual output.
[16:10:46] <lacernet[m]> what you're describing is just impossible, regardless of the amount of effort.
[16:11:05] <cheater> ok, but your only argument for it being impossible is that it's impossible
[16:11:28] <lacernet[m]> if you could "guess" the missing content, then the compression algorithm would already have deflated it.
[16:11:39] <lacernet[m]> I gave a good argument and you're just insisting that it's wrong somehow.
[16:11:44] <cheater> no.
[16:12:03] <cheater> video compression is real time. it's not meant to spend several weeks guessing what a second of video would look like
[16:12:18] <lacernet[m]> video compression is not real time?
[16:12:19] <cheater> so to give you an example, take a 17600 MB video, that is 3700 seconds long. that's 4.7 MB/s. given a missing chunk will be, say, 4MB, that means there's a sub one second piece of video missing. we know what the video looks like before that chunk and after it. we know the motion vectors. that should help prioritize possible guessed values that fit the x264 encoding, and calculate sha-128 on those.
[16:12:20] <maroon> "so you're telling me there's a chance" (tm)
[16:12:42] <lacernet[m]> h265/h264 especially is based on look ahead encoding. it's very much literally not real time in its design!
[16:13:17] <cheater> cool, i'll let twitch know you object to their technology
[16:14:21] <cheater> i'm sure they'll shut down their website as soon as you voice your opinions strongly enough
[16:14:33] <lacernet[m]> you don't have a good enough grasp on what you are talking about.
[16:14:45] <cheater> says the guy who never heard of video streaming
[16:15:21] <lacernet[m]> twitch and other services have latency explicitly because a lot of the efficiency of h264 relies on being able to look ahead a number of frames, often several seconds.
[16:15:41] <cheater> and yet, one second of video does not take more than one second of encoding
[16:16:15] <lacernet[m]> I didn't say it did.
[16:16:24] <cheater> mmmhmmmm
[16:16:33] <cheater> quit while you're ahead
[16:16:43] <lacernet[m]> encoding frames ahead is just buffering.
[16:17:00] <cheater> very interesting
[16:17:08] <lacernet[m]> why ask questions online, get an answer from someone who knows how video encoding works, and then be a belligerent shithead?
[16:17:15] <lacernet[m]> it makes no sense.
[16:17:36] <cheater> ah yes, you couldn't sage me, so now you'll start insulting me 🙄
[16:18:42] <maroon> there's also a chance of creating an sha512 collision
[16:19:02] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Read error: Connection reset by peer)
[16:19:39] <cheater> i'm not even trying to create collisions here
[16:20:11] <cheater> i'm trying to create a piece of video that follows statistical parameters of the known video, and which also fits a specific known hash
[16:20:48] <maroon> a known what kind of hash?
[16:21:00] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:21:19] <cheater> according to lacernet[m], sha256
[16:21:19] *** Joins: platta (~platta@pool-96-248-118-42.cmdnnj.fios.verizon.net)
[16:21:31] <maroon> there are no known sha256 collisions of any kind
[16:21:45] <wasamasa> lol: https://www.reuters.com/business/finance/nft-marketplace-shuts-citing-rampant-fakes-plagiarism-problem-2022-02-11/
[16:21:48] <cheater> which is ok, because <cheater> i'm not even trying to create collisions here
[16:21:51] <wasamasa> NFTs are fungible???
[16:21:54] <wasamasa> no fucking way
[16:22:00] <cheater> wasamasa: lol
[16:23:03] <wasamasa> or perhaps there is a deeper underlying issue
[16:23:21] <wasamasa> the NFTs aren't fungible, but they do not actually prove someone owns whatever they're linked to
[16:24:19] *** Joins: Sofia (~sofia@user/sofia)
[16:26:01] <maroon> it means someone conveyed whateer rights they do/dont own for what they sold you
[16:28:01] <cheater> us dollars are fungible too if you try hard enough
[16:28:29] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:28:41] <cheater> looks like crypto bros missed a lesson from that
[16:28:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:29:00] *** Joins: kish` (~aqua@user/aqua)
[16:29:10] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:34:42] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:37:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 250 seconds)
[16:39:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:44:28] *** zer0bitz_ is now known as zer0bitz
[16:44:35] *** Joins: kish` (~aqua@user/aqua)
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[17:20:59] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[17:25:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 260 seconds)
[17:28:09] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[17:28:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:29:03] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[17:32:12] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[17:32:18] *** Joins: cwebber (~user@user/cwebber)
[17:32:37] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:33:41] *** Parts: vusis (~vu@user/vusis) ()
[17:44:24] *** Joins: blank (~nullBlank@user/nullblank)
[17:45:38] *** Quits: blank (~nullBlank@user/nullblank) (Quit: WeeChat 2.8)
[17:52:15] *** Joins: voidsync (~void@user/voidsync)
[17:54:45] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[17:55:19] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[17:57:04] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[17:57:54] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:00:15] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[18:10:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[18:13:39] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[18:17:21] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:19:22] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[18:25:53] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[18:40:18] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[18:55:04] <sshine> 404 Not Found Token
[18:59:24] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[19:09:17] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Remote host closed the connection)
[19:12:55] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[19:19:54] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[19:23:28] *** Quits: voidsync (~void@user/voidsync) ()
[19:26:57] *** Joins: xx (~xx@user/xx)
[19:28:41] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[19:28:51] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[19:30:19] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:31:38] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[19:32:33] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[19:33:18] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[19:33:23] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 256 seconds)
[19:33:24] *** Guyver2_ is now known as Guyver2
[19:34:05] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[19:35:21] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[19:36:26] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:37:29] *** Quits: aleck1 (~aleck@user/aleck) (Read error: Connection reset by peer)
[19:38:05] *** Joins: ule (~ule@user/ule)
[19:39:57] *** Parts: ule (~ule@user/ule) (WeeChat 3.1)
[19:41:07] *** Quits: frigor (~osi@5.53.148.124) (Remote host closed the connection)
[19:44:37] *** Joins: Sofia (~sofia@user/sofia)
[19:55:47] *** Joins: tradar (~tradar@user/tradar)
[19:55:55] *** Joins: aleck (~aleck@user/aleck)
[20:03:01] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[20:13:09] *** Quits: aleck (~aleck@user/aleck) (Read error: Connection reset by peer)
[20:22:54] *** Quits: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752) (Remote host closed the connection)
[20:23:43] *** Parts: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) ()
[20:37:22] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[20:58:23] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[20:58:32] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[21:11:51] *** Joins: aleck (~aleck@user/aleck)
[21:16:38] *** Joins: cheater (~Username@user/cheater)
[21:18:51] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxe402tlvzq17q.ipv6.telus.net)
[21:26:05] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[21:27:51] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 245 seconds)
[21:32:13] *** Joins: semisimple (~semisimpl@user/semisimple)
[21:34:50] *** Joins: aleck (~aleck@user/aleck)
[21:40:25] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[21:40:37] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 240 seconds)
[21:43:29] *** Joins: aleck (~aleck@user/aleck)
[21:51:48] *** Joins: aleck1 (~aleck@user/aleck)
[21:52:14] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[21:53:17] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 240 seconds)
[22:00:45] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:16:15] <iz> it's like before blockchain existed and places would sell you a plot of land on mars or whatever and give you the deed in a nice frame and everything
[22:16:27] <iz> or on the moon
[22:19:15] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:3558:a80e:47b0:dfab)
[22:19:24] *** Parts: henistein (~henistein@2001:8a0:c18a:f601:3558:a80e:47b0:dfab) ()
[22:22:22] *** Joins: kish` (~aqua@user/aqua)
[22:22:36] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 272 seconds)
[22:22:39] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:23:02] *** Joins: kish` (~aqua@user/aqua)
[22:26:06] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Ping timeout: 276 seconds)
[22:26:27] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[22:27:00] <TimMc> yawkat: I don't have a reference for you on the "hashes of low entropy" thing, but if you're trying to convince someone then it might be best to just work with an example (e.g. hashes of phone numbers.)
[22:32:49] <TimMc> e.g. https://tech.vijayp.ca/of-taxis-and-rainbows-f6bc289679a1
[22:33:30] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Ping timeout: 260 seconds)
[22:33:49] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[22:35:47] *** Joins: aleck (~aleck@user/aleck)
[22:37:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[22:37:22] <yawkat> thats a good case study, thanks.
[22:39:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[22:41:14] *** Joins: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752)
[22:54:40] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[22:58:26] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Ping timeout: 256 seconds)
[23:00:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:05:14] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[23:06:45] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:08:24] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:11:00] *** Joins: koolazer (~koo@user/koolazer)
[23:11:56] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[23:12:54] <TimMc> Here's some company, in 2019, proclaiming that their product can hash license plates and therefore the data will "no longer include sensitive information". https://medium.com/@datafromsky/need-to-extract-number-plates-for-your-traffic-study-94720af3763a
[23:15:13] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:18:21] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[23:37:23] *** Quits: Saloframes (~Saloframe@user/Saloframes) (Quit: Leaving)
[23:37:42] *** Joins: Saloframes (~Saloframe@user/Saloframes)
[23:42:12] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:43:24] *** Quits: maroon (tinycrypt@user/maroon) (Quit: Problems cannot be solved at the same level of awareness that created them. --Albert Einstein)
[23:50:40] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[23:51:01] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[23:51:49] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:f4eb:6b94:5a05:6081)
[23:53:21] <int-e> Hmm, do any countries mandate license plates on car roofs?
[23:53:36] <int-e> (it's a terrible idea, surely it's happening somewhere)
[23:54:36] <edk> hm, hashing number plates
[23:54:56] <int-e> we need to standardize a 0 bit hash function
[23:54:59] <edk> surely whoever implemented that functionality must have realised the problem with it
[23:55:06] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[23:56:41] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:57:05] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[23:58:10] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:59:21] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
