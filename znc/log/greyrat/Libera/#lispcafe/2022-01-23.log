[00:00:56] <gilberth> Hmm. The term active and inactive is taken with CLIM and refers to gadgets :-(
[00:01:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[00:01:49] <drakonis> https://cdr.common-lisp.dev/ the redesign is live...
[00:01:50] -ixelp- CDR - Common Lisp Document Repository
[00:01:58] <drakonis> when is it getting documents submitted tho
[00:02:06] <gilberth> And there is a certain impededance mismatch between streams and gadgets in CLIM. The whole damn thing needs an overhaul.
[00:03:37] <White_Flame> I never really got into CLIM, I didn't particularly think the model was great
[00:04:33] <gilberth> I don't like that model either.
[00:05:20] <gilberth> And it has a major design flaw: It confuses typographical bounds with output bounds.
[00:05:25] *** chiselfu1e is now known as chiselfuse
[00:08:14] <gilberth> But I like the windowing substrate.
[00:08:28] <White_Flame> meaning what?
[00:09:53] <gilberth> Sheet (windows), graphics, events. Everything that a traditional toolkit provides. I would throw output records (display lists) into the mix.
[00:11:01] <White_Flame> I never really understood the advantage of output records
[00:11:02] <gilberth> Begins with. Every window as a region, which could be any 2D region and a transformation to map to the parent window.
[00:11:25] <gilberth> White_Flame: You like writing repaint handlers all the time?
[00:11:33] <White_Flame> no, I prefer declarative UI
[00:12:16] <gilberth> Meaning what?
[00:12:52] <White_Flame> meaning you have a datastructure containing the display description, and as you change the data, the display does whatever it needs to in order to conform
[00:14:01] <gilberth> I don't like that. Just write a routine which renders the data add a few cache hints and let the system do the work.
[00:14:14] <White_Flame> I don't want to render it
[00:14:28] <White_Flame> I don't know what the underlying advantages/disadvantages/display-details are depending on where it's output
[00:14:54] <White_Flame> and so much of rendering has to do with layout, theming, etc that is best deferred to the system instead of done manually
[00:15:05] <gilberth> When manually altering a display description it's hard to get that consistent. It's too much state management for me, as in: "Oh user did that, I need to change this." The system should figure that our for you.
[00:15:24] <White_Flame> but "just write a routine that renders the data" is exactly that
[00:15:42] <gilberth> No, it's not.
[00:17:21] <gilberth> White_Flame: See the example at the end of <http://bauhh.dyndns.org:8000/clim-spec/21-1.html> Do you spot explicit change management?
[00:17:22] -ixelp- CLIM 2 Specification — 21.1 Overview of Incremental Redisplay
[00:18:13] <White_Flame> so that completely re-does the entire output, regardless of what detail changed
[00:18:20] <ln43> but i don't know if is possible to use update-initramfs by hand having a package manager ....
[00:18:30] <ln43> hoping that that works
[00:18:36] <White_Flame> that's orthogonal, equal to regenerating an entire branch of the declaration
[00:18:43] <gilberth> White_Flame: It doesn't. The system knows what the previous output was.
[00:19:37] <White_Flame> I mean from a perspective of user code
[00:20:01] <gilberth> That's the trick. Only the (nth 2 list) is actually redrawn. The system also is clever enough to blitter should things just move, if it wishes.
[00:20:26] <White_Flame> I don't see where ELEMENTS is defined
[00:20:42] <White_Flame> oh wait, there
[00:20:48] <White_Flame> yeah, I don't know the flow of this
[00:21:04] <gilberth> White_Flame: The perspective of the user code is: Write commands which presents the inputs, write commands which manipulate your data structure and you're done.
[00:21:34] <White_Flame> this does seem very similar to a scene graph, though, if those 6 objects exist and are individually updated like that
[00:21:38] <White_Flame> similar to what I described
[00:21:49] <White_Flame> the notions that I've seen of output records have been very imperative looking
[00:22:05] <White_Flame> I don't know what the updating-output pass does, though
[00:22:05] <gilberth> All the formatting is really rusty though, I'd like to have a typesetter there. And richer tables e.g.
[00:24:57] <White_Flame> why is there an outer updating-output as well as an inner one?
[00:25:45] <gilberth> Anyhow, what I don't like is the focus and bad marketing insisting that presentations and the command loop and the "verb object" syntax would be a key part. It's not. And it's alien and it drives people away.
[00:26:18] <White_Flame> yeah, that's not my issue.  Mine is from seeing code examples as to how to run it
[00:26:24] <gilberth> White_Flame: Because you would need to get hold of "record" to trigger the update.
[00:27:23] <gilberth> In a real application you define your frame and provide a display function with that updating-output implicitly. You also won't call this REDISPLAY-RECORD by yourself, the system will.
[00:27:33] <White_Flame> so let me try to walk through this
[00:27:39] <gilberth> ok
[00:28:09] <White_Flame> on the first updating-output, it both registers that body as a lambda somewhere, as well as executes it to generate 5 lines via FORMAT
[00:28:20] <White_Flame> then the list is changed
[00:28:47] <gilberth> Yep. But note that there is a nested updating-output too.
[00:28:48] <White_Flame> then the outer updating-output body is called again, re-formats all the contents, and the backend diffs the FORMAT output with what has been stord?
[00:29:03] <gilberth> In a nutshell, yes.
[00:29:21] <White_Flame> ok, so yeah this is the same as "virtual dom"
[00:29:31] <White_Flame> where you regenerate the entire tree of elements
[00:29:58] <gilberth> Not the entire. You provide little cache hints, if things get too large.
[00:30:25] <gilberth> This is the :unique-id and :cache-value, which is optional.
[00:30:27] <White_Flame> you generated the entire contents of all 5 elements and their continuance in the stream
[00:30:37] <White_Flame> ah
[00:30:42] <White_Flame> yeah, there's a lot of that sort of thing in javascript
[00:30:57] <gilberth> When that isn't changing the FORMAT isn't invoked. But this is just a performance hint you don't have to use.
[00:30:59] <White_Flame> making sure you manage ID values and identities
[00:31:05] <White_Flame> right
[00:31:32] <gilberth> Yeah, but I find it easier than figuring out the set of changed nodes by myself.
[00:31:49] <White_Flame> sure, it's a solution that's been rederived and is very popular
[00:32:56] <White_Flame> the difference here is that there are FORMAT calls instead of a HTML template
[00:33:29] <White_Flame> and a stream instead of a tree
[00:33:40] <gilberth> Yes, CLIM uses streams. With a few formatting macros.
[00:33:42] <White_Flame> (although I guess the stream does trees very similarly, too)
[00:34:29] <gilberth> It does. What CLIM lacks though is a clear separation of formatting objects and display lists. That is conflated, and I want to fix that.
[00:34:36] <White_Flame> right
[00:34:42] <White_Flame> layout seemed very weak
[00:34:53] <gilberth> Indeed.
[00:36:24] <gilberth> It's dated.
[00:36:42] <White_Flame> it's a complex problem
[00:37:15] <White_Flame> getting it looking reasonable involves a lot of nuance in terms of when to linewrap vs grow horizontally, how to resize if things aren't all specified in percentages, etc
[00:37:16] <gilberth> It is, I have not yet come up with a solution.
[00:37:40] <White_Flame> having consistent margins around things, aligning text, etc
[00:37:54] <gilberth> Typesetting itself is not too hard. The hard part is to put a proper API together.
[00:37:56] <White_Flame> and the interplay between all of that is not a unidirectional streaming process
[00:39:18] <gilberth> Now, CSS2 isn't too difficult and it would already be a major leap from what CLIM has now.
[00:39:42] <White_Flame> anything web-based is generally an improvement on the old, and is only useful if you can eliminate legacy
[00:39:58] <White_Flame> *any new web-ased thing is...
[00:40:16] <White_Flame> but it's so mired in its older bad attempts
[00:40:56] <gilberth> What I don't like is to have two separate hierarchies: One inside a pane and one for panes itself. Things like "A toolbar above a pane above some status line" should be part of this typesetting-like engine. The trouble I have here is that the user could manipulate that. The user could e.g. adjust a pane size, when there are multiple, scroll, etc.
[00:41:56] <White_Flame> the trouble is that you want a user to be able to do that, or that a user could mess it up?
[00:41:57] <gilberth> And as handy as CSS is for documents as painful it is for arrangement of UI elements.
[00:42:50] <White_Flame> well, CSS arrangment of UI elements is getting muddled with "adaptive" stuff for mobile
[00:43:10] <White_Flame> but on desktop, its use for layout and theming of structural elements is handy
[00:43:15] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:43:34] <White_Flame> except is grammar is nonsensical
[00:43:39] <White_Flame> *its grammar
[00:43:51] <gilberth> White_Flame: My trouble is that I want to have that in this incremental redisplay fashion. Like saying: "I have two lists, one left perhaps 30% wide, one right perhaps 70% and here is the content." The user may be able to adjust the lists to be 50% and 50% in size. There are now two conflicting space requests.
[00:44:22] <White_Flame> right, you want a slider starting at 30/70
[00:44:30] *** Joins: minion (~minion@common-lisp.net)
[00:44:32] <White_Flame> and that's left to user libraries in web stuff
[00:45:16] <White_Flame> web tech misses so much (like stuff like that) that people end up reimplementing _everything_ and never actually use what's built-in well
[00:45:30] <White_Flame> and then you end up with the framework mess that it has
[00:46:00] <gilberth> Yes, and none of them works well.
[00:47:00] <gilberth> Anyhow since CSS existed, I saw the parallels with CLIM. I got side-tracked :-/
[00:48:16] <gilberth> My agenda however is to first have a rock solid backend for just the basic window system part; windows, graphics, events, and display lists. With means to borrow native UI gadgets. Then we see.
[00:49:06] <gilberth> As CLIM2 is free now, I may be cheap and borrow the olde presentation/command based stuff from there, but that won't be my focus.
[00:58:50] <shka> https://www.independent.co.uk/life-style/gadgets-and-tech/nft-ownership-metaverse-crypto-bitcoin-b1986530.html
[00:58:50] -ixelp- NFT ownership is concentrated to just 0.1% of crypto owners | The Independent
[00:58:51] <shka> yup
[01:02:43] <ln43> now grub is a smart bootloader... compared to others
[01:02:48] <ln43> grub2
[01:03:25] <ln43> the problem is that under /boot/ i have all the files for the new kernel but rebooting the old one is used
[01:13:13] <White_Flame> gilberth: I think that the command stuff should be replaced with forms
[01:13:37] <White_Flame> as it is in some way field-filling
[01:14:33] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[01:18:19] <gilberth> White_Flame: There are forms. Called ACCEPTING-VALUES.
[01:18:49] <gilberth> But they don't blend well with native gadgets in practice, though they could in theory.
[01:21:03] <gilberth> There is no examples. But it works like this: Suppose the updataing-output example, I showed you. Now just don't do FORMAT but (setf (nth i elements) (accept 'integer)). ACCEPT is like READ, but with a type attached, which is accepted.
[01:23:54] <epony> boot managers that need their own "boot" partition are a problem ;-) you'll find out why in the long run, have to have a spare medium to fix them
[01:23:59] <gilberth> And with doing so, the dialogs can change while you edit values. E.g. when you have some options for say networking: ( ) none ( ) TCP/IP ( ) Unix domain, the input for e.g. a TCP/IP port should only appear if (x) TCP/IP is said. Nice in theory, ugly in appearance.
[01:25:05] <gilberth> When you say (x) Unix domain a pathname is asked for. You could also easily have a list of things. Like multiple network addresses in my example.
[01:29:49] <White_Flame> afaik, symbolics always showed bottom-of-screen "tooltips" for things like that
[01:30:06] <White_Flame> and of course offering which further fields were possible given the current selection of things like that
[01:30:33] <White_Flame> I think it's a legitimate communications issue to contain those varied forms of input, if they're going to be anything beyond a single-line typed thing that will be parsed later
[01:31:00] <White_Flame> and to me, it's conceptually a form being filled out
[01:31:20] <White_Flame> and "ugly in appearance" is very subjective
[01:40:36] <gilberth> It's the same style of dialogs the CADR already had.
[01:41:28] <White_Flame> I'm not very familiar with the CADR
[01:41:39] <White_Flame> but if it was ugly/clunky, then yeah, don't do that :)
[01:42:06] <gilberth> The dialogs work like you saw with Symbolics. The "tooltips" that is the so called wholine is also there.
[01:42:43] <White_Flame> I'm thinking of REPL non-sexpr line commands, that didnt' bring up any sort of form dialog
[01:43:16] <White_Flame> but I'm just a novice in that
[01:43:56] <gilberth> The wholine is nice. (1) it doesn't pop up at random (2) it allows for more room and (3) it kind of just pulls your documentation strings, if you're lazy. (4) it changes, if modifier keys are depressed and M-Mouse-L would do sth different from Mouse-L.
[01:48:20] <gilberth> White_Flame: They do. A command could prompt for its arguments in such a form form. I have no Open Genera handy to show you.
[01:50:18] <White_Flame> I don't think anybody has genera-in-the-browser yet either :-P
[01:50:23] <White_Flame> but that'd be interesting
[01:50:28] <White_Flame> for simple little tests like that
[01:50:54] <White_Flame> the whole local-display metaphor needs to die
[01:51:08] <White_Flame> any GUI program can and should be multi-user, remote display capable
[01:57:15] <gilberth> Yep and it shouldn't matter which "console" I use to access it.
[01:59:34] <gilberth> I mean at summer time, when I may want to sit in the garden, I want to be able to take the my whole session with me.
[02:01:08] <drakonis> https://www.youtube.com/watch?v=YQ_xWvX1n9g jfc i knew nfts and cryptocoins was bad news
[02:01:08] -ixelp- The Problem With NFTs - YouTube
[02:01:19] <drakonis> but the rabbit hole only goes deeper
[02:01:51] <White_Flame> any td;dw for a 2+ hour video? :-P
[02:02:35] <hayley> How tf intellectual property real
[02:03:03] <White_Flame> s/td/tl/
[02:04:22] <moon-child> gilberth: what is a 'native UI gadget' in unix-land?
[02:04:33] <moon-child> gtk?  qt?  if either of those, which version?  Or chrome?
[02:05:37] <gilberth> moon-child: Xaw?
[02:08:08] <semz> ncurses :-)
[02:08:38] <gilberth> On a typewriter?
[02:09:22] <gilberth> But yes, a "ncurses" backend is on my agenda.
[02:11:23] <drakonis> White_Flame: its kinda hard to reduce it into a tl;dw summary but its very well researched and goes back to the very beginning to explain everything that's wrong
[02:12:05] <drakonis> going from the 2008 crash to bitcoin and ethereum's inception into how the whole thing is built in a way to push people to get into crypto and nfts
[02:12:17] <drakonis> how insane the whole thing is
[02:14:24] <drakonis> its really fucked up how crypto and nfts are actually like
[02:14:38] <drakonis> i'm already aware how horrible it is but it is even worse
[02:14:52] <White_Flame> I'm almost a half hour in, and it's still in the "already aware" part
[02:15:23] <White_Flame> of course, he didn't say anything about it's non-anonymous nature, but I guess that's later in the chapter list
[02:15:48] <drakonis> he does talk about it
[02:15:50] <drakonis> in detail.
[02:21:00] <moon-child> ilbheh!
[02:25:51] <moon-child> gah
[02:25:53] <moon-child> gilberth: heh!
[02:28:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[02:45:51] <White_Flame> "The one market that cryptocurrency has successfully disrupted is the market of fraud."
[02:46:05] <White_Flame> heh, there's the tl;dr the rest is just summary,but I guess it's a good link for those who know nothing about it
[02:46:13] <moon-child> haha
[02:51:36] <hayley> Hm, we can safely do our object compression bullshit without synchronization in thread local heaps.
[02:51:53] * hayley wonders where that Dash coin went, with the anonymous transactions.
[02:52:40] <moon-child> wasn't monero the anon cryptocurrency?
[02:54:33] <hayley> Ah yeah, monero rather. Dash had some ASIC-ruining hash algorithm.
[02:59:23] *** Joins: molson__ (~molson@2001:48f8:704a:123d::75f:1027)
[03:02:06] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1024-static.midco.net) (Ping timeout: 250 seconds)
[03:24:54] <shka> if NFT would really be able to do what it promises to do, we would have some dystopian shit on our hand
[03:25:12] <White_Flame> it doesn't really promise anything, just the scammers do
[03:25:38] <White_Flame> the tech is fine (blockchain, nft, etc) and might even have some legit usecases
[03:25:59] <White_Flame> except none of the current broad usecases are legit :-P
[03:33:59] <shka> i was referring to the Web 3.0 concept
[03:34:03] <shka> stuff of nightmares
[03:37:16] <White_Flame> yep
[03:37:30] <White_Flame> how old is that term now?  was it coined along with facebook's stupid meta rebrand?
[03:38:19] <White_Flame> uuuggghhh "The term was coined in 2014 by Ethereum co-founder (and DOT creator) Gavin Wood, and the idea gained interest in 2021 from cryptocurrency enthusiasts, large technology companies, and venture capital firms."
[03:38:23] <shka> i don't know
[03:38:34] <White_Flame> burn it all
[03:38:56] <shka> i am not a blockchain expert, but from what i understand this is not even feasible 
[03:39:18] <White_Flame> blockchains are way too slow to do anything at scale
[03:39:30] <shka> which is a good thing honestly
[03:39:32] <shka> also https://www.youtube.com/watch?v=ayW5dZLhm48
[03:39:33] -ixelp- All Will Surely Burn - YouTube
[03:39:42] <White_Flame> and "decentralization" is just a dogwhistle for making money centrally off the backend
[03:39:47] <hayley> Which? NFT? Well, you only assert you own a  <thing, vendor> tuple.
[03:40:16] <shka> decentralization is not even how capital works
[03:40:17] <White_Flame> s/you own//
[03:40:34] <shka> capital inherently has it's own gravity 
[03:40:44] <White_Flame> but as I've said a few times now, no business will actually implement any of this
[03:40:47] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:40:58] <White_Flame> although they'll use all these words in their marketing
[03:41:23] <White_Flame> nobody will allow non-vetted user-generated content in their online shared-space systems
[03:41:50] <White_Flame> nobody will allow cost-free buying/selling of goods in their space
[03:41:57] <White_Flame> nobody will allow 3rd party assets in their space
[03:42:01] <shka> dunno, slapping a $ sign on everything in existence sounds like a idea that makes many people horny
[03:42:51] <White_Flame> the businesses want that $, they don't let the users do so without them
[03:43:58] <shka> you can grab $ by slapping $ on everything
[03:44:08] <shka> more opportunity to profit 
[03:45:29] <shka> also, the ultimate cookie
[03:46:26] <White_Flame> eh, I will block everything related to all that crap
[03:46:47] <White_Flame> if ti becomes truly essential for living, then it's time to leave this 1st world
[03:47:54] <White_Flame> also, every single instance of popular decentralized stuff has quickly immerged on illegal stuff & fraud; the entire system will taint itself quickly
[03:48:49] <White_Flame> *converged
[03:50:21] *** Joins: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a)
[03:50:23] <dra> Hello!
[04:15:12] <hayley> Still, interesting that we can do a lot of bullshit if we know that an object is not going to be shared.
[04:16:34] <hayley> Blackburn claims that we only really need spacial locality for new objects, which are also more likely to be thread local. So this isn't completely pointless.
[04:22:23] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 268 seconds)
[04:30:13] *** Quits: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a) (Remote host closed the connection)
[04:41:15] <hayley> White_Flame: tbh, I can't bother myself with anti-cryptocurrency stuff, cause half the time they are just making stupid statements about distribution/replication. You could apply e.g. "blockchains aren't decentralised cause they maintain the same state" about IPFS, Freenet, Netfarm, etc.
[04:44:01] <hayley> (well, except that a node for the other systems does not have to store the entire world, but they still conspire to see the same world in the end.)
[04:46:07] <epony> the most trendy coin is going to be called AntiCrypto (AC)
[04:46:20] <epony> "just currentcy"
[04:46:57] <epony> it's already a grid system, fairly distributed and has low overhead
[04:48:05] <epony> it's been in use for about 120 years already and globalised in international trade
[04:49:23] <hayley> .oO(Well, how many days until parsers running on stable SBCL magically go faster now?)
[04:55:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:55:37] <White_Flame> hayley: that's not the complaint though
[04:56:20] <White_Flame> and even cryptocurrency _itself_ isn't itself a sleazy thing
[04:56:34] <White_Flame> it's solely the people dominating the narrative & structures around the things, and their usage of it
[04:56:48] <hayley> Hm, I still have a Facebook account. Thought I deleted it years ago, but I still get "Your Facebook code is 123123" texts, presumably someone trying to crack it.
[04:57:50] <epony> the relations of power translate to whatever virtual / modelled communication and computation
[04:58:46] <White_Flame> but the biggest part that I've intersected with is the number of corporate "pivots" into these purely because of buzzwords, which then grants a ton of power to all the sleaze & scams going on
[04:58:47] <hayley> Now it should be deleted. /me wonders if someone trying to reset the password will stop the deletion process.
[04:59:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:59:32] <hayley> White_Flame: Sure, that's just my general complaint about such complaints.
[05:00:39] <epony> speculative markets and exchanges own and and control speculative virtual instruments for the purpose of extracting legacy instruments control and power from unsuspecting naive low level participants
[05:00:43] <White_Flame> the posted video is extremely factual and comprehensive and is the first I've seen of the kind
[05:01:29] <hayley> While reading the sample counts in DISASSEMBLE output, I sorta get the impression that time is only taken "forcing" values when they are actually used. Of course, that isn't how hardware pipelining works really, but stalling for results has a similar effect.
[05:01:43] <epony> it's just an escape from regulatory control for a couple of half-decades
[05:02:03] <epony> for the purpose of more speculation and extreme profiteering
[05:02:56] <White_Flame> but my spiel is that these "web3" concepts will never be normalized in business because the lack of corporate control is incompatible with modern business pursuits
[05:02:57] <hayley> .oO(We already have perf at home. The perf at home:)
[05:03:45] <epony> if you start without, you will end without, one way or another, if you start with a lot, you will have to do a lot more to stay with the same lot (so a low level participation is instant loss)
[05:03:46] <White_Flame> (and that's orthogonal to the problems the cryopcurrency/nft sphere has on its own)
[05:04:15] <epony> it's always "you lose" because you're an individual
[05:05:49] <epony> one more reason to whack people off the streets is nasty decay of social and communal (privatisation to extreme violence)
[05:08:40] * hayley is now relatively convinced that coming up with clever SIMD code actually really needs runtime feedback, in order to not extraneously unroll (or even SIMD, for sufficiently short scans).
[05:09:24] <White_Flame> sounds very likley
[05:13:09] <hayley> I can't remember if anyone else uses feedback though. IIRC Rust regex does detect high false positive rates from prefix scanning, but that is more to avoid worst-case O(n^2) scanning. (Instead I require having two prefix characters to use the O(n^2) scanning procedure.)
[05:13:51] <aeth> Users want DRM-free content. NFTs are content-free DRM.
[05:13:56] <hayley> But I have 20GB/s of primary memory bandwidth, 80GB/s of L2 cache (which my haystack fits in), yet I only scan at 13 to 17GB/s.
[05:15:28] <White_Flame> aeth: heh, true
[05:15:48] <aeth> I think White_Flame is right about cryptocurrency. The whole space is about inserting as many middlemen as possible which (1) no big corporation wants (they want total control over any possible 'metaverse') and (2) no user wants (each middleman needs to get paid a fee so... yeah... that's a lot of fees)
[05:16:10] <White_Flame> there was some number that 99% of NFTs are owned by 0.01% of the crypto community
[05:16:16] <aeth> Like, even if I just wanted to trade it because I trade things, trading cryptocurrency is expensive at the exact same time as all other trading is getting really competitive and cheap.
[05:16:24] <aeth> Because it's an ecosystem of middlemen.
[05:16:51] <aeth> (And the cheapest ways to trade cryptocurrency tend to not let Americans trade because they don't want the FBI after them when they inevitably steal all of their users' money... because the low fees are just to attract people.)
[05:17:00] <White_Flame> all about passive income.  have others play the game that you graduated out of and reap the rewards of your "grind"
[05:17:08] <semz> what does "crypto community" even mean in this context
[05:17:32] <White_Flame> I have no idea.  But very few people own the vast number of NFTs
[05:17:51] <White_Flame> according to the video posted before, the same guy bought most of those initial high-priced meme originals
[05:18:08] <hayley> Normal cryptocurrency is also similarly unevenly distributed.
[05:18:17] <semz> As is normal currency lol
[05:18:56] <White_Flame> but this isn't about the currency, it's about the number of transactions.  The same people are on the buy side of pretty much all of them
[05:19:13] <White_Flame> there' isn't much movement in that market
[05:19:19] <hayley> There's a theory that someone fudged the pre-launch Ethereum fundraiser, since the the amount funded over time looks more like a x^3 curve (for -n < x < n for your favourite value of n) than usual.
[05:20:29] <hayley> https://medium.com/@hasufly/ethereum-presale-dynamics-revisited-c1b70ac38448
[05:20:30] -ixelp- Ethereum Presale Dynamics Revisited | by Hasu | Medium
[05:21:11] <aeth> hayley: to be fair, all fundraising online involves some degree of light "fraud"... especially Kickstarter, where you better have a friend or family member help you get over the funding line or you get nothing
[05:21:31] <aeth> Everything on the internet has been fake for over a decade now
[05:21:39] <aeth> Too much financial incentive to fake as much as possible
[05:22:10] <White_Flame> yep
[05:22:18] <aeth> Sort of like how New York Times bestellers, too. So it is an old scheme.
[05:22:19] <hayley> aeth: I thought you had to violate some law of physics in order to make a successful Kickstarter program.
[05:22:35] <aeth> (People buy their own books and then dump them on thrift stores just to get their sales up.)
[05:22:53] <White_Flame> I enjoyed the pre-monetized internet more
[05:23:26] <hayley> Hm, should I realistically be able to get 80GB/s out of my L2? I guess the memory bandwidth program can, but it does nothing to the data read.
[05:23:44] <White_Flame> depends on IPC
[05:23:48] <aeth> White_Flame: no monetization, no requirement to provide your real identity; it was great
[05:23:58] <White_Flame> (or I guess technically ILP)
[05:24:53] <White_Flame> however, any taxing regex is going to do more per byte than the per-byte bandwidth can sustain
[05:25:21] <White_Flame> I'd expect "find the first letter A" to keep up
[05:25:24] * hayley counts an IPC of 1. Erm.
[05:26:04] <hayley> My best-but-not-really-best-case is ab|ac, which is all vectorised.
[05:26:20] <hayley> (The RE engine sees a[bc] due to rewrite rules, FWIW)
[05:27:56] <White_Flame> at 4.5GHz, 80GB/sec means each processor cycle needs to handle 19 bytes
[05:28:06] <White_Flame> that might be a tall ask
[05:28:35] <hayley> 3.2GHz here. And Zen 1 has a 128-bit ALU. Erm.
[05:29:53] <hayley> 25 bytes/cycle. But there are 4 execution pipes, and I should double check which ones I actually get to use in my code.
[05:43:06] <hayley> "6,656,072,768 processor cycles (208002274/65 instructions per cycle)" My attempt at making TIME print IPC was...not useful.
[05:43:33] <moon-child> ;o
[05:43:35] <moon-child> patent that shit
[05:44:18] <hayley> "(3201872.80 instructions per cycle)" Also no.
[05:44:20] <hayley> "(3202.79 instructions per cycle)" Still not. I forgot I need to divide by clock frequency - fuck!
[05:44:44] <hayley> Still, I'll just hard code 3.2e9 for my machine.
[05:44:55] <moon-child> no power management, dynamic scaling?
[05:45:08] <hayley> "6,494,108,064 processor cycles (1.00 instructions per cycle)"
[05:45:37] <hayley> Sure. I can only hope that I get all 3.2GHz on my desktop.
[05:54:30] <hayley> VPCMPEQ requires 2 cycles and only runs on 3 of 4 pipes. And VPAND requires 2 cycles and runs on all 4.
[06:01:03] <moon-child> VPTEST?
[06:01:38] <moon-child> (but, probably you want a range a lot of the time?)
[06:04:01] <hayley> It might beat (unless (zerop (move-mask results)) ...) to detect a match or not. But apparently every latency is doubled, since Zen 1 runs 256-bit instructions through a 128-bit unit twice.
[06:04:20] <White_Flame> where are you getting the instruction count to divide?
[06:05:15] <hayley> SBCL (sb-vm::%read-cycle-counter)
[06:05:19] <hayley> (which is a VOP, with no function btw)
[06:05:34] <White_Flame> that doesn't look like %instruction-counter to me
[06:05:59] <hayley> God dammit.
[06:06:06] <White_Flame> at least you're getting 1 cycle per cycle :-P
[06:06:08] * hayley can't read
[06:06:38] <hayley> But unrolling the test doesn't make anything faster. /me considers interleaving instructions...somehow.
[06:06:52] <sm2n> well, hayley, White_Flame, aeth: cryptocurrency consensus mechanisms essentially convert real money into crypto "money"
[06:06:54] <sm2n> proof of work is obvious because silicon and electricity cost money
[06:07:02] <sm2n> and proof of stake is even more obvious because that's just how it works
[06:07:18] <sm2n> so it stands to reason that existing inequalities will just get transferred over
[06:07:24] <sm2n> you shouldn't expect the distribution to change
[06:09:17] * hayley reads volume 3B of Intel® 64 and IA-32 Architectures Software Developer’s Manual
[06:10:07] <moon-child> I got really weird and inconsistent (though marginal) results from interleaving loops differently
[06:11:11] <semz> I think this is pretty fundamental too. Anything tied to real identities isn't exactly decentralized. With everything else, even distribution makes no sense because identities are cheap (and if they aren't cheap, you've basically reinvented proof of work...)
[06:13:01] <hayley> "Undefined instruction: RDPMC in (INST RDPMC)" So I get to teach SBCL a new instruction too.
[06:20:50] * hayley only gets memory faults while trying to RDPMC. Damn.
[06:21:21] <moon-child> privileged?
[06:21:46] <moon-child> 'When the PCE flag is set, the RDPMC instruction can be executed at any privilege level; when the flag is clear, the instruction can only be executed at privilege level 0'  need to ask kernel to let you ask for it maybe?
[06:22:40] <hayley> Could also be that this is the second 1900-page part of the third section of the Intel manual, and idk what event numbers AMD uses.
[06:23:34] * moon-child nods
[06:23:43] <White_Flame> amd is checking your privilege
[06:24:13] <hayley> Oh well. Guess I will just use the shit approach of SAVE-LISP-AND-DIE and then running perf.
[06:26:38] <hayley> perf reports 3.64 IPC, which is a fair few instructions.
[06:27:29] <hayley> And that is roughly the same regardless of unrolling. sigh
[06:33:28] <White_Flame> the cpu is pretty good at stuffing itself, no matter how you feed it
[06:35:27] <hayley> Either I've hit a wall, or I'm doing something dumb then.
[06:36:15] *** Joins: cyberbanjo (mksybr@tilde.team)
[06:38:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:40:53] <hayley> If I scan ab rather than a[bc] I get 27.6 GB/s. So the additional compare and VPAND seems to hurt.
[06:56:00] * hayley wonders how expensive move-mask is. Maybe I should just do the AND in GPRs.
[06:57:47] <hayley> Still bad, and I only get one pipe. Awful.
[07:11:47] *** Quits: vats (~vats@103.216.143.18) (Ping timeout: 256 seconds)
[07:34:30] *** Quits: luis (~luis@lisp/luis) (Quit: The Lounge - https://thelounge.chat)
[07:35:52] <hayley> On FBIP with tracing GC: https://sci-hub.st/https://dl.acm.org/doi/10.1145/800055.802032 suggests you can put the one-bit reference count in an object reference. And IIRC Blackburn et al found that doing the LOGANDC2 before using a pointer wasn't so bad.
[07:35:53] -ixelp- Sci-Hub | Some practical methods for rapid combinator reduction. Proceedings of the 1984 ACM Symposium on LISP and Funct [...]
[07:38:32] <hayley> https://users.cecs.anu.edu.au/~steveb/pubs/papers/wb-ismm-2004.pdf claims...8% on AMD, 5% on Pentium 4 and 1% on a PowerPC. Dammit.
[07:39:31] *** Joins: luis (~luis@lisp/luis)
[07:44:10] * hayley now wonders how FBIP interacts with debugging information. Unless you have tail recursion modulo CONS, then someone is going to expect to be able to e.g. see a call to MAP with the old and new lists. Oops.
[07:50:01] *** Quits: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3) (Remote host closed the connection)
[07:50:15] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[07:52:40] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:53:07] <dave0> maw
[08:06:16] <dave0> maw hayley 
[08:09:56] <hayley> maw
[08:10:23] <dave0> how are you?
[08:10:37] <dave0> i'm eating candy :-)
[08:11:31] <hayley> Okay. Back from the supermarket.
[08:11:50] <dave0> ah cool
[08:13:23] <dave0> i went to the shops today, there was hardly any traffic
[08:19:04] *** Joins: semz_ (~semz@user/semz)
[08:21:28] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[08:22:31] <hayley> The Perceus paper notably doesn't mention debugging at all. Must be that there are no bugs in Koka programs. Not.
[08:32:38] <dave0> i had a delicious bug a while ago that i didn't notice for 3 months ... it was a simple checksum (just sum the bytes) over filenames, but i accidentally used signed bytes... but my fienames are all 7 bit ascii... it wasn't till i had a filename with a foreign character in it that the checksum failed :-p
[08:33:11] <hayley> Ouch.
[08:33:40] <contrapunctus> White_Flame: Collabora Online apparently "integrates with NextCloud [...]"
[08:34:49] <hayley> But consider the classic MAP function s.t. (defun map (f xs) (if (null xs) '() (cons (funcall f (car xs)) (map f (cdr xs))))). This function is linear w.r.t XS (but not F). However, once we introduce a debugger, no variables are linear.
[08:37:29] <hayley> Either the program will poll for interrupts, or the debugger will rudely interrupt somewhere random. In either case, the debugger will happily grab references, and thus XS is also consumed by the debugger. Thus, we cannot overwrite any structure in XS and not get caught.
[08:37:56] * contrapunctus reads cl-launch docs and thinks, "Fare-ware has got to be the most egregious example of documentation violating the Diataxis Framework..."
[08:39:28] <hayley> So the only way to meaningfully get anything out of FBIP is to allow your debugger to not report dead variables (not a fan of it, admittedly), or to not use a debugger at all. Surely the types will let you get away with the latter.
[08:44:12] *** semz_ is now known as semz
[08:54:59] *** Joins: [w] (~w]@2601:8c1:80:70d0::4b06)
[09:00:01] <sm2n> hayley: Pure FP people generally say tracing debugging is enough
[09:00:54] <hayley> My apologies to them then.
[09:01:25] <hayley> gilberth: Never mind the lispm, here's a combinator machine <https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-40.pdf>
[09:02:18] <sm2n> At any rate, can't you make your stepping debugger work via tracing and replaying/reexecuting?
[09:02:20] <sm2n> kinda like rr
[09:02:48] <sm2n> with referential transparency it feels like it shouldn't be too difficult
[09:02:53] <hayley> If I had pure FP, I guess.
[09:03:11] <sm2n> How do you do FBIP without purity?
[09:03:46] <sm2n> I thought aliasing becomes an issue if you don't have purity
[09:04:03] <sm2n> but admittedly it's been a while since I read the paper
[09:04:18] <hayley> But I do not (and nor does the Koka language, which AFAICT is where the hotness for in-place optimisations is)
[09:04:24] <hayley> Marking where you have pure/impure code. I guess either they are more conservative, or don't, do in-place for impure code.
[09:06:00] <sm2n> isn't koka pure?
[09:07:03] <sm2n> They use algebraic effects/effect handlers for handling IO and stuff iirc, but that technically does not kill purity the same way monadic programming does not kill purity
[09:08:17] <sm2n> koka's "mutable variables" are basically implicitly in a state monad iirc, and are not first class
[09:10:46] <sm2n> oh, looking at it, it has ML-style refcells
[09:10:54] <sm2n> yeah I guess it isn't pure
[09:13:42] <sm2n> ...they don't appear to have any examples of FBIP in the presence of impurity
[09:20:21] *** Joins: vats (~vats@103.216.143.32)
[09:21:40] <hayley> OTOH, I don't think the worst case of FBIP is appealing. e.g. one degenerate case might use vectors/arrays, and when this algorithm is linear, it might run well. But if we introduce non-linearity, we copy far too much.
[09:22:08] <hayley> So e.g. the non-linear case should be a tree/trie/HAMT/your favourite persistent vector instead.
[10:05:35] *** Joins: ln43 (~ln43@user/ln43)
[10:06:09] <ln43> Hi all
[10:09:05] <ck_> hello
[10:09:47] * hayley ports a busy beaver machine to Scheme macros.
[10:13:34] <ln43> hello ck_, hayley
[10:51:43] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:57:42] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 250 seconds)
[11:59:30] * hayley contemplates the same procedure as 6 months ago. Asshole father threatens to hit her, she disappears for a week.
[12:05:15] <dave0> hayley: where do you go to disappear?
[12:06:00] <hayley> dave0: Grandparents, typically [n=1]
[12:06:59] <dave0> ah okay cool
[12:21:43] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[12:28:21] <hayley> (beaver '() 0 '() 'a) ⇒ (1 1 1 1 1 1)
[12:28:30] <hayley> (expand '(beaver '() 0 '() 'a)) ⇒ '(1 1 1 1 1 1)
[12:28:42] <hayley> Much like last time, it reeked of hypocrisy. I was trying to fix his AV system, and the switch box/amplifier has a configuration program, which will output a video signal, irregardless of having working input. "What are you doing in setup?" "I'm trying to get something to appear on screen, and the setup program does that." "I don't see it." "It would if it was working!" "DON'T RAISE YOUR VOICE AT ME!!! *etc*"
[12:32:56] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[12:34:59] <hayley> Better: (expand '(beaver '() 0 '() 'a)) ⇒ '(1 0 1 1 1 1 1 1 1 1 1 1 1 1)
[12:36:13] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[12:43:57] <hayley> https://gist.github.com/no-defun-allowed/648e3e6956f55d9c221548b1314fc8db
[12:43:58] -ixelp- A busy beaver in Scheme macros · GitHub
[12:48:17] *** Joins: shka (~herr@109.231.0.226)
[13:03:49] *** Joins: rogersm (~rogersm@90.166.180.250)
[13:22:00] <gilberth> Can't we recreate NeWS but using Lisp?
[13:22:46] <hayley> Yeah, but why?
[13:23:51] <gilberth> Because I would prefer for graphics being rendered at the display server and not at the client. Some network transparency is nice to have.
[13:24:29] <gilberth> But NeWS in Lisp exists, it is called AJAX.
[13:24:44] <hayley> Can't we have CLIM over TCP?
[13:25:31] <Duuqnd> CLIM over TCP would make me very happy
[13:25:44] <gilberth> Kind of. You can be clever and keep a representation of the output records at the server. I have some experimental HTML backend doing that. That is: Scrolling then is local at the console.
[13:25:45] * hayley wrote some JavaScript, and mostly thinks "This would be shorter in Haskell"
[13:27:59] <gilberth> But using AJAX here is nice on one hand, because everyone has a web browser, but an awful kludge on the other. I want NeWS.
[13:28:25] <gilberth> And instead of PS we could use Lisp.
[13:29:21] <gilberth> When bored, I'll give it shot.
[13:29:59] <gilberth> Duuqnd: About TCP: X11 exists.
[13:30:19] <Duuqnd> Doesn't count
[13:30:27] <gilberth> No?
[13:30:47] <Duuqnd> X is not CLIM
[13:31:14] <Duuqnd> Sure, CLIM typically uses X, but I want something that is just CLIM over TCP
[13:31:43] <gilberth> Anyhow, I would be happy with Cairo in the server to have a starting point.
[13:32:20] <Duuqnd> Of course, unless someone makes a non-X backend for CLIM it's just going to end up in X anyway, but still, I can dream
[13:32:31] <Duuqnd> s/CLIM/McCLIM
[13:32:39] <hayley> I think my code is longer, because one cannot map or filter over iterators in JavaScript. So I can't write in a more point-free style.
[13:32:40] <hayley> s/iterators/generators
[13:32:55] <gilberth> Non-X? Cocoa is my primary port.
[13:34:10] <gilberth> Next is SVG, which I could use to have a web browser as a display server and only then X11R5.
[13:34:32] <Duuqnd> Either you missed my correction of CLIM to McCLIM, or exciting things have been happening that I'm not aware of
[13:34:52] <gilberth> I am slow at times.
[13:35:54] <gilberth> Anyhow this whole idea of modern X11 or even jokes like Wayland of just passing bitmaps around drives me crazy.
[13:38:52] <gilberth> And minor things like the display server should know the keyboard mapping as with Core X11. With XKB the client has the keyboard mapping. Use some remote application and you all of sudden may face a different key mapping. Serious? That's a joke.
[13:39:34] * gilberth stops ranting and continues hacking.
[13:48:41] <contrapunctus> hayley: https://haste-lang.org/
[13:48:42] -ixelp- A GHC-based Haskell to JavaScript compiler | The Haste Compiler
[13:50:00] <hayley> contrapunctus: Well yes, but no.
[14:02:25] *** Quits: vats (~vats@103.216.143.32) (Ping timeout: 256 seconds)
[14:11:46] <contrapunctus> 🤔️
[14:21:32] <shka> stressful work environment https://www.youtube.com/watch?v=TJecVFaLGq0
[14:21:34] -ixelp- GIGN Le tir de confiance The confidence shoot Manurhin MR73 - YouTube
[14:32:24] *** Quits: molson__ (~molson@2001:48f8:704a:123d::75f:1027) (Ping timeout: 250 seconds)
[15:02:52] *** Quits: [w] (~w]@2601:8c1:80:70d0::4b06) (Quit: zzz)
[15:22:01] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:26:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[15:31:33] *** Joins: vats (~vats@103.216.143.14)
[16:20:54] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:41:57] *** Quits: vats (~vats@103.216.143.14) (Ping timeout: 240 seconds)
[16:51:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[16:51:56] <sm2n> https://github.com/slburson/fset/commit/4f92cb7daaed87b89ed9a6046989e742bc557904
[16:51:56] -ixelp- Initial commit of Java implementation, generified. (Haven't gotten to · slburson/fset@4f92cb7 · GitHub
[16:52:00] <sm2n> https://github.com/slburson/fset/commit/5ff95688eb5a38723dcf2f7eb9fc6b004f41beef
[16:52:01] -ixelp- Removing Java implementation from main FSet repo. · slburson/fset@5ff9568 · GitHub
[16:52:05] <sm2n> that was fast
[16:56:07] *** Joins: notzmv (~zmv@user/notzmv)
[17:27:22] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[17:46:04] *** Quits: shka (~herr@109.231.0.226) (Read error: Connection reset by peer)
[17:49:58] *** Joins: shka (~herr@109.231.0.226)
[18:40:07] <shka> damn, nextcloud has a lot of applications
[18:48:28] *** Joins: domovod (~domovod@176.196.122.197)
[18:52:44] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[18:53:21] *** Joins: vats (~vats@103.216.143.56)
[18:57:10] *** Joins: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d)
[18:57:14] <dra> Hello!
[18:58:01] <shka> i would definitely use nextcloud over MS office
[18:58:06] <shka> much nicer interface
[19:10:27] <rotateq> hey dra :)
[19:14:08] *** Joins: kevingal (~quassel@176.61.88.240)
[19:14:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:22:05] *** Parts: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (ERC (IRC client for Emacs 27.2))
[19:24:52] *** Joins: epony (epony@user/epony)
[19:31:21] *** Quits: kevingal (~quassel@176.61.88.240) (Ping timeout: 268 seconds)
[19:35:45] <sm2n> hayley: <https://news.ycombinator.com/item?id=30045329> article has some interesting terminology like "operational anarchy"
[19:35:46] -ixelp- For those who haven't encountered Paul before, he is one of the primary creators... | Hacker News
[19:46:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:52:11] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:05:25] <shka> Thus Bitcoin is really the leading example of exactly how badly we're failing to implement collective governance for notionally collective decentralized systems. Probably because that community ignored the lessons of history, it ended up collapsing into a Soviet-esque form of authoritarian dictatorship, complete with revolutionary myth making.
[20:05:35] <shka> Paul is a smart person 
[20:06:00] <shka> decentralize the people power, concentrate authority, rule forever
[20:06:39] <sm2n> yup
[20:07:02] <shka> tried and true strategy 
[21:02:01] <sm2n> I wonder apropos the recent asdf drama, how CL fits into this framework
[21:03:03] <sm2n> the language itself being the collectivist resource in this case I guess
[21:03:41] <sm2n> I suppose the culture of trying to be standards conforming when possible is like "operational anarchy"
[21:03:59] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.4)
[21:09:10] * gilberth wonders how much of his work is lost with McCLIM.
[21:10:19] <gilberth> I mean, is the mechanism to queue a dirty region completely lost? Are negative exposures for scrolling still in place? idk
[21:10:43] <scymtym> gilberth: are you concerned about your code being removed over time?
[21:11:32] <gilberth> That would be no news.
[21:12:31] <scymtym> good code being removed without proper understanding is one of the things that stresses me out about upstream McCLIM as well
[21:14:01] <gilberth> Well, I quit a very long time ago. I was bad at selling my ideas about how things should work in my opinion. And I am very bad at fighting for my ideas.
[21:18:19] <scymtym> i see, similar for me
[21:21:40] <gilberth> Why is it that none of my OSes I installed with Parallels or Virtual Box could actually halt the VM?
[21:22:26] <gilberth> And the virtual "power off" always is hidden well. Well.
[21:24:23] <gilberth> scymtym: I got release-phobia by that. OTOH I could feel a bit like Steve Jobs with his NeXT. ;-)
[21:24:56] * gilberth is in bad mood and takes a break.
[21:25:09] <scymtym> see you
[21:25:20] <gilberth> Take care, then.
[21:26:21] <gilberth> Nah, oh dear, I got you wrong. I take a break from hacking not from #lispcafe.
[21:27:58] <scymtym> ha, yeah, i was going to say. because you said you were going to take a break … anyway, enjoy your hacking brake
[21:29:34] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[21:29:58] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[21:40:26] <selwyn> hm
[21:41:04] <gilberth> hm?
[21:41:11] <shka> that usb hdd that stores data
[21:41:16] <shka> not terribly quick
[21:42:05] <selwyn> imo maoism's commitment to decentralisation is genuine, whatever else can be said about it
[21:42:08] <gilberth> USB is not quick. I have USB HDDs for backup and it takes ages to copy data.
[21:42:10] <selwyn> soviet system, less so
[21:43:46] <cyberbanjo> isnt ccp v2 of soviet
[21:43:49] <gilberth> But Time Machine over the internet to my machine at my haunted house is slower.
[21:43:50] <cyberbanjo> makes sense to fix buggs
[21:45:20] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[21:46:15] <shka> selwyn: the issue is not to decentralize, but what
[21:46:45] <shka> for instance, you can reinforce your central government by decentralization
[21:47:29] <shka> not wanna to deal with a problem? make it a local problem instead of global
[21:48:02] <cyberbanjo> can we crowd source the "decentralize-what?" question? 
[21:48:33] <shka> also, you can perform decentralized responsibility 
[21:48:55] <shka> not wanna take responsibility for global warming? make it lifestyle problem
[21:50:33] <shka> also, you can decentralize problems, while still keeping resources which can be used to solve those problems centralized 
[21:50:47] <shka> effectively constructing centralization-by-proxy system
[21:50:53] <SAL9000> "make it a lifestyle problem" sounds like "solve global warming by returning to how we lived in (much) simpler times"
[21:51:22] <shka> SAL9000: more like Shell making add about how you should limit your air travel and shit
[21:51:39] <shka> "We care, but that's all your fault people"
[21:51:49] <SAL9000> ah, yes, the "flight shame" movement
[21:52:04] <cyberbanjo> tfw 2 poor to be shamed for flying
[21:52:09] <cyberbanjo> i guess im winnning
[21:52:19] <shka> so anyway, don't let the "decentralized" fool you
[21:52:36] *** Quits: vats (~vats@103.216.143.56) (Remote host closed the connection)
[21:52:43] <SAL9000> if you're talking about web3, I've read Moxie's blog post too
[21:53:24] <shka> if you can remove perceived need for centralization, you remove opportunity for a opposing political power to pop up
[21:53:57] <SAL9000> uhhh... diversity of political powers seems like a good thing though, no?
[21:54:56] <pl> it's always about "seemingly decentralized"
[21:54:58] <shka> SAL9000: yes, especially if those political forces are busy fighting each other while you keep the real power
[21:55:09] <pl> remember that origin of feudalism was decentralised, too
[21:55:15] <shka> divide they will fall
[21:55:26] <SAL9000> I was thinking more in terms of "the voters having more options to choose from"
[21:55:35] *** Joins: kevingal (~quassel@176.61.88.240)
[21:55:50] <pl> nah, the core point is that web3 "decentralized" shit doesn't have to admit voters of the wrong kind
[21:55:57] <shka> SAL9000: That worked pretty badly in Poland
[21:56:16] <SAL9000> "the wrong kind"?
[21:56:33] <SAL9000> as in, the ones who would vote for someone other than the incumbent, or?
[21:56:51] <shka> when the current authoritarian gov wins partly because they were  the only nationalistic party. 
[21:56:57] <pl> sorry, got late into discussion and seen the web3 mention. Of course it means those not in the in-group
[21:57:06] <shka> while the more or less liberal groups were fighting for the same voters
[21:57:25] <pl> shka: it doesn't help that fwiw, they did certain stuff smarter
[21:57:48] <pl> to the point that I have heard persistent rumours about having help, and not from Moscow
[21:57:56] *** Joins: treflip (~user@user/treflip)
[21:58:26] <pl> SAL9000: a lot of "crypto" decentralization is ripe for taking away popular vote (as in the capability) and making it a vote for the rich, only
[21:58:58] <shka> well, we can discuss this, while they introduce actual fucking cringe to a school programs and are busy breaking every international relationship
[21:58:58] <SAL9000> are the crypto folks talking about crypto-government beyond "crypto-corps"/DAO?
[21:59:16] <SAL9000> I haven't been keeping close track of this stuff by any means
[21:59:46] <SAL9000> as far as I can tell, government of normal corps is already "vote for the rich" i.e. the shareholders, so nothing new there?
[22:04:40] <sm2n> Well there is a difference
[22:04:53] <sm2n> regular corporations use slack, DAOs use discord
[22:05:07] <sm2n> and there are way more rocket emoji in the latter
[22:06:14] <sm2n> the "Decentralized" in DAO should just be Discord
[22:06:40] <SAL9000> seriously? not Matrix (or some weird new chat-in-the-blockchain) for maximum decentralization?
[22:07:10] <sm2n> I mean have you ever looked at what people are actually doing?
[22:07:33] <SAL9000> not much, beyond laughing at the DAO which recently bought that Dune script
[22:07:53] <sm2n> All the people sincerely into decentralization and also into "web3" are illiterate, and all the literate people into "web3" are not sincere
[22:07:59] <SAL9000> :(
[22:08:40] <SAL9000> that + platform effects = web2.1, I guess (i.e. re-centralization as per https://moxie.org/2022/01/07/web3-first-impressions.html )
[22:08:55] <shka> well, lack of explicit social structures does not imply lack of hierarchy whatsoever 
[22:10:19] <shka> i may educate myself on the blockchain technology just to get full confidence that the web 3.0 is impossible 
[22:10:28] <shka> i would sleep better 
[22:10:33] <sm2n> shka: why would it be impossible?
[22:10:39] <sm2n> It's totally possible
[22:10:50] <SAL9000> blockchain tech in and of itself seems viable -- especially things other than proof of work
[22:11:07] <shka> it is still kinda slow 
[22:11:15] <SAL9000> certain applications of NFTs, e.g. electronic deeds for physical objects, seem also viable
[22:11:17] <shka> and probably won't scale that well
[22:11:42] <shka> oh, NFTs for hardware is honestly a pretty good idea
[22:11:43] <sm2n> My prediction is that at scale "blockchain" et al will basically converge to traditional database technology
[22:11:56] <sm2n> but with better sharding/replication ootb
[22:12:13] <shka> but putting $ sign and the mother of all tracking cookies on everything is a stuff of nightmares
[22:12:13] <SAL9000> as in that they'd conveniently "forget" about the merkle linked list part?
[22:12:45] <sm2n> SAL9000: well that part basically already happened in effect as most "blockchain" users interact with it via a REST api
[22:13:02] <sm2n> but it's not important
[22:13:17] <sm2n> the main thing is that blockchain stuff is fault-tolerant
[22:13:19] <SAL9000> true although (as far as I understand) the actual blockchain is still running & visible to sufficiently-motivated users interested in verifying it
[22:13:19] <selwyn> how do nfts for hardware work
[22:13:40] <pl> shka: I'm just noting certain deficiencies that could be fixed in trying to get rid of them, unless one goes the way asked by my only employee
[22:13:42] <sm2n> and doing operations work with traditional databases is pretty hard recently
[22:13:50] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:13:51] <SAL9000> selwyn: I'm no expert but I can imagine a future where all cars are like Tesla's cars -- electronic locks -- and those locks are tied to smart contracts/nfts/whatever
[22:14:10] <SAL9000> s/electronic locks/IoT locks/
[22:14:13] <pl> sm2n: blockchain is not really fault tolerant
[22:14:36] <SAL9000> afaik blockchain is about as fault tolerant as your average GitHub repo
[22:14:39] <sm2n> A greenfield distributed database designed for massive scale would probably look somewhat similar to some of the blockchain proposals
[22:14:44] <pl> sm2n: not at all
[22:14:46] <sm2n> oh? how so?
[22:15:11] <shka> databases really revolve about transactions
[22:15:14] <pl> sm2n: blockchains tried to solve trust problems (thus proof of waste)
[22:15:19] <SAL9000> I mean, Git repositories are basically block-forests minus the proof of work bits
[22:15:32] <sm2n> Yes, I know
[22:15:48] <pl> there's near-blockchain tech that is related in structure (merkle trees) but it doesn't really cover "fault tolerance"
[22:16:07] <SAL9000> for fault tolerance I guess you could look at IPFS and the like?
[22:16:11] <pl> it does help in securing integrity though
[22:16:15] <sm2n> My point is that if you want a replicated database you already have to solve consensus (not necessarily byzantine), and you end up with similar structures
[22:16:28] <pl> sm2n: not really
[22:16:33] <sm2n> see the similarities hayley and I found between solana and raft for ex
[22:16:42] <SAL9000> current replicated dbs ignores the trust problem
[22:16:42] <shka> blockchains don't really solve trust problem, they just resolve consistency problem, and by cheating i may add
[22:16:44] <pl> sm2n: consensus in usable database and consensus in "blockchain" is different
[22:16:58] <sm2n> shka: yeah, hard forks still exist
[22:17:07] <shka> sm2n: it is not about that
[22:17:33] <pl> anyway, if you want fast scalable database you can cheat by attacking the time axis (Google spanner)
[22:17:41] <shka> the only thing that blockchain tech really provides is that the history of transfers is consistent
[22:17:59] <shka> but that's not even half of the problem 
[22:18:10] *** Joins: rogersm (~rogersm@90.166.180.250)
[22:19:00] <pl> anyway, banking already solved distributed scalability issues from the point of payments
[22:19:05] <shka> and honestly, really weak-ass guarantees for the technology that claims to be completely new model of cooperation  
[22:19:16] <sm2n> yeah, that is true
[22:19:39] <sm2n> I can't buy a mainframe though
[22:19:48] <pl> sm2n: and you don't need to
[22:20:03] <shka> you know what blockchain gives you?
[22:20:21] <pl> shka: electricity bill and the feeling you're bringing the end for human civilization faster?
[22:20:41] <shka> bitcoin is so unstable, and transaction takes so much time, that there is no even telling how much money will be transferred 
[22:21:11] <shka> because between start and end, bitcoin can loose substantial amount of value 
[22:21:34] <shka> and yeah, i know that's because proof of work
[22:21:42] <selwyn> but can it lose more value than the lira
[22:21:48] <sm2n> selwyn: yes
[22:22:01] <shka> but all blockchains will get slower as they grow larger
[22:22:02] <selwyn> i should have offered better arguments against bitcoin being a worse store of value than shit irl currencies
[22:22:11] <selwyn> *for
[22:22:18] <selwyn> relatives are considering this
[22:22:31] <sm2n> lol
[22:22:53] <shka> selwyn: consider what will happen is people suddenly stop funneling founds into bitcoin
[22:22:58] <pl> in my case, the consideration is "given how cryptoidiot are easy to scalp, why are we not on the take?"
[22:23:09] <shka> for instance, by a law mandate
[22:23:24] <sm2n> Anyway the trend on newer chains is increasing the trust needed to run the chain, to gain efficiency benefits
[22:23:54] <sm2n> eventually they will just end up with something like a traditional database, but maybe with a richer access control model
[22:24:03] <sm2n> if they manage to scale it up at all
[22:24:12] <pl> sm2n: no, you have pretty much proof of waste and proof of authority, with some of the latter being blockchains only by marketing (stuff like KSI)
[22:24:21] <shka> sm2n: no, the issue is that you can't even delete anything from the blockchain
[22:24:24] <pl> sm2n: you can't make a database out of blockchain, really
[22:24:26] <shka> or update for that matter
[22:24:43] <pl> well, non-shitty database
[22:24:53] <cyberbanjo> append only
[22:24:56] <shka> the only reason blockchain even works, is that it is grow-only
[22:24:57] <pl> anyway, for global scalability with consistency, look at spanner
[22:25:14] <sm2n> yes, what's wrong with proof of authority for a centralized system?
[22:25:31] <shka> sm2n: what's the point of blockchain in that case?
[22:25:33] <sm2n> shka: sure you can, you just lose security guarantees
[22:26:21] <shka> other then simply having a ledger because you are chinese communist party and -100 social credits by spending your china-coin on hookers
[22:26:39] <sm2n> shka: Well, my claim is that if you approach from the other end you may get support for more heterogenous participation for nodes
[22:27:09] <sm2n> i.e dynamic rebalancing and failover in a more principled way than k8s because it's baked into the protocol
[22:27:32] <shka> sm2n: how will i get guarantee that blockchain will reach any point of global consistency if it is not append only?
[22:27:36] <pl> shka: fun fact - the social credit doesn't exist :D
[22:27:54] <shka> pl: it exists as a concept 
[22:27:56] <pl> sm2n: there's no dynamic rebalancing or failover
[22:28:20] <shka> pl: and everything that is put into practice first exists as a concept
[22:28:34] <pl> shka: best translation is that it's a slightly less invasive equivalent of credit history check (the scope is smaller than credit scoring agencies in USA do for individuals)
[22:28:35] <shka> that's why web3.0 shit is really scary to me
[22:28:59] <sm2n> shka: append only doesn't mean you can't delete stuff, you can always clear the back of the chain, plus what cryptocurrency people call "layer 2" things exist
[22:28:59] <pl> shka: the point is that what exists as actual real thing is a bit different than media portray
[22:29:13] <sm2n> pl: I'm not saying it exists now
[22:29:14] <selwyn> pl: really? is it an anti-china meme then
[22:29:15] <pl> sm2n: yes, and none of them make it any better as database
[22:29:31] <sm2n> Yes?
[22:29:37] <sm2n> I'm not advocating for it
[22:29:45] <pl> selwyn: it's a mixup of something real with anti-china memeing and China really not caring to interact with western media on internals
[22:30:01] <selwyn> that makes a lot of sense, thanks
[22:30:05] <sm2n> I'm just saying that I think there is a possible future in which a consumer database gets spun out of all this hypemania
[22:30:09] <pl> sm2n: sounds different to me, but ¯\_(ツ)_/¯
[22:30:22] <selwyn> not sure how to feel about the fact that there is one less dystopia than i thought
[22:30:26] <pl> sm2n: there's no usable structure for consumer database in this, though
[22:30:55] <pl> sm2n: it's a bit like why only Haskell uses (Haskell) Monads, in practice
[22:31:03] <shka> it would be cool if NFT is in fact used as a resource allocation guarantee
[22:31:19] <pl> shka: except then you don't need to make it an NFT, right? ;P
[22:31:51] <pl> anyway, stuff like KSI can help you establish integrity in decentralized way, but it's permissioned and only a blockchain by mak
[22:31:54] <pl> *marketing
[22:32:01] <sm2n> Everyone uses Monads, they just aren't pretentious enough to call it that, or abstract enough to be polymorphic over them
[22:32:03] <pl> but it can do billions of ops a second
[22:32:31] <pl> sm2n: no, nobody uses monads because outside of Haskell (and few Haskell-derived langs) there's no need for them
[22:32:44] <pl> even in Haskell they were a hack introduced by GHC
[22:32:51] <shka> pl: maybe, but imagine a system where you buy NFT as a p2p emission right, and then you can simply assume that as long as that NFT is owned, you are getting your file seeded
[22:33:10] <shka> (i know, can be done with a damn postgres)
[22:33:48] <pl> shka: or a system like x-road (which is honestly a bit like resurrected early 2000s SOAP tech) with KSI for integrity
[22:33:57] <pl> (aka what Estonia uses for government)
[22:33:58] <sm2n> pl: monads are an algebraic structure... your code can (and does quite often) satisfy the laws implicitly
[22:34:09] <shka> damn Estonia
[22:34:41] <shka> being all high tech and stuff
[22:34:46] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[22:34:59] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[22:35:02] <pl> sm2n: Haskell monads aren't exactly monads in algebra, but the thing is - they only have to be explicit in Haskell (and thus, requiring thought and consideration at all) because of Haskell's deficiencies
[22:35:15] <sm2n> yes, that is true
[22:35:18] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:35:18] *** erbium.libera.chat sets mode: +o ChanServ
[22:35:39] <shka> it is funny though, how p2p fell out of fashion
[22:35:44] <shka> it is no longer buzzword
[22:36:34] * pl recalls when internet was buzzword
[22:36:36] <selwyn> the way p2p works is not as interesting to most as what it delivers (free stuff)
[22:36:46] <selwyn> which can be got other ways
[22:36:56] <selwyn> but even free stuff is not attractive any more, which gets me
[22:37:26] <selwyn> most people i know would rather have a netflix sub or actually rent the thing on youtube for $2
[22:37:30] <shka> not just free
[22:37:34] <shka> scalable 
[22:37:44] <shka> and it works really damn well often
[22:37:45] <selwyn> shka: yes, but who cares about that
[22:37:47] <selwyn> except for us
[22:38:03] <pl> selwyn: it's a matter of convenience, and streaming services are getting annoying enough that people are looking back to p2p
[22:38:10] <selwyn> you think?
[22:38:13] <selwyn> well, that is a good sign
[22:38:27] <shka> selwyn: i torrent the new star trek shows 
[22:38:31] <shka> so that's that
[22:38:38] <pl> also, some of the use of torrents and the like fell down because bandwidth became cheap enough that you have streaming video everywhere for free
[22:38:40] <selwyn> i am considering torrenting everything
[22:38:40] <shka> and mad man is no longer on netflix
[22:38:45] <sm2n> https://www.interneteconomist.com/netflix-and-cable-prices/
[22:38:45] -ixelp- Netflix and Cable Prices
[22:38:46] <selwyn> and building a media server 
[22:38:51] <sm2n> "Between 2011-2022 Netflix's prices rose 2x faster than cable."
[22:39:10] <pl> https://www.youtube.com/watch?v=CNygmubVW3s
[22:39:11] -ixelp- Carmen Miranda's Ghost 05 - Some Kind of Hero [HQ] - YouTube
[22:39:25] <pl> shka: how did you like Discovery?
[22:39:31] <pl> I still need to get through 2nd season
[22:39:44] <shka> pl: i hated the first season so much that i didn't bother with the second one 
[22:39:44] <pl> or rather, finishing once they did that jump into mirror verse
[22:40:02] <sm2n> pl: is there a canonical paper on KSI
[22:40:04] <selwyn> somewhat concerned that the uk will have a 90s style panic about p2p one of these days
[22:40:16] <shka> anyway, consider how actually good torrent is
[22:40:22] <cyberbanjo> so good
[22:40:24] <sm2n> selwyn: They are too focused on e2ee for now
[22:40:34] <shka> it is probably the best way to transfer large files EVER
[22:40:36] <selwyn> sm2n: for now
[22:40:40] <pl> sm2n: you can find some stuff on the net, for example a lot of description can be gleaned from presentations given for US JSF project
[22:40:53] <pl> because they are apparently using KSI to secure the supply chain
[22:41:16] <pl> shka: also, p2p is silently embedded in many things, including windows update
[22:41:29] <shka> pl: (but that animated lower decks is surprisingly good actually)
[22:42:03] <shka> character driven, kinda like they wanted enterprise to be
[22:42:14] <pl> shka: was a bit annoyed by one of the early episodes pushing all kinds of buttons for me (the one with the crew going crazy due to infection)
[22:42:17] <sm2n> yes, bittorrent is one of the wonders of our age
[22:42:30] <pl> and I rarely get to watch TV these days
[22:42:51] <pl> can't wait for HBO Max to arrive, though I might just end up torrenting the show I'm waiting for anyway
[22:42:59] <pl> depends on whether it will be included for Poland
[22:43:05] <sm2n> It was so good that facebook and twitter were using it for transferring artifacts for internal deployments, as their adhoc hierarchical system was significantly slower
[22:43:09] <shka> what i like about the lower decks is that it is small scale
[22:43:18] <sm2n> pl: I see
[22:43:56] <pl> sm2n: Akamai did something similar to bitcoin since long ago, for internally distributing stuff
[22:44:53] <sm2n> bitcoin?
[22:45:14] <shka> also, that NFT art is so repulsive 
[22:45:29] <shka> slapping ownership on something that can and should be replicable 
[22:45:32] <shka> horrendous 
[22:47:11] <sm2n> this one is funny: https://www.theverge.com/2022/1/20/22893502/nft-twitter-profile-picture-crypto-wallet-opensea-coinbase-right-click
[22:47:12] -ixelp- Twitter brings NFTs to the timeline as hexagon-shaped profile pictures - The Verge
[22:47:28] <selwyn> pl: bit off topic but i wondered if you had any brexit forecasts
[22:47:40] <selwyn> remember you said once that the uk's digital infrastructure at ports is awful
[22:47:44] <pl> sm2n: sorry, bittorrent
[22:47:59] <pl> selwyn: I just reported what someone working at Dover said
[22:48:15] <selwyn> ok
[22:48:24] <pl> with how they didn't have even basic EDIFACT-capable system running
[22:48:40] <pl> meaning all container work had to parsed and redone manually
[22:48:52] <selwyn> in excel probably
[22:48:56] <pl> in excel, yes
[22:49:01] <selwyn> lol
[22:49:51] <pl> selwyn: also, while UK was in EU, apparently it was common for shipping to go to Rotterdam and Hamburg to avoid UK ports
[22:50:10] <selwyn> that is not unique though
[22:50:22] <selwyn> i heard that germany likes to use rotterdam as well
[22:50:40] <pl> selwyn: the point was that routing through rotterdam and hamburg then going on lorry through chunnel or ro-ro was simply better than direct shipping a container to UK
[22:50:55] <selwyn> oh right
[22:50:57] <selwyn> yes
[22:53:55] <pl> another thing is totally atrophied customs services
[22:54:24] <pl> I'm reminded a bit of American Empire from Ghost in the Shell
[22:55:46] <contrapunctus> pl: I suppose that's in GitS:SAC? Didn't hear about any American Empire in the films 🤔️
[22:56:07] <pl> the movies are too short to mention it, but it's related to backstory of them all
[22:56:07] <cyberbanjo>  Stand Alone Complex 2nd GIG 
[22:56:47] <drakonis> japan has a difficult relationship with media titles
[22:57:01] <cyberbanjo> me too
[22:57:22] <pl> I see it annoying that at least some wikis suggest that USSR got retroactively redacted from GitS
[22:57:57] <pl> it was delightful bit of schadenfraude
[22:58:32] <pl> contrapunctus: 2nd SAC had a strong showing from American Empire because they were involved in the overarching conspiracy
[22:58:43] <rogersm> folks, is there any way I can generate automotivator posters in the way of old http://wigflip.com/automotivator/
[22:58:47] <contrapunctus> I just tried cl-launch and it's fairly easy to make a script - and as a bonus it's installed on Debian - but just I thought "cool, I'll contribute better docs as I get familiar with it", I see that vindarel made a PR for a README which has not been commented on, merged, or rejected in ~4 years... 😶️
[23:01:17] <pl> drakonis: ?
[23:01:40] <drakonis> basically you have those really long winded or non sequitur titles for japanese media
[23:01:46] <pl> selwyn: anyway, I'm reminded a bit of how AE is somewhat of a fading player in GitS
[23:01:54] <drakonis> things that look like they were chosen with a dart board
[23:01:56] <pl> drakonis: ehhh, that used to be the norm in Europe as well
[23:02:06] <pl> where titles were as good as summaries
[23:02:10] <drakonis> in my experience, japan takes it to another level
[23:02:33] <pl> drakonis: Light Novels often go long... but they have yet to take the crown from certain old european books
[23:02:39] <drakonis> yes.
[23:02:47] <drakonis> isekai lol.
[23:03:00] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Read error: Connection reset by peer)
[23:03:12] <drakonis> there's a legion of these with titles that are a paragraph long
[23:03:16] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[23:03:25] * shka wonders how america would look like if it would really split
[23:03:40] <selwyn> reposting the horny anime
[23:03:42] <selwyn> https://www.youtube.com/watch?v=SumdIkmSNog
[23:03:43] -ixelp- Lum the Invader Girl, part 1, BBC dub of Urusei Yatsura うる星やつら - YouTube
[23:04:16] <selwyn> the voice casting is incredible
[23:05:26] <contrapunctus> I love the mental journey I experienced with the title of SNK - [starting out] '"Attack on Titan", eh? Some place called Titan is going to be attacked?' -> [midway to _that_ part] 'Title makes zero sense.' -> [at _that_ part] 'Oh. "The Attack Titan"...'
[23:05:40] <shka> selwyn: *bonk*
[23:06:03] <pl> drakonis: " No Matter How Much You Promise to Cook or Pay the Rent You Blew It Cauze Bill Bailey Ain’t Never Coming Home Again"
[23:06:09] <pl> that's an actual book
[23:06:36] <pl> has anyone here ever seen Robinson Cruzoe published with its full title?
[23:06:56] <drakonis> lol
[23:06:56] <pl> > The Life and Strange Surprizing Adventures of Robinson Crusoe, Of York, Mariner: Who lived Eight and Twenty Years, all alone in an un-inhabited Island on the Coast of America, near the Mouth of the Great River of Oroonoque; Having been cast on Shore by Shipwreck, wherein all the Men perished but himself. With An Account how he was at last as strangely deliver’d by Pyrates
[23:07:01] <drakonis> what the fuck
[23:07:26] <pl> that's the full title and it appeared on original published version
[23:08:00] <pl> >The Fortunes and Misfortunes of the Famous Moll Flanders Who was born in Newgate, and during a life of continu’d Variety for Threescore Years, besides her Childhood, was Twelve Years a Whore, five times a Wife (whereof once to her brother) Twelve Years a Thief, Eight Years a Transported Felon in Virginia, at last grew Rich, liv’d Honest and died a Penitent 
[23:08:11] <pl> also known simply as "Molly Flanders" by Daniel Defoe
[23:09:32] <drakonis> jfc
[23:09:32] <selwyn> back when novels had abstracts
[23:09:39] <drakonis> the title is the abstract
[23:09:52] <pl> >Noisy outlaws, unfriendly blobs, and some other things that aren't as scary, maybe, depending on how you feel about lost lands, stray cellphones, creatures from the sky, parents who disappear in Peru, a man named Lars Farf, and one other story we couldn't quite finish, so maybe you could help us out
[23:10:05] <pl> https://www.goodreads.com/book/show/15591.Noisy_Outlaws_Unfriendly_Blobs_and_Some_Other_Things_That_Aren_t_as_Scary_Maybe_Depending_on_How_You_Feel_About_Lost_Lands_Stray_Cellphones_Creatures_From_the_Sky_Parents_Who_Disappear_in_Peru_a_Man_Named_Lars_Farf_and_One_Other_Story_We_
[23:11:01] <drakonis> you win, by virtue of length and outlandishness
[23:11:27] <pl> the longest title I found information about is supposedly longer than some short stories I wrote
[23:12:14] * shka hates MS teams
[23:12:21] <shka> it is, frankly, shit
[23:12:21] <pl> ah, 26k characters and 3777 words
[23:12:26] <pl> https://www.guinnessworldrecords.com/world-records/358711-longest-title-of-a-book
[23:13:06] <pl> I guess that's one way to make searching for contents by title easier
[23:13:08] <selwyn> ah, i have a teams meeting tomorrow
[23:15:17] <shka> it is slugish, interface is clunky, does not integrate well into the rest of the office
[23:15:51] <drakonis> https://katalepsis.net/
[23:15:51] -ixelp- Katalepsis | A web serial of cosmic horror, urban fantasy, and making friends with strange people
[23:15:58] <drakonis> v. good.
[23:20:12] <shka> new episode of main engine cut off
[23:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[23:25:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:33:19] *** Quits: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d) (Remote host closed the connection)
[23:35:29] <shka> also, for crypto
[23:35:31] <shka> https://i.imgur.com/07sqARQ.jpeg
[23:35:41] <shka> Hope is a smart girl, be like hope 
[23:36:56] <hayley> SHA-256 isn't an encryption algorithm. 0/10
[23:38:23] <shka> yeah...
[23:38:30] <shka> pretty good game regardless
[23:38:33] <shka> i enjoyed it
[23:38:42] <shka> and Hope is the best waifu, clearly 
[23:39:04] <pl> well... technically... SHA-256 "decryptions" could be seen as throwing a shade on bitcoin
[23:40:55] <pl> because IIRC critical portion of making a block is done by reversing SHA-256 
[23:42:27] <hayley> Mining? Yeah, sure, that's finding a hash s.t. the first n bits are zero for large-ish n.
[23:45:46] <selwyn> would be great if qc could destroy crypto somehow
[23:45:53] <selwyn> my next research project
[23:46:10] <pl> selwyn: unfortunately doubtful, it would just fuel the arms race
[23:46:36] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[23:46:52] <selwyn> yes, doubtful
[23:48:03] <hayley> https://www.youtube.com/watch?v=g3f9rbOEmps
[23:48:04] -ixelp- My Other Voice - YouTube
