[00:00:05] * Wooble started writing cgi in perl only in like 1995, and gets off puff's lawn
[00:02:49] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:06:08] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[00:13:14] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[00:15:34] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[00:15:47] <nedbat> puff: have you gone through the Django tutorial?
[00:16:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:18:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:18:17] *** ChanServ sets mode: +v EvilDMP
[00:23:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:24:44] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:25:19] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:29:15] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:35:08] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Read error: Connection reset by peer)
[00:36:31] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[00:37:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:39:01] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:52:39] <puff> nedbat: Not yet.
[00:54:37] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2.1)
[00:55:39] <puff> nedbat: I did have it open and started reading it.
[00:57:04] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:01:05] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[01:19:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:20:21] *** Joins: Guddu (~Guddu@190.84.88.92)
[01:21:01] *** Joins: fikran (~fikran@user/fikran)
[01:22:10] *** Joins: mxp (~mxp@82.98.30.69)
[01:23:40] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:23:54] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:31:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:02] *** Quits: mxp (~mxp@82.98.30.69) (Quit: leaving)
[01:37:17] *** Joins: mxp (~mxp@185.16.205.131)
[01:54:15] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[02:08:44] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[02:12:34] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:35] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[02:13:25] *** Joins: dez (uid92154@user/dez)
[02:18:59] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[02:20:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:11] *** ChanServ sets mode: +v EvilDMP
[02:21:37] *** Joins: svedrin_ (~quassel@tiamat.funzt-halt.net)
[02:24:27] *** Quits: Ninpo (~Ninpo@leviathan.qap.la) (Ping timeout: 240 seconds)
[02:26:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:17] *** Quits: Damianz_ (~damian@user/damianz) (Ping timeout: 240 seconds)
[02:27:46] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[02:27:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:27:57] *** ChanServ sets mode: +v EvilDMP
[02:31:15] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 265 seconds)
[02:32:12] *** Joins: Damianz (~damian@user/damianz)
[02:47:49] *** Quits: CodenameTim (~CodenameT@154.21.114.109) (Ping timeout: 252 seconds)
[02:48:47] *** Joins: dre (~dre@2001:8003:c932:c301:5cf6:8209:dad6:8a73)
[03:07:28] <esaym153> puff: the "two scoops of django" book is a good start. Though it is not free. Django does not force you to use any type of structure for your app which can be confusing. That book will give you a good architecture to build apps with.
[03:08:08] <esaym153> puff: there's also the "django girls tutorial", but from what I remember was extremely basic (which might be a good thing in your case)
[03:14:24] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:14:37] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:15:32] <FunkyBob> well, no structure beyond python packages, and a few prescribed names
[03:16:37] <FunkyBob> as always, the best place to start is the django tutorial... the official one, in the docs, puff
[03:17:03] <FunkyBob> for deployments, that's a little more fiddly... and some hosting companies can make it not worth the effort [like GoDaddy]
[03:17:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:22:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:26:17] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:26:49] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:27:24] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:28:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:29:56] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[03:30:22] *** Joins: fikran (~fikran@user/fikran)
[03:43:55] *** Quits: frozensoil (~frozensoi@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca) (Ping timeout: 252 seconds)
[03:46:05] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[03:49:39] *** Joins: CodenameTim (~CodenameT@154.21.23.159)
[03:52:21] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[03:54:20] *** Quits: CodenameTim (~CodenameT@154.21.23.159) (Ping timeout: 260 seconds)
[03:55:26] *** Quits: Elzington_ (~Elzington@68.235.43.28) (Ping timeout: 252 seconds)
[03:56:48] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 265 seconds)
[03:58:17] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:08:25] <dre> ^
[04:08:30] <dre> mornin' all
[04:10:28] <FunkyBob> o/
[04:18:12] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[04:19:15] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:20:30] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Client Quit)
[04:22:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:25:32] *** Quits: nyany (~nyany@dronebl/admin/cat) (Quit: quit = yes)
[04:27:53] *** Joins: nyany (~nyany@dronebl/admin/cat)
[04:30:15] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[04:31:05] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Client Quit)
[04:31:21] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[04:38:10] *** Quits: nyany (~nyany@dronebl/admin/cat) (Quit: quit = yes)
[05:00:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:02:52] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:03:20] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:04:42] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:04:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:05:39] *** Joins: deepy (deepy@user/deepy)
[05:09:20] *** Joins: nyany (~nyany@dronebl/admin/cat)
[05:19:32] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:21:37] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[05:28:59] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:29:08] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[05:29:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:32:55] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:33:10] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:38:06] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[05:38:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:38:23] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[05:40:08] *** Joins: fikran (~fikran@user/fikran)
[05:48:58] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir …)
[05:50:25] *** Joins: jasonbraganza (~jasonbrag@user/jasonbraganza)
[05:51:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:52:27] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:57:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[06:04:35] *** Joins: amrooting1 (~amrooting@197.255.10.120)
[06:07:20] *** Quits: amrooting (amrooting@gateway/vpn/protonvpn/amrooting) (Ping timeout: 260 seconds)
[06:24:18] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:30:05] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[06:33:19] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:33:52] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:34:07] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[06:35:27] <tm007> mornin
[06:37:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[06:41:45] *** Joins: dez (uid92154@user/dez)
[06:43:54] <FunkyBob> o/
[06:46:27] <tm007> any one work with composite primary key with Django?
[06:46:38] <tm007> I have a legacy db
[06:47:22] <tm007> https://code.djangoproject.com/ticket/373
[06:47:30] <tm007> seems to be a dead end
[06:48:56] <FunkyBob> it's an old dream...
[06:49:12] <FunkyBob> there's some ability to support composite keys for joins...
[06:55:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:55:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:57:08] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:59:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:03:19] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[07:03:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:04:23] <tm007> My use case is pretty simple tbh
[07:04:28] <tm007> no foreign keys
[07:04:38] <tm007> just a simple save
[07:05:14] <tm007> I have used one of the two fields as Primary key
[07:06:53] <tm007> But I can't add two of the same primary key
[07:10:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:17:50] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[07:22:19] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:19e5:c037:5be:1ef8)
[07:40:13] <FunkyBob> tm007: you can set unique_together to enforce uniqueness... and add a surrogate key for django?
[07:41:14] <FunkyBob> (or lie to django, if you can't modify the schema, and never use its pk)
[07:41:19] <tm007> yeah, ideally i don't want to go down that road
[07:41:40] <tm007> sounds interesting
[07:41:53] *** Joins: node1 (~node1@user/node1)
[07:42:15] <tm007> how to lie?
[07:42:20] <FunkyBob> i mean, declaring the unique together is effectively the same... 'primary key' is a bit of a funny concept
[07:42:33] <FunkyBob> lie by... just telling it one field is the PK
[07:43:07] <FunkyBob> if nothing fkeys to this table, it won't know
[07:43:19] <FunkyBob> (or m2m, or 1to1)
[07:43:51] <tm007> yeah I am setting one of the field as PK
[07:44:28] <tm007> but it doesn't allow me to save two with same PK
[07:44:42] <tm007> think I can just hack the django save method
[07:48:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:49:59] *** Joins: fikran (~fikran@user/fikran)
[07:50:35] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:19e5:c037:5be:1ef8) (Ping timeout: 260 seconds)
[07:55:41] *** Joins: djapo (~archangel@user/djapo)
[08:01:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:06:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:11:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:21:11] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 265 seconds)
[08:32:37] *** Joins: amrooting (~amrooting@197.255.10.31)
[08:35:30] *** Quits: amrooting1 (~amrooting@197.255.10.120) (Ping timeout: 260 seconds)
[08:39:09] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[08:45:58] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[08:46:11] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:51:11] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:51:25] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[08:56:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:03:24] *** Joins: neilbags (~neilbags@103.77.233.53)
[09:04:23] <neilbags> Hi, can anyone recommend a basic pdf generation library? Don't need graphics, but tables would be good
[09:05:49] <FunkyBob> there's a few credible html->pdf tools
[09:05:58] <FunkyBob> schinckel: what's that one you use?
[09:06:36] <FunkyBob> https://wkhtmltopdf.org/
[09:07:11] <FunkyBob> https://pypi.org/search/?q=wkhtmltopdf
[09:09:51] <neilbags> Oh yeah i've used that before with php. The command-line parameters are a bit of a pain and don't always work depending on who built it. I wonder if there's something more pythonic. The other option is I support I can do it in js on the client if their libs are better
[09:10:24] <neilbags> s/I support//
[09:13:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:14:55] *** Joins: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com)
[09:15:07] <neilbags> ok, there's a wrapper: https://wkhtmltopdf.org/
[09:15:15] *** Joins: sandeepk (~sandeepk@223.130.30.125)
[09:15:44] <neilbags> https://pypi.org/project/pdfkit/
[09:18:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:23:48] <twomoon> neilbags, tell me what you plan to do with that pdf generation lib?
[09:23:51] <twomoon> if you can
[09:26:28] <neilbags> twomoon, just generate a report based on some data in a db. will probably use a django template to make the html, and return the url via rest api. Not sure whether i'll generate the PDF on the backend or the frontend yet. Probably the backend just for debugability
[09:26:53] <twomoon> interesting, ok
[09:27:00] <twomoon> tell me how it goes
[09:27:19] <neilbags> was thinking about generating the pdf directly using a library but it seems that going via html is the path of least resistance
[09:29:09] <schinckel> WeasyPrint
[09:29:13] <FunkyBob> reportlab had a mixed free/paid solution
[09:29:14] <twomoon> yeah
[09:29:16] <FunkyBob> weasy.. that was it!
[09:29:47] <schinckel> We do an HTML template and render to string, then convert to off
[09:29:50] <schinckel> PDF
[09:29:58] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[09:30:17] <schinckel> Just updated out COVID work permit generator that uses the today.
[09:30:36] * schinckel looks at the Victorian government
[09:31:36] <twomoon> lol
[09:31:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:33:23] <twomoon> i forgot what html to pdf lib i'm using
[09:33:30] <neilbags> schinckel, thanks! I'll check it out
[09:33:31] <twomoon> where would i look to find out? i'm lost again
[09:33:40] <twomoon> sorry i'm just not much of a programmer
[09:33:51] <FunkyBob> twomoon: it takes practice
[09:36:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[09:47:15] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[09:57:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:59:22] *** Joins: fikran (~fikran@user/fikran)
[10:05:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:06:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:10:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:13:37] <tm007> which method is being called in Django to check if an already existing instance with the same PK exists in the db?
[10:15:39] <FunkyBob> usually it would depend on the DBMS enforcing uniqueness
[10:16:06] <FunkyBob> as always.. code + traceback helps
[10:18:07] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:18:37] <tm007> User list item with this Group already exists.
[10:18:45] <tm007> where is this generated?
[10:19:19] <FunkyBob> paste of full traceback and relevant code... you know the drill
[10:20:10] <tm007> 😥
[10:20:42] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:22:00] <tm007> I just need to hack Django to not check if an object with the given FK already exists in the db.
[10:22:11] <tm007> given PK*
[10:27:53] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[10:28:44] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Client Quit)
[10:36:18] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[10:36:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:37:57] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:38:12] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:38:41] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:48:47] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:49:12] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:54:01] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[11:00:30] *** Joins: node1 (~node1@user/node1)
[11:04:31] *** Joins: Atque (~Atque@user/atque)
[11:20:40] *** Quits: TakinOver (~quassel@47.150.196.72) (Ping timeout: 240 seconds)
[11:20:57] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[11:21:06] *** Joins: TakinOver (~quassel@47.150.196.72)
[11:25:49] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 265 seconds)
[11:29:21] *** Joins: pycode (~pycode@2001:b07:5d28:551:23f9:efff:6714:714c)
[11:35:01] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[11:40:46] *** Quits: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:50:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:50:15] *** ChanServ sets mode: +v EvilDMP
[11:57:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[11:58:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:01:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[12:06:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:08:46] *** Joins: fikran (~fikran@user/fikran)
[12:20:19] *** Joins: node1 (~node1@user/node1)
[12:20:58] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[12:21:04] *** Quits: GJdan (~quassel@107-190-25-75.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[12:22:32] *** Quits: doc (~doc@user/doc) (Ping timeout: 252 seconds)
[12:23:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:23:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:25:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:25:00] *** ChanServ sets mode: +v EvilDMP
[12:26:32] *** Joins: doc (~doc@user/doc)
[12:26:46] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:27:00] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:31:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[12:32:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[12:35:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:06] *** Joins: piscvau (~odile@aclermont-ferrand-257-1-15-59.w92-129.abo.wanadoo.fr)
[12:38:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:38:54] *** ChanServ sets mode: +v EvilDMP
[12:39:38] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:43:55] <piscvau> Hello I am using django test on a xubuntu system with mysql. On xubuntu mysql database creation is possible only with sudo. therefore I need to create the test_database and that django loads the database with the data written in my testCase
[12:44:10] <piscvau> How should I do this
[12:52:27] <FunkyBob> you should be able to create a mysql user/role that is allowed to create DBs
[12:52:30] <FunkyBob> in theory
[12:52:39] <FunkyBob> i don't use mysql, so I can't help with the specifics
[12:56:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:58:50] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:00:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:08:15] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:08:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:08:44] *** ChanServ sets mode: +v EvilDMP
[13:20:13] <piscvau> @FunkyBob Thnkyou for your answer. I tried this and did not succeed.  Can I just create the database and add_it in the settings. Then my testcase can create the objects and the teardown can delete the objects. Is this a possible way?
[13:21:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:21:51] <piscvau> @FunkyBob I mean I tried to create the database without being sudo.
[13:24:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:24:30] *** ChanServ sets mode: +v EvilDMP
[13:26:39] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:36:56] <FunkyBob> piscvau: it's hard to help when all you say is "i tried this".
[13:41:25] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:41:33] <wallbroken> see? i was not so bad
[13:45:19] <piscvau> @FunkyBob sorry I was not more explicit. I have tried many things to create a database without being sudo and it turn out not to be possible without doing things that would lower security on my system at least accordin to some experts I asked.
[13:45:37] <FunkyBob> wallbroken: yeah, you were this bad and worse
[13:46:00] <FunkyBob> piscvau: turn it off and you'll have even better security
[13:46:11] <moldy> piscvau: you need to create a mysql database user (not a system user) that is allowed to create mysql databases
[13:47:35] <moldy> something like ``GRANT ALL PRIVILEGES ON test_myproject. * TO 'myuser'@'localhost';`` should work
[13:50:20] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[13:51:12] *** Joins: cebor (~cebor@user/cebor)
[13:53:36] <piscvau> I did grant all privileges to the sql user. However the problem is that the sql databases are created in var/lib directory which is not accessible unless you are sudo.
[13:58:27] <moldy> piscvau: that should not be a problem
[13:59:00] <moldy> piscvau: it's mysql which writes there, not your user
[13:59:53] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 252 seconds)
[14:00:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:01:23] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[14:01:44] <piscvau> I am not a system expert but I found no solution to allow a user to create a database in var/lib without using a sudo command. But this is not a problem as I can create the database with the right name and have django test populate the database. My question is therefore how should I do this?
[14:10:00] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[14:10:43] <moldy> piscvau: no
[14:10:50] <moldy> piscvau: you should do what we told you :)
[14:11:09] <moldy> ah wait i misread that
[14:11:25] *** Joins: thiras (~thiras@user/thiras)
[14:14:30] <piscvau> my not system expert understanding is that any program that writes in var/lib should be ran as sudo. I am not sure it is a good idea to run all my django tests as sudo.
[14:14:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:17:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:17:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:18:09] *** Joins: fikran (~fikran@user/fikran)
[14:18:29] <FunkyBob> wait... so your mysqld can't create DBs in its own directory?
[14:18:37] <jjhoo> piscvau: I think you need to go through some beginner tutorial if you don't know how to use mysql command line interface to create a database
[14:19:59] <FunkyBob> any particular reason you picked mysql?
[14:20:26] <piscvau> I am sorry but this is not exactly the case. As a matter of fact I did write a python command to create a database as sudo while remaining in the virtual environment. and I created a subprocess to start the mysql command.
[14:21:05] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[14:21:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:22:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[14:23:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:24:25] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:25:39] <piscvau> My understanding is that the problem comes from the mysql default Authenication plugin  as explained here. https://mysqlserverteam.com/upgrading-to-mysql-8-0-default-authentication-plugin-considerations/
[14:25:44] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 252 seconds)
[14:26:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:26:14] *** ChanServ sets mode: +v EvilDMP
[14:27:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[14:39:21] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:49:14] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[14:52:43] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[14:56:34] *** Quits: simernes1 (~simernes@gateway/tor-sasl/simernes) (Quit: Bye)
[15:04:10] <hyper_dave> Is there a way to order and limit entries in prefetch_related?
[15:05:06] <hyper_dave> ie. To include only a n latest related entries in the queryset.
[15:06:26] <FunkyBob> hyper_dave: is that "latest N for each"?
[15:08:13] <hyper_dave> Yes
[15:09:07] <hyper_dave> FunkyBob: Should I get away with it with adding a property on the model or is there another way?
[15:10:39] <hyper_dave> The end goal here is, I used nested serializers in DRF and I got way too man instances of the related field to the point it filled up my whole RAM.
[15:10:57] <hyper_dave> Wanted to limit them to latest N for each
[15:12:11] <piscvau> OK problem solved by changing authentication plugin of the sql user from sha2 plugin to native_password
[15:24:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:29:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[15:32:03] <hyper_dave> FunkyBob: Nevermind I just added a new property
[15:38:22] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[15:42:25] *** Joins: dez (uid92154@user/dez)
[15:48:01] *** Quits: deepy (deepy@user/deepy) (Quit: meow)
[15:52:57] *** Quits: pycode (~pycode@2001:b07:5d28:551:23f9:efff:6714:714c) (Ping timeout: 245 seconds)
[16:02:47] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:05:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:07:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:fff5:80fb:c4ae:a0e7)
[16:07:49] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:08:02] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[16:27:31] *** Joins: fikran (~fikran@user/fikran)
[16:40:23] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[16:43:31] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[16:56:31] *** Joins: deepy (deepy@user/deepy)
[16:57:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[17:02:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:07:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:07:35] *** ChanServ sets mode: +v EvilDMP
[17:22:03] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 265 seconds)
[17:22:37] *** Joins: frozensoil (~frozensoi@24.48.105.66)
[17:23:33] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:27:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:28:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:28:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:29:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:29:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:30:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:31:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:31:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:34:32] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:36:03] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 265 seconds)
[17:36:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[17:42:13] *** Joins: Guddu (~Guddu@190.84.88.92)
[17:46:28] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[17:49:05] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[17:55:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:56:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:56:29] *** ChanServ sets mode: +v EvilDMP
[17:58:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:58:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:00:17] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) ()
[18:02:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:05:41] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:08:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[18:16:16] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:19:42] *** Joins: oblikoamorale (~n@user/oblikoamorale)
[18:20:17] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:23:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Quit: Leaving)
[18:34:14] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:34:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:35:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:36:53] *** Joins: fikran (~fikran@user/fikran)
[18:43:19] *** Joins: archayl (~archayl@2404:160:a009:4a5b:661e:42db:7bae:702c)
[18:56:47] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 240 seconds)
[18:59:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:00:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:05:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:21:44] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[19:21:44] *** Quits: felixx (felixx@django/moderator/felixx) (Quit: ZNC - https://znc.in)
[19:23:55] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[19:23:55] *** ChanServ sets mode: +v apollo13
[19:24:18] *** Joins: felixx (felixx@django/moderator/felixx)
[19:24:18] *** ChanServ sets mode: +v felixx
[19:30:50] *** Joins: pro_z (~pro_z@37.214.61.236)
[19:37:59] *** Quits: sandeepk (~sandeepk@223.130.30.125) (Quit: Leaving)
[19:39:57] *** Joins: Xeago (~Xeago@user/xeago)
[19:42:18] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Read error: Connection reset by peer)
[19:50:40] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz…)
[19:51:08] *** Joins: rje (~rje@50.35.241.164)
[19:52:08] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:52:22] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:59:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:05] *** Quits: Xeago (~Xeago@user/xeago) (Quit: ZNC - https://znc.in)
[20:01:45] *** Joins: thiras (~thiras@user/thiras)
[20:01:51] *** Joins: Xeago (~Xeago@user/xeago)
[20:04:01] *** Quits: pycode (~pycode@2001:b07:5d28:551:fff5:80fb:c4ae:a0e7) (Ping timeout: 252 seconds)
[20:06:23] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:09:05] *** Joins: shakakai (~shakakai@c-67-170-124-25.hsd1.wa.comcast.net)
[20:11:57] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[20:15:27] *** Quits: shakakai (~shakakai@c-67-170-124-25.hsd1.wa.comcast.net) (Quit: Leaving...)
[20:16:35] *** Joins: shakakai (~shakakai@c-67-170-124-25.hsd1.wa.comcast.net)
[20:21:19] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:34:33] *** Quits: andrewgodwin (sid23792@django/member/andrewgodwin) (Ping timeout: 250 seconds)
[20:35:03] *** Joins: andrewgodwin (sid23792@django/member/andrewgodwin)
[20:44:08] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:45:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:45:51] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:47:06] *** Joins: fikran (~fikran@user/fikran)
[20:47:53] *** Joins: fizzizist (~fizzizist@108.162.133.99)
[20:48:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[20:51:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:51:48] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:53:34] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[20:54:40] <fizzizist> Hello all, I am wondering if anyone has ever run into an issue with django rest framework where an endpoint holds onto the memory of the Response object being passed out of the endpoint? Here is some psuedocode of what I am talking about: https://dpaste.org/gOPA
[20:58:33] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:02:19] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[21:04:30] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 260 seconds)
[21:17:53] *** Quits: piscvau (~odile@aclermont-ferrand-257-1-15-59.w92-129.abo.wanadoo.fr) (Quit: Leaving)
[21:18:14] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 252 seconds)
[21:29:57] *** Quits: funksh0n_ (~funksh0n@host86-163-203-147.range86-163.btcentralplus.com) (Quit: leaving)
[21:30:12] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[21:30:37] *** Joins: Kulunna (~Guest50@182.253.132.209)
[21:30:51] <Kulunna> Hello
[21:32:02] *** Joins: deepy (deepy@user/deepy)
[21:33:40] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[21:37:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:37:29] *** Quits: archayl (~archayl@2404:160:a009:4a5b:661e:42db:7bae:702c) (Quit: Quit)
[21:39:39] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:39:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:40:20] *** Quits: Kulunna (~Guest50@182.253.132.209) (Quit: Client closed)
[21:47:27] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:50:36] *** Joins: Guest5081 (~Guest50@182.253.132.209)
[21:50:46] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:50:47] <Guest5081> Hello
[21:50:48] *** Quits: Guddu (~Guddu@190.84.88.92) (Read error: Connection reset by peer)
[21:50:51] <Guest5081> I'm trying to create a model for Indonesia address, the address will be Province > City > District. Each level will be added through web admin. I want the city to have a choicefield of province, and the district to have a choicefield of city. I've tried using foreign key but it calls all city even from other province. How can I isolate the city i'm
[21:50:52] <Guest5081> trying according to selected province?
[21:51:54] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:52:15] *** Guest5081 is now known as Kuluna
[21:55:28] *** Joins: Stefan92 (~stefan92@84-24-1-9.cable.dynamic.v4.ziggo.nl)
[22:21:17] <GinFuyou> Kuluna, you probably want chained selects, so just a dynamic form widget
[22:21:40] <GinFuyou> django-select2 has that feature for example
[22:23:47] <Kuluna> Thanks, I'll try that
[22:27:18] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[22:29:01] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:29:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:36:33] *** Joins: CodenameTim (~CodenameT@154.21.23.80)
[22:42:05] *** Quits: Stefan92 (~stefan92@84-24-1-9.cable.dynamic.v4.ziggo.nl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:52:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:52:15] *** Quits: Kuluna (~Guest50@182.253.132.209) (Quit: Client closed)
[22:54:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:56:30] *** Joins: fikran (~fikran@user/fikran)
[22:57:57] *** Quits: frozensoil (~frozensoi@24.48.105.66) (Ping timeout: 265 seconds)
[23:04:16] *** Joins: Elzington (~Elzington@68.235.43.76)
[23:15:56] *** Quits: pro_z (~pro_z@37.214.61.236) (Ping timeout: 252 seconds)
[23:22:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:22:13] *** ChanServ sets mode: +v EvilDMP
[23:23:37] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[23:29:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:29:56] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:30:09] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:34:06] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[23:36:50] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[23:36:54] *** Joins: frozensoil (~frozensoi@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca)
[23:39:00] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[23:45:05] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:48:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[23:50:21] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[23:55:02] *** Joins: defjam (~eb0t@90.214.8.179)
[23:56:40] *** Quits: eb0t (~eb0t@90.204.61.71) (Ping timeout: 240 seconds)
