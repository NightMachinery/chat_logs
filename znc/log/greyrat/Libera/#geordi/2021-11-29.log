[01:05:48] *** Joins: badone (~badone@209.132.189.136)
[08:15:26] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[08:55:38] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[09:32:03] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[09:32:03] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[09:32:03] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[09:32:26] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[09:33:04] *** Joins: undeclared (nullx@user/undeclared)
[09:33:32] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[09:33:34] *** ChanServ sets mode: +v nolyc
[09:36:24] *** Quits: GyrosGeier (~geier@185.27.255.155) (*.net *.split)
[09:36:31] *** Joins: GyrosGeier (~geier@185.27.255.155)
[17:26:28] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[17:38:40] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[17:49:28] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 264 seconds)
[17:51:00] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[18:22:46] <CarloWood> { U1 u; cout << u.a(); } struct B1 { protected: int b1; }; struct U1 : protected B1 { protected: int u1; int a() { return b1; } };
[18:22:46] <geordi> error: 'int U1::a()' is protected within this context
[18:23:06] <CarloWood> { U1 u; cout << u.a(); } struct B1 { protected: int b1; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } };
[18:23:07] <geordi> -1230372224
[18:23:19] <CarloWood> { U1 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } };
[18:23:20] <geordi> 42
[18:24:01] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } }; struct U2 : private U1 { };
[18:24:01] <geordi> error: 'int U1::a()' is inaccessible within this context
[18:24:32] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } }; struct U2 : private U1 { public: int a() { return U1::a(); } };
[18:24:32] <geordi> 42
[18:25:37] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { protected: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return u1; } };
[18:25:38] <geordi> 42
[18:34:15] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { private: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return u1; } };
[18:34:15] <geordi> error: 'int U1::u1' is private within this context
[18:34:23] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : protected B1 { private: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return b1; } };
[18:34:24] <geordi> 42
[18:34:44] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : private B1 { private: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return b1; } };
[18:34:44] <geordi> error: 'int B1::b1' is private within this context
[18:35:23] <CarloWood> { U2 u; cout << u.a(); } struct B1 { protected: int b1 = 42; }; struct U1 : private B1 { private: int u1; public: int a() { return b1; } }; struct U2 : private U1 { int a() { return U1::a(); } int a_fail() { return 0; } };
[18:35:23] <geordi> 42
[19:00:47] <CarloWood> { cout << std::is_derived_from<B, A>; } struct A {}; struct B : private A {};
[19:00:47] <geordi> error: 'is_derived_from' is not a member of 'std'; did you mean 'derived_from'? (fix known)
[19:00:56] <CarloWood> { cout << std::derived_from<B, A>; } struct A {}; struct B : private A {};
[19:00:57] <geordi> false
[19:20:10] <CarloWood> { cout << std::derived_from<B, A>; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B {};
[19:20:11] <geordi> false
[19:20:29] <CarloWood> { C c; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B {};
[19:20:29] <geordi> error: cannot declare variable 'c' to be of abstract type 'C'
[19:20:53] <CarloWood> { C c; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B { void foo() override final; };
[19:20:54] <geordi> error: undefined reference to 'vtable for C'
[19:21:18] <CarloWood> { C c; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B { void foo() override final {} };
[19:21:19] <geordi>  
[19:21:30] <CarloWood> { C c; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B { private: void foo() override final {} };
[19:21:30] <geordi>  
[19:23:23] <CarloWood> { C c; cout << std::is_base_of_v<A, C>; } struct A { virtual void foo() = 0; }; struct B : private A {}; struct C : public B { private: void foo() override final {} };
[19:23:23] <geordi> true
[20:16:42] <CarloWood> { boost::intrusive_ptr<A> p; } struct A {};
[20:16:42] <geordi> error: 'intrusive_ptr' is not a member of 'boost'
[22:23:28] *** Joins: great_taste (~great_tas@190.32.235.20)
