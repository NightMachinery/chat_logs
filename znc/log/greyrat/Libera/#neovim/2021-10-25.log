[00:13:50] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 244 seconds)
[00:18:45] *** Joins: jklfds_ (~jklfds@user/jklfds)
[00:24:53] *** southey is now known as foxtrot
[00:26:12] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 265 seconds)
[00:37:48] *** Quits: nivenkos (~nivenkos@c83-254-107-47.bredband.tele2.se) (Quit: WeeChat 3.3)
[00:44:46] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[00:50:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[00:50:48] <bdju> is there anything in nvim like emacs's ability to scroll the other window up/down? like C-e and C-y but for the other window in a two-window setup
[00:51:05] <Bowuigi[m]> <sokan> "Bowuigi: ty :)" <- What why how when?
[00:53:50] <dundargoc[m]> bdju: meesa thinks no, but meesa also thinks it should be doable with a mapping of you own choosing.
[00:56:57] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:58:03] *** Joins: jklfds_ (~jklfds@user/jklfds)
[01:00:24] *** Joins: dre (~dre@2001:8003:c932:c301:a599:763f:a8fa:b8c1)
[01:00:59] <dundargoc[m]> Is this Schr√∂dingers Telemetry or something? What does `telemetry=nil` mean and how does it differ from `telemetry=false`?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/6374e87e62e4458c9bac671dc0c7465d7321832a)
[01:02:16] <bfredl> in neovim we call it TriState
[01:02:22] <elianiva[m]> lmao Schr√∂dingers Telemetry
[01:04:22] <Bowuigi[m]> > <@dundargoc:matrix.org> Is this Schr√∂dingers Telemetry or something? What does `telemetry=nil` mean and how does it differ from `telemetry=false`?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/f15639415fd8d475ec5d29377dfc4e01b1980165)
[01:04:45] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[01:05:00] <dundargoc[m]> wat
[01:05:48] <dundargoc[m]> Unset it so that it can't be used again?
[01:05:49] <clason[m]> > <@dundargoc:matrix.org> Is this Schr√∂dingers Telemetry or something? What does `telemetry=nil` mean and how does it differ from `telemetry=false`?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/408ce2f777346340df27f1aee04f6a59c3cfd457)
[01:06:00] <clason[m]> (it's documented)
[01:06:09] <dundargoc[m]> clason[m]: no
[01:06:12] <clason[m]>  * "null" means "prompt the user to take action (either enable or disable)"
[01:06:13] <clason[m]> yes
[01:06:23] <clason[m]> how do you think I know this?
[01:06:31] <dundargoc[m]> You wrote it.
[01:06:41] <clason[m]> https://github.com/sumneko/lua-language-server/wiki/Privacy-Policy#opt-in-policy
[01:06:49] <clason[m]> Not this time, no.
[01:06:56] <clason[m]> But I did complain loudly.
[01:07:19] <dundargoc[m]> I thought it was a lspconfig option.
[01:07:27] <dundargoc[m]> Or lsp client or whatever
[01:08:53] <clason[m]> Nope, those are server options, and this is how (this) client passes them to the server
[01:09:10] <clason[m]> (the `settings` key, that is)
[01:11:50] <dundargoc[m]> OK, I yield. It was actually in the documentation, and accessible. I mixed up the docs.
[01:11:53] <dundargoc[m]> Thanks for the help
[01:12:32] <clason[m]> no worries :)
[01:22:30] <YorickPeterse[m]> Is there an easy way to trigger `redrawtabline` every time the statusline is redrawn? I'm basically playing with tablines as a global statusline of sorts (e.g. to show the LSP status, which isn't really buffer specific)
[01:22:40] <YorickPeterse[m]> But tablines aren't redrawn as frequently it seems
[01:24:20] <YorickPeterse[m]> One hack is to use `vim.cmd('redrawtabline')` in my statusline function
[01:26:03] <YorickPeterse[m]> though that doesn't actually seem to do anything üòï
[01:27:33] *** Joins: cjb (~cjbayliss@user/cjb)
[01:29:04] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:29:05] *** Joins: dre_ (~dre@120.156.30.159)
[01:29:58] *** Joins: jensen (~jensen@65.78.100.184)
[01:30:35] *** Quits: cjb (~cjbayliss@user/cjb) (Client Quit)
[01:30:50] <ddickstein[m]> Why is it that when I open a new file the echomsg's in the ftplugin only appear if unsilent?
[01:30:55] <ddickstein[m]> This is not the case if I explicitly set the filetype
[01:31:28] *** Quits: dre (~dre@2001:8003:c932:c301:a599:763f:a8fa:b8c1) (Ping timeout: 252 seconds)
[01:31:37] <jensen> after closing a file that was modified but not saving, opening the file prompts for recovery. If I choose to recover, the .swp file needs to be manually deleted from the commandline. Are there settings to prompt for deleting after recovering to make this more convenient?
[01:32:10] *** Joins: cjb (~cjbayliss@user/cjb)
[01:32:57] <ddickstein[m]> jensen: I'm not sure if this will work, but you might be able to configure something with SwapExists and v:swapchoice + v:swapcommand
[01:33:17] <jensen> ty i will look into it
[01:33:28] <ddickstein[m]> (and v:swapname for the name of the swap file)
[01:37:35] *** Quits: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net) (Ping timeout: 264 seconds)
[01:39:31] <YorickPeterse[m]> OK apparently `vim.schedule(function() vim.cmd('redrawtabline') end)` is the magic sauce to call in my statusline. Now to think if I really want this...
[01:39:36] *** Joins: jklfds_ (~jklfds@user/jklfds)
[01:40:49] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[01:41:53] <ddickstein[m]> I've turned my question above into an issue on github since I now think this is just a bug. https://github.com/neovim/neovim/issues/16140
[01:42:02] <YorickPeterse[m]> Ah, there's an `LspProgressUpdate` autocmd
[01:44:25] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[01:45:02] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[01:51:48] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[01:53:07] *** Quits: arthurpbs (~arthurpbs@168.121.99.182) (Ping timeout: 258 seconds)
[01:54:37] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[02:04:26] *** Quits: awb99_ (~quassel@80-110-207-163.static.upcbusiness.at) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[02:06:32] *** Quits: awb99 (~quassel@80-110-207-163.static.upcbusiness.at) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[02:06:48] *** Joins: arthurpbs (~arthurpbs@168.121.99.212)
[02:09:02] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 244 seconds)
[02:10:43] *** Quits: guido (~guido@host-79-43-251-150.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[02:15:24] *** Joins: jklfds_ (~jklfds@user/jklfds)
[02:25:49] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[02:38:28] *** Joins: awb99 (~quassel@80-110-207-163.static.upcbusiness.at)
[02:42:59] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[02:43:57] *** Joins: t4rtp1ck73inthe_ (~t4rtp1ck1@2001:470:69fc:105::c40c)
[02:44:27] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:45:00] <t4rtp1ck73inthe_> Hi everyone, I have a quick question, why don't the themes I install (with vim-plug) look like the pictures on github?
[02:45:43] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 244 seconds)
[02:48:07] <t4rtp1ck73inthe_> s/look/notlook/
[02:48:21] <t4rtp1ck73inthe_> * (with vim-plug) not look like
[02:50:47] <Bowuigi[m]> Because of the terminal colorscheme
[02:51:42] <t4rtp1ck73inthe_> There is no terminal colorscheme? It's just the default colors
[02:52:40] <t4rtp1ck73inthe_> s/?/,/
[02:52:56] <Cobra[m]> then they used a colorscheme
[03:03:04] <t4rtp1ck73inthe_> alacritty?
[03:06:54] <mjlbach[m]> <YorickPeterse[m]> "Ah, there's an `LspProgressUpdat..." <- did we not documents this?
[03:11:07] <SeanDewar[m]> i dont think any of the progress stuff is documented
[03:11:50] <mjlbach[m]> womp
[03:11:54] <mjlbach[m]> bad @teto
[03:11:58] <mjlbach[m]> (just kidding <3)
[03:12:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:12:43] <mjlbach[m]> would be good to add documentation and maybe a simple example of adding progress notifications to the built in statusline
[03:18:29] <ndav1d[m]> clason: ehm I think that lua thing we talked about earlier is a real issue 
[03:18:59] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 264 seconds)
[03:19:01] <ndav1d[m]> it didn't use to be like that. It happens when I'm editing my lua config files
[03:22:21] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[03:24:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 244 seconds)
[03:26:44] *** Joins: rgrinberg (~textual@201.182.226.118)
[03:28:46] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[03:31:19] *** Quits: ixil (~ixil@82.197.178.137) (Ping timeout: 265 seconds)
[03:32:20] *** Joins: jklfds_ (~jklfds@user/jklfds)
[03:38:54] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[03:59:22] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:02:11] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 244 seconds)
[04:04:27] *** Joins: js3z (~js3z@146.115.76.107)
[04:09:48] *** Joins: jklfds_ (~jklfds@user/jklfds)
[04:16:01] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[04:16:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[04:16:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[04:17:11] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[04:20:01] *** Quits: dre_ (~dre@120.156.30.159) (Quit: Leaving)
[04:20:20] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[04:20:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[04:25:34] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 260 seconds)
[04:28:53] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:29:47] *** Quits: js3z (~js3z@146.115.76.107) (Ping timeout: 264 seconds)
[04:49:12] *** Joins: jklfds_ (~jklfds@user/jklfds)
[04:49:13] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 244 seconds)
[04:52:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[04:56:55] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[05:17:38] *** Joins: almostdvs (~almostdvs@162.154.206.233)
[05:18:20] *** Quits: almostdvs (~almostdvs@162.154.206.233) (Quit: WeeChat 2.3)
[05:18:43] *** Joins: almostdvs (~almostdvs@162.154.206.233)
[05:21:26] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:26:31] *** Joins: jklfds_ (~jklfds@user/jklfds)
[05:27:55] *** Joins: pvp0 (~pierrepri@p54ae9cca.dip0.t-ipconnect.de)
[05:28:33] *** Quits: pvp (~pierrepri@p4ff13b2b.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[05:28:33] *** pvp0 is now known as pvp
[05:33:38] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[05:34:06] *** Joins: Rue (~rue@2001-b011-1000-1d6e-b0c6-7c24-36ab-b7c1.dynamic-ip6.hinet.net)
[05:40:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:47:44] *** Joins: utraciss (~utraciss@118.100.91.150)
[05:47:51] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[05:47:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:49:14] *** Quits: jangho (~jangho@121.165.8.28) (Remote host closed the connection)
[05:53:49] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[05:56:54] *** Joins: nytpu (~nytpu@2601:283:4a01:64f0::6ff9)
[05:58:48] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[06:01:19] *** Quits: nytpu (~nytpu@2601:283:4a01:64f0::6ff9) (Client Quit)
[06:01:57] *** Joins: nytpu (~nytpu@2601:283:4a01:64f0::6ff9)
[06:04:17] *** Joins: jklfds_ (~jklfds@user/jklfds)
[06:06:19] *** Joins: emf (~emf@2620:10d:c090:400::5:b46d)
[06:10:34] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[06:26:16] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Quit: Leaving)
[06:28:16] *** Joins: jangho (~jangho@121.165.8.28)
[06:36:24] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Remote host closed the connection)
[06:40:46] *** Joins: jklfds_ (~jklfds@user/jklfds)
[06:41:14] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[06:48:31] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 265 seconds)
[06:58:17] *** Joins: awb99_ (~quassel@80-110-207-163.static.upcbusiness.at)
[06:59:47] *** Quits: awb99 (~quassel@80-110-207-163.static.upcbusiness.at) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[07:02:34] *** Joins: dre (~dre@2001:8003:c932:c301:a599:763f:a8fa:b8c1)
[07:03:30] *** Quits: awb99_ (~quassel@80-110-207-163.static.upcbusiness.at) (Ping timeout: 260 seconds)
[07:17:30] *** Joins: jklfds_ (~jklfds@user/jklfds)
[07:18:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:21:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:22:45] *** Quits: nytpu (~nytpu@2601:283:4a01:64f0::6ff9) (Ping timeout: 260 seconds)
[07:23:42] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[07:28:45] *** Joins: dre_ (~dre@120.156.30.159)
[07:31:13] *** Quits: dre (~dre@2001:8003:c932:c301:a599:763f:a8fa:b8c1) (Ping timeout: 258 seconds)
[07:34:57] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[07:38:12] *** Joins: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net)
[07:40:08] *** Quits: cjb (~cjbayliss@user/cjb) ()
[07:41:30] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Quit: Leaving)
[07:42:40] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[07:55:04] *** Joins: jklfds_ (~jklfds@user/jklfds)
[07:56:38] *** Joins: just1602 (~just1602@199.58.80.143)
[07:56:38] *** Quits: just1602_ (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[08:01:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:01:28] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Quit: Leaving)
[08:02:34] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[08:03:04] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[08:03:16] <hrsh7thhrsh7th[m> I found the reproduce way for https://github.com/neovim/neovim/issues/11439
[08:03:45] <hrsh7thhrsh7th[m> If open floating window in insert-mode, the undo sequence will be broken.
[08:08:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:09:38] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:15:53] <det0x[m]> with my lspconfig and cmp setup I'm getting auto import suggestions both in typescript and in rust 
[08:16:08] <det0x[m]> i'm not getting them in python, where pyright ls is used, though
[08:16:51] *** Quits: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[08:17:11] *** Joins: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net)
[08:18:02] <det0x[m]> does pyright support auto import completions at all? i remember seeing the suggestions in vscode, but that could've been pylance's added implementation
[08:19:04] <det0x[m]> * added implementation, or am I missing some client capabilities to be passed on to the server?
[08:30:24] *** Quits: mh72[m] (~mh72matri@2001:470:69fc:105::1:1c55) (*.net *.split)
[08:30:24] *** Quits: Tikisri[m] (~nobaratik@2001:470:69fc:105::1:1b52) (*.net *.split)
[08:30:24] *** Quits: sumneko[m] (~sumnekoma@2001:470:69fc:105::1:1a81) (*.net *.split)
[08:30:24] *** Quits: ksaveljevKonstan (~ksaveljev@2001:470:69fc:105::1:1a4f) (*.net *.split)
[08:30:24] *** Quits: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57) (*.net *.split)
[08:30:24] *** Quits: pbl616[m] (~pbl616mat@2001:470:69fc:105::1:146e) (*.net *.split)
[08:30:24] *** Quits: maxstanley[m] (~maxstanle@2001:470:69fc:105::1:17d1) (*.net *.split)
[08:30:24] *** Quits: MarcinSzewczyk[m (~wodnymatr@2001:470:69fc:105::ee42) (*.net *.split)
[08:30:24] *** Quits: QQ1598058687QQ15 (~qq1598058@2001:470:69fc:105::fe46) (*.net *.split)
[08:30:24] *** Quits: Sriram-LSriram-L (~sriram-l-@2001:470:69fc:105::1:1988) (*.net *.split)
[08:30:24] *** Quits: IcePhone[m] (~antimattr@2001:470:69fc:105::fc1a) (*.net *.split)
[08:30:24] *** Quits: fritzmark[m] (~fritzmark@2001:470:69fc:105::b65d) (*.net *.split)
[08:30:24] *** Quits: joao-vitor-sr[m] (~joao-vito@2001:470:69fc:105::1:be5) (*.net *.split)
[08:30:24] *** Quits: starmatt[m] (~starmattm@2001:470:69fc:105::d988) (*.net *.split)
[08:30:24] *** Quits: artach-lich[m] (~artach-li@2001:470:69fc:105::1:165c) (*.net *.split)
[08:30:24] *** Quits: iwoithe[m] (~iwoithema@2001:470:69fc:105::e3c5) (*.net *.split)
[08:30:24] *** Quits: tbodtTheodoreDub (~tbodt-548@2001:470:69fc:105::c83f) (*.net *.split)
[08:30:24] *** Quits: ndav1d[m] (~ndavidmat@2001:470:69fc:105::c06f) (*.net *.split)
[08:30:24] *** Quits: marcelbeumerMarc (~marcelbeu@2001:470:69fc:105::c13b) (*.net *.split)
[08:30:24] *** Quits: tejasviTejasviST (~tejasvi-5@2001:470:69fc:105::d301) (*.net *.split)
[08:30:24] *** Quits: pa-perzPabloPrez (~pa-perz-6@2001:470:69fc:105::d111) (*.net *.split)
[08:30:24] *** Quits: sheepr[m] (~sheeprmat@2001:470:69fc:105::c463) (*.net *.split)
[08:30:24] *** Quits: nvim-bot[m] (~nvim-help@2001:470:69fc:105::fb52) (*.net *.split)
[08:30:24] *** Quits: insidewhyinsidew (~insidewhy@2001:470:69fc:105::c439) (*.net *.split)
[08:30:24] *** Quits: fdschmidt93fdsch (~fdschmidt@2001:470:69fc:105::bdf7) (*.net *.split)
[08:30:24] *** Quits: thirubharath[m] (~thirubhar@2001:470:69fc:105::1:fb3) (*.net *.split)
[08:30:24] *** Quits: nullvoxpopuli[m] (~nullvoxpo@2001:470:69fc:105::f8bc) (*.net *.split)
[08:30:24] *** Quits: betmaster[m] (~betmaster@2001:470:69fc:105::1:64b) (*.net *.split)
[08:30:24] *** Quits: M3n4n[m] (~M3n4nmatr@2001:470:69fc:105::1:fa3) (*.net *.split)
[08:30:24] *** Quits: anott03anott03[m (~anott03-6@2001:470:69fc:105::bae7) (*.net *.split)
[08:30:24] *** Quits: afnanenayetAfnan (~afnanenay@2001:470:69fc:105::bd8b) (*.net *.split)
[08:30:24] *** Quits: philosoraptor[m] (~philosira@2001:470:69fc:105::1:73) (*.net *.split)
[08:30:24] *** Quits: quintikquintik[m (~quintik-5@2001:470:69fc:105::3b41) (*.net *.split)
[08:30:24] *** Quits: dominiks[m] (~dominiksm@2001:470:69fc:105::1:15b4) (*.net *.split)
[08:30:24] *** Quits: ddickstein[m] (~metroid82@2001:470:69fc:105::bd73) (*.net *.split)
[08:30:24] *** Quits: rafcamletRafaCam (~rafcamlet@2001:470:69fc:105::5262) (*.net *.split)
[08:30:24] *** Quits: jsgvJesusGalvan[ (~jsgv-5915@2001:470:69fc:105::407f) (*.net *.split)
[08:30:24] *** Quits: seandewarSeanDew (~seandewar@2001:470:69fc:105::3a90) (*.net *.split)
[08:30:24] *** Quits: ShougoShougo[m] (~shougo-55@2001:470:69fc:105::3a97) (*.net *.split)
[08:30:24] *** Quits: theol0403TheoLem (~theol0403@2001:470:69fc:105::3aa7) (*.net *.split)
[08:30:24] *** Quits: sunjonSenghanBri (~sunjon-5f@2001:470:69fc:105::3aa1) (*.net *.split)
[08:30:24] *** Quits: Nehu[m]1 (~nehumozil@2001:470:69fc:105::3a5e) (*.net *.split)
[08:30:24] *** Quits: NomisIV[m] (~nomisivma@2001:470:69fc:105::bbf) (*.net *.split)
[08:30:24] *** Quits: ludbeksurenshres (~ludbek-55@2001:470:69fc:105::3a47) (*.net *.split)
[08:30:24] *** Quits: luisiaccLuisCC[m (~luisiacc-@2001:470:69fc:105::3a48) (*.net *.split)
[08:30:24] *** Quits: jsatkJesseAtkins (~jsatk-588@2001:470:69fc:105::3a30) (*.net *.split)
[08:30:24] *** Quits: kybrkarlyerkes[m (~kybr-586e@2001:470:69fc:105::3a3d) (*.net *.split)
[08:30:24] *** Quits: JavierLpezmunite (~javierlgm@2001:470:69fc:105::3a26) (*.net *.split)
[08:30:24] *** Quits: izhakjakovIzhakJ (~izhakjako@2001:470:69fc:105::3a20) (*.net *.split)
[08:30:24] *** Quits: ilayali[m] (~ilayalima@2001:470:69fc:105::3a1a) (*.net *.split)
[08:30:24] *** Quits: fabs[m] (~ffrelingm@2001:470:69fc:105::3a07) (*.net *.split)
[08:30:24] *** Quits: berven[m] (~bervenmat@2001:470:69fc:105::39c5) (*.net *.split)
[08:30:24] *** Quits: XVilkaAntonKochk (~xvilka-55@2001:470:69fc:105::b845) (*.net *.split)
[08:30:24] *** Quits: ttiuraniTimoTiur (~ttiurani-@2001:470:69fc:105::dc2d) (*.net *.split)
[08:30:24] *** Quits: disrupted[m] (~disrupted@2001:470:69fc:105::1:a92) (*.net *.split)
[08:30:24] *** Quits: BorweBrianOrwe[m (~borwe-5a5@2001:470:69fc:105::bc07) (*.net *.split)
[08:30:24] *** Quits: brookhongbrookho (~brookhong@2001:470:69fc:105::ba5e) (*.net *.split)
[08:30:24] *** Quits: M7-x230[m] (~M7-x230ma@2001:470:69fc:105::4710) (*.net *.split)
[08:30:24] *** Quits: dexmad[m] (~dexmadmat@2001:470:69fc:105::e056) (*.net *.split)
[08:30:24] *** Quits: VimIsCool32_gitl (~vimiscool@2001:470:69fc:105::ddfe) (*.net *.split)
[08:30:24] *** Quits: enjoinedmot[m] (~enjoinedm@2001:470:69fc:105::1a0e) (*.net *.split)
[08:30:24] *** Quits: FlyingToast[m] (~flyingtoa@2001:470:69fc:105::17d0) (*.net *.split)
[08:30:24] *** Quits: t4rtp1ck73inthe_ (~t4rtp1ck1@2001:470:69fc:105::c40c) (*.net *.split)
[08:30:24] *** Quits: gpanders[m] (~greggpand@2001:470:69fc:105::e9af) (*.net *.split)
[08:30:25] *** Quits: unrust[m] (~unrustmat@2001:470:69fc:105::1:712) (*.net *.split)
[08:30:25] *** Quits: spin0za[m] (~spin0zama@2001:470:69fc:105::de91) (*.net *.split)
[08:30:25] *** Quits: hypn0z[m] (~hypn0zmat@2001:470:69fc:105::c65b) (*.net *.split)
[08:30:25] *** Quits: AmilaPerera[m] (~amilapere@2001:470:69fc:105::52c) (*.net *.split)
[08:30:25] *** Quits: losuler[m] (~losulerma@2001:470:69fc:105::dffd) (*.net *.split)
[08:30:25] *** Quits: KittyOwO[m] (~wrinklehu@2001:470:69fc:105::84e) (*.net *.split)
[08:30:25] *** Quits: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb) (*.net *.split)
[08:30:25] *** Quits: CalebMaclennan[m (~alerquema@2001:470:69fc:105::18d) (*.net *.split)
[08:30:25] *** Quits: meck[m] (~meckmeckd@2001:470:69fc:105::3a51) (*.net *.split)
[08:30:25] *** Quits: anniehallmoon (~anniehall@2001:470:69fc:105::c190) (*.net *.split)
[08:30:25] *** Quits: Dima[m] (~reddima10@2001:470:69fc:105::366) (*.net *.split)
[08:30:25] *** Quits: beerman (~beerman@2001:470:69fc:105::8ef) (*.net *.split)
[08:30:25] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (*.net *.split)
[08:30:25] *** Quits: digital_mystik (~digital-m@user/digital-mystik/x-0300775) (*.net *.split)
[08:30:25] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (*.net *.split)
[08:30:25] *** Quits: choucavalier (~choucaval@2001:41d0:a:2158::1) (*.net *.split)
[08:30:25] *** Quits: prime (~prime@user/prime) (*.net *.split)
[08:30:25] *** Quits: gravndal (~weechat@user/ravndal) (*.net *.split)
[08:30:25] *** Quits: DTE_ (~DTE@nat-pool-fab-t.redhat.com) (*.net *.split)
[08:30:25] *** Quits: yaymukund (~yaymukund@user/yaymukund) (*.net *.split)
[08:30:25] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[08:30:25] *** Quits: lazyrat (~lazycat@user/lazycat) (*.net *.split)
[08:30:25] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (*.net *.split)
[08:30:25] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (*.net *.split)
[08:30:25] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[08:30:25] *** Quits: cjones (~cjones@207.34.165.164) (*.net *.split)
[08:30:25] *** Quits: nova (novasenco@user/nova) (*.net *.split)
[08:30:25] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[08:30:25] *** Quits: danieln (~danieln@2a03:4000:3b:565:98ae:d8ff:febd:d69a) (*.net *.split)
[08:30:35] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[08:30:36] *** Joins: choucavalier (~choucaval@peanutbuttervibes.com)
[08:30:39] *** Joins: yaymukund (~yaymukund@185.21.216.136)
[08:30:40] *** Joins: DTE (~DTE@nat-pool-fab-t.redhat.com)
[08:30:41] *** Joins: lazycat (~lazycat@mail.nubecula.net)
[08:30:45] *** Joins: novasenco (novasenco@user/nova)
[08:30:45] *** Quits: lazycat (~lazycat@mail.nubecula.net) (Changing host)
[08:30:45] *** Joins: lazycat (~lazycat@user/lazycat)
[08:30:58] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[08:30:58] *** Joins: danieln (~danieln@erebor.danieln.de)
[08:31:02] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[08:31:24] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:31:28] *** Joins: cjones (~cjones@207.34.165.164)
[08:31:30] *** Joins: prime (~prime@user/prime)
[08:31:36] *** danieln is now known as Guest6599
[08:31:39] *** Joins: AmilaPerera[m] (~amilapere@2001:470:69fc:105::52c)
[08:31:40] *** Joins: digital_mystik (~digital-m@user/digital-mystik/x-0300775)
[08:31:45] *** Joins: KittyOwO[m] (~wrinklehu@2001:470:69fc:105::84e)
[08:32:15] *** Joins: ksaveljevKonstan (~ksaveljev@2001:470:69fc:105::1:1a4f)
[08:32:16] *** Joins: jklfds_ (~jklfds@user/jklfds)
[08:32:51] *** Joins: losuler[m] (~losulerma@2001:470:69fc:105::dffd)
[08:32:53] *** Joins: sunjonSenghanBri (~sunjon-5f@2001:470:69fc:105::3aa1)
[08:33:04] *** Joins: CalebMaclennan[m (~alerquema@2001:470:69fc:105::18d)
[08:33:09] *** Joins: sumneko[m] (~sumnekoma@2001:470:69fc:105::1:1a81)
[08:33:23] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 264 seconds)
[08:33:25] *** Joins: Tikisri[m] (~nobaratik@2001:470:69fc:105::1:1b52)
[08:33:27] *** Joins: mh72[m] (~mh72matri@2001:470:69fc:105::1:1c55)
[08:33:37] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[08:33:40] *** Joins: FlyingToast[m] (~flyingtoa@2001:470:69fc:105::17d0)
[08:33:52] *** Joins: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb)
[08:34:17] *** Joins: gpanders[m] (~greggpand@2001:470:69fc:105::e9af)
[08:34:24] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[08:35:07] *** Joins: beerman (~beerman@2001:470:69fc:105::8ef)
[08:35:10] *** Joins: anniehallmoon (~anniehall@2001:470:69fc:105::c190)
[08:35:12] *** Joins: meck[m] (~meckmeckd@2001:470:69fc:105::3a51)
[08:35:57] *** Joins: t4rtp1ck73inthe_ (~t4rtp1ck1@2001:470:69fc:105::c40c)
[08:36:09] *** Joins: spin0za[m] (~spin0zama@2001:470:69fc:105::de91)
[08:36:09] *** Joins: hypn0z[m] (~hypn0zmat@2001:470:69fc:105::c65b)
[08:36:12] *** Joins: unrust[m] (~unrustmat@2001:470:69fc:105::1:712)
[08:37:09] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[08:37:22] *** Joins: ilayali[m] (~ilayalima@2001:470:69fc:105::3a1a)
[08:37:22] *** Joins: XVilkaAntonKochk (~xvilka-55@2001:470:69fc:105::b845)
[08:37:23] *** Joins: enjoinedmot[m] (~enjoinedm@2001:470:69fc:105::1a0e)
[08:37:23] *** Joins: NomisIV[m] (~nomisivma@2001:470:69fc:105::bbf)
[08:37:24] *** Joins: dexmad[m] (~dexmadmat@2001:470:69fc:105::e056)
[08:37:24] *** Joins: VimIsCool32_gitl (~vimiscool@2001:470:69fc:105::ddfe)
[08:37:25] *** Joins: M7-x230[m] (~M7-x230ma@2001:470:69fc:105::4710)
[08:37:25] *** Joins: disrupted[m] (~disrupted@2001:470:69fc:105::1:a92)
[08:37:26] *** Joins: berven[m] (~bervenmat@2001:470:69fc:105::39c5)
[08:37:26] *** Joins: ttiuraniTimoTiur (~ttiurani-@2001:470:69fc:105::dc2d)
[08:37:26] *** Joins: brookhongbrookho (~brookhong@2001:470:69fc:105::ba5e)
[08:37:26] *** Joins: BorweBrianOrwe[m (~borwe-5a5@2001:470:69fc:105::bc07)
[08:37:27] *** Joins: izhakjakovIzhakJ (~izhakjako@2001:470:69fc:105::3a20)
[08:37:27] *** Joins: fabs[m] (~ffrelingm@2001:470:69fc:105::3a07)
[08:37:27] *** Joins: jsatkJesseAtkins (~jsatk-588@2001:470:69fc:105::3a30)
[08:37:27] *** Joins: JavierLpezmunite (~javierlgm@2001:470:69fc:105::3a26)
[08:37:27] *** Joins: sheepr[m] (~sheeprmat@2001:470:69fc:105::c463)
[08:37:28] *** Joins: luisiaccLuisCC[m (~luisiacc-@2001:470:69fc:105::3a48)
[08:37:28] *** Joins: Nehu[m]1 (~nehumozil@2001:470:69fc:105::3a5e)
[08:37:28] *** Joins: kybrkarlyerkes[m (~kybr-586e@2001:470:69fc:105::3a3d)
[08:37:29] *** Joins: seandewarSeanDew (~seandewar@2001:470:69fc:105::3a90)
[08:37:29] *** Joins: theol0403TheoLem (~theol0403@2001:470:69fc:105::3aa7)
[08:37:29] *** Joins: ShougoShougo[m] (~shougo-55@2001:470:69fc:105::3a97)
[08:37:29] *** Joins: dominiks[m] (~dominiksm@2001:470:69fc:105::1:15b4)
[08:37:29] *** Joins: ludbeksurenshres (~ludbek-55@2001:470:69fc:105::3a47)
[08:37:30] *** Joins: quintikquintik[m (~quintik-5@2001:470:69fc:105::3b41)
[08:37:30] *** Joins: jsgvJesusGalvan[ (~jsgv-5915@2001:470:69fc:105::407f)
[08:37:30] *** Joins: rafcamletRafaCam (~rafcamlet@2001:470:69fc:105::5262)
[08:37:30] *** Joins: ddickstein[m] (~metroid82@2001:470:69fc:105::bd73)
[08:37:34] *** Joins: nullvoxpopuli[m] (~nullvoxpo@2001:470:69fc:105::f8bc)
[08:37:34] *** Joins: joao-vitor-sr[m] (~joao-vito@2001:470:69fc:105::1:be5)
[08:37:34] *** Joins: afnanenayetAfnan (~afnanenay@2001:470:69fc:105::bd8b)
[08:37:34] *** Joins: betmaster[m] (~betmaster@2001:470:69fc:105::1:64b)
[08:37:34] *** Joins: anott03anott03[m (~anott03-6@2001:470:69fc:105::bae7)
[08:37:34] *** Joins: M3n4n[m] (~M3n4nmatr@2001:470:69fc:105::1:fa3)
[08:37:34] *** Joins: philosoraptor[m] (~philosira@2001:470:69fc:105::1:73)
[08:37:35] *** Joins: marcelbeumerMarc (~marcelbeu@2001:470:69fc:105::c13b)
[08:37:35] *** Joins: nvim-bot[m] (~nvim-help@2001:470:69fc:105::fb52)
[08:37:35] *** Joins: tejasviTejasviST (~tejasvi-5@2001:470:69fc:105::d301)
[08:37:35] *** Joins: insidewhyinsidew (~insidewhy@2001:470:69fc:105::c439)
[08:37:35] *** Joins: pa-perzPabloPrez (~pa-perz-6@2001:470:69fc:105::d111)
[08:37:35] *** Joins: thirubharath[m] (~thirubhar@2001:470:69fc:105::1:fb3)
[08:37:35] *** Joins: fdschmidt93fdsch (~fdschmidt@2001:470:69fc:105::bdf7)
[08:37:36] *** Joins: iwoithe[m] (~iwoithema@2001:470:69fc:105::e3c5)
[08:37:36] *** Joins: tbodtTheodoreDub (~tbodt-548@2001:470:69fc:105::c83f)
[08:37:36] *** Joins: artach-lich[m] (~artach-li@2001:470:69fc:105::1:165c)
[08:37:40] *** Joins: starmatt[m] (~starmattm@2001:470:69fc:105::d988)
[08:37:40] *** Joins: ndav1d[m] (~ndavidmat@2001:470:69fc:105::c06f)
[08:37:41] *** Joins: IcePhone[m] (~antimattr@2001:470:69fc:105::fc1a)
[08:37:41] *** Joins: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57)
[08:37:41] *** Joins: fritzmark[m] (~fritzmark@2001:470:69fc:105::b65d)
[08:37:41] *** Joins: maxstanley[m] (~maxstanle@2001:470:69fc:105::1:17d1)
[08:37:41] *** Joins: Sriram-LSriram-L (~sriram-l-@2001:470:69fc:105::1:1988)
[08:37:41] *** Joins: pbl616[m] (~pbl616mat@2001:470:69fc:105::1:146e)
[08:37:41] *** Joins: QQ1598058687QQ15 (~qq1598058@2001:470:69fc:105::fe46)
[08:37:41] *** Joins: MarcinSzewczyk[m (~wodnymatr@2001:470:69fc:105::ee42)
[08:41:45] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 258 seconds)
[08:42:17] *** Joins: Ekho (~Ekho@user/ekho)
[08:48:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:48:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:51:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[08:58:15] *** Joins: nfip^ (~nfip@wsip-68-227-92-38.mc.at.cox.net)
[09:00:00] *** Quits: xenrox (~xenrox@user/xenrox) (Remote host closed the connection)
[09:02:19] *** Joins: xenrox (~xenrox@user/xenrox)
[09:12:54] *** Joins: jklfds_ (~jklfds@user/jklfds)
[09:15:20] *** Quits: Haricofail (~Haricophi@2a01:e34:ed36:e850:5eeb:a6f5:f0e2:d745) (Ping timeout: 260 seconds)
[09:17:11] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 245 seconds)
[09:18:08] *** Joins: Haricophile (~Haricophi@2a01:e34:ed36:e850:5eeb:a6f5:f0e2:d745)
[09:29:45] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 244 seconds)
[09:29:55] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[09:31:16] <kylo252[m]> <det0x[m]> "does pyright support auto import..." <- don't people use `isort` for that? 
[09:31:46] *** Joins: jklfds_ (~jklfds@user/jklfds)
[09:36:31] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[09:40:40] *** Joins: Axel_isk (~MoMo@2a00:1851:1:b25:3112:74f:e53e:5ed4)
[09:43:27] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Read error: Connection reset by peer)
[09:53:35] *** Joins: jklfds_ (~jklfds@user/jklfds)
[09:55:50] *** Joins: just1602_ (~just1602@199.58.80.143)
[09:55:51] *** Quits: just1602 (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[09:58:27] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[09:59:13] *** Quits: Axel_isk (~MoMo@2a00:1851:1:b25:3112:74f:e53e:5ed4) (Quit: Leaving)
[10:00:06] *** Quits: dre_ (~dre@120.156.30.159) (Quit: Leaving)
[10:19:02] *** Joins: just1602 (~just1602@199.58.80.143)
[10:19:02] *** Quits: just1602_ (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[10:26:26] <mjlbach[m]> det0x: pyright completion works fine for me
[10:28:12] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:28:52] *** Joins: jklfds_ (~jklfds@user/jklfds)
[10:33:24] <numToStr[m]> mjlbach: I need your help :) https://neovim.discourse.group/t/eslint-yarn-workspaces/1279 
[10:34:07] <mjlbach[m]> I appreciate the vote of confidence, but I think you'll find me absolutely useless when it comes to anything involving web technologies
[10:34:15] <mjlbach[m]> beyond my geocities page I made in like 2003
[10:35:58] <numToStr[m]> Now I am sad :(
[10:36:58] <mjlbach[m]> Now I'm sad you're sad, are you happy?
[10:37:37] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 265 seconds)
[10:37:44] <numToStr[m]> No you stay happy. I am moving to coc.nvim for now :) 
[10:38:06] <mjlbach[m]> womp
[10:38:17] <clason[m]> That is absolutely the worst thing to say for making mjlbach happy...
[10:38:26] <mjlbach[m]> it actually does make me happy
[10:38:46] <mjlbach[m]> I like it when people use coc.nvim, or nvim-lsp, or any productivity boosting tool. Don't care which one
[10:38:56] <clason[m]> Fair :)
[10:39:16] <maverun[m]> 0.o
[10:39:18] <mjlbach[m]> side note I am looking for experienced web developers interested in diving deep into LSP-land and helping with questions like this
[10:39:49] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Ping timeout: 258 seconds)
[10:40:37] <numToStr[m]> Honestly, If I haven't been writing js/ts. I've moved to nvim LSP ages ago.
[10:41:02] <mjlbach[m]> it's historically been our "worst case"
[10:41:37] <mjlbach[m]> dozens of language servers, all with their own settings, performance issues (hopefully fixed), non-compliant language servers which are actually vscode extensions shoehorned into the LSP spec
[10:42:57] <numToStr[m]> yeah, AFAIK the most non-compliant server is tsserver. 
[10:43:05] <mjlbach[m]> yup
[10:43:10] <elianiva[m]> numToStr: do you have a minimal repo I can try? I have a similar setup but I'm using npm workspace and it's been fine
[10:44:06] <numToStr[m]> elianiva: It's my work stuff. I'll try to make on for you.
[10:46:41] <numToStr[m]> mjlbach: I am interested in LSP stuff. Where can I find more stuff to read (except the lsp spec)?
[10:57:28] <mjlbach[m]> Depends on what you are interested in, the combination of spec and reading through a couple client implementations is the best reference. Otherwise getting familiar with the documentation/usage of various language servers is good. We need both people working on the client and people who are power users of various language servers to answer questions
[11:00:58] *** Quits: mahlon (~mahlon@martini.nu) (Quit: PotatoTech)
[11:01:18] *** Joins: mahlon (~mahlon@martini.nu)
[11:10:40] *** Joins: jklfds_ (~jklfds@user/jklfds)
[11:15:09] *** Joins: zro (~zro@user/zro)
[11:15:27] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[11:18:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:19:41] *** Quits: mmh (~mmh@173-165-141-73-utah.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[11:22:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:23:32] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[11:26:23] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[11:31:25] *** Joins: ixil (~ixil@82.197.178.137)
[11:45:53] *** Joins: jklfds_ (~jklfds@user/jklfds)
[11:46:55] *** Quits: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[11:48:46] <sunjonSenghanBri> hrsh7th: I've had something breaking my undo for a _long_ time and not been able to work out what caused it
[11:50:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:50:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:50:55] *** Quits: inara (~inara@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[11:52:03] *** Joins: Intelo (~Intelo@88.246.77.74)
[11:52:35] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 264 seconds)
[11:53:19] *** Joins: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net)
[11:53:33] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[11:54:07] *** Joins: inara (~inara@static.38.6.217.95.clients.your-server.de)
[11:54:57] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:55:45] <dmitmel[m]> same issue here
[11:59:40] <sunjonSenghanBri> "open floating window in insert-mode" what do you mean by that though?
[11:59:46] <sunjonSenghanBri> "open floating window in insert-mode" what do you mean by that though?
[12:01:06] *** Joins: composite[m] (~composite@2001:470:69fc:105::1:22dc)
[12:02:15] <clason[m]> like nvim-cmp's new floating window pum-a-like
[12:02:31] <clason[m]> (unsurprisingly :))
[12:02:38] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[12:02:56] *** Joins: g4mby (~g4mby@user/g4mby)
[12:03:18] <sunjonSenghanBri> it has an "open in insert" that isn't simply "open _then_ insert-mode" ?
[12:03:28] *** Joins: towb (~bwot@user/towb)
[12:03:45] <clason[m]> yes, exactly
[12:03:47] <sunjonSenghanBri> I'm just trying to figure out how the cause of my symptoms could be the same, if I don't/can't do that action
[12:03:51] <clason[m]> because it's triggered while typing
[12:05:04] <clason[m]> well, we haven't found the cause yet
[12:05:26] <clason[m]> just a fully reproducible set of circumstances where it manifests
[12:05:41] <clason[m]> (there may be others)
[12:09:40] *** Joins: tamere (~tamere@user/loodoons)
[12:09:46] <tamere> Hello guys! üëã
[12:10:08] <tamere> How can I undo a movement made by the ; key?
[12:10:34] <tamere> If I pressed f, then repeat with the ; key
[12:10:40] <sunjonSenghanBri> I'd actually assumed mine was due to a plugin (and myself) not understanding `C-g>u` incantations
[12:10:57] <maverun[m]> tamere: `,` iirc
[12:11:04] <maverun[m]> it goes opposite direction
[12:11:12] <tamere> Thank you guys <3
[12:11:28] <tamere> That was I'm looking for üí™
[12:11:32] <maverun[m]> `:h ;` will show youlist 
[12:11:35] <nvim-bot[m]> Links to referenced help pages:
[12:11:35] <nvim-bot[m]> * [`;`](https://neovim.io/doc/user/motion.html#;) in *motion.txt*
[12:13:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:16:58] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[12:25:15] *** Joins: composite[m]1 (~composite@2001:470:69fc:105::1:22df)
[12:26:59] *** Joins: jklfds_ (~jklfds@user/jklfds)
[12:29:51] <windwp[m]> <sunjonSenghanBri> ""open floating window in insert..." <- i can understand it .my english skill is on same level at hrsh7th :(
[12:30:08] *** Quits: JesseGibson[m] (~psycholla@2001:470:69fc:105::c082) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: neverkas[m] (~neverkasm@2001:470:69fc:105::f976) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: JacksonLudwig[m] (~jacksonlu@2001:470:69fc:105::1:112) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: grazfather[m] (~grazfathe@2001:470:69fc:105::1:b8) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: nullvoxpopuli[m] (~nullvoxpo@2001:470:69fc:105::f8bc) (Quit: You have been kicked for being idle)
[12:30:35] <sunjonSenghanBri> hi
[12:30:37] <sunjonSenghanBri> and what do you mean?
[12:31:11] <windwp[m]> sunjon (Senghan Bright)  i see the new loading icon on github and i remember you have nyancat  effect
[12:31:37] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[12:34:42] <sunjonSenghanBri> that got a bit lost in time. I made a better way to do 'sprites' and didn't change nyan to work with it (as I didn't really like it as a plain animation)
[12:36:24] <windwp[m]> what is a new way to do sprites
[12:36:44] <sunjonSenghanBri> well. it's a long-ish explanation.
[12:37:09] <sunjonSenghanBri> revolves around using ffi/c structures so you can use bit operations to create and apply masks
[12:37:17] <sunjonSenghanBri> instead of itterating through x/y
[12:37:32] <sunjonSenghanBri> fwiw, I found a really nice sprite set to show it off
[12:37:39] <sunjonSenghanBri> just never got round to doing it
[12:37:45] <sunjonSenghanBri> https://i.stack.imgur.com/zl6oh.gif
[12:38:41] <maverun[m]> if sunjon said he did this in neovim, i would believe him.
[12:38:48] <sunjonSenghanBri> that's like 64x64px, which you can render in 32 lines
[12:39:06] <sunjonSenghanBri> which is reasonable for a window
[12:40:45] *** Quits: tamere (~tamere@user/loodoons) (Ping timeout: 256 seconds)
[12:44:33] <windwp[m]> is that shadow belong to sprite image.
[12:44:43] <sunjonSenghanBri> yeah
[12:44:52] <sunjonSenghanBri> everything's pre-rendered
[12:51:35] <low-key> is it intentional that tree-sitter-viml doesn't highlight stuff like <C-N> and <leader>?
[12:51:45] <low-key> noticed that those bits are highlighted when i disable tree-sitter
[12:53:30] <low-key> and i'm also missing highlighting for let g:pencil#wrapModeDefault = 'soft'
[12:53:35] <low-key> which is on a line on its own
[12:57:41] <clason[m]> you have to distinguish "not captured" (the parser doesn't mark them) and "not highlighted" (the colorscheme does not apply a (distinguishable) highlight to the group)
[12:58:02] <clason[m]> you can use https://github.com/nvim-treesitter/playground (`:TSHighlightCapturesUnderCursor`) for this
[12:59:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[12:59:33] <low-key> I do have playground installed
[12:59:37] <low-key> Never tried it out though
[12:59:49] <clason[m]> well, now's your chance :)
[13:00:01] <low-key> Says no highlight groups found for the keybindings stuff
[13:00:42] <low-key> And that's what it says for the let line as well
[13:00:46] <low-key> That doesn't sound right
[13:01:17] <clason[m]> then open an issue on the nvim-treesitter repo
[13:02:04] <low-key> the viml one, right?
[13:02:13] *** Parts: g4mby (~g4mby@user/g4mby) (WeeChat 3.3)
[13:02:22] <clason[m]> No, I'd start with the nvim-treesitter repo
[13:02:38] <clason[m]> they might tell you to report it upstream, though
[13:02:56] <low-key> Ah, alright
[13:02:56] <clason[m]> but I don't know whether this is a missing capture or something missing in the parser
[13:03:02] <low-key> I thought it would be the other way around
[13:03:11] <low-key> https://github.com/lokesh-krishna/dotfiles/blob/main/moonfly/config/nvim/init.vim
[13:03:13] <clason[m]> (the viml parser is fairly new)
[13:03:27] <low-key> could you just check the file out and see if it's the same on your end too
[13:03:32] <low-key> if you don't mind 
[13:03:47] <clason[m]> I don't use tree-sitter
[13:03:54] *** Joins: jklfds_ (~jklfds@user/jklfds)
[13:04:13] <low-key> Oh, alright :)
[13:04:27] <clason[m]> (you can also ask on their Zulip, if you want to check where to report first: https://nvim-treesitter.zulipchat.com)
[13:04:55] <low-key> What are those bits called though? Stuff like <leader> and <C-m> and <CR>?
[13:05:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:05:11] <clason[m]> special keys?
[13:05:47] <low-key> Thanks
[13:06:14] <clason[m]> I don't think there's an "official" name for them -- I'm happy to be corrected, though
[13:07:41] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[13:07:56] <sunjonSenghanBri> I called them "special" in the keyboard thing, because that's what they were called in the libtermkey code
[13:08:49] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:08:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[13:10:15] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[13:10:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:11:13] <sunjonSenghanBri> https://github.com/neovim/libtermkey/blob/b7fe3af141c53cce71a244282b69ea860452120a/termkey.h.in#L31
[13:12:31] <low-key> In what keyboard thing?
[13:13:45] <sunjonSenghanBri> it's WIP, I linked a couple of screenshots last night if you have the scrollback
[13:13:53] <low-key> Zulip is kinda hard to wrap my head around
[13:14:03] <sunjonSenghanBri> just a statistics thing for number fetishists
[13:14:05] <low-key> Oooh
[13:21:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:21:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:28:38] <dundargoc[m]> Hmmm. Sumneko says that `client` in... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ad6a6153ec13ffac016c9395d934fa9d4984e166)
[13:28:53] <clason[m]> not if you don't use it
[13:28:57] <dundargoc[m]>  * Hmmm. Sumneko says that `client` in... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ec6810d035a4c6e483afa00d3a78d56ce004215b)
[13:29:00] <dundargoc[m]> Brilliant
[13:29:22] <clason[m]> you can pass it to further functions; I use it for `nvim-lsp-compl`
[13:29:53] <dundargoc[m]> That sounds suspiciously like autocompletion. What, can't type fast enough?
[13:30:00] <dundargoc[m]> üò§
[13:30:02] <clason[m]> (you didn't specify where you found that function)
[13:30:08] <clason[m]> yes. I'm lazy
[13:30:12] <dundargoc[m]> lspconfig?
[13:30:32] <clason[m]> where in lspconfig?
[13:31:03] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 244 seconds)
[13:31:15] <dundargoc[m]> [In the readme](https://github.com/neovim/nvim-lspconfig#keybindings-and-completion)
[13:31:37] <clason[m]> yep, it's not needed there
[13:31:43] <clason[m]> but innocuous, of course
[13:31:59] <dundargoc[m]> or is it? something something vsauce
[13:32:11] <dundargoc[m]> Anyway, thanks for the help üôè
[13:32:22] <clason[m]> üëçÔ∏è
[13:32:48] <maverun[m]> i finally got hop work in visual mode... it should be `<cmd>` instead of `:`, so i am curious, why is that a case?
[13:33:05] <maverun[m]> does `<cmd>` overwrite a range?
[13:33:16] *** Joins: mmh (~mmh@173-165-141-73-utah.hfc.comcastbusiness.net)
[13:33:52] <maverun[m]> `- Because <Cmd> avoids mode-changes (unlike ":") it does not trigger` ah ü§î
[13:38:51] *** Joins: Leethium (~Leethium@92.188.170.43)
[13:43:44] *** Joins: jklfds_ (~jklfds@user/jklfds)
[13:48:03] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[13:48:06] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[13:49:16] *** Joins: heavydee[m] (~heavydeem@2001:470:69fc:105::f0b8)
[13:49:18] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[13:52:20] <saltrocklamp[m]> https://github.com/nvim-lua/completion-nvim when did this go into archive mode? i was using it and very satisfied üòû
[13:54:39] <saltrocklamp[m]> looks like the announcement was 2 weeks ago, has it been unmaintained for a while?
[13:55:50] <clason[m]> yes, for quite a while 
[13:55:58] <clason[m]> (vigoux tried for a bit, but he's just too busy)
[13:57:26] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:02:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[14:07:22] *** Quits: xenrox (~xenrox@user/xenrox) (Remote host closed the connection)
[14:08:51] *** Joins: guido (~guido@93-40-193-148.ip40.fastwebnet.it)
[14:09:41] *** Joins: xenrox (~xenrox@user/xenrox)
[14:12:23] <fourstepper[m]> Hi, I am trying to remove automatic newline comments in nvim in a lua config, and this unfortunately doesn't work:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/85b4c4722a4b7f8c9ca37556655e5e13065745a4)
[14:14:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:18:57] *** Joins: jklfds_ (~jklfds@user/jklfds)
[14:19:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 244 seconds)
[14:20:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:24:12] *** Quits: guido (~guido@93-40-193-148.ip40.fastwebnet.it) (Quit: WeeChat 3.3)
[14:24:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[14:26:21] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 245 seconds)
[14:27:12] <zq_> is it just me or does :cnext compensate for file modifications
[14:43:38] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:48:02] *** Joins: guido (~guido@host-80-116-25-172.retail.telecomitalia.it)
[14:48:23] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 264 seconds)
[14:52:00] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-139.ethz.ch)
[14:55:43] *** Quits: nfip^ (~nfip@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 265 seconds)
[15:01:05] *** Joins: jklfds_ (~jklfds@user/jklfds)
[15:03:34] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (Read error: Connection reset by peer)
[15:05:59] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[15:08:44] <YorickPeterse[m]> zq_: It doesn't ish. IIRC if the line is the same it's generally smart enough to find it
[15:08:46] <YorickPeterse[m]> but if the line changes things get annoying
[15:09:16] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:10:47] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:24:49] *** Quits: ixil (~ixil@mpp-cp1-natpool-1-139.ethz.ch) (Remote host closed the connection)
[15:26:52] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:28:22] * nmuntz87[m] uploaded an image: (10KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/QaOerKOwpnDVhQdRSQPEcjPV/neovim.png >
[15:28:25] <nmuntz87[m]> i'm experiencing some odd redrawing problems under WSL. for example i was just on line 27 of a file and pressed 'A' to append, then pressed enter to jump to the next line and for whatever reason the previous line got "inserted" even though it's not there. as soon as i type text over it its fine. any ideas?
[15:28:59] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-139.ethz.ch)
[15:31:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[15:32:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:35:14] *** Joins: jklfds_ (~jklfds@user/jklfds)
[15:36:35] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 244 seconds)
[15:36:55] <nmuntz87[m]> s/i'm experiencing some odd redrawing problems under WSL. for example i was just on line 27 of a file and pressed 'A' to append, then pressed enter to jump to the next line and for whatever reason the previous line got "inserted" even though it's not there. as soon as i type text over it its fine. any ideas?/i'm experiencing some odd redrawing problems under WSL. for example i was just on line 27 of a file and pressed 'A' to append, then
[15:36:55] <nmuntz87[m]> pressed enter to jump to the next line and for whatever reason the line that comes next (line 29) got drawn in my current line 28 even though the text is not really there. writing something on it triggers a redraw which eventually fixes the problem but its pretty annoying. i consistently see this problem on WSL/
[15:37:09] <Bowuigi[m]> C-l
[15:37:17] <Bowuigi[m]> To redraw
[15:37:49] <Bowuigi[m]> `Control+l` in common notation
[15:38:06] <nmuntz87[m]> interesting. had to press C-I like 4 times for the line to properly get "cleared"
[15:38:23] <nmuntz87[m]> i tried with a different terminal and same problem so i don't think it's the terminal
[15:38:39] <Bowuigi[m]> There was also a command to force redraw/update
[15:39:01] <kjir[m]> Hi all, is there a way to reload or autoreload the configuration when making changes to it? Or is it recommended to restart the editor?
[15:39:05] <Bowuigi[m]> Could you show the $TERM env variable?
[15:39:24] <Bowuigi[m]> kjir[m]: `:source $MYVIMRC`
[15:39:25] <nmuntz87[m]> my $TERM is set to xterm-256color
[15:39:41] <Bowuigi[m]> Bowuigi[m]: Also works with Lua configs
[15:40:01] <Bowuigi[m]> If you change the colorscheme you have to source it too
[15:40:17] <Bowuigi[m]> nmuntz87[m]: Hmmm
[15:41:01] <nmuntz87[m]> i wonder if it could be too many plugins trying to draw stuff and WSL1 is just slow?
[15:41:20] <Bowuigi[m]> Try setting updatetime to something small like 500
[15:41:39] <Bowuigi[m]> nmuntz87[m]: Probably
[15:41:53] <kjir[m]> Thanks Bowuigi much appreciated. Any downside/issue I should be aware of? Is there a problem with adding an `autocmd` to watch for changes on those files?
[15:42:20] <clason[m]> Beware autocommands
[15:42:49] <clason[m]> re-sourcing files that set autocommands will just add them, so you get duplicate (triplicate, etc.) autocommands
[15:42:51] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[15:43:11] <kjir[m]> Ah that is a fair point
[15:43:15] <clason[m]> also, `require` caches modules, so re-sourcing a file that requires a module will _not_ reload that module
[15:43:33] <nmuntz87[m]> Bowuigi[m]: updatetime doesnt seem to make too much difference. ill experiment disabling plugins. a vanilla neovim with no config doesnt show the problem but then again no lsp, treesitter, etc :D
[15:43:33] <clason[m]> really, my advice is to just restart neovim -- only way to be sure you get a clean state
[15:43:53] <Bowuigi[m]> nmuntz87[m]: Hmmm no idea
[15:43:54] <clason[m]> (and after your initial setup, you're not fiddling with config too much, so it will become a non-issue)
[15:44:20] <Bowuigi[m]> clason[m]: Yep
[15:44:40] <Bowuigi[m]> It isn't that annoying
[15:44:47] *** Joins: Guest53 (~Guest53@152.67.220.169)
[15:46:04] *** Joins: studiedlist[m] (~studiedli@2001:470:69fc:105::f2f3)
[15:46:26] *** Joins: Ilyu (~quassel@78.202.228.230)
[15:47:52] *** Quits: guido (~guido@host-80-116-25-172.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[15:48:06] <kjir[m]> The thing I might tweak from time to time is some key mapping
[15:48:33] *** Joins: guido (~guido@host-80-116-25-172.retail.telecomitalia.it)
[15:48:48] <kjir[m]> And it bothers me a little to restart the neovim because I might have a few buffers open and I have to recreate the whole things
[15:48:50] <kjir[m]> s/things/thing/
[15:49:19] <kjir[m]> I should probably look into `telescope-session-manager` :)
[15:49:23] <kjir[m]> s/)/smile:/
[15:49:32] <kjir[m]> s/:)/üòÉ/
[15:50:31] *** Quits: Guest53 (~Guest53@152.67.220.169) (Quit: Client closed)
[15:52:25] *** Joins: wren^ (~wren@wsip-68-227-92-38.mc.at.cox.net)
[15:57:28] *** Joins: Guest53 (~Guest53@152.67.220.169)
[16:02:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:07:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:08:31] *** Quits: ixil (~ixil@mpp-cp1-natpool-1-139.ethz.ch) (Ping timeout: 260 seconds)
[16:09:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:12:52] *** Quits: Guest53 (~Guest53@152.67.220.169) (Quit: Client closed)
[16:14:47] *** Joins: jklfds_ (~jklfds@user/jklfds)
[16:16:05] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:19:43] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[16:20:40] <det0x[m]> > det0x: pyright completion works fine for me
[16:20:40] <det0x[m]> do you mean the auto import collections by that? in an empty file, when you type `time` or `sleep`, do you see the import completions show up? because otherwise standard completions are working well for me as well
[16:23:45] *** Quits: just1602 (~just1602@199.58.80.143) (Changing host)
[16:23:45] *** Joins: just1602 (~just1602@user/just1602)
[16:25:32] <det0x[m]> s/collections/completions/
[16:32:39] *** Joins: Guest53 (~Guest53@152.67.220.169)
[16:34:09] *** Quits: Guest53 (~Guest53@152.67.220.169) (Client Quit)
[16:34:27] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:34:34] *** Joins: Guest53 (~Guest53@152.67.220.169)
[16:36:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:46:18] *** Quits: guido (~guido@host-80-116-25-172.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[16:49:28] *** Joins: jklfds_ (~jklfds@user/jklfds)
[16:52:27] *** Joins: arkurious (~arkurious@user/arkurious)
[16:53:52] *** Joins: Guest5759 (~Guest57@1-175-74-143.dynamic-ip.hinet.net)
[16:54:02] <saltrocklamp[m]> <clason[m]> "(vigoux tried for a bit, but he..." <- too bad. i certainly don't have the time or expertise required.
[16:54:27] <Guest5759> Can I ask questions about neovim configurations here?
[16:55:32] *** Quits: Guest5759 (~Guest57@1-175-74-143.dynamic-ip.hinet.net) (Client Quit)
[16:56:45] <YorickPeterse[m]> Guest5759: just ask your question üôÇ
[16:57:02] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 265 seconds)
[16:59:05] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ac0b:666b:acc0:2229) (Ping timeout: 260 seconds)
[16:59:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:298f:8978:b1b0:174e)
[17:01:00] *** Quits: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566) (Quit: WeeChat 3.3)
[17:03:26] <det0x[m]> > <@det0x:matrix.org> > det0x: pyright completion works fine for me
[17:03:26] <det0x[m]> > 
[17:03:26] <det0x[m]> > do you mean the auto import completions by that? in an empty file, when you type `time` or `sleep`, do you see the import completions show up? because otherwise standard completions are working well for me as well
[17:03:26] <det0x[m]> others can check this too, shouldn't take more than 10 seconds
[17:07:49] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[17:09:02] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[17:09:23] *** Quits: X-Scale (~ARM@92.250.96.217) (Ping timeout: 264 seconds)
[17:09:23] *** X-Scale` is now known as X-Scale
[17:10:04] *** Joins: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566)
[17:17:03] <low-key> is the best way to get spell correction on neovim to use z= ?
[17:17:19] <low-key> i was hoping there would be some popup window awesomeness for this too
[17:18:08] <gpanders[m]> if you are using Telescope there is `:Telescope spell_suggest`
[17:20:14] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 265 seconds)
[17:21:02] *** Quits: chenqisu1 (~xirndc@183.217.203.91) (Quit: Leaving)
[17:26:42] *** Quits: Guest53 (~Guest53@152.67.220.169) (Quit: Client closed)
[17:28:28] *** Joins: jklfds_ (~jklfds@user/jklfds)
[17:31:46] *** Quits: neptunepink (~neptune@mail.digitalkingdom.org) (Ping timeout: 252 seconds)
[17:32:07] <low-key> had no idea!
[17:32:12] <low-key> Lemme give that a shot
[17:32:42] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:32:59] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[17:35:05] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:35:17] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:36:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 244 seconds)
[17:37:59] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:42:09] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 244 seconds)
[17:42:17] <low-key> thank you gpanders[m]! :D
[17:42:20] <low-key> love it!
[17:42:51] *** Joins: thysermip (~thysermip@200-158-179-227.dsl.telesp.net.br)
[17:44:42] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:44:55] *** Quits: thysermip (~thysermip@200-158-179-227.dsl.telesp.net.br) (Client Quit)
[17:46:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:47:30] *** Joins: guido (~guido@host-80-116-25-172.pool80116.interbusiness.it)
[17:49:17] *** Joins: signal-walker[m] (~signal-wa@2001:470:69fc:105::1:2318)
[17:56:48] *** Joins: neptunepink (~neptune@173-13-139-238-sfba.hfc.comcastbusiness.net)
[18:00:40] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:01:07] *** Joins: Bo-RuBo-Ru[m] (~bo-ru-612@2001:470:69fc:105::1:231a)
[18:01:08] <Bo-RuBo-Ru[m]> Hello, I'm trying to setup nvim-cmp, but I ran into come troubles
[18:02:06] <Bo-RuBo-Ru[m]> This is part of my config file:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a62c8d2b9d77d42935d3bd519e3c62fcd4e84dca)
[18:02:33] <Bo-RuBo-Ru[m]> This is the error I got:
[18:02:47] <Bo-RuBo-Ru[m]> E5108: Error executing lua [string ":lua"]:9: attempt to call field 'snippets' (a table value)
[18:03:58] *** Joins: jklfds_ (~jklfds@user/jklfds)
[18:05:13] *** Joins: Guest3435 (~Guest34@1-175-74-143.dynamic-ip.hinet.net)
[18:05:55] *** Quits: wren^ (~wren@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[18:06:05] <Bo-RuBo-Ru[m]> Any idea on how to fix it?
[18:08:27] *** Quits: neptunepink (~neptune@173-13-139-238-sfba.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[18:09:58] <muniter[m]> snippet is supposed to be a function, and you wrote a table that has an item that is a function.
[18:10:06] *** Joins: szgy (~szgy@181.47.27.68)
[18:10:19] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[18:10:48] <muniter[m]> Check cmp readme and you will spot the differences.
[18:14:43] <Bo-RuBo-Ru[m]> @muniter:matrix.org Ok now it works, but it isn't showing any completion... Any advice?
[18:15:51] <muniter[m]> https://youtu.be/_DnmphIwnjo this cool video might help
[18:18:20] <Bo-RuBo-Ru[m]> üëç
[18:18:29] *** Quits: Guest3435 (~Guest34@1-175-74-143.dynamic-ip.hinet.net) (Quit: Client closed)
[18:23:14] <Bo-RuBo-Ru[m]> It turns out that I just have one small mistake made in my config file, everything works after fixing it
[18:23:15] <Bo-RuBo-Ru[m]> :)
[18:28:38] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 244 seconds)
[18:38:04] <hgc_> neovim is a good text editor!
[18:44:56] *** Joins: jklfds_ (~jklfds@user/jklfds)
[18:46:12] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:49:08] <dundargoc[m]> I'm about to try install and use packer.nvim. Wish me luck. If I don't make it...it's been an honor working alongside you all these past few months. Until next time.
[18:49:50] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[18:51:22] *** Joins: Mattykins (~Mattykins@2601:588:4180:30:b103:ce1a:9c48:cec9)
[18:56:24] <dundargoc[m]> What's an "opt"?
[18:56:24] <dundargoc[m]> ```
[18:56:24] <dundargoc[m]> -- Only required if you have packer configured as `opt`
[18:56:24] <dundargoc[m]> ```
[18:56:51] <dundargoc[m]>  * What's an "opt"?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1f384e3e17e93f0430f7deb6b26d76f8b25925cc)
[18:57:01] <dundargoc[m]>  * What's an "opt"?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b0c101396bb5d41e7a06037c524bd9c57ca3e28e)
[18:57:48] *** Joins: qaph (~weechat@user/qaph)
[18:59:01] <dundargoc[m]> OK found it, it's a packer thing:
[18:59:01] <dundargoc[m]> ```
[18:59:01] <dundargoc[m]>   opt_default = false, -- Default to using opt (as opposed to start) plugins
[18:59:01] <dundargoc[m]> ```
[19:01:13] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 258 seconds)
[19:01:15] *** qaph is now known as kron
[19:03:41] *** Quits: Mattykins (~Mattykins@2601:588:4180:30:b103:ce1a:9c48:cec9) (Remote host closed the connection)
[19:11:51] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[19:17:07] *** Quits: Intelo (~Intelo@88.246.77.74) (Quit: Client closed)
[19:21:25] <dundargoc[m]> I'm lost. I don't understand the quickstart section.
[19:21:32] *** Joins: jklfds_ (~jklfds@user/jklfds)
[19:22:32] <clason[m]> It's more of an illustration of the various things you can do.
[19:22:41] <dundargoc[m]> So I need to add a plugin specification to `~/.config/nvim/lua/plugins.lua` and then ?
[19:23:02] <clason[m]> first, you need to clone the packer repo into `start`
[19:23:10] <dundargoc[m]> clason[m]: words don't have to mean things :)
[19:23:16] <dundargoc[m]> wait
[19:23:22] <dundargoc[m]> what is start?
[19:23:26] <clason[m]> it means that it's not meant to be a fully working (minimal) example
[19:23:36] <clason[m]> OK, let's start from the top :)
[19:23:48] <clason[m]> You know about packages, right?
[19:23:51] <clason[m]> !h packages
[19:23:56] <nvim-bot[m]> Links to referenced help pages:
[19:23:56] <clason[m]> (and `:h startup`)
[19:23:56] <nvim-bot[m]> * [`packages`](https://neovim.io/doc/user/repeat.html#packages) in *repeat.txt*
[19:23:58] <nvim-bot[m]> Links to referenced help pages:
[19:23:58] <nvim-bot[m]> * [`startup`](https://neovim.io/doc/user/starting.html#startup) in *starting.txt*
[19:24:01] <dundargoc[m]> ehh sure
[19:24:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:24:26] <dundargoc[m]> It's a plugin but actually it's a package.
[19:24:38] *** Quits: utraciss (~utraciss@118.100.91.150) (Quit: %quit from znc%)
[19:24:39] <clason[m]> good. then you know that anything you put in `packpath` under a `start` directory gets sourced automatically on startup
[19:25:02] <clason[m]> ("packages" are _one_ way of getting vim to load plugins)
[19:25:14] <clason[m]> (it's not the only way -- for example, there used to be vimballs)
[19:25:25] <dundargoc[m]> yesbox. Quick interjection.
[19:25:56] <neovim[m]> just gonna cough put this here cough: https://github.com/nvim-lua/kickstart.nvim/blob/1a77d318794193ffe65ad7d3b955575dc6e62ef9/init.lua#L1-L42
[19:26:11] <dundargoc[m]> I've installed packer through AUR so I think the first part should be solved. If not I'll go back and revise it.
[19:26:33] <clason[m]> I don't recommend mixing system packages and vim plugins
[19:26:57] <clason[m]> especially since you want to fiddle with them
[19:27:13] <dundargoc[m]> OK then. Lemme just uninstall it and we can take it from the top :)
[19:27:18] <clason[m]> and, most importantly, constantly keep them up to date -- which packer does -- to keep in step with HEAD
[19:27:32] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[19:28:04] <clason[m]> neovim[m]: that works, but I think it's a better investment to do it from scratch 
[19:29:08] <neovim[m]> yeah but you can at the very least do a `:lua print(vim.fn.stdpath 'data' .. '/site/pack/packer/start/packer.nvim')` to get the directory where you should put it
[19:29:40] <dundargoc[m]> ...
[19:29:43] <dundargoc[m]> ...
[19:29:44] <dundargoc[m]> ...
[19:29:49] <clason[m]> sure, but since dundar is on Arch, the line from the packer README is actually exactly what he wants anyway
[19:30:07] *** Quits: biz_e_b[m] (~bizebmatr@2001:470:69fc:105::c48f) (Quit: You have been kicked for being idle)
[19:30:07] *** Quits: Andrew[m] (~avs-76mat@2001:470:69fc:105::df54) (Quit: You have been kicked for being idle)
[19:30:12] <dundargoc[m]> require('packer').startup(function()
[19:30:12] <dundargoc[m]>   local use = require('packer').use
[19:30:12] <dundargoc[m]>   use 'wbthomason/packer.nvim' -- Package manager
[19:30:12] <dundargoc[m]> end)
[19:30:15] <dundargoc[m]> that's it
[19:30:21] <neovim[m]> clason[m]: yeah nvm just ignore me
[19:30:26] <dundargoc[m]> ...............
[19:30:29] <clason[m]> actually, I'd recommend another way
[19:30:38] <dundargoc[m]> Go on...
[19:30:56] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:31:05] <clason[m]> so you have cloned the repo into the directory given in the README?
[19:31:52] *** Joins: nytpu (~nytpu@2601:283:4a01:64f0::6ff9)
[19:33:05] <dundargoc[m]> Yes!
[19:34:04] <dundargoc[m]> Aka I've manually run "git clone...." in the command line like the following:
[19:34:04] <dundargoc[m]> ```
[19:34:04] <dundargoc[m]> git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
[19:34:04] <dundargoc[m]> ```
[19:34:12] <dundargoc[m]>  * Aka I've manually run "git clone...." in the command line like the following:
[19:34:12] <dundargoc[m]> ```bash
[19:34:12] <dundargoc[m]> git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
[19:34:12] <dundargoc[m]> ```
[19:34:19] <clason[m]> great
[19:34:49] <clason[m]> What I like to do is to have one Lua file per plugin, roughly.
[19:35:10] <clason[m]> So I'd create `~/.config/nvim/plugin/packer.lua`
[19:35:15] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[19:35:28] *** Joins: X-Scale` (~ARM@31.22.144.14)
[19:35:32] <clason[m]> (this way it gets sourced automatically and you don't have to `require` it)
[19:36:28] *** X-Scale` is now known as X-Scale
[19:36:44] <dundargoc[m]> aha
[19:36:56] <dundargoc[m]> OK, `packer.lua` created.
[19:37:05] *** Joins: zro (~zro@user/zro)
[19:37:08] <clason[m]> good
[19:38:46] <clason[m]> Now for the hot take: the format given in the quickstart is an unfortunate skeuomorph (as it mimics vim-plug for no good reason apart from the similarity)
[19:38:56] <clason[m]> Luckily, there is a neater way.
[19:39:39] <clason[m]> In your `packer.lua`, first create a table of plugins:
[19:39:39] <clason[m]> ```lua
[19:39:39] <clason[m]> local plugins = {
[19:39:39] <clason[m]>   'wbthomason/packer',
[19:39:39] <neovim[m]> okay now I'm interested
[19:39:42] <clason[m]>  * In your `packer.lua`, first create a table of plugins:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/6e08674425aaef3ed1a32cf43743171f63bc971a)
[19:40:02] <Bowuigi[m]> > <@dundargoc:matrix.org> ```lua... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3c3db80d5c65bb7edcb1f4d4ca38f4cd1b0a0b7d)
[19:40:07] <clason[m]> all your plugins go in that table -- the format is exactly the same as in the quickstart, you just omit the `use`
[19:40:10] <dundargoc[m]> TIL skeuomorph. I'm learning lots from you :)
[19:40:33] <dundargoc[m]> I don't know :)
[19:40:45] <clason[m]> so, for example, you can add the line
[19:40:45] <clason[m]> ```lua
[19:40:45] <clason[m]>   { 'lewis6991/gitsigns.nvim', requires = 'nvim-lua/plenary.nvim' },
[19:40:45] <clason[m]> ```
[19:40:52] <clason[m]> and so on
[19:41:33] <neovim[m]> then what, `for _, v in pairs(plugins) do use(v) end`?
[19:41:45] <clason[m]> wait for it...
[19:42:13] * Bowuigi[m] sent a lua code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/eb43866cadfc76fd1ad134b770499291d559acbc
[19:42:14] <clason[m]> dundargoc: good so far?
[19:42:21] <Bowuigi[m]> Scope protected
[19:42:30] <Bowuigi[m]> I use Paq-nvim anyway
[19:42:35] <Bowuigi[m]> I like it a lot
[19:42:36] <clason[m]> (start with a minimal set of plugins; you can add more later)
[19:43:11] <dundargoc[m]> clason[m]: Give me like, 2 minutes
[19:43:31] <clason[m]> sure, no hurry. let me know when you're good
[19:44:16] * Bowuigi[m] sent a lua code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/ce80d55ee1da7f04e85c671db35301c2f31cfab6
[19:44:48] <dundargoc[m]> Ok, so now my packer looks like the following:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1028b73900ba6f49257c3380fd885aa1e16b1934)
[19:45:19] <clason[m]> good. next is config (optional)
[19:45:26] <dundargoc[m]> > <@bowuigi---now-more-based:kde.org> ```lua... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ba23c1036a6e2cbeb3359ba8491a27b61ac83a31)
[19:45:34] <dundargoc[m]> clason[m]: I'm listening
[19:45:46] <clason[m]> add a `local config` table
[19:45:57] <Bowuigi[m]> dundargoc[m]: Pretty sure paq has lazy loading, but I never used it myself
[19:46:10] <clason[m]> this takes any of the configuration values listed in https://github.com/wbthomason/packer.nvim#custom-initialization
[19:46:54] <clason[m]> for example, if you want a nice float instead of a split for the progress report, you could do... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/2732635f061a2fac627f3769ec3e42e94a5edac4)
[19:47:23] <clason[m]> (I like `esc` instead of `q` for closing things)
[19:47:23] <dundargoc[m]> I'll check out paq later, pinky swear. Let me learn packer first :)
[19:47:46] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[19:47:54] <Bowuigi[m]> dundargoc[m]: Sure
[19:48:19] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[19:48:21] <dundargoc[m]> > <@clason:matrix.org> for example, if you want a nice float instead of a split for the progress report, you could do... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/28592306e34f41b9b982f40a1797461419660c04)
[19:48:45] <clason[m]> there's more, but you probably don't want to touch it
[19:49:36] <Bowuigi[m]> dundargoc[m]: Select + middle click or just select "+p
[19:49:58] <clason[m]> So now that you have the `plugins` table and the `config` table, you just feed them to packer:
[19:49:59] <clason[m]> ```lua
[19:49:59] <clason[m]> require('packer').startup { plugins, config = config }
[19:49:59] <clason[m]> ```
[19:50:09] <clason[m]> and done
[19:50:20] <neovim[m]> wait that's a thing??
[19:50:38] <clason[m]> save, start a new nvim instance, and `:PackerSync`
[19:51:02] <p00f[m]> dundargoc[m]: don't you mean y and p?
[19:51:23] <clason[m]> settle down, class, we can talk about that later
[19:51:33] <clason[m]> this is about dundar setting up packer
[19:52:53] <dundargoc[m]> > <@clason:matrix.org> So now that you have the `plugins` table and the `config` table, you just feed them to packer:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d78a70ad1ad02abe974215198bb9bec049df2a82)
[19:53:03] <clason[m]> this goes at the bottom of `packer.lua`
[19:53:27] <clason[m]> local plugins = {...}
[19:53:27] <clason[m]> local config = {...}
[19:53:27] <clason[m]> require('packer').startup { plugins, config = config }
[19:53:47] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[19:54:21] <neovim[m]> that is so much cleaner, thanks for the neatness upgrade clason ;)
[19:54:56] <dundargoc[m]> lmao stop freeloading knowledge from me :)
[19:55:10] <clason[m]> It's all documented in https://github.com/wbthomason/packer.nvim#the-startup-function, but easy to miss if you don't know what you're looking for ;)
[19:55:16] <dundargoc[m]> Well technically from clason but you know what I mean
[19:55:38] <neovim[m]> or do I? cue VSauce music
[19:55:44] <neovim[m]> s/cue/_cue/, s/VSauce/Vsauce/, s/music/music_/
[19:55:46] <dundargoc[m]> clason[m]: No but I really tried to read it this time around.
[19:56:07] <clason[m]> Yep, I believe you, is what I'm saying ;)
[19:56:12] <neovim[m]> clason[m]: have you ever brought up making the `startup { plugins }` method the way shown in the readme over the `use` stuff?
[19:56:22] <clason[m]> probably
[19:56:54] <clason[m]> as well as the "non-functional" (or rather, not recommended) examples chosen for it
[19:57:07] <neovim[m]> there is the familiarity point if you're coming from vim-plug but I would say make this method the one showcased first and then add an addendum, "hey if you prefer a vim-plug style here you go"
[19:57:17] <clason[m]> indeed
[19:57:44] <neovim[m]> how long has this been a thing? because I had no idea it existed
[19:57:52] <clason[m]> basically forever
[19:58:00] <neovim[m]> wow
[20:01:28] <dundargoc[m]> Is packer supposed to be in the list of plugins it takes care of?
[20:01:35] *** Joins: jklfds_ (~jklfds@user/jklfds)
[20:01:41] <clason[m]> yes
[20:02:04] <Bowuigi[m]> dundargoc[m]: Yes, for self update
[20:02:10] <Bowuigi[m]> It is a good idea
[20:02:15] <clason[m]> it doesn't have to be (since you already installed it manually in a directory from which Nvim will source it automatically), but this way you can keep it updated
[20:03:18] <clason[m]> (this is the big difference to vim-plug: as long as you don't do any conditional loading, packer is only used for installing, updating, and removing plugins, not for loading them)
[20:05:09] <dundargoc[m]> aha, and it lets neovim take care of the loading. OK, nice.
[20:05:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[20:05:13] <clason[m]> s/(this is the big difference to vim-plug: as long as you don't do any conditional loading, packer is only used for installing, updating, and removing plugins, not for loading them)/(this is the big difference to vim-plug: as long as you don't do any conditional loading, packer is _only_ used for installing, updating, and removing plugins, not for loading them -- that happens automatically through Vim's `package` mechanism)/
[20:06:04] <dundargoc[m]> It keeps trying to remove itself when I run PackerClean.
[20:06:13] * dundargoc[m] uploaded an image: (172KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/fBiIFPxdUghwFbSDXBZOZRkf/packer.png >
[20:06:22] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[20:06:40] <muniter[m]> Cool way to manage packages, I got to try setting packer like that.
[20:06:44] <Bowuigi[m]> Lol
[20:06:59] <clason[m]> hmm
[20:07:31] <clason[m]> you have it in your `plugins` table?
[20:07:52] <dundargoc[m]> local plugins = {
[20:07:52] <dundargoc[m]>   'wbthomason/packer',
[20:07:52] <dundargoc[m]>   { 'lewis6991/gitsigns.nvim', requires = 'nvim-lua/plenary.nvim' },
[20:07:52] <dundargoc[m]> }
[20:08:04] <clason[m]> should be `packer.nvim`
[20:08:18] <clason[m]> (my bad)
[20:08:32] <clason[m]> * (my bad, I didn't copy&paste that line and just typed from memory)
[20:08:38] <dundargoc[m]> aha
[20:08:40] <dundargoc[m]> NW
[20:10:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:10:36] <dundargoc[m]> There's a compiled file. Am I supposed to treat it as a cache (aka .gitignore it) or do I version control it?
[20:11:01] <clason[m]> it gets regenerated on every `:PackerSync`, so ignore it
[20:11:05] <dundargoc[m]> OK
[20:11:26] <dundargoc[m]> Aaaaaaaaaaaand I think that's it
[20:11:35] <clason[m]> (I put it somewhere else to not have it in my config dir, but that's a bit brittle, so I won't recommend it)
[20:11:41] <p00f[m]> <dundargoc[m]> "packer.png" <- damn nice statusline
[20:11:51] <dundargoc[m]> Thank you sensei!
[20:11:57] <dundargoc[m]> üôè
[20:12:02] <clason[m]> happy to help :)
[20:12:19] <dundargoc[m]> Actually super thank you for real. Means a lot.
[20:12:41] <clason[m]> then I'm super happy to have helped :)
[20:12:58] <dundargoc[m]> Expect a reddit post soon.
[20:13:46] <dundargoc[m]> Phrases like "lazy loading", "blazingly fast" and "zero-cost abstractions" will be in the title.
[20:14:03] <clason[m]> search for duplicates first
[20:14:10] <dundargoc[m]> p00f[m]: You mean tmux?
[20:15:10] <p00f[m]> oh tmux
[20:15:14] <dundargoc[m]> https://github.com/a5ob7r/tmux-cz
[20:16:00] <dundargoc[m]> Kinda over the neovim statusline thing since I've gotten burned by performance hits one too many time.
[20:16:59] <neovim[m]> might I ask why that theme and not https://github.com/dracula/tmux
[20:17:31] <dundargoc[m]> Give me 2 minutes
[20:18:32] <clason[m]> dundargoc[m]: lualine has gotten pretty nice :)
[20:19:13] <clason[m]> and is also quite clean to set up :]
[20:19:19] <p00f[m]> i see
[20:19:28] * dundargoc[m] uploaded an image: (200KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/lcXaOAxQcSdqEktVUxKvlXED/lol.png >
[20:20:00] <p00f[m]> i want to try lualine but i got expressline working how i want+ i know how to customise it
[20:20:12] <p00f[m]> it's like throwing it all away
[20:20:18] <clason[m]> expressline is of course even faster
[20:20:32] <p00f[m]> :0
[20:20:40] <neovim[m]> dundargoc[m]: lol
[20:20:54] <neovim[m]> you're welcome
[20:21:00] <dundargoc[m]> Thank
[20:21:49] <neovim[m]> clason[m]: the best statusline is clearly uivonim's built-in statusline, and I'm not biased at all or anything
[20:21:51] <dundargoc[m]> Not sure if my city, the state I live in, current temperature and wifi SSID was absolutely essential but whatever.
[20:22:00] <clason[m]> neovim[m]: clearly
[20:22:44] <neovim[m]> dundargoc[m]: 46 degrees is perfect coding temperature
[20:23:28] *** Joins: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net)
[20:23:43] <dundargoc[m]> lmao what are these config options?
[20:23:50] <zostj> hi guys! was wondering if anyone could take a look at my neovim lua config. i'm getting some errors when i'm trying to require the treesitter config file that holds the code for the modules :(
[20:24:07] <dundargoc[m]> # default is 1, it can accept any number and 0 disables padding.
[20:24:07] <dundargoc[m]> set -g @dracula-left-icon-padding 1
[20:24:09] <bfredl> dundargoc[m]: why are you having fahrenheits in G√∂teborg
[20:24:24] <dundargoc[m]> There is also an option to switch to celsius
[20:24:49] <dundargoc[m]>  * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d78e2d8222f0e2585e492a190cb8113289e0bef5)
[20:24:59] <clason[m]> clearly Kelvin is the correct option
[20:25:07] <neovim[m]> I want this
[20:25:09] <dundargoc[m]> zostj: you have link?
[20:25:13] <zostj> https://imgur.com/a/LPvMum9
[20:25:30] <neovim[m]> also the errors would be helpful
[20:26:58] <dundargoc[m]> Is this init.lua or init.vim
[20:27:03] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:27:23] <zostj> lua
[20:27:31] <zostj> with packer
[20:27:33] <zostj> https://imgur.com/a/lLXzoSy
[20:27:47] <zostj> first image is when i try to open my plugins.lua
[20:27:54] <zostj> second image is when i try to :PackerCompile
[20:28:14] <dundargoc[m]> neovim[m]: The theme is nice, but not really a huge fan of the out-of-box settings. It's possible to fix it but I don't really want to become a statusline power user.
[20:30:00] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:30:31] *** Joins: pablo5896[m] (~pablo5896@2001:470:69fc:105::1:2339)
[20:32:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:36:26] *** Joins: zro (~zro@user/zro)
[20:36:45] *** Joins: jklfds_ (~jklfds@user/jklfds)
[20:38:43] <neovim[m]> zostj: I think you should be doing `require('nvim-treesitter.configs')` (note the 's') instead of .config
[20:41:29] <zostj> ah ya lol :D
[20:41:32] <zostj> got it working
[20:42:10] <neovim[m]> \o/
[20:42:54] <zostj> by the way, when i'm requiring a config file in packer, does it matter if i type it as config = function() require'blah' end or require('blah') ?
[20:43:38] <neovim[m]> yes, I think the former needs to be done, i.e. the `function() ... end` wrapping
[20:43:51] <neovim[m]> since otherwise you're requiring the module immediately and then setting `config` equal to that, which is not what you presumably want
[20:44:06] <clason[m]> no, can be either
[20:44:11] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:44:15] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[20:44:20] <clason[m]> `config` also takes a string
[20:44:21] <neovim[m]> really? oh
[20:44:40] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[20:44:41] <clason[m]> of course, if you want multiple commands, you need to wrap it in a function
[20:44:48] <neovim[m]> but that's still not doing `config = require('blah')`? it'd be `config = 'blah'` then?
[20:45:18] <clason[m]> no, it'd be `config = 'require("blah")'`
[20:45:35] <clason[m]> (since `require('blah')` is the Lua command)
[20:46:53] <neovim[m]> oh interesting, TIL
[20:47:34] <zostj> 'cuz i see this in packer's github page: config = function() require'statusline' end
[20:47:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:47:44] <zostj> require'blah' end
[20:47:54] <clason[m]> yes, that works
[20:48:10] <zostj> but other places i see require('blah') end
[20:48:26] <clason[m]> no, that doesn't work
[20:48:29] <zostj> so i was just wondering if there's any difference between them :\
[20:48:32] <clason[m]> it's either a function or a string
[20:48:48] <clason[m]> and `function() ... end` defines an anonymous function
[20:49:02] <clason[m]> well, one is a function and one is a string :}
[20:49:24] <zostj> one more question :D
[20:49:48] <zostj> sometimes i see stuff like this in packer:
[20:49:51] <zostj> config = function() require('gitsigns').setup() end
[20:50:10] <clason[m]> yes?
[20:50:13] <clason[m]> same thing
[20:50:20] <zostj> in my case i require('my_treesitter_config_file') wihch runs the whole file
[20:51:09] <zostj> but config = function() require('gitsigns').setup() isn't really requiring a CUSTOM file locally, but a setup function that already exist internally in the plugin right?
[20:51:26] <clason[m]> you can also just put `my_treesitter_config_file.lua` in `.config/nvim/plugin`, then it'll be run automatically
[20:52:20] <clason[m]> yes, but it makes no difference whether the lua module `require`d is from a plugin or your own -- as long as it's in the `package.path` (which includes `.config/nvim/lua`)
[20:52:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:53:23] <clason[m]> (`require` is for loading modules, like Python's `import` -- if you just want to run a script, it's overkill)
[20:53:41] <zostj> oh i see. so in my case i can also use config = function() require('plugins/nvim-treesitter').setup() end then
[20:54:20] <zostj> which will just run that setup function inside that file, whereas the other way runs that whole file
[20:54:52] <clason[m]> no, I don't think that'll work
[20:55:10] <clason[m]> at least, that's a weird place for the nvim-treesitter module
[20:55:46] <clason[m]> but, yes, you can put the contents of your `my_treesitter_config_file.lua` inside the `config = function() ... end` to the same effect
[20:56:14] <clason[m]> it all depends on how much you want to mix plugin specification and configuration
[20:56:45] *** Joins: jklfds_ (~jklfds@user/jklfds)
[20:57:04] <zostj> thank you so much clason[m] :D
[20:57:27] <clason[m]> no problem!
[21:03:07] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[21:09:36] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[21:11:48] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[21:12:48] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[21:15:09] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[21:16:45] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[21:20:31] <Bowuigi[m]> <zostj> "but other places i see require..." <- If functions only have one parameter and the given parameter is a string or a table then they can be called without parentheses
[21:21:42] <bew[m]> Is there something wrong with my mapping? it seems like it does 'j' all the time...
[21:21:43] <bew[m]> `vnoremap <expr> J  (line("'<") == line("'>")) ? "j" : "J"`
[21:24:31] <zostj> Bowuigi[m]: i see. thank you :D
[21:24:54] <Bowuigi[m]> Np
[21:31:05] *** Joins: jklfds_ (~jklfds@user/jklfds)
[21:31:07] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[21:32:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:35:47] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 264 seconds)
[21:40:52] <dmitmel[m]> bew: IIRC, the < and > marks are set just after exiting the visual mode
[21:41:36] <bew[m]> Hmm.. I want to know how many lines there is in the ongoing visual selection, didn't find a function for this (yet)
[21:42:10] <dmitmel[m]> don't take my word for it, check with an `:echo` or something
[21:42:13] <dmitmel[m]> I really don't remember
[21:43:27] <bew[m]> exactly I want to check if the visual selection has only one line, if anyone knows something about it...
[21:43:31] <dmitmel[m]> here's an overengineered solution https://stackoverflow.com/a/28398359/12005228
[21:44:53] <bew[m]> I guess I could do sth like `<cmd>exe "normal! " . (line("'<") == line("'>")) ? "j" : "J"`
[21:44:53] <bew[m]> But meh....
[21:45:13] <bew[m]> s/`/<cr>`/
[21:45:15] <dmitmel[m]> OH I FOUND IT
[21:45:41] <dmitmel[m]> in the visual mode `line('v')` gives the opposite end of the selection
[21:45:59] <dmitmel[m]> i.e.: `line('.')` is the cursor line, but it is also one of the ends of the selection
[21:46:27] <bew[m]> yess nice
[21:46:29] <dmitmel[m]> so `line('.') == line('v')` should do the trick for you
[21:46:42] <bew[m]> yeah works well üëå
[21:47:40] <bew[m]>  * yeah works well üëå
[21:47:40] <bew[m]> thanks!
[21:47:40] * dmitmel[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/3a319928e08de03ea95dbdacde13cf0b7eb9a081
[21:47:55] <dmitmel[m]> `v` - `Differs from |'<| in that it's updated right away.`
[21:48:02] <dmitmel[m]> so I was right
[21:48:35] <bew[m]> yep, didn't really understood what it meant until you mentioned it
[21:48:44] <bew[m]> s/mentioned/explained/
[21:49:03] <bew[m]> s/yep, didn't really understood what it meant until you mentioned it/yep I saw that earlier, but didn't really understood what it meant until you explained it/
[21:49:09] <bew[m]> s/yep, didn't really understood what it meant until you mentioned it/yep I saw that earlier, but didn't really understood what it meant until you said it/
[21:49:16] <dmitmel[m]> `min([line('.'), line('v')])` should give the start of the selection and `max([line('.'), line('v')])` will return the end
[21:49:43] <dmitmel[m]> s/`min([line('.'), line('v')])` should give the start of the selection and `max([line('.'), line('v')])` will return the end/`min([line('.'), line('v')])` should give the ~~start~~ first line of the selection and `max([line('.'), line('v')])` will return the ~~end~~ final one/
[21:49:56] <dmitmel[m]> huh, strikethrough doesn't work
[21:50:12] <bew[m]> ~test~
[21:50:22] <bew[m]> ¬Ø\_(„ÉÑ)_/¬Ø well
[21:50:54] <clason[m]> <del>test</del>
[21:50:59] <dmitmel[m]> s/`min([line('.'), line('v')])` should give the start of the selection and `max([line('.'), line('v')])` will return the end/`min([line('.'), line('v')])` should give the <del>start</del> first line of the selection and `max([line('.'), line('v')])` will return the <del>end</end> final one/
[21:51:08] <dmitmel[m]> s/`min([line('.'), line('v')])` should give the start of the selection and `max([line('.'), line('v')])` will return the end/`min([line('.'), line('v')])` should give the <del>start</del> first line of the selection and `max([line('.'), line('v')])` will return the <del>end</del> final one/
[21:55:10] <neovim[m]> element wants <del>blah</del> for strikethrough
[21:55:22] *** Joins: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net)
[22:06:03] *** Joins: jklfds_ (~jklfds@user/jklfds)
[22:13:23] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 244 seconds)
[22:17:58] <wbthomason[m]> <zostj> "by the way, when i'm requiring a..." <- Just to note: what clason said is correct, but if your module returns a function directly, the `config = require (...)` form is still valid
[22:24:30] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:29:15] <zostj> wbthomason[m]: thank you sir! :D
[22:30:55] *** Joins: JotaKenobi (~manjaro-u@155.red-83-46-126.dynamicip.rima-tde.net)
[22:32:32] <YorickPeterse[m]> When yanking text that contains concealed characters, is there a way to include the conceal replacements rather than the raw text?
[22:32:44] <YorickPeterse[m]> I suspect the answer is no, but maybe...just maybe
[22:41:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:41:58] *** Joins: TheoParis[m] (~creepinso@2001:470:69fc:105::1:2358)
[22:43:41] *** Joins: jklfds_ (~jklfds@user/jklfds)
[22:43:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:43:58] *** Quits: zostj (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:48:27] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[22:49:40] *** Quits: emptynine (tkk@cybertron.redlight.li) (Ping timeout: 252 seconds)
[22:50:16] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-012.ethz.ch)
[22:52:23] *** Joins: emptynine (tkk@cybertron.redlight.li)
[22:58:45] *** Joins: Betal (~Betal@user/betal)
[23:01:06] *** Quits: Haricophile (~Haricophi@2a01:e34:ed36:e850:5eeb:a6f5:f0e2:d745) (Remote host closed the connection)
[23:05:04] *** Quits: Sujmikro (~Sujmikro@cpe-188-252-138-63.zg5.cable.xnet.hr) (Ping timeout: 244 seconds)
[23:17:32] *** Joins: Sujmikro (~Sujmikro@cpe-188-252-128-28.zg5.cable.xnet.hr)
[23:18:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:20:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:21:33] *** Joins: jklfds_ (~jklfds@user/jklfds)
[23:22:17] *** Joins: Guest79 (~textual@77.252.63.98)
[23:25:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[23:29:03] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 260 seconds)
[23:31:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:32:55] *** Quits: Guest79 (~textual@77.252.63.98) (Quit: Textual IRC Client: www.textualapp.com)
[23:33:15] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[23:33:27] *** Joins: Guest79 (~textual@77.252.63.98)
[23:33:43] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.2.1)
[23:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[23:34:44] *** Quits: Guest79 (~textual@77.252.63.98) (Client Quit)
[23:36:46] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:37:55] *** Quits: guido (~guido@host-80-116-25-172.pool80116.interbusiness.it) (Ping timeout: 260 seconds)
[23:39:27] *** Joins: guido (~guido@host-87-10-249-191.retail.telecomitalia.it)
[23:40:47] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:42:19] *** Joins: hololeap (~hololeap@user/hololeap)
[23:56:39] <hwrd> did something change  recently? I swear I used to have a statusbar for all my splits, but now not anymore?
[23:57:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[23:59:09] <mjlbach[m]> <dmitmel[m]> "`min([line('.'), line('v..." <- do we have api bindings to line yet or is it through a vimscript call?
[23:59:38] <dmitmel[m]> we do, but this snippet is for Vimscript
