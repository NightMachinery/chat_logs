[00:24:19] <lopid> ac
[00:24:25] <lopid> no
[00:26:48] <geirha> dc
[01:21:06] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:56:38] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[01:57:01] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:18:45] *** Joins: Torr_ (~Torr@user/torr)
[02:20:45] <Torr_> Hey
[02:21:24] <Torr_> How would I make sed match a only against the 1st pattern end?
[02:22:08] <emanuele6> what?
[02:22:38] <emanuele6> example?
[02:23:43] <Torr_> Let's use this simple html as example: http://ix.io/3F6p
[02:24:15] <Torr_> I want to delete every "<script>" tag, be it a line or a block.
[02:24:46] <Torr_> Wait
[02:25:04] <Torr_> That doesn't reproduce my problem.
[02:26:07] <Torr_> This one does: http://ix.io/3F6q
[02:26:26] <Torr_> If I run: sed -E "/<script/,/<\/script>/d"
[02:26:48] <Torr_> I'll end up deleting the "<body>" tag as well.
[02:27:58] <emanuele6> yes because there is something that matches /<script/ on the line before it.
[02:28:00] <emanuele6> so what?
[02:28:53] <Torr_> By matching the 1st pattern end, I meant the first occurrence of the closing "<script>" tag.
[02:29:18] <emanuele6> what is the expected output?
[02:29:23] <emanuele6> you only sent the input
[02:30:20] <Torr_> http://ix.io/3F6t
[02:30:45] <emanuele6> and why would that be the output?
[02:31:14] <Torr_> That's where I want to reach.
[02:31:43] <emanuele6> but why? because it deleted all the script tags?
[02:31:51] <Torr_> Yes
[02:32:01] <emanuele6> have you read the /topic?
[02:33:48] <emanuele6> anyway you probably meant to use something like, sed 's/<script>.*<\/script>//g;t;/<script>/,/<\/script>/d'
[02:34:04] <emanuele6> but don't use sed to process html c'mon
[02:35:28] <emanuele6> but this will not be correct: <div>a</div><script>\n...\n</script>, will also remove <div>a</div>
[02:36:02] <emanuele6> and worse <div>\na\n</div><script>\n...\n</script> will leave you with <div>\na\n
[02:37:19] <Torr_> ~.~
[02:38:47] <emanuele6> # printf '%s\n' '<script> 1 </script>' '<script> 2' ' bla' ' bla' '</script>' '<body> ' ' blaaaa' ' <script> 3 </script>' ' </body>' | sed 's/<script>.*<\/script>//g;t;/<script>/,/<\/script>/d'
[02:38:52] <shbot> emanuele6: 
[02:38:52] <shbot> emanuele6: <body> 
[02:38:52] <shbot> emanuele6: etc... ( http://ix.io/3F6B )
[02:39:08] <emanuele6> # printf '<div>\na\n</div><script>\n...\n</script>\n' | sed 's/<script>.*<\/script>//g;t;/<script>/,/<\/script>/d'
[02:39:09] <shbot> emanuele6: <div>
[02:39:09] <shbot> emanuele6: a
[02:41:20] *** Quits: geirha (~geirha@gina.it.ntnu.no) (Changing host)
[02:41:20] *** Joins: geirha (~geirha@user/geirha)
[02:45:27] <emanuele6> also you would need to use some trick like <script>[^<]*<\/script> to make s/<script>.*<\/script>//g not delete everything if the input is <script>a</script><div>x</div><script>b</script>
[02:45:53] <emanuele6> and you obviously can't use [^<] [^>] or [^/] for javascript code
[02:46:59] <emanuele6> sed really shouldn't be use to process html as the /topic says
[02:47:45] <Torr_> Indeed, but I wasn't expecting these cases. The page I'm parsing is a very simple.
[02:47:57] <Torr_> I was able to make it work with your suggestion.
[02:48:12] <emanuele6> :(
[02:48:49] <Torr_> What'd u use for parsing complex html?
[02:49:17] <emanuele6> it depends on the end goal
[02:49:36] <Torr_> Why the sad face buddy? U helped me.
[02:50:52] <Torr_> The goal is just to remove a few unwanted blocks.
[02:53:24] <emanuele6> but why? what is this? a vim filter?
[02:55:08] <Torr_> Lol no, that's much more complex. I'm just just cleaning some small pages up.
[02:55:59] <emanuele6> so you are not even editing text files, you are getting html from the web
[02:56:44] <emanuele6> and why are you doing it?
[02:59:13] <Torr_> I'll edit them later, that's why I'm cleaning them. It'll make it easier to read.
[03:12:34] <emanuele6> i don't understand what you are trying to actually do
[03:12:59] *** Joins: lgc (~lgc@user/lgc)
[03:13:50] <emanuele6> anyway, it is not easy to implement something that perfectly processes html in sed
[03:14:29] <Torr_> No worries, this is working.
[03:14:55] <emanuele6> :(
[03:15:01] <Torr_> A semantic sed seems like a cool project.
[03:15:24] <Torr_> Something like a tree-sitter on the terminal.
[03:53:13] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
[04:01:15] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[04:01:16] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[04:01:16] *** Joins: wuseman (~wuseman@user/wuseman)
[04:12:11] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[04:16:19] *** Joins: treble (~treble@user/treble)
[05:00:40] *** Quits: X-Scale (~ARM@31.22.167.45) (Ping timeout: 256 seconds)
[05:01:54] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:09:20] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[05:13:56] *** Quits: fcr (~fran@r167-60-56-223.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[05:20:53] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[05:23:58] *** Joins: fcr (~fran@r186-48-67-211.dialup.adsl.anteldata.net.uy)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:49:00] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[05:51:47] *** Joins: totenkoph (~scythe@user/totenkoph)
[08:58:07] *** Joins: fahimscirex (~quassel@bdeshi.space)
[08:59:59] <fahimscirex> I'm trying to scrape IP addresses from this list > http://ix.io/3F7E 
[09:00:11] <fahimscirex> but running > sed "\d+.\d+.\d+.\d+[:]\d+"
[09:00:18] <fahimscirex> is not working.
[09:00:34] <fahimscirex> what am I doing wrong here?
[09:01:11] <fahimscirex> Getting this : `sed: -e expression #1, char 21: unterminated address regex`
[09:10:05] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 250 seconds)
[09:14:11] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[09:35:30] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:48:45] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[09:55:38] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[09:59:22] *** Joins: totenkoph (~scythe@user/totenkoph)
[10:24:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[10:25:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:29:30] *** Joins: nerozero (~nerozero@87.253.63.54)
[11:49:07] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 250 seconds)
[11:49:48] *** Joins: chasmo77 (~chas77@71.63.241.168)
[11:59:05] <Riviera> fahimscirex: it's hard to say, because nothing is right
[11:59:53] <Riviera> fahimscirex: you seem to assume you provide sed with a regular expression as an argument and that sed then is printing the matching strings. that's not what it does.
[12:18:23] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (Read error: Connection reset by peer)
[12:18:47] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu)
[13:16:44] <Soliton> # sed -n "\d+.\d+.\d+.\d+[:]\d+dp" <<< +-d+-d+-d+:d+
[13:16:45] <shbot> Soliton: +-d+-d+-d+:d+
[13:38:36] <geirha> "works perfectly!"
[14:09:11] <Riviera> # echo regex > egex; sed -n regex *
[14:09:12] <shbot> Riviera: regex
[14:17:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:55:01] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:55:17] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:55:42] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:12:35] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:15:02] *** Joins: X-Scale` (~ARM@46.50.0.92)
[16:15:32] *** X-Scale` is now known as X-Scale
[16:27:41] *** Quits: ramok (~komar@217.78.142.42) (Ping timeout: 264 seconds)
[16:33:19] *** Joins: ramok (~komar@217.78.142.42)
[17:16:31] *** Quits: fcr (~fran@r186-48-67-211.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[17:16:54] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: talk to you later or tomorrow)
[17:25:07] *** Joins: fcr (~fran@r167-56-24-27.dialup.adsl.anteldata.net.uy)
[17:33:32] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[17:36:46] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 245 seconds)
[17:41:59] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[18:29:01] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:30:48] *** Joins: nvmd (~nvmd@user/nvmd)
[18:37:19] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[18:44:30] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[19:18:31] *** Joins: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com)
[19:18:31] *** Quits: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[19:18:31] *** Joins: wuseman (wuseman@user/wuseman)
[19:27:13] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:31:08] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:53:41] *** Joins: LordDoskias (~lorddoski@185.138.176.94)
[19:53:56] <LordDoskias> hello if i have a line like this:    /dev/loop0	 214695936 - how do i match only the 2nd number?
[19:54:08] <LordDoskias> tried with sed -rne 's/(d+)$/\2/p'
[19:54:08] <LordDoskias>  to no avail? what am i missing?
[19:55:07] <Soliton> d matches a d for one.
[19:55:23] <Soliton> perhaps match the whitespace before the number.
[19:56:28] <Soliton> also \2 references the second capture group but you just have one.
[19:57:04] <LordDoskias> if i try this regex on https://www.regextester.com/99203 it shows 2 matches ergo 2 capture groups
[19:57:17] <Soliton> that is not how that works.
[19:58:04] <Soliton> you anchored on the end of the line anyway so there can just be a single match. no clue what even the question is.
[19:58:43] <LordDoskias> the question is if i have a line like this:  /dev/loop0  214695936 how do i match only on 214695936
[19:58:49] <Soliton> # sed -n 's/.* \([0-9]\{1,\}\)$/\1/p' <<< '/dev/loop0     214695936'
[19:58:50] <shbot> Soliton: 214695936
[19:59:17] <Soliton> 0 cannot match because it is not at the end of the line.
[19:59:33] <LordDoskias> right
[20:00:04] <LordDoskias> # sed -rn 's/.* \(\d+)$/\1/p'
[20:00:05] <shbot> LordDoskias: sed: -e expression #1, char 17: Unmatched ) or \)
[20:00:07] <Soliton> if you must use ERE i would suggest to use -E instead of -r.
[20:00:10] <LordDoskias> # sed -rn 's/.* \(\d+\)$/\1/p'
[20:00:11] <shbot> LordDoskias: sed: -e expression #1, char 18: invalid reference \1 on `s' command's RHS
[20:00:30] <Soliton> if you want to write perl regex then consider perl instead.
[20:00:32] <LordDoskias> why wouldn't this work with the -r 
[20:00:49] <Soliton> with -r you use () to capture.
[20:00:58] <LordDoskias> # sed -rn 's/.* (\d+)$/\1/p'
[20:01:04] <shbot> LordDoskias: no output within the time limit
[20:01:41] <Soliton> # sed -En 's/.* (\d+)$/\1/p' <<< '/dev/loop0     dddddd'
[20:01:42] <shbot> Soliton: dddddd
[21:11:18] *** Parts: tangy (~tangy@user/tangy) ()
[21:21:20] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:21:31] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[21:30:33] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[22:13:09] *** Joins: malina (~malina@user/malina)
[22:15:17] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 250 seconds)
[22:27:58] *** Quits: LordDoskias (~lorddoski@185.138.176.94) (Quit: Leaving)
[23:01:13] *** Quits: malina (~malina@user/malina) (Ping timeout: 250 seconds)
[23:04:56] *** Joins: defjam (~eb0t@90.209.246.132)
[23:11:30] *** Joins: treble (~treble@75.76.29.142)
[23:11:41] *** Quits: treble (~treble@75.76.29.142) (Changing host)
[23:11:41] *** Joins: treble (~treble@user/treble)
[23:14:19] *** Joins: malina (~malina@user/malina)
[23:24:15] *** Quits: wuseman (wuseman@user/wuseman) (Ping timeout: 265 seconds)
[23:57:15] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
