[00:02:31] *** Quits: DrNostril (~DrNostril@47.156.13.249) (Quit: Leaving)
[00:05:02] <Bayes> twrk > "I love having pandoc installed, so that every pacman update has at least 30 haskell packages" lmao that was exactly the same comment I made on #emacs and got shrysr to comment on here xD
[00:06:21] <Bayes> shrysr I hear you, you have a bunch of R scripts doing specific tasks meant to run with different periodicity
[00:06:35] <Bayes> I've never found a good solution for that
[00:06:49] <Bayes> you can start with a package, i.e., shipping your scripts as functions
[00:07:24] <Bayes> and then having cron jobs call Rscript -e 'myadmpkg::task1()'
[00:07:34] <Bayes> or have bash scripts call that
[00:08:23] <Bayes> or if these are meant to be called by a human, maybe a nice "launcher" on their favorite scripting language so they don't have to call Rscript on their own
[00:08:54] <Bayes> e.g., a python/bash script that greets you and call Rscript -e 'myadmpkg::task1()' under the hood
[00:11:29] <rickyrick> Yeah RMarkdown -> tex -> pandoc/pdflatex/etc
[00:11:44] <rickyrick> RStudio on Windows just ships a phat 180MB pandoc binary
[00:11:53] <Bayes> of course
[00:12:58] <rickyrick> >UTF-8 as native encoding in R on Windows with UCRT
[00:12:59] <rickyrick> HNNNG
[00:13:08] <rickyrick> Does this mean we can finally use dumbass emojis as variable names
[00:14:54] <rickyrick> >One needs recent Windows 10 (May 2019 Update or newer, which one should normally get simply by updating via Microsoft Update) or Windows Server 2022 for UTF-8 as the native encoding.
[00:15:13] <rickyrick> ðŸ˜­
[00:15:31] <Bayes> nice
[00:16:13] <Bayes> if (myfun(x) == ðŸ˜­) { stop ("The function failed and cried :/ ") }
[00:16:18] <rickyrick> :^)
[00:16:27] <rickyrick> I just want to be able to use Greek letters as variable names
[00:16:31] <Bayes> ikr
[00:16:48] <Bayes> so that your code runs on your computer and anywhere else
[00:16:50] <Bayes> xD
[00:16:57] <Bayes> nowhere*
[00:16:58] <rickyrick> TBH I think R could just allow \uxxxx sequences inside backticks and it might just all work out
[00:17:43] <rickyrick> Then I could just define `Î³Â²` and shit
[00:21:24] <Bayes> ykinmkbykio
[00:22:47] <rickyrick> wharrgarbl
[00:33:24] <shrysr> Hmm i have jenkins available at work and had an idea to link them.. but i have nfi how jenkins .. works.
[00:33:41] <shrysr> i have been told in the past jenkins can run pretty much anything... so should work with R. 
[00:34:38] <shrysr> imagine being able to run a jenkins job - get slack answers to some.. interesting questions? FUCK why are business needs often boring? ppl should pay us to... do cool things. Always. wtf
[00:35:05] <rickyrick> They don't want cool things because they can't understand cool things
[00:35:42] *** Joins: xlirate (~xlirate@216.154.39.43)
[00:36:38] <shrysr> rickyrick: i've been mandated to write a document.. about R's virtues or even fundamental need for a 'data processing' language in toolkit. :(  the senior chief is calling a blanket ban on R with hurtful comments like R is not useful for our future :)  i'm doing one last aRRRR
[00:37:43] *** Quits: xlirate (~xlirate@216.154.39.43) (Remote host closed the connection)
[00:37:59] <shrysr> i find it.. strange. R/Python prevalence for the purpose of reporting and general data analytics.. is well known ainit
[00:38:12] <rickyrick> Some people got suckered into paying for a proprietary BI toolkit/pipeline
[00:38:19] <rickyrick> Gotta get their money's worth
[00:40:40] <shrysr> Indeed. While some of those BI platforms are nice - mostly result in vendor lock in. LOL we dont have any BI toolkit/pipeline.. we have.. well my R scripts and shiny apps. It is very clear to me that similar apps take a LONG time to build in java with several higher orders of complexity. 
[00:40:57] <tdsmith> if the problem is reproducibility and environment flakiness one way to deal with that is to just throw each script into a docker container
[00:41:19] <rickyrick> Yeah I wouldn't touch Java for data
[00:41:29] <tdsmith> then instead of R problems you have container problems, which architects like better
[00:41:34] <rickyrick> Oracle DB is okay but is infinitely times more expensive than PostgreSQL :^)
[00:43:14] <shrysr> sure, but docker.. also...seems like an invitation to trouble and great complexity, and resource utilisation - again for a setup I have to personally maintain. Though docker appears the only... well discussed method of packaging R coad and deps, and being able to scale R code.
[00:43:39] <rickyrick> >scaling R
[00:43:45] <rickyrick> Why not classic OpenMP
[00:43:58] <shrysr> rickyrick: AMEN to you. every time I hear somebody agree - lets not use Java for data sciency stuff... i feel so great. I must say.. i have had to defend R on every turn :( :( 
[00:44:43] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[00:44:53] <rickyrick> I'm here to do data, not wrestle with a programming language
[00:45:08] <rickyrick> Classes, methods, dicts, hashmaps, etc. are all things I don't really want to think about
[00:45:14] <tdsmith> scala's a java right
[00:45:28] <tdsmith> data engineers seem to like scala
[00:45:30] <shrysr> YEAH WTF. but i think java devs... do just that and seem to ... devolve into thinking object oriented and huge classess for everything. 
[00:45:31] <rickyrick> Wasn't Scala more FP than Java
[00:45:35] <shrysr> scala runs on the JVM.
[00:45:48] <tdsmith> it has a fp heritage but it runs on the jvm and interops well, yeah
[00:46:26] <rickyrick> Smells like OOP POO leaking through
[00:46:27] <shrysr> 'a java' i beleive not right term. You call a language JVM compatible. There is even GraalVM - where you can run java, python, R, Julia whatever on the same JVM !! I believe thats an awesome future. 
[00:46:39] <rickyrick> RIP Transmeta Crusoe CPUs
[00:46:56] <rickyrick> Those had software-defined architecture and could run Java bytecode directly
[00:47:14] <rickyrick> I wonder if anyone ever did anything with the IP
[00:48:25] <shrysr> From what i've studied - clojure started out as super promising for data science. but python... R took over.
[00:48:39] <shrysr> another jvm compatible lisp with FP and OOP
[00:48:50] <rickyrick> LISP was the AI language too
[00:49:31] <shrysr> yea the original language of AI was lisp .. sometimes i think its .. fate that I dig Emacs :)  ;) though /me knows not much lisp.
[00:55:27] <rickyrick> Â¯\_(ãƒ„)_/Â¯
[00:56:36] <Bayes> the strengths of R are data manipulation, data viz, and niche model packages that you might need depending on your application
[00:57:00] <shrysr> rickyrick: i was thinking.. over time, maybe java devs become... 'java zombies' .. they cant think outside java or something. 
[00:57:06] <Bayes> beyond that, python shines
[00:57:23] <rickyrick> Whitespace formatting is a meme
[00:57:46] <Bayes> well no, python has so many common purpose tools that it makes more sense to develop an app on python than R
[00:58:33] <shrysr> yea Bayes i agree. that is pretty much what i'm suggesting in my doc... if ya hate R.. lets python for gods sake before Java for this stuff. It goes beyond common purpose tools. Theres also the question of integration with CI/CD and tools like Dagster
[00:58:45] <Bayes> R is better suited for the interactive data processing-viz loop imo
[00:59:03] <rickyrick> Jupyter is also a meme
[00:59:17] <Bayes> Java for data science feels like an engineer thinking of this as programming software
[00:59:34] <rickyrick> I think there's just a large cohort of people raised on Java that want in on the data science fad
[00:59:46] <Bayes> which is not my case, at least, cause R / python is for research coding
[01:00:29] <shrysr> well - fwiw - a lot of software, including data science stuff, like knime is built in Java. Java is VERY good for building enterprise apps. So I believe the usual 'logical' trend is fast prototype in R/python and then convert to Java/scala for serious stuff. 
[01:00:57] <Bayes> which is not my case, at least, cause R / python is for research coding
[01:01:09] <Bayes> ah for some reason I pressed arrow up kek
[01:01:41] <rickyrick> lel
[01:02:17] <shrysr> rickyrick: there is IME only 1 library in Java, called Tablesaw that works .. like pandas/dplyr. It is modelled after pandas and does not match well in feature parity, nor community or development pace.
[01:02:38] <shrysr> in my exploration IME 
[01:03:50] <rickyrick> So Tablesaw is a copy of pandas which is a copy of dplyr
[01:04:00] <shrysr> pandas is a copy of dplyr ?
[01:04:14] <rickyrick> Oops
[01:04:17] <rickyrick> pandas is a copy of data frames
[01:05:50] <Bayes> ^ the tidyverse cyber warrior
[01:06:00] <shrysr> hmm did ya mean data.table? eh idk what pandas is a copy of. nfi whether pandas came first or dplyr ! I would bet on pandas actually. 
[01:06:36] <Bayes> pandas was an attempt to bring R's data.frame capabilities to python
[01:07:04] <Bayes> and then there's the other one, the python lib that copied zoo or xts, can't remember
[01:07:33] * shrysr adds to document ... and considers anon sending a satirical version to senior chief and world.
[01:08:57] <shrysr> if only rickyrick's farts could be packaged 
[01:10:39] * rickyrick farts in a jar
[01:11:15] <Bayes> lmao that's a great Java joke
[01:11:41] *** Joins: mnl (~mnl@user/mnl)
[01:11:47] * shrysr changes document title
[01:30:15] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 256 seconds)
[01:35:52] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Read error: Connection reset by peer)
[01:37:17] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[01:49:31] *** Joins: xlirate (~xlirate@216.154.39.43)
[02:05:10] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (Quit: Leaving)
[02:07:53] *** Quits: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com) (Ping timeout: 256 seconds)
[02:35:03] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 3.0)
[02:42:08] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[02:49:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:10:50] *** Quits: Kabouik (~Kabouik@user/kabouik) (Remote host closed the connection)
[03:11:27] *** Joins: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d)
[03:11:27] *** Quits: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d) (Changing host)
[03:11:27] *** Joins: Kabouik (~Kabouik@user/kabouik)
[03:11:37] *** Quits: lukego (sid312033@id-312033.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:12:15] *** Joins: lukego (sid312033@id-312033.lymington.irccloud.com)
[03:12:29] *** Quits: friedrich (~friedrich@aextron.de) (Remote host closed the connection)
[03:13:35] *** Joins: friedrich (~friedrich@aextron.de)
[03:13:53] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Ping timeout: 268 seconds)
[03:15:50] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[03:39:57] *** Joins: redrum88 (~redrum88@user/redrum88)
[04:20:14] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:54:18] *** Joins: Colombo (~jmoravec@2406:e003:1d89:7d01:fa05:5f54:e61b:1531)
[05:50:41] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:53:50] *** Joins: redrum88 (~redrum88@user/redrum88)
[06:24:55] *** Quits: monstar (~monstar@gateway/tor-sasl/monstar) (Ping timeout: 240 seconds)
[07:12:12] *** Joins: redrum88_ (~redrum88@user/redrum88)
[07:15:48] *** Quits: redrum88 (~redrum88@user/redrum88) (Ping timeout: 240 seconds)
[07:15:49] *** redrum88_ is now known as redrum88
[07:20:30] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:21:01] *** Joins: redrum88 (~redrum88@user/redrum88)
[07:29:46] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[07:29:46] *** Joins: rickyrick_ (~rickyrick@S01069050ca454523.vf.shawcable.net)
[07:40:43] *** rickyrick_ is now known as rickyrick
[08:29:41] *** Quits: baconator (~bacon@c-73-73-223-91.hsd1.il.comcast.net) (Quit: ZNC - https://znc.in)
[08:55:53] *** Joins: baconator (~bacon@c-73-73-223-91.hsd1.il.comcast.net)
[09:21:40] *** Joins: mnl (~mnl@user/mnl)
[09:43:36] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Quit: :^))
[10:07:26] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 250 seconds)
[10:46:19] *** Joins: mnl (~mnl@user/mnl)
[11:08:10] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[11:08:22] *** Joins: palasso (~palasso@user/palasso)
[11:14:47] *** Joins: Vojtaeus (~vojta@user/vojtaeus)
[11:32:03] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Quit: :^))
[11:37:55] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[11:47:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 245 seconds)
[11:49:36] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:52:07] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Quit: :^))
[12:01:14] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[12:35:30] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[12:40:08] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Quit: :^))
[12:51:06] *** Quits: Colombo (~jmoravec@2406:e003:1d89:7d01:fa05:5f54:e61b:1531) (Quit: Leaving.)
[14:02:08] *** Joins: monstar (~monstar@gateway/tor-sasl/monstar)
[14:10:12] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[14:10:35] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[14:20:44] *** Joins: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com)
[15:35:59] *** Quits: monstar (~monstar@gateway/tor-sasl/monstar) (Quit: WeeChat 3.0)
[15:36:13] *** Joins: monstar (~monstar@gateway/tor-sasl/monstar)
[15:37:24] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Ping timeout: 256 seconds)
[16:30:45] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[18:00:48] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[18:02:10] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[18:03:33] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[19:57:29] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[19:57:45] *** Quits: nvuafo (~usrnvuafo@user/nvuafo) (Remote host closed the connection)
[19:57:45] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[19:58:11] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[19:58:14] *** Joins: nvuafo (~usrnvuafo@user/nvuafo)
[20:12:24] <danshearer> Hello all! This is a Shiny accessibility problem. Are there any tips and tricks to making Shiny high-contrast, ie white on a black background or similar? 
[20:13:01] <danshearer> The default is low contrast and I would like to change that in a general and persistent way.
[20:13:57] <danshearer> Does Shiny guarantee that themes are respected at all times? 
[20:14:07] <danshearer> For example https://bootswatch.com/cyborg/
[20:16:11] <danshearer> By "respected at all times" I am including in the generated images as well as web text.
[20:19:29] <shrysr> shiny theming > https://rstudio.github.io/bslib/articles/bslib.html#custom
[20:24:24] <shrysr> danshearer: ^... and afaik... nothing in life is guaranteed :) least of all shiny. i dont really grok themes being respected at all times - but i do believe shiny will run what you feed in and you can explicitly style with CSS etc. i've heard bslib above to be quite helpful in theming. 
[20:24:58] <danshearer> The key thing is the generated images, and images are typically *not* covered by theming
[20:25:14] <rickyrick> Aren't generated plots covered by the R-side plot settings
[20:25:31] <rickyrick> Unless they're d3js or some fancy webshit
[20:26:09] <Bayes> anyone have a favorite candidate for metropolis hastings ?
[20:26:25] <rickyrick> multivariate normal :^)
[20:26:26] <shrysr> rickyrick: well yes. thats why i'm not grokking the question. I suppose there will always be gaps in what the theme covers or not, but i believe it can all be controlled. 
[20:26:40] <Bayes> rickyrick for sure, but what about the covariance matrix?
[20:26:48] <Bayes> I mean I'm doing a random walk MH for sure
[20:26:57] <Bayes> but tuning the cov matrix is a bit PITA
[20:27:09] <rickyrick> Spherical (^:
[20:27:13] <rickyrick> It'll get there eventually (TM)
[20:28:19] *** Quits: Vojtaeus (~vojta@user/vojtaeus) (Quit: OdchÃ¡zÃ­m...)
[20:28:31] <Bayes> rickyrick no, that doesn't do it https://i.imgur.com/63LKX8Z.png
[20:28:40] <rickyrick> Try 1e10 iterations
[20:28:43] <danshearer> shrysr, ok I can improve the question but I need a little help doing that.
[20:28:51] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[20:29:01] <Bayes> come on man now u trollin
[20:29:20] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[20:31:01] <danshearer> the ingredients for contrast control are: (a) preferences sent by the browser, which are unfortunately quite often ignored (b) themes for the web pages which appear to be consistently applied to all HTML output from Shiny (c) the images generated on the fly, which do not appear to be influenced by either (a) or (b).
[20:31:50] <danshearer> I *suspect* but am not sure that Shiny does nothing about (a), has excellent (b), and has some non-theme way of affecting (c)
[20:33:07] <danshearer> shrysr, is this more grokkable?
[20:33:21] <rickyrick> Probably easiest to post a screenshot lol
[20:50:02] <shrysr> danshearer: yes. and /me likes your question format. I also suspect (a) to be true and that (c) is correct. generated figure or plot apperance can be customised (both ggplot and say plotly).  ... (b) > well i suppose largely, yes. bslib supposedly is useful but i think the answer depends on the package being used. For example - bs4dash offers a buncha components and it's own tags for modifying main colors. You may want to modify the widgets/appearance further. It
[20:55:50] <shrysr> danshearer: i'm not sure if the above helps.. but you could also take a peek at https://unleash-shiny.rinterface.com/web-intro.html  afaik, among the 1-2 books out there talking in depth about shiny UI and internal workings. 
[20:57:40] <shrysr> fwiw rickyrick, plots not necessarily always generated R side as the above link will tell you, it is also possible to design client side plot redrawing with plotly. Improves shiny app performance :) Enter the king of languages.. Javascript
[20:58:17] <rickyrick> Â¯\_(ãƒ„)_/Â¯
[21:01:45] *** Quits: xlirate (~xlirate@216.154.39.43) (Remote host closed the connection)
[21:02:13] <shrysr> oh well danshearer on further review (c) --- iirc in my brief earlier exploration bslib settings did affect the generated plots as well? to some extent atleast? idk.  (c) does not seem influenced by (a), but could be influenced by (b), but can also be styled apparently independent of (b). 
[21:03:20] <danshearer> shrysr, so far I have found themes for (b) to work, and there are ggplot options for (c). I will post a URL here shortly.
[21:04:44] <Bayes> I sometimes want to like shiny more than I do
[21:07:01] <shrysr> Dont bother 11!!!! :D lol. nah, shiny is cool, but within a certain scope imho. And weirdly... it pays to be cognizant of this. It's simply not so straightforward to scale shiny to 1000/++ users. But a well designed shiny app can work quite well for a small to moderate number of users without data dude losing entirely losing sanity
[21:08:51] <Bayes> my issue is more as an user of shiny apps
[21:08:57] <Bayes> like... they don't feel responsive to me
[21:09:55] <shrysr> interested to know what you mean? the general meaning of responsive is adapting to window size?
[21:10:15] <danshearer> Demo: http://r.lumosql.org:3838/contrastexample.html   . Select theme 'Cyborg' from the dropdown chooser for a reasonable high contrast theme.
[21:11:32] <danshearer> I have changed the images *a bit* using parameters to ggplot.
[21:12:12] <Bayes> shrysr here's what I mean, open the link danshearer just shared, click on some operative system, change the datasize from default to 1,2, etc
[21:12:17] <Bayes> doesn't feel smooth as an user
[21:12:21] <rickyrick> Oh yeah those plots are governed by ggplot themes
[21:12:57] <danshearer> Are there actual ggplot themes we can select at the R level? I am twiddling colours directly atm.
[21:13:24] <Bayes> danshearer for sure, there are a few built in and also many more out there
[21:13:24] <rickyrick> Just add + theme_bw() :^)
[21:13:37] <Bayes> danshearer https://topfunky.com/2021/ggplot-high-contrast-theme-gghighcontrast/
[21:13:52] <Bayes> not suggesting that one specifically, but that's the first hit when I googled "ggplot2 high contrast theme"
[21:14:09] <rickyrick> Mildly garish, reminds me of green phosphors
[21:14:15] <rickyrick> comfy/10
[21:14:33] <danshearer> The ggplot calls I made are here: http://paste.c-net.org/CovertLiaison
[21:14:47] <rickyrick> Yeah you can compose your own theme that way
[21:14:51] <danshearer> which incidentally has a really good random pastebin name :-)
[21:14:59] <rickyrick> but there are off-the-shelf packs that'll just theme the whole thing
[21:15:06] <shrysr> ANd yet another dark dark theme > https://www.business-science.io/code-tools/2020/12/30/ggplot-theme.html
[21:15:10] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[21:15:33] <Bayes> oh I met Matt Dancho once
[21:15:41] <danshearer> rickyrick, how do we apply the "off the shelf packs" for ggplot? I'm guessing there is a ggplot setup call I haven't noticed.
[21:15:57] <rickyrick> Instead of +theme( your options) just do +theme_themename()
[21:16:05] <danshearer> ahh
[21:16:21] <rickyrick> https://mran.microsoft.com/snapshot/2016-08-19/web/packages/ggthemes/vignettes/ggthemes.html
[21:16:37] <shrysr> nice! Bayes that is cool. i've known matt over the last few years... pretty much my go to guy for many questions and general guidance. He is super cool. 
[21:16:40] <Bayes> or do theme_set(theme_themename()) to set it globally so u don't have to go one by one
[21:16:44] <rickyrick> ^
[21:17:21] <danshearer> ahh, in CRAN there are the libraries egg and ggthemes
[21:17:48] <danshearer> rickyrick, I got there in the end. Yes, that's really helpful thanks.
[21:18:26] *** Joins: rickyrick_ (~rickyrick@S01069050ca454523.vf.shawcable.net)
[21:18:26] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[21:18:41] *** rickyrick_ is now known as rickyrick
[21:21:46] <shrysr> hmm Bayes yea. I feel you regarding the UI. However, it usually takes an Immense amount of hard work to get that super smooth UI beyond ootb shiny. I think the USP of shiny is that you can get That basic app up very fast and its far better than nothing. i.e client facing / external shiny apps need a tonne of work to make the UI 'smooth'. This goes for any web app framework anyway. Solutions to a lot of these aspects are covered in teh earlier link i posted. Beyon
[21:23:16] <shrysr> for example, client side rendering. And not using 'renderUI()' ... imo they cover 'tweaks' ... of just making the app 'appear' smoother. I believe many other shiny apps (or even general apps) cheat by caching data they need before hand. 
[21:24:56] <confuzeus> i just googled matt dancho and he is tidy trainer!
[21:25:40] <shrysr> i credit his courses for being able to.. do ~some R today. but yea, he is mostly about the tidyverse.
[21:27:39] <Bayes> http://ix.io/3RNb aaaaaaaaaah you fuckhead :(
[21:27:41] <confuzeus> i watched some of hadley's videos before the tidy craze and i think he is a good teacher.
[21:28:14] <Bayes> shrysr I hear you, I agree that shiny is good for prototyping, but the UI sucks for me
[21:28:44] <Bayes> too much fiddling to make it not suck
[21:29:12] <Bayes> also, I've had trouble to wrap my head around the whole logic separation
[21:29:15] <Bayes> but maybe that
[21:29:35] <Bayes> but maybe that's a react kind of pattern that I'm just not familiar with it, so I place no blame on that
[21:30:32] <Bayes> fuck fuck fuck my diagonal matrix has det = 0
[21:30:42] <Bayes> why on earth
[21:30:46] <rickyrick> lol.jpg
[21:30:57] <confuzeus> i have not found a use case for shiny. i did a course on tableau after our ceo had been convinced it was useful by some random marketer. i would have learned shiny if i knew of it then
[21:30:57] <rickyrick> Probably just numerically zero
[21:31:26] <rickyrick> Tableau is full of annoying quirks and "don't do what we don't let you"
[21:31:52] <Bayes> rickyrick http://ix.io/3RNb a polly but doing pmax(prod(diag(D)), .Machine$double.eps) feels like a dirty hack
[21:32:01] <shrysr> Yea. but imo too much fiddling in any UI design involved and shiny no.. easier or terribly tougher than the others. Not sure of the logic seperation. Shiny/Dash are about some level of integrated R/Python converted to HTML. the classic MVC approach like Java apps is where the backend is separated from the front end. This means writing the HTML AND the backend AND then looking at UI smoothness :) 
[21:32:43] <rickyrick> Bayes: Maybe try putting pmax inside the prod and it'll be less dirty
[21:33:06] <rickyrick> o i c
[21:33:12] <rickyrick> That's odd
[21:33:21] <rickyrick> Wouldn't have thought that would be enough to get to 0
[21:33:27] <Bayes> yep
[21:33:30] <confuzeus> rickyrick: true. a colleague implemented some dashboard with it. i just added to the list of my professional development...
[21:33:36] <Bayes> I did try the exp log sum trick, still 0
[21:33:39] <rickyrick> Oh I see
[21:33:45] <rickyrick> (1e-4)^100 = 1e-400
[21:33:48] <rickyrick> So you're just out of luck
[21:34:01] <rickyrick> Maybe just work entirely in log space lol
[21:34:04] <Bayes> lmao what do you mean out of luck xD
[21:34:15] <danshearer> rickyrick, shrysr thanks. It also seems like the answer lies somewhere between the suggestions given here.
[21:34:15] <rickyrick> confuzeus: been there done that
[21:34:21] <danshearer> With this code: http://paste.c-net.org/LawnsBizarre
[21:34:24] <rickyrick> Bayes: use Rmpfr :^)
[21:34:43] <Bayes> eh
[21:34:50] <danshearer> I get this result: http://r.lumosql.org:3838/contrastexample.html
[21:35:12] <fendur> Bayes: what do you need to do with that value?
[21:35:13] <Bayes> come on man in this business everyone adds a sq machesp, call it a jitter for numerical stability and cite Neal
[21:35:24] <danshearer> So the packaged ggplot themes don't seem to set everything. But it's a lot better than 15 minutes ago, thanks to #R :-)
[21:35:35] <Bayes> divide by it, and hence det(D) = 0 makes it go brrr
[21:36:00] <fendur> can you do it on the log scale?
[21:36:15] <rickyrick> ^
[21:36:25] <rickyrick> c/det(D) = log(c) - log(det(D))
[21:36:32] <rickyrick> oops lost an exp
[21:36:32] <rickyrick> :^)
[21:37:11] <rickyrick> danshearer: The contrast looks a lot worse to me lol
[21:37:35] <rickyrick> danshearer: Also aren't you guys supposed to panic patch to 5.15.25
[21:37:40] <danshearer> The bw ggplot theme doesn't seem to do anything, while dark has a low-contrast background that is worse as you say. But I now know where the knobs and buttons are ;-)
[21:37:43] <Bayes> https://i.imgur.com/5aC0LIX.png you mean like doing the whole thing in log scale, or just the det(D) ?
[21:37:49] <Bayes> cause det(D) in log scale is also zero
[21:37:54] <shrysr> lol lets endlessly tweak the UI till we dont smell farts
[21:38:14] * rickyrick starts farting
[21:38:21] <danshearer> rickyrick, this is on a cluster which is allegedly behind 57 firewalls!
[21:38:26] <rickyrick> lmao
[21:38:27] <Bayes> I'm really wondering if it's numerically zero or I'm actually dealing with det(D) = 0
[21:38:30] <rickyrick> Doesn't stop a Dirty Pipe (TM)
[21:38:47] <Bayes> I mean D is not empty
[21:38:49] <rickyrick> Bayes: It's clearly not actually zero
[21:38:54] <rickyrick> Since none of the entries of diag(D) are zero
[21:38:57] <Bayes> so I'm gonna hack it
[21:39:01] <Bayes> yeah that's my thought too
[21:39:15] <fendur> bayes: log[thing to divide] - sum(log(diag(D)))
[21:39:23] <rickyrick> ^^^
[21:39:37] <Bayes> oh gotcha
[21:39:44] <fendur> exp(whole thing)
[21:39:48] <fendur> maybe. or do more work.
[21:40:27] <Bayes> ok I'll work on this and see where it takes me
[21:40:46] <Bayes> that's the shit I get for writing my own gibbs sampler
[21:41:00] <danshearer> rickyrick, if you're interested, we are running benchmarking on many different versions of SQLite, both vanilla and when the key-value store underneath is swapped out with LMDB (of which there are also many versions.)
[21:41:05] <fendur> that's just the kind of asshole you are, man :) we're all some kind of asshole.
[21:41:15] <danshearer> so the OS being reported is whatever the benchmark is running on.
[21:41:30] <Bayes> according to confuzeus I'm the asshole "who likes complicated things" XDD
[21:41:54] <rickyrick> neat.sql
[21:42:11] <rickyrick> I've never actually used embedded SQL before
[21:42:32] <Bayes> really?
[21:42:51] <rickyrick> Yeah just full-fat SQL dbs
[21:42:59] <Bayes> sqlite is the csv of the pros who don't deal text data (?)
[21:43:03] <rickyrick> I guess the dbplyr tutorial defaults to sqlite
[21:43:23] <Bayes> go blobs
[21:43:43] <fendur> sqldf is also sqlite
[21:43:46] <rickyrick> Â¯\_(ãƒ„)_/Â¯
[21:43:55] <danshearer> nah SQLite is full-fat as in SQL support and fast handling of datasets. It's embedded because it is in the process space of the application.
[21:43:56] <rickyrick> I guess that too
[21:44:30] <rickyrick> How good is sqlite for OLAP queries
[21:44:44] <danshearer> sqlite is also almost certainly the most-deployed software by three zeros or so, and I am actutely aware of the present audience when I toss about the expression "three zeros" :-) 
[21:44:51] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[21:45:13] <danshearer> That is because every mobile phone has ~300 sqlite databases
[21:45:33] <rickyrick> If you glued together all those databases, you'd re-invent the Windows Registry
[21:45:44] <Bayes> lmao
[21:45:57] <danshearer> And embedded devices including cars etc use it extensively, as does Firefox/Chrome/you-name-it application wanting a replacement for fopen() that has structure.
[21:46:00] <rickyrick> sqlite.org/speed needs an update though
[21:46:11] <Bayes> if you saved every entry in a file you'd get /etc
[21:46:22] <rickyrick> ( Í¡o ÍœÊ– Í¡o)
[21:46:40] <Bayes> what's olap? like relational dbs for arrays ?
[21:46:52] <Bayes> or that's what I got from wikipedias first sentence
[21:47:05] <danshearer> rickyrick, that's a good point, but until a few months ago there was no benchmarking for sqlite (soon to be multi-SQL, I hope) . Now there is, but the results need to be presented somehow. Hence fumbling-in-the-dark explorations in R
[21:47:12] <Bayes> "at the core is a hypercube"
[21:48:20] <rickyrick> Yeah basically taking the table, transforming into a hypercube with the desired axes, then apply(c(i,j,k,...), stat)
[21:48:32] <rickyrick> Slice and dice
[21:48:59] *** Joins: Colombo (~jmoravec@2406:e003:1d89:7d01:86d9:97da:7e95:4382)
[21:50:45] <Bayes> neat
[21:50:47] <Bayes> I could use that
[21:50:49] <shrysr> I think there be no relational stuff in olap. schema less columnar databases supposedly much faster at slicing and dicing and obtaining general computations, as opposed to looking up something. duckdb is an example similar to sqlite, but using OLAP
[21:51:18] <Bayes> rn I'm working on the horriblest (sic) problem I've ever dealt with, which is also exiting, and the output is a 3d tensor
[21:51:22] <Bayes> so I could use that
[21:51:48] <rickyrick> shrysr: PostgreSQL has some CUBE functionality, but I usually like to hand-roll my SQL query
[21:51:56] <shrysr> iirc postgres works well as a hybrid db. 
[21:51:57] <Bayes> the input is... I wouldn't call it an array, you could but on one dimension the all vectors don't have the same length
[21:51:57] <shrysr> yea
[21:52:02] <rickyrick> Bayes: That's a perfectly cromulent word
[21:52:19] <rickyrick> Bayes: A ragged array?
[21:52:55] <rickyrick> Does sqlite support window functions yet
[21:53:02] <Bayes> rickyrick maybe, really they're K finite vectors with unequal length from K functionals
[21:53:09] <danshearer> If you're looking for an SQL database with response times highly tuned for performance, at times down to clock cycles, then SQLite will do that. You don't want more than maybe 1TiB of data. But it is generally about 1 order of magnitude faster than full-fat DBs, depending on this and that.
[21:53:29] <danshearer> There are good reasons to use a networked database, naturally.
[21:53:59] <Bayes> oof I guess if you want to be true to the problem you'd actually say the whole input is a multivariate functional, same index but you have many species, each which measurements at different values of the functional index
[21:54:40] <danshearer> But if you are doing local crunching of SQL that is constrainted by DB speed then it is worth a look. The SQL dialect is close to Postgresql. To give you an idea: SQLite supports Common Table Expressions, which is pretty sophisticated stuff.
[21:55:05] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[21:55:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[21:56:16] * shrysr claps. Somehow it is a pleasure to hear people talk about.. databases and learn something. Atleast at $work, it feels like these aspects are just .. not discussed. 
[21:57:09] <rickyrick> danshearer: Yeah there were multiple analysts on the same db, so having a local copy for everyone was probably suboptimal
[21:57:19] <Bayes> wait I lost the thread of the convo, can sqlite do OLAP, hypercubes, arrays, slice and dice?
[21:58:15] <rickyrick> >supports OVER clauses
[21:58:18] <rickyrick> neat.sql
[21:58:46] <rickyrick> >Window function support was first added to SQLite with release version 3.25.0 (2018-09-15).
[21:58:48] <rickyrick> 2late4me
[21:59:00] <danshearer> Yes, it's what you'd expect: https://www.sqlite.org/syntax/over-clause.html
[21:59:23] <rickyrick> lead() and lag() are amazing
[21:59:40] <rickyrick> Trying to reproduce window function behaviour on MySQL 5.5 was a massive PITA
[22:00:53] <danshearer> I am focussed on database internals, introducing per-row checksums/encryption etc. However I am well aware that there is wizardry happening at higher levels: https://www.sqlite.org/windowfunctions.html
[22:01:33] * rickyrick waves wizard wand
[22:02:05] <Bayes> ^ sexist
[22:02:13] <danshearer> There are two personalities to SQLite's development. The first is "uniquely conservative, as is required by the world's first and so-far probably only trillion-scale software"
[22:03:35] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[22:03:40] <shrysr> danshearer: if i may ask.. are you a 'data engineer'? 
[22:04:00] <danshearer> The second is "really quick to introduce new features if there is a demonstrated need and it doesn't break backwards compatibility". This side of SQLite is possible because it has less than 250k lines of code, much of which is infrastructure. The next nearest databases have *two million* lines of code (Postgresql, MariaDB, Mysql)
[22:04:50] <rickyrick> How much of that is networking though
[22:04:52] <danshearer> If a data engineer is someone who can squint at a database and then come up with clever queries to slice and dice it, then definitely not!
[22:05:16] <Bayes> can you subset a vector with one reference only? x[x < 1] without writing x twice
[22:06:06] <Bayes> x <- runif(100); Filter(\(x) x < .5, x)
[22:06:11] <Bayes> xD
[22:06:13] <danshearer> rickyrick, not much. The client/server stacks run to at most 50k SLOC and that's allowing for lots of historical cruft too. These databases shouldn't feel too bad, Oracle has north of 20 million SLOC. Even venerable old dead BerkleyDB has getting on for 1M in the last code dump I saw.
[22:07:40] <danshearer> shrysr, I'm into privacy and the like, which is why adding corruption-detection and encryption and also privacy features to the database everyone with a phone relies on matters to me. I stumbled into this.
[22:09:21] <danshearer> SQLite is a plain text database format (see comments about about paranoid backwards compatibility due to to unprecedented userbase.) The Android team have mentioned that as far as they can observe, if stored data isn't streaming then it is SQLite. There are many reasons why plain text just isn't good enough.
[22:12:28] <danshearer> See https://lumosql.org/src/lumosql/doc/trunk/README.md .
[22:13:58] <tdsmith> shrysr: you might be interested in https://www.hytradboi.com/
[22:18:43] *** Quits: mnl (~mnl@user/mnl) (Quit: mnl)
[22:37:38] <rickyrick> Bayes: You've wrote x three times there
[22:39:19] <rickyrick> danshearer: Neat, though I'm sticking to my precious postgres
[22:39:23] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[22:39:48] <danshearer> Postgres is excellent. The K-V store code is a joy.
[22:40:31] <rickyrick> I should probably learn some of the fancier text indices
[22:40:35] <rickyrick> Â¯\_(ãƒ„)_/Â¯
[22:41:49] <danshearer> Pg is also unable to provide guarantees that the 21st century really demands. For example, Postgres (in common with all other databases including SQLite) has no way of telling if the data it wrote in row X two seconds ago is the same row X it has just read. 
[22:43:48] <danshearer> And if that doesn't seem questionable, then try this simple experiment. Buy a new hard disk at the current large size for reasonable price (probably 10TiB now). Checksum the whole drive (I can give you the one-liner). Now put it in the cupboard for a month and repeat. The checksums will be different. 
[22:44:45] <danshearer> And that is just the merest party trick. The 21st century has scale and human requirements which databases just haven't implemented, even though they can. And adding a demonstration feature to postgres' two million SLOC and very slow release cycles is a daunting prospect.
[22:45:12] * rickyrick turns on weekly ZFS scrubbing
[22:48:46] <danshearer> rickyrick, precisely. That gives you some protection against the party trick high-energy particles, but no protection against administrator error. So maybe you turn on fine-grained snapshots, and that covers you a bit more, which is great. But that is 2000s-era thinking.
[22:49:18] <rickyrick> pg_backrest was pretty good last time I used it
[22:49:56] <danshearer> But then, someone asks you: if I have a column which contains a checksum of the contents of every row, and I backed that column up every day, would that be useful?
[22:50:39] <danshearer> Because the sheer time required to copy a large database today means we need more efficient ways to determine what rows we care about. So that is what I would call a 21st century solution.
[22:51:00] <rickyrick> pg_backrest will back up the WAL log until a snapshot time
[22:52:07] <rickyrick> Wouldn't having row-level checksums mean you have to scrub the DB regularly for bitrot
[22:53:44] <danshearer> Well quite. And why do we have a WAL, anyway? That is a 25 year-old design to provide MVCC (ie full concurrency). Operating systems have moved on a lot since then, but not WALs. I do not profess to have the answers to this, but I do know that R is now processing benchmarking from the only mainstream database that doesn't have a WAL file. Let's see. It's a question worth asking.
[22:54:41] <rickyrick> I thought WAL provided atomicity
[22:55:00] <rickyrick> Either it's in the WAL or it's been transacted to the DB
[22:55:56] <danshearer> It is one way of doing so. However operating systems have evolved so that their virtual memory systems are excellent and arguably better at providing the primitives needed for MVCC. 
[22:56:36] <danshearer> That is the argument in favour of the LMDB key-value store, as opposed to the key-value store used by Postgres, and the one used by SQLite.
[22:56:36] <rickyrick> Ehhhh
[22:56:50] <rickyrick> I wouldn't trust the OS's claims to have flushed writes to disk
[22:57:00] <rickyrick> Didn't Apple get caught cheating on fsyncs just recently
[22:57:25] <danshearer> LMDB and the Pg K-V store are functionally equivalent, and the people who obsess about the last microsecond of buffer flushing study this in detail. 
[22:57:48] <rickyrick> Â¯\_(ãƒ„)_/Â¯
[22:57:49] <rickyrick> 2db4me
[22:58:18] <danshearer> It is possible to misuse all of these K-V stores (and there are not very many of them), but you won't find the people who write them saying that either approach is invalid. 
[22:58:52] <Bayes> Error in dnormal(sqrt(s2f)) : could not find function "dnormal" ðŸ˜…ðŸ˜…ðŸ˜…
[22:58:56] <danshearer> My point: nobody until recently has been able to fairly compare these things, and with luck we will get to the point where we can compare a half dozen of them.
[22:59:21] <danshearer> For which we need to process lots of benchmarking, for which we will use R :-)
[22:59:30] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[22:59:38] <Bayes> R is gud
[23:00:00] <danshearer> In principle we will be able to pull the K-V store from Postgres, put it under SQLite, and see how it compares. We have tools for that.
[23:00:50] <danshearer> So far we can compare three backends under SQLite. It would be nice to add another three. Nobody that I know of has asked these questions, because hitherto it has not been possible to pose them ;-)
[23:30:00] * shrysr makes notes as his 1-2 hour R script runs. This is an interesting thread and thanks for sharing danshearer.
[23:30:53] <shrysr> tdsmith: tyvm! that was indeed very interesting. I'ma sign up. 
[23:36:47] <Bayes> stop making notes and go write Java :D
[23:36:50] <danshearer> shrysr, perhaps this aspect may be of interest, regarding a JSON analogue that does privacy: https://lumosql.org/src/lumosql/doc/trunk/doc/rfc/README.md
[23:50:32] <shrysr> danshearer: oh so thats a Fossil site! super cool. I havent used Fossil, but it seems to me.. more functional than git based on my admittedly limited understanding. 
[23:52:10] <danshearer> shrysr, my personal view and research: https://cv.shearer.org/w/Fossil
[23:52:13] <shrysr> danshearer: if the codebase is in C and Tcl - howddya end up with R/Shiny, was that a conscious choice?
[23:53:36] <danshearer> Well I am aware of the connection, but really no. We have some skills in our tiny open source team but not exactly data presentation. Our nascent/budding R developer knows lots about data from a science degree but how to display the most info with the least lines of code? So I thought of R. 
[23:53:53] <danshearer> and because of the community around it. Take a bow, #R :-)
[23:56:47] * rickyrick farts
[23:56:50] <rickyrick> ( Í¡Â° ÍœÊ– Í¡Â°)
[23:56:53] <shrysr> So hmmm the data science degree did not cover R/Shiny? Hmm. yeah. in my experience, Dash the python alternative requires more work than Shiny. It prolly trumps shiny though in deployment and scaling, and FastAPI available to serve bits of code. 
[23:57:46] <shrysr> ~ 200 lines of code for a neat little shiny app/tool .. take THAT Java. 
[23:58:20] <shrysr> but #R on IRC... is TINY. And filled with farts. 
