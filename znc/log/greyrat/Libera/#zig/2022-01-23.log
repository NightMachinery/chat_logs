[00:00:50] *** Joins: rgrinberg (~textual@187.223.115.174)
[00:12:09] *** Joins: ur5us (~ur5us@203.86.198.200)
[00:30:31] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 268 seconds)
[00:33:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:53:50] *** Quits: frmdstryr (~jrm@172.58.203.202) (Ping timeout: 250 seconds)
[00:58:43] *** Quits: jacoscaz (sid512194@id-512194.tinside.irccloud.com) ()
[01:05:32] *** Quits: marcj (~marc@199.167.158.211) (Ping timeout: 250 seconds)
[01:07:24] *** Joins: marcj (~marc@199.167.158.211)
[01:10:56] *** Quits: yrlf (~yrlf@omnath.yrlf.at) (Quit: The Lounge - https://thelounge.chat)
[01:12:07] *** Joins: yrlf (~yrlf@omnath.yrlf.at)
[01:23:05] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:38:57] *** Quits: pkap (~pkap@185.209.196.147) (Ping timeout: 256 seconds)
[01:43:35] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:44:01] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89)
[02:05:18] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:7a5a:42e1:750a:339f)
[02:06:34] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:7a5a:42e1:750a:339f) (Remote host closed the connection)
[02:24:52] *** Joins: nektro (~meg@75-164-170-164.ptld.qwest.net)
[02:34:19] *** Joins: dadrian (~textual@c-24-128-31-181.hsd1.co.comcast.net)
[02:50:58] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[03:08:33] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[04:05:22] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 250 seconds)
[04:09:58] *** Quits: rgrinberg (~textual@187.223.115.174) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:11:14] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[04:20:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[04:22:26] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:24:11] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[04:51:02] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:52:47] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:55:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:56:09] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[04:59:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[05:17:13] *** Joins: livoreno (~livoreno@user/notzmv)
[05:17:35] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:22:12] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[05:23:34] *** Joins: okCiel (~okCiel@softbank126051111074.bbtec.net)
[05:29:01] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:37:35] *** Quits: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566) (Quit: WeeChat 3.4)
[05:42:08] *** Joins: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566)
[06:04:51] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[06:28:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[06:38:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:42:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:55:07] *** Quits: cgar (~cgar@072-187-006-075.res.spectrum.com) (Quit: leaving)
[07:23:02] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:42:49] *** Joins: Colt (~Colt@user/colt)
[07:43:53] *** Quits: okCiel (~okCiel@softbank126051111074.bbtec.net) (Ping timeout: 256 seconds)
[07:51:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[07:53:40] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[07:53:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:05:16] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[08:12:53] *** Quits: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:32] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[08:31:59] *** Joins: okCiel (~okCiel@softbank126051111074.bbtec.net)
[08:32:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[09:12:04] *** Quits: okCiel (~okCiel@softbank126051111074.bbtec.net) (Quit: WeeChat 3.4)
[09:21:19] *** Quits: dadrian (~textual@c-24-128-31-181.hsd1.co.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:26:17] <da_lorax> if I `_ = async whatever()` and the scope ends, does this cause problems for the async function's context ?
[10:39:47] *** Quits: Evo2 (~hastings@aj149242.dynamic.ppp.asahi-net.or.jp) (Ping timeout: 268 seconds)
[10:41:04] *** Joins: Evo2 (~hastings@aj144082.dynamic.ppp.asahi-net.or.jp)
[10:53:13] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[10:53:26] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[10:54:20] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Client Quit)
[11:03:05] *** Joins: terminalpusher (~terminalp@2a01:586:2a30:1:d3c4:1c64:1e25:f0f2)
[11:03:23] *** Quits: terminalpusher (~terminalp@2a01:586:2a30:1:d3c4:1c64:1e25:f0f2) (Remote host closed the connection)
[11:06:19] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:12:55] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:23:05] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9plitnrxp2k7y7w03ch6.ipv6.telus.net)
[12:46:58] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89)
[12:54:28] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[12:54:28] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[12:56:57] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[12:59:27] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[13:13:37] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[13:23:04] *** Joins: xackus (~xackus@185.15.0.3)
[13:23:57] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[13:23:57] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Write error: Connection reset by peer)
[13:33:50] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:45:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:42:25] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[14:46:50] <Franciman> is there a way to have inline functions in zig?
[14:48:08] <Franciman> ah callconv
[14:48:11] <Franciman> nice
[14:49:34] <nektro> inline fn foo() void {}
[14:50:19] <Franciman> uhm the docs say:
[14:50:24] <Franciman> fn foo() callconv(.Inline) void {}
[14:50:30] <nektro> both work
[14:50:35] <Franciman> :O
[14:50:38] <Franciman> aweszome
[14:50:41] <Franciman> thanks
[14:50:55] <nektro> üëç
[15:05:17] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[15:11:57] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9plitnrxp2k7y7w03ch6.ipv6.telus.net) ()
[15:23:02] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[15:24:07] *** Joins: haliucinas (~haliucina@5.20.153.21)
[15:56:35] *** Joins: xackus (~xackus@185.15.0.3)
[16:01:59] <Franciman> is there a way to define a shortcut for switch branch conditions?
[16:02:12] <nektro> can you elaborate
[16:02:14] <Franciman> i find myself switching often on '0','3','5','7'
[16:02:22] <Franciman> ehm sorry
[16:02:39] <Franciman> I mean, switch(x) { '0','3','5','7' => {...}, }
[16:02:51] <nektro> ah, not at the moment i think
[16:02:56] <Franciman> is there a way to write something like, const switch_conditions = '0','3','5','7'
[16:02:58] <Franciman> and do
[16:03:00] <nektro> afaik you have to write it out
[16:03:05] <Franciman> ok
[16:03:40] <dutchie> see `zig zen`:  "* Favor reading code over writing code." and "* Reduce the amount one must remember."
[16:04:14] <Franciman> in my case this would make the code clearer ^^'
[16:04:20] <Franciman> because it would convey the meaning
[16:04:29] <Franciman> of why this thing is repeated so many times
[16:04:32] <Franciman> but sure, i agree
[16:05:43] <dutchie> you could always refactor to `if (oddDigit(x)) {...}`
[16:05:55] <dutchie> depending on what else is in your switch
[16:06:43] <Franciman> i can sure try and see if it's efficient
[16:06:44] <Franciman> thanks!
[16:08:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:51:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[16:56:13] *** Joins: notzmv (~zmv@user/notzmv)
[16:59:27] <johnLate> If I want to call a c function "void foo(char *buf, size_t count);", is "c.foo(&buf[0], buf.len);" the correct way to call it from zig, assuming buf is a []u8?
[17:03:05] <ifreund> johnLate: buf.ptr is better, and actually has a different type from &buf[0] although the address is the same
[17:03:55] <ifreund> buf.ptr is [*]u8 (pointer to an unknown number of u8s) while &buf[0] is *u8 (pointer to a single u8)
[17:04:19] <ifreund> since you're likely coercing to a [*c]u8 pointer in this case though both work
[17:05:10] <johnLate> ifreund: thanks, didn't know about .ptr
[17:05:12] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89)
[17:05:25] <ifreund> no problem!
[17:06:59] <Franciman> if you would say what's the rationale behind types for zig
[17:07:07] <Franciman> would it be for allowing more efficient computations?
[17:07:21] <Franciman> i mean why isn't zig untyped?
[17:10:08] <ifreund> Franciman: because strict types help prevent bugs
[17:10:17] <nektro> robustness and maintainability
[17:10:22] <ifreund> and make software easier to maintain
[17:11:26] <Franciman> yes
[17:11:30] <Franciman> but then why not dependent types :D
[17:11:51] <nektro> what are "dependent types"
[17:12:07] <Franciman> nektro: it's a type system that is strong enough to allow you to prove things about your program
[17:12:25] <Franciman> you can use them (even if it can be very tedious) to write correct-by-construction programs
[17:12:37] <johnLate> also... I guess, calling c code or other libraries and talking to hardware will be somewhat funny without types
[17:12:46] <nektro> because there's a lot of valid and fast things that aren't "provable" in a formal sense
[17:12:54] <Franciman> sure but you can amend those cases
[17:13:10] <nektro> if that's what you want, that's what rust does
[17:13:16] <Franciman> no i don't
[17:13:20] <Franciman> i like zig
[17:13:28] <Franciman> i was asking what is your opinion
[17:13:45] <nektro> i also like zig
[17:19:17] <ifreund> Franciman: dependant types are super complex
[17:19:43] <ifreund> simplicity is another factor that helps prevent bugs and make software easier to maintain
[17:19:49] <ifreund> it's all tradeoffs
[17:26:15] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[17:26:15] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[17:27:02] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 250 seconds)
[17:28:05] *** Joins: nyah (~nyah@94.6.71.219)
[17:30:49] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[17:31:16] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[18:00:35] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[18:00:50] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[18:03:01] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[18:05:50] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[18:07:56] *** Joins: vladfaust (~vladfaust@93-80-188-4.broadband.corbina.ru)
[18:09:42] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[18:10:51] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[18:12:23] *** Joins: xackus (~xackus@185.15.0.3)
[18:17:45] *** Joins: arkurious (~arkurious@user/arkurious)
[18:18:50] <johnLate> Why is libpthread required when linking libc and using -fsingle-threaded? zig build-exe src/main.zig -lc -fsingle-threaded && objdump -p main | grep NEEDED  -> libpthread.so.0
[18:20:16] <vladfaust> Hello there. For quite some time I'm working on a custom language compiler; the plan was to use C++ and CMake, with LLVM lowering. Long story short, I'm dead tired by the cross-platform state of this stack. From everything I've analyzed, Zig looks like the best choice to write a compiler which would be easily built and cross-platform. I'm also
[18:20:16] <vladfaust> thinking of translating higher-level code to Zig instead of LLIR; this, however, a thing I'm concerned about. From what I've seen, it wouldn't be possible to statically link zig with my compiler into a single binary. Am I right?
[18:21:00] <nektro> johnLate: libpthread is included in libc
[18:21:33] <nektro> the .so file exists on systems for legacy compat
[18:22:47] <nektro> vladfaust: it might be possible in the future, but correct using the zig compiler as a library is not possible right now
[18:24:01] <vladfaust> nektro: I guess it would be theoretically possible after stage2 is complete?
[18:24:05] <johnLate> nektro: I can compile a c program with clang that does not have libpthread.so.0 listed in objdump, I wonder why the zig program has it...
[18:31:04] <ifreund> johnLate: note that with both recent enough glibc any any musl version libpthread.so is empty and all the symbols are in libc.so
[18:31:44] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:32:26] <ifreund> It would certainly be possible to make zig understand linking libc in a non all or nothing way, but it's not clear that that complexity would bring any tangible benefits
[18:33:39] <daurn> johnLate: note that even in single threaded you might still call e.g. `pthread_self`
[18:34:53] <vladfaust> A newbie question. How do you folk search packages? Can't find search option in Zigmod (cc nektro ?); awesome zig is smol...
[18:36:30] <daurn> packages for what? the way I find them in *any* language is duckduckgo/google
[18:38:20] <nektro> https://github.com/topics/zig-package
[18:38:43] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[18:38:44] <nektro> i'll be adding a glossary/search function to aquila very soon
[18:41:03] <nektro> vladfaust: yeah that would be the first blocker. once its ready i'll be looking into it since its a feature i'm interested in as well
[18:41:20] <vladfaust> Thanks for the topics tip! Looking forward for the search option in aquila¬†:)
[18:45:17] <nektro> its been on my todo list for a while and i just finished the zig port of the app from go so i'll finally be able to start ticking off items :)
[18:45:57] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89)
[18:54:57] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:02:49] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[19:02:49] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[19:11:16] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[19:11:16] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[19:18:30] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[19:18:30] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[19:18:57] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:19:01] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[19:19:17] *** Quits: Arw| (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:30:52] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[19:42:12] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:53:01] *** Joins: phaleth (~user@user/phaleth)
[20:06:30] *** Joins: codingstream (~chris@2600:1700:b2:6c30::2b)
[21:24:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:25:58] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[21:25:58] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[21:29:09] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[21:30:59] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[21:32:17] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[21:36:00] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[21:41:07] *** Joins: neceve (~quassel@2.26.93.228)
[21:41:39] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:45:06] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[21:57:29] *** Joins: frmdstryr (~jrm@172.58.206.226)
[22:08:45] *** Joins: tane (~tane@user/tane)
[22:13:50] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:14:08] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:20:58] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[22:23:50] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:acb8:882d:619e:5b89)
[22:52:23] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[22:52:23] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[22:56:10] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:00:54] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[23:00:54] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[23:01:53] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[23:06:06] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:13:13] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[23:13:13] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Write error: Connection reset by peer)
[23:15:37] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[23:18:12] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[23:27:48] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:31:33] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[23:31:33] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[23:42:47] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[23:43:08] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[23:43:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[23:48:14] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:53:25] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[23:53:25] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[23:56:30] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
