[00:00:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:03:46] <GNUHacker> ubuntu have non-free/libre software, it is dangerous
[00:03:55] <GNUHacker> https://www.gnu.org/philosophy/philosophy.html
[00:04:03] <GNUHacker> https://www.gnu.org/distros/free-distros.html
[00:05:25] <puchu> i don't like it because it patches a lot of crap into a lot of libs/apps
[00:05:42] *** Parts: bremner (~bremner@notmuch/developer/bremner) (Using Circe, the loveliest of all IRC clients)
[00:05:57] <GNUHacker> i dont like it because i dont like the malware
[00:06:03] <GNUHacker> https://www.gnu.org/proprietary/proprietary.html
[00:07:06] <puchu> :)
[00:16:35] <furrymcgee> give em some credits for hosting a public keyserver 
[00:28:31] *** Joins: Betal (~Betal@user/betal)
[00:31:01] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[00:32:24] *** Joins: acidsys (~LSD@2.lsd.systems)
[00:36:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da)
[00:46:18] *** Joins: duxsco (~Thunderbi@user/duxsco)
[00:57:19] *** Quits: erle- (~stephan@2a04:ee41:3:3297:d77:c48c:82b1:1104) (Quit: Leaving)
[01:14:10] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[01:23:02] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:27:01] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Ping timeout: 240 seconds)
[01:31:12] <puchu> furrymcgee you are running a pub keyserver? which one`
[01:32:55] *** Joins: duxco (~Thunderbi@user/duxsco)
[01:33:52] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 250 seconds)
[01:33:53] *** duxco is now known as duxsco
[01:44:15] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[01:48:03] <furrymcgee> sks for testing how to work independent in case other servers are down
[02:16:01] *** Joins: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net)
[02:17:57] <nlhowell1> /buffer 46
[02:19:22] <duxsco> furrymcgee,: you could run your own keyserver using nginx: https://github.com/duxsco/gpg-keyserver
[02:28:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da) (Ping timeout: 240 seconds)
[02:29:31] <puchu> yeah i can run nearly everything, the question is, am i motivated to take care of it
[02:29:39] <puchu> i'm not the "run and forget guyW
[02:29:41] <puchu> i'm not the "run and forget guy"
[02:40:24] <furrymcgee> only for retrieval is kind of limited function
[02:41:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[02:42:10] <duxsco> it's sufficient for me. everything else is only needed if you want other to publish their public keys on your keyserver.
[02:42:19] <duxsco> others
[02:43:28] <duxsco> furrymcgee: what else do you want to have?
[02:49:37] <duxsco> you could use https://github.com/mailvelope/keyserver or https://gitlab.com/hagrid-keyserver/hagrid
[02:49:43] <duxsco> but, that's overkill for me
[02:57:21] <furrymcgee> they are published for lookup no?
[02:57:50] <duxsco> i don't get your question. who is "they"?
[02:58:31] <furrymcgee> the clients key
[02:58:33] <duxsco> the are all keyserver solution. and, a keyserver is there for publishing public keys...
[02:58:51] <duxsco> s/^the/they/
[02:59:57] <furrymcgee> oh I see I misunderstood 'only for retrieval' in redme
[03:00:35] <duxsco> by retrieval i mean, "gpg --keyserver hkps:/bla --recv-keys 0xasdfasdf"
[03:01:05] <furrymcgee> so clinets can send and receive keys
[03:01:29] <duxsco> if you are worried about the availability of your public keys, publish them at https://keys.openpgp.org as well as at https://keys.mailvelope.com
[03:03:00] <duxsco> furrymcgee, are you talking about my solution? with my solution, you need to dump the public keys you want to publish, e.g.: gpg --export --armor maria.musterfrau@example.org work@example.org > pubkey.asc
[03:03:28] <duxsco> then, you run the script on that to get the nginx config, e.g.: bash hkps2nginx.sh -l pubkey.asc -r /var/www/keys/
[03:04:10] <duxsco> if something changes, you need to repeat these steps and replace the config on your nginx server
[03:09:15] <furrymcgee> yes I would expect this to work without downtime
[03:11:56] <furrymcgee> thank you anyway for the links
[03:14:05] <duxsco> downtime? what downtime? update the config and do something like "/etc/init.d/nginx reload"
[03:15:16] <duxsco> my config changes once a year, when i update the expiration date of my public keys
[03:16:31] <furrymcgee> it should be automated
[03:17:11] <duxsco> what about pipelines?
[03:18:29] <duxsco> what do you mean by "it"? updating the expiration dates? in that case, no. updating expiration dates must be a conscious decision and must not be automated (IMHO)
[03:21:44] <furrymcgee> the steps to publish a client key
[03:29:11] *** Quits: spare (~3aosz7tox@user/spareproject) (Remote host closed the connection)
[03:29:29] *** Joins: spare (~3aosz7tox@user/spareproject)
[03:30:00] <duxsco> why shouldn't you be able to automate this?!?
[03:30:59] <duxsco> for example: publish your publish key to github and use github actions. or, use jenkins or whatever you want...
[03:31:37] <duxsco> or, use a s3 bucket and aws lambda
[03:34:06] <duxsco> but, let's be realistic. how often do you expect to update your public key? automation should be use for tasks that need to be done often, especially when they are error-prone. but, it's not such a big challenge to execute "gpg --export", run the bash script, update your nginx config and do a reload
[03:35:50] <duxsco> and, you only need to update your nginx config if the key ids changed. if you only changed expiration dates you only need to dump your public key in /var/www/keys/ again and reload nginx
[03:36:11] <duxsco> i have to go to bed. gn8
[03:58:06] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: https://www.gnu.org/education/)
[03:59:33] *** Quits: signofzeta (~signofzet@user/signofzeta) (Ping timeout: 276 seconds)
[04:02:37] *** Joins: signofzeta (~signofzet@user/signofzeta)
[04:05:02] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:05:56] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:06:19] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:30:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:31:41] *** Quits: puchu (~puchu@user/puchu) (Quit: leaving)
[05:36:18] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[05:36:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[05:40:25] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[05:47:00] *** Joins: shokohsc4 (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[05:48:13] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:48:13] *** shokohsc4 is now known as shokohsc
[06:00:48] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 250 seconds)
[06:45:04] *** Quits: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net) (Quit: leaving)
[07:29:05] *** Joins: marcoagpinto (~moc@user/marcoagpinto)
[09:24:41] *** Quits: zro (~zro@user/zro) (Ping timeout: 256 seconds)
[09:26:30] *** Joins: zro (zro@user/zro)
[09:53:14] *** Quits: jealousmonk (~user@2804:431:e7c5:b880:889f:205:ed34:5b22) (Quit: ERC (IRC client for Emacs 27.1))
[09:53:46] *** Joins: xse (~xse@user/xse)
[10:01:46] *** Joins: labrador (~labrador@user/labrador)
[10:05:47] <labrador> Hi
[10:07:10] <labrador> I signed a person's keys,now my trust in it is full,and I cannot sign it anymore. So its clearly signed by me. The problem is when I check the output of gpg is blank. The guide shows two signs should appear,the self-sign and my sign.
[10:07:14] <labrador> So what gives?
[10:07:56] <labrador> When I said check,that meant a gpg --edit-key uid and then a check.
[10:18:13] *** Quits: spare (~3aosz7tox@user/spareproject) (Remote host closed the connection)
[10:34:01] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[11:15:07] *** Joins: spare (~3aosz7tox@user/spareproject)
[11:23:09] *** Joins: erle- (~stephan@2a04:ee41:3:3297:1957:c832:6549:8e7)
[11:24:15] <labrador> Can anyone help me?
[11:24:28] <labrador> Its been so looong
[11:51:19] *** Joins: reset (~reset@user/reset)
[12:18:51] *** Joins: duxsco (~Thunderbi@user/duxsco)
[12:30:09] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (Quit: You have been kicked for being idle)
[12:36:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:52:54] *** Quits: spare (~3aosz7tox@user/spareproject) (Remote host closed the connection)
[13:08:47] *** Quits: ueberall (ueberall_l@user/ueberall) (Quit: ZNC)
[13:10:46] *** Joins: ueberall (ueberall_l@user/ueberall)
[13:32:19] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:33:03] <GNUHacker> hi
[13:33:25] <GNUHacker> labrador: send me ur keys
[13:33:35] <GNUHacker> andsign my key
[14:01:55] <hnj> labrador: show that?
[14:02:11] <labrador> what?
[14:03:09] <hnj> labrador: everything (; your commands, the outputs, a link to the guide you are talking about, the actual problem you are having â€¦
[14:03:39] <labrador> I signed a person's keys,now my trust in it is full,and I cannot sign it anymore. So its clearly signed by me. The problem is when I check the output of gpg is blank. The guide shows two signs should appear,the self-sign and my sign.
[14:03:45] <labrador> When I said check,that meant a gpg --edit-key uid and then a check.
[14:03:48] <labrador> So what gives?
[14:03:51] <labrador> This
[14:04:03] <labrador> And the guide is gpg's handbook
[14:04:09] <labrador> On its guides page
[14:04:34] <hnj> if you want help, make it easy for people to help you â€¦
[14:04:46] <labrador> ok got it
[14:04:50] <GNUHacker> labrador: i can help you
[14:04:56] <GNUHacker> wut u need?
[14:05:35] <labrador> hnj, this 3>https://gnupg.org/gph/en/manual.pdf
[14:06:07] <GNUHacker> https://www.gnupg.org/gph/en/manual.html < I love this guide, please weasel add it to topic
[14:07:06] <labrador> pg 10 hnj 
[14:07:16] <labrador> On that check outputs signatures
[14:07:22] <labrador> On mine it does not
[14:08:09] <GNUHacker> labrador: i think that you can check your own sign with "check" command
[14:08:28] <GNUHacker> can't*
[14:08:50] <labrador> The guide shows both GNUHacker,mine and the self sign
[14:08:59] <labrador> So I don't know whats up
[14:09:19] <GNUHacker> https://www.gnupg.org/gph/en/manual.html this guide?
[14:09:25] <labrador> yes
[14:09:44] <GNUHacker> maybe a bug?
[14:10:07] <GNUHacker> can you see others signs with "check"?
[14:10:19] <labrador> I see no output
[14:10:21] <labrador> its all blank
[14:10:25] <labrador> Which is impossible
[14:10:37] <labrador> The keys must have self signed
[14:10:51] <labrador> So there should be atleast 1
[14:11:07] <GNUHacker> check this key, have many signs: https://stallman.org/rms-pubkey.txt
[14:12:12] <labrador> One more info,I asked in #linux where a guy told me to gpg --check-sigs
[14:12:15] <labrador> That actually worked
[14:12:33] <labrador> I could see the sign I made
[14:12:48] <labrador> So it definitely works,its just a problem with check
[14:13:12] <GNUHacker> linux is a kernel, is non related with gpg
[14:13:46] <duxsco> GNUHacker: is signing still a thing? hpks://keys.openpgp.org and hkps://keys.mailvelope.com won't accept signatures due to valid reasons. i personally use "trust-model direct" among others in my gpg.conf
[14:13:47] <hnj> I didnâ€™t think, this 'check' command was supposed to actually show sigs, only check them â€¦ it doesnâ€™t do that here either.
[14:14:00] <labrador> hnj, hmmm. So the guide was wrong
[14:14:25] <labrador> Nice I guess
[14:14:51] <labrador> duxsco, its still a thing. pgp.mit.edu still takes signs
[14:14:56] <hnj> I think so. but maybe I misunderstand the command â€¦ I always use(d) 'gpg --list-sigs keyid' to show sigs.
[14:14:56] <GNUHacker> duxsco: i dont understand it, but i dont trust in keyservers, i share my keys in mails or in my website
[14:15:33] <labrador> And I hate openpgps method,that means my keys validity depends on my control of the email
[14:15:48] <labrador> Not cryptographically verified distributed trust
[14:16:18] <labrador> hnj, thanks for that
[14:16:19] <labrador> :)
[14:16:45] <hnj> 'validity depends on my control of the email'? I donâ€™t quite follow â€¦
[14:17:17] <labrador> The openpgp key server takes an email confirm before allowing the key in the server
[14:17:35] <GNUHacker> sign keys is only a security system, you can trust in non-signed keys
[14:17:37] <labrador> So if my email gets hacked,anyone can upload weird stuff
[14:17:42] <hnj> ah, that â€¦ no, I donâ€™t think thatâ€™s true.
[14:17:45] <labrador> And everyone trusts it
[14:18:39] <GNUHacker> labrador: I can upload a (fake) key with your UID to a keyserver
[14:18:52] <hnj> labrador: Â» Once the owner gives consent by verifying their email address, the key can be found via search by address.Â« if you donâ€™t need it to be found by address, you donâ€™t have to do that â€¦
[14:19:05] <GNUHacker> because it i dont trust in keyservers
[14:19:37] <labrador> Also
[14:19:40] <labrador> one more question
[14:20:03] <labrador> What is the purpose of the [full] in the output of gpg --list-keys?
[14:20:49] <hnj> trust level IIRC
[14:21:02] <duxsco> labrador: pgp.mit.edu is not GDPR compliant if mail addresses are shared
[14:21:25] <duxsco> GNUHacker: keyservers are not about trust. they are for sharing public keys
[14:21:52] <GNUHacker> you can use the keyservers if you wish, i dont use it
[14:22:05] <labrador> hnj, hmmm. But look at this.
[14:22:38] <labrador> uid           [  full  ] GNU Hacker <gnuhacker@member.fsf.org>
[14:22:39] <labrador> gpg: depth: 1  valid:   1  signed:   0  trust: 0-, 0q, 1n, 0m, 0f, 0u
[14:22:44] <labrador> How does that make any sense
[14:22:52] <GNUHacker> labrador: nice
[14:22:53] <labrador> Its fully trusted and not
[14:22:56] <labrador> At the same time
[14:23:20] <labrador> Its so weird
[14:23:30] <labrador> Thats why I thought it meant something else
[14:23:38] <GNUHacker> labrador: you must read the guide
[14:23:57] <labrador> I have,my problem is these two dont match up
[14:23:59] <GNUHacker> the trust file is local
[14:24:20] <labrador> The first says that I have full trust,second says I have no trust
[14:24:27] <labrador> hnj, you got anything?
[14:25:42] <GNUHacker> you are confused
[14:25:53] <GNUHacker> read the guide
[14:25:57] <GNUHacker> https://www.gnupg.org/gph/en/manual.html
[14:26:19] <labrador> I dunno maybe,the second one clearly says I have 1 key not trusted. And there are only two keys in my keyring.
[14:26:23] <labrador> One of them is mine
[14:26:39] <labrador> And I have read the entirity of that GNUHacker 
[14:26:46] <GNUHacker> labrador: https://www.gnupg.org/gph/en/manual.html#AEN346
[14:27:31] <GNUHacker> labrador: use the "trust" command
[14:33:42] <xse> Hi, speaking about keyservers, i'm trying to figure out gpg and i'm a bit unsure about that step, i ended up having one [C] key pair, of which the private key is now only on backups, and that [C] thing has two subkeys [S] and [E], am i supposed to send [C] and will that include [S] and [E], or should i send [S] and [E] separately ?
[14:33:55] <labrador> Ok yeah I'm an idiot. The [full] is the keys validity,not the trust.
[14:34:06] <labrador> And its fully valid because I signed it
[14:34:13] <labrador> But trust is undefined
[14:34:17] <labrador> Makes sense
[14:36:06] <duxsco> xse: [S] and [E] is sufficient
[14:36:24] <duxsco> i mean having that in your ~/.gnupg for daily work
[14:36:37] <duxsco> i have [c] on my air gapped machine
[14:37:31] <duxsco> looks similar to this: https://github.com/duxsco/gpg-smartcard/blob/main/assets/gnupg_secret_keys.png
[14:37:40] <labrador> duxsco, having the master key [SC] instead of [C] is fine right?
[14:37:52] <labrador> I don't expect to sign using my master key
[14:37:52] <xse> duxsco: yup i tested those they work great :p i'm just wondering which ones of those 3 fingerprints i should send to keyservers ^^
[14:38:40] <labrador> I think till the time I don't sign using it,it makes no difference wether its [SC] or [C]
[14:38:53] <duxsco> labrador: yeah, it's fine. it personally have the primary key with only [C] and depending on requirements separate subkeys for [S], [E] and [A]
[14:39:15] <duxsco> labrador: i described it in here: https://github.com/duxsco/gpg-smartcard#create-a-gnupg-keypair
[14:39:20] <labrador> nice
[14:42:04] <duxsco> example: i use secure boot to sign my efi binary. gnupg is used to sign kernel, initramfs etc. as i only need the "sign" feature, i have [C] primary and [S] subkey. no [E] and no [A]
[14:43:48] <duxsco> here are my thoughts on keyservers: https://github.com/duxsco/gpg-web-of-trust#background-information
[14:47:54] <duxsco> and, my gpg.conf which refrains from using signed public keys ("trust-model direct", "import-options import-minimal", "export-options export-minimal"): https://github.com/duxsco/gpg-config-and-scripts/blob/main/gpg.conf
[14:48:56] <labrador> duxsco, oh thats a nice setup
[14:50:14] <duxsco> i have my public keys published over dane, wkd and my own nginx-based keyserver
[14:50:33] <duxsco> personally, i like dane
[14:51:09] <GNUHacker> labrador: yes, "trust" is not "validate"
[14:51:34] <labrador> GNUHacker, do I just send you your and mine keys in a mail?
[14:51:53] <labrador> And you sign mine and send it back to me?
[14:57:59] <GNUHacker> labrador: nice
[14:58:10] <GNUHacker> but encrypt/sign this mail
[14:58:46] <labrador> ok,but why?
[14:59:02] <GNUHacker> because i whish it
[14:59:16] <labrador> lmao ok
[14:59:16] <duxsco> to proof you have ownership of the keypair
[14:59:55] <labrador> duxsco, but I already have a self sign on my keys
[15:00:24] <GNUHacker> when u gen a key, you self sign it
[15:04:00] <hnj> labrador: did you just sign GNUHackerâ€™s key because they asked for it? how have you verified their identity?
[15:04:53] <labrador> hnj, well I know the id from here,he gave me his fingerprint here,and I found the key on a site by his name
[15:05:01] <labrador> I think thats good enough verification
[15:05:11] <labrador> So I signed it
[15:06:49] <GNUHacker> :D
[15:07:09] <duxsco> labrador: self-sign doesn't proof that you have ownership of the keypair. i could theoretically pull your public key from a keyserver, send it to a third party to get signed while claiming that i am you
[15:08:08] <duxsco> to mitigate this the signer should demand, for example, for the public key to be send via signed mail, e.g. https://github.com/cburkert/pgp-cert-policy/blob/master/policy.txt#L60-L62
[15:09:13] <hnj> labrador: well, usually a key includes a real name and you probably havenâ€™t verified that â€¦ if it doesnâ€™t include one but only a nickname, it might be fine â€¦
[15:09:33] <GNUHacker> gnupg is not hosted on microsft github, duxsco is sending many unofficial gpg tools
[15:09:38] <labrador> hnj, yeah his key only has GNUHacker. Mine only has labrador 
[15:09:42] <labrador> So its fine
[15:10:08] <labrador>  uid           [  full  ] GNU Hacker <gnuhacker@member.fsf.org>
[15:10:12] <labrador> this
[15:10:21] <GNUHacker> mu uid 
[15:10:22] <duxsco> GNUHacker: i didn't claim that gnupg is hosted on github
[15:10:54] <labrador> duxsco, I still don't understand what you just said,But I'll sign my email sure
[15:11:09] <GNUHacker> duxsco: i just tell it
[15:11:52] <labrador> And the GNUHacker here also has his cloak as a member of the fsf.
[15:12:00] <labrador> So the email is fine too
[15:12:19] <GNUHacker> yes
[15:13:01] * GNUHacker check the mail
[15:13:08] * labrador is reading the guide again to figure out how to sign
[15:13:47] <GNUHacker> labrador: use 
[15:13:48] <GNUHacker> gpg --edit-keys gnuhacker*
[15:13:51] <GNUHacker> sign
[15:13:53] <GNUHacker> save
[15:14:02] <labrador> no not that,I mean sign an email
[15:14:07] <GNUHacker> oh
[15:14:10] <labrador> Your key is already signed
[15:14:30] <GNUHacker> wich your mail client?
[15:15:07] <GNUHacker> I sign+encrypt mails with C-c RET C-e RET
[15:15:21] <labrador> GNUHacker, I am not living in emacs land
[15:15:23] <GNUHacker> sign only with C-c RET C-s RET
[15:15:25] <labrador> So that wont work
[15:15:39] <GNUHacker> :,/
[15:16:06] <labrador> anyway I'll do it manually this time,to get a feel for it
[15:16:19] <labrador> And then set it up later in evolution
[15:17:46] <duxsco> labrador: another way would be for you to send the exported public back to GNUHacker via encrypted mail for him to publish 
[15:19:44] <duxsco> actually, this would be my preferred way
[15:21:08] <labrador> So,do I need to encrypt my message or the entire key files too?
[15:21:16] <GNUHacker> labrador: emailselfdefense.fsf.org 
[15:21:38] <GNUHacker> learn how manage mail clients to sign / encrypt mails in emailselfdefense.fsf.org/
[15:24:32] <duxsco> nice link. but, i prefer ed25519/cv25519 over rsa4096
[15:24:48] <GNUHacker> i use ECC
[15:25:35] <GNUHacker> labrador use RSA i think
[15:25:52] <duxsco> or ed448/cv448 if you are sure all your communications partners use gnupg >= 2.3.0
[15:25:53] <duxsco> https://dev.gnupg.org/source/gnupg/browse/tag%253A%2520gnupg-2.3.0/NEWS;c922a798a341261f1aafaf7c1c0217e4ce3e3acf$32
[15:26:21] <GNUHacker> yes
[15:27:23] <duxsco> i use smartcard and they don't support *25519. had to create nistp subkeys :/
[15:27:28] <GNUHacker> https://emailselfdefense.fsf.org we make this guide for noobs
[15:28:26] <GNUHacker> how work a smart card, idk
[15:29:41] <duxsco> JavaCard 3.1 supports *25519 and *448: https://docs.oracle.com/en/java/javacard/3.1/specnotes/index.html#JCSRN-GUID-48D9D6BF-B4C1-4114-9A61-5452BE82E1D2
[15:30:04] <duxsco> but, smartcards supporting JavaCard 3.1 are not available...
[15:30:22] <GNUHacker> labrador: why sign the mail? because if you dont sign it, the mail can be edited by ISPs, mail providers, etc
[15:32:07] <GNUHacker> yew java!
[15:34:13] <labrador> I like RSA,all my keys are rsa4096
[15:34:25] <labrador> GNUHacker, yay java!
[15:34:55] <GNUHacker> rsa is nice bu can be "hacked"!
[15:34:59] <duxsco> i like how small ecc public keys are
[15:35:03] <labrador> Not really GNUHacker 
[15:35:06] <labrador> Its not broken
[15:35:15] <duxsco> rsa is not brocken
[15:35:17] <GNUHacker> duxsco: yes, so cutes
[15:35:19] <duxsco> ken
[15:35:26] <labrador> Atleast till now the largest ones broken are rsa768
[15:35:31] <labrador> So 4096 is very safe
[15:35:59] <labrador> I dont trust ECC
[15:36:13] <labrador> I think the NIST may have poisoned it
[15:36:18] <labrador> So I use rsa
[15:36:28] <duxsco> ecc is not only nistp*
[15:36:41] <duxsco> see https://safecurves.cr.yp.to/
[15:36:42] <GNUHacker> a rsa4096 can get fucked by a google super computer 
[15:36:52] <labrador> GNUHacker, nope
[15:36:58] <labrador> Its unbroken
[15:37:03] <labrador> Nobody can break it
[15:37:11] <duxsco> only chuck norris
[15:37:13] <GNUHacker> super computers can
[15:37:17] <labrador> GNUHacker, no
[15:37:25] <hnj> GNUHacker: you keep saying that and I already asked for a source or reference but you donâ€™t provide one. either provide one or stop saying it, please.
[15:37:38] <duxsco> +1
[15:37:46] <labrador> hnj, yeah. RSA is secure. So many keyrings use rsa2048
[15:38:03] <labrador> Like all of manjaro's is on rsa
[15:38:12] <GNUHacker> you can use rsa, i preffer ed25519/cv25519
[15:38:34] <duxsco> rsa2048 provides only 112 bit keystrength. see the first table at https://de.wikipedia.org/wiki/Elliptic_Curve_Cryptography
[15:38:38] <duxsco> sry, it's german
[15:39:01] <labrador> duxsco, well yeah. A lot of people and websites still use it tho
[15:39:11] <labrador> And nobody breaks them
[15:39:16] <duxsco> gnupg defaults to rsa3072 afaik
[15:39:47] <GNUHacker> use rsa if you wish i dont use it
[15:39:56] <duxsco> +1
[15:39:58] <labrador> GNUHacker, thats an improvement
[15:40:10] <GNUHacker> nice
[15:42:16] <GNUHacker> labrador: sign my key
[15:42:22] <hnj> the problem with rsa is that 4096 only provides 28 bit more than 2048, i.e. 140 IIRC â€¦ and 112 is already enough for most things AFAIU
[15:42:35] <labrador> I have GNUHacker 
[15:42:53] <labrador> hnj, oh. Thats low gains for a doubling in length
[15:44:15] <hnj> https://en.wikipedia.org/wiki/RSA_(cryptosystem) says Â»As of 2020, the largest publicly known factored RSA number had 829 bits (250 decimal digits, RSA-250).[32] Its factorization, by a state-of-the-art distributed implementation, took approximately 2700 CPU years. In practice, RSA keys are typically 1024 to 4096 bits long. In 2003, RSA Security estimated that 1024-bit keys were likely to become crackable by
[15:44:17] <hnj> 2010.[33] As of 2020, it is not known whether such keys can be cracked, but minimum recommendations have moved to at least 2048 bitsÂ«
[15:45:16] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[15:45:50] <signofzeta> You never know what kind of capacity nation-states (or cloud providers) can use.
[15:46:23] <hnj> labrador: exactly. and the difference in speed between 2048 and 4096 is noticeable at least with smartcards. operations with 4096 take a few seconds, 4-8 or so.
[15:46:35] <signofzeta> besides, RSA is extremely slow and power-hungry compared to newer algorithms like Ed25519.  if you plan to use your key to sign/encrypt files, a shorter key would be better.
[15:46:38] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[15:47:05] <signofzeta> more importantly, suppose they do crack RSA-2048 in the next 5-10 years. then you have to go through the pain of creating a new key, sending it out to everyone, transitioning, etc.
[15:48:17] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[15:48:41] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[15:49:00] <hnj> correct, but all of that applies to any algorithm and strength â€¦
[15:49:17] <signofzeta> good point
[15:49:31] <signofzeta> I just think it's best to start ahead of the curve, rather than have to play catch-up later
[15:51:34] <hnj> signofzeta: sounds good in theory but what does that effectively mean?
[15:57:38] <signofzeta> unless you need compatibility with legacy versions of GnuPG, I feel it's best to start with the newer algorithms.  just my two cents, though
[15:59:38] <hnj> or other pgp implementations (I just learned yesterday that ed25519 is not standardized (yet)), or want to use a smartcard, or donâ€™t trust the NIST curves. other than that I agree.
[16:01:46] <signofzeta> yeah, I'm aware that hardware devices can set their own requirements.  i tried adding an SSH key to my U2F key and had to pick ECDSA.  a surprise at the time, but I guess it makes sense.
[16:03:07] <signofzeta> besides, if anyone wanted to prove that RSA-1024 could be cracked, they'd need hundreds of thousands of dollars worth of cloud computing time, and I don't think anyone would start a GoFundMe for that.
[16:03:18] <signofzeta> much less contribute to one
[16:05:07] <labrador> hey GNUHacker 
[16:05:10] <labrador> Sent the email
[16:05:52] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[16:07:20] * GNUHacker check the mail
[16:10:07] <GNUHacker> no subject in the mail lol
[16:10:40] <labrador> GNUHacker, thats unencrypted
[16:10:47] <labrador> I don't leak info
[16:10:59] <GNUHacker> so, you has leaked many info
[16:11:10] <labrador> how?
[16:11:17] <GNUHacker> you only has signed/encrypted the text, not the keys
[16:11:25] <labrador> I have encrypted the keys
[16:11:34] <labrador> Thats why they are x.asc.enc
[16:11:39] <GNUHacker> emacs dont think so
[16:11:42] <labrador> Encrypted armored keys
[16:11:55] <labrador> Well go see it in gpg ig
[16:12:02] <GNUHacker> wait
[16:12:31] <labrador> what
[16:14:13] <labrador> what GNUHacker 
[16:14:43] <GNUHacker> wait
[16:15:09] * labrador has been waiting forever
[16:16:48] <GNUHacker> ok, emacs unencrypted the keys automaticly
[16:17:30] <GNUHacker> but also you can insert the keys in the body mail
[16:18:52] <labrador> GNUHacker, I could
[16:18:58] <labrador> But why to waste time
[16:19:21] <GNUHacker> the key files are bugged
[16:19:27] <labrador> no they are not
[16:19:28] <GNUHacker> i cant import it
[16:19:29] <duxsco> i like thunderbird. it's getting on my nerves that it doesn't support smartcards with their gpg implementation. had to use claws-mail and evolution, but they had some weirdness i didn't like and can't remember. now, i just use webmail...
[16:19:52] <GNUHacker> emacs support cards
[16:19:58] <duxsco> i don't have anybody anyway to communicate using gpg sign/encrypted mails...
[16:20:09] <labrador> GNUHacker, you know what just leave emacs(hard for you ik). Go to gpg,decrypt the files,then import the ascii files manually
[16:20:35] <GNUHacker> never
[16:20:59] <GNUHacker> ill use emacs dired epg mode
[16:21:47] <labrador> GNUHacker, the only way to know wether emacs is the problem or my keys are the problem is to go directly to gpg
[16:22:22] <GNUHacker> gpg --decrypt fail
[16:22:57] <labrador> how does it fail?
[16:23:17] <labrador> I used this command,just to show for reference
[16:23:45] <GNUHacker> you has used your own public key to encrypt the files lol
[16:24:20] *** Joins: spare (~fjx5hgc3d@user/spareproject)
[16:24:41] <labrador> gpg -R gnuhacker -o gnuhacker.asc.enc --encrypt gnuhacker.asc
[16:24:42] <labrador> nope
[16:24:45] <labrador> your keys
[16:26:50] <GNUHacker> i cant decrypt this
[16:26:59] <GNUHacker> only the mail body
[16:28:02] *** Quits: spare (~fjx5hgc3d@user/spareproject) (Remote host closed the connection)
[16:28:56] <labrador> GNUHacker, whats the error
[16:29:44] <GNUHacker> error say: you have not the private key
[16:30:06] <GNUHacker> can you decrypt the files?
[16:30:12] <GNUHacker> try it
[16:30:41] <labrador> GNUHacker, hmm. That -R option might have caused it. That strips out the recipient key id. Causing gpg to brute-force with all your three [E] keys
[16:30:59] <labrador> I already cannot decrypt,I am not a recipient
[16:31:14] <labrador> But I can resend with -r. Maybe that work
[16:32:55] <GNUHacker> labrador: use .gpg instead .enc
[16:33:21] <GNUHacker> i preffer
[16:34:01] <labrador> are you doing it on gpg?
[16:34:04] <labrador> or emac?
[16:34:57] <labrador> GNUHacker?
[16:35:56] <GNUHacker> both
[16:37:04] <labrador> Well then ig I'll resend it with -r
[16:39:50] *** Joins: spare (~tzlrbieuk@user/spareproject)
[16:40:46] <GNUHacker> if you want ascii output you must add -a
[16:40:54] <GNUHacker> labrador ^
[16:41:18] <hnj> duxsco: oh, if you ever go back to try claws again and figure out what bugged you, please let me know. Iâ€™m curious and I love claws (:
[16:44:36] *** Joins: emagex (~user@user/emagex)
[16:46:09] <labrador> GNUHacker, done
[16:46:14] <labrador> check your email
[16:46:21] <labrador> This time in ascii and with -r
[16:46:27] <labrador> Should work
[16:47:35] * GNUHacker check the mail
[16:48:32] <GNUHacker>  pls use subjets in mails lol
[16:52:10] <labrador> ok does it work tho?
[16:53:07] <GNUHacker> labrador: ok, it works
[16:53:15] <labrador> ok
[16:53:16] <labrador> nice
[16:53:26] <labrador> Now do what I said in the mail please
[16:58:55] *** Quits: spare (~tzlrbieuk@user/spareproject) (Ping timeout: 276 seconds)
[17:16:42] *** Joins: spare (~tbi4aktna@user/spareproject)
[17:33:34] *** Joins: gast0n (~g4570n@user/gast0n)
[17:39:59] *** Joins: duxco (~Thunderbi@user/duxsco)
[17:41:23] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 268 seconds)
[17:41:23] *** duxco is now known as duxsco
[17:43:40] <duxsco> hnj: it was the display of signed emails. i had to click through in order to know whether i trust the signature or not
[17:47:20] <hnj> duxsco: hrm, there is an option "automatically check signatures" then that shouldnâ€™t be necessary, IIUC
[17:52:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:58:39] <duxsco> hnj: hm, i thought i looked everywhere
[18:00:38] <hnj> duxsco: thatâ€™s a common issue with claws for me :D I thought I looked everywhere but the option is exactly where I should have expected it to be but somehow managed to not find it â€¦ itâ€™s something like usb-a plugs: doesnâ€™t fit, turn around, doesnâ€™t fit, turn around again, then it fits.
[18:05:02] *** Joins: nvmd (~nvmd@user/nvmd)
[18:16:13] *** Quits: spare (~tbi4aktna@user/spareproject) (Remote host closed the connection)
[18:16:36] *** Joins: xse_ (~xse@user/xse)
[18:17:09] *** Quits: xse (~xse@user/xse) (Ping timeout: 268 seconds)
[18:17:09] *** xse_ is now known as xse
[18:58:43] *** Joins: jealousmonk (~user@2804:431:e7c4:f875:847b:37db:2997:bc93)
[19:04:35] *** Quits: erle- (~stephan@2a04:ee41:3:3297:1957:c832:6549:8e7) (Quit: Leaving)
[19:05:01] *** Joins: erle- (~stephan@2a04:ee41:3:3297:1957:c832:6549:8e7)
[19:07:04] *** Joins: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[19:07:13] *** Quits: Kulrak (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[19:17:54] *** Quits: raghavgururajan (ea769b8000@user/raghavgururajan) (Remote host closed the connection)
[19:18:49] *** Joins: raghavgururajan (ea769b8000@user/raghavgururajan)
[19:49:32] *** Quits: nlhowell1 (~nlhowell@172.58.84.72) (Ping timeout: 240 seconds)
[19:50:01] *** Joins: nlhowell1 (~nlhowell@172.58.84.72)
[19:52:08] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[19:53:22] *** Quits: nlhowell1 (~nlhowell@172.58.84.72) (Read error: Connection reset by peer)
[19:54:58] *** Parts: ewwegweg (~ewwegweg@user/ewwegweg) (Leaving)
[19:56:19] *** Joins: nlhowell1 (~nlhowell@172.58.87.63)
[20:02:50] *** Joins: georgios (~georgios@user/georgios)
[20:21:29] *** Joins: spare (~tbi4aktna@user/spareproject)
[20:29:07] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:29:24] *** Joins: xse (~xse@user/xse)
[20:30:04] *** Joins: duxsco (~Thunderbi@user/duxsco)
[20:30:11] *** Quits: duxsco (~Thunderbi@user/duxsco) (Client Quit)
[20:46:24] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[21:11:48] *** Joins: Akiva (~Akiva@user/Akiva)
[21:32:01] *** Quits: nlhowell1 (~nlhowell@172.58.87.63) (Ping timeout: 268 seconds)
[21:32:41] *** Joins: nlhowell1 (~nlhowell@172.58.87.63)
[21:46:33] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[21:52:56] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:20:06] *** Joins: nlhowell2 (~nlhowell@172.58.87.53)
[22:23:17] *** Quits: nlhowell1 (~nlhowell@172.58.87.63) (Ping timeout: 256 seconds)
[22:35:09] *** Quits: spare (~tbi4aktna@user/spareproject) (Remote host closed the connection)
[23:00:32] *** Quits: zro (zro@user/zro) (Ping timeout: 240 seconds)
[23:02:52] *** Joins: zro (~zro@user/zro)
[23:16:38] *** Joins: euouae (~euouae@user/euouae)
[23:16:43] <euouae> Hello
[23:16:56] <euouae> when I do `gpg --edit-key mykey` followed by `check` why do I see an empty response?
[23:17:07] <euouae> Does that mean that my key is not self-signed?
[23:27:56] *** Quits: nlhowell2 (~nlhowell@172.58.87.53) (Read error: Connection reset by peer)
[23:29:06] <labrador> euouae, I had the same question a day ago. Caused me much stress.
[23:29:26] <euouae> I guess I was able to check that it's self signed using `gpg --list-sigs <mykey>`
[23:29:29] <labrador> The thing is its not supposed to say anything until it encounters a problem
[23:29:37] *** Quits: boxframes (~Saloframe@2607:9000:2000:15::a45d) (Ping timeout: 240 seconds)
[23:29:38] <labrador> Its checking not printing
[23:29:46] <euouae> labrador the manual shows otherwise
[23:30:00] <labrador> euouae, the manual is also a decade old
[23:30:07] <euouae> it needs updating, the gnupg version in the manual is v0.9.4
[23:30:22] <euouae> unfortunately the mailing list for gnupg documentation seems ignored
[23:30:37] <labrador> yea thats the problem. Anyway,to actually do that,u use gpg --list-sigs or gpg --check-sigs
[23:30:39] <euouae> https://lists.gnupg.org/pipermail/gnupg-doc/
[23:30:47] <labrador> I think check sigs is better
[23:30:53] <euouae> thanks
[23:31:00] <euouae> why do you use gpg yourself?
[23:31:06] *** Quits: marcoagpinto (~moc@user/marcoagpinto) (Remote host closed the connection)
[23:31:19] <labrador> euouae, for no reason other than I like privacy
[23:31:38] <labrador> Of course the matter is where I like it I cannot use it because other people find it hard
[23:31:50] <labrador> And where I don't need to with other nerds,I can.
[23:31:53] <labrador> Quite a conundrum
[23:32:14] <euouae> OK I see 
[23:32:24] <labrador> The hardest part is not using gpg,its making others use it
[23:32:30] <labrador> euouae, why do you use it?
[23:32:44] <euouae> I'm interested in security and privacy and freedom advocacy
[23:32:52] <labrador> nice
[23:32:54] <labrador> all three
[23:33:36] <euouae> yeah I want to get more involved in open source too, developing
[23:33:52] <labrador> euouae, if you like freedom,you might want to call it free software
[23:33:53] <labrador> maybe
[23:34:17] <euouae> well I'm not that great when it comes to terminology so I don't even make an effort
[23:34:45] <labrador> lmao
[23:34:52] <labrador> Yeah what matters is the work ig
[23:35:05] *** Joins: nlhowell2 (~nlhowell@172.58.87.76)
[23:35:24] <euouae> I think gpg could benefit from a wrapper 
[23:36:05] <euouae> maybe that makes it simpler for the average computer enthusiast
[23:38:10] <euouae> I like Apple's philosophy when it comes to UI design, for example 
[23:38:41] <labrador> euouae, there are many wrappers
[23:38:52] <labrador> I use the cli,because I'm a masochist
[23:38:58] <labrador> I like learning
[23:39:06] <labrador> But you could use seahorse
[23:39:21] <labrador> Thats a gui for gnome
[23:39:25] <labrador> Theres one for kde too
[23:39:27] <euouae> I was thinking more of a rewriting of the cli 
[23:39:39] <labrador> oh
[23:39:43] <euouae> e.g. doesn't make sense to write `check` in the command prompt> and get /nothing/ 
[23:39:50] <euouae> it's unintuitive
[23:40:02] <labrador> euouae, yeah the UI is pretty bad
[23:40:13] <euouae> exactly, and modern UI design has evolved so much 
[23:40:19] <labrador> I would say half the time I struggled just because of the design
[23:40:24] <labrador> Its just...obtuse
[23:40:39] <euouae> so do you think that's a worthwhile idea?
[23:41:03] <labrador> it definitely is
[23:41:19] <GNUHacker> i like cli
[23:41:25] <GNUHacker> i live inside Emacs
[23:41:35] <euouae> me too except for Firefox
[23:42:07] <GNUHacker> I use Emacs EWW browser 
[23:42:23] <labrador> I like guis
[23:42:33] <labrador> Except when I try to understand stuff
[23:42:35] <GNUHacker> yew GUIs!
[23:42:39] <labrador> Its just harder to use clis
[23:42:42] <labrador> Like htop
[23:42:53] <labrador> It took me a week to understand and know enough
[23:42:55] <labrador> to use it
[23:43:00] <labrador> Its time taking
[23:43:02] <euouae> I agree GUI makes it faster to learn
[23:43:17] <euouae> probably a mixed approach, both GUI and TUI is best when learning
[23:43:27] * GNUHacker check the mail in Emacs Gnus mail client
[23:43:27] <labrador> yeah
[23:43:38] <labrador> nice GNUHacker 
[23:43:57] <labrador> But I love evolution
[23:43:59] <euouae> I've never bothered with a mail client 
[23:44:02] <labrador> Its such a nice client
[23:44:04] <labrador> euouae, lmao
[23:44:09] <labrador> So what do you use?
[23:44:14] <euouae> gmail web client
[23:44:14] <labrador> to send mails
[23:44:18] <labrador> euouae, ugh
[23:44:24] <labrador> 3>gmail
[23:44:41] <labrador> Maybe try a better provider
[23:44:49] <euouae> I can't be bothered to figure out how to connect a mail client to gmail using 2FA
[23:45:12] *** Joins: boxframes (~Saloframe@2607:9000:2000:15::a45d)
[23:45:13] <labrador> euouae, bothering is how you increase security
[23:45:31] <labrador> Every bother increases security,or atleast well planned ones
[23:45:50] <euouae> hmm I think choosing a mail client is more about ergonomics
[23:45:59] <euouae> like being able to have a lot of correspondences, keep up with work etc
[23:46:17] <euouae> thankfully I got into a weird contract and I'm paid to do nothing so
[23:46:23] <labrador> euouae, can you gpg sign and encrypt transparently from  gmail?
[23:46:26] <labrador> web client?
[23:46:34] <labrador> I can from evolution
[23:46:49] <labrador> I literally just need to enter a passphrase,and it does all the work
[23:46:52] <euouae> you can --clearsign a message or embed an encrypted signed message
[23:47:15] <labrador> Thats a nice feature thats only really available in normal clients
[23:47:26] <labrador> euouae, but that is manual
[23:47:37] <euouae> I never send encrypted email
[23:47:41] <labrador> lmao
[23:48:18] <labrador> Well I mostly send unencrypted and unsigned email,but I think now It'll shift to mostly unencrypted email
[23:48:33] <labrador> And thats because nobody except nerds bothers with gpg
[23:48:46] <labrador> Its  sad
[23:49:06] <labrador> hey GNUHacker 
[23:49:10] <labrador> check the mail boii
[23:50:25] <labrador> why do you not tho euouae ?
[23:50:28] <labrador> Any reason
[23:51:17] <euouae> The only reason that I can think of right now that would apply to me
[23:51:22] <GNUHacker> yew gmail
[23:51:30] <euouae> would be to prevent google from using my data, but I don't care about that 
[23:51:32] <GNUHacker> poor euouae :,/
[23:51:47] <labrador> euouae, why do you not care about google?
[23:52:14] <euouae> because I have assessed the threat and it has been assigned low priority
[23:52:25] <labrador> You use linux,probably for some reason right? Do none of those collide with the use of google?
[23:53:00] <GNUHacker> wait! you cant use GPG with webmail, it is not a mail client!
[23:53:09] <GNUHacker> ... 
[23:53:17] <labrador> euouae, oh ok that makes sense. There's not a lot to do when you feel that it isn't worth bothering about.
[23:53:27] <GNUHacker> only if you give to Google your private key...
[23:53:37] <labrador> GNUHacker, you can,its just not a good idea
[23:53:46] <GNUHacker> ...
[23:53:52] <labrador> yeah google needs your private
[23:53:55] <labrador> key
[23:53:57] <euouae> GNUHacker I sign stuff in my computer and attach it, that's how I do it
[23:54:17] <GNUHacker> poor euouae :,c
[23:54:22] * GNUHacker check the mail in Emacs Gnus mail client
[23:54:33] <labrador> euouae, do it in a real client,set it up once and it'll be so easy to auto sign stuff. You'll do it in all emails
[23:54:42] <labrador> Just because why to press a button
[23:54:58] <euouae> You're assuming I won't nuke my setup and move on to somethign different 
[23:55:16] <euouae> I'm a person of defaults these days
[23:55:24] <labrador> euouae, I am about as stupid as you. You already use gpg.
[23:55:31] <labrador> How difficult can it be?
[23:55:49] <labrador> And till it don't work you can simply use webmail
[23:55:56] <labrador> There's nothing to lose
[23:56:15] <euouae> I don't need it right now
[23:56:26] <euouae> I will do it when I will be dealing with a high volume of email
[23:56:31] <labrador> euouae, maybe. Maybe you don't.
[23:56:44] <euouae> as for encrypted mail, who are you sending encrypted mail to if you haven't met them in person or they're not in your web of trust?
[23:57:01] <euouae>  I don't have a web of trust so I can't send encrypted mail sensibly to anyone
[23:57:18] <labrador> euouae, you don't send encrypted emails then. Also you can add yourself to the strong set of pgp keys
[23:57:25] <labrador> Its strength was 55000
[23:57:31] <labrador> A little while ago
[23:57:40] <euouae> What is that?
[23:58:01] <euouae> I've uploaded my key to some key servers, is that what you mean?
[23:58:05] <labrador> The keys that belong to a single network,ie there's a path to any of these keys from another key
[23:58:19] <labrador> No not that,you need some signs to be a part of the strong set
[23:58:29] *** Quits: nlhowell2 (~nlhowell@172.58.87.76) (Ping timeout: 256 seconds)
[23:58:44] <labrador> The only sign I have is of GNUHacker,and the only one he has is mine. So we are not part of the strong set
[23:59:01] <euouae> My main use of GPG right now is to sign my commits on git
[23:59:03] *** Joins: nlhowell2 (~nlhowell@172.58.87.76)
[23:59:15] <labrador> euouae, and thats why its a nice idea to diversify
[23:59:22] <euouae> diversifY?
[23:59:26] <labrador> Maybe send your gpg keys to me
[23:59:30] <labrador> I'll sign them
[23:59:37] <labrador> You can sign mine
[23:59:47] <euouae> you can't verify it's me unless we video chat or something
