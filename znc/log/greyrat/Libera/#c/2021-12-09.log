[00:03:21] <Bruda> Reading the pda article.
[00:05:09] <caze> That might be a little over your head. I really just wanted you to see the Classes of Automata chart.
[00:05:19] <caze> https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Automata_theory.svg/300px-Automata_theory.svg.png
[00:06:12] <caze> Bruda: Each machine type can solve a certain class of problems, but are incapable of solving more complex problems.
[00:07:06] <Bruda> Yea I seen that part.
[00:07:22] *** Quits: sicelo_ (~sicelo@user/sicelo) (Remote host closed the connection)
[00:07:52] <caze> Bruda: Maybe first think about the matching parenthesis/brackets/braces part of the problem.
[00:08:02] <caze> Bruda: Then worry about the filtering later.
[00:08:21] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[00:08:38] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:08:38] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:08:38] *** Joins: wroathe (~wroathe@user/wroathe)
[00:08:44] *** luca0N is now known as Guest3888
[00:08:54] <caze> Bruda: In fact, you can modify your solution to 1-23 so that in addition to stripping comments, it also strips strings and character constants. Then feed the input through this before you feed it to your solution to 1-24.
[00:09:20] <caze> Bruda: They are really two separate problems, afterall.
[00:09:23] *** Guest3888 is now known as luca0N
[00:09:41] <Bruda> hmm
[00:10:52] *** Joins: rcf (rcf@iceland.sdf.org)
[00:13:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:15:05] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:16:44] *** Joins: sicelo_ (~sicelo@harlock.dyne.org)
[00:16:44] *** Quits: sicelo_ (~sicelo@harlock.dyne.org) (Changing host)
[00:16:44] *** Joins: sicelo_ (~sicelo@user/sicelo)
[00:17:20] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:17:28] *** Joins: smartin (~Thunderbi@88.135.18.171)
[00:19:27] <floatcomplex> actually i think taking your solution to 1-23 and adding recursion is probably better than running it once as a preprocessing step, because it already handles the escaping of control flow stuff that is inside quotes and comments, and you want that
[00:19:51] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:20:06] <caze> I don't see the difference.
[00:21:28] <floatcomplex> caze: i suppose if you modify 1-23 so that it actually removes instead of just ignoring anything inside double quotes then maybe
[00:21:52] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:26:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:26:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[00:27:02] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[00:27:37] *** Quits: Inline (~Inline@aftr-37-201-241-222.unity-media.net) (Quit: Leaving)
[00:27:41] *** Joins: random-nick_ (~random-ni@87.116.166.234)
[00:30:28] *** Joins: Xaleth (~xaleth@74-194-156-204.pfvlcmta01.res.dyn.suddenlink.net)
[00:30:53] <floatcomplex> ok i actually have a working 1-24 that validates curly braces and parens and is a minor mod to 1-23 to add recursuion
[00:31:01] <floatcomplex> that was a lot less of a change than i expected
[00:31:25] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:31:31] <Bruda> Just for the record when I was trying to play out how to do 1-23 originally I was heading in a directly a lot like this (not my code): https://ideone.com/4S1VXK
[00:31:42] <caze> The problem of matching parens and braces isn't that hard.
[00:32:01] *** Quits: Xaleth (~xaleth@74-194-156-204.pfvlcmta01.res.dyn.suddenlink.net) ()
[00:32:05] <Bruda> After I realized my first solution was flawed that is.
[00:32:10] <floatcomplex> caze: it's a superset of 1-23 though in order to correctly ignore things inside character and string literals and comments
[00:32:58] <caze> floatcomplex: It's really a separate problem.
[00:33:34] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 265 seconds)
[00:33:53] <caze> Tokenizing vs parsing
[00:33:58] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:34:23] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:36:53] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[00:37:09] <floatcomplex> that's one approach
[00:37:33] <Bruda> Looking at this code it doesn't seem to involve confusing state machines or such. It was written with the tutorial basics in mind. I like this idea, though granted the state machine case started me on turned out to be pretty efficient.
[00:37:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:37:43] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:38:00] <Bruda> s/case/caze/
[00:38:17] <caze> Bruda: You still have to have the same knowledge that the state machine communicates.
[00:38:22] *** Joins: Xaleth (~xaleth@74-194-156-204.pfvlcmta01.res.dyn.suddenlink.net)
[00:38:40] <Bruda> I don't dispute that. But this early in the book?
[00:38:58] <caze> Bruda: For instance, on line 25, when he encounters two slashes in a row, he correctly outputs only a single slash.
[00:40:23] <caze> Bruda: How are you supposed to know to write it that way if you don't know that if you see two slashes in a row, you have to consider that maybe the second slash is the start of a comment, if there is a * coming next.
[00:40:26] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[00:40:48] <caze> Bruda: This is what the diagram clearly communicates.
[00:41:01] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 240 seconds)
[00:41:26] <caze> Bruda: I would say that it's actually *harder* to write that code without the diagram.
[00:41:41] <Bruda> The diagram was definitely a big help in simplifying  things.
[00:41:51] <caze> Bruda: Because you have to have already internalized how comments work.
[00:43:43] <caze> And that goes with what I was saying at the very beginning, where you have to fully understand the problem you're being asked to solve - otherwise, whatever you come up with likely won't be correct.
[00:44:13] <caze> If you spend four hours writing a solution to a problem that you don't understand, then that's a waste of four hours.
[00:44:22] <floatcomplex> caze: https://godbolt.org/z/anv1oKrv5
[00:44:34] <Bruda> So I really need to learn out to lay out the program before coding it.
[00:44:50] <Bruda> typed. that too fast, but yea.
[00:44:57] <caze> You need to understand the problem at least.
[00:45:42] <caze> Nevermind code, you are extremely unlikely to come up with a solution to a problem you don't understand.
[00:45:54] <Bruda> I've had good luck with pseudocode. I'm just not used to diagrams. But I see the usefulness.
[00:45:59] <caze> Just the strategy or algorithm of how it can be solved.
[00:46:53] <Bruda> Point taken, I need to make sure I fully understand the program before I try to code it up.
[00:46:59] <Bruda> problem
[00:47:15] <floatcomplex> Bruda: click on that gordbolt to see how i modified my solution to 1-23 to solve 1-24
[00:47:36] <caze> Now there is always "I don't know what I don't know", where you erroneously think you understand the problem, and overlook a subtlety, like the case with //.
[00:48:23] <caze> But that's where you need to be open to feedback, if you're fortunate enough to have someone point it out for you.
[00:48:40] *** Joins: aqua (~sid742412@user/aqua)
[00:48:42] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[00:49:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[00:49:09] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[00:49:22] <Bruda> I understand
[00:49:49] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[00:50:06] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[00:51:07] <Bruda> So I should think out the logic, get feedback and advice to make sure I'm considering everything properly.
[00:51:22] <Bruda> Then follow through with a translation to code.
[00:51:47] <floatcomplex> it's likely that even if your 1-23 solution looks and works completely differently than mine, you could add the same few lines to make it do 1-24
[00:52:28] <Bruda> Gotta make a run to the store.
[00:55:59] *** Joins: Oxfuxxx_ (~sharky@138.199.16.115)
[00:56:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:56:46] *** Quits: Oxfuxxx (~sharky@82-64-161-82.subs.proxad.net) (Ping timeout: 265 seconds)
[00:56:54] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[00:57:40] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:01:08] *** Quits: aqua (~sid742412@user/aqua) (Remote host closed the connection)
[01:01:08] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:05:14] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:05:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:05:37] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:05:37] *** Joins: wroathe (~wroathe@user/wroathe)
[01:08:11] *** Joins: vicfred (~vicfred@user/vicfred)
[01:10:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:11:04] *** wyre_ is now known as wyre
[01:11:27] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:12:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:12:55] *** Joins: graywolf (~wolf@user/graywolf)
[01:20:52] *** Quits: mahmutov (~mahmutov@5.176.31.136) (Ping timeout: 256 seconds)
[01:21:03] *** Joins: rgrinberg (~textual@187.223.144.204)
[01:25:45] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 252 seconds)
[01:26:54] *** Quits: Akuli (~Akuli@213.216.209.210) (Quit: Akuli)
[01:28:15] *** Quits: Akiva (~Akiva@user/Akiva) (Quit: WeeChat 3.3)
[01:28:35] *** Joins: Akiva (~Akiva@user/Akiva)
[01:29:57] *** Quits: tolog (~tolog@91.193.6.10) (Remote host closed the connection)
[01:30:02] *** Joins: PortableDave (~portabled@118.208.121.87)
[01:30:09] *** Quits: PortableDave (~portabled@118.208.121.87) (Client Quit)
[01:34:09] *** Joins: LanDi (~landi@177.37.146.106)
[01:34:57] *** Quits: uskerine (~uskerine@0x3ec66374.ejb.customer.dk.telia.net) (Ping timeout: 265 seconds)
[01:36:32] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[01:37:56] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[01:38:34] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a894:a049:803a:817)
[01:38:34] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a894:a049:803a:817) (Changing host)
[01:38:34] *** Joins: skapata (~Skapata@user/skapata)
[01:44:00] *** Joins: Viewday116 (~Viewday@user/viewday)
[01:45:25] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:45:25] *** Viewday116 is now known as Viewday11
[01:46:02] *** Quits: Xaleth (~xaleth@74-194-156-204.pfvlcmta01.res.dyn.suddenlink.net) (Remote host closed the connection)
[01:47:42] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:54:02] *** Joins: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4)
[01:54:03] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[01:54:26] <Bruda> So inside of () I might find []? What else? In terms of opening/closing elements. Putting together notes to make sure I'm being thorough.
[01:55:42] <Bruda> void echo_quote(int c) {
[01:55:42] <Bruda>     int d;
[01:55:42] <Bruda>  
[01:55:46] <Bruda>   oops sorry
[01:56:08] <Bruda> middle clicked by accident
[01:57:54] <Bruda> {} : "", '', [], (), {} 
[01:58:59] <Bruda> then [] I can't quite recall much occuring inside of those that open/close.
[02:00:00] <superstar64> If putting a static array inside a struct lets you pass it by value. Then does this take a vla by value? `int f(int x, struct a { int y[x]; } z);`
[02:00:05] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[02:04:00] *** Joins: jjido (~Denis@90.213.58.125)
[02:04:23] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:68eb:9b8c:ed60:d2d2) (Quit: Quit)
[02:04:53] <superstar64> Hmm for `int f(int x, struct a { int y[x]; } z, int a) { return a; }` gcc emits `mov    %edx,%eax`
[02:05:05] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:05:26] <superstar64> It seems to think this via is the size of a pointer
[02:05:55] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:07:43] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[02:07:49] *** Joins: Charadon (~Charadon@155.138.164.183)
[02:08:20] <bparker> superstar64: how would that even work since x isn't known at runtime?
[02:08:39] <superstar64> That's the point. I want to see what would happen
[02:09:07] <bparker> known at compile-time*
[02:09:19] <bparker> I mean how are you getting that instruction
[02:09:25] <bparker> did you compile first and then disassemble it?
[02:09:59] <superstar64> Hmm, clang rejects this code too. `vla.c:1:29: error: fields must have a constant size: 'variable length array in structure' extension will never be supported`
[02:10:14] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 265 seconds)
[02:10:20] <bparker> yea
[02:11:28] *** Joins: kish` (~sid742412@user/aqua)
[02:11:47] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[02:12:09] *** Joins: kish` (~sid742412@user/aqua)
[02:12:54] <fizzie> It's definitely a constraint violation in standard C. C11 6.7.6.2p2: "If an identifier is declared as having variably modified type, it shall be an ordinary identifier (as defined in 6.2.3), --". Members of structures are not ordinary identifiers (6.2.3p1).
[02:18:17] <superstar64> Is it possible to call `int f(int x, int (*y)(int z[][x]));`?
[02:19:00] *** Quits: LanDi (~landi@177.37.146.106) (Remote host closed the connection)
[02:20:24] <superstar64> oh lol, https://pastebin.com/raw/24riNd96 neither clang nor gcc warn about this
[02:20:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[02:20:56] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[02:21:15] <fizzie> That's because `()` provides no prototype, and they're pretty lax about functions with no prototypes.
[02:21:37] *** Quits: skintimidation (~skintimid@66.205.192.145) (Quit: Client closed)
[02:21:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:21:41] <superstar64> Right, i forgot about that wart
[02:22:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:24:12] <fizzie> ,cc int g(int z[][2]) { return z[0][0] + z[0][1] + z[1][0] + z[1][1]; } int f(int x, int (*y)(int z[][x])) { int z[x][x]; z[0][0] = 1; z[0][1] = 2; z[1][0] = 3; z[1][1] = 4; return y(z); } printf("%d", f(2, g)); // think that should be fine
[02:24:15] <candide> fizzie: 10
[02:25:08] <fizzie> Of course you could only pass `g` as the second argument of a call to `f` if the first is 2.
[02:25:35] <superstar64> Does your code give you an warnings with -Wall?
[02:26:56] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:27:01] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 240 seconds)
[02:27:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:27:18] <fizzie> ,cc int g2(int z[][2]) { int s; for (int i = 0; i < 2; i++) s += z[i][i]; return s; } int g3(int z[][3]) { int s; for (int i = 0; i < 3; i++) s += z[i][i]; return s; } int f(int x, int (*y)(int z[][x])) { int z[x][x]; for (int i = 0; i < x; i++) z[i][i] = i+1; return y(z); } printf("%d %d", f(2, g2), f(3, g3)); // and so on
[02:27:20] <candide> fizzie: 3 6
[02:27:40] <fizzie> candide has all the reasonable warnings on by default.
[02:27:49] <candide> f​izzie, Sometimes.
[02:28:37] <fizzie> (Where "reasonable warnings" seems to mean -Wextra -Wall -Wno-unused -pedantic -Wfloat-equal -Wshadow -std=c11 -Wfatal-errors.)
[02:29:44] <fizzie> ,cc int g2(int z[][2]) { int s; for (int i = 0; i < 2; i++) s += z[i][i]; return s; } int f(int x, int (*y)(int z[][x])) { int z[x][x]; for (int i = 0; i < x; i++) z[i][i] = i+1; return y(z); } printf("%d", f(3, g2)); // sadly, there's no warnings for getting it wrong
[02:29:47] <candide> fizzie: 32768
[02:30:30] <superstar64> I love how C has this strange tiny subset of dependent types
[02:30:52] *** Joins: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[02:30:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:32:00] <fizzie> FWIW, I think in that example most likely the definition of `f` is exactly the same as `int f(int x, int (*y)(int z[][*])) { ... }`.
[02:32:50] *** Quits: pizdets (~pizdets@183.182.111.137) (Ping timeout: 256 seconds)
[02:32:52] *** Joins: imp (~imp@192-141-191-234.alternativaip.net.br)
[02:32:53] *** Joins: geli (~gelignite@55d4e16d.access.ecotel.net)
[02:32:56] <fizzie> C11 6.7.6.2p5: "If the size [in an array declarator] is an expression that is not an integer constant expression: if it occurs in a declaration at function prototype scope [which I _think_ is the case for the pointer-to-the-function type's parameter list], it is treated as if it were replaced by `*`; --"
[02:32:56] <superstar64> Any way to get `int (**f)(int x)[x];` to work? can the return type's vla depend on the argument?
[02:33:10] *** Quits: magla (~gelignite@55d4e16d.access.ecotel.net) (Remote host closed the connection)
[02:33:50] *** Joins: pizdets (~pizdets@183.182.111.219)
[02:33:50] <fizzie> A function can't return an array type. What's that trying to accomplish though? 
[02:34:11] <superstar64> I'm want to see if it's possible to return a pointer to a vla
[02:34:13] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[02:35:25] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[02:35:49] <floatcomplex> you shouldn't want to do that
[02:35:56] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[02:36:03] <fizzie> The syntax for it would be `int (*f(int x))[x];` instead, but the problem is the parameter `x` is not in scope for that.
[02:36:04] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[02:36:06] <superstar64> Err, but then what would the type of `f(g())` be?`C doesn't have pi types
[02:36:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[02:38:07] <fizzie> I guess you should be able to have a variably modified return type though. But it can't refer to the parameters of that function declarator.
[02:38:14] *** Quits: smartin (~Thunderbi@88.135.18.171) (Quit: smartin)
[02:39:47] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:3099:e5c0:9301:29c5)
[02:40:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:42:22] <superstar64> Are there any guides for dealing with function pointer and complex function prototype signatures?
[02:42:42] <superstar64> I feel like I'm always banding my head when I'm declaring those.
[02:43:03] <floatcomplex> use a typedef
[02:43:05] <floatcomplex> just this once
[02:43:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:43:37] <superstar64> `int (*f)(void);` is this a prototype or a function pointer?
[02:44:07] <floatcomplex> ,english int (*f)(void);
[02:44:08] <candide> floatcomplex: Declare `f` as a pointer to function taking no arguments and returning i​nt.
[02:44:31] <floatcomplex> english actually useful today lol
[02:44:43] <superstar64> oh what it candide's english command using?
[02:44:47] <fizzie> I can't get it through candide, but here's at least a pointer to a function that returns a pointer to a variable-length array, assigned to point to a function that returns a pointer to a regular array: https://0x0.st/-FPU.txt
[02:45:19] <fizzie> The reason why I can't get it through candide is its silly prejudice against function types that return pointers to arrays.
[02:45:51] <pragma-> Yeah, candide's regexps for "parsing" C code are rather quick-and-dirty.
[02:46:05] *** Joins: skintimidation (~skintimid@66.205.192.145)
[02:46:21] <pragma-> One of these days the whole ,cc module will be rewritten!
[02:46:21] <superstar64> So wait, `int (*f(void));` is a prototype and `int (*f)(void);` is a function pointer? 
[02:46:30] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[02:46:42] <fizzie> Yes, but `int (*f(void))` also has redundant parentheses.
[02:47:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:47:07] <fizzie> `int (*f(void));` is just `int *f(void);`, a declaration of a function that returns an `int *`.
[02:47:18] <superstar64> So wait, `int (*f(void));` is a prototype and `int (*f)(void);` is a function pointer? 
[02:47:24] <superstar64> err opps
[02:47:34] <pragma-> ,cc int(x) = 42; // use the int() function to create integers
[02:47:37] <candide> pragma-: no output: x = 42
[02:48:03] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:48:04] <floatcomplex> wtf
[02:48:31] <superstar64> aww `(int) x;` isn't legal
[02:48:44] <floatcomplex> go downtown and turn in your compiler
[02:48:54] <pragma-> oh
[02:48:56] <fizzie> `int` is a type specifier, you can only have redundant parentheses in the declarator.
[02:48:58] <pragma-> I forgot the function-like braces
[02:49:07] <pragma-> ,cc int(x) = { 42 }; // use the int() function to create integers
[02:49:10] <candide> pragma-: no output: x = 42
[02:50:35] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:51:26] <Bruda> floatcomplex: Taking some notes before I try to work out my own solution: https://pastebin.com/3PBuUsKq Anything you might add?
[02:51:41] <Bruda> (just notes there no code)
[02:54:07] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:54:51] *** Joins: joe (~textual@2601:84:4501:6440:dceb:1c5:5824:370)
[02:55:16] *** joe is now known as Guest7443
[02:55:43] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:56:01] *** Quits: geli (~gelignite@55d4e16d.access.ecotel.net) (Quit: Stay safe!)
[02:57:15] <Bruda> Figured I'd take cazes advice and try to think things through first and gather input.
[02:58:32] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[02:59:03] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:13] *** Joins: w\W_ (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[03:00:24] *** Quits: random-nick_ (~random-ni@87.116.166.234) (Ping timeout: 268 seconds)
[03:02:11] *** Quits: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c) (Ping timeout: 252 seconds)
[03:02:31] *** Joins: Bruda___ (~bruda@172.58.63.108)
[03:03:39] *** w\W_ is now known as w\W
[03:03:53] *** Quits: alch (~alch@151.36.99.223) (Ping timeout: 265 seconds)
[03:04:06] *** Quits: Bruda (~bruda@172.58.62.135) (Killed (strontium.libera.chat (Nickname regained by services)))
[03:04:23] *** Quits: Guest7443 (~textual@2601:84:4501:6440:dceb:1c5:5824:370) (Ping timeout: 252 seconds)
[03:04:24] <Bruda___> Darn connection issues.
[03:04:49] *** Joins: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net)
[03:05:16] *** Joins: alch (~alch@151.38.113.9)
[03:06:06] *** Bruda___ is now known as bruda
[03:06:12] *** bruda is now known as Bruda
[03:06:18] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 265 seconds)
[03:07:03] <Bruda> Sorry about all the name changes. Things really get screwed up when I have a connection interruption.
[03:08:10] <wstrnr> did candide ban you for nickname flood?
[03:08:51] <Bruda> lol no. But I think he understands I don't do that often.
[03:09:00] <Bruda> Or he wasn't paying attention :P
[03:09:19] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:10:37] *** Quits: Oxfuxxx_ (~sharky@138.199.16.115) (Ping timeout: 240 seconds)
[03:12:00] *** Joins: Oxfuxxx (~sharky@138.199.16.113)
[03:13:50] *** Joins: PortableDave (~portabled@118.208.121.87)
[03:14:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[03:15:13] <wstrnr> candide is the sentry bot of this channel.  it has such feature as automatic nickname flood protection, rules are following: (i cite from "Candide - C" page from http://iso-9899.info/)
[03:15:26] <candide> w​strnr, I don't think so.
[03:15:26] <wstrnr> "If four (4) or more nick-changes are observed within thirty (30) minutes, the nick-change flood control is triggered. The offender will be muted for 15 minutes for the first offense.
[03:15:42] <wstrnr> Each additional offense will result in the offender being muted for a much longer period. The offense counter is decremented once every 24 hours.
[03:15:47] <wstrnr> The offender will be sent the following private message: "You have been temporarily banned due to nick-change flooding. You will be unbanned in $timeout."
[03:16:29] <wstrnr> Bruda: if you didn't receive any such messages it means your amount of nick changes per interval of time was not worthy of anyone's consideration.
[03:16:35] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:16:40] <Bruda> Ah ok.
[03:20:14] *** Joins: Guest72 (~Guest72@62.216.60.127)
[03:21:00] *** Parts: Guest72 (~Guest72@62.216.60.127) ()
[03:24:13] <caze> floatcomplex: https://godbolt.org/z/dTexc8TET
[03:24:25] *** Joins: Inline (~Inline@aftr-37-201-241-234.unity-media.net)
[03:25:49] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 240 seconds)
[03:26:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:27:49] *** Quits: Dotz0cat (~Dotz0cat@h64.13.31.71.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[03:27:57] *** Joins: johnnyreb (~tth@user/johnnyreb)
[03:30:32] <Bruda> caze: Trying to be thorough in my notes before working on the code. Anything you might add? https://pastebin.com/3PBuUsKq
[03:31:45] *** Quits: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4) (Quit: Leaving)
[03:31:58] *** Joins: Dotz0cat (~Dotz0cat@h165.65.213.151.dynamic.ip.windstream.net)
[03:32:28] <caze> Bruda: Order matters.
[03:32:49] <caze> Bruda: ({)} vs ({})
[03:33:09] <Bruda> Hmm. Ok.
[03:33:27] *** Quits: velgin (~velgin@162.212.106.178) (Quit: okbye)
[03:33:38] <caze> Also }{
[03:34:40] *** Joins: marcj (~marc@205.175.215.25)
[03:35:46] <Bruda> Ok. So I definitely have to watch for opening braces and closing braces, making sure nested braces/etc are propery closed.
[03:36:09] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[03:37:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[03:38:33] *** Quits: skintimidation (~skintimid@66.205.192.145) (Quit: Client closed)
[03:38:43] <Bruda> So I'll have to keep track of what brackets/etc are possible inside of each type of open/close element.
[03:38:46] <Bruda> ?
[03:39:09] *** Joins: ferdna (~ferdna@user/ferdna)
[03:39:20] *** Joins: skintimidation (~skintimid@66.205.192.145)
[03:40:12] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[03:42:12] <Bruda> Or I guess just recurse into the nested braces/etc to make sure they close out before closing the outter ones?
[03:43:23] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:43:33] <Bruda> Meh. Ok I have some notes to work with and try to figure out my logic before I write the code. Anything else I might be overlooking?
[03:44:08] *** Joins: Viewday115 (~Viewday@user/viewday)
[03:45:06] <floatcomplex> caze: what changes did you
[03:45:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:45:32] *** Viewday115 is now known as Viewday11
[03:45:34] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[03:46:02] <caze> floatcomplex: Just the input.
[03:47:25] <caze> Bruda: Just watch out for unexpected closing braces.
[03:47:35] <Bruda> Noted.
[03:48:11] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[03:48:12] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[03:48:16] *** scoobydoob is now known as scoobydoo
[03:49:48] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[03:50:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:50:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:50:55] *** Joins: wroathe (~wroathe@user/wroathe)
[03:51:25] *** Joins: Wulf (~Wulf@user/wulf)
[03:52:37] *** Quits: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net) (Ping timeout: 240 seconds)
[03:53:08] <floatcomplex> caze: oh lol it only looks for closing things if it finds an opening one first. that's a trivial fix
[03:53:46] *** Joins: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net)
[03:54:17] <pragma-> the vast majority of bugs are trivial fixes
[03:57:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:57:56] <floatcomplex> caze: https://godbolt.org/z/TYfzzGaoE
[03:58:40] <wroathe> Not my bugs
[03:58:51] <wroathe> My bugs are catastrophic and far reaching. 
[03:58:57] <Bruda> lol
[04:00:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[04:01:08] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Quit: Leaving)
[04:01:36] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[04:02:59] <apotheon> wroathe: That's an interesting point of pride.
[04:03:09] <apotheon> wroathe: Are you sure you aren't writing C++?
[04:03:12] <wroathe> apotheon: Damn right. My bugs are the best bugs. 
[04:06:27] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[04:09:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:09:32] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:12:13] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[04:13:18] *** Joins: cheeseee (~irrgit@37.120.141.114)
[04:17:20] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[04:19:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[04:19:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:20:17] *** Quits: kurahaupo (~kurahaupo@pa49-181-52-140.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[04:24:09] *** b1101 is now known as b
[04:24:39] *** b is now known as Guest5132
[04:24:48] *** Quits: Guest5132 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: Guest5132)
[04:25:05] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 265 seconds)
[04:25:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[04:27:14] *** Joins: marcj (~marc@205.175.215.25)
[04:27:19] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:3099:e5c0:9301:29c5) (Quit: Leaving)
[04:29:16] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:30:13] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[04:33:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[04:34:31] *** oldlaptop_ is now known as oldlaptop
[04:37:36] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:40:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:42:20] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::49)
[04:43:32] <owensjrw> Hello all. Caze/Fizzie you all here?
[04:43:49] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[04:43:55] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:44:06] *** Joins: mncheck (~mncheck@193.224.205.254)
[04:44:49] <caze> Yes, Wiliiam.
[04:48:13] <danielcamiel> William's Wish Wellingtons
[04:48:24] <owensjrw> Few days ago I was asking about the '\n' left in the buffer after using getc(stdin) or getchar(). I seen an interesting work around. scanf(" %c", &char);
[04:48:37] *** Quits: Bruda (~bruda@172.58.63.108) (Ping timeout: 240 seconds)
[04:48:38] <floatcomplex> ,acsnd
[04:48:42] <floatcomplex> ,scanf
[04:48:42] <candide> scanf is a function that can be unsafe and unproductive - "It's nearly impossible to do decent error recovery with scanf; usually it's far easier to read entire lines (with fgets or the like), then interpret them, either using sscanf or some other techniques." - See http://www.eskimo.com/~scs/C-faq/q12.20.html
[04:49:11] <owensjrw> candide you are always so helpful, thank you.
[04:49:24] <candide> I am always so helpful? YES!
[04:50:16] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[04:50:53] <owensjrw> The space in front of " %c" the formating removed the '\n' char from being used.
[04:51:47] <owensjrw> However if someone typed several chars prior to the '\n' the program still processed them one at a time. But I thought that was an interesting work around.
[04:53:08] <floatcomplex> attach an odroid to the swrial port
[04:53:14] <floatcomplex> beforw yoy need it
[04:54:09] <caze> owensjrw: What happens if Player 1 types in "1 4 2 5 3"
[04:55:20] *** Joins: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a)
[04:55:31] <floatcomplex> oops wrong window
[04:56:28] <wstrnr> owensjrw: by the way, you can use the * character before format specifiers in scanf to ignore the results of reading input from stream
[04:56:56] <caze> owensjrw: Why did you switch from using letters to numbers?
[04:57:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:57:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:57:35] *** Joins: wroathe (~wroathe@user/wroathe)
[04:57:45] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[04:59:36] <wstrnr> pragma-: good afternoon.
[04:59:45] <wstrnr> does -input=... work in cc?
[04:59:54] <wstrnr> or do i use it incorrectly?
[05:00:10] <caze> owensjrw: https://www.online-ide.com/c9I7RM8WE2
[05:00:11] <candide> Title of caze's link: Online IDE - Code Editor, Compiler, Interpreter
[05:00:18] <pragma-> it must be at the end of the code since it consumes everything after it
[05:00:20] <dave0> wstrnr: -stdin=
[05:00:22] <wstrnr> ,cc char buf[50]; (void)scanf("%s", buf); puts(buf); -input=what
[05:00:23] <candide> wstrnr: error: 'input' undeclared
[05:00:24] <dave0> oh
[05:01:10] <dave0> ,cc char buf[50]; puts(gets(buf)); -stdin=hi
[05:01:14] <candide> dave0: [warning: implicit declaration of function 'gets'; did you mean 'fgets'? [-Wimplicit-function-declaration]  warning: passing argument 1 of 'puts' makes pointer from integer without a cast [-Wint-conversion] note: expected 'const char *' but argument is of type 'i​nt' /usr/bin/ld:  in function 'main':  warning: the 'gets' function is dangerous and should not be used.] Program received signal SIGSE... <truncated; https://0x0.st/-FZ6.txt>
[05:01:20] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[05:01:24] <dave0> whoops
[05:01:34] <wstrnr> dave0: hm.  but in the documentation page of candide it's said that -input is the right "option".  i mean, http://www.iso-9899.info/wiki?title=Candide&oldid=9187
[05:01:38] <candide> Title of wstrnr's link: C​andide - C
[05:01:53] <wstrnr>  Usage: cc [compiler options] [-paste] [-nomain] [-noheaders] [-lang=<language>] <code> [-input=<stdin input>]
[05:02:18] <wstrnr> ah.  any way, if it is the correct way, i'm going to write -stdin= from now on
[05:02:27] <wstrnr> ,cc char buf[50]; (void)scanf("%s", buf); puts(buf); -stdin=what
[05:02:30] <candide> wstrnr: what
[05:02:52] <pragma-> please don't use the history of the old wiki page 
[05:04:03] <wstrnr> so the contents of the page i was looking at are old... 
[05:04:21] <pragma-> it literally says oldid= in the url!
[05:04:26] <dave0> ,cc char *gets(); char buf[50]; puts(gets(buf)); -stdin=hi
[05:04:28] <candide> dave0: [/usr/bin/ld:  in function 'main':  warning: the 'gets' function is dangerous and should not be used.] hi
[05:04:50] <wstrnr> i wanted to mention that scanf("%s") is basically gets
[05:05:27] <wstrnr> yes, it is exploitable, with stack corruption, buffer overrun, and shellcode injection
[05:05:57] <caze> Who said anything about scanf("%s")?
[05:07:16] <pragma-> wstrnr: https://github.com/pragma-/pbot/blob/master/doc/Applets.md#cc
[05:08:22] * pragma- giggles at "applets"
[05:08:26] <caze> owensjrw: 
[05:08:39] *** Quits: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a) (Quit: Leaving)
[05:09:45] <wstrnr> pragma-: thank you.
[05:10:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:10:16] *** Quits: skintimidation (~skintimid@66.205.192.145) (Quit: Client closed)
[05:10:31] <dave0> apple ts sounds expensive
[05:11:53] *** Joins: skintimidation (~skintimid@66.205.192.145)
[05:11:56] *** Quits: skintimidation (~skintimid@66.205.192.145) (Client Quit)
[05:13:21] *** simplyjimin[m] is now known as Eulie[m]
[05:14:42] <owensjrw> I switched to numbers to separate from X and O from the spaces. If player 1 types 14253 the game sets X to 1, O to 4, x to 2, O to 5, X to 3 and declares Player 1 the winner.
[05:16:39] <caze> owensjrw: https://www.online-ide.com/bpXUw3mrLC
[05:17:36] <caze> owensjrw: Actually, 14253 isn't a valid square.
[05:18:27] <caze> Oh, you're using %c.
[05:18:37] <caze> owensjrw: You should stick with getchar.
[05:18:39] <owensjrw> Always great talking to you all. I have to go do some data entry now. It only accepts one at a time. Yes %c.
[05:19:33] <owensjrw> See you all next time. :-)
[05:19:38] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::49) (Quit: Leaving)
[05:23:18] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[05:25:08] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[05:26:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:27:10] *** Joins: Betal (~Betal@user/betal)
[05:27:30] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[05:28:11] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:28:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:29:30] *** Joins: seninha (~seninha@user/seninha)
[05:30:37] *** Quits: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c) (Ping timeout: 240 seconds)
[05:37:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[05:38:22] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[05:42:37] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[05:44:12] *** Joins: Viewday116 (~Viewday@user/viewday)
[05:44:36] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:45:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:45:31] *** Viewday116 is now known as Viewday11
[05:45:38] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:ac3e:9fa3:9015:4b93)
[05:46:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:47:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:49:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:53:07] *** Eulie[m] is now known as simplyjimin[m]
[05:53:32] *** Quits: dutch (~DutchIngr@user/dutch) (Ping timeout: 265 seconds)
[05:57:27] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:57:50] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:57:55] *** Joins: haniaF_ (~haniaF@83.24.213.124.ipv4.supernova.orange.pl)
[05:58:32] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[05:58:36] *** Joins: dutch (~DutchIngr@user/dutch)
[05:58:44] *** Quits: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[06:00:18] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:00:58] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:02:17] *** Joins: gco (~gco@2601:647:5a00:223:14ad:de7b:9961:3438)
[06:03:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:03:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:03:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:03:53] *** Joins: wroathe (~wroathe@user/wroathe)
[06:04:03] *** Quits: kuoi (~kuoi@109.175.166.58) (Quit: kuoi)
[06:08:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:12:11] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 268 seconds)
[06:13:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:16:33] *** Joins: Fl1pFl0p (~FlipFlop@user/fl1pfl0p)
[06:24:42] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:26:53] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 265 seconds)
[06:28:37] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Quit: Leaving)
[06:30:27] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[06:31:01] *** Joins: Rounin (~david@84.212.130.215)
[06:32:38] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[06:33:39] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 265 seconds)
[06:33:49] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 240 seconds)
[06:33:50] <amosbird> Hello! If a socket send gets blocked due to remote consumpsion is slow, will it wake up in time as soon as the remote receives all data?
[06:34:49] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:35:07] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:35:29] *** Joins: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:35:45] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Read error: No route to host)
[06:36:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:40:42] *** Quits: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:41:37] * floatcomplex laughs in udp
[06:41:54] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Quit: Leaving)
[06:42:59] *** Joins: gce108 (~gce@user/gce108)
[06:43:12] <amosbird> Oops, I should mark it a tcp socket...
[06:44:45] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:45:06] *** Joins: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net)
[06:48:19] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[06:53:11] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:49] *** Quits: Oxfuxxx (~sharky@138.199.16.113) (Ping timeout: 240 seconds)
[06:54:29] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:56:27] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:56:58] <rcf> amosbird: eventually yes. 
[06:56:59] *** Joins: Oxfuxxx (~sharky@82-64-161-82.subs.proxad.net)
[06:57:49] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Remote host closed the connection)
[06:59:42] <amosbird> rcf: Ok. Is it a non-interruptable blocking? Will the sending thread receive and handle signal during that period of time?
[07:00:51] *** Quits: alch (~alch@151.38.113.9) (Read error: Connection reset by peer)
[07:02:01] <rcf> Not unless you set SA_RESTART with sigaction for the signals you want to handle. 
[07:02:46] <rcf> (some systems will do this by default, I think that is the BSD behavior) 
[07:05:34] *** Joins: alch (~alch@151.36.107.27)
[07:07:36] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:09:44] <amosbird> rcf: but that's the behavior of the library function, not the signal handler
[07:10:21] <amosbird> Currently I'm debugging a potential socket send blocking issue and it seems when blocking happens, signals are not handled at all.
[07:10:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:10:41] <rcf> sigaction is how you set the behavior regardless 
[07:12:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[07:16:53] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:18:49] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:4f1:dc36:ede4:3a36)
[07:20:11] <amosbird> rcf: Do you mean if SA_RESTART is not set, the blocking socket will also block this signal?
[07:20:50] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:4f1:dc36:ede4:3a36) (Client Quit)
[07:22:29] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 268 seconds)
[07:22:51] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[07:22:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:23:19] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:25:09] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[07:25:09] *** X-Scale` is now known as X-Scale
[07:28:10] *** Joins: X-Scale` (~ARM@83.223.250.30)
[07:29:32] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[07:30:34] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 265 seconds)
[07:30:34] *** X-Scale` is now known as X-Scale
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:33] *** Joins: dohtem (uid524096@user/dohtem)
[07:38:01] *** Quits: gco (~gco@2601:647:5a00:223:14ad:de7b:9961:3438) (Quit: ZZZzzz…)
[07:39:52] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 265 seconds)
[07:40:37] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[07:42:45] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[07:43:10] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[07:44:20] *** Joins: Viewday115 (~Viewday@user/viewday)
[07:45:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:45:38] *** Viewday115 is now known as Viewday11
[07:53:23] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[07:54:21] *** Joins: Burgundy (~yomon@79.115.213.171)
[07:54:29] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bae6:fe15:58ae:457e)
[07:54:45] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[07:54:58] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Client Quit)
[07:55:13] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[08:03:50] *** Joins: semeion (~semeion@user/semeion)
[08:06:08] *** Joins: kdc (~kdc@196.211.197.159)
[08:07:48] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[08:14:32] <rcf> The signal should still be handled either way. 
[08:16:30] *** Quits: abraham (~abraham@143.244.185.86) (Quit: The Lounge - https://thelounge.chat)
[08:17:29] *** Joins: abraham (~abraham@143.244.185.86)
[08:22:49] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[08:23:00] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[08:24:13] *** Quits: rahl (~rahl@102.114.68.112) (Ping timeout: 240 seconds)
[08:26:13] *** Joins: rahl (~rahl@102.114.114.197)
[08:29:59] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 252 seconds)
[08:32:33] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 265 seconds)
[08:34:30] *** Joins: frost (~frost@user/frost)
[08:37:58] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[08:41:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[08:41:25] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 240 seconds)
[08:43:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:43:18] <poprocks> can anyone suggest a tool to check whether you've broken ABI with a C library?
[08:45:32] *** Quits: malloy (~jimery@116.30.223.163) (Ping timeout: 250 seconds)
[08:47:30] *** Joins: malloy (~jimery@116.30.223.163)
[08:49:34] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:53:16] <rcf> It's the sort of thing best handled with your own suite of tests. 
[08:55:15] <floatcomplex> ,ddg libc-test
[08:55:15] <candide> https://duckduckgo.com/?q=libc-test
[08:59:29] <poprocks> thanks
[09:01:43] <floatcomplex> idk why candide doesn't actually duck duckle it for you
[09:02:23] *** Joins: szutt (~szutt@116.37.2.145)
[09:02:51] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[09:08:08] <rcf> If there's rate-limiting that would certainly explain it. 
[09:08:14] <rcf> Some asshole had too much fun one day 
[09:08:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:10:33] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.3)
[09:11:18] <floatcomplex> was there a four inch tungsten cube or other shape involved
[09:11:34] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:15:29] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[09:15:42] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:17:47] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[09:20:37] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[09:26:27] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:37:06] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[09:37:39] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:39:37] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[09:42:35] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[09:44:15] *** Joins: Viewday110 (~Viewday@user/viewday)
[09:45:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:45:39] *** Viewday110 is now known as Viewday11
[09:52:20] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:40b7:d4a2:46ea:b690)
[09:52:37] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 240 seconds)
[10:00:17] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[10:00:29] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[10:02:22] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[10:02:59] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[10:04:25] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[10:09:47] *** Joins: coruja (~coruja@user/coruja)
[10:14:19] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:98f7:51e9:4ec2:8af8)
[10:14:19] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:98f7:51e9:4ec2:8af8) (Changing host)
[10:14:19] *** Joins: skapata (~Skapata@user/skapata)
[10:17:00] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[10:17:11] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:13] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[10:19:28] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:19:28] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:da4:9ec6:5ef5:74d6) (Ping timeout: 268 seconds)
[10:21:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[10:28:09] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:28:37] *** Joins: loganlee (~Thunderbi@user/loganlee)
[10:30:12] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:30:20] *** Joins: mven5 (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:30:42] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Read error: Connection reset by peer)
[10:30:42] *** mven5 is now known as mven
[10:30:49] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:31:03] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[10:33:02] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[10:34:59] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[10:37:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:40b7:d4a2:46ea:b690) (Quit: Quit)
[10:38:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:38:58] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[10:39:18] *** Joins: kdc (~kdc@196.211.197.159)
[10:41:18] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 256 seconds)
[10:41:19] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:41:21] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:41:32] *** Quits: tyzoid (~tyzoid@2607:5600:dc::2) (Ping timeout: 240 seconds)
[10:41:52] *** Quits: jaeckel (~jaeckel@sleipnir.jaeckel.eu) (Ping timeout: 256 seconds)
[10:41:52] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (Ping timeout: 256 seconds)
[10:42:14] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[10:42:32] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 252 seconds)
[10:42:37] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 240 seconds)
[10:42:37] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[10:42:47] *** Joins: frost (~frost@user/frost)
[10:42:53] *** Joins: jaeckel (~jaeckel@sleipnir.jaeckel.eu)
[10:43:25] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[10:43:30] *** Joins: beencubed (~beencubed@209.131.238.248)
[10:43:51] *** Joins: superboot (~agentgasm@user/superboot)
[10:43:52] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[10:43:53] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[10:45:01] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[10:45:18] *** Joins: szutt (~szutt@116.37.2.145)
[10:45:55] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:47:27] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:47:59] *** Joins: tyzoid (~tyzoid@srv1.tyzoid.com)
[10:48:41] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:48:41] *** Joins: Teckla (~Teckla@user/teckla)
[10:49:55] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:54:25] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bae6:fe15:58ae:457e) (Quit: Leaving)
[10:56:08] *** Quits: malloy (~jimery@116.30.223.163) (Read error: Connection reset by peer)
[10:58:52] *** Quits: PortableDave (~portabled@118.208.121.87) (Ping timeout: 256 seconds)
[11:00:56] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4530:ee19:2379:ed51)
[11:02:04] *** Joins: malloy (~jimery@116.30.222.36)
[11:03:13] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:03:21] *** Quits: alch (~alch@151.36.107.27) (Ping timeout: 265 seconds)
[11:03:59] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:4530:ee19:2379:ed51) (Ping timeout: 252 seconds)
[11:04:56] *** Joins: alch (~alch@151.68.126.11)
[11:07:22] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[11:07:29] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[11:11:23] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Remote host closed the connection)
[11:14:19] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ec2b:d92a:1f2a:3057)
[11:22:39] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[11:31:16] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[11:32:16] *** Quits: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Quit: WeeChat 3.3)
[11:32:30] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[11:32:33] *** Quits: imp (~imp@192-141-191-234.alternativaip.net.br) (Quit: imp)
[11:34:17] *** Joins: mrig (~AdiIRC@user/mrig)
[11:36:21] *** Joins: lleo (~leo@89-200-32-158.mobile.kpn.net)
[11:37:46] *** Joins: aradesh (~aradesh@user/aradesh)
[11:39:09] *** Joins: leo__ (~leo@89-200-32-158.mobile.kpn.net)
[11:39:41] *** Quits: amorel (~amorel@mx.mompl.net) (Ping timeout: 250 seconds)
[11:41:07] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[11:41:32] *** Quits: lleo (~leo@89-200-32-158.mobile.kpn.net) (Ping timeout: 265 seconds)
[11:42:36] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:10ea:1149:e04f:a7a6)
[11:42:54] *** Joins: jjido (~Denis@90.213.58.125)
[11:44:21] *** Joins: Viewday113 (~Viewday@user/viewday)
[11:45:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:45:48] *** Viewday113 is now known as Viewday11
[11:46:35] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:51:18] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[11:51:30] *** Joins: amorel (~amorel@mx.mompl.net)
[11:54:27] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[11:55:04] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:55:46] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:56:23] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:57:39] *** Joins: kish` (~sid742412@user/aqua)
[12:04:11] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:04:42] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:05:06] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:09:36] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:13:53] *** Joins: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu)
[12:17:13] <baltazar> hi! is it possible to do something like this, but avoiding gcc warnings? `*(uint8_t *)(0xC3) = 42;`
[12:17:19] <baltazar> I get `warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]`
[12:17:31] <baltazar> but not if I'm casting to `volatile uint8_t *`
[12:18:28] <dave0> baltazar: not really... standard c doesn't really support making arbitrary addresses
[12:18:52] <dave0> but that doesn't mean you can't write a program that does
[12:19:04] *** Joins: Klinda (~superleag@user/klinda)
[12:20:32] <dave0> baltazar: check how linux handles warnings about poking arbitrary addresses
[12:20:54] <dave0> it may have a macro you can use to quiet it
[12:22:16] <baltazar> I'm writing conde for AVR, and its libc often has stuff like `*(volatile uint8_t *)(0xC3)`, but those don't issue warnings, only if I cast to non-volatile
[12:23:02] <dave0> is 0xc3 some kind of hardware register?
[12:23:55] <baltazar> dave0: yep
[12:23:57] <dave0> afaik volatile was designed for memory mapped i/o ... it would be the right thing to use if 0xc3 was some control register
[12:24:27] <caze> ports
[12:26:26] <baltazar> ok so just in case this is XY, what I actually want to achieve is enable some optimizations for code that does nothing. like `UCSR0A |= 0` normally generates code that reads the hw register, then puts it back as it was
[12:26:44] *** Joins: Akiva (~Akiva@user/Akiva)
[12:27:28] <baltazar> so what I'm doing is casting `UCSR0A` to non-volatile for the assignment, and surrounding it with `__asm__ volatile ("" ::: "memory")` to prevent reordering.
[12:27:40] <baltazar> and it works just the way I want it to, except for the warnings
[12:28:25] <baltazar> (`UCSR0A` is a macro that expands to `(*(volatile uint8_t *)(0xC3))`)
[12:29:14] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[12:30:02] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[12:34:38] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[12:35:02] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:35:40] *** Quits: noose (~noose@user/noose) (Quit: Bye)
[12:36:01] *** Joins: noose (~noose@user/noose)
[12:40:21] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[12:41:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:41:50] *** Joins: imp (~imp@192-141-191-234.alternativaip.net.br)
[12:44:17] *** Joins: uskerine (~uskerine@0x3ec66374.ejb.customer.dk.telia.net)
[12:47:50] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[12:50:39] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 265 seconds)
[12:53:43] *** Joins: kurahaupo (~kurahaupo@pa49-195-164-238.pa.nsw.optusnet.com.au)
[13:01:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:03:29] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[13:03:58] *** Joins: Cyp (~cyp@213.237.85.9)
[13:04:59] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[13:05:24] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Quit: Quit.)
[13:06:22] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[13:07:00] <baltazar> hmmm.... shouldn't I at least be able to suppress it with `_Pragma("GCC diagnostic ignored \"-Wstringop-overflow\"")`?
[13:09:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:09:45] *** Joins: frost (~frost@user/frost)
[13:09:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[13:12:20] *** Joins: Arsen (arsen@managarm/dev/Arsen)
[13:12:24] *** Quits: leo__ (~leo@89-200-32-158.mobile.kpn.net) (Remote host closed the connection)
[13:13:20] *** Joins: leo__ (~leo@89-200-32-158.mobile.kpn.net)
[13:13:28] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:13:54] *** Quits: leo__ (~leo@89-200-32-158.mobile.kpn.net) (Remote host closed the connection)
[13:16:47] *** Joins: sicelo_ (~sicelo@harlock.dyne.org)
[13:16:47] *** Quits: sicelo_ (~sicelo@harlock.dyne.org) (Changing host)
[13:16:47] *** Joins: sicelo_ (~sicelo@user/sicelo)
[13:17:11] *** Joins: jjido (~Denis@90.213.58.125)
[13:19:10] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Read error: Connection reset by peer)
[13:20:46] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[13:27:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:30:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:30:29] *** Joins: lleo (~leo@89-200-32-158.mobile.kpn.net)
[13:32:01] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:39:53] *** Joins: earnestly (~earnest@user/earnestly)
[13:40:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:41:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:41:44] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[13:42:05] *** Joins: szutt (~szutt@116.37.2.145)
[13:43:59] *** Joins: Viewday116 (~Viewday@user/viewday)
[13:44:58] *** Quits: xcm_ (~xcm@user/xcm) (Remote host closed the connection)
[13:45:01] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:45:15] *** Joins: xcm_ (~xcm@user/xcm)
[13:45:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:45:26] *** Viewday116 is now known as Viewday11
[13:45:39] *** Joins: cousteau (~cousteau@user/cousteau)
[13:45:42] <cousteau> Hi
[13:46:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:46:32] <cousteau> Is a+b the same as b+a in EVERY context?  (where a and b are subexpressions) 
[13:47:37] <cousteau> (obviously not looking for a trick answer like "if a is `x` and b is `+`...") 
[13:48:38] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[13:49:39] <cousteau> In C++ they wouldn't be the same, and I could get them to do something different through operator overloading, but in C I would think they are indistinguishable as far as the standard goes 
[13:50:12] <smallville7123> what do you mean by context
[13:50:49] <cousteau> Even in corner cases like "if one of them is a pointer or a bool or an unsigned integer or a float or a complex or..." 
[13:50:56] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[13:51:29] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:51:37] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[13:51:43] *** Joins: mrig (~AdiIRC@user/mrig)
[13:51:49] <smallville7123> a + b and b + a are the same if the types are pod (eg standard types such as int, bool, float, ect) and will often by type promoted (integral promotion) to the largest type to contain the result with respect to overflow
[13:52:09] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[13:52:17] <smallville7123> eg adding int8_t and int8_t will NOT produce a int16_t and will instead produce a int8_t that MIGHT overflow
[13:52:28] *** Joins: sicelo_ (~sicelo@harlock.dyne.org)
[13:52:28] *** Quits: sicelo_ (~sicelo@harlock.dyne.org) (Changing host)
[13:52:28] *** Joins: sicelo_ (~sicelo@user/sicelo)
[13:52:31] <smallville7123> while adding int8_t and int16_t WILL produce a int16_t
[13:52:54] <smallville7123> since int8_t will be promoted to int16_t or whatever the largest type is
[13:53:25] *** Quits: lleo (~leo@89-200-32-158.mobile.kpn.net) (Ping timeout: 240 seconds)
[13:53:26] <cousteau> For example, I know that *(p+i) where p is a pointer and i is an int is the same as *(i+p) (and equivalently, p[i] and i[p], which is super weird but technically works) 
[13:53:43] <smallville7123> i dont think this works for integers and float's tho (eg integer's and float's need to be explicitly cast to the desired type)
[13:54:20] <smallville7123> eg ((float) int8_t) + float     int8_t + ((int8_t) float)
[13:54:42] <cousteau> smallville7123: I think both are promoted to int, which is at least 16 bits, and then possibly converted back to int8_t if there's an assignment or similar 
[13:55:05] <smallville7123> possibly
[13:55:18] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ec2b:d92a:1f2a:3057) (Quit: Quit)
[13:55:25] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[13:55:42] <cousteau> Also yes you can add integers and floats directly; the integer will be implicitly cast to float 
[13:55:48] <smallville7123> also i find p[i] and i[p] weird as well
[13:55:51] <trenka> ```the left operand is a pointer to a complete object type and the right operand has
[13:55:52] <trenka> integer type.```
[13:56:09] <trenka> there is at least that difference in the standard
[13:56:16] <cousteau> Hm 
[13:56:28] <trenka> also I'm not sure about evaluation order
[13:58:52] <cousteau> Evaluation order is unspecified 
[14:00:05] <cousteau> trenka: not sure what you're quoting though; ,{C11 6.5.6p2} suggests order doesn't matter 
[14:00:06] <candide> trenka: http://www.iso-9899.info/n1570.html#6.5.6p2 [Additive operators] For addition, either both operands shall have arithmetic type, or one operand shall be a pointer to a complete object type and the other shall have integer type. (Incrementing is equivalent to adding 1.)
[14:01:16] <cousteau> Ah, subtraction, not addition :) yeah, i-p makes no sense (how do you subtract a pointer from an int?) 
[14:01:18] *** Joins: larry87 (~quassel@c-73-6-107-180.hsd1.tx.comcast.net)
[14:01:41] <cousteau> I was already aware that a-b and b-a were not the same 
[14:01:51] *** Joins: Lazenca (~lazenca@user/lazenca)
[14:04:06] <kurahaupo> it would be kinda cool to allow i=p1^p2, then you get p1=i^p2=p2^i and p2=i^p1=p1^i
[14:05:07] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[14:06:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[14:06:20] <kurahaupo> (There is a space-efficient representation of doubly linked lists that does exactly this but in a non-conforming way with casting to & from pointers.)
[14:06:47] <fizzie> ,cc int *p1 = &(int){123}, *p2 = &(int){456}; uintptr_t x = (uintptr_t)(void *)p1 ^ (uintptr_t)(void *)p2; int *px = (void *)((uintptr_t)(void *)p1 ^ x); printf("%d, %d, %d", *p1, *p2, *px); // strictly conforming, but uintptr_t is optional
[14:06:49] <candide> fizzie: 123, 456, 456
[14:07:20] * cousteau trying to wrap his head around the concept of "bitwise xor of pointers"
[14:07:39] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[14:07:39] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[14:08:28] *** Quits: dacav (~dacav@h94-245-9-205.cust.a3fiber.se) (Ping timeout: 265 seconds)
[14:08:30] <fizzie> I don't know if the xor-linked list quite counts as merely a "representation" of a doubly linked list, because given a pointer to a node, you can't iterate it in any direction, you must always have at least one other pointer of context.
[14:08:43] *** Joins: jinsun__ (~quassel@user/jinsun)
[14:09:21] <fizzie> Also maybe that uintptr_t isn't strictly conforming after all; I guess it could be the case that a single pointer value has multiple redundant valid uintptr_t conversions; the standard just guarantees that a single pointer will round-trip, not that it will always use the same integer value.
[14:09:25] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[14:09:25] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 240 seconds)
[14:09:25] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:09:48] <cousteau> Wow that's bonkers 
[14:09:50] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ace5:200c:c5d9:6afa)
[14:10:07] *** Joins: rkta__ (~kt@62.113.246.111)
[14:10:13] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[14:11:09] <fizzie> There's a C23 proposal to mandate the existence of uintptr_t, which also allows uintptr_t to be a larger type then uintmax_t as a special exception to the rule, to avoid problems with ABI compatibility. (No idea how likely it is to get accepted.)
[14:11:24] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:11:37] *** Quits: rkta__ (~kt@62.113.246.111) (Client Quit)
[14:11:37] <fizzie> http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2873.htm specifically.
[14:11:38] <candide> Title of fizzie's link: Pointers and integer types
[14:11:40] <cousteau> kurahaupo: I'm now curious about that xor indexing thing.  Will look it up later.  I guess it can be done with indexes into an array rather than pointers, right? 
[14:12:09] <fizzie> It's pretty simple, you just store `next^prev` in a single `link` field.
[14:12:23] <dave0> lots of tricky code to save a pointer :-(
[14:12:56] *** Quits: sicelo_ (~sicelo@user/sicelo) (Quit: Bye!)
[14:13:15] <fizzie> When you're iterating over the list in forward order, you always know the previous node, so you can recover next from (next^prev)^prev = next; and likewise when you're iterating in reverse order you'll know the next pointer, and can recover prev from (next^prev)^next = prev.
[14:13:55] <dave0> i can imagine it working with + and - too
[14:15:33] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:16:32] <fizzie> ,cc unsigned a = 123, b = 456; printf("%d,%d -> ", a, b); a += b; b = a-b; a -= b; printf("%d,%d", a, b); // the additive version of the standard xor swap
[14:16:35] <candide> fizzie: 123,456 -> 456,123
[14:17:34] <fizzie> Not quite as "elegant" as the usual a ^= b; b ^= a; a ^= b; because subtraction isn't commutative.
[14:18:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:d6f6) (Ping timeout: 265 seconds)
[14:18:44] <dave0> link=prev+next   link-prev=next  link-next=prev
[14:22:09] <wstrnr> this +/- swap is so countrerproductive if you consider CPU pipelining, this is a problem of xor swap also
[14:22:54] <dave0> as long as you have a spare register, it's 3 moves
[14:23:36] <dave0> but i guess that's how the xor trick came about.. save a register
[14:24:13] *** Joins: ko (~i.am@user/marlboro)
[14:24:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:25:12] <wstrnr> ah, by the way, unsigned values should be printed using %u format, not %d.  maybe it's even UB to print unsigned ints using %d
[14:25:32] <fizzie> It's not as long as the value is representable in both.
[14:25:36] <wstrnr> because, you know, when unsigned int gets converted to signed int, there can be a integer overflow
[14:25:57] <fizzie> (But sure, that was just a thinko.)
[14:26:14] *** Joins: loganlee (~Thunderbi@user/loganlee)
[14:26:37] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:32:27] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:12] *** Joins: csrf (~csrf@user/csrf)
[14:33:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[14:36:10] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Read error: Connection reset by peer)
[14:37:57] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[14:40:30] *** Joins: Viewday116 (~Viewday@user/viewday)
[14:42:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[14:42:18] *** Viewday116 is now known as Viewday11
[14:43:20] *** Joins: seninha (~seninha@user/seninha)
[14:49:57] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:15] *** Joins: smartin (~Thunderbi@88.135.18.171)
[15:00:53] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:03:25] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Ping timeout: 240 seconds)
[15:03:34] *** Quits: alch (~alch@151.68.126.11) (Ping timeout: 265 seconds)
[15:03:38] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[15:04:21] *** Joins: ztx (~ztx@user/ztx)
[15:05:14] *** Joins: alch (~alch@mi-18-16-236.service.infuturo.it)
[15:11:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:16:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[15:22:37] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 240 seconds)
[15:25:37] *** Joins: alioui (~medeva293@197.244.45.223)
[15:29:04] *** Joins: Samian (~s@user/samian)
[15:30:04] *** Quits: Samian (~s@user/samian) (Client Quit)
[15:30:44] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[15:32:35] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:32:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:33:51] *** Joins: Viewday113 (~Viewday@user/viewday)
[15:35:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:35:19] *** Viewday113 is now known as Viewday11
[15:35:31] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:11] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:36:28] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:03] *** Joins: mokulus (~mokulus@user/mokulus)
[15:39:44] *** Quits: mokulus (~mokulus@user/mokulus) (Client Quit)
[15:40:35] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[15:40:40] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[15:45:04] *** Quits: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com) (Quit: leaving)
[15:48:13] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[15:48:35] *** Joins: dacav (~dacav@h94-245-9-206.cust.a3fiber.se)
[15:49:40] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:54:18] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:56:41] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:58:44] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:59:17] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:59:19] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[15:59:21] *** Joins: Guest2923 (~Pip@183.212.6.201)
[16:00:11] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:00:16] *** Joins: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at)
[16:02:28] *** Guest2923 is now known as Pip
[16:02:58] *** Pip is now known as Guest2903
[16:03:41] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:08:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:08:27] *** Joins: shivesh (~shivesh@user/shivesh)
[16:11:26] *** Guest2903 is now known as help
[16:12:47] *** Joins: Klinda (~superleag@user/klinda)
[16:13:50] *** Joins: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com)
[16:16:01] *** help is now known as Rafaleman
[16:16:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[16:17:08] *** Quits: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Ping timeout: 268 seconds)
[16:17:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:18:52] *** Joins: random-nick_ (~random-ni@87.116.166.234)
[16:19:12] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[16:20:10] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:21:33] *** Quits: kurahaupo (~kurahaupo@pa49-195-164-238.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[16:21:47] *** Joins: kurahaupo (~kurahaupo@pa49-195-164-238.pa.nsw.optusnet.com.au)
[16:22:17] <markand> can timespec_get fills tv_nsec more than 1000 millions? because it's invalid for pthread_cond_timedwait
[16:22:38] <markand> so I wonder if I should use the POSIX clock_gettime function instead or % the tv_nsec if it's too large
[16:24:18] *** Joins: immibis_ (~hexchat@62.156.144.218)
[16:25:21] <cousteau> wstrnr: I remember lengthy discussions about whether or not printing an unsigned int with %d was UB 
[16:25:34] <cousteau> (...where did wstrnr go?) 
[16:26:01] <cousteau> Or was it about whether or not you could print a char* with %p? 
[16:26:21] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:26:49] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[16:26:58] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[16:27:27] *** Joins: Klinda (~superleag@user/klinda)
[16:27:30] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:27:45] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[16:28:01] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:28:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[16:28:05] <cousteau> markand: the standard doesn't suggest it can 
[16:29:36] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 265 seconds)
[16:30:33] <cousteau> tv_sec = number of seconds since epoch, truncated (rounded down); tv_nsec = "the integral number of nanoseconds"... however you want to interpret that 
[16:30:48] <markand> for example I get a case when while running I get tv_sec=1639054640, tv_nsec=999766261 and I want to add 500ms (500000000ns) so tv_nsec gets 1000266261 which is invalid for pthread_cond_timedwait
[16:31:24] <cousteau> (well, not sure if rounded down or rounded towards zero... can it be negative?  And in that case, will tv_nsec be negative as well?) 
[16:31:35] <fizzie> That'd be you adding to it rather than timespec_get doing so, though.
[16:31:52] <markand> so I suppose I have to do something like tv_sec = tv_nsec % 1 000 000 000
[16:31:59] <markand> += I mean
[16:32:17] <fizzie> Well, not quite that, but the thing you presumably meant.
[16:32:32] <cousteau> markand: OK first of all, if you do that you might overflow tv_nsec (not in your particular case but if you keep adding nsecs like crazy) 
[16:32:32] <fizzie> `tv_sec += tv_nsec / 1000000000; tv_nsec %= 1000000000;` specifically.
[16:33:40] <fizzie> (Assuming tv_nsec is both >= 0 and in range for the type.)
[16:34:01] <cousteau> Standard says tv_nsec is long (so it's bigger than necessary in LP64, weird...) 
[16:34:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:cd28:ecf9:b8a2:d95a)
[16:34:41] <cousteau> So in principle you could add up to ~1 second to tv_nsec before risking a signed overflow 
[16:34:51] <fizzie> A good thing about `long` is, it's sufficient for adding two whole seconds in nanoseconds, so you can safely add two "canonical" struct timespecs in the obvious way.
[16:34:52] <dave0> enum { feh=1000000000 }; long long j = tv_sec * feh + tv_nsec; j += 5000000000; tv_sec = j / feh; tv_nsec = j % feh;
[16:35:19] <cousteau> And I... think there was a way to "correct the nsec field automatically" but I'm not sure 
[16:35:21] <fizzie> `tv_sec * feh` isn't evaluated as a `long long` there.
[16:35:35] <fizzie> And I think so too, but I'm having a hard time figuring out what it could be.
[16:35:45] <markand> fizzie, http://sprunge.us/gbyUsx does that look correct? (if duration_ms is expressed in milliseconds)
[16:36:04] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[16:36:11] <fizzie> There's an equivalent thing for `struct tm` where `mktime` will normalize values out of range as a side effect of the time_t conversion.
[16:36:29] <fizzie> But I can't come up with what function would do it for a `struct timespec` naturally.
[16:36:52] <cousteau> fizzie: ah, that was probably it 
[16:37:06] <fizzie> markand: * 1000000 for the millis -> nanos conversion, but otherwise yes.
[16:37:30] *** Quits: immibis_ (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[16:37:44] <cousteau> markand: anyway, even if you could get away with that, I think you *shouldn't*, so better use the % thing 
[16:37:54] <markand> yes, I corrected that immediately, thanks I try
[16:38:09] <fizzie> (And if `duration_ms` is an int and you're worried it might not have 32 bits, a conversion to long might be appropriate too before doing the *1000000.)
[16:38:11] *** Joins: immibis (~hexchat@62.156.144.218)
[16:38:24] <cousteau> Or add an "if nsec >= 1000000000 then subtract 1000000000 and increment sec" 
[16:38:48] <dave0> use long long
[16:38:51] <cousteau> So you save the boring divisions and modulo, and just have addition and subtraction 
[16:39:01] <cousteau> dave0: no need to 
[16:39:08] <cousteau> Or wait, what for? 
[16:40:14] <dave0> to do the math in nanoseconds
[16:40:41] <cousteau> Oh right.  Use long long and multiply milliseconds by 1M
[16:41:05] <cousteau> That'd be another way to do it. 
[16:41:25] <dave0> oh i missed millis.. i thought it was all nsecs
[16:41:26] <cousteau> Or if number of milliseconds < 2000, a long will do 
[16:41:57] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[16:42:47] *** Joins: teepee (~teepee@openscad/teepee)
[16:42:59] <fizzie> If you want to do _more_ math than just a single addition, combining to a single 64-bit value may make sense, but just adding a duration to a `struct timespec` in two parts is clean enough.
[16:44:26] <cousteau> markand: yeah and if you're adding less than 1 second, you can replace the / % with + - 
[16:45:00] *** Quits: dacav (~dacav@h94-245-9-206.cust.a3fiber.se) (Quit: leaving)
[16:45:36] <pragma-> You guys look like you're having the time of your lives.
[16:45:40] <cousteau> If you may be adding more than a second then no.  (Or do the / % on the time being added, and then + - to fix the nanoseconds) 
[16:46:09] <fizzie> Also, 64 signed nanoseconds since 1970 is just setting up for an Y2262 problem. ;)
[16:46:10] <cousteau> pragma-: yeeeeeeeeeeeah
[16:46:20] <fizzie> Add 'bits' to that sentence.
[16:46:40] <pragma-> I've been meaning to jump in and help you guys with this problem but I can't find the time.
[16:46:52] <cousteau> fizzie: out of curiosity, how long did it take you to calculate that? 
[16:47:07] <cousteau> Or did you know that number beforehand? 
[16:47:17] <dave0> by 2262 we'll all be using 65 bit numbers
[16:48:05] <cousteau> dave0: well, if RAM scales following Moore's law, we might be needing 
[16:48:08] <cousteau> uh
[16:48:21] <pragma-> If you ignore the nsec, it'll be a waste of time.
[16:48:48] <cousteau> ...what's it?  1 more bit every 2 years?  So about 256 bits 
[16:49:30] <dave0> that will make the page tables huge!
[16:49:45] <cousteau> pragma-: please stop with the puns 
[16:49:50] <cousteau> This is not the time 
[16:49:55] <pragma-> smh
[16:50:05] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3)
[16:50:33] * cousteau feels like he got into a war he shouldn't have gotten into
[16:51:25] <cousteau> Having one person making bad puns about time was enough 
[16:51:30] <cousteau> We didn't need a second 
[16:51:47] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3) (Remote host closed the connection)
[16:51:49] * markand increases pragma-'s timespec to 1000000000 nanoseconds
[16:51:56] <pragma-> 6:30 is hands down the best time of the day.
[16:52:15] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3)
[16:53:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:53:27] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[16:53:39] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3) (Client Quit)
[16:54:19] *** Joins: arinov (~arinov@176.89.29.127)
[16:54:19] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[16:55:43] *** Quits: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu) (Quit: leaving)
[16:55:58] *** Joins: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu)
[16:58:37] *** Quits: larry87 (~quassel@c-73-6-107-180.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[16:59:06] *** Rafaleman is now known as pippip
[16:59:22] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:00:51] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:00:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:01:07] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[17:01:09] *** Joins: constxd (~brad@192.75.101.164)
[17:01:53] <pragma-> Actually, noon is the best time of the day, but 11:59:59 is second to noon.
[17:02:40] * markand prefers beer time
[17:03:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:04:37] *** Parts: alioui (~medeva293@197.244.45.223) ()
[17:07:33] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:10ea:1149:e04f:a7a6) (Quit: Leaving)
[17:07:35] *** Joins: velgin (~velgin@162.212.106.178)
[17:07:46] *** Joins: seninha (~seninha@user/seninha)
[17:07:47] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 265 seconds)
[17:09:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:09:27] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:12:08] *** Quits: Oxfuxxx (~sharky@82-64-161-82.subs.proxad.net) (Ping timeout: 265 seconds)
[17:12:29] *** Joins: Xatenev (~xatenev@2a02:8108:9640:74d4:8c71:3df2:922c:9db6)
[17:12:47] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[17:13:01] *** Quits: Xatenev (~xatenev@2a02:8108:9640:74d4:8c71:3df2:922c:9db6) (Changing host)
[17:13:01] *** Joins: Xatenev (~xatenev@user/xatenev)
[17:14:37] *** Joins: Oxfuxxx (~sharky@138.199.16.4)
[17:15:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:15:34] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:cd:62bb:449c:4584)
[17:15:51] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[17:15:54] *** Joins: pip (~Pip@183.212.6.201)
[17:16:17] *** pip is now known as Guest4613
[17:16:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:18:18] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:18:25] *** Quits: pippip (~Pip@183.212.6.201) (Ping timeout: 265 seconds)
[17:21:39] *** Guest4613 is now known as Pipipip
[17:23:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:24:13] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 265 seconds)
[17:24:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:28:15] *** Joins: velgin_ (~velgin@162.212.106.178)
[17:28:38] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:17] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[17:30:37] *** Quits: velgin (~velgin@162.212.106.178) (Ping timeout: 240 seconds)
[17:33:49] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[17:39:53] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:40:13] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:42:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:43:38] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:44:20] *** Joins: Viewday119 (~Viewday@user/viewday)
[17:44:36] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[17:45:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[17:45:52] *** Viewday119 is now known as Viewday11
[17:47:29] *** Joins: dmenz (~dmenz@2804:14d:5cd4:5e94::1)
[17:49:03] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:49:17] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[17:50:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:51:25] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:cd:62bb:449c:4584) (Ping timeout: 240 seconds)
[17:51:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[17:51:35] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Remote host closed the connection)
[17:51:54] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[17:52:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:54:26] *** Quits: velgin_ (~velgin@162.212.106.178) (Quit: okbye)
[17:54:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:54:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:54:40] *** Joins: wroathe (~wroathe@user/wroathe)
[17:57:24] <Feuermagier> I have a char cmd[2] that gets read into. What does the line del(!(*cmd & ' ')); accomplish?
[17:57:40] <Feuermagier> as in - what does that do as argument?
[17:58:34] <koollman> Feuermagier: read it in smaller steps. *cmd , then *cmd & ' ' , then !(*cmd & ' ') 
[17:59:12] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:59:16] <Feuermagier> *cmd takes the first char in cmd
[17:59:30] <koollman> correct
[17:59:53] <Feuermagier> but not + 'and'ing at with SPACE...
[18:00:11] <dave0> *cmd grabs the first character, ' ' is ascii space 0x20 which is bit #5 ... if bit #5 is set, it'll evaluate to 0, if bit #5 is clear, it'll evaluate to 1
[18:00:28] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 265 seconds)
[18:01:17] <dave0> it might be trying to find an uppercase letter
[18:01:33] *** Joins: nyah (~nyah@94.6.71.219)
[18:01:48] <dave0> but you'll have to check the surrounding code
[18:02:24] *** Joins: mrig (~mrig@user/mrig)
[18:02:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:03:32] <Feuermagier> dave0, ah, so cmd is also used in the a switch statement that gets me to this line. apparently all this does is check if there was an upper or lowercase char supplied and passes 0 or 1 respectively
[18:03:35] <Feuermagier> really weird
[18:06:12] *** Joins: Burgundy (~yomon@79.115.213.171)
[18:07:14] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[18:07:41] *** Joins: Teckla (~Teckla@user/teckla)
[18:07:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:07:59] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[18:08:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:08:33] *** Quits: dmenz (~dmenz@2804:14d:5cd4:5e94::1) (Quit: Leaving)
[18:09:35] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[18:14:50] *** Joins: monkey_ (~user@181.114.17.106)
[18:17:41] *** Quits: Pipipip (~Pip@183.212.6.201) (Read error: Connection reset by peer)
[18:18:09] *** Joins: Pipipip (~Pip@183.212.6.201)
[18:19:42] *** Quits: Pipipip (~Pip@183.212.6.201) (Read error: Connection reset by peer)
[18:20:04] *** Joins: Pipipip (~Pip@183.212.6.201)
[18:20:30] *** Quits: smartin (~Thunderbi@88.135.18.171) (Remote host closed the connection)
[18:21:04] *** jinsun__ is now known as jinsun
[18:21:58] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[18:22:13] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[18:24:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:24:55] *** Joins: Jong (~Jong@2620:10d:c090:400::5:d6f6)
[18:26:09] *** Joins: arinov (~arinov@176.89.29.127)
[18:26:10] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:26:22] *** Joins: smartin (~Thunderbi@88.135.18.171)
[18:26:24] *** Joins: pulse (~pulse@user/pulse)
[18:26:34] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[18:26:54] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[18:27:08] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[18:28:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:28:18] *** Joins: meator (~meator@user/meator)
[18:29:07] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 252 seconds)
[18:29:10] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[18:30:32] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[18:31:44] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[18:32:07] *** Joins: noonien (~noonien@user/noonien)
[18:33:26] *** Quits: Pipipip (~Pip@183.212.6.201) (Quit: Leaving)
[18:35:02] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Client Quit)
[18:35:16] *** Joins: quartz (~quartz@user/quartz)
[18:42:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 265 seconds)
[18:43:05] <cousteau> Feuermagier: honestly, doing & ' ' is kind of ugly.  A space character is meaningless as a numerical value; if they wanted to use a character for their numerical value, they should have used the numerical value instead 
[18:43:14] <cousteau> So & 0x20
[18:43:25] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[18:43:38] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 260 seconds)
[18:45:04] <cousteau> Doing & ' ' implies that you know the ASCII value of ' ', which programmers may not know off the top of their mind.  And, of course, it only works under the assumption that the target machine uses ASCII, which the C standard doesn't require. 
[18:46:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cd28:ecf9:b8a2:d95a) (Ping timeout: 268 seconds)
[18:47:06] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[18:48:02] <esselfe> all programmers know ' ' is 32/0x20 :P
[18:48:03] <cousteau> But most importantly, they wrote something that doesn't represent what they meant.  Basically, if you want the letter A, you write 'A'; if you want the number 65, you write 65; if you're thinking of the bit pattern 01000001 you write 0x41.  Writing one when you mean the other only complicates the code. 
[18:49:56] <cousteau> So... they should've done & 0x20, or maybe & 1<<5 for "bit number 5"
[18:51:21] <cousteau> Feuermagier: would you have understood `del(!(*cmd & 0x20))`?
[18:51:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[18:52:16] <koollman> I know ' ' is 0x20, even without knowing much of the rest of the ascii table (mostly because urls will use %20 for spaces). But I agree, it could be written in a less ugly way :)
[18:52:28] <koollman> I would prefer & 1<<5
[18:52:40] <koollman> and probably a comment about why it works for this test :)
[18:52:57] <cousteau> Yep.  A comment would have helped. 
[18:53:32] <koollman> because if the goal is to test for uppercase, it would still fail in many situation, unless the content is restricted in some other ways
[18:54:23] <cousteau> Or even maybe a more verbose code.  if ((*cmd & 1<<5) == 0) del(1); else del(0);
[18:54:23] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[18:54:43] *** Joins: meator (~meator@user/meator)
[18:54:49] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[18:54:51] <cousteau> There.  You have a piece of code that tells what it does, rather than letting you figure it out 
[18:56:22] <koollman> isupper(*cmd) 
[18:56:37] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[18:58:47] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[18:59:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:59:59] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:00:54] *** Quits: alch (~alch@mi-18-16-236.service.infuturo.it) (Read error: Connection reset by peer)
[19:02:49] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[19:03:35] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[19:05:34] *** Joins: alch (~alch@to-18-80-221.service.infuturo.it)
[19:07:15] *** Joins: larry87 (~quassel@2601:2c5:c100:8cd:5ffe:15fa:93f8:62de)
[19:09:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ace5:200c:c5d9:6afa) (Quit: Quit)
[19:10:05] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[19:10:32] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[19:10:53] *** Joins: alicef (~none@gentoo/developer/alicef)
[19:15:17] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:1b4:2cec:47c3:871e)
[19:15:22] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:15:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:15:33] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[19:17:24] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[19:17:33] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:17:55] *** Joins: jinsun (~quassel@user/jinsun)
[19:18:17] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[19:20:06] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Remote host closed the connection)
[19:20:42] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 265 seconds)
[19:22:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 265 seconds)
[19:22:49] *** Joins: kdc (~kdc@196.211.197.159)
[19:23:00] *** Joins: alicef (~none@gentoo/developer/alicef)
[19:23:59] *** Joins: arinov (~arinov@31.223.11.117)
[19:26:17] *** Joins: mahmutov (~mahmutov@5.176.31.136)
[19:26:26] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:26:46] *** Joins: szutt (~szutt@116.37.2.145)
[19:27:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:28:05] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:29:11] *** derelict is now known as tetrahedron
[19:29:17] *** Joins: nvmd (~nvmd@user/nvmd)
[19:29:24] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[19:30:37] <nvmd> What exactly are the C99 additions to formatted IO?
[19:30:47] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:31:28] *** Joins: magla (~gelignite@55d403aa.access.ecotel.net)
[19:31:31] <nvmd> Other than positional arguments, 64bit formats, and long double
[19:32:14] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Client Quit)
[19:34:06] *** magla is now known as jellyknight
[19:34:18] <nvmd> looking into whether or not it's safe to enable nano newlib and for a way other than going through std docs and comparing..
[19:35:40] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:ac3e:9fa3:9015:4b93) (Quit: simon323)
[19:35:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:36:07] <fizzie> "Positional arguments"? 
[19:37:03] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:37:14] <fizzie> If that's referring to the %2$d syntax, that's not in any C standard revision.
[19:37:47] *** Joins: cation (cation@user/cation)
[19:39:15] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:40:02] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:40:20] <nvmd> oh yeh, that's posix stuff
[19:40:25] <nvmd> right?
[19:40:26] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[19:40:54] <fizzie> POSIX/SUS, yes.
[19:41:07] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Client Quit)
[19:42:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:42:49] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[19:44:11] *** Joins: Viewday112 (~Viewday@user/viewday)
[19:45:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:45:35] *** Viewday112 is now known as Viewday11
[19:46:21] <begriffs> nvmd maybe %zu too
[19:46:21] <sham1> It'd be nice if one could have a positional argument syntax
[19:46:37] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 240 seconds)
[19:47:04] <nvmd> so, is there such a thing? I mean, I'm using only '%02X' and '%s', which I'm pretty sure are supported, but I'd like to know what isn't should the opportunity to use something not supported by C89 arises
[19:47:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:48:27] <nvmd> begriffs: that's a start, had forgotten about that one
[19:49:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 240 seconds)
[19:49:05] <fizzie>  I don't think there's any blessed list of differences other than the overall summary in the standard's front pages, which isn't very detailed.
[19:49:34] <fizzie> The z and j and t length modifiers are probably all new in C99.
[19:49:53] <nvmd> hmm
[19:50:05] <fizzie> For size_t, (u)intmax_t and ptrdiff_t, respectively.
[19:50:40] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[19:50:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:51:00] <nvmd> there was no float support also, right? only double
[19:51:06] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[19:51:07] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[19:51:44] <fizzie> That's a consequence of not being able to pass a `float` to a variadic function.
[19:52:02] <nvmd> oh
[19:52:46] <fizzie> The formatted *input* functions (that take a pointer and aren't affected by that) have been taking %f and %lf for `float` and `double` from C89 onwards.
[19:53:49] *** Quits: uskerine (~uskerine@0x3ec66374.ejb.customer.dk.telia.net) (Ping timeout: 240 seconds)
[19:55:08] *** Joins: Luke (~ldm@hacksoc/member)
[19:55:29] *** Joins: powerman2206 (~powerman2@10-201.dsl.iskon.hr)
[19:56:08] *** Quits: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[19:56:20] *** Parts: powerman2206 (~powerman2@10-201.dsl.iskon.hr) ()
[19:56:28] *** Quits: arinov (~arinov@31.223.11.117) (Ping timeout: 265 seconds)
[19:56:39] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[19:57:33] <fizzie> Oh, the %a formats are I think also a C99 addition.
[19:58:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[19:58:14] <nvmd> well, I think that clears it up a bit
[19:59:28] <cousteau> Yeah, %a wasn't C89 afaik
[20:00:33] <cousteau> And yeah, plenty of new letters.  z, j, t, ll... 
[20:01:00] <cousteau> (ll used to be a letter in Spanish, until they realized it was just two l's) 
[20:02:37] <nvmd> good to know
[20:06:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[20:09:37] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 268 seconds)
[20:10:37] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:11:22] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[20:12:12] <fizzie> Sounds kind of like the German ß. :)
[20:12:54] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 265 seconds)
[20:17:21] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[20:17:38] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:17:38] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:17:38] *** Joins: wroathe (~wroathe@user/wroathe)
[20:18:32] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000F11692CFE14EEDDA.catv.pool.telekom.hu)
[20:19:03] *** Joins: Betal (~Betal@user/betal)
[20:19:09] <cousteau> Yeah except that it didn't reshape the two L's, just put them together 
[20:19:27] *** Joins: gareppa (~gareppa@user/gareppa)
[20:20:13] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[20:20:14] <cousteau> I guess that at some point somebody bought a typewriter, and was like "hey guys, look what I found out, if you press the L key twice you get an LL!" 
[20:22:02] <cousteau> "wow, and CH too!  Turns out they were two letters all the time!" 
[20:22:05] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5)
[20:22:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[20:22:42] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[20:22:44] <cousteau> "Anything similar for the Ñ?  Nope...  Must be a letter then" 
[20:23:34] *** Joins: lleo (~leo@89-200-32-158.mobile.kpn.net)
[20:24:04] <DarkUranium> `ffi` is another common case. Unicode has it as ﬃ (assuming your client renders it)
[20:24:17] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:24:19] <DarkUranium> Not talking about Spanish specifically, to be clear.
[20:24:50] <cousteau> Yeah.  I think there's an ll digraph too.  Not particularly useful; not sure if anyone actually uses that. 
[20:25:59] <cousteau> ffi is there mostly because "it looks better" than f+f+i, although nowadays fonts do the replacement automatically 
[20:27:47] <cousteau> But there's plenty of digraphs there targeting languages that don't use those digraphs in practice, and instead use multiple letters.  Like ij lj nj dž... 
[20:28:21] <cousteau> (this is totally related to C, by the way, because, um, because C is a letter too) 
[20:29:07] <DarkUranium> lol
[20:30:03] <perro> being an english speaker, coming across new letters is always fun
[20:31:57] <cousteau> Back to the topic, printf format specifiers introduced in C99 are z j t ll modifiers, a A specifiers, and I think F too 
[20:32:27] *** Joins: monkey_ (~user@181.114.17.106)
[20:33:44] <cousteau> There used to be only f, and e/E for scientific notation using lowercase or uppercase "e", and g/G for "either f or e/E", but then they realized that %f can also be INF and NAN, which you may want to write in uppercase 
[20:35:50] <cousteau> And... not sure if L (for long doubles) existed in C89
[20:37:45] *** Joins: leo__ (~leo@89-200-32-158.mobile.kpn.net)
[20:40:27] *** Quits: lleo (~leo@89-200-32-158.mobile.kpn.net) (Ping timeout: 265 seconds)
[20:40:56] *** Joins: Charadon (~Charadon@155.138.164.183)
[20:44:39] *** Joins: dohtem (uid524096@user/dohtem)
[20:45:15] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[20:47:10] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[20:48:40] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[20:50:23] *** Joins: Akiva (~Akiva@user/Akiva)
[20:53:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:54:58] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[20:58:00] <fizzie> I think I saw a company with a custom ligature on their web page recently.
[20:59:26] <fizzie> https://zem.fi/tmp/intellij.png -- it's a proper thing, you can select the "i" separately from the "J".
[21:02:36] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[21:02:53] *** Joins: uskerine (~uskerine@0x3ec66374.ejb.customer.dk.telia.net)
[21:04:59] *** Joins: Akuli (~Akuli@82-203-165-242.bb.dnainternet.fi)
[21:05:57] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[21:05:59] *** Quits: mahmutov (~mahmutov@5.176.31.136) (Read error: Connection reset by peer)
[21:06:23] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[21:07:28] *** Joins: mahmutov (~mahmutov@5.176.31.136)
[21:07:47] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:08:18] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 260 seconds)
[21:09:29] <op0x0f05> Hi, I'm trying to write a shell (in C++, but the part I'm talking about is very C-like)
[21:09:29] <op0x0f05> and I created a thread that calls waitpid() while the other's thread using poll (like select) to listen on the eventfd that the other thread will write to and on the subcommand's piped output (which I'm saving to a string)
[21:09:30] <op0x0f05> Everything works, except that waitpid() **returns 0**
[21:09:30] <op0x0f05> This is despite the manpage clearly saying this is impossible:
[21:09:30] <op0x0f05> waitpid(): on success, returns the process ID of the child whose
[21:09:30] <op0x0f05>        state has changed; if WNOHANG was specified and one or more
[21:09:31] *** ChanServ sets mode: +o candide
[21:09:31] *** candide sets mode: +b *!uid512716@*.irccloud.com
[21:10:38] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b) (Remote host closed the connection)
[21:10:42] <cousteau> fizzie: hm, IntelliJ sounds familiar 
[21:11:01] *** candide sets mode: -b *!uid512716@*.irccloud.com
[21:11:14] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[21:11:14] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[21:12:01] <cousteau> Oh it's an IDE 
[21:13:13] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[21:14:13] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 240 seconds)
[21:15:52] <cousteau> op0x0f05: the manpage I have mentions three possible outputs: pid, 0, or -1
[21:16:19] <op0x0f05> it only returns 0 if WNOHANG was specified
[21:16:23] <op0x0f05> I did not specify WNOHANG
[21:16:40] <cousteau> Oh 
[21:17:54] <cousteau> And are you sure it returns 0, and not that you're accidentally discarding the read value and printing a 0 instead? 
[21:19:59] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:20:38] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[21:21:04] *** Quits: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net) (Remote host closed the connection)
[21:22:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[21:23:34] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[21:24:05] <op0x0f05> int wstatus = 0;
[21:24:06] <op0x0f05> waitpid(pid, &wstatus, 0);
[21:24:06] <op0x0f05> std::cout << wstatus << std::endl;
[21:24:48] <fizzie> That's not the return value.
[21:24:55] <fizzie> The return value is what the `waitpid` function returns.
[21:25:13] <op0x0f05> What would make wstatus be 0
[21:25:25] <op0x0f05> It should have something in it
[21:25:33] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[21:25:39] <fizzie> You should check the return value of `waitpid` first.
[21:25:48] <fizzie> For example, if it returns -1, the value of `wstatus` isn't meaningful.
[21:25:59] <fizzie> (To indicate an error.)
[21:25:59] <op0x0f05> Oh god I'm an idiot
[21:26:17] <op0x0f05> Thank you
[21:26:55] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Changing host)
[21:26:55] *** Joins: Satin (uid193953@user/Seten)
[21:26:55] <fizzie> As for what's in wstatus when waitpid succeeds, officially you're only supposed to inspect it with the bunch of macros (WIFEXITED, WEXITSTATUS if WIFEXITED is true, WIFSIGNALED, ...) though usually those just extract specific bits from it.
[21:27:45] <fizzie> (0 might well mean normal termination with exit status 0 though.)
[21:27:53] *** Joins: cursey (~cursey@user/cursey)
[21:28:06] <op0x0f05> it says No child processes in perror
[21:28:52] *** Quits: Satin (uid193953@user/Seten) ()
[21:29:06] *** Joins: Satin (uid193953@user/Seten)
[21:29:44] <op0x0f05> and 0 is a special return value because it is the only way you'd know there's no return value when using wnohang
[21:29:51] <op0x0f05> in wstatus
[21:30:18] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[21:31:04] <fizzie> Assuming it also returned -1, an errno == ECHILD result should mean `pid` either isn't a child of the process, has already been waited for, or the action of SIGCHLD is set to SIG_IGN.
[21:35:08] <op0x0f05> I only call waitpid in one place and it's the first time so it's supposed to either hang or be a zombie process which will also return something
[21:35:14] <op0x0f05> I don't think I put a fake pid there
[21:36:55] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Remote host closed the connection)
[21:39:07] <op0x0f05> do threads share the same child processes?
[21:39:07] <op0x0f05> because I checked in the parent thread and /proc/self/task/(task id)/children has the pid I'm using
[21:40:52] <Luke> Hi, I'm writing an LED controller for ESP32, and when it is connected to WiFi I notice flickering in the pattern. Could this be the wifi task preempting the LED task?
[21:41:49] <constxd> Not even remotely on-topic. Based.
[21:42:02] <floatcomplex> "based" ?
[21:42:19] <op0x0f05> hmmmmm /proc/self/task/gettid()/children has nothing in the thread
[21:42:19] <op0x0f05> could it be threads do not share their parents children?
[21:42:19] <constxd> Yes, and redpilled too.
[21:43:03] <op0x0f05> if so I have no solution
[21:44:00] *** Joins: Viewday115 (~Viewday@user/viewday)
[21:44:27] * floatcomplex googles, is not enlightened, puts on a heavier flannel and wanders into the forest to chop wood far from computers
[21:46:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[21:46:11] *** Viewday115 is now known as Viewday11
[21:48:52] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[21:51:38] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[21:56:07] *** Quits: g2anj (~v@39.112.227.198) (Ping timeout: 256 seconds)
[21:57:47] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[21:57:56] <arkanoid> I'm trying to write language bindings for the numpy c-api. I'm quite successfully wrapping types and functions, but I'm failing the linking phase and I'm now finding anywhere where the library that should be linked: "undefined reference to `PyArray_NDIM'" how would you search for in inside the system?
[21:58:10] <arkanoid> s/now/not/
[21:58:13] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[21:58:40] <omegatron> grep -R -F PyArray_NDIM /usr/lib
[21:58:50] <omegatron> or whereever your libraries are
[22:00:41] <omegatron> surely there won't be that much files containing that text .. but if it's too many matches you might append a pipe to filter for libraries (.so/.dylib) or any other file suffix
[22:00:53] *** Joins: arinov (~arinov@213.194.126.155)
[22:04:02] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Read error: Connection reset by peer)
[22:05:01] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[22:07:43] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[22:08:10] *** Quits: Ragnor (~Ragnor@user/ragnor) (Quit: leaving)
[22:08:24] *** Joins: Ragnor (~Ragnor@user/ragnor)
[22:12:38] <arkanoid> omegatron: sadly I find no results. There must be something I'm missing
[22:13:48] <omegatron> maybe you need to search the entire  /usr  directory (because it resides in /usr/local) ... but are you sure the library files are installed ?
[22:14:37] *** Quits: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net) (Ping timeout: 252 seconds)
[22:14:40] <omegatron> is this some linux flavour we are talking about?
[22:14:42] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[22:14:53] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[22:15:08] <omegatron> your package manager could show you the list of installed with, such as  dpkg -L numpy  or similar
[22:15:16] <omegatron> "installed files"
[22:19:56] <arkanoid> omegatron: no, the think I'm trying to wrap is the numpy c-api. Numpy is a python package, that works nicely within python, so the function must be implemented somewhere
[22:20:42] <arkanoid> the python packages is installed in a so-called "virtual environment". That means it is located in a specific path on the system
[22:20:44] <omegatron> yes, I know .. I would search on my machine within /usr/lib/python3.9/site-packages, if it's not found in /usr/lib ..
[22:21:00] <omegatron> but you could have numpy installed in /usr/local or whatever location .. 
[22:22:21] <omegatron> for example, I found it in  /usr/lib/python3.9/site-packages/numpy-1.21.2-py3.9-linux-x86_64.egg/numpy/f2py/__pycache__/cfuncs.cpython-39.pyc
[22:22:37] <arkanoid> omegatron: no, it is installed in the virtual environment, ./venv/lib/python3.8/site-packages/numpy
[22:22:58] <omegatron> but thats not a "normal" shared library ..  /usr/lib/python3.9/site-packages/numpy-1.21.2-py3.9-linux-x86_64.egg/numpy/core/_multiarray_tests.cpython-39-x86_64-linux-gnu.so   might be a better candidate
[22:24:21] <omegatron> grep -R -F PyArray_NDIM /usr/lib/python3.9/site-packages | grep -F .so   has narrowed the list down to 8 matches on my machine
[22:25:00] <omegatron> anyway, if you have numpy installed within a virtualenv directory .. look there for the respective library file
[22:26:10] <arkanoid> "grep -R -F PyArray_NDIM . | grep -F .so" executed in ~/myproj/venv/lib/python3.8/site-packages returns zero
[22:27:37] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:35:15] <arkanoid> zero results also for grepping "/usr/lib/python3.8"
[22:36:39] *** Quits: vt (~vt@osa.vbc.su) (Remote host closed the connection)
[22:36:53] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:48] *** Joins: vt (~vt@osa.vbc.su)
[22:38:52] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 265 seconds)
[22:39:46] <constxd> arkanoid: where are the header files
[22:39:49] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:d0e7:3f4e:b209:88f5) (Ping timeout: 240 seconds)
[22:39:53] *** Joins: jjido (~Denis@90.213.58.125)
[22:40:36] <arkanoid> constxd: ~/myproj/venv/lib/python3.8/site-packages/numpy/core/include/numpy
[22:41:23] <constxd> ok and the library files are around there?
[22:41:31] <constxd> numpy/core/lib or something?
[22:42:17] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[22:42:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:43:21] <arkanoid> venv/lib/python3.8/site-packages/numpy/[core|random|linalg|fft] constains different .so files
[22:43:50] <arkanoid> but running "grep -R -F PyArray_NDIM . | grep -F .so" in venv/lib/python3.8/site-packages/numpy returns zero results
[22:44:07] <constxd> just .so files in there?
[22:45:24] <arkanoid> no, there are also .py, .pyi, .a, .ini and possibly more
[22:45:50] *** Joins: strajder (~strajder@user/strajder)
[22:46:28] <arkanoid> but if I grep that symbol it's found only in .h files even starting from root of the venv
[22:48:24] *** Joins: rgrinberg (~textual@187.223.58.12)
[22:51:25] <constxd> lmao
[22:51:32] <constxd> arkanoid: it's a macro
[22:51:36] <constxd> cmon bruh
[22:51:40] <omegatron> duh!
[22:52:24] <arkanoid> constxd: https://github.com/huggingface/neuralcoref/blob/60338df6f9b0a44a6728b442193b7c66653b0731/include/numpy/ndarraytypes.h#L1387
[22:53:01] <constxd> what is this
[22:53:04] <constxd> some numpy fork?
[22:53:07] <arkanoid> macros are deprecated, they are functions with NPY_NO_DEPRECATED_API
[22:53:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:53:59] <arkanoid> no it's the same of real .h, just first google result for ndarraytypes.h. Let me paste the one from my venv
[22:54:44] <arkanoid> https://termbin.com/kd7v8
[22:54:49] <constxd> ah well
[22:54:53] <constxd> it still has internal linkage
[22:55:02] <constxd> might as well be a macro
[22:55:29] <arkanoid> internal linkage?
[22:56:05] <constxd> yes that's what the 'static' keyword there means, and because it's in the header file, any TU that includes that header will have its own copy of the function
[22:56:26] <constxd> so if you include that header file you shouldn't be getting any linker errors regarding that symbol
[22:58:03] *** Quits: rgrinberg (~textual@187.223.58.12) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:59:38] *** Quits: leo__ (~leo@89-200-32-158.mobile.kpn.net) (Read error: Connection reset by peer)
[23:00:00] *** Joins: leo__ (~leo@89-200-32-158.mobile.kpn.net)
[23:00:50] <arkanoid> constxd: but I'm writing language bindings, and that symbol is defines in official API. How should am I expected to reach it? https://numpy.org/doc/stable/reference/c-api/array.html#c.PyArray_NDIM
[23:01:17] *** Quits: alch (~alch@to-18-80-221.service.infuturo.it) (Read error: Connection reset by peer)
[23:01:19] <arkanoid> sorry for the messy typos
[23:01:58] <constxd> what do you mean
[23:02:03] <constxd> language bindings for which language
[23:02:21] <constxd> you're writing C are you not?
[23:05:00] *** Joins: alch (~alch@mi-18-43-252.service.infuturo.it)
[23:05:11] <constxd> as you can see in the URL, that is the official C API. If you're not using C, you're not expected to reach it
[23:05:26] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[23:07:28] <arkanoid> no, I said I'm writing language bindings. Specifically for the Nim programming language. The language itself compiles to C but thanks, the internal linkage info is sufficient to proceed in problem solving this
[23:08:02] <constxd> arkanoid: so how are you wrapping other things
[23:09:39] *** candide sets mode: -o candide
[23:10:02] *** Quits: leo__ (~leo@89-200-32-158.mobile.kpn.net) (Read error: Connection reset by peer)
[23:12:14] <arkanoid> through the foreign function interface functionality of the language itself. Usually I just need to declare that a symbol exists with this struct/signature and then link it with gcc, but internal linkage is something I have yet to understand how to
[23:15:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:23:20] *** Quits: uskerine (~uskerine@0x3ec66374.ejb.customer.dk.telia.net) (Ping timeout: 265 seconds)
[23:29:04] *** Joins: Echoz (~chris@user/echoz)
[23:29:45] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:32:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:32:31] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:34:27] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[23:34:47] *** Joins: Iarfen (~quassel@181.43.57.66)
[23:35:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:35:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:35:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:35:42] *** Joins: wroathe (~wroathe@user/wroathe)
[23:36:09] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:37:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:37:11] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:37:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:37:54] *** Joins: jinsun__ (~quassel@user/jinsun)
[23:39:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:41:01] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[23:41:18] *** Joins: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[23:41:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[23:42:48] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:43:01] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[23:43:46] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[23:44:02] *** Joins: Viewday117 (~Viewday@user/viewday)
[23:44:20] *** Joins: meator (~meator@user/meator)
[23:45:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:45:26] *** Viewday117 is now known as Viewday11
[23:45:54] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[23:46:26] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[23:48:18] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[23:48:23] *** Quits: rcf (rcf@iceland.sdf.org) (Quit: WeeChat 3.2.1)
[23:48:34] *** Joins: rcf (rcf@iceland.sdf.org)
[23:55:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a076:5dc9:a674:c827)
[23:55:48] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:57:33] *** jinsun__ is now known as jinsun
[23:57:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:57:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:57:55] *** Joins: wroathe (~wroathe@user/wroathe)
[23:58:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:59:10] *** Joins: meator (~meator@user/meator)
