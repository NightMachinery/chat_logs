[00:03:10] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[00:08:43] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:21:21] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[00:22:55] *** Quits: Elw3 (~Elw3@dynamic-002-247-241-199.2.247.pool.telefonica.de) (Quit: Leaving)
[00:26:17] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 240 seconds)
[00:29:19] *** Joins: duuude (~user@user/duuude)
[00:30:16] <Tricycle> So, is there any case where lua_isnumber says yes, but lua_tonumberx fails?
[00:31:31] <Tricycle> Same question for lua_isinteger & lua_tointeger, and for lua_isstring & lua_tolstring .
[00:33:27] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[00:35:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:35:52] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[00:43:09] *** Quits: neoncortex (~xispirito@170-0-166-52.splinktelecom.com.br) (Quit: quit)
[00:47:27] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[00:49:06] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4db1:e3b:c0ba:c184) (Ping timeout: 245 seconds)
[00:49:46] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[00:55:07] *** Quits: glguy (x@libera/staff/glguy) (Quit: Quit)
[00:55:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:55:50] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:56:31] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[01:16:05] <daddy> %?lua_tolstring
[01:16:15] <daddy> %? lua_tolstring
[01:16:15] <yalb> daddy: http://lua.org/manual/5.3/manual.html#lua_tolstring
[01:16:45] <daddy> huh I thought ut had a link to source.
[01:16:47] <daddy> it.
[01:18:11] *** Joins: duuude (~user@user/duuude)
[01:20:29] *** Joins: glguy (x@libera/staff/glguy)
[01:20:59] *** Joins: jordan4ibanez (~jordan4ib@pool-96-233-142-50.prvdri.fios.verizon.net)
[01:26:04] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de)
[01:27:19] *** Quits: jordan4ibanez (~jordan4ib@pool-96-233-142-50.prvdri.fios.verizon.net) (Quit: Leaving)
[01:35:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:38:07] *** Quits: glguy (x@libera/staff/glguy) (Quit: Quit)
[01:41:08] *** Joins: glguy (x@libera/staff/glguy)
[01:41:16] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[01:41:33] <Tricycle> Basically I'm first checking if isstuff, then do tostuff, then I check taht tostuff worked.
[01:42:05] <Tricycle> As I was writing something to test all error message, I had trouble finding a way to trigger the one where tostuff fails.
[01:42:22] <Tricycle> then it occured to me maybe I was a bit redundant testing both
[01:42:43] <kakolainen[m]> tonumber can return nan and inf which are numbers but also fails an if statement like nil
[01:44:24] <kakolainen[m]> if type(0/0) == "number" and not tonumber(0/0) then print("fail") end
[01:44:25] *** Quits: glguy (x@libera/staff/glguy) (Read error: Connection reset by peer)
[01:44:45] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[01:45:39] <Tricycle> I'm talking about the C API, not pure lua
[01:46:09] <Tricycle> as for tonumber, I found out it might output nulls, but never errors
[01:46:10] *** Joins: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it)
[01:46:25] <Tricycle> well, never say never, but I don't remember every seeing it errors out
[01:46:27] *** Quits: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it) (Changing host)
[01:46:27] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[01:46:42] *** Joins: glguy (x@libera/staff/glguy)
[01:53:53] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8)
[01:55:40] <kakolainen[m]> there is an annoying error path when trying to convert nan and inf numbers to integers
[01:58:41] <kakolainen[m]> like math.tointeger(math.floor(0/0)) works perfectly for all other numbers but if you somehow get a nan you might have no idea what is happening from the error message
[02:03:34] <Tricycle> %  math.tointeger(math.floor(0/0))
[02:03:34] <yalb> Tricycle: sandbox:1: count; stack traceback:; [C]: in function 'error'; sandbox:1: in main chunk
[02:04:11] <Tricycle> at home it does just nil
[02:04:32] <Tricycle> which is a sensible answer to an attempt to convert nan to an integer, imo
[02:05:58] <Tricycle> Not sure what yalb runs to freak out like that.
[02:11:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:17:59] <kakolainen[m]> more sensible would be to throw an exception when trying to convert nan or inf to integer, even better throw an exception always when inf or nan is produced like yalb does
[02:18:45] <Tricycle> I disagree. Throwing exception all the time is not friendly.
[02:20:13] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:20:23] <Tricycle> Many times, naive Lua script that I wrote pushed through buggy start condition and worked flawlessy, thanks to Lua silently passing nil around as far as it possibly can instead of crashing.
[02:20:44] <technomancy> Tricycle: I feel the pain but mostly that means you need to liberally assert
[02:21:06] <Tricycle> pain what pain?
[02:21:28] <technomancy> I mean, that is also a problem I have a lot
[02:21:45] <Tricycle> If you want to burn & crash at the slightlest inconvenience then yes do add assert everywhere.
[02:22:23] <Tricycle> But when you just want stuff to work without having to think too hard about it, nil is much nicer.
[02:22:28] <technomancy> oh I misread what you said, haha
[02:22:32] <technomancy> anyway
[02:22:53] <technomancy> I appreciate that assert is there as an option for the programmer and Lua lets you make the decision for yourself rather than forcing errors, is what I mean
[02:22:54] <Tricycle> And considering Lua position amongst programming language, I prefer it that way
[02:25:35] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[02:27:45] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 256 seconds)
[02:28:41] <kakolainen[m]> imagine what happens when the tointeger returns nil and that gets silently passed around, I think it's pretty common antipattern already with not throwing error on inf ending up with checkNans functions everywhere kind of late exceptions when the hardware exception would have been easier and cheaper
[02:29:45] <kakolainen[m]> asserts in Lua are way too expensive
[02:30:10] <kakolainen[m]> asserts in C++ are free
[02:33:25] *** Quits: pizdets (~pizdets@183.182.111.49) (Ping timeout: 256 seconds)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.193)
[02:34:00] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[02:36:19] <Tricycle> I'd say if you want to crash asap, go find a stricter language than Lua
[02:36:27] <technomancy> well, I do have a macro system that compiles to lua if you want free asserts lol
[02:37:58] <Tricycle> I'm not much into bondage and discipline, when it comes to programming language.
[02:38:35] <Tricycle> I feel they should be here to make it as easy as possible to get something working, not being in the way at every step for my own good.
[02:39:35] <technomancy> a big part of learning lua is developing an intuitive grasp of what could fail and anticipating it with a reaction
[02:40:09] <Tricycle> a big part of the joy of using Lua is having things that ought to not work still work
[02:40:25] <Tricycle> like autoconversion between type, or returning nil instead of crashing
[02:40:51] <technomancy> a big part of lua is debugging things problems where the cause and the effect are very far apart
[02:40:57] <technomancy> it's a pain but that's just how the language works
[02:41:47] <Tricycle> Maybe for super big project lua's not the right choice.
[02:42:08] <Tricycle> And in small project, nothing can be far apart.
[02:42:28] <technomancy> IMO lua's first-class support for environments makes it uniquely suited for building bigger projects by composing smaller codebases
[02:42:35] <technomancy> no other language I know of supports it in the same way
[02:42:46] <Tricycle> Wasn't that removed in 5.2 ?
[02:42:58] <technomancy> no, the API just changed
[02:43:11] <technomancy> environments are still first class
[02:43:42] <kakolainen[m]> Tricycle: you are just plain wrong with the NaN thing, for example with your logic tbl[nan] should work but it doesn't work, there are exceptions
[02:43:50] <Tricycle> I know at least one project that stuck to 5.1 because setfenv got removed.
[02:44:45] <technomancy> well they are in luck because https://leafo.net/guides/setfenv-in-lua52-and-above.html
[02:45:39] <Tricycle> for me ({})[0/0] works and gives nil, as it should
[02:46:38] <kakolainen[m]> technomancy: I'm stuck in 5.1 too does that setfenv replacement actually work or is it just another half working replacement?
[02:47:14] <Tricycle> Interesting, it's a bit late for me to really dig into right now but thanks for the link.
[02:48:55] <kakolainen[m]> interesting ({})[0/0] works but local n=0/0;({})[n] doesnt work
[02:49:08] *** Joins: epony (epony@user/epony)
[02:49:57] <technomancy> kakolainen[m]: this is the other way around
[02:50:03] <technomancy> if you want 5.1 behavior on newer luas
[02:50:18] <Tricycle> Well, works for me!
[02:50:33] <Tricycle> Using some official Lua5.3 under windows & linux
[02:50:43] <Tricycle> yalb's broken for this and I don't know why
[02:52:40] <kakolainen[m]> I mean ({})[0/0]=1 doesn't work
[02:52:53] <Tricycle> Ah, trying to assign something there
[02:54:56] <Tricycle> Ok, maybe it's a valid complaint that according to the documentation, only the nil key should be non-assigneable.
[02:55:53] <Tricycle> Does Lua have a bugtracker? And is there an entry for that?
[02:56:15] <Tricycle> Lua 5.4.4: No bugs have been reported
[02:56:19] <Tricycle> lol, bold!
[02:56:43] <jaawerth> turns out there's a bug in the bug tracker
[02:56:53] <Tricycle> Ok, FAQ says "Send bug reports and suggestions to the mailing list."
[02:57:15] <kakolainen[m]> I have never found a bug from Lua
[02:57:24] <Tricycle> You just found one!
[02:57:51] * Tricycle goes reading http://lua-users.org/lists/lua-l/2018-01/msg00461.html
[03:00:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:01:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:02:59] *** Quits: netlynx (~jan@94-226-69-15.access.telenet.be) (Quit: Leaving)
[03:04:36] <kakolainen[m]> inf actually works fine as a table key
[03:08:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:12:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:12:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[03:30:59] *** Quits: magla (~gelignite@d5361383.access.ecotel.net) (Quit: Stay safe!)
[03:53:39] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab)
[03:53:39] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab) (Changing host)
[03:53:39] *** Joins: skapata (~Skapata@user/skapata)
[03:56:15] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 256 seconds)
[04:05:22] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[04:06:02] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[04:13:44] *** Joins: duuude (~user@user/duuude)
[04:17:05] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:ac33:9d52:7dc:f94b)
[04:25:50] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:29:07] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[04:42:23] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[04:48:17] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 240 seconds)
[04:49:43] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[04:50:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:52:22] <nmz> you know, except for that luasocket bug
[04:53:00] <nmz> lua is the bug
[04:53:08] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:58:37] *** Quits: ratchet_freak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[04:58:47] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[05:05:23] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:18:14] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de)
[05:30:22] *** Joins: Erutuon (~Erutuon@user/erutuon)
[05:32:54] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[05:39:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-580b-afe0-58c1-a2bf.res6.spectrum.com) (Read error: Connection reset by peer)
[05:43:36] <Tricycle> What Lua Socket bug?
[05:47:40] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[05:50:01] *** Joins: TakinOver (~quassel@193.27.13.170)
[05:54:10] <Tricycle> Nevermind, I'm gone.
[05:54:14] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr) (Quit: bye)
[05:56:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab)
[05:56:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab) (Changing host)
[05:56:06] *** Joins: skapata (~Skapata@user/skapata)
[07:02:21] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:06:04] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de)
[07:09:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[07:11:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:20:29] *** Quits: ubq323 (~ubq323@user/ubq323) (Ping timeout: 256 seconds)
[07:37:13] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[07:37:42] *** Quits: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be) (Ping timeout: 250 seconds)
[07:57:57] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:59:52] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de)
[08:09:37] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de) (Ping timeout: 240 seconds)
[08:11:01] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de)
[08:24:39] <duuude> any advice on web scraping with lua?
[08:42:27] <epony> use Perl
[08:43:27] <epony> (rationale: you need a text programming language with more modules in the early web, and Perl has about 250,000 of which a large portion is web related)
[08:45:18] <epony> your second choice is Shell and UTP (Unix Text Processing) with document parsing utilities (DOM / HTML / XML etc) and then Python
[08:45:51] <epony> finally you'd use some Lisp dialect, shortly before going absurd with JS
[08:46:18] <epony> and just then you'd reach for C-like language and their embeddable variants (and derivatives)
[08:46:28] <epony> (last resort)
[08:46:43] <epony> in short: you're confusing the domain of application of the language
[08:46:50] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[08:47:17] <epony> not that you can not do it, you can, but  you will waste more time and efforts and will not have reusable components and powerful tooling, so you will have to re-create it for yourself
[08:47:26] <epony> duuude, ^
[08:48:23] <Elw3> Why the fuck are you telling ppl in #lua not to use lua for a task?
[08:48:38] <epony> are you blind or what?
[08:55:57] <no-n> I'd say do it in perl too :)
[09:06:38] *** Joins: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[09:14:34] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:14:58] <duuude> but if we don't use lua, who uses lua?
[09:20:32] *** Joins: ano (~ano@user/ano)
[09:21:31] *** Joins: Erutuon (~Erutuon@user/erutuon)
[09:22:34] *** Joins: andreypopp_ (~andreypop@94.188.42.16)
[09:23:39] *** Quits: andreypopp (~andreypop@94.188.42.16) (Read error: Connection reset by peer)
[09:32:27] *** Joins: andreypopp (~andreypop@94.188.42.16)
[09:32:29] *** Quits: andreypopp_ (~andreypop@94.188.42.16) (Read error: Connection reset by peer)
[09:35:04] <duuude> python will continue its underperforming reign that way
[09:40:48] <nmz> Elw3: because gumbo is crap, and you should use the right tool for the job
[09:41:09] <no-n> HTTP::Tiny
[09:41:49] <nmz> duuude: my advice is, give up, or maybe, use pup and use io.popen, don't try any of the libraries, they're all broken
[09:42:05] <no-n> what is gumbo?
[09:42:09] <no-n> a lua lib?
[09:42:11] <nmz> broken or abandoned, that's the lua ecosystem
[09:42:13] <nmz> ya
[09:42:25] <no-n> yeah I only use lua for prototyping ;/
[09:42:27] <nmz> https://craigbarnes.gitlab.io/lua-gumbo/
[09:43:38] <no-n> it's a shame because it's a nice language
[09:43:46] <no-n> it's just not popular enough to have the library support
[09:43:57] <nmz> well, it just needs a coalition, or a group
[09:44:19] <nmz> I see a lot of development effort, everyone goes their own way and nobody builds together
[09:44:25] <no-n> true
[09:44:33] <no-n> everyone has their own luastdlib
[09:44:36] <nmz> therefore everyone just remakes everything again and again
[09:44:41] * nmz blushes
[09:44:59] <nmz> I'm trying to get my stdlib into lua-stdlib... but last commit was 3 years back
[09:45:11] <no-n> oof
[09:45:57] <nmz> I also built a bunch of math functions for when I was doing project euler problems
[09:46:05] <nmz> no math lib around
[09:46:18] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:46:51] <Elw3> Id rather do my own thing than having to deal with the shit others do.
[09:47:24] <no-n> this is why there is no lua cpan
[09:48:36] <nmz> there is, its called luarocks
[09:48:41] <nmz> but theres too many luarocks
[09:49:09] <nmz> who wants to go ad infinitum with local a1 require thatlib o2 require thatotherlib
[09:49:12] <no-n> how good are they though
[09:49:23] <nmz> they're pretty good
[09:49:27] <no-n> ok
[09:49:42] <no-n> oh so you're saying there's just too many solutions per problem
[09:50:01] <nmz> yes, everyone reimplements solutions to problems.
[09:50:05] <nmz> which one is optimal?
[09:50:10] <no-n> indeed
[09:50:28] <nmz> luapower solves it, but I don't like the requirements of building with luapower
[09:50:28] <Elw3> They all suck
[09:50:31] <no-n> I see what you're saying. if everyone worked together on the same solution it would be robust and obvious.
[09:50:45] <no-n> doesn't luapower require luajit
[09:50:55] <nmz> not necessarily
[09:51:07] <nmz> I hate the bazaar
[09:51:11] <nmz> pro cathedral
[09:52:30] <no-n> wdym
[09:53:16] <nmz> you know linux? that's a bazaar like development, something like factorlang, is a cathedral language
[09:53:25] <nmz> you download factor, you get everything
[09:55:40] <Elw3> That analogy gave me covid.
[09:55:44] <nmz> freebsd is also a cathedral language, everything self contained
[09:55:50] <nmz> freebsd is also a cathedral OS, everything self contained
[09:55:56] <nmz> Elw3: blame eric s raymond for it
[09:56:09] <nmz> Elw3: ignoring you now
[09:56:22] <Elw3> lolwut?
[10:01:57] <furq> there's a lot of things to blame esr for
[10:02:53] <nmz> wesnoth as well
[10:02:57] <nmz> terrible game
[10:18:17] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[10:22:48] *** Joins: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788)
[10:36:33] *** Quits: fcr (~fran@r167-60-6-95.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[10:42:51] *** Joins: fcr (~fran@r167-60-4-242.dialup.adsl.anteldata.net.uy)
[11:03:06] <daurn> duuude: lua-http + lua-gumbo
[11:04:46] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-059.2.247.pool.telefonica.de) (Quit: Leaving)
[11:14:15] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:25:47] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:25:42] *** Joins: netlynx (~jan@94-226-69-15.access.telenet.be)
[13:03:41] *** Quits: Habbie (peter@lorentz.7bits.nl) (Ping timeout: 245 seconds)
[13:04:06] *** Joins: Habbie (peter@lorentz.7bits.nl)
[13:14:10] *** Joins: cody271[m] (~cody271ma@2001:470:69fc:105::1:908d)
[13:21:36] <tumn> kakolainen[m]: this problem doesn't exist in 5.1 (the last good version, which, in accordance with the above discussions, also has support for environments)
[13:21:43] <tumn> lua was never meant to have integers
[13:22:56] <tumn> there's a pretty good case for doubles, they are able to represent any integer value you could ever want, and complaints about floating point errors are outright myths
[13:22:58] <furq> 5.2 has environments and no integers
[13:23:33] <tumn> 5.2 doesn't have getfenv or setfenv
[13:23:51] <furq> it still has environments though
[13:24:07] <furq> and honestly idk what you'd want to use fenv for that isn't covered by what you can do in 5.2
[13:24:14] <tumn> how would you set an environment for a function in 5.2?
[13:24:45] <furq> _ENV
[13:25:35] <tumn> I need a more specific example, I wasn't aware _ENV could be used that way
[13:25:45] <tumn> google turns up no results
[13:26:44] <tumn> basically what's the equivalent of setfenv(func, env) in 5.2?
[13:26:52] <furq> there isn't a direct equivalent
[13:27:03] <furq> otherwise they wouldn't have bothered getting rid of it
[13:27:40] <tumn> as far as I know all they changed was the ability to set a function's environment from outside the function
[13:27:51] <furq> more or less
[13:28:06] <furq> functions can still have their own _ENV though
[13:28:13] <furq> and you can modify _ENV from inside the function
[13:28:24] <tumn> that doesn't satisfy
[13:28:36] <tumn> they really made the feature more complicated while also reducing what it can do
[13:28:45] <tumn> 5.1 was the last great version
[13:28:47] <furq> is that a practical concern for you
[13:29:26] <tumn> it's a concern with language design but also I can think of lots of scenarios where setting a function's environment from outside it makes for neater and more practical code
[13:29:43] <furq> such as
[13:30:32] <tumn> let's say you have an application where you want the user to be able to execute code, but you want it to be sandboxed, and you must load and execute their code from within a lua script
[13:30:46] <furq> you can do that with the last argument to load()
[13:30:59] <tumn> you can in 5.1 too
[13:31:03] <tumn> but you can also use setfenv
[13:31:13] <tumn> I fail to see why removing that feature is an improvement
[13:31:13] <furq> no in 5.1 you have to setfenv it afterwards
[13:31:29] <furq> they didn't remove that feature
[13:31:41] <furq> that's the thing almost everyone used setfenv for so they just let you set the env directly from load() instead
[13:31:55] <furq> the other thing it was commonly used for was replaced with lua_setuservalue
[13:32:43] <furq> i don't really have an opinion on whether _ENV is better or worse than setfenv but i've never seen a non-arcane use case that you can't do in 5.2
[13:33:00] <furq> and 5.2 has a bunch of qol improvements
[13:33:40] <furq> i'm never going back to a world without goto continue
[13:33:46] <tumn> there is literally no case to make for the change, not to mention the change is obscure and complicating for no reason (modifying an upvalue called _ENV is definitely more obscure than calling a function)
[13:33:54] <tumn> I have yet to hear a good argument for its removal
[13:34:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[13:39:38] <tumn> I will say one great thing about 5.2 is the bit library, but it can be backported (like in luajit), goto is really messy for a procedural/functional language and encourages spaghetti code, they should have just added a continue statement
[13:39:48] <furq> i entirely agree with the last bit
[13:39:56] <furq> but it's better than not having continue at all
[13:40:25] <furq> just the last clause i don't have an issue with goto per se
[13:46:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc07:dd00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[13:48:50] *** Joins: walterwhip (~www@user/walterwhip)
[13:56:41] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[14:06:10] *** Joins: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be)
[14:12:24] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:17:20] *** Joins: dvx (~dvx@5.181.92.64)
[14:26:45] *** Quits: Habbie (peter@lorentz.7bits.nl) (Ping timeout: 250 seconds)
[14:27:53] *** Joins: Habbie (peter@lorentz.7bits.nl)
[14:38:35] <no-n> goto is fine imo
[14:38:45] <no-n> it's sometimes the best choice
[14:44:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:06:54] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:43:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[15:44:33] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:50:37] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[15:51:04] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[15:52:52] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:54:37] *** Quits: Habbie (peter@lorentz.7bits.nl) (Ping timeout: 240 seconds)
[15:58:36] *** Joins: Habbie (peter@lorentz.7bits.nl)
[16:13:23] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 256 seconds)
[16:41:32] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[16:59:31] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7)
[16:59:31] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7) (Changing host)
[16:59:31] *** Joins: skapata (~Skapata@user/skapata)
[17:23:51] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-247.2.247.pool.telefonica.de)
[17:53:09] *** Joins: Guest456725 (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[17:53:09] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr) (Killed (NickServ (GHOST command used by Guest456725)))
[17:53:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:54:05] *** Quits: Guest456725 (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr) (Client Quit)
[17:59:56] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e493-34a2-5f11-9e6f.res6.spectrum.com)
[18:14:36] *** Joins: orthoplex64 (~crm@70.120.0.94)
[18:15:36] <nmz> http://lua-users.org/lists/lua-l/2010-01/msg00357.html
[18:19:39] *** Quits: TakinOver (~quassel@193.27.13.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:56:35] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:04:03] *** Joins: Guest54 (~Guest54@2603-8081-2707-4597-1d1d-0925-d812-0d53.res6.spectrum.com)
[19:09:29] <nmz> is there a way to set a value to inf?
[19:09:38] <nmz> x = inf doesn't work
[19:10:22] <nmz> i'll just divide by 0
[19:15:57] <daurn> x=1/0
[19:16:11] <daurn> or x=math.huge
[19:30:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[19:46:27] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:48:13] <nmz> tahnks daurn 
[20:05:15] <q66> https://www.youtube.com/watch?v=h10pd7vDytg
[20:05:18] <q66> looking good furq
[20:05:51] <q66> also check out the last 30 secs
[20:15:49] *** Quits: glguy (x@libera/staff/glguy) (Ping timeout: 622 seconds)
[20:34:59] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-247.2.247.pool.telefonica.de) (Quit: Leaving)
[20:52:25] <leonardus> What text editor do you all use when writing Lua?
[20:52:29] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[21:00:28] <nmz> all of them
[21:00:58] <nmz> I've been trying out lite and it doesn't recognize [=[
[21:01:08] <nmz> textadept does but its a PITA to configure
[21:01:22] <nmz> leonardus: vis
[21:01:55] <nmz> but textadept is multiplatform and lean, so I use it on windows
[21:02:40] <leonardus> I've also been jumping around. Vscode, KATE, SCiTE and I also tried Textadept
[21:03:05] <leonardus> I also tried Lite at one point but there was something about it that made it a deal breaker for me but I don't remember what that was.
[21:26:51] <nmz> vis is probably one of the best editors out there. especially when you take structural regex into account
[21:27:22] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[21:28:39] <nmz> give that one a try
[21:33:02] <q66> i've been using jedit for the past decade
[21:33:22] <q66> being written in java sucks but it's otherwise a legit great editor
[22:10:57] *** Quits: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Ping timeout: 256 seconds)
[22:13:04] *** Joins: ubq323 (~ubq323@m-a07dtjhflz4j.it.manchester.ac.uk)
[22:13:04] *** Quits: ubq323 (~ubq323@m-a07dtjhflz4j.it.manchester.ac.uk) (Changing host)
[22:13:04] *** Joins: ubq323 (~ubq323@user/ubq323)
[22:23:27] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:37:01] *** Quits: fcr (~fran@r167-60-4-242.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[22:45:01] *** Joins: fcr (~fran@r167-60-44-223.dialup.adsl.anteldata.net.uy)
[22:52:12] <kakolainen[m]> "complaints about floating point errors are outright myths - tumn" so clueless, there is a whole computer science field about floating point errors called numerics, another field is discrete mathematics doing everything with integers, a competent computer scientist knows when to use numerical methods and when to use integers
[22:52:44] <kakolainen[m]> for example if(a+b+c ~= a+c+b)then print("floats rarely gets here, with integers you never get here") end
[22:57:58] <kakolainen[m]> also nans have all the same problems in 5.1
[23:08:17] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:11:37] *** Joins: reset (~reset@user/reset)
[23:19:08] *** Parts: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788) (WeeChat 3.4)
[23:32:37] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:35:17] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[23:58:03] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:58:32] *** Quits: sparked-- (~sparked--@ack.zs-zero.net) (Ping timeout: 240 seconds)
[23:59:12] *** Joins: sparked-- (~sparked--@ack.zs-zero.net)
