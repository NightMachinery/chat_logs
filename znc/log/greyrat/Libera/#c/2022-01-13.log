[00:01:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[00:03:37] *** Joins: Guest35 (~Guest35@181.194.51.163)
[00:03:53] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[00:05:18] *** cacheyou- is now known as cacheyourdreams
[00:05:23] *** Quits: Guest35 (~Guest35@181.194.51.163) (Client Quit)
[00:07:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:08:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:08:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:08:03] *** Joins: wroathe (~wroathe@user/wroathe)
[00:08:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[00:09:40] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[00:11:56] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:12:35] *** Quits: cosimone` (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 252 seconds)
[00:13:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:14:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:15:21] *** Quits: inomoz (~inomoz@176.59.106.192) (Remote host closed the connection)
[00:15:40] *** Joins: GG (~Joseph@user/joeroot)
[00:16:08] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:16:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[00:16:33] *** Quits: GG (~Joseph@user/joeroot) (Remote host closed the connection)
[00:17:02] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[00:17:05] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 250 seconds)
[00:17:26] *** Joins: orthoplex64 (~crm@70.120.0.94)
[00:19:52] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:20:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:21:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:21:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:21:16] *** Joins: wroathe (~wroathe@user/wroathe)
[00:21:56] *** Joins: highrate (~presonic@user/highrate)
[00:21:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[00:23:02] *** Quits: mahmutov (~mahmutov@37.155.68.220) (Ping timeout: 256 seconds)
[00:23:49] *** Joins: Atque (~Atque@user/atque)
[00:25:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[00:26:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:27:00] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[00:28:06] *** Joins: seninha (~seninha@user/seninha)
[00:29:37] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[00:33:11] *** Joins: Betal (~Betal@user/betal)
[00:33:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:33:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:33:52] *** Joins: wroathe (~wroathe@user/wroathe)
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:36:53] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Remote host closed the connection)
[00:39:16] *** Quits: cvemys (~cvemys@user/cvemys) (Quit: Client closed)
[00:41:44] *** Ekho- is now known as Ekho
[00:47:15] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[00:47:28] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[00:47:43] *** Joins: candide (~pbot3@about/c/bot/candide)
[00:48:25] *** Quits: Akuli (~Akuli@213.216.208.145) (Quit: Akuli)
[00:48:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:49:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[00:50:36] *** Joins: xqt (~xqt@user/xqt)
[00:51:45] *** Joins: hanzo (uid532183@user/hanzo)
[00:52:11] *** Quits: marcj (~marc@199.167.158.211) (Ping timeout: 250 seconds)
[00:52:51] *** Joins: marcj (~marc@199.167.158.211)
[00:52:55] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[00:54:26] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:55:02] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[00:56:08] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[00:56:23] *** Joins: candide (~pbot3@about/c/bot/candide)
[00:57:57] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[00:58:57] *** Quits: m0shbear (~nope@205.185.119.231) (Ping timeout: 240 seconds)
[00:59:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[00:59:11] <constxd_> kings
[00:59:49] <zenstoic> I was banned from #java, understandably
[00:59:52] <zenstoic> So
[01:00:32] <twkm> hopefully you won't discuss java here.
[01:00:36] <Franciman> lool
[01:00:41] <zenstoic> Do YOU support a carbon tax on languages/vms/interpreters like java, csharp, ruby, python
[01:00:47] <zenstoic> Cause
[01:00:59] <zenstoic> They spend much more cpu wattage
[01:01:09] <Franciman> zenstoic: carbon tax on wattage maybe
[01:01:11] <twkm> so can't even fake that you want to discuss c.
[01:01:23] <Franciman> lool
[01:01:33] <zenstoic> Asshole nerds everywhere
[01:01:40] <zenstoic> Incels
[01:01:43] <NRK[m]> zenstoic: sounds reasonable
[01:01:50] <NRK[m]> although i think webdevs are going to get hit most
[01:01:51] <zenstoic> More jebite se
[01:01:53] <NRK[m]> rather than java
[01:01:56] *** Parts: zenstoic (uid461840@id-461840.hampstead.irccloud.com) ()
[01:02:03] <Franciman> vscode?
[01:02:03] <twkm> hahahaha.
[01:02:33] <Rounin> If you're discussing a tax on object-oriented languages, where do I sign up
[01:02:53] <Franciman> lol Rounin
[01:02:53] <constxd_> carbon taxes are universally retarded
[01:02:58] <Rounin> I suggest an even higher one if dependency injection or Docker or Kubernetes is involved
[01:03:32] <constxd_> ok kings
[01:03:44] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 252 seconds)
[01:03:54] <twkm> ahh, wonderful a political row appears.
[01:04:15] <constxd_> let's say you want to use dlopen() to load a dynamic library from a program that wasn't compiled against that library
[01:04:25] <constxd_> the library in this instance is X11
[01:04:45] <Rounin> twkm: For a moment, I assumed you were talking about object orientation, since that's more controversial than climate change
[01:04:57] <constxd_> how do you deal with the fact that the library makes heavy use of macros, and you of course cannot dlsym() and call a macro
[01:05:06] <NRK[m]> o_o
[01:05:24] <Rounin> constxd_: The macros have all been expanded and compiled in long before that
[01:05:29] <constxd_> obviously
[01:05:34] <constxd_> that's my question
[01:05:36] <Franciman> so you include the header
[01:05:39] <oldlaptop> If you need a library's preprocessor macros at compile time, you need its headers at compile time.
[01:05:57] <constxd_> yes that's not an option
[01:06:12] <oldlaptop> Yes, it's possible for this not to be in harmony with whatever turd you happened to dlopen(). Such is the peril of dlopen().
[01:06:16] <constxd_> for example if you want to use X11 from python, how do you handle this?
[01:06:17] <twkm> you cannot, per se.  you have to have accounted for that yourself.
[01:06:54] <Franciman> constxd_: you include the header in C and write wrappers for python
[01:06:56] <Franciman> and rip hard
[01:07:04] <oldlaptop> That would be a question for a Python channel. Generally there needs to exist a Python library whose job is to talk to the C library.
[01:07:25] <constxd_> so python doesn't interface directly with Xlib
[01:07:30] <constxd_> you need an intermediate C library?
[01:07:38] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[01:07:41] <Franciman> #python has better answers, constxd_
[01:07:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:08:00] <constxd_> im not using python it was just an example
[01:08:09] <Franciman> eh it depends on some details
[01:08:13] <Franciman> that's what i meant
[01:08:20] <Franciman> some languages have FFI to C libraries
[01:08:24] <Franciman> and take care of your problem
[01:08:31] <constxd_> how
[01:08:36] <constxd_> that's what i'm trying to do
[01:08:40] <Franciman> having automatic translators
[01:08:41] <pony> how what?
[01:08:46] <Franciman> but they also need the headers
[01:08:50] <Franciman> otherwise the macros are vanished
[01:09:01] <twkm> generally you arrange for non-macro things, enumerating when necessary.
[01:09:07] <Franciman> headers usually contain macros and declarations
[01:09:21] <Franciman> so the program reads macros, declarations and creates binding manually
[01:09:34] <Franciman> err automatically*
[01:09:34] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[01:09:36] *** Quits: Mentor (~Ionut@92.86.217.127) (Quit: Leaving)
[01:09:43] <constxd_> that sounds quite involved
[01:09:46] *** Joins: malloy (~jimery@113.116.52.211)
[01:09:51] <Franciman> using dlopen requires you to know what are the names of the function you call
[01:09:54] <constxd_> translating C preprocessor macros into python functiions
[01:10:00] <twkm> effectively, a compiler.
[01:10:17] <Franciman> if you know that because you are a human
[01:10:25] <Franciman> you can also know the values of the macros and make enums out of them
[01:10:43] <twkm> or a transpiler if you prefer that term, producing language X stuff given language Y input.
[01:10:44] <constxd_> i mean function-like macros
[01:10:57] <pony> that's another thing I prefer about C. I can just talk to the libraries directly instead of going through some shitty binding.
[01:10:59] <Franciman> haard
[01:11:02] <constxd_> DefaultScreen in X11 for example
[01:11:20] <Franciman> that's hard lol
[01:11:28] <Franciman> you should define a wrapper C function and call it from Python
[01:11:28] <constxd_> this is cringe man
[01:11:32] <Franciman> it's not directly callable
[01:11:34] <Franciman> i think
[01:11:40] <Franciman> but AGAIN, it is very detail dependent
[01:12:02] <Franciman> one thing is for sure, preprocessor macros do not exist in object code
[01:12:04] <Franciman> and libraries
[01:12:31] <pony> it's a total goat f
[01:12:31] <twkm> they can.  run-time compilation of c generally does not.
[01:12:46] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[01:12:51] <Franciman> twkm: what can they?
[01:12:54] <Franciman> exist in code?
[01:12:54] <constxd_> why do authors of libraries such as X11 not take care to provice a nice API with only opaque types and no macros
[01:12:56] <Franciman> really?
[01:13:05] <constxd_> this is just cringe
[01:13:07] <twkm> have text as an object.
[01:13:12] <Franciman> ah
[01:13:14] <Franciman> sure
[01:13:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[01:13:31] <twkm> but it means nothing until you hand it to a compiler.
[01:13:58] *** vinleod is now known as vdamewood
[01:15:05] <twkm> self-altering and run-time compilation are things that some do, generally for a very limited dsl not for a larger language, not even one as small as c.
[01:15:31] <NRK[m]> constxd_: ez dab on non C users. sounds like a win to me :)
[01:16:41] <constxd_> i wanna write a tiling wm in Ty but at this rate it looks like more of a C project. cringe.
[01:18:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:19:22] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:20:21] <NRK[m]> ahh yes, the ultimate ricer goal: writing your own tiling wm.
[01:21:12] <twkm> at least it isn't an irc bot.
[01:22:34] *** Quits: alch (~alch@151.38.119.98) (Read error: Connection reset by peer)
[01:22:41] <constxd_> maybe i'll do an irc bot instead since it doesn't require interoperating with arcane C libraries
[01:23:06] *** Joins: geezabiscuit (~Geezabisc@user/geezabiscuit)
[01:23:43] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Read error: Connection reset by peer)
[01:24:07] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[01:24:52] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[01:26:07] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:26:49] *** Joins: alch (~alch@151.34.107.30)
[01:27:36] <sham1> OpenSSL can be pretty arcane
[01:27:44] <sham1> Especially if you want asynchronous, which you most likely do
[01:32:03] *** Joins: tforever (~Terabyte@81.214.166.177)
[01:32:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[01:32:53] <NRK[m]> can't escape the C(hads)
[01:35:28] <pony> the chad C vs. the virgin Rust
[01:36:22] <tforever> lvl 1 crook vs lvl 99 bo$$
[01:37:16] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[01:38:16] *** Joins: sepasitor (~sergey@188.162.166.187)
[01:39:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:39:05] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:40:19] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:40:41] *** Joins: immibis (~hexchat@62.156.144.218)
[01:42:26] *** Joins: rgrinberg (~textual@187.223.209.255)
[01:42:47] *** Parts: sepasitor (~sergey@188.162.166.187) ()
[01:43:59] *** garp is now known as pragma-
[01:48:05] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:49:25] *** satanist|hell is now known as satanist
[01:49:43] <sham1> s/crook/rook
[01:50:51] *** Quits: emyrs (~emyrs@user/emyrs) (Remote host closed the connection)
[01:52:37] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:52:47] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[01:56:57] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[01:58:03] *** Joins: m0shbear (~nope@205.185.119.231)
[01:58:50] *** Quits: tforever (~Terabyte@81.214.166.177) (Quit: Segmentation fault (core dumped))
[02:05:34] *** Joins: xqt (~xqt@user/xqt)
[02:06:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:07:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[02:07:35] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu)
[02:09:00] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[02:09:05] *** Quits: magla (~gelignite@55d48ba2.access.ecotel.net) (Quit: Stay safe!)
[02:09:15] *** Joins: anddam (~anddam@user/anddam)
[02:09:29] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[02:10:00] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[02:10:11] *** Joins: nuxil (~nuxil@141.195.51.213)
[02:10:26] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:14:52] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[02:15:01] *** Joins: vt (~vt@osa.vbc.su)
[02:17:14] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:20:20] *** Joins: kts_ (~kts@103.73.237.59)
[02:20:20] *** Quits: kts (~kts@103.73.237.187) (Ping timeout: 256 seconds)
[02:20:21] *** Quits: mikoto-chan (~mikoto-ch@194.157.16.89) (Quit: mikoto-chan)
[02:20:29] *** Joins: mikoto-chan (~mikoto-ch@194.157.16.89)
[02:21:47] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:23:38] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:23:53] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:24:11] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[02:24:36] *** Joins: Cyp (~cyp@213.237.85.9)
[02:29:09] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:32:49] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:33:00] *** Quits: pizdets (~pizdets@183.182.111.72) (Ping timeout: 250 seconds)
[02:33:19] *** Joins: stonkey (~stonkey@user/stonkey)
[02:33:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:34:03] *** Joins: pizdets (~pizdets@183.182.114.39)
[02:35:26] *** Joins: Macuser (~Macuser@166.sub-174-206-113.myvzw.com)
[02:35:33] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:35:42] *** Joins: malina (~malina@user/malina)
[02:41:26] *** Joins: xqt (~xqt@user/xqt)
[02:41:36] *** Joins: rgrinberg (~textual@187.223.209.255)
[02:41:43] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[02:42:00] *** Quits: kts_ (~kts@103.73.237.59) (Quit: Konversation terminated!)
[02:43:35] *** Joins: johnjaye (~pi@154.6.152.74)
[02:45:32] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[02:47:47] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:39] *** Joins: bebyx (~Thunderbi@user/bebyx)
[02:51:50] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[02:52:36] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.4)
[02:55:03] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[02:55:21] *** Joins: liba (~liba@user/liba)
[02:56:27] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[02:57:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:57:33] *** Quits: Macuser (~Macuser@166.sub-174-206-113.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[03:02:00] *** Quits: mikoto-chan (~mikoto-ch@194.157.16.89) (Ping timeout: 250 seconds)
[03:02:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[03:02:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Client Quit)
[03:02:04] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[03:05:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:06:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[03:07:13] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 256 seconds)
[03:07:21] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[03:07:55] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:00] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:09:00] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[03:09:09] *** Joins: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com)
[03:09:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:12:03] *** Joins: Torr (~Torr@user/torr)
[03:14:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:14:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:14:55] *** Joins: wroathe (~wroathe@user/wroathe)
[03:15:41] *** Joins: malina (~malina@user/malina)
[03:15:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:19:40] *** Joins: Macuser (~Macuser@100.sub-174-206-99.myvzw.com)
[03:19:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[03:19:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:23:18] *** Parts: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com) ()
[03:24:36] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:24:46] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:25:24] *** Joins: apestoso (~apestoso@38.25.135.157)
[03:25:47] *** Joins: gnoo (gnoo@user/gnoo)
[03:29:51] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:32:20] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 250 seconds)
[03:33:57] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[03:37:09] *** Joins: xqt (~xqt@user/xqt)
[03:37:55] <Satin> is there a way to make an array of strings, as a member within a struct and then access that member?
[03:38:05] <Satin> I'm not finding many resources while googling for it.
[03:38:36] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[03:39:31] *** Quits: chomwitt (~chomwitt@2a02:587:dc11:fb00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[03:39:44] <fizzie> Sure. But you'll have to decide first whether you want a fixed-size array of fixed-size arrays of characters (that may store strings), or a fixed-size array of pointers (that may point at strings), or a pointer into a potentially variable-size array of pointers (that may, again, point at strings).
[03:40:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:40:55] <Satin> The former.
[03:41:01] <constxd_> or a FAM of pointers
[03:41:18] <constxd_> the former is easy
[03:41:38] <fizzie> There were three possibilities there, so I'm not quite sure which one was the "former".
[03:41:46] <Satin> oh, 1st
[03:41:47] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[03:41:57] *** Joins: nitrix (~nitrix@user/nitrix)
[03:42:39] <fizzie> Right. Well, that'd be just a `char strings[10][80];` member for holding 10 strings of up to 79 bytes in length (not counting the required '\0').
[03:43:26] <Satin> I got something like that going in my struct definition. I'm not sure how to access it though within a for loop in another function or main().
[03:43:59] <fizzie> ,cc struct s { char strings[3][10]; }; struct s x = { .strings = { "foo", "bar", "baz" } }; for (int i = 0; i < 3; i++) puts(x.strings[i]);
[03:44:02] <candide> fizzie: foo bar baz
[03:45:29] *** Quits: Macuser (~Macuser@100.sub-174-206-99.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:45:54] <Satin> Oh. Will give that a try, thank you.
[03:49:33] *** Joins: kish` (~aqua@user/aqua)
[03:50:42] *** Quits: Torr (~Torr@user/torr) ()
[03:51:03] *** Joins: Torr (~Torr@user/torr)
[03:51:10] *** Joins: ferdna (~ferdna@user/ferdna)
[03:52:39] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[03:53:24] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:53:58] *** Joins: nitrix (~nitrix@user/nitrix)
[03:54:07] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:57:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:57:48] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[03:58:06] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:58:16] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[03:58:47] *** nipnop is now known as snappy
[03:58:54] *** Joins: Wulf (~Wulf@user/wulf)
[04:01:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:02:40] *** Parts: apestoso (~apestoso@38.25.135.157) ()
[04:03:03] *** blinky43 is now known as blinky42
[04:03:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:03:52] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:03:52] *** Joins: blinky42 (~quassel@user/blinky42)
[04:04:59] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:05:17] *** Joins: Celelibi (celelibi@user/celelibi)
[04:05:47] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[04:07:45] *** Joins: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534)
[04:12:38] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Quit: Leaving.)
[04:13:37] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[04:18:02] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[04:18:57] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[04:18:57] *** Joins: System_Error (~SystemErr@user/systemerror)
[04:19:46] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[04:22:00] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:24:11] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[04:24:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:24:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:24:24] *** Joins: wroathe (~wroathe@user/wroathe)
[04:25:07] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[04:29:12] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[04:30:07] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[04:31:32] *** Joins: semeion (~semeion@user/semeion)
[04:38:01] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[04:38:17] *** Joins: candide (~pbot3@about/c/bot/candide)
[04:39:50] *** Quits: BCMM (~BCMM@user/bcmm) (Quit: Konversation terminated!)
[04:42:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:46:23] *** Joins: arinov (~arinov@213.194.126.155)
[04:48:09] *** Joins: frost (~frost@user/frost)
[04:48:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[04:50:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[04:51:25] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[04:52:07] *** Joins: xqt (~xqt@user/xqt)
[04:56:44] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[04:59:07] *** Joins: pert (~pert@fsf/member/pert)
[05:00:35] <pert> Is there a way to detect, at compile-time or otherwise, whether a structure member is a flexible array member? It's my understanding that applying sizeof() to a FAM itself is undefined, although if it's a constraint violation one could check for an error from the compiler
[05:00:54] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::6)
[05:01:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:01:08] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:04:25] *** Joins: r6ix (~r6ix@2607:fea8:5e0:82a0:42:1918:7b45:f3f3)
[05:04:37] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[05:04:50] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.5-dev)
[05:05:11] *** Quits: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534) (Remote host closed the connection)
[05:08:42] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[05:10:31] <pert> It's also my understanding that one can't check if sizeof(struct foo) - offsetof(struct foo, last_member) is zero because the structure may include legitimate padding
[05:10:49] <fizzie> There's an expression -- `offsetof(struct foo, fam) >= sizeof (struct foo)` -- which, if true, I suspect guarantees the field `fam` is a FAM. But the converse is *not* true: even if that expression is false, the field might be a FAM.
[05:11:19] *** Quits: nicode (~nic@2607:f2c0:9463:7d00:73e7:4f8b:71a7:581f) (Ping timeout: 268 seconds)
[05:11:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:12:00] *** Joins: donutfarian (~donutfari@69.250.8.192)
[05:13:48] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[05:15:04] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:15:46] <fizzie> ,cc struct s { int x; char c; char fam[]; }; printf("sizeof = %zu, offsetof c = %zu, offsetof fam = %zu", sizeof (struct s), offsetof(struct s, c), offsetof(struct s, fam)); // given these numbers, I don't think there's any sizeof/offsetof way of differentiating between c and fam
[05:15:49] <candide> fizzie: sizeof = 8, offsetof c = 4, offsetof fam = 5
[05:17:03] *** Joins: cube1 (~cube1@89-160-183-39.du.xdsl.is)
[05:17:06] *** Joins: malloy (~jimery@113.116.52.211)
[05:17:27] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:20:07] <fizzie> Applying `sizeof` to the FAM should be a constraint violation, though, as you say. The FAM has "incomplete array type" (C11 6.7.2.1p18), and "`sizeof` -- shall not be applied to an expression that has -- an incomplete type" (6.5.3.4p1, a constraint). So a diagnostic is required. If that's sufficient.
[05:24:21] *** Quits: alch (~alch@151.34.107.30) (Ping timeout: 256 seconds)
[05:25:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:26:01] *** Joins: alch (~alch@151.36.113.170)
[05:27:54] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[05:29:49] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[05:30:20] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[05:30:50] *** Joins: semeion (~semeion@user/semeion)
[05:31:43] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[05:32:24] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:34:25] *** Joins: malloy (~jimery@113.116.52.211)
[05:36:40] <cube1> Ooof. I have A LOT of "return (struct T) {...}" that I need to have properly zero initialized so I can memcmp. That's a large syntactic change to get the padding initialized.
[05:40:01] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[05:40:33] <cube1> Q: Can I then do "struc.field = (struct FieldType) {....}" or could that write uninitialized data into the padding?
[05:41:07] <cube1> Or is padding only uninitialized due to the lack of a write
[05:41:13] <cube1> for it
[05:41:14] <fizzie> From memory, `struc.field = ...` may change any padding of `struc` to any values it may like.
[05:42:14] <fizzie> C11 6.2.6.1p6: "When a value is stored in an object of structure or union type, *including in a member object*, the bytes of the object representation that correspond to any padding bytes take unspecified values."
[05:42:29] <cube1> Okay wow. I'll be careful!
[05:42:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::6) (Ping timeout: 240 seconds)
[05:44:00] *** Quits: kit_ten (~u0_a391@2600:380:a47c:9f07:241:3339:c633:aeab) (Ping timeout: 268 seconds)
[05:44:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:47:09] *** tom_bombadil is now known as kurahaupo__
[05:48:00] *** Joins: rgrinberg (~textual@187.223.209.255)
[05:48:14] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[05:53:53] *** Quits: f__ (~f@2607:f598:bbda:20:4fe8:26c5:979b:b609) (Remote host closed the connection)
[05:54:10] *** Joins: f__ (~f@2607:f598:bbda:20:ecf2:181b:3e9c:546b)
[05:56:14] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[05:57:22] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[05:57:22] *** Quits: f__ (~f@2607:f598:bbda:20:ecf2:181b:3e9c:546b) (Remote host closed the connection)
[05:58:48] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 250 seconds)
[06:01:54] *** Joins: moog_ (~moog@107.77.244.71)
[06:02:52] *** Joins: boB_K7IQ (~boB_K7IQ@108.60.52.242)
[06:04:01] *** Quits: moog (~moog@107.77.244.71) (Ping timeout: 256 seconds)
[06:04:19] *** Joins: xqt (~xqt@user/xqt)
[06:08:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:09:07] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[06:10:58] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[06:11:59] *** Joins: mahmutov (~mahmutov@5.176.54.223)
[06:12:47] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[06:13:00] *** Joins: malloy (~jimery@113.116.52.211)
[06:14:16] *** Quits: puke (~puke@user/puke) (Quit: puke)
[06:15:44] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[06:17:18] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[06:17:55] *** Joins: System_Error (~SystemErr@user/systemerror)
[06:19:48] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[06:20:02] *** Joins: puke (~puke@user/puke)
[06:20:21] *** Quits: cube1 (~cube1@89-160-183-39.du.xdsl.is) (Quit: Leaving)
[06:21:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:21:49] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[06:28:48] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:29:10] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[06:30:16] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[06:31:20] *** Joins: malloy (~jimery@113.116.52.211)
[06:31:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::6)
[06:31:57] *** Quits: donutfarian (~donutfari@69.250.8.192) (Quit: Leaving)
[06:32:04] *** Quits: puke (~puke@user/puke) (Read error: Connection reset by peer)
[06:32:37] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[06:33:11] *** Joins: puke (~puke@user/puke)
[06:34:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:34:50] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[06:37:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[06:39:42] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:39:42] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[06:41:07] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[06:41:30] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:46:04] *** Joins: xqt (~xqt@user/xqt)
[06:47:14] *** Joins: nicode (~nic@2607:f2c0:946d:3800:72c3:6283:a9c2:9e2f)
[06:47:35] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[06:48:21] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[06:48:36] *** Joins: candide (~pbot3@about/c/bot/candide)
[06:50:04] *** Joins: rgrinberg (~textual@187.223.209.255)
[06:50:38] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[06:56:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:58:00] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[06:58:12] *** Joins: stblaha (~stblaha@user/stblaha)
[06:58:16] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:567f:a71e:f346:c5f0) (Ping timeout: 245 seconds)
[07:00:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[07:02:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:03:08] <pony> which warning flags should I use? -Wall -Wextra -pedantic?
[07:03:41] *** Joins: raym (~raym@user/raym)
[07:04:10] *** Joins: fe23 (~fe23@2409:8a34:464:4990:29b5:3a5c:9e96:d0f4)
[07:05:59] <nitrix> Probably -std=c11 with your -pedantic, and -O3 on release, -O0 -g on debug.
[07:06:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[07:06:31] <nitrix> I usually leave -fsanitize=undefined,address commented out unless I need it.
[07:07:34] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[07:07:45] <pony> cool
[07:10:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:12:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:15:05] *** Joins: vysn (~vysn@user/vysn)
[07:22:35] <NRK[m]> pony: id add -Wwrite-strings and -Wpointer-arithmetic in there as well
[07:23:43] <pony> are -Wpedantic and -pedantic the same?
[07:24:08] <NRK[m]> this is what i settled on after reading the gcc manpage for warnings: https://dpaste.com/6DW9F63KD
[07:24:32] <pony> hehe
[07:24:36] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:24:45] <NRK[m]> the paste is a bit outdated though, i think i pasted it while under construction. but im not on pc atm, so can't share the end product.
[07:25:24] <NRK[m]> i think i added 2 more flags iirc. so nothing major.
[07:27:01] <NRK[m]> and yes -Wpedantic and -pedantic are same. in gcc atleast.
[07:27:10] <pony> ah, k
[07:27:11] <pony> thx
[07:27:47] *** Joins: xqt (~xqt@user/xqt)
[07:28:51] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[07:31:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:32:34] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:33:37] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:33:41] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Read error: Connection reset by peer)
[07:34:34] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[07:34:42] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[07:35:15] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[07:35:58] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-9cea-d206-a934-c8cd.fixed6.kpn.net)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:22] *** Quits: moog_ (~moog@107.77.244.71) (Ping timeout: 256 seconds)
[07:40:17] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-9cea-d206-a934-c8cd.fixed6.kpn.net) (Ping timeout: 252 seconds)
[07:41:19] *** Joins: raym (~raym@user/raym)
[07:42:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b997:c1f9:27c:1247)
[07:42:15] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:42:31] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:43:49] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:45:02] *** Quits: mahmutov (~mahmutov@5.176.54.223) (Ping timeout: 256 seconds)
[07:50:37] <nicode> Is there a way to get the backslash sequence from a char number (e.g. get "\n" from 10)? I mean other than just creating a reference array myself and fetching it out...
[07:50:46] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[07:52:28] <kurahaupo> nicode: an array lookup is pretty much your only option.
[07:52:38] <nicode> kurahaupo: kk, thx
[07:52:49] <kurahaupo> What's your use-case?
[07:54:03] <kurahaupo> nicode: Don't forget to include mapping '\\' to "\\\\"
[07:54:07] <nicode> oh, I was just writing a program to print a character based on a user input character code (e.g. I type in 10 and get a newline printed) and thought it would be neat to also print out escape codes.
[07:54:08] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:54:12] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[07:56:33] <fizzie> You can always use the "generic" (octal/hex) escapes for anything non-printable, which isn't quite as pretty as \n, but gets the "job" done.
[07:56:34] <kurahaupo> nicode: For showing the ASCII control codes visually, you could also use unicode codepoint n+0x2400 (or 0x2421 in place of 0x7f)
[07:57:00] <kurahaupo> But of course you'd need to convert that to utf-8
[07:57:01] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:57:58] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[07:58:42] <kurahaupo> printf("\xe2\x90%c", c==127 ? 33 : c+80 );
[07:59:14] <kurahaupo> printf("\xe2\x90%c", c==127 ?0x21 : c+0x80 ); /* oops, 80 hex not decimal*/
[07:59:33] <kurahaupo> nicode: ^^^
[07:59:46] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:00:14] <nicode> kk, I'll jot that down and save it for tomorrow, just noticed the time and need to get to bed. Thanks for your help kurahaupo & fizzie
[08:00:17] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 268 seconds)
[08:00:17] *** jmiehe1 is now known as jmiehe
[08:00:32] <kurahaupo> 0x2400: ␀␁␂␃␄␅␆␇␈␉␊␋␌␍␎␏
[08:00:33] <kurahaupo> 0x2410: ␐␑␒␓␔␕␖␗␘␙␚␛␜␝␞␟
[08:00:33] <kurahaupo> 0x2420: ␠␡
[08:00:36] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:01:23] <fizzie> Heh, amusing, exactly one of those is missing from whatever font I'm using.
[08:02:09] <fizzie> The others aren't really readable either, but there's just one (U+2418 SYMBOL FOR CANCEL) that's completely missing.
[08:03:47] <fizzie> Or you could use ↵ to represent a newline. And ⇥ for a tab.
[08:04:14] <kurahaupo> fizzie: Yeah those are nice too
[08:04:39] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[08:04:46] *** Joins: hinata (~hinata@2409:4042:2d90:eac6:cc27:5bff:37a7:83ab)
[08:04:56] <fizzie> With U+20E3 COMBINING ENCLOSING KEYCAP after. ;)
[08:07:13] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[08:08:17] *** Quits: nicode (~nic@2607:f2c0:946d:3800:72c3:6283:a9c2:9e2f) (Ping timeout: 240 seconds)
[08:09:31] *** Joins: xqt (~xqt@user/xqt)
[08:09:34] <kurahaupo> ↵⃣ cool!
[08:10:15] *** Joins: malina (~malina@user/malina)
[08:10:16] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[08:11:06] *** Parts: rsjw (~quassel@user/rsjw) ()
[08:13:59] *** Quits: cryptonector (~nico@24.28.108.183) (Remote host closed the connection)
[08:14:21] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[08:16:37] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[08:17:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:18:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::6) (Ping timeout: 240 seconds)
[08:21:15] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:24:01] *** Joins: cryptonector (~nico@24.28.108.183)
[08:25:42] *** Joins: quartz (~quartz@user/quartz)
[08:26:24] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[08:27:23] *** Quits: TommyC7 (~TommyC@45.92.124.114) (Quit: TTFN, Ta Ta For Now!)
[08:27:55] *** Joins: TommyC (~TommyC@user/tommyc)
[08:28:43] *** Joins: seninha (~seninha@user/seninha)
[08:28:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:30:47] *** Joins: xqt (~xqt@user/xqt)
[08:35:19] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[08:35:49] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[08:40:37] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Ping timeout: 240 seconds)
[08:45:37] *** Joins: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[08:45:53] *** Quits: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Remote host closed the connection)
[08:46:01] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:46:23] *** Joins: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[08:46:26] *** Quits: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Remote host closed the connection)
[08:48:49] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:51:08] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:53:13] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:54:19] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:55:09] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[08:59:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:00:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:00:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:00:06] *** Joins: wroathe (~wroathe@user/wroathe)
[09:03:34] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[09:04:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:05:55] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[09:06:39] *** Joins: Mentor (~Ionut@92.86.217.127)
[09:10:11] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[09:11:13] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:12:07] *** Joins: xqt (~xqt@user/xqt)
[09:13:05] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[09:14:19] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:15:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[09:16:27] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Max SendQ exceeded)
[09:16:41] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[09:18:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[09:22:21] *** Quits: alch (~alch@151.36.113.170) (Read error: Connection reset by peer)
[09:24:17] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:24:41] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:24:57] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:26:26] *** Joins: alch (~alch@151.36.115.190)
[09:26:30] *** Joins: Guest5023 (~Guest50@157.122.68.247)
[09:27:50] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[09:28:17] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[09:30:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[09:32:42] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:33:18] *** Joins: xqt (~xqt@user/xqt)
[09:35:10] *** Quits: nitrix (~nitrix@user/nitrix) (Read error: Connection reset by peer)
[09:36:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:37:38] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[09:37:44] *** Joins: nitrix (~nitrix@user/nitrix)
[09:38:18] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[09:39:22] *** Joins: rgrinberg (~textual@187.223.209.255)
[09:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:40:48] *** Joins: seninha (~seninha@user/seninha)
[09:42:50] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[09:42:52] <KillerWasp> hello
[09:43:22] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:43:37] <KillerWasp> is a good idea allocate each string for a list of >100 strings?
[09:44:02] *** Joins: tejr (~tejr@user/tejr)
[09:44:31] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:45:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[09:45:27] <sham1> What else could you do
[09:46:03] <KillerWasp> I think it is best to reserve a large memory and store all the strings in it, and then point each string with a separate vector. But I'm not sure.
[09:46:39] <sham1> Well that's still allocation
[09:47:01] <KillerWasp> If you can calculate the sum of all the strings to reserve the memory of strings it would be better. Although everything takes more code work.
[09:47:21] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:47:23] <KillerWasp> sham1: yes, but only 1 allocation and not 1000 allocations
[09:47:31] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:47:49] <dave0> KillerWasp: 100 small allocations is always gonna be slower than 1 large allocation
[09:48:02] <dave0> right
[09:49:18] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:49:28] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:50:35] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:50:45] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:51:36] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:51:46] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:51:48] <KillerWasp> Although it's very difficult to calculate the size of all the strings because it's more efficient to scan only 1 time, you may have to process reserving memory blocks, say 100KB, and each time the 100KB is occupied, you will reserve new 100KB, storing blocks of memory in 100KBs.
[09:52:32] <dave0> you can over estimate
[09:52:42] <dave0> memory is cheap
[09:53:40] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Ping timeout: 250 seconds)
[09:53:54] <NRK[m]> KillerWasp: it depends on your allocator
[09:54:21] <NRK[m]> certain allocator have special rules around smaller allocations
[09:54:25] <dave0> if you're reading the strings from a file, the size of the file is a good upper-bound
[09:55:59] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3)
[09:56:02] *** Parts: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3) (Leaving)
[09:56:15] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3)
[09:56:22] *** Parts: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3) (Leaving)
[09:56:35] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3)
[09:57:00] <NRK[m]> could also go conservative and realloc if needed
[09:57:18] <dave0> if you were to store the characters as unicode code points, size of file * 4 would work too
[09:58:06] <cryptonector> careful w/ realloc -- you'll be copying lots of memory if you're doing one at a time; better to increase the allocation exponentially (but not as much as 2x each time)
[09:58:34] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[09:58:43] <NRK[m]> not entirely true
[09:58:53] <NRK[m]> depends entirely on the allocator
[09:58:53] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:59:20] <dave0> 1+e reallocs is slower than 1 malloc
[09:59:37] *** Joins: chomwitt (~chomwitt@ppp-94-67-201-202.home.otenet.gr)
[10:00:03] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:00:25] <dave0> 1+ε
[10:00:45] <cryptonector> it depends on lots of things
[10:00:47] <KillerWasp> dave0: the size of the file will always be the same regardless of the unicodes it has. :P
[10:01:20] <NRK[m]> dave0: i think that also depends on weather the allocator nees to ask kernel for memory or already has it.
[10:01:36] <dave0> if you know the size of the file in advance that's even better.. just declare an array
[10:02:26] <dave0> NRK[m]: i dream of a time where you write any place and the os maps a fresh page there
[10:02:32] <cryptonector> if you're busy looping in a single-threaded program doing no allocations other than realloc, then chances are it can just return the same pointer and just enlarge the allocation
[10:04:25] *** Joins: mikoto-chan (~mikoto-ch@194.157.16.89)
[10:06:28] <NRK[m]> there's also this entire circus of virtual memory
[10:06:47] <cryptonector> yes, but that won't save you from O(N^2) copies
[10:07:31] <cryptonector> a very smart allocator could detect one-at-a-time reallocs and be smarter, but realistically, would an allocator dev bother?
[10:07:37] <dave0> a very c answer is pick a big number and hope no one ever has to put a bigger file in it
[10:07:57] <NRK[m]> i think you can avoid the copy all together
[10:08:10] <dave0> my default big number is 1,000,000,000
[10:08:24] <dave0> make an array and hope no one has a 2 gig file
[10:08:29] <NRK[m]> as long as the virtual address seems contiguous
[10:09:52] <dave0> even better mmap the file
[10:10:28] <dave0> but that's posix
[10:10:57] <KillerWasp> dave0: That's too much for loading a string list. Also it doesn't necessarily come from a file, they are a list of strings that can vary and there's no way to know their size. There's no file size to calculate, which you could easily get from 'struct stat'.
[10:11:13] <NRK[m]> we don't care about windows anyways :)
[10:11:27] <dave0> pick a big number and hope no one makes a string that long
[10:11:57] <NRK[m]> I'd pick a conservative number and realloc instead
[10:13:11] *** megaTherion_ is now known as megaTherion
[10:13:46] <NRK[m]> KillerWasp: btw, what *exactly* are you doing?
[10:14:44] *** Joins: xqt (~xqt@user/xqt)
[10:14:55] <KillerWasp> NRK[m]: Okay. I am trying to accumulate a list of files from readdir (), which I have to extract string by string and store it in memory.
[10:15:59] <NRK[m]> just malloc each string. i know a project that does that on startup.
[10:16:34] <NRK[m]> literally mallocs everything separately and it's not even a bottleneck
[10:17:43] <dave0> file names have a length limit and often a directory has a limit on the number of files
[10:18:00] <dave0> i think it is PATH_MAX ?
[10:18:26] * NRK[m] recalls PATH_MAX is tricky
[10:19:44] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[10:21:27] *** Quits: mikoto-chan (~mikoto-ch@194.157.16.89) (Quit: mikoto-chan)
[10:22:38] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[10:23:12] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[10:24:17] <KillerWasp> thanks NRK[m] dave0 cryptonector
[10:24:59] <dave0> no worries
[10:26:16] *** Joins: vicfred (~vicfred@user/vicfred)
[10:26:35] <NRK[m]> dave0: https://eklitzke.org/path-max-is-tricky
[10:26:35] <dave0> hmm can you mmap a directory? if you know the layout of directory entries you might have a superfast ls
[10:28:18] <NRK[m]> KillerWasp: https://github.com/muennich/sxiv/blob/master/main.c#L104 heres the project I was talking about btw. its doing not one but 2 mallocs (realpath and estrdup) and potentially a realloc for every single file it's adding.
[10:29:19] <NRK[m]> i profiled it on a directory with 1k+ files and was surprised to see that malloc wasn't even in the top 5.
[10:30:21] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[10:30:56] <dave0> NRK[m]: complicated :-(
[10:31:04] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:31:15] <dave0> PATH_MAX that is
[10:32:05] <NRK[m]> yeh. although i don't i think i have any file path that reaches 4096 chars though.
[10:32:49] <NRK[m]> typically 150-200, sometimes 250~ if really nested
[10:33:22] <dave0> i did a recursive directory lister that didn't understand soft links ... if there was a soft link to a directory it would recurse until the path reached some crazy length
[10:33:47] *** Joins: xqt (~xqt@user/xqt)
[10:34:07] <dave0> i changed it to simply fail and exit(0) if there was a soft link
[10:34:40] <NRK[m]> oof
[10:34:41] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[10:35:24] <dave0> it was never meant to be bulletproof so just exiting was fine
[10:36:13] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 240 seconds)
[10:36:42] <KillerWasp> NRK[m]: lol, I did not know that realpath existed, I already made myself the function that does all the work.
[10:36:57] <NRK[m]> i oof-ed at the recursing
[10:37:07] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[10:37:22] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[10:37:55] *** Joins: justIrresolute (~justache@user/justache)
[10:37:57] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[10:38:23] *** Joins: bkhl (~bkhl@user/bkhl)
[10:38:38] <NRK[m]> I/O in C feels like a pain tbh. i like shell for that kinda stuff.
[10:38:54] <KillerWasp> https://manpages.debian.org/stretch/heimdal-dev/erealloc.3.en.html
[10:38:56] <candide> Title of KillerWasp's link: erealloc(3) — heimdal-dev — Debian stretch — Debian Manpages
[10:38:59] <KillerWasp> roken library??...
[10:39:39] <KillerWasp> it's a library only for debian?...
[10:39:47] <NRK[m]> huh? what's roken library
[10:40:43] <NRK[m]> on the link i shared `erealloc()` is implemented in the util.c file. its not using any library
[10:41:36] <KillerWasp> NRK[m]: is like show in the link.
[10:41:38] <KillerWasp> https://manpages.debian.org/stretch/heimdal-dev/erealloc.3.en.html
[10:41:39] <candide> Title of KillerWasp's link: erealloc(3) — heimdal-dev — Debian stretch — Debian Manpages
[10:42:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[10:42:48] <NRK[m]> first time hearing of this. i typically see people just implement stuff like emalloc, erealloc themselves without relying on any library.
[10:43:39] <supakeen> I'd think all single-letter-malloc-prefixes have been taken by now ;)
[10:44:23] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:35] <sham1> xmalloc is a nice one
[10:45:06] *** Quits: kurahaupo (~martin@115.69.27.211) (Quit: Leaving.)
[10:45:29] <sham1> void *xmalloc(size_t size) { void *ret = malloc(size); if (ret == NULL) { /* report error mayhaps */ exit(1); } return ret; }
[10:45:40] <sham1> No need for a library
[10:45:55] <sham1> Well, exit code of 1 or -errno. Either or
[10:47:46] * katsuragi starts to code
[10:50:52] <KillerWasp> char*  is 12 bytes??
[10:51:01] *** Joins: mikoto-chan (~mikoto-ch@194.157.37.35)
[10:53:47] <sham1> Now that's an exotic platform isn't it
[10:53:59] <sham1> You can fit an entire pointer tag into that
[10:55:25] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Ping timeout: 240 seconds)
[10:57:08] *** Quits: noonien (~noonien@user/noonien) (Ping timeout: 256 seconds)
[10:57:09] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3) (Quit: Leaving)
[10:57:29] *** Joins: noonien (~noonien@user/noonien)
[10:57:56] *** Joins: rgrinberg (~textual@187.223.209.255)
[10:58:49] *** Joins: Rounin (~david@84.212.130.215)
[11:04:02] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:04:46] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[11:07:27] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:08:16] * markand also use e* (wrapper by hand) functions for situations where ENOMEM is unsuitable for recovery
[11:08:40] <markand> emalloc, ecalloc, estrdup, ...
[11:09:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:09:41] <lleo> merry knuth-day, ((x&0x8080808080808080ull)^((y<<1)-(y>>7)))-(y>>7);
[11:12:03] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[11:12:08] *** Joins: mrig (~mrig@user/mrig)
[11:12:45] *** Joins: ahammer (~ahammer@157.122.68.247)
[11:13:48] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[11:14:32] *** Quits: Guest5023 (~Guest50@157.122.68.247) (Quit: Client closed)
[11:15:07] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:15:43] *** andi__ is now known as andi_
[11:16:49] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[11:16:58] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[11:16:58] *** Quits: bw_ (~bw@coconut.xen.prgmr.com) (Ping timeout: 256 seconds)
[11:17:06] *** Joins: bw_ (~bw@coconut.xen.prgmr.com)
[11:19:17] *** Joins: constxd_ (~brad@142.134.38.68)
[11:19:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[11:19:41] *** lukedashjr is now known as luke-jr
[11:20:31] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[11:22:34] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[11:25:58] *** packet_lozenge_ is now known as packet_lozenge
[11:30:02] *** Joins: teut (~teut@2401:4900:1c68:6b85:4d9d:d2be:67d7:2e63)
[11:32:28] *** Quits: liba (~liba@user/liba) (Ping timeout: 250 seconds)
[11:34:08] *** Quits: rgrinberg (~textual@187.223.209.255) (Remote host closed the connection)
[11:34:12] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[11:35:29] *** Joins: rgrinberg (~textual@187.223.209.255)
[11:36:00] *** Joins: aradesh (~aradesh@user/aradesh)
[11:37:51] <katsuragi> How would one come up with such a weird bit operation? https://termbin.com/bp93
[11:41:38] <dave0> oh it's using booleans as integers
[11:41:56] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3)
[11:42:34] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:43:09] <dave0> katsuragi: !(n % 3) is the same as   (n % 3 == 0)   which is true if n is divisible by 3, false otherwise, and true==1 and false==0
[11:43:39] <dave0> so  !(n % 3)  yields 1 when n is divisible by 3, and 0 otherwise
[11:43:57] <dave0> similar   !(n % 5)   is 1 when n is divisible by 5, 0 otherwise
[11:44:28] <katsuragi> ah, i see
[11:44:44] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[11:45:03] <dave0> yep then it does a bit of math and you get a number from 0 to 3
[11:45:51] *** Quits: eht (~eht@user/eht) (Quit: Leaving)
[11:46:51] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 256 seconds)
[11:47:12] *** Joins: jaggz (~jaggz@user/jaggz)
[11:47:32] <jaggz> is there a standard call to find a char * needle in a char *haystack?
[11:47:39] <dave0> jaggz: strstr
[11:48:00] *** Quits: ahammer (~ahammer@157.122.68.247) (Quit: Leaving)
[11:48:11] <jaggz> dave0, sorry, with a needle_length and a haystack_length
[11:48:22] <dave0> ah
[11:48:23] <jaggz> (can contain NUL
[11:48:26] <dave0> memmem
[11:48:32] <jaggz> riight.. thanks :)
[11:48:32] <dave0> ,man memmem
[11:48:43] <dave0> might not be standard.. let me look it up
[11:48:55] <candide> Includes: string.h - memmem(const void *big, size_t big_len, const void *little, size_t little_len); - memmem() function locates the first occurrence of the byte string little in the byte string big - http://www.iso-9899.info/man?memmem - memmem() is a GNU extension
[11:49:03] <dave0> oh good robot
[11:49:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:49:15] <dave0> naturally it's a gnu extension
[11:49:28] <sham1> It shouldn't be that difficult to implement
[11:49:29] <dave0> it'll probably work on linux .. who knows what else
[11:49:57] <jaggz> i'm in linux.. will do for me
[11:50:08] <sham1> This function is not specified in POSIX.1, but is present on a number of other systems.
[11:50:11] <jaggz> (and, yeah, it requires _GNU_SOURCE)
[11:50:47] <dave0> seems to be on netbsd: https://man.netbsd.org/memmem.3
[11:50:49] <candide> Title of dave0's link: memmem(3) - NetBSD Manual Pages
[11:51:22] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:51:49] <sham1> And this raises the question of why can't we have this specified
[11:51:49] <jaggz> "I am the Knight 2000.  I have 1000 megabits of memory..." -- Knight Rider (S03E??) (misquoted)
[11:52:10] <jaggz> sham1, have what
[11:52:19] <jaggz> what's specified mean
[11:52:20] <dave0> david hasselhoff shares my first name
[11:52:28] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[11:52:29] <sham1> C standard specification
[11:52:31] <jaggz> and your long legs?
[11:52:42] <dave0> ehehe
[11:52:48] <sham1> Like why can't we have memmem in the C standard
[11:52:53] <jaggz> sham1, C really could use some additional stuff in the standard :)
[11:53:16] *** Quits: mikoto-chan (~mikoto-ch@194.157.37.35) (Ping timeout: 250 seconds)
[11:53:28] <jaggz> but I guess the standard is an odd mix of minimalist stuff and not?  dunno
[11:53:43] * jaggz talking without knowledge
[11:54:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:56:18] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:56:31] *** Joins: random-nick (~random-ni@87.116.167.125)
[11:56:41] *** Joins: Darkcoal (~user@2001:16a2:77a8:a200:61fe:e24f:d8ee:6a76)
[11:58:07] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:00:31] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[12:00:32] *** Quits: Echoz_ (~chris@user/echoz) (Quit: WeeChat 3.3)
[12:01:00] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.158)
[12:04:28] *** Joins: Echoz (~chris@user/echoz)
[12:04:36] *** Joins: xqt (~xqt@user/xqt)
[12:05:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:08:17] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 240 seconds)
[12:08:52] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Ping timeout: 250 seconds)
[12:08:57] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[12:09:41] *** Joins: rcoote (~rcoote@2a02:908:690:a140:5322:cf86:930f:2db2)
[12:10:36] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 250 seconds)
[12:12:21] *** Quits: rcoote (~rcoote@2a02:908:690:a140:5322:cf86:930f:2db2) (Client Quit)
[12:13:56] *** Joins: aqua (~aqua@user/aqua)
[12:16:41] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[12:18:24] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[12:20:17] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[12:20:55] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.158) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[12:21:32] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[12:21:44] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[12:22:44] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[12:22:45] *** Joins: aradesh (~aradesh@user/aradesh)
[12:23:09] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[12:24:50] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Ping timeout: 256 seconds)
[12:29:41] <KillerWasp> lleo: what's your operation?
[12:29:55] *** Quits: teut (~teut@2401:4900:1c68:6b85:4d9d:d2be:67d7:2e63) (Ping timeout: 256 seconds)
[12:30:09] *** Quits: TheDcoder[m] (~thedcoder@user/thedcoder) (Quit: You have been kicked for being idle)
[12:32:51] *** Quits: Darkcoal (~user@2001:16a2:77a8:a200:61fe:e24f:d8ee:6a76) (Ping timeout: 245 seconds)
[12:33:14] *** Joins: Darkcoal (~user@139.64.2.214)
[12:33:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[12:33:59] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[12:34:26] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[12:34:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:35:07] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:21] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[12:37:43] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[12:41:59] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[12:43:17] *** Quits: cyphics (~cyphix@user/cyphics) (Ping timeout: 240 seconds)
[12:44:11] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[12:45:24] *** Joins: malina (~malina@user/malina)
[12:45:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:46:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:57] *** Quits: hinata (~hinata@2409:4042:2d90:eac6:cc27:5bff:37a7:83ab) (Quit: Leaving)
[12:48:31] *** Joins: xqt (~xqt@user/xqt)
[12:49:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[12:50:19] <lleo> trying to abs 8 chars
[12:51:08] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:51:54] <GyrosGeier> sham1, if you use glibc, you can use _GNU_SOURCE
[12:53:09] *** Joins: hehehe9 (~hehehe9@110.red-88-21-181.staticip.rima-tde.net)
[12:53:25] <lleo> it is quirky still, first digit  fails
[12:53:43] *** Quits: Pentode (~Pentode@mobile-166-170-34-96.mycingular.net) (Ping timeout: 256 seconds)
[12:55:56] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:57:32] *** Joins: feral_hedgehog (~feral_hed@user/feral-hedgehog/x-2217356)
[13:02:22] *** Joins: mrig_ (~mrig@lfbn-mar-1-390-157.w90-73.abo.wanadoo.fr)
[13:03:27] <lleo> https://pastebin.com/daqkGepk
[13:04:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:04:15] *** Quits: mrig_ (~mrig@lfbn-mar-1-390-157.w90-73.abo.wanadoo.fr) (Changing host)
[13:04:15] *** Joins: mrig_ (~mrig@user/mrig)
[13:04:15] *** mrig is now known as Guest6504
[13:04:15] *** Quits: Guest6504 (~mrig@user/mrig) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:04:15] *** mrig_ is now known as mrig
[13:06:17] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com) (Ping timeout: 240 seconds)
[13:06:44] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com)
[13:13:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:13:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:13:30] *** Joins: wroathe (~wroathe@user/wroathe)
[13:13:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:18:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[13:19:11] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:22:59] *** Quits: alch (~alch@151.36.115.190) (Read error: Connection reset by peer)
[13:26:11] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[13:26:24] *** Joins: mrig (~mrig@user/mrig)
[13:26:54] *** Joins: alch (~alch@151.82.98.6)
[13:26:57] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[13:27:46] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:30:32] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:30:43] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[13:32:59] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:33:54] *** Joins: stonkey (~stonkey@user/stonkey)
[13:37:48] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Quit: Leaving)
[13:37:52] <lleo> seems  to function: https://pastebin.com/7K0sQkiG
[13:39:19] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:40:28] *** Joins: reset (~reset@user/reset)
[13:41:33] *** aqua is now known as kish`
[13:42:40] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:44:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:44:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:44:17] *** Joins: wroathe (~wroathe@user/wroathe)
[13:44:46] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[13:45:28] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:49:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:49:46] *** kfv_ is now known as kfv
[13:50:45] *** Joins: constxd_ (~brad@142.134.38.68)
[13:51:45] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[13:59:26] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[14:03:16] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[14:03:49] *** Joins: costanza (~i.am@user/heineken)
[14:08:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:09:03] *** Joins: corelax (~corelax@user/corelax)
[14:09:25] *** Joins: Joss (~joss@user/Joss)
[14:09:33] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:14:32] *** Quits: deck (~deck@177.172.19.128) (Quit: WeeChat 3.4)
[14:14:57] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[14:15:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:15:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:15:05] *** Joins: wroathe (~wroathe@user/wroathe)
[14:15:12] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[14:15:42] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[14:19:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[14:20:09] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[14:21:05] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[14:24:09] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:28:00] *** Joins: constxd_ (~brad@142.134.38.68)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[14:30:57] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:34:03] *** Joins: shivesh (~shivesh@user/shivesh)
[14:43:20] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[14:43:42] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:43:48] *** Quits: puke (~puke@user/puke) ()
[14:44:15] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[14:44:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:45:44] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[14:45:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:45:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:45:51] *** Joins: wroathe (~wroathe@user/wroathe)
[14:51:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:53:58] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[14:55:53] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4e85:a310:61ff:6469:427b:aaa3) (Quit: Leaving)
[14:58:57] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Ping timeout: 256 seconds)
[15:01:02] *** Joins: de-facto (~de-facto@user/de-facto)
[15:05:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:07:23] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:09:06] *** Joins: magla (~gelignite@55d43516.access.ecotel.net)
[15:10:21] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Read error: Connection reset by peer)
[15:10:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:10:51] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[15:11:01] *** Joins: xqt (~xqt@user/xqt)
[15:12:25] *** Joins: puke (~puke@user/puke)
[15:15:33] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[15:18:11] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[15:32:55] *** Joins: Iarfen (~quassel@181.43.58.247)
[15:33:56] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[15:34:16] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 250 seconds)
[15:34:44] *** Joins: liba (~liba@user/liba)
[15:34:48] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[15:35:31] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:40] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[15:37:23] *** Joins: pra (~pr-asadi@185.116.46.31)
[15:37:28] *** Parts: pra (~pr-asadi@185.116.46.31) ()
[15:41:27] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:42:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[15:43:43] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[15:44:04] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[15:46:09] *** Joins: geli (~gelignite@55d43fe5.access.ecotel.net)
[15:48:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:48:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:48:06] *** Joins: wroathe (~wroathe@user/wroathe)
[15:48:34] *** Quits: magla (~gelignite@55d43516.access.ecotel.net) (Ping timeout: 250 seconds)
[15:48:46] *** Joins: jellyknight (~gelignite@55d4319d.access.ecotel.net)
[15:50:13] *** Joins: frost73 (~frost@user/frost)
[15:51:39] *** Quits: geli (~gelignite@55d43fe5.access.ecotel.net) (Ping timeout: 256 seconds)
[15:51:54] *** Joins: magla (~gelignite@55d4b5f5.access.ecotel.net)
[15:52:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:53:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:53:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:54:05] *** Quits: jellyknight (~gelignite@55d4319d.access.ecotel.net) (Ping timeout: 256 seconds)
[15:54:07] *** frost73 is now known as frost
[15:56:56] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[15:58:43] *** Joins: mrig (~mrig@user/mrig)
[15:59:06] *** Quits: kurahaupo__ (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au) (Ping timeout: 245 seconds)
[16:02:50] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:02:52] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[16:03:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:03:18] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[16:04:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:05:15] *** Joins: tafa (~tafa@user/tafa)
[16:06:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:08:19] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Quit: beyond time space in laws)
[16:08:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:08:38] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:09:20] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:10:30] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:10:57] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:10:58] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:11:05] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Ping timeout: 256 seconds)
[16:11:16] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[16:11:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[16:12:11] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:12:41] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:13:52] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:14:25] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:15:38] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[16:16:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:19:55] *** Joins: xqt (~xqt@user/xqt)
[16:22:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[16:25:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[16:25:44] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:26:00] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:27:37] *** Joins: plastico (~plastico@neomutt/plastico)
[16:27:47] *** Joins: Klinda (~superleag@user/klinda)
[16:28:13] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[16:28:28] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[16:29:59] *** Joins: teut (~teut@106.202.98.32)
[16:30:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:30:45] *** Quits: Iarfen (~quassel@181.43.58.247) (Ping timeout: 256 seconds)
[16:31:23] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[16:34:37] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:34:53] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[16:36:20] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[16:36:32] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[16:38:31] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[16:41:30] *** Joins: inomoz (~inomoz@176.59.106.192)
[16:41:31] *** Quits: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 256 seconds)
[16:42:44] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[16:45:26] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[16:45:49] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:46:54] <james[m]123456> How do I prettyfy the json string using json-glib?
[16:47:15] <omegatron> check the api docs of json-glib
[16:51:28] <cart_man> Soo what does it mean if a functoin in C looks like char *Stat::Hello_world() {}
[16:51:37] <cart_man> looks allot like namespaces
[16:51:46] <supakeen> that it isn't C
[16:51:49] <cart_man> omg nevermind
[16:51:50] <omegatron> it's c++
[16:51:56] <cart_man> is is namespaces because it is C__
[16:51:58] <cart_man> C++`
[16:52:08] <cart_man> I opened the one Cpp file in the C codebase
[16:52:09] <james[m]123456> omegatron: There is no api docs, but I found a man page. And it now works.
[16:52:22] <supakeen> :: is indeed a the scope resolution operator for C++ (and namespaces).
[16:52:28] <omegatron> good - next customer!  =)
[16:52:37] *** Joins: nicode (~nic@2607:f2c0:946d:3800:da6f:ffbd:5d89:a11f)
[16:52:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:53:25] *** Quits: chomwitt (~chomwitt@ppp-94-67-201-202.home.otenet.gr) (Ping timeout: 256 seconds)
[16:55:17] *** Joins: Torr (~Torr@user/torr)
[16:56:34] *** Joins: chomwitt (~chomwitt@2a02:587:dc11:fb00:12c3:7bff:fe6d:d374)
[16:56:57] *** Joins: Burgundy (~yomon@82.76.72.88)
[16:59:18] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:59:18] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:59:30] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:01:55] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[17:08:50] *** Joins: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net)
[17:08:56] <sham1> ,next
[17:08:56] <candide> Another satisfied customer! NEXT!!
[17:10:21] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:14:31] <ioxzev1z> cart_man
[17:14:34] <ioxzev1z> ,c++
[17:14:35] <candide> If you are using a C++ compiler then your code is not C -- even if you're only using the "C subset". As soon as you invoke a C++ compiler instead of a C compiler, all the rules and idiosyncrasies of the C++ specification come into play, which have subtle differences in certain semantics. Please ask ##c++ or switch to a C compiler.
[17:15:09] <Franciman> i want to implement an hashtable in C
[17:15:23] <Franciman> do you know any simple tutorial about it?
[17:15:25] <Franciman> or maybe book
[17:15:39] *** Joins: constxd (~brad@142.134.38.68)
[17:15:43] <constxd> kings!
[17:15:44] <ioxzev1z> Franciman, read up on hashtable theory and apply to C
[17:15:48] <constxd> explain this to me
[17:15:54] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[17:15:56] <omegatron> for what purpose? actual use or are you learning stuff ?
[17:16:10] <Franciman> omegatron: for learning stuff mostly
[17:16:24] <Franciman> for actual use is there any cool implementation around?
[17:16:27] <Franciman> ok ioxzev1z thanks
[17:16:36] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:16:37] <constxd> { double x = -2.3; double y = log(x); printf("y = %g, isnan(y) = %d", y, isnan(y)); }
[17:16:47] <constxd> ,cc double x = -2.3; double y = log(x); printf("y = %g, isnan(y) = %d", y, isnan(y));
[17:16:49] <candide> constxd: y = -nan, isnan(y) = 1
[17:16:56] <constxd> wtf
[17:17:05] <constxd> on my machine isnan(y) is 0
[17:17:32] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:17:51] <sham1> Do you get NaN on your machine though
[17:17:57] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[17:18:07] <sham1> Because you should
[17:18:33] <constxd> yes
[17:18:52] <sham1> Sounds like a bug then
[17:20:00] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[17:20:45] <constxd> nvm im retarded i was doing this
[17:20:55] <constxd> ,cc double x = -2.3; double y = logf(x); printf("y = %g, isnan(y) = %d", y, isnan(y));
[17:20:57] <candide> constxd: y = -nan, isnan(y) = 1
[17:21:08] <constxd> wait that should still work
[17:22:13] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[17:22:30] *** Quits: alch (~alch@151.82.98.6) (Read error: Connection reset by peer)
[17:22:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:25:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[17:26:05] <nomagno> Is Duff's device really needed for protothreads?
[17:26:14] *** Joins: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:26:15] *** Joins: alch (~alch@151.38.119.90)
[17:26:46] <constxd> lol
[17:27:02] <constxd> -Ofast finally coming to haunt me
[17:28:08] *** Quits: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net) (Quit: Konversation terminated!)
[17:28:19] <james[m]123456> I want to read a whole file in C, and write it to a string. How do I do this?
[17:28:20] <james[m]123456> For the string I am using
[17:28:20] <james[m]123456> char *json_str = malloc(__INT_MAX__ * sizeof(char));
[17:28:31] <sham1> Don't do that
[17:29:26] <sham1> First of all
[17:29:32] <sham1> candide: sizeof char
[17:29:33] <candide> sham1: error: expected expression before 'char'
[17:29:40] <sham1> candide: sizeof(char)
[17:29:40] <candide> The size of `char` is always 1, by definition. Multiplying by `sizeof (char)` adds no value and makes the code noisier.
[17:30:06] <sham1> Second of all, if you have a file, you could just read the amount of data it actually contains
[17:32:10] <clarity> james[m]123456: The standard function for reading files is fread
[17:32:32] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:32:33] <sham1> FILE *f = fopen("data.json", "rb"); fseek(f, 0, SEEK_END); size_t file_size = ftell(); fseek(f, 0, SEEK_SET);
[17:32:49] <sham1> Of course, you'd have to deal with any potential errors, but you do that anyway
[17:32:51] <sham1> Right
[17:35:36] <james[m]123456> Okay I have that code, how do I read that all into a string?
[17:35:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:36:06] <sham1> fread
[17:36:29] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Ping timeout: 256 seconds)
[17:36:33] <nomagno> fread into char array
[17:36:35] <james[m]123456> Will that read all bytes in the file? No loops.
[17:36:50] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[17:37:06] <nomagno> It'll read until the limit you specify
[17:37:30] <nomagno> You can't really read 'as many bytes as the file is long' in C
[17:37:31] <nomagno> Well you can, but it's a mess
[17:37:53] <nomagno> Use a VLA with the size you just got from fseek(), or malloc
[17:38:03] <sham1> Please malloc
[17:38:13] <nomagno> Then fread() with that
[17:38:58] <james[m]123456> And the size and nmemb values, which one corresponds to the file_size that was written earlier?
[17:39:06] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu)
[17:39:09] <sham1> nmemb
[17:39:27] <sham1> Because you'd be reading nmemb chars, so size would be 1
[17:39:55] <james[m]123456> So size parameter is equal to sizeof(char)?
[17:41:32] *** Joins: johnjaye (~pi@154.6.152.74)
[17:42:30] *** Joins: kts (~kts@103.73.237.175)
[17:42:55] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[17:43:48] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au)
[17:43:52] <sham1> Yes, which is always 1
[17:44:18] <james[m]123456> The code I want is under profile_load in this C file:
[17:44:18] <james[m]123456> https://git.james-clarke.ynh.fr/james/Habits/src/branch/master/src/core/profile/save/profile_save.c
[17:44:18] <james[m]123456> For some reason I still cannot print the string.
[17:44:31] <markand> using stat (which is widely supported) is much better than ftell
[17:44:54] <sham1> If you have stat available, use that yes
[17:45:46] <GyrosGeier> ftell is problematic on streams that have charset conversion
[17:46:15] <clarity> streams that have charset conversion are problematic :P
[17:46:22] <sham1> ^
[17:46:26] <sham1> But fair enough
[17:46:52] <james[m]123456> The string still does not print.
[17:47:05] <sham1> Although if one was to use stat, I'd use fstat
[17:47:15] <sham1> james[m]123456: what do you mean "doesn't print"
[17:47:28] <markand> yeah, file descriptors ftw <3
[17:48:01] <james[m]123456> I cannot output the string. So its not read the file correctly.
[17:48:10] <markand> I wish there was a POSIX getline variant using int rather than FILE, but I suppose it has do perform some pushback in case of error
[17:48:28] <markand> james[m]123456, paste your entire code
[17:48:54] <sham1> I hate browsing pages with iframes on them in mobile
[17:49:00] <clarity> "I cannot" is not very descriptive.  Why can't you?  What happens when you try?
[17:49:06] <GyrosGeier> markand, the main reason is probably readahead
[17:49:18] <markand> and that too, yes
[17:49:24] <james[m]123456> The code is here:
[17:49:24] <james[m]123456> The code I want is under profile_load in this C file:
[17:49:24] <james[m]123456> https://git.james-clarke.ynh.fr/james/Habits/src/branch/master/src/core/profile/save/profile_save.c
[17:49:30] <markand> this is aldo why there is no dscanf (like dprintf)
[17:50:23] <sham1> I wish dprintf was more common outside of the BSDs
[17:50:24] <markand> malloc(__INT_MAX__ * sizeof(char)) sounds like a very lightweight program
[17:50:39] *** Quits: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[17:51:13] <sham1> The reason I told you about the whole ftell trick was so you wouldn't allocate your entire address space for your JSON string
[17:51:14] <sham1> God damn
[17:51:25] <james[m]123456> markand: Is that too much space allocated then?
[17:51:26] <markand> james[m]123456, you don't test anything of your functions return values
[17:52:04] <markand> also you allocate config_path and you override its address immediately after
[17:52:13] <clarity> Well JS goes hand in hand with two gigabytes of memory usage for a chat app
[17:52:15] <clarity> :D
[17:52:46] *** Parts: Franciman (~Franciman@mx1.fracta.dev) (WeeChat 3.4)
[17:53:08] <james[m]123456> markand: Does json_str get overwritten, how?
[17:53:15] *** Joins: B0H (~B0H@c-fb0d235c.010-306-6c6b701.bbcust.telenor.se)
[17:53:29] <sham1> The allocation probably just fails spectacularly
[17:53:58] <james[m]123456> How should I fix this so I can read the file into the string?
[17:54:45] <ioxzev1z> ...
[17:55:10] <james[m]123456> markand: Is it lightweight or is that sarcasm?
[17:55:10] <james[m]123456> I can reduce the allocated space.
[17:55:21] <clarity> Why would you allocate more than you need?
[17:55:32] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[17:55:36] <markand> james[m]123456, https://bpa.st/HIKQ
[17:55:38] *** Joins: AmR (~AmREiSa@41.36.185.103)
[17:56:00] <ioxzev1z> char *s = malloc(size); read(file, s, ...); pseudocode for reading file into array, which you can then interpret as string.
[17:56:07] <ioxzev1z> Like two actual function calls
[17:57:27] *** Quits: boB_K7IQ (~boB_K7IQ@108.60.52.242) (Ping timeout: 256 seconds)
[17:58:33] *** Joins: boB_K7IQ (~boB_K7IQ@108.60.52.242)
[18:00:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:00:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:00:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:53] *** Joins: pulse (~pulse@user/pulse)
[18:03:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:03:31] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[18:05:02] <james[m]123456> Okay I typed it, there is no code for file size.
[18:07:06] *** Joins: Iarfen (~quassel@181.43.58.247)
[18:07:21] *** Joins: stonkey (~stonkey@user/stonkey)
[18:07:42] <james[m]123456> I used the code from above to get the file size. It still does not work.
[18:08:06] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com) (Read error: Connection reset by peer)
[18:08:34] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com)
[18:09:13] <james[m]123456> I've put all the code you said in, it still does not work.
[18:09:14] <james[m]123456> https://git.james-clarke.ynh.fr/james/Habits/src/branch/master/src/core/profile/save/profile_save.c
[18:09:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[18:09:34] *** Joins: Senicar6 (~Senicar@gateway/tor-sasl/senicar)
[18:09:46] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Quit: Ping timeout (120 seconds))
[18:09:46] *** Senicar6 is now known as Senicar
[18:10:07] <sham1> You're not actually doing anything in case of error
[18:11:01] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Ping timeout: 240 seconds)
[18:12:10] *** Joins: moog (~moog@107.126.53.167)
[18:12:58] <james[m]123456> I have updated it with error messages. No errors occored.
[18:13:44] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[18:16:21] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[18:16:52] <constxd> james[m]123456: what does it print
[18:17:15] <james[m]123456> Nothing.
[18:18:39] <constxd> what is the value of file_size
[18:19:55] <james[m]123456> 0
[18:20:28] <markand> st.st_size already contains the file size, no need to use ftell
[18:23:06] <james[m]123456> I just re-ran the save function, ran the load function and it works.
[18:23:16] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[18:23:17] <sham1> Your file was probably empty
[18:23:43] <james[m]123456> <markand> "james, https://bpa.st/HIKQ" <- Thanks
[18:24:15] <james[m]123456> <sham1> "FILE *f = fopen("data.json", "rb..." <- thanks
[18:24:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:25:55] <sham1> Next thing for you: Actually handle the error conditions
[18:27:05] *** Quits: Iarfen (~quassel@181.43.58.247) (Ping timeout: 256 seconds)
[18:30:37] <omegatron> james[m]123456:  maybe this helps for some clues:  https://bpa.st/53AQ
[18:30:44] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[18:31:02] <omegatron> (it was written in a hurry, so there may be some slight errors)
[18:31:04] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[18:31:30] <ioxzev1z> james[m]123456, do you have to write this in C?
[18:32:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:32:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:32:50] *** Joins: wroathe (~wroathe@user/wroathe)
[18:35:53] *** Joins: Iarfen (~quassel@181.43.58.247)
[18:37:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:37:48] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[18:38:27] *** Joins: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net)
[18:39:54] *** LIERO_ is now known as LIERO
[18:40:09] *** Joins: strajder (~strajder@user/strajder)
[18:42:19] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:42:57] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 240 seconds)
[18:43:22] <fizzie> Surely GLib has a JSON parser that can parse from file without loading it into a string first.
[18:43:39] *** Joins: WAR10CK (~WAR10CK@14.223.183.93)
[18:43:51] <fizzie> `json_parser_load_from_file`, apparently.
[18:44:08] <omegatron> and there are other json libraries available ..
[18:44:37] <johnjaye> fizzie: i was afraid to ask but yeah what are all the header files for
[18:45:16] <nomagno> So, (void *)0 is NULL
[18:45:32] <nomagno> But is e.g. (mytype *)0 ALSO guaranteed to be NULL?
[18:45:41] <fizzie> It's guaranteed to be a null pointer.
[18:45:57] *** Joins: JTechno (~JTechno@5.59.114.36)
[18:45:57] <fizzie> The `NULL` macro, on the other hand, is an implementation-defined null pointer constant.
[18:45:58] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[18:46:30] <fizzie> So it can be any integer constant expression with the value 0, or such an expression cast to `void *`.
[18:46:38] *** Quits: JTechno (~JTechno@5.59.114.36) (Client Quit)
[18:46:53] <johnjaye> semantically it's just supposed to not be any pointer used by the program
[18:47:42] <nomagno> I'd love there to be preprocessor syntax for custom qualifiers
[18:47:47] <fizzie> C11 6.3.2.3p3: "An integer constant expression with the value 0, or such an expression cast to type `void *`, is called a /null pointer constant/. If a null pointer constant is converted to a pointer type, the resulting pointer, called a /null pointer/, is guaranteed to compare unequal to a pointer to any object or function."
[18:48:53] <fizzie> (And p4: "Conversion of a null pointer to another pointer type yields a null pointer of that type. Any two null pointers shall compare equal.")
[18:51:08] <johnjaye> eh
[18:51:18] *** Quits: teut (~teut@106.202.98.32) (Ping timeout: 256 seconds)
[18:51:24] <johnjaye> meaning if i cast 0 to (int *) it should compare unequal to any other (int *)?
[18:51:36] <johnjaye> why wouldn't you convert the int * to a void * then?
[18:51:36] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[18:53:12] <fizzie> Why would you? If you need a pointer that either points into an `int` (or an array of ints) or "nowhere" (is null), the natural type for it is `int *`.
[18:53:32] <johnjaye> meaning you want to compare an int pointer with the null pointer
[18:53:42] <johnjaye> the convention is to convert the null to int pointer not vice versa
[18:53:51] <johnjaye> that's how i read that
[18:54:15] *** Quits: costanza (~i.am@user/heineken) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:54:17] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[18:54:28] <johnjaye> but in code i thought you just write if( p == NULL
[18:54:35] <johnjaye> where p is int * p
[18:55:02] <fizzie> Yes, and that converts the null pointer constant NULL expands to into a null pointer of the type `int *`.
[18:55:13] <johnjaye> i see
[18:55:25] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[18:55:29] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[18:55:38] <fizzie> C11 6.5.9p5: "If one operand [of ==] is a pointer and the other is a null pointer constant, the null pointer constant is converted to the type of the pointer."
[18:55:46] <johnjaye> it's all just a memory address so i thought either way could work
[18:55:48] <johnjaye> oh ok
[18:55:49] *** Joins: orthoplex64 (~crm@70.120.0.94)
[18:56:06] <johnjaye> C pointers make a lot more sense when you realize it's just to manipulate and copy bytes. that's it
[18:56:12] *** Quits: Iarfen (~quassel@181.43.58.247) (Ping timeout: 250 seconds)
[18:56:27] <johnjaye> or like lists of structs which are packed into bytes etc
[18:58:28] *** Joins: rgrinberg (~textual@187.223.209.255)
[19:00:20] *** Joins: NEYi (~NEYi@109.251.216.38)
[19:00:57] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Ping timeout: 240 seconds)
[19:01:37] *** Quits: rgrinberg (~textual@187.223.209.255) (Remote host closed the connection)
[19:02:23] *** Joins: rgrinberg (~textual@187.223.209.255)
[19:09:05] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Changing host)
[19:09:05] *** Joins: Whatshisface (~jon@user/Whatshisface)
[19:09:45] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[19:10:19] *** Joins: samir (~azureuser@user/samir)
[19:10:41] *** Quits: ztx1 (~ztx@user/ztx) (Quit: ztx1)
[19:11:07] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[19:14:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[19:14:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[19:15:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:15:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:15:21] *** Joins: wroathe (~wroathe@user/wroathe)
[19:20:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:24:48] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[19:26:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[19:30:14] *** Quits: malkrister[m] (~malkriste@2001:470:69fc:105::1:44f3) (Quit: You have been kicked for being idle)
[19:30:17] *** Joins: Iarfen (~quassel@181.43.58.247)
[19:30:18] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[19:32:00] *** Quits: ikiryo (sid109660@user/ikiryo) (Ping timeout: 252 seconds)
[19:33:11] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[19:33:34] *** Joins: ikiryo (sid109660@user/ikiryo)
[19:33:54] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 250 seconds)
[19:34:17] <sham1> Well, objects more than bytes as such
[19:34:44] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:56] *** Joins: Akuli (~Akuli@82-203-163-9.bb.dnainternet.fi)
[19:37:48] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 250 seconds)
[19:38:53] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[19:40:48] *** Joins: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net)
[19:40:51] *** Quits: hehehe9 (~hehehe9@110.red-88-21-181.staticip.rima-tde.net) (Quit: Client closed)
[19:42:15] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[19:42:57] *** Joins: irek (~irek@public-gprs183925.centertel.pl)
[19:43:01] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[19:43:55] <rcf> johnjaye: treating them as raw byte addresses has the unfortunate side effect of making it much easier to fall into the strict aliasing trap set up by modern compilers.
[19:45:19] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[19:49:04] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 250 seconds)
[19:49:24] *** Joins: nyah (~nyah@94.6.71.219)
[19:49:39] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:51:36] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[19:54:39] *** Joins: yangby (~secret@115.199.105.217)
[19:54:41] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[19:56:47] *** Quits: yangby (~secret@115.199.105.217) (Client Quit)
[19:57:21] <johnjaye> isn't that no strict aliasing
[19:57:45] <johnjaye> strict aliasing is where the compiler tries to warn when you're referring to the same location twice by different vars
[19:57:46] *** Joins: tuu (~a@2a00:20:d041:5f2a:4200:8c4d:eaaa:ce79)
[19:58:11] *** Quits: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net) (Quit: Konversation terminated!)
[19:58:27] *** Joins: yangby (~secret@115.199.105.217)
[19:58:34] *** Parts: tuu (~a@2a00:20:d041:5f2a:4200:8c4d:eaaa:ce79) ()
[19:58:38] *** Joins: tuu (~a@2a00:20:d041:5f2a:4200:8c4d:eaaa:ce79)
[19:59:02] *** Quits: Iarfen (~quassel@181.43.58.247) (Ping timeout: 250 seconds)
[20:00:05] *** Quits: yangby (~secret@115.199.105.217) (Client Quit)
[20:00:28] <NRK[m]> by different types
[20:00:29] <NRK[m]> not "different vars"
[20:00:59] <johnjaye> right
[20:01:06] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[20:01:29] <NRK[m]> rcf: im mostly convinced that linus is right and simply adding `-fno-strict-aliasing` is the way to go.
[20:02:17] <NRK[m]> also, if anything it's a trap setup by the standards comittee, not modern compilers.
[20:02:20] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[20:02:44] *** Parts: irek (~irek@public-gprs183925.centertel.pl) (Using Circe, the loveliest of all IRC clients)
[20:03:32] *** Joins: mahmutov (~mahmutov@5.176.54.223)
[20:04:34] <rcf> johnjaye: strict aliasing is the application of the rule, without any warnings whatsoever.
[20:07:06] *** Joins: Betal (~Betal@user/betal)
[20:12:04] *** Joins: pyook (~puke@user/puke)
[20:12:10] *** Quits: puke (~puke@user/puke) (Quit: puke)
[20:12:35] *** Quits: pyook (~puke@user/puke) (Client Quit)
[20:12:47] *** Joins: puke (~puke@user/puke)
[20:12:59] <zwr> I don't find pointer aliasing hard to work with.
[20:13:31] <zwr> if you're not casting to a pointer to a char type, void, or struct, just use an union to type pun.
[20:14:23] <NRK[m]> im pretty sure type punning with union is also UB
[20:14:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:14:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:14:51] *** Joins: wroathe (~wroathe@user/wroathe)
[20:15:16] <johnjaye> the link i found on it said it's only UB in c++ not c
[20:15:33] <johnjaye> if i had to think of a correct way to type pun i would not say memcpy i'd say a union
[20:15:38] <johnjaye> that's how my textbook did it
[20:16:58] <sham1> NRK[m]: not after C1999 it isn't
[20:18:39] <sham1> memcpy also works because the compiler can just optimise it since it understands the semantics
[20:19:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[20:23:17] *** Quits: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[20:23:48] <NRK[m]> sham1: where ?
[20:23:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:24:54] <omegatron> NRK: https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Optimize-Options.html
[20:25:05] *** Joins: Pentode (~Pentode@mobile-166-171-56-175.mycingular.net)
[20:25:39] *** Joins: rsjw (~quassel@user/rsjw)
[20:28:00] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:28:04] *** Quits: liba (~liba@user/liba) (Ping timeout: 250 seconds)
[20:28:08] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:29:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[20:30:15] *** Joins: mrig (~mrig@user/mrig)
[20:30:47] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[20:32:45] <sham1> ,c99 footnote82
[20:32:45] <candide> No such text 'footnote82' found in C99 Draft Standard (n1256).
[20:32:55] <sham1> How does one refer to footnotes
[20:32:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:32:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:32:57] *** Joins: wroathe (~wroathe@user/wroathe)
[20:33:05] *** Joins: Iarfen (~quassel@181.43.58.247)
[20:33:39] <pragma-> ,c99 footnote.82
[20:33:39] <candide> http://www.iso-9899.info/n1256.html#FOOTNOTE.82 If the member used to access the contents of a union object is not the same as the member last used to store a value in the object, the appropriate part of the object representation of the value is reinterpreted as an object representation in the new type as described in 6.2.6 (a process sometimes called "type punning"). This might be a trap representation.
[20:33:49] <sham1> Alright
[20:34:12] <KillerWasp> in C you can use *Stat::Hello_world() {}
[20:34:14] <sham1> No
[20:34:22] <sham1> That's clearly C++
[20:34:37] <KillerWasp> yes, more like (*Stat::Hello_world)()
[20:34:44] <pragma-> You can't use :: in C at all.
[20:34:46] <megaTherion> C has no namespaces
[20:35:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[20:35:14] <NRK[m]> "libname_" says hello
[20:35:14] <KillerWasp> You cannot use functions in the structure, but you can use pointers to functions.
[20:35:37] <KillerWasp> like: struct XXX{void(*function)();};
[20:35:43] <rcf> You can call a function through a pointer, yes. You just can't call it Stat::Hello_world
[20:36:08] <KillerWasp> rcf: yes
[20:37:01] <KillerWasp> "*Stat::Hello_world() {}" you can use it where: "struct XXX{void*(*function)();};"
[20:37:54] <KillerWasp> then you need change the value Hello_world pointer.
[20:38:16] <pragma-> Why is it X-rated in C?
[20:38:36] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Remote host closed the connection)
[20:38:39] <pragma-> Why on earth are you changing Stat to XXX and Hello_world to function?
[20:38:49] <rcf> pragma-: well anything C with :: in the name is a pretty naughty identifier
[20:38:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:39:08] <KillerWasp> pragma-: struct XXX{void*(*function)();}Stat;
[20:39:11] <KillerWasp> better? :)
[20:39:33] <KillerWasp> struct Stat{void*(*function)();};
[20:39:41] <KillerWasp> the before are wrong.
[20:40:13] *** Quits: fe23 (~fe23@2409:8a34:464:4990:29b5:3a5c:9e96:d0f4) (Quit: fe23)
[20:40:17] <KillerWasp> i change to XXX like working for any name of structure.
[20:40:20] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[20:40:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:40:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:40:33] *** Joins: wroathe (~wroathe@user/wroathe)
[20:41:02] <pragma-> oh ok
[20:41:04] <NRK[m]> sham1: did the draft vs final version change?
[20:41:10] <NRK[m]> I can't find that footnote
[20:43:08] <KillerWasp> struct Stat{void*(*Hello_world)();};
[20:43:42] <sham1> NRK[m]: well that's the final draft so I don't know
[20:44:25] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[20:45:41] *** Joins: Akiva (~Akiva@user/Akiva)
[20:47:16] *** Parts: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Leaving)
[20:47:53] <NRK[m]> I see it in c11, footnote 95. but on c99 i don't see it.
[20:48:10] <NRK[m]> ,c11 footnote.95
[20:48:10] <candide> http://www.iso-9899.info/n1570.html#FOOTNOTE.95 If the member used to read the contents of a union object is not the same as the member last used to store a value in the object, the appropriate part of the object representation of the value is reinterpreted as an object representation in the new type as described in 6.2.6 (a process sometimes called ``type punning''). This might be a trap representation.
[20:48:13] <KillerWasp> in my code, in the end i use char name[]; in the last member of structure, for use 'malloc()' with the size structure + length of string name.
[20:49:29] <KillerWasp> Something other than using 'malloc' to the structure and then 'malloc' to the 'char *' of the structure.
[20:49:52] <KillerWasp> use 1 malloc instead of 2 mallocs.
[20:50:06] <KillerWasp> (or strdup by the way)
[20:51:11] <sham1> I don't see much benefit, but sure that'll work
[20:54:07] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[20:54:24] *** Joins: vicfred (~vicfred@user/vicfred)
[20:58:48] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:59:31] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[21:00:24] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[21:00:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:00] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[21:05:36] *** Quits: Mentor (~Ionut@92.86.217.127) (Quit: Leaving)
[21:07:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:13:08] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Ping timeout: 250 seconds)
[21:13:19] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:13:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:15:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:16:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:16:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:16:28] *** Joins: wroathe (~wroathe@user/wroathe)
[21:17:21] *** Joins: soul-d (~uknown@user/soul-d)
[21:21:09] *** Joins: deadmund (~ed@155.68.60.155)
[21:21:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:21:34] <deadmund> What do the numbers mean from __cplusplus  e.g., "201703" ?
[21:21:56] <omegatron> is this the c++ channel today ?
[21:22:17] <fizzie> To be fair, the C standard uses a similar scheme in STDC_VERSION or whatever that macro was called.
[21:22:28] <deadmund> Whoops!  Sorry!
[21:22:30] <omegatron> yeah, but still ..  =D
[21:22:32] <deadmund> Is there a #cplusplus?
[21:22:39] <fizzie> There's a #c++
[21:22:40] <deadmund> It's like, empty?
[21:22:46] <deadmund> Right, thanks
[21:22:47] <deadmund> cya!
[21:23:06] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Ping timeout: 250 seconds)
[21:23:09] <fizzie> __STDC_VERSION__, I didn't remember enough underscores.
[21:23:44] <fizzie> ,expand __STDC_VERSION__ // just curious
[21:23:44] <omegatron> the world needs more underscores .. - I wonder how aliens would see us and our "machinery" ..  -_-
[21:23:44] <candide> fizzie:  201710L
[21:24:30] *** Joins: immibis_ (~hexchat@62.156.144.218)
[21:24:34] *** Quits: immibis (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[21:25:01] *** Quits: alch (~alch@151.38.119.90) (Ping timeout: 256 seconds)
[21:26:19] <cryptonector> Q: How to detect presence / absence of an enum type with autoconf?
[21:26:20] <sham1> Why is machinery in quotes
[21:26:32] *** Joins: alch (~alch@151.68.211.90)
[21:26:56] <sham1> cryptonector: probably very similarly to how you'd detect a struct
[21:26:57] <omegatron> because we are not nearly as good with computers as with .. like .. stone-cutting (as a species)  we still suck
[21:27:29] <pragma-> omegatron: Humanity has beamed various forms of data/images/radio signals out into space hoping aliens would decode it and learn about us. It's incredibly optistmic to think that aliens would even come close to using the same data layouts/orientations as us.
[21:27:29] <omegatron> but maybe in another 2000 years ...
[21:27:30] <sham1> Well keep in mind that computers as we know them have only widely existed for 80 years or so. Masonry meanwhile
[21:27:31] <g0z> stone cutting is a lost art (ancient aliens)
[21:27:32] <cryptonector> sham1: hmm, ah ok, ty
[21:27:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:28:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[21:28:49] <sham1> Masonry and stoneworking have existed a lot longer. Of course they're skills that humans are better at
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:25] <g0z> we haven't really improved on the wheel since we made them round instead of square
[21:30:28] <rsjw> omegatron: what copmuter goals do you have that we do not presently meet that would make us qualify as "suck"?
[21:30:37] <omegatron> I mean, look at PHP  or C++  -  for that alone some alien species might want to obliterate us, before it can spread
[21:30:47] *** Joins: ns12 (~ns12@user/ns12)
[21:31:02] *** Quits: deadmund (~ed@155.68.60.155) (Quit: Konversation terminated!)
[21:31:28] <omegatron> (like we would treat someone with antibiotics)
[21:31:57] <g0z> we don't need anyone to obliterate us
[21:33:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a)
[21:33:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a) (Changing host)
[21:33:25] *** Joins: skapata (~Skapata@user/skapata)
[21:33:43] *** Joins: immibis (~hexchat@62.156.144.218)
[21:36:11] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[21:36:31] <veltas> Space C++
[21:37:04] <veltas> Intergalactic Standards Org
[21:38:06] <sham1> It might as well be
[21:38:11] *** Joins: sabry (~sabry@197.37.4.159)
[21:38:51] *** Joins: mikoto-chan (~mikoto-ch@194.157.16.89)
[21:40:12] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[21:42:27] <omegatron> rsjw: is that question of yours meant to make me laugh? as if any computer os + programs would exist, that could satisfy me
[21:42:35] <omegatron> give me a stable kernel like linux, a nice GUI like mac os x 10.8, but please configurable and not as walled garden a programs which actually help me with my work - then we have a deal
[21:42:57] <omegatron> did not happen in the past 45 years and I don't see it to happen in the next
[21:43:16] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[21:43:38] *** Joins: tejr (~tejr@user/tejr)
[21:44:07] <rsjw> that's not a matter of being "good with computers". clearly we are capable of doing that. it's just that the currently available offerings don't offer that
[21:45:00] <omegatron> aha - and what about spectre, meltdown, fdiv-bug et al. ?
[21:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[21:45:14] <rsjw> what about them?
[21:47:40] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:49:12] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[21:49:40] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:50:09] *** Joins: missogra (~missogra@dynamic-095-112-248-047.95.112.pool.telefonica.de)
[21:50:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:50:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:50:17] *** Joins: wroathe (~wroathe@user/wroathe)
[21:51:15] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[21:52:00] *** Joins: tejr (~tejr@user/tejr)
[21:52:27] *** Joins: tforever (~Terabyte@78.174.124.153)
[21:53:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:55:25] *** Joins: Satin (uid193953@user/Seten)
[21:55:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:55:57] *** Joins: sabry84 (~sabry@197.37.4.159)
[21:56:34] *** Quits: sabry84 (~sabry@197.37.4.159) (Client Quit)
[21:57:46] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:00:31] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[22:04:26] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[22:04:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 250 seconds)
[22:04:48] *** Joins: diiirt (~diiirt@user/diiirt)
[22:05:15] *** Joins: xqt (~xqt@user/xqt)
[22:06:48] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:08:36] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:08:54] *** Joins: tejr (~tejr@user/tejr)
[22:09:23] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:09:38] *** Quits: tforever (~Terabyte@78.174.124.153) (Quit: Segmentation fault (core dumped))
[22:09:54] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[22:10:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:10:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:10:39] *** Joins: wroathe (~wroathe@user/wroathe)
[22:13:44] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:14:06] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[22:15:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:17:32] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[22:19:14] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:21:09] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Ping timeout: 268 seconds)
[22:21:31] *** Quits: missogra (~missogra@dynamic-095-112-248-047.95.112.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:26:14] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[22:27:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:27:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:27:44] *** Joins: wroathe (~wroathe@user/wroathe)
[22:31:20] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[22:32:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[22:33:50] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:34:29] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:36:13] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[22:36:29] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:38:15] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:38:28] *** Joins: Narrat (~omnius@p200300df5f129c2006ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:42:10] *** Joins: lais (~lais@110.red-88-21-181.staticip.rima-tde.net)
[22:42:40] *** Joins: teut (~teut@2401:4900:1c68:6b85:827:8b5f:2dc7:4cd1)
[22:44:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[22:45:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:46:59] *** Joins: xqt (~xqt@user/xqt)
[22:49:40] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[22:51:05] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[22:51:43] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[22:56:23] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[22:56:41] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:56:50] *** Joins: fstd_ (~fstd@xdsl-87-78-21-185.nc.de)
[22:58:04] *** Joins: Senicar5 (~Senicar@gateway/tor-sasl/senicar)
[22:59:04] <johnjaye> omegatron: linux kernel plus macos interface? begone with ye
[22:59:05] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[22:59:20] <johnjaye> such dreams are about as likely to be realized as the fabled sugar-candy mountain
[22:59:28] <johnjaye> where cigarettes grow from cigarette trees
[22:59:39] *** Quits: mahmutov (~mahmutov@5.176.54.223) (Ping timeout: 256 seconds)
[22:59:39] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[23:00:04] *** Joins: mahmutov (~mahmutov@5.176.54.223)
[23:00:08] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[23:00:08] *** Senicar5 is now known as Senicar
[23:00:13] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Ping timeout: 256 seconds)
[23:00:13] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:00:57] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[23:01:11] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 256 seconds)
[23:01:13] <johnjaye> oh my bad. it's "Big rock-candy mountain" with the cigarette trees
[23:01:22] *** Joins: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:01:28] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Ping timeout: 250 seconds)
[23:02:04] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:02:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[23:03:10] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[23:03:14] *** Joins: Cyp_ (~cyp@213.237.85.9)
[23:03:15] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[23:03:33] *** Joins: xse (~xse@user/xse)
[23:04:01] *** Quits: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:04:01] *** Quits: Cyp (~cyp@213.237.85.9) (Ping timeout: 256 seconds)
[23:04:08] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[23:04:25] *** Joins: xse (~xse@user/xse)
[23:12:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[23:13:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:19:03] *** Quits: WAR10CK (~WAR10CK@14.223.183.93) (Remote host closed the connection)
[23:19:07] *** Quits: Darkcoal (~user@139.64.2.214) (Quit: Darkcoal)
[23:19:29] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[23:19:38] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Client Quit)
[23:20:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[23:21:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:21:57] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[23:24:30] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:24:30] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[23:24:52] *** Quits: mahmutov (~mahmutov@5.176.54.223) (Ping timeout: 250 seconds)
[23:26:34] <sham1> Linux kernel plus macos interface. Well, the interface can be built. The problem really is more that you can't get applications that well coordinated. And that's just because MacOS is a walled garden in a way and GNU+Linux is not
[23:26:48] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[23:26:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:27:03] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[23:27:28] *** Quits: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 250 seconds)
[23:28:26] *** Joins: mahmutov (~mahmutov@37.155.38.179)
[23:28:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:29:50] *** Joins: seninha_ (~seninha@user/seninha)
[23:29:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[23:30:04] <omegatron> i'm not talking about something silly, like "oh i want to run my mac application natively on linux" - if I wanted that, I would use a VM on my linux machine ; the underlying libraries, which are important for a good GUI (such as font rendering etc.) are good - but the finishing touch, the highest layer, where I as human interact is only mediocre
[23:31:13] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[23:31:50] <omegatron> I guess no one here in this channel has ever bothered to read the Apple Human Interface Guidelines (at least back between 1999 and 2012 - when Apple engineers actually followed them) - they put a lot of effort into that huge document
[23:32:02] <johnjaye> no i have not
[23:32:38] <omegatron> if you have time, try to find a version from that timeframe and look for yourself
[23:33:09] <johnjaye> i'm in the terminal. so i probably can't view any images. lol
[23:33:14] <johnjaye> but when i turn on my mac i will
[23:33:42] <omegatron> and yes, of course there were things that still sucked back then in mac os x, but the overall usability was still better than today linux guis
[23:34:30] <omegatron> but meh - it's just my opinion - and yes, i'm quite alone with that
[23:34:39] *** Parts: craekz (~craekz@user/craekz) ()
[23:35:21] <sham1> Well the thing is that the Apple stuff was designed by designers. Linux UIs by engineers
[23:35:31] <omegatron> ding ding ding
[23:35:59] <rcf> Which is both a blessing and a curse.
[23:36:14] <omegatron> and since I am coming from both worlds and like using a nice and well thought-of gui ..
[23:36:54] <omegatron> hence, a linux with all its confuguration options and a look-and-fell of mac os x 10.8.x would be great for me
[23:37:07] <rcf> On one hand they will want to polish things. On the other hand they may put aesthetics (and constant changing tastes) above all else.
[23:37:57] <sham1> Like for me as an engineer-minded person I do like the UIs in offer because they do what I like
[23:37:58] <omegatron> that's why I stopped with mac os 10.8.x - after that, it became silly and apple's own engineers didn't follow the HIGs
[23:38:11] <sham1> But I do certainly understand that there are some usability problems
[23:38:52] <johnjaye> what changed in 10.8?
[23:39:16] <omegatron> question is, what changed after 10.8 - well, the UI became unusable for me
[23:39:57] <sham1> Like for me, Emacs represents one of my ideal UI paradigms
[23:40:44] <omegatron> and many other things, like SIP (System Integrity Protection) which doesn't let me do stuff with MY machine, just because apple thinks they know better
[23:41:29] <sham1> I mean then again, that's a part of the HIG
[23:42:22] <omegatron> besides, it was that time, when they renamed themselves from Apple Computer to just Apple - so, it was clear to me, that my kind is not their customer anymore
[23:42:27] *** Joins: arinov (~arinov@213.194.126.155)
[23:42:50] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[23:43:22] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:44:49] *** Quits: seninha_ (~seninha@user/seninha) (Ping timeout: 256 seconds)
[23:45:16] <omegatron> but i'm working in my free time on a linux/mac hybrid as outlined .. not knowing, if it will ever be finished  =D
[23:46:02] *** Quits: sabry (~sabry@197.37.4.159) (Quit: Client closed)
[23:47:13] *** Joins: xqt (~xqt@user/xqt)
[23:48:18] <johnjaye> hmm. what's that NS window setting i had to google for before?
[23:48:27] <johnjaye> it was something about not being able to click and drag windows on macos
[23:51:11] *** Joins: seninha (~seninha@user/seninha)
[23:51:44] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[23:52:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:56:38] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[23:59:52] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
