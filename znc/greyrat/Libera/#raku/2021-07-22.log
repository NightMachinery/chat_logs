[00:01:14] *** Joins: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se)
[00:06:23] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[00:20:32] *** Quits: Manifest0 (~Manifest0@49-nat1-1.centrio.cz) (Quit: WeeChat 3.2)
[00:35:05] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[00:51:10] *** Quits: squashable6 (~squ-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[01:09:41] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:43:30] *** Quits: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se) (Ping timeout: 240 seconds)
[01:48:25] *** Quits: ecocode_ (uid500572@id-500572.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:15] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[02:53:09] *** Joins: Doc_Holliwould (~holli@dslb-084-059-122-215.084.059.pools.vodafone-ip.de)
[02:56:48] *** Quits: Doc_Holliwood (~holli@dslb-084-059-122-215.084.059.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[02:57:36] *** Joins: Doc_Holliwood (~holli@dslb-084-059-122-215.084.059.pools.vodafone-ip.de)
[02:59:16] *** Quits: Doc_Holliwould (~holli@dslb-084-059-122-215.084.059.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:37:38] <tbrowder> Altreus: i'm pretty sure the late adding of kebab-casing is the major reason. i remember after the Christmas release seeing @jnthn saying something like, "oh, yes, we can use kebab case now to change this core thing."
[03:44:51] *** Quits: Juerd (juerd@computervrede.nl) (Quit: Juerd)
[03:45:13] *** Joins: Juerd (juerd@computervrede.nl)
[03:52:46] *** Joins: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se)
[04:06:29] <[Coke]> are the methods you're referring to with underscore also ALL_CAPS?
[04:06:41] <[Coke]> if so, it's the caps that's the difference.
[04:10:58] *** Quits: japhb (~geoff@mugs/japhb) (Quit: leaving)
[04:13:14] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 255 seconds)
[04:13:18] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 258 seconds)
[04:14:05] *** Joins: japhb (~geoff@mugs/japhb)
[04:22:04] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:23:05] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:27:50] <raydiak> I think it was more about metamethods
[04:28:02] <raydiak> m: say "".HOW.^methods¬ª.name.grep(/_/)
[04:28:02] <camelia> rakudo-moar ac92caa82: OUTPUT: ¬´(new_type add_fallback role_typecheck_list is_composed setup_junction_fallback find_method_fallback has_fallbacks set_pun_source is_pun pun_source set_name set_shortname set_why set_language_version set_language_revision set_ver set_auth set_api add_s‚Ä¶¬ª
[04:57:54] *** Quits: MasterDuke (~MasterDuk@176.248.62.150) (Ping timeout: 240 seconds)
[05:32:37] *** Quits: Util_ (~bruce@047-013-182-182.res.spectrum.com) (Ping timeout: 245 seconds)
[05:35:00] *** Joins: yewscion (~yewscion@2601:547:a01:2900::a967)
[05:47:59] *** Quits: Doc_Holliwood (~holli@dslb-084-059-122-215.084.059.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[05:51:42] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de)
[05:52:27] *** Quits: xinming_ (~xinming@115.219.33.53) (Ping timeout: 268 seconds)
[05:54:21] *** Joins: xinming_ (~xinming@115.219.33.56)
[06:46:08] *** Joins: frost (~frost@59.71.241.179)
[07:33:24] *** Joins: Eddward__ (~Eddward@207.138.204.132)
[07:35:45] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 250 seconds)
[08:29:35] *** Joins: Util (~bruce@047-013-182-182.res.spectrum.com)
[08:47:31] *** Joins: cornett (~ben@149.28.239.26)
[09:02:18] *** Quits: yewscion (~yewscion@2601:547:a01:2900::a967) (Ping timeout: 240 seconds)
[09:30:56] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[10:07:01] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[10:10:52] <mykhal> oh, this btw addresses my .^methods>>.gist problem
[10:11:30] *** xinming_ is now known as xinming
[10:11:39] <mykhal> oh not, "" is not "".HOW, good morning, where is my coffee
[10:22:49] <mykhal> u: coffee
[10:22:51] <unicodable6> mykhal, Found nothing!
[10:23:30] <mykhal> u: beverage
[10:23:30] <unicodable6> mykhal, U+2615 HOT BEVERAGE [So] (‚òï)
[10:23:30] <unicodable6> mykhal, U+1F9C3 BEVERAGE BOX [So] (üßÉ)
[10:34:31] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:37:58] <mykhal> u: tea.*cup
[10:37:59] <unicodable6> mykhal, U+0074 LATIN SMALL LETTER T [Ll] (t)
[10:37:59] <unicodable6> mykhal, U+0065 LATIN SMALL LETTER E [Ll] (e)
[10:37:59] <unicodable6> mykhal, 8 characters in total (tea.*cup): https://gist.github.com/6345a7f17c2aef91628f5bd61bbfa966
[10:38:54] <mykhal> u: tea cup
[10:38:54] <unicodable6> mykhal, U+1F375 TEACUP WITHOUT HANDLE [So] (üçµ)
[11:08:22] *** Joins: frost (~frost@59.71.241.179)
[11:17:46] *** Joins: ufobat__ (~martin@dynamic-077-004-170-033.77.4.pool.telefonica.de)
[11:20:30] *** Quits: Eddward__ (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[11:22:21] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[11:23:27] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[11:25:36] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:30:13] *** Joins: MasterDuke (~MasterDuk@176.248.62.150)
[11:33:17] *** Joins: ufobat_ (~martin@dynamic-095-115-007-035.95.115.pool.telefonica.de)
[11:37:00] *** Quits: ufobat__ (~martin@dynamic-077-004-170-033.77.4.pool.telefonica.de) (Ping timeout: 252 seconds)
[11:39:55] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:15:31] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[12:26:29] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Read error: Connection reset by peer)
[12:33:26] *** Joins: yewscion (~yewscion@2601:547:a01:2900::a967)
[12:41:17] *** Quits: yewscion (~yewscion@2601:547:a01:2900::a967) (Ping timeout: 255 seconds)
[12:44:59] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[12:46:50] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de)
[13:35:59] <Altreus> kebab case :D
[13:36:02] <Altreus> forgot that term
[13:36:34] *** Quits: pony (~ed@168.138.14.60) (Quit: WeeChat 2.8)
[13:40:44] *** Quits: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Read error: Connection reset by peer)
[13:42:29] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[13:52:01] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[13:53:06] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:07:35] *** Joins: frost (~frost@59.71.241.179)
[15:07:36] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:10:22] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:24:27] <Geth> ¬¶ doc: mykhal++ created pull request #3920: Uniname examples fix/update
[15:24:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3920
[15:29:16] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[15:33:55] <Geth> ¬¶ doc: 01f5970c1e | (Michal Bozon)++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Type/Cool.pod6
[15:33:55] <Geth> ¬¶ doc: Uniname examples fix/update
[15:33:56] <Geth> ¬¶ doc: 
[15:33:56] <Geth> ¬¶ doc: This fixes routine examples' excessive nested quoting;
[15:33:56] <Geth> ¬¶ doc: longest uniname probably from older data, current one is 6 chars longer.
[15:33:56] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/01f5970c1e
[16:07:24] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:07:44] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:09:24] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:09:43] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:11:23] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:11:43] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:13:23] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:13:52] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:15:32] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:15:51] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:19:32] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:19:51] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:21:50] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:22:09] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:23:49] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:24:08] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:25:48] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:26:07] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:27:47] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:28:06] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[16:28:07] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:32:46] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[17:09:09] *** Quits: Altai-man (~koto@94.142.239.45) (Remote host closed the connection)
[17:09:26] *** Joins: Altai-man (~koto@94.142.239.45)
[17:17:48] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[17:27:34] *** Quits: perryprog (~perryprog@159.203.92.156) (Quit: sin(2œÄ¬†350t) + sin(2œÄ 440t). Bouncer didn't bounce.)
[17:28:44] *** Quits: avuserow (~ak@205.178.97.166) (Ping timeout: 265 seconds)
[17:28:53] *** Joins: perryprog (~perryprog@159.203.92.156)
[17:45:46] *** Joins: leedo_ (~leedo@45.79.148.143)
[17:48:16] *** Joins: m_athias (~mathias@comm.detonation.org)
[17:48:44] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Ping timeout: 255 seconds)
[17:48:44] *** Quits: leedo (leedo@2600:3c03::f03c:91ff:fe91:982f) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: m_athias1 (~mathias@comm.detonation.org) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 255 seconds)
[17:49:34] *** Joins: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[17:50:09] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[17:55:19] *** Joins: avuserow (~ak@205.178.97.166)
[18:11:54] *** Joins: Eddward__ (~Eddward@207.138.204.132)
[18:35:02] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[18:55:06] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de)
[19:09:32] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:18:27] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 265 seconds)
[19:45:29] *** Joins: MoC (~moc@user/moc)
[20:10:39] *** Joins: melezhik (~melezhik@c-98-198-98-197.hsd1.tx.comcast.net)
[20:11:11] <melezhik> if someone needs an html to pdf converter, I have it on Raku - https://sparrowhub.io/plugin/weasyprint/0.000001
[20:12:27] <melezhik> a full example form markdown to pdf would be  - https://github.com/melezhik/cv/blob/master/.tom/markdown-to-pdf.pl6
[20:50:44] <melezhik> weekly: https://www.reddit.com/r/rakulang/comments/oph7r2/sparrow_plugin_to_convert_markdown_to_pdf/
[20:50:44] <notable6> melezhik, Noted! (weekly)
[20:53:14] *** Quits: melezhik (~melezhik@c-98-198-98-197.hsd1.tx.comcast.net) (Quit: Connection closed)
[20:55:46] <mykhal> m: say (1/2, "1/2", ¬Ω, "¬Ω")>>.&{ try $_.Rat }
[20:55:46] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(0.5 0.5 0.5 Nil)‚ê§¬ª
[21:06:24] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:09:42] <mykhal> I think "¬Ω".Rat should work as well, can't se related open issue, but often miss something
[21:11:35] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 255 seconds)
[21:15:46] *** Quits: ufobat_ (~martin@dynamic-095-115-007-035.95.115.pool.telefonica.de) (Ping timeout: 240 seconds)
[21:52:40] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[21:59:26] <Altreus> I concur fwiw
[21:59:40] <Altreus> It seems more astonishing that it doesn't
[22:08:40] <mykhal> so I've made new https://github.com/rakudo/rakudo/issues/4475 : Unicode fraction strings .Rat, like "¬Ω".Rat, fail
[22:11:19] <mykhal> (sorry for just complaining, not sufficient Perl/Raku/nqp hacker to fix it)
[22:11:38] <Geth> ¬¶ doc: mustafaaydn++ created pull request #3921: using chaining operators in comparison
[22:11:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3921
[22:13:01] <Geth> ¬¶ doc: 1cc78fdbb0 | (Mustafa Aydƒ±n)++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Language/functions.pod6
[22:13:01] <Geth> ¬¶ doc: using chaining operators in comparison
[22:13:01] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1cc78fdbb0
[22:13:04] <linkable6> Link: https://docs.raku.org/language/functions
[22:13:15] <tbrowder> howdy, i need help with a sorting sub for Raku's sort routine. i need to sort a list of id strings which look like decimal numbers but don't sort like them. for example, in desired sorted order <1 1.1 1.10  2 2.1 2.3 2.30>
[22:14:59] <tbrowder> i have tried defining a sub that compares the pieces before and after the decimal point, if any, but how do i return the correct pair as a seq?
[22:16:18] <tbrowder> just list the two values as a list in the correct order? or ?
[22:19:09] <Altreus> m: sort(~*, <1 1.1 1.10  2 2.1 2.3 2.30>)
[22:19:09] <camelia> rakudo-moar b4d33982a: ( no output )
[22:19:38] <Altreus> oh duh
[22:19:48] <Altreus> m: <1 1.1 1.10  2 2.1 2.3 2.30>.sort(~*)
[22:19:48] <camelia> rakudo-moar b4d33982a: ( no output )
[22:19:58] <Altreus> oh it's not sort-by is it
[22:20:26] <Altreus> m: <1 1.1 1.10  2 2.1 2.3 2.30>.sort({ $^a cmp $^b })
[22:20:27] <camelia> rakudo-moar b4d33982a: ( no output )
[22:20:38] <Altreus> m: say <1 1.1 1.10  2 2.1 2.3 2.30>.sort({ $^a cmp $^b })
[22:20:38] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1 1.1 1.10 2 2.1 2.3 2.30)‚ê§¬ª
[22:20:46] <Altreus> ok thanks brain
[22:20:52] <Altreus> tbrowder: I got there in the end but that appears to be just string sort
[22:22:23] <tbrowder> duh, i didn't try cmp!! thnx
[22:23:18] <Altreus> :) fresh eyes
[22:29:15] <tbrowder> nope, i didn't give a good example (unless my eyes are bad)
[22:30:49] <tbrowder> m: say <1.10 1.1>.sort({$^a cmp ^$b}))
[22:30:50] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$b' is not declared‚ê§at <tmp>:1‚ê§------> 3say <1.10 1.1>.sort({$^a cmp ^7‚èè5$b}))‚ê§¬ª
[22:31:53] <tbrowder> m: say <1.10 1.1>.sort({$^a cmp $^b})
[22:31:53] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1.1 1.10)‚ê§¬ª
[22:32:10] <tbrowder> hm?
[22:33:36] <tbrowder> ok, once more...
[22:34:35] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:34:43] <tbrowder> m: say <4.3 4.10>.sort({$^a cmp $^b})
[22:34:43] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(4.10 4.3)‚ê§¬ª
[22:35:15] <tbrowder> i want 4.3, 4.10 as the order
[22:35:52] <Altreus> ah, because 3 < 10
[22:36:15] <tbrowder> yes, so i need a sort sub to first compare the integer, then the decimal, if any
[22:36:55] <tbrowder> so how should i arrange the result to return after the parts are considered?
[22:37:07] <Altreus> say <4.3 4.10>.sort({$^a.Int <=> $^b.Int || ($^a - $^a.Int) <=> ($^b - $^b.Int) })
[22:37:07] <evalable6> Altreus, rakudo-moar b4d33982a: OUTPUT: ¬´(4.10 4.3)‚ê§¬ª
[22:37:12] <Altreus> er
[22:37:44] <Altreus> I fully expected that to work
[22:37:54] <tbrowder> i think yr close
[22:38:12] <Altreus> m: say { $^a - $^a.Int }(4.3)
[22:38:12] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´0.3‚ê§¬ª
[22:38:31] <Altreus> m: say { ($^a - $^a.Int) <=> ($^b - $^b.Int) }(4.10, 4.3)
[22:38:31] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´Less‚ê§¬ª
[22:38:34] <Altreus> oh
[22:38:39] <Altreus> it's not -1, 0, 1
[22:38:53] <Altreus> m say so 4 <=> 4
[22:38:55] <Altreus> m: say so 4 <=> 4
[22:38:55] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´False‚ê§¬ª
[22:39:00] <Altreus> m: say so 4 <=> 5
[22:39:01] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´True‚ê§¬ª
[22:39:03] <Altreus> m: say so 4 <=> 3
[22:39:03] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´True‚ê§¬ª
[22:39:09] <tbrowder> use cmp?
[22:39:17] <tbrowder> on the pieces
[22:39:19] <Altreus> say <4.3 4.10>.sort({ ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) })
[22:39:19] <evalable6> Altreus, rakudo-moar b4d33982a: OUTPUT: ¬´(4.10 4.3)‚ê§¬ª
[22:39:38] <Altreus> hein, it should be equivalent at this point
[22:39:59] <Altreus> m: say { ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) }(4.3, 4.10)
[22:39:59] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´More‚ê§¬ª
[22:40:14] <Altreus> that's correct :/
[22:40:15] <Altreus> 4.10 is more
[22:40:36] <Altreus> m: say { ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) }(<4.3 4.10>)
[22:40:36] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´Too few positionals passed; expected 2 arguments but got 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[22:40:43] <Altreus> heh
[22:40:47] <tbrowder> use ternary operator?
[22:40:50] <Altreus> m: say { ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) }(|<4.3 4.10>)
[22:40:50] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´More‚ê§¬ª
[22:41:17] <Altreus> but the sub is correct :\
[22:41:22] <Altreus> that's the right answer!
[22:41:35] <Altreus> but sort is doing it backwards
[22:41:47] <Altreus> m: say { ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) }(|<4.10 4.3>)
[22:41:48] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´Less‚ê§¬ª
[22:41:49] <MasterDuke> just stick a .reverse on the end
[22:42:07] <MasterDuke> or put the $^b first
[22:42:19] <Altreus> but the sub is correct
[22:42:28] <Altreus> Why is sort reversing it in the first place?
[22:43:33] <Altreus> m: sub weirdsort {  ($^a.Int <=> $^b.Int) || ($^a - $^a.Int) <=> ($^b - $^b.Int) }; say <1 1.10 1.1 1.2 1.3 1.30>.sort(&weirdsort)
[22:43:33] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1 1.10 1.1 1.2 1.3 1.30)‚ê§¬ª
[22:44:29] <Altreus> m: sub weirdsort {  $^a.Int == $^b.Int ?? ($^a - $^a.Int) <=> ($^b - $^b.Int) !! $^a.Int <=> $^b.Int }; say <1 1.10 1.1 1.2 1.3 1.30>.sort(&weirdsort)
[22:44:29] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1 1.10 1.1 1.2 1.3 1.30)‚ê§¬ª
[22:44:43] <Altreus> ok I'm hooked, time to debug offline
[22:45:17] <Altreus> ohhh
[22:45:21] <Altreus> idiot
[22:45:31] <Altreus> $^a - $^a.Int is not remotely useful :D
[22:45:35] <tbrowder> ;-D that's why i need a complex example in the docs!
[22:46:13] <tbrowder> util helped, but still not complex enough
[22:46:41] <Altreus> m: sub weirdsort {  ($^a.Int <=> $^b.Int) || (S/ .+ '.' // given $^a) <=> (S/ .+ '.' // given $^b) }; say <1 1.10 1.1 1.2 1.3 1.30>.sort(&weirdsort)
[22:46:42] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1 1.1 1.2 1.3 1.10 1.30)‚ê§¬ª
[22:46:57] <Altreus> I was still comparing 0.3 and 0.10
[22:47:00] <Altreus> instead of 3 and 10
[22:47:39] <Altreus> so yeah you do have to cut it up cos there's no sensible mathematical thing that means "turn the part after the radix point into an integer of arbitrary magnitude" :D
[22:49:36] <tbrowder> ok, so if i do that in my own simple way, how do i, in the sub, delare that one of the two is greater than the other for the return value?
[22:49:49] <tbrowder> *declare
[22:50:10] <Altreus> I suppose you just do return More; return Less; return Same;
[22:50:16] <Altreus> m: say 4 <=> 4
[22:50:16] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´Same‚ê§¬ª
[22:50:53] <Altreus> Referring to $^b
[22:51:03] <Altreus> so you'd say More if $^b is bigger
[22:51:14] <tbrowder> i'll try that, thnx!
[22:52:54] <tbrowder> this is all bringing back old c++ memory, i should have looked more closely at the cmp operator in docs
[22:53:26] <tbrowder> (or perl memory)
[23:02:00] <Altreus> yeah mostly perl tricks here
[23:02:08] <Altreus> the || trick in a sort is very useful
[23:02:19] <Altreus> to stack up sub-groups
[23:18:06] <mykhal> tbrowder , Altreus : weird, but looks like version numbers
[23:18:19] <mykhal> m: say <1 1.10 1.1 1.2 1.3 1.30>>>.Version.sort
[23:18:20] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(v1 v1.1 v1.2 v1.3 v1.10 v1.30)‚ê§¬ª
[23:19:15] <tbrowder> mykhal: thnx
[23:20:27] <MasterDuke> m: say <1 1.10 1.1 1.2 1.3 1.30>.sort(*.Version)
[23:20:27] <camelia> rakudo-moar b4d33982a: OUTPUT: ¬´(1 1.1 1.2 1.3 1.10 1.30)‚ê§¬ª
[23:25:10] <mykhal> nice. btw, also GNU sort can do this, with -V
[23:34:35] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:34:35] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:34:54] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:37:22] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[23:50:46] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
