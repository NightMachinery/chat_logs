[00:00:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[00:01:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:02:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[00:05:10] <foo> CoJaBo: ha. I thought it worked when I Tried
[00:05:43] <CoJaBo> It defies the laws of physics and logic
[00:08:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[00:09:45] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:12:42] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 265 seconds)
[00:13:49] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:17:20] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Remote host closed the connection)
[00:17:32] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:20:33] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:21:28] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:21:30] *** Joins: node1 (~node1@user/node1)
[00:21:59] *** Joins: Northwoods (~Northwood@202.14.122.53)
[00:27:39] *** Joins: xsperry (~xs@user/xsperry)
[00:29:21] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[00:30:06] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:30:41] *** Quits: niso- (~niso-@2a02:1205:c690:ca10:74c4:639c:eca3:befc) (Read error: Connection reset by peer)
[00:34:39] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Remote host closed the connection)
[00:34:58] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450)
[00:35:22] <ThePendulum> looking at a memory dump, it has loads of Uint8Arrays, is there any way of figuring out where they came from?
[00:40:17] *** Joins: alystair (~alystair@user/alystair)
[00:44:58] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5d0:a6ae:7dfd:1450) (Read error: Connection reset by peer)
[00:45:04] *** Joins: N4buc0- (~N4buc0@187.112.170.220)
[00:45:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:45:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:45:53] *** Joins: wroathe (~wroathe@user/wroathe)
[00:46:11] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 245 seconds)
[00:47:54] <ThePendulum> they seem to be recursive
[00:51:06] *** Joins: Guest50 (~Guest50@46.109.76.104)
[00:53:04] <Maxdamantus> ThePendulum: there should be some "references" or something visible for each allocation.
[00:53:20] * Maxdamantus looks at a Firefox heap dump.
[00:55:24] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:55:26] <Maxdamantus> In Firefox if you look at the "Aggregate" view, you can see references when expanding the "Group".
[00:55:52] <ThePendulum> what kind of information does it show there? all I can really see is 'wrapped in Node / SimpleWriteWrap'
[00:55:56] <Maxdamantus> can also see a full path of references to GC roots in the "Dominators" view.
[00:58:23] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[00:59:06] <Maxdamantus> Hmm .. I don't really like this tool in Firfox.
[01:00:26] *** Joins: han-solo (~han-solo@user/han-solo)
[01:01:10] *** Quits: N4buc0- (~N4buc0@187.112.170.220) (Quit: Leaving)
[01:02:50] <Maxdamantus> I think Chromium's one is a bit easier to use. If you find your object in "All objects", you should see all the references for that specific object in "Retainers".
[01:03:54] <Maxdamantus> and when it shows objects in that retainers view, it's easier to understand what each object is, since it's not trying to aggregate them.
[01:05:20] <ThePendulum> not really sure what to derive from this though https://i.imgur.com/NurjOcd.png
[01:08:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:08:46] <Maxdamantus> Try looking at the 591 reference. The one that's expanded is recursive.
[01:09:08] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:11:22] <Maxdamantus> cyclic, rather.
[01:14:26] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:16:32] <ThePendulum> they all show [13] in (GC) roots @3 and nothing else that I can see
[01:17:03] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:18:28] <Maxdamantus> Maybe if you look at the 591 object in the summary view.
[01:18:45] <Maxdamantus> (by right clicking on the 591 object in the retainers view)
[01:19:27] <Maxdamantus> I'm guessing that 591 object will contain some filename, or at least it should refer to some callback or something.
[01:19:31] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[01:19:47] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:20:09] *** Joins: mickey8 (~user@user/mickey)
[01:21:30] *** Quits: hassoon (hassoon@user/hassoon) (Ping timeout: 268 seconds)
[01:21:32] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[01:23:10] <ThePendulum> 'Cannot find corresponding heap snapshot node' heh
[01:23:36] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[01:23:56] <minall> I need to make a HMAC-SHA256 thingy, so I added scripts to my page and,  attempted to use CryptoJS, but I get an error of undefined... The steps are 1. Add CND and 2. use functions right?... Or perhaps my page executing the function first and then the CDN finishes, how should I debug this?
[01:24:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[01:24:13] <Maxdamantus> or else maybe just look at one of the `WriteWrap` or `SimpleWriteWrap` nodes (both should basically look the same in the summary view, since they refer to each other)
[01:24:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:75c5:c6ed:c91:17fe) (Read error: Connection reset by peer)
[01:26:46] <ThePendulum> I see a bunch of its methods and prototypes, but I don't really know where it came from
[01:28:51] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[01:29:55] <Maxdamantus> Looking at the source location for `SimpleWriteWrap`, it looks like it's part of some stream. If you're not seeing any obvious references to your own callbacks from it, it could be some leaked file-based resource, in which case you might be able see it in `ls -l /proc/$pid/fd/` if you're using Linux.
[01:32:11] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e02c:76d4:b60e:293) (Quit: Textual IRC Client: www.textualapp.com)
[01:33:50] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 268 seconds)
[01:33:59] *** Joins: mven` (~mven@ip68-104-39-54.lv.lv.cox.net)
[01:35:12] *** Quits: Vyrusxx (~Username@208-122-122-82.t3com.net) (Quit: Vyrusxx)
[01:37:22] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:39:16] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:40:28] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[01:40:43] *** Quits: mven` (~mven@ip68-104-39-54.lv.lv.cox.net) (Remote host closed the connection)
[01:41:58] <ljharb> !browser crypto @ minall
[01:41:58] <jellobot> minall, Don't try to do encryption or cryptography in browser JavaScript. https://web.archive.org/web/20150512024954/http://matasano.com/articles/javascript-cryptography/
[01:44:53] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[01:46:47] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:47:56] <minall> ljharb: Just making the hash for comparison, I do needed but, nothing about users or other
[01:50:41] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[01:50:54] *** Joins: kogepan (~kogepan@user/kogepan)
[01:51:02] <ljharb> minall: a hash of what
[01:54:26] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[01:55:25] *** Joins: whitehot_robot (~whitehot_@cantelope.org)
[01:55:44] *** Parts: whitehot_robot (~whitehot_@cantelope.org) ()
[01:56:08] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 265 seconds)
[01:56:22] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[02:03:15] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[02:03:45] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[02:04:12] *** Quits: nomic (~nomic@185.217.117.51) (Read error: Connection reset by peer)
[02:04:51] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[02:06:37] *** Joins: nomic (~nomic@host86-175-244-130.range86-175.btcentralplus.com)
[02:07:47] *** Joins: xardas (~xardas@149.233.51.127)
[02:12:00] *** Joins: jazzy (~jaziz@user/jaziz)
[02:27:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[02:27:55] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[02:29:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:15] *** Joins: Sal` (~Sal@151.27.54.136)
[02:32:50] *** Quits: pizdets (~pizdets@183.182.110.223) (Ping timeout: 250 seconds)
[02:33:04] <Sal`> hi, I got a function called by a click event and its getting called two times. Is there a way to check why? I'm trying to find something using chrome inspect. The events both come from the same target
[02:33:52] <Sal`> Is there something I can do to check where and why the second event gets fired?
[02:33:55] *** Joins: pizdets (~pizdets@183.182.111.236)
[02:34:51] <phantomotap> Sal`: can you post a simple example somewhere.
[02:34:57] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:35:28] <ljharb> Sal`: because events bubble.
[02:35:33] <ljharb> Sal`: check the event's target
[02:36:19] <Sal`> If i add e.stopPropagation() and e.preventDefault() it doesn't happen, but I can't use these because I have another listener on that click that needs to be called too
[02:36:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[02:36:48] <ljharb> Sal`: you don't want to stop propagation basically ever
[02:37:40] <Sal`> ljharb, I did, they have the same currentTarget and target
[02:37:50] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:37:56] <Sal`> getting crazy on it
[02:38:09] <pavonia> That's an indication the event handler is bound twice
[02:38:19] <ljharb> yup
[02:38:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[02:39:31] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 245 seconds)
[02:39:45] <Sal`> I have two divs like this: <div class="myevent">   and the listeners are $('.myevent').on('click', ....)
[02:40:10] <Sal`> but the the mouse click is only on the first
[02:40:13] <ljharb> Sal`: put the listener on a container of both, and use event delegation.
[02:41:02] <Sal`> hmmm, they're components
[02:41:20] <Sal`> they are to expand/collapse panels
[02:41:32] <pavonia> Do the divs overlap visually?
[02:41:44] <Sal`> and the listener is inside the jquery plugin
[02:42:06] <Sal`> no, they are two menu items
[02:42:33] <pavonia> Are you sure the .on() is not called twice?
[02:42:35] <Sal`> pratically, I have two expandible sub menu
[02:43:01] <Sal`> pavonia, could be
[02:43:34] <Sal`> but the click is on one <a...></a>
[02:46:09] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[02:46:28] *** Joins: remolej (~kenoba@user/kenoba)
[02:46:31] <Sal`> I'll add another menu item with an expandible submenu and see if it gets called three times
[02:46:36] <Sal`> thanks
[02:48:39] *** Quits: Sal` (~Sal@151.27.54.136) (Quit: Leaving)
[02:50:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.36) (Quit: Leaving)
[02:52:08] *** Quits: nomic (~nomic@host86-175-244-130.range86-175.btcentralplus.com) (Ping timeout: 260 seconds)
[02:52:52] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[02:54:37] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[02:58:46] *** Joins: Vyrusxx (~Username@208-122-122-82.t3com.net)
[02:58:50] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[03:00:47] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 268 seconds)
[03:01:52] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[03:03:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[03:03:03] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[03:04:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:06:07] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[03:07:17] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[03:07:21] *** Joins: Talon_ (Talon@172.77.142.59)
[03:07:22] *** Quits: Talon_ (Talon@172.77.142.59) (Client Quit)
[03:08:16] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[03:08:26] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[03:09:31] *** Quits: Talon (~Talon@172.77.107.168) (Ping timeout: 245 seconds)
[03:09:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:13:05] <OhTheCode> if i have a page with various custom fields added dynimically on page load, I'm not using any libraries-React etc, just vanilla javascript. Should I use customElement. I can add all the code that customElement does without the use of it and without creating the Web component for the varous custom fields I have.
[03:15:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[03:18:46] <OhTheCode> i rarely see Web components used in production, in the html code I rarely see something like <my-web-component></my-web-component> with it's code and shadow DOM in between
[03:20:01] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:22:49] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[03:23:03] *** Quits: X-Scale (~ARM@31.22.203.240) (Ping timeout: 250 seconds)
[03:27:32] *** Joins: X-Scale (~ARM@83.223.225.150)
[03:27:58] <systemfault> Because, the Web Component API, like most DOM APIs, is garbage.
[03:28:45] <systemfault> People would rather use frameworks with nice DX like React or VueJS... or be forced to use Angular by their boss
[03:29:09] *** Quits: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 268 seconds)
[03:33:54] <OhTheCode> ok, makes sense, i'll just build web components with a library when I learn it. I was guessing that web components are only build with a framework. Thanks
[03:46:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:48:54] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 268 seconds)
[03:49:39] *** Joins: Talon (Talon@172.77.142.59)
[03:54:02] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:54:02] *** Quits: statico (sid521804@user/statico) (Ping timeout: 240 seconds)
[03:54:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[03:54:45] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[03:55:32] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:56:02] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[03:56:42] *** Joins: statico (sid521804@user/statico)
[03:56:59] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[03:57:02] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:57:08] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[03:57:17] *** Quits: celphi_ (sid97751@user/celphi) (Ping timeout: 250 seconds)
[03:57:24] *** KDev2 is now known as KDev
[03:57:39] <KDev> https://stackblitz.com/edit/react-yq29pr?file=src/App.js how come this re-renders everything when I click the links?
[03:57:49] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Quit: Client closed)
[03:57:51] <KDev> but doing it this way does not? https://stackblitz.com/edit/react-xdfajg?file=src/index.js
[03:57:56] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 265 seconds)
[03:58:02] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 240 seconds)
[03:58:21] <KDev> ReactJS btw. One uses the <Route> JSX syntax, the other uses Route object and useRoute()
[03:58:42] *** Joins: celphi_ (sid97751@helmsley.irccloud.com)
[03:59:05] <ThePendulum> how are you determining it's being rerendered?
[03:59:15] *** Quits: Guest50 (~Guest50@46.109.76.104) (Quit: Connection closed)
[03:59:37] <ThePendulum> oh it's not updating
[03:59:49] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[03:59:59] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:00:09] <ThePendulum> I'm confused now, the one you're saying /does/ re-render is the one not updating for me
[04:02:01] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (Ping timeout: 245 seconds)
[04:02:02] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[04:02:23] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[04:02:26] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[04:02:47] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[04:03:16] *** Quits: ross (sid305269@user/ross) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: notchris (sid181145@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:03:28] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[04:03:50] *** Joins: owlbynight (sid501016@id-501016.tinside.irccloud.com)
[04:05:17] *** Joins: ross (sid305269@user/ross)
[04:05:22] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[04:05:34] *** Joins: remolej (~kenoba@user/kenoba)
[04:06:01] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[04:06:09] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[04:07:40] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[04:08:38] <KDev> Um
[04:08:43] <KDev> I used react profiler on chrome devtools
[04:08:50] <KDev> maybe use these links:
[04:08:55] *** Joins: celphi_ (sid97751@helmsley.irccloud.com)
[04:10:00] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:10:07] <KDev> @ThePendulum, https://react-yq29pr.stackblitz.io/ this always re-renders when you click Home and Cart
[04:10:15] <KDev> Even if you're on home, and you click Home again, it still re-renders
[04:11:30] <KDev> https://react-xdfajg.stackblitz.io/ this one does not re-render the Mainlayout
[04:12:16] <KDev> @ThePendulum, https://i.snipboard.io/5Qxjbp.jpg
[04:12:24] <KDev> using the profiler tool, you can see it shows "not rendered"
[04:12:31] <KDev> "did not render" i mean
[04:12:38] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (Changing host)
[04:12:38] *** Joins: celphi_ (sid97751@user/celphi)
[04:19:07] *** Quits: Vyrusxx (~Username@208-122-122-82.t3com.net) (Quit: Vyrusxx)
[04:20:37] *** Joins: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392)
[04:30:51] <KDev> ahh ThePendulum you're right. I completely missed it. I'll fix it and try again, sorry about that.
[04:32:40] <ThePendulum> I don't think I'm right but I'm glad there's progress
[04:33:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392) (Ping timeout: 240 seconds)
[04:34:30] *** Joins: Vyrusxx (~Username@208-122-122-82.t3com.net)
[04:46:56] *** Joins: ezio (~ezio@user/ezio)
[04:48:42] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[04:49:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:53:44] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:54:15] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[04:56:24] *** Joins: hax (~hax@69.165.175.67)
[04:56:24] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[04:56:24] *** Joins: hax (~hax@user/hax)
[04:59:24] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net)
[05:01:02] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 240 seconds)
[05:02:09] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[05:09:51] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:13:22] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 268 seconds)
[05:13:35] *** Joins: Praise (~Fat@user/praise)
[05:15:26] *** Joins: stenno (~stenno@user/stenno)
[05:15:54] <znf> I have an API that returns the client IP address in JSON, this may be IPv4 or IPv6, sadly the API doesn't tell me one or the other... is there a way to tell one from the other?
[05:16:46] *** Joins: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392)
[05:21:11] *** Quits: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392) (Ping timeout: 245 seconds)
[05:23:24] <Maxdamantus> znf: afaik, IPv6 address formatting always has at least one (or maybe 2) colon in it. IPv4 formatting doesn't have any colon.
[05:23:51] *** Joins: mickey89 (~user@user/mickey)
[05:23:54] <znf> yeah, that would have been the failback/simple way, thought it'd be a more "proper" way
[05:23:56] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c06c:d776:aef2:73eb)
[05:23:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:23:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:23:56] *** Joins: wroathe (~wroathe@user/wroathe)
[05:24:50] *** Joins: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392)
[05:25:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[05:25:08] *** mickey89 is now known as mickey8
[05:27:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:33:14] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net) (Quit: Client closed)
[05:34:32] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[05:37:12] *** Joins: nomic2 (~nomic@185.217.117.132)
[05:37:32] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c06c:d776:aef2:73eb) (Ping timeout: 240 seconds)
[05:37:37] *** nomic2 is now known as nomic
[05:38:52] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[05:42:20] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:b265:e9be:14c6:d1e3) (Ping timeout: 265 seconds)
[05:46:15] <KDev> @ThePendulum, well you were right that the first one was not rendering, I did not notice that. It appears that index: is not correct for setting the index or something in the routes object
[05:46:26] <KDev> Sadly the docs are quite lackluster for the route object so i have no idea how to do it correctly
[05:46:33] <KDev> i'll just need to do it with JSX for now
[05:49:46] *** Quits: federico_it (~textual@151.51.80.240) (Ping timeout: 268 seconds)
[05:52:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:55:56] *** Joins: zebrag (~chris@user/zebrag)
[05:57:11] *** Quits: sylario (uid115390@id-115390.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:59:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c12e:1e58:3b84:ea29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:00:02] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[06:01:27] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[06:04:46] *** Quits: src (~src@user/src) (Quit: Leaving)
[06:05:46] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[06:06:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:07:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392) (Ping timeout: 240 seconds)
[06:09:58] *** Joins: kill (~killown@user/killown)
[06:12:10] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[06:13:42] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:17:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 245 seconds)
[06:18:38] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[06:19:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[06:21:38] *** Joins: Rockwood (~Rocky@user/rocky)
[06:23:41] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[06:31:32] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[06:35:55] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[06:37:56] *** Joins: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392)
[06:40:21] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[06:43:03] *** Parts: Vyrusxx (~Username@208-122-122-82.t3com.net) ()
[06:44:22] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:45:43] *** Joins: ferdna (~ferdna@user/ferdna)
[06:51:29] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[06:54:26] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[06:55:15] <Crash1hd> can anyone explain what this small code does const { useDefault } = data; from what I can tell it assigns data to useDefault but whats the point of the obj {} around useDefault?
[06:56:21] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[06:57:02] <pavonia> It's equivalent to `const useDefault = data.useDetault`
[06:58:17] <pavonia> n> const { foo } = { foo: 123, bar: 456 }; foo
[06:58:19] <jellobot> (okay) 123
[06:58:31] <pavonia> n> const { foo, bar } = { foo: 123, bar: 456 }; [ foo, bar ]
[06:58:31] <jellobot> (okay) [ 123, 456 ]
[06:58:45] <Crash1hd> Ahh ok :)
[06:58:45] <ljharb> Crash1hd: the point is you don't have to repeat `useDefault`, which is a source of bugs.
[06:58:45] <pavonia> n> const { foo, bar, baz } = { foo: 123, bar: 456 }; [ foo, bar, baz ]
[06:58:46] <jellobot> (okay) [ 123, 456, undefined ]
[06:59:03] *** Quits: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392) (Ping timeout: 250 seconds)
[07:00:55] <Rockwood> destructing
[07:01:30] <Crash1hd> Thank you everyone :0
[07:02:52] *** Joins: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392)
[07:04:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:07:13] <znf> creating an element like <p id="id"><code>text</code>(text2)</p> is really a mouthfull in vanilla javascript... so many lines
[07:07:43] <znf> I really miss jQuery sometimes...
[07:08:15] <theskillwithin> https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML
[07:08:41] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[07:11:52] <znf> oh, thank you
[07:12:38] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:13:27] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[07:14:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:147:7dce:14cb:d392) (Ping timeout: 240 seconds)
[07:20:04] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:30:46] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[07:30:56] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:32:51] *** tar_xvf_ is now known as tar_xvf
[07:33:27] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 264 seconds)
[07:33:41] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[07:39:40] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[07:41:07] <ljharb> Crash1hd: destructuring, ftr, not "destructing" which isn't a thing
[07:44:04] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[07:46:43] <Crash1hd> ljharb, thanks :)
[07:49:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[07:50:45] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[07:52:02] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[07:59:44] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:01:01] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[08:01:58] <hax> unenstructurization
[08:03:29] *** Joins: Guest35 (~Guest35@86.32.40.59)
[08:09:06] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:10:54] <lantech19446> is there a preference for else if or switch case in production?
[08:13:42] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[08:18:19] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[08:23:33] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:25:02] *** Joins: silly_ (~silly@user/silly)
[08:25:16] *** Quits: silly_ (~silly@user/silly) (Remote host closed the connection)
[08:29:09] <silly> it's rather unrelated to prod/dev... but
[08:29:14] <silly> !switch @lantech19446
[08:29:14] <jellobot> lantech19446, Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs. See: https://ericleads.wordpress.com/2012/12/11/switch-case-considered-harmful/
[08:29:39] <lantech19446> ok, thank you
[08:29:56] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[08:30:09] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[08:30:41] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:34:20] <hax> I like switch to switch on true
[08:34:37] <hax> that shit makes me happy
[08:35:44] <Maxdamantus> Personally, I'm likely to use `switch` where it is matching on constant values.
[08:36:44] <Maxdamantus> especially when each case just has a simple return, eg, switch(o.type){ case "foo": return o.a + o.b; case "bar": return o.c; default: return impossible(o); }
[08:36:59] <Rockwood> this and that never replace appropriate
[08:37:09] <Rockwood> switch means switch
[08:37:22] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:1436:1167:8c4f:49db)
[08:37:52] <Rockwood> bye cya
[08:38:06] <Maxdamantus> Didn't really understand that, but okay.
[08:40:50] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:41:40] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[08:43:02] *** Joins: minall_ (~minall@186.69.200.119)
[08:43:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[08:43:53] <lantech19446> Maxdamantus: neither did i
[08:44:20] <lantech19446> I only just saw it. How do you add o.a and o.b without ever defining a and b
[08:45:11] <Maxdamantus> lantech19446: they would be defined somewhere else. That sample `switch` code only consumes such an object, doesn't produce one.
[08:45:54] <lantech19446> ok so o.a and o.b are global variables?
[08:46:07] <Maxdamantus> No, they're properties of the `o` object.
[08:46:25] <lantech19446> o ok
[08:46:34] *** Quits: minall (~minall@186.69.200.119) (Ping timeout: 260 seconds)
[08:46:35] *** minall_ is now known as minall
[08:48:21] <Maxdamantus> If you want a more "realistic" example, here's similar code for computing the area of a shape: function area(s){ switch(s.type){ case "rect": return s.width*s.height; case "circle": return Math.PI*Math.pow(s.radius, 2); case "triangle": return s.width*s.height/2; default: return impossible(s); } }
[08:51:29] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:52:19] <lantech19446> interesting, and you actually just taught me something else too. I knew about .length for different things but never knew you could do .height or .width
[08:52:35] <Maxdamantus> You can't.
[08:53:29] <lantech19446> more properties of an object?
[08:53:29] <theskillwithin> lantech19446 pun intended?
[08:53:41] <Maxdamantus> You can only do it on objects that have `.width` and `.height`, just as you can only do `.length` on objects that have `.length` defined.
[08:53:43] <silly> lantech19446, which object?
[08:54:07] <Maxdamantus> n> const o = { foo: "bar"; } o.length; @ lantech19446
[08:54:09] <jellobot> lantech19446, SyntaxError: Unexpected token ';'
[08:54:29] <lantech19446> Maxdamantus: right but i didn't know it was possible at all that's what i was saying
[08:54:30] <Maxdamantus> n> const o = { foo: "bar"; }; o.length; @ lantech19446
[08:54:31] <jellobot> lantech19446, SyntaxError: Unexpected token ';'
[08:54:39] <Maxdamantus> n> const o = { foo: "bar" }; o.length; @ lantech19446
[08:54:40] <jellobot> lantech19446, undefined
[08:54:56] <silly> n> const o = { texture: "soft", taste: 'yummy' }; o
[08:54:56] <lantech19446> you know you just sent it with .length 3 times?
[08:54:57] <jellobot> (okay) { texture: 'soft', taste: 'yummy' }
[08:54:59] <ljharb> hax: switch is gross and switch on true is one of the grossest forms of it
[08:55:03] <Maxdamantus> lantech19446: okay, well on the object above, you can use `.foo`.
[08:55:33] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[08:55:46] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[08:55:50] <silly> n> const o = { texture: "soft", taste: 'yummy' }; o.smell
[08:55:51] <jellobot> (okay) undefined
[08:56:15] <silly> but i like .length too
[08:56:50] <lantech19446> i think i understand what you're saying, I'm still really bad at reading js I'm much more proficient with html and css
[08:59:15] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[08:59:18] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:59:56] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[08:59:57] <hax> I don't know of a reason not to use switch (true) other than people having an aversion to it, and people saying "everyone hates it"
[09:01:41] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[09:01:45] <hax> like on dev.to "Even though it works, this is considered bad practice."
[09:02:24] <lantech19446> god i'm gonna have to completely rewatch the section on loops i don't understand it at all when given problems to solve
[09:02:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:02:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:02:30] *** Joins: wroathe (~wroathe@user/wroathe)
[09:03:07] <lantech19446> hax: I only know what i've learned so far and that's not enough to have an opinion that's why i ask a ton of questions here
[09:04:08] <hax> what are you using to learn?
[09:05:24] <lantech19446> a massive course on udemy
[09:05:39] *** Joins: SteveR (~SteveR@103.215.168.1)
[09:05:42] <lantech19446> it's like 55.5 hours supposed to take me from beginner to expert
[09:05:56] <lantech19446> not that i believe i'll be an expert at the end but hopefully acceptable
[09:06:04] <silly> junior was yesterday
[09:06:22] <lantech19446> what do you mean silly ?
[09:06:45] <silly> that's a phrase commonly used in germany
[09:06:58] <lantech19446> ah ok guess it doesn't translate
[09:07:01] <silly> for something that's gone or so
[09:07:02] <hax> I think maybe 'expert' means you know enough to be minimally productive
[09:07:15] <lantech19446> and that's what i'm hoping for
[09:07:19] <hax> professional, as in, ready for a junior position
[09:07:22] <hax> cool
[09:07:37] <hax> is it the german dude
[09:07:49] <lantech19446> yea i'm not deluded enough to think i'm going to get to senior level positions with no real practice to speak of
[09:07:49] <hax> hansmuller or something
[09:08:11] <hax> schwarzmuller
[09:08:21] <silly> gerd müll?er
[09:08:22] <hax> I did one of his. it was pretty good
[09:08:34] <silly> but michael and markus müller is quite popular too
[09:09:34] <hax> michaelmuller?
[09:09:45] <hax> sorry I have no Umlaut
[09:09:54] <silly> i know a few
[09:10:57] <hax> mahlen die?
[09:11:39] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[09:12:07] <silly> de mr. mahler
[09:15:46] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[09:17:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:18:07] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[09:18:59] *** Quits: Guest35 (~Guest35@86.32.40.59) (Quit: Client closed)
[09:19:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:29:05] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[09:31:55] *** Joins: JoelJoel (~jjshoe@user/joel)
[09:32:19] *** Joins: x-x (~x@user/x-x)
[09:32:46] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 256 seconds)
[09:33:19] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[09:35:44] *** Quits: x-x (~x@user/x-x) (Client Quit)
[09:40:16] *** Joins: summersault (~summersau@179.221.251.16)
[09:41:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:45:53] *** Joins: han-solo (~han-solo@user/han-solo)
[09:46:35] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[09:48:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:49:22] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[09:51:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[09:51:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:51:29] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 268 seconds)
[09:54:07] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[09:55:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[09:56:40] *** Joins: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de)
[09:58:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:59:06] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 245 seconds)
[10:00:19] *** Joins: jazzy (~jaziz@user/jaziz)
[10:01:42] *** Quits: minall (~minall@186.69.200.119) (Quit: minall)
[10:06:44] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:11:15] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[10:11:36] *** Joins: pulse (~pulse@user/pulse)
[10:11:55] *** Joins: pln (~pln@5.122.192.137)
[10:13:12] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:14:37] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:15:48] *** Joins: neocron (~NeoCron@p200300c4cf3f7e00320b69bf1a44e74d.dip0.t-ipconnect.de)
[10:15:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:15:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:15:56] *** Joins: wroathe (~wroathe@user/wroathe)
[10:18:37] *** Quits: Doraemon (~NeoCron@p200300c4cf1c0a00df145b32079df496.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:20:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[10:29:05] *** Quits: kakashiAL (~kakashi@ip-37-201-198-248.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[10:33:32] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 240 seconds)
[10:36:49] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[10:51:41] *** Quits: pln (~pln@5.122.192.137) (Read error: Connection reset by peer)
[10:51:47] *** Quits: wannakis1 (~wannakiss@78.141.242.98) (Quit: leaving)
[10:52:04] *** Joins: pln (~pln@5.122.192.137)
[10:56:11] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[10:57:37] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:57:48] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[10:58:03] *** Joins: jazzy (~jaziz@user/jaziz)
[10:58:07] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:07:59] *** Parts: monokrome| (~monokrome@50.215.11.140) ()
[11:08:51] *** Joins: monokrome (~monokrome@50.215.11.140)
[11:12:51] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[11:14:21] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[11:15:50] *** Joins: mexen (uid495612@user/mexen)
[11:20:46] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[11:22:08] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 256 seconds)
[11:22:37] *** Joins: Bombo (atom@p4ff009a4.dip0.t-ipconnect.de)
[11:22:37] *** Quits: Bombo (atom@p4ff009a4.dip0.t-ipconnect.de) (Changing host)
[11:22:37] *** Joins: Bombo (atom@user/bombo)
[11:30:56] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[11:33:41] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[11:41:38] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[11:42:02] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[11:43:13] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[11:43:44] *** Quits: X-Scale (~ARM@83.223.225.150) (Ping timeout: 268 seconds)
[11:44:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[11:44:54] *** X-Scale` is now known as X-Scale
[11:50:33] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:53:56] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:58:02] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:58:17] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[11:58:20] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Quit: Leaving...)
[12:00:38] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[12:01:02] *** Joins: jazzy3 (~jaziz@user/jaziz)
[12:01:32] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 240 seconds)
[12:01:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:01:52] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[12:01:55] *** Quits: Crash1hd_ (~Crash1hd@64.56.153.179) (Client Quit)
[12:04:07] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[12:07:26] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 245 seconds)
[12:08:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:08:06] *** Joins: node1 (~node1@user/node1)
[12:09:28] *** Joins: jpic (~jpic@82.142.20.182)
[12:11:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[12:12:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[12:13:10] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:15:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:19:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[12:21:05] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[12:22:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:30:06] *** Quits: cows[m] (~cowsmatri@2001:470:69fc:105::758c) (Quit: You have been kicked for being idle)
[12:32:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[12:34:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:36:33] <theskillwithin> watching The Beatles: Get Back
[12:40:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:42:27] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[12:42:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:48:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e8e4:f373:6fd4:6d38)
[12:50:24] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[12:52:03] *** Joins: D4mned (~D1mned@212.101.251.153)
[12:53:27] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[12:54:04] *** Joins: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257)
[12:58:58] *** Quits: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257) (Ping timeout: 268 seconds)
[13:06:44] *** Joins: summersault (~summersau@179.221.251.16)
[13:06:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:11:17] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[13:15:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:16:57] *** Joins: x-x (~x@user/x-x)
[13:20:32] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[13:21:51] *** Joins: node1 (~node1@user/node1)
[13:23:01] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 268 seconds)
[13:27:48] <Talon> how would I save an elements scroll position when re-organizing on a page? https://jsfiddle.net/rwtejhcx/ <== here's a mock example showing my problem... when using appendChild to relocate an element with a scrollbar it's scroll position is lost.
[13:30:02] *** Quits: x-x (~x@user/x-x) (Ping timeout: 240 seconds)
[13:30:18] *** Joins: x-x (~x@user/x-x)
[13:32:23] <silly> Talon, you'll have to manually play with some numbers. e.g. el.scrollTop has one...
[13:33:09] <silly> should be relatively easy if you want to keep it scrolled to the bottom
[13:33:26] *** Joins: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257)
[13:33:27] <Talon> it could be at any arbitrary location, I just set it to bottom for the demo
[13:34:12] <Talon> so I need to save scrolltop before the appendchild and put it back after?
[13:34:55] <silly> yes
[13:36:52] <Talon> ok... that's what I was afraid of.. I already tried that, but it looks glitchy because it takes a few ms for the scrolltop to change, so visually when it's moved you see the move, you see the top stuff, then you see the jump to previous scroll position..
[13:38:02] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 240 seconds)
[13:39:01] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:39:42] *** Joins: Sal` (~Sal@151.27.54.136)
[13:40:02] <Sal`> hi, is there a way to know where has an event been fired?
[13:40:27] <b-rex> there will be a lot of smoke and people running
[13:40:35] <Sal`> :-)
[13:40:43] <Sal`> thats a riot
[13:40:45] <silly> Talon, idt there's a better way
[13:41:35] <Sal`> my function still gets called twice and I can't find why
[13:41:45] *** Joins: summersault (~summersau@179.221.251.16)
[13:42:03] <Sal`> I can see in chrome inspect that it has 2 click listeners, both with same currentTarget and target
[13:42:11] <Sal`> but can't find a way to solve it
[13:42:13] <theskillwithin> isTrusted
[13:43:14] <Sal`> let me paste some code
[13:43:54] <silly> Sal`, set a breakpoint where ever you attach the handler or console.log the line before
[13:46:52] *** Quits: x-x (~x@user/x-x) (Ping timeout: 260 seconds)
[13:48:34] *** Joins: nomic (~nomic@185.217.117.132)
[13:48:34] *** Joins: x-x (~x@user/x-x)
[13:48:43] <Sal`> silly, I did that. It calls the handler 2 times. don't know why.
[13:50:38] <silly> the hander or the .attachEventListener?
[13:51:44] <Sal`> oh, for handler you mean the .on(...) ?
[13:51:57] <silly> yea, maybe you did that twice
[13:52:48] <Sal`> https://i.imgur.com/V7LyW6P.png
[13:52:57] <Sal`> its all that, nothing else
[13:53:16] *** Quits: x-x (~x@user/x-x) (Ping timeout: 245 seconds)
[13:53:17] <Sal`> its an expandible panel that I want to use as a submenu
[13:54:09] *** Joins: x-x (~x@user/x-x)
[13:54:17] <Sal`> https://i.imgur.com/TOkCgtI.png
[13:54:27] <Sal`> and these are the events
[13:54:32] <silly> yea, maybe this holds the same thing twice
[13:55:05] <silly> but i'm just guessing... nvm
[13:55:25] <Sal`> its two days that I'm on this
[13:56:07] <Sal`> I was thinking on the mouseup and mousedown
[13:56:14] *** Joins: alystair (~alystair@user/alystair)
[13:56:21] <silly> create a fiddle
[13:56:30] <Sal`> I am, wait
[13:56:34] <silly> reproduce
[14:00:34] <theskillwithin> addEventListener click
[14:01:11] *** Quits: x-x (~x@user/x-x) (Ping timeout: 245 seconds)
[14:03:07] *** Joins: x-x (~x@user/x-x)
[14:05:25] <Sal`> It's not working at all in fiddle
[14:05:28] <Sal`> damn
[14:06:17] <theskillwithin> Sal` the reason to making a fiddle is to share it... for help...
[14:07:59] <Sal`> I know, but I first want it to run
[14:08:16] <Sal`> I have it running on local
[14:09:08] *** Joins: juuinat (~juuinat@85.195.195.6)
[14:09:21] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[14:10:07] *** Joins: Northwoods (~Northwood@202.14.122.53)
[14:10:24] <Sal`> I'm stupid, sorry, I forgot to add the css part
[14:10:27] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[14:13:32] *** Quits: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257) (Ping timeout: 240 seconds)
[14:13:57] <Sal`> ok, guys here it is
[14:13:58] <Sal`> https://jsbin.com/jobozexuqo/edit?html,css,js,output
[14:14:27] <Sal`> in the html tab, if I add only the first element, it works
[14:14:39] <Sal`> as soon as I add also the second one, it doesn't
[14:15:07] <Sal`> I think I'm missing the "this" somewhere
[14:15:55] <silly> oh, it's a binle
[14:16:03] <Sal`> ?
[14:16:10] <Sal`> binle? what's that
[14:16:20] <silly> totally not wfming
[14:16:49] <silly> a binle is the fiddles little brother
[14:18:02] <Sal`> you mean I had to delete all unnecessary stuff?
[14:18:32] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:19:11] <theskillwithin> eww looks like jquery
[14:19:43] <silly> weird, i can't scroll to the bottom of js pane with firefox
[14:20:09] <Sal`> added some extra newlines
[14:20:28] <silly> huh... same with chromium
[14:20:38] <silly> anybody else these problems?
[14:21:23] *** Joins: keypusher (keypusher@user/keypusher)
[14:21:26] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:22:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:22:36] <silly> https://github.com/jsbin/jsbin/issues/3431
[14:23:16] <silly> project: abandoned
[14:24:28] <OhTheCode> i can't scroll to bottom of js window either in firefox
[14:24:48] <silly> oh, it's probably the punishment for adblocking
[14:24:50] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[14:24:53] <silly> https://github.com/jsbin/jsbin/issues/3417#issuecomment-754943822
[14:25:20] <silly> but disabling it doesn't help either :D
[14:26:41] <silly> oh, i found it, just close the thick top bar thing
[14:28:27] <Sal`> If you want, I got it on jsfiddle too
[14:29:09] *** Quits: juuinat (~juuinat@85.195.195.6) (Quit: Connection closed)
[14:30:43] <silly> nono, i found it
[14:31:32] <silly> it's what i said, you're attaching the handler function twice
[14:33:57] <silly> $('.ow-event-expand-open').on does the event handler thing for every matching element on the page
[14:34:28] <silly> and you do that twice b/c this.each
[14:34:32] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 240 seconds)
[14:35:14] <silly> add one "Third" menu and you'll have it run 3 times
[14:35:45] <Sal`> yes, but should they remain separated? I mean if I click on the first element, should the currentTarget refer only to that one?
[14:36:16] <silly> yes
[14:36:32] <Sal`> so? how does the second one get into this
[14:36:41] <Sal`> it shouldn't
[14:38:44] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[14:38:56] *** Joins: Moyst_ (~moyst@user/moyst)
[14:39:01] *** Joins: summersault (~summersau@179.221.251.16)
[14:39:39] <Sal`> there must be something in the code that triggers the second one
[14:40:35] <silly> i see e.currentTarget being the same
[14:40:43] <Sal`> also, the functions apply two times on the same item
[14:40:43] <silly> it's exactly the same twice
[14:40:49] <Sal`> yes
[14:41:03] <Sal`> thats the problem
[14:41:13] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 250 seconds)
[14:41:37] *** Joins: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257)
[14:42:16] <silly> in the first iteration of this.each, it does .on(click... for every matching element on the page
[14:42:38] <silly> on the next iteration (main menu item Two) it does the same all over again
[14:42:49] <silly> for every matching element on the page
[14:43:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[14:43:29] <Sal`> ok, I think I know why
[14:43:32] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[14:43:36] <silly> delete line 175 and see where it gets you
[14:43:41] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[14:43:48] <Sal`> I call the entire plugin whith: $('.ow-expand').owExpand();
[14:43:55] <silly> no
[14:44:03] <silly> look into line 175 first
[14:44:06] <Sal`> but the event listeners are refered to the anchor element
[14:44:10] <Sal`> ok
[14:44:24] *** Joins: src (~src@user/src)
[14:44:37] <Sal`> i don't have line numbers
[14:44:50] *** Joins: Moyst_ (~moyst@user/moyst)
[14:45:34] <silly> take your jsbin, delete lines 175 and the according closing bracket and try running it
[14:45:57] <Sal`> what's on the line you're refering to
[14:46:03] <silly> oh, wait... jsbin has no line numbers lol
[14:46:15] <silly> i was watching them in the debugger
[14:46:20] <Sal`> oh
[14:46:21] <Sal`> :)
[14:47:04] <silly> https://i.imgur.com/V7LyW6P.png
[14:47:12] <silly> here, delete the first and the last ine
[14:47:52] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[14:48:08] <Sal`> ok
[14:49:00] <Sal`> ok, got it
[14:50:05] <Sal`> could it be because the this in that loop is referning to ow-expand while the listeners to a.ow-event-expand-toggle ?
[14:51:34] <fweht> is it possible to check how much ressources my webgl program needs so i can judge how well it would run on weaker devices than my own?
[14:52:09] <silly> Sal`, $('div').on('click', ... attaches click event listeners to every div element on the page
[14:52:26] <silly> like, "each"
[14:52:53] <silly> Sal`, your this.each before that, makes this happen twice
[14:53:02] <Sal`> yep
[14:53:14] <Sal`> I need to use this
[14:53:16] <silly> if you have 5 main menu items, you'll get 5 event handlers
[14:54:45] <silly> so either you scope $(events.OPEN).on('click', onOpen); to the item in the iteration or you run it only once and adopt your code in the handler function
[14:54:56] <silly> the latter is probably easier
[14:57:08] <Sal`> ok, thanks
[14:58:21] <Maxdamantus> fweht: you could time how long it takes to draw and figure out a framerate from that.
[14:58:33] <fweht> Maxdamantus: good idea, thank you!
[14:59:26] *** Joins: summersault (~summersau@179.221.251.16)
[14:59:33] *** Quits: src (~src@user/src) (Quit: Leaving)
[15:00:25] *** Joins: src (~src@user/src)
[15:00:49] *** Quits: D4mned (~D1mned@212.101.251.153) (Remote host closed the connection)
[15:01:06] *** Joins: D4mned (~D1mned@212.101.251.153)
[15:04:02] *** Quits: x-x (~x@user/x-x) (Ping timeout: 240 seconds)
[15:05:14] <Sal`> silly, fixed it like this: https://i.imgur.com/xEjhGKo.png
[15:05:27] <Sal`> thanks for your help
[15:05:40] *** Quits: src (~src@user/src) (Quit: Leaving)
[15:05:55] <silly> Sal`, you don't need it like that
[15:06:00] *** Joins: x-x (~x@user/x-x)
[15:06:17] <Sal`> the problem was that the plugin was attached to the "div" while the listeners to the "a"
[15:06:18] <silly> just, don't iterate. delete those two lines and you're good
[15:07:01] *** Joins: arthur-_ (~arthur@2a01:e0a:af:2bd0:ffaf:e485:3e2d:e4a2)
[15:07:14] <Sal`> yes, ok, that was to find why this plugins deffers to my other ones that have the same structure
[15:07:43] <arthur-_> when I npm install a module, the other complains about not being there anymore, and if I install the first one, the second one now isn't there (the modules are mongodb and moment, but I've had the issue with other modules on this same server. never seen this issue before)
[15:07:53] <arthur-_> the only way things work is if I do npm install mongodb moment
[15:07:57] <arthur-_> (install both at the same time)
[15:08:01] <Sal`> its because the plugin is attached to the div while the listeners should be attached to the anchor element
[15:08:03] <arthur-_> any idea why this is happening?
[15:08:06] <Sal`> thanks
[15:08:56] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[15:09:56] *** Quits: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257) (Ping timeout: 245 seconds)
[15:09:56] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[15:10:06] *** Quits: Sal` (~Sal@151.27.54.136) (Quit: Leaving)
[15:10:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[15:13:09] *** Joins: Northwoods (~Northwood@202.14.122.53)
[15:13:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:15:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:15:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[15:15:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:16:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:25:21] *** Quits: x-x (~x@user/x-x) (Ping timeout: 245 seconds)
[15:26:50] *** Joins: zyweo (~Svew@user/zyweo)
[15:27:14] *** Joins: x-x (~x@user/x-x)
[15:29:46] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[15:35:22] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[15:36:38] *** med is now known as median
[15:40:43] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[15:42:12] *** Quits: D4mned (~D1mned@212.101.251.153) (Read error: Connection reset by peer)
[15:42:22] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 268 seconds)
[15:43:37] *** Joins: D4mned (~D1mned@212.101.251.19)
[15:43:46] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 260 seconds)
[15:44:59] *** Joins: Moyst_ (~moyst@user/moyst)
[15:45:02] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[15:45:09] *** Joins: summersault (~summersau@179.221.251.16)
[15:45:16] *** Joins: X-Scale` (~ARM@92.250.96.158)
[15:46:44] *** X-Scale` is now known as X-Scale
[15:47:29] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[15:51:32] *** Quits: x-x (~x@user/x-x) (Ping timeout: 240 seconds)
[15:51:58] *** Joins: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de)
[15:52:14] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[15:52:57] *** Joins: x-x (~x@user/x-x)
[15:54:08] *** Joins: Moyst (~moyst@user/moyst)
[15:54:42] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[15:55:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:56:39] *** Quits: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[15:56:49] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 250 seconds)
[15:56:57] *** Joins: Northwoods (~Northwood@202.14.122.53)
[15:58:18] *** Joins: AtomicInteger (~primamate@159.48.53.196)
[16:01:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:05:01] *** Joins: SteveR (~SteveR@192.146.154.3)
[16:07:03] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[16:07:31] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[16:13:46] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[16:16:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[16:16:54] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 260 seconds)
[16:17:09] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[16:17:26] *** Joins: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net)
[16:23:00] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[16:23:18] *** Joins: SteveR (~SteveR@192.146.154.3)
[16:24:48] *** Joins: Moyst_ (~moyst@user/moyst)
[16:26:47] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 268 seconds)
[16:26:50] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[16:28:20] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[16:28:40] *** Moyst_ is now known as Moyst
[16:33:04] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5)
[16:33:12] *** Joins: hassoon (hassoon@user/hassoon)
[16:33:43] <hassoon> 'afternoon
[16:35:40] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[16:38:03] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:16] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[16:43:26] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:1436:1167:8c4f:49db) (Ping timeout: 268 seconds)
[16:46:25] *** Joins: summersault (~summersau@179.221.251.16)
[16:47:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:49:59] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[16:50:14] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[16:50:32] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[16:50:44] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[16:53:27] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[16:53:56] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[16:56:04] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[16:57:23] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[16:59:52] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[17:03:00] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:9674:7ee1:998b:6a22)
[17:07:02] *** Joins: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257)
[17:07:08] *** Joins: tex (~super@user/dix)
[17:20:38] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[17:23:55] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:9674:7ee1:998b:6a22) (Remote host closed the connection)
[17:28:27] *** Joins: keypusher (keypusher@user/keypusher)
[17:33:28] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:2d57:6cbc:9678:cfd)
[17:36:46] *** Joins: node1 (~node1@user/node1)
[17:36:59] *** Quits: node1 (~node1@user/node1) (Client Quit)
[17:37:02] *** Joins: node161 (~node1@user/node1)
[17:40:08] *** Joins: Naan (~naan@user/naan)
[17:41:47] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net)
[17:43:28] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Ping timeout: 260 seconds)
[17:44:38] *** Quits: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257) (Ping timeout: 260 seconds)
[17:45:13] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[17:46:52] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[17:46:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[17:48:47] *** Quits: pln (~pln@5.122.192.137) (Ping timeout: 268 seconds)
[17:51:29] *** Joins: kogepan (~kogepan@user/kogepan)
[17:53:16] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5) (Ping timeout: 245 seconds)
[17:54:29] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:54:36] <owensjrw> Good morning all, I am learning javascript and very much a newbie. I want to understand why some variations of a code are not working the idea in the code is that the bmi and bmi_stat are updated when the either slider has new input. The code is on my sololearn account here in the JS file: https://code.sololearn.com/W5xBZ1vwT1g4 The variations of the lines that do not work are line 47 - 56.
[17:54:56] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[17:55:42] <ThePhilgrim> Salutations! I'm developing my first website, and I'm considering how to structure my js scripts. Does it make most sense to have one script for each element of functionality? As in, at the moment I have 3 JS files (navbar-animations, testimonials-slider, & contact-form-data.js (fetch API)) . Does it make sense to keep these files separate or should I put them all into the same file?
[17:56:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 265 seconds)
[17:57:16] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:57:33] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Quit: WeeChat 3.3)
[17:57:39] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[17:57:45] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-132-67.red.bezeqint.net) (Quit: Client closed)
[17:59:11] *** Joins: summersault (~summersau@179.221.251.16)
[18:00:54] <austincheney> owensjrw, i am looking at your code.  I see the comment at the bottom.  What problem are you having?  You appear to have solved for this concern on lines 36 and 43
[18:00:57] <silly> !doesn't work @owensjrw
[18:00:57] <jellobot> owensjrw, What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle?
[18:00:58] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[18:01:07] <silly> it's not updated?
[18:02:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:03:00] <silly> you could use the event handler functions to update the bmi_form variable
[18:03:19] <silly> just reassign from there
[18:03:26] <silly> although it's pointless
[18:03:59] <owensjrw> When I change line 36 and 43 to the respective variations in the lower portion the bmi and bmi_stat do not update. I am trying not to repeat the long form of (w / (h * h)).
[18:04:14] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:04:59] <silly> you can move the math to your function bmi_calc to achieve this
[18:05:23] <silly> then it's bmi_calc() to execute it
[18:05:48] <silly> bmi_output.innerHTML = "Your BMI is " + bmi_calc().toPrecision(4);
[18:06:06] <silly> bmi_output.innerHTML = "Your BMI is " + bmi_calc.toPrecision(4);
[18:06:26] <silly> the one without parenthesis is not calling bmi.calc
[18:06:48] <silly> so you're referencing the function itself in this case
[18:07:04] <silly> not the value it would return on execution ()
[18:08:33] <owensjrw> But why bmi_calc() work without the math in the formula? I make a call to it everytime bmi_stat_fun() is called?
[18:09:15] <silly> work what?
[18:09:20] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:09:40] <owensjrw> I really appreciate your time and patience with me.
[18:09:44] <silly> oh, now i see it
[18:10:22] *** ekl- is now known as ekl
[18:10:34] <silly> yea well, as i said the variable bmi_form is never being reassigned to
[18:10:40] <silly> it never changes
[18:11:57] <silly> other than that, it works
[18:12:16] *** Quits: xsperry (~xs@user/xsperry) ()
[18:12:41] *** Joins: xsperry (~xs@user/xsperry)
[18:12:42] <silly> move the calculations from line 12 to your function bmi_calc
[18:13:30] <owensjrw> I will. Thank you for your time. You all have been awesome..
[18:14:48] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:15:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[18:15:54] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:16:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:16:54] *** Parts: dan01[m] (~dan01@2001:470:69fc:105::1:2640) ()
[18:17:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:17:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:17:38] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:19:54] *** Joins: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88)
[18:20:54] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[18:22:41] *** Joins: Moyst_ (~moyst@user/moyst)
[18:22:51] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 245 seconds)
[18:25:21] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 245 seconds)
[18:26:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:28:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:29:40] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 260 seconds)
[18:33:49] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[18:35:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:36:42] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:41:22] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[18:41:57] *** Quits: AtomicInteger (~primamate@159.48.53.196) (Quit: WeeChat 3.3)
[18:45:38] *** Joins: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de)
[18:46:28] *** Joins: summersault (~summersau@179.221.251.16)
[18:46:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[18:49:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:50:12] *** Quits: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:51:56] *** Joins: AtomicInteger (~primamate@159.48.53.165)
[18:57:16] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:57:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:57:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:57:27] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:43] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[18:58:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:59:41] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[19:00:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:01:48] *** Joins: voltage_ (voltage@user/voltage)
[19:09:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88) (Remote host closed the connection)
[19:11:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[19:15:19] *** Joins: nomic (~nomic@185.217.117.132)
[19:17:24] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:17:33] *** Quits: AtomicInteger (~primamate@159.48.53.165) (Quit: WeeChat 3.3)
[19:21:44] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[19:25:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[19:27:44] *** Quits: node161 (~node1@user/node1) (Ping timeout: 256 seconds)
[19:28:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:29:10] *** Joins: SteveR (~SteveR@192.146.154.3)
[19:29:36] *** Joins: summersault (~summersau@179.221.251.16)
[19:31:03] *** Quits: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com) (Remote host closed the connection)
[19:31:44] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[19:34:15] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[19:41:08] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:41:48] *** Joins: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257)
[19:43:06] <ThePhilgrim> Could somebody please inform me why this function gets called automatically 4 times as soon as I load my website? https://dpaste.com/HR2ZH5YEE
[19:44:03] <EdFletcher> ThePhilgrim: because you're calling it four times and passing the _result_ to `addEventListener`
[19:44:11] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[19:44:25] <ThePhilgrim> whuut?
[19:44:40] <ThePhilgrim> Care to explain?
[19:44:44] <ThePhilgrim> :P
[19:44:53] <EdFletcher> `changeSliderDot('one')` is calling the function
[19:45:06] <ThePhilgrim> Really?
[19:45:17] <ThePhilgrim> It should only call it on click :S
[19:45:48] <EdFletcher> _you're_ calling it! `name(args)` is function call syntax in JS
[19:46:08] <EdFletcher> you either need `bind()` or an anonymous function wrapping those
[19:46:13] <ThePhilgrim> So you mean that I'm calling it in my addEventListener lines?
[19:46:44] <EdFletcher> yes you are calling that function four times, and passing the _result_ of the calls to addEventListener as the "callback"
[19:46:56] <ThePhilgrim> Ahh
[19:47:10] <ThePhilgrim> Okay, so basically what changeSliderDot returns is the second argument
[19:47:42] <EdFletcher> yup in your current code, exactly
[19:48:10] <ThePhilgrim> Okay, so how do you call a function that takes an argument in an eventlistener?
[19:48:38] <ThePhilgrim> I assume this is what I want to achieve: dotOne.addEventListener('click', changeSliderDot);  But I need to pass it an argument
[19:49:15] <EdFletcher> ThePhilgrim: yup you got it! most-straightforward way here to take that argument would be to wrap it in an arrow function: `(e) => changeSliderDot('one', e)`
[19:49:32] <ThePhilgrim> Hmm
[19:49:39] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[19:49:44] <EdFletcher> oh you're not propagating the event so i guess you don't even need `e`
[19:49:54] <EdFletcher> `() => changeSliderDot('one')` etc.
[19:49:55] <ThePhilgrim> Don't know what propagating means :D
[19:50:05] <EdFletcher> moving forward 🙂
[19:50:08] *** Joins: killown (~killown@user/killown)
[19:50:55] <EdFletcher> or really the more aprorpos definition would be "passing along"
[19:51:00] <ThePhilgrim> Something like this? https://dpaste.com/DMHP4SGB2
[19:51:22] <EdFletcher> ThePhilgrim: nailed it! you don't see those four console.logs on load now right?
[19:52:09] <ThePhilgrim> Will try, first I'd like to investigate the "e" here. Hmm, that event.. does it give me the id of dotOne? or does it give me "dotOne" (variable) ?
[19:52:20] <ThePhilgrim> or something else
[19:52:26] *** Quits: kill (~killown@user/killown) (Ping timeout: 245 seconds)
[19:52:54] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:53:56] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[19:54:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:54:03] <EdFletcher> ThePhilgrim: yeah good call, that event object can be really useful! and yeah IIRC it does indeed keep track of which element sent the event, so you'd have the ID you're looking for. there's more info here: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#the_event_listener_callback -- but with anything, best way to
[19:54:03] <EdFletcher> learn is to just play around with it, console.log the event object and see what it's got
[19:54:53] <ThePhilgrim> I didn't even know I could pass it the e :)
[19:55:14] <ThePhilgrim> So in my case it would be (e) => functionName(e) {...} ?
[19:55:24] <ThePhilgrim> no wait.. that would be ...
[19:55:25] <ThePhilgrim> hmm
[19:55:25] <ThePhilgrim> haha
[19:55:36] <ThePhilgrim> (e) => functionName(e)
[19:55:38] <ThePhilgrim> like that
[19:55:48] <EdFletcher> hahaha well yeah it's not _you_ who is passing that event into your function, it's the event listener code
[19:55:50] <ThePhilgrim> dotOne.addEventListener('click', (e) => changeSliderDot(e));
[19:55:58] <EdFletcher> but yeah you got it, it's the sole argument to those listener functions
[19:56:03] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[19:56:18] <ThePhilgrim> But do I need to pass it to changeSliderDot to to make it accessible there?
[19:56:20] <EdFletcher> you can name it anything too, `event` is probably better than `e` but i was being lazy 😛
[19:56:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:56:30] <ThePhilgrim> or does it make it accessible from the first (e) ?
[19:56:48] <ThePhilgrim> Hmm, I'll experiment a bit!
[19:56:50] <ThePhilgrim> Thanks alot!
[19:56:52] <EdFletcher> ThePhilgrim: yeah you'd pass it along to changeSliderDot as just another argument, that was the propagation i was mentioning
[19:57:01] <ThePhilgrim> Wonderful
[19:57:07] <EdFletcher> ThePhilgrim: you're very welcome, best of luck and have fun!
[19:57:14] <ThePhilgrim> :D
[19:59:00] <ThePhilgrim> So, it gives me a whole lot of info
[19:59:01] <ThePhilgrim> { target: li#dot-two.slider-dot, buttons: 0, clientX: 173, clientY: 543, layerX: 38, layerY: 16 }
[20:00:05] <ThePhilgrim> e['target'] gives me only li id="foo" class="bar"
[20:00:37] <ThePhilgrim> e['target'].id gives me the id!
[20:00:38] <ThePhilgrim> Wooh
[20:01:53] <ThePhilgrim> Lol, this made me prouder than one might think xD Feels like a breakthrough for a new programmer to reach that result by experimenting xD
[20:07:22] <ThePendulum> would there be a noteworthy difference in terms of garbage collection doing this
[20:07:25] <ThePendulum> n> function log() { console.log('foobar'); } Array.from({ length: 100 }, () => log)
[20:07:26] <jellobot> (okay) [ [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], ... 80 more items ]
[20:07:31] <ThePendulum> instead of
[20:07:33] <ThePendulum> n> Array.from({ length: 100 }, () => function log() { console.log('foobar'); })
[20:07:34] <jellobot> (okay) [ [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], [Function: log], ... 80 more items ]
[20:07:35] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[20:07:59] <ThePendulum> sorry the chrome dev tools were a little less verbose, lol
[20:10:27] *** Quits: zerothule (~eric@2601:602:8d80:4e50:d6f:2f5c:85f8:b257) (Ping timeout: 260 seconds)
[20:12:07] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:13:58] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:15:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:16:08] <silly> !dot @ThePhilgrim
[20:16:08] <jellobot> ThePhilgrim, yourObject.foobar is just another way of saying yourObject['foobar']. So of course if varName = 'foobar', then it's also the same as yourObject[varName]. Dot notation is preferred to bracket notation except where the property name would be an invalid identifier. The same applies to quoting keys inside object literals - don't do it unless you have to.
[20:17:11] <ThePhilgrim> silly: Ah, so I can do event.target.id ?
[20:17:54] <silly> and instead of dotOne.addEventListener('click', (e) => changeSliderDot(e)); you could also write dotOne.addEventListener('click', changeSliderDot.bind(null, 'one'));
[20:18:05] <silly> ThePhilgrim, yes
[20:19:21] <ThePhilgrim> Thanks!
[20:19:31] <silly> well, not exactly what i said last... changeSliderDot with the .bind that i showed, it would be called as changeSliderDot('one', event)
[20:19:54] <ThePhilgrim> Okay, but if I get the event I don't need the string :)
[20:20:37] <silly> then you don't need any of these, just dotOne.addEventListener('click', changeSliderDot);
[20:21:14] <ThePhilgrim> Now I'm trying to figure out the most elegant way to get the number in the end of the id.. the ids are "dot-1", "dot-2" etc. I'm trying somthing like charAt(event.target.id.length -1)
[20:21:20] <silly> and changeSliderDot will be called like changeSliderDot(event)
[20:22:15] <silly> is it always i digit?
[20:22:17] <silly> 1
[20:23:12] <silly> n> "dot-1".slice(-1)
[20:23:13] <jellobot> (okay) '1'
[20:24:49] <ThePhilgrim> Ah, slice is better maybe
[20:26:17] <ThePhilgrim> I did this xD
[20:26:17] <ThePhilgrim> const eventId = event.target.id;
[20:26:17] <ThePhilgrim>   const eventIdToNum = Number(eventId.charAt(eventId.length - 1));
[20:26:39] <ThePhilgrim> Let me rewrite that slightly
[20:26:52] <silly> n> "dot-11".replace(/[^\d](\d+)/, "$1")
[20:26:53] <jellobot> (okay) 'dot11'
[20:27:18] <silly> n> "dot-11".replace(/[^\d]+(\d+)/, "$1")
[20:27:18] <ThePhilgrim> const eventId = event.target.id;
[20:27:19] <jellobot> (okay) '11'
[20:27:19] <ThePhilgrim>   const eventIdToNum = Number(eventId.slice(-1));
[20:27:20] <ThePhilgrim> this works well
[20:27:34] <silly> n> "dot-11".match(/\d+/)
[20:27:35] <jellobot> (okay) [ '11', index: 4, input: 'dot-11', groups: undefined ]
[20:28:30] <ThePhilgrim> Can I do foo.classList.add on something that I havent defined as a variable yet?
[20:28:45] <ThePhilgrim> something like (event.target.id).classList.....
[20:29:04] *** Quits: j1mu5 (~j1mu5@user/j1mu5) ()
[20:29:04] <silly> if foo is undefined, you'll get "can't access property classList of undefined"
[20:29:23] *** Joins: Sal` (~Sal@151.27.54.136)
[20:29:25] <ThePhilgrim> Right, but
[20:29:28] <ThePhilgrim> look here
[20:29:30] <silly> you mean event.target.classList
[20:29:32] <ThePhilgrim> const oldActiveDot = document.getElementById('dot-' + currentSliderDot);
[20:29:35] <ThePhilgrim> oldActiveDot.classList.remove('active-dot');
[20:29:39] <ThePhilgrim> Can I do this in one line?
[20:29:54] <silly> evt.target is the element itself
[20:30:21] <ThePhilgrim> Hm not sure what you mean
[20:30:43] <ThePhilgrim> Ah, I can do event.target.classList .... ?
[20:31:25] <silly> isn't "dot-"+currentSliderDot the same id you got from event.target.id?
[20:31:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:31:55] <ThePhilgrim> Yeah, I defined those variables after, so I haven't had the time to fix it yet
[20:32:21] <silly> well then event.target === document.getElementById('dot-' + currentSliderDot)
[20:32:22] <ThePhilgrim> New to this, so I can't really structure my thoughts properly when writing the logic
[20:32:37] <ThePhilgrim> Ah, awesome
[20:32:47] <ThePhilgrim> Will try to improve the code a sec
[20:32:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:32:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:32:55] *** Joins: wroathe (~wroathe@user/wroathe)
[20:33:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:33:07] *** Joins: SteveR (~SteveR@192.146.154.3)
[20:33:14] *** Quits: SteveR (~SteveR@192.146.154.3) (Client Quit)
[20:33:27] <ThePhilgrim> Ah, actually it's not the same.. I'll explain why in a bit
[20:36:31] <ThePhilgrim> Turns out I only needed this
[20:36:32] <ThePhilgrim> const oldActiveDot = document.getElementById('dot-' + currentSliderDot);
[20:36:32] <ThePhilgrim>   oldActiveDot.classList.remove('active-dot');
[20:36:32] <ThePhilgrim>   event.target.classList.add('active-dot');
[20:36:38] <ThePhilgrim> (sry for flood)
[20:37:25] <ThePhilgrim> currentSliderDot is the dot that is already active when the event is triggered
[20:37:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[20:37:43] <silly> oic
[20:37:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:38:00] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[20:38:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:38:41] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:38:58] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:45:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:46:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:48:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:49:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:50:37] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:50:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[20:53:14] *** fjmorazan_ is now known as fjmorazan
[20:54:16] *** Joins: summersault (~summersau@179.221.251.16)
[20:56:13] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[20:56:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[20:56:43] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[20:57:25] <qswz> If I have a function helper returning a Proxy, and that function is async, is there a way to know in get(target, key){} if key is the 'then' triggered by await
[20:57:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:58:24] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[20:58:34] <qswz> n> async function f(){return new Proxy({},{get(t,k){console.log('get:', k); return {};}})} const x=await f(); x.then
[20:58:35] <jellobot> (okay) get: then get: then {}
[20:58:54] <qswz> n> function f(){return new Proxy({},{get(t,k){console.log('get:', k); return {};}})} const x=await f(); x.then
[20:58:55] <jellobot> (okay) get: then get: then {}
[20:58:58] <silly> i fear the best answer you'll get is "don't use Proxy" (from ljharb)
[20:59:08] <qswz> n> function f(){return new Proxy({},{get(t,k){console.log('get:', k); return {};}})} const x=f(); x.then
[20:59:09] <jellobot> (okay) get: then {}
[20:59:26] <qswz> ljharb is also against Proxy? oh true
[20:59:40] <qswz> there are usecases
[20:59:44] <ThePhilgrim> Is there a limit on how fast you can trigger a click event?
[21:00:04] <ThePhilgrim> I'm trying to trigger a click event 2-3 times in a for loop.. but it only gets clicked once
[21:00:17] <qswz> ThePhilgrim: your nerval system
[21:00:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:00:28] <silly> dispatchEvent?
[21:00:45] <qswz> between your brain decision and finger impulse
[21:01:08] <qswz> I like to answer aside
[21:01:34] <ThePhilgrim> silly: what is a dispatchEvent?
[21:01:45] <silly> !mdn dispatchEvent
[21:01:46] <jellobot> silly, dispatchEvent() method of the EventTarget sends an Event to the object, (synchronously) invoking the affected EventListeners in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with dispatchEvent(). https://mdn.io/dispatchEvent
[21:01:53] <qswz> I wish the 'then' frm await could be a Symbol
[21:02:07] <qswz> else no way to differentiate from a refular then property
[21:02:13] <qswz> regular*
[21:03:00] <qswz> I will just make sure the function is not awaited for no
[21:03:02] <qswz> w*
[21:07:14] <qswz> ok let me explain my Proxy usecase
[21:07:43] <qswz> in a template, we can have expressions like {{foo.bar.lol}}
[21:08:13] <ThePhilgrim> Okay, I am completely stuck! I think it's time to show my code and ask for guidance! xD https://dpaste.com/HAPPVQXZM   I have a slider with testimonials. (https://imgur.com/a/nzxClRw) The left/right arrow works very well. Now I'm trying to get the slider dots to work. If I click on a slider dot, it gets properly highlighted. I'm trying to make the actual testimonial slider follow though
[21:08:39] <ThePhilgrim> So if the first testimonial is shown, and I click the 3rd dot, the click event should be triggered two times on the right arrow
[21:08:51] <qswz> without proxy, if we evaluate the template with foo = {}, then you'll get a stupid error like "Cannot read lol of undefined"
[21:09:01] <qswz> but I'd like a better error
[21:09:18] <ThePhilgrim> The event gets triggered the right amount of times, but it moves only one testimonial
[21:11:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:11:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:11:46] *** Joins: wroathe (~wroathe@user/wroathe)
[21:12:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[21:12:22] <qswz> well, if I'm sure the function is first awaited, I can do this:
[21:12:48] *** Joins: han-solo (~han-solo@user/han-solo)
[21:13:44] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[21:14:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:14:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:15:12] <qswz> n> function f(){return {then(r => r(new Proxy({},{get(t,k){console.log('get:', k); return {};}})))};} const x=await f(); x.then
[21:15:12] <jellobot> An async internal error occured: Unexpected token, expected "," (1:29)
[21:15:46] <qswz> n> function f(){return {then:r => r(new Proxy({},{get(t,k){console.log('get:', k); return {};}}))};} const x=await f(); x.then
[21:15:48] <jellobot> (okay) get: then get: then {}
[21:16:31] <qswz> strange
[21:16:44] <qswz> should have triggered once
[21:17:01] *** Quits: pizdets (~pizdets@183.182.111.236) (Ping timeout: 245 seconds)
[21:17:34] *** Joins: pizdets_ (~pizdets@183.182.110.72)
[21:17:53] <qswz> damn, sry guys, let me stop overengineering
[21:19:37] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[21:19:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[21:20:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[21:22:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:22:45] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:23:59] *** Joins: Rockwood (~Rocky@user/rocky)
[21:28:28] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[21:30:56] *** Joins: stenno (~stenno@user/stenno)
[21:32:41] *** Quits: Sal` (~Sal@151.27.54.136) (Quit: Leaving)
[21:34:03] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:34:31] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 245 seconds)
[21:39:12] <qswz> lol I'm not alone https://stackoverflow.com/questions/65851505/distinguish-call-of-then-through-await
[21:39:45] <silly> lol
[21:40:32] <systemfault> There's always someone at least as crazy as yourself...
[21:40:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:40:51] <qswz> it's all about probabilities
[21:40:55] <systemfault> I don't know what you're trying to do... but I imagine it's some evil hack
[21:41:09] <qswz> my usecase males sense
[21:41:22] <systemfault> Does it also females sense?
[21:41:37] <qswz> it's for a templates, evaluating 'test {{a.b.c}}' with this variable: {a: {}} for example
[21:41:50] <systemfault> I see
[21:41:51] <qswz> it's throw a stupid error like cannot read c of undefined
[21:42:01] <qswz> yea you see
[21:42:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:44:51] <qswz> n> proxy = (o, path = []) => new Proxy(o, {get: (t, k) => k === 'toString' || typeof k === 'symbol'?()=>path.reduce((a, x) => a?.[x] ?? '', t)proxy(t, [...path, k])}}); proxy({a:{b:2}}).a.b
[21:44:52] <jellobot> (fail) SyntaxError: Unexpected identifier
[21:45:17] <qswz> n> proxy = (o, path = []) => new Proxy(o, {get: (t, k) => k === 'toString' || typeof k === 'symbol'?()=>path.reduce((a, x) => a?.[x] ?? '', t):proxy(t, [...path, k])}}); proxy({a:{b:2}}).a.b
[21:45:18] <jellobot> (fail) SyntaxError: missing ) after argument list
[21:45:52] <qswz> n> proxy = (o, path = []) => new Proxy(o, {get: (t, k) => k === 'toString' || typeof k === 'symbol'?()=>path.reduce((a, x) => a?.[x] ?? '', t):proxy(t, [...path, k])}); proxy({a:{b:2}}).a.b
[21:45:53] <jellobot> (okay) { a: { b: 2 } }
[21:46:24] <qswz> n> proxy = (o, path = []) => new Proxy(o, {get: (t, k) => k === 'toString' || typeof k === 'symbol'?()=>path.reduce((a, x) => a?.[x] ?? '', t):proxy(t, [...path, k])}); const o=proxy({a:{b:2}});  `${o.a.b}`
[21:46:25] <jellobot> (okay) '2'
[21:47:23] *** Joins: zerothule (~eric@c-67-168-62-122.hsd1.wa.comcast.net)
[21:47:56] *** Joins: Northwoods (~Northwood@202.14.122.53)
[21:52:51] <ljharb> qswz: yes, proxy should only be used for what it’s designed for - with a full membrane implementation
[21:53:17] <ljharb> it’s way too slow to use for most things anyways, and it just lets you make weird code
[21:53:44] <qswz> speed is not a subject there though
[21:54:34] <ljharb> normally no, that is true
[21:54:43] <qswz> do you reckon it's a usecase here? (improving error message for nested object properties access)
[21:55:07] <ljharb> no, that’s in the engine
[21:55:22] <ljharb> iow if you want to improve it, make a PR to v8 :-)
[21:55:52] <qswz> ok, there are other approaches, like isolating all template vars and testing them, before evaluating the template
[21:56:12] <qswz> I with v8 could improve those error messge for sure
[21:57:44] <ThePhilgrim> Nobody who could help me with the question I asked earlier?
[21:58:00] <ThePhilgrim> (at 18:38)
[21:58:12] <silly> "a full membrane implementation" lolwat?
[21:59:12] <qswz> just some biology
[21:59:18] <qswz> I didn't get it as well
[21:59:33] <qswz> I guess a reimplemntation of Proxy?
[21:59:39] <qswz> what would be the point tho?
[21:59:46] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[21:59:51] <silly> i know osmotic semi permiable membranes
[22:00:20] <cthulchu> damn it annoys me: In 150 characters or fewer, tell us what makes you unique. Try to be creative and say something that will catch our eye!
[22:00:25] <banana_> lo
[22:00:29] <stenno> i know semipermeable membranes to
[22:00:32] <stenno> o
[22:00:39] * stenno nonsequitur
[22:00:39] <silly> permeable
[22:00:52] <cthulchu> what would you write if they needed you a lot more than you - them
[22:01:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[22:01:20] <stenno> shouldn't you answer that question yourself lol
[22:01:55] <stenno> 'i asked others what makes me unique'
[22:02:12] <cthulchu> this is what I came up with: Looks like you have too many implementators applying, eh?
[22:02:35] <stenno> well then send it off?
[22:02:39] <cthulchu> ye
[22:02:46] <silly> the genome... "i have no twin"
[22:02:52] <cthulchu> thought maybe you'd have a funnier idea
[22:02:56] <banana_> question about forms, for example a react app, how to maintain a form if it's very dynamic based on state. I guess I'm purely talking about the template code
[22:02:59] <DPA> "I would like a raise"
[22:03:07] <cthulchu> lulz
[22:03:23] <banana_> just throwing that question out there if anyone knows what I'm asking
[22:03:40] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[22:05:03] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:05:39] <banana_> I guess I'm asking how to maintain a very complex form.
[22:07:37] <DPA> If it's the kind of form where filling out some fields fills out and maybe changes other fields, but also the other way around - then make sure to make it someone elses problem as soon as possible.
[22:09:16] <banana_> it's already someone elses problem. and no just based on a certain state of a domain object built the form changes, e.g. new input boxes show up with a different <label> etc
[22:11:25] <banana_> but the domain object can be built in many different ways causing the form to be different in many different ways
[22:12:12] <banana_> I'm guessing just a bunch of if blocks in the form template huh
[22:12:19] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[22:13:19] <stenno> aren't there form builders for react?
[22:13:32] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[22:13:32] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[22:14:04] *** Quits: deadbeat_ (~quassel@user/deadbeat) (Quit: See you.)
[22:14:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:16:02] <banana_> I guess I'll look that up
[22:16:35] <banana_> so basically use a form builder component that takes in a javascript array of objects to build a dynamic form?
[22:17:00] <banana_> so keep the dynamic part controlled by javascript data structures
[22:17:29] <banana_> and not have mega template code
[22:17:47] <banana_> fyi reading https://www.npmjs.com/package/react-form-builder2
[22:17:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:18:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:18:00] *** Joins: wroathe (~wroathe@user/wroathe)
[22:18:35] <stenno> generally of course with react you can compose forms using controlled inputs
[22:18:57] <banana_> you mean component inputs right?
[22:19:05] <stenno> controlled inputs
[22:19:21] <stenno> https://reactjs.org/docs/forms.html#controlled-components
[22:21:11] <banana_> ok so you're talking about one-way binding
[22:21:29] <banana_> the forms inputs are one-way bound to the state
[22:21:34] <stenno> keep the state in a 'form' component or even in Context, and then dynamically build the form
[22:21:45] <stenno> from this state using controlled inputs
[22:21:51] <qswz> use a hook for forms
[22:22:39] <banana_> ah ok so maintain the different state in the component
[22:23:00] <banana_> and then on the component onSubmit event then push up the completed object
[22:23:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:23:39] <banana_> but the driver of the component doesn't need to know the state of the component just needs the end result
[22:23:49] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe) (Read error: Connection reset by peer)
[22:24:18] <banana_> so basically the component is a closure and the driver of the component doesn't need to maintain all the state of that component
[22:28:02] <banana_> I get the benefit of one-way binding the state to the form inputs. just organizing the form part is still a mystery. especially for a complex form
[22:28:09] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:9d34:9ef:e98a:2cbe)
[22:29:04] <banana_> sounds like you're saying move the dynamic part to an array of objects as much as possible. then the form component takes that array of objects and builds something dynamic
[22:30:45] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[22:34:14] <qswz> const {submit, form, getProps} = useForm(..)
[22:34:54] <qswz> eturn <form onSubmit={submit}>..
[22:34:56] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:35:55] *** Quits: nomic (~nomic@185.217.117.132) (Quit: Leaving)
[22:36:13] *** Joins: nomic (~nomic@185.217.117.132)
[22:37:06] *** Quits: nomic (~nomic@185.217.117.132) (Client Quit)
[22:38:41] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[22:38:46] *** Parts: mihaiadrian (~Thunderbi@82.76.223.244) ()
[22:39:18] *** lf94- is now known as lf94
[22:41:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[22:42:59] *** Joins: rawtaz (~rawtaz@user/rawtaz)
[22:43:04] *** Parts: rawtaz (~rawtaz@user/rawtaz) ()
[22:44:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:44:21] *** Joins: mickey8 (~user@user/mickey)
[22:47:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:47:43] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:50:23] *** Joins: src (~src@user/src)
[22:50:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:51:57] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[22:52:39] *** Joins: kogepan (~kogepan@user/kogepan)
[22:53:59] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[22:55:25] <banana_> thanks
[22:55:51] <qswz> yw
[22:59:30] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[22:59:42] *** Quits: zerothule (~eric@c-67-168-62-122.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:59:48] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[22:59:54] *** Joins: src (~src@user/src)
[23:00:08] *** Quits: src (~src@user/src) (Remote host closed the connection)
[23:00:37] *** Quits: X-Scale (~ARM@92.250.96.158) (Ping timeout: 250 seconds)
[23:03:58] *** Joins: zerothule (~eric@2601:602:8d80:4e50:58f:a14d:bc0f:7881)
[23:05:38] *** Joins: kogepan (~kogepan@user/kogepan)
[23:07:23] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[23:12:20] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[23:12:40] <Fossil> Is there anyway to emulate Array.prototype.flatMap with JS so older browsers wont throw errors?
[23:13:09] *** Quits: zerothule (~eric@2601:602:8d80:4e50:58f:a14d:bc0f:7881) (Ping timeout: 268 seconds)
[23:13:12] <stenno> !polyfill
[23:13:12] <jellobot> stenno, A polyfill, or a shim, should be a spec-compliant method of providing functionality to older environments that lack it. See !es5 shim, !es6 shim, !polyfill.io, !document.head, !raf, !now, etc
[23:13:30] <stenno> !flatmap
[23:13:30] <jellobot> stenno, http://bterlson.github.io/proposal-flatMap/
[23:14:42] <Fossil> Well today I learned about polyfills
[23:14:42] <stenno> Fossil: https://github.com/zloirock/core-js#ecmascript-array
[23:14:53] <Fossil> stenno Ohhh cheers
[23:25:38] <Fossil> stenno That fixed it, nice.
[23:25:58] <stenno> ncie
[23:27:30] *** Joins: sfields (~sfields@2605:a601:adea:7a00:1a87:4473:c6e2:6ac8)
[23:28:36] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[23:32:11] *** Parts: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (WeeChat 3.3)
[23:36:35] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 268 seconds)
[23:37:13] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:37:13] <silly> ncis
[23:37:51] <silly> oh i mist it (ncsi?)
[23:39:03] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 268 seconds)
[23:39:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:39:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:39:51] *** Joins: wroathe (~wroathe@user/wroathe)
[23:39:58] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[23:40:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[23:41:21] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:43:12] <qswz> ljharb would tell you to use https://npmjs.com/package/array.prototype.flatmap or https://github.com/airbnb/js-shims
[23:44:28] *** Joins: zerothule (~eric@2601:602:8d80:4e50:58f:a14d:bc0f:7881)
[23:44:54] <systemfault> He totally would, but someone who haven't heard of polyfills before is likely to not have heard of any modern frontend development stack.
[23:45:10] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[23:45:54] *** Joins: pavonia (~user@user/siracusa)
[23:46:57] *** Joins: Northwoods (~Northwood@202.14.122.53)
[23:47:02] <qswz> shims make me think of https://www.youtube.com/watch?v=ZklGYJAZ72c
[23:47:02] <skillbot> YouTube Title: Shy'm - Victoire (Clip Officiel)
[23:48:25] <systemfault> Ooof... welcome to 15 years ago
[23:48:42] <qswz> fun interviw question: If you have in front of view stair of N steps, and you can either climp steps by 1 or by 2, how many possibilities of climbing stairs are there?
[23:48:55] <qswz> I'm old
[23:48:59] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:49:04] <qswz> climb*
[23:49:23] <qswz> Do you say "climb" steps?
[23:49:31] <qswz> or whatever the correct term is
[23:51:13] *** Quits: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net) (Remote host closed the connection)
[23:51:33] <d3x0r> log2(n)
[23:51:52] <qswz> nope
[23:51:54] <d3x0r> maybe -1 or /2
[23:52:16] <qswz> try with N=1, 2, 3, 4
[23:52:20] *** Joins: zeromule (~eric@2601:602:8d80:4e50:8c43:195e:3e96:d0ef)
[23:52:21] <d3x0r> I'm just a programmer and that's just off by 1 :)
[23:52:24] *** Joins: reallymemorable (~reallymem@ip68-9-215-56.ri.ri.cox.net)
[23:52:28] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[23:52:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:53:46] *** Quits: zerothule (~eric@2601:602:8d80:4e50:58f:a14d:bc0f:7881) (Ping timeout: 260 seconds)
[23:54:47] <qswz> today you're programmer, but tomorrow
[23:55:03] <qswz> very important to know how to count
[23:55:11] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:56:33] <stenno> whats wrong with core-js?
