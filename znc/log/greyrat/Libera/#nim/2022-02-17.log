[00:00:19] <FromDiscord> <jmgomez> Sorry for the newbie mistake, Im just exploring nim for a new project. Thanks for your help though!
[00:01:23] <FromDiscord> <haxscramper> In reply to @jmgomez "<@!608382355454951435> it worked, now": technically there is a `--header` file, but because "Nim is not a header file generator anymore;" https://github.com/nim-lang/Nim/commit/279df834bae8b6972af6cbcbdd57c1d53e1df9c7 it is "deprecated"
[00:01:51] <FromDiscord> <demotomohiro> sent a long message, see http://ix.io/3PNa
[00:03:31] <FromDiscord> <haxscramper> In reply to @haxscramper "technically there is a": IMO compiler should just dump json of whatever C code it has generated, generating "proper" haders might be a bit too hard, but just infodumping into json?
[00:06:52] <FromDiscord> <jmgomez> In reply to @haxscramper "IMO compiler should just": it would be useful for sure
[00:08:09] <FromDiscord> <demotomohiro> In reply to @jmgomez "<@!608382355454951435> it worked, now": I have never used it, but it seems https://github.com/treeform/genny creates header file for C.
[00:09:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[00:17:20] *** Joins: tiorock (~rc@192.12.112.205)
[00:17:20] *** Quits: tiorock (~rc@192.12.112.205) (Changing host)
[00:17:20] *** Joins: tiorock (~rc@user/rockcavera)
[00:17:21] *** rockcavera is now known as Guest8476
[00:17:21] *** Quits: Guest8476 (~rc@user/rockcavera) (Killed (copper.libera.chat (Nickname regained by services)))
[00:17:21] *** tiorock is now known as rockcavera
[00:19:09] <FromDiscord> <TurtleP> sent a code paste, see https://play.nim-lang.org/#ix=3PNh
[00:19:27] <FromDiscord> <TurtleP> I mean I can tell why it's erroring, but not sure how it happened
[00:23:32] <FromDiscord> <demotomohiro> Did you tried to clear nimcache?
[00:25:58] <FromDiscord> <TurtleP> where is that again?
[00:29:19] <FromDiscord> <TurtleP> ah, that fixed it! thanks @demotomohiro
[00:59:40] <FromDiscord> <frankzig> Just discovered the coolest thing ever:↵↵write a library in Nim, use Nimpy to export bindings to Python↵use Julia's PyCall package to use the Nim library directly without interface code
[01:00:20] *** Joins: PMunch (~PMunch@user/pmunch)
[01:15:20] <FromDiscord> <Ruby576> Can i ask?
[01:15:39] <FromDiscord> <SoicBR> you literally just did that
[01:15:45] <FromDiscord> <Ruby576> Lmao
[01:15:46] <FromDiscord> <SoicBR> but yes
[01:15:57] <PMunch> Just ask away :)
[01:16:27] <FromDiscord> <Ruby576> sent a long message, see http://ix.io/3PNs
[01:16:33] <PMunch> By the way, if anyone wants some low hanging fruit to be able to call themselves a compiler dev: https://github.com/nim-lang/Nim/issues/19533
[01:17:12] <PMunch> @Ruby576, I'm not sure I see what's opposite here?
[01:17:54] <PMunch> `const` needs to have its value known during compile-time. If `h` isn't known on compile-time then `i` can't be known at compile time, so it will raise an error saying that `i` can't be known at compile-time.
[01:18:51] <FromDiscord> <Ruby576> Ohhhh
[01:23:51] <FromDiscord> <Ruby576> Also where do you type from
[01:24:00] <FromDiscord> <SoicBR> sent a code paste, see https://play.nim-lang.org/#ix=3PNw
[01:24:11] <FromDiscord> <SoicBR> In reply to @Ruby576 "Also where do you": IRC
[01:24:41] <FromDiscord> <Ruby576> What is that
[01:24:57] <FromDiscord> <SoicBR> Internet Relay Chat
[01:25:10] <FromDiscord> <SoicBR> it's a chatting system or something, I'm not familiar with it, I just know it exists
[01:25:16] <FromDiscord> <Ruby576> Oo oke
[01:29:51] <FromDiscord> <auxym> In reply to @SoicBR "Can someone explain to": I think you have to use waitFor instead of await
[01:30:42] <FromDiscord> <auxym> funny I was just reading https://github.com/nim-lang/RFCs/issues/295
[01:31:22] <PMunch> Oh yeah sorry, I'm on IRc
[01:31:30] <PMunch> It's an old text-based chat thingy
[01:32:03] <FromDiscord> <Ruby576> Is it on browser or need to download?
[01:32:21] <FromDiscord> <SoicBR> Both AFAIK
[01:32:29] <FromDiscord> <SoicBR> You can make your own IRC client if you want
[01:32:33] <PMunch> @SoicBR, you're trying to call `await` from something which is not an async procedure. Either mark the procedure with `async` or use `waitFor`
[01:32:39] <FromDiscord> <Ruby576> Ooo nicee
[01:32:50] <PMunch> Yeah there are IRC web-clients, but most people download one
[01:33:02] <PMunch> The protocol is also pretty simple, so very easy to write bots or your own client
[01:33:19] <FromDiscord> <SoicBR> In reply to @auxym "I think you have": It worked
[01:33:48] <FromDiscord> <SoicBR> thank you
[01:33:58] <FromDiscord> <SoicBR> In reply to @PMunch "<@290982446445625365>, you're trying to": thank you too
[01:34:16] <FromDiscord> <SoicBR> now it at least compiles
[01:38:20] <FromDiscord> <Ruby576> In reply to @PMunch "The protocol is also": Why are you using irc instead of just discord?
[01:41:59] <PMunch> Lot simpler protocol, not locked into Discord, I've been using it since Discord became a thing
[01:42:43] <PMunch> And I just like the IRC clients better, no nonsense fluff, just straight to the point chat application
[01:43:14] <PMunch> With loooong scrollback. I can still see your "Can i ask?" message only about halfway up my screen
[01:43:30] <FromDiscord> <Ruby576> Wow
[01:44:45] <FromDiscord> <Ruby576> Can you do dms?
[01:44:52] <FromDiscord> <Ruby576> With this
[01:46:12] <nrds> <06Prestige99> You can with irc to irc but idk about discord <-> irc
[01:51:29] <PMunch> Yup, but as Prestige said you can't do Discord <-> IRC
[02:00:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:03:54] <FromDiscord> <auxym> man these people are making me feel old. I remember dowloading warez from IRC bots in the early 2000s, before BT caught on...
[02:05:47] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[02:12:21] *** Joins: vicfred (~vicfred@user/vicfred)
[02:37:01] <arkanoid> Am I the only one who vscode nim extensions stops working for unknown reasons?
[02:37:31] <FromDiscord> <huantian> Yeah it does that
[02:40:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[02:41:40] <FromDiscord> <ynfle (ynfle)> Nimions↵(@VVX7)
[02:44:30] <FromDiscord> <VVX7> good bot
[02:48:43] <FromDiscord> <ynfle> Thanks
[02:51:00] <FromDiscord> <morgan> sent a long message, see http://ix.io/3PNQ
[02:51:48] <FromDiscord> <morgan> i've made small formats a few times over the years but i think planning it out more and using a tool to generate parsers would be better for the larger formats i'm planning
[02:52:03] <FromDiscord> <morgan> (edit) "few" => "couple"
[02:53:42] <FromDiscord> <Elegantbeef> Frosty/Flatty exist
[02:54:17] <FromDiscord> <Elegantbeef> Frosty allows you to define your own serialization so you can do whatever you want with the data and just call `serialize(target, value)`
[02:54:37] <FromDiscord> <morgan> ah cool
[02:54:58] <FromDiscord> <Elegantbeef> https://github.com/disruptek/frosty it supports binary serialization out of the box
[02:58:32] <FromDiscord> <morgan> cool
[02:58:33] <FromDiscord> <morgan> thanks
[03:03:28] <arkanoid> how can I do async select on sqlite? I am using sqlite as a persistent queue between an async producer and consumer, and I'd like the consumer await for available rows
[03:05:38] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:05:46] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 245 seconds)
[03:06:47] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[03:06:49] *** Joins: robertmeta (sid514@2a03:5180:f:5::202)
[03:06:51] *** Quits: robertmeta (sid514@2a03:5180:f:5::202) (Changing host)
[03:06:51] *** Joins: robertmeta (sid514@user/robertmeta)
[03:11:20] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:21:30] <FromDiscord> <auxym> not sure if there's library support for async sqlite atm
[03:23:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:24:38] <FromDiscord> <treeform> In reply to @arkanoid "how can I do": The way sql works is its not an external library or thread it all runs using the CPU you call it with. There is nothing async about it.
[03:26:23] <arkanoid> treeform, what? I know you have done a postgres async library, but I don't understand your answer
[03:26:29] <arkanoid> I mean
[03:26:58] <arkanoid> running a query on a sqlite db requires I/O, doesn't it make an async candidate?
[03:27:46] <arkanoid> there's also this: https://www.sqlite.org/asyncvfs.html
[03:40:15] <FromDiscord> <treeform> I am not a sqlite db exert. But yes in theory because it does file io it can be async.
[03:40:34] <FromDiscord> <treeform> But no os does not provides an async file API. So you have to use threads for that.
[03:40:37] *** Joins: lucerne0 (~lucerne@ip202.ip-51-178-215.eu)
[03:40:50] <FromDiscord> <treeform> Node JS emulates async file api with threads for example.
[03:41:34] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Ping timeout: 250 seconds)
[03:41:35] *** lucerne0 is now known as lucerne
[03:42:30] <arkanoid> treeform: https://nim-lang.org/docs/asyncfile.html ?
[03:43:10] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[03:45:19] *** Joins: tiorock (~rc@192.12.112.205)
[03:45:19] *** Quits: tiorock (~rc@192.12.112.205) (Changing host)
[03:45:19] *** Joins: tiorock (~rc@user/rockcavera)
[03:45:19] *** rockcavera is now known as Guest5006
[03:45:19] *** Quits: Guest5006 (~rc@user/rockcavera) (Killed (strontium.libera.chat (Nickname regained by services)))
[03:45:19] *** tiorock is now known as rockcavera
[03:46:00] <FromDiscord> <treeform> I think that tries to emulate an async api over what OS provides. But OS api is kind of meh.
[03:48:07] <arkanoid> treeform, sincerely curious why you think this
[03:48:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:51:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:52:03] <FromDiscord> <treeform> I think most of my knowable comes with working with  libuv and might be wrong when applied to other things: https://nikhilm.github.io/uvbook/filesystem.html
[03:52:06] <FromDiscord> <auxym> this might be of interest, io_uring is very recent and meant to adress issues with older linux APIs for async file IO https://www.phoronix.com/scan.php?page=news_item&px=Linux-io_uring-Fast-Efficient
[03:55:31] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[03:55:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:57:39] *** Joins: vicfred_ (~vicfred@user/vicfred)
[03:57:44] <FromDiscord> <treeform> In reply to @arkanoid "<@107140179025735680>, sincerely curious why": https://github.com/nim-lang/Nim/issues/7422#issuecomment-376482556
[03:57:53] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[03:57:54] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[03:59:04] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[03:59:18] <FromDiscord> <treeform> In reply to @arkanoid "<@107140179025735680>, sincerely curious why": https://github.com/nim-lang/Nim/issues/11564
[04:00:05] <FromDiscord> <treeform> In reply to @arkanoid "<@107140179025735680>, sincerely curious why": https://github.com/nim-lang/Nim/issues/6054
[04:02:57] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[04:29:54] <FromDiscord> <abdu> how do in batch identifier a ,b, c, ...i  is to be  fiiled with array `arr :seq[int] = @[41, 3, 9, 33, 7, 99, 17, 8, 2]`↵?
[04:31:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:31:39] <FromDiscord> <auxym> ?
[04:32:42] <FromDiscord> <Elegantbeef> Nim only does tuple unpacking so you'd need a library like https://github.com/haxscramper/hmatching#custom-unpackers
[04:33:33] <FromDiscord> <Elegantbeef> !
[04:33:43] <FromDiscord> <Elegantbeef> I think they want to unpack it
[04:34:10] <FromDiscord> <Elegantbeef> otherwise you just do `var a, b, c, d, e, f, g, j, i = @[41, 3, 9, 33, 7, 99, 17, 8, 2]` and get the worlds worst code
[04:37:34] <FromDiscord> <huantian> hm I wonder what what the least amount of code to segfault in nim is↵the best I came up with is `echo cast[ptr[int]](0)[]`
[04:38:52] <FromDiscord> <Elegantbeef> Why are you echoing?
[04:39:23] <FromDiscord> <Elegantbeef> Damn we cant cast to void!
[04:39:29] <FromDiscord> <Elegantbeef> 😛
[04:40:09] <FromDiscord> <Rika> `echo cstring nil`? I don’t know
[04:40:18] <FromDiscord> <civbag> In reply to @huantian "hm I wonder what": i need KEKW emoji for this
[04:40:54] <FromDiscord> <Rika> !eval echo cstring nil
[04:40:57] <NimBot> Compile failed: /usercode/in.nim(1, 6) Error: type mismatch: got <cstring>
[04:41:02] <FromDiscord> <Rika> Hmm
[04:41:10] <FromDiscord> <ynfle> !eval echo $ cstring nil
[04:41:13] <NimBot> Compile failed: /usercode/in.nim(1, 6) Error: type mismatch: got <proc (x: varargs[typed]){.gcsafe, locks: 0.}, cstring>
[04:41:17] <FromDiscord> <Rika> Shouldn't be needed
[04:41:32] <FromDiscord> <ynfle> !eval echo cstring("this")
[04:41:34] <NimBot> this
[04:41:44] <NimEventer> New question by itil memek cantik: Do quick batch work initializing, fiiling so many identifiers with array, see https://stackoverflow.com/questions/71151265/do-quick-batch-work-initializing-fiiling-so-many-identifiers-with-array
[04:41:48] <FromDiscord> <Rika> !eval echo nil.cstring
[04:41:51] <NimBot> Compile failed: /usercode/in.nim(1, 6) Error: type mismatch: got <cstring>
[04:42:02] <FromDiscord> <Rika> Nil can’t be cstring? I guess
[04:43:01] <FromDiscord> <Elegantbeef> !eval (var b = (ref int)(nil); b[] = 0)
[04:43:05] <NimBot> Traceback (most recent call last)↵/usercode/in.nim(1)      in↵SIGSEGV: Illegal storage access. (Attempt to read from nil?)↵Segmentation fault (core dumped)
[04:43:07] <FromDiscord> <Rika> Pretty long
[04:43:24] <FromDiscord> <Elegantbeef> nil deference protection dumb safe language
[04:43:32] <FromDiscord> <Rika> discard would look shorter..
[04:43:53] <FromDiscord> <huantian> discard doesn't seem to actually do the deref tho
[04:43:54] <FromDiscord> <Elegantbeef> discard is optimized away
[04:45:21] <FromDiscord> <Elegantbeef> Due to nil safety i dont think we can do it any shorter than the cast method
[04:46:43] <FromDiscord> <Elegantbeef> @abdu\: is there any reason you ask a question here make a SO post then delete it always?
[04:48:11] <FromDiscord> <huantian> I wonder if emitting c would be less characters
[04:48:22] <FromDiscord> <Rika> Then it’s not Nim exactly
[04:48:49] <FromDiscord> <Elegantbeef> I realize `(var b: ref int; b[] = 0)` is shorter
[04:48:57] <FromDiscord> <Elegantbeef> But still not as short as possible
[04:49:09] <FromDiscord> <abdu> In reply to @Elegantbeef "otherwise you just do": For sake of ease, sorry, its oversimplified↵Real case is at same time all is converted to string i.e $ prefixed↵So how to perfect your answer
[04:49:40] <FromDiscord> <huantian> In reply to @Rika "Then it’s not Nim": Yeah true
[04:50:56] <FromDiscord> <Elegantbeef> You want to assign all the variables to the string version of the sequence?
[04:55:23] <FromDiscord> <huantian> Or maybe each element in the sequence is converted to a string?
[04:56:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[05:00:19] <FromDiscord> <Elegantbeef> No clue elaboration makes helping easier
[05:05:10] *** Joins: ltriant (~ltriant@118.102.122.246)
[05:06:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:23:29] <arkanoid> does awaiting this "https://nim-lang.org/docs/asyncnet.html#send%2CAsyncSocket%2Cstring" assures that all the ACKs have been received and that the destination has received all the bits?
[05:24:07] <arkanoid> the docs just says "The returned future will complete once all data has been sent", that does not necessarily means that the destination has the data
[05:27:43] <arkanoid> I know that "destination" means remote kernel, and not remote userland app, but question stands
[06:00:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[06:10:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:12:18] <FromDiscord> <demotomohiro> I think you will find out the answer by reading documents related to OS API that is used to implement that `send` procedure.↵It seems `send` procs in asyncnet module calls `send` proc in `asyncdispatch` module.
[06:27:29] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:32:20] <madprops> this is why I say lua is too barebones https://stackoverflow.com/questions/22831701/lua-read-beginning-of-a-string
[06:33:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[06:33:57] <FromDiscord> <huantian> not related to lua but my brain hates it when people don't put spaces after their commas
[06:41:24] <FromDiscord> <Rika> I thought I somehow joined a Lua server
[06:53:15] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:08:49] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Read error: Connection reset by peer)
[07:09:19] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[07:12:03] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:49:20] <FromDiscord> <huantian> we're rebranding to Luaim
[08:06:51] <FromDiscord> <Mysterysib> Hi
[08:06:58] <FromDiscord> <Elegantbeef> Hello
[08:08:31] <FromDiscord> <huantian> Hewoo
[08:30:35] <NimEventer> New post on r/nim by Yinisiki: Why am i Unable to run recursion over directories??, see https://reddit.com/r/nim/comments/sughj3/why_am_i_unable_to_run_recursion_over_directories/
[08:41:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[08:45:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:29:37] *** Joins: tiorock (~rc@192.12.112.205)
[09:29:37] *** Quits: tiorock (~rc@192.12.112.205) (Changing host)
[09:29:37] *** Joins: tiorock (~rc@user/rockcavera)
[09:29:37] *** rockcavera is now known as Guest3037
[09:29:37] *** tiorock is now known as rockcavera
[09:32:43] *** Quits: Guest3037 (~rc@user/rockcavera) (Ping timeout: 256 seconds)
[10:11:36] <FromDiscord> <civbag> In reply to @huantian "we're rebranding to Luaim": That's cool
[10:28:11] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:51:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[10:55:33] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Client Quit)
[11:35:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[11:58:04] <FromDiscord> <haxscramper> In reply to @jmgomez "So I got this": you were compiling the code using `nim cpp file.nim`, right?
[11:58:14] <FromDiscord> <haxscramper> and it did not generate `extern "C"` for you automatically?
[11:58:39] <FromDiscord> <haxscramper> I tried doing the same just now, and proc annotated with `.exportc.` generated extern annotation properly
[11:58:46] <FromDiscord> <haxscramper> `extern "C" void exportedProc(void) {`
[12:01:11] *** Joins: PMunch (~PMunch@user/pmunch)
[12:09:09] <om3ga> Hi! Is there any lib or framework for audio analyzis in nim?
[12:09:24] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:19:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:37:39] <FromDiscord> <mratsim> In reply to @om3ga "Hi! Is there any": for writing audio kernels: https://github.com/vitreo12/omni
[12:39:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[12:42:15] <om3ga> mratsim thanks!
[12:43:27] <FromDiscord> <mratsim> In reply to @om3ga "mratsim thanks!": There is a full talk about it, let me see
[12:43:42] <FromDiscord> <mratsim> https://www.youtube.com/watch?v=ruT7sbs5O-Q
[12:44:44] <om3ga> awesome. I want to do some analyzis for my study. I hope I will able to integrate it with NiGui app
[13:14:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:32:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[13:34:35] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[13:41:45] <FromDiscord> <enthus1ast> in the db\_mysql (exec etc) all params are converted to string, but LIMIT only accepts int, so its a syntax error if a string is provided
[13:42:15] <FromDiscord> <enthus1ast> do you see any other way to string interpolate?
[13:42:39] <FromDiscord> <enthus1ast> i mean i can and it should be safe since i use the parsed int
[13:45:00] <FromDiscord> <enthus1ast> also mariadb does not accept shenanigans  ala\: CAST('2' as int)  in limit ....
[13:56:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:01:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[14:05:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Client Quit)
[14:12:32] <FromDiscord> <carpal>  https://media.discordapp.net/attachments/371759389889003532/943819701170098306/unknown.png
[14:12:41] <FromDiscord> <carpal> is this a problem=
[14:12:43] <FromDiscord> <carpal> (edit) "problem=" => "problem?"
[14:13:00] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[14:27:35] <FromDiscord> <enthus1ast> any idea why the mariadb returns "ISO-8859-1" rows? The databse should operate on utf8mb4
[14:27:47] <FromDiscord> <enthus1ast> is this a client setting?
[14:29:00] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[14:29:09] <FromDiscord> <enthus1ast> ok setEncoding is athing
[14:31:05] *** Quits: rp1 (~rp@cpc77299-basf12-2-0-cust609.12-3.cable.virginm.net) (Ping timeout: 256 seconds)
[14:31:28] <FromDiscord> <enthus1ast> ok this works good (strange that utf-8 (plus the correct db suffix) is not default
[14:31:48] <FromDiscord> <enthus1ast> who in the world wants to store data in different encoding in 2022
[14:32:25] <FromDiscord> <enthus1ast> given that you're not russian or chinese and store massive amount of data
[14:32:35] <FromDiscord> <congusbongus> mariadb aka mysql has always been a bit of an oddball
[14:32:44] <FromDiscord> <congusbongus> also it's quite old
[14:34:33] <FromDiscord> <Rika> In reply to @carpal "is this a problem?": Why do you use none as a gc?
[14:42:21] <FromDiscord> <tandy> does anyone know how to not use a dependency when install nimble deps ?
[14:42:28] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3PPI
[14:42:29] <FromDiscord> <tandy> this isnt working \:o
[14:43:26] <FromDiscord> <jmgomez> In reply to @haxscramper "and it did not": you are right I just checked and Im seeing it twice I wanted to avoid the redefinition in the cpp side of things but I think it's mandatory to have it on the declaration, isnt it?
[14:45:16] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3PPJ
[14:46:48] <FromDiscord> <haxscramper> `sym.flags  {sfImportc, sfExportc} != {}` on the cpp backend will generate extern
[14:46:52] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/oSN
[14:48:14] <FromDiscord> <haxscramper> ok, so if compiles to cpp extern "C" is implicit if `.exportc.` is used
[14:48:36] <FromDiscord> <jmgomez> but what I mean is, in order to use these functions from cpp you need to forward declare them, and they must have extern in the cpp side of things
[14:48:43] <FromDiscord> <jmgomez> dont they?
[14:49:13] <FromDiscord> <haxscramper> they do
[14:49:44] <FromDiscord> <haxscramper> if you annotate nim proc with `.exportc.` it will generate forward-declared prototype with `extern "C"` annotation
[14:50:22] <FromDiscord> <haxscramper> When calling `nim cpp` extern is used to avoid name mangling
[14:50:36] <FromDiscord> <haxscramper> and when compiling your C++ code, `extern "C"` is used to be able to interface with these procs
[14:50:43] <FromDiscord> <haxscramper> I think that's how it generally works
[14:50:50] <FromDiscord> <jmgomez> this is what I mean https://media.discordapp.net/attachments/371759389889003532/943829337365446686/unknown.png
[14:51:18] <FromDiscord> <jmgomez> If I remove extern on the cpp it cant bind the function from the dl
[14:51:22] <FromDiscord> <jmgomez> (edit) "dl" => "dll"
[14:53:26] <FromDiscord> <haxscramper> can you show the build script? You still need to pass the `-ltest` when compiling the code if you are using dynamic linker (which you do, the other alternative is manually writing `dlopen` code)
[14:53:36] <FromDiscord> <haxscramper> so `clang++ -ltests main.cpp`
[14:54:06] <FromDiscord> <jmgomez> sent a code paste, see https://play.nim-lang.org/#ix=3PPM
[14:54:24] <FromDiscord> <jmgomez> (edit) "https://play.nim-lang.org/#ix=3PPM" => "https://play.nim-lang.org/#ix=3PPN"
[14:56:59] <FromDiscord> <haxscramper> why split into two steps? And I'm not sure whether g++ needs `-ltest` only on linking `g++ -o`. Maybe compilation (`g++ -c`) also needs this
[14:58:57] <FromDiscord> <jmgomez> I dont thing that influence the result, it's just a test. My plan is to study the viability of using nim to build a sdk that works from UE, Unity, native Cpp and js. So that cpp test doesnt really bothers me
[15:01:29] <FromDiscord> <jmgomez> Im downloading clang to see if it works there
[15:06:56] <FromDiscord> <jmgomez> Im seeing that when I export with the --header flag it does add the extern, that should be enough
[15:07:40] <FromDiscord> <jmgomez> (edit) "extern," => "extern to the header," | "extern to the header,that should be enough ... " 03added "to avoid all the manuals forward declare"
[15:09:17] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/2YV
[15:09:26] <FromDiscord> <haxscramper> (edit) "https://play.nim-lang.org/#ix=3PPR" => "https://play.nim-lang.org/#ix=3PPS"
[15:14:44] <FromDiscord> <jmgomez> Thanks! That's similar of what Im doing though, you still have to forward declare it on cpp (but I guess that it could be automatized)
[15:15:09] <FromDiscord> <jmgomez> One other question, is what about static libraries? Is there a compiler option for those too? (iOS need libraries to be static)
[15:15:23] <FromDiscord> <haxscramper> `--app:staticlib`
[15:15:28] <FromDiscord> <jmgomez> lovely
[15:15:48] <FromDiscord> <jmgomez> thanks a lot for your help man, it's really appreciated it!
[15:16:43] <FromDiscord> <haxscramper> In reply to @jmgomez "Thanks! That's similar of": `--header` will generate header file in the `nimcache/file.h`
[15:17:04] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PPU
[15:17:11] <FromDiscord> <haxscramper> (edit) 
[15:17:34] <FromDiscord> <jmgomez> unfortunately you cant just import it directly because of how it is build i.e https://media.discordapp.net/attachments/371759389889003532/943836063993065512/unknown.png
[15:19:15] <FromDiscord> <haxscramper> `g++ -P -I$E:HOME/.choosenim/toolchains/nim-1.6.2/lib/ -E nimcache/file.h > cleaned.h`
[15:20:33] <FromDiscord> <haxscramper> actually no
[15:20:46] <FromDiscord> <haxscramper> just write your own clean nimbase and expand `file.h` to something useful
[15:22:16] <FromDiscord> <haxscramper> `g++ -P -I(pwd) -E nimcache/file.h` will give you
[15:22:29] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PPV
[15:22:53] <FromDiscord> <haxscramper> and you can just define the helper macros how you need
[15:23:08] <FromDiscord> <jmgomez> okay, that sounds good. Will take a lot at that after I figured out others concerns.. btw do you know if nim has an event system that works across different compilation targets (js, cpp) and can be easily be consumed via them? Or it will be just better to use callbacks?
[15:23:23] <FromDiscord> <haxscramper> event system like qt signals?
[15:23:24] <FromDiscord> <haxscramper> no
[15:23:42] <FromDiscord> <haxscramper> at least I"m not aware of any library and there is certainly no built-in functionality like this
[15:24:35] <FromDiscord> <jmgomez> okay!
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:45:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[15:58:11] <FromDiscord> <adokitkat> Hi, did anybody setup nimforum locally? I got it working, had a bit of problems with logging in (set cookie didn't work so I added the "sid" cookie manually), I can create posts but I search returns empty [] everytime. Even tho DB should be connected when the added posts show up.
[16:00:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:41:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:44:19] *** Joins: rockcavera (~rc@192.12.112.205)
[16:44:19] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[16:44:19] *** Joins: rockcavera (~rc@user/rockcavera)
[16:59:51] <PMunch> I assume dom96 has run it locally
[17:00:54] <FromDiscord> <adokitkat> yeah I am waiting for his answer on github so I tried to ask here 😄
[17:01:40] <FromDiscord> <adokitkat> I am trying to debug this https://forum.nim-lang.org/t/8921
[17:02:04] <FromDiscord> <enthus1ast> thats a pretty nasty one indeed
[17:05:17] <PMunch> I'm debating deleting that topic, this really should've been disclosed properly as it might be possible to abuse..
[17:11:51] <FromDiscord> <auxym> someone should probably at least deploy an emergency fix that strips the parens or something.
[17:13:18] <PMunch> Definitiely
[17:15:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[17:18:42] <FromDiscord> <vegai> Nobody uses parentheses though
[17:18:59] <FromDiscord> <Rika> That’s not the issue though
[17:22:34] *** Quits: crem1 (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Quit: WeeChat 3.3)
[17:36:35] *** Joins: arkurious (~arkurious@user/arkurious)
[17:43:58] <FromDiscord> <adokitkat> In reply to @auxym "someone should probably at": i posted merge request yesterday
[17:44:11] <FromDiscord> <adokitkat> and we were debating the issue there
[17:44:39] <FromDiscord> <adokitkat> to fix it more thoroughly
[17:49:32] <FromDiscord> <adokitkat> does anyone here knows SQL? Can MATCH operator in sqlite3 be changed to LIKE? MATCH seems to accept SQL subset and LIKE is more of just a pattern matching...
[17:50:00] <FromDiscord> <adokitkat> I would test it but as I said I cannot get search to work on my local nimforum
[17:55:08] <FromDiscord> <auxym> if this actually crashes the whole forum server, then I don't agree with dom, I think any sort of emergency fix that prevents crashes should be deployed and then we can spend time on figuring out the underlying issue.
[17:55:24] <FromDiscord> <auxym> No familiar enough with like/match though
[17:55:30] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[17:57:03] <FromDiscord> <auxym> https://www.sqlite.org/fts3.html#section_3
[17:57:23] <FromDiscord> <auxym> "For example the LIKE query matches rows that contain terms such as "linuxophobe" or "EnterpriseLinux" (as it happens, the Enron E-Mail Dataset does not actually contain any such terms), whereas the MATCH query on the FTS3 table selects only those rows that contain "linux" as a discrete token. Both searches are case-insensitive."
[17:58:45] <FromDiscord> <auxym> https://sqlite.org/lang_expr.html
[17:58:54] <FromDiscord> <auxym> "The MATCH operator is a special syntax for the match() application-defined function. The default match() function implementation raises an exception and is not really useful for anything. But extensions can override the match() function with more helpful logic."
[17:59:57] <FromDiscord> <adokitkat> Yeah I read it
[18:00:28] <FromDiscord> <adokitkat> If I can get the search to work locally then I can test it
[18:05:46] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[18:06:00] <FromDiscord> <adokitkat> OK
[18:06:15] <FromDiscord> <adokitkat> so I the search works... just not how I imagined it
[18:07:09] <FromDiscord> <adokitkat> why cant we search for thread titles
[18:07:48] <FromDiscord> <adokitkat> rip
[18:14:32] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[18:23:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:27:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:28:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[18:28:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:31:32] <FromDiscord> <Waldecir Santos> @haxscramper is it possible to use hmatching for changing a value instead of retrieving it ?
[18:34:44] <FromDiscord> <thewhitedeath> on converting @[1,2,234] using encode(base64 module) is converts to AQLq is there any way I can do the reverse?
[18:37:26] <FromDiscord> <haxscramper> In reply to @Waldecir Santos "<@!608382355454951435> is it possible": no, until view types are stabilized the only other option is to resort to pointers, which would have to be enabled via syntax
[18:37:55] <FromDiscord> <haxscramper> because defaulting to pointers implicitly wont' work for js/nimscript/things that don't have `addr` such as functiopn results etc.
[18:38:25] <FromDiscord> <haxscramper> I tried this, but last time I tried to use view types I got codegen error in ten minutes and crashed compiler after half an hour
[18:38:42] <FromDiscord> <haxscramper> but yeah, that would be nice to have
[18:38:55] <FromDiscord> <Waldecir Santos> oh, nice I've no idea what view types are, can you share anything about them
[18:39:19] <FromDiscord> <Waldecir Santos> Yeah it would be magical for what I'm doing, I hate code like `result[0][0][1][0]` lol
[18:39:28] <FromDiscord> <haxscramper> https://nim-lang.org/docs/manual_experimental.html#view-types they are experimental features for now
[18:39:41] <FromDiscord> <haxscramper> In reply to @Waldecir Santos "Yeah it would be": if the type is `ref` you sort of get mutation already
[18:39:52] <FromDiscord> <haxscramper> I assume `[0][][][][` is some kind of ref tree
[18:40:07] <FromDiscord> <Waldecir Santos> Yeah AST tree.
[18:40:19] <FromDiscord> <haxscramper> if it is ref you can just mutate captures
[18:40:50] <FromDiscord> <haxscramper> because captured elements don't `deepCopy` (obviously) and regular `=` that I used just gives you the same reference
[18:41:53] <FromDiscord> <Waldecir Santos> What do you mean by ` just mutate captures` ? I've captured a seq of nimnodes iterated and changed they but that dosen't reflect on the final
[18:43:22] <FromDiscord> <haxscramper> ugh, nim node is a `.magic.` so I can't really be certain it would work
[18:43:33] <FromDiscord> <haxscramper> what exactlyt "doesn't reflect on the final" mean?
[18:43:50] <FromDiscord> <haxscramper> `[@capture]`  `capture  = newLit(12)` and the original ast is the same?
[18:43:58] <FromDiscord> <haxscramper> for named positions
[18:44:00] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PRc
[18:44:41] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PRd
[18:44:43] <FromDiscord> <haxscramper> `{ PosBody: @body }`
[18:45:03] <FromDiscord> <haxscramper> if you don't even want to remember the correct positioning and/or fill in the blanks in the pattern `_`
[18:45:24] <FromDiscord> <haxscramper> Should also work for slices
[18:45:30] <FromDiscord> <haxscramper> if you have different overload for `[]`
[18:46:57] <FromDiscord> <Waldecir Santos> Let me share my example one sec
[18:47:37] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PRg
[18:48:41] <FromDiscord> <Waldecir Santos> This is the code: https://play.nim-lang.org/#ix=3PRh
[18:49:23] <FromDiscord> <Waldecir Santos> I'm basically Faking a "field" type like Django, and Copying them as pragmas so I can simulate python descritors and have same "Defination" as Django
[18:49:49] <FromDiscord> <haxscramper> No reply from server:↵502:
[18:49:51] <FromDiscord> <haxscramper> nice
[18:50:05] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/943889549543743508/unknown.png
[18:50:11] <FromDiscord> <Waldecir Santos> if that helps
[18:50:28] <FromDiscord> <Waldecir Santos> the result is the final AST and you can see that nothing changed there
[18:52:04] <FromDiscord> <Waldecir Santos> (edit) "result" => "`result` variable"
[18:52:27] <FromDiscord> <haxscramper> you are doing `for identDefs in ...`
[18:52:32] <FromDiscord> <haxscramper> try adding `mitems`
[18:53:51] <FromDiscord> <haxscramper> nope, this does not work
[18:53:52] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PRl
[18:53:57] <FromDiscord> <Waldecir Santos> Yeah no luck
[18:55:31] <FromDiscord> <haxscramper> this works
[18:55:38] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3PRm
[18:55:40] <FromDiscord> <haxscramper> => NimNode is `.magic.`
[18:56:21] <FromDiscord> <Waldecir Santos> Not sure what `.magic.`. means but seems like I don't have anu other option because of it, right ?
[19:01:22] <PMunch> .magic. is something which is implemented internally in the compiler
[19:04:37] <FromDiscord> <haxscramper> yeah
[19:04:54] <FromDiscord> <haxscramper> basically nim node might or might now follow regular rules wrt. to asignments and so on
[19:05:53] <FromDiscord> <Waldecir Santos> got it
[19:12:25] <FromDiscord> <Waldecir Santos> Would be nice to have a option in the for loop for asking the ref, well, it's what it is, I proceed.
[19:12:43] <FromDiscord> <Waldecir Santos> @haxscramper if you can share more about views type I got curious
[19:14:56] <FromDiscord> <haxscramper> I have never actually used them
[19:15:02] <FromDiscord> <haxscramper> Because they are unusable
[19:15:59] <FromDiscord> <haxscramper> But tl;dr is that view type is a convenience wrapper around pointer
[19:16:09] <FromDiscord> <haxscramper> Single element or multiple elements
[19:17:28] <FromDiscord> <Waldecir Santos> got it
[19:19:37] <PMunch> Just uploaded my FOSDEM talk video to YouTube if anyone is interested: https://youtu.be/0dt3icPj8Kk
[19:19:40] <FromDiscord> <haxscramper> Main feature for macros, at least in my understanding is that view types would allow for `var thing = a[12]` to do a zero copy-view, and for `var thing = call()` they would expand lifetime of the result
[19:20:11] <FromDiscord> <haxscramper> So you can simplify the codegen while still getting the results
[19:20:18] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[19:20:27] <FromDiscord> <haxscramper> Also I wanted to have a mutable view to immutable data
[19:20:37] <FromDiscord> <haxscramper> But seems like this possibility is slashed
[19:21:04] <FromDiscord> <Rika> After that we need go's concurrency system and we basically have all of go beaten /s
[19:21:12] <FromDiscord> <Rika> More of /j I guess
[19:23:41] <FromDiscord> <adokitkat> In reply to @PMunch "Just uploaded my FOSDEM": I have just watched it on Fosdem site haha
[19:35:22] <FromDiscord> <mratsim> In reply to @Rika "After that we need": `nim c --gc:go myawesomeproject.nim`
[19:36:03] <FromDiscord> <mratsim> TBH we have most of the tools to build Goroutines on top of taskpools
[19:36:58] <FromDiscord> <mratsim> sent a long message, see http://ix.io/3PRv
[19:37:29] <FromDiscord> <mratsim> to receive tasks from any thread, Go introduces an extra-level of indirection with a global queue protected by a lock.
[19:38:20] <FromDiscord> <mratsim> and for blocked threads detection when all threads are busy, before grabbing a task, a thread will dynamically add a new thread to the threadpool.
[19:39:05] <FromDiscord> <mratsim> That part is a bit more tricky because that means you can't address threads by index anymore, especially for whatever you use to put threads to sleep.
[19:39:16] <FromDiscord> <Rika> That sounds not optimal but I assume that's the cost of extreme ease
[19:39:37] <FromDiscord> <mratsim> They use work-stealing for tasks already enqueued.
[19:39:50] <FromDiscord> <jmgomez> So I was compiling a few functions to js and I was wondering how I can use them from another js file. import doesnt seem to work
[19:40:22] <FromDiscord> <mratsim> also given that everyone is using the Go runtime, I think it's very rare that tasks come from a thread that is unknown to the runtime.
[19:40:32] <FromDiscord> <mratsim> I'm not even sure how that codepath is exercised.
[19:40:36] <FromDiscord> <Rika> Everyone is?
[19:40:46] <FromDiscord> <mratsim> every Go library
[19:42:13] <FromDiscord> <mratsim> one alternative is to have tasks submitted be randomly appended to any worker queue
[19:42:26] <FromDiscord> <auxym> In reply to @jmgomez "So I was compiling": exportc I think: https://nim-lang.org/docs/manual.html#foreign-function-interface-exportc-pragma
[19:42:46] <FromDiscord> <mratsim> but that means the Single Producer Multi Consumer queues suddenly become MPMC.
[19:43:28] <FromDiscord> <mratsim> and you still need a way to select a thread without an index
[19:43:58] <FromDiscord> <mratsim> you can use a threadsafe stack (Treiber stack) but it now becomes a contention point when threads pushed/popped in the stack.
[19:46:26] <FromDiscord> <jmgomez> In reply to @auxym "exportc I think: https://nim-lang.org/docs/manual.h": I was already using it thing is that it doesnt seem to export the functions as modules
[19:46:40] <FromDiscord> <jmgomez> I just did an eval of the file which is fine for now
[19:46:55] <FromDiscord> <auxym> can't help you more than that, sry, never actually used the js backend
[19:47:04] <FromDiscord> <jmgomez> np
[19:54:37] <FromDiscord> <Flo> sent a code paste, see https://play.nim-lang.org/#ix=3PRD
[19:55:11] <FromDiscord> <Flo> (edit) "https://play.nim-lang.org/#ix=3PRD" => "https://play.nim-lang.org/#ix=3PRE"
[20:04:43] <FromDiscord> <Waldecir Santos> There is a talk called Nim Nuggets, he did a diff function there map it helps you
[20:04:53] <FromDiscord> <Waldecir Santos> https://www.youtube.com/watch?v=d2VRuZo2pdA
[20:25:49] <FromDiscord> <auxym> In reply to @Flo "Is there a way": Not sure how that would work though. `bar` does have `a` defined, it's just the default. For string that's an empty string.
[20:27:14] <FromDiscord> <auxym> If the behavior you want is to update all fields that don't have the default value, then yeah you could define a proc that does that for your object `Foo`. Or a macro that automatically generates a proc for any object def you give it.
[20:28:41] <FromDiscord> <auxym> !eval echo default(int)
[20:28:43] <NimBot> 0
[20:29:00] <FromDiscord> <auxym> !eval echo default(string)
[20:29:04] <NimBot> <no output>
[20:30:14] <FromDiscord> <Flo> Ok true, I thought the fields in objects were nullables
[20:34:09] <FromDiscord> <Flo> sent a code paste, see https://play.nim-lang.org/#ix=3PRV
[20:35:05] <FromDiscord> <Flo> (edit) 
[20:42:23] <FromDiscord> <adokitkat> In reply to @Flo "So for instance for": that's because you are using ref objects
[20:42:39] <FromDiscord> <adokitkat> and they need to be initialized
[20:43:35] <FromDiscord> <adokitkat> sent a code paste, see https://play.nim-lang.org/#ix=3PRY
[20:44:05] <FromDiscord> <adokitkat> ref objects are allocated on heap
[20:44:57] <FromDiscord> <adokitkat> ref means reference and is like auto-managed pointer by GC
[20:45:15] <FromDiscord> <Waldecir Santos> Do you want to merge th objects or have a "linked" property between objects ?
[20:47:22] <FromDiscord> <Flo> Okay that clears up some of my misunderstandings for the objects!
[20:51:29] <FromDiscord> <Flo> sent a code paste, see https://paste.rs/Djc
[20:52:14] <FromDiscord> <Flo> So for `options` it would always take the `some` and for anything else the second objects value
[20:54:09] <FromDiscord> <Flo> Also how do I create these fallback values for my custom types (like 0 for `int` etc) ?
[21:09:57] <FromDiscord> <adokitkat> In reply to @Flo "I guess I would": if you decide on some default value which would not be ever used otherwise you could do something like this?
[21:10:12] <FromDiscord> <adokitkat> sent a code paste, see https://paste.rs/07N
[21:11:30] <FromDiscord> <adokitkat> or use Option type and nil as default
[21:13:45] <FromDiscord> <Waldecir Santos> @Flo is this what you need https://github.com/beef331/constructor ?
[21:20:24] <FromDiscord> <Flo> @adokitkat Thanks for the write-up, this looks like something I could use↵@Waldecir Santos Thanks, that looks interesting as well!
[21:27:26] <FromDiscord> <adokitkat> In reply to @Flo "<@!216745055770116106> Thanks for the": with options:
[21:27:37] <FromDiscord> <adokitkat> sent a code paste, see https://play.nim-lang.org/#ix=3PSf
[21:27:51] <FromDiscord> <adokitkat> No problem 😄
[21:34:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[21:35:03] <FromDiscord> <b4mbus> so nim allows user defined operators to be any combination of the basic operator set
[21:35:09] <FromDiscord> <b4mbus> so why doesnt it work?
[21:35:11] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3PSl
[21:35:32] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3PSm
[21:36:00] <FromDiscord> <adokitkat> you are missing one -
[21:36:11] <FromDiscord> <adokitkat> in echo
[21:36:19] <FromDiscord> <b4mbus> me dumbo
[21:36:21] <FromDiscord> <b4mbus> 🙏
[21:36:22] <FromDiscord> <b4mbus> thanks yeah
[21:55:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:14:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[22:26:57] <Amun-Ra> hmm, what's wrong with this assignment? https://play.nim-lang.org/#ix=3PSB
[22:28:51] <FromDiscord> <adokitkat> In reply to @Amun-Ra "hmm, what's wrong with": they have to be ref objects for inheritance to work
[22:29:50] <Amun-Ra> hmm
[22:29:54] <FromDiscord> <adokitkat> I think so
[22:30:00] <FromDiscord> <adokitkat> it works that way
[22:30:37] <FromDiscord> <adokitkat> > Ref objects should be used whenever inheritance is used. It isn't strictly necessary, but with non-ref objects, assignments such as let person: Person = Student(id: 123) will truncate subclass fields.↵> ↵> Note: Composition (has-a relation) is often preferable to inheritance (is-a relation) for simple code reuse. Since objects are value types in Nim, composition is as efficient as inheritance.
[22:31:07] <FromDiscord> <adokitkat> maybe it's a bug when using plain objects
[22:32:33] <Amun-Ra> right, it works with refs, I wonder whether it should work for plain ones or not
[22:34:24] <Amun-Ra> I found that quote, there's no example for composition unfortunately
[22:40:01] <nrds> <07sorceror/freenode99> :   _  _   __  __ _____ ____    _    
[22:40:01] <nrds> <07sorceror/freenode99> : _| || |_|  \/  |  ___/ ___|  / \   
[22:40:01] <nrds> <07sorceror/freenode99> :|_  ..  _| |\/| | |_ | |  _  / _ \  
[22:40:03] <nrds> <07sorceror/freenode99> :|_      _| |  | |  _|| |_| |/ ___ \ 
[22:40:05] <nrds> <07sorceror/freenode99> :  |_||_| |_|  |_|_|   \____/_/   \_\
[22:40:05] <nrds> <07sorceror/freenode99> <rasengan> Classic Freenode had a special part in my heart and everyone else's.  It's the saddest and hardest thing I've done, in a long time - but I am giving the directive to shut it down.
[22:56:29] <Amun-Ra> there's one con of refs, I loose =destroy
[23:03:59] <Amun-Ra> hmm, I don't
[23:14:03] <FromDiscord> <jmgomez> sent a code paste, see https://play.nim-lang.org/#ix=3PSK
[23:14:34] <FromDiscord> <jmgomez> OC if I remove line 34 it works fine
[23:17:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:26:17] <FromDiscord> <demotomohiro> Did you check you are using correct calling convention?
[23:28:17] <FromDiscord> <demotomohiro> Did you check sizeof(int) in Nim and C?
[23:28:38] <FromDiscord> <demotomohiro> It is possible that sizeof(int) in Nim and C can be different
[23:29:57] <FromDiscord> <demotomohiro> So, if you want to create a proc for C lang, you souhld use `cint` type that correspond to `int` in C.
[23:30:09] <Amun-Ra> yes, int will cause problems
[23:31:51] <FromDiscord> <demotomohiro> https://internet-of-tomohiro.netlify.app/nim/faq.en.html#type-what-is-the-difference-between-cintslashcfloat-and-intslashfloatqmark
[23:32:54] <Amun-Ra> also, you shouldn't use ref for interop with C or C++ → ptr
[23:33:27] <FromDiscord> <demotomohiro> Nim has types for interfacing with C lang that have 'c' prefix: https://nim-lang.org/docs/system.html#cdouble
[23:39:27] <Amun-Ra> jmgomez: there are several problems with the code: age in Person should be of cint type, you are passing a pointer to Person to printPerson etc, so it's ptr Person, not ref Person
[23:42:11] <Amun-Ra> fun argument in callbackTest is missing cdecl pragma (or whatever windows uses)
[23:42:43] <FromDiscord> <planetis> Amun-Ra\: you can use inheritance with plain objects as well but can't assign to base type. See std/lexbase
[23:43:31] <Amun-Ra> planetis: I need this for a kind of UI interface, it has to be base type
[23:59:21] <arkanoid> I'm calling a C function call that prints to stdout and stderr, and I have no internal option to disable it. Is there a way to redirect/disable output in nim? 
