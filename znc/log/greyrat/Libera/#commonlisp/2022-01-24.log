[00:00:15] <mfiano> Gray streams/generic functions allow for flexibility and extensibility.
[00:00:40] <mfiano> I would much prefer them over a closure that is hard to debug/poke at from the outside
[00:02:01] <huckleberry> all right, thanks
[00:02:04] *** Quits: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7) (Ping timeout: 268 seconds)
[00:05:46] *** Parts: Masinterlisp (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[00:06:30] *** Joins: Masinterlisp (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[00:16:51] *** Joins: Grauwolf (~grauwolf@user/grauwolf)
[00:16:52] *** Quits: amb007 (~a_bakic@34.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:17:06] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[00:18:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:22:08] *** Quits: shka (~herr@109.231.0.226) (Quit: Konversation terminated!)
[00:26:03] *** Quits: cage (~cage@dynamic-adsl-84-221-50-16.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:26:55] *** Joins: shka (~herr@109.231.0.226)
[00:28:01] *** Quits: huckleberry (~huckleber@2603-8000-4102-9b00-6ddf-6d6a-f05d-0f18.res6.spectrum.com) (Quit: disconnected)
[00:53:15] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[01:09:12] *** Quits: kevingal_ (~quassel@176.61.88.240) (Remote host closed the connection)
[01:09:12] *** Quits: kevingal (~quassel@176.61.88.240) (Remote host closed the connection)
[01:09:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[01:11:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:11:58] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:12:47] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[01:16:18] *** Joins: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246)
[01:27:20] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:7411:4d6e:ff63:e8a3)
[01:27:58] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ae:adc1:19c8:6f0b:d217:bdaf)
[01:29:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:32:06] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:7411:4d6e:ff63:e8a3) (Ping timeout: 268 seconds)
[01:37:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:38:47] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[01:44:13] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:57] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[01:48:28] *** Joins: lispy (~lispy4@84.69.59.93)
[01:48:36] <lispy> (format t "Hello")
[01:54:03] *** Quits: Masinterlisp (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[01:57:49] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[02:08:20] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[02:19:35] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ae:adc1:19c8:6f0b:d217:bdaf) (Ping timeout: 268 seconds)
[02:21:58] *** Quits: VincentVega (~user@212.97.0.240) (Quit: ERC (IRC client for Emacs 27.2))
[02:25:04] <White_Flame> (terpri)
[02:25:28] <phoe> (princ "CL-USER> ")
[02:28:17] *** Quits: attila_lendvai (~alendvai@catv-176-63-13-198.catv.broadband.hu) (Ping timeout: 240 seconds)
[02:30:13] <EdLangley[m]> (eval (capi:prompt-for-form "CL-USER>"))
[02:31:04] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[02:35:38] *** Quits: occ (~occ@user/occ) (Ping timeout: 250 seconds)
[02:38:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[02:42:42] <dre> (foo bar ())
[02:42:51] <dre> god I love lisp
[02:46:56] *** Quits: pve (~pve@178-55-168-197.bb.dnainternet.fi) (Quit: leaving)
[02:50:37] <bollu> Oh neat, "Gray" is after the person who invented the CLOS spec for how streams "should" be?
[03:00:02] *** Joins: pillton (~user@193-116-85-183.tpgi.com.au)
[03:03:12] *** Joins: amb007 (~a_bakic@34.144.204.77.rev.sfr.net)
[03:03:12] *** Quits: amb007 (~a_bakic@34.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:03:25] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[03:06:12] *** Joins: notzmv (~zmv@user/notzmv)
[03:08:02] <moon-child> I thought it was 'gray' as in 'gray water'
[03:14:33] <sm2n> gray as in "David Gray"
[03:16:58] *** Joins: dra (~dra@2a04:4540:6402:9000:3d71:f20b:5e55:173f)
[03:20:17] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:23:37] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 240 seconds)
[03:24:11] <dbotton> Xach when is the next quicklisp release coming up?
[03:43:10] *** Joins: dra_ (~dra@2a04:4540:640a:de00:3d71:f20b:5e55:173f)
[03:45:32] *** Quits: dra (~dra@2a04:4540:6402:9000:3d71:f20b:5e55:173f) (Ping timeout: 240 seconds)
[03:49:15] *** Quits: dra_ (~dra@2a04:4540:640a:de00:3d71:f20b:5e55:173f) (Quit: Leaving)
[03:49:25] *** Joins: dra (~dra@2a04:4540:640a:de00:3d71:f20b:5e55:173f)
[03:54:28] *** Joins: occ (~occ@user/occ)
[04:02:37] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[04:04:11] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[04:09:17] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 240 seconds)
[04:17:43] *** Quits: dra (~dra@2a04:4540:640a:de00:3d71:f20b:5e55:173f) (Remote host closed the connection)
[04:36:12] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1029-static.midco.net)
[04:40:38] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[04:50:04] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[04:59:10] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[05:24:33] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:31:58] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[05:39:23] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[05:47:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[05:49:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:51:48] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:53:50] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (Quit: Colleen)
[05:54:36] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[05:54:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[05:59:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[06:00:22] *** Joins: jealousmonk (~user@2804:431:e7c5:c29d:f611:a6e4:135a:8b29)
[06:07:26] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[06:28:06] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 268 seconds)
[06:37:09] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:9c57:17b6:65b6:b182)
[06:49:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[06:50:40] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:06:24] *** Quits: jealousmonk (~user@2804:431:e7c5:c29d:f611:a6e4:135a:8b29) (Remote host closed the connection)
[07:17:44] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Remote host closed the connection)
[07:17:57] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[07:19:59] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[07:23:13] *** Quits: dre (~dre@2001:8003:c932:c301:ce6d:d9b0:21ac:1ee2) (Quit: Leaving)
[07:24:06] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[07:27:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[07:29:55] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:30:11] <beach> Good morning everyone!
[07:31:04] *** Joins: dre (~dre@2001:8003:c932:c301:d3ad:30f8:46d3:c284)
[07:31:08] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[07:31:43] <lisp123> Good Morning Beach!
[07:42:38] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[07:52:06] *** Joins: Guest9625 (~Guest96@2600:1700:ed0:36c0:c593:298a:f8ee:57f4)
[07:52:58] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[07:55:52] *** Quits: Guest9625 (~Guest96@2600:1700:ed0:36c0:c593:298a:f8ee:57f4) (Client Quit)
[07:57:35] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 256 seconds)
[07:58:48] *** Joins: [w] (~w]@2601:8c1:80:70d0::4b06)
[08:01:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:04:27] *** Joins: occ (~occ@user/occ)
[08:05:24] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:c17:d8ca:f795:73f0) (Ping timeout: 250 seconds)
[08:10:52] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[08:13:27] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[08:17:55] *** Joins: semz_ (~semz@user/semz)
[08:20:34] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[08:24:12] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:30:15] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:33:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:35:39] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[08:36:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:38:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:38:23] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[08:42:25] *** Quits: opcode (~nathan@user/opcode) (Ping timeout: 250 seconds)
[08:50:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:52:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:54:40] <lisp123w> pjb: Thanks for that. Definitely need to get into using APROPOS more
[09:07:05] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:08:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:31:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:36:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:38:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:42:33] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[10:07:16] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[10:14:21] *** Joins: spiaggia (~user@2a01:cb19:150:3400:31e8:91e4:c90c:a42f)
[10:25:48] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[10:34:32] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Ping timeout: 240 seconds)
[10:36:57] *** Joins: opcode (~opcode@user/opcode)
[10:54:56] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[10:56:48] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[10:58:11] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[11:01:22] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ae:adc1:a4d1:e3e1:6fc6:1c29)
[11:07:27] *** Quits: parjanya (~esb@177.33.154.179) (Ping timeout: 268 seconds)
[11:27:32] *** Joins: shka (~herr@109.231.0.226)
[11:28:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Read error: Connection reset by peer)
[11:33:04] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[11:42:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:42:38] *** Quits: spiaggia (~user@2a01:cb19:150:3400:31e8:91e4:c90c:a42f) (Quit: ERC (IRC client for Emacs 26.3))
[11:43:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:43:09] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[11:47:30] *** Parts: lisp123w (~user@80.227.170.170) (ERC (IRC client for Emacs 26.3))
[11:48:01] <ns12> Why do Common Lispers tend to (:use :alexandria) instead of using package local nicknames or using the full form (e.g. #'alexandria:extremum)?
[11:48:42] <ns12> Is there a good reason, or is it just laziness on the part of the programmer?
[11:49:11] <White_Flame> alexandria predated PLNs
[11:49:39] <White_Flame> and the symbol names are pretty importable and very commonly used
[11:49:52] <White_Flame> however, a:foo is a newer common PLN
[11:52:22] <ns12> Before the existence of PLN, why didn't CL programmers use the full name of Alexandria symbols (e.g. #'alexandria:extremum)?
[11:52:43] <White_Flame> the symbol names are pretty importable and very commonly used ;)
[11:52:54] <ns12> White_Flame: "a:foo is a newer common PLN" - Is this the recommended style nowadays?
[11:53:12] <White_Flame> it's effectively treated as an extension to the standard CL functions
[11:53:32] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[11:53:32] <White_Flame> do what you want, that seems sensible :)
[11:53:46] <ns12> "the symbol names are pretty importable and very commonly used" - Oh. Sorry. It didn't click for me. What do you mean by symbol names being "importable"?
[11:53:50] <White_Flame> it is recommended style to use PLNs for ease of use nowadays.  the actual abbreviation is up to you
[11:54:15] <White_Flame> they don't conflict, as they're named pretty globally appropriately to what they do
[11:54:53] <White_Flame> and if you have your own personal suite of library functions that do conflict with alexandria, it's recommended to use alexandria instead and standardize your code
[11:55:01] <ns12> "it's effectively treated as an extension to the standard CL functions" - I guess this is the answer.
[11:55:31] <ns12> s/answer/answer to my main question/
[11:56:32] <White_Flame> yep, but I do predict that a: will become more used as people port things to and write new things with PLNs
[11:57:32] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 240 seconds)
[11:58:57] <ns12> Suppose I am using library X, which USEs function F from Alexandria. If I USE Alexandria in my main program and accidentally define my own function having the same name as function F from Alexandria, will there be disaster?
[11:59:33] *** Joins: pjb (~pjb@user/pjb)
[12:00:39] <White_Flame> your (defun f () ..) will read as (cl:defun alexandria:f () ...), and your defniition will overwrite it (unless you reload alexandria later)
[12:00:41] <White_Flame> your lisp might very well warn you
[12:01:35] <White_Flame> ( SBCL generally does, if there's a double defun somewhere)
[12:02:35] <ns12> "your (defun f () ..) will read as (cl:defun alexandria:f () ...)" - Why does this happen? When I USE a package, its symbols are merged into the current package's symbol table?
[12:02:54] <White_Flame> yes
[12:03:06] <White_Flame> your package will map "F" to the symbol ALEXANDRIA:F
[12:03:09] <White_Flame> that's what an import is
[12:03:23] <White_Flame> just like "+" maps to CL:+ in your package
[12:03:32] <White_Flame> CL isn't special at all in that regard
[12:04:24] <ns12> Oh, but what happens when I USE two packages that define the symbol?
[12:04:36] <ns12> s/the symbol/the same symbol/
[12:05:00] <moon-child> kaboom :)
[12:05:10] <Krystof> well, using two package that export the *same* symbol is fine
[12:05:22] <Krystof> using two packages that export different symbols with the same name leads to conflict
[12:05:42] <moon-child> (this is one reason why it is no longer considered good practice to use packages, and use of PLNs is encouraged)
[12:05:53] <ns12> Understood. Thanks.
[12:07:07] <ns12> "your (defun f () ..) will read as (cl:defun alexandria:f () ...)" - Is there a way to display this interactively? As in "(defun f () ..)" -> "(cl:defun alexandria:f () ...)"
[12:07:46] <beach> ns12: You can do (symbol-package 'f)
[12:08:04] <Krystof> (let ((form (read-from-string "(defun f () ...)")) (*package* (find-package "KEYWORD"))) (prin1 form))
[12:08:12] <beach> Or you can bind *package* to the keyword package.
[12:08:18] <beach> Right.
[12:08:37] <moon-child> Krystof: why not just: (let ((form '(defun f () ... ))) ... )?
[12:11:20] <ns12> Wonderful. Thank you White_Flame, moon-child, Krystof, and beach.
[12:11:34] <White_Flame> np
[12:12:38] <ns12> Why set *package* to "KEYWORD" instead of "CL"?
[12:13:12] <beach> Because you wanted the cl: prefix.
[12:13:34] <pjb> while printing.
[12:13:49] <beach> You won't get that if *PACKAGE* is the CL package.
[12:14:16] <pjb> (let ((form (read-from-string "(defun foo (x) (if (minusp x) (- x) x))")))  (let ((*package* (find-package "KEYWORD"))) (print form))) #|
[12:14:16] <pjb> (common-lisp:defun common-lisp-user::foo (common-lisp-user::x) (common-lisp:if (common-lisp:minusp common-lisp-user::x) (common-lisp-user::- common-lisp-user::x) common-lisp-user::x))  --> (defun foo (x) (if (minusp x) (- x) x)) |#
[12:15:07] <pjb> (let ((form (read-from-string "(foo if :keyword)")))  (let ((*package* (find-package "KEYWORD"))) (print form))) #|
[12:15:07] <pjb> (common-lisp-user::foo common-lisp:if :keyword)  --> (foo if :keyword) |#
[12:15:25] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Remote host closed the connection)
[12:15:27] <pjb> you don't get a keyword: prefix, but keywords are still printed as :keyword so it's clear.
[12:15:39] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[12:16:44] *** Joins: pve (~pve@37-33-78-221.bb.dnainternet.fi)
[12:17:05] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:17:59] <ns12> I see, out of the three standardized packages, only the keyword package is suitable causing the printing of prefixes. http://www.lispworks.com/documentation/lw50/CLHS/Body/11_ab.htm
[12:19:09] <ns12> s/prefixes/common-lisp: and common-lisp-user: prefixes/
[12:21:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[12:23:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:24:43] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:27:51] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) ()
[12:32:15] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[12:35:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:45:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:50:33] *** Quits: occ (~occ@user/occ) (Read error: Connection reset by peer)
[13:10:01] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:9c57:17b6:65b6:b182) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:11:02] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[13:12:35] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[13:17:24] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 250 seconds)
[13:26:34] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl)
[13:28:06] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:41f6:c43f:4ee1:b9fb)
[13:31:11] *** semz_ is now known as semz
[13:35:45] *** Joins: Cymew (~ante@host-95-193-1-139.mobileonline.telia.com)
[14:15:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:16:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:16:02] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[14:17:36] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[14:18:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:26:08] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[14:27:36] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[14:31:02] *** Joins: random-nick (~random-ni@87.116.181.150)
[14:33:18] *** Quits: [w] (~w]@2601:8c1:80:70d0::4b06) (Quit: nyaa~)
[14:38:03] *** Joins: vats (~vats@103.158.91.71)
[14:47:36] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ae:adc1:a4d1:e3e1:6fc6:1c29) (Ping timeout: 268 seconds)
[14:53:34] *** Joins: santiagopim (~user@90.167.95.41)
[14:58:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:59:48] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[15:01:55] *** Joins: Lord_Nightmare2 (Lord_Night@user/lord-nightmare/x-3657113)
[15:02:06] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Read error: Connection reset by peer)
[15:02:13] *** Joins: rogersm (~rogersm@90.166.180.250)
[15:03:34] *** Lord_Nightmare2 is now known as Lord_Nightmare
[15:16:08] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[15:17:35] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[15:21:16] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[15:25:14] *** Quits: Cymew (~ante@host-95-193-1-139.mobileonline.telia.com) (Ping timeout: 250 seconds)
[15:25:15] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[15:25:17] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 240 seconds)
[15:25:37] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[15:26:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[15:26:57] *** Quits: vats (~vats@103.158.91.71) (Ping timeout: 240 seconds)
[15:35:07] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Remote host closed the connection)
[15:35:21] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[15:38:36] *** Joins: morganw (~user@80.225.24.132)
[15:41:12] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[15:41:39] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[15:43:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:48:12] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:41f6:c43f:4ee1:b9fb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:50:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[15:59:27] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:03:30] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[16:06:09] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[16:06:39] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[16:09:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:10:41] *** Joins: occ (~occ@user/occ)
[16:14:32] *** Joins: Algernon69 (~Algernon6@80.215.8.116)
[16:14:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[16:16:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:17:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[16:17:41] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[16:20:50] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Read error: Connection reset by peer)
[16:21:03] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[16:21:06] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[16:22:35] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[16:22:58] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[16:26:12] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[16:26:19] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[16:26:36] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[16:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[16:37:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:43:51] *** Quits: |smlckz| (smlckz@user/smlckz) (Ping timeout: 250 seconds)
[16:45:21] *** Joins: |smlckz| (smlckz@user/smlckz)
[16:49:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[16:50:30] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:aa5f:93ea:3b88:5ff5)
[16:51:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:11:06] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu) (Read error: Connection reset by peer)
[17:12:41] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.broadband.hu)
[17:22:17] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[17:22:40] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[17:25:36] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[17:28:10] *** Quits: occ (~occ@user/occ) (Remote host closed the connection)
[17:29:15] *** Joins: occ (~occ@user/occ)
[17:33:07] *** Quits: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net) (Quit: Leaving...)
[17:33:07] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[17:35:39] *** Joins: Cymew (~ante@host-95-193-0-196.mobileonline.telia.com)
[18:00:48] *** Joins: Bike (~Bike@71.69.170.70)
[18:26:41] <phoe> Which part of the specification mentions that (MULTIPLE-VALUE-CALL (LAMBDA (ONE TWO) (LIST ONE TWO)) (VALUES 1 2 3)) should be an error?
[18:26:47] <phoe> clhs multiple-value-call
[18:26:47] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/s_multip.htm
[18:27:00] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:4860:ab29:df65:d349)
[18:27:34] <phoe> clhs program-error
[18:27:35] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/e_progra.htm
[18:28:45] *** Joins: djuber (~user@65.79.128.64)
[18:30:28] <beach> You are passing three values to a function that takes two, no?
[18:30:33] <phoe> yes
[18:30:34] <beach> er, three arguments.
[18:30:38] <phoe> clhs 3.5.1.3
[18:30:38] <specbot> Too Many Arguments: http://www.lispworks.com/reference/HyperSpec/Body/03_eac.htm
[18:30:39] <phoe> found it
[18:30:40] <Alfr> phoe, maybe 3.5.1.3? Note that your lambda takes exactly three arguments.
[18:30:45] <phoe> Alfr: yes, thank you
[18:31:57] <Alfr> *two
[18:35:32] * phoe nods, files a bugticket
[18:38:57] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:42:23] <ns12> Is it valid to add a particular keyword to *features* more than once? e.g. (push :foo *features*) (push :foo *features*)
[18:42:23] <ns12> Or is it better to use PUSHNEW instead of PUSH in this case?
[18:44:23] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[18:44:44] <Bike> i don't think there is any restriction, but you might as well use pushnew.
[18:44:49] <Bike> less confusing.
[18:47:04] <ns12> Is it conventional to prefix custom feature symbols with the name of the library that adds the feature symbol to *features*?
[18:47:32] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[18:59:54] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:03:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[19:13:14] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[19:14:41] <_73> Is it possible to handle a condition that is internal to another package?
[19:15:34] <beach> Conditions are neither internal nor external to packages.
[19:15:37] <beach> Only symbols are.
[19:16:00] <beach> So if you use the correct symbol for its name, there is no problem.
[19:17:41] <_73> The symbol that denotes the condition type is internal, so I get an undefined symbol error.
[19:18:49] <beach> Symbols can not be undefined.  If the symbol is internal, you need to use a double package marker to refer to it.  That's not great with respect to modularity, but that's what you need to do.
[19:19:14] <pjb> You don't even have to use the right symbol in the handling form, if you know a superclass of those conditions that is named in another package!
[19:20:03] <pjb> (define-condition foo::condi () ()) (define-condition bar::error (foo::condi) ())   (handler-case (will-signal-bar-error) (foo::condi (err) (handle-bar-error-here err)))
[19:20:12] <_death> you can also consider whether the name should actually be external and if so export it and possibly submit a patch
[19:20:59] <_73> pjb: ohh I see, that should work for me.
[19:22:16] *** Quits: Cymew (~ante@host-95-193-0-196.mobileonline.telia.com) (Ping timeout: 250 seconds)
[19:22:54] <phoe> _73: which package/condition is that? what are the supertypes of that condition?
[19:23:29] <phoe> maybe the condition itself is something like si::simple-reader-error and you are actually supposed to handle cl:reader-error instead
[19:23:56] <phoe> or maybe somebody forgot to export the condition name/accessors if it's some publicly available library, which would warrant a bugticket
[19:24:09] <_73> the condition is LEX-ERROR with supertype error: https://github.com/massung/lexer
[19:24:26] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 250 seconds)
[19:24:37] <phoe> yep, time to file a bugticket - maybe even a PR.
[19:24:57] *** Quits: santiagopim (~user@90.167.95.41) (Ping timeout: 256 seconds)
[19:25:23] <phoe> in particular, package LEXER should export lex-error along with lex-error-{reason,line,source}
[19:26:17] <_73> ok Ill work on this
[19:27:02] <phoe> for whatever reason people tend to forget that conditions and their accessors are also a part of a library's API
[19:27:10] * phoe is one of those people
[19:28:16] *** Joins: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net)
[19:34:38] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:46:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[19:48:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:50:52] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Quit: leaving)
[19:55:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:55:38] *** Joins: lispy (~lispy4@84.69.59.93)
[19:58:40] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:59:14] *** Joins: karmichammer (~patrick@user/karmichammer)
[20:00:09] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:02:00] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[20:04:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[20:10:10] *** Joins: alvaro121 (~aa@201.230.126.66)
[20:11:14] *** Quits: alvaro121_ (~aa@201.230.126.66) (Ping timeout: 250 seconds)
[20:15:11] *** Quits: karmichammer (~patrick@user/karmichammer) (Ping timeout: 256 seconds)
[20:21:26] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[20:28:47] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 256 seconds)
[20:28:59] *** Joins: Catie (~user@user/catie)
[20:29:32] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Read error: Connection reset by peer)
[20:29:45] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[20:29:53] *** Joins: huckleberry (~huckleber@ip98-164-196-153.oc.oc.cox.net)
[20:35:10] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[20:35:15] <huckleberry> Are bit-vectors and bit-xxx ops worth using over their logxxx counterparts if I'm planning to convert the result into an integer? I've got an algorithm I can make far simpler with a vector but it's invoked so often I have efficiency concerns
[20:35:16] *** Joins: alvaro121_ (~aa@201.230.126.66)
[20:35:17] *** Quits: alvaro121 (~aa@201.230.126.66) (Ping timeout: 240 seconds)
[20:35:38] *** Joins: lispy (~lispy4@84.69.59.93)
[20:40:36] <phoe> not really, I guess
[20:40:53] <phoe> the bit-smasher library might be useful but I have no idea about efficiency
[20:41:32] <phoe> unless your bit fields are going to be longer than a machine word, at which point it might be useful to have these rather than bignums
[20:42:30] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[20:49:46] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[20:50:37] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 240 seconds)
[20:59:01] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 256 seconds)
[20:59:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[21:05:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:05:34] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:08:04] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:08:55] *** Joins: AeroNotix (~xeno@185.107.67.252)
[21:09:42] *** Joins: gjvc (~gjvc@user/gjvc)
[21:11:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Client Quit)
[21:13:24] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[21:13:42] *** Quits: djuber (~user@65.79.128.64) (Remote host closed the connection)
[21:15:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:18:29] <huckleberry> phoenominal, thanks
[21:20:02] <phoe> xD
[21:21:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:24:10] <Xach> huckleberry: bit-* can take a target result vector so it needn't cons
[21:24:34] <Xach> i used that for a little search engine
[21:24:44] *** Quits: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7) (Ping timeout: 268 seconds)
[21:26:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:28:53] *** Joins: cage (~cage@dynamic-adsl-84-221-50-16.clienti.tiscali.it)
[21:28:57] <huckleberry> xach: a bloom filter?
[21:30:39] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:4860:ab29:df65:d349) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:32:35] *** Quits: huckleberry (~huckleber@ip98-164-196-153.oc.oc.cox.net) (Quit: disconnected)
[21:34:48] *** Quits: pillton (~user@193-116-85-183.tpgi.com.au) (Ping timeout: 260 seconds)
[21:35:12] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:61fa:6895:b24:4361)
[21:37:27] <Xach> it was a straight bitmap
[21:38:55] *** Quits: Algernon69 (~Algernon6@80.215.8.116) (Ping timeout: 268 seconds)
[21:39:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:40:36] <_death> but such a representation would only work for a small corpus
[21:42:04] <Xach> yep! fortunately that's exactly what i have, around 5k usenet articles.
[21:42:32] <_death> and thanks for that :)
[21:53:31] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[21:54:01] *** Joins: gamaliel (~gamaliel@24.171.221.75)
[21:57:06] <gamaliel> Hi, common lisp newbie here. Is it possible to do (ql:uninstall) on a system plus its dependencies? I'm kind of confused by the information I've been looking online.
[21:57:21] <Xach> gamaliel: not really. what prompts the desire?
[21:58:07] <gamaliel> @Xach: I was testing out a system that turned out not to be the one I needed. So I want to purge the system from it, plus any systems it may have installed.
[21:58:17] <Xach> gamaliel: why?
[21:58:26] <Xach> (I can think of reasons but curious about yours)
[21:59:11] <gamaliel> Don't want it, I guess.
[22:00:10] <Xach> gamaliel: there isn't a short way to do it, sorry. possibly the easiest thing is to delete the "installed", "software", and "archives" directories in ~/quicklisp/dists/quicklisp/ - this will clear out everything.
[22:00:51] <Xach> you also don't have to delete it - it doesn't do anything (except take up some space)
[22:01:10] <White_Flame> I presume QL doesn't track which systems have been explicitly vs dependently downloaded
[22:01:16] <Xach> White_Flame: no.
[22:01:21] <Xach> it doesn't
[22:01:22] <White_Flame> which would be required for such a feature
[22:02:07] <_death> a cheap way that still offloads some management to the user could be to have a quicklisp.log that contains "installed foo" entries
[22:02:35] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:03:11] <gamaliel> I think I found something that could help: ql-dist:dependency-tree. I checked on it and it seems to provide *all* dependencies. I guess it's a matter of choosing the ones to uninstall.
[22:03:26] <gamaliel> Not sure about the *all* though
[22:04:15] <White_Flame> and if you uninstall too much, your normal QL dependencies should reload what's needed anyway
[22:04:48] <White_Flame> should download the exact same version as you had before, unless you upgraded the dist
[22:07:44] <gamaliel> Tried it, and it seems to work.
[22:07:56] <gamaliel> (mapc #'ql:uninstall '(foo bar baz))
[22:08:11] <gamaliel> Thank you all for the answers.
[22:16:35] *** Joins: nij- (~jin@2001:48f8:9021:806::6f8b)
[22:17:26] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[22:20:34] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:61fa:6895:b24:4361) (Read error: Connection reset by peer)
[22:20:52] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:61fa:6895:b24:4361)
[22:23:10] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[22:23:51] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:24:39] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[22:27:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:30:13] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:45:00] *** Joins: myrrh (~markus@172.58.196.49)
[22:48:58] *** Joins: shozo (~user@178.74.52.55)
[22:50:04] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[23:01:32] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 250 seconds)
[23:04:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[23:06:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:07:48] *** Joins: vats (~vats@180.149.226.25)
[23:08:20] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:61fa:6895:b24:4361) (Ping timeout: 268 seconds)
[23:10:12] *** Quits: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net) (Ping timeout: 250 seconds)
[23:13:03] *** Joins: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net)
[23:18:56] *** Quits: cage (~cage@dynamic-adsl-84-221-50-16.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[23:19:44] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[23:25:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:26:12] *** Joins: wmblathe_ (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net)
[23:26:15] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[23:27:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:28:06] *** wmblathe_ is now known as wmblathers_
[23:28:13] *** Quits: wmblathers_ (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net) (Client Quit)
[23:28:59] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[23:28:59] *** Quits: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 256 seconds)
[23:29:24] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[23:31:49] *** Quits: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net) (Ping timeout: 256 seconds)
[23:37:56] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[23:38:22] *** Quits: shozo (~user@178.74.52.55) (Ping timeout: 250 seconds)
[23:44:43] *** Joins: karmichammer (~patrick@ip68-9-95-224.ri.ri.cox.net)
[23:49:36] *** Joins: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net)
