[00:00:20] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:b40c:806a:27ba:87ae)
[00:02:50] *** Quits: gravicappa (~gravicapp@145.255.9.217) (Ping timeout: 256 seconds)
[00:19:20] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:b40c:806a:27ba:87ae) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:20:02] *** Quits: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek_caan)
[00:24:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:40:36] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[00:41:40] *** Joins: dextaa_ (~dextaa@user/dextaa)
[00:52:59] *** Quits: olle (~olle@i5E866D8D.versanet.de) (Ping timeout: 256 seconds)
[00:53:04] *** Joins: Anarchos (~Anarchos@2a01:e0a:a1c:3630:5c:5f98:67fc:1281)
[01:03:10] *** Quits: bartholin (~bartholin@109.53.3.224) (Ping timeout: 272 seconds)
[01:04:19] *** Quits: mro (~mro@port-92-195-222-76.dynamic.as20676.net) (Ping timeout: 256 seconds)
[01:07:26] *** Parts: Anarchos (~Anarchos@2a01:e0a:a1c:3630:5c:5f98:67fc:1281) ()
[01:07:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:10:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:16:29] *** Joins: bartholin (~bartholin@109.53.5.244)
[01:23:02] *** Quits: jlrnick (~josephler@2a01cb040a159400f9c44804ef6666b2.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[01:25:35] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[01:31:14] *** Joins: rgrinberg (~textual@2806:101e:7:7728:3011:c885:e5d4:9fdd)
[02:32:58] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[02:33:51] *** Quits: bartholin (~bartholin@109.53.5.244) (Quit: Leaving)
[02:53:39] *** Quits: rgrinberg (~textual@2806:101e:7:7728:3011:c885:e5d4:9fdd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:08:17] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[03:22:12] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:38:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 256 seconds)
[03:40:01] <d_bot_> <sparsest> Can I get a bit of tech support? I'm using OCaml Platform with VS Code, and I've installed ocaml-lsp-server in my switch, but OCaml Platform says it's not installed. When I go to "select sandbox" in VSCode, it only shows "Global" and "Custom" switches, while "opam switch" shows a lot of them, so maybe OCaml Platform isn't seeing my switches for some reason? Anyone have this issue before?
[03:40:51] <d_bot_> <NULL> What OS ? Notice anything weird in the "OCaml commands" tab of outputs ?
[03:41:11] <d_bot_> <rgrinberg> which version of opam do you have?
[03:41:39] <d_bot_> <sparsest> 2.0.5
[03:41:48] <d_bot_> <rgrinberg> okay, upgrade to 2.1.x and it should work
[03:41:50] <d_bot_> <rgrinberg> we need to fix this bug
[03:42:40] <d_bot_> <NULL> What's the bug exactly ?
[03:43:51] <d_bot_> <rgrinberg> the plugin uses a command line flag that only exists since 2.1.x to run opam
[03:48:05] <d_bot_> <sparsest> Got it, thanks!
[03:48:28] <d_bot_> <sparsest> I just sorta nuked my config by trying different things, so I'll try to restore it and try upgrading opam
[03:51:17] *** Quits: bobo (~bobo@37.165.94.21) (Ping timeout: 240 seconds)
[03:51:24] *** Joins: spip (~bobo@37.171.60.121)
[03:52:06] <d_bot_> <NULL> If you really nuked everything and if installing a compiler is not prohibitively long, you can delete ~/.opam, install the latest version and (re)do opam init
[03:52:51] <d_bot_> <NULL> You'd also want to remember the packages you installed if you do that
[04:05:05] <d_bot_> <sparsest> Thanks! It does seem to be working now. For the record, I did delete ~/.opam just to keep things simple
[04:07:31] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:18:26] *** Joins: Soni (~quassel@autistic.space)
[04:34:20] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[04:36:56] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[04:38:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:47:05] <companion_cube> what's this new warning:
[04:47:07] <companion_cube> Warning 70 [missing-mli]: Cannot find interface file.
[04:47:15] <companion_cube> are we supposed to always write .mli now?!
[04:49:08] <companion_cube> (cc octachron, I'm sure he knows)
[04:59:40] <sleepydog> might be a dune bug. that warning has been around for 2 years
[05:02:02] <d_bot_> <NULL> 1 year old, around since 4.13.0 (https://github.com/ocaml/ocaml/issues/7493) and the PR that goes with it
[05:03:38] <d_bot_> <NULL> About the question "are we supposed to always write .mli now ?" the proposed answer is "we don't know [hence why] the warning is off by default"
[05:05:02] <companion_cube> yeah well, the trigger happy dune people make that a mostly false statement
[05:05:23] <companion_cube> if "we don't know" then why is there a warning? :)
[05:06:22] *** Quits: oriba (~oriba@dynamic-077-191-072-113.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:08:06] <companion_cube> well, opened an issue on dune.
[05:44:49] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[06:08:55] *** Quits: gopiandcode (~gopiandco@137.132.219.136) (Quit: WeeChat 3.0)
[08:14:24] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[08:14:44] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[08:22:36] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[08:39:56] *** Joins: toastloop (~toastloop@user/toastloop)
[08:41:55] *** Joins: gopiandcode (~gopiandco@137.132.219.136)
[08:57:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:05:08] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[09:26:56] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:11] *** Joins: gravicappa (~gravicapp@145.255.9.217)
[10:36:47] <d_bot_> <Bluddy> link for the lazy?
[10:40:09] <d_bot_> <NULL> https://github.com/ocaml/dune/issues/5464
[10:46:50] *** Joins: mro (~mro@2002:5cc3:d5ce:0:842b:28a4:accc:47f9)
[10:59:00] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[11:11:55] *** Joins: olle (~olle@i5E866D83.versanet.de)
[11:14:15] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[11:32:51] *** Quits: hsw (~hsw@106.104.103.195) (Quit: Leaving)
[11:34:37] <octachron> companion_cube, writing mli is still supposed to be the default. Note that this warning is disabled by default for the compiler, and will be for at least as long as that there is no simple way to disable it on a file-by-file basis.
[11:35:24] <octachron> I don't know why dune enabled it by default too.
[11:35:35] *** Quits: micro (~micro@user/micro) (Ping timeout: 256 seconds)
[11:37:07] *** Joins: micro (~micro@user/micro)
[11:37:43] *** Joins: mbuf (~Shakthi@122.174.44.9)
[11:40:48] <Anarchos> sleepydog hi
[11:46:54] *** Quits: olle (~olle@i5E866D83.versanet.de) (Quit: Lost terminal)
[11:48:29] <d_bot_> <Bluddy> wait but dune makes warnings=errors by default for release profile. So not having an mli will cause a build error?
[11:55:06] <d_bot_> <octachron> No, dune transform warnings in errors in the dev profile? Otherwise, the deprecation alert would have be rendered totally pointless.
[11:57:47] <d_bot_> <octachron> And having deprecation warning promoted to error in the dev profile is already painful enough that from time to time I hear people half-jokingly suggesting to introduce a pre-deprecation alert.
[12:01:54] <d_bot_> <NULL> `mkdir dune_test; cd dune_test; echo "let main () = print_endline \"Hello World\"\n let () = main ()" > test.ml; dune init executable test; dune build; dune build --profile=release` I don't see warning 70 with this, what did I do wrong to reproduce ?
[12:02:32] <d_bot_> <NULL> `ocamlc test.ml -w A` does raise warning 70
[12:18:57] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[12:19:27] *** Joins: toastloop (~toastloop@user/toastloop)
[12:33:12] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[12:47:51] *** Quits: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6) (Ping timeout: 250 seconds)
[12:48:31] *** Joins: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6)
[12:48:39] *** Joins: jakzale_ (6291399afa@user/jakzale)
[12:48:41] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Ping timeout: 245 seconds)
[12:48:41] *** Joins: olle (~olle@213.61.81.133)
[12:49:02] *** Quits: jakzale (6291399afa@user/jakzale) (Ping timeout: 240 seconds)
[12:49:02] *** jakzale_ is now known as jakzale
[12:49:50] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[12:58:26] *** Joins: salkin (~salkin@84.212.156.62)
[12:58:30] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[13:01:45] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[13:08:10] *** Joins: bartholin (~bartholin@158.110.70.111)
[13:10:53] *** Joins: hsw (~hsw@106.104.103.195)
[13:18:32] *** Parts: toastloop (~toastloop@user/toastloop) (Leaving)
[13:21:38] *** Joins: kakadu (~kakadu@195.19.236.234)
[13:41:54] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Ping timeout: 272 seconds)
[13:43:10] *** Joins: jlrnick (~josephler@gw.lipn.univ-paris13.fr)
[14:05:24] *** Quits: mro (~mro@2002:5cc3:d5ce:0:842b:28a4:accc:47f9) (Quit: Leaving...)
[14:07:00] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[14:21:25] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[14:25:50] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[14:26:55] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[14:32:08] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:27] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:32:43] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[14:34:17] *** Quits: jlrnick (~josephler@gw.lipn.univ-paris13.fr) (Ping timeout: 240 seconds)
[15:11:27] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:921a:3b05:ee59:6305)
[15:25:31] *** Quits: hegz (~hegz@41.236.160.131) (Remote host closed the connection)
[15:25:46] *** Joins: hegz (~hegz@41.236.160.131)
[15:32:44] *** Quits: hegz (~hegz@41.236.160.131) (Ping timeout: 256 seconds)
[15:33:19] *** Joins: hegz (~hegz@196.154.130.143)
[15:52:17] *** Quits: spip (~bobo@37.171.60.121) (Ping timeout: 256 seconds)
[15:52:21] *** Joins: bobo (~bobo@37.170.213.54)
[15:54:38] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[16:39:37] *** Quits: hegz (~hegz@196.154.130.143) (Quit: Quit)
[16:44:25] *** Quits: mg (mg@user/mg) (Ping timeout: 256 seconds)
[16:45:21] *** Joins: mg (mg@user/mg)
[17:02:29] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[17:03:02] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[17:04:06] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[17:05:46] <olle> Why is tagless-final called tagless-final?
[17:05:51] <olle> What tagless? And what's final about it?
[17:10:41] <Corbin> I could summarize what Oleg says in e.g. https://okmij.org/ftp/tagless-final/course/lecture.pdf if you like. But I don't know what you've been reading.
[17:12:20] <olle> https://medium.com/@agaro1121/free-monad-vs-tagless-final-623f92313eac
[17:13:39] <olle> Hmmm
[17:13:45] <d_bot_> <glennsl> From https://okmij.org/ftp/tagless-final/JFP.pdf:
[17:13:46] <d_bot_> <glennsl>
[17:13:47] <d_bot_> <glennsl> "In sum, using ordinary functions rather than data constructors to represent well-typed
[17:13:48] <d_bot_> <glennsl> terms, we achieve a tagless evaluator for a typed object language in a metalanguage with a
[17:13:49] <d_bot_> <glennsl> simple type system (Hindley 1969; Milner 1978). We call this approach final (in contrast
[17:13:51] <d_bot_> <glennsl> to initial), because we represent each object term not by its abstract syntax but by its denotation in a semantic algebra."
[17:14:47] <d_bot_> <glennsl> Don't ask me to explain what that acutally means though. I understand the "tagless" part, but still not so much the "final" part.
[17:14:58] <Corbin> Okay, sure. So, let's do "final" first. We have multiple options for representing abstract syntax. One option is to use a GADT; we can hold any sort of typed abstract syntax by representing it as a tree.
[17:16:05] <Corbin> We could say that a GADT is the "initial" way to represent abstract syntax. That's not (just) because it's an easy way to get started, but because we can use a fold to turn a tree into basically anything, right? We can start with the initial encoding, and then turn it into any other encoding we like.
[17:17:35] <Corbin> The tagless-final approach is "final" (or sometimes "terminal") in a similar sense: we should be able to turn any encoding into a final encoding. This is what gives final encodings their low-level interpreter-ish sensation.
[17:18:09] <Corbin> (And we can check that every initial encoding can be sent to a final encoding; the final encodings basically look like folds or visitors on the initial encodings!)
[17:19:54] <olle> Hmm
[17:20:09] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:21:34] <Corbin> Or, maybe more confusingly, imagine API calls. An initial encoding is like sending somebody a tree so that they can do something with it or maybe just store it for later; a final encoding is like receiving the pieces of a tree and doing something with it, but not necessarily putting the tree together.
[17:22:18] <olle> But how's it different from a normal AST encoding...?
[17:29:42] <Corbin> There's no tree in memory. As Oleg says, we are not representing DSL values ("object terms") with the trees themselves, but "its denotation in a semantic algebra", or IOW the *meaning* of the DSL value *in the interpreter*.
[17:39:22] <companion_cube> There's a tree of closures, at least
[17:43:53] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[17:45:22] <olle> Aren't all recursive ADTs tree-like?
[17:46:59] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[18:01:08] <d_bot_> <Drup> olle: imagine that your DSL describes shapes. In an initial encoding, you make an ADT for the shapes and their operation. Each combinator then build membres of that ADT. A picture is just a value of that ADT. In a final encoding, each combinator is a drawing function on a context, and your "picture" is a closure that apply all these drawing functions directly.
[18:02:38] <olle> What's a combinator?
[18:03:03] <d_bot_> <Drup> a function to combine stuff 😄
[18:03:38] <d_bot_> <Drup> for instance, in the shape examples, we will have `square : int -> int -> shape`, or `rotate : degree -> shape -> shape`, etc
[18:03:44] <olle> Ok :)
[18:04:03] <olle> What's a "value of an ADT"?
[18:04:05] <olle> An evaluation?
[18:04:05] <d_bot_> <Drup> the tradeoffs are very different (and Oleg explains that well)
[18:04:34] <d_bot_> <Drup> no, just a term: `Rotate (10, Rect (1,2))`
[18:05:12] <olle> Hm
[18:06:03] <olle> Drup, and how would you do shapes ADT with "final encoding"?
[18:08:10] <d_bot_> <Drup> the operation will have the same type as before
[18:08:23] <d_bot_> <Drup> but their implementation will not use an AST
[18:08:46] <d_bot_> <Drup> we will have something like `type shape = drawing_context -> unit`
[18:09:53] <olle> Hmmm, maybe I'll ask on the forum for an EL5 ^^
[18:10:01] <olle> Then others can read it too
[18:10:14] <d_bot_> <Drup> not a bad idea 🙂
[18:10:26] *** Quits: gravicappa (~gravicapp@145.255.9.217) (Ping timeout: 272 seconds)
[18:20:02] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[18:24:10] <olle> https://discuss.ocaml.org/t/explain-like-im-5-years-old-tagless-final-pattern/9394
[18:25:55] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[18:28:31] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[18:28:37] *** Joins: Haudegen (~quassel@91.114.49.10)
[18:29:43] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[18:30:03] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[18:33:17] *** Joins: gwizon (~gwizon@ool-45798b07.dyn.optonline.net)
[18:37:29] *** Quits: gwizon (~gwizon@ool-45798b07.dyn.optonline.net) (Client Quit)
[18:38:37] *** Joins: dextaa_ (~dextaa@user/dextaa)
[18:40:06] *** Joins: jlrnick (~josephler@gw.lipn.univ-paris13.fr)
[18:45:58] <d_bot_> <VPhantom> Maybe I'll understand what comes out of _that_.
[18:49:39] <d_bot_> <VPhantom> We have _very_ smart 5-year-olds these days I guess. 😛
[18:52:12] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[18:52:48] <olle> :D
[18:54:49] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[18:55:06] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:55:20] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[19:06:27] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[19:14:57] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[19:28:45] <sleepydog> oh, what a coincidence, I was just re-reading the tagless final lecture & related papers in the hope I'd understand it this time with a little more OCaml experience. I can follow the most basic examples, at least :)
[19:30:24] *** Quits: mbuf (~Shakthi@122.174.44.9) (Quit: Leaving)
[19:41:50] *** Quits: jakzale (6291399afa@user/jakzale) (Remote host closed the connection)
[19:41:50] *** Quits: seeg (0bf4efab5c@2604:bf00:561:2000::2c7) (Remote host closed the connection)
[19:41:50] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:41:50] *** Quits: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6) (Remote host closed the connection)
[19:42:32] *** Joins: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6)
[19:42:32] *** Joins: jakzale (6291399afa@user/jakzale)
[19:42:44] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:42:52] *** Joins: seeg (0bf4efab5c@2604:bf00:561:2000::2c7)
[19:43:57] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[19:48:14] *** Quits: olle (~olle@213.61.81.133) (Remote host closed the connection)
[19:49:12] *** Joins: gravicappa (~gravicapp@145.255.9.217)
[19:56:12] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[20:03:33] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[20:03:54] *** Joins: zebrag (~chris@user/zebrag)
[20:13:20] *** Joins: sagax (~sagax_nb@user/sagax)
[20:15:37] *** Quits: jlrnick (~josephler@gw.lipn.univ-paris13.fr) (Ping timeout: 240 seconds)
[20:18:03] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 256 seconds)
[20:18:54] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[20:19:39] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[20:23:35] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[20:25:30] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:25:39] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[20:28:11] *** Quits: jakzale (6291399afa@user/jakzale) (Remote host closed the connection)
[20:28:12] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[20:28:12] *** Quits: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6) (Remote host closed the connection)
[20:28:12] *** Quits: seeg (0bf4efab5c@2604:bf00:561:2000::2c7) (Remote host closed the connection)
[20:28:13] *** Joins: gwizon (~gwizon@ool-45798b07.dyn.optonline.net)
[20:30:22] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[20:32:07] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[20:34:15] *** Joins: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6)
[20:34:24] *** Joins: seeg (0bf4efab5c@2604:bf00:561:2000::2c7)
[20:34:31] *** Joins: jakzale (6291399afa@user/jakzale)
[20:34:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[20:34:37] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[20:35:36] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[20:40:40] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Read error: Connection reset by peer)
[20:41:12] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[20:45:19] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[20:59:24] *** Quits: bartholin (~bartholin@158.110.70.111) (Quit: Leaving)
[20:59:26] *** Quits: kakadu (~kakadu@195.19.236.234) (Quit: Konversation terminated!)
[21:10:24] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[21:47:19] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:08:57] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[22:29:26] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[22:31:18] <d_bot_> <mseri> There should be a long and detailed post on discuss by @ivg (I think) on tagless final that was very clarificatory to me, I will try to look it up
[22:36:39] *** Soni is now known as GD-IRC
[23:31:53] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:32:33] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[23:43:43] *** Quits: salkin (~salkin@84.212.156.62) (Quit: salkin)
[23:46:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:47:35] <d_bot_> <Bluddy> I really need to post every @ivg post to OCamlverse. He writes so well it's practically out of a textbook.
[23:49:57] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
[23:55:21] *** Quits: gravicappa (~gravicapp@145.255.9.217) (Ping timeout: 245 seconds)
[23:58:49] *** Quits: mro (~mro@port-92-195-213-206.dynamic.as20676.net) (Remote host closed the connection)
[23:59:11] *** Joins: mro (~mro@port-92-195-213-206.dynamic.as20676.net)
