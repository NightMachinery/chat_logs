[00:14:53] *** Quits: jsbach (~jsbach@2a01:c22:a545:5400:3af3:abff:fe57:23d5) (Ping timeout: 250 seconds)
[00:41:32] *** Quits: znemo (sid500529@id-500529.uxbridge.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: elichai2 (sid212594@id-212594.hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[00:41:32] *** Quits: AmR (~AmREiSa@156.207.136.200) (*.net *.split)
[00:41:32] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (*.net *.split)
[00:41:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (*.net *.split)
[00:41:32] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: seninha (~seninha@user/seninha) (*.net *.split)
[00:41:32] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (*.net *.split)
[00:41:32] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[00:41:34] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[00:41:34] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[00:41:34] *** Quits: Armoured (~kifir@host-79-53-199-170.retail.telecomitalia.it) (*.net *.split)
[00:41:34] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (*.net *.split)
[00:41:34] *** Quits: osfe_ (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (*.net *.split)
[00:41:35] *** Quits: va (~cargova@2a01:261:0:9::d285) (*.net *.split)
[00:41:35] *** Quits: switchy (sid489027@mechboards/switchy) (*.net *.split)
[00:41:35] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[00:41:35] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[00:41:35] *** Quits: AssKoala (~asskoala@user/asskoala) (*.net *.split)
[00:41:36] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[00:41:36] *** Quits: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0) (*.net *.split)
[00:41:36] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[00:41:36] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[00:41:36] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (*.net *.split)
[00:41:37] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (*.net *.split)
[00:41:37] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[00:41:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (*.net *.split)
[00:41:37] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[00:41:37] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[00:41:37] *** Quits: Raziel (~Raziel@user/raziel) (*.net *.split)
[00:41:37] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[00:41:37] *** Quits: nelubit (~nelubit@user/nelubit) (*.net *.split)
[00:41:37] *** Quits: sonic (~sonic@user/sonic) (*.net *.split)
[00:41:37] *** Quits: Cyp (~cyp@213.237.88.120) (*.net *.split)
[00:41:37] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[00:41:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[00:41:37] *** Quits: minto (~mintograd@47.201.5.61) (*.net *.split)
[00:41:37] *** Quits: dgcampea (~dgc@user/dgcampea) (*.net *.split)
[00:41:37] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (*.net *.split)
[00:41:37] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (*.net *.split)
[00:41:37] *** Quits: CalamityBlue (~CalamityB@2603-8000-d907-cec8-414b-3d39-bc9b-3dcb.res6.spectrum.com) (*.net *.split)
[00:41:37] *** Quits: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de) (*.net *.split)
[00:41:38] *** Quits: traxex (traxex@user/traxex) (*.net *.split)
[00:41:38] *** Quits: cato- (cato@i.xnis.de) (*.net *.split)
[00:41:38] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[00:41:39] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:cb1b:59a4:8a8b:230c) (*.net *.split)
[00:41:39] *** Quits: bebyx (~Thunderbi@user/bebyx) (*.net *.split)
[00:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[00:41:39] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6198) (*.net *.split)
[00:41:39] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (*.net *.split)
[00:41:39] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[00:41:39] *** Quits: meicceli (meicceli@kapsi.fi) (*.net *.split)
[00:41:39] *** Quits: xq (~xq@user/xq) (*.net *.split)
[00:41:40] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (*.net *.split)
[00:41:40] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: Khoyo_ (~khoyo@user/khoyo) (*.net *.split)
[00:41:40] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[00:41:40] *** Quits: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no) (*.net *.split)
[00:41:40] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:40] *** Quits: PJBoy (~PJBoy@user/pjboy) (*.net *.split)
[00:41:40] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[00:41:41] *** Quits: WeblordPepe (~pepe@104.248.83.14) (*.net *.split)
[00:41:41] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (*.net *.split)
[00:41:41] *** Quits: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (*.net *.split)
[00:41:41] *** Quits: Luke (~ldm@hacksoc/member) (*.net *.split)
[00:41:41] *** Quits: tbe_loki (~loki@loki.codes) (*.net *.split)
[00:41:41] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[00:41:42] *** Quits: cuavas (~cuavas@hhsrv1.vastheman.com) (*.net *.split)
[00:41:42] *** Quits: Zertrin (~zertrin@user/zertrin) (*.net *.split)
[00:41:42] *** Quits: Trollmann (~Trollmann@user/trollmann) (*.net *.split)
[00:41:43] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[00:41:43] *** Quits: LangerJan (~jan@user/langerjan) (*.net *.split)
[00:41:43] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[00:41:43] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[00:41:43] *** Quits: Alipha (~AliphaX@user/alipha) (*.net *.split)
[00:41:43] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[00:41:43] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[00:41:43] *** Quits: duude__ (~duude__@user/duude/x-4676560) (*.net *.split)
[00:41:44] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[00:41:45] *** Quits: micronnn (~micronn@user/micronn) (*.net *.split)
[00:41:45] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[00:41:45] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[00:41:46] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[00:44:07] *** Joins: Armoured (~kifir@host-79-53-199-170.retail.telecomitalia.it)
[00:44:07] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:44:07] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:44:07] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[00:44:07] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[00:44:07] *** Joins: seninha (~seninha@user/seninha)
[00:44:07] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[00:44:07] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:44:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:44:07] *** Joins: AmR (~AmREiSa@156.207.136.200)
[00:44:07] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[00:44:07] *** Joins: cato- (cato@i.xnis.de)
[00:44:07] *** Joins: traxex (traxex@user/traxex)
[00:44:07] *** Joins: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de)
[00:44:07] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-414b-3d39-bc9b-3dcb.res6.spectrum.com)
[00:44:07] *** Joins: zoraj (~zoraj@209.126.81.159)
[00:44:07] *** Joins: greenbagels (~gb@user/greenbagels)
[00:44:07] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[00:44:07] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[00:44:07] *** Joins: micronnn (~micronn@user/micronn)
[00:44:07] *** Joins: Zertrin (~zertrin@user/zertrin)
[00:44:07] *** Joins: cuavas (~cuavas@hhsrv1.vastheman.com)
[00:44:07] *** Joins: Jmtrix (~qed@user/jmtrix)
[00:44:07] *** Joins: tbe_loki (~loki@loki.codes)
[00:44:07] *** Joins: Luke (~ldm@hacksoc/member)
[00:44:07] *** Joins: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[00:44:07] *** Joins: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328)
[00:44:07] *** Joins: WeblordPepe (~pepe@104.248.83.14)
[00:44:07] *** Joins: minto (~mintograd@47.201.5.61)
[00:44:07] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[00:44:07] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[00:44:07] *** Joins: Cyp (~cyp@213.237.88.120)
[00:44:07] *** Joins: sonic (~sonic@user/sonic)
[00:44:07] *** Joins: nelubit (~nelubit@user/nelubit)
[00:44:07] *** Joins: geordi (~geordi@tinodidriksen.com)
[00:44:07] *** Joins: Raziel (~Raziel@user/raziel)
[00:44:07] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[00:44:07] *** Joins: Cienisty (Cienisty@user/cienisty)
[00:44:07] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[00:44:07] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:44:07] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[00:44:07] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[00:44:07] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:44:07] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[00:44:07] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[00:44:07] *** Joins: Trollmann (~Trollmann@user/trollmann)
[00:44:07] *** Joins: majors_ (~majors@user/majors)
[00:44:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:44:07] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:07] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[00:44:07] *** Joins: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no)
[00:44:07] *** Joins: noarb (~noarb@user/noarb)
[00:44:07] *** Joins: Khoyo_ (~khoyo@user/khoyo)
[00:44:07] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[00:44:07] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[00:44:14] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[00:44:33] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[00:44:33] *** Joins: osfe_ (~lemaire@2a01:e0a:16e:7620::1e2d:4e60)
[00:44:33] *** Joins: va (~cargova@2a01:261:0:9::d285)
[00:44:33] *** Joins: switchy (sid489027@mechboards/switchy)
[00:44:33] *** Joins: buhman (sid411355@user/buhman)
[00:44:33] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[00:44:33] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[00:44:33] *** Joins: AssKoala (~asskoala@user/asskoala)
[00:44:33] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:44:33] *** Joins: qqlq (41d9a4cfcf@2604:bf00:561:2000::2c0)
[00:44:33] *** Joins: lewisje (~lewisje@72.49.207.113)
[00:44:33] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[00:44:33] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[00:44:49] *** Joins: Kerr (~quassel@2601:602:ce00:c8d0:cb1b:59a4:8a8b:230c)
[00:44:49] *** Joins: bebyx (~Thunderbi@user/bebyx)
[00:44:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:44:49] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6198)
[00:44:49] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[00:44:49] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[00:44:49] *** Joins: meicceli (meicceli@kapsi.fi)
[00:44:49] *** Joins: xq (~xq@user/xq)
[00:44:49] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[00:45:01] *** Joins: dgcampea (~dgc@user/dgcampea)
[00:45:01] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[00:45:02] *** Joins: znemo (sid500529@id-500529.uxbridge.irccloud.com)
[00:45:02] *** Joins: elichai2 (sid212594@id-212594.hampstead.irccloud.com)
[00:45:02] *** Joins: jessicara (~shirogits@user/jessicara)
[00:45:08] *** Joins: epony (epony@lz2.eu)
[00:45:17] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[00:45:17] *** Joins: andreyv (~andrey@user/andreyv)
[00:45:17] *** Joins: LangerJan (~jan@user/langerjan)
[00:45:17] *** Joins: celphi (sid97751@user/celphi)
[00:45:17] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[00:45:17] *** Joins: Alipha (~AliphaX@user/alipha)
[00:45:17] *** Joins: montpol (montpol@fine.mouses.xyz)
[00:45:17] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[00:46:00] *** Quits: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Client Quit)
[00:46:14] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:46:58] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[00:47:26] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 245 seconds)
[00:47:49] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:48:39] *** Joins: Uswald (~leandre@2a01cb040075f90061f6d68a0f1678fa.ipv6.abo.wanadoo.fr)
[00:49:26] *** Joins: kristjansson (sid126207@tinside.irccloud.com)
[00:49:49] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[00:52:11] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (Quit: Stay safe!)
[00:53:01] *** Quits: Uswald (~leandre@2a01cb040075f90061f6d68a0f1678fa.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[01:01:49] *** epony is now known as Guest3959
[01:02:04] *** CodeMouse92 is now known as Guest1476
[01:02:20] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[01:02:23] *** Quits: Guest1476 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:02:39] *** Joins: Guest1476 (~CodeMouse@user/codemouse92)
[01:04:39] *** Guest1476 is now known as CodeMouse92
[01:14:34] *** Joins: markong (~kvirc@213.146.188.203)
[01:26:01] *** Joins: Jan___ (~UserNick@ip2504e5fa.dynamic.kabel-deutschland.de)
[01:26:25] *** Quits: Jan___ (~UserNick@ip2504e5fa.dynamic.kabel-deutschland.de) (Client Quit)
[01:27:01] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:43:46] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6198) (Quit: Leaving)
[01:56:51] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[01:57:26] *** Joins: AmR (~AmREiSa@156.207.136.200)
[02:35:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:35:39] *** Quits: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no) (Ping timeout: 256 seconds)
[02:58:37] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[03:21:04] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:22:57] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[03:33:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:39:00] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 250 seconds)
[03:49:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[03:58:14] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[03:58:40] *** Joins: AmR (~AmREiSa@156.207.136.200)
[03:59:39] *** Parts: AmR (~AmREiSa@156.207.136.200) ()
[04:00:55] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:03:41] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:06:08] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[05:14:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:14:58] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[05:23:12] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[05:29:06] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[05:29:31] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 245 seconds)
[05:47:34] *** Quits: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:49:07] *** Joins: therufuser (~therufuse@p5b02e5be.dip0.t-ipconnect.de)
[05:58:54] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:59:05] *** Quits: Guest3959 (epony@lz2.eu) (Quit: QUIT)
[06:04:29] *** Joins: epony (epony@user/epony)
[06:38:43] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[06:44:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:52:27] <Kerr> with std::thread, is there a way ot re-use a thread after I've joined it? IE I want to say std::thread mythread(someftn); /* other things */ mythread.join(); 
[06:53:02] <Kerr> Then start up the thread with some other function (or the same one)
[06:53:17] <Kerr> If there's a different tool, other than join, that's fine too.
[07:02:42] <Kerr> I figured it out. use the thread assignment operator. mythread = std::thread(otherftn); for the simple case
[07:03:00] <Kerr> Otherwise, some system of messaging needs to be devised to assign the thread work
[07:11:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:12:44] *** Joins: ferdna (~ferdna@user/ferdna)
[08:23:21] <Alipha> Kerr: sounds like you perhaps want a thread pool. There's plenty of thread pool libraries out there.
[08:27:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:28:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:56:27] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (Ping timeout: 256 seconds)
[09:06:10] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[09:08:35] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[09:49:15] *** Quits: osfe_ (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (Remote host closed the connection)
[09:54:09] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60)
[10:08:08] *** Joins: DSpider (~DSpider@82.79.237.125)
[10:14:02] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[10:19:37] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (Ping timeout: 240 seconds)
[10:45:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[10:45:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:49:02] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (Ping timeout: 252 seconds)
[10:51:15] *** Joins: dld (~davidlowr@73.61.8.20)
[10:52:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:55:52] *** Quits: znemo (sid500529@id-500529.uxbridge.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: elichai2 (sid212594@id-212594.hampstead.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[10:55:52] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[10:55:52] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[10:55:52] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[10:55:52] *** Quits: Armoured (~kifir@host-79-53-199-170.retail.telecomitalia.it) (*.net *.split)
[10:58:07] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[10:58:07] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[10:58:07] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[10:58:07] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[10:58:07] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[10:58:07] *** Joins: Armoured (~kifir@host-79-53-199-170.retail.telecomitalia.it)
[10:58:07] *** Joins: znemo (sid500529@id-500529.uxbridge.irccloud.com)
[10:58:07] *** Joins: elichai2 (sid212594@id-212594.hampstead.irccloud.com)
[10:58:07] *** Joins: jessicara (~shirogits@user/jessicara)
[11:06:17] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (Ping timeout: 240 seconds)
[11:09:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:29:59] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[11:53:25] *** Joins: osfe (~lemaire@nanpc540.in2p3.fr)
[11:54:55] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[11:55:14] *** Joins: jsbach (~jsbach@2a01:c22:a40c:d700:4679:1947:b982:eeb8)
[12:01:49] *** Joins: osfe_ (~lemaire@hermes.emn.fr)
[12:02:37] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 240 seconds)
[12:02:51] *** Quits: osfe_ (~lemaire@hermes.emn.fr) (Client Quit)
[12:12:35] *** Joins: osfe (~lemaire@hermes.emn.fr)
[12:13:49] *** Joins: Uswald (~leandre@2a01cb040075f900c9d271e7359ac219.ipv6.abo.wanadoo.fr)
[12:13:49] *** Quits: Uswald (~leandre@2a01cb040075f900c9d271e7359ac219.ipv6.abo.wanadoo.fr) (Changing host)
[12:13:49] *** Joins: Uswald (~leandre@user/Uswald)
[12:18:17] *** Quits: osfe (~lemaire@hermes.emn.fr) (Ping timeout: 240 seconds)
[12:19:34] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[12:19:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:38:48] *** Joins: Guest64 (~Guest64@net-93-144-89-157.cust.vodafonedsl.it)
[12:39:29] <Guest64> hello!
[12:41:05] *** Quits: lewisje (~lewisje@72.49.207.113) (Quit: Leaving)
[12:46:42] <Guest64> noobish question: when should I use pointers? e.g.: I'm writing a library for managing graphs. A graph consists of a set of vertexes and a set of edges connecting those vertexes. Would it be correct for a Graph to contain a set ov pointers to vertices, and a set of edges (not pointers to edges)?
[12:51:37] <smallville7123> Guest64: hai
[12:52:29] <smallville7123> Guest64: it would be better to use an stl container instead of using raw C pointers
[12:54:00] <smallville7123> Guest64: it would be better to use an stl container instead of using raw C pointers and other C array implementations as malloc,realloc,free pointer* arrays
[12:54:54] <smallville7123> std::vector<Vertex> vertices; std::vector<Edge> edges;
[12:55:05] <Guest64> hello smallville7123, I'm actually using an stl set to store pointers to my Graph's vertexes (class Vertex) and another set to store my edges (class Edge)
[12:55:29] <Guest64> ok, so no std::set<Vertex*>
[12:55:57] *** Joins: osfe (~lemaire@nanpc540.in2p3.fr)
[12:58:05] <smallville7123> generally you should only use pointers for RAII or to conserve stack space, eg if you need to store a 2GB structure it is strongly recommended to allocate it in the heap (RAM) via `My2GBStructure * very_large_data = new My2GBStructure();` instead of storing it locally on the stack `My2GBStructure very_large_data`
[12:58:30] <smallville7123> (assuming anyone has a 2GB structure for whatever insane reason)
[12:59:18] <Guest64> got it
[12:59:34] <smallville7123> if you just need to reference data they you should use & (tho stl containers cannot store references due to move semantics and need to instead store pointers)
[13:00:03] <smallville7123> due to move resizing semantics*
[13:00:28] <Guest64> what is the difference between references and pointers, btw?
[13:00:34] <smallville7123> (and usually if you try you will get some compile error)
[13:01:54] <smallville7123> that is complicated and difficult to explain due to how abstract they are (only that a pointer IS NOT 100% equivilant to a reference)
[13:02:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:03:12] <smallville7123> in a very basic form a reference is hidden pointer that the compiler creates and any references to it is equivilant to ptr[0]
[13:03:42] <smallville7123> if i remember correctly
[13:05:49] <smallville7123> i think it is equivilant to,    int b = 5; int & a = b; int c = b; // int b = 5;   int * hidden_a; hidden_a = &b;  int c = hidden_a[0];
[13:06:26] <smallville7123> or something like that, i think it is implementation and compiler defined as to how a reference is ACTUALLY implemented
[13:07:49] <smallville7123> someone else will probably have a more detailed answer than me
[13:08:48] <Guest64> thank you!
[13:09:14] <Guest64> probably this is a little bit too advanced for me right now
[13:09:32] <smallville7123> and RAII (Resource Acquisition Is Initialization) is (in its basic form) automatic memory management via constructors and destructors
[13:09:52] <smallville7123> eg allocate in constructor, deallocate in destructor
[13:11:29] <smallville7123> eg     class RAII {    int * x; RAII() { x = new int; }    /* copy/move constructors and copy/move assignment operators */    ~RAII() { delete x; }   }
[13:12:17] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 240 seconds)
[13:12:25] <smallville7123> copy/move constructors and assignment operators MUST be implemented in order for a RAII class to be safe and operate as intended by the user and class designer
[13:13:05] <smallville7123> eg blindly copying the RAII class as it is will double-free, and moving it would also double-free (i think)
[13:13:49] <smallville7123> yea moving it would result in a double-free
[13:14:44] <smallville7123> as the destructor for both the original and the copy would run eventually in both cases
[13:15:00] <smallville7123> and the copy/moved would*
[13:16:11] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 250 seconds)
[13:18:42] <Guest64> (y)
[13:19:53] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[13:20:49] <smallville7123> a correct RAII implementation would be for example, https://github.com/mgood7123/Graphics-Tool-Kit/blob/master/app/src/main/cpp/WINAPI_KERNEL/SDK/src/Windows/Kernel/WindowsAPIKernel.cpp   which creates a copy of the RAII if it is copy assigned, Kernel a = b;    and destruction-moves the RAII if it is moved, Kernel a = std:move(b); // b is moved to a and b is now in an initialized state as if b and a wher
[13:20:49] <smallville7123> e swapped
[13:20:59] <smallville7123> as if b and a where swapped *
[13:31:27] <Guest64> nice!
[13:31:39] <Guest64> thank you, nice repos there :D
[13:33:24] <smallville7123> another correct RAII implementation would be where on both copy and move, and allocation would be moved and the original would be uninitialized with nullptr (cant find source example)
[13:46:17] <smallville7123> the allocation would be*
[14:11:27] *** Quits: DSpider (~DSpider@82.79.237.125) (Quit: Leaving)
[14:40:38] *** Joins: seninha (~seninha@user/seninha)
[14:58:17] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 240 seconds)
[15:09:04] *** Joins: gehn (~gehn@user/gehn)
[15:23:58] *** Quits: Guest64 (~Guest64@net-93-144-89-157.cust.vodafonedsl.it) (Quit: Client closed)
[15:31:35] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:44:15] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[15:48:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[15:49:02] *** Joins: markong (~kvirc@213.146.188.203)
[15:49:28] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[16:01:02] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:08:17] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 240 seconds)
[16:09:00] <smallville7123> how do i get a member into a lambda capture without passing the member to the function explicitly
[16:10:32] <smallville7123> geordi: class a { int b; void c() { auto x = [&b] () {}; x(); } };
[16:10:32] <geordi> error: capture of non-variable 'a::b'
[16:11:14] <smallville7123> geordi: class a { int b; void c() { auto x = [this] () { this->b = 3; }; x(); } };
[16:11:15] <geordi> Success
[16:11:23] <smallville7123> would i do that?
[16:11:53] <smallville7123> geordi: class a { int b; void c() { auto x = [&this->b] () {}; x(); } };
[16:11:54] <geordi> error: 'this' cannot be captured by reference
[16:28:03] *** Joins: osfe (~lemaire@hermes.emn.fr)
[16:43:50] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[16:46:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:46:38] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[16:58:10] *** Joins: ethrl (~ethereal@user/doforlove33)
[16:58:48] *** Joins: osfe_ (~lemaire@nanpc540.in2p3.fr)
[16:59:01] *** Quits: osfe (~lemaire@hermes.emn.fr) (Ping timeout: 256 seconds)
[17:08:35] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[17:10:14] *** Joins: AmR (~AmREiSa@156.207.136.200)
[17:17:15] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[17:17:41] *** Joins: AmR (~AmREiSa@156.207.136.200)
[17:24:42] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[17:25:21] *** Joins: AmR (~AmREiSa@156.207.136.200)
[17:33:27] *** Quits: ethrl (~ethereal@user/doforlove33) (Remote host closed the connection)
[17:51:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:12:35] *** Quits: osfe_ (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 256 seconds)
[18:13:32] *** Joins: osfe_ (~lemaire@nanpc540.in2p3.fr)
[18:45:31] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[18:46:55] *** Quits: osfe_ (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 256 seconds)
[18:52:37] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (Quit: faaa)
[18:52:53] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[18:57:04] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[19:12:41] *** Joins: Uswald (~leandre@2a01cb040075f900c9d271e7359ac219.ipv6.abo.wanadoo.fr)
[19:12:41] *** Quits: Uswald (~leandre@2a01cb040075f900c9d271e7359ac219.ipv6.abo.wanadoo.fr) (Changing host)
[19:12:41] *** Joins: Uswald (~leandre@user/Uswald)
[19:16:57] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 240 seconds)
[19:22:20] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[19:23:27] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[19:53:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:59:52] *** Joins: seninha_ (~seninha@user/seninha)
[20:02:37] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[20:06:02] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[20:07:58] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[20:08:22] *** Joins: dgcampea (~dgc@user/dgcampea)
[20:09:32] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[20:12:25] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[20:46:54] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[20:47:30] *** Joins: AmR (~AmREiSa@156.207.136.200)
[21:17:00] *** Quits: AmR (~AmREiSa@156.207.136.200) (Remote host closed the connection)
[21:17:29] *** Joins: AmR (~AmREiSa@156.207.136.200)
[21:19:02] *** Quits: AmR (~AmREiSa@156.207.136.200) (Client Quit)
[21:28:45] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[21:30:47] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[21:30:50] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[21:31:02] *** Joins: dgcampea (~dgc@user/dgcampea)
[21:31:30] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[21:33:58] *** Joins: seninha (~seninha@user/seninha)
[22:10:41] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[22:12:59] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[22:13:03] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:18:09] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[22:19:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:32:27] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 256 seconds)
[22:50:35] *** Quits: dld (~davidlowr@73.61.8.20) (Ping timeout: 256 seconds)
[22:52:29] *** Joins: dld (~davidlowr@73.61.8.105)
[22:54:57] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:02:14] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:14:09] *** Quits: dld (~davidlowr@73.61.8.105) (Ping timeout: 256 seconds)
[23:15:57] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[23:16:07] *** Joins: dld (~davidlowr@2601:197:600:1210:3c77:90a4:f938:18fe)
[23:16:15] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:17:58] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[23:18:41] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:34:01] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:34:34] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[23:34:50] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:36:29] *** Quits: kristjansson (sid126207@tinside.irccloud.com) (Ping timeout: 256 seconds)
[23:38:45] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[23:39:13] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[23:39:51] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[23:47:54] *** Joins: joilerv (~joilerv@135.129.250.144)
[23:48:42] *** Quits: joilerv (~joilerv@135.129.250.144) (Client Quit)
[23:57:41] *** Joins: joilerv (~joilerv@135.129.250.144)
