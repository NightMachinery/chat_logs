[00:00:08] *** Quits: mattil (~mattilinn@87-92-27-109.bb.dnainternet.fi) (Quit: Leaving)
[00:00:13] <GreenJello> FlorianBad, an object or an array
[00:00:22] <GreenJello> we don't have tuples
[00:00:40] <FlorianBad> GreenJello: and what I returned is not an array then?
[00:01:03] <FlorianBad> so it should be `return [5,6]`  ?
[00:01:09] <GreenJello> yes
[00:01:46] <farn> n> function foobar() { return [5, 6] } const result = foobar(); if (result) { const [a, b] = result; console.log(a, b); }
[00:01:47] <jellobot> (okay) 5 6
[00:01:49] <FlorianBad> ok, and then there's no other way to grab the elements than putting the whole array in a var?
[00:01:51] <farn> I can't think of anything shorter than that
[00:02:11] <farn> if the result can also be null/undefined
[00:02:54] <FlorianBad> ok I see, it makes something very basic very long lol :)  But that's ok, I thought it could be simplified
[00:03:41] <FlorianBad> farn: if the result fails I can just not return which then returns undefined at the end, correct?
[00:04:27] <farn> correct
[00:05:04] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:05:11] <FlorianBad> ok, thanks :)
[00:05:12] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[00:10:04] <FlorianBad> Does a try/catch include all the functions called inside? So is it safe to wrap something in try{} where the failure could happen much deeper in the function calls?
[00:10:27] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Remote host closed the connection)
[00:10:31] <FlorianBad> e.g. if a sub-function calls a function that doesn't exist
[00:11:33] <GreenJello> yes, except for async things
[00:11:50] <FlorianBad> ah, I see, indeed
[00:19:57] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[00:22:41] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[00:28:49] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[00:30:23] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:33:20] <ljharb> FlorianBad: multiple return is in no way basic
[00:33:27] <banana_> thanks GreenJello and farn
[00:33:36] <ljharb> FlorianBad: and languages that have it are either strictly/strongly typed, or, have tons of confusion issues because of it
[00:33:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[00:34:09] <banana_> farn idk why but forgot or was a bad student to "forget" about the distributive property
[00:37:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:38:26] *** Joins: onosendi1 (~onosendi@user/onosendi)
[00:38:41] <sheetjs> FlorianBad: bring the var outside
[00:39:21] <sheetjs> e.g. var result; if((result = func()) { /* use result */ } else { /* badness 10000 */ }
[00:41:27] <sheetjs> you should use 2 sets of parens as some linters will think you made a mistake otherwise
[00:41:31] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[00:41:40] *** Quits: byanka_ (~byanka@91.244.10.3) (Ping timeout: 272 seconds)
[00:41:40] *** Quits: byanka (~byanka@91.244.10.3) (Ping timeout: 272 seconds)
[00:41:47] <sheetjs> if(result = func()) linters will think you meant to say if(result == func())
[00:42:01] <ljharb> definitely don't do that
[00:42:11] <ljharb> conflating assignment with expressions is bad news bears
[00:42:20] <ljharb> just do `const result = func();` before/outside the `if`
[00:42:29] <sheetjs> ECMASports presents code golf 2077
[00:42:40] <ljharb> code golfing is trying to squeeze the assignment into the conditional position
[00:42:41] * GreenJello golf claps
[00:43:00] <ljharb> and there's a reason linters and styleguides have pushed people not to do it for decades
[00:43:03] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 252 seconds)
[00:43:17] <sheetjs> and why linters and styleguides provide the double parens backdoor
[00:43:51] *** Joins: physikoi (~physikoi@user/physikoi)
[00:43:52] <ljharb> because jslint did it years ago, because crockford wanted to shut people up
[00:43:56] <ljharb> and only for that reason
[00:44:10] <ljharb> there's a backdoor for everything - you can disable any eslint rule - that is never a justification to use it.
[00:45:32] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 245 seconds)
[00:45:40] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:46:06] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:46:11] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 250 seconds)
[00:46:18] *** Quits: Lewix (sid158496@id-158496.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:46:40] *** Quits: victor (sid208353@user/victor) (Ping timeout: 272 seconds)
[00:46:47] *** Quits: owlbynight (sid501016@id-501016.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:46:47] *** Quits: shush_ (sid21719@id-21719.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:47:56] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:48:42] <theskillwithin> oh nice, in node you can do console.dir(foo, { depth: null })  if you don't want it to truncate
[00:51:05] <sheetjs> util.inspect has same argument
[00:52:18] *** Joins: chonkbit (~chonkbit@192.145.117.164)
[00:53:14] *** Joins: matsaman (~matsaman@user/matsaman)
[01:02:43] *** Joins: Lewix (sid158496@tinside.irccloud.com)
[01:02:58] *** Joins: stigz (sid371747@tinside.irccloud.com)
[01:03:47] *** Quits: Noustropos (~Noustropo@91.221.89.9) (Remote host closed the connection)
[01:08:04] <Slade> oh ljharb https://github.com/tc39/proposal-temporal/issues/51
[01:09:15] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:09:32] <Slade> i wonder if this is the ideal to use in the interim.  https://github.com/js-temporal/temporal-polyfill   probably an unstable api tho
[01:13:12] *** Joins: beeza (sid53872@tinside.irccloud.com)
[01:13:22] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[01:13:30] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[01:13:39] *** Joins: shush_ (sid21719@tinside.irccloud.com)
[01:15:39] <ljharb> Slade: there does not yet exist a temporal polyfill that's safe to use in production
[01:15:50] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) ()
[01:15:54] <Slade> i see.
[01:16:11] <ljharb> use moment (or date-fns, if you must) for now, and migrate to Temporal once a good polyfill exists
[01:16:23] <ljharb> (the proposal itself still has changes being made, so it really shouldn't be stage 3)
[01:16:34] <Slade> i just spun up dayjs. seems reasonably sane
[01:17:01] <Slade> i like that the jota clones have specific date and time objects tho
[01:17:03] <ljharb> it's a distant third in terms of popularity
[01:17:21] <ljharb> and given that everything that's not temporal will be instantly obsolete once temporal is usable, i'd stick with the most popular one
[01:19:52] <Slade> bah, just converted this small project from moment ;P
[01:20:20] <Slade> anyhow, no worries
[01:20:24] <Slade> waiting on temporal
[01:23:14] *** Joins: Naan (~Naan@user/naan)
[01:23:38] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[01:23:47] *** Joins: owlbynight (sid501016@tinside.irccloud.com)
[01:23:48] *** Joins: graingert (sid128301@tinside.irccloud.com)
[01:26:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:29:35] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:33:58] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 258 seconds)
[01:34:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:38:28] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[01:38:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[01:39:58] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:44:08] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[01:44:48] *** Joins: victor (sid208353@tinside.irccloud.com)
[01:45:51] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 258 seconds)
[01:46:58] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:48:32] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:48:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:49:35] *** jess is now known as j
[01:52:26] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:53:17] *** Joins: gehn (~gehn@user/gehn)
[01:53:45] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[01:54:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:55:03] *** Joins: onosendi1 (~onosendi@user/onosendi)
[01:55:36] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[02:00:25] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 258 seconds)
[02:04:17] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[02:12:18] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 258 seconds)
[02:15:01] *** Quits: chonkbit (~chonkbit@192.145.117.164) (Ping timeout: 250 seconds)
[02:15:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[02:16:31] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 258 seconds)
[02:19:56] *** Quits: Memory (~Wei@143.198.78.64) (Quit: leaving)
[02:20:18] *** Quits: strive (~strive@user/strive) (Quit: WeeChat 3.2)
[02:22:51] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 276 seconds)
[02:25:55] *** Joins: strive (~strive@user/strive)
[02:26:39] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:26:51] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[02:27:37] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:24] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:33:02] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[02:33:36] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[02:35:17] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:35:27] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Remote host closed the connection)
[02:36:44] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[02:39:46] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[02:41:50] *** Joins: xse (~xse@user/xse)
[02:42:09] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f8bb:ce51:4b48:3fbe) (Remote host closed the connection)
[02:43:21] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[02:44:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 276 seconds)
[02:45:48] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 272 seconds)
[02:54:34] <banana_> Hey GreenJello check this out: http://www.ee.surrey.ac.uk/Projects/Labview/boolalgebra/ "Redundance Law"
[02:55:32] <banana_> nvm
[02:57:14] <banana_> I was thinking if my original equation was A || (A && B) you could just simplify it to A
[02:58:49] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Ping timeout: 268 seconds)
[03:00:12] <GreenJello> you could restructure it as an if/else https://gist.github.com/brigand/f9b7670f3551d4b48a008c4e678fab29
[03:00:28] <GreenJello> and you can see that the second branch is never taken
[03:01:18] <GreenJello> and if you delete that, it simplifies to `return A`
[03:01:54] *** Joins: kenliten (~kenliten@190.167.227.185)
[03:02:12] *** Joins: Naan` (~Naan@user/naan)
[03:02:39] *** Quits: kenliten (~kenliten@190.167.227.185) (Quit: Client closed)
[03:03:33] *** Joins: kenliten (~kenliten@190.167.227.185)
[03:03:56] *** Quits: Naan` (~Naan@user/naan) (Read error: Connection reset by peer)
[03:04:12] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[03:04:50] <banana_> im not as familiar in the if chain context
[03:05:37] <banana_> ah nice
[03:07:06] *** Joins: ferdna (~ferdna@user/ferdna)
[03:09:59] <banana_> so the embedded if condition is basically doing an AND operation with the containing if statement
[03:10:02] <banana_> condition
[03:10:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[03:10:34] <banana_> the containing else if
[03:11:07] <GreenJello> yeah, you chain an `else if` for ||, or nest an if for `||`
[03:11:07] <banana_> the relation between the if condition and the same level else-if is an OR
[03:11:23] <GreenJello> nest an if for '&&'*
[03:13:13] <banana_> yours is a little bit overkill but thanks haha. at least you're helping
[03:13:49] <banana_> so basically you couldve done something like if (A) { return true; } else if (A && B) { return true}
[03:14:00] <banana_> that becomes just return A
[03:14:34] <banana_> because A would be false when the else if condition is hit and will make the AND operation result false anyway
[03:15:13] <Slade> ljharb, 3 more years until Temporal is good? :P
[03:15:17] <banana_> so whenever the result is true the else-if will never be hit.
[03:16:22] <banana_> and the condition of the if statement is A, since A is a boolean and the return value is boolean just return that evaluated condition
[03:16:35] *** Joins: Naan (~Naan@user/naan)
[03:16:50] * Slade eats naan
[03:17:04] <Naan> stop that at once
[03:17:25] <Slade> it literally came out of the oven. its delicious
[03:17:26] <Naan> I'm busy adding comments to empty catch blocks in inherited code
[03:17:50] <GreenJello> yikes
[03:18:09] <Naan> 🔥 💁‍♂️☕ 🔥
[03:18:24] <Slade> Naan, your day today is not one I would put in the 'winning' category
[03:18:37] <ljharb> Slade: lol hopefully it's this year
[03:19:03] <Slade> ljharb, 4 months, yet no functional shims? I never pegged you for an optimist
[03:19:07] <Naan> Slade, not wrong :)
[03:19:17] <GreenJello> ljharb, doesn't it have to be implemented unflagged to make it to stage 3? who implemented it?
[03:20:05] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:20:22] <banana_> `if (A) { return true; } else if(!A && B) { return true }` can just be =>  `return A || B;`
[03:20:30] <Slade> you should eat Naan too. I have this coconut cranberry naan that just popped out thats awesome :D
[03:21:40] <ljharb> Slade: the proposal isn't even finished changing yet
[03:21:45] <ljharb> GreenJello: no, implementations are only for stage 4
[03:22:18] <Slade> new Title Unlocked:   ljharb, Optimistic Javascript Developer
[03:22:55] <Naan> I already ate naan today
[03:23:09] <GreenJello> ah
[03:23:09] <Naan> I had two seekh kebabs on naan from a local place
[03:23:20] <banana_> idk never learned that before yeah mustve not given af
[03:23:32] <banana_> damn oh well. typing keyboard is a living for some people.
[03:23:32] <Slade> possibly a euphemism.
[03:23:36] <Slade> Naan, nice
[03:23:58] <banana_> theres worse people than me out there.
[03:24:41] <banana_> my intentions were good picking this career even if I was wrong. learning now at least.
[03:24:53] <Naan> it's a marathon not a sprint !
[03:25:33] <Naan> wow I almost choked on water after typing that, some deity doesn't like that cliché
[03:25:42] <banana_> theyre both races
[03:25:54] <Naan> touché
[03:26:08] <Naan> it's a casual fun run not a sprint
[03:26:28] <banana_> good strategies are for mortals
[03:26:38] <banana_> jk gtg
[03:26:52] <banana_> thanks GJ
[03:26:57] <GreenJello> o/
[03:30:34] *** Joins: Celeo (~Celeo@user/celeo)
[03:34:04] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:34:55] <cloudbender> Boxed vs. Primitive keys in maps, performance timers
[03:34:59] <cloudbender> a bit cheesy
[03:35:01] <cloudbender> https://gist.github.com/cloudbender/4debf72692f86c03954e8c66ff473739
[03:35:07] *** Quits: Ducki_ (~ducki@user/ducki) (Ping timeout: 258 seconds)
[03:36:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:36:08] <wroathe> cloudbender: Quick style nitpick: camelCase is the predominant identifier style for Javascript
[03:36:21] <wroathe> cloudbender: i.e. takeTarget vs taketarget
[03:36:31] <cloudbender> yes.
[03:36:43] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[03:38:16] <cloudbender> I would try it on a playground, but pastebin is gone, so ...
[03:39:20] <cloudbender> the slowest operation on my  lappy is ~250ms
[03:40:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[03:41:22] *** j is now known as jess
[03:43:13] *** Joins: Ducki (~ducki@user/ducki)
[03:44:17] <entuland> uhm... I've pretty much always thought about events (both built-in DOM ones and custom ones) as just "stuff that happens", but I realize I can use them to dispatch commands around without having to expose functions (which I normally can't do when I return elements directly)
[03:44:29] <entuland> is that a bad idea? is there a reasonable other approach?
[03:45:31] <entuland> say, I create a list, then I run a makeSelectable() on it that adds facilities to select the various elements, I've implemented custom events that I can use to execute selecting all, none or invert the selection
[03:47:14] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 265 seconds)
[03:47:30] <wroathe> entuland: My personal opinion is that I certainly wouldn't prefer that over exposing and calling the function directly. If you need some form of mediator or eventing setup you can always store functions in some kind of data structure to be called later.
[03:47:35] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[03:47:45] <wroathe> entuland: Using the event plumbing unnecessarily just adds complexity and pain
[03:47:56] <entuland> that's a fair point
[03:48:08] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 258 seconds)
[03:48:25] *** Quits: kenliten (~kenliten@190.167.227.185) (Quit: Client closed)
[03:48:26] *** Joins: Ducki (~ducki@user/ducki)
[03:48:32] <GreenJello> I use single-event emitters like this one when I need the indirection that events provide: https://github.com/brigand/ject.dev/blob/master/src/EventType.js
[03:49:13] <wroathe> Yeah, that's exactly what i meant by mediator
[03:49:50] *** Joins: LSD (~LSD@2.lsd.systems)
[03:52:41] *** Joins: deltab (~deltab@95.154.230.49)
[03:53:09] <entuland> thanks for the ideas
[03:53:29] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[03:56:02] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:59:02] *** Quits: deltab (~deltab@95.154.230.49) (Changing host)
[03:59:02] *** Joins: deltab (~deltab@user/deltab)
[03:59:59] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[04:01:03] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[04:01:10] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[04:01:43] <entuland> columbus' egg - the makeSelectable() function had no meaningful return value, I ended up just returning all the command handlers as keys of an object as suggested above, thanks again
[04:02:49] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[04:04:09] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[04:05:07] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 245 seconds)
[04:06:58] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:08:54] *** Joins: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de)
[04:13:04] <celphi> yo wroathe
[04:13:06] *** Quits: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:13:12] <celphi> guess what
[04:15:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:25:02] *** Joins: physikoi (~physikoi@user/physikoi)
[04:29:22] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[04:30:44] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[04:32:52] *** Joins: gehn (~gehn@user/gehn)
[04:34:18] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[04:34:46] <wroathe> celphi: wat
[04:35:00] <celphi> im going with C++ now
[04:35:01] <wroathe> celphi: You're taking over for Bezos?
[04:35:03] <wroathe> Oh
[04:35:10] <celphi> lol no
[04:35:25] <wroathe> We lost another good one. It's been nice knowing you.
[04:35:36] <celphi> go to pm
[04:36:01] *** Quits: SteelGreyhound (~SteelGrey@176.248.140.52) (Quit: Leaving)
[04:36:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:41:57] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 276 seconds)
[04:42:25] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[04:45:55] <Lyn> are there (normal) browsers that don't support https?
[04:47:04] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 256 seconds)
[04:49:08] *** jess is now known as sandcat
[04:49:21] <GreenJello> Lyn, no, but there have been different SSL/TLS versions that browsers support and then drop over time
[04:49:34] <sheetjs> IE5 has issues with modern https
[04:49:46] *** Joins: whr_38 (~c4nt3lope@mail.whitehotrobot.com)
[04:49:51] *** Quits: whr_38 (~c4nt3lope@mail.whitehotrobot.com) (Remote host closed the connection)
[04:49:56] <Lyn> I'm just wondering if there's any good reason to not use https by default in websites
[04:50:08] <GreenJello> you should always force https
[04:50:25] <Lyn> why does http even exist lol
[04:50:49] <GreenJello> the only potential exception is for services in a private network where HTTPS doesn't really work
[04:50:56] *** Joins: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:51:06] <Lyn> doesn't work?
[04:51:40] <GreenJello> HTTP exists for historical reasons, and edge cases like private networks and localhost
[04:52:00] <Lyn> hmm well ye those are good reasons
[04:52:10] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[04:52:53] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[04:53:39] <Lyn> then I'm also wondering why CORS is required when a nginx serves React frontend and api from Express backend -- the user still communicates with just the nginx
[04:53:44] <GreenJello> also, for a lot of the web's history, HTTPS had a relatively high barrier to entry. You had to buy an SSL cert, install it on your web server, and remember to replace it a year later when it expires
[04:54:09] <Lyn> oh yea, things were hard back then
[04:54:55] <GreenJello> but now you can set it up with a few shell commands using letsencrypt, and have it auto-renew, so it's nearly zero effort
[04:55:01] <GreenJello> and free
[04:55:17] <GreenJello> you wouldn't need CORS in that situation
[04:56:03] <Lyn> oh, alright
[04:58:45] <Lyn> I think if the port/domain/http(s) differs then CORS is required, so I take it that the port is determined by what the user communicates with, not the actual origin
[05:00:09] <entuland> IE5 has never fallen into the "normal browsers" category :P
[05:00:09] <GreenJello> it's the domain/port, but there's a different default port for http vs https
[05:01:46] <GreenJello> could be wrong about that, but not in a way that matters
[05:01:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:03:30] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:04:48] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[05:05:33] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[05:09:13] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[05:13:10] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[05:13:31] *** Joins: Naan (~Naan@user/naan)
[05:14:24] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[05:16:08] <ljharb> entuland: false, IE 5.5 on Mac is what invented Ajax, iirc
[05:16:16] <ljharb> entuland: at the time, IE 5.5 was a shining pinnacle of innovation
[05:16:45] <entuland> no way
[05:17:53] *** Joins: P1RATEZ (piratez@user/p1ratez)
[05:19:07] <entuland> wow, for real
[05:21:21] <entuland> I think I had such a bad opinion of it because of Windows ME - I kinda wish I could erase that period of my life wrt... well, wrt anything computer-related
[05:21:41] <sheetjs> tragically IE6 didnt work on windows 95
[05:22:32] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: Lost terminal)
[05:23:11] <sheetjs> "The Microsoft Network is Microsoft's online service that makes joining the world of electronic information and communication fun."
[05:23:29] *** Joins: gggp (~gggp@123.113.188.14)
[05:30:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:33:20] <ljharb> entuland: IE 6 was also the top of the line at the time
[05:33:46] <ljharb> the problem was never that IE was bad. it was ALWAYS and ONLY that microsoft stopped updating it, and started tying it to windows' absurdly long support period
[05:34:03] <ljharb> not sure how tragic that is, windows 98 was leaps and bounds above 95
[05:36:42] <entuland> on the bright side Safari is the new IE :P at least we still have something to complain about
[05:37:41] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[05:37:42] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[05:38:06] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:42:22] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[05:44:17] *** Joins: gggp_ (~gggp@123.113.188.14)
[05:48:12] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[05:48:33] <ljharb> nah, not really. it's missing a few web features, but that's about it. complaints about iOS aren't safari's fault.
[05:49:13] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:49:49] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[05:50:32] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[05:53:58] *** Joins: Naan` (~Naan@user/naan)
[05:54:34] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:55:13] *** Joins: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00)
[05:56:29] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:57:20] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 256 seconds)
[05:58:00] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 276 seconds)
[05:58:40] *** Joins: z1haze (~z1haze@user/z1haze)
[05:58:59] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:51c5:1e5d:5111:f0dd)
[05:59:12] <z1haze> with regex, when you add a ? to make something optional, how does it determine which what pattern is optional if there's a bunch of stuff before it
[06:00:31] <z1haze> i have a bunch of potential name formats that I want to match with a single regex, but im trying to figure out how i can make chunks optional
[06:01:46] *** Quits: xisop (~xisop@bnull.net) (Quit: leaving)
[06:01:55] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f5d2:6d2c:159c:1581) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:53] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[06:02:59] *** Joins: cbleslie0 (~cbleslie@47.148.37.14)
[06:03:08] *** Joins: xisop (~xisop@bnull.net)
[06:04:08] <z1haze> this is what I've got https://regex101.com/r/xhoY8Z/1 if any regex pros can let me know if im overcomplicated this
[06:04:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[06:04:52] <entuland> oh god
[06:04:53] <z1haze> https://regex101.com/r/xhoY8Z/2 updated
[06:05:11] <entuland> I am not sure if I'd pull my hair more for the regex or for the input you have to parse
[06:05:27] <entuland> what the hell is that?
[06:05:28] <z1haze> well man i cant really control the input
[06:05:40] <z1haze> they are all variations of nicknames and ranks for a discord server
[06:05:42] <entuland> sure, you can always control it - if it sucks, reject it :P
[06:05:53] <z1haze> these are all valid formats
[06:05:59] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Read error: Connection reset by peer)
[06:06:12] <entuland> is the order and spacing consistent?
[06:06:18] <z1haze> my goal is basically to just figure out what their actual nickname is from this big mess, and the idea i have is to match this blob, and just pop() the result to get the nickname part
[06:06:24] *** Joins: ferdna (~ferdna@user/ferdna)
[06:06:47] <z1haze> i believe so. these are the examples that I was given
[06:07:07] <entuland> if so, I would divide the problem
[06:07:30] <z1haze> what do you mean?
[06:07:42] <entuland> tokenize it to make it easier to deal with the various bits against expected patterns
[06:08:04] <entuland> I would not try and parse all the input at once with a monolithic regex
[06:08:44] <z1haze> well i previously was. i was looking for chunks, stripping that off the input and then moving on
[06:08:49] <z1haze> but i didnt really see the benefit there
[06:09:06] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c00b09da0d2dad20612.dip0.t-ipconnect.de)
[06:11:13] <entuland> dunno, it seems some kind of "arbitrary amount of prefixes / tags / roles / attributes followed by a nickname" - if the pattern is regular, you could just split by space and take the last token of each line
[06:13:03] <z1haze> its not quite arbitrary, but there are just variations
[06:13:29] <entuland> what's the point of getting all the mess at the beginning of the line if you just need the nickname at the end?
[06:13:30] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c00b09da0d2dad20612.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:13:31] <z1haze> like they may or may not have a 0/0 and then they may or may not have a #Co. etc
[06:13:45] <z1haze> how else would i know what is a nickname?
[06:13:59] <z1haze> its all injected into the nickname field as per discords limitations
[06:14:22] <entuland> as above, if the nickname is the only thing you care about, and if the nickname is always the last "word" of the line...
[06:14:36] <z1haze> nah. nicknames can have spaces
[06:14:41] <z1haze> and dots, etc
[06:15:15] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[06:15:21] <entuland> then you're up for a headache if you don't have any map about all the possible stuff that is _not_ a nickname
[06:16:23] <z1haze> is this not what regular expression is used for?
[06:16:32] <z1haze> matching complex and mixed sequences
[06:16:56] <entuland> with somewhat _known and predictable patterns_
[06:17:25] <z1haze> why do you think is this not a known pattern, when i know it?
[06:17:49] <entuland> I'm confused
[06:18:17] <entuland> what if I nickname myself "Abc. Ent. CPT."
[06:18:33] <z1haze> you can't nickname yourself
[06:18:41] <entuland> see, more missing data
[06:18:59] <z1haze> when you first join the server, you have you username only
[06:19:06] <z1haze> and ure you have could Abc. ENt. CPT. whatever
[06:19:22] <z1haze> but when we got to set your nick, the system will know you dont have a nick, so it wont bother parsing that. it will inject what is needed
[06:19:28] *** Joins: onosendi1 (~onosendi@user/onosendi)
[06:19:47] <z1haze> and then the next time your nickname goes to be updated, we can pull all of the shit off that isnt actually your nick. and then update your nick and reapply the correct 'prefixes' we can call thenm
[06:20:55] <entuland> I believe there is a ton of missing data to be able to help you sort that mess out
[06:21:10] <z1haze> ok
[06:21:22] <z1haze> i think what i have will work
[06:21:26] <z1haze> thank ytou for looking at it
[06:21:56] <entuland> yw - I would suggest you write down all the rules you know in a single text file, including examples of how the data is mangled at the various steps and how
[06:22:05] <entuland> I mean, if you'll decide to ask for help again
[06:22:33] <entuland> that way whoever looks at your question will have a better idea of where the data comes from, who and how mangles it, what kind of output you expect and so forth
[06:22:47] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[06:22:59] *** Joins: debayer (~debayer@2603-8000-cf00-0010-6ddf-aaca-888c-a18e.res6.spectrum.com)
[06:23:07] <z1haze> yeah for sure. i mean the examples in the regex example are the possible structures
[06:23:48] <z1haze> i understand thought that it doesnt make sense to someone who hasnt been explained what all these parts are
[06:23:55] <entuland> yep
[06:24:26] <entuland> nethack stuff?
[06:25:20] *** Joins: Rockwood (~Rocky@user/rocky)
[06:25:43] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[06:26:04] <Rockwood> o/ good morning
[06:29:12] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[06:29:33] *** Joins: codebam (~codebam@user/codebam)
[06:31:55] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:32:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[06:33:48] *** Joins: l__q (~modinfo@user/modinfo)
[06:38:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[06:38:29] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:39:37] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[06:42:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[06:44:09] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 276 seconds)
[06:49:26] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:49:57] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[07:05:49] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[07:13:47] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c00b09da0d2dad20612.dip0.t-ipconnect.de)
[07:17:53] *** Joins: rickyjw (~rickyjw@24.140.237.124)
[07:19:37] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[07:19:54] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c00b09da0d2dad20612.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:25:53] *** Quits: rickyjw (~rickyjw@24.140.237.124) (Quit: WeeChat 3.2)
[07:27:25] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:27:59] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:29:16] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:29:29] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:30:14] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:30:28] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:32:00] *** Quits: IceMichael (~IceMichae@dynamic-046-114-158-026.46.114.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:32:38] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:33:29] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:33:43] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:39:17] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:42:12] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 272 seconds)
[07:42:18] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[07:42:52] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Quit: WeeChat 3.2)
[07:43:07] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:43:26] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:43:40] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:44:06] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[07:44:21] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:44:34] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:45:15] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:45:30] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:45:41] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[07:49:04] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Client Quit)
[07:49:22] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:57:33] *** Joins: IceMichael (~IceMichae@dynamic-046-114-157-153.46.114.pool.telefonica.de)
[08:01:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:56] *** Joins: bambanxx (~bambanx@181-163-37-172.baf.movistar.cl)
[08:02:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:04:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[08:07:34] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:11:20] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[08:15:28] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:16:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[08:18:46] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[08:22:45] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:26:52] *** Rockwood_ is now known as Rockwood
[08:27:54] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[08:30:31] <gggp_> is it possible to recover from min js
[08:30:55] <Rockwood> what do you want recover from min js?
[08:31:18] <Rockwood> and talking about which min js?
[08:32:22] <GreenJello> if you have a source map, then it's possible in theory
[08:32:26] <GreenJello> otherwise, not really
[08:33:45] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[08:35:10] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:36:16] <gggp_> can i standardize the messed code
[08:37:56] <gggp_> just make it readable
[08:38:33] *** Quits: cbleslie0 (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[08:38:39] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[08:38:53] <GreenJello> there are code formatters
[08:38:59] <GreenJello> 'prettier' is one of them
[08:39:21] <GreenJello> can't promise it'll be readable
[08:40:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:40:14] <gggp_> https://paste.ubuntu.com/p/RBQJxDHkfC/
[08:40:16] <gggp_> like this
[08:42:46] <Rockwood> which editor do you ve?
[08:43:04] <debayer> gggp_ here you go, and no, not easily: https://paste.ubuntu.com/p/Nz6k6tWNFV/
[08:43:15] <Rockwood> https://webformatter.com/javascript try here
[08:43:16] <debayer> if the site you got it from has the sourcemaps, it is easier
[08:43:23] <GreenJello> !repaste gggp_
[08:43:24] <jellobot> GreenJello, I don't know the paste service at "https://paste.ubuntu.com/p/RBQJxDHkfC/". GreenJello, ping!
[08:43:25] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Quit: WeeChat 3.2)
[08:43:30] <GreenJello> worth a try
[08:44:36] <debayer> yeah you can always
[08:44:51] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[08:44:51] <debayer> *always format js but if it is minified then likely most things will not make sense
[08:45:47] *** Quits: bambanxx (~bambanx@181-163-37-172.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:46:36] <gggp_> the code seems  a packed js module
[08:46:49] <gggp_> packed with some tool
[08:47:12] <gggp_> like webpack
[08:47:49] <GreenJello> likely
[08:49:01] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[08:49:34] <debayer> gggp_ it is part of the rollbar source code
[08:49:53] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[08:49:58] <gggp_> debayer, give you a star
[08:50:10] <debayer> is this just an example or are you trying to make this particular one readable? because the code for this is very easy to find totally readable and commented
[08:51:14] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[08:51:19] <gggp_> an example snippet
[08:52:30] <gggp_> debayer, I have the packed out full src.js ,how can I send to you
[08:52:45] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[08:53:16] <debayer> gggp_ i just pasted it into a js beautifier page. just google that. it is unlikely to be helpful if it is minified like that
[08:53:39] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[08:54:12] <debayer> where is the code originally from? some private site?
[08:54:26] <debayer> 99% of the time, the minified code is just a ton of vendor libs
[08:54:33] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[08:54:43] <debayer> most of the time you dont actually need to see or care about the code itself but just the name of whatever they are using to do a thing
[08:55:16] <debayer> oh also the chrome inspector will happily do this formatting for you and do a better job
[08:56:26] <gggp_> yeah , most is vendor libs,but i need their names
[08:56:26] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[08:56:47] <debayer> gggp_ if you find the js file in the 'sources' panel in the chrome inspector, you'll see a button in the bottom left corner that looks like "{}" and that will do its best to make it readable
[08:57:36] <gggp_> okay
[08:58:00] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[08:58:13] *** Joins: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de)
[08:58:22] <debayer> names wont usually be there with minified code, the js modules and imports are combined and renamed. but youll see function names
[08:59:01] <debayer> even in minified code though often there will be comments starting with /* that show lib name and license info as this is a condition for some of the OSS licenses
[08:59:24] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[09:02:18] *** Quits: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:05:59] <gggp_> oh,i find it use vuejs
[09:06:10] <gggp_> methods name is obvious
[09:13:41] *** Joins: dongbei (~dnprog8@c-71-198-117-25.hsd1.ca.comcast.net)
[09:13:42] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[09:14:17] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[09:14:27] *** Joins: bambanxx (~bambanx@181-163-37-172.baf.movistar.cl)
[09:15:07] <dongbei> I'm trying to figure out how to make my sharedbufferarray usage not suck.  I can't use them for transfering data between my ui thread and the webworker I'm running without doing: a TextEncode -> u8array -> sab8array.set(u8array)
[09:15:13] <dongbei> it's really slow
[09:15:18] <dongbei> really slow :(
[09:15:49] <Rockwood> bye cya
[09:15:49] <ljharb> what are you doing that needs a web worker?
[09:16:08] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:16:15] *** Joins: junktext (~junktext@109.201.152.178)
[09:16:23] <dongbei> i've tried just sending the serialized objects that i'm sorting on my webworker via Comlink with just the message passing, turning it into a u8array with the textencode and this SAB mistake
[09:16:32] <dongbei> I'm sorting objects on a webworker
[09:17:12] <dongbei> and I've gotten it to the point where I have 1,000,000 objects, I split them into equal splices, send them to each worker, get the sorted arrays back then do a final sort on the ui thread.
[09:17:35] <dongbei> with somewhat small objects it's faster than doing the entire sort on the ui thread.
[09:18:02] <dongbei> the worst part is that I thought just sending it with message passing would be the slowest but it's the fastest
[09:18:08] <dongbei> so i'm screwing something up.
[09:18:24] <dongbei> how am i supposed to get my objects to a webworker efficiently?
[09:19:14] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:23:57] <dongbei> should i just assume that webworkers are more for binary or numeric data crunching rather than textual analysis or extending the usual js front end stuff?
[09:24:31] <sheetjs> you are limited in what can be passed back and forth
[09:25:25] <dongbei> well i get that, i'm just trying to figure out if I'm stuck with my current method or if someone else has figured out something else.
[09:27:12] <ljharb> dongbei: right but i mean what are you doing at a high level that requires having even a tenth of that number of objects in memory
[09:27:27] <sheetjs> whats wrong with just passing the uintarray directly
[09:28:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Remote host closed the connection)
[09:28:15] <dongbei> ljharb: nothing.  I just want to sort as many things as possible.  it sounds dumb but I really want to do it.
[09:28:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[09:29:06] <dongbei> without coming this far I wouldn't know that sorting on webworkers then combining and then sorting again on the ui thread would be the fastest which sounds stupid to me.
[09:29:39] <dongbei> sheetjs: they're javascript objects, not uint8arrays directly, if you talking about transferring the uint8arrays it's slower than just doing a message pass
[09:29:46] <ljharb> dongbei: lol but why
[09:30:01] <dongbei> why go to the moon bruh?
[09:30:13] <ljharb> because that's actually a thing worth doing
[09:30:27] <dongbei> I just want to sort.  lemme sort.
[09:30:34] <ljharb> JS engines are not going to be optimized for something that nobody would ever do
[09:30:43] <ljharb> so you can surely do it, but expecting it to be fast is not reasonable
[09:31:04] <sheetjs> https://oss.sheetjs.com/sheetjs/ for example on file input
[09:31:16] <dongbei> screw what they're optimized for.  we're programmers.  they're just bits.  they can't tell me what to do.,
[09:31:36] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:32:00] <dongbei> sheetjs: what do you mean?
[09:32:11] <ljharb> dongbei: sure they can. go use bits to prove P=NP
[09:32:31] <sheetjs> File -> ArrayBuffer -> Uint8Array ~> (message to worker) ~> process in worker -> generate string output ~> (message to UI) ~> post-process
[09:32:43] <dongbei> ljharb: some brilliant guy is gonna prove you wrong, it won't be me, I don't care about P=NP
[09:32:50] *** Joins: hygl (uid16621@tinside.irccloud.com)
[09:33:02] <ljharb> dongbei: lol maybe but nobody's going to solve the halting problem by sorting objects
[09:33:58] *** Quits: bambanxx (~bambanx@181-163-37-172.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:34:00] <dongbei> sheetjs: yeah I've tried that.  I send the buffer via postmessage, I send the buffer via postmessage buffer transfer, I send the buffer via sharedarraybuffer postmessage
[09:34:29] <dongbei> postmessage with a json string then deserialize and sort, then reserialize and send back is fastest.
[09:34:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: Lost terminal)
[09:34:45] <ljharb> also in what browser are you trying this
[09:34:51] <dongbei> chrome, firefox and safari.
[09:35:00] <ljharb> alrighty then
[09:35:19] <dongbei> firefox chokes on 12+ webworkers, safari and chrome love having more workers.
[09:35:35] <ljharb> unsurprising since even having one is rare
[09:35:36] <dongbei> weird thing is that firefox is fastest if they're all limited to 8
[09:35:51] <dongbei> i dunno what's going on there.
[09:36:39] <ljharb> how many cores do you have
[09:36:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[09:36:52] <dongbei> 16
[09:37:04] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[09:37:07] <dongbei> so I can't tell you if it would be faster with more.
[09:37:13] <dongbei> 1 worker per cpu
[09:37:17] <ljharb> right but other stuff's happening on your machine too
[09:37:18] <dongbei> er...thread
[09:37:29] <ljharb> trying to parallelize more than your computer has free is always slower
[09:37:53] <dongbei> i've compensated for that.
[09:38:05] <dongbei> irc and chrome are the only things running.
[09:38:12] <dongbei> single page
[09:38:18] <dongbei> single tab
[09:38:19] <ljharb> yes but chrome uses multiple processes
[09:38:53] <dongbei> what does that have to do the speed drop in techniques?
[09:38:54] <ljharb> all the non-render i/o it does is in a separate thread, for example
[09:39:06] <ljharb> i'm implying you might have less available resources than you think
[09:39:16] <dongbei> but where is the resource constraint?
[09:39:22] <dongbei> how do I figure that out?
[09:40:01] <ljharb> no idea, but i don't think you can free it up
[09:40:14] <ljharb> i think you might need to try using *fewer* workers
[09:40:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:41:25] <dongbei> the workers aren't my issue. all of them go faster with more workers.
[09:41:33] <dongbei> except firefox, I'm ok with that.
[09:41:40] <dongbei> it's the sharedarraybuffer being slower.
[09:45:24] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[09:53:50] *** Quits: junktext (~junktext@109.201.152.178) (Ping timeout: 258 seconds)
[09:54:53] *** Quits: fuzzfox (~gizzard@saturn.whatbox.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[09:55:01] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[09:56:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:56:43] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:01:53] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 258 seconds)
[10:09:31] *** Joins: l__q (~modinfo@dynamic-002-247-254-242.2.247.pool.telefonica.de)
[10:12:56] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[10:15:22] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[10:19:46] *** Joins: mcint (mcint@user/mcint)
[10:25:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:27:30] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 272 seconds)
[10:28:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:31:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: leaving)
[10:32:26] *** Joins: flameboi (dgw@user/flameboi)
[10:33:17] <theskillwithin> If you know the way broadly you will see it in everything
[10:34:28] *** Quits: gggp_ (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[10:37:23] *** Joins: endlesseditions (~endlessed@135.129.112.36)
[10:40:48] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[10:41:05] *** Joins: mcint (mcint@user/mcint)
[10:41:30] *** Quits: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:42:43] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[10:50:14] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:54:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:57:36] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Client Quit)
[11:03:16] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[11:04:43] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:10:59] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:11:33] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:15:43] *** Quits: mdel (~mdel@user/mdel) (Quit: The Lounge - https://thelounge.chat)
[11:16:32] *** Joins: mdel (~mdel@user/mdel)
[11:23:54] *** Quits: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[11:23:58] *** Quits: victor (sid208353@tinside.irccloud.com) (Changing host)
[11:23:58] *** Joins: victor (sid208353@user/victor)
[11:24:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:26:08] *** Joins: gggp_ (~gggp@60.10.23.170)
[11:27:01] *** Joins: henry40408 (~henry4040@112.105.246.24)
[11:29:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:30:54] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[11:39:52] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[11:40:56] *** Quits: ckdcreation (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[11:41:12] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:41:57] *** Joins: comatory_ (~ondrejsyn@182.24.broadband4.iol.cz)
[11:43:36] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[11:44:10] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 258 seconds)
[11:44:34] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[11:44:57] *** Quits: endlesseditions (~endlessed@135.129.112.36) (Quit: Textual IRC Client: www.textualapp.com)
[11:45:55] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:46:32] *** Quits: comatory_ (~ondrejsyn@182.24.broadband4.iol.cz) (Ping timeout: 258 seconds)
[11:48:06] *** Joins: Deneb (~johnch@93.125.7.51.dyn.plus.net)
[11:48:18] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[11:50:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:52:34] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[11:54:34] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:00:39] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c00103a139c8c329a46.dip0.t-ipconnect.de)
[12:11:23] *** Joins: entuland (~entuland@user/entuland)
[12:11:50] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:20:42] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:24:51] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[12:26:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:542:4e83:d63b:1810)
[12:27:49] *** Joins: Naan` (~Naan@user/naan)
[12:28:09] *** Joins: vysn (~vysn@user/vysn)
[12:30:46] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[12:33:27] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:33:28] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:33:28] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:33:57] *** Joins: CiaoSen (~Jura@p549cb217.dip0.t-ipconnect.de)
[12:34:19] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:35:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:58] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:542:4e83:d63b:1810) (Ping timeout: 258 seconds)
[12:41:57] *** Joins: PrenzlBu_ (~PrenzlBur@p200300ca57319c00110669b9544d1a05.dip0.t-ipconnect.de)
[12:44:39] *** Quits: CiaoSen (~Jura@p549cb217.dip0.t-ipconnect.de) (Quit: CiaoSen)
[12:44:42] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c00103a139c8c329a46.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:47:10] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[12:57:22] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[13:00:06] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[13:00:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[13:00:52] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:35] *** Quits: PrenzlBu_ (~PrenzlBur@p200300ca57319c00110669b9544d1a05.dip0.t-ipconnect.de) ()
[13:14:19] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:15:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bd64:119e:13b8:1ba4)
[13:17:29] *** Joins: gggp__ (~gggp@60.10.23.170)
[13:19:45] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:1112:c1b7:d115:ba5a:a45f)
[13:20:57] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[13:21:17] *** Quits: Cyp (~cyp@192038129091.mbb.telenor.dk) (Remote host closed the connection)
[13:21:41] *** Joins: Cyp (~cyp@192038129091.mbb.telenor.dk)
[13:24:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[13:24:36] *** Joins: teut (~teut@182.69.87.27)
[13:24:41] <teut>   const type = [component.displayName] || [component.name];
[13:24:50] <teut> what's the brackets used for?
[13:25:13] <teut> https://blog.maximeheckel.com/posts/react-sub-components-513f6679abed/   reading here
[13:27:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:30:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 272 seconds)
[13:33:03] *** Joins: hans (~hans@ti0099a430-0997.bb.online.no)
[13:33:33] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[13:33:55] <hans> how does the debug console know which errors are generated inside async functions, and which errors are generated outside of async functions? because error functions generated inside are explicitly marked as an "async error" when inspecting it
[13:35:42] <hans> at least in firefox
[13:37:19] <theskillwithin> what the full error?
[13:37:36] *** Quits: dongbei (~dnprog8@c-71-198-117-25.hsd1.ca.comcast.net) (Quit: leaving)
[13:37:48] *** Joins: mei (~mei@user/mei)
[13:40:13] *** Joins: Safa_[A_Boy] (~Safa@89.148.13.249)
[13:40:50] <Safa_[A_Boy]> Hi all. Is there any reliable way to tell if an element's text is spanning over more than one line?
[13:42:29] <theskillwithin> umm
[13:45:03] <theskillwithin> !xy
[13:45:03] <jellobot> theskillwithin, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[13:47:39] *** Joins: Rockwood (~Rocky@user/rocky)
[13:50:27] *** Joins: gggp_ (~gggp@123.113.176.18)
[13:50:29] <Safa_[A_Boy]> Nice concept. I sometimes tend to do that :\
[13:51:32] <Safa_[A_Boy]> I need to change the layout of my component a bit differently if the text in the span is spanning more than one line. (for example changing from a flex-direction: row to a flex-direction: column)
[13:51:54] <Rockwood> this javascript channel
[13:52:18] <Rockwood> and make test case for help
[13:52:22] <Safa_[A_Boy]> I doubt anything in css will do that for me, hence why I'm here
[13:52:40] <Rockwood> the the test case
[13:53:54] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[13:56:35] <theskillwithin> no idea what your talking about, could you make a codepen.io or something Safa_[A_Boy]
[13:56:48] <Rockwood> theskillwithin, cheers
[13:56:50] <Rockwood> o/
[13:57:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[14:01:18] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[14:01:19] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[14:02:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:05:30] *** Quits: hans (~hans@ti0099a430-0997.bb.online.no) (Ping timeout: 252 seconds)
[14:05:57] <Safa_[A_Boy]> https://codepen.io/safaalfulaij/pen/GRmYyNN
[14:06:12] <Safa_[A_Boy]> Hope this makes things clear, theskillwithin
[14:09:19] <Rockwood> oops
[14:09:40] <Rockwood> what wrong in the html?
[14:09:57] <Rockwood> means what do you wanna change in it?
[14:10:56] <Safa_[A_Boy]> I'm trying to achieve the first and third. That the layout changes if there are multiple lines, and the time goes under the content text
[14:11:18] <Safa_[A_Boy]> But don't want that for single lines as it's a waste of space
[14:14:07] <Rockwood> https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox
[14:14:23] <Rockwood> answer for your question
[14:15:50] <Rockwood> you making to many classes names also
[14:15:57] <Rockwood> its looks nested stuff
[14:15:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[14:16:11] <Safa_[A_Boy]> Class names for the example only
[14:16:38] <Safa_[A_Boy]> I didn't get what you mean by the link. I do understand flex box. What exactly do you mean?
[14:18:19] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:18:19] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:18:19] *** Joins: Heraes (~Heraes@user/romarain)
[14:18:40] <Rockwood> why do you using class 'fix'?
[14:18:56] <Safa_[A_Boy]> To show you what I want vs what I don't want
[14:19:42] <Rockwood> oops wrong concept
[14:19:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[14:20:11] *** Joins: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl)
[14:20:17] <Rockwood> why not .message > span
[14:21:18] <Rockwood> you can select last-child and first-child easily
[14:21:54] <Rockwood> ul li more better for this work
[14:22:05] <Safa_[A_Boy]> All this I know, I wrote the example just for the sake of showing. It's very similar to the actual one, and shows what I want to do.
[14:24:29] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[14:25:49] *** Joins: hans (~hans@ti0099a430-0997.bb.online.no)
[14:26:46] <Safa_[A_Boy]> So my original question: How can I change the layout of flex box *if* the content is spanning more than one line. This was my original question, and the example shows this.
[14:26:47] <theskillwithin> Safa_[A_Boy] https://codepen.io/theskillwithin/pen/BaRqJxJ
[14:28:22] <theskillwithin> and if u want the gap.    add gap: 1em 0; on .message
[14:28:27] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[14:28:44] <Safa_[A_Boy]> Ok, I figure that I'm still in the xy problem. One second I'll update something
[14:31:55] <Safa_[A_Boy]> I rephrase: taking my example again: https://codepen.io/safaalfulaij/pen/GRmYyNN. How can I (using javascript) add the "fix" class to the *second* message (saying BAD) so that it will eventually show like the third message (GOOD)?
[14:33:15] <Safa_[A_Boy]> I mean I need to add it conditionally based on if the content is spanning more than one line
[14:33:44] <Safa_[A_Boy]> (Take all the css with a grain of salt, this is a JS question. CSS is for helping showing what I want to achieve)
[14:34:04] <Rockwood> https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style by this css
[14:34:53] <Safa_[A_Boy]> if (condition) { element.classList.add("fix") };
[14:35:02] <hassoon> Safa_[A_Boy]: ya Element.style is what you need to mutate css properties with js
[14:35:05] <Safa_[A_Boy]> I need to know how would I write this condition
[14:35:28] <Rockwood> https://developer.mozilla.org/en-US/docs/Web/API/Element/classList
[14:36:00] <Rockwood> on what event you want change the classname?
[14:36:05] <hassoon> Safa_[A_Boy]: element spanning on more than one line => you add the fix class ?
[14:36:13] <Safa_[A_Boy]> ^ THIS
[14:36:51] <hassoon> Safa_[A_Boy]: which element is that you are targetting ?
[14:37:25] <Safa_[A_Boy]> Elements with the "content" class
[14:37:36] <hassoon> okey lemme see
[14:38:21] <Rockwood> in normal css you can declare display block none
[14:38:26] <Rockwood> and change by js
[14:38:38] <Rockwood> on that section
[14:38:54] <Rockwood> anyway sorry i am not good enough in explain things
[14:39:49] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Read error: Connection reset by peer)
[14:40:25] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[14:41:36] <hassoon> Safa_[A_Boy]: i don't understand why you need to manipulate css with js in this case ? you can just prepare your css code in a way that your text shows up nicely aligned and broken to new lines when needed
[14:41:37] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Read error: Connection reset by peer)
[14:41:41] <Safa_[A_Boy]> Rockwood, Seems that I too am not good enough. I'm looking for a way to do this "change by js". I need to define this condition. So looking at my original question: How can I detect if an element is spanning more than one line reliably?
[14:42:05] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[14:42:11] <hassoon> Safa_[A_Boy]: you don't need to check for that i think
[14:42:18] <hassoon> Safa_[A_Boy]: otherwise, why do you want to ?
[14:43:07] <Safa_[A_Boy]> hassoon, Do you have any ideas how to do that? Prepare the css to work with both conditions?
[14:44:13] <hassoon> Safa_[A_Boy]: you want your text inside .content to span horizontally and fill up the space above the time text ?
[14:45:11] <Safa_[A_Boy]> You can see how I'm trying to do all that using the "fix" class
[14:45:27] <hassoon> Safa_[A_Boy]: i think you want it to be like the text in GOOD
[14:45:32] <Safa_[A_Boy]> Yup
[14:45:32] <hassoon> the third block
[14:45:40] <hassoon> well then, no js for that
[14:46:05] <hassoon> lanipulating css with js is only needed when you're into complex dynamic calculations/manipulations
[14:46:11] <hassoon> manipulating *
[14:46:24] <Rockwood> https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child try by this
[14:47:22] <Rockwood> you can control by this your structure
[14:48:26] <hassoon> Safa_[A_Boy]: have a look here, my css update in the bottom of css code section https://codepen.io/hassoon/pen/bGWmLbx
[14:49:07] <hassoon> Safa_[A_Boy]: do you want a margin.spacing between the content text and the time text ?
[14:49:21] <hassoon> like in the third block titled GOOD
[14:49:44] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[14:50:57] <Safa_[A_Boy]> hassoon, Now the first message broke
[14:51:01] <Safa_[A_Boy]> :)
[14:51:28] <hassoon> Safa_[A_Boy]: meaning ?
[14:51:48] <Safa_[A_Boy]> Compare my snippet with yours
[14:51:54] <hassoon> ya then what ?
[14:52:03] <hassoon> your text breaks nicely in my fiddle
[14:52:30] <Safa_[A_Boy]> I need the first and third to look as in my snippet
[14:52:58] *** Joins: federico_it (~textual@151.95.116.125)
[14:53:07] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[14:55:04] <hassoon> ah
[14:55:16] <hassoon> for one-lined text you want the time text to be in the same line
[14:59:31] *** Joins: Safa_[A_Boy]_ (~Safa@89.148.13.249)
[15:01:45] *** Quits: Safa_[A_Boy] (~Safa@89.148.13.249) (Ping timeout: 245 seconds)
[15:01:46] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[15:01:46] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[15:01:46] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[15:01:47] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Read error: Connection reset by peer)
[15:02:17] <hassoon> Safa_[A_Boy]_: ya we might need some js here
[15:06:15] *** Quits: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl) (Quit: Client closed)
[15:07:34] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[15:09:20] *** Joins: entuland (~entuland@user/entuland)
[15:13:02] <Rockwood> https://codepen.io/cyberia/pen/poPxawz?editors=1100
[15:13:20] <Rockwood> Safa_[A_Boy]_, ^^
[15:14:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[15:14:45] *** Joins: entuland (~entuland@user/entuland)
[15:14:54] <Rockwood> you can make more dynamic easily
[15:15:34] <Rockwood> just display block or none
[15:16:21] *** Quits: stiv3n (~stiv3n@c-73-92-94-201.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[15:17:22] <hassoon> Safa_[A_Boy]_: https://ghanhass.github.io/myfiddle/363
[15:18:34] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[15:19:03] *** Joins: stiv3n (~stiv3n@c-73-92-94-201.hsd1.ca.comcast.net)
[15:19:17] <hassoon> Safa_[A_Boy]_: small update https://ghanhass.github.io/myfiddle/364
[15:19:50] <hassoon> Safa_[A_Boy]_: anyway in my case , the fix class is made for message text that is displayed in one line
[15:20:10] <hassoon> Safa_[A_Boy]_: for multi-line .content text, there is no fix class
[15:23:20] *** Joins: gggp__ (~gggp@125.33.88.79)
[15:23:38] *** Quits: gggp_ (~gggp@123.113.176.18) (Remote host closed the connection)
[15:27:37] *** Joins: Guest10 (~Guest10@ufr-132-230-194-223.eduroam-nat.uni-freiburg.de)
[15:29:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[15:31:36] <Naan`> how weird is this... an unused line in some express code didn't trigger an error in our build until today (after I did a bunch of seemingly unrelated linting changes)
[15:31:54] <Naan`> let io = require('socket.io').listen(server);
[15:31:54] <Naan`>  ... the dependency was never even installed but never errored before
[15:37:16] *** Joins: gggp_ (~gggp@60.10.23.170)
[15:37:34] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[15:37:58] *** Joins: Xatenev (~xatenev@user/xatenev)
[15:38:00] <Xatenev> hello
[15:38:34] <Xatenev> some time ago I built a sort function that looks like this: https://bpa.st/E25A
[15:38:55] <Xatenev> in chrome, everything works fine but in firefox, line 9 to 12 doesn't seem to work
[15:39:09] <Xatenev> anyone has a clue why that might happen? I use JS' builtin .sort()
[15:39:15] <Xatenev> does it behave differently across browsers?
[15:40:40] *** Quits: Guest10 (~Guest10@ufr-132-230-194-223.eduroam-nat.uni-freiburg.de) (Quit: Client closed)
[15:41:00] *** Quits: gggp__ (~gggp@125.33.88.79) (Ping timeout: 272 seconds)
[15:41:22] <entuland> Xatenev, define "doesn't seem to work" better - you may want to inspect the actual values during the execution (either step through or console.log())
[15:43:26] <Xatenev> yep I'll debug it now
[15:43:40] <Xatenev> just thought maybe theres a known difference with ff/chrome or something
[15:44:34] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[15:45:24] *** Joins: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl)
[15:46:07] *** Quits: hans (~hans@ti0099a430-0997.bb.online.no) (Ping timeout: 258 seconds)
[15:47:28] *** Joins: hans (~hans@ti0099a430-0997.bb.online.no)
[15:48:22] *** Quits: Cyp (~cyp@192038129091.mbb.telenor.dk) (Ping timeout: 256 seconds)
[15:50:04] <Xatenev> entuland: hm, the values seem to be correct but I guess if(record1.data.parentTask.parentId === null) { doesn't really do what it should do
[15:50:12] <Xatenev> I basically want to sort all elements that have parentId === null to the top
[15:50:28] <Xatenev> but for some reason, other elements that have a parentId set are still above
[15:51:31] <entuland> did you dump the actual value of .parentId to see what it really contains?
[15:51:41] <Xatenev> yea
[15:51:54] <Xatenev> it has the correct value for the entries
[15:52:00] <Xatenev> its null for some and e.g. 3489 for thers
[15:52:01] <Xatenev> others*
[15:52:10] <Xatenev> but some entries that have 3489 are on top of those that aren ull
[15:52:18] <entuland> are you 100% sure it's null and not "null" or something?
[15:52:21] <Xatenev> and the order seems *completly* different in chrome and firefox
[15:52:30] <Xatenev> yes
[15:52:42] <entuland> then there must be something else
[15:52:58] <Xatenev> I'd atleast expect a similar sorting in both browsers
[15:53:09] <entuland> it's quite unlikely for firefox to screw up that null comparison
[15:53:26] <entuland> no errors in the console whatsoever? positive your code is running in its entirety?
[15:53:43] <Xatenev> weird, I replaced my sorting code with `return -1`
[15:53:47] <Xatenev> and i still get a different sorting
[15:55:03] <entuland> no, that's not a good test, the result of the comparisons can't contradict each other
[15:55:30] <entuland> you can't have compare(a, b) and compare(b, a) return _both_ -1
[15:56:36] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Ping timeout: 252 seconds)
[15:57:37] <Xatenev> hm
[15:57:57] <entuland> it seems to be that you only have to guarantee that compare(a, b) returns always the same value, but I wouldn't rely on the above inconsistency
[15:58:23] <entuland> this is the section I refer to: "compareFunction(a, b) must always return the same value when given a specific pair of elements a and b as its two arguments. If inconsistent results are returned, then the sort order is undefined."
[15:58:28] <entuland> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
[15:58:46] <Xatenev> I see
[15:58:51] <Xatenev> well I only check for record1
[15:58:58] <Xatenev> so I guess my sort order is undefined
[15:59:10] <Xatenev> but what would be the right approach then to ensure that these elements are on top?
[15:59:49] <entuland> if(!record1 && record2) or something
[16:00:08] <entuland> shortened just to convey the idea
[16:00:49] <entuland> if(record1.data.parentTask.parentId === null && record1.data.parentTask.parentId !== null) in your case, if you really have to check for null, or something
[16:01:02] <entuland> well, the second should really be record2 of course
[16:02:09] *** Joins: gggp__ (~gggp@125.33.91.30)
[16:02:33] <Rockwood> entuland, o/
[16:04:51] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[16:05:15] <entuland> o/
[16:05:44] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:07:19] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[16:11:22] *** Joins: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[16:14:56] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 268 seconds)
[16:16:56] <Xatenev> entuland: but e.g. if i have two entries
[16:17:13] <Xatenev> it only calls this sorting function once
[16:17:28] <Xatenev> so if it calls it in the wrong order it won't work ,right?
[16:17:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[16:17:39] <Xatenev> I need two if checks then to return -1/1
[16:17:49] <entuland> yep, it may be good to do that
[16:21:08] *** Joins: xon (~xon@103.156.50.59)
[16:24:03] <xon> hello guy, how can I created 2d array from nested object [ { foo: [ { name: 'x' } ] }], here is example code.
[16:25:10] <ashnur> too many ways
[16:25:36] <xon> @ashnur, how
[16:25:41] <xon> https://jsbin.com/gulanozemo/edit?js,console
[16:25:50] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[16:25:58] <xon> here is the example code: https://jsbin.com/gulanozemo/edit?js,console
[16:26:27] *** Joins: pulse (~pulse@user/pulse)
[16:29:43] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:31:21] <xon> hi guy, is there any way to create 2d array like [ [], [] ] from nested object [ {foo: []}, {foo: [] }], here is code example: https://jsbin.com/gulanozemo/edit?js,console      thank you so much for your help
[16:31:48] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Quit: Leaving)
[16:32:47] <ashnur> nice
[16:32:57] <Alexendoo> xon: With {} in arrow functions you need an explicit return, which is why you get undefined there. you want just f => f.foo...
[16:34:07] <ashnur> yes^
[16:34:40] <xon> Alexendoo: Thank you so much for your help. now it becomes: [["X", "Z"], ["C"]] and I want [ ['X'], ['Z'], ['C'] ]
[16:35:11] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[16:35:52] <ashnur> reduce
[16:36:00] <Alexendoo> You can use a flatMap for that
[16:36:11] <ashnur> oh, true
[16:37:23] <xon> can you guys update that code for me. thanks alot!
[16:37:42] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[16:38:07] <ashnur> dunno. don't like being called a guy. i guess technically correct but still
[16:38:26] <ashnur> there is the principle of the thing
[16:38:35] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[16:39:49] <xon> ashnur: thanks for fixing me!
[16:40:10] *** Quits: gggp__ (~gggp@125.33.91.30) (Read error: Connection reset by peer)
[16:40:58] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[16:41:41] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[16:42:42] <entuland> where's the fixed code?
[16:43:41] <xon> entuland: nobody provided the fix code
[16:44:22] <entuland> then why did you thank for the fix?
[16:44:37] <entuland> also, why don't you try and apply what has been suggested?
[16:44:47] <entuland> did you google "reduce" and "flatmap"?
[16:44:54] *** Joins: gggp (~gggp@221.219.75.146)
[16:45:02] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:ad57:cbf9:ee4b:1cc8) (Remote host closed the connection)
[16:45:22] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:6d52:8e54:ebf0:b3f1)
[16:45:35] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[16:45:47] <xon> entuland: I'm newbiew, don't know much. it would be great if anybody give me the fixed code, thanks!
[16:46:11] <entuland> no, it would be great if you took on the responsibility of learning the stuff you're dealing with
[16:46:37] <xon> entuland: that's really helpful
[16:46:52] <entuland> I see the word "invoice" there, you don't want to screw up the finances of your company just because you copypasted code that someone gave you without understanding what the code does and how
[16:47:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:48:26] <xon> entuland: no, that's my code. I have invoices and I want 2d array from it.
[16:48:58] <entuland> doesn't matter if it's your code or your company code or whatever - what's the point of coding if you don't want to learn how to code?
[16:49:17] *** Joins: hmw[at] (~hmw@4in6.metalab.wien.funkfeuer.at)
[16:49:21] <DnzAtWrk> because some people see coding as a means to an end
[16:49:21] <DnzAtWrk> a job
[16:49:28] <DnzAtWrk> not something that is inherently fun
[16:49:56] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:29] <entuland> oh well, it must be that all of my jobs I did for fun regardless of the bits and pieces I was dealing with
[16:50:31] <xon> DnzAtWrk: that's really helpful
[16:51:03] <entuland> xon, seriously, https://developer.mozilla.org/en-US/docs/Web/JavaScript
[16:51:09] <entuland> start from the basics
[16:51:33] <DnzAtWrk> honestly, it kinda pissese me off when I help someone by writing them commented code
[16:51:34] <xon> entuland: really
[16:51:39] <DnzAtWrk> and they don't even take a moment to understand how it works
[16:51:41] <DnzAtWrk> so I stopped doing that
[16:51:49] <DnzAtWrk> pisses*
[16:52:17] <entuland> even ignoring all the niceties of the built in features, you should be able to brute-force mangle any data structure to the shape you need with simple for loops
[16:52:41] <DnzAtWrk> I like brute forcing data structures in python with numpy :)
[16:52:42] <entuland> if you are not able to write such for loops, means you don't know enough javascript to use the niceties
[16:53:24] <xon> I want that code in  functional programming.
[16:53:53] <DnzAtWrk> so I recommend this
[16:53:57] <DnzAtWrk> do you have node installed?
[16:54:07] <xon> go on
[16:54:14] <DnzAtWrk> you open the interpreter
[16:54:17] <DnzAtWrk> and you try things
[16:54:31] <xon> that's really helpgul
[16:54:31] <DnzAtWrk> it's the best way to learn
[16:55:19] <DnzAtWrk> I'm not trying to be a dick
[16:55:27] <DnzAtWrk> it's just a very efficient method to learn things quickly
[16:56:00] <DnzAtWrk> there is a reason everybody uses n> in here
[16:56:14] <ashnur> :) i like xon
[16:56:35] <entuland> yeah, saying "that's really helpful" and completely ignoring the advices
[16:56:55] <DnzAtWrk> you want helpful?
[16:57:03] <DnzAtWrk> map -> transform elements in array to another element
[16:57:04] <DnzAtWrk> there
[16:57:07] <DnzAtWrk> use it
[16:57:09] <ashnur> nah, i think you misunderstood
[16:57:18] <xon> Honestly That's really awesome. I took action on that
[16:57:28] <entuland> we'll see about that :P
[16:57:44] <ashnur> i believe xon fully. seems like the only person on track here :D
[16:58:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Quit: Leaving)
[16:59:43] <xon> You all helped alot. I can't forget it. thank you very much every body !
[17:00:18] <entuland> you're welcome xon - please share your code once you've found a working solution
[17:00:31] <ashnur> closed source
[17:00:33] <ashnur> :D
[17:00:46] <entuland> fix the dummy code you shared and reshare it
[17:00:51] <entuland> that's disclosed already
[17:01:13] <DnzAtWrk> imo, you should never ask anyone for fixing any code here
[17:01:17] <DnzAtWrk> that's not the point at all
[17:01:23] <DnzAtWrk> don't use other people's code all willy nilly
[17:01:47] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 245 seconds)
[17:01:50] <DnzAtWrk> technically, you wouldn't even own the copyright
[17:03:32] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:03:37] <no_gravity> To let a user select multiple items via clicking on them, would you use shift+click or ctrl+click?
[17:03:59] <xon> ctr+click
[17:04:00] <DnzAtWrk> shift is for selecting ranges
[17:04:03] <DnzAtWrk> everything between two
[17:04:14] <no_gravity> I see. So you would use ctrl.
[17:04:30] <DnzAtWrk> sure, if you don't use mobile
[17:04:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[17:05:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:05:21] <no_gravity> DnzAtWrk: When you are on mobile and see a bunch of elements on the screen, how would you expect to select multiple of them?
[17:05:30] *** Quits: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00) (Ping timeout: 240 seconds)
[17:05:38] <DnzAtWrk> hold
[17:05:56] <DnzAtWrk> like on iPhone
[17:06:16] <no_gravity> I see
[17:06:24] <DnzAtWrk> alternatively if they aren't too large, you can put a checkbox on each of them
[17:06:42] <DnzAtWrk> or put a mark option on the page
[17:06:56] <DnzAtWrk> for switching between click and select mode
[17:07:11] <no_gravity> In my application, the data is the interface. So there are no controls like checkboxes.
[17:07:23] <DnzAtWrk> then hold
[17:07:42] <DnzAtWrk> but please put some kind of visual indicator of hold duration
[17:07:54] <DnzAtWrk> like a spinning bar or something
[17:08:05] <DnzAtWrk> maybe a pie that fills in
[17:08:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Client Quit)
[17:08:29] <no_gravity> Strange, currently on my iPad, hold selects the element. Even though it has a "user-select: none" style.
[17:08:47] <no_gravity> In fact holding one item selects all items. Strange.
[17:08:47] <DnzAtWrk> there are already actions taken on hold
[17:08:50] <DnzAtWrk> you need to override them
[17:09:20] <no_gravity> What actions?
[17:09:24] <xon> DnzAtWrk, entuland, ashnur (You're like minded). here is the solution https://jsbin.com/gulanozemo/1/edit?js,console
[17:10:04] <entuland> nice, glad the proposed solution worked, and thanks for sharing your outcome
[17:10:21] <entuland> _that_ is worth any amount of "thanks"
[17:10:58] <DnzAtWrk> if it wasn't clear why you aren't getting arrays
[17:11:08] <xon> Thanks to you. You are god gifted. thanks for your help!
[17:11:08] <DnzAtWrk> it's because you flatMap it
[17:11:10] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[17:11:15] <entuland> cause it proves you listened, researched, tried and tested
[17:12:00] <entuland> well, yes, technically your expected output and your real output do not match, xon
[17:12:20] <entuland> but I guess you'll see for yourself in case some other part of your code breaks due to that
[17:12:35] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[17:12:35] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[17:12:35] *** Joins: Heraes (~Heraes@user/romarain)
[17:12:40] <xon> Alexendoo: You saved my life!
[17:12:44] <ashnur> no_gravity, there is no universal answer for multi select, depends on the circumstances
[17:13:06] <ashnur> sometimes best is to allow type in and autocomplete and stuff
[17:13:11] <ashnur> sometimes it's just checkboxes
[17:13:38] <ashnur> depends how much you hate the people having to use it :D
[17:13:45] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[17:13:49] <no_gravity> ashnur: I am building a mindmapping tool where you move around items on the screen. On desktop, ctrl+click to select multiple seems appropriate.
[17:14:04] <ashnur> absolutely
[17:14:09] <xon> entuland: how, I didn't get it. it is working as expected. can you show me?
[17:14:18] <DnzAtWrk> sometimes it's clicking the icon while at the same time whistling a 2.6 Khz tone into the microphone
[17:14:21] <DnzAtWrk> that's the best kind of select
[17:14:34] <entuland> you expected an array of three arrays with a string inside each of the inner arrays
[17:14:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 240 seconds)
[17:14:40] <entuland> you got an array of three strings
[17:14:43] <entuland> see the difference?
[17:14:58] <ashnur> DnzAtWrk, you joke, but that's not as bad an idea as you think
[17:15:20] <xon> here is the code https://jsbin.com/gulanozemo/edit?js,console
[17:15:29] *** Quits: Heraes (~Heraes@user/romarain) (Client Quit)
[17:15:45] <entuland> xon, _now_ you got the expected output
[17:16:22] <DnzAtWrk> bit a workaround
[17:16:26] <DnzAtWrk> just remove flatMap instead
[17:16:34] <DnzAtWrk> pfff
[17:16:55] <xon> so what to use then, If I removed faltMap
[17:17:16] <entuland> not sure I understand that either
[17:17:35] <DnzAtWrk> ah wait
[17:17:41] <DnzAtWrk> yeah, I see now
[17:17:47] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:17:56] <DnzAtWrk> yeah that wouldn't work
[17:18:05] <DnzAtWrk> anyway, use const bar
[17:18:14] *** Joins: Noustropos (~Noustropo@2a00:f41:2804:1680:927c:bfb5:9534:d4fe)
[17:18:28] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[17:19:31] *** Joins: zakame (~zakame@user/zakame)
[17:20:04] *** Quits: xon (~xon@103.156.50.59) (Remote host closed the connection)
[17:20:57] *** Quits: Xatenev (~xatenev@user/xatenev) (Quit: Leaving.)
[17:22:46] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[17:23:25] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[17:23:50] *** Quits: Safa_[A_Boy]_ (~Safa@89.148.13.249) (Quit: Leaving)
[17:24:45] <kristijonas> is there a way to prevent screenshots (you couldn't screenshot it on mobile phone)?
[17:25:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:25:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:26:23] *** Joins: jmft2 (~JMFT@82.3.54.26)
[17:28:22] <DnzAtWrk> probably something dumb like flashing the screen white on key down
[17:28:48] <DnzAtWrk> or preventDefault on print screen button
[17:29:00] <DnzAtWrk> all that can be worked around by just not selecting the window
[17:29:30] <DnzAtWrk> imagine a website that replaces content on print screen
[17:29:32] <DnzAtWrk> so that it looks legit
[17:29:36] <DnzAtWrk> but is wrong
[17:31:51] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: You have been idle for 30+ days)
[17:31:51] <kristijonas> DnzAtWrk, any prevention would be good, even if it could be bypassed.
[17:31:54] <no_gravity> kristijonas: You could make it so the app only works while a second user films the first user using the app. And have some AI that makes the screen go blank if it detects the first user trying to do the screenshot motion.
[17:32:05] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[17:32:09] <DnzAtWrk> then just prevent default on print screen button
[17:32:12] <DnzAtWrk> maybe the user gives up
[17:32:26] *** Parts: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) ()
[17:32:33] <Alexendoo> I don't think you can do that
[17:32:51] <no_gravity> kristijonas: Or you could strike a deal with Google and Apple so they build a screenshot prevention for you into the OS or the hardware.
[17:33:08] <Alexendoo> It seems like there's only keyup for printscreen
[17:33:17] <DnzAtWrk> force the user to use eye tracking hardware and only show the part they are looking at
[17:33:20] <DnzAtWrk> and blur out the rest
[17:33:35] <no_gravity> Make the website audio only!
[17:33:46] <DnzAtWrk> actually, that's not a bad idea
[17:33:51] <DnzAtWrk> make it painful to screenshot it
[17:33:54] <DnzAtWrk> collapse everything by default
[17:33:59] <DnzAtWrk> for the user to open one thing at a time
[17:34:03] <DnzAtWrk> and close everything else when they do
[17:34:06] <DnzAtWrk> force*
[17:34:44] <kristijonas> the website in question is certificate verification / qr scanner, after the scan, it shows some personal information. It would be great to at least parly prevent those who scan to screenshot the result so they don't mass save these data.
[17:34:58] <entuland> kristijonas, seriously, it's pointless - once something ends up displayed / played on the client end, the cat is out of the bag and there is no way to prevent copying
[17:35:31] <DnzAtWrk> umm
[17:35:32] <entuland> by trying and preventing any of that you're just getting in the way of regular users
[17:35:45] <DnzAtWrk> use canvas to only show one pixel line of the text at once
[17:35:49] <DnzAtWrk> in motion it looks like text
[17:35:53] <DnzAtWrk> screenshotted they are just sparse lines
[17:36:00] <entuland> oh god
[17:36:14] <no_gravity> DnzAtWrk: That might even work with regular text.
[17:36:24] <DnzAtWrk> but not reliably no_gravity
[17:36:28] <DnzAtWrk> you are then at the mercy of CSS
[17:36:54] <DnzAtWrk> you know, this is such an obvious solution that I bet it's patented
[17:36:56] <no_gravity> DnzAtWrk: How do you mean?
[17:37:08] *** Joins: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net)
[17:37:22] <DnzAtWrk> how would you do it with regular text?
[17:37:30] <DnzAtWrk> like, display and hide letters?
[17:37:33] <DnzAtWrk> sure, that would work too
[17:37:45] <DnzAtWrk> but you can't really control the DOM updates are reliably as canvas
[17:37:51] <Alexendoo> How long do patents last? CRTs have been around a while and are basically that
[17:37:53] <no_gravity> DnzAtWrk: Yes. Just have some object with a hole flying over the website.
[17:38:09] <no_gravity> DnzAtWrk: Same system you described but without the need for canvas.ö
[17:38:20] <DnzAtWrk> Alexendoo, patent trolls create new patents for old ideas all the time
[17:38:55] *** Parts: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net) ()
[17:38:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Quit: Leaving)
[17:39:16] <DnzAtWrk> with canvas you also get the benefit of not being able to copy the text alone
[17:39:25] <DnzAtWrk> so you'd literally have to record it as a movie
[17:39:31] <DnzAtWrk> and then interpret the text manually
[17:39:36] <DnzAtWrk> much harder to script a bot for that
[17:39:40] *** Quits: gggp (~gggp@221.219.75.146) (Remote host closed the connection)
[17:40:05] *** Joins: gggp (~gggp@125.33.91.30)
[17:40:21] <DnzAtWrk> not sure about epilepsy tho
[17:44:40] *** Quits: gggp (~gggp@125.33.91.30) (Remote host closed the connection)
[17:45:13] *** Joins: gggp (~gggp@60.10.194.46)
[17:47:40] *** Quits: gggp (~gggp@60.10.194.46) (Remote host closed the connection)
[17:48:31] *** Joins: gggp (~gggp@60.10.194.46)
[17:48:51] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:50:10] <ashnur> people believing that there is a way to control information after it leaves you...
[17:50:23] *** Joins: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[17:50:25] <ashnur> BUT IT IS A THING!!!@
[17:50:59] <DnzAtWrk> it's a question about making it as inconvenient as possible
[17:51:16] <DnzAtWrk> amount of information copied = popularity - inconvenience
[17:52:07] <DnzAtWrk> it's why some websites can get away with using stupid captchas like "what is 2 + 2"
[17:52:16] <DnzAtWrk> while others have you judging fire hydrants for 15 minutes
[17:53:34] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd) (Quit: Leaving)
[17:54:47] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:3ee3:216d:a66:5710)
[17:56:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:56:20] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:3ee3:216d:a66:5710) (Remote host closed the connection)
[17:56:43] <entuland> wasn't that thing about spotting cars / signs or the alike a way for big companies to provide sample data to machine learning / AIs? haahahhaha
[17:57:20] <entuland> "we need somewhat reliable sample data with proper tagging" - "let's use the internet monkeys"
[17:57:30] *** sandcat is now known as jess
[17:57:47] <DnzAtWrk> pff
[17:57:54] <DnzAtWrk> I bet it's like a pet project
[17:57:58] <DnzAtWrk> which nobody cares about
[17:58:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[18:02:12] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[18:03:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Remote host closed the connection)
[18:06:25] *** Quits: Noustropos (~Noustropo@2a00:f41:2804:1680:927c:bfb5:9534:d4fe) (Ping timeout: 258 seconds)
[18:14:00] *** Quits: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl) (Quit: Client closed)
[18:16:03] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:23:13] *** Joins: xse_ (~xse@user/xse)
[18:23:40] *** Quits: hans (~hans@ti0099a430-0997.bb.online.no) (Ping timeout: 258 seconds)
[18:24:39] *** Joins: dimi1947 (~dimi1947@2a02:1388:208e:6bc6:cdf7:126a:fdba:d48c)
[18:26:17] *** Quits: debayer (~debayer@2603-8000-cf00-0010-6ddf-aaca-888c-a18e.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:26:18] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[18:28:51] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[18:32:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:34:40] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:35:06] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[18:35:39] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[18:35:48] *** Joins: hans (~hans@77.16.71.92.tmi.telenormobil.no)
[18:35:53] *** Quits: dimi1947 (~dimi1947@2a02:1388:208e:6bc6:cdf7:126a:fdba:d48c) (Quit: Leaving)
[18:44:26] *** Joins: rokshis_ (~rokshis@88.223.111.67)
[18:45:02] <gggp> does browser use commonjs to deal with modules dep
[18:47:12] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[18:49:00] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:7802:faf8:53d5:9a78)
[18:49:15] *** Quits: hans (~hans@77.16.71.92.tmi.telenormobil.no) (Remote host closed the connection)
[18:49:31] *** Joins: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c)
[18:52:07] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[18:54:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:55:06] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 258 seconds)
[18:57:23] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b518:93d9:d38f:6cf9)
[18:59:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:01:11] *** Joins: carlino3 (~carlino3@user/carlino3)
[19:01:13] <carlino3> hello
[19:02:27] *** Joins: gggp_ (~gggp@60.10.194.46)
[19:03:16] <hans> gggp, no, browser use Vanilla-JS - http://vanilla-js.com/
[19:03:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:03:37] <cis> gggp: browsers use the ES modules spec
[19:04:09] <cis> gggp: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
[19:05:46] <cis> gggp: but, your project may use other module systems along with a build step that generates one or more javascript bundles which the browser can handle
[19:05:50] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:09:40] *** Quits: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c) (Ping timeout: 258 seconds)
[19:17:24] <entuland> ahahahah for a moment I thought someone created some stupid library and named it vanilla-js ahahahah, I forgot about that website
[19:18:45] <systemfault> It's a dumb website, I hate it
[19:18:54] <cis> entuland: it's brendan eich's stupid library ;)
[19:19:16] <entuland> hehehhe
[19:19:33] <entuland> systemfault, that's okay, humor is matter of tastes
[19:20:15] <systemfault> entuland: People trying to understand the JS ecosystem (The target demographic of that site, I believe) wouldn't get that humor.
[19:20:30] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[19:21:01] <systemfault> It doesn't provide any nuance either... "Use VanillaJS because it's fast!!!11"
[19:21:44] <entuland> sure, but at least that's not going to give them anything they can use and they may ask around "hey, why this vanilla-js library download is empty?" and they would then learn interacting with others
[19:22:17] *** Joins: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c)
[19:22:51] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:23:02] <no_gravity> Is there a quick test if an element is inside another element?
[19:23:43] *** Joins: gggp (~gggp@60.10.194.46)
[19:23:54] <entuland> no_gravity using element references or selectors?
[19:24:11] <no_gravity> entuland: I would say element references.
[19:24:43] <entuland> then you'd probably need to recursively go through .parentNode from the child until you either hit the parent or you reach the document root
[19:24:51] <entuland> just make yourself a small helper function
[19:24:53] <Alexendoo> https://developer.mozilla.org/en-US/docs/Web/API/Node/contains
[19:24:55] <no_gravity> entuland: How about if a.contains(b) ?
[19:24:57] <cis> there's node.contains() if you want a DOM check
[19:25:00] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:25:06] <entuland> ah nice, didn't know about that
[19:25:06] <cis> https://developer.mozilla.org/en-US/docs/Web/API/Node/contains
[19:25:12] <no_gravity> Alexendoo, cis: Yeah, looking at that now. Thanks!
[19:25:42] <entuland> I still have a lot of old vanilla practices in mind :P
[19:25:45] <no_gravity> Hurray, it works nicely :)
[19:25:57] <no_gravity> entuland: Yeah, I wrote such a helper many years ago.
[19:26:05] <no_gravity> JS and the DOM have come such a long way.
[19:26:09] <entuland> aye
[19:26:20] <DnzAtWrk> pff, not as far as flash
[19:26:23] <DnzAtWrk> where is all the porn?
[19:26:52] <entuland> quite positive I've created my own $() before jquery was born
[19:26:55] <cis> flash is dead, rip
[19:28:04] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:28:23] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[19:28:33] *** Joins: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl)
[19:28:55] <systemfault> entuland: I'd be surprised.
[19:29:03] <entuland> why?
[19:29:18] <systemfault> entuland: Because it them who created the whole idea of Selector API
[19:29:24] <entuland> nah
[19:29:30] <systemfault> There's no "nah"
[19:29:54] <entuland> well, it's not like I've made $() to do the same stuff of jQuery
[19:30:13] <entuland> back then it was common to just use it a wrapper for getElementById or something
[19:30:31] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Client Quit)
[19:30:31] <DnzAtWrk> querySelector always just felt like it was taken from css if anything
[19:30:31] <systemfault> Just saying here that "sizzle" itself (The JS-based selector engine) was one of the big ideas of jQuery
[19:30:54] <entuland> I've definitely messed with such stuff around 2000 something
[19:31:24] *** Joins: summersault (~summersau@179.221.251.16)
[19:31:42] <entuland> my "nah" wasn't about them creating the idea of the selector api, it was "nah, that's not what I refer to"
[19:34:04] *** Quits: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl) (Quit: Client closed)
[19:34:44] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[19:35:30] *** Joins: pycode (~pycode@2001:b07:5d28:551:7823:60a9:935a:5d3b)
[19:35:56] <pycode> hello what is the best(fast) way to read a json from a <script id="foo" type="application/json"> ... </script>
[19:35:57] <pycode> ?
[19:36:04] <pycode> it is basically an array i need to loop over it
[19:37:15] <pycode> if i use JSON.parse(document.getElementById('my_id').textContent);
[19:37:26] <pycode> is working but maybe i should not parse it because it is already json
[19:37:27] <pycode> idk
[19:37:31] <entuland> it's a bit weird to have a JSON string hardcoded in the body of a script tag
[19:37:45] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b518:93d9:d38f:6cf9) (Quit: Leaving)
[19:38:23] <cis> pycode: I was just about to suggest that method
[19:39:36] <pycode> entuland, why? should i put it in a different way?
[19:39:46] <entuland> pycode, "parse" means "convert JSON into actual useable data structures" - JSON is always text
[19:39:50] <pycode> i found https://docs.djangoproject.com/en/3.2/ref/templates/builtins/#json-script
[19:39:53] <pycode> i am using django
[19:40:00] <pycode> they say to use textCOntent
[19:40:13] <entuland> can't say, I prefer to have JSON in JSON files
[19:40:26] <pycode> entuland, but i think it is a similar problem no?
[19:40:34] <pycode> i mean.. you need to parse it too
[19:40:34] <pycode> right ?
[19:40:37] <entuland> yes
[19:40:42] <entuland> either directly or indirectly
[19:40:51] <entuland> you always need to parse JSON
[19:41:05] <pycode> ok
[19:41:26] <pycode> my problem is that i have a big very big json that i need to build charts and other statistics
[19:41:35] <pycode> they size is around 8MB
[19:41:38] <pycode> ok i can use gzip
[19:41:49] <pycode> i can create an endpoint that returns that json, sure
[19:41:59] <pycode> but .parse need to load 8MB of data
[19:42:03] <pycode> and it seems heavy
[19:42:08] <pycode> (sounds heavy i suppose)
[19:42:19] <pycode> after gzip compression is 280kb) so it is not a big problem
[19:42:21] *** Quits: hygl (uid16621@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:42:24] <pycode> but parsing seems yes
[19:43:05] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[19:43:22] <entuland> right now I'm working with modules without any libraries so I simply put the json in a js file prepending it with export const and importing it where I need it
[19:44:08] <entuland> (whenever I have the JSON data already, otherwise I fetch it)
[19:44:45] *** Joins: Rockwood (~Rocky@user/rocky)
[19:45:28] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Read error: Connection reset by peer)
[19:45:48] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[19:46:37] <pycode> entuland, yes makes sense to put json into a js i am not saying it is wrong, i only trying to find a way to do charts and analytics with big data
[19:46:54] <pycode> or maybe i need to pre-aggregate data on server avoiding that jon on frontend side
[19:46:58] <entuland> those are two unrelated things
[19:46:59] <pycode> jon/job
[19:47:19] <entuland> the way you get the data and how you mangle it are different steps
[19:48:04] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[19:48:05] <DnzAtWrk> in general, js in browsers do not handle "big data"
[19:48:29] <entuland> if there is anything you can do server side to reduce the client heavy load, you may consider it, yes
[19:48:34] <DnzAtWrk> yes
[19:48:36] <DnzAtWrk> pre-plot the data
[19:48:40] <DnzAtWrk> create the graphs whatever you want
[19:48:42] <DnzAtWrk> send that
[19:48:42] <pycode> DnzAtWrk, i need to create a kind of financial report so i need to load historical prices, create charts and then analyze profit/loss etc
[19:49:01] <pycode> DnzAtWrk, what do you mean with pre.plot?
[19:49:06] <pycode> create that chart on server side ?
[19:49:12] <pycode> and then just return a svg ?
[19:49:18] <DnzAtWrk> if it's "big data", yes
[19:49:28] <DnzAtWrk> but what kind of financial report is "big data"
[19:49:47] <entuland> it depends both on the size of the data and the level of interactivity you need on the client side
[19:50:05] <entuland> you could aggregate and compute the chart values on the server side, server only the chart data and plot it client side
[19:50:11] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[19:50:20] <entuland> s/server only/serve only/
[19:50:26] <pycode> DnzAtWrk, there is no interactivity  i mean just the chart (scrolling) the other things are just values
[19:50:47] <DnzAtWrk> aggregate the data
[19:50:52] <DnzAtWrk> send that in a json reply from a REST API
[19:50:54] <pycode> for example i need to analyze the APPL stock for the last 5 years working on 5 minutes timeframe
[19:50:57] <DnzAtWrk> I've done it that way
[19:51:01] <entuland> then serve only the data that is necessary for your client side charting library to render that specific graph
[19:51:01] <DnzAtWrk> aggregated months of temperature data
[19:51:04] <DnzAtWrk> in a plot
[19:51:11] <DnzAtWrk> 5 minute temperature data
[19:51:45] <pycode> 5 minutes for 5 years are around 273600 points
[19:51:53] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:52:13] <DnzAtWrk> SELECT MEAN(temperature) FROM blah blah blah
[19:52:14] <pycode> 288/day *5 days of week *4 weeks of month * 12 months *5 years
[19:52:18] <DnzAtWrk> group by month
[19:52:19] <entuland> do you need to let the user hover on the points to read the values? or you just need the curve?
[19:52:20] <DnzAtWrk> etc.
[19:52:28] <DnzAtWrk> if possible, use a proper database for your data
[19:52:33] <pycode> the problem is that i need to show the historical prices
[19:52:41] <pycode> like a stock charts with candles
[19:52:49] <DnzAtWrk> candles are just statistics
[19:52:53] <pycode> so each candle is 5 minutes
[19:52:56] <DnzAtWrk> max min mean close open
[19:53:00] <pycode> open high low close
[19:53:06] <pycode> yes
[19:53:08] *** Joins: zebrag (~chris@user/zebrag)
[19:53:08] <DnzAtWrk> a database can easily spit that out
[19:53:26] <pycode> i have that data but sending 270k points via rest api to plot the charts seems heavy too :D
[19:53:30] *** Quits: Deneb (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[19:53:35] <pycode> (just talking about the prices now)
[19:53:35] <DnzAtWrk> how many candles do you have?
[19:53:56] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[19:54:17] <ljharb> pycode: a human can't perceive 270k data points at one time, so there shouldn't be any need to do that
[19:54:30] <DnzAtWrk> https://stackoverflow.com/questions/49583955/mysql-select-query-for-candle-stick-market-data
[19:55:44] <pycode> ljharb, so you are saying that i need to do all the statistics server side via sql....and then to plot the chart..create a rest api that return small chunks of data each time ?
[19:56:00] <pycode> DnzAtWrk, i have 270 candles in this case
[19:56:05] <pycode> 270k ~
[19:56:08] <DnzAtWrk> so that's 270 points * 4
[19:56:15] <DnzAtWrk> pff
[19:56:19] <ljharb> pycode: yes
[19:56:23] <DnzAtWrk> then you need to just do what I said, make an API for it
[19:56:26] <DnzAtWrk> send the ones currently in view
[19:56:37] <pycode> ok
[19:56:39] <ljharb> pycode: the client is always more important than the server, and the server should bend over backwards to have the client do as little work as possible
[19:56:47] <pycode> so for example 500 candles and then call that api to load more
[19:56:58] <pycode> ljharb, ok
[19:57:05] <DnzAtWrk> you can aggregate bigger candles when you zoom out
[19:57:06] <DnzAtWrk> sure
[19:57:12] <DnzAtWrk> request a view of some kind
[19:57:15] *** Quits: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c) (Remote host closed the connection)
[19:57:17] <pycode> ok ok
[19:57:23] <pycode> i will do the heavy job on server
[19:57:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:1c36:6595:8d11:51d6) (Ping timeout: 272 seconds)
[19:57:31] *** Joins: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c)
[19:57:32] <pycode> and for plotting just small chunks
[19:57:32] <DnzAtWrk> it's the database that does the heavy lifting
[19:57:35] <pycode> ok
[19:58:12] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Client Quit)
[19:58:25] *** Quits: rokshis_ (~rokshis@88.223.111.67) (Quit: Leaving)
[19:58:34] <pycode> i am going to re-think the work thank you
[20:03:26] *** Joins: Celeo (~Celeo@user/celeo)
[20:06:09] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:07:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:7823:60a9:935a:5d3b) (Ping timeout: 258 seconds)
[20:07:33] *** Quits: hans (~hans@2a02:2121:301:4af:99cf:d78c:67ec:561c) (Ping timeout: 258 seconds)
[20:10:52] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[20:11:43] *** Joins: greta (uid510567@id-510567.tinside.irccloud.com)
[20:15:20] *** Joins: bobdobbs` (~user@150.107.174.237)
[20:16:30] <sheetjs> yay sheetjs is #2 github trending today, not really sure why
[20:16:41] <sheetjs> wroathe: there may be another few internet points in the budget :D
[20:17:08] *** Quits: bobdobbs (~user@2406:5a00:f001:c600:94cb:648a:8fe2:d5ff) (Ping timeout: 258 seconds)
[20:18:05] <DnzAtWrk> you shouldn't need to find a spreadsheet file to demo it
[20:18:09] <DnzAtWrk> open a default file
[20:18:43] <sheetjs> yeah probably, like an XHR or fetch
[20:19:08] <sheetjs> most of the demos link to https://obamawhitehouse.archives.gov/sites/default/files/omb/budget/fy2014/assets/receipts.xls
[20:19:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:19:57] *** Joins: zebrag (~chris@user/zebrag)
[20:20:46] <sheetjs> oh https://oss.sheetjs.com/sheetjs/ajax.html is an IE6-friendly ajax demo
[20:25:26] *** Joins: teut (~teut@182.69.87.27)
[20:25:50] <teut> if (!(name in newState))       doesn't this mean name not in newState?
[20:26:04] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:26:10] <sheetjs> what is newState
[20:26:16] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:26:21] <ashnur> state + effects
[20:26:34] <teut> whatever it be, it shouldnt matter
[20:26:44] <ashnur> it's the singularity then
[20:26:59] <teut> ??
[20:27:00] <ashnur> i love it when when people go brave and break down boundaries
[20:27:04] <sheetjs> if newState is a plain JS object, then the test is whether name is a key
[20:27:35] <teut> newState can be an Object, or an Array
[20:27:43] <sheetjs> n> var name = "abc", newState = { abc: 123 }; (name in newState)
[20:27:43] <jellobot> (okay) true
[20:28:11] <ljharb> teut: don't use `in` with arrays
[20:28:18] <teut> then what?
[20:29:03] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[20:31:36] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[20:34:21] *** Joins: codebam (~codebam@user/codebam)
[20:35:03] <ljharb> teut: explain what you're doing? why would you have a state that could be both an object or an array, rather than always just one of them?
[20:35:16] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:35:23] <teut> I have to save the form data
[20:35:43] <teut> I dont know , just I want end this garbage project
[20:35:49] <teut> I want to*
[20:36:08] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 272 seconds)
[20:36:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[20:36:56] <shan> is `thing = a || b || c;` ok
[20:37:04] <shan> if i want to have a fallback for my fallback
[20:37:13] <GreenJello> yeah
[20:37:55] <shan> not bad practice or something right
[20:37:56] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:38:02] <shan> also, GreenJello, do i know you from another channel
[20:38:44] <ljharb> teut: form data should always be the same kind of thing
[20:38:59] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[20:38:59] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:39:09] <teut> yes but here it would be a nested Object
[20:39:30] <ljharb> teut: ok so because it's nested, you can't simply use `in` anyways
[20:39:37] <ljharb> teut: what are you trying to figure out
[20:40:26] <teut> Uploaded file: https://uploads.kiwiirc.com/files/2683984846b37e71b9d3a9611cbebb69/image.png
[20:40:51] <teut> I ve this kind of form and if I switch tabs then I lose all on previous tab
[20:42:52] *** Joins: Axy (~Axy@user/axy)
[20:43:01] <celphi> is this possible without using websockets? client -> api#1 -> api#2 ->api#2response -> api#1response -> client
[20:43:52] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[20:43:53] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[20:43:55] <celphi> where api#1 can forward request to api#2 and wait for reply from api#2 before replying back to client
[20:47:17] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[20:48:25] <GreenJello> seems trivial unless I'm missing something
[20:53:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:55:40] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 246 seconds)
[20:55:48] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 252 seconds)
[20:57:21] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:00:18] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[21:06:01] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[21:06:22] *** Quits: greta (uid510567@id-510567.tinside.irccloud.com) ()
[21:10:37] *** Rockwood_ is now known as Rockwood
[21:11:16] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:c578:89c3:1fce:4302)
[21:12:05] *** Quits: Zal (~Isthmus@user/isveni) (Quit: leaving)
[21:12:17] *** Joins: Isthmusi (~Isthmus@user/isveni)
[21:12:18] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[21:16:29] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[21:17:19] *** Quits: l__q (~modinfo@dynamic-002-247-254-242.2.247.pool.telefonica.de) (Ping timeout: 258 seconds)
[21:19:29] <wroathe> win 8
[21:21:20] *** Joins: Deneb^ (~johnch@93.125.7.51.dyn.plus.net)
[21:22:45] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:23:19] *** Joins: kapil (~kapil@o-k.website)
[21:23:51] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[21:24:45] <Rockwood> sheoops
[21:24:50] <Rockwood> oops
[21:25:06] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[21:26:14] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:27:31] *** Joins: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[21:29:08] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:29:21] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[21:31:53] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[21:32:36] *** Joins: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:32:47] <AJTJ> I made it
[21:32:52] <AJTJ> why did we move to libera?
[21:32:55] <AJTJ> is better here?
[21:33:13] <sheetjs> some drama involving freenode, end of discussion
[21:33:24] <AJTJ> Ooooo
[21:33:26] <AJTJ> there's tea
[21:34:19] <AJTJ> freenode was bought
[21:34:21] <AJTJ> interesting
[21:34:35] <sheetjs> it was bought a while ago, the owners recently decided to assert control
[21:36:09] <AJTJ> fascinating
[21:36:15] <AJTJ> bought by the "crown prince" of Korea
[21:36:36] <AJTJ> whatever, long live libera
[21:37:31] <Rockwood> :D
[21:38:04] *** Quits: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:38:07] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:38:09] *** Joins: AJTJ_ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:38:20] <systemfault> Until it gets hijacked by some crazy guy in a few years.. then we'll move to something else
[21:38:45] <systemfault> Lilo must be turning in his grave...
[21:38:57] <AJTJ_> I mean, eventually someone will sell this one too
[21:39:06] <Rockwood> when :D
[21:39:08] <AJTJ_> and then the only thing that makes it valuable... us... will leave
[21:39:12] <AJTJ_> haha
[21:39:15] <Byteflux> Unlikely under the current governance structure. It would help to read the bylaws
[21:39:17] <GreenJello> no, it's setup differently
[21:39:23] <AJTJ_> oh good
[21:39:26] <sheetjs> github is the ultimate example
[21:39:32] <AJTJ_> how so
[21:39:33] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[21:39:41] <AJTJ_> how is github an example
[21:40:00] <sheetjs> gather a community of open source developers under a proprietary system, sell out to microsoft, abuse the agreements between github and developers to launder open source code
[21:40:08] <sheetjs> and sell it as a service, presto $$
[21:40:11] <AJTJ_> precisely
[21:40:16] <Byteflux> Freenode concentrated assets/power to one person. Libera runs as a non-profit with a proper governance structure and power distributed across many members. Completely different situations.
[21:40:17] <AJTJ_> github autopilot
[21:40:20] <sheetjs> wanstrath and the other github billionaires laughing their way to the bank
[21:40:29] <AJTJ_> do you guys use github autopilot?
[21:40:49] <systemfault> I don't believe it's called that way...
[21:40:55] <systemfault> But AFAIK, it's in beta
[21:40:59] <AJTJ_> oh copilot
[21:41:01] <AJTJ_> I use it
[21:41:03] <AJTJ_> I have it on
[21:41:14] <AJTJ_> its surprisingly good and annoying at the same time
[21:41:38] <Lyn> they should've called React as Heact when they added hooks, to separate old guides with class components from the new ones with hooks
[21:41:39] *** Joins: mattil (~mattilinn@87-92-57-75.bb.dnainternet.fi)
[21:41:53] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[21:42:21] *** Quits: AJTJ_ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:42:27] *** Joins: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:42:30] <AJTJ> they should have just used hooks from the beginning
[21:42:38] <Lyn> even better idea right there
[21:42:55] <AJTJ> class components were always an abstraction over hooks anyways
[21:44:51] *** Quits: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:45:16] *** Joins: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:45:26] <AJTJ> I need a better irc client
[21:45:27] <GreenJello> that's not true
[21:46:51] *** Quits: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:46:56] *** Joins: AJTJ_ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:47:53] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[21:47:54] *** Quits: AJTJ_ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:48:05] <farn> React hooks simply didn't exist before 2018
[21:48:09] <no_gravity> Funny, the variable "content" seems to have some magic properties in browsers.
[21:48:23] *** Joins: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:48:27] *** Quits: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:48:37] <GreenJello> based on what?
[21:48:58] *** Joins: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net)
[21:49:51] <no_gravity> In a module, I can do "content = 123" even though content is not defined.
[21:50:24] <GreenJello> and it doesn't work with a different variable name?
[21:50:24] *** Quits: AJTJ (~AJTJ@d207-189-236-135.yt.northwestel.net) (Read error: Connection reset by peer)
[21:50:37] <GreenJello> then some other code has defined a 'content' global
[21:50:47] <no_gravity> No, I get a "assignment to undeclared variable" then.
[21:50:47] <GreenJello> but doesn't seem to be defined by the browser
[21:51:17] *** Joins: l__q (~modinfo@user/modinfo)
[21:51:56] <no_gravity> Hmm.. maybe it is different.
[21:52:11] <no_gravity> https://jsfiddle.net/7fehgurk/
[21:52:20] <no_gravity> I didn't know modules by default access the window scope.
[21:52:38] <no_gravity> I would have thought you need to specify "window.content" inside a module.
[21:53:03] *** Joins: steltenpower (~steltenpo@a83-162-199-132.adsl.xs4all.nl)
[21:54:01] <l__q> hmm, upload images from client to cloudinary or upload images first to nodejs per websocket and then from server to cloudinary?
[21:54:23] <no_gravity> So even within a function within a module, "a=1" means something different depending on weather window.a is defined.
[21:56:14] <GreenJello> probably not uploading images over a websocket. That sounds quite strange
[21:56:56] <GreenJello> I guess it could work, but wouldn't be super efficient, and you'd have to set the max message size quite large
[21:57:24] <farn> no_gravity: if you couldn't access properties of window in a module, wouldn't that mean that you couldn't access things like setTimeout or alert?
[21:57:45] <farn> and possibly not even Math or Array, but I'm rusty on the nuances of global properties and global variables
[21:57:45] <no_gravity> farn: You could still access them via window.variableName
[21:58:07] *** Joins: Betal (~Betal@user/betal)
[21:58:07] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Read error: Connection reset by peer)
[21:58:14] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[21:58:38] *** Quits: Deneb^ (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[21:58:51] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[21:58:52] <farn> no_gravity: sure. that is not the case though
[21:59:32] <buu> n> (new Error("foo")).match(/foo/)
[21:59:32] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Read error: Connection reset by peer)
[21:59:33] <jellobot> (fail) TypeError: (intermediate value).match is not a function
[21:59:35] <CuriousErnestBro> is JS getting guard anytime soon?
[21:59:38] <buu> YOU ARE THE DEVIL
[21:59:50] <CuriousErnestBro> guard let x = something() else { return; }
[22:00:13] <buu> CuriousErnestBro: how is that different from ||
[22:00:40] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[22:01:01] <farn> would that do pattern matching?
[22:01:25] <CuriousErnestBro> it's not but if you want a function you have to use || (() => {...})()
[22:01:36] <GreenJello> the 'do expressions' proposal is what you want there
[22:01:38] <CuriousErnestBro> right?
[22:02:05] *** Joins: greta (uid510567@id-510567.tinside.irccloud.com)
[22:02:10] <sheetjs> buu: you need .message
[22:02:13] <GreenJello> but it's unclear when it'll be added to the language, if ever
[22:02:15] *** Joins: cahoots (~cahoots@163.182.128.74)
[22:03:04] <CuriousErnestBro> ok, back to using (() => {...})() I guess..
[22:03:16] <cahoots> hi, i'm making a web extension for reddit. to work correctly, it uses a MutationObserver with the whole document, and in the callback it runs a .querySelector. could this potentially cause performance problems?
[22:03:27] <GreenJello> that doesn't let you return from the function
[22:03:35] <GreenJello> which is presumably what you wanted
[22:03:54] <buu> sheetjs: this is all incredibly obnoxious
[22:04:03] <sheetjs> n> ["foo", new Error("foo")].map(k => { try { throw k; } catch(e) { (e.message || String(e)).match(/foo/); } });
[22:04:03] <jellobot> (okay) [ undefined, undefined ]
[22:04:17] <sheetjs> n> ["foo", new Error("foo")].map(k => { try { throw k; } catch(e) { return (e.message || String(e)).match(/foo/); } });
[22:04:17] <jellobot> (okay) [ [ 'foo', index: 0, input: 'foo', groups: undefined ], [ 'foo', index: 0, input: 'foo', groups: undefined ] ]
[22:04:21] <sheetjs> there we go
[22:04:32] <sheetjs> it gets more obnoxious when you realize that strings can be thrown
[22:04:48] <GreenJello> cahoots, querySelector isn't especially expensive, but try it and see
[22:05:09] <cahoots> GreenJello, i just wonder if people not running on a high-end desktop like myself may have issues
[22:05:11] <GreenJello> you might need to throttle your updates if the mutation observer is triggered too many times
[22:05:13] <seed0> particularly
[22:05:21] <sheetjs> if you still need ES3+ support
[22:05:52] <GreenJello> cahoots, you can have chrome simulate a slower processor, but not sure if it applies to extensions
[22:06:24] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/xlsx.flow.js#L2798 so apparently there's a frontend library called jQuery which defines $
[22:06:41] <sheetjs> extendscript (photoshop) uses $ as well
[22:06:44] <buu> sheetjs: Yes, that does not improve my life
[22:07:21] <no_gravity> I use this everywhere: const dcs  = document.querySelector.bind(document);
[22:07:38] <buu> b> "foo".bar
[22:07:38] <jellobot> (okay) undefined
[22:07:41] <sheetjs> very few things in the javascript space improve our lives
[22:07:53] <buu> What's the difference between String(x) and x.toString()
[22:08:00] <buu> numbers?
[22:08:07] <buu> n> 1.toString()
[22:08:08] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[22:08:12] <sheetjs> n> String(null)
[22:08:13] <jellobot> (okay) 'null'
[22:08:20] <sheetjs> n> null.toString()
[22:08:20] <jellobot> (fail) TypeError: Cannot read property 'toString' of null
[22:08:26] <buu> ok
[22:08:30] <buu> Exceptions were a mistake
[22:08:37] <sheetjs> for numbers
[22:08:40] <no_gravity> buu: x.toString() calls the function toString of the object x. So what it does completely depends on what object x is.
[22:08:40] <sheetjs> n> 0..toString()
[22:08:41] <jellobot> (okay) '0'
[22:08:42] <l__q> n> typeof null
[22:08:43] <jellobot> (okay) 'object'
[22:08:54] <sheetjs> you need 2 dots, the first one is interpreted as the decimal
[22:09:00] <buu> sheetjs: that hurts me
[22:09:06] <sheetjs> 0..toString() is parsed like (0.).toString()
[22:09:06] <farn> n> (0).toString()
[22:09:06] <jellobot> (okay) '0'
[22:09:10] *** Quits: IceMichael (~IceMichae@dynamic-046-114-157-153.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:09:14] <buu> How the hell is 0. a legal number
[22:09:24] <sheetjs> how is it not?
[22:09:31] <buu> Because there's nothing in the 10th's place
[22:09:34] <sheetjs> there's no requirement for digits after the decimal place
[22:09:37] <buu> THERE SHOULD BE
[22:09:49] <sheetjs> for the same reason .0 is a number
[22:09:49] <no_gravity> n> x={toString: ()=>'Elvis Presley'}; x.toString()
[22:09:50] <jellobot> (okay) 'Elvis Presley'
[22:09:53] <buu> This is madness
[22:09:55] <sheetjs> n> .0
[22:09:56] <jellobot> (okay) 0
[22:09:56] <l__q> and null is a object
[22:10:00] <sheetjs> buu: embrace the badness
[22:10:02] <l__q> n> typeof null
[22:10:03] <jellobot> (okay) 'object'
[22:10:08] <GreenJello> buu, it's common in other languages
[22:10:11] <l__q> why?
[22:10:13] <buu> n> x={toString: ()=>'Elvis Presley'}; String(x)
[22:10:14] <jellobot> (okay) 'Elvis Presley'
[22:10:20] <GreenJello> but usually because they have both integers and floats
[22:10:21] <buu> GreenJello: name 5
[22:10:26] <buu> =[
[22:11:31] <GreenJello> I think it's valid in C, C++, C#, Java, Rust
[22:11:40] <GreenJello> not 100% sure
[22:11:40] <farn> Python, Lua
[22:12:08] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Ping timeout: 258 seconds)
[22:12:20] <buu> I am disgusted
[22:12:24] <buu> And offended
[22:12:32] <farn> Go
[22:12:44] <buu> Nooooooo
[22:13:01] *** Joins: cloudbender29 (~cloudbend@user/cloudbender)
[22:13:02] *** Joins: Atum__ (~IRC@user/atum/x-2392232)
[22:13:07] <sheetjs> have a copy of K&R on my desk
[22:13:09] *** Quits: cloudbender29 (~cloudbend@user/cloudbender) (Client Quit)
[22:13:15] <buu> I really need to write my blog about why exceptions are dumb
[22:13:33] <sheetjs> "Either the integer part or the fraction part (not both) may be missing; either the decimal point or the e and the exponent (but not both) may be missing"
[22:13:43] <no_gravity> n> String=()=>17; x={toString: ()=>'Elvis Presley'}; [x.toString(), String(x)]
[22:13:43] <jellobot> (okay) [ 'Elvis Presley', 17 ]
[22:13:45] <sheetjs> that's section A2.5.3 "Floating Constants"
[22:13:48] *** Joins: cloudbender13 (~cloudbend@user/cloudbender)
[22:14:12] <sheetjs> if the decimal and the e/exponent part are missing, it would be an integer constant
[22:14:12] *** Quits: cloudbender13 (~cloudbend@user/cloudbender) (Client Quit)
[22:14:12] <buu> no_gravity: lol
[22:14:36] <buu> n> null.toString
[22:14:36] <jellobot> (fail) TypeError: Cannot read property 'toString' of null
[22:14:49] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 258 seconds)
[22:14:53] <buu> So can you check for toString without try{} ?
[22:15:04] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Ping timeout: 268 seconds)
[22:15:10] <farn> n> "toString" in null
[22:15:10] <jellobot> (fail) TypeError: Cannot use 'in' operator to search for 'toString' in null
[22:15:14] <buu> lol
[22:15:14] <sheetjs> n> x = { toString: () => "Elvis Presley", valueOf: () => 17 }; [x.toString(), String(+x)]
[22:15:15] <jellobot> (okay) [ 'Elvis Presley', '17' ]
[22:15:19] <GreenJello> n> null?.toString
[22:15:20] <jellobot> (okay) undefined
[22:15:22] <no_gravity> n> String(null)
[22:15:23] <jellobot> (okay) 'null'
[22:15:25] <GreenJello> n> null && null.toString
[22:15:25] <jellobot> (okay) null
[22:15:37] <l__q> Is JavaScript opensource? Can I download source of JS?
[22:15:40] <sheetjs> n> 0 && 0..toString()
[22:15:40] <buu> NO
[22:15:41] <jellobot> (okay) 0
[22:15:49] <buu> n>let x = 1; x.toString
[22:15:50] <jellobot> (okay) [Function: toString]
[22:15:54] <buu> huh
[22:15:59] <GreenJello> l__q, there are multiple implementations, with v8 being the most popular
[22:16:03] <buu> I didn't think numbers had methods
[22:16:14] <GreenJello> you can get v8's source code
[22:16:26] <buu> l__q: This is a bad idea
[22:16:29] <buu> Run away now
[22:16:38] <l__q> Buu: Why?
[22:17:22] <sheetjs> n> Number.prototype.toString = () => 3; let x = 1; x.toString()
[22:17:23] <jellobot> (okay) 3
[22:17:28] <buu> l__q: Read the previous page of conversation
[22:17:43] <buu> sheetjs: Did that change at some point in the last 5 years
[22:17:56] <sheetjs> nah its always been like that
[22:18:02] <wroathe> l__q: Javascript itself is a language, and a specification. There are implementations of that language that are open source, but an implementation isn't necessarily required to be open source
[22:18:03] <buu> well shit
[22:18:14] <wroathe> l__q: Commonly used JS implementations are open source though
[22:18:22] <Alexendoo> You may be thinking of the primitives in java buu
[22:18:23] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 250 seconds)
[22:18:28] <sheetjs> ECMASports presents nontraditional numeromancy
[22:18:32] <l__q> wroathe: thanks!
[22:18:44] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[22:18:57] *** Joins: Noustropos (~Noustropo@2a00:f41:2804:1680:4b9a:8bde:a1cc:2c76)
[22:19:21] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:20:03] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[22:20:09] <buu> Alexendoo: I guess so
[22:20:41] <farn> you could say that numbers do not technically have properties but when you try to access such a property, the number will be wrapped in an object automatically
[22:20:53] <farn> I don't know whether that's accurate but you could certainly say it
[22:21:07] <optimant> it's not a terrible thing to be saying
[22:21:28] <sheetjs> n> Number.prototype.isanumber = "no"; (1).isanumber
[22:21:28] <jellobot> (okay) 'no'
[22:22:54] *** Joins: FabioP (~fabio@151.31.77.84)
[22:22:56] <farn> n> Number.prototype.getThis = function() { return this }; (3).getThis()
[22:22:57] <jellobot> (okay) [Number: 3]
[22:23:01] <farn> n> Number.prototype.getThis = function() { return this }; (3).getThis() === 3
[22:23:02] <jellobot> (okay) false
[22:23:03] <GreenJello> farn, accurate if the method isn't defined in strict mode, and methods from the spec are written to assume autoboxing
[22:23:21] <sheetjs> n> 3 == Number(3) @farn
[22:23:22] <jellobot> farn, true
[22:23:31] <sheetjs> n> 3 === Number(3) @farn
[22:23:32] <jellobot> farn, true
[22:23:35] <farn> n> 3 === new Number(3)
[22:23:36] <jellobot> (okay) false
[22:23:38] <sheetjs> there we go
[22:24:13] <FabioP> i'm studying react native, do you like it ? https://streamable.com/ec6d8n
[22:25:26] <l__q> farn: what?
[22:25:39] <l__q> why 3 is not a number?
[22:26:00] <farn> 3 is a number, but new Number(3) is an object that wraps a number
[22:26:01] <l__q> mayby:
[22:26:13] <l__q> n> 3 == Number(3)
[22:26:14] <jellobot> (okay) true
[22:26:16] <l__q> aha!
[22:26:20] <l__q> types
[22:26:33] <l__q> === !== ==
[22:26:42] <farn> GreenJello: what changes in strict mode?
[22:26:43] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[22:26:59] <farn> l__q: no, that's not it
[22:27:03] <farn> n> 3 === Number(3)
[22:27:04] <jellobot> (okay) true
[22:27:05] <GreenJello> autoboxing only happens if the method isn't defined in strict mode
[22:27:06] <farn> n> 3 === new Number(3)
[22:27:07] <jellobot> (okay) false
[22:27:17] <l__q> aaa
[22:27:19] <l__q> instance
[22:27:24] <l__q> okay
[22:27:33] <l__q> this is normaln
[22:27:35] <GreenJello> n> 'use strict'; Number.prototype.foo = function() { return typeof this }; (5).foo()
[22:27:36] <jellobot> (okay) 'number'
[22:27:41] <GreenJello> n> Number.prototype.foo = function() { return typeof this }; (5).foo()
[22:27:42] <jellobot> (okay) 'object'
[22:27:51] *** Quits: Noustropos (~Noustropo@2a00:f41:2804:1680:4b9a:8bde:a1cc:2c76) (Ping timeout: 258 seconds)
[22:28:05] <farn> ooh, interesting
[22:28:06] <l__q> by new you create new instance
[22:28:15] <l__q> this is !== 3
[22:28:22] <l__q> also false is true
[22:28:23] <sheetjs> just return this
[22:28:30] <sheetjs> n> Number.prototype.foo = function() { return  this }; (5).foo()
[22:28:31] <jellobot> (okay) [Number: 5]
[22:28:38] <l__q> this returs is valid
[22:28:44] <sheetjs> n> new Number(5)
[22:28:45] <jellobot> (okay) [Number: 5]
[22:28:46] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[22:28:47] <sheetjs> yeah it's being boxed
[22:28:50] <l__q> exacly!
[22:29:08] <farn> n> "use strict"; Number.prototype.foo = function() { return  this }; (5).foo()
[22:29:09] <jellobot> (okay) 5
[22:30:52] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[22:31:06] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[22:32:29] <farn> I thought "autoboxing" referred to the thing that makes (5).foo() valid in the first place, as in accessing properties on a primitive value
[22:32:53] *** Joins: pavonia (~user@user/siracusa)
[22:32:55] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[22:33:15] *** Joins: Noustropos (~Noustropo@91.221.89.2)
[22:35:35] <GreenJello> n> 'use strict'; Number.prototype.foo = function() { return typeof this }; new Number(5).foo()
[22:35:35] <jellobot> (okay) 'object'
[22:36:07] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[22:36:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:36:16] <GreenJello> farn, that interpretation mostly works, except you would need some side channel for it to make sense that this method can receive either a primitive or object
[22:36:49] <GreenJello> it's not that it unboxes the value if the method is defined in strict mode, or else this would log 'number'
[22:37:45] <GreenJello> you could say it boxes it to access the property, but the receiver for the method call is the original value
[22:37:46] <farn> yeah, I guess strict mode disproves the idea that (5).foo() simply gets translated to (new Number(5)).foo()
[22:38:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:38:49] <GreenJello> let temp = 5; Object(temp).foo.call(temp)
[22:39:51] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[22:40:12] <farn> right
[22:40:53] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[22:42:01] <farn> n> Object.getPrototypeOf(5) === Number.prototype
[22:42:01] <jellobot> (okay) true
[22:42:05] <farn> fun
[22:45:21] *** Quits: Ares1 (~Ares3@37.228.196.119) (Remote host closed the connection)
[22:45:39] *** Joins: Ares1 (~Ares3@37.228.196.119)
[22:48:11] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[22:51:23] *** Quits: Atum__ (~IRC@user/atum/x-2392232) (Quit: Atum__)
[22:51:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:54:10] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[22:54:18] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 258 seconds)
[22:54:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:55:08] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[22:56:49] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[23:09:51] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[23:10:19] *** Joins: KevinX (~KevinX@185.245.86.84)
[23:11:52] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[23:12:12] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[23:25:01] *** Joins: Tabstar (~tabmow@user/tabmow)
[23:25:52] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 272 seconds)
[23:27:06] *** Tabstar is now known as Tabmow
[23:36:54] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:37:39] *** Joins: onosendi (~onosendi@user/onosendi)
[23:38:23] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 258 seconds)
[23:40:27] *** Parts: shush_ (sid21719@tinside.irccloud.com) ()
[23:41:05] *** Joins: IceMichael (~IceMichae@dynamic-046-114-157-153.46.114.pool.telefonica.de)
[23:41:27] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[23:45:39] *** Joins: Guest68 (~Guest68@2a01:e0a:53e:de20:8736:9c18:6c4e:deb6)
[23:47:01] *** Quits: Guest68 (~Guest68@2a01:e0a:53e:de20:8736:9c18:6c4e:deb6) (Client Quit)
[23:49:52] *** Joins: Cyp (~cyp@192038129116.mbb.telenor.dk)
[23:52:07] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:55:14] *** Quits: mattil (~mattilinn@87-92-57-75.bb.dnainternet.fi) (Quit: Leaving)
[23:57:56] *** Quits: Noustropos (~Noustropo@91.221.89.2) (Ping timeout: 258 seconds)
[23:59:14] <Donitz> n> let n = 0; switch (5) { case n=5: console.log('a'); };
[23:59:14] <jellobot> (okay) a
[23:59:23] <Donitz> mmm mm mm
