[00:18:00] <arkanoid> dom96: I'm parsing a very large header file, now I'm trying the nimterop way, but i'm still at the mangling phase
[00:18:45] <arkanoid> I have many "tree-sitter parse error" and error on Error: unhandled exception: getters.nim(189, 12) `name.nBl` Blank identifier error [AssertionDefect]
[00:23:27] <FromDiscord> <PsychoClay> what does the magic pragma do?
[00:28:24] <madprops> i like how I can define an object in one file, and implement it in another one. Though I tried conditional implementations like if true, use this impl, else, use this impl, but don't know how i'd do that
[00:29:49] *** Joins: pch_ (~pch@66.49.131.33)
[00:31:10] <FromDiscord> <dom96> In reply to @arkanoid "<@132595483838251008>: I'm parsing a": you might be better off just wrapping what you need, instead of everything
[00:32:33] *** Quits: pch (~pch@66.49.131.33) (Ping timeout: 258 seconds)
[00:33:59] <arkanoid> dom96: probably, but it also a perfect storm, as the .h I'm wrapping is generated from an xml file that is an api definition, so an automated tool perfectly fits
[00:39:53] <FromDiscord> <exelotl> @PsychoClay magic means "this is implemented in the compiler"
[01:17:34] <FromDiscord> <tandy> is it possible to log the output of comands run with \`osproc.execProcesses\` ?
[01:18:50] <FromDiscord> <Elegantbeef> after it runs you can use the `afterRunEvent` to read the process' stdout/stderr
[01:27:01] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:31:40] <FromDiscord> <tandy> hmm, how do i access the processes stdout?
[01:32:02] <FromDiscord> <tandy> \`proc logOutput(idx\: int; p\: Process) =\` i call this on the afterRunEvent
[01:32:27] <FromDiscord> <Elegantbeef> the after run proc gives you a process so you can do `process.outputStream`
[01:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[01:38:43] <FromDiscord> <tandy> ahh
[01:39:11] <FromDiscord> <Elegantbeef> also `errorStream` ofc
[01:40:26] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[01:40:30] <FromDiscord> <tandy> but how do I pass that to the logger
[01:40:44] *** Joins: xet7 (~xet7@user/xet7)
[01:44:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/6zb
[02:04:58] <FromDiscord> <tandy> says there is a type mismatch in that for loop
[02:05:27] <FromDiscord> <Elegantbeef> Ah i left out `lines`
[02:05:38] <FromDiscord> <Elegantbeef> should be `for line in rpocess.outputStream.lines`
[02:10:01] <FromDiscord> <tandy> that works, thank you
[02:26:54] *** Quits: max22- (~maxime@2a01cb0883359800998b0f4bb9d4467a.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:20:17] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[03:21:27] *** Joins: flynn (~mcbloch@user/flynn)
[03:27:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:43:20] <NimEventer> New thread by Col: % operator but for OrderedTable, see https://forum.nim-lang.org/t/8328
[04:01:53] <madprops> is there a generic int || float type?
[04:02:08] <FromDiscord> <Elegantbeef> SomeNumber?
[04:02:19] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:02:22] <madprops> oh hm
[04:02:34] <FromDiscord> <Elegantbeef> Or do you just want `int or float`?
[04:03:06] <madprops> SomeNumber works
[04:03:59] <madprops> i did google about it
[04:04:07] <madprops> but apparently I queried "nime SomeNumber"
[04:04:22] <madprops> which made me think it didn't exist but it's because of 'nime'
[04:10:43] <arkanoid> if I pass the header I want to ffi with "gcc -E -P -C", nimterop fails successfully: it creates file made of just pragmas
[04:37:38] <madprops> made  this little function. might be useful https://gist.github.com/madprops/9ed21ff1ca83e87878f63b404e6a13f2
[04:42:13] <FromDiscord> <Elegantbeef> for showcasing logic mad easier to use asserts `assert multistring("day", -1, "is") == "-1 days are"`
[04:43:30] <madprops> you're right
[04:44:11] <arkanoid> do you know if its possible to do multiple preprocessing passes with nimterop?
[04:44:40] <FromDiscord> <Elegantbeef> I know nothing of nimterop, so nope ðŸ˜€
[04:50:15] <arkanoid> k
[05:25:40] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:40:45] <FromDiscord> <proud linux user> In reply to @konsumlamm "it's called modules": :|
[05:48:32] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:01:29] <FromDiscord> <deech> If I have an `Option[void]` how do I instantiate `some(...)`?  I tried `some[void]()` and that failed.
[06:05:18] <FromDiscord> <Yardanico> In reply to @deech "If I have an": I don't think you can, why do you need that?
[06:09:53] <FromDiscord> <deech> Considering and API where a successful action yields a `some(void)` and unsuccessful one is `none()`. In functional langs it's a nice way of chaining a bunch of actions with short circuiting if one failes.
[06:10:14] <FromDiscord> <deech> (edit) "and" => "an" | "failes." => "fails."
[06:10:31] <FromDiscord> <Yardanico> In reply to @deech "Considering an API where": what about using a plain old boolean? :P
[06:10:35] <FromDiscord> <Yardanico> since you don't need any value anyway
[06:10:39] <FromDiscord> <Yardanico> just return true or false
[06:11:25] <FromDiscord> <deech> Yeah I know. ðŸ™‚ I just wanted to flatmap things together.
[06:11:41] <FromDiscord> <deech> It's a fairly common idiom in FP but no big deal.
[06:12:04] <FromDiscord> <Yardanico> well there might be some other way to do it, since there are some FP libs out there
[06:12:38] <FromDiscord> <Yardanico> i mean some alternatives to the options module
[06:15:07] <FromDiscord> <deech> I should probably just use Status' `results` library. ðŸ™‚
[07:10:05] *** Joins: rockcavera (~rc@192.12.115.217)
[07:10:05] *** Quits: rockcavera (~rc@192.12.115.217) (Changing host)
[07:10:05] *** Joins: rockcavera (~rc@user/rockcavera)
[07:27:57] <madprops> what could be a good way to have a default array argument like...
[07:27:58] <madprops> afterwords: array[2, string] = ["a", "a"]
[07:28:07] <madprops> i want to check if it's not the default value, and do something
[07:28:22] <madprops> but checking if [0] == "a" seems dumb
[07:28:46] <madprops> can't simply do [] since it expects two items
[07:33:25] <madprops> also is there  an argument type that is fixed but accepts array and seq ?
[07:33:36] <madprops> openarray can be any size, but i need it fixed
[07:37:06] <FromDiscord> <Rika> Use sequtils map prolly , not sure if thereâ€™s an open array version
[08:11:01] <NimEventer> New thread by Kalbhairab: Convert func to property box, see https://forum.nim-lang.org/t/8329
[08:18:36] <FromDiscord> <Rika> I donâ€™t know what he means
[08:18:46] <FromDiscord> <Elegantbeef> me either
[08:21:01] <FromDiscord> <InventorMatt> I believe he is saying that he wants a GUI that can generate code for a GUI to make it easier to build
[08:26:06] <FromDiscord> <Yardanico> yeah
[08:26:19] <FromDiscord> <Yardanico> He wants something like Delphi if I understand correctly
[08:35:57] <FromDiscord> <JSONBash> does anyone know of a macro that allows array/sequence unpacking?
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:12] <FromDiscord> <Elegantbeef> https://github.com/technicallyagd/unpack
[08:39:25] <FromDiscord> <JSONBash> In reply to @Elegantbeef "https://github.com/technicallyagd/unpack": cheers
[09:10:08] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:12:27] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[09:12:38] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:12:38] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (*.net *.split)
[09:12:39] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:12:39] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:12:39] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:13:13] *** Joins: flynn (~mcbloch@user/flynn)
[09:13:13] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[09:13:13] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:13:13] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:13:13] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:14:54] *** Quits: beshr (~beshr@user/beshr) (*.net *.split)
[09:14:55] *** Quits: LyndsySimon (sid34452@id-34452.tooting.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (*.net *.split)
[09:14:55] *** Quits: jfrent (~josiah@user/jfrent) (*.net *.split)
[09:15:22] *** Joins: beshr (~beshr@user/beshr)
[09:15:22] *** Joins: LyndsySimon (sid34452@id-34452.tooting.irccloud.com)
[09:15:22] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[09:15:22] *** Joins: jfrent (~josiah@user/jfrent)
[09:17:18] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Ping timeout: 272 seconds)
[09:17:52] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 272 seconds)
[09:18:04] *** Quits: asd (~noname@user/asd) (*.net *.split)
[09:18:04] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[09:18:04] *** Quits: blackbeard420 (~blackbear@blackbeard420.me) (*.net *.split)
[09:18:04] *** Quits: ecs (~ecs@user/ecs) (*.net *.split)
[09:18:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:18:04] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:18:05] *** Quits: beshr (~beshr@user/beshr) (*.net *.split)
[09:18:05] *** Quits: LyndsySimon (sid34452@id-34452.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: jfrent (~josiah@user/jfrent) (*.net *.split)
[09:18:05] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (*.net *.split)
[09:18:06] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:18:06] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:18:06] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:18:06] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (*.net *.split)
[09:18:06] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[09:18:06] *** Quits: pch_ (~pch@66.49.131.33) (*.net *.split)
[09:18:06] *** Quits: notchris (sid181145@stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: pjzz (~pjz@place.org) (*.net *.split)
[09:18:07] *** Quits: systemds1cks (~systemdsu@user/systemdsucks) (*.net *.split)
[09:18:07] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[09:18:07] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (*.net *.split)
[09:18:07] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[09:18:07] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (*.net *.split)
[09:18:08] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:18:08] *** Quits: xet7 (~xet7@user/xet7) (*.net *.split)
[09:18:08] *** Quits: KurtGodel (~AdiIRC@180.150.11.50) (*.net *.split)
[09:18:08] *** Quits: euantorano (sid180289@brockwell.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: ormiret (sid314108@tooting.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[09:18:08] *** Quits: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de) (*.net *.split)
[09:18:08] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[09:18:09] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[09:18:09] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[09:18:09] *** Quits: drewr (~drew@user/drewr) (*.net *.split)
[09:18:09] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[09:18:09] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[09:18:09] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[09:18:09] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (*.net *.split)
[09:18:09] *** Quits: fputs (~fputs@137.220.33.212) (*.net *.split)
[09:18:09] *** Quits: mst (~matthewt@vps-6c71e929.vps.ovh.net) (*.net *.split)
[09:18:10] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:18:10] *** Quits: madprops (~hj8oijo@user/madprops) (*.net *.split)
[09:18:10] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (*.net *.split)
[09:18:10] *** Quits: dmu (~darkmusic@user/darkmusic) (*.net *.split)
[09:18:10] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[09:18:10] *** Quits: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca) (*.net *.split)
[09:18:10] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[09:18:11] *** Quits: federico3 (~quassel@debian/federico) (*.net *.split)
[09:18:11] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[09:18:11] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[09:18:11] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (*.net *.split)
[09:18:11] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[09:18:12] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:18:12] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[09:18:12] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (*.net *.split)
[09:18:12] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:18:32] *** Joins: jfrent (~josiah@user/jfrent)
[09:18:32] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[09:18:32] *** Joins: LyndsySimon (sid34452@id-34452.tooting.irccloud.com)
[09:18:32] *** Joins: beshr (~beshr@user/beshr)
[09:18:32] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:18:32] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:18:32] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:18:32] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[09:18:32] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[09:18:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:18:32] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[09:18:32] *** Joins: xet7 (~xet7@user/xet7)
[09:18:32] *** Joins: pch_ (~pch@66.49.131.33)
[09:18:32] *** Joins: KurtGodel (~AdiIRC@180.150.11.50)
[09:18:32] *** Joins: notchris (sid181145@stonehaven.irccloud.com)
[09:18:32] *** Joins: euantorano (sid180289@brockwell.irccloud.com)
[09:18:32] *** Joins: ormiret (sid314108@tooting.irccloud.com)
[09:18:32] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[09:18:32] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[09:18:32] *** Joins: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de)
[09:18:32] *** Joins: lain (~lain@172.16.254.xxx)
[09:18:32] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[09:18:32] *** Joins: blackbeard420 (~blackbear@blackbeard420.me)
[09:18:32] *** Joins: ecs (~ecs@user/ecs)
[09:18:32] *** Joins: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca)
[09:18:32] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[09:18:32] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[09:18:32] *** Joins: fputs (~fputs@137.220.33.212)
[09:18:32] *** Joins: ozzz (~oz@46.49.41.80)
[09:18:32] *** Joins: asd (~noname@user/asd)
[09:18:32] *** Joins: jkl (~jkl@user/jkl)
[09:18:32] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:18:32] *** Joins: mahlon (~mahlon@martini.nu)
[09:18:32] *** Joins: madprops (~hj8oijo@user/madprops)
[09:18:32] *** Joins: drewr (~drew@user/drewr)
[09:18:32] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[09:18:32] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[09:18:32] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[09:18:32] *** Joins: pjzz (~pjz@place.org)
[09:18:32] *** Joins: systemds1cks (~systemdsu@user/systemdsucks)
[09:18:32] *** Joins: federico3 (~quassel@debian/federico)
[09:18:32] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[09:18:32] *** Joins: mst (~matthewt@vps-6c71e929.vps.ovh.net)
[09:18:32] *** Joins: oprypin (~irc@pryp.in)
[09:18:32] *** Joins: emery (~quassel@2a03:3b40:fe:ab::1)
[09:18:32] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[09:18:32] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[09:18:32] *** Joins: [R] (~rs@genoce.org)
[09:18:32] *** Joins: dmu (~darkmusic@user/darkmusic)
[09:18:32] *** Joins: nisstyre (~wes@user/nisstyre)
[09:18:32] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[09:18:32] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[09:18:32] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[09:18:32] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[09:18:32] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[09:18:32] *** Joins: dom96 (~dom@mail.nim-lang.org)
[09:18:32] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:20:20] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[09:20:21] *** Quits: blackbeard420 (~blackbear@blackbeard420.me) (*.net *.split)
[09:20:21] *** Quits: ecs (~ecs@user/ecs) (*.net *.split)
[09:20:21] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:20:21] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:20:24] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 272 seconds)
[09:20:45] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[09:20:45] *** Joins: blackbeard420 (~blackbear@blackbeard420.me)
[09:20:45] *** Joins: ecs (~ecs@user/ecs)
[09:20:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:20:45] *** Joins: jkl (~jkl@user/jkl)
[09:20:56] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 268 seconds)
[09:22:42] *** Quits: asd (~noname@user/asd) (*.net *.split)
[09:22:55] *** Joins: asd (~noname@user/asd)
[09:24:11] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:24:11] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[09:24:11] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (*.net *.split)
[09:24:11] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:24:17] *** Joins: greaser|q (greaser@antihype.space)
[09:24:20] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[09:24:31] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[09:24:42] *** Joins: nisstyre (~wes@li798-187.members.linode.com)
[09:25:26] *** Joins: flynn (~mcbloch@user/flynn)
[09:25:31] <FromDiscord> <proud linux user> ohyes goog module
[09:36:09] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (Ping timeout: 248 seconds)
[10:48:06] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[11:25:11] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[11:25:24] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:48:16] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[12:07:04] <FromDiscord> <enthus1ast> He wants to render a gui element that shows all the properties (variables) of a object and also all the procs/methods like in Delphi or VisualStudio I think it's called property editorâ†µ(@Rika)
[12:09:18] <FromDiscord> <Rika> Canâ€™t GDB do that
[12:09:45] <FromDiscord> <Yardanico> uh no
[12:10:12] <FromDiscord> <Yardanico> as I understand he wants an ui editor which'll allow to create handlers for button events easily
[12:10:16] <FromDiscord> <Yardanico> "button have many properties like color, on_click, onHover, etc. autocomplete gives us what we need but if we can make gui which gives all button properties and we only need to provide value and it gives us code then it will be fast."
[12:10:46] <FromDiscord> <Rika> Iâ€™m still confused lol
[12:10:47] <FromDiscord> <Elegantbeef> It's very unclear what they want so maybe in time they'll elaborate and explain
[12:12:02] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/876732519360389130/unknown.png
[12:20:16] *** Joins: max22- (~maxime@2a01cb0883359800fbb1a459622bf7d6.ipv6.abo.wanadoo.fr)
[12:43:16] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[12:43:16] <FromDiscord> <Chiggy> In reply to @enthus1ast "He wants to render": Hey enthus1ast! are you there?
[12:43:35] <FromDiscord> <enthus1ast> yep but working
[12:43:59] <FromDiscord> <Chiggy> oh ok
[12:44:15] <FromDiscord> <Chiggy> can you let me know when you'll be free
[12:44:24] <FromDiscord> <enthus1ast> sure
[12:44:37] <FromDiscord> <Chiggy> please do ping me. Thanks
[12:59:51] *** Joins: xet7 (~xet7@user/xet7)
[13:02:08] <NimEventer> New thread by Wani: Ubuntu Noobish Questions, see https://forum.nim-lang.org/t/8330
[13:13:46] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:41:26] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Remote host closed the connection)
[13:42:20] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[13:42:59] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Remote host closed the connection)
[13:44:05] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[15:02:35] <FromDiscord> <Stuffe> Does anyone know how to get the time as an int out of a Time object? I am trying to use getLastAccessTime for a file, it returns a Time, but when I try to access the "seconds" field it gives me an error
[15:03:48] <PMunch> What error?
[15:04:01] <PMunch> And I assume you want a UNIX timestamp?
[15:04:34] <FromDiscord> <Stuffe> yeah
[15:04:34] <FromDiscord> <PsychoClay> toUnix() ?
[15:04:41] <PMunch> toUnix is probably what you want
[15:04:54] <FromDiscord> <Stuffe> it thinks I want to access a method called "seconds", which doesn't take a Time type as argument
[15:05:30] <FromDiscord> <Stuffe> toUnix() works! thanks
[15:07:42] <PMunch> seconds takes an integer and converts it to a TimeInterval that can be added to a Time object
[15:08:10] <PMunch> It's so you can do things like `myTime + 10.seconds`
[15:09:23] <FromDiscord> <Stuffe> yeah but it is also listed as a field on the Time object
[15:09:43] <FromDiscord> <Stuffe> I feel like that should take precedence. But maybe it is a private field
[15:09:57] <FromDiscord> <Stuffe> In which case there is probably no reason to show it in the docs
[15:11:09] <FromDiscord> <Rika> In reply to @Stuffe "yeah but it is": It is likely a private field
[15:11:41] <FromDiscord> <Rika> Maybe it should be more obvious that it is private
[15:12:01] <FromDiscord> <Rika> I think itâ€™s fine to show it in the docs just make it more obvious that it is private
[15:13:20] <PMunch> @Stuffe, it's private because it's not annotated with a *
[15:13:38] <PMunch> It's a but odd that it even appears in the docs *shrugs*
[15:16:52] <FromDiscord> <Rika> Yes but that is not obvious to beginners or people skimming
[15:22:19] <FromDiscord> <PsychoClay> is it a bad idea to spawn 400 threads?
[15:24:03] <FromDiscord> <Rika> At once? Maybe
[15:24:04] <PMunch> Yup
[15:24:16] <PMunch> Unless you have 400 cores
[15:24:17] <FromDiscord> <Rika> Maybe just use a thread pool
[15:24:31] <FromDiscord> <Rika> In reply to @PMunch "Unless you have 400": For all you know he might be programming for a super computer
[15:25:04] <PMunch> I mean it's not going to crash or anything, but it could easily end up being slower than a single thread
[15:25:09] <FromDiscord> <PsychoClay> 400 = 20 secs, 1gb ramâ†µ200 = 35 secs, 500mbâ†µ100 = 50 secs, 250mb
[15:25:15] <FromDiscord> <PsychoClay> it seems a bit faster
[15:25:38] <FromDiscord> <PsychoClay> but the ram usage is pretty high
[15:25:46] <PMunch> Hmm, that actually surprises me quite a bit
[15:26:00] <PMunch> Do you by any chance lock your threads up with IO?
[15:26:21] <FromDiscord> <PsychoClay> yea it does a bunch of http requests
[15:26:26] <PMunch> @Rika, exactly, you never know :P
[15:26:47] <PMunch> Try doing it with asynchttpclient instead
[15:26:52] <FromDiscord> <PsychoClay> i know async is supposed to be better for io things
[15:26:59] <FromDiscord> <PsychoClay> but i couldnt get i to work
[15:27:01] <FromDiscord> <Rika> In reply to @PMunch "Try doing it with": I would assume that would still be slower
[15:27:07] <FromDiscord> <Rika> In reply to @PsychoClay "but i couldnt get": How?
[15:27:12] <FromDiscord> <Rika> What issues were you hitting
[15:27:22] <FromDiscord> <PsychoClay> i think its because i used waitfor
[15:27:36] <FromDiscord> <PsychoClay> but it seemed like only 1 worker was doing anything
[15:27:59] <FromDiscord> <Rika> That sounds like your issue alright
[15:28:08] <FromDiscord> <Rika> Itâ€™s a bit harder to think in async
[15:28:18] <FromDiscord> <PsychoClay> yep
[15:28:23] <FromDiscord> <Rika> Because thereâ€™s a lot of stuff being hidden from you
[15:28:55] <FromDiscord> <PsychoClay> maybe if i use 10 or so threads with async in them
[15:29:16] <FromDiscord> <Rika> Like how you donâ€™t need to await an async proc for it to be queued in the loop (you just need to yield control back to the loop)
[15:29:38] <FromDiscord> <Rika> I know that sounds obvious to other people here
[15:32:22] <PMunch> PsychoClay, yup waitFor will stop the thread waiting for the async procedure to complete
[15:32:36] <PMunch> So that's essentially the same as not running async
[15:32:40] <FromDiscord> <PsychoClay> so i should await instead right?
[15:32:44] <PMunch> Yup
[15:34:16] <PMunch> You could run async in multiple threads, but it's probably not going to do anything extra for you. If you need to do some processing you could have one thread that does all the async stuff and puts the results in a channel that multiple consumer threads reads from and performs the calculations
[15:36:35] <FromDiscord> <PsychoClay> sent a code paste, see https://play.nim-lang.org/#ix=3waf
[15:37:35] <FromDiscord> <PsychoClay> (edit) "https://play.nim-lang.org/#ix=3waf" => "https://play.nim-lang.org/#ix=3wag"
[15:39:46] <FromDiscord> <Rika> Needs to be in a proc with pragma async
[15:40:03] <FromDiscord> <PsychoClay> oh ok
[15:40:14] <FromDiscord> <Rika> If thatâ€™s outside of a proc make a main proc with async then do wait for on the main proc
[15:42:54] <FromDiscord> <PsychoClay> hmm it still appears to be running one at the time
[15:44:14] <FromDiscord> <PsychoClay> maybe because im using curl instead of std/httpclient
[15:45:03] <FromDiscord> <proud linux user> oof
[15:45:49] <PMunch> Wait what? You're just awaiting a procedure that does a blocking call to curl?
[15:45:54] <PMunch> Yeah that won't work
[15:46:11] <FromDiscord> <PsychoClay> guess its back to threads then lol
[15:46:27] <PMunch> Just use asynchttpclient instead of curl..
[15:46:45] <FromDiscord> <PsychoClay> it has no configuarbility
[15:46:53] <FromDiscord> <PsychoClay> not enough atleast
[15:47:08] <PMunch> What do you want to configure?
[15:47:33] <PMunch> You should be able to configure pretty much anything you could need with it..
[15:47:58] <FromDiscord> <PsychoClay> cant write to file
[15:48:34] <FromDiscord> <PsychoClay> how do i download a 10 gb file with asynchttpclient?
[15:49:15] <FromDiscord> <PsychoClay> oh wait theres a downloadFile proc
[15:49:55] <PMunch> Mhm
[15:50:11] <FromDiscord> <PsychoClay> can it do chunked downloads tho?
[15:50:31] <PMunch> Define chunked
[15:51:18] <FromDiscord> <PsychoClay> multiple connections download different parts of a file with the range header
[15:52:32] <FromDiscord> <Rika> You just do exactly thatâ€¦
[15:52:36] <PMunch> Would that even speed up the download?
[15:52:53] <FromDiscord> <PsychoClay> yea it bypassed speedlimits on some file hosting sites
[15:53:01] <FromDiscord> <PsychoClay> (edit) "bypassed" => "bypassew"
[15:53:06] <FromDiscord> <PsychoClay> (edit) "bypassew" => "bypasses"
[15:53:16] <PMunch> Ah right
[15:53:39] <FromDiscord> <PsychoClay> In reply to @Rika "You just do exactly": how do u do that with httpclient ?
[15:53:41] <FromDiscord> <Rika> I could have written some pseudo code if I were home
[15:54:06] <FromDiscord> <Rika> The range thing is just a header so you just make many clients then send the get request with the differing headers
[15:54:22] <FromDiscord> <Rika> Though the writing to a file part is a bit more complicated
[15:54:40] <FromDiscord> <Rika> In reply to @Rika "The range thing is": Requests
[15:54:51] <FromDiscord> <PsychoClay> but doesnt downloadFile just start at the start of the file or something
[15:55:13] <FromDiscord> <PsychoClay> so it would just be overwriting itself all the time
[15:55:25] <PMunch> Yeah, easiest would probably be to download to a bunch of small files and then stitch them together afterwards
[15:55:35] <FromDiscord> <PsychoClay> isnt that slow?
[15:56:01] <PMunch> Might be..
[15:56:11] <FromDiscord> <PsychoClay> i guess i could just get it as a string with `get` and then put it in the file
[15:56:26] <FromDiscord> <PsychoClay> but that might also be slow
[15:56:40] <FromDiscord> <Yardanico> that'll take huge amounts of RAM since you'll have to store the file in memory before writing
[15:56:40] <PMunch> What do you think curl is doing?
[15:57:01] <FromDiscord> <PsychoClay> well curl seems to only take a few bytes at the time
[15:57:14] <FromDiscord> <PsychoClay> wich i can then directily write to the correct place in the file
[15:57:50] <FromDiscord> <PsychoClay> it seems like that would be the fastest way
[15:58:12] <PMunch> What you do is queue up a bunch of `get` with asynchttpclient, then you throw on a callback that writes it to the file with an async file writer
[15:58:56] <FromDiscord> <PsychoClay> il try that, see if its faster
[15:59:25] <FromDiscord> <Rika> Since this is asynchronous you donâ€™t need to worry about fucking up a write so it should be fine to open the file, seek, write, then close
[15:59:29] <FromDiscord> <Rika> Then yield back to the loop
[16:00:22] <PMunch> Why open and close every step?
[16:02:59] <PMunch> First run a HEAD request to the file, that should give you the size. Then create an async file and run setFileSize on it with that size. Then chunk that length into parts, request them all with async, and in a callback seek the file and write into that position.
[16:04:10] <FromDiscord> <PsychoClay> yea i already did it with curl so i should be able to just translate it
[16:05:42] <FromDiscord> <PsychoClay> does httpclient support socks proxies?
[16:07:30] <FromDiscord> <Rika> In reply to @PMunch "Why open and close": I am unsure if it is safe for open to open the same file multiple times
[16:07:51] <FromDiscord> <PsychoClay> In reply to @Rika "I am unsure if": it worked for me
[16:08:10] <FromDiscord> <Rika> Then good
[16:08:31] <FromDiscord> <PsychoClay> dunno about safe but it didnt get corrupted or anything
[16:08:35] <PMunch> @Rika, why would you open it multiple times?
[16:09:06] <FromDiscord> <Rika> Because I was thinking of writing while receiving data and since this is concurrent reception of data then you need to open the same file many times
[16:09:42] <FromDiscord> <Rika> Unless you want to do the many files then combine after finish
[16:09:45] <PMunch> Uhm, no?
[16:09:51] <FromDiscord> <Rika> Which I would say would probably be more robust
[16:09:55] <FromDiscord> <Rika> Explain
[16:10:13] <FromDiscord> <PsychoClay> u can just use setFilePos right to move around
[16:10:19] <FromDiscord> <Rika> Indeed
[16:10:39] <FromDiscord> <PsychoClay> open once and then just move to where u need to be?
[16:11:00] <FromDiscord> <Rika> And then pass that to each iterative
[16:11:04] <FromDiscord> <Rika> Iterator
[16:11:07] <FromDiscord> <Rika> Okay
[16:11:12] <FromDiscord> <xflywind> bug existed with opening file multiple times without closing https://github.com/nim-lang/Nim/issues/13940
[16:22:09] <FromDiscord> <Yardanico> In reply to @Rika "Because I was thinking": that won't happen
[16:22:18] <FromDiscord> <Yardanico> two async callbacks can't happen at exactly  the same time
[16:22:23] <FromDiscord> <Yardanico> concurrency is not parallelism
[16:22:58] <FromDiscord> <Yardanico> since even if you do a lot of async stuff you're still essentially running a single thread
[16:23:11] <FromDiscord> <Yardanico> that said, async is actually not bad for network tasks (obviously)
[16:23:26] <FromDiscord> <Yardanico> i have a quite fast prnt.sc scraper in simple async code, also https://github.com/Yardanico/adbscan/
[16:26:12] <arkanoid> nimterop says that it is doing preprocessing, but to me seems failing in doing multiple passes
[16:27:01] <FromDiscord> <Rika> In reply to @Yardanico "two async callbacks can't": Well yes I never said parallel write
[16:27:32] <FromDiscord> <Rika> I mean having many of the same file open at once since that is possible if you yield before closing
[16:27:43] <FromDiscord> <Rika> Please read what I say
[16:28:24] <FromDiscord> <Yardanico> anyway time to do fun investigations
[16:28:24] <FromDiscord> <Yardanico> https://stackoverflow.com/questions/67665566/how-to-cosmonim-gcc-on-solus-linux-segfault
[16:28:27] <FromDiscord> <Yardanico> unanswered
[16:28:38] <FromDiscord> <Yardanico> guess i should update cosmonim (if needed) and try to find the reason of this
[16:35:50] <PMunch> @PsychoClay, something like this http://ix.io/3waA/nim
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:29] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:29] <FromDiscord> <PsychoClay> In reply to @PMunch "<@596976507033747466>, something like this": shouldnt line 28 be await instead of waitfor?
[16:40:14] <PMunch> It could be await, but we're not using the result
[16:40:20] <PMunch> And you shouldn't discard a future
[16:40:32] <PMunch> asyncCheck doesn't await completion, so that wouldn't work
[16:40:54] <PMunch> waitFor should work fine since we've already added all the tasks
[16:41:01] <PMunch> I think..
[16:42:05] <FromDiscord> <PsychoClay> hmm i still dont really understand the difference between waitfor and await ig
[16:44:11] <FromDiscord> <Yardanico> @PMunch wouldn't it make more sense to https://nim-lang.org/docs/asyncfutures.html#all%2Cvarargs%5BFuture%5BT%5D%5D `requests` and waitFor on the result?
[16:44:15] <FromDiscord> <Yardanico> so waitFor all(requests)
[16:44:29] <PMunch> Oh I was looking for something like that!
[16:45:00] <FromDiscord> <Yardanico> actually `discard waitFor all(requests)` in full right
[16:45:08] <PMunch> await: yield control over the process to the caller, so that other stuff can be done while we're waiting for IO. waitFor: Spin until the IO is done, blocking the thread
[16:45:43] <FromDiscord> <Yardanico> hmm maybe not
[16:45:49] <FromDiscord> <Yardanico> ah wait it seems to complete
[16:45:52] <FromDiscord> <Yardanico> but took quite some time, that's weirdf
[16:45:53] <FromDiscord> <Yardanico> (edit) "weirdf" => "weird"
[16:51:02] *** Joins: dsrw (~dsrw@134.41.79.252)
[16:51:18] <PMunch> Not that weird, if the server isn't throttling you it will be faster to just grab the whole file as one stream
[16:52:56] <arkanoid> I see that nor c2nim nor nimterop support C macros that require multiple preprocessor passes. If I do "gcc -C -P -E" it gets expanded successfully but now nimterop fails to convert (outputs pragma only) without explicit error, and c2nim tried to pull in whole stdlib names. I feel not following the right strategy here, what would you do?
[16:57:27] *** Joins: rockcavera (~rc@192.12.115.217)
[16:57:27] *** Quits: rockcavera (~rc@192.12.115.217) (Changing host)
[16:57:27] *** Joins: rockcavera (~rc@user/rockcavera)
[16:58:35] *** Quits: dsrw (~dsrw@134.41.79.252) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:00:31] <FromDiscord> <Yardanico> so apparently cosmopolitan doesn't seem to be happy with refc on latest nim devel, works with orc though XD
[17:00:38] <FromDiscord> <Yardanico> (sigsegv with refc, runs fine with orc)
[17:01:54] <FromDiscord> <Yardanico> ah no, i celebrated too soon, it crashes on more complex programs with orc too
[17:07:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 258 seconds)
[17:07:51] *** Joins: dsrw (~dsrw@134.41.79.252)
[17:14:46] <PMunch> http://ix.io/3waD/nim <- PsychoClay, there, this should be a bit more stable
[17:15:03] <PMunch> Still no retry for failing requests though
[17:15:18] <PMunch> Which you probably want
[17:16:36] <PMunch> By the way, I'm rebooting that server right now. So replace the URL if you want to try it :P
[17:17:06] <FromDiscord> <Rika> error handling would be somewhat problematic to implement this way
[17:17:40] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[17:17:47] <PMunch> Why?
[17:18:18] <PMunch> Just keep track of the ranges that have failed and retry them
[17:21:35] <FromDiscord> <Rika> so do you readd to the seq or what
[17:21:48] <PMunch> Huh?
[17:22:10] <FromDiscord> <Rika> do you readd the failed ranges to the requests seq with the same callback
[17:23:27] <PMunch> while requests.len != 0: waitFor all(requests); requests = failedRequests
[17:23:52] <PMunch> And in the callback populate the failedRequests sequence
[17:23:58] <FromDiscord> <Rika> so an extra seq okay
[17:24:08] <FromDiscord> <Rika> not in the same callback, in the error callback right
[17:24:36] <FromDiscord> <Rika> eh i feel like this could be nicer
[17:25:21] <PMunch> Hmm, yeah I guess it would have to go in the error callback
[17:26:37] *** Joins: arkurious (~arkurious@user/arkurious)
[17:29:43] <FromDiscord> <Clonkk> As anyone heard / used NvChad ? https://github.com/NvChad/NvChad
[17:31:06] *** Joins: xet7 (~xet7@user/xet7)
[17:31:09] <FromDiscord> <Rika> what does it do?
[17:31:55] <PMunch> Well shit.. My server doesn't seem to want to come back up..
[17:32:09] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[17:33:18] <FromDiscord> <PsychoClay> eew lua
[17:34:44] <FromDiscord> <Rika> `if s > size or i + chunkSize == size: size else: s` why the or? s >= size would be true if the other is true is it not?
[17:35:25] <FromDiscord> <Rika> actually no the or is just not needed at all since if s == size it doesnt matter...
[17:35:33] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 276 seconds)
[17:41:17] *** Quits: max22- (~maxime@2a01cb0883359800fbb1a459622bf7d6.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[17:43:22] *** Joins: max22- (~maxime@2a01cb0883359800100d4a38972263fc.ipv6.abo.wanadoo.fr)
[17:46:16] <PMunch> Huh?
[17:47:47] <PMunch> s > size is to cap the last range. i + chunkSize == size is to make sure that if the chunks exactly split the size the last chunk wouldn't do -1 and then lose a byte
[17:48:04] <PMunch> Since it loops to size -1
[17:48:33] <FromDiscord> <PsychoClay> In reply to @PsychoClay "400 = 20 secs,": async 100 = 30 secs, 50mbâ†µasync 200 = 20 secs, 50mbâ†µasync 400 = 10 sec, 60mb
[17:49:05] <FromDiscord> <PsychoClay> def a big improvement
[17:49:19] <FromDiscord> <Rika> In reply to @PMunch "s > size is": then just add 1 to s? s+1 > size?
[17:53:51] <PMunch> Hmm, yeah I guess :P
[17:56:17] *** Quits: max22- (~maxime@2a01cb0883359800100d4a38972263fc.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[17:59:42] <FromDiscord> <Rika> also this naming is awful, i did `s/\<i\>/chunkStart/g` and `s/\<s\>/chunkEnd/g` then removed stop and just did `min(size, ...)`
[17:59:51] <FromDiscord> <Rika> not sure if that's equivalent though, have to check
[18:00:04] <FromDiscord> <Rika> actually, why is it -1?
[18:09:26] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[18:11:17] <PMunch> Why is what -1?
[18:13:05] <PMunch> I originally had min(size, ...) but that had a bad edge case where it would drop the last byte of the file
[18:15:36] <FromDiscord> <fae> what's the difference between `for k, v in table:` and `for k, v in table.pairs`
[18:15:43] <PMunch> Nothing
[18:16:09] <PMunch> The pairs iterator is automatically assumed when you give two variables in a for loop
[18:16:41] <FromDiscord> <fae> but if you only do one variable it returns it as a tuple, hmm
[18:16:51] <PMunch> Yup
[18:17:07] <PMunch> The k, v syntax is just sugar for tuple unpacking
[18:17:28] <FromDiscord> <fae> cool, feels very compact
[18:19:46] *** Joins: pro (~pro@user/pro)
[18:20:10] *** Quits: pro (~pro@user/pro) (Client Quit)
[18:35:37] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:53:07] *** Joins: max22- (~maxime@2a01cb088335980069c4284ac547ce4f.ipv6.abo.wanadoo.fr)
[19:08:42] <FromDiscord> <Chiggy> In reply to @enthus1ast "yep but working": You there?
[19:13:12] *** Quits: nisstyre (~wes@li798-187.members.linode.com) (Changing host)
[19:13:12] *** Joins: nisstyre (~wes@user/nisstyre)
[19:35:23] <FromDiscord> <enthus1ast> want to look at your nimscript tutorials ;)
[19:41:23] <FromDiscord> <Chiggy> In reply to @enthus1ast "want to look at": Huh?
[19:41:27] <FromDiscord> <haxscramper> I have some examples in https://github.com/haxscramper/hack/tree/master/testing/nim/compilerapi and added seveal more
[19:41:37] <FromDiscord> <haxscramper> From peterme.net
[19:43:23] <FromDiscord> <enthus1ast> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: this dynamic execution thing is hard stuff (for me), i want to play around with nimscript first to get more familiar with compiler/vm api
[19:43:42] <FromDiscord> <enthus1ast> at least i fixed the return issue
[19:44:10] <FromDiscord> <haxscramper> yes, the code I linked starts with basic examples
[19:44:18] <FromDiscord> <haxscramper> like hello world
[19:44:18] <FromDiscord> <enthus1ast> yeah i see
[19:47:52] <FromDiscord> <dom96> In reply to @PMunch "<@596976507033747466>, something like this": nice example, but you should really make these changes: template->proc, do not use `waitFor` in an async proc, ever.
[20:16:05] <FromDiscord> <Chiggy> In reply to @enthus1ast "want to look at": What did you mean?
[20:16:18] <FromDiscord> <Chiggy> (edit) "In reply to @enthus1ast "want to look at": What did you mean? ... " 03added "was that msg meant for me"
[20:32:34] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 240 seconds)
[20:33:41] *** Joins: flynn (~mcbloch@user/flynn)
[20:35:43] <FromDiscord> <PsychoClay> is there a way to get n amount of (random) elements from a `HashSet`
[20:37:30] <FromDiscord> <Rika> pop?
[20:37:34] <FromDiscord> <Rika> https://nim-lang.org/docs/sets.html#pop%2CHashSet%5BA%5D
[20:37:37] <FromDiscord> <PsychoClay> hmm yea ig
[20:37:52] <FromDiscord> <Rika> just pop n times
[20:53:52] *** Joins: _KurtGodel (~AdiIRC@45.133.4.153)
[20:56:21] <FromDiscord> <TechnoRazor> If I want to abandon OOP completely, there's just one issue that I can't find a solution to:â†µIn Java or other object-oriented languages, you can keep a list of objects that match a certain interface. Is there any way to do this, or something similar, in Nim? Generics don't work because there's no way to know the type of an object in the list at compile-time.
[20:56:56] *** Quits: KurtGodel (~AdiIRC@180.150.11.50) (Ping timeout: 268 seconds)
[21:00:17] <FromDiscord> <chiggy_> [enthus1ast](https://matrix.to/#/@sn0re:matrix.code0.xyz) you there?
[21:04:11] <FromDiscord> <âƒŸâƒŸ> when i saw that i already noticed hte text is grey
[21:04:43] <FromDiscord> <âƒŸâƒŸ> why would you stare at grey text for extended periods of time
[21:05:00] <FromDiscord> <âƒŸâƒŸ> the comments looks even harder to read
[21:06:02] <FromDiscord> <âƒŸâƒŸ> also i see those bars which look like for a music player
[21:06:05] <FromDiscord> <âƒŸâƒŸ> ....in a text editor
[21:08:33] <FromDiscord> <Rika> what are you talking abou
[21:08:35] <FromDiscord> <tandy> when using the \`poParentStreams\` option, and the \`process.errorStream\`, how do i stop the program from stopping when there is an error? I just want the error to be logged
[21:11:04] <FromDiscord> <haxscramper> In reply to @TechnoRazor "If I want to": You can try using concepts (experimental) or https://github.com/yglukhov/iface
[21:13:28] <FromDiscord> <TechnoRazor> It doesn't look like you can use a concept as a type for a seq, sadly https://media.discordapp.net/attachments/371759389889003532/876868773985022023/unknown.png
[21:13:54] <FromDiscord> <haxscramper> yes, concepts define compile-time interface
[21:14:51] <FromDiscord> <TechnoRazor> Yeah that's the issue
[21:15:46] <FromDiscord> <TechnoRazor> I need some way of storing objects that match a certain interface into an array or seq or something, without their types being known at compile-time
[21:19:25] *** Quits: max22- (~maxime@2a01cb088335980069c4284ac547ce4f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[21:20:27] *** Joins: max22- (~maxime@2a01cb08833598002ba80bdb3117622a.ipv6.abo.wanadoo.fr)
[21:24:23] <FromDiscord> <gerwy> hi, so umm idk where i can post it and i just wanted to show it lolâ†µi made mandelbrot renderer that is using avx2 and also multithreading, again thanks for everyone that helped me :>
[21:24:26] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/876871531727294464/image.png
[21:24:43] <FromDiscord> <haxscramper> In reply to @TechnoRazor "I need some way": then try iface
[21:25:24] <FromDiscord> <everyon> In reply to @Life Sucks "hi, so umm idk": can you post a link please?
[21:27:53] <FromDiscord> <TechnoRazor> In reply to @haxscramper "then try iface": iface seems to work well, thanks!
[21:37:56] <FromDiscord> <gerwy> In reply to @everyon "can you post a": i just wrote it and it works but there are still a lot of issues with it so i don't recommend to use that for anything but yeah its in my tomata projectâ†µhttps://github.com/g3rwy/tomataâ†µits mandel_optim
[21:38:44] <FromDiscord> <gerwy> in near future i could also try to rewrite it in GLSL for even more performance, but raylib shader needs to work for that and it doesn't
[21:40:46] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 272 seconds)
[21:49:10] <FromDiscord> <treeform> In reply to @Life Sucks "hi, so umm idk": That is pretty cool! I also made one recently using shady:
[21:49:12] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/876877765801017384/mandelbrot.png
[21:49:26] <FromDiscord> <treeform> Mine does not look as good.
[21:49:43] <FromDiscord> <treeform> https://github.com/treeform/shady/blob/master/examples/circle.nim
[21:49:58] <FromDiscord> <treeform> https://github.com/treeform/shady/blob/master/examples/mandelbrot.nim
[21:50:16] <FromDiscord> <treeform> But same code runs on both GPU and CPU.
[21:51:15] <FromDiscord> <treeform> How can I make mine look as good as yours?
[21:53:59] <arkanoid> filterIt cannot be used on iterator?
[21:55:37] <FromDiscord> <Rika> sequtils things can only be used on container-like types
[21:55:43] <FromDiscord> <Rika> iterators can be infinite so
[21:55:50] <FromDiscord> <Rika> would need a different implementation
[21:57:34] <arkanoid> got it
[21:58:13] <arkanoid> not sure then why XmlNode "items" proc is an iterator
[21:58:25] <arkanoid> shouldn't the child nodes be finite
[22:00:35] <arkanoid> also: what's this? https://nim-lang.org/1.0.6/sequtils.html#items.i
[22:01:57] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/version-1-4/lib/pure/collections/sequtils.nim#L985 mapit & other explicitly call items so it break everything
[22:02:15] <FromDiscord> <haxscramper> it is not about infinite or finite iterators, it has nothing to do with seqs
[22:02:19] <FromDiscord> <haxscramper> filterit etc.
[22:03:05] <FromDiscord> <haxscramper> In reply to @arkanoid "also: what's this? https://nim-lang.org/1.0.6/sequt": you need this in order to iterate over closure iterator
[22:03:09] <FromDiscord> <haxscramper> idk why this is not in system
[22:03:49] <FromDiscord> <haxscramper> but `let it = (iterator(): int = yield 12)` and `for i in it` probably won't work by default
[22:04:14] <FromDiscord> <haxscramper> ye https://wandbox.org/permlink/Vz6iCJ5xCbIKoc7k
[22:04:17] <arkanoid> I'm just trying to filter out XmlNode according to direct child tag
[22:04:47] <arkanoid> for node in sequtils.items(rootNode).filterIt(it.tag  == "bar"):
[22:05:12] <arkanoid> for node in sequtils.items(rootNode.items).filterIt(it.tag  == "bar"):
[22:05:35] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wc4
[22:06:33] <FromDiscord> <haxscramper> I think there should be a library for composable `collect`-like code, similar to zerofunctional and the thing I described in pattern matching article
[22:06:41] <arkanoid> I think there's something wrong with your paste on nim-lang
[22:06:54] <FromDiscord> <haxscramper> https://wandbox.org/permlink/f6AEg6GLn7ugyqMM
[22:08:15] <FromDiscord> <gerwy> In reply to @treeform "": @treeform oh shit so you are the author of shady hahâ†µi tried to use it too, because GLSL was my target too, but raylib doesn't like it for some reason... (using the mandelbrot from shady examples)
[22:09:56] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:10:15] <FromDiscord> <haxscramper> In reply to @arkanoid "for node in sequtils.items(rootNode.items).filterIt": Though in this particular case you overenginerr stuff `echo parseXml("<a><b/><c/><b/></a>").filterIt(it.tag == "b")`
[22:10:37] <FromDiscord> <haxscramper> `filterIt` implicitly calls items, so you don't need to
[22:11:18] <FromDiscord> <haxscramper> !eval import std/[sequtils, xmltree, xmlparser]; echo parseXml("<a><b/><c/><b/></a>").filterIt(it.tag == "b")
[22:11:24] <NimBot> @[<b />, <b />]
[22:12:33] <FromDiscord> <treeform> In reply to @Life Sucks "<@107140179025735680> oh so you": I never test it with raylib so I don't know. It just produces GLSL code you can inspect it to see what the issues is.
[22:14:37] <arkanoid> k thanks
[22:14:38] <FromDiscord> <gerwy> yeah i tried, i wanted to use the generated glsl file and one issue i think i could have was that i couldn't get or set time uniformâ†µbut idk, if shady won't work for me i can also try to modify julia set example in nimraylib-now
[22:20:28] <FromDiscord> <Rika> didnt realise it worked with closure iterators
[22:20:32] *** Parts: jfrent (~josiah@user/jfrent) (WeeChat 3.1)
[22:20:36] <FromDiscord> <Rika> then the issue is that items() isnt a closure iterator no?
[22:23:16] <FromDiscord> <haxscramper> you mean filterIt?
[22:23:24] <FromDiscord> <haxscramper> "worked with closure iterators"
[22:28:09] <FromDiscord> <Rika> yes the reply didnt seem to work
[22:28:10] <FromDiscord> <Rika> xd
[22:32:12] <FromDiscord> <haxscramper> filterit break with `.items` not because it is a non-closure, but because it calls `items()` explicitly in template, so you get `items(items(X))`, or `items(<some other iterator>)`
[22:32:22] <FromDiscord> <haxscramper> If inline iterators were composable this would be a non-issue
[22:37:35] <FromDiscord> <Chiggy> Hey uh, can anyone help me port some python code into nim? the thing is my code right now is too slow to run in python. And am new to nim, so some help would be appreciated ðŸ˜…
[22:38:06] <FromDiscord> <linux user> do it man
[22:38:11] <FromDiscord> <linux user> let the probkllems in
[22:40:30] <FromDiscord> <Rika> In reply to @haxscramper "filterit break with `.items`": well if `items()` were wrapped in a closure iterator then it would work because of the proc sent above
[22:40:58] <FromDiscord> <Rika> if it were tried with another inline iterator it would not work i assume, doesnt that mean i'm right?
[22:45:33] <FromDiscord> <Rika> In reply to @Chiggy "Hey uh, can anyone": well it would be nice to just have said what you needed help with
[22:46:46] <FromDiscord> <Chiggy> I tried porting the first part (of 3 parts) of my python code to nim, and uhhh, its horribly inefficient. my python code took 2 minutes 15 seconds, and nim version took 11 minutes ðŸ’€. I am now looking into ways I can improve my code
[22:47:00] <FromDiscord> <Chiggy> my python code <https://gist.github.com/Chiggy-Playz/09daa4563f5b7dd0275d92ffbefef60e>
[22:47:02] <FromDiscord> <Rika> well yeah but i mean more
[22:47:03] <FromDiscord> <Rika> okay
[22:47:06] <FromDiscord> <Rika> the nim code?
[22:47:12] <FromDiscord> <Chiggy> gimme a sec lemme upload
[22:48:08] <FromDiscord> <Rika> i didnt realise it is 3 am for me okay well im not sure if i can help
[22:48:13] <FromDiscord> <Chiggy> In reply to @Rika "the nim code?": nim code <https://gist.github.com/Chiggy-Playz/2217d1322cd77527c246c136bead70ee>
[22:48:28] <FromDiscord> <Chiggy> In reply to @Rika "i didnt realise it": oh
[22:48:30] <FromDiscord> <Chiggy> well
[22:48:39] <FromDiscord> <Chiggy> ig I will be stuck on it lol
[22:49:17] <FromDiscord> <Chiggy> does nim have something like python dicts
[22:49:19] <FromDiscord> <Rika> ill look at it and try if i can see anything obvious but ill leave soon
[22:49:24] <FromDiscord> <Rika> yes theyre called tables
[22:49:48] <FromDiscord> <Chiggy> why are they not in here lol https://media.discordapp.net/attachments/371759389889003532/876893018886656041/unknown.png
[22:50:23] <FromDiscord> <PsychoClay> theyre here https://nim-lang.org/docs/lib.html
[22:50:26] *** Quits: max22- (~maxime@2a01cb08833598002ba80bdb3117622a.ipv6.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[22:50:51] <FromDiscord> <Chiggy> ok
[22:51:34] <FromDiscord> <Rika> i dont see anything obviously slow other than probably the `json` module, you might have more luck with another (3rd party) json parser
[22:51:52] <FromDiscord> <Chiggy> the loop is the slowest thing
[22:51:58] <FromDiscord> <Chiggy> its just
[22:52:00] <FromDiscord> <Chiggy> so slow lol
[22:52:34] <FromDiscord> <Chiggy> I am looking into tables
[22:52:36] <FromDiscord> <Chiggy> (edit) "I am looking into tables ... " 03added "r"
[22:52:38] <FromDiscord> <Chiggy> (edit) "r" => "rn"
[22:52:45] <FromDiscord> <Chiggy> hopefully they will help out much more
[22:53:18] <FromDiscord> <PsychoClay> doesnt `client.getContent("ip")`  give any errors?
[22:53:27] <FromDiscord> <PsychoClay> ip isnt a valid url right?
[22:53:27] <FromDiscord> <Chiggy> no?
[22:53:34] <FromDiscord> <Chiggy> I changed the ip on purpose
[22:53:35] <FromDiscord> <Chiggy> duh
[22:53:38] <FromDiscord> <PsychoClay> ahh ok
[22:53:42] <FromDiscord> <Chiggy> wait
[22:53:49] <FromDiscord> <Chiggy> <https://gist.github.com/Chiggy-Playz/09daa4563f5b7dd0275d92ffbefef60e> if you scroll down
[22:53:53] <FromDiscord> <Chiggy> you can see it return
[22:53:54] <FromDiscord> <Chiggy> (edit) "return" => "returns"
[22:54:01] <FromDiscord> <Chiggy> whats present in the `raw_data.json` file
[22:54:35] <FromDiscord> <Rika> In reply to @Chiggy "hopefully they will help": doubt
[22:54:58] <FromDiscord> <Chiggy> ah shit
[22:55:23] <FromDiscord> <Rika> just use a different json library, i feel like it would be faster that way. maybe packedjson?
[22:55:44] <FromDiscord> <Chiggy> is it really the issue of the json lib and not my code?
[22:55:55] <FromDiscord> <Chiggy> like old players gts contains a good amount of jsonnodes. Like 40k+
[22:56:09] <FromDiscord> <Rika> `json` is notorious for being slow so its my suspicion
[22:56:14] <FromDiscord> <Rika> yes
[22:56:27] <FromDiscord> <Rika> if that's so im almost sure its `json` now
[22:56:40] <FromDiscord> <Chiggy> so what do you suggest
[22:56:42] <FromDiscord> <PsychoClay> if you get really stuck u can try the profiling section in this guide: https://nim-lang.org/blog/2017/10/02/documenting-profiling-and-debugging-nim-code.html
[22:56:44] <FromDiscord> <Rika> swap
[22:56:48] <FromDiscord> <Rika> to packedjson
[22:57:01] <FromDiscord> <Rika> or try doing something else, do you really need to copy the whole section?
[22:57:22] <FromDiscord> <Chiggy> huh?
[22:57:30] <FromDiscord> <Rika> if you can avoid doing `player["Old Server"] = player["Server"]` and company then it would probably be quicker
[22:57:40] <FromDiscord> <Chiggy> I have to
[22:57:45] <FromDiscord> <Chiggy> its necesarry
[22:58:00] <FromDiscord> <Chiggy> those 4 lines are important yes
[22:58:00] <FromDiscord> <Rika> then use the different library, i dont see any other way to make this quicker
[22:58:04] <FromDiscord> <Chiggy> which
[22:58:12] <FromDiscord> <Rika> i already told you
[22:58:54] <FromDiscord> <Chiggy> ok
[22:59:34] <FromDiscord> <Rika> im thinking still
[22:59:59] <FromDiscord> <Rika> actually
[22:59:59] <FromDiscord> <Rika> wait
[23:00:06] <FromDiscord> <Rika> @Chiggy wait, maybe try a different GC
[23:00:28] <FromDiscord> <Rika> im not sure if that would help at all because having a massive number of json nodes means a fucktonne of indirection
[23:00:55] <FromDiscord> <Chiggy> I am thinking of converting my json nodes into table key value pairs
[23:01:07] <FromDiscord> <Rika> actually, does it even copy? i dont think that's the issue is it?
[23:01:12] <FromDiscord> <Chiggy> then I can do if table.hasKey instead of this https://media.discordapp.net/attachments/371759389889003532/876895883420135475/unknown.png
[23:01:21] <FromDiscord> <Chiggy> I believe this image above is the issue
[23:01:26] <FromDiscord> <Chiggy> coz like it has to loop 40k every time
[23:01:34] <FromDiscord> <Chiggy> (edit) "every time" => "like 6-7k times"
[23:01:50] <FromDiscord> <Chiggy> would table.hasKey be fast
[23:01:51] <FromDiscord> <Chiggy> (edit) "fast" => "faster"
[23:01:55] <FromDiscord> <Chiggy> I think it will be?
[23:01:57] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:01:57] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:02:00] <FromDiscord> <Rika> what
[23:02:01] *** greaser|q is now known as GreaseMonkey
[23:02:14] <FromDiscord> <Rika> i dont see where haskey would slot in here
[23:02:25] <FromDiscord> <Chiggy> yes sorry
[23:02:32] <FromDiscord> <Chiggy> In reply to @Chiggy "I am thinking of": .
[23:02:34] <FromDiscord> <Chiggy> this is my plan now
[23:02:47] <FromDiscord> <Rika> please note that tables arent like python dictionaries
[23:02:54] <FromDiscord> <Chiggy> uh
[23:03:14] <FromDiscord> <Rika> in the fact that the value is limited to a single type is what i mean
[23:03:20] <FromDiscord> <Chiggy> oh ok
[23:03:21] <FromDiscord> <Chiggy> lmao
[23:03:24] <FromDiscord> <Chiggy> you had me scared
[23:03:25] <FromDiscord> <Chiggy> thats fine
[23:03:33] <FromDiscord> <Chiggy> all my values will be string
[23:03:35] <FromDiscord> <PsychoClay> u can also try the `strtabs` lib if ur only working with strings
[23:03:43] <FromDiscord> <PsychoClay> i think its supposed to be faster
[23:03:55] <FromDiscord> <Chiggy> I don't think I will be working with only strings
[23:03:59] <FromDiscord> <Chiggy> but I will have a look at it
[23:04:02] <FromDiscord> <PsychoClay> in the table i mean
[23:04:20] <FromDiscord> <Chiggy> also, for some reason, as soon as I import nimprof, lots of errors appear
[23:05:22] <FromDiscord> <Chiggy> In reply to @Rika "in the fact that": except that they are pretty much the same right
[23:06:03] <FromDiscord> <Rika> i think so? my brain is thinking of a lot of scenarios and i cant see any difference
[23:06:14] <FromDiscord> <Chiggy> ok
[23:06:23] <FromDiscord> <Rika> other than pythony stuff like how globals is a dict or w/e
[23:09:27] <FromDiscord> <Chiggy> can I have nested table?
[23:09:33] <FromDiscord> <Chiggy> key is string, but value is another tble
[23:09:36] <FromDiscord> <Chiggy> (edit) "tble" => "table"
[23:09:45] <FromDiscord> <PsychoClay> should be fine
[23:09:57] <FromDiscord> <Chiggy> So how do I init such a table?
[23:10:50] <FromDiscord> <PsychoClay> i think its automatic not sure tho
[23:10:57] <FromDiscord> <Chiggy> `initTable[string, initTable[string,string]]()` ?
[23:11:01] <FromDiscord> <Rika> no need to init
[23:11:14] <FromDiscord> <Chiggy> I was just trying to follow this example : https://nim-lang.org/docs/tables.html#basic-usage-table
[23:11:57] <FromDiscord> <Rika> `initTable[string, Table[string, string]]()`
[23:12:09] <FromDiscord> <Rika> `Starting from Nim v0.20, tables are initialized by default and it is not necessary to call this function explicitly.`
[23:12:12] <FromDiscord> <Rika> https://nim-lang.org/docs/tables.html#initTable
[23:12:32] <FromDiscord> <Chiggy> so how do I create a blank table
[23:12:41] <FromDiscord> <Chiggy> just `var t = {}.toTable` ?
[23:12:43] <FromDiscord> <Rika> the table is blank by default
[23:12:45] <FromDiscord> <PsychoClay> sent a code paste, see https://play.nim-lang.org/#ix=3wcx
[23:13:04] <FromDiscord> <Chiggy> Ok
[23:13:06] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3wcy
[23:13:35] <FromDiscord> <Rika> it is pushing 4 am
[23:13:37] <FromDiscord> <Rika> i forgot
[23:13:49] <FromDiscord> <Chiggy> you should sleep
[23:13:53] <FromDiscord> <PsychoClay> how are u even awake lol
[23:13:56] <FromDiscord> <Chiggy> I appreciate your help ðŸ™‚
[23:14:50] <FromDiscord> <Rika> In reply to @PsychoClay "how are u even": short story is that ive been doing this for years now because of the schools i attend (prestigious therefore pretty intense)
[23:15:12] <FromDiscord> <PsychoClay> that sucks
[23:19:04] <FromDiscord> <Chiggy> Ok uh somethings going wrong here
[23:19:12] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/876900416300941322/unknown.png
[23:19:32] <FromDiscord> <Chiggy> this is how I defined old_players_gts var old_players_gts : Table[string, Table[string, string]]
[23:19:38] <FromDiscord> <Chiggy> (edit) "var" => "`var" | "string]]" => "string]]`"
[23:20:34] <FromDiscord> <PsychoClay> Put a getStr after x[name]
[23:21:53] <FromDiscord> <Chiggy> oh yeah thans
[23:21:54] <FromDiscord> <Chiggy> (edit) "thans" => "thanks"
[23:21:55] <FromDiscord> <Chiggy> btw
[23:22:02] <FromDiscord> <Chiggy> can I just do `$x["Name"]`
[23:22:14] <FromDiscord> <PsychoClay> I dont think so
[23:22:51] <FromDiscord> <PsychoClay> I think that gives the string representation of the jsonnode
[23:23:05] <FromDiscord> <Chiggy> oh ok
[23:26:40] *** Quits: dsrw (~dsrw@134.41.79.252) (Ping timeout: 240 seconds)
[23:27:08] *** Joins: SebastianM (~seba@user/sebastianm)
[23:33:48] <NimEventer> New thread by Martin: Newbie kick-in-the-pants: nim as a cgi application, see https://forum.nim-lang.org/t/8331
[23:37:25] *** Joins: max22- (~maxime@2a01cb0883359800aa22ac7030ebf881.ipv6.abo.wanadoo.fr)
[23:38:03] *** Joins: dsrw (~dsrw@134.41.79.252)
[23:38:22] <FromDiscord> <tandy> is it possible to "subtract" two sorted seqs in nim?
[23:38:22] <FromDiscord> <tandy> to get the difference / missing items?
[23:42:38] <FromDiscord> <exelotl> there's probably not a built-in method for it
[23:45:04] *** Joins: rockcavera (~rc@192.12.115.217)
[23:45:04] *** Quits: rockcavera (~rc@192.12.115.217) (Changing host)
[23:45:04] *** Joins: rockcavera (~rc@user/rockcavera)
[23:46:04] <FromDiscord> <Chiggy> if I define a variable inside a for loop, it will not be accessible out of the lop right? and will be destroyed when loop is done?
[23:48:52] <FromDiscord> <haxscramper> yes
[23:49:18] <FromDiscord> <haxscramper> For loop variables are not exactly "created", so I'm not sure if they would trigger destructor
[23:49:34] <FromDiscord> <Chiggy> yeah destruction actually doesnt matter much in this case
[23:49:44] <FromDiscord> <haxscramper> i.e. for loop variables are not copied from container
[23:50:00] <FromDiscord> <Chiggy> and also one more question
[23:50:26] <FromDiscord> <Chiggy> I have a table. Printing it would be horrible since its really big. How can I save it into a file?
[23:51:12] <FromDiscord> <haxscramper> You want to serialize or just print to the file?
[23:51:32] <FromDiscord> <haxscramper> priting to file would be `"myFile".writeFile($table)`
[23:51:34] <FromDiscord> <Chiggy> Like, for debugging purposes, I would like to see the contents of the table
[23:51:44] <FromDiscord> <Chiggy> but its really big to echo
[23:51:50] <FromDiscord> <Chiggy> In reply to @haxscramper "priting to file would": ok
[23:56:29] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
