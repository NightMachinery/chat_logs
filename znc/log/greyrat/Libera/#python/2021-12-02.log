[00:00:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a) (Ping timeout: 256 seconds)
[00:02:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:02:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:02:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:06:18] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[00:07:44] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:07:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:08:01] *** Joins: grooverman (~grooverma@177.95.12.14)
[00:08:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:08:31] *** Quits: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58) (Remote host closed the connection)
[00:08:36] *** Joins: kostkon_ (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[00:10:11] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[00:10:19] <jfcaron> I'm having trouble with the "hid" module from pip (pyhidapi on github).  I can install the python bits, but I need to manually install libusb/hidapi.  I'm on Windows 10 and the release is just a .dll file, but I can't figure out where to put it.  When I do "import hid" in python it says it can't find the .dll.
[00:10:49] <kevr> probably just put it in $PYTHONPATH
[00:11:00] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[00:11:13] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:11:20] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:11:43] <jfcaron> I don't think I have a $PYTHONPATH on windows.  If I add it to the sys.path list after starting python it still doesn't find it though.
[00:11:48] <kevr> you must
[00:11:56] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[00:11:58] <kevr> it's where python looks for its packages and modules
[00:12:06] <kevr> if you didn't have one, you would have no packages or modules
[00:12:12] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[00:12:40] <kevr> python probably sets it though when you run it, it's not just set outside of that environment
[00:12:42] <kevr> let's see..
[00:12:52] <jfcaron> The list of environment variables shown to me by windows doesn't include PYTHONPATH, but I'm not a windows expert.
[00:12:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:13:04] <kevr> it's not exposed outside of python unless you set it
[00:13:21] <kevr> if it's empty, it just uses whatever python decides is the default pythonpath
[00:13:28] <kevr> depends on the install
[00:13:40] <jfcaron> Ah, I'll google a bit about windows pythonpath.
[00:13:42] <jfcaron> Thanks.
[00:13:56] <jfcaron> Why would it not work with sys.path.append?
[00:13:59] <kevr> kinda crazy, i am currently, i can't find any top-result simple answers
[00:14:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:14:09] <kevr> it _should_
[00:14:27] <kevr> python populates sys.path with pythonpath, so if you append to that, it's just adding another path to the set
[00:14:36] <jfcaron> Right
[00:14:38] *** Joins: fikran (~fikran@user/fikran)
[00:14:39] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Read error: Connection reset by peer)
[00:14:47] <jfcaron> Maybe the hid module isn't importing in a standard way?
[00:14:59] <jfcaron> I mean it's a .dll not a .py thing that it fails to find.
[00:15:04] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:15:08] <kevr> shouldn't matter
[00:15:20] <kevr> on linux, it's produces as an .so, and you can load modules or packages via .so
[00:15:41] <kevr> if you had, say, hid.so that was a C extension, `import hid` would load up that hid.so if it's the first module it finds that matches.
[00:15:53] <kevr> .dll is window's version of .so
[00:16:25] <jfcaron> Right.  I've got a .dll, a .lib, and a .pdb
[00:16:43] <kevr> though, just to put this out there, maybe there is something different about it on Windows that I'm just not aware of.
[00:16:59] <kevr> Just speaking on the standard extension loading practices in Linux.
[00:17:00] <jfcaron> I'm also using the Windows Store version of python too, maybe that was a bad idea.
[00:17:14] <kevr> where is it installed?
[00:17:45] <jfcaron> 'C:\\Users\\Simmons\\AppData\\Local\\Microsoft\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\python.exe'
[00:18:05] <kevr> let's try a hack real quick, if you're down?
[00:18:05] *** Joins: nyah (~nyah@94.6.71.219)
[00:18:23] <jfcaron> sure
[00:18:31] <kevr> Put hid.so inside of that long ass directory.
[00:18:36] <kevr> err, hid.dll, hid.lib, etc
[00:18:52] <kevr> then run python fresh and try to import hid?
[00:20:07] <jfcaron> nope, ImportError
[00:20:13] <kevr> it does sound pretty odd that sys.path.append doesn't work at all
[00:20:16] <kevr> alright, let's see..
[00:20:24] <jfcaron> And it's not hid.dll, it's hidapi.dll
[00:20:27] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[00:20:30] <jfcaron> "Unable to load any of the following libraries:libhidapi-hidraw.so libhidapi-hidraw.so.0 libhidapi-libusb.so libhidapi-libusb.so.0 libhidapi-iohidmanager.so libhidapi-iohidmanager.so.0 libhidapi.dylib hidapi.dll libhidapi-0.dll"
[00:20:31] <kevr> if you print out sys.path in python
[00:20:37] <kevr> what's its output?
[00:21:07] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[00:21:12] <kevr> jfcaron: okay, try to import `hidapi`?
[00:21:12] <jfcaron> https://paste.debian.net/1221566/
[00:21:24] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[00:21:25] <kevr> ahhh
[00:21:27] <kevr> here
[00:21:28] <jfcaron> ModuleNotFoundError: No module named 'hidapi'
[00:21:40] <jfcaron> oh hey
[00:21:43] <jfcaron> foo/DLLs
[00:21:47] <jfcaron> maybe I should put it there, lol
[00:21:57] <kevr> yeah, try that out
[00:22:03] <kevr> try sticking with the non-Users one if you can
[00:22:09] <kevr> C:\Program Files\...
[00:22:30] <jfcaron> I love how one of them is C:\users with lowercase U.
[00:22:34] <kevr> :P
[00:22:56] <kevr> sorry by the way, i don't really know much of anything about windows, so i'm kinda trying to help mostly blind here >_>
[00:23:14] <jfcaron> Yeah me too.
[00:23:25] <jfcaron> oh gdi, windows won't let me put files there cuz it's system stuff
[00:23:38] <kevr> then
[00:23:42] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[00:23:54] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[00:23:56] <kevr> try putting it here: 'C:\Users\Simmons\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages'
[00:24:09] <grym> jfcaron: the reasonable thing to do here, perhaps, is to tell py.exe to make you a venv somewhere you have write permissions
[00:24:16] <grym> and then install things there
[00:24:24] <kevr> ++
[00:24:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:24:40] <grym> leaving the base python alone, even on windows, is usually sage advice
[00:25:02] <SnoopJ> montpol, NaN is the main one to watch out for, it is tempting to treat it like a number, but rarely correct
[00:25:14] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[00:25:27] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:25:49] <grym> nasssty little in-band signalses, precious
[00:26:18] *** Quits: j1mu5 (~j1mu5@user/j1mu5) ()
[00:26:20] <SnoopJ> grym, how else would you indicate something went wrong?
[00:26:32] <jfcaron> Maybe I should do that.  But this is supposed to be one piece of a big software suite we use internally, and none of the existing setup instructions use venvs...=\  For testing I'll try it.
[00:27:16] <grym> ZeroDivisionError?  we don't always nan things that go boom, nor (sigh) do we use nans exclusively to represent nonsensical states
[00:27:25] <kevr> jfcaron: did the site-packages folder not work?
[00:27:34] <grym> so there's some semantic ambiguity and it's a long-standing burr fo rme
[00:27:35] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:65e0:60ad:e6c4:7bc0) (Quit: Konversation terminated!)
[00:27:40] *** Quits: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com) (Quit: Leaving)
[00:27:53] <kevr> if you get passed this, i personally would try to utilize the python package manager in windows, whatever it is, to install the extension
[00:28:09] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 252 seconds)
[00:28:12] <kevr> in a clean system, the python package manager should deal with installing stuff.
[00:28:20] <kevr> or your base os packages
[00:28:23] <jfcaron> This .dll is not available through pip.
[00:28:34] <kevr> But you can build an extension with pip locally.
[00:28:39] <kevr> `pip install .`
[00:28:49] <jfcaron> oh
[00:28:51] <kevr> as long as there's a setup.py
[00:29:22] <jfcaron> It's github.com/libusb/hidapi
[00:29:52] <SnoopJ> grym, what about valid operations that result in a NaN?
[00:30:08] <kevr> of
[00:30:10] <kevr> oof*
[00:30:13] <SnoopJ> grym, surely those aren't errors
[00:30:41] <kenwoodfox> Ive been building a little project with python and ffmpeg, part of my project is i want to use purely PIL to maniuplate a static image, updating it maybe once per 5 second interval, sometimes faster sometimes slower but never like, really fast like 25fps, 1fps updates at a max. Anyway, my current system has pil generate and save an image, and an ffmpeg process streams it into an flv rtmp video i can stream to my livestream service
[00:30:51] <SnoopJ> the result just isn't representable, and NaN is there to represent *that*
[00:30:56] <kevr> jfcaron: okay, hold on.
[00:31:00] <SnoopJ> (or more properly, NaNs in their several flavors)
[00:31:03] <kenwoodfox> There are some problems, ffmpeg -loop dosent update the image so it has to be stopped and started again via python every time and its messy :c
[00:31:11] <kevr> that repo says that the windows backend is hid.dll
[00:31:16] <kevr> but you're saying you're trying to use hidapi.dll
[00:31:22] <kevr> it could be that
[00:31:33] <kevr> you need a system library hidapi.dll to build hid.all and use it.
[00:31:37] <kenwoodfox> is there a better way to do this? maybe stream from pil in a video format and have ffmpeg convert it? I was thinking maybe mjpeg could do that but, ive not heard of anybody else attempting what im trying
[00:31:37] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 256 seconds)
[00:31:59] <kevr> hmm..
[00:32:00] <grym> SnoopJ: several things things here.  There's the quiet/signalling nan use distinction, which is fair and what i think you're talking about; there's also the use of nan to pad and avoid ragged arrays, which is (ideally) what like pd.NA is for; and then there's just my personal twitch every time i remember that the type of the thing that is named "not a number" is float.
[00:32:29] <grym> juggling those things is mental work, and i'm grumbling about it
[00:32:33] <kevr> jfcaron: hidapi and hid are both on pypi
[00:32:34] <SnoopJ> grym, I am saying that if your answer is "raise an exception instead of using NaN" then my response is "that is incorrect behavior in some uses we have for NaNs"
[00:32:40] <SnoopJ> and I can't think of any ways to address *those* cases that aren't in-band
[00:32:46] <aphysically> I think I'll stop playing with the AoC here, this is distilled down to the functions most likely to show up in a future question that I already want defined for speed reasons I think https://bpa.st/YS2A
[00:32:49] <grym> i am not suggesting a replacement of use
[00:33:01] <SnoopJ> no, indeed not, just saying the one everybody uses is bad :P
[00:33:12] <grym> i am not doing that either, thank you
[00:33:19] <kevr> they totally removed some windows doc though from their readme
[00:33:27] <SnoopJ> grym, perhaps I am misunderstanding what is meant by "nasty" then
[00:33:54] <jfcaron> kevr: I have those of those python packages installed through pip, that's why I don't get "this isn't a module" erorr, but the hid module requires the user to manually install the hidapi.dll.  On Linux it's done through apt.
[00:33:59] <grym> you asked >how else would you indicate something went wrong, and i provided an example situation where python has a different indicator that something went wrong.
[00:34:13] <kevr> jfcaron: I getcha.
[00:34:37] <kevr> jfcaron: https://stackoverflow.com/questions/62620247/how-to-determine-where-to-install-hidapi-dll
[00:34:40] <SnoopJ> grym, "went wrong" isn't really describing how ZeroDivisionError works, though, that's LBYL
[00:34:48] <kevr> can you try both answers there?
[00:34:53] <ali1234> kenwoodfox: ffmpeg can accept raw pixels (ie RGB888 stream) this avoids saving individual files as its all in memory
[00:34:53] <SnoopJ> and I'm unsure how to do that for e.g. overflow/underflow
[00:34:53] <kevr> both relatively simple
[00:35:06] *** Quits: hemstock (~hemstock@194.59.250.234) ()
[00:35:17] <jfcaron> Yeah I tried those yesterday. =(
[00:35:22] <ali1234> kenwoodfox: and less conversions between different formats
[00:35:41] <ali1234> i have some code somewhere to do this but it is C not python, but the idea is that same, let me find it...
[00:35:41] <kenwoodfox> ali1234: that sounds awesome! how would i implement that though?
[00:35:44] <SnoopJ> grym, in other words, NaN does *not* unambiguously mean "what you did was wrong"
[00:35:47] <kevr> hmm..
[00:35:52] <kenwoodfox> ali1234: thanks so much! id love to see it!
[00:35:54] <ali1234> actually i might have a python version too let me check
[00:36:05] <kevr> jfcaron: what's the exact import error you get?
[00:36:06] <greyblue9> sometimes EAFP
[00:36:34] <kenwoodfox> Cuz, i dont wnana do this https://superuser.com/questions/742724/looping-on-image2pipe-with-ffmpeg if i can avoid it, thats the method imdoing now
[00:36:38] <ali1234> kenwoodfox: basically the trick is to popen ffmpeg and then write frames into the pipe
[00:36:41] <kenwoodfox> ali1234: :0 that would be so amazing
[00:36:42] <SnoopJ> right, and NaN is in its weird little way actually a form of EAFP: when the result is unrepresentable, you use the value that says "that's unrepresentable"
[00:36:44] <kenwoodfox> ali1234: hm ok
[00:36:49] <SnoopJ> and the user picks up the pieces
[00:36:54] <SnoopJ> (hopefully)
[00:36:58] <grym> SnoopJ: yes, i know it doesn't, and that's what i don't like about in-band signalling
[00:37:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[00:37:04] <kevr> Maybe I should just boot over to Windows.
[00:37:23] <SnoopJ> grym, and if you have any other ways to solve the problem that aren't in-band, I'm interested to hear them, because I'm not aware of any
[00:37:33] <grym> SnoopJ: i don't have any; that's why i'm grumbling
[00:37:37] <SnoopJ> at least not any that will hold a candle to floats on silicon
[00:37:51] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[00:38:01] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[00:38:05] <jfcaron> kevr 1 sec, having trouble copy & pasting from this remote desktop
[00:38:08] <grym> (except, well, python does do other things for illegal operations; there are, i believe, other languages where 0/0 _is_ nan)
[00:38:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:38:46] <jfcaron> kevr: https://paste.debian.net/1221567
[00:38:47] <grym> a broader use of something like pandas' NA would be good for many reasons; this sort of thing could be one of them
[00:38:55] <SnoopJ> my point is that "illegal operations" is only a subset of what it does
[00:39:01] <grym> yes _i know_
[00:39:04] <greyblue9> or `Infinity`
[00:39:23] <jfcaron> In gnuplot hilariously it just ignores any data points with NaN, so a common trick there is to divide by zero to filter data you don't want on your plot.
[00:39:28] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[00:39:34] <grym> jfcaron: thanks, i hate it
[00:39:34] <SnoopJ> matplotlib does the same thing
[00:39:47] <kevr> jfcaron: i think the issue here is that hid.dll can't actually resolve the libhidapi libraries
[00:39:57] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[00:40:19] <SnoopJ> grym, I guess what bothers me is that the implication here is "in-band bad" and that irks me
[00:40:21] <jfcaron> Isn't hid.dll a windows-provided thing?
[00:40:43] *** Joins: jazzy (~jaziz@user/jaziz)
[00:40:53] <kevr> doesn't matter where it came from, it can't resolve the libraries it depends on
[00:40:55] <grym> that's hardly an implication; i'm saying it straight out.  it's distasteful, all the more because there haven't emerged any better answers
[00:41:04] <SnoopJ> metadata bad, I guess
[00:41:08] <ali1234> kenwoodfox: here's a C++ version of it https://bpa.st/GTDA
[00:41:10] <grym> sindar tones are fine, but ... otherwise, i'm very leery on it
[00:41:15] <kevr> hid.dll implements the module you're trying to load, and that module depends on libhidapi libraries that it can't load.
[00:41:20] <ali1234> kenwoodfox: avconv is 99% the same as ffmpeg
[00:41:21] <jfcaron> kevr: I thought the dependency was the other way around, that hidapi.dll needed to find hid.dll?
[00:41:23] <grym> quindar?
[00:41:36] <kevr> jfcaron: don't believe so, no.
[00:41:36] <grym> apparently i'm more LoTRish today than i was aware
[00:41:39] <SnoopJ> grym, I don't know if "saying it straight out" is the same thing as leery :P
[00:41:53] <grym> unrelated
[00:41:55] <SnoopJ> it's complicated and a mess, and also sometimes a great way to solve problems
[00:41:59] <kevr> i could be wrong, but you're importing `hid` here, which would import `hid.dll` if it was resolved
[00:42:05] <jfcaron> God I hate how any google search for anything dll-related is just a bunch of virus download sites.
[00:42:13] <grym> jfcaron: still?!
[00:42:14] <SnoopJ> which is strangely related to the tagged pointer thingy that MicroPython does that I had my head stuck in earlier
[00:42:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:42:39] <kevr> brb, i'm gonna hop on windows and look at this
[00:42:42] <greyblue9> "Download free dlls.com"
[00:42:42] <kenwoodfox> ali1234: thank you so much omg~ im gonna have to figure out how to do this in python but, im excited~
[00:42:47] *** Joins: Elzington (~Elzington@static-68-235-44-76.cust.tzulo.com)
[00:42:59] <SnoopJ> (apparently the lowest 3 bits differentiate between 3 types of objects, ints, strings, and everything else, so MicroPython's objects are exactly 8 bytes full stop)
[00:43:29] <ali1234> kenwoodfox: almost exactly the same, popen(encoder command) then write RGB888 pixels into the pipe you get back
[00:43:56] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[00:44:07] <jfcaron> kevr: No I think "import hid" imports a *python* module that is in site-packages\hid\__init__.py and then that looks for hidapi.dll (which internally calls on functions from the windows hid.dll, unrelated to the python module "hid").  I think.
[00:44:12] <ali1234> you'll probably end up getting reversed colours or upside down image the first few tries, that can be overcome with extra params on the encoder command
[00:44:41] <kenwoodfox> ali1234: ill try playing around with this and let you know how it goes~ just to psudocode what i want to do, i need to generate an image, then convert it to RGB888, witch i can pipe into a running popen() stream?
[00:44:49] <kenwoodfox> ali1234: heh oki~
[00:44:50] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:45:11] *** Joins: Knaxius (~Knaxius@herzlichweise.de)
[00:45:26] <ali1234> kenwoodfox: yeah - or whatever format your images are in memory (as long as it isn't palette)
[00:45:34] <kevr> jfcaron: what does `which python` say in Git bash?
[00:45:38] <jfcaron> kevr: See the beginning of: https://github.com/apmorton/pyhidapi/blob/master/hid/__init__.py
[00:45:42] <kevr> or any terminal that supports which
[00:45:53] <kenwoodfox> Im doing a lot of drawing on them it may be pallete imnot sure yet, ali1234
[00:46:03] <kevr> jfcaron: oof.
[00:46:19] <ali1234> if so PIL can convert the pixel format
[00:46:23] <kenwoodfox> ali1234: oki~
[00:46:56] <jfcaron> Maybe ctypes.cdll.LoadLibrary uses a different path.
[00:46:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:47:19] <greyblue9> it just says hid.dll on the MSDN page
[00:47:32] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[00:47:35] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[00:47:36] <kevr> jfcaron: do you use WSL?
[00:48:14] <jfcaron> I'm doing all this through PowerShell but I do have WSL2 installed.
[00:48:29] <Boarders_> Hi, I am not familiar with python, I have a data frame and I want to basically do something of the form: select all rows which in column 'a' that have value '1' or in column 'b' have value '1', could any of you give me some ideas how you do it?
[00:48:38] <jfcaron> But this needs to be non-WSL because it has to fit into our existing software suite.
[00:48:51] <Boarders_> I can do it for one column just like df[df['a'] = 1]
[00:49:31] <SnoopJ> Boarders_, how is this? `idx = (df.a == 1) | (df.b == 1); selected_rows = df.iloc[idx, :]`
[00:49:49] <greyblue9> a bit surprised it doesn't use windll
[00:49:58] <greyblue9> or oledll
[00:50:20] <jfcaron> I guess it's trying to be cross-platform.
[00:50:28] <jfcaron> Without actually detecting the platform.
[00:51:15] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[00:51:35] <Boarders_> SnoopJ: how do I go about using that .a if the column is called something like 'current year' for example?
[00:52:13] *** Joins: grooverman (~grooverma@177.95.12.14)
[00:54:17] *** Quits: falkor (~falkor@90.242.155.158) (Ping timeout: 256 seconds)
[00:54:46] <jfcaron> Thanks for the help kevr.  I have to leave the computer for now, but send a PM if you have any more ideas.
[00:55:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a)
[00:55:26] *** Joins: genoobie (~genoobie@pool-74-110-61-101.bflony.fios.verizon.net)
[00:55:43] <SnoopJ> Boarders_, replace with `idx = (df["current year"] == ...) | (other_index)` and so on. The concept here is that each comparison results in a Series object, and we OR them together with the `|` operator to build the index that will be used in the end
[00:56:08] <SnoopJ> df.colname is pretty much the same as df["colname"] but the latter can do more :)
[00:56:52] <ali1234> kenwoodfox: i remembered why my python version is: https://github.com/ali1234/ugly/blob/master/ugly/drivers/virtual/ffmpeg.py
[00:56:52] <Swayze> :-o
[00:57:13] <ali1234> note the different pixel format
[00:57:52] <kevr> jfcaron: where did you get hid.dll from?
[00:57:57] <kevr> it's not in the hidapi-win.zip archive
[00:58:11] *** Joins: ianliu (~ianliu@177.188.85.182)
[00:58:14] <SnoopJ> Boarders_, oh sorry, it should be .loc not .iloc
[00:58:18] <kenwoodfox> ali1234: ah omg, thank you so much, im excited to learn and implement this if i can~ this is gonna be so cool!
[00:58:40] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:54ac:14f0:5fcb:286d)
[00:58:57] *** Quits: jpic (~jpic@82.142.20.182) (Ping timeout: 252 seconds)
[00:59:02] <ali1234> i can't remember why i did it like this - writing png frames into ffmpeg?
[00:59:03] <SnoopJ> Boarders_, here it is one step at a time: https://bpa.st/RF4A
[00:59:05] *** Joins: djapo (~archangel@user/djapo)
[00:59:09] <ali1234> but it works anyway
[00:59:13] <kevr> their doc for windows is... almost non-existent these days
[00:59:15] <kevr> the hell
[00:59:19] <ali1234> you can see the idea is exactly the same with popen
[00:59:44] <kenwoodfox> ali1234: it looks good to me, and yeah i see what you mean, im really excited~ ill try and see if i can get this working then i can try changing it up for my streaming service
[00:59:52] <kenwoodfox> you rock
[00:59:54] <SnoopJ> Boarders_, I also *strongly* encourage you to capture complicated indices to a good name like this, it's very very easy to do too much on one line otherwise, and indices end up being reusable pretty often anyway, so it's good practice.
[01:00:02] <ali1234> imbuf is a numpy array with pixels but it uses PIL to convert that before writing
[01:00:32] <ali1234> `-r 30` is the framerate of the result
[01:01:09] <kenwoodfox> ali1234: its a little hard to follow cuz i think a bunch of this is part of the parent class, like .convert_buffer()
[01:01:17] <Boarders_> thank you @SnoopJ, that is so helpful
[01:01:29] <kenwoodfox> but that makes sense ok, pil object, save it.. into the pipe
[01:01:32] <kenwoodfox> thats interesting :3
[01:01:33] <kenwoodfox> this looks fun~
[01:01:34] <ali1234> kenwoodfox: yes, but that isn't applicable to you because you already have a PIL image
[01:01:41] <kenwoodfox> ali1234: exactly yeah~ oh this is sweet :3
[01:01:41] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[01:01:49] <kenwoodfox> ali1234: ill keep u up to date, again thanks so much~
[01:01:52] <ali1234> anyway all of the code is there in that repo if you want to look
[01:02:37] *** Joins: Mindscape (~Lindis@user/lindis)
[01:02:58] <kenwoodfox> ali1234: you rock!
[01:03:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:03:59] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:04:49] <kevr> my wsl install wont even give me make, lol
[01:04:50] <kevr> wtf
[01:05:03] <kevr> gah, forget this; back to Linux.
[01:05:07] <ali1234> apt install it?
[01:05:11] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[01:05:16] <kevr> yep, i did
[01:05:24] <kevr> something's fucked
[01:05:24] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:05:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[01:05:34] *** guenhael1 is now known as guenhael
[01:05:42] <ali1234> hmm, don't know then. it usually works for me. linux is a whole lot easier though...
[01:05:42] <SnoopJ> you could ask #windows-wsl about that, maybe
[01:06:15] <kevr> Forget it. :P
[01:07:14] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[01:09:38] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:10:09] *** Quits: baltazar (~baltazar@185-29-82-78.pool.digikabel.hu) (Ping timeout: 256 seconds)
[01:10:09] <kenwoodfox> ali1234: https://kitsunehosting.net/gitea/Kenwood/lewis-crawler/raw/branch/ffmpeg-pipe/companion_software/video.webm
[01:10:13] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:10:34] <ali1234> looks good :)
[01:10:40] <kenwoodfox> ali1234: Hehe!
[01:10:53] <kenwoodfox> ali1234: i had no clue it would be this easy, this shaves like 300 lines of code
[01:10:58] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[01:11:01] <kenwoodfox> ali1234: you're a lifesaver
[01:12:01] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[01:12:25] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[01:13:02] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 256 seconds)
[01:14:09] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[01:14:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 252 seconds)
[01:14:33] *** Joins: jazzy (~jaziz@user/jaziz)
[01:15:13] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[01:15:23] <greyblue9> the build.md says there's a single source file to build (hid.c) as the backend, maybe you can just build that from scratch , and link that with the hidapi stuff into a single .dll that ctypes will be able to find
[01:15:32] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[01:16:03] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Client Quit)
[01:16:25] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:16:59] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[01:17:02] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:19:10] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[01:20:58] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[01:22:53] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[01:23:25] *** Joins: foxbox (~cammy@user/cammy)
[01:25:36] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[01:25:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[01:27:26] <Helenah> Damn stressed
[01:27:36] <Helenah> Just 1min while I get my head straight to ask my question...
[01:27:59] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[01:28:12] <greyblue9> the vcxproj also depends on setupapi.lib, which i think means it would look for setupapi.dll at runtime
[01:28:27] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:30:27] *** Joins: baltazar (~baltazar@87-97-23-118.pool.digikabel.hu)
[01:33:23] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[01:33:58] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[01:34:14] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.3)
[01:34:45] *** Quits: genoobie (~genoobie@pool-74-110-61-101.bflony.fios.verizon.net) (Quit: Client closed)
[01:35:13] *** Quits: sazawal (~sazawal@223.190.82.88) (Quit: Leaving)
[01:35:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:35:41] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[01:35:59] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[01:36:04] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Client Quit)
[01:36:28] <Helenah> I have a sqlite link table containing id (primary key), uid (not null) and gid (not null) in that exact order. I have a users table which has id (primary key) username (not null) in that order and a users table which has id (primary key) and groupname (not null) in that order. In the links table when an entry is added, the uid corresponds to an id in the users table and the gid to an id in the
[01:36:29] <Helenah> groups table. What I'm wanting to do is list groups which a user is a member of but I feel like I'm banging my head but know I'm almost there however I'm at a point now where I'm simply getting no results and that links table is definitely populated with data corresponding to the user I'm querying about. Here is some code: https://termbin.com/05og I've been trying for 2 days now at the same bit of
[01:36:31] <Helenah> code (if's and for's) but my head keeps going numb to the point where I forget my last line of code and why I wrote it.
[01:36:46] <Helenah> Maybe I'm overcomplicating this and that's why my head falls off?
[01:36:47] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[01:38:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[01:38:37] <Helenah> Damn
[01:38:39] <Helenah> fuck
[01:38:41] <Helenah> I di
[01:38:43] <Helenah> nvm
[01:38:43] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[01:38:45] <Helenah> efsdf
[01:38:58] <Helenah> Do any of you get what I call coders stress? And how do you deal with it?!
[01:39:12] <SnoopJ> Helenah, a break, usually
[01:39:18] <Helenah> I didn't list all my code... that was relevant...
[01:39:20] <SnoopJ> one with a walk attached if I can help it
[01:39:35] <Helenah> as well as spoke about a users table twice... when the second time it's groups table...
[01:39:38] <grym> Helenah: https://stackoverflow.com/a/59039243  faith that whatever state i'm in now i'll be in the other one soon enough
[01:39:46] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[01:40:05] <grym> experience doesn't really affect the distribution of states so much as it shores up that faith of transition
[01:40:29] <Helenah> I'm not employed doing this but I seem to be coding 24/7 and fighting my brain whether it likes it or not to achieve goals and milestones, am I abusing myself?
[01:40:42] <SnoopJ> "whether it likes it or not" does sound like self-abuse, yes
[01:40:44] *** Joins: djapo (~archangel@user/djapo)
[01:40:54] <SnoopJ> or at least not very much like self-compassion
[01:41:11] <Helenah> Like I wrote 800 lines of code in 3 days THREE DAYS
[01:41:18] <Helenah> Can you believe that? complicated code...
[01:41:46] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[01:42:11] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Client Quit)
[01:42:16] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:42:34] <Helenah> I tried taking breaks but I feel like I have a code addiction like I keep getting dragged back to the terminal to code by an urge of my own brain...
[01:42:59] <Helenah> Maybe I should set out some small coding puzzles as breaks, eh?
[01:43:25] <grym> The Jazz is real, especially in the beginning
[01:43:38] <Helenah> Is there an offtopic channel or am I fine to talk about this here?
[01:43:47] <SnoopJ> there's #python-offtopic
[01:43:50] <Helenah> I think it's important developers can express their coding stresses to each other.
[01:43:52] <Helenah> Oh thanks :D
[01:44:12] *** Quits: abip20 (~abdullah@user/abip20) (Ping timeout: 256 seconds)
[01:44:35] *** Joins: nomic (~nomic@185.198.243.158)
[01:45:23] *** Stench is now known as Staunch
[01:46:06] *** Joins: Throgkt (~Throgkt@user/throgkt)
[01:46:48] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[01:47:41] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[01:47:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:48:10] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[01:49:33] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:50:06] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[01:50:18] *** Joins: Alleria (~textual@user/alleria)
[01:50:19] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:51:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:51:56] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:52:30] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[01:54:57] *** Quits: delvian (~delvian@41.13.212.200) (Quit: Leaving)
[01:56:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.133) (Read error: Connection reset by peer)
[01:56:36] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:57:04] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:57:15] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[02:00:24] *** Quits: NeoCore (~neocore@160.238.38.93) (Quit: Leaving)
[02:00:26] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[02:00:33] *** Quits: Alleria (~textual@user/alleria) (Quit: Textual IRC Client: www.textualapp.com)
[02:01:21] *** Joins: delvian (~delvian@41.13.212.200)
[02:01:33] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[02:01:43] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[02:03:32] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[02:03:46] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[02:03:51] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[02:04:15] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[02:04:33] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[02:05:19] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[02:06:37] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[02:07:05] *** Quits: Batzy (~quassel@user/batzy) (Quit: No Ping reply in 180 seconds.)
[02:08:21] *** Joins: Batzy (~quassel@user/batzy)
[02:08:37] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[02:08:57] *** Joins: Throgkt (~Throgkt@user/throgkt)
[02:09:43] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[02:11:00] *** Joins: digicyc (aarona@2600:3c00::f03c:92ff:fe04:3644)
[02:11:57] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[02:14:32] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[02:15:05] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:15:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[02:15:06] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:16:46] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:18:49] <neoweb> somehow, when using --force w/ git i erased like 2 years worth of work on a branch, and I had no idea how to get it back
[02:19:13] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Client Quit)
[02:19:14] <neoweb> i had a backup of the code, so a new branch, and commit w/ overwrite of files worked, but all that lost history
[02:19:19] <neoweb> how is that even possible heh
[02:19:40] <neoweb> i guess if I commit something that is missing commits it erases past commits
[02:19:47] <neoweb> ie is behind, and i force it
[02:20:04] *** Joins: djapo (~archangel@user/djapo)
[02:20:14] <neoweb> i learned to be very careful w/ force heh
[02:20:28] <SnoopJ> neoweb, that is probably a better question for #git, but yes, --force is basically "my history should replace the remote's if they conflict"
[02:20:37] <neoweb> wow man
[02:20:41] *** Quits: Knaxius (~Knaxius@herzlichweise.de) (Quit: bye)
[02:20:49] <neoweb> is there a way to recover what I lost heh?
[02:20:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:02] <neoweb> i will join #git
[02:21:06] <SnoopJ> the old history is probably in your local copy, but yea, ask there
[02:21:10] <jinsun> that is why it is called --force, luckily you have reflog, so it is possible to get back those commits usually unless you did some really horrible destructive thing
[02:21:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:21:40] <SnoopJ> and this is also (part of) why git-revert exists
[02:22:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:22:38] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[02:23:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:23:35] *** Quits: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484) (Quit: Konversation terminated!)
[02:23:39] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[02:23:50] *** Joins: Barones (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe)
[02:23:58] *** Joins: fikran (~fikran@user/fikran)
[02:24:57] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:26:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:30:01] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[02:30:53] *** Mindscape is now known as Bakunin
[02:30:59] *** Quits: Barones (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe) (Ping timeout: 252 seconds)
[02:31:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:15] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[02:31:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:33:27] *** Quits: pizdets (~pizdets@183.182.110.245) (Ping timeout: 256 seconds)
[02:33:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:34:39] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[02:35:15] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[02:35:32] *** Joins: bindu (~bindu@user/bindu)
[02:36:28] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[02:36:37] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:36:58] *** kostkon_ is now known as kostkon
[02:39:50] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[02:39:59] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:40:10] *** Joins: arinov (~arinov@213.194.126.155)
[02:41:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[02:44:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:48:45] *** Quits: jay-m126 (~jay-m@154.72.150.212) (Ping timeout: 256 seconds)
[02:49:22] *** Quits: jay-m126_ (~jay-m@154.72.150.212) (Ping timeout: 256 seconds)
[02:54:30] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:54:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:56:10] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:56:30] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[02:56:39] *** Quits: a0z1 (~a0z1@185.213.155.166) (Ping timeout: 252 seconds)
[02:58:01] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[02:58:11] <arkanoid> datetime.strptime("01/03/2021 08:43:33", r'%d/%m%/%Y %H:%M:%S') -> ValueError: '/' is a bad directive in format '%d/%m%/%Y %H:%M:%S' I don't see where the problem is, do you see it?
[02:58:26] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[02:58:34] <nomic> is here  away to do like a reseet of terminal with in pdb
[02:58:38] <nomic> if u hve lost the like echo
[02:58:51] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[02:59:18] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[03:00:28] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[03:01:11] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[03:01:45] <Kaedenn> Python 2.6 on HP-UX Itanium64. subprocess doesn't have a timeout feature in this version. How can I implement it using syscalls or something?
[03:02:21] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Ping timeout: 256 seconds)
[03:02:30] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:54ac:14f0:5fcb:286d) (Quit: Leaving)
[03:02:50] <Kaedenn> Is there a way to schedule an interrupt or timeout signal to occur after a set number of seconds *without* nuking the interpreter?
[03:02:56] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:6c61:3acf:b93e:fc8e) (Ping timeout: 256 seconds)
[03:03:00] <arkanoid> got the problem
[03:03:29] *** Joins: grayn (Thunderbir@gateway/vpn/protonvpn/grayn)
[03:04:12] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[03:05:00] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[03:05:10] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-64f2-cec8-9dae-6ea9.fixed6.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:05:22] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[03:06:55] *** Quits: se-sm-ca (~sean@user/se-sm-ca) (Quit: WeeChat 3.3)
[03:07:21] <nomic> is here  away to do like a reseet of terminal with in pdb
[03:07:22] <nomic> if u hve lost the like echo
[03:08:01] *** Quits: delvian (~delvian@41.13.212.200) (Ping timeout: 252 seconds)
[03:08:08] <jinsun> arkanoid: extra % after %m
[03:08:31] *** Joins: delvian (~delvian@41.6.64.129)
[03:09:10] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-3c9d-5fcc-a944-b630.fixed6.kpn.net)
[03:09:12] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[03:09:15] *** Joins: Socra (~Socra@206.217.216.27)
[03:09:30] <arkanoid> yeah, silly error, hooked me for 3 minutes like an idiot
[03:10:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[03:11:06] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[03:12:07] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:12:14] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 252 seconds)
[03:12:15] *** grayn1 is now known as grayn
[03:12:43] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:12:51] *** Quits: The_Jag (~The_Jag@host-79-36-38-58.retail.telecomitalia.it) (Quit: The_Jag)
[03:14:02] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[03:17:04] *** Quits: ianliu (~ianliu@177.188.85.182) (Quit: WeeChat 3.3)
[03:17:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:18:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:18:18] <SnoopJ> Kaedenn, you could use the Popen interface and wait out the timeout in a busy-loop that you break out of if the command completes?
[03:19:03] <Kaedenn> eh, that'd make communicating with it a pain to avoid deadlocks, but that could work
[03:19:16] <SnoopJ> I'd say with 2.6, pain is a given
[03:19:18] <Kaedenn> unless I poll() the fds
[03:19:22] <Kaedenn> right
[03:19:40] <Kaedenn> we are desperately trying to get off of this system but that's been a work in progress for the last like 5 years
[03:19:45] * SnoopJ nods
[03:19:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:20:06] <Kaedenn> our entire production environment is built upon this single architecture, including our preproduction environments
[03:20:20] <Kaedenn> and the only people who knew how to maintain it are long gone
[03:20:27] <SnoopJ> Kaedenn, you could conceivably run such a busy-loop on its own thread, perhaps?
[03:20:42] <Kaedenn> do I have to worry about the GIL in that?
[03:21:08] *** Joins: quasineutral3 (~quaisneut@user/quasineutral)
[03:21:10] *** Joins: roguelazer_ (~jbrown@sietchtabr.roguelazer.net)
[03:21:33] <SnoopJ> I mean, it'll still be there, but the GIL shouldn't really be a problem for that kind of loop, I think? Unless one of the other threads is hogging the GIL for substantial fractions of your desired timeout
[03:21:36] <Kaedenn> I could also go the bash route and write a trivial shell script that sets a timeout trap
[03:21:36] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (Ping timeout: 245 seconds)
[03:21:44] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Ping timeout: 260 seconds)
[03:21:44] *** quasineutral3 is now known as quasineutral
[03:21:59] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:22:03] <Kaedenn> hmm, the shell script route also appeases my desire to communicate with the child process
[03:22:23] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[03:22:25] <SnoopJ> Kaedenn, I'd probably go with Popen + wait-it-out and only look for alternatives there if the pain really is that bad, but then, I don't know the parts of the application that you're worried about
[03:22:53] <Kaedenn> for the moment I just wrapped the Popen and communicate() in a try ... except KeyboardInterrupt and give each query a few seconds before I kill it :)
[03:23:21] <Kaedenn> oh, waiting it out isn't working; that's why I'm willing to go down this path of pain
[03:23:35] <Kaedenn> the version if ipptool on this system doesn't implement the timeout argument correctly
[03:23:41] <SnoopJ> sorry, by that I mean "loop until it's done or timed out"
[03:23:50] <Kaedenn> oh! sorry, misunderstood
[03:24:15] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Remote host closed the connection)
[03:24:19] <Kaedenn> I've been meaning to learn about traps in bash for a long time, so I'll take a quick look at that just in case that could work too
[03:24:28] <Kaedenn> threading in python just makes my skin crawl for no reason
[03:24:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:24:50] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[03:25:08] <Kaedenn> multithreaded programs are a pain to debug even when I know my scheduling works
[03:25:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:25:28] *** Joins: lowfi (~lowfi@user/lowfi)
[03:26:19] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:28:41] *** Joins: summersault (~summersau@179.221.251.16)
[03:29:55] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[03:30:23] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:b14a:1393:a2fc:c252) (Ping timeout: 252 seconds)
[03:32:37] *** Quits: binary01 (~binary01@174.141.153.217) (Ping timeout: 250 seconds)
[03:33:08] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[03:34:02] <SnoopJ>  well, you'd only need to thread if you have other work to do while the subprocess does its thing. If not, you don't need to worry about it
[03:38:37] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[03:38:47] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[03:40:43] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[03:40:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a) (Ping timeout: 256 seconds)
[03:41:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[03:41:23] *** guenhael1 is now known as guenhael
[03:42:02] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[03:42:03] <dlam> n
[03:45:33] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:45:54] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Client Quit)
[03:48:18] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[03:48:53] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[03:52:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[03:52:23] *** guenhael1 is now known as guenhael
[03:54:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a)
[03:55:52] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:57:11] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[03:57:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:57:45] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[03:58:27] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 256 seconds)
[03:58:39] *** Joins: Wulf (~Wulf@user/wulf)
[03:58:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:59:35] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (Ping timeout: 256 seconds)
[03:59:40] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:00:35] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:00:50] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:01:31] *** Joins: luva (~luva@45.141.152.44)
[04:02:28] *** Joins: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[04:03:27] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[04:03:28] *** pwnd_sfw3 is now known as pwnd_sfw
[04:03:43] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:04:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 252 seconds)
[04:05:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:08:36] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:10:52] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:11:11] *** NyaaTheKitten is now known as afloatingcat
[04:12:33] *** afloatingcat is now known as NyaaTheKitten
[04:12:44] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[04:13:06] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f5ee-2791-688d-e316.res6.spectrum.com) (Quit: jarthur)
[04:13:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:14:35] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[04:15:22] *** vinleod is now known as vdamewood
[04:16:12] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[04:18:03] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[04:18:36] *** Joins: vimal (~vimal@ip-213-127-42-70.ip.prioritytelecom.net)
[04:19:52] *** Joins: fcjsx (~fcjsx@2800:a4:822:2d00:1b5c:2448:8031:6a86)
[04:19:55] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[04:19:56] *** Quits: fcjsx (~fcjsx@2800:a4:822:2d00:1b5c:2448:8031:6a86) (Remote host closed the connection)
[04:22:31] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[04:22:38] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[04:23:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[04:24:28] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[04:24:30] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:27:20] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[04:29:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:30:39] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[04:31:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:32:03] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e9e5-b5d0-98d2-cc50.res6.spectrum.com)
[04:32:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:33:04] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:33:19] *** Joins: fikran (~fikran@user/fikran)
[04:33:43] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:33:53] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:33:57] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:36:59] *** Joins: stdout (~stdout@mobile-166-137-145-104.mycingular.net)
[04:38:33] *** Parts: kn100 (~kn100@wireguard/tunneler/kn100) (https://kn100.me :))
[04:38:55] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[04:38:57] *** Quits: sharperguy (~sharpergu@88.130.219.48) (Ping timeout: 252 seconds)
[04:39:15] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[04:40:20] *** Quits: parv (~quass@user/parv) (Quit: parv)
[04:40:54] *** Joins: sharperguy (~sharpergu@88.130.219.48)
[04:41:15] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[04:43:38] *** Joins: chatcat_ (chatcat@gateway/vpn/airvpn/chatcat)
[04:43:55] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Remote host closed the connection)
[04:44:14] *** Joins: chatcat__ (chatcat@gateway/vpn/airvpn/chatcat)
[04:44:19] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:44:52] *** Joins: pepper (~tomato@105.233.42.153)
[04:45:47] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:47:09] *** Quits: chatcat (chatcat@gateway/vpn/airvpn/chatcat) (Ping timeout: 250 seconds)
[04:47:11] *** Quits: flokuehn (~flokuehn@87.123.247.75) (Ping timeout: 256 seconds)
[04:48:07] *** Quits: chatcat_ (chatcat@gateway/vpn/airvpn/chatcat) (Ping timeout: 252 seconds)
[04:48:21] *** Joins: chatcat (chatcat@gateway/vpn/airvpn/chatcat)
[04:48:48] <kline> sometime this year there was a blog post someone wrote about extending CPython to add another keyword for import
[04:48:57] *** Joins: flokuehn (~flokuehn@87.123.247.51)
[04:49:11] *** Joins: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca)
[04:49:13] <kline> all it did was add a synonym, it didnt do much more than that - it was just import but by another name, adding a line to the grammar iirc
[04:49:29] *** Joins: HiddenHyde (~Hidden_Hy@user/hiddenhyde)
[04:49:35] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[04:49:37] <kline> does anyone remember this blog post? im struggling to find it and i want to pass it to someone who is just realising things like grammars and asts exist
[04:50:01] *** Quits: chatcat__ (chatcat@gateway/vpn/airvpn/chatcat) (Ping timeout: 256 seconds)
[04:51:26] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[04:51:57] <SnoopJ> kline, I know Anthony Shaw's book has a bit about extending the grammar, but I don't recall the thing you're talking about and don't see it in a quick poke at my logs
[04:52:20] <kline> it might be this but it doesnt look familiar enough to me: http://mathamy.com/import-accio-bootstrapping-python-grammar.html
[04:52:20] *** Quits: pepper (~tomato@105.233.42.153) (Changing host)
[04:52:20] *** Joins: pepper (~tomato@user/pepper)
[04:52:38] <kline> of course in proper rubber duck fashion this turned up about 30s after asking after 20 mins of looking
[04:52:50] *** Quits: stdout (~stdout@mobile-166-137-145-104.mycingular.net) (Remote host closed the connection)
[04:53:09] *** Joins: stdout (~stdout@mobile-166-137-145-104.mycingular.net)
[04:53:25] *** Quits: chatcat (chatcat@gateway/vpn/airvpn/chatcat) (Ping timeout: 256 seconds)
[04:54:36] *** Quits: stdout (~stdout@mobile-166-137-145-104.mycingular.net) (Remote host closed the connection)
[04:55:05] <SnoopJ> I see a mention for that in here on 2 May 2019, so yea possibly
[04:55:45] <SnoopJ> figures :)
[04:56:44] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[04:57:03] *** Joins: yanmaani1 (~yanmaani@gateway/tor-sasl/yanmaani)
[04:57:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:58:47] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[05:00:54] <yanmaani1> Hello, where may I find the implementation of the `import` statement?
[05:00:58] *** yanmaani1 is now known as yanmaani
[05:01:27] <yanmaani> I'm aware that importlib has the nuts-and-bolts, but where is it called from?
[05:01:54] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:02:09] <nedbat> yanmaani: what exactly are you looking for there?
[05:03:09] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[05:03:11] *** Joins: stdout (~stdout@50.115.255.72)
[05:03:21] <SnoopJ> yanmaani, in the CPython source tree much of the machinery behind the statement is in Python/import.c, but nedbat's question may help us guide you to somewhere more specific.
[05:03:33] <yanmaani> nedbat: The exact implementation of `from module import x`. I can see 'recipes' that are 'approximately' the same in the docs of importlib.
[05:03:46] <yanmaani> SnoopJ: thanks
[05:03:49] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[05:04:07] *** Joins: dohtem (uid524096@user/dohtem)
[05:04:09] <nedbat> yanmaani: https://github.com/python/cpython/blob/main/Python/ceval.c#L3849-L3895
[05:04:27] <yitz> https://github.com/python/cpython/blob/main/Python/import.c ?
[05:04:39] *** Joins: frost (~frost@user/frost)
[05:05:09] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:05:19] <SnoopJ> yanmaani, if you want to follow it from __import__ to those guts, that's here: https://github.com/python/cpython/blob/main/Python/bltinmodule.c#L262, if you are interested in the statement, that's what nedbat just pointed at
[05:05:47] *** Quits: pepper (~tomato@user/pepper) (Quit: Leaving)
[05:05:53] *** Quits: yte3 (~0@151.15.189.85) (Ping timeout: 256 seconds)
[05:07:33] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:08:41] <nedbat> yanmaani: it might be hard to follow the code to find the exact implementation.  What is missing from the docs?
[05:09:13] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[05:09:19] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Client Quit)
[05:09:42] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[05:09:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[05:10:31] *** Joins: Fiji (~Fiji@user/fiji)
[05:10:32] <yanmaani> nedbat: Let's say I want to do "import foo" manually. Easy, just call use importlib.import_module().
[05:10:47] <yanmaani> What if I want to do "from foo import blah"?
[05:10:58] *** Joins: cliluw (~cliluw@47.147.80.149)
[05:11:09] <SnoopJ> yanmaani, `blah = importlib.import_module(...).blah`
[05:11:13] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[05:11:35] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[05:11:35] *** Quits: gr1m (~gr1m@45.83.220.218) (Ping timeout: 252 seconds)
[05:11:36] <yanmaani> Oh, is that all?
[05:11:38] <yanmaani> nice
[05:12:14] <yanmaani> and it won't have the side effect of also importing foo?
[05:12:37] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[05:12:45] <nedbat> yanmaani: it won't define the name "foo"
[05:12:48] *** Joins: pepper (~pepper@user/pepper)
[05:12:52] <yanmaani> great
[05:12:53] <SnoopJ> but it does import it, just as the statement does
[05:12:59] <nedbat> yanmaani: your "import foo" doesn't either, unless you assign to "foo"
[05:13:33] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:d932:b814:3d8b:658a)
[05:13:35] <SnoopJ> yanmaani, `from foo import bar` emits an IMPORT_NAME(foo) and then IMPORT_FROM(bar): https://bpa.st/TFMQ
[05:13:41] *** Joins: cdown (~cdown@163.114.131.1)
[05:13:52] <SnoopJ> (`import foo` emits IMPORT_NAME and STORE_NAME)
[05:14:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:14:26] <SnoopJ> err, on my 3.8.10, anyway, all bets off on other interpreters but I don't think *these* instructions change very much :)
[05:14:30] <yanmaani> nedbat: Are you saying running "import foo" in the repl won't define the name "foo"?
[05:14:57] <nedbat> yanmaani: no, it does, but your equivalent thing doesn't:  "importlib.import_module()"
[05:15:25] <yanmaani> ah, right, thanks
[05:16:13] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:23:29] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[05:24:03] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Remote host closed the connection)
[05:25:02] *** Joins: genoobie (~genoobie@pool-74-110-61-101.bflony.fios.verizon.net)
[05:25:41] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[05:26:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[05:27:01] *** Parts: genoobie (~genoobie@pool-74-110-61-101.bflony.fios.verizon.net) ()
[05:27:21] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[05:28:08] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[05:29:20] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:29:51] *** Quits: stdout (~stdout@50.115.255.72) (Remote host closed the connection)
[05:30:06] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[05:30:31] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[05:30:34] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[05:30:55] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[05:31:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Quit: Leaving...)
[05:32:40] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:32:41] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: The Lounge - https://thelounge.chat)
[05:33:35] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:34:11] *** Joins: stdout (~stdout@50.115.255.72)
[05:35:21] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[05:35:46] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:d932:b814:3d8b:658a) (Ping timeout: 268 seconds)
[05:36:08] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:9039:5d09:805c:b877)
[05:37:59] *** Quits: whaley (~whaley@2603-6080-a301-33d1-456a-1e4c-dd86-8e17.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:38:03] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:39:49] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d) (Ping timeout: 252 seconds)
[05:40:44] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[05:44:17] *** Quits: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c) (Read error: Connection reset by peer)
[05:44:46] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:9039:5d09:805c:b877) (Quit: Leaving)
[05:44:56] *** Joins: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c)
[05:45:30] *** Quits: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c) (Read error: Connection reset by peer)
[05:46:47] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[05:46:50] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:cdf8:d959:20a5:b5a3) (Quit: Textual IRC Client: www.textualapp.com)
[05:48:18] *** Joins: onichomp (~onichomp@2806:264:4404:82be:1140:cc0f:73d8:c226)
[05:48:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:48:27] *** Quits: nicholaus04 (~nicholaus@172.58.17.115) (Quit: Joined Game)
[05:50:09] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[05:51:03] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:51:17] *** Quits: stdout (~stdout@50.115.255.72) (Remote host closed the connection)
[05:52:01] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:05] *** Joins: qpdb (~qpdb@user/qpdb)
[05:54:32] *** Joins: stdout (~stdout@50.115.255.72)
[05:55:02] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:55:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:55:58] *** brabrax_ is now known as brabrax
[05:56:57] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[06:00:29] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:01:24] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:01:24] <SamuelMarks> hi
[06:01:55] <SamuelMarks> To get a list of dunder names I wrote this - https://stackoverflow.com/a/70193222 - critiques welcome
[06:02:33] *** Quits: sharperguy (~sharpergu@88.130.219.48) (Ping timeout: 252 seconds)
[06:04:18] *** Joins: sharperguy (~sharpergu@89.244.124.245)
[06:04:21] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[06:06:56] *** Joins: jancoow (~jancoow@user/jancoow)
[06:08:52] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:09:16] <SnoopJ> the complete list is "any valid identifier that starts and ends with '__'"
[06:09:21] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:12:23] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:13:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:14:17] <SnoopJ> SamuelMarks, by my count, your solution is missing 18 names mentioned in datamodel.rst in the official documentation, namely these ones: https://bpa.st/T6GQ
[06:14:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a) (Ping timeout: 256 seconds)
[06:14:43] <SnoopJ> oh, hrm, that file has more than 18 lines, I goofed up something
[06:14:52] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e442:f7c7:fc70:e26f)
[06:14:55] <SnoopJ> at any rate, spot-checking a few of the more obvious ones are definitely missing
[06:16:19] <SnoopJ> oh, yours includes some that are *not* in datamodel.rst (which may disqualify them from being "special" in the sense of the original question)
[06:16:33] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[06:16:55] <SnoopJ> not sure if that would make them implementation details or not (but I would hope so?)
[06:19:13] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:19:45] <SnoopJ> I just looked for "__\w+__" in that doc so it's possible not all of those are meaningful in user-defined classes, but it seems more meaningful to look at the data model than at the builtins, which I think makes it impossible to get them all (e.g. none of the builtins use __matmul__ AFAIK)
[06:22:06] *** Quits: nomn (nomn@user/nomn) (Ping timeout: 260 seconds)
[06:23:27] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[06:24:08] *** Joins: nomn (nomn@user/nomn)
[06:24:56] *** Joins: ubert1 (~Thunderbi@p200300ecdf0ba290e6b318fffe838f33.dip0.t-ipconnect.de)
[06:25:06] *** Quits: ub (~Thunderbi@p200300ecdf0ba2be089e3f14725e8432.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:25:06] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:25:06] *** ubert1 is now known as ubert
[06:25:24] *** Joins: ub (~Thunderbi@p200300ecdf0ba2909868c7bbf0c5b488.dip0.t-ipconnect.de)
[06:25:25] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:50] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[06:26:55] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[06:29:43] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[06:30:07] <jinsun> yeah technically anything starting and ending with double underscores is dunder, and reserved https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
[06:32:18] <jinsun> and to find alll that have meaning better to just look at https://docs.python.org/3/reference/datamodel.html
[06:32:45] <SnoopJ> O
[06:32:56] <SnoopJ> I'm pretty sure my list is larger than it strictly should be*
[06:32:59] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:35:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:35:31] *** Joins: millido (~millido@84.210.150.128)
[06:35:51] *** Joins: binary01 (~binary01@174.141.153.217)
[06:36:34] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[06:39:43] *** Joins: parv (~quass@user/parv)
[06:39:57] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:41:03] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 252 seconds)
[06:42:09] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[06:42:40] *** Joins: fikran (~fikran@user/fikran)
[06:43:39] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:43:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 252 seconds)
[06:45:18] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:45:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:47:39] *** Joins: xkuru (~xkuru@user/xkuru)
[06:48:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:49:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:49:12] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[06:54:21] *** Quits: ialokin (znc@user/ialokin) (Ping timeout: 250 seconds)
[06:54:50] *** Joins: Vonter (~Vonter@user/vonter)
[06:55:26] *** Quits: strugee (~strugee@strugee.net) (Quit: ZNC - http://znc.in)
[06:56:37] *** Joins: ialokin (znc@user/ialokin)
[06:59:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:00:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[07:01:33] *** Joins: strugee (~strugee@strugee.net)
[07:06:31] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:08:26] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:13:56] *** Joins: qlixed (~qlixed@181.44.129.13)
[07:13:57] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:16:01] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[07:16:27] <Jonno_FTW> anyone familiar with aws s3? I'm doing list_object_v2 calls in a ThreadPoolExecutor() and they are hanging for a long time
[07:19:54] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[07:22:23] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[07:22:24] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[07:22:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[07:23:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:23:52] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[07:24:12] <Forty-Bot> does PyBUF_SIMPLE yield a contiguous buffer?
[07:24:46] <Forty-Bot> the documentation seems to imply it does, but convertbuffer checks for contiguity
[07:25:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:25:18] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:25:18] *** finn_elija is now known as FinnElija
[07:26:53] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[07:27:31] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[07:27:39] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[07:29:42] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[07:29:49] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[07:30:12] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[07:30:28] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 268 seconds)
[07:30:29] *** Joins: oakridge (~oakridge@user/oakridge)
[07:30:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:32:08] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:11] <willow> Helenah: you know what a  JOIN is, right?
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:31] <SnoopJ> Forty-Bot, yes, I believe the result will always be contiguous, because "Without stride information, the buffer must be C-contiguous" and it's NULL for PyBUF_SIMPLE
[07:36:49] <Helenah> willow: You mean an IRC JOIN? Yes.
[07:36:58] <Forty-Bot> so why does convertbuffer check?
[07:37:29] <Helenah> willow: If you mean python join then I know what that is too :D
[07:37:48] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[07:38:52] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:39:23] <SnoopJ> Forty-Bot, where is it doing that? I am looking at it now and don't see what you mean, but maybe it's staring me in the face
[07:39:48] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[07:39:55] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[07:40:36] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:40:41] <Forty-Bot> SnoopJ: https://github.com/python/cpython/blob/main/Python/getargs.c#L1362
[07:40:52] <SnoopJ> oh, in getbuffer()
[07:40:52] <Forty-Bot> sorry, should have said getbuffer
[07:41:14] *** MelMalik is now known as AmyMalik
[07:41:20] <Forty-Bot> and of course, this sort of thing was spread all over by 32d96a2b5bc
[07:44:09] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[07:44:12] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:44:13] <SnoopJ> Forty-Bot, it looks like 8182b71 introduced PyBUF_SIMPLE but didn't remove the contiguity check? I'm not sure if there's a reason or if the check is redundant
[07:44:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:44:29] <SnoopJ> https://github.com/python/cpython/commit/8182b717dbedc5d864a2240e6ff9120ecb2607dc#diff-3a8078954be00d3c876e02dd0e5057aad07f2c5f82f6c3c76154dcf2866929cfR1295
[07:44:54] <Forty-Bot> right
[07:45:17] <Forty-Bot> so this implies that even with PyBUF_SIMPLE you still have to check
[07:45:22] <Forty-Bot> despite the docs saying the opposite
[07:45:54] <SnoopJ> I don't see how that inference can be drawn with certainty
[07:46:15] <Forty-Bot> https://bugs.python.org/issue8991
[07:46:25] <Forty-Bot> he says here that you still have to check
[07:46:38] <Forty-Bot> but I don't know if anything has changed in 10 years
[07:46:50] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:47:03] <SnoopJ> I don't see any mention of PyBUF_SIMPLE there
[07:47:23] <Forty-Bot> the commit you linked above resolves that issue
[07:47:30] <SnoopJ> indeed
[07:47:42] <Forty-Bot> and he uses PyBUF_SIMPLE in the commit
[07:48:04] <Forty-Bot> and adds a check on contiguous
[07:48:16] <Forty-Bot> thus implying that you have to check even with SIMPLE
[07:48:24] <SnoopJ> no, the check was there before
[07:48:33] <Forty-Bot> right, so why didn't he remove it?
[07:48:38] <SnoopJ> good question, I don't know the answer
[07:48:42] <Forty-Bot> he clearly read it, because he touched the line above
[07:48:46] <SnoopJ> I don't think you can just assume it isn't a mistake
[07:48:54] <Forty-Bot> sure
[07:49:05] <Forty-Bot> but this casts the docs into doubt
[07:49:30] <Forty-Bot> plus, he adds a check on 1249
[07:49:38] <Forty-Bot> which is positive implication
[07:49:49] <SnoopJ> It might be that the "C-contiguous if null" came later
[07:49:56] <SnoopJ> and nobody came back for that check
[07:50:17] <SnoopJ> but if you think the docs are wrong, they should probably be corrected
[07:50:19] <Forty-Bot> but you'd think that the 2018 commit I linked above would have done it
[07:50:28] <Forty-Bot> since they add that check everywhere
[07:50:40] <SnoopJ> I am not sure I would
[07:50:45] <SnoopJ> it's a big codebase
[07:51:04] <Forty-Bot> in any case, all of the code currently in cpython checks
[07:52:51] *** Quits: sreve (~quassel@p4ff44972.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:53:24] *** Joins: sreve (~quassel@p4ff449d9.dip0.t-ipconnect.de)
[07:53:32] <SnoopJ> Forty-Bot, all the contiguous-check additions I see in 32d96a2 are for PyBUF_WRITABLE
[07:53:48] <Forty-Bot> (as it happens, I also want to use PyBUF_WRITABLE)
[07:54:13] <Forty-Bot> but writable is just simple with an extra bit
[07:54:14] *** Joins: Elzington_ (~Elzington@static-68-235-44-10.cust.tzulo.com)
[07:54:51] <SnoopJ> hm
[07:54:59] *** Quits: fstd (~fstd@xdsl-87-79-98-69.nc.de) (Ping timeout: 265 seconds)
[07:56:35] *** Quits: Elzington (~Elzington@static-68-235-44-76.cust.tzulo.com) (Ping timeout: 252 seconds)
[07:56:37] *** Joins: aniketgm (~Aniket@49.36.107.115)
[07:59:10] <SnoopJ> the statement about contiguity was introduced in 2012, so well before those contiguity checks were added. I'm not sure what's up, but I don't think the docs are lying. If nothing else, the contiguity check includes a shortcut for NULL strides
[08:00:49] <SnoopJ> but it is interesting to consider why those contiguity checks are there. are they maybe mimicking old code that predates this guarantee (as the fix for #8991 does)?
[08:01:09] <SnoopJ> you'd have to ask someone who knows better than I do :)
[08:02:10] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:5040:57f5:89ed:5d28)
[08:05:23] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[08:05:34] <SnoopJ> OTOH, Serhiy's first commit in that PR is mostly adding these checks...
[08:06:11] <queue-> whats a better eway to run more jobs than parallel can handle
[08:07:22] *** Joins: Vonter (~Vonter@user/vonter)
[08:08:01] <Forty-Bot> queue-: fork
[08:09:00] <SnoopJ> Forty-Bot, discussion here suggests to me that maybe it's to handle cases where the buffer provider is non-conforming? https://bugs.python.org/issue29300#msg286792
[08:10:06] <SnoopJ> and I'm relieved to read https://bugs.python.org/issue29300#msg286761 and see that Victor also tilted his head at this
[08:10:07] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[08:10:11] *** Joins: auctus (~auctus@user/auctus)
[08:10:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:12:02] <auctus> i cant figure out by googling if i can do date comparisons in sqlite3 in python (where i used 'timestamp' type for column type for sqlite3)
[08:12:17] <auctus> for example,
[08:12:18] <SnoopJ> so maybe the guarantee the docs make come with the asterisk that the thing you're calling PyObject_GetBuffer() on needs to be compliant
[08:12:22] <auctus> rows = cursor.execute('SELECT * FROM pulses WHERE stamp > ?;', (datetime.datetime(year=2021,month=11,day=1))).fetchall()
[08:12:27] <auctus> something like that
[08:12:33] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:14:12] *** Quits: stdout (~stdout@50.115.255.72) (Quit: Leaving)
[08:16:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[08:16:23] *** guenhael1 is now known as guenhael
[08:16:37] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:18:16] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:18:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:20:42] <SnoopJ> Forty-Bot, and discussion here is relevant too: https://bugs.python.org/issue23376#msg235252 (seems to say ~the same thing: non-compliant providers might break the guarantee and CPython wants to know about it)
[08:21:16] <Forty-Bot> hm, ok for now I am going to leave the check in
[08:21:30] <parv> auctus, Perhaps you may need to convert "timestamp" column to "DATE()" (as I have done to search in MariaDB table via mysql.connector)?
[08:21:43] <SnoopJ> it's probably worth having it if you're worried about it at all, especially since it can shortcut
[08:22:27] <SnoopJ> but the buffer procol doc could maybe be updated to point out that guarantees it makes are for things that actually comply with the protocol heh
[08:22:44] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[08:23:16] *** Quits: vimal (~vimal@ip-213-127-42-70.ip.prioritytelecom.net) (Ping timeout: 245 seconds)
[08:23:40] <parv> auctus, Do note that both you & I are using raw SQL in Python short of placeholders. Whether you can pass datetime.datetime object, instead of a string, to the driver depends on the driver.
[08:24:08] <SnoopJ> (assuming I got that right, anyway)
[08:24:09] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:28:33] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[08:29:46] *** Joins: gambl0re (~gambl0re@216.154.4.187)
[08:30:48] *** Joins: Vonter (~Vonter@user/vonter)
[08:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:18] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[08:31:21] *** Quits: HiddenHyde (~Hidden_Hy@user/hiddenhyde) (Quit: Leaving)
[08:33:17] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:33:26] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[08:33:48] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:34:26] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[08:34:58] *** Joins: argoneus (~argoneus@argoneus.com)
[08:35:49] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[08:35:50] *** guenhael1 is now known as guenhael
[08:36:08] *** Joins: grayn (~Thunderbi@130.95.254.89)
[08:36:15] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:38:39] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[08:39:03] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[08:39:17] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:39:42] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[08:40:24] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[08:40:39] *** Quits: grayn (~Thunderbi@130.95.254.89) (Ping timeout: 256 seconds)
[08:40:39] *** grayn1 is now known as grayn
[08:42:07] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[08:42:25] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[08:42:49] *** Joins: vimal (~vimal@ip-213-127-87-89.ip.prioritytelecom.net)
[08:44:08] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[08:44:37] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[08:44:59] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[08:45:02] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[08:45:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[08:45:53] <auctus> parv: you can pass datetime.datetime.now() and it stores in sqlite3 fine, still working on getting any kind of comparison logic going for dates in sqlite3 though
[08:46:25] <auctus> the docs say something about converting selects:
[08:46:30] <auctus> cur.execute('select current_date as "d [date]", current_timestamp as "ts [timestamp]"')
[08:46:38] <auctus> but not comparisons that i can find so far
[08:47:55] *** Quits: onichomp (~onichomp@2806:264:4404:82be:1140:cc0f:73d8:c226) (Ping timeout: 252 seconds)
[08:49:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:50:42] <yitz> Is there a way to write this cleaner?  mutate = lambda x: (x[0], int(x[1]))  ;  return [mutate(line.split()) for line in puzzle_input.splitlines()]
[08:52:02] *** Joins: fikran (~fikran@user/fikran)
[08:52:19] *** Quits: strugee (~strugee@strugee.net) (Ping timeout: 252 seconds)
[08:52:19] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[08:53:04] *** Joins: strugee_ (~strugee@strugee.net)
[08:53:49] <aphysically> SnoopJ: today AoC boring zzzz https://bpa.st/MUMA when do we get to make everyone express their answers in mandelstam variables so I can win
[08:54:01] <aphysically> (why else did I spend so much time learning that stuff)
[08:54:21] <meejah> yitz: get rid of the lambda, like: [(x[0], int(x[1])) for x in input.splitlines()]
[08:54:28] <hexology> they need the .split too
[08:54:51] <hexology> so you could do [(x[0], int(x[1])) for x in map(str.split, input.splitlines())]
[08:54:55] <hexology> but is that cleaner? eh
[08:55:17] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[08:55:30] *** Joins: rany (~rany@user/rany)
[08:55:45] <hexology> i think 'mutate' is a confusing name but otherwise yeah that seems like the best way to do it. unless you want to do a for loop + append
[08:56:34] <meejah> and "def mutate()" is better than assigning a lambda to something
[08:56:47] <enrh> What is so bad about lambdas anyway?
[08:57:01] <enrh> PyLint and such have trained me away from using them
[08:57:03] <meejah> nothing's bad about them, but assigning them to a var is weird
[08:57:10] <KirkMcDonald> You could use the walrus.
[08:57:24] <demsh> lambdas aren't clear in stack trace output
[08:57:42] <enrh> Oh interesting demsh, that would be a good reason not to use them
[08:57:42] <KirkMcDonald> [((x := line.split())[0], int(x[1])) for line in input.splitlines()]
[08:57:44] <yitz> `map()` doesn't seem better than a lambda. lambda over function is ... meh.
[08:58:11] <KirkMcDonald> Don't know as I like that so much, however.
[08:58:16] <yitz> That walrus usage hurts my brain. Lemme digest that...
[08:58:17] <parv> On FreeBSD, package or port (databases/py-sqlite3) of apparently "standard" module "sqlite3" does not includes any doc.🤬
[08:58:48] <yitz> If I'm not missing anything obvious, I'll stick with my lambda. I was just looking at it and feeling like I was ... missing something.
[08:58:49] <meejah> map() is like a list-comprehension, not a lambda
[08:59:02] <aphysically> some of these AoC stuff match/case might be useful
[08:59:15] <aphysically> I could switch my interpreter to 3.10 I guess
[08:59:25] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[08:59:33] <yitz> I should ask #archlinux when I'll get 3.10
[08:59:49] <yitz> Though at this point I'm so very used to just writing out the if-ladder
[08:59:58] <Affliction> I run debian so I'll get 3.10 some time in 2050
[09:00:22] <hexology> pyenv is a thing!
[09:00:24] <Affliction> But yeah, match/case really seems nice
[09:00:41] <Affliction> It's also a little overkill for most of the short scripts that I write
[09:01:27] <aphysically> gentoo stabilized 3.10 but it's not the default interpreter yet
[09:01:31] <yitz> Affliction: Ouch :s Are you still on 3.4 ?
[09:01:42] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[09:01:45] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:01:53] <Affliction> Well, debian 11 has 3.9 at least, bit of an exaggeration :)
[09:01:54] <aphysically> debian just had a release so it's coincidentally on the relatively recent 3.9 if you're up to date
[09:02:03] <yitz> Ah
[09:03:20] *** Joins: argoneus (~argoneus@argoneus.com)
[09:04:03] *** Joins: Vonter (~Vonter@user/vonter)
[09:04:58] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[09:05:10] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[09:10:08] *** Joins: Knaxius (~Knaxius@herzlichweise.de)
[09:12:13] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:13:30] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[09:16:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[09:20:38] *** Joins: savolla (~savolla@84.44.28.28)
[09:22:22] *** Joins: nubonix (~Guest63@2601:1c2:4a01:5be0:e5e7:af91:d579:3ce)
[09:22:32] *** Joins: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de)
[09:23:07] <nubonix> anyone know if there is a library to control the rgb lights on a k70 corsair keyboard [linux] rgbkeyboards seems to be broken
[09:25:59] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[09:26:35] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:27:40] *** Joins: overrider (~overrider@user/overrider)
[09:27:41] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Ping timeout: 256 seconds)
[09:28:26] *** Joins: stranac (~stranac@195.29.239.126)
[09:28:45] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[09:28:54] *** Joins: led_belly (~led_belly@5.180.62.222)
[09:33:21] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:33:25] *** Joins: upsala (~zcb@185.213.155.252)
[09:33:33] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:35:09] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:36:22] *** Joins: armyriad (~armyriad@47.147.80.149)
[09:36:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:37:00] *** Quits: aniketgm (~Aniket@49.36.107.115) (Read error: Connection reset by peer)
[09:38:27] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:38:31] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:39:03] *** Joins: LBD (LBD@gateway/vpn/protonvpn/lbd)
[09:39:37] <armyriad> Just code golfing, any way to combine these two lines into one line? action, num = cmd.split()
[09:39:37] <armyriad> ; num = int(num)
[09:40:20] <grawity> num = int(cmd.split()) though it feels like it should be a .split()[0] or something
[09:40:59] <armyriad> Thing is that I also want to assign the "action" variable. That should remain a str.
[09:41:46] <grawity> ah right, I overlooked "action,"
[09:41:53] <grawity> well in that case, no
[09:42:16] <grawity> the only way I can think of to make it one assignment will actually make it longer
[09:42:27] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:42:54] *** Joins: jazzy (~jaziz@user/jaziz)
[09:43:08] <armyriad> Ok, yeah, better to have it in separate lines then.
[09:43:52] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[09:44:00] <armyriad> though I guess if the longer way doesn't add more than 1 (newline) + 8 (space indent) characters, it could still be less characters.
[09:45:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:46:42] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[09:47:03] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:47:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:48:50] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[09:49:11] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:49:34] *** vit is now known as Guest5351
[09:50:15] *** Joins: jazzy3 (~jaziz@user/jaziz)
[09:50:47] *** Joins: Cache_Money (~Cache_Mon@2601:602:a000:4be2:54a:acd4:6032:de05)
[09:51:30] *** Quits: nubonix (~Guest63@2601:1c2:4a01:5be0:e5e7:af91:d579:3ce) (Ping timeout: 256 seconds)
[09:52:05] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:52:56] *** Joins: fdan (~fdan@103.215.168.1)
[09:54:13] <jinsun> one liner would be something like `action, num = (t(x) for t, x in zip([str, int], cmd.split()))`
[09:54:38] <yanmaani> Is there a simple(r) way to write something like print(f'thing{"s" if n>1 else ""}')?
[09:55:35] <parv> auctus, DATE() & comparison works as I expected : https://termbin.com/cen0
[09:55:56] *** Joins: jpic (~jpic@82.142.20.182)
[09:56:20] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[09:57:26] <jinsun> yanmaani: slightly shorter `print(f'thing{"s"*(n>1)}')`
[09:58:11] <grawity> !=1 because you also want it to say "0 things"
[09:58:26] <grawity> actually, in English, is it "31 thing" or "31 things"
[09:58:26] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[09:58:31] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[09:58:34] <armyriad> If you're fine with using a library, use https://pypi.org/project/inflect/.
[09:58:55] *** Joins: jazzy3 (~jaziz@user/jaziz)
[09:59:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:00:03] *** Joins: aniketgm (~Aniket@49.36.107.115)
[10:00:21] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:00:24] <yanmaani> jinsun: is that pythonic?
[10:00:38] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[10:00:46] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:00:55] <yanmaani> grawity: 31 things
[10:00:58] *** Guest5351 is now known as freeworld
[10:01:15] <yanmaani> hmm, but is it -1 thing or -1 things?
[10:01:23] <grawity> putting logic into f-string {} formatting doesn't feel pythonic in general
[10:01:47] <yanmaani> think I just wrote one of the most not sure if horrifying or beautiful lines of code in my life
[10:01:49] <yanmaani> reduce(lambda a, b: [a[0] | set(b.keys()), (a[0] & set(b.keys())) | a[1]], stack, [set(), set()])[1]
[10:01:51] <grawity> {function(var)} is the most that I'd accept, {foo if bar} definitely not
[10:02:45] *** Quits: aniketgm (~Aniket@49.36.107.115) (Quit: leaving)
[10:03:12] *** Joins: ede (~ede@user/ede)
[10:04:30] *** Quits: LBD (LBD@gateway/vpn/protonvpn/lbd) (Quit: leaving)
[10:04:33] <jinsun> yanmaani: I don't know about pythonic, but I do use the bools are ints property to shorten things if it doesn't look too horrible
[10:04:35] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[10:04:58] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:2da2:5327:d7ca:24f0) (Read error: Connection reset by peer)
[10:06:08] <enrh> Not a Python question, but related. I have to use Azure DevOps for the time being. I'm exploring using Docker to spin up a few things I can use for tests. From looking online it would seem I can use docker images in Azure Pipelines... just curious if anyone had success with that. MariaDB, Redis, Elasticsearch.
[10:07:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:07:58] *** Quits: ubert (~Thunderbi@p200300ecdf0ba290e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:07:58] *** ub is now known as ubert
[10:08:01] *** Joins: ubert1 (~Thunderbi@p200300ecdf0ba290e6b318fffe838f33.dip0.t-ipconnect.de)
[10:08:36] <enrh> Was looking at https://github.com/pytest-docker-compose/pytest-docker-compose
[10:09:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:09:08] <enrh> This may not work within ADO pipelines, however.
[10:09:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:10:06] *** Quits: daimbag (~bagdarrel@2607:5300:60:21b::1) (Remote host closed the connection)
[10:10:25] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[10:11:24] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:11:43] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[10:12:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[10:14:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:14:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:15:53] *** Quits: Elzington_ (~Elzington@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[10:17:41] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:f512:962e:c34d:bf0c)
[10:24:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:26:32] *** Quits: noent (~quassel@squint.a-oben.org) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:26:38] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-200.poda.cz)
[10:27:24] *** Quits: lowfi (~lowfi@user/lowfi) (Read error: Connection reset by peer)
[10:28:09] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) Terminated.)
[10:30:23] *** Quits: Cache_Money (~Cache_Mon@2601:602:a000:4be2:54a:acd4:6032:de05) (Quit: Client closed)
[10:32:42] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-200.poda.cz) (Quit: Leaving)
[10:33:23] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[10:34:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[10:34:58] *** Joins: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi)
[10:35:07] *** Quits: dreamon (~dreamon@pd95039d2.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:35:24] *** Joins: mrwick (~mrwick@user/mrwick)
[10:36:06] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[10:36:09] *** Quits: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[10:36:30] *** Joins: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi)
[10:36:35] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[10:37:09] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[10:37:46] *** Joins: manti7 (~manti7@176.10.104.94)
[10:39:01] *** Quits: dre (~dre@2001:8003:c932:c301:3452:4883:fbcf:635) (Remote host closed the connection)
[10:39:39] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:40:10] *** Joins: whaley (~whaley@2603-6080-a301-33d1-456a-1e4c-dd86-8e17.res6.spectrum.com)
[10:41:06] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:43:03] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:44:36] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-200.poda.cz)
[10:46:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[10:47:03] *** Joins: onichomp (~onichomp@2806:264:4404:82be:949d:66d5:b6c8:7384)
[10:47:05] *** Quits: gambl0re (~gambl0re@216.154.4.187) (Ping timeout: 252 seconds)
[10:47:20] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Quit: Leaving)
[10:48:08] *** Joins: Atque (~Atque@user/atque)
[10:48:41] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[10:48:54] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:49:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:50:36] *** Joins: jazzy (~jaziz@user/jaziz)
[10:51:13] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[10:52:33] *** Quits: onichomp (~onichomp@2806:264:4404:82be:949d:66d5:b6c8:7384) (Read error: Connection reset by peer)
[10:52:35] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[10:52:41] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[10:53:47] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:54:38] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:55:28] *** Joins: seednode (~seednode@user/seednode)
[10:56:36] *** Joins: luigibu (~luigi@80.30.201.209)
[10:57:43] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[10:58:05] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:59:11] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:59:30] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[10:59:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:59:39] *** Joins: szymon (~ugh@37.120.156.248)
[10:59:42] *** Joins: Vonter (~Vonter@user/vonter)
[11:00:45] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[11:01:22] *** Joins: fikran (~fikran@user/fikran)
[11:01:43] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:58] *** Joins: Jong (~Jong@2620:10d:c090:400::5:d0b7)
[11:02:25] *** Joins: chele (~chele@user/chele)
[11:02:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:03:05] *** Joins: Vonter (~Vonter@user/vonter)
[11:03:08] *** Joins: dre (~dre@2001:8003:c932:c301:8916:3a5f:8275:217d)
[11:03:27] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[11:04:01] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:04:01] *** Joins: ihristov (~ihristov@85.187.46.226)
[11:05:03] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:06:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:09:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:10:23] <yanmaani> Is there a more pythonic way of doing ', '.join(x), if x is a list?
[11:10:33] <yanmaani> like str_inner(x) or some such
[11:10:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:11:17] <grawity> no, that's pretty much it
[11:11:45] <grawity> well I guess you could call str.join as a class method, i.e. str.join(", ", x) seems to work
[11:12:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:16:22] <parv> I do wish str.join() to Just Work in case of '-'.join( a, b, c ) instead of having to turn that into a sequence of some kind. :-|
[11:16:54] <graybeard> is the answer not that ', '.join(x) is the most pythonic way?
[11:17:24] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:5040:57f5:89ed:5d28) (Remote host closed the connection)
[11:17:30] <graybeard> parv: just wrap the argument in []
[11:17:53] <grawity> parv: feels like you should just use f"{a}-{b}-{c}" in that case
[11:18:11] <parv> graybeard, Yeah that's why I wrote "I do wish... Just Work ..."
[11:18:34] <graybeard> my point is that it would be bad
[11:18:48] <graybeard> and you can write your own wrapper using *args if you insist
[11:18:55] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e9e5-b5d0-98d2-cc50.res6.spectrum.com) (Quit: jarthur)
[11:19:12] <graybeard> and you can decide what to do if one of the elements is a list itself
[11:19:55] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[11:20:24] *** Joins: Milos (~Milos@user/milos)
[11:20:32] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:f512:962e:c34d:bf0c) (Quit: Client closed)
[11:20:34] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[11:20:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:21:12] <parv> I won't mind to build python locally to directly patch that in if such a patch exists.
[11:21:45] <hexnewbie> min(), max() can accept both iterable and multiple values without confusion, but '-'.join('abc') would be ambiguous, as it's a sequence, should result in 'a-b-c', but joining one string as opposed to two ( '-'.join('abc', 'def') ) sometimes makes sense
[11:22:22] <hexnewbie> Like, min(1,2) vs. min(1) is not a problem because the latter is an error, but 'a-b-c' vs. 'abc-def' can be startling
[11:22:30] *** Joins: ammarsalmi (~ammarsalm@154.121.67.115)
[11:23:02] *** Joins: palasso (~palasso@user/palasso)
[11:23:04] *** Joins: Vonter (~Vonter@user/vonter)
[11:24:02] <hexnewbie> Not to mention, you could be induced to accidentally write the wrong one, or find both less readable if have ever used the other one
[11:24:43] <auctus> parv: thanks for the help. Your method does indeed work; but I discovered I'm once again making novice mistakes... I left out a comma. sql("select * from blah where thing > ?", (d))", there should be a comma after d...
[11:24:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:25:10] <auctus> parv: i also noticed while i can select dates that way, with DATE() in sqlite+python it doesnt query like i thought it would, but you can drop the DATE() call and just use ?, like this:
[11:25:39] <auctus>     d=datetime.datetime(year=2021,month=12,day=2,hour=18,minute=7,second=30)
[11:25:39] <auctus>     rows = cur.execute("SELECT stamp FROM pulses WHERE stamp > ?;", (d,)).fetchall()
[11:25:41] <parv> auctus, "That's just Python, man" (re need comma to make tuple)
[11:26:12] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:26:15] <auctus> it works and fetches only results after the 30 second mark
[11:26:41] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 256 seconds)
[11:26:48] <aphysically> I guess you can solve the AoC with an accumulator but python sort of discourages functional programming that leads to big one liners
[11:26:53] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:26:56] <aphysically> (by making large one liners ugly)
[11:27:38] <aphysically> and solving it that way would be far larger than 90 characters :P
[11:27:46] <parv> auctus, Could you show the code, & stack trace, where DATE() on a column causes error?
[11:27:56] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:28:19] <parv> auctus, Use of DATE() depends on the time resolution that you want
[11:29:09] <auctus> parv: i dont think it causes an error, it just doesnt have the resolution i guess like you say, to select after some second
[11:29:18] <auctus> ive been awake way way too long and am not that sharp right now
[11:29:34] <parv> auctus, Ah right. Later
[11:29:44] <auctus> the earlier error was my leaving a comma out apparently :p
[11:29:59] *** Joins: kosh (~kosh@user/kosh)
[11:30:21] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:30:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:30:33] <graybeard> parv: were you joking about patching python locally to fix str.join?
[11:30:40] *** Joins: Devtron (~Devtron@d4708984.rev.sefiber.dk)
[11:31:09] <parv> graybeard, Nope
[11:31:50] <parv> It's just that I cannot produce the patch for lack of C experience
[11:32:19] *** Joins: yte3 (~0@151.15.219.152)
[11:32:25] <graybeard> why not write a library in python that does what you want?
[11:33:10] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:33:24] *** Joins: rendar (~rendar@user/rendar)
[11:33:32] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:34:03] <parv> graybeard, Then I would need to (install the module &) import it explicitly -- not enough of a bother to go that way yet
[11:34:09] <jinsun>  '-'.join((a, b, c)) also works if you don't like seeing square brackets
[11:34:26] <graybeard> you don't necessarily need to install anything
[11:34:32] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:34:35] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:22fb:8596:48c3:7de3)
[11:34:54] <parv> jinsun, I actually love [], since it avoids [SHIFT] key
[11:34:56] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 252 seconds)
[11:35:02] <graybeard> sure you'll need to import it if it's going to be reused elsewhere in your projects, but that way others can still use your project without installing your fork of python
[11:35:18] *** Joins: grayn (Thunderbir@gateway/vpn/protonvpn/grayn)
[11:35:36] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:35:48] <jinsun> you can just monkeypatch str with forbiddenfruit
[11:35:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:36:27] <jinsun> won't work on anything other than cpython, but better than having a custom fork of python
[11:37:33] <parv> graybeard, If I ever publish a module, I will just update the parts to the status quo syntax
[11:37:57] <jinsun> but this is unnessary solution, just press the two extra characters
[11:38:22] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 268 seconds)
[11:38:47] *** Joins: cosimone (~user@93-44-186-55.ip98.fastwebnet.it)
[11:39:42] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:39:43] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[11:40:34] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[11:41:06] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:41:21] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[11:41:59] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[11:41:59] *** grayn1 is now known as grayn
[11:43:06] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[11:43:22] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[11:43:26] <Devtron> Is there a gui i can use for the linux console, that gives a htop look and update rate?
[11:43:33] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 252 seconds)
[11:43:41] <Devtron> I need something that can run in a consol
[11:43:43] <grawity> update rate of what?
[11:43:50] <Devtron> framerate
[11:43:54] <bookworm> gui and console are in direct opposite corners
[11:44:02] <Devtron> I know, but think htop
[11:44:17] <grawity> so like in xterm/gnome-terminal?
[11:44:25] <grawity> do you mean framerate of the entire desktop? framerate of a specific app?
[11:44:32] <grawity> is this still #python?
[11:44:45] <Devtron> grawity yes like that
[11:45:13] <parv> At least the error message for str.join is clear enough to point out the fix needs to be done
[11:45:30] <Devtron> just for the specific app, i need to make a small monitoring app, that displays info from multiple systems on a network,
[11:45:58] <Devtron> and I am looking for a libary that would help making something like xterm/gnome-terminal
[11:46:26] <grawity> htop uses ncurses, there are various python libraries "like ncurses" for terminal-based UIs
[11:46:54] <grawity> some of them probably a lot easier than ncurses
[11:47:03] <grawity> but I was browsing them on github last month and now can't remember a single one
[11:47:10] <Devtron> lol
[11:49:32] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[11:52:10] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:53:13] *** Joins: frost (~frost@user/frost)
[11:53:32] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[11:54:21] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:55:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:55:44] *** Quits: ilmostro (~ilmostro@user/ilmostro) (Quit: WeeChat 3.2)
[11:55:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:55:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:56:26] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[11:56:30] *** Joins: rsx (~dummy@ppp-188-174-130-10.dynamic.mnet-online.de)
[11:57:06] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[11:58:32] *** Joins: dambuster (~dambuster@185.193.170.240)
[11:58:44] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:09:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[12:09:45] <greyblue9> ^C^\^\^C^C^C^\^C
[12:10:07] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[12:10:25] <greyblue9> undead program refuses to terminate
[12:12:05] *** Quits: ammarsalmi (~ammarsalm@154.121.67.115) (Ping timeout: 256 seconds)
[12:12:35] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[12:13:03] <parv> Sending a STOP signal, then TERM (or KILL, ABRT), then CONT works sometimes
[12:13:13] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[12:13:13] *** grayn1 is now known as grayn
[12:13:22] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[12:15:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:09] *** Joins: tobybl (~tobybl@213.31.134.21)
[12:17:07] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 256 seconds)
[12:17:34] <parv> ... have tried that on stuck processes; yet to try on  zombified ones
[12:19:14] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:20:25] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[12:21:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:21:22] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:29:01] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[12:29:03] *** Joins: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr)
[12:29:34] *** Quits: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[12:29:36] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[12:29:43] *** Joins: Klinda (~superleag@user/klinda)
[12:30:32] *** Joins: ede (~ede@user/ede)
[12:30:57] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[12:31:00] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:31:24] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[12:31:43] *** Joins: arinov (~arinov@213.194.126.155)
[12:33:06] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[12:34:14] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:d956:9f4d:987c:d9d2)
[12:35:37] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[12:39:39] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:40:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:41:17] *** Joins: jay-m126 (~jay-m@154.72.167.239)
[12:41:22] *** Joins: jay-m126_ (~jay-m@154.72.167.239)
[12:42:29] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:43:35] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:44:47] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[12:44:54] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[12:46:48] *** Joins: aniketgm (~Aniket@49.36.107.115)
[12:46:52] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[12:47:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:47:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:43] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[12:53:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[12:57:29] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[12:57:43] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[12:58:45] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Client Quit)
[13:00:45] *** Joins: BlueSky (~BlueSky@user/bluesky)
[13:03:46] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[13:06:20] *** Joins: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de)
[13:08:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:09:01] *** Joins: pepper (~pepper@user/pepper)
[13:10:10] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:10:43] *** Joins: fikran (~fikran@user/fikran)
[13:11:01] *** Joins: lethu (~lethu@user/lethu)
[13:11:27] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Read error: Connection reset by peer)
[13:12:20] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[13:13:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:14:07] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 252 seconds)
[13:16:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:16:56] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:17:00] *** Joins: stonkey (~stonkey@user/stonkey)
[13:18:47] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:20:03] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:20:50] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:20:54] *** Joins: brabrax (~brabrax@user/brabrax)
[13:21:26] *** Joins: trace987 (~trace@91.66.152.52)
[13:22:10] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[13:22:52] *** Joins: tobybl (~tobybl@213.31.134.21)
[13:23:04] *** Joins: brabrax (~brabrax@user/brabrax)
[13:23:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:23:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[13:23:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:29:10] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:29:29] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:29:31] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[13:30:23] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:31:01] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:31:30] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[13:31:51] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[13:32:23] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[13:33:03] *** Quits: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[13:33:58] *** Joins: rindolf (~shlomif@87.68.242.48.adsl.012.net.il)
[13:34:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:34:24] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[13:35:07] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[13:35:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:35:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:35:51] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:36:28] *** Joins: shad (~shad@user/shad)
[13:36:32] *** Lord_of_Life_ is now known as Lord_of_Life
[13:37:42] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com)
[13:38:02] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:38:13] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:38:20] *** Joins: pepper (~pepper@user/pepper)
[13:39:24] *** Joins: jwhisnant_ (~jwhisnant@user/jwhisnant)
[13:39:32] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:40:05] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:40:07] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Client Quit)
[13:40:30] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:40:51] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:41:05] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:42:09] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:42:50] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:42:56] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:43:13] *** Joins: guenhael1 (~Thunderbi@193.52.208.98)
[13:43:16] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:44:36] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[13:45:01] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[13:45:01] *** guenhael1 is now known as guenhael
[13:45:13] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:45:56] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:47:21] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:48:51] *** Joins: greedom (~greedom@p200300de6708e600c8f52a83ae8b4ab2.dip0.t-ipconnect.de)
[13:50:41] *** Quits: bookworm (~bookworm@neomutt/bookworm) (Changing host)
[13:50:41] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[13:51:13] <jpic> hi all, any idea why this doesn't capture c=d? re.findall(r'^(?P<path>[^[]+)(\[(?P<key>[^=]+)=(?P<value>[^]]+)\])*$', 'a/b.js[c=d][e=f]')
[13:51:17] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:53:09] *** Joins: grayn (~Thunderbi@2001:8003:8c8b:e00:1778:9c34:19da:b89e)
[13:53:28] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[13:53:53] *** Joins: falkor (~falkor@90.242.155.158)
[13:55:04] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[13:55:25] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[13:55:38] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Remote host closed the connection)
[13:56:06] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:1778:9c34:19da:b89e) (Client Quit)
[13:57:13] *** Joins: grayn (~Thunderbi@2001:8003:8c8b:e00:73f6:5eaa:c950:a1a1)
[13:59:48] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[14:00:43] <aphysically> if you're using ' as your delimiter then ' needs to be escaped
[14:01:01] *** Joins: slav0nic (slav0nic@python.su)
[14:01:03] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[14:01:47] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[14:02:31] <jpic> i'm not using a delimiter, starting with ^ and ending with $
[14:02:31] <aphysically> oh the second string is what you're matching?
[14:02:34] <jpic> yes
[14:03:01] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Remote host closed the connection)
[14:03:34] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[14:03:34] <deniska> jpic: I'd use re.findall(r'\[(?P<key>[^=]+)=(?P<value>[^]]+)\]', 'a/b.js[c=d][e=f]') to find the stuff specifically inside the brackets
[14:04:00] <deniska> jpic: and then find the address using str.rpartition or something similarly simple
[14:04:08] <deniska> str.partition*
[14:04:28] <jpic> i see, nice, thank you!!
[14:04:49] <aphysically> it is matching like I expect, are you wanting to capture all the key=val pairs?
[14:06:34] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[14:07:45] <jpic> aphysically: yes, this matches [('a/b.js', '[e=f]', 'e', 'f')] but I was expecting [('a/b.js', '[c=d]', 'c', 'd', '[e=f]', 'e', 'f')]
[14:08:01] <aphysically> ah yes, only the last match will be stored in a capture group
[14:08:08] <aphysically> this is how capture groups work in general
[14:08:29] <jpic> well as far as I've seen it's a bit subject to debates
[14:08:39] <aphysically> it's in the documentation
[14:08:50] <aphysically> (that python's regex works like this)
[14:09:01] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[14:09:28] <aphysically> there's a finditer or whatever if you want to match multiple times that works really nice
[14:09:51] <KirkMcDonald> I mean, it is using findall() already...
[14:09:58] *** Quits: ubert1 (~Thunderbi@p200300ecdf0ba290e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:10:05] <KirkMcDonald> Oh, wait, I was confusing deniska's code snippet, derp.
[14:10:48] <aphysically> yeah but it's only one match
[14:11:01] <aphysically> so it found all one match, with only the last group bound
[14:11:05] <jpic> aphysically: actually I couldn't get finditer to achieve that for some reason, [*re.finditer(r'\[(?P<key>[^=]+)=(?P<value>[^]]+)\]', 'a/b.js[c=d][e=f]')]
[14:11:08] <jpic> [<re.Match object; span=(6, 11), match='[c=d]'>, <re.Match object; span=(11, 16), match='[e=f]'>]
[14:11:20] <jpic> wait, with deniska's regexp it works like findall
[14:11:21] <aphysically> you can use finditer/findall, but you have to rewrite the regex
[14:11:29] *** Quits: akspecs (00cc8321af@user/akspecs) (Changing host)
[14:11:29] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[14:12:04] <jpic> but not with that one (Pdb) [*re.finditer(r'^(?P<path>[^[]+)(\[(?P<key>[^=]+)=(?P<value>[^]]+)\])*$', 'a/b.js[c=d][e=f]')]
[14:12:07] <jpic> [<re.Match object; span=(0, 16), match='a/b.js[c=d][e=f]'>]
[14:12:28] <jpic> how could i rewrite to make it work? like in deniska's answer?
[14:12:35] <jpic> or do you mean something else?
[14:13:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[14:19:23] *** dcaro_away is now known as dcaro
[14:20:10] *** Joins: georgios (~georgios@user/georgios)
[14:22:08] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 252 seconds)
[14:22:40] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[14:24:59] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[14:25:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:25:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:27:59] <aphysically> jpic: if you want to use it like this, you have to make an individual regex that matches multiple times, right now you have one regex that matches the entire string once
[14:28:04] *** Joins: brainfunnel (~brainfunn@195.213.96.181)
[14:28:26] <aphysically> the capture group matches multiple times, but the regex only matches once
[14:28:40] <aphysically> and within each single regex match, the last capture group match gets stored
[14:29:52] *** Parts: aniketgm (~Aniket@49.36.107.115) ()
[14:30:04] <aphysically> I realize in your case this is painful because you have some preceding junk in your regex, but that's simply how the built-in regex works
[14:30:23] *** Quits: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[14:30:24] <aphysically> fwiw I think most of the external regex libraries offer methods without this limitation
[14:31:17] *** Joins: Naan (~Naan@user/naan)
[14:32:29] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:33:41] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[14:33:51] *** Joins: ryan-c (ryan-c@znc.rya.nc)
[14:34:44] <CalimeroTeknik> why does a library 'multidict' exist? (what features does it have that Dict[T, List[U]] doesn't have?)
[14:34:48] *** Joins: MaximB (~MaximB@87.68.165.132)
[14:34:53] <ryan-c> Is there a way to contruct an os.stat_result object with e.g. st_blocks specified?
[14:35:47] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[14:36:03] *** Joins: pepper (~pepper@user/pepper)
[14:37:05] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:37:12] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[14:37:33] <jpic> right, makes sense! thank you deeply for the heads up aphysically <3
[14:38:25] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[14:39:37] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[14:40:49] *** Quits: capn (~capn@user/capn) (Ping timeout: 265 seconds)
[14:41:28] *** Quits: grandrew (~grandrew@2601:642:c301:c600:f22f:74ff:feac:90a3) (Ping timeout: 265 seconds)
[14:41:53] <MaximB> Hi, please take a look at this code and see if there is a better solution: https://paste.debian.net/1221632/
[14:42:20] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[14:42:26] <ryan-c> os.stat_result seems to be implemented in C based on PyStructSequence, and I can't figure out what to do with it.
[14:43:28] *** Joins: capn (~capn@user/capn)
[14:43:41] <supakeen> MaximB: `for letter in set(input_str): input_str.replace(letter * 3, "")`.
[14:44:05] <supakeen> or well, `* num`.
[14:45:03] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[14:45:50] <supakeen> alternatively make it into a single regex with `return re.sub("|".join(letter * num for letter in set(input_str), "", input_str)`
[14:47:09] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:58eb:ce93:64df:ecae)
[14:47:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[14:48:21] *** Quits: jay-m126_ (~jay-m@154.72.167.239) (Remote host closed the connection)
[14:48:21] *** Quits: jay-m126 (~jay-m@154.72.167.239) (Remote host closed the connection)
[14:48:32] <supakeen> https://bpa.st/BBTQ saves quite a few lines ;)
[14:49:37] <CalimeroTeknik> you could put "for …" and "in …" each on their own line
[14:50:05] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[14:50:47] <CalimeroTeknik> isn't this missing a paren, too?
[14:50:50] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[14:50:57] <bookworm> ryan-c: what do you mean by construct? You get the thing from the OS, there's not much you can do about missing information (not all fields are valid in  all filesystems)
[14:51:05] <bookworm> or did I get your question wrong?
[14:51:06] <supakeen> sure, but it's also example code not a ready-chewed answer
[14:51:27] <MaximB> supakeen you mean like this? https://paste.debian.net/1221635/
[14:51:58] <CalimeroTeknik> supakeen, I use this type of indent http://ix.io/3GLr
[14:52:02] *** Joins: afidegnum (~user@102.176.94.59)
[14:52:15] <supakeen> MaximB: I mean like this: https://bpa.st/RSEA
[14:52:22] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[14:52:50] <afidegnum> hi, my dictionary comprehension still returns empty dictionary even though i tried testing with None what am i missing? https://dpaste.org/RbqD
[14:52:58] <ryan-c> bookworm: I want to modify the value, but os.stat_result objects are immutable, so modifying it would seem to require creating a new object
[14:53:24] <bookworm> you... know better than the OS? oO doubtful
[14:53:30] <leElvyn> Hi, i am trying to use gettext with F-Strings in python 3.10 (as it supposed to work now, as of bpo-36310) however :
[14:53:30] <leElvyn> ```
[14:53:31] <leElvyn> *** cogs/something.py:240: Seen unexpected token "f"{reply} test""
[14:53:31] <leElvyn> ```
[14:53:32] <leElvyn> with code :
[14:53:32] <leElvyn> ```
[14:53:32] *** litharge sets mode: +q $a:leElvyn
[14:54:02] <ryan-c> bookworm: I want to override the st_mode value and then pass the object into a function that expects a os.stat_result object
[14:54:03] *** litharge sets mode: -q $a:leElvyn
[14:54:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:54:11] <supakeen> leElvyn: Use a pastebin for text > 2 lines, see the topic for an example one.
[14:54:48] <ryan-c> it seems that i can do what i want by doing cursed things with os.stat_result.__reduce__ and os.stat_result.__setstate__, but....
[14:55:08] * ryan-c shutters in disgust
[14:55:13] <bookworm> I see
[14:55:34] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[14:56:08] <leElvyn> Well, here it is : https://pastebin.com/tNz3GmSh
[14:56:24] <ryan-c> and i think mucking about with it via __reduce__/__setstate__ is very implementation dependant?
[14:56:27] *** Joins: jay-m126 (~jay-m@154.72.167.239)
[14:56:32] *** Joins: jay-m126_ (~jay-m@154.72.167.239)
[14:57:00] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:73f6:5eaa:c950:a1a1) (Quit: grayn)
[14:57:03] *** Joins: grayn1 (~Thunderbi@124.188.209.195)
[14:58:02] <ryan-c> seems like the sane thing to do here is subclass os.stat_result and add some overrides
[14:58:02] <supakeen> leElvyn: That BPO is the other way around.
[14:58:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:58:26] <supakeen> e.g. it makes `f"{_('foo')}"` work, not `_(f"foo")`.
[14:58:58] <leElvyn> Oh, ok
[14:59:11] <leElvyn> So, there is still no way to have f-strings ?
[14:59:17] <supakeen> Nope.
[14:59:26] <supakeen> gettext doesn't play nice with this kind of thing, sadly.
[14:59:27] *** Quits: grayn1 (~Thunderbi@124.188.209.195) (Client Quit)
[14:59:35] <leElvyn> Sad
[14:59:44] *** Joins: grayn (~Thunderbi@124.188.209.195)
[14:59:49] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Ping timeout: 256 seconds)
[15:00:08] <supakeen> One can do `_("foo {bar} baz").format(bar=mybar)`.
[15:00:30] *** Quits: dhch (~dhch@185.213.154.168) (Read error: Connection reset by peer)
[15:00:41] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: Leaving)
[15:01:29] *** Parts: afidegnum (~user@102.176.94.59) (ERC (IRC client for Emacs 27.2))
[15:01:32] *** Joins: dhch (~dhch@185.213.154.168)
[15:02:54] <MaximB> supakeen thank you, it works wonders... I wonder, how would you write a solution using "for letter in set(input_str): input_str.replace(letter * num, "")" ? tried this: https://paste.debian.net/1221637/ but no good
[15:04:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:05:02] *** Joins: jess (~jess@libera/staff/jess)
[15:05:26] *** Quits: leElvyn (~leElvyn@user/leelvyn) (Ping timeout: 256 seconds)
[15:05:40] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[15:06:33] *** Quits: grayn (~Thunderbi@124.188.209.195) (Ping timeout: 256 seconds)
[15:06:33] *** grayn1 is now known as grayn
[15:07:17] *** Joins: kuter (~kuter@public-gprs526377.centertel.pl)
[15:07:38] <ryan-c> oh, i can't subclass os.stat_result T_T
[15:08:17] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Quit: Leaving)
[15:08:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:08:49] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[15:08:53] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 252 seconds)
[15:09:42] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:09:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:36] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[15:11:32] *** Joins: zeden (~zeden@user/zeden)
[15:11:44] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:11:52] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[15:13:03] <MaximB> supakeen also this will only remove 3 chars in a row, but we need that if a char is 3 times in a row, all instances of that char will be removed:      for letter in set(input_str): input_str.replace(letter * num, "")
[15:13:21] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:13:22] *** Joins: tobybl (~tobybl@213.31.134.21)
[15:13:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[15:13:58] <MaximB> (1q2weee4r5tett",3)   > 1qq2w4r5ttt
[15:14:32] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[15:14:33] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[15:14:48] <ryan-c> okay, solution - os.stat_result has a second, optional argument that's a dict specifying items not in the tuple of 10 items
[15:14:52] <m_tadeu> hi...what is the reason for, when running pytest and loading conftest.py, it tries to load an __init__.py 2 dirs above (../../__init__.py)? and how to avoid that?
[15:16:14] <Yhg1s> m_tadeu: pytest tries to figure out the root package and imports tests that way, so that relative imports work. If you don't want the tests to be in the package, don't give the directory with tests an __init__.py.
[15:16:51] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[15:17:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:19:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:20:05] *** Joins: fikran (~fikran@user/fikran)
[15:20:36] <m_tadeu> Yhg1s: thanks...now I have a "tests" and "src" dirs at the same level...how can the tests import modules from src?
[15:23:35] <Yhg1s> m_tadeu: if you use the src layout, you really don't want to give the 'tests' directory an __init__.py. (Nor the 'src' dir, nor the directory 'src' and 'tests' are in, for that matter)
[15:23:43] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[15:23:56] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[15:23:57] <kek_> hi
[15:24:34] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:24:44] <m_tadeu> Yhg1s: but then I get this "E   ImportError: attempted relative import beyond top-level package"
[15:24:57] <kek_> so I have a pytorch tensor (or just think of a numpy array) of size [9, 2048] and I want it to be of size 9*2048 i.e. turning the 2d array into a 1d array by appending the 2nd entry to the end of the first and so on. e.g. [[1,2],[3,4] => [1,2,3,4].
[15:25:13] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:25:25] *** Joins: legola (~legola@46.235.101.65)
[15:26:17] <kek_> ah it finally came ot me: flatten()
[15:26:24] *** Quits: brainfunnel (~brainfunn@195.213.96.181) (Quit: thanks, bye!)
[15:28:05] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:29:03] *** Quits: kuter (~kuter@public-gprs526377.centertel.pl) (Ping timeout: 252 seconds)
[15:30:47] <Yhg1s> m_tadeu: when you do what, exactly? Are you trying to do 'from ..src import my_package' or something?
[15:31:09] *** Joins: kuter (~kuter@public-gprs528788.centertel.pl)
[15:32:45] <m_tadeu> Yhg1s: from the tests/test_sometest.py, I import ...somemodule.py...actualy this is in the root, not the src, but I think it's the same issue, correct?
[15:32:52] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[15:33:27] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[15:34:16] <Yhg1s> m_tadeu: not exactly. You're trying to import something outside of the package. It really doesn't make sense to do this. Relative imports aren't path-relative, they're package-relative. In the src layout you don't really want tests to be a package, but you _certainly_ don't want the directory *containing* 'tests' to be a package. Why are you trying to import a file that's outside the test directory, but not
[15:34:22] <Yhg1s> in the package you're testing?
[15:36:01] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:d956:9f4d:987c:d9d2) (Quit: Konversation terminated!)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:59] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[15:39:02] <m_tadeu> Yhg1s: I'm makeing the dir struct to isolate the tests in it's own dir, for organizational purposes
[15:39:20] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[15:39:22] <Yhg1s> m_tadeu: sure, that's a good idea. So why are you trying to import from outside that directory?
[15:40:04] <very_sneaky> how relevant is jack diederich's "stop writing classes" talk 9 years later? still relevant?
[15:40:15] <m_tadeu> I need to get the code to test from ../something.py for unit testing
[15:40:46] <Yhg1s> m_tadeu: is it part of the tests? Part of the package you're installing? Something else?
[15:41:54] <m_tadeu> Yhg1s: it's part of the source I need to test...so I import the module, and make the tests using the functions inside
[15:42:28] <Yhg1s> m_tadeu: it really sounds like that module should be in 'src', then? Why isn't it in there?
[15:43:59] <m_tadeu> Yhg1s: I'll probably move it there in the neer future (hence my initial question) but at the moment, the modules are in the project dir (so in .. relative to the tests dir)
[15:44:07] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[15:44:25] <Yhg1s> m_tadeu: okay, so you're *not* using the 'src' layout? Is the module supposed to be a top-level module?
[15:44:26] *** Quits: greedom (~greedom@p200300de6708e600c8f52a83ae8b4ab2.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:44:44] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[15:45:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[15:46:00] <m_tadeu> Yhg1s: It probably mode to src in the future...but not there yet
[15:46:12] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[15:46:34] *** Joins: arinov (~arinov@178.240.181.140)
[15:46:45] *** Joins: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr)
[15:47:54] *** Joins: tobybl (~tobybl@213.31.134.21)
[15:48:43] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[15:48:52] <Yhg1s> m_tadeu: I'm not asking about the future, though.
[15:49:01] <Yhg1s> m_tadeu: is the module supposed to be a top-level module?
[15:49:41] <m_tadeu> Yhg1s: yes
[15:50:06] <Yhg1s> okay, then the way to import it in your tests is 'import somemodule'. Not 'from .. import somemodule'
[15:50:11] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 256 seconds)
[15:51:10] *** Joins: unyu (~pyon@user/pyon)
[15:53:33] *** Quits: delvian (~delvian@41.6.64.129) (Quit: Leaving)
[15:54:13] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:55:54] *** Quits: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr) (Quit: Leaving)
[15:56:44] *** Quits: kuter (~kuter@public-gprs528788.centertel.pl) (Ping timeout: 252 seconds)
[15:57:57] *** Joins: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4)
[15:58:45] *** Joins: kuter (~kuter@public-gprs526031.centertel.pl)
[15:59:50] *** Quits: MaximB (~MaximB@87.68.165.132) (Quit: Client closed)
[16:00:17] <zamba> i want to check if a set of bytes are all zeroes.. how can i do that?
[16:00:44] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:00:47] <zamba> it's specifically 1119 bytes
[16:00:53] <zamba> so i want to check if all 1119 bytes are in fact 0
[16:01:36] *** Quits: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4) (Remote host closed the connection)
[16:01:36] <supakeen> sum(bytes) == 0
[16:01:37] <zamba> convert it to an int and then just check if it's 0?
[16:01:40] <zamba> sweet
[16:02:22] <m_tadeu> Yhg1s: doing like that, I'm getting module not found
[16:02:41] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[16:03:13] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[16:03:46] *** Joins: delvian (~delvian@41.6.64.129)
[16:04:02] <Yhg1s> m_tadeu: okay, and does 'tests' have an __init__.py?
[16:04:17] <m_tadeu> not anymore :)
[16:04:21] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[16:04:21] *** grayn1 is now known as grayn
[16:04:23] <Yhg1s> m_tadeu: are you running the tests against the package as it's installed?
[16:04:34] <Yhg1s> (like, in a new virtualenv?) Or just from the source tree?
[16:04:39] *** Joins: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4)
[16:05:11] <m_tadeu> Yhg1s:  just from the source tree
[16:05:41] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:06:09] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[16:06:22] *** Joins: kurfen (~kurfen@lfbn-ann-1-320-249.w86-200.abo.wanadoo.fr)
[16:06:47] <Yhg1s> m_tadeu: the easy solution then is to add back tests/__init__.py. (See also bit.ly/pypackages)
[16:07:29] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[16:07:36] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Quit: Leaving)
[16:07:43] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[16:08:15] <m_tadeu> Yhg1s: but then I'll have that initial problem...it will try to import stuff in the parent dirs to infinity :P
[16:08:39] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 252 seconds)
[16:08:40] *** grayn1 is now known as grayn
[16:08:40] *** Joins: gulzar (~gulzar@2409:4055:404:8dab:c375:2e75:fc88:e62e)
[16:09:07] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[16:09:32] <Yhg1s> m_tadeu: does the directory containing tests *also* have an __init__.py?
[16:09:50] <m_tadeu> yes
[16:09:59] *** Quits: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Read error: Connection reset by peer)
[16:10:05] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:10:06] <Yhg1s> Why? If somemodule.py is supposed to be toplevel, don't put an __init__.py in its directory.
[16:11:19] <m_tadeu> it's a plugin...it needs that to be found
[16:11:38] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[16:12:07] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[16:12:16] <Yhg1s> m_tadeu: I don't understand what that has to do with anything. Is this a source tree, or an installed plugin? Why do you need an __init__.py in your source tree? Why do you need tests in an installed plugin?
[16:12:17] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[16:12:30] *** Joins: grooverman (~grooverma@177.102.119.40)
[16:14:15] <Yhg1s> also, how can it both be a plugin *and* contain top-level modules?
[16:15:15] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:15:37] <kek_> hi, anyone knows how I can make a second x axis resp labels? I want to do something like this https://i.imgur.com/xL3bP7g.png
[16:16:14] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[16:16:26] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[16:16:56] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:17:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[16:18:08] *** [_] is now known as [itchyjunk]
[16:18:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[16:18:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:19:14] *** gitesh is now known as g1t3sh
[16:19:28] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[16:19:34] *** Joins: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi)
[16:20:13] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:20:34] <MrNaz> hi all ok so i have a script that runs many thousands of os.popen() commands. how can i tell them to wait before executing the next one, and how can i place a processing time limit on them? they should only take a second to process, but i'm finding thousands of processes being spawned on the machine until it eventuallhy locks up and crashes
[16:21:04] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:58eb:ce93:64df:ecae) (Quit: Client closed)
[16:21:16] <supakeen> if you call p.communicate on them it'll block, that function takes a timeout at which point you kan p.kill them if you so desire
[16:21:29] *** g1t3sh is now known as gitesh
[16:21:32] <supakeen> Oh, os.popen, then start by rewriting to subprocess.Popen (or subprocess.run).
[16:21:34] <bjs> MrNaz: you probably want the subprocess module, not os.popen
[16:21:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:22:21] <bjs> MrNaz: os.popen() does exactly what you describe, starts the process in the background and then continues.  Something like subprocess.run() will start the process, and wait for it to finish (and do some error checking as bonus)
[16:22:21] <supakeen> Hacky version: prefix every shell command with `timeout x` and check exit.
[16:23:03] *** Joins: paprika (~pepper@user/pepper)
[16:23:27] <Yhg1s> bonus benefit of subprocess.run: if you don't pass shell=True (and you shouldn't), you won't involve the shell and each process will be less expensive ;P
[16:23:44] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[16:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:14] *** Quits: paprika (~pepper@user/pepper) (Client Quit)
[16:24:32] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:24:47] *** Joins: kindablue (znc@irc.tpurist.com)
[16:25:21] *** Joins: ham5urg (~ham5urg@2a00:20:7058:4fdb:53dd:51f1:affe:b385)
[16:25:39] <supakeen> disadvantage of subprocess.run; learning 800 combinations of kwargs
[16:26:04] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[16:26:07] <Yhg1s> nah, if you like os.popen, you can just ignore most of them ;P
[16:26:12] <deniska> still better than CreateProcessEx
[16:26:22] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:26:22] <supakeen> that were added in various python versions over the ages making figuring out which ones you can actually use a chore
[16:26:23] *** Joins: a0z1 (~a0z1@141.98.254.131)
[16:26:28] <supakeen> Yhg1s: point taken :D
[16:26:39] <ham5urg> Is there a way to create via cross-compiling an app.exe out of my app.py on Linux?
[16:26:51] *** Quits: a0z1 (~a0z1@141.98.254.131) (Remote host closed the connection)
[16:27:37] <MrNaz> are there some simple examples on how to use subprocess.run
[16:27:38] <MrNaz> ?
[16:27:40] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Quit: grayn)
[16:27:46] *** Quits: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[16:27:54] <MrNaz> the docs are far too confusing and i haven't been able to make it work
[16:27:57] <bjs> MrNaz: does the subprocess docs does not have examples?
[16:28:02] <bjs> MrNaz: oh?  what did you try?
[16:29:14] <MrNaz> https://bpa.st/Q3FA
[16:30:02] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[16:30:03] <Yhg1s> it has quite a lot of examples. But here's one: subprocess.run(['some', 'cmd'])
[16:30:08] <bjs> MrNaz: you should pass a list to subprocess.run, like in the examples
[16:30:16] <MrNaz> yea still doesn't work
[16:30:23] <bjs> MrNaz: e.g. subprocess.run(["ls", "-l"])
[16:30:28] <bjs> MrNaz: what did you try?
[16:30:36] <MrNaz> https://bpa.st/GKGA
[16:30:58] <supakeen> My blogpost on using subprocess is still the most popular thing I ever wrote apparently.
[16:31:09] <TingPing> MrNaz: all args are in the same list
[16:31:12] <Yhg1s> MrNaz: subprocess.run(['calculate.py', '-y', param[0], '-m', param[1], '-lat', param[2], '-long', param[3], '-tz', param[4], '-precise', param[5]])
[16:31:44] <bjs> if this is a .py file, maybe it'd be nicer to have a function and import it, rather than running the file over-and-over
[16:31:54] <deniska> (and if it's .py file nearby, maybe what you actually want is `import calculate`?)
[16:32:10] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[16:32:10] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:32:20] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:32:21] <deniska> Unless it's a different interpreter :)
[16:32:45] <MrNaz> so... i just need to .split() the string? and pass that list?
[16:33:07] <Yhg1s> MrNaz: well, the better thing would be to not create the string in the first plac3e.
[16:33:21] <Yhg1s> MrNaz: but yes, subprocess.run takes a list of arguments, not a single string.
[16:33:23] *** flooded is now known as _flood
[16:33:25] <deniska> MrNaz: when you type a string in a shell like bash, it does the splitting for you to make an argv array. In python you just pass the argv array directly
[16:33:29] <MrNaz> is there a reason that you can't just construct a command as a string?
[16:33:39] <MrNaz> oh
[16:33:45] <supakeen> MrNaz: The reasoning is this: https://supakeen.com/weblog/executing-commands-safely-from-python.html
[16:33:45] <MrNaz> well that answers the question
[16:33:49] <Yhg1s> MrNaz: because it invovles splitting it into arguments, and then you end up having to quote and escape things, etc.
[16:33:50] <deniska> because string gets break down by a shell, and with subprocess.run there's no shell involved
[16:33:57] <bjs> MrNaz: because that's not actually how processes work,  a process gets a list of arguments (argv). The shell is what splits your string up into those arguments
[16:34:03] <supakeen> yet
[16:34:04] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:34:04] <Yhg1s> (there _can_ be a shell involved, but it's not a good idea.)
[16:34:12] <deniska> bjs: (unless on windows)
[16:34:14] <supakeen> asyncion.create_subprocess_exec is cmd, args ;)
[16:35:13] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:35:48] <bjs> deniska: Windows is weird, and subprocess does the right thing to combine the argv into the arguments for CreateProcess :)
[16:35:53] <Yhg1s> supakeen: program, *args.
[16:36:33] <MrNaz> ok well it's still not working... here's the code and output:   https://bpa.st/BEVQ   yes i know it's not written correctly i'll refactor for correctness later once i get it actually working
[16:36:34] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[16:36:45] *** Joins: Atque (~Atque@user/atque)
[16:36:45] <deniska> Why is asyncio.create_subprocess_exec weird like that btw?
[16:37:04] <TingPing> asyncio is full of terrible apis
[16:38:16] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:18] <Yhg1s> deniska: it's not weirder than passing a list. I'm pretty sure the thought was "why pass a list when you can just pass positional arguments".
[16:38:43] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:38:48] <jinsun> MrNaz: on windows you can actually pass a str directly, but cmd and args should be one string
[16:39:05] <bjs> MrNaz: it's saying you can't execute the .py file directly
[16:39:18] *** Quits: ham5urg (~ham5urg@2a00:20:7058:4fdb:53dd:51f1:affe:b385) (Ping timeout: 268 seconds)
[16:39:29] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[16:39:34] <MrNaz> bjs: oh? but i can do that from the command line
[16:39:48] <Yhg1s> MrNaz: because it involves the shell, very likely.
[16:39:57] <MrNaz> i guess the interpretter must infer the handler from the extension
[16:39:59] <MrNaz> or something
[16:40:01] <deniska> Yhg1s: well, I guess, depends on how dynamic the list of argument is. I often construct a command by appending pieces, so in the create_subprocess_exec call I end up with *cmd
[16:40:05] <Yhg1s> MrNaz: you probably just want to use sys.executable here? I'm not sure which Python you expect to run.
[16:40:11] <bjs> MrNaz: maybe you wanted `[sys.executable, "calculate.py", ...]`
[16:40:21] <bjs> MrNaz: but really the way to run things in another .py file is to import them
[16:40:40] <bjs> MrNaz: using sys.executable means it'll use the same Python to run the file
[16:40:53] <MrNaz> well the problem here is that while i'm running the .py file locally in this case
[16:41:41] <MrNaz> i will soion be running the file on remote machines via an ssh command, the reason being that there is a lot of CPU heavy lifting, and we will use an array of calculation servers
[16:41:45] <MrNaz> e.g., cmd = 'ssh sujud@180.150.52.139 -p 22451 "python3 /home/sujud/api/salat/calculate.py -y %s -m %s -lat %s -long %s -tz %s -precise %s"' % (params)
[16:41:51] <MrNaz> that's where i'm headed with all this
[16:42:18] <deniska> oh, with ssh you're pretty much yeeting a string for a shell over anyway…
[16:42:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:42:33] <MrNaz> it currently works with os.popen() but if falls over when i run the full data set
[16:42:42] <MrNaz> deniska yea i know
[16:42:45] <Yhg1s> MrNaz: all the more reason not to split the string, nor to rely on the shell processing it. The quoting becomes a nightmare. With subprocess.run, you can just pass "python3 /home/sujud/api/salat/calculate.py -y %s -m %s -lat %s -long %s -tz %s -precise %s" as a single argument in the list.
[16:43:23] <Yhg1s> So, it becomes ['ssh', 'sujud@180.150.52.139', '-p', '22451', "python3 /home/sujud/api/salat/calculate.py -y %s -m %s -lat %s -long %s -tz %s -precise %s" % params]
[16:43:48] *** Joins: darksun (~darksun@user/darksun)
[16:44:12] <MrNaz> it's midnight here and this is more new syntax than my brain can handle at this moment... i better save this chat log and read it when i'm rested and caffeinated
[16:44:20] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[16:45:28] *** Quits: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4) (Remote host closed the connection)
[16:45:49] <MrNaz> hmm no i think i get that
[16:47:15] *** Joins: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4)
[16:52:19] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:56:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:57:48] *** Quits: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4) (Ping timeout: 268 seconds)
[16:59:24] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:59:34] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--282.oracle-ocna.com)
[16:59:38] *** Joins: concrete-houses (~g@209.6.150.53)
[16:59:51] <concrete-houses> object gods I have a nasty problem for you
[17:00:08] <concrete-houses> say I have licensing
[17:00:11] <concrete-houses> by county
[17:00:37] <concrete-houses> brin   deer  500
[17:00:40] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[17:00:43] <concrete-houses> brin    fish 200
[17:00:51] <concrete-houses> then another county
[17:00:57] <concrete-houses> agon   deer   300
[17:01:04] <concrete-houses> merin  fish   100
[17:01:10] <concrete-houses> and I want a report
[17:01:22] <concrete-houses> county   deer  fish   total
[17:01:25] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[17:01:37] <concrete-houses> brin   500  200  700
[17:02:04] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:02:14] <concrete-houses> merin  300   0   300
[17:02:30] <concrete-houses> oh damnit
[17:02:33] <bjs> concrete-houses: irc is not a good way to write multiple lines like that
[17:02:39] <concrete-houses> ok let me paste
[17:02:55] <bjs> I'm a little confused what the things mean, do you have an example input?  "the another country" is that a part of it?
[17:05:43] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[17:06:41] <concrete-houses> https://controlc.com/969eaba3
[17:06:51] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[17:07:03] <concrete-houses> its something someone does with an excel picot table...common to reporting
[17:07:11] <concrete-houses> but i wonder how to automate
[17:07:20] <concrete-houses> he was asking how I do it in SQL
[17:07:24] <concrete-houses> not sure
[17:07:29] <bjs> concrete-houses: well, you could use Excel
[17:07:33] <concrete-houses> someone told me a box array and nested loop
[17:07:33] <bjs> oh SQL? wait is this a database?
[17:07:41] <bjs> or is this a file?
[17:07:42] <concrete-houses> well its a report
[17:07:46] <concrete-houses> from a database
[17:07:57] <concrete-houses> that has to go to some client in the output format
[17:08:02] <concrete-houses> https://controlc.com/969eaba3
[17:08:20] <concrete-houses> since there are 100 simialr reports it would be nice to program the solution
[17:08:39] <bjs> concrete-houses: sure, a little loop that counted up how many of each license type there was for each county would work fine
[17:09:11] <bjs> You might find dictionaries helpful here
[17:09:51] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:10:48] <bjs> You also mentioned SQL, and I'm sure you could use SQL aggregate functions (e.g. sum) to produce a table like that, too.
[17:11:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[17:13:35] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:13:47] <deniska> I remember reading about fancy stuff like GROUPING SETS, ROLLUP, CUBE
[17:15:23] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[17:15:54] <mefistofeles> hey, you know when you get these things like "<X object of type Y at 0xabcd012345>" , what is that hexadecimal representation called?
[17:16:01] <cluelessperson_> Anyone here doing advent of code?
[17:16:15] <bjs> mefistofeles: it's called "some random numbers in the representation"
[17:16:16] <bjs> :)
[17:16:26] <mefistofeles> bjs: oh really, it doesn't have a special name? xD
[17:16:27] <cluelessperson_> I'm also in AoC channels, but I'm wondering how to best handle day2's problem more elegantly.
[17:16:37] <deniska> mefistofeles: well, technically it's a memory address
[17:16:46] <deniska> but it's not too useful to know within python
[17:16:48] <cluelessperson_> mefistofeles, memory address. :P
[17:16:49] <cluelessperson_> yee
[17:16:55] <mefistofeles> deniska: can I be sure that the same hexadecimal means the same object?
[17:17:10] <mefistofeles> (for the same python process, at least)
[17:17:17] <bjs> mefistofeles: no,  it may or may not be a memory address which may or may not relate to the id() of the object but (a) it doesn't have to be that and (b) it's not a standard thing and objects can choose whatever represnetaiton they want and (c) you can't use the number to infer anything
[17:17:32] <deniska> mefistofeles: not really, python can put a new object at the same address another object which was GC'd had
[17:17:50] <mefistofeles> ah ok, I should use id then, right?
[17:17:55] <bjs> mefistofeles: to do what?
[17:17:56] <jinsun> use is
[17:17:59] <deniska> id() is not any more useful either
[17:18:23] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:18:24] <mefistofeles> well, I have some objects in different parts of the code and I want to know if they are the same
[17:18:36] <deniska> mefistofeles: that's the rare usecase for the operator `is`
[17:18:38] <bjs> mefistofeles: `if obj1 is obj2: print("they are the same")`
[17:18:44] <mefistofeles> and I cannot compare them that directly with "is", without changing too much of the code, sadly
[17:19:20] <mefistofeles> they are being used in different scopes at different parts of the code
[17:19:25] <bjs> mefistofeles: using id() is fraught with difficulty,  because you cannot compare id()s of objects that are alive at different times
[17:20:00] *** Joins: Naan` (~Naan@user/naan)
[17:20:57] <bjs> mefistofeles: try something like this https://bpa.st/YE6A  the id()s are the same but clearly the objects are different
[17:21:16] *** Parts: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) ()
[17:21:29] <bjs> (well they are the same for me,  and they may or may not be the same for you,  but I'm going to guess theres' a high probability they will be)
[17:21:36] <mefistofeles> yeah, I understand
[17:21:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:21:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:22:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[17:23:05] <mefistofeles> ok, I still think in this case it should point to the same object, but I understand the limitations and possible false positives
[17:23:09] <koopman> Really basic question, how do you merge lists based on common items? https://dpaste.com/AFEL92F96
[17:23:20] <mefistofeles> thanks
[17:23:27] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[17:23:38] <grym> koopman: what's the result you expect from this data being merged
[17:23:49] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[17:23:55] <koopman> The name street and state
[17:24:10] <koopman> Only thing in common in both lists is street
[17:24:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:24:36] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[17:24:44] <bjs> koopman: maybe what you really want a dictionary? so you can lookup the state from the street and the street from the name
[17:24:49] <grym> ^
[17:24:58] <koopman> I’ll try dict.
[17:25:15] <bjs> `people = {"tom": "great street"};  states = {"great street": "california"}`
[17:25:23] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 256 seconds)
[17:25:50] <koopman> Can I make the dict from the list?
[17:26:16] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:b8ce:613d:c06c:6b83)
[17:26:35] <bjs> koopman: yes if you want
[17:27:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:27:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:28:01] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:28:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:29:26] *** Joins: fikran (~fikran@user/fikran)
[17:29:30] <koopman> I’ll have a play thank you
[17:30:18] *** Joins: Milos (~Milos@user/milos)
[17:30:19] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[17:30:33] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[17:31:58] *** Quits: georgios (~georgios@user/georgios) (Remote host closed the connection)
[17:31:59] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:32:48] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:b8ce:613d:c06c:6b83) (Quit: Client closed)
[17:33:02] *** Quits: szymon (~ugh@37.120.156.248) (Remote host closed the connection)
[17:33:07] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:34:24] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[17:34:44] *** Joins: bloody (~bloody@user/bloody)
[17:35:43] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Quit: Leaving)
[17:35:46] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[17:37:05] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[17:37:15] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[17:37:18] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[17:38:03] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[17:41:21] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:41:31] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.33)
[17:42:20] *** Quits: sharperguy (~sharpergu@89.244.124.245) (Ping timeout: 252 seconds)
[17:44:00] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[17:47:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:48:38] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[17:49:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:49:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:50:25] *** Joins: legola (~legola@46.235.101.65)
[17:51:38] *** Quits: gulzar (~gulzar@2409:4055:404:8dab:c375:2e75:fc88:e62e) (Quit: Konversation terminated!)
[17:51:56] *** Joins: gulzar (~gulzar@2409:4055:404:8dab:c375:2e75:fc88:e62e)
[17:54:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[17:54:58] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[18:00:32] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[18:00:42] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:14f6:792c:9624:6b14) (Ping timeout: 268 seconds)
[18:01:56] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[18:02:09] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:02:09] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[18:02:24] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[18:02:25] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[18:02:45] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:03:59] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[18:04:04] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 250 seconds)
[18:04:04] *** Joins: henbruas_ (~henbruas@ti0003a400-4203.bb.online.no)
[18:04:17] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[18:04:42] *** henbruas_ is now known as henbruas
[18:05:00] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[18:09:33] *** Joins: nyah (~nyah@94.6.71.219)
[18:11:29] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 252 seconds)
[18:13:07] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:ccbc:350f:2ba4:4258)
[18:15:04] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:15:05] *** Joins: charlie_sando (~q@2603-8080-2901-f106-216b-934e-a9a2-864b.res6.spectrum.com)
[18:15:44] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:16:57] *** Quits: kuter (~kuter@public-gprs526031.centertel.pl) (Read error: Connection reset by peer)
[18:18:33] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:19:44] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[18:20:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:21:56] *** Joins: RiFo (~RiFo@user/rifo)
[18:22:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:23:11] *** Joins: stdout (~stdout@216.163.21.11)
[18:23:35] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.33) (Ping timeout: 252 seconds)
[18:24:13] *** Quits: gulzar (~gulzar@2409:4055:404:8dab:c375:2e75:fc88:e62e) (Quit: Konversation terminated!)
[18:24:45] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--282.oracle-ocna.com) (Ping timeout: 268 seconds)
[18:25:57] *** Joins: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de)
[18:26:05] *** Joins: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4)
[18:27:40] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:27:55] *** Joins: csmiga1 (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[18:28:32] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[18:29:21] *** Joins: shad (~shad@user/shad)
[18:31:19] *** Joins: Archdave (~Archdave2@071-011-125-224.res.spectrum.com)
[18:33:21] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com) (Remote host closed the connection)
[18:34:15] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[18:34:34] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[18:36:00] *** Joins: arinov (~arinov@213.194.126.155)
[18:36:21] *** Joins: thiras (~thiras@user/thiras)
[18:38:12] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[18:38:31] *** Joins: thiras (~thiras@user/thiras)
[18:39:47] *** Joins: tobybl (~tobybl@213.31.134.21)
[18:40:32] *** Joins: smallfoot- (~smallfoot@user/smallfoot-)
[18:41:12] <smallfoot-> Is there any benefit or advantage of using my_string.split(' ', 10) over my_string.split(' ') ?
[18:41:33] *** Quits: dntreou (~yakiza@2a02:587:7403:5500:5542:952a:f204:55f4) (Ping timeout: 252 seconds)
[18:41:52] <hexnewbie> smallfoot-: They do different things.
[18:42:34] *** Joins: Klinda (~superleag@user/klinda)
[18:42:46] <hexnewbie> smallfoot-: Limiting to 10 splits will be wrong for some problems, and correct for others
[18:43:29] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--9.oracle-ocna.com)
[18:43:34] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[18:44:25] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[18:44:31] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[18:45:44] *** Joins: slav0nic (slav0nic@python.su)
[18:46:46] *** Joins: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net)
[18:47:55] <smallfoot-> hexnewbie, I know they are different things, but I might be fine with 10 splits. So if I explicitly set a max split, does that provide any benefit such as faster performance or make it more secure or safe?
[18:48:19] <grym> smallfoot-: no
[18:48:22] *** Quits: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:49:00] <hexnewbie> smallfoot-: Unless you have 1 GiB string which you're splitting the first 1 KiB out of.
[18:49:22] *** Joins: greedom (~greedom@p579275ba.dip0.t-ipconnect.de)
[18:49:27] <hexnewbie> By which I mean, if it did provide a benefit, you would know it did
[18:49:27] <jr_web_dev> Does pyinstaller create a binary of your script/application?  if you hardcode a token and use pyinstaller is it safe or would it easily be able to get hacked
[18:49:45] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:49:47] *** Joins: upsala (~zcb@185.213.155.252)
[18:50:18] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[18:50:19] <grym> jr_web_dev: pyinstaller makes what is more or less a slightly magical zipfile, so just like an exe you can unzip it and poke around inside
[18:50:21] <SnoopJ> jr_web_dev, yes, it creates a single binary. Bundled data is not particularly safe, someone could poke around in there and see it. This is, however, generally true of data included in applications.
[18:50:37] <SnoopJ> So the answer to the second question may hinge on what you consider "easy"
[18:50:39] <smallfoot-> Okay, so then it is fine just using txt.split(' ') and I don't  have to worry about having to set a limit
[18:50:45] *** Joins: akk (~akk@75.161.146.115)
[18:50:50] <jr_web_dev> i see, how would one go about applications that require tokens
[18:50:55] <grym> jr_web_dev: what's a token
[18:51:01] <jr_web_dev> token key
[18:51:04] <grym> for what
[18:51:09] <jr_web_dev> for an api lets say
[18:51:13] <jr_web_dev> to access an api
[18:51:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[18:51:34] <grym> seems like something the user should provision themselves and have stored in their XDG data dir
[18:51:37] *** Quits: greedom (~greedom@p579275ba.dip0.t-ipconnect.de) (Client Quit)
[18:51:42] <SnoopJ> jr_web_dev, most applications have the user configure their own secret, using a config file or environment variable
[18:52:23] <jr_web_dev> so it would be a best practice to have that stuff stored like in there envroinment variable on the machine for example
[18:52:25] <jr_web_dev> i see
[18:52:42] <jr_web_dev> i guess also using something like oauth2.0 were a user can login
[18:52:45] <SnoopJ> the best way to protect a secret is not to have it
[18:52:53] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[18:53:16] *** Joins: vaio (~gary@user/ghost)
[18:53:19] *** Joins: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de)
[18:56:11] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:56:47] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[18:57:42] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[18:58:03] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[18:58:56] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[18:59:19] *** Parts: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net) (WeeChat 2.8)
[19:00:23] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[19:00:40] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[19:00:58] *** Joins: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl)
[19:01:31] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[19:01:31] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[19:01:50] *** Quits: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de) ()
[19:02:54] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[19:03:16] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Read error: Connection reset by peer)
[19:04:09] *** Joins: greedom (~greedom@p579275ba.dip0.t-ipconnect.de)
[19:04:14] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[19:04:48] *** Joins: brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net)
[19:05:25] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[19:06:19] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[19:06:35] *** Quits: greedom (~greedom@p579275ba.dip0.t-ipconnect.de) (Client Quit)
[19:07:05] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[19:07:16] *** Joins: Robin_Jadoul (afe6b98926@2604:bf00:561:2000::18e)
[19:08:15] *** Joins: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de)
[19:09:09] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 256 seconds)
[19:10:30] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[19:11:54] *** Joins: teut (~teut@182.64.39.227)
[19:12:36] *** Quits: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de) (Client Quit)
[19:12:50] *** Joins: nomic (~nomic@185.198.243.158)
[19:13:05] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 252 seconds)
[19:13:24] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[19:14:31] *** Joins: greedom (~greedom@p579275ba.dip0.t-ipconnect.de)
[19:15:05] <neoweb> so i had a var, that read a file using file.read(), and the file must have been too big, 324 mb.  It must have been trying to load it into memory.  Now this was part of a qt interface, a log viewer, and the guy that wrote the code did this.  So here is my question.  The software was def crashing, but I did not see any python errors...should I have...I kind of wonder if oom killer was doing it, but I do not see any messages heh.
[19:15:25] <grym> 300 meg files aren't _too_ huge really
[19:15:29] *** Joins: _brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net)
[19:16:04] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[19:16:49] <neoweb> it is on a rasp pi heh
[19:17:05] <grym> ah yes well
[19:17:50] *** Joins: pepper (~pepper@user/pepper)
[19:18:09] *** Quits: brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net) (Ping timeout: 256 seconds)
[19:18:13] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Ping timeout: 256 seconds)
[19:18:49] <neoweb> i am going to test it right now, but dmesg had nothing
[19:19:00] <neoweb> i guess i will try and grep syslog
[19:19:04] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[19:19:11] <grym> just for funsies, try a df -h first
[19:19:36] <grym> (a fair few of my mysterious failure bugs turn out to be "/ is full, you idiot")
[19:21:09] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:21:28] <neoweb> no it all looks good
[19:21:39] <neoweb> i am just trying to figure out why the software would close, but no error
[19:22:46] <Wooble> bare except: clause somewhere that swallowed the MemoryError?
[19:22:51] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.3)
[19:22:59] *** Joins: matrixbot_bartab (~matrixbot@195.200.221.102)
[19:23:02] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:23:03] <neoweb> that could be true
[19:23:09] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[19:23:19] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[19:23:34] <SirScott> was monitoring a gunicorn server that's been hanging by running response = requests.get(....) in a loop, checking on response.elapsed to break out if it exceeded some threshold. Interestingly the wall time was 30 minutes, but the response.elapsed value was 77ms.  Any idea what might explain this time discrepancy?
[19:24:27] *** Joins: Naan (~Naan@user/naan)
[19:24:30] *** Quits: greedom (~greedom@p579275ba.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:26:19] *** Joins: greedom (~greedom@p579275ba.dip0.t-ipconnect.de)
[19:27:11] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[19:28:21] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[19:28:55] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[19:29:16] *** Joins: waynew (~wayne@user/waynew)
[19:30:59] *** Quits: smallfoot- (~smallfoot@user/smallfoot-) (Quit: Leaving)
[19:31:55] *** Quits: greedom (~greedom@p579275ba.dip0.t-ipconnect.de) ()
[19:31:58] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--9.oracle-ocna.com) (Ping timeout: 268 seconds)
[19:32:26] <neoweb> i don't see any try statements heh
[19:32:32] <neoweb> oomkiller not doing anything
[19:32:34] <neoweb> so weird
[19:32:38] *** Joins: solarjoe4 (~solarjoe4@p50873f6c.dip0.t-ipconnect.de)
[19:33:04] <Wooble> maybe the oom killer killed the task that was logging oom killer kills :)
[19:33:09] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:33:19] <neoweb> it all could be true
[19:35:25] *** Joins: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de)
[19:35:47] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-200.poda.cz) (Ping timeout: 256 seconds)
[19:36:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:38:01] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Ping timeout: 252 seconds)
[19:38:29] <neoweb> i am a liar
[19:38:34] <neoweb> try statements everywhere
[19:38:47] *** Joins: fikran (~fikran@user/fikran)
[19:39:10] *** Quits: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de) (Client Quit)
[19:40:10] <grym> neoweb: when in doubt, print it out: https://github.com/zestyping/q
[19:40:19] *** Joins: pulec (~pulec@user/pulec)
[19:40:33] <neoweb> thanks
[19:41:02] <pulec> I feel dirty, just had a case when I needed to transfer 3k file but there was no scp, so I pickled the tar archive, copied the 'pickle string' in clipboard and unpickled on target
[19:41:28] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[19:41:45] *** Joins: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de)
[19:41:47] <grym> woof
[19:42:01] <pulec> hey! that is how I named the pickle file!
[19:42:07] * pulec stares at grym
[19:42:21] <grym> well, now you know why they're insecure >:)
[19:42:22] <SnoopJ> not b64encode?
[19:42:25] *** Quits: jay-m126_ (~jay-m@154.72.167.239) (Ping timeout: 252 seconds)
[19:42:25] *** Quits: jay-m126 (~jay-m@154.72.167.239) (Ping timeout: 252 seconds)
[19:42:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:42:55] <pulec> that was my second option SnoopJ but pickle.dump/load seemed fewer lines
[19:42:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:43:07] <pulec> 4 lines to load file and dump it
[19:43:11] <pulec> and another 2 to unpickle
[19:43:19] * CrtxReavr wrote a block chain, for storing pickles (amongst other things) in a secure, and verifyable way.
[19:43:20] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 252 seconds)
[19:43:21] <pulec> well with import;with open(... lol
[19:43:34] <pulec> why block chain?
[19:43:36] <grym> CrtxReavr: i use git too
[19:44:23] <grym> it's a bit slow on blobs but i hear that's a property of other blockchains too
[19:44:28] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[19:44:56] <CrtxReavr> pulec, people confuse blockchains with crypto-currency, but these crypto-currencies are really just using blockchains as a tamper-proof ledger.
[19:45:07] <SnoopJ> pulec, being charge by the line but not by the bits on the wire seems weird, but okay :)
[19:45:28] *** Quits: digicyc (aarona@2600:3c00::f03c:92ff:fe04:3644) (Changing host)
[19:45:28] *** Joins: digicyc (aarona@user/digicyc)
[19:45:28] <CrtxReavr> A block-chain ledger provides a way to trust the authenticity of the pickles you've stored.
[19:45:41] <neoweb> so i think i found it
[19:45:44] <grym> CrtxReavr: yes, it's called reflog
[19:45:44] <ldericher> Is it correct to type hint an init as None as in `def __init__(self) -> None:`?
[19:45:55] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[19:45:55] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 256 seconds)
[19:45:55] <grym> ldericher: yes
[19:45:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:45:57] <neoweb> so except Exception
[19:46:03] <neoweb> is not giving me the error i need
[19:46:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:46:04] <SnoopJ> CrtxReavr, so you can be sure that it's authentically insecure?
[19:46:49] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[19:46:51] *** Joins: Atrillox (~bigguy@219.137.142.242)
[19:47:07] *** Quits: _brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net) (Quit: thanks, bye!)
[19:47:16] <pulec> CrtxReavr: oh yeah I see, I don't know much about block chains, and yes when you say it crypto currency rings a bell
[19:47:36] <neoweb> funny part is, except Exception is triggering, but it is not giving me the output of the actuall exception heh
[19:47:39] <pulec> SnoopJ: you mean copy paste just the bits? seemed easier to brake then "xd2\xf3..."
[19:47:44] <pulec> *break
[19:48:11] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[19:49:13] *** Quits: Archdave (~Archdave2@071-011-125-224.res.spectrum.com) (Quit: leaving)
[19:49:14] <SnoopJ> pulec, I mean that base64 encoding is a strictly denser representation of the data, so in addition to being executable code (which is weird), doing it with pickle is probably increasing the amount of data you send, not decreasing it.
[19:49:45] *** Quits: Atrillox (~bigguy@219.137.142.242) (Client Quit)
[19:50:14] <SnoopJ> pulec, but it also seems like you can do it in 3 lines with b64encode? `from base64 import b64encode; with open(...) as f: print(b64encode(f.read());;` going one way (3 lines), `from base64 import b64decode; b64decode(copied_bytes)` going the other way (2 lines).
[19:50:23] <Jong> From the command line, is there a way to call a function in a python file other than __main__?
[19:50:32] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[19:50:43] <SnoopJ> Jong, `python3 -c "import somemodule; somemodule.func()"` usually
[19:50:51] <solarjoe4> when writing tests for a state machine should you also test that conditions that would not trigger transitions to make sure they don't? e.g. if a transitions is triggered if an integer is between 5 and 12 , would you also test 3 to see that nothing happens?
[19:51:24] <Jong> SnoopJ  but the file isn't in the same direction.  Do I just replace slashes with dots and provide the relative directory path?
[19:51:32] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[19:52:00] <SnoopJ> Jong, what I just stated only works if the module s importable.
[19:52:04] <SnoopJ> module is*
[19:52:16] <lesshaste> anybody here use tweepy?  I have: tweets = client.search_all_tweets(query=query, tweet_fields=['context_annotations', 'created_at', 'geo'],
[19:52:16] <lesshaste>                                   start_time=start_time, end_time=end_time,
[19:52:16] <lesshaste>                                   place_fields=['place_type', 'geo'], expansions='geo.place_id', max_results=100)
[19:52:30] <lesshaste> but how do I find the time/day for each tweet?
[19:52:31] <SnoopJ> lesshaste, please use a paste site instead of pasting in the channel
[19:52:57] *** Joins: grooverman (~grooverma@187.11.220.159)
[19:54:39] <lesshaste> I am trying to get tweets from GB using https://bpa.st/6N5Q . But how do I see the time/date for each tweet I have got?
[19:54:41] <lesshaste> SnoopJ, done
[19:55:34] <SnoopJ> lesshaste, I believe you access the created_at attribute on each Tweet instance (or Status if you're using the old API)
[19:56:26] <lesshaste> SnoopJ, Like this? tweets[0].created_at ?
[19:56:35] <pulec> SnoopJ: correct, the pickled data was 10kb, original archive was just 3kb
[19:57:05] <pulec> SnoopJ: I see, I did not mean to make it a fewer line battle :-) both options work, b64 would be better
[19:57:05] *** Quits: binary01 (~binary01@174.141.153.217) (Ping timeout: 252 seconds)
[19:57:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[19:57:21] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[19:57:43] <SnoopJ> less dirty, anyway :)
[19:57:57] *** Quits: rsx (~dummy@ppp-188-174-130-10.dynamic.mnet-online.de) (Quit: rsx)
[19:58:14] <SnoopJ> lesshaste, I believe that's how you'd get the first one, yes. If it's not that attribute, have a look at the attributes on the object, I'm sure one of them corresponds to that field in the Twitter API (the tweepy docs just link to it)
[19:58:17] *** Joins: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net)
[19:58:20] <pulec> I have to do it again, I'll use b64 now
[19:59:40] <lesshaste> SnoopJ, dir(tweets[0]) shows https://bpa.st/IXWQ
[19:59:49] <jinsun> Jong: for not importable file you can do something with runpy, something like python -c "import runpy; func = runpy.run_path('/path/to/file.py')['func']; func()"
[20:00:00] <lesshaste> SnoopJ,  tweets[0].created_at fails as it doesn't have such an attribute
[20:00:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[20:00:06] <SnoopJ> pulec, FWIW you can use the base64 module from the commandline, too: `cat some.file | python3 -m base64` if you don't have `base64` installed (but you probably do)
[20:00:39] *** Quits: dreamon (~dreamon@ppp-88-217-67-53.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:02:21] *** Quits: matrixbot_bartab (~matrixbot@195.200.221.102) (Ping timeout: 256 seconds)
[20:02:31] <SnoopJ> lesshaste, then I don't know the answer to your question. The dir() you shared looks like it's of a list which does not match the documented return type of search_all_tweets(). Are you sure you didn't do `dir(tweets)` ?
[20:02:36] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:9261:bbf4:ebed:535e)
[20:02:57] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 252 seconds)
[20:03:30] <SnoopJ> oh, nevermind, I have that backwards, you've probably indexed a Response instance (which is just a namedtuple)
[20:04:11] <lesshaste> SnoopJ, https://ibb.co/pQk6VHQ
[20:04:55] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[20:05:06] *** Joins: Ilyu (~quassel@78.202.228.230)
[20:05:42] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[20:05:51] <SnoopJ> lesshaste, what does `tweets.data[0]["created_at"]` give you?
[20:06:04] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Client Quit)
[20:06:31] <lesshaste> SnoopJ, datetime.datetime(2020, 3, 31, 23, 59, 49, tzinfo=datetime.timezone.utc)
[20:06:34] <lesshaste> Hooray!
[20:06:35] <lesshaste> thank you
[20:06:42] *** Joins: slept (~sebi@p200300c2a71d360019b0b223ad7bec67.dip0.t-ipconnect.de)
[20:07:19] <SnoopJ> lesshaste, I would recommend using .data instead of [0] to access the Response object returned by this method, and from there you just have to read the Twitter API docs to get to that
[20:07:36] <lesshaste> SnoopJ,  thanks so much
[20:07:38] <SnoopJ> specifically: https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all#Default
[20:07:54] <pulec> SnoopJ: prepare, there is only 2.6 python on the machine...
[20:07:58] <lesshaste> SnoopJ,  thanks
[20:08:16] <grym> pulec: (so far)
[20:08:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[20:08:49] <ldericher> what's the best way to get a "preview" during iteration? ie. to check which item will be handled next (and of course, if there is a next item)
[20:08:53] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[20:09:14] <bjs> ldericher: in general, the only way is to ask for the next item
[20:09:16] <ldericher> would you recommend zipping the iterable with itself for that?
[20:09:22] <grym> ldericher: there's no peek, bu... yeah, that's what i do
[20:09:22] <bjs> it depends what kind of iterator you have
[20:09:36] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[20:09:43] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[20:09:48] <SnoopJ> ldericher, it's not uncommon to do `for (prev, cur) in zip(seq, seq[1:]):` but as bjs suggests this isn't possible for all iterables
[20:09:54] *** Joins: cheater (~Username@user/cheater)
[20:09:56] <ldericher> current use case is just for a list
[20:10:03] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[20:10:23] <SnoopJ> for sequences, yea, zip() with offset-self is a good way to do it
[20:10:38] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl.)
[20:10:39] *** Quits: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net) (Ping timeout: 252 seconds)
[20:11:05] <bjs> ldericher: if you want to iterate over pairs of [a,b,c] i.e. [(a,b), (b,c), (c,None)] or something like that then doing some slice+zip is the nicest
[20:11:13] <slept> How do I install requirements defined in the [build-system] requirements = [...] section of setup.cfg or pyproject.toml (e.g. when I clone a git repository and create a venv and want to get started)?
[20:11:16] <jinsun_> for arbitrary iterables you can use more_itertools.peekable
[20:11:50] <grym> slept: thevenv/bin/python -m pip install <that thing>
[20:12:03] <grym> slept: where <that thing> is the directory that contains a setup.cfg
[20:12:07] <SnoopJ> pulec, I don't know about 2.6, but 2.7 is capable of running the package this way.
[20:12:16] <SnoopJ> and the programmatic way is definitely there in 2.6
[20:12:30] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[20:12:36] <SnoopJ> (I'd probably just use base64 from GNU coreutils, though, unless it was unavailable)
[20:12:38] <pulec> great
[20:12:42] <Intruder777> Hi. Any way to make kind of parameterized to async generator? Let's say I have `r = (await func1(2,3) for x in y)` but I want to have something like `r = (await func1(p1,p2) for x in y)` so I can do `r(p1=2, p2=3)` then
[20:13:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:13:34] <bjs> Intruder777: maybe you just want an `async def r(p1, p2)` ?
[20:13:38] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[20:13:39] <bjs> with yields
[20:14:28] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[20:14:41] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[20:14:52] <ldericher> bjs, well this misses the last item https://tio.run/##K6gsycjPM9ZNBtP//@co2CrkZBaXaBQl5qWnaphqanIVFGXmlWjkwBkg2arMAo0cHYWcaEOrWE1Nzf//AQ
[20:15:32] *** Joins: node1 (~node1@user/node1)
[20:15:35] <bjs> ldericher: well the last item is there, it's just you want to itertools.zip_longest(l, l[1:])
[20:15:36] *** Joins: drwasabi (drwasabi@tilde.team)
[20:15:38] <bjs> not just zip()
[20:16:07] * SnoopJ usually just does the `prv, cur` spelling and handles the first one as the edge case
[20:16:07] <drwasabi> wow.. thats a lot of nicks
[20:16:21] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[20:19:14] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[20:19:21] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[20:21:19] *** Joins: matrixbot_bartab (~matrixbot@195.200.221.151)
[20:22:04] *** Joins: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net)
[20:22:13] <slept> grym: That seems to take forever and there is no output at all ...
[20:22:18] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:22:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:23:04] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:23:17] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Remote host closed the connection)
[20:23:20] <yolo> what does conda bring comparing to `python -m venv`
[20:23:55] <yolo> don't want yet another dependency if possible
[20:23:59] <SnoopJ> yolo, it's capable of installing things that aren't Python packages and managing those in environments that aren't virtual environments
[20:24:22] <SnoopJ> and it's also capable of managing the version of Python (with venv, you get exactly the version of the interpreter used to create the venv)
[20:25:35] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:25:55] <yolo> so, conda = venv + non-python-binary-packages(e.g. c++)
[20:26:10] <yolo> thought miniconda or whatever was python only
[20:26:52] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:27:18] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:27:45] <grym> slept: what's the package?
[20:27:59] <SnoopJ> yolo, so, the naming is a mess: conda is a package manager, Anaconda is conda + a lot of packages, miniconda is just conda.
[20:28:11] <SnoopJ> Anaconda and miniconda are "distributions" that include the conda tool
[20:28:48] <SnoopJ> and no, conda is not Python-only, it does a fair bit that isn't related to Python at all; but most users are in Python-land
[20:29:25] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:29:30] *** dcaro is now known as dcaro_away
[20:29:37] *** Quits: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:29:43] *** Quits: matrixbot_bartab (~matrixbot@195.200.221.151) (Ping timeout: 252 seconds)
[20:29:50] <slept> grym: It's code i wrote
[20:29:51] <yolo> what's its selling point really? like it does tensorflow packaging that is better than everyone else? or something like that? if you're a conda saleperson, what does it bring to me that is most valueable and I could not get using 'default' tools(e.g. apt, pip, venv,etc)
[20:30:21] <grym> yolo: well, you can version cudnn with it ...
[20:30:43] <grym> anaconda ships mkl numpy and stuff as well, there's some speedups to be had depending on your processor
[20:30:45] <marduk> Hey guys, so some desktop apps (e.g. slack, vpns) work so when the user needs to log in it opens a page in a web browser and when the user logs into the site it somehow logs them into the app?  Anyone have a reference for how that works?
[20:30:58] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[20:31:15] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[20:31:20] <yolo> grym: so, conda shines when you need do AI stuff then?
[20:31:21] <grym> yolo: but as SnoopJ said, conda can handle more than just python and sometimes that's handy
[20:31:44] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:32:02] <yolo> OK, since I need do some AI(tf,cudnn,etc) I might as well just learn yet another tool
[20:32:12] <SnoopJ> yolo, it's handy when you have problems that it solves. Mostly those problems are managing environments that have Python + packages that may or may not be Python installed in them.
[20:32:32] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:32:39] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 252 seconds)
[20:32:51] <SnoopJ> You can certainly do machine learning without using it, but it helps to at least have a passing familiarity with it, if only because someone else's code you run into might use it.
[20:33:03] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:33:11] <yolo> I thought venv can deal with that just fine, when you spend 80% of the time learning all new tools and barely had time to get real work done these days, any extra layer of external dependency can lead to 'frown-ed on'
[20:33:51] <kosh> yolo, conda is great for any kind of science/engineering
[20:33:53] <powftw> I have a flask app which needs a dictionary to be returned. So, I used return {dictionary} and it says. `TypeError: Object of type Response is json seralizable`
[20:34:17] <powftw> How can I return my dictionary to frontend flask app?
[20:34:27] <kosh> yolo, because it has packages built against high speed libraries with tensorflow, torch, numpy, sklearn, scipy etc
[20:34:33] <yolo> SnoopJ: Thanks!
[20:34:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:34:49] <grym> yolo: for what it's worth, i work in ML/AI and we don't use conda
[20:34:59] <SnoopJ> powftw, does your dictionary contain types that aren't the builtins (i.e. float/int/list etc.) ?
[20:35:06] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[20:35:32] <powftw> All strings..
[20:35:47] *** Joins: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327)
[20:35:49] <yolo> kosh: thanks, that hellps
[20:36:03] <kosh> yolo, no problem
[20:36:05] <SnoopJ> powftw, can we see the complete error report?
[20:36:12] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:36:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:36:27] <kosh> grym, of course you can do all of that stuff on your own it is just that it takes more work
[20:36:42] <yolo> grym: our internal shining new tool to build llvm/mlir/tf/pytorch/etc suddenly uses conda and I was thinking, do I really need this, it's all python stuff, why can't I just venv+pip them
[20:36:55] <grym> yolo: you can
[20:37:02] <grym> kosh: eh, i'm more comfortable without it
[20:37:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:37:19] <SnoopJ> kosh, I don't agree, sometimes conda creates *substantially* more work
[20:37:20] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[20:37:20] <grym> kosh: we make enough work for ourselves that conda can't solve anyway
[20:38:31] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[20:38:33] <kosh> SnoopJ, sometimes it does, there are also times where I make a small environment with conda just ot have it deal with mkl and numpy and do the rest with pip
[20:39:06] <SnoopJ> kosh, like I said, it's a fine tool to use when you have the problems that it solves
[20:39:28] <powftw> SnoopJ: https://bpa.st/EQLQ
[20:39:53] <kosh> SnoopJ, yeah if you go outside what it is designed for it gets painful quickly and you should stop using it
[20:39:58] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[20:40:04] <slept> grym: I tried with the numpy repository and that works perfectly fine - thank you!
[20:40:07] <SnoopJ> powftw, that's not the complete report, so it doesn't tell me much more than what I already knew: your dict can't be turned into JSON.
[20:40:08] *** Joins: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net)
[20:40:09] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:40:40] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[20:40:49] <Guest14> Hi does anyone know how you can remove annotation text with the numbers from a PDF? Example -> "calculation.76"
[20:40:53] <Guest14> I want to remove the 76
[20:41:04] <SnoopJ> powftw, are you *sure* your dict is all strings?
[20:41:19] *** Joins: foxbox (~cammy@user/cammy)
[20:41:24] <Guest14> So when I copy and paste from the PDF I do not want to have any annotation numbers in the pasted output
[20:41:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:42:05] <SnoopJ> It's technically talking about a Response object, but I think that's probably being wrapped around the dict your route returns. If you run the server with a debugger, you'll be able to see what is actually failing to serialize in that report.
[20:42:07] *** Joins: amoros (~irc@user/amoros)
[20:42:10] *** Joins: uncleho (~uncleho@host-189-202-66.junet.se)
[20:42:29] *** Quits: slept (~sebi@p200300c2a71d360019b0b223ad7bec67.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:42:36] <powftw> SnoopJ: https://bpa.st/A6GA
[20:42:57] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:43:26] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[20:43:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:43:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:44:43] <SnoopJ> powftw, yea, looks like it's your dict, _iterencode_dict is part of the chain of calls that's failed.
[20:45:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:45:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:45:43] <powftw> what does that mean
[20:46:02] *** Quits: mallkrampus (~mallkramp@172.93.207.238) (Ping timeout: 252 seconds)
[20:46:16] <bjs> powftw: is that wrap_up_everything yours?
[20:46:19] <bjs> maybe you can share the code?
[20:46:28] <powftw> okay
[20:46:34] *** Joins: Inline (~Inline@aftr-37-201-240-43.unity-media.net)
[20:46:45] *** Quits: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[20:46:49] <SnoopJ> powftw, it means that when Flask is trying to turn the result of wrap_up_everything() into JSON, and it can't because there's a dict somewhere that can't be turned into JSON.
[20:47:00] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Read error: Connection reset by peer)
[20:47:13] <uncleho> So I got this in pandas in my jupyter notebook, and goddammit, all I want is to get the average of the column of days, or at the very least sum that column and then divide by 64, but NO... nothing works! Much appreciated :)<3  https://pastebin.com/JTvjpPQk
[20:47:15] <SnoopJ> and it looks like maybe a Response object got shoved into this dict somehow
[20:47:38] <SnoopJ> but I'm a little hazy on whether or not Flask does something special here producing that error
[20:48:08] <bjs> uncleho: what did you try?
[20:48:50] <powftw> https://bpa.st/QJYQ
[20:49:07] <bjs> powftw: what is this?
[20:49:10] <powftw> that is what i'm returning
[20:49:21] <bjs> powftw: this is just a return
[20:49:26] <bjs> actually it's only half of the return
[20:49:42] <bjs> actually it's not even that because it doesn't say what sub_with_spec_nums etc are
[20:49:51] <bjs> powftw: can you just paste the entire code?
[20:49:55] *** Quits: greedom (~greedom@p200300de6708e600fa6ac271b7250197.dip0.t-ipconnect.de) ()
[20:50:08] <powftw> so,  the issue is not because of the return ?
[20:50:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:50:20] <bjs> powftw: I don't know because I don't know what it returns because you left out the rest of it
[20:50:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:50:55] <SnoopJ> powftw, the issue is because something in a dict somewhere can't be turned into JSON. That's all we can tell you without seeing the complete source that produced the error. And since you're asking us for help, it's hard for you to know which parts to hold back if you start editing what you share.
[20:51:43] *** Quits: Inline (~Inline@aftr-37-201-240-43.unity-media.net) (Ping timeout: 256 seconds)
[20:54:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:55:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:56:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:58:18] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:f1ed:6887:90f:533) (Quit: Leaving)
[20:58:48] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[21:00:31] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:00:59] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:01:18] *** Quits: Intruder777 (~Intruder7@user/intruder777) (Quit: Leaving)
[21:01:19] *** Joins: mallkrampus (~mallkramp@172.93.207.234)
[21:01:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:02:00] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[21:02:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:03:10] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[21:04:45] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:04:56] *** Joins: arinov (~arinov@46.154.79.152)
[21:05:28] <powftw> https://www.irccloud.com/pastebin/V7srvxcp/
[21:05:43] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[21:05:49] <powftw> is this the right way to return the function?
[21:06:08] <bjs> powftw: why not just show us the actual code?
[21:07:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:07:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:07:54] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[21:08:01] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:09:17] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[21:13:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:13:32] <ldericher> list.extend, but inserting items in the front?
[21:13:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:13:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:13:48] <ldericher> double reverse?
[21:14:35] <ali1234> list.insert(x, 0)
[21:14:46] <grym> or deque
[21:14:59] <Yhg1s> ldericher: l[:0] = the_list
[21:17:01] *** Quits: grooverman (~grooverma@187.11.220.159) (Ping timeout: 252 seconds)
[21:17:05] <ldericher> Yhg1s, it works, but ... yikes :D
[21:17:28] *** Joins: binary01 (~binary01@174.141.153.217)
[21:18:17] <SnoopJ> Yhg1s, an interesting question came up last night that you might be able to shed light on: CPython does contiguity checks after using PyBUF_SIMPLE and/or PyBUF_WRITABLE in a few places. Is that securing against non-compliant providers, or is there some nuance that the buffer protocol docs aren't talking about?
[21:18:21] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[21:18:29] *** Quits: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net) (Ping timeout: 252 seconds)
[21:18:42] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[21:18:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:19:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:19:15] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:19:58] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[21:21:08] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:22:44] *** Joins: grooverman (~grooverma@177.102.119.40)
[21:23:57] *** Quits: Allegretto (~allegrett@94-21-199-120.pool.digikabel.hu) (Ping timeout: 256 seconds)
[21:24:25] *** Quits: willow (~willow@bay.systems) (Quit: willow)
[21:24:29] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[21:28:14] <yolo> pip inside venv is sandbox, pip inside conda is not, inside conda when I do pip list, it lists all my packaged under --user, why the leakage
[21:29:15] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:29:34] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:29:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:29:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[21:30:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:30:25] <Boarders_> I have a csv like: name, age\nBob, 42 and when I do: info = pd.read_csv("info.csv"); info.set_index('Name') I get a KeyError
[21:30:27] <Boarders_> Any ideas why?
[21:30:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:31:07] *** Joins: greknod28 (~grek@120.88.171.98)
[21:31:11] <uncleho> bjs: Can't you just tell me how yous does it?
[21:31:23] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 256 seconds)
[21:31:46] <bjs> Boarders_: name or Name?
[21:31:49] <bjs> uncleho: ?
[21:32:07] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4062:de04:7533:33ac)
[21:32:41] <Boarders_> Ah, sorry that was just me typing out something dumb, but I am not making a case error
[21:32:46] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:33:01] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[21:33:05] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:33:11] *** Joins: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net)
[21:33:54] <uncleho> What? You know my problem. I want to sum a column of days. I.e. each field has an entry like "7 days" etc.
[21:34:07] <zen_coder> I am using argparse to argument parsing several options have default values, however how can I check whether the argument was provided or not?
[21:34:09] <zen_coder> https://paste.ee/p/oJeuH
[21:34:17] <uncleho> https://pastebin.com/JTvjpPQk timedelta64[ns]
[21:34:53] <grym> zen_coder: you can't, as written.  providing a default means you don't want to
[21:34:57] *** Joins: vimart (~vimart@94.118.14.252)
[21:35:02] <grym> know if it was passed or not
[21:35:03] <uncleho> You asked me what I've tried. I tried googling for how it's done
[21:35:32] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:35:35] <bjs> uncleho: im sorry I dont understand
[21:35:38] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:35:46] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[21:35:55] <bjs> uncleho: Oh sorry I forgot.  What about print(whatever.mean()) ?
[21:36:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[21:36:31] <uncleho> this is pandas, it's timedelta64
[21:36:36] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:36:48] <bjs> Yes
[21:36:59] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[21:37:43] *** Joins: Allegretto (~allegrett@84-236-53-191.pool.digikabel.hu)
[21:38:42] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[21:38:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:38:49] <bjs> uncleho: so... is that a yes you tried or nor you haven't tried?
[21:38:53] <bjs> You said "nothing works" but didn't say what you had tried or what went wrong
[21:39:49] *** Joins: prs (~Priyanshu@157.34.35.172)
[21:40:06] <uncleho> I don't know what I'm doing. I'm fumbling around...
[21:40:57] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com)
[21:41:13] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[21:41:17] <bjs> uncleho: you still haven't said what you tried or whether you tried my suggestion or not.  The pandas docs suggests there's a .mean() method
[21:41:43] <uncleho> bjs, Okay, thanks. I shall look into that.
[21:42:51] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Read error: Connection reset by peer)
[21:43:19] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[21:44:59] *** Joins: kdbxw (~kdbxw@94.180.162.218)
[21:45:02] *** Joins: Roey (~Roey@user/Roey)
[21:45:35] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[21:46:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:48:08] *** Joins: fikran (~fikran@user/fikran)
[21:48:12] *** Quits: Knaxius (~Knaxius@herzlichweise.de) (Quit: bye)
[21:50:46] *** Joins: zebrag (~chris@user/zebrag)
[21:51:07] <kdbxw> Hi. Can anyone please suggest a modern python web-server lib which can work in a separate thread, so I can embed it into already existing program/daemon I have? Once I used cherrypy for that, but probably there is something else available today.
[21:52:06] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[21:52:07] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[21:52:21] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[21:52:35] *** Joins: gambl0re (~gambl0re@216.154.4.187)
[21:54:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:54:27] *** Joins: gitargy (~gitargy@76.78.94.79)
[21:54:41] *** Joins: prirai (~Priyanshu@157.34.102.62)
[21:55:17] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:55:34] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[21:55:56] *** Quits: solarjoe4 (~solarjoe4@p50873f6c.dip0.t-ipconnect.de) (Quit: Leaving)
[21:56:26] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 3.0.1)
[21:56:31] *** Quits: arinov (~arinov@46.154.79.152) (Read error: Connection reset by peer)
[21:57:14] *** Joins: arinov (~arinov@46.154.79.152)
[21:57:32] *** Quits: prs (~Priyanshu@157.34.35.172) (Ping timeout: 252 seconds)
[21:57:58] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:00:08] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (Remote host closed the connection)
[22:00:22] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[22:01:14] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[22:01:21] *** Quits: vimart (~vimart@94.118.14.252) (Ping timeout: 256 seconds)
[22:01:42] *** Quits: falkor (~falkor@90.242.155.158) (Quit: Leaving)
[22:02:20] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:03:25] *** Joins: vimart (~vimart@212.187.244.53)
[22:03:33] *** Joins: matrixbot_bartab (~matrixbot@195.200.221.151)
[22:05:15] *** Joins: plastico (~plastico@neomutt/plastico)
[22:06:19] *** Quits: vimart (~vimart@212.187.244.53) (Client Quit)
[22:09:34] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:10:05] *** Joins: mickey8 (~user@user/mickey)
[22:10:11] *** Quits: llh (~llh@user/llh) (Ping timeout: 252 seconds)
[22:10:40] *** Joins: llh (~llh@user/llh)
[22:10:48] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[22:13:21] *** Joins: prs (~Priyanshu@203.18.51.235)
[22:13:38] *** Quits: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327) (Read error: Connection reset by peer)
[22:14:16] *** Joins: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327)
[22:16:25] *** Quits: prirai (~Priyanshu@157.34.102.62) (Ping timeout: 252 seconds)
[22:16:51] *** Joins: monkey_ (~user@181.114.17.106)
[22:16:54] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[22:17:44] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[22:18:07] *** Quits: arinov (~arinov@46.154.79.152) (Remote host closed the connection)
[22:18:39] <grym> kdbxw: fastAPI's nice
[22:18:40] <SnoopJ> kdbxw, an existing Python program?
[22:18:52] <SnoopJ> or are you talking about embedding Python in a program in some other language?
[22:19:21] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[22:20:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[22:21:09] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[22:21:32] <kdbxw> SnoopJ, no-no-no, I have a background service I wrote and thinking of adding a simple HTTP interface to it
[22:22:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:22:19] *** Joins: mickey8 (~user@user/mickey)
[22:23:01] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[22:24:35] <SnoopJ> kdbxw, FastAPI is indeed nice and very async-friendly, although I'm not entirely sure about running it on a separate thread in this case, I've usually run it with gunicorn or uwsgi coordinating a set of workers.
[22:24:41] *** Joins: Syzygy (~Syzygy@178-190-83-165.adsl.highway.telekom.at)
[22:25:52] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[22:25:58] <Syzygy> I'm using someone elses docker image which is running flask. Since flask is not suitable for production, what would be the best way make this production ready? I plan to run this with google's kubernetes engine
[22:27:09] <grym> Syzygy: flask's just fine for prod, but you need to put something like gunicorn in front of it
[22:27:15] <SnoopJ> Syzygy, Flask can be used in production, it's just that you shouldn't use it as the web server. gunicorn/uwsgi are nice.
[22:27:41] <akk> Syzygy: https://flask.palletsprojects.com/en/2.0.x/deploying/index.html
[22:27:55] <grym> (this can be as simple as RUN thevenv/bin/python -m gunicorn ... the.app
[22:27:56] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6953:f4be:264a:efd4)
[22:28:02] <grym> insert params as needed
[22:28:35] <Syzygy> yes, that's what I do with my own servers, but in this case, I would like to juse use the docker image, but how do I put gunicorn in front of that? do I need to rebuild the image? wrap it in another image or maybe does kubernetes take care of the problem by itself already?
[22:28:54] <grym> docker run  can override the default RUN command
[22:29:13] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[22:29:50] *** Joins: brabrax (~brabrax@user/brabrax)
[22:29:59] <Syzygy> then I would do FROM myflaskimage, pip install gunicorn and then start that?
[22:30:15] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[22:30:21] <grym> uhh.. sure, something like that seems okay
[22:30:44] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[22:30:54] <Syzygy> alright, I'll try that.
[22:31:30] <SnoopJ> Syzygy, yea, you could use their image as your base and swap out how it stands itself up to be [your server] deferring to their Flask application.
[22:31:42] *** Quits: hifi (hifi@m.vi.fi) (Changing host)
[22:31:42] *** Joins: hifi (hifi@heisenbridge/hifi)
[22:32:38] *** Quits: prs (~Priyanshu@203.18.51.235) (Remote host closed the connection)
[22:33:05] *** Quits: matrixbot_bartab (~matrixbot@195.200.221.151) (Ping timeout: 256 seconds)
[22:33:12] <Syzygy> if I use an nginx ingress, or any ingress for that matter, do I still need to use gunicorn? I vaguely recall, that nginx would be an alternative to gunicorn?
[22:33:39] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[22:33:42] *** Joins: prs (~Priyanshu@203.18.51.235)
[22:34:02] <SnoopJ> it's not uncommon to use nginx or friends to reverse proxy to gunicorn
[22:34:03] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e442:f7c7:fc70:e26f) (Quit: Textual IRC Client: www.textualapp.com)
[22:34:33] <Syzygy> so it's an "in addition to" rather than a "instead of" thing. thanks
[22:34:47] *** Joins: darksun (~darksun@user/darksun)
[22:36:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:37:02] *** Joins: duszek (~duszek@2a01:116f:652:1800:b1e3:4e8f:2c26:9a54)
[22:37:05] *** Joins: mickey8 (~user@user/mickey)
[22:37:16] <duszek> why doesn't this work?
[22:37:16] <duszek> for x in range(2,10,0.25):
[22:37:24] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:37:31] <Wooble> duszek: because range is for ints
[22:37:41] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:37:58] <duszek> Wooble: Oh, I understand it now
[22:38:20] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[22:38:24] <Wooble> duszek: https://stackoverflow.com/questions/7267226/range-for-floats has some solutions.
[22:38:37] *** Quits: prs (~Priyanshu@203.18.51.235) (Remote host closed the connection)
[22:39:07] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:39:16] *** Joins: hwrd-test (~hahuang65@104-50-0-249.lightspeed.sntcca.sbcglobal.net)
[22:39:40] *** Joins: darksun (~darksun@user/darksun)
[22:40:59] *** Quits: hwrd-test (~hahuang65@104-50-0-249.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 3.3)
[22:41:26] <stats4647> Hi, I have two @staticmethods in a class (f1 and f2), I call one from a class function via self.f1() and it works. But when I call f2() from within f1, it doesn't recognize f2() and I don't have the self handle in f1() to call self.f2(). I can move those functions out of the class definition and treat them as regular functions, but I'd like to keep them there if possible. I don’t use classmethods for these because they ar
[22:41:26] <stats4647> e pure utility functions. Any advice? TIA
[22:41:39] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[22:41:53] <bjs> stats4647: use classmethod anyway?
[22:42:51] <stats4647> bjs: just for this reason or ... ?
[22:42:52] <bjs> I didn't really understand your reason for not using it
[22:42:54] <SnoopJ> stats4647, you could call YourClass.func(), but staticmethod comes with sharp edges exactly like this.
[22:43:13] <bjs> stats4647: I mean, your reason for *not* using classmethod despite the fact the classmethod gives you the class that lets you call other classmethods easily
[22:43:15] <bjs> I don't understand
[22:43:17] <SnoopJ> I agree that it'd be better to write an instance method or classmethod for the reason that you don't have to repeat the class name
[22:43:43] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:43:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[22:44:22] <stats4647> bjs: from what I understand, classmethods should be used when the code modifies some class variable. also, where would you use a staticmethod?
[22:44:36] <bjs> stats4647: I wouldn't, because why would I use a staticmethod if there is @classmethod available
[22:44:41] <bjs> that does all the same, except also gives me the class?
[22:44:46] <nedbat> stats4647: i don't understand why staticmethod wouldn't work if classmethod would?
[22:45:08] *** Quits: duszek (~duszek@2a01:116f:652:1800:b1e3:4e8f:2c26:9a54) (Quit: Leaving)
[22:45:12] <nedbat> stats4647: can't you use ClassName.f2() ?
[22:45:33] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:45:36] *** Quits: emf (~emf@2620:10d:c090:400::5:d28b) (Ping timeout: 268 seconds)
[22:45:42] <bjs> stats4647: if they really are "pure" in that they have nothing to do with the class or any instances, why are they on the class at all?
[22:45:45] *** Joins: matrixbot_bartab (~matrixbot@195.200.221.151)
[22:45:50] <bjs> Python isn't like other languages, you are allowed to have `def`s outside of classes entirely
[22:46:09] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[22:46:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:47:15] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[22:47:37] *** Joins: emf (~emf@2620:10d:c091:480::1:6546)
[22:47:49] <stats4647> bjs: fair enough, so why have @staticmethods at all? The functionality provided by these methods are relevant for the class but completely the same no matter which object is calling it (you pass in the right input, it does its thing)
[22:48:14] <Wooble> stats4647: fun fact: Guido says he accidentally invented staticmethod and then it was too late to remove it
[22:48:27] <grym> ^
[22:48:41] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:48:42] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[22:48:45] <stats4647> Wooble: :) ok, thank you
[22:49:01] <bjs> stats4647: well historically speaking the person who wrote it said it was a mistake.  But there are use cases, because you can "turn" a normal function into a static method by calling it.  `method = staticmethod(some_pure_func)`
[22:49:03] *** Quits: rindolf (~shlomif@87.68.242.48.adsl.012.net.il) (Ping timeout: 252 seconds)
[22:49:14] <akk> So is it considered good form to avoid @staticmethod? And if I have a method a class uses that doesn't need self, would it be better to define it outside the class even if nothing else uses it?
[22:49:24] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:49:32] <akk> (just had one of those this morning and was wondering what was considered best style)
[22:49:40] <SnoopJ> akk, it's just kind of a vestigial thingy: anything you'd decorate with it might as well be a free function, and anything else is...not a staticmethod
[22:50:04] <stats4647> the reason I am doing it is to simplify the unit testing, don't want to have to deal with creating an object, etc
[22:50:09] <SnoopJ> but very occasionally it's useful to throw a function into a class's namespace because it makes sense for it to be there
[22:50:20] <SnoopJ> stats4647, classmethods are on the class, no object needs to be created to use them.
[22:50:30] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[22:50:31] <SnoopJ> (except the class object, which is created by defining the class)
[22:50:33] <CrtxReavr> Does Python have an object that represents the "top" of the namespace?
[22:50:39] <SnoopJ> CrtxReavr, modules?
[22:50:53] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[22:50:56] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[22:51:22] *** Joins: dudek (~dudek@185.150.236.103)
[22:51:49] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[22:52:09] <stats4647> SnoopJ: yes, I was avoiding the classmethod just because they aren't modifying any static variables (c++ type) in my case, but I suppose it doesn't matter and I should just use them
[22:52:53] <SnoopJ> stats4647, to use a method defined on a class or instance, you need a way to refer to the object. If you use staticmethod, your only option is naming the class explicitly, which is kinda gross compared to just getting the class passed in via @classmethod.
[22:53:04] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:53:07] <SnoopJ> but they're both valid ways to do it
[22:53:21] <stats4647> SnoopJ: got it, thanks
[22:54:03] *** Quits: dntreou (~yakiza@178-147-236-189.haap.dm.cosmote.net) (Ping timeout: 256 seconds)
[22:54:38] <jinsun> stats4647: "from what I understand, classmethods should be used when the code modifies some class variable" <- not true, as you learned today
[22:55:47] *** Quits: uncleho (~uncleho@host-189-202-66.junet.se) (Quit: Client closed)
[22:55:49] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--6c.oracle-ocna.com)
[22:55:53] <jinsun> mutating the class and using classmehods are unrelated things
[22:57:00] <stats4647> jinsun: well, you certainly shouldn't ( and probably can't) be modifying class state using regular methods, no?
[22:57:47] <jinsun> you can do YourClass.atrribute = something from anywhere
[22:58:02] <MacGyver> The thing with Python is that you definitely *can* do this.
[22:58:16] <MacGyver> (It's one of the oft-leveled criticisms)
[22:58:18] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[22:58:36] <SnoopJ> you *can* modify class state this way, but if a class is holding meaningful mutable state, something pretty screwy is probably afoot already
[22:59:14] * marduk agrees with SnoopJ (for the most part)
[22:59:14] *** Joins: emf_ (~emf@2620:10d:c090:400::5:d28b)
[22:59:56] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[23:00:03] *** Quits: emf (~emf@2620:10d:c091:480::1:6546) (Ping timeout: 252 seconds)
[23:00:25] <stats4647> SnoopJ: "this way" being what? I have read classmethods being used to implement singletons, but I haven't done that before
[23:00:59] <bjs> stats4647: classmethods are just for methods that get called on the class not on the instance
[23:01:09] <bjs> there's lots of reasons to use them
[23:01:15] *** Joins: de-facto (~de-facto@user/de-facto)
[23:01:40] <SnoopJ> stats4647, if a class holds state, you can mutate that state if you have a reference to the class. a classmethod is "just" a method that gets the class as its first argument, which is sufficient to do this mutation.
[23:01:50] <SnoopJ> but anybody who just knows the name of the class could do the same thing
[23:02:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[23:02:39] <SnoopJ> when you write @classmethod you're sort of declaring "this method wants to know about this class, but not a given instance of it"
[23:02:44] *** Joins: jimq (~jimq@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[23:03:06] <SnoopJ> when you write @staticmethod, you're sort of declaring "this method needs to know nothing about classes or instances" and if you want to reference some *other* staticmethod on that class, you're kind of going against that grain
[23:03:15] <marduk> A lot of time factory methods are implemented as classmethod
[23:03:23] <SnoopJ> which you can do, but you've gone out of your way to do the clumsier thing
[23:03:42] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:03:45] <stats4647> bjs: SnoopJ: makes sense, I was just trying to understand why using a classmethod to modify class state is "not true" as jinsun said
[23:03:45] <SnoopJ> (if the class name should change, classmethods need no updates, but staticmethods that use the class name in their body need to be changed)
[23:03:48] <jimq> we just installed tensorflow... one question...
[23:03:52] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[23:04:15] <jimq> what do we DO eith it?!
[23:04:16] <bjs> stats4647: have you written a normal method that didn't modify the instance state but only called other methods or returned a thing?
[23:04:27] <SnoopJ> stats4647, if you have an instance, you can access the class. All you need to mutate this hypothetical state is access to the class.
[23:05:07] <grym> jimq: floating point operations, rapidly
[23:05:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:05:51] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[23:06:03] <stats4647> bjs: sorry, don't understand the question - I have an instance method which calls a static/class method which in turn calls another static/class method
[23:06:17] *** Quits: matrixbot_bartab (~matrixbot@195.200.221.151) (Ping timeout: 252 seconds)
[23:06:19] <bjs> stats4647: I just mean, forget static/class methods for a second and think about normal methods.
[23:06:29] <jinsun> stats4647: I mean you can modify class state with classmethods, but classmethods don't exist to just do that, and you can mutate the state of the class in other ways too
[23:06:57] <bjs> stats4647: have you ever written just a normal method that didn't modify the object?  that seems fairly normal to me
[23:07:11] <stats4647> jinsun: ok, i don't disagree with that
[23:07:48] <stats4647> bjs: sure - the only question is where this "normal" method is defined, within the class definition or completely separate, standalone
[23:08:07] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[23:08:09] <bjs> stats4647: well normal methods cannot be standalone usually, if they mention `self` (e.g. to call other methods)
[23:08:48] <orbisvicis_> does numpy have a vectorized approach to test if element in set?
[23:09:11] <bjs> orbisvicis_: something like https://numpy.org/doc/stable/reference/generated/numpy.isin.html ?
[23:09:19] <stats4647> bjs: agree, so if you have two "normal", as in non-instance, methods that have to call each other, one has to make them classmethods so they can call each other
[23:09:26] <bjs> stats4647: no
[23:09:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:09:35] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[23:09:54] <bjs> stats4647: I just mean, forget class/static methods for a moment and just think about writing normal instance methods.
[23:09:55] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[23:10:05] <jimq> grym, oh ok... I apparantly got lots to learn about this tensorflow thing,,, I know the question I asked isn't all that specific, sorry for that; I'll look into it and try to get at what it's good for, then try stuff, THEN ask questions :)
[23:10:21] <bjs> stats4647: there, you write methods "all the time" which don't modify the object;  they read attributes, do calculations, call other self.methods() and that's fine
[23:10:47] <orbisvicis_> bjs, perfect, thanks
[23:10:54] <grym> jimq: less flippantly, tensorflow is one of a few frameworks for performing numerical optimizations on GPUs, with a strong bias towards optimization techniques that are neural network based
[23:11:07] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Ping timeout: 256 seconds)
[23:11:09] <stats4647> bjs: ah, ok - so would that be preferable to creating classmethods?
[23:11:24] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:11:28] <bjs> stats4647: no no, just forget class methods for now. I'm just talking about normal methods
[23:11:29] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:12:11] <stats4647> bjs: that's what i was trying to do, implement everything using regular, instance methods
[23:12:12] <bjs> stats4647: do you agree that having normal instance methods that just do those things and do not modify the object is fine?
[23:12:21] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Quit: The Lounge - https://thelounge.chat)
[23:12:52] <bjs> stats4647: if you do, then it's the same for classmethods -- there's no reason to say you shouldn't use classmethods if it's not modifying class variables
[23:13:02] <bjs> if you're okay with using instance methods even though they don't modify instance variables
[23:13:10] <stats4647> bjs: sure, some purists would argue that that's not the right approach, but i am sure they work fine
[23:13:16] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[23:13:30] *** Joins: vakera_pingveno_ (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[23:13:36] <bjs> I don't think I've ever seen someone argue that
[23:13:37] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 252 seconds)
[23:13:42] <bjs> I've totally seen the exact opposite be argued :)
[23:14:03] <stats4647> bjs: the classmethods are there for a reason though, no ?
[23:14:10] <bjs> stats4647: yes, they are just methods
[23:14:15] <bjs> but for the class not the instance
[23:14:19] <SnoopJ> grym, "that one stochastic gradient descent" ? :P
[23:14:20] *** Joins: Narrat (~omnius@p200300df5f14e29206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:14:34] *** Joins: Auron (Auron956@user/auron)
[23:14:46] <SnoopJ> https://i.redd.it/ro7j9zngfh2z.png
[23:14:58] <bjs> stats4647: like how normal methods take "self", class methods take "cls" (the class).  There's no reason either kind of method has to modify anything, if they're calling other self.methods() or cls.methods() or reading class/instance attributes or doing something useful then that's fine
[23:15:04] *** Joins: nomic (~nomic@185.198.243.158)
[23:15:17] <SnoopJ> and if they're ignoring the existence of that parameter entirely, that's fine too
[23:16:28] <stats4647> bjs: agree, makes sense
[23:16:32] <stats4647> thanks
[23:16:49] *** Quits: jimq (~jimq@50-0-146-31.dsl.dynamic.fusionbroadband.com) (Quit: Leaving)
[23:16:50] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Read error: Connection reset by peer)
[23:17:05] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:18:21] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) ()
[23:18:23] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[23:19:13] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:19:15] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[23:20:01] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:20:11] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[23:22:14] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 252 seconds)
[23:22:22] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[23:22:38] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:74dc:3fec:c2:c65)
[23:25:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:26:55] *** Joins: audio (~audio@user/audio)
[23:26:59] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[23:28:51] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:29:30] *** Joins: jokoon (~eio@2a01:e0a:542:e160:1901:8c08:67d4:4693)
[23:29:42] <jokoon> can somebody explain this ? https://docs.python.org/3.8/library/operator.html#operator.matmul I'm confused...
[23:29:58] <bjs> jokoon: what confused you?
[23:30:09] <jokoon> How to use it?
[23:30:29] <bjs> jokoon: the functions in the operator library are helper functions that stand for the various operators
[23:30:45] <bjs> jokoon: so operator.add(a,b) is like a+b and operator.mul(a,b) is a*b
[23:30:49] <bjs> and operator.matmul(a,b) is a @ b
[23:30:54] <bjs> the @ operator is called matmul
[23:31:31] <jokoon> what about this ? https://bpa.st/Z4NQ
[23:31:52] <bjs> jokoon: what about it?  Python's built-in types do not use the @ operator
[23:32:04] <bjs> so that would probably be a TypeError of some kind
[23:32:15] *** Joins: greedom (~greedom@p200300de6708e600c8f52a83ae8b4ab2.dip0.t-ipconnect.de)
[23:32:21] <bjs> Maybe you want a library like numpy ?
[23:32:40] <Wooble> jokoon: it was added for numpy to use (although IIRC none of their core developers will admit they wanted such a thing at all :) )
[23:33:32] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:c006:182a:a2a6:4f9b)
[23:33:55] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:33:59] <jokoon> I don't understand, is there any example to use this @ operator?
[23:34:12] <bjs> jokoon: None of the built-in types use it, no
[23:34:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:34:20] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[23:34:37] <bjs> jokoon: but like all Python operators custom libraries can make it do whatever they want on their types,  like numpy does
[23:34:51] <grym> SnoopJ: nice
[23:35:03] <jokoon> so it seems pretty useless by itself then
[23:35:14] <bjs> jokoon: well, "by itself" it's just an operator so yes
[23:35:29] <bjs> all operators are useless by themselves,  their usefulness comes from the datatypes that implement those operators to do useful things
[23:35:45] <bjs> like numpy does for +, -, /, *, and indeed @ for its matrix type
[23:36:11] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:37:08] <jokoon> I mean that @ is one operator that python, by itself, doesn't implement
[23:37:19] <bjs> jokoon: yes
[23:37:24] <Wooble> jokoon: https://www.python.org/dev/peps/pep-0465/ if you're interested in details of why it was added
[23:37:28] *** Joins: jay-m126 (~jay-m@154.72.150.177)
[23:37:32] *** Joins: jay-m126_ (~jay-m@154.72.150.177)
[23:37:33] *** Joins: monkey_ (~user@181.114.17.106)
[23:37:35] <bjs> Python itself doesn't need a matrix multiplication operator,  but it's there for people who want to make datatypes that do
[23:37:35] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:00] <Wooble> specifically https://www.python.org/dev/peps/pep-0465/#but-isn-t-it-weird-to-add-an-operator-with-no-stdlib-uses ;)
[23:38:03] <bjs> (because Python by itself, doesn't do anything with matrices or have any matrix-like types...)
[23:38:26] <jokoon> yeah I get it
[23:38:39] <stats4647> bjs: one question - how would i call an instance method, like a static method? I thought Class.method() would work, but it's complaining about a missing argument, I am guessing because self is missing
[23:38:47] <jokoon> it's just easier language mechanics for other uses
[23:38:51] <bjs> stats4647: so, pass self to it :)
[23:38:54] <Wooble> and as that points out, it's not unique; Ellipsis is also unused in stdlib
[23:39:43] <stats4647> bjs: but I don't have self, there is no object, I am just trying to write a unit test for this method
[23:39:44] <Wooble> personally I would have liked the rejected "Add lots of new operators, or add a new generic syntax for defining infix operators" but python-dev is no fun.
[23:39:50] <bjs> stats4647: then you can't call it?
[23:39:55] <bjs> stats4647: it's an instance method, it needs an instance.
[23:40:20] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:40:27] <jinsun> stats4647: is the function actually using the self inside it? if not then why is it an instance method?
[23:40:47] <bjs> Wooble: adding syntax for defining new infix operators would have been nice, but looking at other languages that have such a feature it can often be abused :P
[23:40:53] <jinsun> stats4647: and if yes, then how do you expect it to work without passing self
[23:40:56] <jokoon> Are there V8/spidermonkey equivalent for python? Meaning python engine that outputs assembly or binary?
[23:41:08] <Wooble> bjs: well of *course* I'm going to abuse it with emoji operators. :P
[23:41:10] <bjs> jokoon: there's PyPy
[23:41:11] <stats4647> jinsun: it should be a classmethod
[23:41:25] <bjs> Wooble: the use of unicode is not the thing I was thinking of tbh
[23:41:32] <jokoon> bjs pypy doesn't seem to be very fast compared to js in v8 and spidermonkey...
[23:41:39] <bjs> Wooble: https://hackage.haskell.org/package/lens-5.1/docs/Control-Lens-Operators.html
[23:41:54] <stats4647> bjs: i was following your logic of why even bother with classmethods if you can just use instance methods for everything
[23:42:04] <bjs> stats4647: that wasn't my logic at all!
[23:42:19] <stats4647> bjs: i must have misunderstood
[23:42:44] <bjs> stats4647: I was saying, it's okay to have instance methods that don't modify the instance. So it must be okay to have class methods that don't modify the class
[23:43:03] <stats4647> bjs: i see
[23:43:04] <bjs> stats4647: you were saying you thought you should only use classmethod when you modified the class
[23:43:11] <bjs> but ... that's not what we do for any other kind of method
[23:43:32] <bjs> jokoon: well... okay?
[23:44:18] <bjs> jokoon: there is no implementation of Python that has had as much energy, effort, time and money spent to make it fast as v8 has.
[23:44:18] <jokoon> What I mean is that, I guess pypy could be so much faster if it received as much money and time as v8 and spidermonkey
[23:44:31] <bjs> jokoon: well, definitely yes
[23:44:52] <Wooble> stats4647: ideally, use an instance method if you need to *access* an instance, a classmethod if you need to access the class object, and if you don't need to do either you probably just wanted a function outside a class, but use staticmethod if you must.
[23:44:54] <bjs> if you have a Google-level of money in your bank account, you could make it a reality
[23:44:58] <bjs> if not... then maybe next year :)
[23:45:02] <jokoon> I'm not sure pypy is using bleeding edge stuff that can be found in those js engines
[23:45:31] <jokoon> yeah okay, that answers my question
[23:45:36] <bjs> jokoon: most of what you find in those engines is incredibly bitter fighting over single % performance improvements
[23:45:47] <bjs> that cost a scary amount of money in developer time
[23:45:49] <Wooble> jokoon: on the other hand python isn't running on every end user's computer in a way that will make them leave your ecommerce site and not give you money if it's a bit too slow. :)
[23:46:24] <jokoon> I know, but I'm dreaming of a future where python will be available natively in the browser...
[23:46:53] <nedbat> jokoon: 3.11 is getting speed improvements.
[23:46:56] <jokoon> Or at least a pythonic language
[23:47:04] <jinsun> there are packages to compile python to js
[23:47:20] <jinsun> like https://realpython.com/brython-python-in-browser/
[23:47:32] <nedbat> jokoon: they have dreams of a 5x speed improvement eventually
[23:47:34] <jokoon> I tried brython, it's not very fast
[23:47:42] <Wooble> jinsun: your users will leave your site before the runtime even downloads :P
[23:47:43] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[23:48:11] <jokoon> I love brython though
[23:48:21] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:48:31] <jokoon> That would encourage me to build webapps with it...
[23:48:42] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[23:49:11] <jokoon> I'm just unable to work for anything that has typescript or js in it. I just can't
[23:49:31] <jokoon> It's like money I don't want
[23:50:57] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:52:51] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-a58e-bfb2-96f8-2fe0.res6.spectrum.com) (Ping timeout: 252 seconds)
[23:53:00] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Quit: Leaving)
[23:53:13] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--6c.oracle-ocna.com) (Ping timeout: 252 seconds)
[23:53:25] <stats4647> Wooble: thanks - not to beat a dead horse, but the only reason I am thinking of using the classmethods is so that the methods could be defined within the class, not because I need access to the class object. Is that bad?
[23:53:55] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[23:55:12] <jinsun> depends on the reason you want the methods inside the class, that reason could be bad
[23:55:19] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[23:55:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:55:58] <jinsun> if you don't need the class object they can be outside the class, and that would be the simpler way to do it
[23:56:57] <stats4647> jinsun: cleaner, the methods are only useful for objects of that class. If you put them outside, then they should ideally be useful more broadly
[23:57:05] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:57:20] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:57:29] *** Joins: fikran (~fikran@user/fikran)
[23:57:32] *** Quits: jokoon (~eio@2a01:e0a:542:e160:1901:8c08:67d4:4693) (Quit: Leaving)
[23:58:47] <jinsun> okay, not sure how they can be useful for only that class if they don't even take an instance of that class as a parameter
[23:59:48] <stats4647> jinsun: just by design, you don't need that functionality anywhere else, simple
