[00:11:22] *** Quits: Rodn3y (~rodney@user/rodn3y) (Ping timeout: 240 seconds)
[00:11:30] *** Joins: Rodn3y (~rodney@static.100.168.251.148.clients.your-server.de)
[00:11:30] *** Quits: Rodn3y (~rodney@static.100.168.251.148.clients.your-server.de) (Changing host)
[00:11:30] *** Joins: Rodn3y (~rodney@user/rodn3y)
[00:12:09] *** Joins: hpkn_ (~hpkn@gateway/tor-sasl/hpkn)
[00:12:17] *** Quits: hpkn (~hpkn@gateway/tor-sasl/hpkn) (Remote host closed the connection)
[00:12:22] *** hpkn_ is now known as hpkn
[00:23:15] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:23:18] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:31:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[00:33:30] *** Joins: emcodem (uid483343@id-483343.helmsley.irccloud.com)
[00:33:31] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[00:33:34] <emcodem> good evening ladies and gentlemen!
[00:33:41] <emcodem> happy friday :D
[00:34:12] <emcodem> anyone ever made a successful live stream directly to html5 video player, like this:
[00:34:13] <emcodem> ffmpeg -re -i C:\Users\emcod\Downloads\UCN12039.mxf -f mpegts -c:v libx264 -listen 1 -g 1  http://localhost:1935/live
[00:34:58] <emcodem> it works when opening the video using vlc but it dont work in browsers and i am too stupid to see the reason for it
[00:35:10] <emcodem> error on ffmpeg side:
[00:35:11] <emcodem> [http @ 00000298a1b98740] URL read error: Error number -10053 occurred
[00:36:16] <emcodem> there is no error visible on the browser side, when using chrome media debugging, only thing i see under messages is this: FFmpegDemuxer: open context failed
[00:43:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:03:52] <DeHackEd> emcodem: umm.. -g 1 wouldn't normally be recommended. that's gonna be hell on the bitrate.
[01:04:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:05:07] <furq> browsers don't support mpegts
[01:05:17] <furq> so the gop length doesn't really matter
[01:06:13] *** Quits: dumbo (~dumbo@pd9f8e225.dip0.t-ipconnect.de) (Quit: Connection closed)
[01:06:54] <emcodem> oh i thought mpegts is one of the only containers they support
[01:06:57] <kepstin> emcodem: to do live media playback in the browser, you'll want to use ffmpeg's HLS or DASH muxer, along with a javascript player library in the browser.
[01:07:21] <emcodem> yeah i know all alternatives including webrtc inside out
[01:07:23] <emcodem> hehe
[01:08:06] <kepstin> mpegts is kind of a sort of weird case - it's only acceptable in the context of HLS, and only apple browsers support HLS natively (without an MSE player), i think?
[01:08:46] <furq> hls and dash but yeah
[01:09:45] <furq> and most non-apple mobile browsers support hls natively including android chrome
[01:09:48] <emcodem> so what i am trying to do is to avoid any kind of storage and additional server
[01:09:54] <furq> in case this wasn't confusing enough
[01:10:12] <emcodem> sure, otherwise hls.js pops in...
[01:10:55] <emcodem> i wonder if my test would work with an mp4 and moov atom at start
[01:11:11] <furq> it might work with fmp4
[01:13:23] <emcodem> -movflags frag_keyframe+empty_moov ?
[01:15:50] <emcodem> bite my ass, it works!
[01:19:39] <emcodem> why the hell doesnt chrome html5 player just tell me that he dont like the format
[01:20:16] <another|> that would be too easy
[01:20:29] <emcodem> hehe and thats why :D
[01:21:22] <emcodem> so, i am able to "live stream" directly from ffmpeg to html5 now using this:
[01:21:23] <emcodem> ffmpeg -re -i C:\Users\emcod\Downloads\UCN12039.mxf -f mp4 -movflags frag_keyframe+empty_moov -c:v libx264 -listen 1 -seekable 0 -g 1 http://localhost:1935/live
[01:21:35] <emcodem> <video src="http://localhost:1935/live" controls/>
[01:21:42] <emcodem> this is my player:D
[01:23:25] <emcodem> as this works, the fun is just starting for me now... my usecase is to implement a "local" video player that works in the browser and always has a single client at a time, like you would preview videos from your NAS at home in the web filebrowser - but of course supporting any format by just live transcoding it
[01:26:33] <another|> you might want to limit bitrate in that case
[01:27:49] <JEEB> emcodem: -movflags dash is probably more straightforward for you
[01:28:02] <JEEB> it enables fragmentation, and default is keyframe based
[01:28:08] <JEEB> then empty moov IIRC gets enabled, too
[01:28:38] <emcodem> yeah, i fear the final ffmpeg commands will be pretty intense, given that i might need to switch audio tracks/channels on users demand and allow the user to seek (which would re-spawn a new ffmpeg on the server with -ss parameter)
[01:28:41] <JEEB> emcodem: and yea, people have done stuff like that. I think AMM made a PoC where a python server would serve the latest fragment after feeding all clients the ftyp etc
[01:28:54] <emcodem> uhhh thanks jeep, i'll try right now
[01:29:14] <JEEB> armoured JEEB
[01:29:55] <emcodem> yeah most of the stuff targets the general purpose web usage, i am always working on the little use enterprise only, special application area, so not a lot tutorials and experiences out there for me :-(
[01:30:15] <emcodem> and sorry for the jeep, jeeb ;-)
[01:31:14] <emcodem> movflags dash works as well :-D
[01:33:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:33:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:34:13] *** Quits: dreamon (~dreamon@pd95037d3.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[01:36:38] <emcodem> thanks guys, this will be really, really, really useful to me
[01:41:01] <emcodem> any ideas how to make that seekable? :D
[01:41:42] <JEEB> for that you'd actually have to have an API client that is directly connected to the playback controls in the webui
[01:42:01] <JEEB> which would be giving you (as a live stream) exactly the bits you need
[01:42:29] <JEEB> in other words, you can get a simple proof of concept going with ffmpeg.c but not more than that
[01:42:47] <JEEB> if you want to build more than that, you will have to make an API client that can actually get control messages from the UI
[01:43:57] <emcodem> hmmm but we cannot seek once the chain is established, right?
[01:44:35] <JEEB> with the <video> tag way it's a live stream, so that is why controls would go straight to your API client, and make it output the live stream where you wanted to seek
[01:44:42] <JEEB> so it is not a seek on the client
[01:44:52] <emcodem> yah no worries about the client side...
[01:45:15] <JEEB> alternatively you do index your input file, and serve a HLS or DASH manifest based on that index. then you have an API client actually generate the fragments/segments that you require
[01:46:10] <JEEB> basically, ffmpeg.c gets you to the Proof of Concept phase, but after that you will have to pick your poison (constant fragmented mp4 live stream or a dynamically generated HLS/DASH thing)
[01:46:41] <JEEB> and then you implement a proper API client that latches onto the web server that is generating the thing
[01:48:00] <emcodem> i guess the transport to the client in that case doesnt really make the big difference, if its mp4 fragmented or hls/dash
[01:48:36] <JEEB> with the live stream it's always a live stream. with HLS/DASH you index the input, and then generate fragments/segments based on that. and the client is actually seeking within that VOD manifest
[01:48:42] <JEEB> that is the biggest difference
[01:48:57] <emcodem> what i fear thats not possible is to do an api client that is able to seek to a certain frame without re-opening the file
[01:49:29] <JEEB> if ffms2 can do it, why wouldn't any other API client? of course in your case you wouldn't be decoding, but the idea is the same
[01:49:36] <JEEB> you index your input, then utilize that index as a helper tool
[01:49:38] <emcodem> ffms2 does it's own index
[01:49:41] <JEEB> yes
[01:49:47] <JEEB> I mean, if you want seeking you want that too
[01:49:55] <emcodem> thats now an option for me, it takes ages
[01:50:09] <JEEB> since while seeking generally is deterministic, it only gives you what you expect with certain containers
[01:50:38] <JEEB> or more like, there are containers like MPEG-TS etc where there is no container level index
[01:50:44] <emcodem> sure
[01:51:01] <JEEB> in any case, it's the same whether you're doing -ss or otherwise
[01:51:06] <JEEB> it's an API seek
[01:51:14] <emcodem> exactly
[01:51:16] <JEEB> I don't see how the re-opening of the file is relevant
[01:51:25] <emcodem> but this cannot be done once the chain is running, right?
[01:51:26] <JEEB> like, I don't see it being a requirement at all
[01:51:36] <JEEB> emcodem: are you perhaps still thinking of continuing with ffmpeg.c?
[01:51:41] <JEEB> because at this point you drop that idea
[01:51:58] <emcodem> not at all
[01:52:01] <JEEB> ok
[01:52:09] <JEEB> I don't see how a seek in the middle is any problem
[01:52:18] <JEEB> in the worst case you end up in the wrong spot
[01:52:19] <emcodem> need to try that
[01:52:34] <emcodem> yeah thats a fundamental limit, no worries about that
[01:52:56] <JEEB> but yea, everything else I've seen that does this does an index, or limits itself to a well-indexed thing when making its (quick) index
[01:53:12] <JEEB> generally indexing is just I/O bound since you read through the packets once
[01:53:20] <JEEB> no decoding etc during that process
[01:53:35] <emcodem> ah, ok you are right, i have seen ffplay to be capable of seeking without re-opening the file
[01:53:50] <JEEB> and most other avformat based players? :D
[01:54:01] <JEEB> or did you just expect every API client to just re-open the file
[01:54:03] <emcodem> true :D
[01:54:26] <emcodem> nope, i'd have noticed that with my 1tb UHD files hehe
[01:54:52] <JEEB> I mean, in some cases throwing the avformat context on the floor and re-opening is a way to get a completely clear slate, but you're not supposed to need that
[01:55:03] <JEEB> in general, that is
[01:55:50] <emcodem> i'll check it out, thanks JEEB
[01:55:56] <JEEB> I think the most common requirement for things like this I've seen is that the files need to be mp4 (fragmented or not), and then the generating thing is very much geared towards that
[01:56:26] <JEEB> that way the indexing is rather basic instead of a full one, I think? Although I've not looked under the hood in those things
[01:58:40] <emcodem> i thought that the index for mp4 files is always complete and points to each and every frame anyway
[01:59:09] <emcodem> so "re-indexing" as e.g. ffms does is only needed when the contained index is broke in some way
[02:01:26] *** Joins: kevinnn (~kevinnn@ip174-67-254-109.oc.oc.cox.net)
[02:02:42] <JEEB> emcodem: with fragmented stuff you technically might have to look into each fragment's index
[02:02:55] <JEEB> there's also a global seek index I think which a muxer might or might not write at the end
[02:03:10] <JEEB> I have no idea how much or not much that specific module trusted whichever bit
[02:03:17] <emcodem> what i actually think of is if i could do a filter that receives the seek command from the user interface and forwards it to ffmpeg (ffmpeg.c)
[02:03:24] <kevinnn> Is there anyone here who knows much about alsa? I am having trouble with underruns. Specifically after I disabled them with snd_pcm_sw_params_set_stop_threshold?
[02:03:33] <JEEB> emcodem: ugh
[02:03:44] <JEEB> the longer you go with ffmpeg.c the more pain you will have with it in the long run
[02:03:48] <JEEB> just note that I did warn you
[02:07:20] *** Joins: kentcdodds (~kentcdodd@172.58.72.136)
[02:07:25] <kentcdodds> Hello folks 👋
[02:07:26] *** Joins: arcatech_ (~arcatech@user/arcatech)
[02:07:50] <emcodem> interesting opinion @JEEB, i wonder why you think so... i mean using API means the need to update my program pretty frequently while when i go with ffmpeg mainstream and just do filters and such, i need to update a lot less
[02:07:52] <kentcdodds> Hopefully a quick yes/no question. Is it reasonably possible to install ffmpeg 4.4 on debian?
[02:08:23] <kentcdodds> I'm running a node app within `node:16-slim` and trying to `apt-get` ffmpeg, but it's installing 4.1 😬
[02:08:34] <JEEB> emcodem: I don't see the major API usage having changed since the new enc/dec API
[02:08:51] <JEEB> and even then the old enc/dec API was still there until just a few months ago I think
[02:09:16] <JEEB> I just know myself the pain of having seen something that goes into production with ffmpeg.c underneath
[02:09:31] <emcodem> not the usage but last time i did it, there was lots of side cases that i needed to catch in order to support "any" source file
[02:10:14] <JEEB> dunno. I don't even see ffmpeg.c having too many format specific things.
[02:10:40] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[02:10:44] <emcodem> it might be the same issue using api or ffmpeg.c after all....
[02:11:25] <JEEB> ffmpeg.c's design might just be not matching to your needs, or ffmpeg.c's random logic for something random might actually bite you in the rase
[02:11:28] <JEEB> *arse
[02:11:37] <emcodem> hehe absolutely :D
[02:12:08] <JEEB> but yea, I'm not perfect. I've just unfortunately seen enough that I think that right now you're in the phase of "if I only just patch this one thing a bit", but then you might end up essentially with enough logic to have your own API client
[02:12:30] <JEEB> but I guess we each pick our pond where we decide to drown
[02:12:45] *** Quits: arcatech_ (~arcatech@user/arcatech) (Quit: Bye.)
[02:12:46] <emcodem> hehe thats right
[02:13:14] <emcodem> no worries, i guess i have enough homework to do anyways
[02:13:28] <JEEB> I mean, for example the logic in ffmpeg.c that looks if a stream's suddenly jumped more than 5 or 10 seconds (whatever the default was)
[02:13:37] <emcodem> thanks a lot for your time JEEB, really appreciated that you still hang around at the users chat
[02:13:51] <JEEB> it will suddenly just move that bit to stick to the end of the previous packet
[02:14:09] <emcodem> hmmm ok
[02:14:11] <JEEB> which so far has led to really hilarious stuff when f.ex. the video drops for 10 seconds
[02:14:18] <JEEB> while audio is ongoing
[02:14:39] <JEEB> probably fixes some files, but definitely breaks others :D
[02:14:57] <JEEB> ffmpeg.c is full of random stuff like that
[02:16:35] <JEEB> emcodem: also FYI ffmpeg.c already has controls so I wouldn't be surprised if one could just stick IPC into that if you really wanted to
[02:16:49] <JEEB> no real need for a random filter in the mess as far as I can tell :D
[02:18:35] <emcodem> yeah i fear there is lots of stuff i'd need to think of when doing an api client for my usecase, it is just a huge project
[02:19:40] <emcodem> it would be cool if ffmpeg.c had the random seek built in by e.g. accepting stdin commands like ffplay does but i didnt find anything like it
[02:19:43] <JEEB> pretty sure you'll have plenty of that even if you just start by extending ffmpeg.c
[02:19:55] <JEEB> there are commands, but yea seek probably isn't wired so far
[02:20:01] <JEEB> only stuff like more or less verbosity etc
[02:20:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:22:46] <emcodem> https://www.irccloud.com/pastebin/HAKaFUUk/
[02:23:10] <JEEB> yup
[02:23:13] <emcodem> i went through this many times over the last years
[02:23:33] <emcodem> then i read about zmq
[02:23:38] <emcodem> it was a fail as well hehe
[02:24:11] <JEEB> wiring the seek in probably isn't too hard, maybe needs to just adjust the offset logic to then stick it to where you left off before seek
[02:24:18] <JEEB> basic stuff
[02:24:33] <emcodem> thats my idea :D
[02:33:42] <emcodem> ok again many thanks to JEEB as usual and please don't forget the questions from <kentcdodds
[02:34:17] <kentcdodds> Quick update on my question :)  I used `node:16-bullseye-slim` which uses an unstable version of debian and that installs ffmpeg 4.3 which is good enough for me
[02:34:21] <emcodem> and  kevinnn :D
[02:34:30] <kentcdodds> But I'm still curious whether it's (reasonably) possible to get the latest 4.4
[02:34:58] <kevinnn> thanks emcodem!!
[02:35:24] <emcodem> @kentcdodds, why would you not just run with the latest build instead of some "release"?
[02:35:27] <JEEB> kentcdodds: nothing stops you from getting a static build or building yourself into a prefix you wish
[02:36:00] <JEEB> f.ex. BtbN makes builds of master and latest release branch
[02:36:01] <kentcdodds> emcodem The latest build is old and I'm using filters the old version doesn't support
[02:36:15] <kentcdodds> JEEB, I don't know how to do that 😅
[02:36:34] <JEEB> https://github.com/BtbN/FFmpeg-Builds/ for example?
[02:37:37] <emcodem> @kentcdodds when referring to latest build i mean the build from yesterday, as jeeb posted :D
[02:37:46] <kentcdodds> Can I just curl the version I need from that repo?
[02:37:49] <kentcdodds> I'm using apt-get
[02:37:57] <kentcdodds> I'm using apt-get (right now)
[02:38:13] <JEEB> it's just a tarball, you extract it to random directory and then add its bin to your PATH, or call it specifically from that directory
[02:38:33] <JEEB> and it will not affect your system-packaged stuff, which generally is a good thing
[02:38:36] <JEEB> :P
[02:38:53] <JEEB> amyways. sleep for me
[02:39:04] <kentcdodds> Does that mean I'd need to do the same for all ffmpeg's deps as well?
[02:39:05] <emcodem> nighty night JEEB, thanks again
[02:39:10] <kentcdodds> Thanks JEEB!
[02:39:51] <emcodem> another nice source for linux builds is https://johnvansickle.com/ffmpeg/
[02:40:39] <kentcdodds> I'll look into it. Thanks emcodem :)
[02:40:52] <emcodem> but it all comes down to what jeeb said, just extract and maybe add to path or just specify the path directly to your extracted version
[02:43:58] *** Quits: Buster_ (~Buster@46.160.36.66) (Ping timeout: 244 seconds)
[02:44:10] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[02:44:53] <kentcdodds> emcodem and I don't need to worry about ffmpeg's dependencies though? Or will I have to do the same with each of those? Or are they built-in?
[02:45:52] <emcodem> built in
[02:46:26] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[02:47:13] <kentcdodds> emcodem perfect. Thank you!
[02:48:34] *** Quits: kentcdodds (~kentcdodd@172.58.72.136) (Quit: Connection closed)
[02:49:04] <emcodem> ok, as i am the only one left, @kevinnn, lets try to elaborate...
[02:49:43] <emcodem> (maybe i'm not but the others show up when there is enough info :D)
[02:50:59] <emcodem> some details would be really stunnishing
[02:51:51] <kevinnn> Sure! So basically according to the documentation here: https://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m___s_w___params.html#ga8a55577d7f3d8e4ce63a710921199c66
[02:52:12] <kevinnn> If I run the function snd_pcm_sw_params_set_stop_threshold
[02:52:20] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Quit: WeeChat 3.2)
[02:52:34] <kevinnn> with a boundary value it should disable underruns on writei
[02:52:45] <kevinnn> but setting it does not disable underruns...
[02:54:10] <emcodem> okok, moment,
[02:54:28] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2)
[02:54:30] <emcodem> so you don't use ffmpeg binary but your own API implementation, right?
[02:55:59] <kevinnn> yes, I am using alsa directly
[02:56:33] <emcodem> did you already simplify your code and accidently have a minimal-reproduceable code example?
[02:57:04] <kevinnn> why yes I did actually
[02:57:20] <kevinnn> https://pastebin.com/w2fm5Nd8
[02:58:38] <emcodem> why the hell didnt you post this at the very start when jeeb was here :D
[02:59:19] <kevinnn> Ugh, I don't know...
[02:59:23] <kevinnn> is anyone else here?
[02:59:51] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[03:00:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:01:15] <kevinnn> Do you know any other channels I might be able to ask this in?
[03:01:26] <kevinnn> I've already asked in alsa
[03:01:57] <emcodem> give me some minuts
[03:04:07] <emcodem> what you experience is that after some time frames is <0?
[03:05:05] <kevinnn> No, just run that program. It reports that there is a underrun
[03:05:52] <emcodem> i'd need a device with alsa for that which i dont have right now :D
[03:06:12] <kevinnn> Ah, you can just install it. apt install libasound2-dev
[03:07:50] *** Quits: der_richter (~Akemi@p4fde4e3e.dip0.t-ipconnect.de) (Quit: Leaving.)
[03:12:07] <emcodem> as i feared,
[03:12:08] <emcodem> ALSA lib confmisc.c:767:(parse_card) cannot find card '0'
[03:12:20] <kevinnn> ah! darn
[03:12:27] *** Joins: darkapex (~darkapex@user/darkapex)
[03:12:51] <emcodem> sorry i dont have a device with linux, i am on windows and best i can do is WSL
[03:13:23] <kevinnn> ah I see I see
[03:13:36] <emcodem> moment,
[03:13:40] <emcodem> which distro you use?
[03:13:56] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 244 seconds)
[03:15:16] <kevinnn> debian
[03:15:24] <emcodem> pure?
[03:15:33] <kevinnn> haha what do you mean?
[03:16:04] <emcodem> mint, ubuntu...
[03:16:22] <kevinnn> oh no just pure debian
[03:20:08] <emcodem> lets hope the install runs fast
[03:20:23] <emcodem> you got the dev package list for me quickly?
[03:20:38] <emcodem> i mean what i need to install after os installation
[03:20:50] <kevinnn> just a c++ compiler
[03:20:55] <kevinnn> and libasound2-dev
[03:21:02] <kevinnn> I believe
[03:21:34] <jaminc> does alsa work on wsl?\
[03:22:17] <emcodem> obviously not 11
[03:22:21] <emcodem> ^^
[03:22:52] <emcodem> im just installing one on oracle virtualbox, lets hope they have it
[03:28:04] *** Joins: arcatech (~arcatech@user/arcatech)
[03:29:10] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[03:29:32] <emcodem> not as fast as i hoped :D
[03:35:50] <kevinnn> No problem
[03:44:10] <jaminc> kevinnn: I think you might be misunderstanding something. I see nothing that implies that your code shouldn't throw underruns. The sleep time ensures it, even.
[03:45:10] <kevinnn> jaminc: please refer to this https://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m___s_w___params.html#ga6a41bf533207d56fdb1ff10aeeac28e4
[03:46:26] <kevinnn> I mean honestly I still might be misunderstanding tbh, but I think this is what it means
[03:46:56] <kevinnn> jaminc: also this stackoverflow post seems to agree https://stackoverflow.com/questions/15814986/alsa-snd-pcm-sw-params-set-stop-threshold-to-a-lower-value-cause-underrun
[03:48:13] <jaminc> I have to wonder how supported "device will do the endless loop in the ring buffer" is. Doesn't seem to be a particularly valuable/common case.
[03:48:45] <jaminc> Might have something to do with you inducing the process to underrun by sleeping.
[03:49:29] <kevinnn> my particular use case really needs this...
[03:49:40] <jaminc> Can you elaborate?
[03:49:47] <kevinnn> this is a more indepth write up on my use case
[03:49:47] <kevinnn> https://www.spinics.net/linux/fedora/alsa-user/msg09906.html
[03:50:02] <kevinnn> (not my write up... but near identical use case)
[03:56:24] *** Joins: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:a599:de04:16b1:ab0d)
[03:58:44] <emcodem> aaand as i feared
[03:59:53] <emcodem> https://www.irccloud.com/pastebin/kbwn4hOh/
[03:59:55] *** Quits: MrZeus (~MrZeus@185.248.85.26) (Ping timeout: 244 seconds)
[04:00:07] <emcodem> maybe i am just too stupid to run the program :D
[04:01:07] <jaminc> kevinnn: has debian switched to pipewire yet?
[04:01:36] <kevinnn> na it hasn't..
[04:01:46] <jaminc> just ran your program on straight alsa after disabling pipewire and it appears to work as you expect. might be an alsa-on-pulse thing
[04:01:54] <jaminc> ran into your problem otherwise
[04:02:09] <kevinnn> hmm I wonder what would happen if I disable pulse
[04:03:05] <kevinnn> wow
[04:03:10] <kevinnn> disabled pulse
[04:03:13] <kevinnn> worked like a charm
[04:03:24] <jaminc> cool
[04:09:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:09:17] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[04:15:56] *** Quits: riv (~river@tilde.team/user/river) (Remote host closed the connection)
[04:16:15] *** Joins: riv (~river@tilde.team/user/river)
[04:18:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[04:23:32] *** Joins: MrZeus__ (~MrZeus@141.98.252.252)
[04:27:07] *** Quits: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:a599:de04:16b1:ab0d) (Ping timeout: 252 seconds)
[04:29:41] *** Quits: Jerrk (~Jerrk@185.213.154.238) (Remote host closed the connection)
[04:30:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[04:30:03] *** Quits: darkapex (~darkapex@user/darkapex) (*.net *.split)
[04:30:03] *** Quits: Rodn3y (~rodney@user/rodn3y) (*.net *.split)
[04:30:03] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[04:30:03] *** Quits: nitroxis (n@nxs.re) (*.net *.split)
[04:30:03] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[04:30:03] *** Quits: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net) (*.net *.split)
[04:30:03] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[04:30:03] *** Quits: realies (~realies@user/realies) (*.net *.split)
[04:30:03] *** Quits: LeoNice81 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: LRN (~LRN@broadband-95-84-200-6.ip.moscow.rt.ru) (*.net *.split)
[04:30:03] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[04:30:03] *** Quits: Bombo (atom@user/bombo) (*.net *.split)
[04:30:03] *** Quits: mateo` (~mateo@ffmpeg/developer/mateo) (*.net *.split)
[04:30:03] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: wyatt8740 (~wyatt8740@172.93.207.17) (*.net *.split)
[04:30:04] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (*.net *.split)
[04:30:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[04:30:04] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[04:30:04] *** Quits: lilibox (~lilibox@31.192.64.247) (*.net *.split)
[04:30:12] *** Joins: Bombo (atom@p4ff006c0.dip0.t-ipconnect.de)
[04:30:12] *** Joins: Rodn3y (~rodney@static.100.168.251.148.clients.your-server.de)
[04:30:13] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:30:13] *** Joins: odrling (~odrling@korone.aidoru.agency)
[04:30:16] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:30:19] *** Quits: Bombo (atom@p4ff006c0.dip0.t-ipconnect.de) (Changing host)
[04:30:19] *** Joins: Bombo (atom@user/bombo)
[04:30:19] *** Quits: Rodn3y (~rodney@static.100.168.251.148.clients.your-server.de) (Changing host)
[04:30:19] *** Joins: Rodn3y (~rodney@user/rodn3y)
[04:30:35] *** Joins: mateo` (~mateo@lputeaux-656-1-153-220.w217-128.abo.wanadoo.fr)
[04:31:05] *** Quits: mateo` (~mateo@lputeaux-656-1-153-220.w217-128.abo.wanadoo.fr) (Signing in (mateo`))
[04:31:05] *** Joins: mateo` (~mateo@ffmpeg/developer/mateo)
[04:31:08] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:31:36] *** Joins: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net)
[04:32:03] *** Joins: darkapex (~darkapex@user/darkapex)
[04:32:06] *** Joins: realies (~realies@user/realies)
[04:32:12] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[04:32:16] *** Joins: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com)
[04:32:49] *** Joins: nitroxis (n@nxs.re)
[04:33:31] *** Joins: keypusher (keypusher@user/keypusher)
[04:33:40] *** Joins: wyatt8740 (~wyatt8740@172.93.207.17)
[04:33:51] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[04:35:10] *** Joins: lilibox (~lilibox@31.192.64.247)
[04:37:12] *** Joins: Jerrk (~Jerrk@185.65.135.252)
[04:38:48] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[04:41:09] *** Joins: arcatech (~arcatech@user/arcatech)
[04:43:43] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[04:45:27] *** Quits: piku (~piku@47.202.122.99) (Ping timeout: 245 seconds)
[04:47:40] *** Joins: arcatech (~arcatech@user/arcatech)
[04:48:11] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[04:55:21] *** Joins: BUSY (~BUSY@user/busy)
[05:19:10] *** Quits: MrZeus__ (~MrZeus@141.98.252.252) (Ping timeout: 240 seconds)
[05:21:01] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[05:29:35] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[05:38:17] *** Joins: mypopydev (~mypopydev@222.67.204.82)
[05:45:32] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[05:53:21] *** Joins: sagax (~sagax_nb@user/sagax)
[06:03:25] *** Joins: gnoo (~gnoo@user/gnoo)
[06:04:06] *** Joins: keypusher (keypusher@user/keypusher)
[06:09:26] *** Joins: Nex8192_ (~Nex8192@user/nex8192)
[06:09:27] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 240 seconds)
[06:19:24] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:22:38] *** Quits: emcodem (uid483343@id-483343.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[06:48:00] *** Joins: jos2 (~jos3@dyndsl-091-096-043-154.ewe-ip-backbone.de)
[06:51:22] *** Quits: jos1 (~jos3@dyndsl-178-142-065-046.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[07:10:53] *** Joins: jaggz (~jaggz@user/jaggz)
[07:11:42] <jaggz> I have a video that vlc plays, but ffmpeg chokes
[07:11:45] <jaggz>     Stream #0:1(eng): Audio: none (mp3  / 0x2033706D), 44100 Hz, stereo, 255 kb/s (default)
[07:11:51] <jaggz> it doesn't like that None audio codec
[07:12:32] <jaggz> what can we do?
[07:15:14] <jaggz> okay, -acodec before -i worked
[07:15:21] <jaggz> (-acodec mp3)
[07:19:05] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 250 seconds)
[07:24:15] *** Joins: sebbu (~sebbu@user/sebbu)
[08:01:36] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:02:13] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:06:38] *** Quits: mypopydev (~mypopydev@222.67.204.82) (Ping timeout: 252 seconds)
[08:47:06] *** Joins: Vonter (~Vonter@user/vonter)
[09:30:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:47:57] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[10:32:17] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:32:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:37:43] *** Quits: kevinnn (~kevinnn@ip174-67-254-109.oc.oc.cox.net) (Ping timeout: 256 seconds)
[10:54:35] *** Quits: reynaldo (~reynaldo@ec2-34-200-7-37.compute-1.amazonaws.com) (Quit: leaving)
[11:02:22] *** Joins: Buster_ (~Buster@46.160.36.66)
[11:13:55] *** Joins: palasso (~palasso@user/palasso)
[11:30:43] *** Joins: dreamon (~dreamon@ppp-88-217-77-73.dynamic.mnet-online.de)
[11:40:07] *** Joins: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de)
[11:57:12] *** Joins: emcodem (uid483343@id-483343.helmsley.irccloud.com)
[11:59:46] *** Quits: Buster_ (~Buster@46.160.36.66) (Ping timeout: 252 seconds)
[12:01:12] *** Joins: guest29348769876 (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de)
[12:03:01] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[12:03:27] *** Quits: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[12:03:45] *** Joins: beaver (~beaver@user/pong)
[12:07:53] *** Quits: guest29348769876 (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de) (Quit: guest29348769876)
[12:08:03] *** Joins: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de)
[12:28:41] *** Joins: blaze (~blaze@user/blaze)
[12:46:41] *** Joins: inori39 (~inori39@156.146.44.229)
[13:06:47] *** Quits: dreamon (~dreamon@ppp-88-217-77-73.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[13:12:12] *** Joins: dreamon (~dreamon@ppp-88-217-77-73.dynamic.mnet-online.de)
[13:12:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[13:13:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:16:10] *** Joins: furrymcgee (~devuan@31.179.186.66)
[13:27:22] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:32:17] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[13:40:31] *** Joins: pntaylor_ (~quassel@101.112.172.205)
[13:42:10] *** Quits: pntaylor (~quassel@101.114.60.148) (Ping timeout: 240 seconds)
[13:42:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:01:51] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[14:03:09] *** Joins: Hackerpcs (~user@user/hackerpcs)
[14:04:24] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:04:44] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[14:04:54] *** Joins: der_richter (~Akemi@p4fde4af0.dip0.t-ipconnect.de)
[14:23:52] *** Quits: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (Ping timeout: 252 seconds)
[14:24:41] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[14:37:28] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Quit: WeeChat 2.3)
[14:44:50] *** Quits: dreamon (~dreamon@ppp-88-217-77-73.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[14:49:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:50:00] *** Joins: mickey (~user@user/mickey)
[14:57:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[15:01:54] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:12:22] *** Joins: keypusher (keypusher@user/keypusher)
[15:21:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 245 seconds)
[15:32:43] *** Joins: cosimone (~user@93-44-184-220.ip98.fastwebnet.it)
[15:42:02] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 252 seconds)
[15:48:54] *** Quits: Jerrk (~Jerrk@185.65.135.252) (Read error: Connection reset by peer)
[16:01:57] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[16:08:00] <jaggz> hasta!
[16:08:01] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[16:08:03] *** Joins: Jerrk (~Jerrk@193.138.218.214)
[16:13:52] *** Joins: beaver (~beaver@user/pong)
[16:21:01] *** Quits: Jerrk (~Jerrk@193.138.218.214) (Ping timeout: 252 seconds)
[16:26:35] *** Quits: cosimone (~user@93-44-184-220.ip98.fastwebnet.it) (Ping timeout: 252 seconds)
[16:46:37] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[17:00:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[17:07:47] *** Joins: tnewman (~travnewma@1-171-220-15.dynamic-ip.hinet.net)
[17:09:37] *** Joins: cosimone (~user@93-44-184-220.ip98.fastwebnet.it)
[17:14:20] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[17:23:47] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[17:24:56] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[17:35:42] *** Quits: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de) (Quit: rsx)
[17:35:47] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[17:58:29] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[18:15:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:39:05] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[18:45:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[18:47:47] *** Joins: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com)
[18:52:12] *** Quits: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (Ping timeout: 245 seconds)
[18:53:33] *** Joins: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com)
[18:53:55] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[19:04:45] *** Joins: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[19:06:30] *** Quits: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[19:06:39] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:07:11] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[19:09:27] *** Joins: Kingsy_ (~chris@kingsy.co.uk)
[19:09:35] *** Parts: Kingsy_ (~chris@kingsy.co.uk) ()
[19:10:22] *** Joins: Kingsy (~chris@kingsy.co.uk)
[19:11:17] <Kingsy> hi, I have a hundred or so mkv files, and I want to remove all audio tracks apart from audio track #2, then make sure that track is defalt. could someone help me figure that out?
[19:11:22] *** Quits: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (Ping timeout: 245 seconds)
[19:13:25] <another|> script it in a language of your choice
[19:13:41] <Kingsy> something like this ffmpeg -i file.mkv -map 0 -map -0:a:0 -map -0:a:2 -map -0:a:4 -c copy file.mkv <- but perhaps -c copy isnt the right way?
[19:13:49] <Kingsy> I have like 100 files, so can I just change it in place?
[19:14:34] <riv> use an in and out folder
[19:14:47] <Kingsy> riv: what do you mean?
[19:14:55] <another|> ffmpeg.c can not work in place
[19:15:01] <riv> loop through the files in in/ and produce results into out/
[19:15:47] <Kingsy> I suppose while I do this I could scale down the video from 1080p to 720?
[19:16:03] <Kingsy> meh I'll just do the audio tracks for now.
[19:16:22] <Kingsy> so..
[19:16:51] <Kingsy> ffmpeg -i in/file.mkv -map 0 -map -0:a:0 -map -0:a:2 -map -0:a:4 -c copy out/file.mkv <- how does this look? I want to remove audio tracks 1, 3 and 4, then set 2 as default.
[19:17:51] <another|> is it audio track #2 or track #2 overall?
[19:18:05] <sfan5> how do I set an option belonging to a protocol from the ffprobe command line?
[19:18:08] <Kingsy> hmm how do I know that? I am just going off what I see in vlc
[19:18:48] <another|> sfan5: input options go before the input
[19:18:49] <sfan5> ah nvm, found the corresponding option with -h protocol=<name>
[19:20:11] <Kingsy> another|: so I want to keep -> Stream #0:2(eng): Audio: eac3, 48000 Hz, 5.1, fltp
[19:21:38] <another|> ffmpeg -i input -map 0 -map -0:2 -c copy out.mkv
[19:21:56] <Kingsy> that removes everything apart from that track?
[19:22:29] <another|> oh. sorry.
[19:22:47] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[19:22:58] <another|> ffmpeg -i input -map 0 -map -0:a -map 0:2 -c copy out.mkv
[19:24:59] <Kingsy> wow its quite a bit slower than I thought it would be.
[19:26:50] <Kingsy> another|: how about the same thing with subtitle tracks? I want to keep track 2
[19:28:05] <Kingsy> something like ffmpeg input -map 0 -map -0:a -map 0:2 -map -0:s -map 0:2 -c copy out.mkv ?
[19:28:54] <another|> you might want to read about stream selection in the manual https://ffmpeg.org/ffmpeg-all.html#Stream-selection
[19:29:31] <another|> and/or the wiki https://trac.ffmpeg.org/wiki/Map
[19:32:59] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[19:34:46] <Kingsy> wow that is ALOT of information
[19:40:14] <Kingsy> ffmpeg -i input -map 0 -map -0:a:1 -map -0:s:1 -c copy out.mkv <- isnt that correct? that'll take audio track 2 and sub track 2 ?
[19:42:43] <Kingsy> oh that excluded track 2.
[19:44:53] <Kingsy> another|: is it possible to use ffmpeg like above and specify what audio and sub trakcs I WANT. rather than what I want to exclude?
[19:47:57] <another|> sure. just map those you want
[19:48:59] <another|> the wiki has various examples
[19:49:38] <Kingsy> ok got it
[19:49:49] <Kingsy> another|: I don't need to consider the video stream right? it wont be changed?
[19:50:34] <jaminc> -c copy should default to that yes
[19:50:44] <Kingsy> alright cool
[19:51:19] <Kingsy> jaminc: is it hard to downscale it to 720p so I can see how it looks? if its very complicated I am not sure I want to go there.
[19:51:31] <Kingsy> just thinking I could save a fair amount of disk space.
[19:51:52] <jaminc> not really... what's your aspect ratio? just to get the scale params right
[19:52:01] <Kingsy> ermm moment
[19:52:46] <Kingsy> jaminc: Stream #0:0: Video: h264 (Main), yuv420p(tv, progressive), 1920x1080 [SAR 1:1 DAR 16:9], 25 fps, 25 tbr, 1k tbn, 50 tbc (default)
[19:52:56] <jaminc> okay, cool, default 16:9
[19:53:17] <jaminc> -vf scale=1280:720
[19:53:25] <jaminc> adding that parameter will downscale to 720p
[19:53:34] <Kingsy> alright trying it out now :)
[19:54:36] <another|> you can also use 1280:-2 to automatically calculate one parameter while keeping aspect ratio
[19:54:50] <Kingsy> iltergraph 'scale=1280:720' was defined for video output stream 0:0 but codec copy was selected.
[19:55:03] <jaminc> oh, right, heh
[19:55:07] <another|> can't scale and copy
[19:55:32] <jaminc> you gotta change -c copy to -c:a copy -c:s copy so video gets processed
[19:56:38] <Kingsy> do you need a -c:s if you want to -map subs?
[19:57:08] <Kingsy> its running now. but WOW is that slow. hehe I need a better machine for this.
[19:57:08] <jaminc> maybe not, i don't work with subs much
[19:57:56] <jaminc> you can change presets after -vf to like -preset superfast which will speed up at quality cost
[19:58:05] <jaminc> list here: https://trac.ffmpeg.org/wiki/Encode/H.264
[19:58:23] <Kingsy> naaa I don't want to damage the quality.
[19:58:26] <Kingsy> this is great though. thnks
[19:58:30] *** Joins: Flabb (~Flabb@89.169.50.87)
[19:58:40] <jaminc> I think veryfast and above run realtime on my old celeron dedi
[20:02:01] <another|> then don't reencode
[20:02:18] <Kingsy> yeah not for nwo :) I can do it later
[20:02:23] <Kingsy> thanks so much for the help here!
[20:02:39] *** Quits: Flabb (~Flabb@89.169.50.87) (Client Quit)
[20:02:56] *** Joins: Flabb (~Flabb@89.169.50.87)
[20:03:20] *** Quits: Flabb (~Flabb@89.169.50.87) (Remote host closed the connection)
[20:16:58] *** Joins: thebombzen (~thebombze@c-68-48-243-161.hsd1.mi.comcast.net)
[20:21:10] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 240 seconds)
[20:23:07] *** Joins: Flabb (~Flabb@89.169.50.87)
[20:23:59] *** Quits: Flabb (~Flabb@89.169.50.87) (Client Quit)
[20:31:54] *** Joins: Flabb (~Flabb@89.169.50.87)
[20:34:21] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[20:35:07] *** Quits: pntaylor_ (~quassel@101.112.172.205) (Ping timeout: 252 seconds)
[20:37:13] *** Quits: Flabb (~Flabb@89.169.50.87) (Quit: Leaving)
[20:37:41] *** Joins: pntaylor (~quassel@101.114.58.12)
[20:38:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:41:30] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 250 seconds)
[20:45:10] *** Quits: wyatt8740 (~wyatt8740@172.93.207.17) (Ping timeout: 240 seconds)
[20:45:24] *** Joins: minimal (~minimal@user/minimal)
[20:46:35] *** Joins: wyatt8740 (~wyatt8740@172.93.207.17)
[20:48:52] *** Joins: Flabb (~Flabb@89.169.50.87)
[20:49:39] *** Joins: n00b (~n00b@206.189.218.114)
[20:50:03] *** Joins: Buster_ (~Buster@46.160.36.66)
[20:52:10] <n00b> hi. here is my question https://forum.videolan.org/viewtopic.php?f=2&t=158085 can ffmpeg do this? i have read https://trac.ffmpeg.org/wiki/Concatenate, but I do not see how to supply a file (with a list of files inside) to concatenate. thank you
[20:52:59] *** Joins: arcatech (~arcatech@user/arcatech)
[20:53:11] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[20:53:30] <AMM> Huh?
[20:53:55] <AMM> >Concat demuxer
[20:53:55] <AMM> >Create a file mylist.txt with all the files you want to have concatenated in the following form
[20:54:30] <n00b> other topic; the concatenate wiki has the command "ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.wav" and -safe is not a current known command.
[20:56:29] <n00b> AMM, Can i do the Concat demuxer without the file part of " file '/path/to/file1.wav' "
[20:57:04] <n00b> in the linked file in my question on the videolan forum the file is just a list of links to the video files
[20:57:05] <AMM> No, also washing my hands from this
[20:58:46] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 252 seconds)
[21:00:34] <another|> n00b: how old is your ffmpeg?
[21:01:59] <n00b> another|, i believe it is latest. 4.4
[21:03:15] <another|> -safe is definitely an option for concat
[21:04:30] <n00b> ffmpeg -version
[21:04:30] <n00b> ffmpeg version 4.4 Copyright (c) 2000-2021 the FFmpeg developers
[21:04:31] <n00b> built with gcc 11 (Clear Linux OS for Intel Architecture)
[21:04:31] <n00b> configuration: --build=x86_64-generic-linux-gnu --host=x86_64-generic-linux-gnu --target=x86_64-clr-linux-gnu --program-prefix= --prefix=/usr --exec-prefix=/usr --bindir=/usr/bin --sbindir=/usr/bin --sysconfdir=/etc --datadir=/usr/share --includedir=/usr/include --libdir=/usr/lib64 --libexecdir=/usr/libexec --localstatedir=/var
[21:04:32] <n00b> --sharedstatedir=/usr/com --mandir=/usr/share/man --infodir=/usr/share/info --disable-static --extra-ldflags=-ldl --disable-everything --enable-avcodec --enable-avformat --enable-avutil --enable-avdevice --enable-rdft --enable-pixelutils --enable-libvorbis --enable-libvpx
[21:04:32] <n00b> --enable-muxer='crc,image2,jpeg,ogg,md5,nut,webm,webm_chunk,webm_dash_manifest,rawvideo,ivf,null,wav,framecrc,rtp,rtsp,ass,webvtt,mjpeg,framehash,hash,mp4,avi' --enable-bsf='mp3_header_decompress,vp9_superframe'
[21:04:33] <n00b> --enable-demuxer='mjpeg,image2,webm_dash_manifest,ogg,matroska,mp3,pcm_s16le,rawvideo,wav,mov,ivf,rtp,rtsp,flv,ass,subviewer,subviewer1,webvtt,h264,dnxhd,avi'
[21:04:33] <n00b> --enable-decoder='rawvideo,libvorbis,mjpeg,jpeg,opus,mp3,pcm_u8,pcm_s16le,pcm_s24le,pcm_s32le,pcm_f32le,pcm_s16be,pcm_s24be,pcm_mulaw,pcm_alaw,pcm_u24le,pcm_u32be,pcm_u32le,pgm,pgmyuv,libvpx_vp8,vp8_qsv,vp8,libvpx_vp9,vp9,tiff,bmp,wavpack,ass,saa,subviewer,subviewer1,webvtt,h264_qsv,yuv4,libdav1d'
[21:04:34] <n00b> --enable-encoder='rawvideo,wrapped_avframe,libvorbis,opus,yuv4,tiff,bmp,libvpx_vp8,vp8_vaapi,libvpx_vp9,vp9_vaapi,mjpeg_vaapi,pcm_u8,pcm_s16le,pcm_s24le,pcm_s32le,pcm_f32le,pcm_s16be,pcm_s24be,pcm_mulaw,pcm_alaw,pcm_u24le,pcm_u32be,pcm_u32le,ass,ssa,webvtt,mjpeg_qsv,h264_qsv,libtheora' --enable-hwaccel='vp8_vaapi,vp9_vaapi,mjpeg_vaapi'
[21:04:34] <n00b> --enable-parser='opus,libvorbis,vp3,vp8,vp9,mjpeg' --enable-protocol='file,md5,pipe,rtp,tcp,http,https,httpproxy,ftp,librtmp,librtmpe,librtmps,librtmpt,librtmpte,rtmpe,rtmps,rtmpt,rtmpte,rtmpts'
[21:04:35] <n00b> --enable-filter='acopy,aresample,ashowinfo,aselect,asetpts,copy,denoise_vaapi,deinterlace_vaapi,hwmap,hwupload,hwdownload,pixdesctest,procamp_vaapi,scale,scale_vaapi,sharpness_vaapi,showinfo,color,format,subtitles,select,setpts' --disable-error-resilience --enable-pic --enable-shared --enable-swscale --enable-avfilter --enable-vaapi --enable-libmfx
[21:04:35] <n00b> --disable-xvmc --disable-doc --disable-htmlpages --enable-version3 --disable-mmx --disable-mmxext --disable-programs --enable-ffmpeg --enable-ffplay --enable-sdl2 --enable-network --enable-openssl --enable-librtmp --enable-libv4l2 --enable-indev=v4l2 --enable-outdev=sdl2 --enable-libass --enable-libtheora --enable-libdav1d
[21:04:36] <n00b> libavutil      56. 70.100 / 56. 70.100
[21:04:36] <n00b> libavcodec     58.134.100 / 58.134.100
[21:04:37] <n00b> libavformat    58. 76.100 / 58. 76.100
[21:04:37] <n00b> libavdevice    58. 13.100 / 58. 13.100
[21:04:38] <n00b> libavfilter     7.110.100 /  7.110.100
[21:04:38] <n00b> libswscale      5.  9.100 /  5.  9.100
[21:06:03] <another|> `ffmpeg -demuxers | grep concat`
[21:07:37] <n00b> gives the exact same output?
[21:12:26] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[21:12:43] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:14:09] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Read error: Connection reset by peer)
[21:15:32] <another|> it seems your ffmpeg is build w/o the concat demuxer
[21:15:55] *** Joins: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com)
[21:17:23] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:22:39] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[21:27:12] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 245 seconds)
[21:35:08] *** Quits: haihao_ (~haihao@192.102.204.51) (Ping timeout: 252 seconds)
[21:35:34] *** Joins: haihao_ (~haihao@192.102.204.53)
[21:45:27] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 245 seconds)
[21:46:34] <n00b> another| apparently, clear linux ships with a crippled ffmpeg
[21:47:10] <another|> seems so
[21:47:22] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[21:47:41] *** Joins: hendry (~hendry@210.23.22.2)
[21:50:44] *** Joins: keypusher (~keypusher@user/keypusher)
[21:52:48] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[22:05:58] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Read error: Connection reset by peer)
[22:06:13] *** Joins: keypushe- (keypusher@user/keypusher)
[22:06:24] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[22:07:04] *** Quits: thebombzen (~thebombze@c-68-48-243-161.hsd1.mi.comcast.net) (Quit: attack.c:4: main: Assertion `I_can_beat_that_monster' failed. Aborted (core dumped))
[22:07:10] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 240 seconds)
[22:09:28] *** keypushe- is now known as keypusher
[22:13:43] *** Quits: cosimone (~user@93-44-184-220.ip98.fastwebnet.it) (Remote host closed the connection)
[22:14:33] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:25:21] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:30:36] *** Joins: thebombzen (~thebombze@c-68-48-243-161.hsd1.mi.comcast.net)
[22:43:35] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[22:44:43] *** Joins: nrg (~NRG@user/nrg)
[23:11:11] *** Joins: dreamon (~dreamon@pd95037d3.dip0.t-ipconnect.de)
[23:22:13] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[23:24:15] *** Joins: q3cpma (~q3cpma@176-136-178-80.abo.bbox.fr)
[23:24:57] <q3cpma> Hello, big noob in color spaces here, any reason ffmpeg considers sRGB PNGs as limited range? Are they actually?
[23:25:43] <JEEB> how do you think FFmpeg considers them like that?
[23:26:37] <q3cpma> Well, when I convert them to Y4M in yuv444p, it says (tv) unless I use -vf scale to convert it
[23:27:21] <q3cpma> (by doing `ffmpeg -i my.png -f yuv4mpegpipe -pix_fmt yuv444p -y mu.y4m`)
[23:27:22] <JEEB> that sounds more like when you convert RGB to YCbCr, the default range is limited
[23:27:30] <JEEB> for the output part
[23:27:33] <JEEB> which is expected
[23:27:43] <JEEB> since most YCbCr content is limited range for better or worse
[23:27:51] <q3cpma> Well, I did add -color_range 2 (which is documented nowhere, it seems), but the colours were wrong
[23:28:14] <q3cpma> Hmmm, I see
[23:28:29] <JEEB> -color_range only overrides the *encoder* settings
[23:28:48] <JEEB> also it is documented, just see `-h full`
[23:29:04] <JEEB> unknown is default, then probably tv and pc etc available as alternatives
[23:29:15] <q3cpma> Ah, I was using the man pages
[23:29:33] <JEEB> this is the manpage just in HTML format https://www.ffmpeg.org/ffmpeg-all.html
[23:29:39] <JEEB> ctrl+F "color_range"
[23:29:59] <q3cpma> Yeah, I have it, I may be dumb or getting tired, sorry
[23:30:03] <JEEB> :)
[23:30:40] <JEEB> but yea, if you need full range YCbCr, you can get that - you just need to configure the format conversion as such
[23:31:07] <JEEB> since by default the scale filter (which is auto-inserted if a format conversion is required) sets limited range for YCbCr output
[23:31:19] <JEEB> which is what most things expect with YCbCr
[23:31:23] <q3cpma> Anyway, I used -color_range 2, then converted it back to PNG, and it was different
[23:31:33] <JEEB> that is because that just sets a value in the encoder
[23:31:38] <JEEB> that doesn't affect the conversion process
[23:31:47] <q3cpma> That's what I thought
[23:32:04] <q3cpma> But if the input data is actually full range, shouldn't it "work"?
[23:32:22] <JEEB> but you have converted it to 4:4:4 YCbCr and the auto-inserted scale filter for that work defaults to limited range
[23:32:37] <q3cpma> Ohhh, sorry didn't get that part
[23:32:38] <JEEB> the -pix_fmt causes a conversion be done
[23:33:01] <JEEB> there is always a filter chain in there, and it looks if the input and output bits look different and thus auto-inserts the scale filter
[23:33:14] <JEEB> you can see that if you set log level to verbose (or more)
[23:33:15] <JEEB> -v verbose
[23:33:25] <JEEB> you will see the input and output configs f.ex.
[23:33:58] <JEEB> so you will see that a) there is an auto-inserted scale filter b) input is RGB, output is yuv444p
[23:34:10] <JEEB> and that conversion defaults to limited range with YCbCr outputs
[23:34:18] <q3cpma> Thanks, I understand it now
[23:34:37] <JEEB> np
[23:35:05] <q3cpma> The confusing part is that I was trying to produce grain-table using libaom, and that I used VS BM3D to denoise, which outputs full range, so the noise_model tool complained about range mismatch
[23:52:45] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[23:57:29] *** Quits: dreamon (~dreamon@pd95037d3.dip0.t-ipconnect.de) (Remote host closed the connection)
