[00:01:22] *** Quits: jmd (~user@p200300ea5f49c2f5f5d6d242084bd21a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:01:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:02:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:02:22] *** Quits: cruncher (~cruncher@79.116.74.120) (Changing host)
[00:02:22] *** Joins: cruncher (~cruncher@user/cruncher)
[00:02:27] *** Joins: delta12348 (~delta1234@2806:107e:19:9223::9)
[00:02:28] *** Quits: delta12348 (~delta1234@2806:107e:19:9223::9) (Read error: Connection reset by peer)
[00:02:33] *** Joins: Pickchea (~private@user/pickchea)
[00:04:02] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:04:24] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:04:57] *** Quits: jay-m126 (~jay-m@154.72.150.130) (Ping timeout: 240 seconds)
[00:05:37] *** Quits: jay-m1262 (~jay-m@154.72.150.130) (Ping timeout: 240 seconds)
[00:05:37] *** Quits: jay-m126_ (~jay-m@154.72.150.130) (Ping timeout: 240 seconds)
[00:05:37] *** Quits: jay-m1261 (~jay-m@154.72.150.130) (Ping timeout: 240 seconds)
[00:05:42] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[00:06:11] *** Joins: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net)
[00:06:17] *** Joins: cjb (~cjb@user/cjb)
[00:06:31] <mickey> i have a list [1,2,3] and a list of lists [[4,5,6], [7,8,9], [1,0,1]], and i need to create a new dataframe that has a column id with the values of 1,2,3 (3 rows), and then each value of the respective list inside the list of lists in columns, something like below. how would i go about doing this with pandas?
[00:06:31] <mickey> 1 4 5 6
[00:06:31] <mickey> 2 7 8 9
[00:06:31] <mickey> 3 1 0 1
[00:06:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[00:07:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:07:17] *** Joins: uxemacs (~timothy@172.58.3.76)
[00:07:33] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:08:18] *** Joins: akaWolf (~akaWolf@akawolf.org)
[00:08:18] *** Joins: phlixi (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de)
[00:09:20] <SnoopJ> mickey, what should the names of the other 3 columns be?
[00:09:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[00:09:50] <mickey> incrementing counter or whatever, like 1,2,3 or a,b,c, it doesn't really matter
[00:10:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:11:58] *** Joins: humberto1 (~humbertow@189.236.30.197)
[00:12:24] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:12:47] <SnoopJ> mickey, does this do what you want? https://bpa.st/OOSQ
[00:13:38] <mickey> SnoopJ nope, [4,5,6] are the values of for row 1 (it's the first element of the list of lists)
[00:14:16] <SnoopJ> oh, I see, you want those transposed
[00:14:18] <mickey> im sure there's _some_ way of providing df with a list and have it inject it to a bunch of columns
[00:14:23] <BrenBarn> you could just make a dataframe with the list of lists and then insert the other column after
[00:14:27] <mickey> i just couldnt find out how
[00:14:49] <SnoopJ> yea that might be the most convenient thing to do: `df = pd.DataFrame(lst_of_lst)` and then insert the standalone column
[00:14:59] <mickey> BrenBarn probably. but how? DataFrame([[4,5,6], [7,8,9]]) breaks for me for some reason
[00:15:08] <BrenBarn> right
[00:15:31] <BrenBarn> what do you mean "breaks"?
[00:15:49] <SnoopJ> mickey, BrenBarn's suggestion is doing this: https://bpa.st/4BDQ
[00:16:11] <mickey> i must have screwed up something else then. im gonna rewrite this thing and see again
[00:16:18] <mickey> thanks for the hint
[00:16:52] *** Quits: uxemacs (~timothy@172.58.3.76) (Remote host closed the connection)
[00:17:20] *** Quits: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be) (Ping timeout: 257 seconds)
[00:17:44] *** Joins: uxemacs (~timothy@172.58.3.76)
[00:19:14] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:19:58] *** Quits: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net) (Quit: Leaving)
[00:23:46] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[00:24:00] *** Joins: esther (~esther@154.16.169.4)
[00:25:57] *** Quits: Maxc4m (~Maxc4m@5.167.13.137) (Quit: Maxc4m)
[00:26:16] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:28:30] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:29:04] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[00:29:10] <mickey> BrenBarn it was hanging because of iloc misuse i suppose. SnoopJ's snippet got me on the right track though. thanks
[00:30:10] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[00:30:18] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::48) (Ping timeout: 260 seconds)
[00:31:31] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9) (Read error: Connection reset by peer)
[00:31:49] *** Quits: zack_ (uid543249@id-543249.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:32:19] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[00:33:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:34:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:34:32] *** Joins: SlicerDicer684 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[00:36:12] *** Z-cat is now known as TheCat
[00:37:00] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 252 seconds)
[00:37:00] *** SlicerDicer684 is now known as SlicerDicer68
[00:37:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:38:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:39:17] *** Quits: Drone4four (~Drone4fou@2607:fea8:87c0:dca0::f042) (Ping timeout: 240 seconds)
[00:39:18] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[00:40:19] <very_sneaky> amogorkon: yeah, but their reasoning makes sense. At least python makes it relatively easy to invoke shell commands
[00:40:39] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[00:40:57] *** Joins: cyphase (~cyphase@user/cyphase)
[00:41:50] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.4)
[00:42:50] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e0b4:325e:50ed:8971)
[00:42:50] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e0b4:325e:50ed:8971) (Changing host)
[00:42:50] *** Joins: skapata (~Skapata@user/skapata)
[00:44:03] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:44:57] *** Quits: uxemacs (~timothy@172.58.3.76) (Ping timeout: 240 seconds)
[00:47:36] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[00:49:35] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:51:36] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:53:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[00:53:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[00:54:34] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[00:55:09] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[00:55:54] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[00:57:57] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 240 seconds)
[00:59:25] <AhmedAmerican> within Linux, i included a shebang for my  venv within my script`!#/myenv/bin/python` but it doesn't work
[01:00:09] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:01:12] <regulate> AhmedAmerican: #!
[01:01:57] <AhmedAmerican> ah sorry meant `#!myenv/bin/python`
[01:02:45] *** Quits: medium_cool_ (~medium_co@2605:a601:a9aa:f800:59a0:7909:b21a:d2fc) (Quit: I have gone to sleep. ZZZzzz…)
[01:02:46] <SnoopJ> AhmedAmerican, can you explain what "doesn't work" means? The shebang will only take effect if you are running the file directly from the shell, if you run it as `python3 yourfile.py`, you'll get whatever interpreter you specified from the shell.
[01:03:06] <SnoopJ> i.e. `./yourfile.py` will consult the shebang if there is one
[01:04:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:04:25] *** Quits: Guest99 (~Guest99@41.136.116.160) (Quit: Connection closed)
[01:04:31] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[01:05:21] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::48)
[01:06:17] *** Quits: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net) (Quit: Leaving)
[01:07:05] *** Joins: trace987 (~trace@user/trace)
[01:07:09] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:07:50] *** Quits: NeoCore (~neocore@195.200.221.224) (Quit: Leaving)
[01:07:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:08:04] <AhmedAmerican> ok my script located within `/home/ubuntu/ahmed/script.py` and `myenv` located inside `ahmed` folder as well. my shebang as the following `!#/myenv/bin/python` and i did `chmod +x script.py`
[01:08:09] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:08:39] *** Quits: rond_ (~rond_@90.251.109.52) (Quit: Client closed)
[01:09:04] <AhmedAmerican> am getting error that one of my lib isn't installed but it's already installed where the script run without issue if i activated the environment firstly.
[01:09:18] *** Joins: srsc (~srsc@37.120.19.199)
[01:09:30] <SnoopJ> AhmedAmerican, why is the shebang `#!/myenv/bin/python` instead of `#!/home/ubuntu/ahmed/myenv/bin/python` ?
[01:09:38] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:10:02] <SnoopJ> `#!/myenv/bin/python` is pointing at a directory named `myenv` at the root of your filesystem
[01:10:06] *** Joins: millido (~millido@84.210.150.128)
[01:10:16] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:10:31] <AhmedAmerican> SnoopJ: ops :D working fine now. i thought it's going to detect it since am in same folder
[01:10:56] <AhmedAmerican> in other OS such as centos i never got that issue. wired :D
[01:11:06] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:11:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:11:35] <SnoopJ> it can use relative paths if you give it one, but that's a bad idea anyway
[01:11:43] <SnoopJ> if you give it an absolute path, it will use the absolute path
[01:13:36] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:fd36:b8d0:acb3:6b7b)
[01:14:24] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[01:14:28] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:fd36:b8d0:acb3:6b7b) (Client Quit)
[01:14:49] *** Joins: zeden (~zeden@user/zeden)
[01:15:00] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[01:15:30] *** Joins: blei (~blei@user/blei)
[01:16:11] *** Quits: cruncher (~cruncher@user/cruncher) (Quit: Leaving)
[01:16:26] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[01:16:38] *** Joins: JanC (~janc@user/janc)
[01:17:07] <blei> i have subdir1/subdir2/some.py doing from subdir1.subdir2.somemodule import some_method, and when attempting to run python subdir1/subdir2/some.py, python complains that there is no module named subdir1. this package has no setup.py
[01:17:24] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[01:18:24] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[01:18:26] <blei> i'm curious as to how this module was intended to be used in the first place
[01:19:00] <AhmedAmerican> SnoopJ: thank you
[01:20:39] <bjs> blei: probably either importing some.py rather than running it directly, or by running it like `python -m subdir1.subdir2.some`
[01:20:59] <bjs> blei: generally python packages don't work if you try run files inside them directly,  just because of the way Python searches for packages
[01:21:30] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:22:21] *** Joins: zeden (~zeden@user/zeden)
[01:23:30] *** Joins: uuair (~quassel@user/uuair)
[01:23:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:24:07] <blei> I got it working by hacking the path, which is similar I think. thanks
[01:24:13] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:cd2d:768b:1639:cfdb)
[01:24:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:25:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:26:08] *** Joins: bahamas (~lucian@84.232.140.52)
[01:27:00] *** Quits: andreasbuhr (~quassel@p548dd961.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:27:14] *** Joins: humberto1 (~humbertow@189.236.30.197)
[01:28:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:28:45] *** Quits: stockh0lm (~Andreas@p200300d2c73a0400e9da7e37d42463e6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:28:50] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[01:29:05] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[01:29:25] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:29:30] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:30:56] *** Quits: aslicedbanjo (~aslicedba@host86-178-157-161.range86-178.btcentralplus.com) (Quit: Leaving.)
[01:31:00] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[01:31:16] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[01:31:26] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[01:31:38] <bjs> blei: "hacking the path" ?
[01:31:53] <bjs> i dont know what you mean by that
[01:31:56] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 272 seconds)
[01:32:09] *** Joins: Atque (~Atque@user/atque)
[01:32:27] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Read error: Connection reset by peer)
[01:32:46] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[01:33:00] *** Quits: aknot (~aknot@2603-900a-1503-17bb-9bf7-e987-5e02-c96f.inf6.spectrum.com) (Ping timeout: 240 seconds)
[01:33:30] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Read error: Connection reset by peer)
[01:33:51] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[01:34:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[01:35:41] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:36:21] *** Joins: parv (~quass@user/parv)
[01:39:24] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[01:39:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:39:49] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[01:42:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[01:43:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[01:43:34] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:43:47] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[01:44:09] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:44:37] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[01:44:49] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[01:46:23] *** Joins: zeden (~zeden@user/zeden)
[01:47:24] *** Joins: Blankspace (~androirc@user/blankspace)
[01:48:39] *** Joins: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net)
[01:49:25] *** Quits: creedofnecessity (~creedofne@98.97.84.93) (Quit: Client closed)
[01:49:35] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 252 seconds)
[01:49:44] <ArtfulDodger> Hi! I came accross this article stating that most BFS online implementations are exponential https://twitter.com/AllenDowney/status/1428781202526310402
[01:49:44] <ArtfulDodger> I tried to demonstrate it myself. However I get similar exec durations for both BFS functions with list or queue. Do you have any idea why? https://bpa.st/56QA
[01:51:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:52:02] *** Quits: magla (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[01:52:19] *** Quits: srsc (~srsc@37.120.19.199) (Quit: Going offline, see ya! (www.adiirc.com))
[01:52:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:53:32] *** Quits: p-i- (~Ohmu@mx-ll-183.89.32-62.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[01:53:39] *** Joins: morrigan_ (~m0rr1gan@user/m0rr1gan)
[01:53:40] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 256 seconds)
[01:54:28] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:54:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:54:56] *** Quits: Blankspace (~androirc@user/blankspace) (Read error: Connection reset by peer)
[01:55:11] *** Joins: Blankspace (~androirc@2401:4900:3b14:d964:4173:ab49:4ad8:ed85)
[01:55:17] <bjs> ArtfulDodger: a single datapoint isn't enough to demonstrate a difference in complexity anyway,  you want to take many datapoints over many different sizes and compare
[01:55:18] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[01:55:27] *** Quits: Blankspace (~androirc@2401:4900:3b14:d964:4173:ab49:4ad8:ed85) (Read error: Connection reset by peer)
[01:55:27] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:56:16] <bjs> ArtfulDodger: you also replaced an O(n) queue.pop() with an equally O(n) "child not in visited"
[01:56:18] *** Quits: morrigan_ (~m0rr1gan@user/m0rr1gan) (Read error: Connection reset by peer)
[01:56:33] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f0e4:c086:e571:9fdb) (Quit: Leaving)
[01:56:39] *** Joins: morrigan_ (~m0rr1gan@user/m0rr1gan)
[01:56:54] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[01:57:21] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[01:57:36] <celphi> can someone tell me why my version doesnt work but theirs does?!
[01:57:44] <celphi> my version: https://bpa.st/XOXQ
[01:58:03] <celphi> their version: https://bpa.st/BY6Q
[01:58:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:59:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:00:05] *** Joins: wyclif (~wyclif@user/wyclif)
[02:02:51] <bjs> celphi: what makes you say theirs works and yours doesn't?
[02:02:53] <bjs> they look very similar
[02:02:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:fd3f:396e:bfc3:ce35)
[02:03:11] <celphi> bc mine hangs theirs doesnt when using same list
[02:03:15] <celphi> bjs:
[02:03:20] <bjs> celphi: which list?  your two pastes tried different lists
[02:03:21] *** Joins: NealRame (~a@89.187.163.193)
[02:03:25] <celphi> mine
[02:03:36] <ArtfulDodger> bjs, gosh, you're right! I've just replace "visited" by a set() and now the execution is 10x faster for the improved version. Thank you =)
[02:03:54] <bjs> celphi: hmm, the code looks the same, are you sure you ran their version with your list?
[02:03:56] *** Joins: korg815 (~korg815@user/korg815)
[02:04:02] <celphi> ya ill give you link sec
[02:04:18] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:cd2d:768b:1639:cfdb) (Quit: Textual IRC Client: www.textualapp.com)
[02:05:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:05:01] *** Quits: NealRame (~a@89.187.163.193) (Client Quit)
[02:05:05] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:05:33] *** Joins: wyclif (~wyclif@user/wyclif)
[02:05:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:06:10] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[02:06:19] <bjs> celphi: why does your code use both "high" and "hi"
[02:06:22] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[02:06:24] <ArtfulDodger> Is there a version of timeit.timeit() that also displays all the stats like the magic %%timeit does?
[02:06:42] <celphi> bjs: dammit that's why it hangs
[02:06:45] <bjs> celphi: is this a copy/paste of their version but you forgot to change one of the names?
[02:06:45] <celphi> ty
[02:06:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:07:01] <celphi> no i memorized theirs and tried to type it from memory
[02:07:13] <celphi> it's so i can learn the pattern
[02:07:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:08:07] <celphi> i had other changes, but i tried to remove the differences from my code to zero in on difference
[02:08:20] <celphi> something so easy to overlook ty
[02:08:36] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:08:49] *** Quits: weedmic_ (~weedmic@93-173-109-49.bb.netvision.net.il) (Quit: Konversation terminated!)
[02:09:23] *** Joins: medium_cool (~medium_co@136.36.128.48)
[02:10:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:11:03] *** Joins: wyclif (~wyclif@user/wyclif)
[02:12:28] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[02:12:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:13] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652) (Ping timeout: 256 seconds)
[02:15:32] *** Joins: schumaml (~schumaml@dslb-178-002-182-132.178.002.pools.vodafone-ip.de)
[02:16:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:16:13] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:34] *** Joins: wyclif (~wyclif@user/wyclif)
[02:16:37] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:17:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:17:43] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:17:49] *** Joins: creedofnecessity (~creedofne@98.97.84.93)
[02:18:24] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652)
[02:18:35] *** Quits: morrigan_ (~m0rr1gan@user/m0rr1gan) (Read error: Connection reset by peer)
[02:18:54] *** Joins: morrigan_ (~m0rr1gan@user/m0rr1gan)
[02:21:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:22:02] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:23:25] *** Joins: uxemacs (~timothy@172.58.3.76)
[02:23:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:23:48] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[02:23:50] *** Quits: lispy (~lispy@user/lispy) (Ping timeout: 250 seconds)
[02:26:08] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:26:59] *** Joins: jinsun__ (~jinsun@user/jinsun)
[02:27:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:28:06] *** Quits: uxemacs (~timothy@172.58.3.76) (Ping timeout: 252 seconds)
[02:28:11] *** Joins: trace987 (~trace@user/trace)
[02:28:21] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[02:28:43] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:28:45] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Quit: WeeChat 3.4)
[02:29:01] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[02:29:38] *** Quits: kmh (~kmh@2a00:6020:5004:6800:fd3f:396e:bfc3:ce35) (Remote host closed the connection)
[02:29:42] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[02:29:49] *** Joins: kmh (~kmh@2a00:6020:5004:6800:fd3f:396e:bfc3:ce35)
[02:30:30] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 256 seconds)
[02:30:32] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Client Quit)
[02:31:53] *** Quits: medium_cool (~medium_co@136.36.128.48) (Ping timeout: 256 seconds)
[02:32:46] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:14f9:e2fa:7992:721d)
[02:33:21] *** Quits: Kawazaki (~Kawazaki@user/Kawazaki) (Ping timeout: 256 seconds)
[02:33:22] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[02:33:46] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:33:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:33:48] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 240 seconds)
[02:34:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:34:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:33] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:34:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:34:59] *** Joins: humberto1 (~humbertow@189.236.30.197)
[02:35:28] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:35:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:36:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (erbium.libera.chat (Nickname regained by services)))
[02:36:12] *** vinleod is now known as vdamewood
[02:36:43] *** Joins: lispy (~lispy@user/lispy)
[02:37:24] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[02:37:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[02:38:01] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:38:14] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[02:38:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[02:39:34] *** Joins: hiroshi_ (~freedom@151.47.50.105)
[02:40:38] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:41:04] *** Quits: parv (~quass@user/parv) (Quit: parv)
[02:41:16] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[02:42:03] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[02:43:32] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[02:43:55] *** Joins: tijuco (~tijuco@user/tijuco)
[02:44:21] *** Quits: tijuco (~tijuco@user/tijuco) (Max SendQ exceeded)
[02:44:34] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:44:51] *** Joins: tijuco (~tijuco@user/tijuco)
[02:46:58] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[02:51:09] *** Quits: creedofnecessity (~creedofne@98.97.84.93) (Ping timeout: 256 seconds)
[02:52:06] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:53:45] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 256 seconds)
[02:54:09] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:55:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:55:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:56:20] *** Joins: wyclif (~wyclif@user/wyclif)
[02:56:47] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:57:14] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[02:57:37] *** Joins: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com)
[02:58:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[02:58:56] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:59:04] <dignissimus> I have a program that's distributed and it refers to some files in the project directory. My problem right now is that it has to be run in the project directory, what's the best way to resolve this if the location of the project directory might not be known?
[02:59:10] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[02:59:19] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[02:59:38] <grym> dignissimus: importlib.resources or pathlib.Path(__file__)
[02:59:52] <dignissimus> Amazing, thanks!
[02:59:57] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[03:00:29] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:00:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:00:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:01:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:01:48] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:01:51] *** Joins: wyclif (~wyclif@user/wyclif)
[03:02:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:02:50] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[03:04:29] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[03:05:01] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:05:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-543d-a065-e6d9-3062.res6.spectrum.com) (Remote host closed the connection)
[03:05:18] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[03:06:03] *** Quits: iob (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 252 seconds)
[03:06:44] *** Joins: iob (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz)
[03:06:56] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[03:07:57] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[03:08:43] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:09:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:11:30] *** Quits: hiroshi_ (~freedom@151.47.50.105) (Quit: hiroshi_)
[03:11:33] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[03:12:00] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:12:09] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[03:12:36] *** Quits: mythos (~mythos@user/mythos) (Ping timeout: 240 seconds)
[03:13:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:13:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[03:13:31] *** Quits: greedom (~greedom@p200300de674a52002ac1000819ab9bdf.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:14:44] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[03:16:50] *** Quits: marcello1 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[03:17:08] *** Quits: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com) (Quit: QUIT)
[03:21:06] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1476:b53:9822:6652) (Quit: Leaving)
[03:21:41] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[03:22:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[03:23:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:27:02] *** Joins: mythos (~mythos@user/mythos)
[03:28:18] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[03:28:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:28:20] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:14f9:e2fa:7992:721d) (Quit: I have gone to sleep. ZZZzzz…)
[03:29:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:29:57] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[03:30:16] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:58] *** Joins: tijuco (~tijuco@user/tijuco)
[03:32:42] <llanhmod> hm, just now learning about Pylenium. Why has noone told me about this?!
[03:33:51] <nedbat> llanhmod: i've never heard of it
[03:34:02] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:34:05] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[03:34:18] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:34:39] <blei> here's my anki deck for learning all 300,000+ pypi packages
[03:34:47] <blei> :p
[03:34:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:35:03] <llanhmod> nedbat: https://docs.pylenium.io/ ( not that you cannot find this on your own)
[03:35:41] <blei> we could make a miniseries on youtube, World's Most Annoying Consultant
[03:36:11] <llanhmod> you know, it seems rather odd to do `install --upgrade pip`. Why not just --upgrade pip?
[03:36:28] <llanhmod> can I customize pip so I can just do python -m pip --upgrade pip ?
[03:36:34] <ChrisWarrick> no, you cannot
[03:36:48] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:36:52] <SnoopJ> llanhmod, because --upgrade is a flag of the `install` subcommand
[03:36:54] <llanhmod> ChrisWarrick: that sucks
[03:36:59] <ChrisWarrick> (at least not without modifications to its code that can make your life harder)
[03:37:01] <llanhmod> SnoopJ: oh...right
[03:37:05] <llanhmod> that make sense then
[03:37:10] <SnoopJ> pip does quite a few things that are not installing
[03:37:13] <ChrisWarrick> llanhmod: `pip freeze` is an example of another command
[03:37:59] <llanhmod> ChrisWarrick: I've never had to use that yet...I am familair with it though.
[03:38:19] <ChrisWarrick> llanhmod: you might want to use it much more
[03:38:29] <llanhmod> ChrisWarrick: yeah... I think so too
[03:39:06] <ChrisWarrick> llanhmod: you should consider your venvs to be ephemeral — i.e. they could disappear or stop working without warning
[03:39:13] <ChrisWarrick> (the latter is what you get with rolling-release distros)
[03:39:14] *** Quits: favreje (~jeff@170.249.173.67) (Ping timeout: 250 seconds)
[03:39:29] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[03:39:35] <llanhmod> ChrisWarrick: package version freezes?
[03:40:06] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 250 seconds)
[03:40:15] <ChrisWarrick> llanhmod: `pip freeze` lets you produce a `requirements.txt` file with a list of all the packages (and their versions) in your environment
[03:40:16] <llanhmod> ChrisWarrick: oh you mean like if the distro comes with a certain version of python?
[03:40:37] <ChrisWarrick> llanhmod: do you know what venvs are?
[03:41:05] <llanhmod> ChrisWarrick: yes, I was just trying to understand the rolling release part and pip freeze role
[03:41:12] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:41:28] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:41:40] <ChrisWarrick> llanhmod: venvs are tied to a specific python interpreter eg. /usr/bin/python3 + /usr/lib/python3.10
[03:41:42] <llanhmod> ChrisWarrick: I've had my lecture here already about the virtualenv/venv setup.
[03:41:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:41:59] <llanhmod> that came out wrong..but still true
[03:42:04] <ChrisWarrick> llanhmod: if you upgrade your OS and get 3.11, your venv is now useless, since /usr/lib/python3.10 doesn’t exist
[03:42:08] <SnoopJ> A rolling-release distro might change the system's Python and thus break any venvs using that
[03:42:20] <llanhmod> Ohhh okay
[03:43:24] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[03:46:24] *** Joins: Barones (~Barones@user/Barones)
[03:46:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:46:59] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[03:47:23] *** Joins: vicfred (~vicfred@user/vicfred)
[03:48:36] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[03:49:14] *** Quits: oriba (~oriba@dynamic-078-054-198-245.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:49:37] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:50:05] *** Quits: tableflipper (~tableflip@121.99.197.93) (Ping timeout: 256 seconds)
[03:50:24] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Ping timeout: 256 seconds)
[03:52:10] *** Joins: tableflip (~tableflip@2404:4402:23be:ff00:b47b:4b09:89f6:f29f)
[03:52:22] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[03:53:49] *** Quits: OPK (~OPK@user/opk) (Remote host closed the connection)
[03:54:11] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[03:55:59] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[03:56:52] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[03:58:22] *** Quits: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net) (Quit: Leaving)
[04:00:07] <cvmn> https://pastebin.com/uipnJ0iW
[04:00:12] <cvmn> what's wrong with this code?  doesn't work well.
[04:00:27] <cvmn> it's supposed to encode base10 into base SHAPES_N.
[04:00:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:01:48] *** Quits: grimvar_ (~grimvar@i5C75F60E.versanet.de) (Ping timeout: 240 seconds)
[04:03:07] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[04:03:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:03:53] *** Joins: grimvar (~grimvar@i5C75F435.versanet.de)
[04:04:05] <Jong> Sometimes I'll run a script but forget to remove a print statement. Is there a way get the script to read the updated py source file with the print statement commented out, while the script continues to run? The script takes a long time to start up, so it's unfortunate to need to rerun the script the beginning just to run it without the print statement. It's another 2 hours to reach the point the script is at now
[04:04:08] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:f9d5:fa75:afb0:4e06)
[04:04:15] *** Quits: Luke- (~ldm@hacksoc/member) (Changing host)
[04:04:15] *** Joins: Luke- (~ldm@hacksoc/alumni/ldm)
[04:05:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[04:06:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[04:07:52] *** Joins: Soni (~quassel@autistic.space)
[04:08:03] *** Joins: wyclif (~wyclif@user/wyclif)
[04:09:37] <jazzy> question
[04:09:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:09:56] <jazzy> if keeping python small is a big focus, why include any packages by default?
[04:10:24] <jazzy> why not just request things like that as needed?
[04:11:00] *** Joins: Goodbye_Vincent (~Goodbye_V@freakshells.net)
[04:11:00] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:11:41] <blei> https://docs.conda.io/en/latest/miniconda.html
[04:11:47] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[04:11:56] <grym> begs the question, right
[04:13:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:14:57] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:15:17] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:16:04] *** Joins: korg815 (~korg815@user/korg815)
[04:16:19] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:16:22] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[04:17:31] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[04:18:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:20:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:21:09] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:21:34] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:22:17] *** Joins: aknot (~aknot@2603-900a-1503-17bb-6747-f71f-6ba2-c119.inf6.spectrum.com)
[04:22:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:22:57] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:24:10] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[04:25:00] <ztrawhcse> jazzy: why is it so important to keep it small? Many people use it because it is a batteries-included language.
[04:25:36] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[04:25:45] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:26:02] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:30:04] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:30:31] <ztrawhcse> SnoopJ: how reliable is python -m venv --upgrade ?
[04:31:00] *** Quits: aknot (~aknot@2603-900a-1503-17bb-6747-f71f-6ba2-c119.inf6.spectrum.com) (Ping timeout: 240 seconds)
[04:31:24] *** Joins: lispy (~lispy@user/lispy)
[04:31:54] *** Joins: Wulf (~Wulf@user/wulf)
[04:33:47] <bjs> cvmn: I'm going to guess it's `int(n / SHAPES_N)`  (as the rest of the algorithm 'looks okay'), because / will use floats
[04:34:02] <bjs> cvmn: you might want to use divmod(n, SHAPES_N) to get both at once
[04:34:16] <cvmn> bjs: yeah.  i had to replace that line by n //= SHAPES_N
[04:34:41] <SnoopJ> ztrawhcse, don't know, never used it
[04:35:19] <SnoopJ> I would expect it to still leave broken packages if anything that depends on ABI version has been installed
[04:35:32] *** Joins: ejjfunky (~ejjfunky2@125.164.22.70)
[04:37:05] *** Joins: white2 (~mahengrui@user/mahengrui1)
[04:37:40] *** Joins: irf21k (~irf21k@2401:4900:4bc3:2135:1:0:7690:c997)
[04:39:33] <ztrawhcse> yeah, it should definitely be possible to detect ABI version by iterating over dist-info, checking each WHEEL file for ABI tags and comparing it to the to-be-upgraded-to python and reinstalling anything that doesn't match, but... that seems a lot more complicated than anything venv --upgrade actually does
[04:39:58] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:43:19] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:c1ca:2977:dd37:2bc9)
[04:47:27] *** Quits: TheCat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:48:04] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[04:48:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:53:32] *** Joins: jamea (~jamea@177.239.81.39)
[04:55:55] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:56:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:56:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:56:42] *** Quits: barry1 (~Thunderbi@222.129.33.141) (Ping timeout: 256 seconds)
[04:57:59] *** Joins: frost (~frost@user/frost)
[04:58:39] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:58:54] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:59:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:00:37] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[05:00:48] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:00:50] <SnoopJ> yea, I would think it only cares that the virtual environment itself is upgraded, but not about what's *in* any sites therein
[05:02:12] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 272 seconds)
[05:02:19] *** Joins: driib24 (~driib@185.65.135.234)
[05:03:35] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:04:23] *** Parts: akk (~akk@75.161.130.204) (+++)
[05:04:26] *** Quits: driib2 (~driib@185.195.233.145) (Ping timeout: 268 seconds)
[05:04:26] *** driib24 is now known as driib2
[05:05:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[05:06:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:06:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:07:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:10:03] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[05:10:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:10:36] *** Joins: white2 (~mahengrui@user/mahengrui1)
[05:10:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:12:03] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:64f2:c4d3:2ec3:ac49)
[05:12:49] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-1c52-7a09-75d4-5be2.res6.spectrum.com)
[05:13:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[05:14:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:14:47] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Remote host closed the connection)
[05:16:44] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[05:17:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[05:17:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[05:17:33] *** Joins: KvL (~KvL@user/KvL)
[05:18:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:20:59] *** Joins: frost (~frost@user/frost)
[05:21:31] *** Quits: KvL (~KvL@user/KvL) (Client Quit)
[05:21:34] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b010-98de-ab8a-c8b6.res6.spectrum.com) (Quit: jarthur)
[05:22:18] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:64f2:c4d3:2ec3:ac49) (Quit: Leaving)
[05:23:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[05:24:04] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[05:25:32] *** Joins: KvL (~KvL@user/KvL)
[05:27:00] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:29:18] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[05:29:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[05:30:57] *** Quits: flokuehn (~flokuehn@87.123.247.66) (Ping timeout: 256 seconds)
[05:31:16] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[05:31:50] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[05:32:38] *** Joins: flokuehn (~flokuehn@87.123.247.67)
[05:32:53] *** Joins: KvL (~KvL@user/KvL)
[05:33:22] *** Joins: Batzy_ (~quassel@user/batzy)
[05:35:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:35:53] <caveman> what's the best way to implement quantum-proof assymetric enc/dec in python?
[05:36:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[05:36:37] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 256 seconds)
[05:36:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:37:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:37:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:38:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:38:36] *** Joins: frost (~frost@user/frost)
[05:40:11] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[05:41:30] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e094-2189-f138-c84d.res6.spectrum.com) (Read error: Connection reset by peer)
[05:42:26] *** Joins: alex11 (~alex11@user/alex11)
[05:42:45] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:c1ca:2977:dd37:2bc9) (Quit: I have gone to sleep. ZZZzzz…)
[05:43:10] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[05:43:41] <caveman> what's the best python cryptographic library for public/private keys?
[05:44:50] <Lvl4Sword> caveman, https://cryptography.io/en/latest/ comes to mind
[05:45:21] <Lvl4Sword> "quantum-proof" encryption? No clue, but for your answer about public/private keys, ^
[05:46:48] <caveman> ok.  so i guess cryptography is the best out there?
[05:47:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:43] *** Joins: rpino (~textual@189.172.95.214)
[05:49:43] *** Joins: parv (~quass@user/parv)
[05:49:56] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 245 seconds)
[05:50:07] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[05:50:36] *** Joins: white2 (~mahengrui@user/mahengrui1)
[05:51:08] <caveman> Lvl4Sword: what about pynacl?
[05:51:23] <Lvl4Sword> pynacl is good too
[05:52:00] <Lvl4Sword> Not sure which would be considered "best", though. I tend to leave cryptography to the folks who do it for a living :-)
[05:52:37] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Ping timeout: 240 seconds)
[05:52:57] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:53:43] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[05:54:37] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[05:55:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[05:55:48] *** Joins: vats (~vats@103.216.143.6)
[05:56:46] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[05:58:33] *** Joins: KvL (~KvL@user/KvL)
[06:00:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[06:01:40] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:02:19] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Max SendQ exceeded)
[06:02:39] <SnoopJ> "quantum-proof" sounds like it borders on magical
[06:02:49] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:04:01] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Client Quit)
[06:04:08] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:04:21] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:06:53] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:06:56] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[06:07:11] *** Joins: favreje (~jeff@2600:1702:14e1:2d20::35)
[06:09:13] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:dfe7:3448:e149:8d74)
[06:09:29] *** Joins: rpino (~textual@189.172.95.214)
[06:10:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:10:12] *** Joins: bahamas (~lucian@84.232.140.52)
[06:10:19] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Read error: Connection reset by peer)
[06:10:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com)
[06:10:54] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c857-5950-5c44-1bdd.res6.spectrum.com) (Client Quit)
[06:11:05] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[06:11:19] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:11:20] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[06:14:30] *** Joins: NealRame (~a@89.187.163.193)
[06:14:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:14:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:15:02] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[06:16:23] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:18:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:19:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:24:52] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[06:26:57] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 240 seconds)
[06:28:08] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[06:28:12] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[06:29:08] *** Joins: KvL (~KvL@user/KvL)
[06:29:08] *** Joins: frost (~frost@user/frost)
[06:30:56] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:33:14] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:33:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:33:53] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:37:01] <caveman> any way to convert a string of bytes into a single int number?
[06:37:17] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[06:37:57] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 240 seconds)
[06:38:23] <InPhase> caveman: int.from_bytes or struct.unpack
[06:40:17] *** Quits: favreje (~jeff@2600:1702:14e1:2d20::35) (Ping timeout: 240 seconds)
[06:42:28] <caveman> thanks
[06:42:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:42:40] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 256 seconds)
[06:42:41] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:f9d5:fa75:afb0:4e06) (Quit: Textual IRC Client: www.textualapp.com)
[06:43:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:47:41] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:47] *** Joins: aknot (~aknot@2603:900a:1503:17bb:6f9d:111f:9a79:c196)
[06:49:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:49:44] *** Joins: korg815 (~korg815@user/korg815)
[06:51:03] *** Joins: saroy (~Sandipan@43.252.250.113)
[06:51:57] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:54:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:57:23] *** Joins: tijuco (~tijuco@user/tijuco)
[06:57:55] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[06:58:06] *** Quits: emerent (~quassel@p200300cd5743c34aba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:58:17] *** Joins: CombatVet (~c4@user/combatvet)
[06:58:59] *** Joins: emerent (~quassel@p200300cd5743c306ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:00:00] *** Quits: rpino (~textual@189.172.95.214) (Quit: Textual IRC Client: www.textualapp.com)
[07:04:39] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[07:06:49] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:08:02] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[07:08:10] *** Quits: c4017_ (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 256 seconds)
[07:08:34] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[07:09:56] *** Quits: Nahra` (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[07:12:03] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:15:50] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:17:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[07:17:21] *** Joins: CombatVet_ (~c4@user/combatvet)
[07:17:45] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[07:17:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:18:13] *** CombatVet_ is now known as CombatVet
[07:18:55] *** Quits: VIle` (~Vile@73.182.253.255) (Read error: Connection reset by peer)
[07:19:57] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[07:20:10] *** Joins: xkuru (~xkuru@user/xkuru)
[07:20:30] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:21:57] *** Joins: VIle` (~Vile@73.182.253.255)
[07:22:31] *** Joins: xkuru (~xkuru@user/xkuru)
[07:22:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:23:03] *** Joins: adeliktas1 (~adeliktas@i59F4D720.versanet.de)
[07:24:34] *** Quits: adeliktas (~adeliktas@i59F5FA8E.versanet.de) (Ping timeout: 250 seconds)
[07:24:34] *** adeliktas1 is now known as adeliktas
[07:26:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:27:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:27:30] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[07:27:36] *** Joins: fstd_ (~fstd@xdsl-87-79-45-162.nc.de)
[07:27:52] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 272 seconds)
[07:27:58] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:28:54] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[07:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:50] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (Ping timeout: 256 seconds)
[07:32:15] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:35:28] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:37] *** Quits: aknot (~aknot@2603:900a:1503:17bb:6f9d:111f:9a79:c196) (Ping timeout: 240 seconds)
[07:38:38] *** Quits: lispy (~lispy@user/lispy) (Ping timeout: 272 seconds)
[07:39:56] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:40:28] *** Joins: rpino (~textual@189.172.95.214)
[07:42:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:42:49] *** Quits: rpino (~textual@189.172.95.214) (Client Quit)
[07:43:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:43:36] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[07:43:42] *** Quits: sreve (~quassel@p54a705d5.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:43:45] *** Joins: sreve_ (~quassel@p549d7231.dip0.t-ipconnect.de)
[07:44:37] *** Joins: hams (~hams@73.232.205.0)
[07:44:37] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[07:44:37] *** Joins: hams (~hams@user/hams)
[07:46:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:46:59] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[07:47:03] *** Joins: Barones (~Barones@user/Barones)
[07:48:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:53:18] *** Joins: bluedust (~bluedust@103.165.167.61)
[07:53:45] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[07:53:50] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:54:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:55:36] <Gustavo6046> everyone talks about SIMD, but nobody talks about MISD
[07:55:43] <Gustavo6046> :p
[07:57:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:57:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:59:16] *** Joins: xkuru (~xkuru@user/xkuru)
[08:00:03] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[08:00:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:02:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[08:03:08] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:04:56] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:05:14] *** Joins: xkuru (~xkuru@user/xkuru)
[08:05:20] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[08:06:04] *** Joins: semeion (~semeion@user/semeion)
[08:08:52] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:12:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:13:40] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Changing host)
[08:13:40] *** Joins: uxemacs (~timothy@user/uxemacs)
[08:15:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:15:46] *** Joins: drbeco (~beco@user/beco)
[08:16:02] *** Quits: drbeco (~beco@user/beco) (Client Quit)
[08:16:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:19:42] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[08:19:56] *** Joins: rvalue (~rvalue@user/rvalue)
[08:20:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:22:51] *** Joins: han-solo (~hanish@user/han-solo)
[08:23:00] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:1c5a:ae7e:d846:9ca5)
[08:23:16] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:4428:b410:f3cb:100c)
[08:23:24] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[08:23:48] *** Quits: uxemacs (~timothy@user/uxemacs) (Quit: Konversation terminated!)
[08:23:55] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[08:24:18] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[08:25:51] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[08:27:09] *** Joins: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:27:48] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[08:32:13] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[08:32:36] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[08:34:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:35:28] *** Joins: uxemacs (~timothy@user/uxemacs)
[08:36:25] *** Joins: bluedust_ (~bluedust@89.238.143.232)
[08:36:34] *** Joins: manti7 (~manti7@176.10.104.94)
[08:37:45] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[08:38:45] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:38:50] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[08:39:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[08:39:24] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[08:39:39] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[08:41:13] *** Joins: xkuru (~xkuru@user/xkuru)
[08:42:36] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[08:44:12] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 240 seconds)
[08:45:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:46:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:46:05] *** Joins: r4ulrm (~raul@181.27.127.43)
[08:47:57] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 240 seconds)
[08:48:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:49:33] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:51:36] *** Joins: xkuru (~xkuru@user/xkuru)
[08:53:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:55:49] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:56:06] *** Joins: SteveR (~SteveR@2600:6000:ff7e:cdef::15c)
[08:58:49] *** Joins: bluedust (~bluedust@103.165.167.61)
[08:58:59] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[08:59:35] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:00:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:01:12] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:01:28] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:02:04] *** Quits: bluedust_ (~bluedust@89.238.143.232) (Ping timeout: 256 seconds)
[09:02:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:02:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:02:49] *** Quits: bluedust (~bluedust@103.165.167.61) (Read error: Connection reset by peer)
[09:03:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:03:24] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:05:25] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[09:05:44] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:05:59] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:06:36] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[09:06:37] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[09:07:25] *** Quits: Guest20 (~Guest20@77.124.7.8) (Ping timeout: 256 seconds)
[09:08:51] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:10:15] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:10:18] *** Joins: kts (~kts@103.73.237.247)
[09:10:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:10:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:11:09] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:11:32] *** Joins: tomg (~tomg@user/tomg)
[09:12:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:13:23] *** Joins: masoudd (~masoudd@user/masoudd)
[09:13:29] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:13:57] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[09:14:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[09:15:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[09:15:37] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[09:16:14] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[09:16:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:17:22] *** Joins: tomg (~tomg@user/tomg)
[09:17:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:17:43] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[09:18:14] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:21:52] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 272 seconds)
[09:22:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:23:03] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:24:14] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[09:24:50] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[09:24:55] *** Joins: tomg (~tomg@user/tomg)
[09:25:35] *** Joins: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk)
[09:26:07] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[09:27:00] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[09:27:42] *** Joins: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se)
[09:27:46] *** Joins: toolbox_ (~toolbox@h213-21-123-59.cust.a3fiber.se)
[09:27:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:28:15] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[09:29:34] *** Joins: pepper (~pepper@user/pepper)
[09:30:38] *** Joins: blei19 (~blei@user/blei)
[09:30:43] *** Quits: blei19 (~blei@user/blei) (Client Quit)
[09:30:52] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[09:30:58] *** Quits: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[09:31:04] *** Joins: blei (~blei@user/blei)
[09:31:23] *** Quits: foul_owl (~kerry@23.82.193.89) (Quit: WeeChat 2.3)
[09:31:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[09:31:57] <blei> is there a tool that will monitor your python program for ie pip/conda-installed files that are actually used when the script runs, and delete the rest?
[09:33:14] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 256 seconds)
[09:33:32] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[09:34:37] *** Joins: onr (~onr@user/onr)
[09:34:55] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[09:35:58] *** Joins: tejr (~tejr@user/tejr)
[09:37:08] *** Joins: bluedust_ (~bluedust@185.248.85.25)
[09:37:55] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[09:38:35] *** Joins: djapo (~archangel@user/djapo)
[09:39:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:40:07] <ztrawhcse> blei: not that I know of, but it shouldn't be too hard to make one, e.g. strace the program to see which files get opened
[09:40:18] <blei> that's what I did
[09:40:19] <ztrawhcse> that being said, I'm doubtful there will be any
[09:40:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:40:48] <blei> but consider, its a hefty looking workload. less than 10% of files were read. that's a lot of deleted files. it could get messy
[09:40:52] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 272 seconds)
[09:40:56] *** Joins: tomg (~tomg@user/tomg)
[09:41:04] <ztrawhcse> tree shaking for unused functions tends to work much better on the function level rather than the file level
[09:41:08] *** Joins: mexen (uid495612@user/mexen)
[09:41:31] *** Quits: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk) (Remote host closed the connection)
[09:41:49] <blei> we're talking 20k files out of 220k files were actually needed to run the program
[09:41:57] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[09:42:03] <grawity> long ago, before all this "oh you should noatime always", the filesystem itself could tell you which files got actually used and which ones not
[09:42:42] *** Joins: dvx (~dvx@5.181.92.64)
[09:42:43] <blei> ztrawhcse tree shaking? is there a tool for this? that sounds sophisticated. extracting only the code that's actually used? that'd be amazing.
[09:43:00] <blei> how can this be accomplished
[09:43:27] <ztrawhcse> well, for example for nodejs (a language that is so terribly non-optimized that it could desperately use tree shaking) there is stuff like webpack
[09:43:31] <blei> i actually don't care what tool. has any tool that can do this been written, at all, for python?
[09:43:44] <blei> using any method whatsoever
[09:43:45] <ztrawhcse> also GCC basically has this as its stock in trade :D
[09:43:52] <ztrawhcse> I don't know of a python one though
[09:44:34] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[09:45:02] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[09:45:29] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9a70:83ac:7364:d657)
[09:46:59] *** Joins: tomg (~tomg@user/tomg)
[09:47:31] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:47:43] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:47:47] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:49:17] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[09:49:55] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[09:50:23] *** Joins: tomg (~tomg@user/tomg)
[09:50:48] *** Quits: bluedust_ (~bluedust@185.248.85.25) (Ping timeout: 256 seconds)
[09:52:12] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[09:56:00] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Remote host closed the connection)
[09:56:21] <blei> https://github.com/Robinson04/serverlesspack
[09:57:32] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:58:10] <blei> it includes tree shaking
[09:58:17] *** Joins: Arctic_ (~AdminUser@92.119.18.107)
[09:59:27] <Jong> Anyone here intentionally memorized basics like appending text to text file or getting all the files in a directory, or do you memorize it over time by frequently looking up how to do it in the course of coding?  The first approach would be making a toy program and looking at it every day. The second approach is to work on real problems and memorize what you lookup how to do assuming looking up the same command multiple times leads to memorization
[10:00:28] <blei> rote rehearsal is just not that fun. however, if you wanted to memorize something, try searching for a good python cheatsheet
[10:01:41] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:20fe:ca90:5661:533) (Read error: Connection reset by peer)
[10:02:23] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[10:03:06] <ztrawhcse> I prefer to learn concepts, rather than memorize snippets. And yes, you learn best by using the knowledge in some practical way.
[10:03:32] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:06:53] <grawity> yeah there is the general concept of opening files in different modes, and "file handles", and then there's the specific way you do it in python
[10:07:19] <grawity> nothing good comes from trying to memorize just the latter
[10:07:48] *** Quits: gossie (~gossie@2001:1c02:11e:c700:62d2:a6bd:bb3b:ccfa) (Ping timeout: 240 seconds)
[10:08:20] *** Quits: tribo_ (~tribo@p5b0fb69c.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[10:08:50] *** Joins: gossie (~gossie@2001:1c02:11e:c700:32f5:9458:805a:6409)
[10:09:00] <toolbox_> Need to transform: CSV data => dataframe => LDIF. I have a from- and to- state. Assume I need to iterate over the dataframe, add prefixes and then read out each line to file. I am bit new to python but know other programming languages. Any suggestion how to start writing the logics?  https://bpa.st/MUZA
[10:09:02] <grawity> or well, I guess, nothing good comes from trying to simply memorize such things in general either...
[10:10:19] *** Joins: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk)
[10:11:02] *** Joins: gegenschein (~james@ec2-54-210-169-253.compute-1.amazonaws.com)
[10:12:27] <Jong> ztrawhcse  but many commands aren't concepts.  For example how to append a numpy array to a file?  f = open("filepath.txt", "a") ; line = " ".join([str(x) for x in myNpArray.flatten()]) ; f.write(line) f.close()
[10:13:55] *** Joins: humberto1 (~humbertow@189.236.30.197)
[10:14:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:14:32] <Jong> I had to look up the open command because I forgot the exact syntax. I'm angered by that fact and say to myself "that's it. I'm memorizing this. I'm tired of forgetting this command"
[10:15:10] <Jong> grawity  nothing good? What about coding without needing to look up every other command?  That slows things down
[10:16:05] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:16:20] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:17:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:18:07] <jinsun__> "how to append numpy arry to a file" is not one command (and it can mean different things to different people), you need to break it down into smaller steps, then each individual step might be simple enough to memorize entirely, but it is fine to look up if you don't remember the spelling for some step
[10:19:07] *** Quits: ejjfunky (~ejjfunky2@125.164.22.70) (Quit: Leaving)
[10:19:21] <enrh> Can you access what is in a multiprocessing.Queue w/o removing it? Reason I ask is I'm using SyncManager, and want to detect when clients aren't getting stuff out of the queue.
[10:19:21] *** Joins: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:19:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[10:20:02] *** Joins: jpodivin_ (~jpodivin@cgnat44-pool3-68-94.poda.cz)
[10:20:46] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[10:21:23] <ztrawhcse> Jong: but if you learn how the general theory of opening files goes, then you don't need to look up the command because you can apply that general knowledge to the specific case
[10:21:31] <ztrawhcse> for example, what does "a" mean?
[10:21:48] <Jong> append
[10:22:02] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[10:22:06] <ztrawhcse> so there is some general knowledge -- a concept not specific to python
[10:22:10] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool3-68-94.poda.cz) (Client Quit)
[10:22:12] <ztrawhcse> fle modes
[10:22:15] <ztrawhcse> *file
[10:23:32] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-94.poda.cz)
[10:24:12] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[10:24:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[10:27:31] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[10:27:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[10:27:36] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[10:28:19] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[10:28:41] *** Joins: agumonkey (~user@88.163.231.79)
[10:28:43] <ztrawhcse> Jong: I also find it very helpful to use something like jedi.vim which provides code completion hints as you type... it means that you get a hint to what arguments a function takes, including the open() function -- you'd see that the first argument is named `file: _OpenFile`, the second argument is named `mode: OpenTextMode=...` etc
[10:29:13] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:30:02] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[10:30:07] <ztrawhcse> you don't necessarily need to memorize or even remember most functions, *if* your coding environment offers tooltips and infoboxes to remind you while you use it
[10:30:26] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[10:30:34] *** Joins: aiden (~iceneko@user/iceneko)
[10:31:33] *** Joins: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de)
[10:31:38] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[10:31:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:31:49] <Pi-sistance> https://bpa.st/Q2TA why doesnt this remove the * in each text?
[10:31:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:32:06] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[10:32:11] <Repiphany> Strings are immutable
[10:32:12] <ztrawhcse> and you can connect that hint about `mode` to "oh, this probably takes a file mode in the usual python/C/C++ format"
[10:32:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:32:39] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[10:32:41] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:32:47] <Repiphany> `i = i.replace("*", "")` but you don't do anything with that `i` later
[10:33:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:33:14] <Pi-sistance> thanks, ah dammnit, I should knoiw about immutability by now ffs
[10:33:20] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Client Quit)
[10:33:26] *** Joins: tejr (~tejr@user/tejr)
[10:33:39] <ztrawhcse> Pi-sistance: `i` and `line` aren't C-style pointers back into the original `coefs` data structure
[10:33:52] <ztrawhcse> (thankfully)
[10:34:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[10:35:35] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 268 seconds)
[10:35:49] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[10:36:08] <Jong> thanks ztrawhcse
[10:36:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:36:58] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[10:37:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:37:58] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:38:04] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[10:38:08] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[10:38:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:38:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:39:32] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:39:37] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:4428:b410:f3cb:100c) (Ping timeout: 240 seconds)
[10:39:55] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:39:55] *** Joins: cailt^ (~cailt@50.232.121.75)
[10:40:03] *** Joins: TheCat (~TheCat@user/z-cat)
[10:40:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[10:40:41] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[10:41:55] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[10:42:15] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[10:42:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[10:43:37] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:44:02] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[10:44:12] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[10:45:11] *** Joins: kaiseisei1 (~Thunderbi@user/kaiseisei)
[10:46:35] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[10:46:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:46:44] *** Quits: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[10:46:54] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[10:46:54] *** kaiseisei1 is now known as kaiseisei
[10:47:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:48:17] *** Joins: humberto1 (~humbertow@189.236.30.197)
[10:48:26] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[10:49:07] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[10:50:58] *** Joins: kosh (~kosh@user/kosh)
[10:51:08] *** Joins: mrwick (~mrwick@user/mrwick)
[10:51:55] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:52:37] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[10:53:35] *** Joins: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net)
[10:54:49] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[10:55:28] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:55:35] *** Joins: jochum (~quassel@user/jochum)
[10:57:13] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[10:57:27] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[10:58:44] *** Joins: gusto (~Augustus@109.255.100.54)
[10:58:58] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[10:59:23] <Pi-sistance> any idea why new spyder files arent being created in the cu8rrent working directory?
[10:59:24] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[11:00:02] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[11:00:14] *** Quits: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk) (Quit: WeeChat 3.4)
[11:00:31] *** Joins: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk)
[11:00:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:02:30] <Pi-sistance> ah I had to just spam it 10 times >.>
[11:02:43] <Pi-sistance> pretty bad tbh
[11:03:50] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[11:06:21] *** Joins: gentooclimax (~gentoocli@91.13.23.93.rev.sfr.net)
[11:06:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[11:06:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:06:36] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[11:07:02] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:07:15] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[11:07:20] <Pi-sistance> anyone know how to recover after stepping into the wrong function when debugging in spyhder? I stopped debugigng, but now when I run my current file, it still goes through the wrong part
[11:07:49] <Pi-sistance> the part it was when debugging, tose variables appear in the variable explorer
[11:07:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:08:09] *** Joins: jtj90 (~jtj90@2607:fb90:8349:9080:4065:cdc8:68b0:c77b)
[11:08:25] *** Joins: uxemacs (~timothy@user/uxemacs)
[11:10:12] *** Joins: weedmic_ (~weedmic@93-173-109-49.bb.netvision.net.il)
[11:10:50] <Pi-sistance> nvm, I had to spam it agian, before it took "Notice"
[11:10:51] *** Quits: kts (~kts@103.73.237.247) (Read error: Connection reset by peer)
[11:11:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:11:26] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[11:11:33] *** Quits: weedmic_ (~weedmic@93-173-109-49.bb.netvision.net.il) (Client Quit)
[11:12:12] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Ping timeout: 240 seconds)
[11:12:12] *** Quits: vats (~vats@103.216.143.6) (Ping timeout: 240 seconds)
[11:12:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:14:27] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:14:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:16:04] *** Joins: kts (~kts@103.73.237.247)
[11:16:49] *** Joins: kosh (~kosh@user/kosh)
[11:17:11] <Pi-sistance> this is pretty rough for a noob
[11:17:38] *** gentooclimax is now known as climax
[11:17:54] <Pi-sistance> also wish there was a way to step out without stopping debugging
[11:18:42] *** Quits: uxemacs (~timothy@user/uxemacs) (Quit: Konversation terminated!)
[11:18:46] <jinsun__> normally debuggers do have a way to step out
[11:18:55] <Pi-sistance> am googling atm
[11:19:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:19:04] *** Joins: alius (~alius@2001:861:4444:49c0:c10d:a940:8911:c3ef)
[11:19:27] *** Quits: hid3 (~arnoldas@78.157.71.116) (Ping timeout: 256 seconds)
[11:19:35] *** Joins: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be)
[11:20:24] <Pi-sistance> im using an older version, the new version was unstable few weeks ago. but my os is mroe stable now. will try agian.
[11:21:09] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[11:21:16] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[11:21:20] <Pi-sistance> not sure why an aconda has on old spyder installed with it
[11:21:30] <jinsun__> in pdb (which is what spyder used I think), you just have to type r
[11:22:22] <jtj90> Hi guys, I have a learning philosophy conundrum that I hope someone would kindly enlighten me: I feel troubled that i'm spending less time on learning the basic tutorial concepts to complete my assignments as I would copy, pasting/editing my professor's code from his tutorials. Is this perhaps the way to go? I feel kinda inadequate, because this
[11:22:23] <jtj90> way doesn't reiterate and emphasis the key ideas of MVT framework and understanding how to build the functions from the docs (even thou with some Python knowledge and understanding of MVT, I can understand the sample code, but I won't be able to write out everything myself)
[11:22:23] <jtj90> but seems like this might be a productive way to scale up to be a better web dev. Should I be concerned of my inability to code from my mind or will such skills come naturally? ie i've been writing views and urls (for the past hour) and now at least I remember render(request, context) and context takes a dict of model obj attributes (which has to
[11:22:24] <jtj90> be imported from app/models.py, assigning a variable object to a Model class).
[11:22:37] <jtj90> thanks please help, I wanna do a good server-side project and my quarter ends March 24
[11:22:59] <jtj90> sorry for the spam. noone responded to me in #django maybe it's the time difference or maybe it's not the place to ask
[11:23:10] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:23:53] <Pi-sistance> through anaconda I can install from 3.2ish to 4.1 version for some reason only
[11:24:00] <Pi-sistance> thanks jinsin will try
[11:25:36] <deniska> jtj90: retyping instead of copying may help
[11:25:58] *** Quits: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk) (Quit: WeeChat 3.4)
[11:26:39] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[11:26:52] <deniska> jtj90: and unless you've been working with something for some period of time, you'll need to keep docs open, pretty much everyone does
[11:27:30] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8035:5627:13f2:2efa)
[11:27:59] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[11:28:04] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[11:28:05] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[11:28:15] <Pi-sistance> jtj90 yeah, how are you going to learn form copying "Should I be concerned of my inability to code from my mind or will such skills come naturally?" coming naturally is a slow process for many, sounds like you may be skipping key foundational steps, which surely means even if you understand more advanced stuff, you are less likely to memorize. If
[11:28:15] <Pi-sistance> the learning process is different for whatever youre doing, my point is moot I suppsoe.
[11:28:31] *** Joins: palasso (~palasso@user/palasso)
[11:29:10] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[11:29:58] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:30:24] *** Joins: onr_ (~onr@user/onr)
[11:32:25] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[11:32:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[11:32:48] *** Quits: onr (~onr@user/onr) (Ping timeout: 256 seconds)
[11:33:06] *** Joins: jay-m1262 (~jay-m@154.126.169.74)
[11:33:28] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[11:33:41] <parv> jtj90, You could write the things to be done in pseudocode at a higher level; filling in details with more pseudocode. Look up details as you go to move to actual code. Also, helps to write with function signatures: arguments to be provided (or not); values to be returned (or not).
[11:34:09] <parv> s/helps to write/helps to start with writing/
[11:34:29] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:cab8:9456:dab5:65e4)
[11:34:36] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[11:34:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:34:48] *** Quits: onr_ (~onr@user/onr) (Ping timeout: 252 seconds)
[11:35:10] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[11:35:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:36:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:36:36] *** Quits: bparker (~nobody@user/bparker) (Ping timeout: 245 seconds)
[11:36:49] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[11:37:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[11:37:27] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Quit: Leaving)
[11:37:33] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[11:37:43] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:37:54] *** Joins: white2 (~mahengrui@user/mahengrui1)
[11:38:06] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[11:40:14] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[11:40:17] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[11:40:37] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:40:54] *** climax is now known as gentooclimax
[11:41:25] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Ping timeout: 240 seconds)
[11:41:28] *** Joins: ThiefMasterrr (ThiefMaste@indico/developer/thiefmaster)
[11:41:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[11:41:58] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[11:41:59] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[11:42:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:42:28] *** ThiefMasterrr is now known as ThiefMaster
[11:42:57] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Ping timeout: 240 seconds)
[11:43:02] *** Quits: nadio (ice@starlight.iextreme.org) (Ping timeout: 240 seconds)
[11:43:15] *** Quits: randall (~randall@user/randall) (Ping timeout: 256 seconds)
[11:43:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:43:40] *** Joins: randall (~randall@user/randall)
[11:43:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:43:56] *** Quits: Arctic_ (~AdminUser@92.119.18.107) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:43:57] *** Joins: nadio (ice@starlight.iextreme.org)
[11:44:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[11:44:05] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[11:44:51] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[11:45:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:45:52] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[11:46:33] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[11:46:34] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:47:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:47:48] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:47:49] <jtj90> Pi-sistance less likely to memorise .. is it a good thing?
[11:48:24] *** Joins: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de)
[11:48:29] *** Quits: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:49:02] *** Joins: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de)
[11:49:11] *** Quits: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:50:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:50:54] *** gentooclimax is now known as climax
[11:51:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 240 seconds)
[11:51:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:52:53] <jtj90> deniska thanks for the reminder. yea I actually rewrote the code phrase  after pasting from vscode. But i guess python or django isn't intuitive for me yet and maybe i'm rushing. But yea i wanted to code from docs POV.  OK maybe i'm inexperienced and impatient.
[11:54:49] <jtj90> parv thanks i'll keep this in mind as I progress. I guess i'm understanding the framework and language from primarily an example basis right now. which could help me to write pseudocode, function signatures (arguments/return values) later on. makes sense. thanks
[11:55:10] <olspookishmagus> some help on this? https://bpa.st/raw/22SA these are two gunicorn processes with the same .venv but one (the 8080 port one) in started by a systemd service and the other (the 8484 port one) manually
[11:55:34] <olspookishmagus> what could be the issue I'm getting (56) Recv failure: Connection reset by peer for the 8080 one?
[11:56:35] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:59:25] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:00:12] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 272 seconds)
[12:00:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:00:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[12:00:41] *** climax is now known as gentooclimax
[12:01:13] *** Joins: gnoo (gnoo@user/gnoo)
[12:01:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:01:53] *** Joins: greedom (~greedom@p200300de670aca00805fe5aa4c3768f3.dip0.t-ipconnect.de)
[12:02:54] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[12:03:16] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:03:51] *** Joins: andreasbuhr (~quassel@p549db363.dip0.t-ipconnect.de)
[12:04:56] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[12:06:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[12:06:13] *** Joins: rendar (~rendar@user/rendar)
[12:06:38] *** Joins: vladoski (~vladoski@2001:b07:add:d406:6182:a9f4:914:efd7)
[12:09:46] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[12:10:33] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[12:11:28] *** Joins: Iolo (~iolo@user/Iolo)
[12:11:35] *** Quits: sawk (~quassel@151.81.118.116) (Ping timeout: 256 seconds)
[12:12:57] *** Quits: tableflip (~tableflip@2404:4402:23be:ff00:b47b:4b09:89f6:f29f) (Ping timeout: 240 seconds)
[12:13:17] *** Joins: foul_owl (~kerry@23.82.193.87)
[12:13:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[12:15:10] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:15:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[12:15:36] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:15:42] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[12:16:09] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[12:16:22] *** Joins: Naan` (~Naan@user/naan)
[12:18:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:18:47] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Remote host closed the connection)
[12:19:16] *** Joins: ymwm__ (~yingmanwu@27.153.167.245)
[12:21:23] <nazarewk[m]> so i need to deep merge YAML/JSON data, what is currently way to go in Python?
[12:22:12] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 240 seconds)
[12:23:53] *** gentooclimax is now known as climax
[12:23:55] *** Quits: andreasbuhr (~quassel@p549db363.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:24:34] *** climax is now known as gentooclimax
[12:25:06] *** Joins: andreasbuhr (~quassel@p549db363.dip0.t-ipconnect.de)
[12:27:10] *** Quits: greedom (~greedom@p200300de670aca00805fe5aa4c3768f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:27:14] *** Joins: chele (~chele@user/chele)
[12:29:02] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[12:29:04] *** Joins: masoudd (~masoudd@user/masoudd)
[12:29:09] *** Quits: SteveR (~SteveR@2600:6000:ff7e:cdef::15c) (Ping timeout: 256 seconds)
[12:29:22] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[12:30:05] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Quit: You have been kicked for being idle)
[12:31:07] *** Joins: ivii (~ivan@user/ivii)
[12:33:08] <grawity> Jong: you learn that stuff as you use it anyway
[12:33:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:33:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:34:15] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[12:34:33] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[12:34:34] *** Quits: simplici1y (~yti@user/simplicity) (Remote host closed the connection)
[12:36:14] *** Joins: Guest34 (~Guest34@171.50.175.113)
[12:36:37] *** Joins: sawk (~quassel@78.6.80.66)
[12:36:45] *** Joins: OPK (~OPK@user/opk)
[12:37:32] *** Joins: simplicity (~yti@user/simplicity)
[12:37:36] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[12:37:44] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[12:38:00] *** Joins: upsala (~zcb@185.209.196.134)
[12:38:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[12:38:26] <Guest34> Hi, I'm having some trouble understanding Inheritance. I'm trying to calculate the area of the object depending on its shape. But I don't know how to proceed further: https://bpa.st/ADEQ
[12:38:32] *** Joins: zen_coder (~zen_coder@ip5f5bf6a9.dynamic.kabel-deutschland.de)
[12:38:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:39:26] *** Joins: gusto (~Augustus@109.255.100.54)
[12:39:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:39:37] *** Quits: esther (~esther@154.16.169.4) (Ping timeout: 240 seconds)
[12:39:37] <deniska> Guest34: erm, that doesn't look like something you should use inheritance for
[12:40:03] <Guest34> yeah, but that's what I've been asked to do...
[12:40:32] <Guest34> I don't know how to handle this properly
[12:42:12] <KirkMcDonald> This is homework?
[12:42:23] *** gentooclimax is now known as climax
[12:42:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:42:53] <KirkMcDonald> And, er. Yes. This is not remotely how inheritance is supposed to work.
[12:43:08] <KirkMcDonald> You're kinda mixing up your nouns and verbs, here.
[12:43:44] <Guest34> It's a question in our practice sets
[12:43:55] <KirkMcDonald> What is the question, exactly?
[12:44:04] *** dcaro_away is now known as dcaro
[12:44:40] <Guest34> `Write a program to implement multiple inheritance by creating a class Circle containing details: radius (which can be entered by the user). Create another class Triangle containing details of sides (which can entered by the user). These two classes are then inherited by a class Areae for calculating area of circle and triangle, and displaying
[12:44:40] <Guest34> output.`
[12:45:09] *** Joins: shad (~shad@user/shad)
[12:45:19] <KirkMcDonald> This is entirely mad.
[12:45:20] <deniska> that sounds like a really bad idea
[12:45:27] <Guest34> rip
[12:45:29] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[12:45:31] <toolbox_> Need to iterate over dataframe, containing of LDAP(DN, sn, givenName, CN). The DN is to be kept intact meanwhile the other columns to have prefixes. Added "expected outcome" in the code here. I am bit new to python but use other programming languages. What is the best way of iterating over a dataframe, where each iteration should adjust the data , e.g add prefixes, in order to finally export the produced chunk of text out to external
[12:45:31] <toolbox_> file? Here is my code: https://bpa.st/5WGA
[12:45:37] *** climax is now known as gentooclimax
[12:46:25] *** Joins: sudorm (~sudorm@pop.92-184-118-188.mobile.abo.orange.fr)
[12:46:30] <grawity> I don't use pandas but tbh that's something I'd just do with a basic 'for row in ...' loop
[12:46:39] *** Quits: gentooclimax (~gentoocli@91.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[12:46:42] <Guest34> What should I do now?
[12:48:06] <KirkMcDonald> Guest34: Well. I suppose as long as we're abusing the mechanism of inheritance, we might as well keep hammering that round peg into that square hole.
[12:48:07] <toolbox_> grawity, Yes you are right, if isolating to the pure code in example, pandas is not needed. I will use it at later stage to process the data. But for now I am more intersted in getting out the dataframe in a loop and process it.
[12:48:21] *** Joins: gentooclimax (~gentoocli@91.13.23.93.rev.sfr.net)
[12:48:24] <jinsun__> Guest34: it is a weird thing to ask for, but from the "input fromthe user" part I am guessing they want you to have a init with no parameters and use input() to interactively ask for the radius and sides
[12:48:34] <KirkMcDonald> Guest34: Don't use super(). Do it the old fashioned way, e.g. Circle.__init__(self, radius)
[12:48:35] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:48:43] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[12:48:59] <Guest34> okay
[12:49:18] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 256 seconds)
[12:49:29] *** Quits: Sylhouette (~johan@87.233.185.201) (Remote host closed the connection)
[12:49:36] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[12:49:40] <Guest34> jinsun__ yes, the question statement is ambiguous
[12:50:06] <jinsun__> and bad
[12:50:15] <Guest34> yeah
[12:50:18] <KirkMcDonald> super() is *normally* supposed to exist precisely *because* of multiple inheritance, but this whole problem is so asinine that we're just going to throw anything like well-reasoned design out the window.
[12:50:24] <jinsun__> if you have any choice in the matter I would just not do the course
[12:51:12] <KirkMcDonald> (Though, as a hint: Multiple inheritance is a pretty good sign that we're not talking about well-reasoned design. So.)
[12:51:43] <Guest34> though I'm not following the course, the assignments are compulsory...
[12:51:46] <sudorm> hi
[12:51:58] <sudorm> do some of you use bottle or similar web frameworks?
[12:52:02] <KirkMcDonald> Guest34: Then you're missing references to `self` in that area() method.
[12:52:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:52:07] <Guest34> KirkMcDonald Is MI a bad programming principle?
[12:52:20] <KirkMcDonald> Guest34: MI is preposterously complicated.
[12:52:40] <Guest34> I see
[12:52:46] <KirkMcDonald> Guest34: It rarely signals an increase in clarity.
[12:53:09] *** aiden is now known as iceneko
[12:53:27] <jinsun__> and that's why many languages don't even allow it for proper classes, only interfaces
[12:53:33] <han-solo> sudorm: let's assume yes
[12:53:36] <KirkMcDonald> (Bonus round: *Single* inheritance ain't so great, either.)
[12:53:39] <sudorm> If requests for some routes such as www.example.com/long_processing in a web framework   are verrry slow
[12:53:58] <sudorm> how do you deal with that? how do you start workers to not block the main process?
[12:54:05] <Guest34> what is better than MI and SI?
[12:54:29] <han-solo> you run it with something like gunicorn or something
[12:54:34] <KirkMcDonald> https://en.wikipedia.org/wiki/Composition_over_inheritance
[12:55:20] <Guest34> the course I'm taking has ZERO mentions of Composition
[12:55:22] <KirkMcDonald> Has-a, rather than is-a.
[12:55:32] <Guest34> Lol, too many red flags
[12:55:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:56:18] *** Joins: paul424 (~tom@ip-5-172-232-233.multi.internet.cyfrowypolsat.pl)
[12:56:27] <sudorm> han-solo, what are the most standard solutions for this?
[12:56:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:56:49] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:56:57] <han-solo> assuming the response needs that processed data at that time
[12:57:00] <sudorm> let's say a function is time-expensive (30 seconds), how would you start/stop (multi)processes for each bottle request that ask this processing function
[12:57:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:58:43] <han-solo> gunicorn will be able to run multiple instances of the app, so one request won't block the other for 30 seconds
[13:01:08] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 252 seconds)
[13:01:31] <Guest34> KirkMcDonald Is there a reliable online resource for OOP?
[13:02:16] * mrwick would like to learn more about advantages of asyncronous libs in python
[13:02:40] <nazarewk[m]> any idea how do i insert multiple start of the document comments in `ruamel.yaml`?
[13:02:55] <mrwick> like, why are we using tornado with asyncpg instead of django or flask/sqlalchemy and an asgi?
[13:03:12] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:03:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:04:42] <han-solo> flask is a sync framework still i guess, so. but django now support async stuff, but still not strictly async i think ?
[13:05:12] *** Joins: Klinda (~superleag@user/klinda)
[13:06:03] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[13:06:21] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:06:38] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:07:32] <han-solo> but a lot of people still use django and flask because they have their own pros
[13:08:41] *** Joins: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de)
[13:08:43] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[13:09:29] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[13:09:32] *** Quits: vladoski (~vladoski@2001:b07:add:d406:6182:a9f4:914:efd7) (Remote host closed the connection)
[13:09:47] *** Joins: vladoski (~vladoski@2001:b07:add:d406:6182:a9f4:914:efd7)
[13:09:57] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[13:10:19] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[13:12:31] <mrwick> agreed, but is there some inherent advantage to an async framework instead of a sync framework with async SGI?
[13:13:06] <Bronto22> han-solo: Flask has an async extra: https://flask.palletsprojects.com/en/2.0.x/async-await/
[13:13:18] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[13:13:24] <Bronto22> han-solo: I have not used it, no idea how good it is
[13:13:30] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[13:14:16] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[13:15:00] *** Quits: zen_coder (~zen_coder@ip5f5bf6a9.dynamic.kabel-deutschland.de) (Quit: Konversation terminated!)
[13:15:16] *** Joins: hid3 (~arnoldas@78.157.71.116)
[13:15:23] <mrwick> that page points to Quart as well. I guess I need to analyse the I/O bound processes to find out more
[13:15:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:17:04] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[13:17:12] <Guest34> https://bpa.st/TXUQ is reporting `math domain error`and the value stored in `s` is 8.5
[13:17:39] <Guest34> wait nvm
[13:17:43] <Guest34> it's an invalid triangle
[13:18:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[13:18:41] *** Quits: sudorm (~sudorm@pop.92-184-118-188.mobile.abo.orange.fr) (Quit: Leaving)
[13:19:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:19:13] <jinsun__> Guest34: math.sqrt works only for positive numbers
[13:19:26] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48)
[13:19:34] <Guest34> yeah, and 8.5 - 10 is -ve
[13:22:52] *** Quits: Guest34 (~Guest34@171.50.175.113) (Quit: Client closed)
[13:23:03] *** Joins: ejjfunky (~ejjfunky@125.164.16.115)
[13:30:34] *** Parts: r3m (~launch@user/r3m) (WeeChat 3.5-dev)
[13:31:24] *** Quits: flokuehn (~flokuehn@87.123.247.67) (Ping timeout: 272 seconds)
[13:31:26] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[13:32:51] <han-solo> Bronto22: i see, at this point i'd just use fastapi
[13:33:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:33:48] *** Joins: Deana (~Deana@178.46.18.238)
[13:33:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:34:07] *** Joins: r3m (~launch@user/r3m)
[13:34:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:37:30] *** Joins: Guest34 (~Guest34@171.50.175.113)
[13:37:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[13:38:49] *** Joins: darksun (~darksun@user/darksun)
[13:39:02] <Guest34> I want to avoid input values that are not valid numbers. https://bpa.st/SSZQ
[13:39:02] <Guest34> What's the proper way to do this?
[13:39:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[13:40:10] *** Joins: noteness (~noteness@user/noteness)
[13:40:23] <grawity> doesn't the ValueError from float() already give you that?
[13:40:29] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[13:40:39] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[13:40:48] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Client Quit)
[13:41:07] *** Quits: Allegretto (~allegrett@84-236-80-62.pool.digikabel.hu) (Ping timeout: 256 seconds)
[13:41:40] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[13:42:11] *** dcaro is now known as dcaro_brb
[13:42:15] <Guest34> Yes it does
[13:42:43] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[13:43:05] <Guest34> I should just change `ValueError` to `AttributeError` at line 36 right?
[13:43:18] *** Joins: dante-as (~dante-as@188.24.161.140)
[13:43:43] <dante-as> Hi guys, how can I add a new line in a file before a specific string?
[13:45:36] <bjs> dante-as: read the file into a string, use something like regex to find the specific string and insert the newline, then write the string back to the file
[13:45:40] *** Joins: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260)
[13:46:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:46:07] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:46:49] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[13:47:24] *** Quits: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260) (Read error: Connection reset by peer)
[13:47:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3)
[13:47:47] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[13:48:02] *** Joins: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260)
[13:48:09] <jinsun__> Guest34: why would you get ValueError or AttributeError in the area method?
[13:48:38] <han-solo> sed '/^somestring/i \ ' <file>
[13:48:55] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[13:49:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[13:49:57] <Guest34> jinsun: what if `self.length`was assigned no value during the init calls?
[13:50:58] <Guest34> `AttributeError: 'Area' object has no attribute 'radius'`
[13:51:00] <jinsun__> oh right you are catching the error and not re-raising it
[13:51:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:51:18] <Guest34> yep
[13:51:27] <jinsun__> bad design to do that, but yeah then you would get AttributeError
[13:51:46] <Guest34> what is the proper design?
[13:51:47] <grawity> just don't prompt for input in class init, generally
[13:51:52] <bjs> Guest34: maybe you want it to be a while loop that keeps trying to ask the user for a radius until they input one
[13:52:07] <jinsun__> If you don't want to show the traceback then just sys.exit(1)
[13:52:23] <bjs> Guest34: or just quit the program entirely if the input is wrong and no radius is set, rather than trying to continue anyway
[13:54:06] *** Joins: baffodoro (~raffaem@95.74.45.164)
[13:54:37] <Guest34> run a loop until the user enters a valid value. got it
[13:54:49] *** Quits: draq (~draq@user/draq) (Quit: The Lounge - https://thelounge.chat)
[13:55:34] *** Joins: Allegretto (~allegrett@94-21-199-80.pool.digikabel.hu)
[13:56:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:57:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:58:40] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[13:59:35] *** Joins: bluedust (~bluedust@103.165.167.61)
[14:02:18] *** Quits: luciusf2 (~luciusf@46.23.90.165) (Quit: WeeChat 3.2.1)
[14:02:32] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[14:03:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:04:32] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[14:04:41] <Guest34> but I want the program to run regardless of whether a value is valid or not. Even if the value of radius is invalid, the program should run anyway, and report "area of circle could not be performed" or report a similar error if the dimensions of the triangle are invalid
[14:04:41] <Guest34> Is the program design correct in that case?
[14:05:01] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[14:05:21] *** Joins: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk)
[14:05:33] <grawity> I think there are two different cases here – either the input can't be parsed as float *at all* (in which case you should abort early, it doesn't make sense to continue with calculations)
[14:05:42] *** Joins: bahamas (~lucian@84.232.140.52)
[14:05:44] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[14:05:57] *** Quits: ymwm__ (~yingmanwu@27.153.167.245) (Ping timeout: 240 seconds)
[14:05:59] <grawity> or the input is parsed as float, but out of range for calculations (in which case carry on as usual)
[14:06:22] <grawity> so two meanings of "invalid"...
[14:06:25] <Guest34> hm
[14:06:30] <grawity> and it depends on which one you're talking about at the moment
[14:06:56] <Guest34> the first case
[14:07:13] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[14:07:46] *** Joins: not_not (~not_not@193.178.220.11)
[14:08:25] <grawity> in that case if you get a ValueError from the float() call, then the "collecting input" stage of your program has failed, and IMHO it makes little sense to carry on, because if you do, then the error would be kinda misleading
[14:08:28] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[14:08:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:09:15] <jinsun__> when you print the invalid value, you already know that area calculation cannot be performed, so it is weird to want to continue anyway
[14:09:24] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 272 seconds)
[14:09:44] *** Quits: dsc_ (~dsc@70.68.10.185.ro.ovo.sc) (Ping timeout: 250 seconds)
[14:10:34] <Guest34> hmm, but I want to print the area of triangle if the area of cricle cannot be calculated or vice versa
[14:11:09] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[14:11:44] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Client Quit)
[14:11:44] <grawity> then the Circle and Triangle classes should have *their own* area() eeach
[14:11:53] <bjs> Guest34: I think this code is kind of weird because you have 1 thing that is both a Circle and a Triangle (the Area class).  If instead you added area methods to each class separately you could call one and `return` if it fails
[14:11:55] <bjs> so you can still do the other
[14:12:02] <grawity> I'd even say the entire 'class Area' just doesn't really make sense here
[14:12:04] <bjs> ah grawity suggests the exact same thing at the exact same time :)
[14:12:18] <grawity> but for a start, do move the area calculations to both Circle and Triangle
[14:12:37] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 256 seconds)
[14:12:43] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[14:13:24] *** dcaro_brb is now known as bcaro
[14:13:26] *** bcaro is now known as dcaro
[14:13:53] <Guest34> Yes, I know I can do that. But the question statement, however, says that I should collect radius from the class `Circle` and dimensions of triangle from the class `Triangle` and pass both the classes to another class `Area` and print the output
[14:13:56] <jinsun__> yeah this whole thing is just doing multiple inheritance for its own sake, when it doesn't make much sense
[14:14:01] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:3d3d:936:e9ee:e56e)
[14:14:13] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.4)
[14:14:24] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[14:14:28] <bjs> Guest34: hmm, can you share the question statement? It seems really weird to me that Area inherits Triangle and Circle
[14:14:57] *** Quits: luciusf1 (~luciusf@46.23.90.165) (Quit: WeeChat 3.2.1)
[14:15:05] <Guest34> `Write a program to implement multiple inheritance by creating a class Circle containing details: radius (which can be entered by the user). Create another class Triangle containing details of sides (which can entered by the user). These two classes are then inherited by a class Area for calculating area of circle and triangle
[14:15:06] <Guest34> and displaying output.`
[14:15:10] <Guest34> oopos
[14:15:13] *** Joins: luciusf (~luciusf@46.23.90.165)
[14:15:14] <Guest34> *oops
[14:15:14] <grawity> hmm
[14:15:25] <jinsun__> my solution to the problem would be, print("This question is dumb")
[14:15:27] <bjs> Guest34: that is an awful exercise ...
[14:15:34] <Guest34> lol
[14:15:37] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[14:16:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:16:15] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[14:16:31] <bjs> Guest34: it reads like someone was told "Make an exercise about multiple inheritance" and the person went "what's multiple inheritance?" and had to make something up
[14:16:39] <bjs> if I'm honest
[14:16:39] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[14:16:45] <Guest34> :') :')
[14:17:15] <nedbat> Guest34: if you don't mind me asking, where did this exercise come from?
[14:17:25] <grawity> ok, so my thoughts are: 1) it doesn't say classes should collect the actual input, and it would make more sense to collect it in the 'main' program, then only pass collected values to the class
[14:17:42] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[14:17:49] <grawity> so you prompt for float(input("radius plz")), *then* create a Circle(radius)
[14:17:54] *** Quits: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260) (Read error: Connection reset by peer)
[14:18:05] <grawity> similarly Triangle(a, b,c)
[14:18:11] <Guest34> It's a question in our university's practice sets for the Core Python Course nedbat
[14:18:16] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[14:18:32] *** Joins: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260)
[14:18:34] <grawity> and for multiple inheritance, a Trircle(Circle, Triangle) that takes all four parameters at once
[14:19:30] <nedbat> Guest34: i agree with others that this is a very bad exercise... :(
[14:19:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:20:01] <Guest34> grawity, because of the question statement I forgot I could write statements in the main program lol
[14:20:07] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[14:20:18] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:20:25] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[14:20:34] <Guest34> nedbat yeah, that's very sad
[14:21:26] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[14:21:52] *** Joins: dsc_ (~dsc@70.68.10.185.ro.ovo.sc)
[14:25:25] <grawity> this is how I'd implement it, if I had to https://bpa.st/4IZA
[14:26:37] <toolbox_> When performing a "for loop" to populate from dataframe and extract to file, I need to access several dataframe columns. As now I only made it to specify one column. How can I access all columns using one "for loop"? https://bpa.st/PFCA
[14:26:46] <Guest34> I see. I've moved the input prompts outside the classes too grawity
[14:27:43] <Guest34> Why did you name it `Tracrle` though?
[14:28:06] <grawity> to make it more obvious that it's a silly thing to do
[14:28:11] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[14:28:18] <Guest34> :') :') :')
[14:28:28] <bjs> Guest34: multiple inheritance means that the object is two different things at once. `class ThisClass(Triangle, Circle)` means that a ThisClass is both a circle and a triangle
[14:28:33] <bjs> which is nonsensical
[14:28:59] *** gentooclimax is now known as climax
[14:29:07] <Guest34> Oh that really doesn't make sense at all. A shape cannot be a circle and triangle at the same time.... bjs
[14:29:17] *** Quits: jtj90 (~jtj90@2607:fb90:8349:9080:4065:cdc8:68b0:c77b) (Ping timeout: 256 seconds)
[14:29:18] <bjs> Guest34: that's what `class Area(Triangle, Circle)` means though
[14:29:20] *** Joins: dlwxxxdlw (~dlwxxxdlw@103.44.61.88)
[14:30:01] <bjs> if a = Area() then a is a Triangle and a Circle.
[14:30:17] <grawity> if you need an object that is a circle *plus* a triangle though, then it kind of makes sense, but I guess composition (?) would still be better than inheritance
[14:30:36] <Guest34> hmm
[14:30:44] *** Quits: iceneko (~iceneko@user/iceneko) (Ping timeout: 256 seconds)
[14:31:13] <Guest34> but for the sake of this question, am I allowed to write `class Area(Circle, Triangle)` ?
[14:31:19] <grawity> which is why I made the area() return the sum of both areas
[14:31:34] <bjs> Guest34: allowed to? Yes Python won't stop you
[14:31:49] <bjs> Guest34: and it's pretty clear that's what the task asked you to do,  the problem is just that it doesn't seem to make any sense
[14:31:53] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8035:5627:13f2:2efa) (Quit: Textual IRC Client: www.textualapp.com)
[14:32:09] <Guest34> Yeah, '=(
[14:32:12] *** Quits: mage (~julien@orval.bbpf.belspo.be) (Remote host closed the connection)
[14:32:44] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:22] <jinsun__> toolbox_: if you want to loop over rows, there is df.iterrows()
[14:33:55] *** Joins: Amadiro_ (~Amadiro@45.154.138.75)
[14:34:10] *** climax is now known as gentooclimax
[14:34:42] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[14:34:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:35:38] *** Quits: Babar (~Babar@171.233.210.64) (Quit: Leaving)
[14:36:07] <toolbox_> jinsun__, as in attched code above, I am looking to transform input data from dataframe into export of text. See "Expected output (in produced LDIF file)" in https://bpa.st/PFCA
[14:36:39] *** Quits: Amadiro (~Amadiro@45.154.138.40) (Ping timeout: 256 seconds)
[14:38:04] <toolbox_> jinsun__, bit confused but I think I can iterate over speicifed columns, add some prefix and then secure that the produced text file content, comes in a specific order.
[14:38:20] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[14:38:20] <jinsun__> toolbox_: yeah I saw that, and the `for row in df.CN` is only looping over cells in one column, if you want the entire row available in the loop you would do `for idx, row in df.iterrows()`
[14:39:25] *** Joins: white2 (~mahengrui@user/mahengrui1)
[14:39:39] <jinsun__> toolbox_: also opening and closing the file in the loop is bad idea, just open it once and write everything
[14:40:07] *** Joins: kts (~kts@103.73.237.247)
[14:40:10] <toolbox_> jinsun__, Understood, do i then set the opening and close outside the loop?
[14:40:22] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[14:40:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:41:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:42:09] <jinsun__> or use with statement instead of manually closing, with open(...) as f: loop_and_write_to_f
[14:42:35] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[14:44:54] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[14:45:53] *** Quits: dlwxxxdlw (~dlwxxxdlw@103.44.61.88) (Read error: Connection reset by peer)
[14:46:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[14:46:12] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 240 seconds)
[14:47:24] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[14:47:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[14:47:25] *** Joins: cursey (~cursey@user/cursey)
[14:47:59] *** Joins: iceneko (~iceneko@user/iceneko)
[14:48:55] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[14:48:57] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 252 seconds)
[14:49:05] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[14:49:24] *** Joins: enoq_ (~enoq@194-208-178-35.lampert.tv)
[14:50:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:50:14] *** enoq_ is now known as enoq
[14:51:16] *** Joins: ASUS (~ASUS@user/ASUS)
[14:51:29] *** Joins: dlwxxxdlw (~dlwxxxdlw@116.206.101.234)
[14:51:50] *** Quits: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[14:53:54] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[14:55:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:55:21] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[14:56:12] *** Quits: ASUS (~ASUS@user/ASUS) (Remote host closed the connection)
[14:56:33] <toolbox_> jinsun__, Thanks for your input. It works now as expected. Might have to reconcider speed when loading with 100.000 rows. https://bpa.st/HUWA
[14:56:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:57:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:57:36] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 250 seconds)
[14:59:38] *** Quits: gentooclimax (~gentoocli@91.13.23.93.rev.sfr.net) (Ping timeout: 256 seconds)
[14:59:38] *** Quits: not_not (~not_not@193.178.220.11) (Read error: Connection reset by peer)
[14:59:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:01:15] <Guest34> I've to write a program that overloads the `+` operator. This is what I've tried: https://bpa.st/DYVA
[15:01:15] <Guest34> Is it the proper way to do that?
[15:01:27] <bjs> Guest34: __add__ is the name of the method that overloads +
[15:01:36] <Guest34> hmm
[15:01:46] <bjs> Guest34: x + y is roughly x.__add__(y)
[15:02:38] <Guest34> Gotcha
[15:02:40] <Guest34> Thanks again
[15:04:32] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[15:05:22] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[15:07:41] *** Quits: fling (~fling@user/fling) (Ping timeout: 272 seconds)
[15:07:48] *** Joins: michele (~eraser@user/michele)
[15:08:23] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[15:08:24] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[15:08:49] <jinsun__> toolbox_: for speed you would avoid looping and directly add columns together, something like this https://bpa.st/LODQ
[15:09:04] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.55)
[15:09:27] <jinsun__> and you can reduce the number of pluses in there too a bt
[15:09:32] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:11:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:12:18] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[15:12:40] *** Quits: rawrrr (uid540880@id-540880.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:13:19] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[15:14:53] *** Joins: BillyZane2 (~BillyZane@152.89.204.151)
[15:15:48] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[15:16:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:16:38] *** Quits: driib2 (~driib@185.65.135.234) (Ping timeout: 256 seconds)
[15:16:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:17:10] *** Quits: BillyZane (~BillyZane@193.160.245.132) (Ping timeout: 272 seconds)
[15:17:56] *** Joins: georgios (~georgios@user/georgios)
[15:17:58] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:18:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:18:28] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[15:18:44] *** Joins: kwoot_ (~kwoot@78-238-95-45.connected.by.freedominter.net)
[15:19:40] <kwoot_> Short question: I want to make 2 lists from the same data, first list when some string in list of labels, second list when same string not in list of labels. How to structure this elegantly?
[15:20:12] <grawity> do you have an example of how you've structured it so far?
[15:20:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:22:24] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[15:24:38] *** Quits: onichomp (~onichomp@2806:264:4408:13f:848f:d6:6ce4:4260) (Read error: Connection reset by peer)
[15:25:21] *** Quits: dante-as (~dante-as@188.24.161.140) (Quit: Client closed)
[15:27:35] *** Quits: trace987 (~trace@user/trace) (Quit: Leaving)
[15:27:36] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:28:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:30:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:31:10] *** Joins: kts (~kts@103.73.237.247)
[15:31:56] *** Quits: paul424 (~tom@ip-5-172-232-233.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:33:11] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[15:33:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:33:29] *** Joins: fluter (~fluter@user/fluter)
[15:34:11] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:34:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[15:34:12] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Ping timeout: 256 seconds)
[15:34:31] <Guest34> https://bpa.st/ACVQ
[15:34:32] <Guest34> I'm trying to overload the reverse method... am I doing it correctly?
[15:35:00] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:35:49] <flower_> I want to package my python app for Linux. What's the recommended way?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:09] <flower_> desktop software
[15:36:23] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:40] <jinsun_> Guest34: no, you're directly calling the dunder method instead of using the reversed function
[15:36:43] *** Quits: dlwxxxdlw (~dlwxxxdlw@116.206.101.234) (Ping timeout: 256 seconds)
[15:37:15] <Guest34> ah
[15:37:41] <fakenullie> and it must be __reversed__ if you're going to use reversed function
[15:38:06] <Guest34> Yeah, I wasn't aware of that function
[15:38:40] *** Quits: kts (~kts@103.73.237.247) (Quit: Konversation terminated!)
[15:39:00] *** Joins: Babar (~Babar@171.233.210.64)
[15:39:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:39:53] <jinsun_> flower_: depends on how you want people to install it, if it is with pip, then the guide at https://packaging.python.org/en/latest/tutorials/packaging-projects/ would help
[15:40:36] <Guest34> `AttributeError: 'OverloadReverseMethod' object has no attribute 'reversed'`
[15:40:45] <jinsun_> if you want to make a package that is installed with your system package manager then you have to look for guidance specific to the package manager
[15:42:08] <jinsun_> Guest34: it should be reversed(obj) not obj.reversed()
[15:42:14] <Guest34> ah...
[15:42:31] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[15:42:41] <Guest34> works now
[15:43:33] <Guest34> jinsun_ do I really need the `instance()` inside `__reversed__()` ?
[15:43:39] *** Joins: agumonkey (~user@88.163.231.79)
[15:44:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:44:20] <flower_> jinsun_, thx, most similar packages seems to have a makefile
[15:45:10] <jinsun__> Guest34: if you mean the isinstance then that entirely depends on what your class is doing and how people will use it, you don't need always
[15:45:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:45:58] <Guest34> Okay
[15:46:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:47:47] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:47:59] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:49:40] *** Joins: driib2 (~driib@185.65.135.160)
[15:49:42] *** Joins: computeiro (~Wender@189.37.65.244)
[15:50:05] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:fdf2:e3fa:282e:a9e3) (Ping timeout: 256 seconds)
[15:50:56] *** Joins: dez (uid92154@user/dez)
[15:51:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:52:01] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[15:52:13] *** Joins: rvalue (~rvalue@user/rvalue)
[15:52:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:52:48] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:53:03] *** Joins: jpaa (~jpaa@161.97.129.36)
[15:53:06] *** Quits: jpaa (~jpaa@161.97.129.36) (Client Quit)
[15:53:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:55:14] *** Quits: michele (~eraser@user/michele) (Ping timeout: 260 seconds)
[15:55:32] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[15:55:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:59:35] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:00:14] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:00:18] *** Joins: vit (~vit@chello085216193138.chello.sk)
[16:00:41] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[16:00:42] *** vit is now known as Guest5584
[16:01:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:01:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[16:02:32] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[16:03:07] *** Joins: revolve (~u0_a227@82-132-239-103.dab.02.net)
[16:03:41] *** Quits: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:03:46] *** Joins: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net)
[16:03:48] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[16:03:55] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[16:06:10] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[16:07:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:07:57] *** dab21_ is now known as dab21
[16:08:30] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:09:27] *** Joins: Pickchea (~private@user/pickchea)
[16:09:48] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[16:10:01] *** Joins: ymwm (~yingmanwu@27.153.167.245)
[16:10:41] *** Joins: ice9 (~ice9@user/ice9)
[16:11:00] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[16:15:38] *** Joins: kts (~kts@103.73.237.247)
[16:15:42] *** Joins: zeden (~zeden@user/zeden)
[16:15:43] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[16:15:47] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:16:01] *** Joins: xcm (~xcm@user/xcm)
[16:16:12] *** Quits: phryk (~totallyno@user/phryk) (Read error: Connection reset by peer)
[16:16:17] *** Joins: dlwxxxdlw (~dlwxxxdlw@103.117.102.164)
[16:16:30] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Quit: Ping timeout (120 seconds))
[16:16:30] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[16:16:31] *** Joins: phryk (~totallyno@user/phryk)
[16:16:54] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[16:17:06] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[16:17:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:17:51] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:18:13] *** Joins: zeden (~zeden@user/zeden)
[16:18:43] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:20:19] *** Joins: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de)
[16:20:30] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Ping timeout: 272 seconds)
[16:21:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:21:44] *** waveform_ is now known as waveform
[16:22:06] *** Joins: wakeup (~wakeup@user/wakeup)
[16:22:15] *** Quits: Guest34 (~Guest34@171.50.175.113) (Quit: Client closed)
[16:22:35] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[16:24:27] <kwoot_> <grawity>: I figured it out I think.
[16:25:39] *** Quits: alius (~alius@2001:861:4444:49c0:c10d:a940:8911:c3ef) (Quit: Leaving)
[16:26:28] *** Joins: michele (~eraser@user/michele)
[16:27:52] <wakeup> let's say you have a list of objects a = [A1, A2...]
[16:28:02] <wakeup> if I do a[0], it returns A1
[16:28:24] <wakeup> but let's say that, when I do a[0], I want it to return some property of A1
[16:28:44] <wakeup> which method of the class A should I implement to do this?
[16:28:45] *** Joins: shad (~shad@user/shad)
[16:28:49] <wakeup> or can I even do that
[16:28:55] <wakeup> or do I need to do A1.my_key
[16:28:57] <wakeup> ?
[16:29:28] <fakenullie> you can't
[16:29:31] <nedbat> wakeup: you can't do that. you need a[0].my_key
[16:30:12] <nedbat> you could make a wrapper object: my_keys=ListAttrGetter(a, "my_key");   my_keys[0]
[16:30:38] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 272 seconds)
[16:30:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:31:02] <wakeup> ok
[16:31:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:31:32] <wakeup> does anyone know how Python's sort actually implements the way you are able to sort by some property/function of the input?
[16:31:39] <wakeup> I just want to have an idea
[16:32:17] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[16:32:32] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[16:32:33] <fakenullie> wakeup: it calls a function on each element of the input
[16:33:15] <wakeup> yea, that make sense
[16:33:18] <wakeup> well, key can be a function
[16:33:25] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[16:33:42] *** Joins: bahamas (~lucian@84.232.140.52)
[16:33:54] <wakeup> if key is not passed
[16:33:57] *** Joins: strk (~strk@user/strk)
[16:34:02] <wakeup> then I guess it tries to use the element itself
[16:34:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:34:16] <strk> I've to serve a few cgi scripts, what's the easiest/lightmost way you can think for doing that ? The scripts are in python
[16:34:20] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[16:34:29] <strk> I was reading about uwsgi
[16:34:41] <strk> there'd be an ngnix proxy in front of it
[16:34:52] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Max SendQ exceeded)
[16:35:00] *** Quits: dld (~davidlowr@2601:197:600:1210:fddb:e1db:6b56:f9d3) (Ping timeout: 240 seconds)
[16:35:09] *** Joins: user3456_ (user3456@user/user3456)
[16:35:12] *** Quits: user3456 (user3456@user/user3456) (Read error: Connection reset by peer)
[16:35:18] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[16:35:57] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[16:36:04] <wakeup> is there a interpreter here in this chat?
[16:36:11] *** user3456_ is now known as user3456
[16:36:30] <marduk> I speak only English.
[16:36:53] <wakeup> lol, I mean a Python interpreter
[16:36:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:37:14] *** Quits: julia (~quassel@user/julia) (Ping timeout: 260 seconds)
[16:37:21] *** Joins: crashrep (~crashrep@user/crashrep)
[16:37:36] *** Quits: ymwm (~yingmanwu@27.153.167.245) (Ping timeout: 272 seconds)
[16:37:37] <jinsun__> no, you have to find a online thing, or install python on your machine
[16:38:05] <wakeup> there used to be one here though, righ?
[16:38:26] <nedbat> wakeup: without a key, sort uses obj.__lt__(other)
[16:38:39] <nedbat> wakeup: we've never had a python interpreter in the channel
[16:38:49] *** Joins: bloody (~bloody@user/bloody)
[16:39:01] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[16:39:16] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[16:39:49] *** Joins: catdog (~quassel@birdperson.tuxzone.org)
[16:40:12] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:84ab:e3a9:1ea3:da7a) (Ping timeout: 240 seconds)
[16:40:21] *** Joins: wyclif (~wyclif@user/wyclif)
[16:40:27] <ztrawhcse> Running an interpreter as an IRC bot is both a security issue due to the need to establish sandboxing, and largely useless for anything other than one liners which python isn't the best at
[16:41:14] *** Joins: pro_z_ (~pro_z@37.214.35.129)
[16:41:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[16:41:27] *** Joins: kts (~kts@103.73.237.247)
[16:41:32] *** Joins: blei (~blei@user/blei)
[16:41:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:41:54] <blei> can you install a package without a setup.py, and without using PYTHONPATH?
[16:42:33] *** Joins: julia (~quassel@user/julia)
[16:42:36] *** Quits: baffodoro (~raffaem@95.74.45.164) (Ping timeout: 240 seconds)
[16:43:10] <ztrawhcse> Sure, autotools meson or cmake
[16:43:32] <blei> yeah rightr
[16:44:15] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[16:44:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:44:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:45:06] <nedbat> when writing async code, why would i use an async queue instead of just gathering a bunch of coros?
[16:45:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:45:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:46:20] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[16:46:34] <deniska> nedbat: queue is easier to reason about, and it can provide back-pressure
[16:46:54] <nedbat> deniska: i guess also you don't need all the coros at once, you can feed them in as they are made.
[16:47:23] <wakeup> how do you usually initialise a list of length n with the same value in Python?  [value] * n?  is there any drawback?
[16:47:35] <wakeup> we can also do [value for _ in range(n)]
[16:47:41] <wakeup> I'm just wondering if there's an drawback
[16:47:48] <wakeup> there's also repeat
[16:47:55] <wakeup> I don't know which one is the "best"
[16:48:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:48:17] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[16:48:31] *** Quits: wyclif (~wyclif@user/wyclif) (Read error: Connection reset by peer)
[16:49:03] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[16:49:04] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[16:49:06] <jinsun__> it depends on what value is and whether you wanted copies or not
[16:49:13] <xheimlich> this is a function that does what I want: getter = lambda obj: partial(obj.get)
[16:49:39] <xheimlich> for undisclosed reasons, I'd like to call partial on getattr and get rid of that lambda.
[16:49:51] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[16:50:13] <xheimlich> help(getattr) suggests it has two named arguments, object and name.
[16:50:47] <xheimlich> but this is no good: getter = partial(getattr, name="get")
[16:51:16] <nedbat> wakeup: if value is mutable, you definitely want the longer form: [value for _ in range(n)]
[16:51:36] <xheimlich> tells me: TypeError: getattr() takes no keyword arguments  -- I presume object and name are "positional arguments".
[16:51:48] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[16:51:53] <nedbat> wakeup: try this:  v = [[1,2,3]] * 4; v[0][0] = 99;  print(v)
[16:52:10] *** Quits: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[16:52:12] <jinsun__> xheimlich: yes getattr only takes positional arguments
[16:52:16] <xheimlich> is there something on dicts that can be fed to partial that's not getattr(...,"get") and gets values?
[16:53:01] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Quit: Leaving)
[16:53:17] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[16:53:22] <grawity> wait, but getattr doesn't get [items], it gets .attributes, so it sounds like it would be the wrong tool in the first place
[16:53:24] <nedbat> xheimlich: d.get  is a function that gets values
[16:53:44] <nedbat> xheimlich: you don't need partial, do you?
[16:54:19] <xheimlich> yes, as I said, lambda obj: partial(obj.get) is something that works.
[16:54:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:55:01] <xheimlich> I think in the long term partial is easier to understand than chains of lambdas like get = lambda obj: lambda key: obj.get(key)
[16:55:24] *** Joins: ttys000 (~ttys000@user/ttys000)
[16:55:24] <xheimlich> but by now it's more of a curiosity.
[16:55:32] <grawity> so you want something that works like 'getter = make_getter(obj); foo = getter(key)'?
[16:56:06] <xheimlich> I have a lot of list comprehensions like [elem['key'] for elem in list_of_elems].
[16:56:55] <nedbat> xheimlich: if you have code that is hard to understand, write good docstrings and comments.
[16:56:56] <grawity> try partial(dict.get, ...) I guess
[16:56:56] <xheimlich> I'd like to use map to return generators instead of lists. Also because a slight change from the looks of common python syntax might be more readable than inspecting a dozen+ list comprehensions.
[16:57:28] <xheimlich> nedbat: I'm getting into that. My "core" code is docstringed by now. This is something to feed into an optimizer.
[16:57:42] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:57:50] <jinsun__> kinda sounds like you wanted operator.attrgetter("get")
[16:58:19] *** Joins: DaleNa9g (~DaleNa9g@047-041-057-069.res.spectrum.com)
[16:58:24] *** Joins: esther (~esther@154.16.169.4)
[16:58:58] *** Quits: DaleNa9g (~DaleNa9g@047-041-057-069.res.spectrum.com) (Client Quit)
[16:59:17] *** Joins: Atque (~Atque@user/atque)
[16:59:29] <jinsun__> you would use it like  operator.attrgetter("get")({1:2})(1) == 2
[17:00:06] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[17:00:48] <fakenullie> xheimlich: you can use generator expressions by replacing [] with ()
[17:01:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:18] *** Quits: OP-0 (~pca290122@bband-dyn1.178-41-254.t-com.sk) (Ping timeout: 272 seconds)
[17:03:42] *** Joins: OP-0 (~pca290122@185.244.139.8)
[17:03:42] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Changing host)
[17:03:42] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[17:04:07] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:04:51] <Piraty> is there a comprehensible / somewhat universal rule of thumb to this question? : when to return None (or False, or similar) instead of raising an exception from a method/function? say, looking up stuff from a file and reporting the validity of the data
[17:04:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:05:09] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Quit: Leaving)
[17:05:13] <Piraty> it's a question of style / design of course
[17:05:19] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[17:06:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:06:27] <fakenullie> if it something you expect, you should return none, if it something which indicates abnormal behavior, you should raise exception
[17:07:14] <xheimlich> Piraty: you can create your own exceptions by saying class ThisIsWeirdYeah(Exception): pass
[17:07:20] <Piraty> sure
[17:07:31] *** Joins: rsx (~dummy@ppp-188-174-134-226.dynamic.mnet-online.de)
[17:07:34] <xheimlich> pass the buck around and handle exceptions in one place.
[17:07:44] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[17:08:30] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[17:08:42] <xheimlich> I've started to use a lot of assertions as well. they both communicate intent in some mathy parts and raise exceptions without ugly ifs.
[17:08:45] <jinsun__> both are a bit troublesome, but those are the options you have built-in, exceptions are slightly better
[17:08:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:09:12] <xheimlich> or you can use monads hahaha
[17:09:18] <Piraty> things like my_obj.is_valid() are expected to return True/False only per naming
[17:09:27] <xheimlich> (there's no shortage of monad libraries for python)
[17:09:29] *** Joins: aNickName (~Throgkt@185.157.247.90)
[17:09:51] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[17:09:51] <jinsun__> yes if you can go third party I'd suggest using something like https://pypi.org/project/option/
[17:09:57] <The-Compiler> xheimlich: remember assertions may be turned off via python -OO
[17:10:05] *** Joins: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[17:10:08] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[17:10:20] *** Joins: rvalue (~rvalue@user/rvalue)
[17:10:34] *** Joins: plastico (~plastico@neomutt/plastico)
[17:10:46] <jinsun__> then return option type when you want to return None and return result type if you feel like throwing exceptions
[17:10:55] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[17:11:01] *** Quits: aNickName (~Throgkt@185.157.247.90) (Client Quit)
[17:11:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a11a:9fad:b169:74bb)
[17:11:02] <The-Compiler> Piraty: if that raised an exception, perhaps .ensure_valid() would be a better name indeed
[17:11:15] <Piraty> but many other things make it not so obvious (when implementing them) when to actally raise (my custom exceptions) or return a False-like type and which idiom to use in general. sometimes i fill like abusing exceptions to communitcate the wrong thing
[17:11:19] *** Joins: Throgkt (~Throgkt@user/throgkt)
[17:11:40] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[17:11:46] *** Parts: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) ()
[17:11:52] *** Quits: Throgkt (~Throgkt@user/throgkt) (Client Quit)
[17:12:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:12:20] <Piraty> The-Compiler: I actually have ensure_valid() in my class, which wraps is_valid and raises a custom exception. this somewhat shows my struggle to have a consistent way of doing it
[17:13:06] <Piraty> The-Compiler: you're the qutebrowser guy ?
[17:13:23] <The-Compiler> Piraty: I am indeed
[17:13:40] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[17:14:08] <Piraty> hello then. reminds me to give it another shot as i learned there's now js-blocking available.
[17:15:24] <The-Compiler> depends on your definition of "now", I assume
[17:15:29] <zen_coder> I have a list of custom object in a list, how can I copy these object into another list (I mean deep copy them)?
[17:15:53] <The-Compiler> Piraty: JS-blocking was available since forever, per-domain JS-blocking for almost as long (4 years ago) ;)
[17:16:17] *** Joins: Throgkt (~Throgkt@user/throgkt)
[17:16:24] <The-Compiler> zen_coder: there's copy.deepcopy
[17:16:30] <Piraty> The-Compiler: i mean ublock-like blocking rules. last time i tried qb it was still discussed about.
[17:16:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:17:20] <The-Compiler> Piraty: nothing has changed about that so far - if you want to block JS based on it's origin, that's still not possible officially, though https://gitlab.com/jgkamat/jmatrix has existed for a few years too
[17:17:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:18:40] *** Joins: Barones (~Barones@user/Barones)
[17:18:55] <Piraty> oh. seems i'm misinformed. thanks
[17:19:00] *** Quits: Throgkt (~Throgkt@user/throgkt) (Client Quit)
[17:19:24] *** Quits: revolve (~u0_a227@82-132-239-103.dab.02.net) (Ping timeout: 240 seconds)
[17:19:25] <zen_coder> The-Compiler: I get following error with this function:  `TypeError: __new__() missing 1 required positional argument: 'obj'`
[17:19:55] <The-Compiler> zen_coder: can you show your code and the full traceback?
[17:20:04] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[17:21:04] *** Joins: ttys000 (~ttys000@user/ttys000)
[17:21:20] *** Joins: Kawazaki (~Kawazaki@85.24.253.51)
[17:21:21] *** Quits: Kawazaki (~Kawazaki@85.24.253.51) (Changing host)
[17:21:21] *** Joins: Kawazaki (~Kawazaki@user/Kawazaki)
[17:21:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:21:56] *** Quits: julia (~quassel@user/julia) (Ping timeout: 272 seconds)
[17:21:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[17:22:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:23:22] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:23:47] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:24:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:25:18] *** Joins: Throgkt (~Throgkt@user/throgkt)
[17:25:41] *** Joins: julia (~quassel@user/julia)
[17:26:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:26:34] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:27:13] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:fc09:57a0:d89c:b417)
[17:28:05] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:28:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:28:36] *** Joins: wib_jonas (~wib_jonas@164.215.125.58)
[17:29:04] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[17:29:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:29:48] *** Joins: slav0nic (slav0nic@python.su)
[17:30:20] *** Joins: Blankspace (~Blankspac@user/blankspace)
[17:31:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:31:45] *** Quits: kts (~kts@103.73.237.247) (Ping timeout: 256 seconds)
[17:31:58] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:32:15] *** Joins: favreje (~jeff@170.249.173.67)
[17:33:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[17:33:51] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[17:33:57] *** Joins: undt (undt@gateway/vpn/protonvpn/undt)
[17:33:58] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[17:34:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[17:36:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:36:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:36:40] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:36:51] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[17:37:46] *** Joins: wyclif (~wyclif@user/wyclif)
[17:38:15] *** Joins: zaz\ (~zaz@poneybl.eu)
[17:38:17] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:42:06] *** Quits: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:42:42] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[17:44:32] <zen_coder> The-Compiler: https://paste.ee/p/puSkk#3qXBe2V15An3_dhSfbbwuUGqw66zV2wX
[17:44:35] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Client Quit)
[17:44:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:45:07] *** Quits: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[17:46:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.182)
[17:47:20] *** Joins: pynthon (~pynthon@80-60-40-192.fixed.kpn.net)
[17:47:25] <The-Compiler> zen_coder: works for me (after fixing the last line and adding imports), but that obj argument in __new__ seems odd
[17:48:06] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:383e:dcb3:f7da:1b4a)
[17:49:04] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.55) (Ping timeout: 256 seconds)
[17:49:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:50:47] *** Joins: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de)
[17:50:50] <zen_coder> what did you fixed with the obj?
[17:51:44] <mickey> why does df["columnname"][200:205:-1] return an empty dataframe, where df["columnname"][200:205] work fine?
[17:52:12] *** Joins: alex11 (~alex11@user/alex11)
[17:53:24] *** Joins: vanessa (~vanessa@103.160.128.7)
[17:53:30] *** Joins: pepper (~pepper@user/pepper)
[17:54:22] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:54:53] <mickey> df["columnname"][200:205][::-1] also works
[17:55:05] <grym> mickey: because [200:205:-1] is an empty slice
[17:55:24] <mickey> isnt it supposed to be the same as [200:205] just in reverse?
[17:55:29] <pynthon> Is there anybody with pytest-bdd/behave/Cucumber/Gherkin experience here? What is the most optimal way to describe a scenario example that return 2 db rows when given a query. For example like this: https://pastebin.com/tAuhh9tL
[17:55:30] <grym> that's [205:200:-1]
[17:55:40] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:55:41] <pynthon> returns*
[17:55:42] <mickey> damn, thanks
[17:56:29] <mickey> also, is there a way to go back N rows from 205 instead of specifically mentioning a number? like [205:-5:-1] or something? (that one doesnt work)
[17:57:18] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[17:57:37] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:57:46] *** Quits: dlwxxxdlw (~dlwxxxdlw@103.117.102.164) (Quit: dlwxxxdlw)
[17:57:49] <fakenullie> [204:199:-1] could work
[17:57:55] <zen_coder> The-Compiler: https://paste.ee/p/qizBw#Q2BcuyACsFqiiY6DoR8X2Oio7ybjGKhB this should get you the same error
[17:58:02] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:58:18] <grym> i'm not aware of a relative-index slice syntax, but i could be wrong; pandas has lots of stuff
[17:58:44] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[18:00:08] *** Joins: aknot (~aknot@2603:900a:1503:17bb:ac54:67cb:aa83:58b3)
[18:00:22] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:00:53] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Client Quit)
[18:01:20] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:01:31] *** Joins: water_27300935_ (~water_273@182.90.128.201)
[18:01:39] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Client Quit)
[18:01:42] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:02:20] <The-Compiler> zen_coder: it sounds like you could do all this with far less magic by using dataclasses and from_dict
[18:02:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:04:13] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:04:14] *** Joins: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net)
[18:04:27] *** Joins: Gerula (~Gerula@user/gerula)
[18:05:47] <CrtxReavr> Can the signal module catch a control-D (EOF)?
[18:05:57] *** Quits: aknot (~aknot@2603:900a:1503:17bb:ac54:67cb:aa83:58b3) (Ping timeout: 240 seconds)
[18:07:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:07:50] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:08:21] <fakenullie> CrtxReavr: I think it's signaled only by read operation, not as a signal
[18:08:24] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[18:08:32] <fakenullie> i.e. read returns EOF or equivalent
[18:08:59] <zen_coder> The-Compiler: I am bound to python 3.6 unfortunately
[18:09:01] <CrtxReavr> whoops
[18:09:01] *** Joins: Blankspace (~Blankspac@user/blankspace)
[18:09:03] *** Joins: humberto1 (~humbertow@189.236.30.197)
[18:09:06] *** Quits: jl (~jl@user/jl) (Ping timeout: 245 seconds)
[18:09:17] <CrtxReavr> I'm not seeing a signal.SIG* class that makes me think so.
[18:09:30] <fakenullie> CrtxReavr: yeah, that's not a signal
[18:09:39] <grym> zen_coder: so use attrs.org
[18:10:46] <water_27300935_> Can we make sure json.loads() return data struct only include 'dict' or 'list'?
[18:11:01] <fakenullie> water_27300935_: no
[18:11:24] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:11:41] <fakenullie> water_27300935_: you can validate structure later with something like marshmallow
[18:11:45] *** Joins: Elzington (~Elzington@68.235.43.92)
[18:11:45] <CrtxReavr> I'd like a script to do one thing on signal.SIGINT/SIGNTERM/SIGHUP and another if control-D his pressed.
[18:11:50] <fakenullie> or it's modern equivalent
[18:12:11] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:13:17] <fakenullie> CrtxReavr: what's your os?
[18:13:47] <CrtxReavr> Let's stick with. . .  FreeBSD & Linux for now.
[18:13:54] <fakenullie> you may use some terminal library and react to any key combination
[18:14:06] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[18:14:29] <CrtxReavr> I should look at how ipython handles it.
[18:14:46] *** Joins: sandipan (~Sandipan@202.142.96.108)
[18:15:42] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[18:16:02] <CrtxReavr> Likes. . . that's a lot of code to sort through.
[18:16:09] <CrtxReavr> s/Likes/Yikes
[18:16:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:16:57] *** Quits: saroy (~Sandipan@43.252.250.113) (Ping timeout: 240 seconds)
[18:17:05] <SnoopJ> It won't be substantially different than how CPython's REPL does it, here.
[18:17:28] <zen_coder> grym: I can also not install additional modules
[18:17:48] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[18:17:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:2da8:9bab:92f4:7c48) (Ping timeout: 240 seconds)
[18:18:03] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:adc1:9aab:893:2eec)
[18:18:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:18:18] <grym> zen_coder: vendor it
[18:18:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[18:19:13] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[18:19:35] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Read error: Connection reset by peer)
[18:19:48] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[18:21:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:21:43] *** Parts: iceneko (~iceneko@user/iceneko) (Leaving)
[18:21:50] <water_27300935_> fakenullie: Python JSON documents define which types may be return of all possible?
[18:22:04] *** Joins: baffodoro (~raffaem@95.74.75.61)
[18:22:11] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[18:22:26] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[18:22:31] <grym> zen_coder: or really, vendor https://github.com/ericvsmith/dataclasses, it's one file
[18:22:33] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bd22-a5cf-0fe1-4c99.res6.spectrum.com)
[18:22:45] <azidhaka> Hi everyone, i've got a dict like this {'one': 5, 'two': 0, 'three': 9, 'four': 0, ...} I want to remove all keys where value = 0. What would be a good on-liner for that?
[18:23:07] <han-solo> `{k:v for k,v in dict.items() if v != 0}`
[18:25:38] <fakenullie> water_27300935_: it could return arbitrary types if you specify parse hooks
[18:25:55] <fakenullie> water_27300935_: with default arguments this should be dict, list, float, int, None
[18:26:17] *** Joins: barry1 (~Thunderbi@222.129.33.141)
[18:26:30] <fakenullie> water_27300935_: bool also
[18:27:23] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Remote host closed the connection)
[18:27:58] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[18:28:30] *** Joins: Pickchea (~private@user/pickchea)
[18:29:49] *** Joins: Payam63 (~Payam@195.178.161.167)
[18:30:07] *** Quits: kwoot_ (~kwoot@78-238-95-45.connected.by.freedominter.net) (Quit: Leaving)
[18:30:15] *** Joins: bahamas (~lucian@188.24.153.252)
[18:30:43] *** Joins: dld (~davidlowr@192.91.235.243)
[18:31:15] *** Joins: saroy|afk (~Sandipan@43.252.250.67)
[18:31:36] <water_27300935_> fakenullie: Except base data types(float, int, None, bool), just only dict and list, is it may be 'tuple' or other?
[18:31:44] <fakenullie> water_27300935_: no
[18:32:05] *** aoei is now known as stella
[18:32:23] *** Quits: pynthon (~pynthon@80-60-40-192.fixed.kpn.net) (Ping timeout: 256 seconds)
[18:33:02] <azidhaka> han-solo: thanks
[18:33:17] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Ping timeout: 240 seconds)
[18:33:37] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Quit: WeeChat 3.4)
[18:33:41] *** Quits: sandipan (~Sandipan@202.142.96.108) (Ping timeout: 245 seconds)
[18:34:04] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[18:34:26] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[18:35:31] *** Joins: toulene (~toulene@user/toulene)
[18:35:45] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[18:35:57] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::48) (Quit: Konversation terminated!)
[18:36:40] *** Joins: crashrep (~crashrep@user/crashrep)
[18:37:09] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[18:37:10] <mickey> im about to jump off the roof or something. i literally spent hours on this and cant figure it out, though it has to be really simple
[18:37:12] <mickey> https://imgur.com/a/oo6pNFO
[18:37:27] *** Joins: jdmark (~jdmark@user/jdmark)
[18:38:03] <mickey> it's a time series too with i being the index
[18:39:16] <mickey> i need to take the value in df1 at time t, and then compile a row with the previous t-1, t-2, ... t-n values which are in df2
[18:39:27] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:cab8:9456:dab5:65e4) (Quit: Konversation terminated!)
[18:40:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:41:33] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:41:51] <mickey> and if that's not enoug, there are holes in the time series so i cant just go by the iloc
[18:42:15] <mickey> would appreicate some help or even hints :/
[18:42:21] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Read error: Connection reset by peer)
[18:42:57] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:43:37] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 240 seconds)
[18:44:48] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[18:45:48] *** Joins: vanessa (~vanessa@103.160.128.7)
[18:45:59] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:46:06] *** Quits: PocketKiller (pocket@user/pocketkiller) (Quit: *evaporates*)
[18:47:07] *** Joins: PocketKiller (pocket@user/pocketkiller)
[18:48:36] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[18:48:57] *** Joins: lispy (~lispy@user/lispy)
[18:50:04] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:50:05] <han-solo> mickey: you could `df.x.shift(...)` to shift the rows ?
[18:50:20] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[18:50:54] <mickey> han-solo I really dont know. Im dead lost with this...
[18:51:06] *** Joins: akk (~akk@75.161.130.204)
[18:51:23] <mickey> also I dont think that's going to handle the time series holes
[18:51:51] <mickey> has to be something with index minus N days every column
[18:52:10] <han-solo> https://bpa.st/PKKQ # maybe not the best, but
[18:52:33] <han-solo> ah...timeseries, i just went by the image you post :|
[18:53:07] <mickey> yeah sorry about that, i was doing my best with mspaint here
[18:53:45] <han-solo> you could create a sample input data and show what's the problem and someone might chime in
[18:54:06] *** Joins: jamea (~jamea@189.237.20.19)
[18:54:23] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:54:52] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[18:56:21] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[18:56:36] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[18:57:16] *** Joins: kts (~kts@103.73.237.80)
[18:57:50] <wyre> what's the difference between build and build_ext in setuptools?
[18:59:54] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[19:00:17] *** Quits: Payam63 (~Payam@195.178.161.167) (Quit: Client closed)
[19:00:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:00:40] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:00:42] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:02:30] *** Quits: kts (~kts@103.73.237.80) (Quit: Konversation terminated!)
[19:04:17] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:04:20] *** Joins: kts (~kts@103.73.237.80)
[19:04:26] *** Quits: bahamas (~lucian@188.24.153.252) (Ping timeout: 256 seconds)
[19:04:32] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[19:04:46] <mickey> han-solo https://imgur.com/kEowZd9
[19:04:51] <mickey> i hope this makes more sense
[19:05:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[19:05:40] <mickey> i cant really start looking for the holes, but the Label is not guaranteed to be complete, in which case the value should be NA. same at the beginning of previous values of df2 dont exist
[19:06:02] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[19:06:23] *** Parts: water_27300935_ (~water_273@182.90.128.201) (WeeChat 3.4)
[19:06:31] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:7c0b:9379:25fa:327a)
[19:06:36] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[19:07:32] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[19:07:50] *** Joins: mrwick (~mrwick@user/mrwick)
[19:07:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:08:25] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:7c0b:9379:25fa:327a) (Client Quit)
[19:08:36] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:08:37] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:b45c:990:a22:27af)
[19:09:17] *** Joins: wakeup (~wakeup@user/wakeup)
[19:09:25] *** Joins: jamea22 (~jamea@189.237.20.19)
[19:09:47] <mickey> apparently shift() supports a freq parameter :)
[19:10:12] *** Quits: OP-0 (~pca290122@185.244.139.8) (Ping timeout: 252 seconds)
[19:10:19] *** Joins: zebrag (~chris@user/zebrag)
[19:10:47] *** Quits: cailt^ (~cailt@50.232.121.75) (Remote host closed the connection)
[19:10:47] *** Joins: Xardas (~Xardas@149.233.51.127)
[19:11:06] *** Joins: magla (~gelignite@55d48440.access.ecotel.net)
[19:11:15] *** Quits: baffodoro (~raffaem@95.74.75.61) (Ping timeout: 256 seconds)
[19:11:28] <wakeup> can't the __init__ method of a parent class be called twice? I guess yes, but what are the consequences?
[19:11:42] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[19:11:44] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 268 seconds)
[19:11:54] <wakeup> also, I am not sure why I am still doing ParentClass.__init__() rather than using super
[19:11:58] <exarkun> wakeup: same as the consequences of calling any other method twice
[19:11:59] <wakeup> I guess super is not recommended
[19:11:59] <grawity> I don't think there is any magic behavior related to __init__ being called
[19:12:08] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[19:12:22] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 256 seconds)
[19:13:11] *** Quits: Blankspace (~Blankspac@user/blankspace) (Ping timeout: 256 seconds)
[19:13:47] <wakeup> in my specific case, I am writing some unit tests with unittest. I have a parent class with some unit tests for several other subclasses. The thing is that in one of the child classes I need to pass an argument, say, x, to the parent class, and this changes the behaviour of how to test... I was wondering if I should create, say, 2 separate
[19:13:48] <wakeup> subclasses for the same method in order to test this different functionality
[19:13:50] <wakeup> doesn't look right
[19:14:43] <wakeup> I know this is a bit confusing
[19:14:46] <wakeup> I will think about it
[19:14:54] <jinsun__> it is bad because, normally the author of the class expects the init to be called only once per instance, and they won't support you if you call init twice
[19:14:55] <exarkun> you all your tests on a mixin
[19:15:04] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3119:cbb9:a9db:3cc5)
[19:15:04] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3119:cbb9:a9db:3cc5) (Changing host)
[19:15:04] *** Joins: skapata (~Skapata@user/skapata)
[19:15:06] <exarkun> mix that in to a new subclass for each thing you want to test
[19:15:08] <wakeup> yea, I am actually using some kind of mixin
[19:15:16] <exarkun> provide a uniform interface for getting the thing that each TestCase needs to test
[19:15:26] <SnoopJ> wakeup, calling __init__() on the same class more than once is pretty weird, if you find yourself reaching for that, it's definitely time to step back and re-assess
[19:15:36] <wakeup> yea
[19:15:43] <wakeup> that's why I didn't want to do that
[19:15:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:16:17] <wakeup> ok, let me describe more in detail my situation
[19:16:21] <SnoopJ> FWIW, pytest can act as a unittest runner, and its fixtures provide very nice ways to do this kind of configuration
[19:16:25] <wakeup> let's say I have class A that contains the "base unit tests"
[19:16:28] <wakeup> for method f
[19:16:32] <wakeup> and other methods
[19:16:34] *** Joins: Payam5 (~Payam@195.178.161.167)
[19:16:56] *** Joins: Blankspace (~Blankspac@user/blankspace)
[19:16:57] <wakeup> now I create a subclass B, which contains specific tests just for f
[19:17:08] <wakeup> so far, nothing special
[19:17:12] <exarkun> don't do that part
[19:17:19] <wakeup> what?
[19:17:29] * SnoopJ doesn't understand what the distinction between "base unit tests for f" and "specific tests for f" is
[19:17:32] <exarkun> make a new, unrelated class for tests that are not general
[19:17:43] <wakeup> "base unit tests for f and other methods"
[19:17:56] <exarkun> you don't win anything by mixing these two groups of tests together in one class, apart from extra complexity
[19:18:02] <SnoopJ> wakeup, can you share some code with us?
[19:18:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:18:21] *** Joins: mxp (~mxp@185.16.205.131)
[19:18:24] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:18:26] *** Joins: Blankspace85 (~Blankspac@user/blankspace)
[19:20:19] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:21:24] <wakeup> in my case, I'm writing unit tests for multiple sorting algorithms
[19:21:38] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[19:21:41] *** Quits: Blankspace (~Blankspac@user/blankspace) (Ping timeout: 256 seconds)
[19:22:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[19:22:20] *** Joins: baffodoro (~raffaem@95.74.75.61)
[19:22:40] <wakeup> so I am testing roughly the same behaviour, i.e. if those algorithms sort correctly the lists
[19:22:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:23:04] *** Joins: wakeup (~wakeup@user/wakeup)
[19:23:11] *** Quits: Payam5 (~Payam@195.178.161.167) (Quit: Client closed)
[19:23:26] <SnoopJ> in pytest, I would do that with a parametrized test, passing in the sorting function to the test
[19:24:02] <exarkun> wakeup mentioned they're using unittest, repeatedly
[19:24:32] <wakeup> so all sorting algorithms have at least one parameter which is the same, a, the list
[19:24:43] <wakeup> but some algorithms require other parameters
[19:24:56] <SnoopJ> exarkun, and pytest can act as a unittest runner
[19:24:57] <exarkun> wakeup: Right.  You need to put a uniform interface on top of all of them for your tests.
[19:24:59] <wakeup> so I wrote a base class with the tests for the basic behaviour and the defaults
[19:25:05] *** Joins: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[19:25:09] <wakeup> and subclasses for specifics of each sort
[19:25:25] *** Joins: jmd` (~user@p2e5567c3.dip0.t-ipconnect.de)
[19:25:34] <exarkun> wakeup: Your subclasses are kind of like that uniform interface, but doing it with subclasses leaves a lot of room for unnecessary complexity
[19:25:35] *** Joins: noobaroo (~solas@user/noobaroo)
[19:25:38] <SnoopJ> wakeup, can you share some code with us?
[19:25:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:25:54] *** Quits: s4msung (bZt8T9wHxn@user/s4msung) (Quit: s4msung)
[19:26:04] <exarkun> wakeup: just wrap each sort function in a uniform interface
[19:26:09] <noobaroo> Hey all, do you guys have any recommendations for the awesomest PyQt software?
[19:26:27] <wakeup> what do u mean by uniform inter?
[19:26:34] *** Joins: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk)
[19:26:35] *** Joins: Guest48 (~Guest48@213.147.114.216)
[19:26:51] *** Quits: jmd (~user@p200300ea5f49c2cec79e11c87e1f4000.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:26:57] <SnoopJ> if the functions have a similar signature, they can be injected into a test that doesn't care which specific function is being tested
[19:27:16] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Remote host closed the connection)
[19:27:20] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[19:27:21] <llanhmod> uni = 1, from = structure interface = well..interface
[19:27:32] <SnoopJ> i.e. if they are all of the form `def sortfunc(lst: list) -> list: ...` then the test doesn't really care *which* sorting function it is, just that it takes a list and outputs a list.
[19:27:37] *** Joins: ymwm_ (~yingmanwu@117.26.70.231)
[19:27:44] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[19:28:07] <wakeup> yes, but some sorting algorithms have more than the parameter a (the list), as I said
[19:28:31] <SnoopJ> then you may have to create wrapper functions that bring them all to a uniform interface
[19:28:47] <SnoopJ> this conversation would be much easier to have with some common code between us, though
[19:28:49] *** Quits: ymwm_ (~yingmanwu@117.26.70.231) (Client Quit)
[19:28:58] <wakeup> I understand that
[19:30:08] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Quit: WeeChat 3.4)
[19:30:25] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[19:30:45] *** Quits: Blankspace85 (~Blankspac@user/blankspace) (Ping timeout: 256 seconds)
[19:31:06] <SnoopJ> From what I've understood of the description (which may or may not be what your code is like), you might be well-served by a TestCase factory that accepts a function and some parameters.
[19:31:22] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:31:39] *** Quits: esther (~esther@154.16.169.4) (Remote host closed the connection)
[19:31:55] *** Joins: esther (~esther@154.16.169.4)
[19:32:11] *** Joins: Blankspace (~Blankspac@user/blankspace)
[19:33:30] *** Joins: s4msung (z4rgS71Nb1@user/s4msung)
[19:33:49] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[19:34:04] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:34:08] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[19:34:17] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[19:34:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:35:00] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[19:35:01] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:35:09] *** Joins: bahamas (~lucian@188.24.153.252)
[19:35:14] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[19:35:33] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[19:36:18] <jinsun__> noobaroo: https://en.wikipedia.org/wiki/PyQt#Notable_applications_that_use_PyQt
[19:38:12] *** Joins: trace987 (~trace@user/trace)
[19:39:03] *** Quits: sawk (~quassel@78.6.80.66) (Read error: Connection reset by peer)
[19:39:06] <SnoopJ> wakeup, what I mean is something like this: https://bpa.st/EH5Q
[19:40:00] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:40:21] <wakeup> SnoopJ yes, looks like the factory pattern is appropriate for my purposes
[19:40:24] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[19:40:28] <wakeup> but right now I am not creating any Test object
[19:40:31] <wakeup> I just defined the class
[19:40:38] <wakeup> and then call unittest rom the command-line
[19:40:42] <SnoopJ> that code also just defines classes.
[19:40:42] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[19:40:43] <wakeup> and it retrieves the test cases
[19:40:59] <wakeup> ja, right
[19:41:00] <wakeup> yea
[19:41:02] <wakeup> u right
[19:41:33] <wakeup> these design patterns that they made us learn at university actually can be useful :P
[19:41:42] <wakeup> factory is one of them
[19:41:44] <wakeup> observer is another
[19:41:45] <SnoopJ> this is the way unittest sees the world. it's often kind of clumsy, which is why using pytest as a unittest runner is such an attractive prospect
[19:42:10] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[19:42:34] *** Joins: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[19:42:41] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:20] *** Quits: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Client Quit)
[19:43:21] *** Quits: randall (~randall@user/randall) (Read error: Connection reset by peer)
[19:43:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:43:48] *** Quits: toulene (~toulene@user/toulene) (Quit: ZNC - https://znc.in)
[19:43:52] <wakeup> I don't call unittest.main() though... I guess this is only necessary if you call python my_test_module.py rather than calling unittest from the cmd
[19:43:52] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:43:55] <wakeup> righ?
[19:44:15] *** Joins: humberto1 (~humbertow@189.236.30.197)
[19:44:24] <SnoopJ> the equivalent pytest spelling to the above is: https://bpa.st/TR6Q
[19:44:55] <SnoopJ> wakeup, I believe that's the case yea
[19:45:22] <wakeup> I know that that there might be more sophisticated testing libraries, but for now I will stick with unittest for simplicity
[19:45:34] <wakeup> which library does u use for integration test, though?
[19:45:35] <SnoopJ> my point is precisely that it is *not* simple here
[19:45:39] *** Joins: Barones (~Barones@user/Barones)
[19:45:42] *** Joins: Guest26 (~Guest26@157.99.174.51)
[19:45:48] <Guest26> hello
[19:45:54] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:b45c:990:a22:27af) (Quit: Client closed)
[19:46:08] <jinsun__> I find pytest simpler
[19:46:20] *** Quits: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[19:46:20] <Guest26> can I ask for help? I'm so rusted in python
[19:46:25] <SnoopJ> wakeup, I use pytest for all of my testing
[19:46:31] <SnoopJ> Guest26, "Anything Python is on-topic"
[19:46:34] <wakeup> well, at least, you're not so rusted in rust
[19:46:35] <wakeup> hahah
[19:47:01] <SnoopJ> wakeup, I have occasionally written a unittest-style class for use with pytest, when it makes sense, though.
[19:47:02] *** Quits: bahamas (~lucian@188.24.153.252) (Ping timeout: 252 seconds)
[19:47:02] <jinsun__> the only simplicity you get with unittest is not having to install a package, which is not much
[19:47:03] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:47:30] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[19:47:35] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:47:55] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:48:26] <Guest26> I have  a big dic with key = an ID , value is a list of tuple like (Another ID, sequence)
[19:48:27] <Guest26> How can I quickly get the common "Another IDs" between all dic keys? (and eventually get rid of Another ID not present everywhere
[19:48:30] <Wooble> "we based this API on java because it was simple" isn't a sentence you hear too often :)
[19:49:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:49:32] *** Joins: GiverOfDomains (sid538075@id-538075.tinside.irccloud.com)
[19:49:54] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[19:50:35] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[19:51:49] <jinsun__> Guest26: can you paste how you dict looks https://bpa.st/ and what your expected output is?
[19:52:27] *** Parts: Common (~Common@096-033-221-075.res.spectrum.com) (Leaving)
[19:52:50] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[19:52:50] *** Joins: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net)
[19:53:22] *** Quits: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[19:53:59] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[19:54:17] *** Joins: randall (~randall@user/randall)
[19:54:36] <Guest26> it's really big dict, I m not sure how to paste it in text format
[19:54:43] *** Joins: FastZ (~FastZ@pool-96-231-49-241.washdc.fios.verizon.net)
[19:54:45] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[19:55:08] <Wooble> a smaller example would work too if it's too large to paste
[19:55:57] *** Quits: esther (~esther@154.16.169.4) (Ping timeout: 240 seconds)
[19:56:50] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:56:51] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[19:57:12] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:57:18] <jinsun__> yeah you can make a smaller dict with only few keys and paste that maybe
[19:57:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:58:24] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:59:02] *** Joins: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[19:59:06] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[19:59:20] *** Joins: esther (~esther@154.16.169.8)
[20:00:04] *** Joins: brjl (~brejela@user/brejela)
[20:00:24] *** Joins: diggydiggyhole (~diggydigg@cpc81277-enfi21-2-0-cust238.20-2.cable.virginm.net)
[20:00:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:00:56] *** Joins: jamea (~jamea@189.237.20.19)
[20:01:24] *** Joins: lakrass (~lakrass@user/lakrass)
[20:02:19] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:02:30] <Guest26> jinsun__ https://bpa.st/FSBQ
[20:02:33] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:b45c:990:a22:27af)
[20:02:49] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[20:03:21] <Guest26> i'm not sure if its clear
[20:03:29] *** Joins: nomic (~nomic@185.217.117.228)
[20:03:34] *** Parts: brjl (~brejela@user/brejela) (Brejela says goodbye!)
[20:03:55] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[20:04:01] <jinsun__> what is 166_LMG_15945T? the key?
[20:04:07] <Guest26> yeah
[20:04:08] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:04:11] *** Quits: jamea22 (~jamea@189.237.20.19) (Ping timeout: 256 seconds)
[20:04:27] <Guest26> list is the type of value of dict
[20:04:30] <Guest26> then the size
[20:04:33] <Guest26> then an example
[20:05:21] *** Joins: lakrass (~lakrass@user/lakrass)
[20:05:23] *** Joins: lastshell (~lastshell@user/lastshell)
[20:05:50] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[20:06:50] *** Quits: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk) (Ping timeout: 252 seconds)
[20:06:56] *** Joins: lakrass (~lakrass@user/lakrass)
[20:07:13] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[20:07:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[20:08:15] <jinsun__> Guest26: so you can get all the common "Another IDs" by doing `common_ids = set.intersection(*(set(x[0] for x in v) for v in d.values()))`
[20:08:24] <Guest26> ah good
[20:08:30] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 252 seconds)
[20:08:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:08:53] <jinsun__> and your desired output would be `output = {k: [x for x in v if x[0] in common_ids] for k, v in d.items()}`
[20:08:55] *** Joins: OP-0 (~pca290122@185.244.139.10)
[20:09:17] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:09:37] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[20:09:54] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:10:00] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[20:10:25] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[20:10:26] <betuxy> hey guys, i want to parse a yaml file in python which also contains vaulted values. i do have an ansible vault file, how can i use it to decrypt the values?
[20:10:31] <betuxy> https://termbin.com/wfx1
[20:10:46] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:11:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[20:11:33] *** Quits: diggydiggyhole (~diggydigg@cpc81277-enfi21-2-0-cust238.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[20:11:48] *** Joins: subopt (~subopt@2603-8081-2302-459a-c898-33b3-5f03-5232.res6.spectrum.com)
[20:12:21] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[20:12:53] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[20:12:57] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[20:13:04] <Guest26> jinsun__ wow it worked! thank you. But now i'm a bit concerned by my results lol
[20:13:27] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[20:13:45] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[20:13:58] <han-solo> betuxy: `from_file` takes a `vault_secrets` arg
[20:14:32] *** Joins: diggydiggyhole (~diggydigg@cpc81277-enfi21-2-0-cust238.20-2.cable.virginm.net)
[20:14:37] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[20:15:03] <mickey> trying my luck again maybe someone has time for me. i have multiple dfs, but say df1 and df2 for simplicity, and i need to basically take previous values of df2 and merge as a row to df1, i tried to illustrate it here https://imgur.com/kEowZd9
[20:15:30] <jinsun__> Guest26: concerned? if it is because it is not clear what's going on, you can break down those comprehensions into simpler lines
[20:15:46] <Guest26> no i think its pretty straightforward
[20:15:46] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 245 seconds)
[20:15:51] <mickey> i played some more with shift() and got to df3.Value_y.shift(periods=idx, freq="D")[idx:idx+5] but it's hardly good enough
[20:16:15] <betuxy> han-solo: thanks
[20:16:22] <Guest26> but I mean running this on my dataset rise concerns about the dataset
[20:17:17] <mickey> or in larger scope, i have this https://dpaste.org/9aNU but that's broken in so many ways
[20:17:32] *** Quits: undt (undt@gateway/vpn/protonvpn/undt) (Remote host closed the connection)
[20:18:04] <Guest26> like, going from 1415 lines in my dataset, to 600 then 435 then 60 after the code you help me with
[20:19:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:19:17] *** Joins: bluedust (~bluedust@103.165.167.61)
[20:19:18] <Guest26> anyway thank you a lot and have a nice day
[20:19:24] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[20:20:12] *** Quits: Guest26 (~Guest26@157.99.174.51) (Quit: Client closed)
[20:20:15] <han-solo> derp s/from_file/from_yaml/
[20:21:30] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:21:45] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[20:21:48] <betuxy> han-solo: yeah i figured, could you point me to some documentation I have trouble finding information about how it works
[20:21:50] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[20:22:15] *** Parts: Guest48 (~Guest48@213.147.114.216) ()
[20:22:29] <mickey> (And its a time series, just a reminder)
[20:22:51] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:22:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:23:06] <betuxy> as example what i really want is getting username and unvaulted password from a list mysql_users in a file.yml
[20:23:34] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:23:46] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[20:24:38] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:27:26] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[20:27:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 268 seconds)
[20:27:46] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 260 seconds)
[20:27:55] <mickey> and.. i got it. HOURS for this:
[20:27:57] <mickey> for i in range(1,15):
[20:27:57] <mickey>     df3[f't-{i}'] = df3.Value_y.shift(i)
[20:28:01] <mickey> fml.
[20:28:09] <jinsun__> mickey: that expected output in the image just seems random, why are there 3 columns for df2 and why do the values not align with the dates in the original df
[20:28:30] <mickey> jinsun__ it's previous values of the second df
[20:28:49] <mickey> t for df1, and t-1, t-2, ..., t-n for df2 in each row
[20:29:01] *** Quits: wib_jonas (~wib_jonas@164.215.125.58) (Quit: Client closed)
[20:29:07] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:29:18] <jinsun__> okay so that's why shift
[20:29:35] <jinsun__> instead of looping and adding columns it is better to pd.concat
[20:30:17] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[20:30:40] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[20:30:47] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:dfe7:3448:e149:8d74) (Quit: Leaving)
[20:31:25] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[20:31:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:31:56] <mickey> can you explain that please?
[20:33:04] *** Quits: diggydiggyhole (~diggydigg@cpc81277-enfi21-2-0-cust238.20-2.cable.virginm.net) (Remote host closed the connection)
[20:33:06] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:33:14] *** Joins: caildt^ (~cailt@50.232.121.75)
[20:33:14] *** Joins: wac (~wac@user/wac)
[20:33:16] *** Joins: ljkimz (~ljkimz@97.119.167.32)
[20:33:28] *** Joins: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com)
[20:33:30] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[20:33:47] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[20:33:51] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[20:34:03] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a11a:9fad:b169:74bb) (Remote host closed the connection)
[20:34:14] <jinsun__> something like df3 = pd.concat([df3] + [df3.Value_y.shift(i) for i in range(1, 15)], axis=1)
[20:34:25] <ljkimz> I want to create a venv that includes pip and ALL of its dependencies. Looks like when I pre-install python3-pip and create a venv with it pip is installed in the venv but it's dependencies come from the system. I want to build a self-contained venv. Is there a best way to do this?
[20:34:27] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b1b7:fbcf:dd90:fada)
[20:35:24] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[20:35:24] <SnoopJ> ljkimz, does passing --copies to venv do what you want? The default on Linux is usually to use symlinks
[20:35:25] <dignissimus> I'm building software and on my system, python refers to python3, in testing I realised that this isn't universal and on one machine `python` doesn't refer to anything. I'm running a python script from bash, how should I best deal with this?
[20:35:47] <blei> sudo apt install python-is-python3
[20:35:47] *** Staunch_ is now known as Staunch
[20:36:02] <ljkimz> I don't think it will. An example of a missing module is 'xml'. There's not even a symlink to this module in the venv
[20:36:04] <SnoopJ> dignissimus, do you ever want not-3.x?
[20:36:20] <dignissimus> blei: Do I need to ask users running debian/ubuntu to run that in order to install?
[20:36:32] *** Quits: kujo1 (~kujo@188.166.12.52) (Ping timeout: 240 seconds)
[20:36:36] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:36:41] <blei> its a convenience package
[20:36:46] <dignissimus> SnoopJ: Never, but I just want to make sure the program works on all machines
[20:36:50] <SnoopJ> dignissimus, use `python3` then
[20:36:51] <blei> yes
[20:37:09] <dignissimus> Ok, thank you!
[20:37:33] *** Joins: kujo1 (~kujo@188.166.12.52)
[20:39:04] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Quit: Leaving.)
[20:39:07] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:39:18] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[20:39:43] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[20:39:44] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:b45c:990:a22:27af) (Quit: Client closed)
[20:40:05] <SnoopJ> ljkimz, that sounds more like you want a standalone installation of Python (and its standard library) than a virtual environment
[20:40:49] *** Joins: lakrass (~lakrass@user/lakrass)
[20:41:03] <han-solo> betuxy: i just checked their src https://github.com/ansible/ansible/blob/0c4c18bc04c562755a368df67fce943ca15418ee/lib/ansible/parsing/utils/yaml.py#L59
[20:41:09] <Wooble> (in which case, use pyenv)
[20:41:13] <SnoopJ> pyenv +1
[20:41:24] <ljkimz> SnoopJ not exactly. I'm doing a multi-stage docker build and I don't want to install python3-pip on the final image. I'd like everything pip needs just to be in the venv that I copy over
[20:41:55] <SnoopJ> ljkimz, pip already vendors its own dependencies, but *those* may assume the standard library (which is where `xml` comes from) exists.
[20:42:05] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[20:42:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:6182:a9f4:914:efd7) (Remote host closed the connection)
[20:42:10] *** Joins: jamea (~jamea@201.77.110.253)
[20:42:34] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:42:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:43:13] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:43:21] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:43:49] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[20:43:52] <SnoopJ> a venv that has pip *should* work without python3-pip if the python3 package is installed, AFAICT. I would not count on this behavior, personally.
[20:44:05] *** Joins: thurs4 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:44:15] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:44:50] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[20:44:50] *** thurs4 is now known as thurs
[20:45:33] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:46:09] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[20:46:12] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[20:46:43] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[20:46:45] <ljkimz> SnoopJ it doesn't. I throws an error that there is no xml module
[20:47:09] <SnoopJ> ljkimz, that sounds like a problem with your system interpreter, `xml` and the rest of the standard library are provided by the python3 package.
[20:47:18] <ljkimz> I could explicitly install xml into the venv but there may be other pip dependencies not captured by trying to go ala carte
[20:47:32] <SnoopJ> As I said, pip already vendors its own dependencies
[20:47:37] <betuxy> han-solo: what is meant by python datastructure in this case and how do i access it values? i tried to print it or json.dumps it but got AnsibleVaultEncryptedUnicode is not JSON serializable
[20:47:45] <ljkimz> Apparently not for Photon3. When you install python3-pip it also installs python3-xml
[20:48:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:48:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:48:35] *** Joins: humberto1 (~humbertow@189.236.30.197)
[20:49:19] <tdsmith> that's a decision your OS vendor has made. arguably it's not a great one!
[20:49:22] <SnoopJ> what distribution is this? I don't see python3-xml in either Ubuntu or Debian.
[20:49:40] <SnoopJ> (recent versions, that is; possibly this used to be a thing?)
[20:49:43] <ljkimz> Photon3
[20:50:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[20:50:15] <ljkimz> I think it tries to be lightweight so probably separates everything out
[20:50:18] <SnoopJ> I see. Well, whatever steps are necessary to install the complete Python stdlib on your platform, you should do that.
[20:50:34] <SnoopJ> (or use pyenv because this is indeed a weird thing to do)
[20:50:36] <ljkimz> ;-)
[20:51:19] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:51:55] *** Quits: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se) (Quit: Leaving)
[20:51:55] *** Quits: toolbox_ (~toolbox@h213-21-123-59.cust.a3fiber.se) (Quit: Leaving)
[20:52:06] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:52:09] <han-solo> betuxy: what did you try to json dumps ?
[20:52:32] *** Quits: barry1 (~Thunderbi@222.129.33.141) (Quit: barry1)
[20:52:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:53:00] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:53:00] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[20:53:01] <han-solo> could you try `json.dumps(params, cls=AnsibleJSONEncoder, vault_to_text=True)` ?
[20:53:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:53:32] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:54:03] <han-solo> i must say, i don't have much idea about this vault thing
[20:54:56] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:55:07] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:55:08] *** Joins: bahamas (~lucian@188.24.153.252)
[20:55:41] <betuxy> han-solo: `ValueError: not enough values to unpack (expected 2, got 1)`
[20:55:51] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:56:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:56:34] *** Quits: rtsn (~nstr@h-98-128-229-174.NA.cust.bahnhof.se) (Changing host)
[20:56:34] *** Joins: rtsn (~nstr@user/rtsn)
[20:56:38] <han-solo> welp
[20:56:39] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:56:54] <betuxy> han-solo: same for me i'm just familiar with the cli tools to the point where i can use it in production
[20:57:49] *** Joins: Wh0 (~V@103.249.233.58)
[20:58:19] <han-solo> anyway, i guess the `valut_secrets` is something like a list of string with values '$ANSIBLE_VAULT;1.1;AES256...' or something
[20:58:30] *** Quits: Deana (~Deana@178.46.18.238) (Quit: Konversation terminated!)
[20:58:49] <han-solo> sadly can't find any tests with the `valut_secrets`
[20:59:58] *** Quits: bahamas (~lucian@188.24.153.252) (Ping timeout: 260 seconds)
[21:00:07] *** Joins: pflanze (~pflanze@61-41-178-139.dyn.fiber.qlnet.ch)
[21:00:08] <han-solo> oh, you managed to get the data(or something) using the valut_secrets right ?
[21:00:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[21:00:45] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:01:00] *** Joins: aphysically (~aphysical@user/aphysically)
[21:01:08] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:01:29] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:01:29] *** Quits: rsx (~dummy@ppp-188-174-134-226.dynamic.mnet-online.de) (Quit: rsx)
[21:01:46] <betuxy> han-solo: no we have just one password (vault secret in a file) and   _data = from_yaml(file, vault_secrets='/home/me/.ansible/vault.txt') doesnt throw any errors, but I wasnt able to retrieve any data or information a
[21:02:05] <pflanze> How can I use the class name in a type declaration for a method inside that class? `class Foo:\ndef foo() -> Foo:\n...`
[21:02:14] <han-solo> betuxy: oh, Okay
[21:02:18] *** Quits: infidel (~ecrump@75.161.247.56) (Ping timeout: 256 seconds)
[21:02:29] <pflanze> mypy is happy with that, but the runtime isn't.
[21:03:17] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: Reconnecting)
[21:03:31] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[21:04:03] *** Seto_Kaiba is now known as Hunterkll
[21:04:34] <mickey> jinsun__ that concat doesnt work
[21:04:41] <han-solo> pflanze: python 3.7+ ?
[21:04:51] <han-solo> `from __future__ import annotations`
[21:05:14] *** iNKa is now known as Brocker
[21:05:21] <pflanze> han-solo, yes, python 3.9.2; __future__ for me?
[21:05:47] <han-solo> yep
[21:05:55] <pflanze> OK, looking into that
[21:06:27] *** Joins: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net)
[21:06:50] <pflanze> Aha, thanks
[21:07:09] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:07:29] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:07:38] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:07:54] <noobaroo> Can python 3.9 do everything python 2.7 can do?
[21:08:03] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:08:04] <han-solo> in the near future you can do this https://www.python.org/dev/peps/pep-0673/
[21:08:08] <han-solo> pflanze: ^
[21:08:18] *** Joins: rje (~textual@65.141.156.170)
[21:08:26] <grym> noobaroo: yes
[21:08:31] <mythos> and more
[21:08:38] <grym> like get bug fixes
[21:08:40] <grym> >:)
[21:08:48] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:08:54] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:09:27] <jinsun__> mickey: oh well I didn't test that exact line, but pd.concat can do it, and repeatededly adding columns one by one is not good for performance of some operation, you get performance warning if you do it too much
[21:09:48] <mickey> its a one time thing so i dont mind performance much
[21:09:53] <pflanze> han-solo, thanks, interesting
[21:10:16] <mickey> as soon as i have the table done i can move on to what i really need to do lol
[21:10:45] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[21:12:30] <dignissimus> I hate making things compatibile, I can't say "it works on my machine" XD
[21:12:37] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[21:12:47] <han-solo> noobaroo: well python3 can't do `1+2` stringify. Take that python3
[21:12:49] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:12:51] <dignissimus> I used the following, my code errors on 3.8 is there a workaround?: https://www.python.org/dev/peps/pep-0584/
[21:12:51] *** Quits: avu (~jan@user/avu) (Quit: reboot)
[21:12:57] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:13:26] <jinsun__> {**d1, **d2}
[21:13:38] <dignissimus> Thanks!
[21:13:39] *** Joins: minip (~minip@user/minip)
[21:14:01] *** Joins: avu (~jan@user/avu)
[21:14:11] *** Joins: marcello1 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[21:14:29] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:14:39] *** Joins: infidel (~ecrump@97-123-161-207.albq.qwest.net)
[21:15:21] *** Quits: FullTimeIndian (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 245 seconds)
[21:15:54] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:18:06] <mickey> any idea why line 10 would throw a key error when the outer loop is at the second iteration? it's not something with the files themselves (i changed the order and it happens with every file)
[21:18:09] <mickey> https://dpaste.org/Q1np
[21:18:36] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:adc1:9aab:893:2eec) (Ping timeout: 240 seconds)
[21:18:59] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[21:19:34] <mickey> the traceback is ValueError: Wrong number of items passed 2, placement implies 1, then KeyError about the df3[f'{dst[:3]}-{i}']
[21:19:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:20:16] <mickey> it works fine for the first iteration of the outer for
[21:20:27] *** Quits: FastZ (~FastZ@pool-96-231-49-241.washdc.fios.verizon.net) (Quit: Bye now!)
[21:22:45] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c)
[21:22:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:22:57] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:26:10] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b1b7:fbcf:dd90:fada) (Ping timeout: 268 seconds)
[21:26:13] *** Joins: paul424 (~tom@ip-5-172-236-96.multi.internet.cyfrowypolsat.pl)
[21:27:02] *** Joins: bahamas (~lucian@84.232.140.52)
[21:28:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:29:33] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:29:50] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:29:56] *** Quits: caildt^ (~cailt@50.232.121.75) (Remote host closed the connection)
[21:30:05] *** Joins: hams (~hams@73.232.205.0)
[21:30:05] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[21:30:05] *** Joins: hams (~hams@user/hams)
[21:30:17] *** Quits: Juhaz_ (juhaz@hilla.kapsi.fi) (Remote host closed the connection)
[21:32:26] *** Joins: Betal (~Betal@user/betal)
[21:32:44] *** Quits: jmd` (~user@p2e5567c3.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[21:33:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:33:32] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:33:42] *** Joins: Deana (~Deana@178.46.18.238)
[21:34:36] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Ping timeout: 256 seconds)
[21:36:09] *** Joins: tableflip (~tableflip@121.99.197.93)
[21:36:19] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[21:37:06] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:37:23] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[21:37:32] *** Joins: kosh (~kosh@user/kosh)
[21:38:54] *** dcaro is now known as dcaro_away
[21:39:07] *** Joins: thiras (~thiras@user/thiras)
[21:41:38] *** Joins: djapo (~archangel@user/djapo)
[21:43:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:44:12] *** Quits: jay-m1262 (~jay-m@154.126.169.74) (Ping timeout: 252 seconds)
[21:44:12] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 252 seconds)
[21:44:15] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:44:18] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 250 seconds)
[21:44:29] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 256 seconds)
[21:44:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:44:57] <mickey> damn it, was missing a df3 = there :/
[21:45:00] *** Joins: agumonkey (~user@88.163.231.79)
[21:45:23] *** Joins: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:45:39] *** Quits: Deana (~Deana@178.46.18.238) (Quit: Konversation terminated!)
[21:46:13] *** Joins: linux_dream (~isaac@37.172.253.155)
[21:46:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[21:46:30] *** cdown_ is now known as cdown
[21:47:18] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[21:47:55] *** Quits: ejjfunky (~ejjfunky@125.164.16.115) (Read error: Connection reset by peer)
[21:48:03] *** Joins: Pickchea (~private@user/pickchea)
[21:49:56] *** Quits: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:50:09] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:50:20] *** Quits: saroy|afk (~Sandipan@43.252.250.67) (Remote host closed the connection)
[21:50:20] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[21:50:58] *** Quits: ljkimz (~ljkimz@97.119.167.32) (Quit: Client closed)
[21:51:27] *** Quits: Vision-_- (~Vision@097-087-115-181.res.spectrum.com) (Quit: Leaving)
[21:52:04] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:383e:dcb3:f7da:1b4a) (Ping timeout: 268 seconds)
[21:53:10] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[21:53:17] *** Joins: humberto1 (~humbertow@148.204.6.250)
[21:53:21] <betuxy> How could I extract each ansible-vault part of the file and write it into tmp with the username as filename? is a multiline regex a thing maybe? https://termbin.com/ht9x
[21:53:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:53:52] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[21:53:52] *** Quits: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[21:53:58] <betuxy> wrong quotes: https://termbin.com/1b9r
[21:54:11] <jinsun__> nedbat: a6 available https://github.com/pyenv/pyenv/pull/2266
[21:54:36] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[21:55:12] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:55:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:55:50] <mickey> thanks for the help everyone!
[21:56:08] *** Joins: hams (~hams@73.232.205.0)
[21:56:08] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[21:56:08] *** Joins: hams (~hams@user/hams)
[21:56:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:57:26] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[21:59:01] *** Quits: cren (cren@tilde.team) (Quit: zzz)
[21:59:03] *** Quits: nomn (nomn@user/nomn) (Quit: WeeChat 3.4)
[21:59:28] *** Quits: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be) (Ping timeout: 250 seconds)
[22:00:48] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-117.range86-160.btcentralplus.com)
[22:01:15] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[22:01:53] *** Joins: wolfshappen (~waff@irc.furworks.de)
[22:01:53] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:02:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c) (Ping timeout: 240 seconds)
[22:02:41] *** Joins: stockh0lm (~Andreas@p200300d2c7089a00605a96c4aa491f57.dip0.t-ipconnect.de)
[22:04:01] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[22:04:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[22:05:02] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 272 seconds)
[22:05:35] *** Joins: visl (visl@user/visl)
[22:06:25] *** Joins: gareppa (~gareppa@user/gareppa)
[22:07:49] *** Quits: Wh0 (~V@103.249.233.58) (Quit: Leaving)
[22:08:24] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[22:08:24] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:08:34] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 250 seconds)
[22:09:20] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:09:34] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:10:04] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[22:10:20] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[22:10:21] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[22:11:33] *** Joins: wakeup (~wakeup@user/wakeup)
[22:11:41] *** JohnDoe1 is now known as JohnDoe2
[22:12:14] *** Joins: tomg (~tomg@user/tomg)
[22:12:52] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[22:13:08] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[22:13:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:13:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:14:26] *** Quits: linux_dream (~isaac@37.172.253.155) (Quit: WeeChat 3.4)
[22:14:32] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (Ping timeout: 240 seconds)
[22:14:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[22:14:46] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[22:15:07] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[22:16:52] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[22:17:40] *** Quits: daevski (~daevski_@76-253-184-89.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 250 seconds)
[22:17:43] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[22:20:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:20:18] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[22:20:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[22:22:17] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 240 seconds)
[22:22:20] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[22:22:25] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[22:22:31] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Client Quit)
[22:23:28] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9143-8133-0550-4f7a.res6.spectrum.com)
[22:24:15] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:24:26] *** Joins: OP-0 (~pca290122@185.244.139.10)
[22:24:40] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:24:57] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[22:25:25] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:25:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:25:41] *** Joins: dopry (~dopry@68.161.216.72)
[22:25:51] *** Joins: Auron (Auron956@user/auron)
[22:26:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[22:27:15] *** Joins: ATAD_ (~ATAD@user/atad)
[22:27:59] <dopry> I've started experiencing issues with my virtual envs on a new windows machine. I think it may have to do with having windows 11... I have legacy venvs I setup before my machine upgraded from windows 10 to windows 11 that still work... I was wondering if anyone is around who is familiar enough with venv on windows to help me troubleshoot.
[22:28:14] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:28:24] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[22:29:30] *** NotThatRPG is now known as NotThatRPG_away
[22:30:30] <exarkun> dopry: The best use of a virtualenv is to delete it at the first hint it might have gone bad, then create a replacement for it from your package metadata.
[22:31:00] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[22:31:38] *** Quits: morrigan_ (~m0rr1gan@user/m0rr1gan) (Ping timeout: 272 seconds)
[22:31:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:31:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:32:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:32:36] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[22:32:52] *** Joins: Feri (~Feriun@user/Feriun)
[22:32:58] <Feri> Hello everyone
[22:33:05] <Feri> Can you help me with this syntax!
[22:33:10] <Feri> {'a': 1, **{'b': 2}}  # => {'a': 1, 'b': 2}
[22:33:19] <Feri> What exactly does it doing?
[22:33:32] <SnoopJ> Feri, it "unpacks" the second dictionary in place
[22:33:33] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:34:05] <Feri> WOW
[22:34:07] <Feri> Thank ya
[22:34:17] *** Joins: caildddddt^ (~cailddddd@50.232.121.75)
[22:34:32] <SnoopJ> described here: https://docs.python.org/3/reference/expressions.html#dictionary-displays
[22:34:51] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[22:35:31] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[22:35:48] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[22:36:03] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.182) (Ping timeout: 250 seconds)
[22:37:23] *** Quits: Feri (~Feriun@user/Feriun) (Client Quit)
[22:39:08] <dopry> exarkun, I get that... the issue is that new venvs are not working at all...
[22:39:39] <dopry> exarkun, I posted a bug for the issue here, https://bugs.python.org/issue46950
[22:40:02] <dopry> I've been able to copy old venvs and get them to work... but creating a new venv is broken.
[22:40:19] *** Joins: savolla (~quassel@95.10.239.22)
[22:40:25] *** Joins: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be)
[22:40:37] <dopry> I suspect some permission or flag on the files have changed that is causing a problem.
[22:41:04] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[22:42:01] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 268 seconds)
[22:42:24] *** Joins: greedom (~greedom@p200300de670aca00805fe5aa4c3768f3.dip0.t-ipconnect.de)
[22:43:31] <exarkun> dopry: Ok.  Good luck.
[22:44:04] *** Joins: Vision-_- (~Vision@024-217-191-063.res.spectrum.com)
[22:44:06] *** Quits: daddy (3645@hashbang/bdfl) (Quit: WeeChat 3.4 <:3)~)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:16] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[22:45:41] *** Quits: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[22:46:36] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 240 seconds)
[22:46:49] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 256 seconds)
[22:46:49] *** Quits: nanonyme (nanonyme@kapsi.fi) (Ping timeout: 256 seconds)
[22:47:39] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:47:59] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:44] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:48:56] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:49:02] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[22:49:05] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 256 seconds)
[22:49:13] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[22:50:06] *** Quits: marcello1 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[22:50:31] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:52:07] *** Joins: darksun (~darksun@user/darksun)
[22:52:14] *** Quits: greedom (~greedom@p200300de670aca00805fe5aa4c3768f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:53:01] *** Joins: summersault (~summersau@179.221.251.36)
[22:53:02] *** Joins: greedom (~greedom@p200300de670aca00805fe5aa4c3768f3.dip0.t-ipconnect.de)
[22:53:11] *** Quits: dopry (~dopry@68.161.216.72) (Quit: Client closed)
[22:53:29] *** Quits: baffodoro (~raffaem@95.74.75.61) (Ping timeout: 252 seconds)
[22:53:41] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 245 seconds)
[22:54:32] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[22:55:04] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[22:55:50] *** Joins: OP-0 (~pca290122@185.244.139.10)
[22:57:00] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[22:57:15] *** Joins: mjsir911 (~bnc@user/mjsir911)
[22:57:46] *** Joins: tazle (tazle@kapsi.fi)
[22:58:13] *** Joins: nanonyme (nanonyme@kapsi.fi)
[22:59:32] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[23:00:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:01:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[23:01:05] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.202)
[23:01:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:01:36] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Client Quit)
[23:02:03] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 250 seconds)
[23:02:15] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[23:02:26] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Client Quit)
[23:02:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[23:03:04] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[23:03:27] *** Joins: xkuru (~xkuru@user/xkuru)
[23:03:37] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[23:04:12] *** Joins: OP-0 (~pca290122@185.244.139.10)
[23:05:28] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[23:05:46] *** Joins: tomg (~tomg@user/tomg)
[23:07:02] *** Joins: humberto1 (~humbertow@148.204.6.250)
[23:07:04] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:07:10] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[23:07:15] *** NotThatRPG_away is now known as NotThatRPG
[23:07:25] <anddam> howdy, how can I call a set_trace() on a function in an installed package?
[23:07:27] *** Joins: eis (~eis@c-73-88-10-193.hsd1.mn.comcast.net)
[23:07:30] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 250 seconds)
[23:08:18] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[23:08:36] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:383e:dcb3:f7da:1b4a)
[23:08:37] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[23:08:47] *** Joins: bahamas (~lucian@84.232.140.52)
[23:08:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:56] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[23:09:04] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[23:09:08] *** Quits: savolla (~quassel@95.10.239.22) (Remote host closed the connection)
[23:09:14] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 256 seconds)
[23:09:20] *** Joins: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be)
[23:09:24] *** Joins: Wulf (~Wulf@user/wulf)
[23:09:25] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.202) (Ping timeout: 250 seconds)
[23:09:35] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[23:10:00] <SnoopJ> anddam, one way is to edit the installed package, another is to use pdb's `break` command to set a breakpoint when that function is called.
[23:10:16] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[23:10:34] *** Joins: OP-0 (~pca290122@185.244.139.10)
[23:10:45] <anddam> SnoopJ: when's that been introduced?
[23:11:08] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[23:11:09] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:11:10] *** Quits: touki (~touki@152.230-182-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[23:11:16] <anddam> or rather, 3.10 hasn't got it https://docs.python.org/3.10/library/pdb.html
[23:11:34] *** Quits: humberto1 (~humbertow@148.204.6.250) (Read error: Connection reset by peer)
[23:11:38] <anddam> SnoopJ: my bad, break _command_
[23:11:43] <SnoopJ> indeed
[23:11:48] *** Joins: humberto1 (~humbertow@148.204.6.250)
[23:12:01] *** Joins: vicfred_ (~vicfred@user/vicfred)
[23:12:06] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[23:12:31] *** Joins: summersault (~summersau@179.221.251.36)
[23:13:04] <SnoopJ> a third way to do it would be sys.settrace() and inspect the function being called, and invoke pdb if it's the one you want, although this is a pretty heavy-handed way to do it.
[23:13:19] *** Quits: Elzington (~Elzington@68.235.43.92) (Quit: Leaving)
[23:13:30] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[23:14:17] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[23:16:08] <jinsun__> oh I used to set_trace in my own code and jump around with step and  next and until, never noticed break, that would have been better
[23:16:23] *** Joins: alienhead (~solas@user/alienhead)
[23:17:23] *** Joins: darksun (~darksun@user/darksun)
[23:17:39] *** Quits: caildddddt^ (~cailddddd@50.232.121.75) (Remote host closed the connection)
[23:18:05] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:18:15] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:18:20] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[23:18:51] *** Joins: summersault (~summersau@179.221.251.36)
[23:19:07] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[23:19:18] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:19:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[23:20:36] *** Quits: pro_z_ (~pro_z@37.214.35.129) (Ping timeout: 240 seconds)
[23:20:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:21:08] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:21:26] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[23:21:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[23:22:36] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[23:23:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:23:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:23:58] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[23:24:18] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[23:24:24] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 250 seconds)
[23:24:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:24:49] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:25:03] *** Joins: summersault (~summersau@179.221.251.36)
[23:25:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:25:37] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:25:46] *** Joins: humberto1 (~humbertow@148.204.6.250)
[23:25:56] *** Lord_of_Life_ is now known as Lord_of_Life
[23:26:14] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[23:27:02] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:28:30] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[23:30:22] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[23:30:32] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 272 seconds)
[23:30:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[23:31:36] <SaltHillStroller> With pandas.read_json, is there a way to specify from which line? I.e. I want to pandas.read_json(<file>, lines=True, nrows=1000), and then on the next iteration read the next 1000 from the previous location
[23:31:56] *** Joins: OP-0 (~pca290122@185.244.139.10)
[23:32:25] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[23:32:37] <SnoopJ> SaltHillStroller, if you pass a file object to read_json(), a subsequent call will the same file object will pick up from where the previous one stopped
[23:32:41] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[23:32:46] <SaltHillStroller> SnoopJ: Ah, perfect. Thanks
[23:32:52] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[23:33:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:33:04] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[23:33:16] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:33:24] <SnoopJ> with* the same file object
[23:33:34] <parv> In case anyone looking for a Python job : https://twitter.com/willmcgugan/status/1500481277702647808
[23:33:51] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[23:33:53] <exarkun> anddam: ime, the `break` command is maybe 50% reliable
[23:33:55] *** Joins: djapo (~archangel@user/djapo)
[23:34:11] <SnoopJ> exarkun, what's unreliable about it?
[23:34:12] <exarkun> anddam: in case you find yourself scratching your head wondering why your breakpoints aren't being tripped...
[23:34:19] <exarkun> SnoopJ: it just runs past the specified point without breaking
[23:34:38] <SnoopJ> that sounds like there's a problem with the specified point
[23:34:45] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[23:35:19] *** Joins: darksun (~darksun@user/darksun)
[23:35:38] <exarkun> You can interpret it how you like.  I'm just trying to pass on my experience that anddam might benefit from.
[23:36:26] *** Quits: OP-0 (~pca290122@185.244.139.10) (Ping timeout: 256 seconds)
[23:36:28] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:36:34] <SnoopJ> sure, as long as we're clear about what is a failure of the tool and what is a failure to operate the tool
[23:36:52] *** Joins: tomg (~tomg@user/tomg)
[23:37:07] <SnoopJ> I have only had `break` fail in this way when my specification wasn't what I thought it was
[23:37:35] <nedbat> jinsun__: thanks
[23:37:49] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[23:38:17] *** Joins: OP-0 (~pca290122@185.244.139.10)
[23:38:45] <anddam> sure, I'll try 'b my_package.foo.bar' syntax for function bar in module foo in package my_package
[23:39:52] *** Joins: ivii (~ivan@user/ivii)
[23:40:08] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[23:40:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[23:40:49] *** Joins: beli6148 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[23:41:06] *** Joins: yates_work (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[23:41:21] <yates_work> did strings in python2 have a .decode ability?
[23:41:26] <exarkun> yes
[23:41:32] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:41:40] <CrtxReavr> Don't think they needed it.
[23:41:57] <SnoopJ> yates_work, yes. In Python 2, `str` and `bytes` are the same type.
[23:42:06] <grawity> it's how you got `unicode` strings
[23:42:25] <yates_work> aha
[23:42:34] <CrtxReavr> In 2, for a unicode string, you just preptend the literall like: u'foo'
[23:42:37] <yates_work> that explains what i'm seeing, thanks!
[23:42:48] <grawity> well, assuming it's a literal in the first place
[23:43:01] <grawity> doesn't mean .decode is useless, if you get the bytes from elsewhere
[23:43:03] <SnoopJ> yates_work, this presentation has some helpful remarks on the differences between how the two versions handle strings: https://nedbatchelder.com/text/unipain.html
[23:43:06] <CrtxReavr> Though ``'foo'.decode()`` does retrn ``u'foo'``
[23:43:09] <Wooble> yates_work: unicode objects even had a .decode() method, which doesn't even make sense.
[23:43:13] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:43:31] <SnoopJ> what does that even do? :/
[23:43:38] <CrtxReavr> Tell me wat was wrong with ascii again?
[23:43:39] <bjs> it encodes to ASCII first
[23:43:41] <exarkun> It implicitly encodes and does the decode
[23:43:42] * CrtxReavr ducks.
[23:43:45] <SnoopJ> ugh
[23:43:46] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[23:43:55] <Wooble> it gives you back the same unicode, if it happens to be ascii?
[23:43:56] <exarkun> Exactly.
[23:43:58] <grawity> CrtxReavr: don't ascii dumb questions
[23:44:03] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 256 seconds)
[23:44:06] * CrtxReavr groans.
[23:44:06] <SnoopJ> CrtxReavr, it's only 128 codepoints, for starters.
[23:44:08] <bjs> CrtxReavr: nothing,  the issue with Python 2 was implicitly converting things to ASCII without being asked
[23:44:16] <Yhg1s> SnoopJ: originally the encoding mechanisms weren't just bytes<->unicode, they could also be unicode<->unicode and bytes<->bytes
[23:44:19] <bjs> even if the source wasn't
[23:44:22] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 256 seconds)
[23:44:22] *** beli6148 is now known as beli6147
[23:44:50] <SnoopJ> Yhg1s, wacky
[23:44:50] <Yhg1s> So _for unicode encodings_, u.decode('encoding') would be like u.encode(default-encoding).decode('encoding'), but for others (e.g. uu, base64, hex, ...) it would not.
[23:44:51] <bjs> Yhg1s: rot13 encoding for life
[23:45:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:45:26] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:45:30] *** Joins: whistl (~whistl@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[23:46:00] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Read error: Connection reset by peer)
[23:47:19] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[23:47:52] <foo> Does this datetime format have a name? 2022-03-07T19:00:00.000Z
[23:48:40] <exarkun> iso8601
[23:48:43] <grawity> rfc3339
[23:48:52] <exarkun> standards body fight
[23:48:57] *** Joins: s33ker (~s33ker@85.10.35.70)
[23:50:11] <Wooble> the rfc mentions iso8601 and calls itself a profile of that standard.
[23:50:23] <SnoopJ> yea, same difference
[23:50:30] *** Joins: blei28 (~blei@user/blei)
[23:50:36] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[23:50:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:50:55] <Wooble> (in the same place it mentions iso8601 allows the hour to be "24" while the rfc doesn't)
[23:51:25] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[23:51:42] <s33ker> hi guys i am trying to interate and extract whole rows from pandas dataframe and append value to it then save this rows into a new dataframe, for example:  row = [1,2,3]  row1 = row + 4  -> [1,2,3,4]  then go to the next row and do the same thing so how do i get whole row batch from dataframe
[23:51:43] <grawity> profile means, if you ask for "iso8601" you can get a whole bunch of variations, while "rfc3339" gets you more or less exactly that
[23:51:57] <s33ker> if there is an easier was to do this even better
[23:52:21] <s33ker> way*
[23:52:25] <bookworm> s33ker: you *really* don't want to do that
[23:52:36] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 240 seconds)
[23:52:54] <bookworm> if you have a dataframe and want to append a row, do it in a single step
[23:53:00] <bookworm> better yet, don't append a new row at all
[23:53:05] <bookworm> why do you need to do that?
[23:53:21] <bookworm> if you need to do that frequently you're using the wrong data structure by far
[23:53:51] <s33ker> well the big picture i am trying to join coulmn...at table1[id] = table2[id] at table[id] index which is the date
[23:54:01] <bookworm> then merge
[23:54:09] <bookworm> or join, depending on what you have
[23:54:19] *** Joins: Adoi (~Adoi@user/adoi)
[23:54:36] <s33ker> thx for the info btw no i only need to do this once to get a new table
[23:54:47] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[23:54:48] <bookworm> yes, that's what they do
[23:54:52] <s33ker> dataframe*
[23:55:00] <s33ker> thx
[23:55:01] <bookworm> pandas.DataFrame.join / pandas.DataFrame.merge
[23:55:09] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[23:55:18] <bookworm> join merges on the index, merge allows to merge on columns / index as you please
[23:55:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[23:57:28] <s33ker> hmm yes i actually need to join on two columns
[23:57:41] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:57:51] <bookworm> then use merge / make it a multiindex, choice is up to you
[23:58:17] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:58:20] *** Joins: cjb (~cjb@user/cjb)
[23:58:25] <bookworm> https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html
[23:58:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:58:42] <bookworm> read that, in full
[23:59:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[23:59:14] <bookworm> if you're using pandas that's one of the thins you really need know how it works
[23:59:21] <AhmedAmerican> which lib you recommend for writing google sheets ? gspread is preferred ?
[23:59:39] <wyre> hi guys, can pip-compile resolve also the version when you include something like `library @ git+ssh://git@gitlab.com/somespace/someproject.git#egg=library>=2.1.0`?
[23:59:57] <CodeSpelunker> hi, I'm looking for a completely no-frills (like no ORM) guide to making a Python API server, with a db connection that I don't nead to spin up and down on each API route
