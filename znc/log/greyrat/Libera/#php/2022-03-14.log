[00:26:55] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[00:45:35] *** Quits: newwebdev132 (~newwebdev@78.135.91.39) (Read error: Connection reset by peer)
[00:55:30] *** Quits: genom (~g@37.214.24.217) (Remote host closed the connection)
[01:00:55] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[01:16:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:19:37] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[01:20:41] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[01:23:53] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:24:28] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[01:28:20] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[01:30:54] *** Quits: de-facto (~de-facto@user/de-facto) (K-Lined)
[01:40:32] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:43:44] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[01:43:47] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Quit: Stay safe!)
[01:45:32] *** Joins: DavidSaylor41040 (~david@190.sub-174-252-193.myvzw.com)
[01:54:25] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[02:13:43] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: bbl)
[02:18:34] *** Joins: _filename (~kilitary@82.148.25.66)
[02:21:28] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[02:21:35] *** _filename is now known as filename
[02:26:35] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[02:27:10] *** Joins: vit (~vit@chello085216193138.chello.sk)
[02:27:34] *** vit is now known as Guest8508
[02:28:29] *** Quits: Guest8508 (~vit@chello085216193138.chello.sk) (Client Quit)
[02:28:48] *** Joins: vit (~vit@chello085216193138.chello.sk)
[02:29:12] *** vit is now known as Guest7375
[02:34:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:33] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:39:14] *** Joins: eddof13 (~eddof13@192.154.196.148)
[02:39:35] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[02:40:29] *** Joins: _filename (~kilitary@188.242.105.134)
[02:40:38] *** Guest7375 is now known as freeworld
[02:42:00] *** Quits: eddof13 (~eddof13@192.154.196.148) (Client Quit)
[02:42:35] *** Quits: guido (~weechat@host-79-12-253-37.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[02:42:40] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 250 seconds)
[02:42:44] *** _filename is now known as filename
[02:42:46] *** freeworld is now known as Guest7375
[02:43:37] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 240 seconds)
[02:55:15] *** Joins: jargon (~jargon@184.101.78.74)
[03:18:02] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:18:08] *** Quits: ham5 (iamfive@user/ham5) (Remote host closed the connection)
[03:21:19] *** Joins: ham5 (~iamfive@user/ham5)
[03:22:32] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 250 seconds)
[03:25:22] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[03:26:04] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[03:26:35] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[03:29:15] <up_running> da_wunder: After reading about binding, I'm not sure I understand what you mean by binding here.
[03:29:21] <up_running> I think you are referring to binding the `$values_array` variable. Is that correct?
[03:29:48] <__adrian> up_running: in relation to sql?
[03:30:00] <up_running> And in case what I'm doing isn't very clear, here is a pic of the excel document
[03:30:01] <up_running> https://imgur.com/a/YmJBqTn
[03:30:05] <__adrian> https://php.net/pdo.prepared-statements
[03:30:28] <__adrian> !+pdo_mysql prepare
[03:30:28] <php-bot> How to prepare a statement using PDO: https://gist.github.com/adrian-enspired/1ddd71511e01c1f609db
[03:30:43] <up_running> __adrian: yes, in relation to sql.
[03:30:48] <up_running> it's about the code I shared yesterday
[03:30:54] <up_running> I'll post it again here:
[03:31:24] <up_running> https://gist.github.com/random-jaylen/6854a27a6e0bf367752f99c3c22e0db8?permalink_comment_id=4096205
[03:32:00] <__adrian> https://gist.github.com/random-jaylen/6854a27a6e0bf367752f99c3c22e0db8?permalink_comment_id=4096205#file-sampleb-php-L43  ‚Üê yeah, this.
[03:32:03] <up_running> I think da_wunder was referring to line 43 when he recommended that I read about and implement bindings
[03:32:07] <__adrian> DO NOT put $variables into your sql.
[03:32:17] <__adrian> use prepared statements and pass data via :paramters.
[03:32:33] <up_running> ok, let me take a look at your links
[03:33:02] <up_running> the explanations that I've read in about six links on bindings are not clear, so far
[03:33:40] <__adrian> ok. so, do you understand with the problem is with putting variables in your sql?
[03:34:07] <up_running> the risk of sql injection
[03:34:48] <__adrian> basically, yes. whether as an attck or simply a mistake.
[03:34:55] <__adrian> do you undedrstand what "sql injection" is?
[03:34:57] <up_running> I don't understand the technical details of *why* that causes a sql injection or even what a sql injection is in relation to this code, but I understand this risk from the readings I've done thus far
[03:35:03] <__adrian> k
[03:35:10] <__adrian> so, here's what sqli is
[03:35:38] <__adrian> when you write sql, there's two parts. the _instructions_, and the _data_.
[03:36:03] <up_running> and to be clear, i know i can read up on this areas I don't understand, but I'm trying to not go down any rabbit holes until I can solve this immediate problem first
[03:36:06] <__adrian> the instructions are what you want the code to do. insert, select, delete, etc., and with which tables/columns, and so forth.
[03:36:23] <__adrian> no, this is extremely important - if you don't understand it, you will not solve it
[03:36:32] <up_running> ah, ok.
[03:36:38] <__adrian> the data is the information that you want to put in the database.
[03:36:49] <up_running> i can stop and read up on it to save you some typing
[03:36:53] <up_running> if this is that important
[03:37:00] <__adrian> i'll be quick
[03:37:27] <__adrian> take this as an example:   "INSERT INTO a VALUES($x,$y,$z)"
[03:37:30] <up_running> you can take your time, i just didn't want to waste your typing on things that I can potentially google myself
[03:37:55] <__adrian> here's the problem: whatever is in those $variables is now _part of_ the sql. it's not separate.
[03:38:30] <__adrian> if it's like you expect - maybe, $x=1, $y=2, $z=3 - it won't _seem_ to be a problem.
[03:39:02] <__adrian> but you don't know that it will always be what you expect. some $variables might have data that looks like sql commands.
[03:39:32] <__adrian> sql injection is _confusion_. the commands and the data are all in one place and the DB doesn't know for sure what you meant.
[03:39:56] <__adrian> prepared statements and parameters solve this by NEVER putting the commands and the data together.
[03:39:58] <up_running> ah, so if those variables are a part of the sql. debugging can be a big pain
[03:40:13] <__adrian> prepare() sends the commands to the database, WITH NO DATA.
[03:40:27] <__adrian> execute() sends the data to the database, WITH NO COMMANDS.
[03:40:48] <__adrian> there is no longer any opportunity for the two to be confused, because they are literally never in the same place.
[03:41:17] <up_running> ok, I think I see your point now.
[03:42:07] <__adrian> so:   ->prepare("INSERT INTO t VALUES(:x,:y,:z)")  // no data
[03:42:20] <__adrian> and then  ->execute([1,2,3])  // no sql
[03:43:13] <__adrian> heh. new analogy: coke and mentos. don't put them together!
[03:43:55] <__adrian> i usually show this: https://lockmedown.com/wp-content/uploads/2014/06/data_command_thumb-376x400.jpg
[03:44:44] <__adrian> follow?
[03:45:03] <up_running> It's a bit more clear now.
[03:45:09] <up_running> I'm reading the links you posted above
[03:45:19] <__adrian> kk
[03:45:31] <__adrian> when you're done, consider: !+php first
[03:45:31] <php-bot> when you're done, consider, your PHP code can be sorted into two categories: code which _performs work_ (processing input, controller logic, database access, error handling, etc.), and code which  _produces output_ (header(), echo, <?= $var ?>, plain ol' <html>, etc.). work goes FIRST. output goes LAST. https://gist.github.com/adrian-enspired/9ed2542a695e2ebe30aa
[03:47:07] <up_running> before I forget, I was thinking about our discussion regarding how my internship should have a senior developer extremely excited to work with me all the time.
[03:47:11] <__adrian> and then:  https://php.net/foreach  - for() is not usually the right kind of loop. when you're iterating arrays, use foreach().
[03:47:14] <up_running> I think you're absolutely correct
[03:47:46] <__adrian> well, it would be nice if they were happy about it  :)  but mainly i meant they should be paying a ton of attention to you
[03:48:01] <up_running> but this is a federally funded program; where i'm interning at did not want any interns
[03:48:15] <up_running> but since they are receiving money to host me, then they obliged
[03:48:39] <up_running> so, I can't be too picky and I must realize that i'm lucky to just get some professional experience
[03:49:22] <up_running> it took the program manager almost a year to find someone willing to take our cohort even though we have thousands of federal dollars to burn
[03:49:52] <up_running> but anyway, i'll get back to reading the links now. i just wanted to mention that since I was pondering it a lot yesterday
[03:53:17] <__adrian> "up_running> so, I can't be too picky and I must realize that i'm lucky ..."  this is actually the thing i was getting at - no, don't sit back and let employers abuse you. don't buy into that as though that's how it is and is supposed to be
[03:54:10] <__adrian> there are lots of abusive employers, yes. but that doesn't mean you are a piece of poop.
[03:55:57] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:06:25] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[04:08:19] <up_running> __adrian: I think you're referring to Example #3 from the php link, yes?
[04:13:35] <__adrian> the php.net link? most of the page is relevant
[04:15:44] <__adrian> though it focuses too much on performance as the driving consideration. the overriding reason to use prepared statements is so you have access to parameters.
[04:23:59] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f140429be276a75d0242.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:24:32] *** Joins: LuKaRo_ (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[04:34:25] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Read error: Connection reset by peer)
[04:34:47] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[04:43:52] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[04:46:23] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[04:47:16] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Read error: Connection reset by peer)
[04:47:36] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[04:47:47] *** Joins: Junxter (~Junxter@121.237.63.222)
[04:47:55] *** Parts: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) ()
[04:57:00] *** Quits: Vision (~Vision@097-085-249-103.biz.spectrum.com) (Ping timeout: 252 seconds)
[05:00:26] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:01:21] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[05:04:56] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:15:18] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Read error: Connection reset by peer)
[05:15:37] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:20:19] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:21:24] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Read error: Connection reset by peer)
[05:22:28] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:23:14] *** Joins: WishBoy (~WishBoy@user/wishboy)
[05:24:49] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:25:36] <jargon> __adrian, any idea how to repair a broken repo entry?
[05:25:53] <jargon> (based off multiple backups)
[05:26:04] <WishBoy> hmmmm o_o
[05:26:24] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[05:27:08] <jargon> I am having an issue with my archives once I purged .git from them all.
[05:27:44] <jargon> I removed the repo code because the downloads were 100x bigger than the should have been,
[05:29:18] <Blondie101010> can't you take the backup?
[05:29:48] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[05:30:06] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:31:35] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Remote host closed the connection)
[05:31:52] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:31:55] <jargon> Blondie101010, my main drives either got stolen, misplaced or broke.
[05:32:09] <__adrian> i don't know what you mean by that - but yeah, if you have a backup ...?
[05:32:21] <__adrian> "either got stolen, misplaced or broke"  uhh  you don't know which?
[05:32:41] <jargon> I had numerous backup drives.
[05:33:42] <jargon> I think someone assumed I was dead and was attempting to use them in some sort of necromantic voodoo ritual.
[05:33:43] <Blondie101010> do you have a real backup?
[05:33:52] <jargon> Yes.
[05:33:56] <jargon> But it is goofed.
[05:34:03] <Blondie101010> meaning?
[05:34:03] <__adrian> so, ...no
[05:34:05] <__adrian> ?
[05:34:25] <__adrian> do you have an intact repo
[05:34:36] <jargon> I have to reverse engineer the site from the partial discombobulated backup.
[05:35:07] <__adrian> k, i'll take that as a "no" also. that's not even a git question, much less a php question.
[05:35:20] <__adrian> sorry, but we've got nothin to offer there.
[05:35:41] <__adrian> except, next time, make sure your backups are good.
[05:35:44] <jargon> The website doesn't have a .git, I am talking about two differnet things at the same time.
[05:35:53] <__adrian> you should talk about one thing at a time
[05:36:03] <jargon> My games I made I removed the .git
[05:38:12] <jargon> Once I did that, the binaries ran, but the sources for them either did not compile properly, or ended up having numerous prevously unnoted errors.
[05:38:57] <Blondie101010> jargon:  find someone to prevent you from having the possibility of removing .git
[05:39:07] <jargon> The entire SEMVER system no longer matchs the source tree.
[05:40:20] <Blondie101010> don't know how you do your backups, but it sounds like that should be revised
[05:40:50] <Blondie101010> doesn't have to be fancy, as long as it works
[05:41:41] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[05:42:01] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[05:43:20] <jargon> Blondie101010 http://puzzlum.org/repo/index.php
[05:43:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[05:43:55] <jargon> That is my personal repo system I am currently in the process of updating from table based to css based.
[05:45:13] <Blondie101010> really sad
[05:45:31] <__adrian> jargon: it's very unclear what you were doing or how you messed it up, but the only answer we can give is that next time you'll need to do it better.
[05:45:52] <__adrian> the rest of it is not on-topic here. if you have an actual git question, recommend #git
[05:46:24] <__adrian> as for trying to rebuild whatever it is you're trying to rebuild, there's probably not a channel for that
[05:49:25] <jargon> Anyone here familiarized with Twitch Markdown?
[05:51:19] <Blondie101010> seems pretty basic MD, but how is that more relevant here?
[05:51:50] <__adrian> if this is a php question, please just ask. if not, you need to find the on-topic place to ask.
[05:54:33] *** Joins: ferdna (~ferdna@user/ferdna)
[06:29:40] *** Joins: pmercado (~pmercado@186.107.61.173)
[06:40:39] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Remote host closed the connection)
[06:49:31] *** Joins: Epa1 (~epaphus@190.113.110.251)
[06:49:34] *** Joins: eddof13 (~eddof13@192.154.196.148)
[06:49:39] *** Quits: eddof13 (~eddof13@192.154.196.148) (Client Quit)
[06:50:09] <up_running> __adrian: How about like this?
[06:50:11] <up_running> https://dpaste.com/935FEELJ2
[06:50:17] *** Parts: Epa1 (~epaphus@190.113.110.251) ()
[06:53:15] *** Joins: Rockwood (~Rocky@user/rocky)
[06:54:00] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[07:02:28] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:03:24] <__adrian> i don't think you read any of those factoids quite enough  ;)
[07:03:58] <up_running> the links?
[07:04:12] <__adrian> yes
[07:04:23] <up_running> I tried, but didn't understand it all
[07:04:27] <__adrian> post your sql, we'll write it up correctly
[07:06:09] <up_running> I didn't re-write the entire line 43 since it would be a lot without being sure if it is correct or not
[07:06:17] <up_running> or do you mean just re-share line 43?
[07:06:26] <up_running> https://gist.github.com/random-jaylen/6854a27a6e0bf367752f99c3c22e0db8?permalink_comment_id=4096205#file-sampleb-php-L43
[07:07:08] <__adrian> k, question one - MUST you use mysqli, or are you up for PDO?
[07:07:30] <up_running> hmm, pdo is a php data object
[07:07:45] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:07:55] <__adrian> it's a database access api, same as mysqli
[07:08:05] <__adrian> what i'm asking is, are you required to use mysqli
[07:08:08] <up_running> well, the code that I utilized for getting this far had mysqli in it
[07:08:14] <__adrian> k
[07:08:20] <up_running> but as long as things work properly, anything is fine, I suppose
[07:08:28] <up_running> I don't have any restrictions there
[07:08:37] <up_running> let me share with you that code also, one sec please
[07:08:39] <__adrian> both are fine, but pdo is generally easier to learn and use
[07:09:16] <__adrian> plus a LOT more people are happy to help you with it  :)  but if the job wants mysqli, ...that's what i'm asking.
[07:09:23] <__adrian> which do you want right now?
[07:10:14] <Rockwood> mysqli still requires in jobs?
[07:10:26] <__adrian> depends on the workplace
[07:12:32] <up_running> ok, found it:
[07:12:34] <up_running> https://jinujawad.com/read-data-from-excel-and-store-in-mysql-database-using-php/
[07:12:54] <up_running> but I'll go with the easier to learn option if you recommend it
[07:13:13] <__adrian> heh. wow.
[07:13:47] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:13:50] <__adrian> k. but for reference, that tutorial is mostly an example of doing things the worst possible way
[07:14:09] <up_running> ah, ok
[07:14:17] <Rockwood> really amazing, few companies  are still using mysqli by few instead PDO
[07:14:45] *** Joins: funhouse (~funhouse@user/funhouse)
[07:14:53] <up_running> well, let me also share with you the method where I'm interning at uses
[07:15:02] <__adrian> do you really have a column in your table named  "app_*"  ?
[07:15:13] <up_running> I couldn't figure it out when I was reading up about it
[07:15:47] <up_running> __adrian: yes, that is a column name
[07:16:02] <up_running> it is shown in the imgur pic I shared earlier
[07:16:06] <up_running> were you able to view it?
[07:16:15] <Rockwood> for($row=0;$row<=$lastRow;$row++){ you can make more easier
[07:16:26] <Rockwood> by just foreach
[07:16:40] <__adrian> didn't look. did you choose that name or was it already there
[07:16:43] <up_running> here is the pic again, just in case you missed it:
[07:16:44] <up_running> https://imgur.com/a/YmJBqTn
[07:17:18] <up_running> this excel file is given to us and it is long (hundreds of lines)
[07:17:39] <up_running> i am supposed to input this into a database
[07:18:16] <up_running> and then enable anyone who needs the data to be able to click or utilize the database to autopopulate pdf forms and memos
[07:18:40] <DavidSaylor41040> i can leave my id field out of my insert queries right? it'll still work as intended?
[07:18:40] <up_running> there are some curveballs though:
[07:19:16] <up_running> #1 the Maint Control Number will change every time we receive the file
[07:19:33] <__adrian> DavidSaylor41040: depends on how your table was made
[07:19:36] <up_running> ^ I think this is the primary key I will use for ordering the database
[07:19:46] <__adrian> up_running: slow down
[07:19:57] <__adrian> look at my question
[07:20:04] <DavidSaylor41040> just an ordinary auto-increment id int(6) field
[07:20:16] <up_running> #2 we will also add three columns to the database from our in-office space
[07:20:17] <__adrian> "int(6)" isn't ordinary  :p
[07:20:28] <__adrian> but yes, if it's autoinc it's not required
[07:20:39] <up_running> __adrian: ok, let me scroll up and check it
[07:20:46] <DavidSaylor41040> why what's the normal int size?
[07:21:19] <DavidSaylor41040> i use to use 5 but that was like 20+ years ago
[07:21:27] <__adrian> up_running: "__adrian> did you choose that name or was it already there"
[07:21:43] <up_running> __adrian: to answer your question, yes, all the names are pulled directly from the Excel file
[07:21:57] <__adrian> DavidSaylor41040:  column_name SERIAL PRIMARY KEY
[07:22:05] <up_running> but it doesn't have to stay that way
[07:22:23] <__adrian> "serial" means "bigint unsigned not null"
[07:22:32] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:22:33] <DavidSaylor41040> oh well yeah i thought you meant 6 for my int size was not normal
[07:22:41] <__adrian> it's definitely not
[07:22:51] <up_running> __adrian: I was actually told to come up with some other potential names that make sense, but I assumed that would complicate things regarding syncing the data
[07:23:02] <__adrian> you should not put a display size on your PK
[07:23:21] <__adrian> up_running: renaming is less problematic. stick with simple characters in your db tables.
[07:23:31] <__adrian> basically alphanumeric and underscore
[07:24:07] <up_running> If the column name is "App *" and then I rename it to something else, I'll have another issue to sync the data from that column, no?
[07:24:31] <__adrian> you can make a mapping
[07:25:07] <up_running> hmm, ok, i'll have to read up on that then
[07:25:14] <__adrian> e.g.,  const EXCEL_FIELD_TO_DB_COLUMN = ["app_*" => "app_star", etc...];
[07:25:37] <up_running> ahh, ok. looks like that would work!
[07:25:48] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[07:25:57] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[07:26:09] <__adrian> then if you have a $field, you use it as the key:  $column = EXCEL_FIELD_TO_DB_COLUMN[$field] ?? $field;
[07:26:27] <__adrian> this would use the mapped value if it exists, and the original field name if not
[07:26:43] <__adrian> (so you only need map names that need changed)
[07:26:54] <__adrian> up_running: https://dpaste.com/77KZCJ7T4
[07:29:12] <up_running> __adrian: are you doing away with the `$values_array` variable?
[07:29:50] <__adrian> not necessarily, just limiting the scope of the example.
[07:30:01] <__adrian> "however" you get the data, is the point.
[07:30:49] <__adrian> i don't use phpoffice, but i'd strongly suspect there's a method for getting all the columns in a given row.
[07:31:01] <__adrian> and probably a method for getting all the rows in a file.
[07:31:56] <__adrian> so you might be able to  foreach ($excel->getRows() as $row) { $insert->execute($row->getColumns()); }
[07:32:06] <__adrian> or something similarly sane
[07:32:09] *** Quits: jargon (~jargon@184.101.78.74) (Remote host closed the connection)
[07:33:30] <__adrian> i'm off; enjoy.
[07:33:48] <Rockwood> bye cya
[07:33:53] <Rockwood> good night
[07:34:27] <up_running> __adrian: oh, I was just sharing the code that they use
[07:35:37] <up_running> but have a good night; hope to see you later
[07:36:52] *** Quits: sreve (~quassel@p54a71a79.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:37:02] *** Joins: sreve_ (~quassel@p549d73b1.dip0.t-ipconnect.de)
[07:38:28] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[07:41:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:43:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:43:12] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 272 seconds)
[07:43:12] *** Quits: DavidSaylor41040 (~david@190.sub-174-252-193.myvzw.com) (Ping timeout: 272 seconds)
[07:49:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:49:34] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[07:51:42] <WishBoy> sleep time
[07:51:43] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:52:25] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[07:56:30] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[08:08:55] *** Joins: chozorho (~chozorho@2601:146:300:c30::9d9b)
[08:30:25] *** Joins: rxdeath (~rxdeath@c-67-187-135-103.hsd1.ca.comcast.net)
[08:30:52] <rxdeath> hello friends, i have an interesting problem that i'm struggling to wrap my mind around it and would be interested in any input
[08:31:02] *** Parts: up_running (~up_runnin@cpe-98-150-242-72.hawaii.res.rr.com) ()
[08:31:23] <rxdeath> i have 5 different cost brackets that must add up to some number using a varying amount of items
[08:32:17] <rxdeath> what is a good way to deal with this.¬† for example, there are 2 items and i know they cost 96$.¬† my cost brackets are 38,43,53,85,106.¬† how do i figure out that is is 43,53 i need
[08:32:55] <rxdeath> obviously this is a simple example, but sometimes it will be 10 items, and i need a way to programmatically do it.¬† i can just brute force my way through it, but that seems stupid and there is likely a much easier way but i'm struggling to see it
[08:57:01] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[08:57:21] *** Quits: pmercado (~pmercado@186.107.61.173) (Ping timeout: 252 seconds)
[09:27:04] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[10:10:16] *** Joins: newwebdev13 (~newwebdev@78.135.91.188)
[10:23:40] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Quit: Leaving)
[10:43:11] *** Joins: richardjh (~Thunderbi@188.29.242.147.threembb.co.uk)
[10:48:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:51:13] *** Joins: mlu (~mlu@user/mlu)
[10:51:35] <mlu> I'm playing around with a legacy application and it still has some parts that uses the old mysql plugin
[10:51:45] <mlu> is there any way in configuration to get those to use mysqli or mysqlnd?
[10:51:54] <mlu> or will I need to either install the legacy plugin or migrate?
[10:52:04] <mlu> ** migrate the code (i.e. there is no direct backward-compatibility layer)
[10:57:48] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[11:07:18] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[11:08:09] <netstar> any advice for someone who is historically used to procedural PERL SQL? I'm finding myself writing code that smells to me distinctly of 1998 fish
[11:08:51] <mlu> netstar: funny you ask :)
[11:08:52] *** Joins: Rockwood (~Rocky@user/rocky)
[11:09:12] <netstar> The ONLY advantage I can see is that it's more likely readable to a non php/sql/perl dev
[11:09:29] <netstar> as in, you can follow the logic
[11:10:01] <mlu> what I've perosnally found is that SQL is SQL -- main difference is how you wrap/abstract the code
[11:10:23] <mlu> looks just as awkward outside of PHP too
[11:10:36] <mlu> as lnog as you ahve different handles for different database connections, you're fine
[11:10:53] <netstar> I definitely need to learn a balance...i played with symfony i'm sure it's great, but i can imagine it being a REAL headache for anyone looking into it...not familiar with it
[11:12:12] <netstar> i like that no need to bind now with pdo compared to mysqli_*
[11:12:34] <mlu> oh, get used to bind
[11:12:40] <mlu> why? that's how you prevent SQL injection problems
[11:13:03] <mlu> I heard shock therapy may help
[11:13:05] <netstar> can't you just use placeholders and pass an array to execute() ??
[11:13:32] <mlu> sure, I consider that the same as using bind
[11:13:38] <netstar> ahh ok :)
[11:14:05] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[11:14:06] <netstar> This is difficult for me, I have zero peers to learn from and I'm having to learn with a real ancient tendency
[11:14:22] <mlu> at least you have the ancient experience
[11:14:26] <netstar> :)
[11:14:40] <mlu> it's actually kinda fun to be working on PHP again after a 15yr break
[11:15:30] <netstar> as for exception handling... just wrap the whole block of SQL queries in a single try/catch
[11:15:50] <mlu> seems like that's how it's done in the other languages too
[11:15:59] <mlu> at least, that's how I did PostgreSQL on the NodeJS side
[11:16:29] <mlu> kids talk about ORMs but the thing is, they never seem to pan out past prototypes
[11:16:32] *** Joins: luigibu (~luigi@93.176.153.88)
[11:17:04] <netstar> ORM looks good...it seems graceful code, i just wonder, is it too abstract
[11:17:09] <mlu> the reason why: if your code has any business logic, you're gonna be coding up the business logic anyways, and if your stuff is simple enough to not need the business logic, you might as well use a spreadsheet
[11:17:36] <mlu> so if I'm doing a quick and dirty prototype, I will use an ORM to begin with, but that ORM will disappear after the prototype
[11:17:49] *** Joins: asdf__ (~slashasdf@030-245-128-083.dynamic.caiway.nl)
[11:17:56] <mlu> at the end of the day, it's just indirection from raw SQL
[11:18:30] <netstar> i'm a n00b again :)
[11:19:03] <mlu> here's how I view things: remember how it worked in the 90s? now, we can cheaply get servers with an absurd amount of speed/resources for the 90s
[11:19:24] <mlu> that dual-core machine with a gig of RAM taht we drooled about in the 90s? it's a $5/mo VPS today
[11:19:54] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:20:07] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Client Quit)
[11:22:20] *** Quits: richardjh (~Thunderbi@188.29.242.147.threembb.co.uk) (Ping timeout: 272 seconds)
[11:22:39] *** Joins: retronav (pranav@user/obnoxiousnerd)
[11:22:43] *** Quits: rxdeath (~rxdeath@c-67-187-135-103.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:24:11] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:24:42] *** Joins: richardjh (~Thunderbi@188.29.242.135.threembb.co.uk)
[11:30:18] * ordos remembers drooling over 1 megabyte of SIMM RAM
[11:30:48] <netstar> :)
[11:31:11] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:34:39] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[11:36:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:39:08] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[11:52:36] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[11:56:26] *** Joins: Rockwood (~Rocky@user/rocky)
[11:57:39] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[12:10:28] *** Quits: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au) (Ping timeout: 272 seconds)
[12:11:24] *** Joins: podeni (~podeni@188.27.129.34)
[12:12:10] *** Joins: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au)
[12:12:28] <podeni> Hi everyone. In PHP 8.1, how to get the name string of an enum value? e.g. enum Action { case START; case STOP }; // how to get "START" and "STOP" and strings for printing them out?
[12:13:09] *** Quits: Furai (~Furai@furai.pl) (Remote host closed the connection)
[12:13:35] *** Joins: Furai (~Furai@furai.pl)
[12:19:18] <TinoDidriksen> podeni, https://www.php.net/manual/en/language.enumerations.basics.php#126724
[12:23:54] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[12:30:10] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[12:30:42] *** Joins: justAstache (~justache@user/justache)
[12:34:44] <netstar> something i'm struggling to grasp with...why would you ever want to loosely match i.e. == != compared to === and !==
[12:36:55] <netstar> I don't know of a scenario (coming from a different area), where you would not want a precise value check
[12:37:07] *** Joins: onichomp (~onichomp@2806:264:4408:2f5:70cd:1ea5:10e5:f51b)
[12:37:36] *** Quits: onichomp (~onichomp@2806:264:4408:2f5:70cd:1ea5:10e5:f51b) (Read error: Connection reset by peer)
[12:39:19] <TinoDidriksen> netstar, sometimes you get data in where you don't quite know the type, such as from SQL or GET/POST. So you don't care if it's '42' or 42, just that it is == 42. It is naturally better to ensure the type first via intval() or similar, though.
[12:39:56] <netstar> TinoDidriksen: thanks. That makes sense.
[12:40:25] <netstar> I have a lot of silly questions
[12:40:26] *** Joins: onichomp (~onichomp@2806:264:4408:2f5:70cd:1ea5:10e5:f51b)
[12:43:59] <Naktibalda> it's worse when you get string, so you implement === '42', then you upgrade PHP and you get integer :)
[12:45:07] *** Joins: ms49434 (~ms49434@user/ms49434)
[12:51:16] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:58:04] *** Joins: NakedKing (~NakedKing@user/nakedking)
[13:00:47] *** Joins: DavidSaylor41040 (~Username@2600:381:5f88:bee1:2780:49cf:c23c:5fd1)
[13:06:49] *** Quits: roadie (~user@2a02:8108:5a40:1d87:c9a7:57e1:86d:e28b) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[13:07:29] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:07:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:10:49] *** Joins: kerunaru (~Jmcb@108.red-80-29-99.staticip.rima-tde.net)
[13:18:20] *** Quits: chozorho (~chozorho@2601:146:300:c30::9d9b) (Quit: WeeChat 3.0)
[13:19:00] *** Joins: bobdobbs (~user@116.251.146.222)
[13:20:18] <delboy1978uk> morning o/
[13:22:34] <DavidSaylor41040> very simple query results in success but no data is inserted in db?  https://pastebin.pl/view/648a1aa5
[13:27:00] <TinoDidriksen> You should use PDO and parameterized queries instead. Anyway, you're probably looking at the wrong db/table, or just not refreshed it.
[13:27:58] <DavidSaylor41040> its just a website on my lan so figured i dont need to use pdo or mysqli
[13:29:04] <DavidSaylor41040> well i mean nobody accesses it but me
[13:29:09] <TinoDidriksen> Always use parameterized queries.
[13:29:31] *** Joins: olle (~olle@212-181-59-82.customer.telia.com)
[13:30:03] <DavidSaylor41040> even though its not even public?
[13:30:39] <DavidSaylor41040> isn't the point of pdo and mysqli for hackers?
[13:31:52] <Naktibalda> lol
[13:31:55] <TinoDidriksen> That too, but mostly for data sanity. It's less code, so there is no reason not to do it.
[13:32:36] <TinoDidriksen> And it's good practice. You shouldn't want to write bad code, even for yourself.
[13:33:16] <DavidSaylor41040> idk sounds like a ocd issue
[13:34:56] <TinoDidriksen> It's not. Code can look wrong once you're used to it looking right, and string interpolation in SQL looks wrong because it is wrong. Parameterized queries are better in (almost) every way.
[13:35:54] <Naktibalda> DavidSaylor41040: your query fails if any value contains ' character
[13:36:33] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[13:37:19] <DavidSaylor41040> Naktibalda, ah ok that makes more sense
[13:37:51] *** Quits: onichomp (~onichomp@2806:264:4408:2f5:70cd:1ea5:10e5:f51b) (Ping timeout: 252 seconds)
[13:38:23] *** Joins: newwebdev132 (~newwebdev@78.135.91.224)
[13:40:02] *** Quits: newwebdev13 (~newwebdev@78.135.91.188) (Ping timeout: 250 seconds)
[13:42:07] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[13:43:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:46:12] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 240 seconds)
[14:08:52] *** Joins: tercaL_ (~tercaL@user/tercal)
[14:11:35] *** Quits: tercaL (~tercaL@user/tercal) (Ping timeout: 256 seconds)
[14:11:44] *** tercaL_ is now known as tercaL
[14:13:24] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[14:15:19] *** Joins: stenno (~stenno@user/stenno)
[14:17:56] *** Quits: DavidSaylor41040 (~Username@2600:381:5f88:bee1:2780:49cf:c23c:5fd1) (Quit: Leaving)
[14:20:45] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:22:31] *** Joins: stenno (~stenno@user/stenno)
[14:32:00] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[14:36:31] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[14:41:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[14:42:11] *** Joins: stenno (~stenno@user/stenno)
[14:47:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[14:48:34] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[14:55:40] *** Joins: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[14:55:57] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[14:55:57] *** Quits: sabet (~sabet@user/sabet) (Ping timeout: 240 seconds)
[14:56:41] *** Joins: tercaL (~tercaL@user/tercal)
[14:56:54] *** Joins: sabet (~sabet@user/sabet)
[14:58:42] <mlu> DavidSaylor41040: tfw you unintentionally SQL-inject yourself when you put a ; in a comment field
[14:58:48] <mlu> ah dang, missed him :(
[15:00:24] *** Joins: stenno (~stenno@user/stenno)
[15:03:03] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[15:06:53] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:9064:d69:f6a4:2495)
[15:09:41] <Zizzo-> if i serialize() something in php 8.1 i can't use it in php 7.4?
[15:10:10] <Zizzo-> can't find any incompatible changes in the release notes though..
[15:11:08] <Naktibalda> try it and see, though it is generally recommended to avoid using serialize()
[15:11:31] <mlu> Zizzo-: quick readthrough indicates that the formats are the same, but you really should avoid it :P
[15:11:45] <mlu> choose a more common data interchange format if you can
[15:12:20] <Zizzo-> yeah, trying to upgrade in prod but ran into this
[15:12:38] <mlu> :(
[15:12:54] <Zizzo-> well, i suppose just changing the cache keys would help
[15:13:10] <mlu> json_encode / json_decode yo
[15:14:28] <Zizzo-> hmm, in 8.1 I added __(un)serialize and doing that in 7.4 makes it work... hmmm
[15:14:41] <Zizzo-> don't really understand why though
[15:15:08] <mlu> what exactly are you trying to do?
[15:15:16] <mlu> are you upgrading from 7.4 to 8.1? downgrading?
[15:15:25] <Zizzo-> upgrading yea
[15:16:17] <mlu> probably some objects changed their serialization methods
[15:16:39] <Zizzo-> so there are objects in memcache that have been serialized with serialize(). and now in 8.1  there's also __serialize because it was deprecated for the next version
[15:26:52] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[15:28:19] *** Joins: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se)
[15:28:22] *** Joins: toolbox_ (~toolbox@h213-21-123-59.cust.a3fiber.se)
[15:30:28] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:30:34] *** Joins: fandre1986 (~fandre198@78.10.85.96)
[15:32:42] *** Joins: mintoyatsu_ (~mint@user/mintoyatsu)
[15:32:53] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:34:00] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Ping timeout: 250 seconds)
[15:34:08] *** mintoyatsu_ is now known as mintoyatsu
[15:41:22] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[15:44:54] *** Joins: pmercado (~pmercado@186.107.61.173)
[15:48:48] *** Joins: Rockwood (~Rocky@user/rocky)
[15:49:23] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[15:57:44] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Remote host closed the connection)
[15:58:41] *** Joins: guido (~weechat@host-79-23-86-141.retail.telecomitalia.it)
[15:59:28] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[16:06:27] <__adrian> Zizzo-: php serialization is not (never was) a storage or transfer format. very very strongly recommend not using it as such. the implementation is not guaranteed to remain the same.
[16:07:04] <Zizzo-> yeah, totally agree. dealing with some huge legacy stuff here
[16:07:16] <__adrian> this might shed some light on what changed, btw: https://wiki.php.net/rfc/phase_out_serializable
[16:07:55] <Zizzo-> cool1
[16:08:12] <Zizzo-> at least in my case there's less than 5 usages of it so relatively simple to fix
[16:11:27] *** Quits: kerunaru (~Jmcb@108.red-80-29-99.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[16:14:16] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[16:15:22] <Blondie101010> I didn't know it was getting deprecated though :S
[16:22:36] <__adrian> it's the interface `Serializable` and its methods serialize() and unserialize() that are deprecated. __serialize() and __unserialize() are still supported, as are the _functions_ [un]serialize() and the old magic method __sleep()/__wakeup().
[16:36:29] <Blondie101010> I wonder if the new approach allows object references in the serialization...
[16:37:53] <Blondie101010> I see it as a way to prevent people from doing something "bad" but without a reasonable replacement
[16:39:28] *** Joins: roadie (~user@2a02:8108:5a40:1d87:c9a7:57e1:86d:e28b)
[16:40:41] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[16:44:04] *** Quits: guido (~weechat@host-79-23-86-141.retail.telecomitalia.it) (Read error: Connection reset by peer)
[16:49:14] <__adrian> __[un]serialize() is the replacement
[16:57:44] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[17:02:20] *** Quits: roadie (~user@2a02:8108:5a40:1d87:c9a7:57e1:86d:e28b) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[17:07:36] *** Quits: richardjh (~Thunderbi@188.29.242.135.threembb.co.uk) (Quit: richardjh)
[17:34:39] *** Joins: guido (~weechat@host-79-23-86-141.retail.telecomitalia.it)
[17:43:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:45:29] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[17:50:02] <Blondie101010> yeah but maintaining object relationships that way moves that structure problem in each member class
[17:50:20] *** Quits: ypszilon (~ypszilon@user/ypszilon) (Quit: ·ÆÆ)
[17:50:47] *** Joins: ypszilon (~ypszilon@user/ypszilon)
[17:54:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:03:46] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[18:07:24] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[18:11:39] *** Joins: Poboy (~Poboy@user/poboy)
[18:13:10] <relipse> hands down ?? is the best operator ever invented
[18:13:21] <relipse> love php7
[18:13:40] *** Quits: fandre1986 (~fandre198@78.10.85.96) (Quit: Connection closed)
[18:14:10] <Zizzo-> i'm pretty excited for the nullsafe operator though!!
[18:14:21] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:17:31] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 256 seconds)
[18:19:18] *** Joins: mallenjordan (mallenjord@c-66-41-240-170.hsd1.mn.comcast.net)
[18:20:24] <__adrian> blondie: well that's the point of it, to allow your class control over how it's serialized. if you don't want/need, then just don't implement it
[18:20:51] <__adrian> relipse: you should love php8
[18:21:02] <relipse> i do love php 8
[18:21:05] <__adrian> php7 is security support only and will be gone this year
[18:21:20] <relipse> wordpress doesn't even support php 8
[18:21:30] <__adrian> pretty sure it does
[18:21:43] <relipse> wordpress.org says that its in beta
[18:21:47] <__adrian> but doesn't change the fact that you should be working hard to be off php 7
[18:21:49] *** Quits: michele (~eraser@user/michele) (Read error: Connection reset by peer)
[18:21:59] <relipse> i'm still converting a php 5 site
[18:23:18] <relipse> Zizzo-: yeah this looks cool: $country = $session?->user?->getAddress()?->country;
[18:24:14] *** Joins: michele (~eraser@user/michele)
[18:24:59] * __adrian sighs
[18:30:23] *** Joins: thiras (~thiras@user/thiras)
[18:38:33] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[18:44:39] <podeni> Thanks TinoDidriksen
[18:44:57] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[18:52:36] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[18:57:10] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[19:06:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:10:50] *** Joins: tercaL (~tercaL@user/tercal)
[19:12:13] *** Quits: psw (2b13331353@user/psw) (Remote host closed the connection)
[19:12:15] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[19:12:50] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[19:13:03] *** Joins: psw (2b13331353@user/psw)
[19:15:27] *** Joins: nuala (~nuala@user/nuala)
[19:27:37] *** Quits: olle (~olle@212-181-59-82.customer.telia.com) (Remote host closed the connection)
[19:41:00] *** Joins: hh (~g@37.214.24.217)
[19:42:12] *** Quits: SirLouen (~SirLouen@user/sirlouen) (Quit: Hasta luego Lucas)
[19:42:45] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:43:05] *** Joins: SirLouen (~SirLouen@user/sirlouen)
[19:43:36] *** Joins: Rockwood (~Rocky@user/rocky)
[19:53:50] *** Joins: funhouse (~funhouse@user/funhouse)
[19:55:30] <Stanley> Whats the best way to generate PDF's in PHP? I've tried DOMPDF in the past but I've always had a bunch of trouble with it, I need to create pretty specific layouts with element positioned around the page and such
[19:56:10] <Stanley> In the end I just ended up creating a separate HTML page that pulls up and auto triggers the print dialogue and I've instructed them to change it to "Save as PDF" if they want to save it
[19:56:24] <Stanley> which is... hacky.. but I would like to have a proper solution so they can download it properly
[19:56:30] <TML> There's no great answer, but if you need precise layouts, you should probably be looking at pdflib
[19:57:28] <TML> though I've been hearing about this new one, PDFTron, here and there
[19:57:39] *** Joins: magla (~gelignite@55d4c150.access.ecotel.net)
[19:58:09] <Stanley> hmm, I'll check them out, thanks
[19:58:10] <nuala> I saw some people using fpdf
[19:58:22] <Stanley> Have you worked with puppeteer much at all?
[19:59:11] <Stanley> I've read a few mixed things about it but I haven't tested it out yet since from what I can tell it requires something else running in the background or something
[20:00:00] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[20:01:28] *** Joins: tsukasadt (tsukasadt@ip70-161-54-58.hr.hr.cox.net)
[20:03:16] <tsukasadt> Pretty sure I know the answer, but I wanna ask, jic. Is is possible to do a "multidimensional class" (i.e., foo::bar::a()), similar to how you can build an object of functions in JavaScript?
[20:04:45] <Naktibalda> $foo->bar()->a()
[20:06:24] <tsukasadt> Yeah, same call path but for a non-static. Is it possible? I know I can do subclasses, but it's not quite the same.
[20:06:37] <Naktibalda> it isn't clear what you want to do
[20:07:22] <tsukasadt> I'm trying to combine a group of standalone classes under a single parent, not for any programmatic benefit, just organizational.
[20:07:37] <Naktibalda> have you heard about namespaces?
[20:07:51] <Naktibalda> \Foo\Bar\A
[20:08:01] <g0z> I use fpdf I found it really easy to use.
[20:08:21] <tsukasadt> I didn't even think about using namespaces. ^^'
[20:08:54] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 252 seconds)
[20:09:13] <tsukasadt> ty, Naktibalda! This is why I'm not afraid to ask what I consider to be stupid questions, I get reminded about things I seldom use. :D
[20:09:18] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:12:12] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[20:15:12] *** Joins: bytestream2 (~bytestrea@user/bytestream)
[20:15:52] *** Quits: newwebdev132 (~newwebdev@78.135.91.224) (Quit: Leaving)
[20:16:11] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[20:16:31] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[20:18:08] *** Quits: bytestream (~bytestrea@user/bytestream) (Ping timeout: 272 seconds)
[20:20:55] *** Joins: bytestream (~bytestrea@user/bytestream)
[20:22:26] *** Quits: bytestream2 (~bytestrea@user/bytestream) (Ping timeout: 245 seconds)
[20:32:26] *** Quits: bytestream (~bytestrea@user/bytestream) (Remote host closed the connection)
[20:38:37] *** Quits: asdf__ (~slashasdf@030-245-128-083.dynamic.caiway.nl) (Ping timeout: 240 seconds)
[20:45:24] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[21:15:45] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[21:19:03] *** Joins: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04)
[21:24:32] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (Excess Flood)
[21:34:03] <Albright> Stanley: If you don't mind spending some money, DocRaptor is amazing. It's what my client uses and PDFs are essential to their business.
[21:34:10] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:9064:d69:f6a4:2495) (Quit: isflavior)
[21:52:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[22:06:29] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[22:06:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[22:11:08] *** Joins: Rockwood (~Rocky@user/rocky)
[22:14:34] <relipse> one placed i worked at banned the ?? operator from their code
[22:14:41] <relipse> i'm so glad to not be under that rule anymore
[22:17:02] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4)
[22:23:34] <Naktibalda> my team banned @TODO comments in coding standard, so they use @refactor instead
[22:23:44] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Do fish get thirsty?)
[22:24:28] <__adrian> die() bad; do exit
[22:26:37] *** Joins: NakedKing (~NakedKing@user/nakedking)
[22:28:09] <NakedKing> !paste
[22:28:32] <NakedKing> pls suggest paste&share site for php
[22:29:02] <da_wunder> gist.github.org or 3v4l.org
[22:29:15] <__adrian> tl;dr: whatever, but *not* pastebin.com. gist.gihub.com or 3v4l.org (for working examples) are very nice.
[22:29:19] <AllenJB> I tend to use die for exit with error message. A habit from my days programming Perl
[22:29:43] <__adrian> *github
[22:30:04] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[22:30:05] <Rockwood> gist
[22:32:26] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[22:32:40] <NakedKing> In this case:  https://3v4l.org/rreeX8    How can i get arrays, whichs have same ['subaddr_index']['major'] & ['subaddr_index']['minor'] and then addition their ['amount'] ?
[22:34:11] <da_wunder> NakedKing: please create "working" example to 3v4l.org
[22:34:26] <da_wunder> now you're just sharing your var_dump contents there
[22:35:33] <__adrian> indeed. start with  $example_input = [...];  and end with  $expected_result = [];
[22:35:52] <__adrian> i suspect you'll want to loop and categorize them
[22:36:16] <NakedKing> Allright, be ready.. You will see some horror soon
[22:36:47] <da_wunder> so basically you want to sum that amount where major and minor are the same?
[22:37:51] <__adrian> foreach(), foreach() sum(array_column())
[22:37:53] <NakedKing> yes da_wunder, this value returns from wallet rpc. I make a nested foreach/if logic and get there. But i stucked here, i didint get what i need yet.
[22:39:01] <da_wunder> simple foreach should do the trick
[22:39:40] <__adrian> yeah, if you have no need to keep the grouped arrays
[22:40:39] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[22:41:02] <da_wunder> waiting for that $example_input :D
[22:41:14] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[22:41:52] <hans> @NakedKing sharing a var_export() would suffice
[22:42:32] *** Quits: toolbox_ (~toolbox@h213-21-123-59.cust.a3fiber.se) (Ping timeout: 240 seconds)
[22:42:34] *** Quits: toolbox (~toolbox@h213-21-123-59.cust.a3fiber.se) (Ping timeout: 250 seconds)
[22:44:10] <NakedKing> hans, https://3v4l.org/oYKg4
[22:44:36] <NakedKing> da_wunder, i couldnt understand example_input. i need exactly what u said "so basically you want to sum that amount where major and minor are the same?"
[22:46:42] <__adrian> NakedKing: make a working example on 3v4l.org. make a variable $input as assign the list of arrays you're starting with.
[22:47:05] <da_wunder> NakedKing: example input - https://3v4l.org/aZfFO
[22:47:05] <__adrian> then make a variable $expected and assign an array that looks like you want in the end.
[22:49:53] <__adrian> then put // comments in the middle explaining what you want to do. that way we can see what you're starting with, what you're asking about, and what you want to end up with.
[22:50:50] <da_wunder> NakedKing: eg. something like - https://3v4l.org/UDdGu
[22:52:15] <hans> i would have thought it'd be something like https://3v4l.org/DYDhN
[22:52:28] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: leaving)
[22:52:29] <da_wunder> NakedKing: and with that I'm just guessing what you want - __adrian give you great advice what you need to do
[22:53:36] <da_wunder> NakedKing: as you can see eg. I and hans understood your actual question a totally different way - that is why we need that context from you
[22:54:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:54:56] <NakedKing> Something seems weirdo in these arrays, they are not surrounded with an array(), sorry i got confused i couldnt make it exact output what i get
[22:55:12] <hans> dang i didn't "addition their amount" at all :o my bad; https://3v4l.org/gf5ZM
[22:55:18] <hans> w/e
[22:55:21] <NakedKing> thanks you very much hans
[22:55:32] <__adrian> seems like you already have these arrays in your code. as mentioned, use var_export()
[22:55:59] <NakedKing> __adrian, i use var_export at there https://3v4l.org/oYKg4
[22:56:56] <__adrian> that's not valid php code
[22:56:59] <da_wunder> NakedKing: note the difference between print_r and var_dump - https://3v4l.org/A9ghD vs https://3v4l.org/UDdGu
[22:57:26] <__adrian> see da_wunder's 3v4l
[22:57:36] <da_wunder> NakedKing: with 3v4l.org please provide "working" code
[22:57:44] <__adrian> (the earlier one, aZfFO)
[23:00:07] <hans> da_wunder: fwiw 3v4l supports regex replace, replacing ^array with $a[]=array  and ^\) with ); makes it valid at least (did that in my 3v4l above)
[23:00:08] <NakedKing> i cant. I cant assign my var_export() return to a variable. https://3v4l.org/JqgIE
[23:00:46] <da_wunder> NakedKing: so just modify that code to be valid one... should not be so hard
[23:01:47] <__adrian> https://php.net/var_export  ‚Üê see $return
[23:02:04] <__adrian> the docs are very friendly, read them
[23:02:10] <da_wunder> hans: don't know about that feature - but your example didn't use the original input either - but imho that is not the issue here - fixing that is trivial and literally doable like seconds...
[23:04:48] <da_wunder> in that - 21:25 < NakedKing> __adrian, i use var_export at there https://3v4l.org/oYKg4 - the shared input _is not_ valid PHP, so I'm assuming that NakedKing is doing that var_export inside foreach loop
[23:05:12] <da_wunder> but now sauna, back in ~1 hour ->
[23:05:22] <NakedKing> yes da_wunder.
[23:05:32] <__adrian> yes, rather than exporting the entire list of arrays.
[23:06:14] <__adrian> but, assuming da_wunder's example is correct, now focus on the $expected results. show us what you want to end up with.
[23:13:07] *** Quits: sfields_ (~sfields@2605:a601:adea:7a00:e8e5:6412:6fe7:4c90) (Quit: Leaving)
[23:13:14] *** Joins: alisonw (~alisonw@user/alisonw)
[23:14:08] *** Joins: semeion (~semeion@user/semeion)
[23:15:00] *** Quits: alisonw (~alisonw@user/alisonw) (Client Quit)
[23:16:06] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[23:17:50] *** Quits: hh (~g@37.214.24.217) (Remote host closed the connection)
[23:22:14] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[23:34:25] <NakedKing> Forgive me, i cant understand well.   https://3v4l.org/sA89M   this is my code.  With print_r($key) the result is: 01201001200000001012301000000012301201234567890123456789101112   this makes me sick, how can the arrays have same keys? how can i make a process based on the key like this return?
[23:35:15] *** Joins: agrosant (~agrosant@46.12.50.59.dsl.dyn.forthnet.gr)
[23:35:38] <__adrian> so, your example earlier was a list of arrays. are they not arrays? or is this a different question?
[23:36:30] <__adrian> as for keys: is that one key?
[23:36:53] <NakedKing> same question. i stucked there.  $avaibleTransfers returns an weirdo array which i send here
[23:37:34] <NakedKing> nope. lots of array here which i tried to send here unsuccessfuly
[23:37:58] <__adrian> do  $transfers = var_export($monero->listIncomingTransfers('available', $account['account_index'])['transfers']);  and put that in a 3v4l.
[23:38:48] *** Quits: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:38:54] <__adrian> and again, the point of 3v4l is _working examples_. that means you use $example data, not just an except of your code that doesn't work in isolation.
[23:39:04] <__adrian> *excerpt
[23:40:20] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[23:41:25] <Sammitch> short, self-contained, _runnable_ examples are best
[23:42:07] *** Joins: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04)
[23:42:43] <NakedKing> Dear __adrian please dont get angry to me. I couldnt assign it again.  With your wish: $transfers = var_export($monero->listIncomingTransfers('available', $account['account_index'])['transfers']); return: https://3v4l.org/99RVo    and within pre tags (cropped last array for get bigfile error): https://3v4l.org/3fFTC
[23:44:47] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[23:45:59] <Albright> You've got your var_export() happening within a loop still.
[23:46:25] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[23:46:49] <__adrian> ^
[23:47:02] <BadAdviceCat> ^
[23:47:09] <__adrian> i'm going to take the first half of that: https://3v4l.org/IbWDm
[23:47:20] <NakedKing> I got $account['account_index'] from a loop
[23:48:03] <__adrian> for your example, only look at one of them.
[23:48:17] <NakedKing> uhmm sure
[23:48:48] <__adrian> https://3v4l.org/FCeB0  ‚Üê here. show me the array you want in the end.
[23:48:58] <Sammitch> `$monero->listIncomingTransfers('available', $account['account_index'])['transfers']` returns a numerically-indexed array, and `foreach(.... as $key => $value) {}` gives you those farily meaningless numbers as `$key`, hence your previous result
[23:50:59] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[23:51:21] <NakedKing> outside of loop. var_export with pre tags: https://3v4l.org/J5vQK
[23:52:12] *** Quits: podeni (~podeni@188.27.129.34) (Ping timeout: 272 seconds)
[23:52:25] <da_wunder> NakedKing: and once again see that - 22:18 < __adrian> https://3v4l.org/FCeB0  ‚Üê here. show me the array you want in the end.
[23:52:34] <__adrian> ^
[23:52:46] <__adrian> this should be plenty for a working example
[23:52:47] <da_wunder> should not be so hard - really
[23:53:22] *** Quits: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:54:01] *** Joins: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04)
[23:54:28] <da_wunder> and literally that is what we've asked you for more than hour, giving you some examples that we think is "right", but it seems like those are not - so we _really_ need proper input from _you_ now
[23:55:37] <NakedKing> I felt like I was mentally retarded. What is expected array at there? The array result is not clear like that in foreach. I just want to operate in the array, collect the amount, fire an event and send a notification to the user.
[23:55:37] <__adrian> https://3v4l.org/LCbSe  e.g., does this $expected describe what you want the result to be?
[23:55:57] <__adrian> the $expected result is *the result you want*.
[23:56:07] <__adrian> *what do you want to end up with?*
[23:56:31] *** Quits: ianthrive (~ianthrive@2603:3026:56d:e100:1535:eb2:8824:c04) (Client Quit)
[23:56:35] <__adrian> e.g., if you want to add 5 and 6, your $expected result is 11
[23:56:44] <Albright> Or are you not trying to transform the data and we misunderstood that part?
[23:56:49] <__adrian> and you can then use that to test whether the code you write is correct
[23:57:39] <NakedKing> Example: if $transfers[x]['subaddr_index']['major'] equals to $transfers[y]['subaddr_index']['major']. sum their ['amount']
[23:58:58] <da_wunder> NakedKing: so is this output what you want - 21:20 < da_wunder> NakedKing: eg. something like - https://3v4l.org/UDdGu ?
[23:59:09] <Albright> So you want to a) group transactions by ['subaddr_index']['major'] and then b) calculate the sum of the ['amount'] values for each group?
