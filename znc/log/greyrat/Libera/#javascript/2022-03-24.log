[00:01:15] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[00:01:19] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:01:47] <merpnderp> How is npm so fast? It's blistering fast.
[00:02:11] <banana_> magic
[00:02:18] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:02:32] <banana_> like how debugging works in general, apparently
[00:02:38] <merpnderp> Well it was a second ago. This time it took over 1 second.
[00:03:28] <merpnderp> debuggers just stop the calls at certain points...breakpoints.
[00:03:34] <matsaman> you've got solid state
[00:05:24] <banana_> yea I was saying internally how debugging works. vaguely remember hearing about a debug port etc
[00:05:34] <stagas> how do i tell babel to build for esnext i.e no compatibility transforms
[00:05:37] <banana_> but whatever im not that good
[00:05:43] *** Quits: D4mned (~D1mned@212.101.251.141) (Read error: Connection reset by peer)
[00:07:28] *** Joins: D4mned (~D1mned@89.108.142.206)
[00:08:08] <banana_> I basically have a job because we're in an app bubble
[00:08:54] <banana_> I don't live in breathe this stuff, I actually kinda hate my life
[00:09:38] <banana_> but whatever I guess, some people are buried inside the great wall
[00:10:43] *** Quits: blueagain (~blueagain@user/blueagain) (Quit: Lost terminal)
[00:12:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[00:14:25] *** Quits: zstix (~zstix@4.15.128.42) (Quit: Goodbye)
[00:15:02] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[00:15:02] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[00:16:51] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[00:17:27] *** Quits: terminalpusher (~terminalp@2a01:586:124a:1:832a:f4bb:6fb9:a240) (Remote host closed the connection)
[00:18:34] *** Quits: Guts71 (~Guts71@41.104.96.154) (Quit: Client closed)
[00:19:20] *** Joins: blueagain (~blueagain@user/blueagain)
[00:19:22] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:20:21] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:21:02] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:21:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[00:22:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:25:02] *** Joins: Duikb00t (~wardkenne@ptr-25ubqomoabq2i2bkd8h.18120a2.ip6.access.telenet.be)
[00:29:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:29:51] *** Quits: Duikb00t (~wardkenne@ptr-25ubqomoabq2i2bkd8h.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[00:30:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[00:33:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:34:07] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[00:38:17] <banana_> ...ouch... lonely world when youre the only (openly) displaced coder
[00:38:23] <merpnderp> Why is this so stupid?   await Promise.all(employees.map(async e => { e.Employees = await getEmployeeTree(e.EmpNo) }))
[00:38:30] <merpnderp> Surely there's a better way to do that?
[00:38:49] <banana_> nope looks like
[00:38:55] <banana_> looks right
[00:39:02] <merpnderp> I hate using map when I'm not using the returned array.
[00:39:08] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a)
[00:39:27] <banana_> wait
[00:39:40] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a) (Client Quit)
[00:39:45] <banana_> that doTasks thing ljharb showed me
[00:39:52] <banana_> you need it sequential?
[00:39:56] <merpnderp> no
[00:40:01] <merpnderp> I just don't like the map
[00:40:04] <merpnderp> It works just fine
[00:40:07] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:40:21] <banana_> yeah I think youre effed then
[00:40:31] <banana_> at least you love what youre doing though
[00:40:33] <merpnderp> stupid .forEach not working with async
[00:41:11] <banana_> or stupid ecma, but no they're way smarter than me
[00:42:12] <banana_> why not eliminate the async-await?
[00:42:20] *** Joins: gehn (~gehn@user/gehn)
[00:43:12] <banana_> Youre already using Promise.all(...)
[00:44:04] <banana_> maybe keep the outer await
[00:44:39] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[00:44:57] <banana_> assign Promise.all(...) return value to a variable. just make the most of it
[00:47:40] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[00:47:59] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[00:50:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:50:56] <merpnderp> looks are overrated.
[00:51:00] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[00:51:51] *** Quits: Arisco (~ckmptnml@201-11-16-179.user3p.brasiltelecom.net.br) (Quit: CyberScript - Breakfast of champions (www.cyberscript.org))
[00:52:12] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:52:16] <banana_> looks = async-await syntax
[00:53:01] <merpnderp> True, still prettier than using .then
[00:53:44] <banana_> so looks arent that overrated just to an extent
[00:54:55] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:55:25] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[00:55:38] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[00:59:46] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Client closed)
[00:59:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f944:961e:33a0:8573)
[01:00:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[01:01:10] *** Parts: kirk (kirk@kirk.shelltalk.net) ()
[01:02:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:04:32] <merpnderp> banana_: have you tried finding a job in an industry that you don't hate? Everyone needs programmers.
[01:05:04] <merpnderp> I bet somewhere in Panama there's a programming job at a banana factory. You already apparently love bananas.
[01:08:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:08:43] <blueagain> bananas, as a general rule, don't come from factories
[01:08:47] <banana_> merpnderp: that's the thing I think I chose programming to support myself
[01:09:02] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[01:09:14] <banana_> honestly would rather be a union factory worker but those are hard to come by. so I forced to not to be a simpleton
[01:09:21] <banana_> *i waas
[01:09:34] <banana_> ok scratch that
[01:10:03] <banana_> I just think it's reasonable to think it's impossible for everyone to "not hate" their job
[01:10:14] <merpnderp> Have you looked for factory jobs? Not impossible to get on with Ford in Illinois. Probably have to work as a temp for a while. But hang in there and you'll be paying those union dues and tightening those nuts on the factory floor, in not time.
[01:10:18] <banana_> there's not that many varieties of jobs out there imo
[01:11:44] <banana_> merpnderp: idk how I see it, the old factory jobs got replaced with programming jobs... in america I'm saying but in other countries too for sure
[01:12:07] <blueagain> just go back to the roots man
[01:12:08] <merpnderp> Yeah, someone has to scrub toilets, pick up trash, scrub the fry cook's grill, change bedpans, and be the face of retail. It'd be nice if you could sit back and everyone would just magically give you stuff because they love doing it so much, they'll do it for you for free.
[01:12:15] <blueagain> grow your own veggies, make your own kids, etc.
[01:13:02] <banana_> merpnderp: that's what I want to do but yeah dont want to be poor. but yeah maybe this whole economy will sink and that old "broke scare" wont matter
[01:13:38] <banana_> blueagain: for sure
[01:13:40] <blueagain> banana_: don't you think it's ironic that when you're in debt, others depend on you, but when you have money, you depend on tohers
[01:13:56] <banana_> lol
[01:13:58] <blueagain> it's kinda like you have millions in your bank account and if that's not respected anymore you're nothing
[01:14:11] <banana_> blueagain: what book gave you that insight please recommmend
[01:14:25] <blueagain> just a thought I had lately
[01:14:36] <banana_> dam that's awesome
[01:14:58] <blueagain> I'm not saying get into debt, but if you're in debt then others depend on you to pay back
[01:15:01] <banana_> blueagain: sounds like the system honestly
[01:15:15] *** Quits: c_89 (~c_89@151.54.144.26) (Quit: Connection closed)
[01:15:23] <blueagain> if you're in surplus, you depend on others, since they're in debt to you
[01:15:24] <merpnderp> If you're in debt, how do people depend on you?
[01:15:41] <blueagain> if they decide not to pay, for whatever reason (say bank goes bankrupt), you have a problem
[01:15:43] <merpnderp> They just take your collateral.
[01:15:52] <banana_> blueagain: oh I thought you meant like emotional support
[01:16:00] <blueagain> no, I actually meant money
[01:16:10] <blueagain> if you have nothing to lose, people can't take anything from you
[01:16:22] <blueagain> that's the reasons baggers here use public transportation and no one cares
[01:16:23] <merpnderp> Like your bank doesn't depend on you pay your mortgage. They just take your house and sell it.
[01:16:44] <blueagain> beggars*
[01:16:58] <banana_> like people that have money and let's say other status I think indirectly depend on others for fulfillment of that status. i think it's not just obvious because a lot of people with status i.e. things that gain them status, usually have people giving them consideration
[01:17:16] *** Joins: gehn (~gehn@user/gehn)
[01:17:22] <blueagain> merpnderp: that's when you own something. but if you don't have a mortgage and just rent a place, and don't have lots of things, then others depend on you
[01:17:25] <merpnderp> But to have that money they fulfilled a lot of other people's needs.
[01:17:30] <blueagain> you have little to lose, they have a lot to lose
[01:17:38] <merpnderp> Like my money comes from fulfilling my employer's and coworker's needs.
[01:17:55] <banana_> what blueagain said about money makes sense, I was just trying to expand on that
[01:18:11] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:18:25] <merpnderp> If you just rent, I'm not sure the person renting to you really depends on you to pay except for the month it takes to evict.
[01:18:38] <merpnderp> I just don't think being in debt makes people depend on you.
[01:18:48] <banana_> blueagain: another attempt at a parallel what you last said, if you have little status others have more to lose because of their perceived status over you
[01:18:57] <banana_> because without that perception they're a nobody too
[01:18:58] <blueagain> exactly
[01:18:58] <merpnderp> I mean I guess student debt means society depends on you to pay it back by not being worthless.
[01:19:10] <blueagain> I guess what banana_ said is a good abstraction of what I was saying
[01:19:25] <blueagain> if you have something to lose, you're in a bigger pinch than someone who hasn't much to lose
[01:19:40] <banana_> blueagain: so at the end of the day, that's why I was saying people with more status are more dependent on other people
[01:19:40] <merpnderp> That seems....crazy.
[01:19:46] <blueagain> when you're in debt you haven't much to lose
[01:19:51] <merpnderp> You're richer if you're poorer.
[01:20:06] <merpnderp> You have more power if you're powerless.
[01:20:09] <blueagain> if you own an house that's been paid for, you have a fat bank account and a car, you have quite a lot to lose
[01:20:18] <blueagain> you rely on society respecting you "owning" those things
[01:20:20] <banana_> status is just the worth other people give to you, based on some common beliefs
[01:20:36] <banana_> key idea "other people give to you"
[01:20:40] <banana_> "other people"
[01:20:51] <blueagain> banana_: money is just the worth other people give to it, based on some common beliefs, like having been exchanged for work
[01:21:21] <blueagain> otherwise it's no better than a piece of a paper or in electronic paper, than any other assortment of bytes
[01:21:30] <blueagain> electronic form*
[01:21:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f944:961e:33a0:8573) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:11] <banana_> I think though the thing holding people of higher status secure, perceptually secure at least, is the reality that those common beliefs usually dont immediate dissipate
[01:22:23] <banana_> immediately*
[01:22:40] *** Joins: voltage__ (voltage@user/voltage)
[01:22:45] <merpnderp> How could they? What idiot is going to wake up and be like "I'm taking that doctor's house cause he shouldn't have it and I should."
[01:23:06] <banana_> so I guess they're really dependent on collective of those common beliefs
[01:23:24] <merpnderp> Did you all not learn about the Social Contract in school?
[01:23:32] <blueagain> merpnderp: that's anarchy
[01:23:38] <blueagain> and it's why we shouldn't anger the poor too much
[01:23:43] <banana_> merpnderp: lol true
[01:24:08] <banana_> and no I havent read on it, ive heard of it
[01:24:23] <banana_> ^though
[01:24:26] <merpnderp> Yet another victim of public school
[01:24:36] <banana_> oh definitely
[01:25:09] <blueagain> does panama have public schools
[01:25:19] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[01:25:22] <merpnderp> Public school, where you got learn prison rules of socialization, how to stare at clocks and hate your life, and perhaps a tiny bit of how to read count doing bunny hops.
[01:25:35] <blueagain> I went to a public school
[01:25:38] <merpnderp> So did I.
[01:25:38] <blueagain> it was just alright
[01:25:55] <D4mned> how do i make this work ?
[01:25:56] <D4mned>   let regex = new RegExp(/`${ownNick}`/ig)
[01:25:57] *** Quits: voltage (voltage@user/voltage) (Ping timeout: 252 seconds)
[01:25:59] <merpnderp> Mine sucked. Guns, knives, fights, screwing in the hallway.
[01:26:16] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:27:11] <blueagain> oO
[01:27:14] <merpnderp> D4mned: regex.exec("myString")
[01:27:24] <merpnderp> regex.test
[01:27:54] <blueagain> don't think I've ever seen a gun, except when soldiers were carrying
[01:28:01] <blueagain> certainly not at school
[01:28:18] <banana_> mine sucked because I think im a better self-learner
[01:28:37] <banana_> I would ask the teacher a question on my mind I really wanted to learn and "shut up pay attention"
[01:28:43] <banana_> basically
[01:28:50] <EdFletcher> D4mned: you can pass a string into the RegExp constructor, so you can do new RegExp(`${ownNick}`, 'ig') -- but really, if you're just looking for `ownNick` in a string, just use .includes(ownNick). no point in using regex when not needed.
[01:30:12] <D4mned> is there a way to use .includes but case insensitive ?
[01:30:20] <merpnderp> banana_: If you hadn't mastered the material at hand, maybe they had a point?
[01:30:38] <merpnderp> D4mned: that's what the i is for.
[01:31:01] <D4mned> in regex
[01:31:23] <banana_> merpnderp: possibly, yeah like a lack of discipline on my part? maybe, I also I think I wasn't motivated to learn what they wanted me to learn
[01:32:03] *** Joins: pavonia (~user@user/siracusa)
[01:32:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:32:12] <merpnderp> banana_: and people only have so much drive a day. If schools waste 90% of it on the stress of being in a shitty environment, how are you supposed to focus to learn
[01:32:13] <EdFletcher> D4mned: ah gotcha, no .includes is case-sensitive, so yeah in your situation then regex is the ticket
[01:32:29] <banana_> merpnderp: yep exactly
[01:32:47] <D4mned> thanks EdFletcher, merpnderp
[01:33:12] <banana_> I think public schools work well only if the parents motivate the kids to pay attention and learn certain subjects
[01:33:26] <paulcarroty> if 90% your time wasted on stress it's huge red flag
[01:33:46] <banana_> else it's just custodial
[01:34:15] <EdFletcher> D4mned: sure thing, best of luck!
[01:34:25] <merpnderp> I know an 8th grade math teacher whose kids jump on their desks, yell, cus her out, run around screaming, and she huddles in the corner with the few students who want to learn.
[01:34:32] <merpnderp> Been like that for maybe 10 years.
[01:34:54] <banana_> haha dam
[01:35:09] <merpnderp> Not even sure you could call it a school. Pre-prison holding camp?
[01:35:17] <banana_> honestly this sounds messed up
[01:35:19] <paulcarroty> ghetto somewhere in Detroit?
[01:35:30] <merpnderp> OKC
[01:35:34] <banana_> but I think I wouldve done better in school if they still have corporal punishment
[01:35:46] <banana_> because then I wouldve had some motivation to pay attention
[01:36:07] <merpnderp> Shite, they'd do better if they had *any* punishment. Cuss out a teacher and come back 5 minutes later from the office with a sucker.
[01:36:08] <banana_> "oh that's why this subject is important"
[01:36:20] <banana_> becuase the teacher smacks me if I dont listen ouch
[01:36:49] <banana_> the put-downs teachers did were apparently ineffective
[01:36:54] <merpnderp> Go on r/teachers and see what horror actual teachers are putting up with.
[01:38:15] <banana_> yeah I think it's because the teachers come across as weak since they're worried about getting fired
[01:38:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[01:38:50] <banana_> like kids even think "come on stand up for yourself teacher"
[01:39:05] <merpnderp> They come across as weak because admin does not back them up. Send a kid to the office and they'll be back in 5 minutes and you'll be in trouble for not doing some magic ninja-teacher stuff to make them not misbehave.
[01:39:30] <banana_> I definitely didnt respect my teachers unfortunately
[01:39:53] <banana_> except one band teacher, that dude knew how to single out people in that huge class. but those people are rare
[01:40:07] <merpnderp> Did they have any power over you? If you acted up could they suspend you, get you expelled, make you sit in the hall, give real consequences?
[01:41:08] <banana_> this is gonna sound messed up but I think there might even be less school shootings if there was corporal punishment
[01:41:27] <merpnderp> If bullies got swats, maybe so.
[01:41:54] <banana_> because the outcasts and the popular kids have equal chance of getting smacked so they build at least some camaraderie
[01:42:06] <merpnderp> `Pick on a mate, get your arse bate.`
[01:42:15] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[01:42:37] <banana_> the outcasts and popular ones. obviously there's still that popularity issue but at least they potentially share the same enemy
[01:42:38] <blueagain> oO
[01:43:02] <blueagain> we have jocks, nerds/metalists and some idiots
[01:43:05] <blueagain> had*
[01:43:55] <banana_> I'm not convinced bullies cause those shootings I think it's just outcasts feeling like outcasts.
[01:44:58] <merpnderp> I'm pretty sure school shootings happen because of a lack of justice, or at least lack of perceived justice. They see it missing in their immediate social circle, realize the world is sorely lacking in it, and give in to nihilism.
[01:45:23] <merpnderp> And they're going to teach the world the cost of all this injustice.
[01:46:01] <banana_> with corporate punishment the kid with status a hair above outcast might cry in front of everyone, moving their status close to the outcast therefore making the outcast less of an outcast. assuming outcasts just have a lack of status
[01:46:12] <banana_> corporal punishment*
[01:46:21] <merpnderp> The part where they murder a bunch of the fellow students creating even more injustice never seems to click with them though.
[01:46:53] <merpnderp> banana_: in the US swats were usually in the principles office.
[01:47:24] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 252 seconds)
[01:47:40] <banana_> might cry in front of everyone, and yeah I guess meant the tough guy gender in that case, but I think other cases apply to every gender
[01:48:19] <merpnderp> tough guy is now a gender?
[01:49:24] <banana_> some of these shooters might be sadistic, not saying this part is good but maybe that indulgence would be fed by seeing another kid get smacked by the teacher
[01:49:48] <banana_> I meant boys not girls because boys generally want to not cry in front of people. a societal standard maybe
[01:50:00] *** Quits: voltage__ (voltage@user/voltage) (Quit: Leaving)
[01:50:32] <merpnderp> My dad would get swats and ask if that’s all they had. Course he got far worse from his dad.
[01:51:03] <banana_> will they bring back corporal punishment? probably not, but I think they would bring back capital punishment for deserters in another world war
[01:51:09] <banana_> sun tzu style
[01:51:24] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:51:45] <banana_> merpnderps: oh really, yeah but there were probably soft parents back then
[01:52:01] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[01:52:17] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:52:19] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) ()
[01:52:22] <banana_> like slightly more privileged kids I'm guessing
[01:54:44] <banana_> it's just odd the history of things how that went out of favor over other things.
[01:55:00] *** Quits: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Quit: i'm still here dont worry)
[01:55:39] <banana_> guessing it was something the higher stratums of the middle class pushed for
[01:57:34] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[01:58:32] *** Joins: snedd (~snedd@86.14.114.137)
[02:00:22] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[02:05:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:05:13] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[02:07:55] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[02:09:43] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[02:13:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:16:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:16:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:26:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:27:17] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 256 seconds)
[02:29:54] *** Joins: vysn (~vysn@user/vysn)
[02:32:51] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:33:09] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:35:56] *** Joins: daedeloth (~daedeloth@cust-248-179-110-94.dyn.as47377.net)
[02:36:29] <daedeloth> probably a weird question, but I am trying to request orientation lock from within an iframe and that doesn't seem to work. any thoughts? I've been experimenting with postmessage, but to no success
[02:37:14] <banana_> is the iframe of a different domain?
[02:37:35] <daedeloth> yea
[02:37:37] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[02:37:53] <banana_> yeah won't work. the same origin policy blocks you from doing much
[02:38:18] <banana_> same exact situation with communicating with the users other tab window, if they have different domains
[02:38:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[02:39:18] <banana_> the same-origin policy protects you from a crappy time though, just as another user.
[02:39:47] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:cca3:219a:bf55:d453) (Quit: Client closed)
[02:40:07] <daedeloth> oh wait I just noticed I implemented my message listener incorrectly, I think it actually may work now
[02:40:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:40:37] <daedeloth> requestFullscreen within the iframe works, then send postmessage to parent window and then let that window do orientation lock
[02:40:39] <banana_> lol
[02:40:49] <banana_> I actually might be wrong huh wow https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
[02:41:07] <daedeloth> testing now, not sure if it will work
[02:41:19] <banana_> "Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the "same-origin policy"). window.postMessage() provides a controlled mechanism to securely circumvent this restriction (if used properly)."
[02:41:31] <banana_> ok youre on to something
[02:42:14] <daedeloth> haha okay works
[02:42:47] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[02:44:05] <daedeloth> https://play.quizwitz.com/11136:b4FfVapIqE/science-general-trivia
[02:44:06] *** Joins: akissz (~akissz@200.68.187.174)
[02:44:19] <daedeloth> I'm sure you all going to say I'm breaking the internet ;-)
[02:45:03] *** Quits: akissz (~akissz@200.68.187.174) (Changing host)
[02:45:03] *** Joins: akissz (~akissz@user/akissz)
[02:46:19] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[02:47:11] <akissz> How to update css with jquery on a not hovered hover elements? For example in an online website editor there is a color picker and you select a new color for the hover element. Then you go to the preview and the new hover color does not display because the mouse was not hovering on the element at the time of the setting/color change. So the preview
[02:47:11] <akissz> can only be seen by saving and refreshing completely. How do you make the jquery do the css update for all elements that have the correct css/pointer to the element?
[02:47:22] <skylite> ljharb: Could you help me understand the "flatMap trick" in this code? https://codesandbox.io/s/mystifying-chatelet-wy5fz8?file=/src/index.js:1332-1528
[02:47:36] <skylite> I finally have time to come back to it
[02:49:27] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:49:46] <akissz> Hi
[02:52:02] <akissz> -_-
[02:52:12] <banana_> daedeloth: dude cool!
[02:54:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:56:42] *** Joins: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt)
[02:56:52] *** Joins: ferdna (~ferdna@user/ferdna)
[02:59:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:05:59] *** Joins: Akiva (~Akiva@user/Akiva)
[03:08:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[03:09:12] *** Joins: voltage_ (voltage@user/voltage)
[03:09:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:11:56] *** Joins: pmercado (~pmercado@186.107.58.34)
[03:14:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[03:14:52] *** Joins: inert (~inert@98.186.198.230)
[03:17:23] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:18:45] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:19:12] *** Joins: inert18 (~inert@98.186.198.230)
[03:19:13] *** Quits: inert18 (~inert@98.186.198.230) (Client Quit)
[03:19:20] *** Joins: inert25 (~inert@98.186.198.230)
[03:19:28] *** Quits: inert25 (~inert@98.186.198.230) (Client Quit)
[03:19:40] *** Joins: thiras (~thiras@user/thiras)
[03:19:46] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[03:20:12] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 240 seconds)
[03:21:15] <systemfault> skylite: In this case, it's used as a way to do a .map and a .filter at the same time.
[03:21:55] <systemfault> skylite: Which may look clever... but in practice, .flatMap is so slow that doing .map AND .filter will be a lot faster.
[03:22:15] *** Quits: inert (~inert@98.186.198.230) (Ping timeout: 256 seconds)
[03:23:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[03:24:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[03:24:58] <Maxdamantus> I wonder if tuples could fix that.
[03:26:20] <systemfault> I wonder that too, maybe flatMap (and .flat) are simply not optimized at all at this point
[03:27:16] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[03:27:26] <systemfault> For example, if you do a test between .flat(1) and Array.prototype.concat.apply([], arrayOfArrays), you'll see that the latter is so much faster, it's ridiculous
[03:27:42] <Maxdamantus> Isn't `.flat` recursive?
[03:28:12] <systemfault> No
[03:28:15] <Maxdamantus> Oh, `flat(1)`
[03:29:06] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[03:29:23] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:30:01] <systemfault> It's just that the Array.prototype.concat.apply pattern has been used since the beginning of times so it has been optimized
[03:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:30:17] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[03:30:17] <systemfault> Unless... .flat() has a rule that makes such optimization impossible (Possible)
[03:30:35] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:30:41] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[03:31:19] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:31:39] <Alexendoo> New stuff just tends to be slow at first, the old stuff has had years to brew
[03:33:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:33:21] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 256 seconds)
[03:33:39] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:a123:54c0:358b:30bb) (Ping timeout: 250 seconds)
[03:33:43] <systemfault> That said, .flat() is not limited by stack unlike Array#concat.apply.
[03:34:07] *** Joins: pizdets (~pizdets@183.182.111.79)
[03:35:09] <systemfault> Alexendoo: Maxdamantus For fun... https://jsfiddle.net/pq51s4wf/
[03:35:25] <systemfault> If you increase length by 1000, it will stack overflow
[03:35:30] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 272 seconds)
[03:35:32] <akissz> Hi
[03:36:03] <systemfault> But when it works, it's nearly 10 times faster
[03:41:37] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be)
[03:46:27] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:50:52] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Read error: Connection reset by peer)
[03:51:07] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[03:51:11] *** Quits: D4mned (~D1mned@89.108.142.206) (Remote host closed the connection)
[03:51:28] *** Joins: D4mned (~D1mned@89.108.142.206)
[03:52:22] *** Quits: Cyp (~cyp@213.237.85.100) (Excess Flood)
[03:53:16] *** Joins: Cyp (~cyp@213.237.85.100)
[03:53:24] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[03:53:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:54:09] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[03:54:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:55:38] <Maxdamantus> systemfault: which one's faster?
[03:55:59] *** Quits: src (~src@user/src) (Quit: leaving)
[03:56:00] <Maxdamantus> For me it shows `flat(1)` is faster, with the default length you've provided.
[03:56:15] <Maxdamantus> > flat(1): 15ms - timer ended
[03:56:16] <Maxdamantus> > Array#concat.apply: 80ms - timer ended
[03:56:21] <Maxdamantus> (Firefox)
[03:56:26] <systemfault> I added timers in the snippet (should show in the console). For me: flat(1): 62.464111328125 ms. Array#concat.apply: 7.5400390625 ms
[03:56:43] <systemfault> Using Chrome
[03:56:56] <systemfault> Strange to see the reverse here in firefox
[03:57:34] <systemfault> (I mostly use Chrome and NodeJS in my day to day... so personally, the V8 performance matters more)
[03:58:43] <systemfault> I'll try Firefox
[03:59:08] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:59:40] <systemfault> Yeah, opposite in Firefox, haha. flat(1): 19ms - timer ended.    Array#concat.apply: 116ms - timer ended
[04:00:46] <systemfault> .flat is super fast on my old version of safari
[04:01:05] <systemfault> (I'm still on Big Sur... haven't updated to latest MacOS)
[04:01:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:02:15] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[04:02:59] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:03:07] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:03:13] <systemfault> So, it looks like Chrome's implementation has a problem, it should be able to reach the performance of both the Firefox and Safari version
[04:04:51] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:69ad:8542:a4d9:3e30)
[04:06:15] *** Quits: wand (~user@gateway/tor-sasl/wand) (Ping timeout: 240 seconds)
[04:07:49] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be) (Ping timeout: 240 seconds)
[04:08:26] *** Joins: wand (~user@gateway/tor-sasl/wand)
[04:12:03] <systemfault> Same thing for flatmap... so slow on chrome that it's unusable. It's super fast on chrome and Safari
[04:12:14] <systemfault> Here is the code https://jsfiddle.net/oa7nxq4d/
[04:15:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[04:16:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[04:16:37] *** Joins: Everything (~Everythin@37.115.210.35)
[04:17:32] <tokie> this really shows how awesome xtermjs is: https://lololo.lol/54z
[04:19:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[04:19:46] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:23:12] <howdoi> n> n> new Promise((resolve) => { resolve(); resolve();});
[04:23:13] <jellobot> (fail) ReferenceError: n is not defined
[04:23:19] <howdoi> n> new Promise((resolve) => { resolve(); resolve();});
[04:23:19] <jellobot> (okay) undefined
[04:23:27] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Ping timeout: 256 seconds)
[04:24:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:25:44] <blueagain> systemfault: you meant "super fast on firefox and safari" no?
[04:26:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:26:51] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 256 seconds)
[04:27:20] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[04:29:42] *** Quits: c17r_ (~c17r@c17r.com) (Remote host closed the connection)
[04:31:01] *** Joins: c17r (~c17r@c17r.com)
[04:31:24] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[04:31:40] *** Quits: c17r (~c17r@c17r.com) (Remote host closed the connection)
[04:32:39] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:69ad:8542:a4d9:3e30) (Quit: Client closed)
[04:32:43] *** Joins: c17r (~c17r@c17r.com)
[04:32:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:32:56] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:33:15] *** Quits: c17r (~c17r@c17r.com) (Remote host closed the connection)
[04:35:52] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792)
[04:35:58] *** Joins: c17r (~c17r@c17r.com)
[04:36:41] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:37:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[04:37:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[04:39:59] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[04:40:44] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[04:41:16] <howdoi> n> "".startsWith(/why/)
[04:41:16] <jellobot> (fail) TypeError: First argument to String.prototype.startsWith must not be a regular expression
[04:41:20] <howdoi> :|
[04:41:51] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[04:42:36] <howdoi> n> /test/.test('test')
[04:42:37] <jellobot> (okay) true
[04:42:40] <ProfSimm> Time to extend JSON with expressions? https://i.imgur.com/ewljyto.jpg
[04:45:26] <howdoi> n> Reflect.ownKeys(global).filter(k => "fetch FormData Request Response Headers".split(" ").includes(k))
[04:45:27] <jellobot> (okay) []
[04:45:29] <howdoi> hmm
[04:45:49] <howdoi> ljharb: was there any reason for startsWith to not accept regexp?
[04:46:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[04:46:42] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[04:46:48] <howdoi> n> Reflect.ownKeys(global).filter(k => /f/.test(k))
[04:46:48] <jellobot> (fail) TypeError: Cannot convert a Symbol value to a string
[04:48:32] <ljharb> howdoi: if you have a regex then starts with is trivial
[04:49:28] <howdoi> trying to simplify
[04:49:28] <howdoi> Reflect.ownKeys(global).filter(k => "fetch FormData Request Response Headers".split(" ").includes(k))
[04:49:31] *** Quits: Talon (Talon@172.77.96.206) (Ping timeout: 256 seconds)
[04:49:43] <howdoi> Why startswith then?
[04:50:25] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:50:33] *** ljharb sets mode: +v Alexendoo
[04:51:06] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 252 seconds)
[04:51:14] <ljharb> howdoi: because taking a dynamic string and putting it in a regex is unsafe
[04:51:32] <howdoi> ljharb: hmm...
[04:52:07] <ljharb> skylite: it’s just that flatMap, when the callback returns an array, spreads it. So an empty array means “nothing”
[04:52:25] <howdoi> looks like duplicate resolves in node should show a warning message...
[04:52:28] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792) (Remote host closed the connection)
[04:52:51] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792)
[04:53:00] *** Quits: Decker (~d3x0r@user/d3x0r) (Remote host closed the connection)
[04:54:56] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:55:04] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:55:04] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:55:05] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:55:14] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[04:55:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:55:34] *** Joins: pavonia (~user@user/siracusa)
[04:55:57] <ljharb> howdoi: what do you mean duplicates?
[04:57:15] <systemfault> blueagain: Not sure what I wrote... but what I wanted to say is: Both .flat and .flatMap are unusably slow on V8 at the moment. They're perfectly fine on Safari and Firefox.
[04:57:29] <systemfault> We're talking 10 times slower.
[04:57:50] <howdoi> ljharb: multipleResolves
[04:58:06] <ljharb> i don’t know what that means
[04:58:06] <howdoi> n> new Promise((resolve) => { resolve(); resolve();});
[04:58:07] <jellobot> (okay) undefined
[04:58:18] *** pikapika_lunar is now known as pikapika
[04:58:30] <ljharb> howdoi: why would that show a warning? That’s a noop by spec
[04:58:34] <systemfault> howdoi: That wouldn't work well...
[04:58:50] <ljharb> we’d have to add a host hook, and I’d block that evacuee node already abused the unhandled rejection host hook
[04:59:04] <ljharb> *because
[05:00:09] <howdoi> ah, read it wrong; The multipleResolves event has been deprecated.
[05:00:31] *** Joins: Talon (~Talon@172.77.117.101)
[05:01:00] <howdoi> n> process.on('multipleResolves', () => console.log('hmm')); new Promise((resolve) => { resolve(); resolve();});
[05:01:00] <jellobot> (okay) undefinedhmm
[05:01:06] <howdoi> see ^
[05:02:40] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:03:05] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[05:03:33] *** Quits: daedeloth (~daedeloth@cust-248-179-110-94.dyn.as47377.net) (Remote host closed the connection)
[05:03:54] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792) (Remote host closed the connection)
[05:05:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:08:53] <howdoi> https://nodejs.org/api/process.html#event-multipleresolves
[05:08:53] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:09:24] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[05:09:41] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:10:13] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[05:11:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:12:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[05:15:23] *** Joins: Guest4187 (~blahboyba@c-67-161-97-172.hsd1.wa.comcast.net)
[05:16:32] *** Joins: Akiva (~Akiva@user/Akiva)
[05:16:43] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[05:16:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:20:00] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:20:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:21:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:22:36] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[05:25:04] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[05:25:42] *** Quits: akissz (~akissz@user/akissz) (Ping timeout: 272 seconds)
[05:27:36] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[05:28:29] <austincheney> weird.  I just noticed the typescript compiler is removing a setTimeout I have with a delay of 5ms
[05:29:20] <austincheney> nm, i was looking at a file written to an old location
[05:31:32] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:32:44] *** Joins: matacao (~eduardo@2804:14c:6322:9953::1004)
[05:37:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:38:49] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[05:39:56] <ljharb> howdoi: gross, that should never have existed
[05:39:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[05:43:20] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[05:43:21] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 252 seconds)
[05:44:58] *** Parts: Everything (~Everythin@37.115.210.35) ()
[05:48:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:51:03] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[05:51:06] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-b450-9897-7446-10b7.res6.spectrum.com)
[05:53:33] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[05:56:44] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[05:59:13] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[06:00:50] *** Joins: remote (~self@user/hackers)
[06:01:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:01:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:03:14] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[06:04:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:05:16] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Remote host closed the connection)
[06:06:23] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[06:07:38] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[06:08:43] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[06:10:40] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[06:11:45] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[06:13:57] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[06:15:57] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 240 seconds)
[06:18:18] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:19:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:19:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Read error: Connection reset by peer)
[06:20:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:22:18] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[06:24:07] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be)
[06:28:27] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[06:31:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:32:54] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[06:34:43] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:37:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[06:39:48] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[06:40:16] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-b450-9897-7446-10b7.res6.spectrum.com) (Quit: Client closed)
[06:43:39] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[06:43:58] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[06:44:14] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[06:47:20] *** Joins: nomic (~nomic@185.217.117.249)
[06:48:40] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[06:50:22] *** Joins: src (~src@user/src)
[07:01:40] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[07:03:28] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[07:04:49] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[07:06:45] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[07:06:55] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[07:07:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:08:19] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[07:10:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:10:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:12:27] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[07:13:48] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[07:14:12] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b1ca:bc59:ffb7:503b)
[07:15:00] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:15:23] *** Joins: mud (~mud@user/kadoban)
[07:17:59] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[07:19:13] <buu> https://www.geepawhill.org/2017/07/15/estimating-stop-trying-harder/
[07:19:14] <buu> heh
[07:20:31] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:24:15] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:25:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:25:22] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:25:24] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[07:28:24] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 252 seconds)
[07:32:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:32:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:32:41] *** Joins: wroathe (~wroathe@user/wroathe)
[07:37:26] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:39:43] *** Joins: thojanssens (~thojansse@49.229.172.95)
[07:42:17] <thojanssens> The MDN docs say "There are 7 primitive data types: string, number, bigint, boolean, undefined, symbol, and null."
[07:42:34] <thojanssens> is `new Number(1)` considered a primitive according to MDN?
[07:42:44] <buu> n> typeof new Number(1)
[07:42:45] <jellobot> (okay) 'object'
[07:43:14] <thojanssens> n> typeof Symbol('foo')
[07:43:14] <jellobot> (okay) 'symbol'
[07:45:15] <buu> What makes something primitive
[07:45:30] <thojanssens> buu, https://developer.mozilla.org/en-US/docs/Glossary/Primitive
[07:45:39] <thojanssens> "data that is not an object and has no methods"
[07:46:06] <buu> ah
[07:46:25] <buu> n> new Number(1).foo
[07:46:26] <pavonia> What a primitive definition!
[07:46:26] <jellobot> (okay) undefined
[07:46:31] <buu> so.. object
[07:46:47] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[07:46:58] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[07:47:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:47:03] <thojanssens> buu, ah right :D
[07:47:12] <thojanssens> thank you
[07:47:16] <rustyshackleford> postman sucks. is there a better alternative?
[07:47:44] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:48:44] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[07:50:06] <thojanssens> n> typeof new String('foo')
[07:50:07] <jellobot> (okay) 'object'
[07:50:12] <buu> not running a mailserver?
[07:50:22] *** Joins: doji (~doji@user/doji)
[07:50:32] *** Joins: alystair (~alystair@user/alystair)
[07:51:21] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[07:51:57] <alystair> What would be the correct way to do the following? foo = { maxEvents:10, events:Array(this.maxEvents) }
[07:52:10] *** Quits: src (~src@user/src) (Quit: leaving)
[07:52:43] <alystair> because I can't use maxEvents before they are defined, guess objects are defined in one-shot and not top to bottom :/
[07:53:08] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6)
[07:53:51] <buu> alystair: indeed
[07:54:13] <buu> constructor(){this.maxEvents=10; this.events=Array(10)}
[07:54:40] <alystair> constructor can be used in basic objects? isn't that a class thing? o_O
[07:54:58] *** Joins: matsaman (~matsaman@user/matsaman)
[07:55:12] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:553e:75de:3660:e0b8)
[07:55:40] <buu> yes, make a class
[07:55:42] <buu> classes are cool
[07:55:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:55:49] <pavonia> n> let foo = (m => ({ maxEvents: m, events:Array(m) }))(10); foo
[07:55:50] <jellobot> (okay) { maxEvents: 10, events: [ <10 empty items> ] }
[07:55:58] <alystair> even when I only have a single instance? o_O
[07:56:11] <buu> alystair: It's fun to define types
[07:56:18] <buu> then you get tab completion and stuff
[07:56:32] <alystair> buu you're scaring me this is starting to sound like TS :V
[07:56:54] <alystair> I already have tab completion, I have a categorized object/fn tree for my entire lib :D
[07:56:57] <buu> JOIN US
[07:57:08] <alystair> all nicely organized /w JSDOC
[07:57:08] <buu> Embrace the type side
[07:57:57] <alystair> I already embrace @type in JSDOC :V
[07:58:01] <buu> =[
[07:58:14] <alystair> why do I need an interpreter between me and muh web ready code
[07:58:17] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b1ca:bc59:ffb7:503b) (Ping timeout: 240 seconds)
[07:58:28] <buu> Because JSDOC is hideously ugly?
[07:59:10] *** Joins: paule32_ (~paul@nat-91-137-16-12.net.encoline.de)
[07:59:10] *** Quits: paule32_ (~paul@nat-91-137-16-12.net.encoline.de) (Changing host)
[07:59:10] *** Joins: paule32_ (~paul@user/paule32)
[07:59:26] <alystair> How do you document params/props in TS then?
[07:59:35] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[08:00:39] <systemfault> You need a factory function if you don't use a class... as simple as that.
[08:00:52] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 272 seconds)
[08:00:54] <systemfault> Even if it's a IIFE
[08:01:13] *** Joins: paule32__ (~paul@nat-91-137-21-12.net.encoline.de)
[08:01:13] *** Quits: paule32__ (~paul@nat-91-137-21-12.net.encoline.de) (Changing host)
[08:01:13] *** Joins: paule32__ (~paul@user/paule32)
[08:02:04] <alystair> I might have to bite the bullet /w classes if/when I decide to transform this monster 3000 line+ script into individual files/exports lol
[08:02:16] <systemfault> n>  const foo = (() => { const maxEvents = 10; return { maxEvents, events: Array(maxEvents) }; })() foo;
[08:02:16] <jellobot> (fail) SyntaxError: Unexpected identifier
[08:02:32] <systemfault> I f'ed up something... but like that.
[08:02:35] <alystair> yeah
[08:02:45] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[08:03:06] <systemfault> Also, avoid using the Array constructor, it creates sparse arrays
[08:04:12] *** Quits: paule32_ (~paul@user/paule32) (Ping timeout: 240 seconds)
[08:04:21] <alystair> even if I know it will be populated in an ordered fashion
[08:04:40] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 272 seconds)
[08:05:04] *** Joins: paule32 (~paul@nat-91-137-16-12.net.encoline.de)
[08:05:05] *** Quits: paule32 (~paul@nat-91-137-16-12.net.encoline.de) (Changing host)
[08:05:05] *** Joins: paule32 (~paul@user/paule32)
[08:05:07] <alystair> and 10 is the maximum length, at which point the 'oldest' item is removed
[08:05:32] <systemfault> It's still a sparse array.
[08:05:46] <systemfault> Anyway, you do what you want :)
[08:06:47] <systemfault> Array.from({ length: maxEvents }) is better, and you can even initialize the values with the second parameter Array.from({ length: maxEvents }, (value, index)  => index)
[08:07:01] *** Quits: paule32__ (~paul@user/paule32) (Ping timeout: 240 seconds)
[08:07:14] <alystair> I just used this for the example, if I removed this constructor and leave it as events:[] it would behave in the same way if someone attempted accessing events that weren't logged yet
[08:07:22] <alystair> @type {Array.<Event|undefined>} :V
[08:08:04] <systemfault> n> Array(10).map(() => 1)
[08:08:04] <jellobot> (okay) [ <10 empty items> ]
[08:08:11] <systemfault> n> Array.from({ length: 10 }).map(() => 1)
[08:08:11] <jellobot> (okay) [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[08:08:22] <systemfault> n> Array.from({ length: 10 }, () => 1)
[08:08:23] <jellobot> (okay) [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[08:08:43] <systemfault> alystair: Yes.
[08:08:44] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[08:09:29] <alystair> I just needed it as an excuse to get into the weeds of constructors/etc
[08:09:36] <systemfault> I see
[08:10:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:12:54] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[08:12:57] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[08:13:03] <alystair> tbh the thing that annoys me most about classes is `this.` tacked on everything
[08:14:35] <banana_> yep
[08:14:43] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[08:15:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[08:17:41] <duckgoose> ...
[08:17:52] <duckgoose> 'this.' is wonderful
[08:18:13] <alystair> (fail) Uncaught SyntaxError: Unexpected token '...'
[08:18:24] <alystair> :D
[08:19:31] <duckgoose> I don't see any better way of referencing a class from within itself
[08:20:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:20:20] <banana_> this is great
[08:21:28] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:22:02] <systemfault> You use simple functions.. that way you don't need "this" :p
[08:22:04] <alystair> n> return true;
[08:22:05] <jellobot> (fail) SyntaxError: Illegal return statement
[08:22:21] <banana_> n> const thisAsInAnArrow = a => `${a} is better`;  thisAsInAnArrow('this');
[08:22:22] <jellobot> (okay) 'this is better'
[08:22:33] <alystair> n> foo=1; foo;
[08:22:33] <jellobot> (okay) 1
[08:22:47] <duckgoose> don't need maybe
[08:22:48] <alystair> n> const foo = { max:10, init(){ this.events=Array(this.max); delete this.init; return this; } }.init(); foo.events;
[08:22:49] <jellobot> (okay) [ <10 empty items> ]
[08:22:52] <duckgoose> would rather have yes
[08:22:52] <alystair> boom.
[08:22:59] <alystair> object initialized.
[08:23:19] <systemfault> alystair: That's really dumb though... just use a class in that case.
[08:23:46] <alystair> but I am not planning on extending, nor having more than one instance of the majority of my objects :/
[08:23:52] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[08:24:13] <banana_> n> const func = function () { return `${this} sucks`}; func.call('this')
[08:24:14] <jellobot> (okay) 'this sucks'
[08:24:49] <systemfault> n> function makeFoo(maxEvents) { return { maxEvents, events: Array(maxEvents) }  } const foo = makeFoo(); foo;
[08:24:50] <jellobot> (okay) { maxEvents: undefined, events: [ undefined ] }
[08:25:11] <systemfault> n> function makeFoo(maxEvents = 10) { return { maxEvents, events: Array(maxEvents) }  } const foo = makeFoo(); foo;
[08:25:12] <jellobot> (okay) { maxEvents: 10, events: [ <10 empty items> ] }
[08:25:44] <systemfault> You don't want "one element" especially if it's mutable.
[08:25:51] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:553e:75de:3660:e0b8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:25:55] <duckgoose> not everything needs to be a class
[08:26:01] <systemfault> You end up with some hard to test singleton-style of garbage.
[08:26:39] <banana_> honestly on my work project once I stopped using classes things went way smoother
[08:26:53] <alystair> I don't need factories when only a single instance is necessary either <_>
[08:27:04] <banana_> factory functions that return objects were way more flexible, I think anyways
[08:27:25] <alystair> or whatever the makeFoo example systemfault posted above is
[08:27:32] <systemfault> Again... if you're writing mutable singletons, you're writing untestable crap.
[08:27:32] <alystair> my terminology is non-existant
[08:27:34] <duckgoose> if you're just holding a bunch of functions there's not really any advantage to using a class
[08:27:43] *** Joins: pmercado (~pmercado@186.107.58.34)
[08:28:23] <banana_> classes are a mess anyways with the public fields and how the constructor works with that shit, plus if the classes extend a base and you have a base constructor
[08:28:31] <banana_> eff that shit I wish I never used classes
[08:28:58] <systemfault> Singleton are global, usually mutable, state... to properly test them, you need to add an init function... then a reset function and be sure that it works properly... then you can write your tests, making sure that you reset your global state for every test.
[08:29:02] <banana_> I rather import the same factory in a few other factory functions
[08:29:05] <duckgoose> classes have their places
[08:29:30] <systemfault> Yeah, alongside my kid's used diapers bin...
[08:29:39] <duckgoose> of course we never really needed the class declaration
[08:30:08] <duckgoose> it's just semantical sugar
[08:30:14] <alystair> systemfault - couldn't test suite just 'F5' to return to fresh init() state. No reset function needed?
[08:30:16] <banana_> I think with factory functions you have to be really good about regulating your object structure. classes I think makes that part easier, but even with classes you have to keeep an eye on that
[08:30:40] <systemfault> alystair: That's not how people test their code in the real world....
[08:30:43] <banana_> unless you use TS or something than yeah dont see a point to using classes. in a practical sense
[08:31:04] <duckgoose> ew
[08:31:06] <duckgoose> TS :(
[08:31:37] <duckgoose> write code in TS > transpile into JS > code ends up being the same JS you would've written yourself anyway
[08:31:44] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[08:31:47] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:32:10] <banana_> not saying to use it im just saying classes have sorta a pro over factory functions that they innately help regulate type conformity with inheritance
[08:32:34] <systemfault> Something that shouldn't be done anyway? :/
[08:32:37] <banana_> like you inherit the fields of the base class. but nah eff that.
[08:32:48] *** Quits: matacao (~eduardo@2804:14c:6322:9953::1004) (Quit: Konversation terminated!)
[08:32:50] <systemfault> I'm not the first one to say this... "Favor composition to inheritance"
[08:33:19] <banana_> yeah but with first class functions composition I think is different
[08:33:22] <duckgoose> I never had a problem with type inference or type security
[08:33:25] <systemfault> Using object literals are easy to change in a non-mutable way because of array spread
[08:33:33] <duckgoose> seems like its people coming from Java that need that
[08:33:49] <systemfault> Also, classes are a pain because of serialization/deserialization
[08:33:55] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 256 seconds)
[08:33:58] <alystair> https://i.imgur.com/Nwbb14i.png so clean~
[08:34:18] <banana_> idk
[08:34:56] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[08:35:15] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Client Quit)
[08:35:21] <duckgoose> WHY IS EVERYTHING CAPS
[08:35:28] <banana_> systemfault: what about in a heavy inheritance tree. even if you use composition over inheritance to mitigate a huge inheritance tree what's left is still kinda messy over just using factory functions imo from the beginning
[08:35:44] <alystair> duckgoose - their major categories, everything below is cased as expected
[08:36:00] <banana_> you could do the same composition to mitigate a huge static mess with factory functions
[08:36:28] <banana_> afaik composition allows your instances to be more dynamic
[08:36:46] <systemfault> Using inheritance means you f'ed up... using heavy inheritance just means that you f'ed up heavily.
[08:36:58] <alystair> pd.DOM.populate('#duckgoose', {awesome:true, hatesCaps:true});
[08:37:17] <banana_> youre composing a reference type or function and reference types could be anything
[08:37:25] <duckgoose> I only expect enums to be caps
[08:37:28] * duckgoose shrugs
[08:37:49] <alystair> does JS have native enum? hehe
[08:37:53] <systemfault> Nope.
[08:38:09] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:38:11] <systemfault> const MyEnum = Object.freeze({ FOO: 0, BAR: 1, BAZ: 2 })
[08:38:16] <banana_> n> const enum = 'test';
[08:38:17] <jellobot> (fail) SyntaxError: Unexpected reserved word
[08:38:18] <alystair> I come from PHP where all caps are constants
[08:38:29] <banana_> but the keyword is reserved
[08:38:36] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:38:45] <banana_> that was ljharb's idea 20 years ago
[08:38:51] <alystair> #blameHarb
[08:38:58] <banana_> ask him why they did that
[08:39:10] <systemfault> They reserved most of the Java keywords originally
[08:39:24] <duckgoose> maybe enum is the wrong term
[08:39:31] <duckgoose> how about constants
[08:39:41] <systemfault> duckgoose: const MY_CONSTANT = 10;
[08:39:56] <ljharb> lol what
[08:40:03] <duckgoose> thats how I'd do it
[08:40:05] <alystair> oh hi
[08:40:17] <ljharb> there’s a few enum proposals.
[08:40:47] <duckgoose> if all the proposals were adopted JS would just become Java
[08:40:54] <systemfault> I imagine ljharb in 1995... at like... 13 yo, telling Brendan Eich to reserve keywords in JS.
[08:41:02] <duckgoose> I mean they keep trying to turn it into Java
[08:41:18] <Maxdamantus> You mean like legacy Java?
[08:41:22] <systemfault> At 13, I was like... "Just want to play my SNES bruh"
[08:41:30] <alystair> Object.freeze(TC39) // Not anymore they don't lj
[08:41:32] <Maxdamantus> Java has been generally moving away from inheritance.
[08:41:35] <alystair> >:D
[08:41:47] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457) (Remote host closed the connection)
[08:41:56] <duckgoose> what is the benefit of freezing an object over a constant
[08:42:10] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457)
[08:42:13] <banana_> garbage collection?
[08:42:23] <duckgoose> ew
[08:42:29] <Maxdamantus> New APIs in the Java standard library are pretty much always based around passing around functions/labdas, where they might have previously involved inheritance.
[08:42:35] <duckgoose> I use high level languages so I don't have to do garbage collection
[08:42:39] <duckgoose> that aint for me to worry about
[08:42:52] <systemfault> An unfrozen object is mutable... it's not what you want for an Enum... Which is more or less a "bag of constants"
[08:42:58] <banana_> yeah i meant like js does garbage collection for you
[08:43:00] <alystair> oh right ljharb now that you're here I have a question re: deletion in objs, I read somewhere that this somehow ruins perf?
[08:43:08] <banana_> oh you literally meant frozen
[08:43:32] <duckgoose> we dont need to enums
[08:43:43] <duckgoose> I do wish they'd add protected types so people would stop complaining tho
[08:43:47] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:44:09] <systemfault> JS doesn't need to be like the others...
[08:44:27] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[08:44:31] <systemfault> It might sound like a foolish claim... but it's true.
[08:44:37] <duckgoose> when you ask someone why they hate JS, and they be like "there's no type protection!" you instantly know they hatin' just to be hatin'
[08:44:52] <systemfault> They can use TypeScript... It's a bad reason
[08:45:22] <systemfault> They hate JS because they used it 5 minutes in 1997 in a web programming course at high school
[08:45:54] <duckgoose> because it's not like Java
[08:46:12] <alystair> hot take: if you need type protection ala TS your code base is too complicated and the test suite doesn't have enough coverage.
[08:46:15] <duckgoose> ok ok I might have a bias against Java
[08:46:47] <systemfault> alystair: You have as much test coverage in a typed codebase than in an untyped one...
[08:47:09] <alystair> in my case it's 0 test coverage because I don't have enough time for it yet ;-;
[08:47:11] <banana_> what's something bad about JS
[08:47:17] <systemfault> banana_: 1 == '1'
[08:47:37] <alystair> systemfault aww that extra = is too hard to type out? :D
[08:47:38] <banana_> the type conversion protocol
[08:47:38] <systemfault> sparse arrays
[08:47:44] <duckgoose> thats not bad
[08:47:56] <systemfault> alystair: If a feature exists in a language, it will end up being abused.
[08:48:00] <duckgoose> == is a loose comparator don't expect it to operate like ===
[08:48:12] <systemfault> duckgoose: I'm saying that it shouldn't even exist.
[08:48:35] <alystair> if JS was remade from scratch they could make == work like == and ~== work like == does currently :D
[08:48:38] <systemfault> setInterval, while not being standard... is bad.
[08:48:44] <duckgoose> you're saying comparing values of different types shouldn't exist?
[08:48:46] <alystair> so it's ... ~== kinda equal ahaha
[08:48:46] <banana_> so youre saying == is obsolete
[08:48:51] <systemfault> duckgoose: Yup
[08:49:04] <systemfault> Should be "false"
[08:49:10] <matsaman> I use ==, it's shorter
[08:49:11] *** Joins: paule32_ (~paul@nat-91-137-21-12.net.encoline.de)
[08:49:11] *** Quits: paule32_ (~paul@nat-91-137-21-12.net.encoline.de) (Changing host)
[08:49:11] *** Joins: paule32_ (~paul@user/paule32)
[08:49:12] <duckgoose> well I disagree
[08:49:31] <Maxdamantus> It shouldn't be false.
[08:49:31] <matsaman> I like that the language does things for me and coerces things. Less work
[08:49:32] <systemfault> Maxdamantus: If current "==" didn't exist.... "===" could have been "==" :p
[08:49:34] <duckgoose> specially when you have type inference
[08:49:36] <alystair> matsaman is chaotic evil
[08:49:37] <Maxdamantus> It should be a type error.
[08:49:46] <matsaman> nah, I just like conciseness
[08:49:59] <matsaman> syntax is no substitution for knowing wtf is going on
[08:50:01] <systemfault> It's not concise, it's implicit garbage.
[08:50:01] <alystair> == is the opposite of conciseness! you mean you enjoy code golfing lol
[08:50:09] <matsaman> you have to know what's going on regardless
[08:50:11] <matsaman> may as well type less
[08:50:19] <matsaman> it's literally shorter
[08:50:21] <duckgoose> Maxdamantus how you gonna make it a type error on a language that relies on type inference
[08:50:23] <systemfault> That's not how programming or anything works in life.
[08:50:28] <Maxdamantus> `false` is just one wrong answer. `true` is another wrong answer.
[08:50:36] <matsaman> it is how JS works =) unless you type a lot more chars
[08:50:56] <matsaman> and JS obviously isn't the only language like this
[08:50:59] <Maxdamantus> duckgoose: it doesn't rely on type inference. It should just be based on dynamic type, since that's what exists in JS.
[08:51:10] <systemfault> Even the best fucks up every now and then.... make errors impossible in the first place is the best strategy
[08:51:19] <matsaman> exactly, you're going to fsck up
[08:51:21] <duckgoose> why though
[08:51:23] <matsaman> why type a lot more in the interim
[08:51:37] <Maxdamantus> "1" == 1; // Uncaught TypeError: can't compare string with number
[08:51:45] <alystair> this convo has gone off the rails I'm so sorry <_>
[08:51:49] <Maxdamantus> "1" == 1; // false
[08:51:52] <Maxdamantus> er
[08:51:54] <Maxdamantus> "1" === 1; // false
[08:51:54] <systemfault> matsaman: You can't fuck up your implicit coercion rules if you don't use them AT ALL
[08:52:03] <duckgoose> what is better about banning loose comparions
[08:52:04] <banana_> wait if == didnt exist, would this exist https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf
[08:52:20] <banana_> that's used in type conversion
[08:52:22] <matsaman> systemfault: for sure, but again it's more work to not use them
[08:52:24] <systemfault> duckgoose: Removes any possible of implicit coercion issues.
[08:52:29] <systemfault> matsaman: You're lying.
[08:52:38] <matsaman> it's objectively more typing, more chars
[08:52:43] <duckgoose> so making it more idiot proof?
[08:52:48] <systemfault> matsaman: If you believe that adding an extra character is "more work"... you're in the wrong field.
[08:52:48] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 272 seconds)
[08:52:59] <matsaman> I'm sure I'll always be in the wrong field, heh
[08:53:00] <systemfault> duckgoose: Everyone is an idiot sometimes.
[08:53:00] <banana_> n> let a = { valueOf () { return 'test' } }; a == 'test';
[08:53:01] <jellobot> (okay) true
[08:53:12] <duckgoose> I don't agree with the idea of idiot proofing by means of disabling functionality
[08:53:13] <matsaman> I don't like unnecessary syntax
[08:53:29] <matsaman> I don't like the colon at the end of function declarations in python
[08:53:38] <matsaman> duckgoose: hear hear
[08:53:50] <systemfault> duckgoose: Bad functionality.
[08:53:51] <alystair> I think the biggest tragedy of JS from a debug prespsective is the inability to easily reflect variable names for console output
[08:54:19] <systemfault> I'm always for better tools, event if they're more complicated, for library writers.
[08:54:26] <systemfault> *even
[08:54:38] <matsaman> see and I don't think more complicated tools can possibly be better
[08:54:41] <alystair> I understand the security and perf rational of removing .caller nonsense, but it makes it hard for lib authors such as myself to output succinct and clear errors, warnings and notices
[08:54:41] <duckgoose> well I guess it's a matter of opinion
[08:54:47] <Maxdamantus> alystair: console.log({ x });
[08:54:48] <systemfault> It's not about dumbifying
[08:54:49] <duckgoose> I don't mind it at all has never caused me an issue
[08:54:54] <matsaman> indeed, it is not
[08:55:07] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:55:08] <alystair> Maxattax that outputs the contents of x, not 'x' itself :D
[08:55:11] <systemfault> duckgoose: It's not even an opinion, do you know all the coercion table of the == operator for JS.
[08:55:16] <systemfault> duckgoose: The answer is NOPE.
[08:55:18] <Maxdamantus> alystair: it also outputs `x`
[08:55:25] <alystair> x.name only exists if x is a function
[08:55:27] <Maxdamantus> n> const x = 4; console.log({ x }); @ alystair
[08:55:28] <jellobot> alystair, { x: 4 }
[08:55:30] <duckgoose> systemfault you don't have to use it at all
[08:55:34] <duckgoose> it's completely optional
[08:55:35] <matsaman> systemfault: I know all the ones I use
[08:55:36] <systemfault> duckgoose: Nobody does, maybe ljharb
[08:55:53] <matsaman> moreover, you have to know your inputs whether you're specyfing types or not
[08:55:53] <systemfault> matsaman: Exactly, what about the others on the team working on the same project?
[08:55:54] <matsaman> and
[08:55:59] <matsaman> you can try/catch whether you are or not
[08:56:03] <matsaman> but one remains a lot more typing and code
[08:56:04] <duckgoose> I wouldn't understand if === didn't exist but it literally exists for this reason
[08:56:10] <duckgoose> there is already a solution
[08:56:11] <matsaman> systemfault: I'd hope they know what they're doing also
[08:56:17] <matsaman> have to make tests regardless, too
[08:56:31] <systemfault> One day, you'll work for real... in a team... then hopefully you'll get it.
[08:56:40] <matsaman> a team using JS? =P
[08:56:42] <matsaman> or typescript
[08:56:47] <systemfault> I'm condescending... but it's hard not to be..
[08:56:53] <systemfault> You're cringy as fuck
[08:56:56] <banana_> watch out for eslint
[08:56:58] <matsaman> this is the norm in JavaScript, no matter how much typescript people want it to not be
[08:57:00] <alystair> a life without === would be hellish and make for some verbose and repetitive code
[08:57:10] <duckgoose> if you're team can't grasp == vs === then they should go back to training
[08:57:12] <systemfault> alystair: Suck less at JS?
[08:57:12] <alystair> to confirm things are as they should be
[08:57:13] <duckgoose> your *
[08:57:17] <matsaman> duckgoose: agreed
[08:57:20] <systemfault> I don't repeat myself.
[08:57:34] <systemfault> duckgoose: Fuck off, you don't the table by heart
[08:57:37] <banana_> if eslint gives you trouble on your text editor just uninstall the extension/plugin
[08:57:43] <systemfault> Let's cut the crap for a second.
[08:57:48] <matsaman> you don't need to know it by heart
[08:57:50] <duckgoose> woah lets not get mad
[08:57:55] <systemfault> matsaman: Yes you do.
[08:58:06] <duckgoose> we can agree to disagree without being upset
[08:58:07] <matsaman> systemfault: why's that?
[08:58:24] <systemfault> matsaman: Because a competent developer doesn't use tools they don't understand...
[08:58:29] <systemfault> Isn't that obvious?
[08:58:34] <systemfault> Otherwise, it least to errors.
[08:58:38] <systemfault> *leads
[08:58:50] *** Quits: mrdata (~mrdata@user/mrdata) (Read error: Connection reset by peer)
[08:58:50] <matsaman> that's a little broad
[08:58:51] <alystair> knowing the gotchas of == vs === should be like remembering BEDMAS, kinda important for a developer <_>
[08:58:58] <matsaman> you don't need to know the whole table to write good code
[08:59:03] <systemfault> alystair: Nobody does.
[08:59:09] <matsaman> you only need to know that you're properly checking your inputs
[08:59:22] <systemfault> alystair: https://dorey.github.io/JavaScript-Equality-Table/
[08:59:25] <alystair> ... I do, mostly. Or enough to know to use === unless I specifically want coercion
[08:59:26] <duckgoose> I think the problem is in expecting == to function as it does in another language
[08:59:47] <duckgoose> you gotta conform to JS it doesn't conform to you
[08:59:49] <matsaman> and using JavaScript when you really wanted Java or typescript
[09:00:02] <matsaman> you don't gotta, you can make JS do whatever you want
[09:00:05] <systemfault> That's a seriously dumb way of seeing thing.
[09:00:07] <alystair> boy I can't wait for the WASM crowd to really make web dev hell
[09:00:14] <duckgoose> well
[09:00:15] <alystair> tower of babel situation lol
[09:00:19] <matsaman> alystair: oh it's comin'
[09:00:27] <matsaman> and so is the downfall of programmers who aren't just point-and-clicking in a GUI
[09:00:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:00:37] <duckgoose> lets move to another topic this is getting a bit heated
[09:00:41] <matsaman> Idiocracy indeed
[09:00:54] <systemfault> You have the choice between 2 features: 1) one that works 100% of the time, as expected... the way you expect it. 2) another that mostly works but sometimes can bite you in the ass. Anyone with half a brain will pick 1
[09:01:08] <alystair> oh I have a perfect example
[09:01:11] <systemfault> But not people here, those are ELITE.
[09:01:30] <matsaman> == works 100% of the time as I expect it
[09:01:35] <systemfault> Nope.
[09:01:38] <matsaman> eyup
[09:01:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[09:01:46] <systemfault> matsaman: https://dorey.github.io/JavaScript-Equality-Table/ This table says nope.
[09:01:52] <systemfault> Saying otherwise is just lying.
[09:01:55] <matsaman> I don't actually use that table in my coding...
[09:01:57] <alystair> Someone on Twitter was having terrible errors within certain parts of OSX because her last name was True and their code was coercing it to a bool :D
[09:02:08] <systemfault> matsaman: Means that you don't understand == properly.
[09:02:08] <Maxdamantus> In general, you shouldn't be writing code where `==` and `===` have different results, so it would have been better if they had just made `===` throw an error instead of returning `false`.
[09:02:13] <matsaman> I test my input, and I always know how my code is going to behave.
[09:02:15] <matsaman> systemfault: nah
[09:02:23] <systemfault> matsaman: Grow up.
[09:02:28] <dave0> alystair: last name of 'Null' is also interesting :-)
[09:02:29] <matsaman> systemfault: unfortunately always will
[09:02:42] <duckgoose> alystair someone didn't use ===
[09:02:58] <duckgoose> what were they doing (name == true) lol
[09:03:03] <banana_> ah ok I meant coercion earlier
[09:03:05] <alystair> yeah exactly aha
[09:03:38] <Maxdamantus> `"1" === 1` is a nonsense operation. If someone does that, it's probably a mistake.
[09:03:57] <alystair> n> `1` === "1"
[09:03:58] <jellobot> (okay) true
[09:04:11] <Maxdamantus> For cases where someone actually is trying to implement some sort of map of arbitrary JS values or something, there should be a different operator for that.
[09:04:13] <duckgoose> alystair I dunno what language would do that
[09:04:21] <alystair> n> foo`1` === "1"
[09:04:22] <jellobot> (fail) ReferenceError: foo is not defined
[09:04:24] <duckgoose> in JS "False" == false would still be false
[09:05:07] <duckgoose> Oh "" == true
[09:05:07] <systemfault> Common eslint styleguides all forbid == :)
[09:05:08] <duckgoose> thats why
[09:05:13] <duckgoose> erm "" == false *
[09:05:13] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[09:05:33] <alystair> ok this == vs === argument is becoming like tabs vs spaces, where one is clearly better than the other ;D
[09:05:40] <matsaman> alystair: tabs =)
[09:05:42] <duckgoose> yea
[09:05:43] <duckgoose> tabs
[09:05:45] <alystair> we must end the holywar
[09:05:46] <duckgoose> :X
[09:05:46] <matsaman> heheheh
[09:05:47] <systemfault> Haha, that one is really subjective
[09:05:56] <matsaman> it's definitely _more_ subjective
[09:06:00] <duckgoose> I like tabs
[09:06:06] <duckgoose> but I use spaces to conform to the MAN
[09:06:08] <systemfault> I don't mind either... it ends up being the same when I work in my editor...
[09:06:19] <matsaman> it really shouldn't matter. It's easy to convert to and from, manually & automatically
[09:06:19] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be)
[09:06:24] <systemfault> Yup.
[09:06:24] <alystair> (tabs, with a minor exception for tidying JSDOC)
[09:06:25] <matsaman> systemfault: exactly $
[09:06:43] <alystair> on that bombshell I'm crashing, good chat all :D
[09:06:49] <systemfault> alystair: GN!
[09:06:54] <duckgoose> matsaman I spent 30 minutes trying to find out why this python code was erroring out with "indentation error"
[09:06:56] <matsaman> it's a little worse in python, but fundamentally still shouldn't matter
[09:07:01] <matsaman> duckgoose: yeah, python...
[09:07:03] <duckgoose> turned out my IDE use tabs and the code used spaces
[09:07:04] * matsaman headdesks
[09:07:11] <alystair> "intimidation error"
[09:07:23] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 252 seconds)
[09:08:04] <duckgoose> could python say something more specific like "\t and \s mixed" no it just said "indention error"
[09:08:40] <duckgoose> so I was sitting there staring at the code that was indented perfectly for 30 mins :|
[09:08:58] <duckgoose> I digress
[09:09:06] <matsaman> yup, dumbest error for the dumbest choice ever
[09:09:16] <ljharb> alystair: yes, never ever delete, and never mutate in general.
[09:09:18] <matsaman> significant whitespace
[09:09:29] <matsaman> and python -still- has lunatics using 'black' on everything
[09:09:35] <ljharb> duckgoose: and that’s what a linter is for. Doesn’t python have those?
[09:09:36] <matsaman> 'cause it's just not tidy enough omg more tidy moar
[09:09:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:09:51] <banana_> dude they need to get rid of daylight savings time. but before that use it to replace standard time
[09:09:54] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[09:09:57] <duckgoose> ljharb probably idk
[09:10:00] <matsaman> banana_: heh
[09:10:04] <duckgoose> I'm really bad at python which was half the issue
[09:10:15] <matsaman> if the USA goes on permanent DST, I will throw away all my clocks
[09:10:19] <matsaman> stupid AF
[09:10:36] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be) (Ping timeout: 240 seconds)
[09:10:38] <duckgoose> can I have your apple watch
[09:10:46] <matsaman> don't have one but nyyyyyce try
[09:10:51] <banana_> dude it would be awesome like in december 8am would still be dark
[09:10:57] <matsaman> heh
[09:11:09] <banana_> so everyone that wakes up at 8 could see the sunrise
[09:11:34] <matsaman> I'm all for ignoring actual time for an advantage, but the simpler approach here is to go to work earlier if you want
[09:11:57] <banana_> yeah for sure
[09:12:03] <matsaman> hell why aren't we all just doing nightshift? daylight ALL DAY LONG
[09:12:08] <matsaman> it's just silly =P
[09:12:42] <banana_> but nah it's annoying except bars stay open later in the fall. but college days are over, but that depends on the state you live
[09:13:13] *** Joins: mrdata (~mrdata@user/mrdata)
[09:13:21] <matsaman> it's
[09:13:24] <matsaman> just make believe
[09:13:48] <matsaman> it's like using BCE/CE instead of BC/AD
[09:14:04] <matsaman> our stupid dates are based off of some stupid made up religion
[09:14:08] <matsaman> there's no getting around it
[09:15:09] <banana_> oh you believe in adam and steve?
[09:15:47] <banana_> jk
[09:16:09] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:16:37] <matsaman> heh
[09:16:45] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:6c75:c89d:916b:3b14)
[09:16:48] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:16:58] <matsaman> haven't heard that joke, I bet that explodes certain people's heads, heh
[09:17:36] *** Joins: KevinX (~KevinX@user/KevinX)
[09:17:38] <matsaman> later on ye
[09:17:40] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:17:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[09:18:01] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:19:55] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[09:20:27] *** Joins: duds- (~duds-@user/duds)
[09:20:38] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:22:12] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 240 seconds)
[09:34:33] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[09:37:19] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 260 seconds)
[09:39:03] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:39:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:42:33] *** Joins: nomic (~nomic@185.217.117.249)
[09:43:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:21] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[09:54:45] <sheetjs> n> var x = new Uint8Array([1,2,3]), y = new Uint8Array(x); y[1] = 123; x
[09:54:46] <jellobot> (okay) Uint8Array(3) [ 1, 2, 3 ]
[09:54:58] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[09:58:16] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[09:58:33] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[09:59:23] <paulcarroty> cool
[09:59:37] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:00:11] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:00:45] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:01:46] *** Joins: gulzar (~gulzar@49.206.240.149)
[10:02:37] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 240 seconds)
[10:03:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:04:17] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 240 seconds)
[10:04:21] *** Joins: plitter (~plitter@78.31.86.243)
[10:04:21] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[10:04:21] *** Joins: plitter (~plitter@user/plitter)
[10:04:43] *** Joins: jazzy (~jaziz@user/jaziz)
[10:06:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:07:36] *** Joins: Peppi^ (~Peppi@user/peppi)
[10:07:39] <Peppi^> hello
[10:08:45] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[10:13:07] *** Joins: audio (~audio@user/audio)
[10:13:14] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[10:14:31] *** Joins: han-solo (~han-solo@user/han-solo)
[10:15:00] *** Quits: average (~average@user/average) (Ping timeout: 240 seconds)
[10:18:06] *** Joins: adroitmachine (~adroitmac@171.50.208.74)
[10:18:54] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[10:22:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:25:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:25:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:25:51] *** Joins: KevinX (~KevinX@user/KevinX)
[10:26:46] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:28:58] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:30:09] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[10:34:43] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 260 seconds)
[10:35:10] *** Joins: Akiva (~Akiva@user/Akiva)
[10:36:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:36:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:38:41] *** Joins: vysn (~vysn@user/vysn)
[10:41:06] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[10:41:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:43:48] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[10:47:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[10:47:19] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[10:47:30] *** Quits: suss` (~user@user/suss) (Ping timeout: 252 seconds)
[10:50:14] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:50:36] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[10:50:53] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:51:30] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:52:01] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[10:53:22] *** Joins: CalamityBloo (~CalamityB@user/CalamityBlue)
[10:56:36] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[10:56:45] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:56:56] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 272 seconds)
[10:56:59] *** Joins: remote (~self@user/hackers)
[10:59:43] *** Joins: stoyan (~stoyan@94.156.180.236)
[11:02:03] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:04:31] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[11:04:32] *** Quits: adroitmachine (~adroitmac@171.50.208.74) (Ping timeout: 272 seconds)
[11:04:36] *** Quits: thojanssens (~thojansse@49.229.172.95) (Ping timeout: 240 seconds)
[11:06:19] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[11:07:03] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[11:09:15] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 260 seconds)
[11:09:16] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:10:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:14:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:21:00] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:23:21] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[11:23:22] *** Quits: stoyan (~stoyan@94.156.180.236) (Remote host closed the connection)
[11:23:32] *** Joins: stenno (~stenno@user/stenno)
[11:23:59] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[11:34:28] *** Joins: thojanssens (~thojansse@49.229.172.95)
[11:36:54] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[11:37:28] *** Quits: Guest4187 (~blahboyba@c-67-161-97-172.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:41:17] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 240 seconds)
[11:43:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:44:26] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 272 seconds)
[11:44:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[11:47:21] *** Joins: dvanloon1 (~dvanloon@user/dvanloon)
[11:47:31] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[11:47:31] *** dvanloon1 is now known as dvanloon
[11:48:31] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be)
[11:48:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[11:49:09] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[11:50:18] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[11:50:46] *** Quits: D4mned (~D1mned@89.108.142.206) (Ping timeout: 272 seconds)
[11:52:26] *** Joins: DumbDog (~DumbDog@cpe-76-176-54-209.san.res.rr.com)
[11:52:56] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxu39fyikhvnyrh.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[11:59:04] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:05:03] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[12:11:47] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[12:13:22] <gde33> I still think string similarity should be part of js :P
[12:13:51] <gde33> trying to make anything sensible quickly grows larger than the application
[12:16:02] <gde33> perhaps when we have AI chips onboard we can have the truly wonderful implementation
[12:16:44] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[12:17:50] <skylite> ljharb: but why creating an array with flatMap and then taking [0] out of the array is useful here?
[12:18:00] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:18:23] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:20:07] <systemfault> skylite: The code is just a bit strange.. even the ?.[0] part...
[12:20:26] <systemfault> No matter what happens, flatMap _WILL_ return an array
[12:20:32] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[12:21:05] <skylite> yes and we're taking [0] out of the array so why creating an array in the first place for that
[12:21:35] <systemfault> skylite: No clue, could probably have been done simply using Array#find
[12:22:56] <skylite> it was written by ljharb so I'll just wait for him to get back
[12:23:34] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[12:23:58] *** Joins: Duikb00t (~wardkenne@d54c71612.static.telenet.be)
[12:25:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:25:51] *** Joins: wyre (~wyre@user/wyre)
[12:26:09] <skylite> systemfault: this was the original code he refactored if you're interested: https://codesandbox.io/s/recursivefetchoriginal-tldfsu
[12:27:36] *** Joins: exgirl (uid545763@user/suss)
[12:28:13] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[12:28:28] <theskillwithin> I don't see the flatMap
[12:29:36] <theskillwithin> oh nvm, you said thats the old code
[12:29:46] <systemfault> theskillwithin: This https://codesandbox.io/s/mystifying-chatelet-wy5fz8?file=/src/index.js:1346-1350
[12:30:01] *** Joins: koziad (~koz@user/koziad/x-1285628)
[12:30:08] <theskillwithin> ya this is wayyy cleaner
[12:30:18] *** Joins: adroitmachine (~adroitmac@171.50.208.74)
[12:32:31] <systemfault> The data doesn't seem to be fun to work with...
[12:32:48] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 260 seconds)
[12:32:57] *** Joins: wardkennes (~wardkenne@d54c71612.static.telenet.be)
[12:35:32] <systemfault> I'm too tired but I had something like
[12:35:35] <systemfault> const firstFieldWithMeta = fields.find(field => !!relationships[field]?.data?.meta?.alt); const meta = relationships[firstFieldWithMeta]?.data?.meta
[12:35:35] *** Quits: Duikb00t (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 260 seconds)
[12:35:37] <systemfault> in mind
[12:35:54] <theskillwithin> I'm too tired to even look at it lol
[12:37:08] <theskillwithin> I was hoping the question was going to lean more on what is flatMap,  thats easy to answer
[12:37:20] *** Joins: stenno (~stenno@user/stenno)
[12:38:03] <systemfault> theskillwithin: They're just using it as a way to do both .map and .filter at the same time.
[12:38:33] <systemfault> Yup, easy to answer :p
[12:39:50] <theskillwithin> n> [[1],["two"], 3].flatMap(x =>x)
[12:39:51] <jellobot> (okay) [ 1, 'two', 3 ]
[12:40:02] <theskillwithin> n> [[1],["two"], 3].flat()
[12:40:03] <jellobot> (okay) [ 1, 'two', 3 ]
[12:40:11] <systemfault> Too bad I can't use it at work...
[12:40:16] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[12:40:54] <systemfault> Until the Chrome team fixes it.... along with .flat (Performance issue)
[12:41:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:42:12] <theskillwithin> oh rly?  I didn't know,  but theres prob a lot I use thats transpiled or polyfilled that I don't think about all the time
[12:43:40] <theskillwithin> whats that site that shows you nodejs features by version?  I always forget that site
[12:44:27] <theskillwithin> node.green
[12:44:56] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 260 seconds)
[12:45:05] <theskillwithin> https://node.green/
[12:46:37] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 240 seconds)
[12:48:41] *** Joins: plitter (~plitter@192.108.100.200)
[12:48:42] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[12:48:42] *** Joins: plitter (~plitter@user/plitter)
[12:49:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:50:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:50:58] <systemfault> We're writing backends in TypeScript, performance matters
[12:50:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:50:59] <theskillwithin> systemfault if thats the case, I wish https://caniuse.com/?search=flatMap had a note about it
[12:51:23] <systemfault> theskillwithin: The perf is as expected on Safari and Firefox.
[12:53:27] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:54:44] *** Quits: adroitmachine (~adroitmac@171.50.208.74) (Ping timeout: 272 seconds)
[12:55:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:56:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[12:56:38] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[12:57:36] <skylite> yea the question was rather related to this exact usecase than flatMap in general
[12:57:38] *** Joins: remote (~self@user/hackers)
[12:58:08] <skylite> and yes the data structure on the backend is a mess :D
[12:58:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:59:02] *** Joins: D4mned (~D1mned@89.108.142.199)
[12:59:57] *** Joins: VoidSync (~sync@user/voidsync)
[13:01:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[13:02:41] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[13:03:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:05:30] *** Quits: wardkennes (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 272 seconds)
[13:07:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[13:07:26] *** Joins: wardkennes (~wardkenne@d54c71612.static.telenet.be)
[13:10:12] <theskillwithin> n> ['🥚','🐔'].sort()
[13:10:12] <jellobot> (okay) [ '🐔', '🥚' ]
[13:10:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:12:19] <skylite> :O
[13:15:46] *** Quits: wardkennes (~wardkenne@d54c71612.static.telenet.be) (Quit: WeeChat 3.4)
[13:18:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[13:21:49] <dave0> that's true though
[13:21:55] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[13:22:00] <dave0> without a chicken there'd be no one to lay the egg!
[13:23:54] <D4mned> the question should be when was the 1st egg ever created and by what!
[13:24:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:25:13] *** Joins: rendar (~rendar@user/rendar)
[13:25:52] <han-solo> dave0: but then who created the chicken ?
[13:27:24] <dave0> the chicken fairy!
[13:27:28] <theskillwithin> some sort of dinosaur
[13:27:29] <D4mned> hahaha
[13:27:38] <D4mned> evolution baby!
[13:28:30] <Maxdamantus> The egg came first, because fish used eggs before chickens existed.
[13:28:32] <theskillwithin> wait a second... why does the easter bunny bring you eggs... bunnies don't lay eggs
[13:28:35] <han-solo> the dinosaur was a chicken afterall
[13:28:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:28:41] *** Joins: shkurata (~shkurata@ptr-8riebuk3lxjk0l22r6z.18120a2.ip6.access.telenet.be)
[13:28:58] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:29:02] <dave0> theskillwithin: also eggs aren't made of chocolate
[13:29:39] <dave0> on the other hand you could wrap an egg in foil
[13:29:41] <han-solo> and rabbits don't wear clothes :p
[13:29:48] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[13:30:11] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Quit: You have been kicked for being idle)
[13:30:17] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[13:31:35] <dave0> https://comb.io/jOGE3J
[13:32:45] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:48:08] *** Parts: thojanssens (~thojansse@49.229.172.95) (Leaving)
[13:48:28] *** Joins: adroitmachine (~adroitmac@171.50.208.74)
[13:50:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:51:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:53:17] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[13:53:39] <adroitmachine> Hi, can someone help me with this problem, I have created a pastebin for it: https://pastebin.ubuntu.com/p/k7RxfqXHSd/
[13:54:02] *** Joins: llorllale (~llorllale@198.98.119.85)
[13:55:16] <D4mned> where are you getting the dates from
[13:55:55] <theskillwithin> I don't understand this requirement: "The last object in the array needs to be 1 month ahead of the last date.",  are we meant to change the date to achieve that?
[13:57:16] <adroitmachine> yes the skillwithin, I want to create an array with the values that are being fetched from the api
[13:57:23] <adroitmachine> D4mned, it is an API
[13:57:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:58:19] <adroitmachine> we can change the date, yes
[13:59:00] *** Quits: realies (~realies@user/realies) (Ping timeout: 240 seconds)
[13:59:28] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:00:00] *** Joins: l__q (~modinfo@user/modinfo)
[14:00:11] *** Joins: remote (~self@user/hackers)
[14:01:07] *** Joins: stenno (~stenno@user/stenno)
[14:01:48] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[14:02:01] <adroitmachine> The api is returning the dates like this: today_date: 2022-03-24, plan_date: 2022-07-17, due_date: 2022-08-06
[14:02:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:02:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi)
[14:02:54] <DnzAtWrk> req.auth?.user ?? {}
[14:02:57] <DnzAtWrk> what does auth? mean?
[14:03:16] <adroitmachine> optional chaining I guess.
[14:03:25] <DnzAtWrk> so what would happen if auth is missing
[14:03:34] <DnzAtWrk> does it just skip to {}
[14:03:57] <adroitmachine> yes, the ternary condition would go to the next one
[14:03:58] <DnzAtWrk> I have never seen that method before, but if it works how I think it works I could have used it a few thousand times
[14:04:04] <DnzAtWrk> it's not ternary
[14:04:08] <DnzAtWrk> there is no :
[14:04:19] <adroitmachine> oh
[14:05:39] <DnzAtWrk> n> const req = { auth: { user: { name: 'test' } } }; req.auth?.user ?? {};
[14:05:40] <jellobot> (okay) { name: 'test' }
[14:05:48] <DnzAtWrk> n> const req = { }; req.auth?.user ?? {};
[14:05:49] <jellobot> (okay) {}
[14:06:26] <DnzAtWrk> n> const req = { auth: { user: { name: 'test' } } }; req.auth?.user.name ?? null;
[14:06:27] <jellobot> (okay) 'test'
[14:06:36] <DnzAtWrk> n> const req = {}; req.auth?.user.name ?? null;
[14:06:36] <jellobot> (okay) null
[14:06:37] <DnzAtWrk> fascinating
[14:06:45] <DnzAtWrk> thanks, that will be helpful in the future
[14:06:58] *** Joins: realies (~realies@user/realies)
[14:07:12] <DnzAtWrk> I can start saying silly things like something.property?.property?.property ?? missingValue;
[14:08:45] <theskillwithin> I feel bad for whoever has the nick silly, they probably get pinged constantly
[14:09:02] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[14:09:13] <theskillwithin> well its their own fault i guess
[14:10:49] <DnzAtWrk> ah, there is a silly person with that nick
[14:10:52] <DnzAtWrk> they knew what they did
[14:14:53] <comatory> DnzAtWrk: `??` is an operator (methods are on objects). it's called nullish-coalescing operator.
[14:15:04] <DnzAtWrk> I know that part
[14:15:08] <stenno> i am surprised you don't know ?.
[14:15:20] <DnzAtWrk> I don't think I've ever seen it before
[14:15:35] <comatory> DnzAtWrk: yeah just wanted to clear up the "ternary" thing
[14:15:37] *** Quits: doc (~doc@user/doc) (Ping timeout: 256 seconds)
[14:15:38] <DnzAtWrk> I'm surprised it doesn't just throw a missing : error
[14:15:40] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining
[14:15:48] <stenno> because there is no ':' missing
[14:15:57] <comatory> i believe optional chaining was added to JS quite recently
[14:16:03] <DnzAtWrk> ah, it's ?.
[14:16:04] <DnzAtWrk> not just ?
[14:16:06] *** Joins: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com)
[14:16:10] <stenno> yes, ?.
[14:16:14] <trafficjam> which is better, react or svelte?
[14:16:15] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[14:16:28] <stenno> what is better, red or blue
[14:16:37] <DnzAtWrk> svelte sounds swedish, so I'll say react
[14:16:48] *** Joins: doc (~doc@user/doc)
[14:17:19] <DnzAtWrk> (but really, neither. Write vanilla javascript)
[14:17:43] <DnzAtWrk> I really dislike that it is such a given that you should learn react or another framework when learning javascript
[14:17:48] <stenno> trafficjam: according to your research, what would you say are the important differences between svelte and react?
[14:17:51] <DnzAtWrk> people get the idea that writing stuff in vanilla is hard
[14:17:53] <DnzAtWrk> it isn't
[14:18:06] <stenno> writing react is harder than writing 'vanilla' js
[14:18:13] <DnzAtWrk> totally
[14:18:15] <stenno> dunno why somebody would say it was easier
[14:18:26] <DnzAtWrk> because they are using react in the first place
[14:18:27] <comatory> I just looked it up, optional chaining was added to ES2020 and it's currently proposal at stage 4 to be added to the standard. I believe it's already present in lot of newer browser versions already (not sure about node)
[14:18:29] <DnzAtWrk> before even giving vanilla a chance
[14:18:33] <DnzAtWrk> because they assume they need react
[14:19:33] <DnzAtWrk> why do you think so many companies seek "react developers"
[14:19:35] <stenno> well if you want to write maintainable UI, you need something like react
[14:19:40] <DnzAtWrk> instead of just people who know javascript
[14:19:46] <DnzAtWrk> if you're a good js dev, you can easily adapt to react
[14:19:48] <stenno> if you want to learn JS, you don't need it
[14:19:54] <comatory> well sometimes framework is a gateway to programming. i see lot of folks knowing only the framework. if you want to get better you'll research what's beneath the framework. i started with ruby on rails without knowing ruby that well (or event programming).
[14:20:28] <stenno> i know people to this day who think that 'ruby on rails' is a programming language
[14:20:41] <trafficjam> stenno: blue
[14:20:57] <comatory> trafficjam: try to implement classic to-do list in react and then try doing the same with plain JS. that's a good way to peak behind the curtains.
[14:21:28] <stenno> trafficjam: again, according to your research, what have you worked out are the differences between svelte and react?
[14:21:43] <trafficjam> svelte doesn't seem to use a virtual dom, for one
[14:21:47] <comatory> stenno: yeah i don't blame them. ruby is not very popular on its own.
[14:22:04] <comatory> trafficjam: does it matter that it doesn't use v-dom?
[14:22:38] <comatory> i don't buy the whole arguments that it's faster or whatever
[14:23:17] <trafficjam> comatory: i'm not sure honestly, i'm not knowledgable enough about v-doms to give an educated opinion
[14:23:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:23:48] <comatory> trafficjam: well you mentioned it :) so maybe read up on what virtual dom actually means and why it's used. that's a good step forward.
[14:24:24] <comatory> it'd be foolish to say react > svelte or react < svelte
[14:25:14] <comatory> each has its own use cases. i think the only good way to compare is to actually use it for yourself. it's not only about the concepts or technical implementation but also about the community, documentation etc.
[14:26:08] <D4mned> adroitmachine did you solve it ?
[14:26:19] <D4mned> would something like this work ?
[14:26:21] <D4mned> let arr = ["2022-03-24", "2022-07-17", "2022-08-06"].sort((a, b)=> Number(a.split('-')[1]) - Number(b.split('-')[1]))
[14:26:32] <trafficjam> comatory: ok apparently svelte is better -> https://massivepixel.io/blog/svelte-vs-react/
[14:27:50] <comatory> trafficjam: not apparently, according to someone's opinion
[14:28:19] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[14:28:28] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[14:28:41] <adroitmachine> D4mned, yes I solved it, my code is kind of long, I used procedural programming
[14:28:46] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[14:29:14] <comatory> trafficjam: you linked to a website owned by some digital agency that has probably invested in Svelte lot of their time, money and effort. now they need to hire for it. it's called content marketing.
[14:29:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:29:17] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[14:29:21] <adroitmachine> Will change it to functional programming, once my brain starts to work. Thanks D4mned
[14:30:16] <D4mned> no worries man actually i forgot that u needed them in objects lol
[14:30:21] <D4mned> good luck
[14:31:49] <comatory> D4mned: are you trying to sort the dates?
[14:32:10] <D4mned> yeah
[14:32:28] <D4mned> well i was just giving it a quick shot
[14:32:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:32:52] <comatory> I believe comparison operators work on Date objects, e.g. `date1 > date2`
[14:33:32] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[14:33:37] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[14:34:04] <comatory> if you can manage to compare on date objects that is. other approach would be to compare the date objects by calling `getTime()` and compare that number (unix epoch)
[14:34:52] <D4mned> yeah iv always struggled with date objects
[14:35:05] <D4mned> it takes me a while to sort them
[14:35:28] <comatory> so if you use `sort`, you get either positive or negative integer, or 0. that will decide how to sort it. so you could also do something like `[date1, date2, date3].sort((a, b) => a.getTime() - b.getTime())` and that should sort it
[14:35:59] <D4mned> but you have to turn them into a date objects 1st right ?
[14:36:01] <D4mned> they are strings
[14:36:28] <comatory> just read docs on date objects. they're not that difficult to grasp. they are also not that great for these kind of operations (that is why time libraries exist). but for your use case, it is enough to use native date objects
[14:36:44] <Maxdamantus> n> new Date().getTime()
[14:36:45] <jellobot> (okay) 1648116404847
[14:36:54] <Maxdamantus> n> new Date().getTime() - new Date().getTime();
[14:36:54] <jellobot> (okay) 0
[14:37:18] <D4mned> cool
[14:37:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:37:47] <D4mned> thanks
[14:37:51] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[14:39:40] <comatory> D4mned: actually you can do it even like this `date1 - date2` without calling `getTime` on it.
[14:40:03] <comatory> it's so weird you can use `-` but not `+` :) oh confusing world of JS
[14:40:18] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[14:40:43] <comatory> D4mned: so your example could be `["2022-03-24", "2022-07-17", "2022-08-06"].sort((a, b) => new Date(a) - new Date(b))`
[14:41:22] <Maxdamantus> For those inputs, you don't need a function.
[14:41:44] <Maxdamantus> n> ["2022-03-24", "2022-07-17", "2022-08-06"].sort()
[14:41:44] <jellobot> (okay) [ '2022-03-24', '2022-07-17', '2022-08-06' ]
[14:42:11] <D4mned> ah thats much better!
[14:42:41] <D4mned> yeah this example made it clear for me thanks for that comatory
[14:42:43] <Maxdamantus> ISO 8601 formats are already lexicographically sortable.
[14:43:05] <comatory> Maxdamantus: that works if you're always sure about that format. but yeah it's even better approach.
[14:44:31] <D4mned> sheesh i keeps gettting shorter and shorter haha
[14:44:34] <D4mned> it*
[14:45:16] *** Joins: shuck (~shuck@user/shuck)
[14:45:54] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[14:47:24] <stenno> dates of the format 'yyyy-mm-dd' are lexically sortable
[14:47:34] <stenno> so you can just use localeCompare instead of having ot parse to date
[14:47:58] <stenno> oh it was said
[14:49:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:50:16] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 268 seconds)
[14:50:31] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:50:38] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 272 seconds)
[14:51:04] <stenno> TIL about https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator
[14:51:19] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:51:19] <comatory> yeah i found that storing date and time as unix time on backend is often quite nice. when you sort it's just like sorting numbers and that value can easily be parsed into whatever format you want for displaying.
[14:53:23] <comatory> stenno: `Intl` has bunch of other great things. i recently used it for simple pluralization of strings. you can even join strings using `Intl.ListFormat` formatter to get stuff like `['red', 'green', 'yellow'] => 'red, green and yellow'`
[14:53:55] <stenno> i find the Intl API itself a bit repulsive and very confusing
[14:54:03] <comatory> stenno: which parts?
[14:54:13] <stenno> for example, regarding date or number formatting
[14:54:17] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:55:29] *** Joins: wyre (~wyre@user/wyre)
[14:55:32] <comatory> stenno: I'm just glad it's there to be honest. if you mean function overloading in the constructor, yeah i don't like that.
[14:56:00] *** Quits: w0ng (~w0ng@185.218.127.23) (Ping timeout: 260 seconds)
[14:56:07] <stenno> oftentimes there come questions in this channel regarding the formatting of dates or currencies, and i tend to recommend Intl, but then after a few minutes it turns out that you cannot do that specific thing with Intl
[14:56:17] <stenno> can't name a specific example right now but it has happened in the past
[14:56:19] <stenno> lol
[14:56:27] <comatory> yeah i believe you
[14:57:12] <comatory> i'm always like that with date time inputs. i'm always trying to use native date objects and native html inputs but then i realize that it won't work for my use case.
[14:57:47] <comatory> i usually end up with momentjs/date-fns with some kind of JS datepicker
[14:58:14] <comatory> why is it so difficult in browsers to get it right? :)
[14:58:29] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[14:58:46] *** Joins: BUSY (~BUSY@user/busy)
[14:59:59] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[15:03:33] *** Joins: w0ng (~w0ng@185.218.127.24)
[15:04:06] *** Quits: adroitmachine (~adroitmac@171.50.208.74) (Ping timeout: 260 seconds)
[15:05:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:05:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:07:27] <stenno> comatory: there will be Temporal which helps a bit with dates
[15:07:38] *** Quits: lapsi (~lapsi@85.14.25.194) (Quit: Bye bye people :))
[15:07:44] <stenno> i think whats also confusing in general is timezone-related stuff
[15:08:14] <stenno> the best thing would be if JS dates had a format function which would accept those date format literals
[15:08:33] <stenno> like 'dd-MM-yyyy'
[15:09:22] <DnzAtWrk> a function which accepts a format string to format dates?
[15:09:27] <DnzAtWrk> dohhoh, what kind of sci-fi nonsense
[15:10:25] <DnzAtWrk> %Y%m%dT%H%M%SZ
[15:10:45] <stenno> please don't do it like PHP
[15:11:12] <DnzAtWrk> just use the standard datetime formatting
[15:11:15] <DnzAtWrk> like most languages
[15:11:56] <stenno> strftime
[15:12:24] <stenno> https://man7.org/linux/man-pages/man3/strftime.3.html
[15:13:21] <stenno> oh yeah lowercase m was month, uppercase M was minute
[15:14:15] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457) (Ping timeout: 252 seconds)
[15:15:55] <DnzAtWrk> token for identifying user, hmm. 512 bits
[15:15:58] <DnzAtWrk> because just why not
[15:16:13] <DnzAtWrk> why would you use a small token for something invisible to the user
[15:16:20] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[15:17:09] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[15:17:36] <stenno> does it matter?
[15:17:47] <stenno> are you worried about your disk space?
[15:17:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:18:33] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[15:19:08] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[15:19:37] <DnzAtWrk> smaller tokens have a risk of colliding
[15:19:57] *** Parts: hsv_ (~unknown@user/hsv) ()
[15:20:05] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[15:22:26] <stenno> indeed
[15:24:42] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 252 seconds)
[15:25:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:30:45] <Batman__> I'm writing a library for drop down fields in vanilla JS. I'm not sure if I should write it as a module - import { dropDownList } from './dropdown.js' OR as a function expression IIFE - var dropDownList = (function() {..... })
[15:32:31] <Batman__> I guess it depends on if I expect the user to do a webpack build if they use a module. Is that right? with function expression & IFFE , they can just do <script src="....">...
[15:32:44] <theskillwithin> my vote is module
[15:33:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:34:53] <DnzAtWrk> yepp
[15:34:55] <DnzAtWrk> use modern tech
[15:35:00] <DnzAtWrk> not archaic nonsense
[15:35:31] *** Joins: voltage_ (voltage@user/voltage)
[15:37:21] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[15:37:30] <Batman__> that's what i'm thinking, gone are the days of 20 <script src...> lines. But people are lazy
[15:37:50] <Batman__> webpack is hard to configure sometimes
[15:40:05] <theskillwithin> why are you writing a library?
[15:40:57] <theskillwithin> necessity is the mother of invention?  or doing it for fun?
[15:41:20] <Batman__> just for learning purposes, it's a drop down like the google search bar which is hard to find
[15:41:41] <theskillwithin> if your using react, downshift is a popular lib for something like that
[15:41:49] <theskillwithin> well theres tons of them
[15:42:04] <theskillwithin> https://github.com/downshift-js/downshift
[15:42:38] <theskillwithin> altho based on your question, I know you aren't using react
[15:42:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:42:47] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:43:24] <theskillwithin> Batman__ learn by doing, I am a huge fan of that
[15:43:33] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[15:44:04] <Batman__> i'll get into react, i'll finish this project off
[15:44:18] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:44:39] <Batman__> DnzAtWrk theskillwithin: thanks
[15:44:57] <DnzAtWrk> sure Batman
[15:45:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:46:22] <theskillwithin> =]
[15:51:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:52:23] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[15:52:43] <Batman__> theskillwithin: if you type in something into google.com search eg "javascript" , use the up and down arrow buttons, what you select goes into the field, then you click escape and the field goes back to what you type
[15:56:13] <Batman__> i may be a bit picky, but that's the sort of nice usability i like, and none of these libraries provide it. But they do the job. Just with drop down fields, you can have drop down fields with an arrow, ones that are search fields, ones that have multiple columns that can search on any of those columns. So it can be quite a custom requirement.
[15:57:14] *** Joins: friend (~friend@user/friend)
[15:59:29] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:01:47] <friend> https://codepen.io/cuirPork/pen/eYygZXP?editors=1111
[16:03:48] *** Joins: thiras (~thiras@user/thiras)
[16:03:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:04:11] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[16:05:16] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[16:05:57] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[16:08:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[16:09:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[16:10:10] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:12:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:14:51] *** Joins: bomb (~bomb@user/bomb)
[16:15:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:17:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:19:20] *** Joins: stenno (~stenno@user/stenno)
[16:19:51] *** Joins: Rockwood (~Rocky@user/rocky)
[16:21:24] *** Joins: tester12 (~tester12@5.120.78.109)
[16:23:11] *** Quits: tester12 (~tester12@5.120.78.109) (Client Quit)
[16:23:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:27:24] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi)
[16:27:34] *** Joins: tester12 (~tester12@5.120.78.109)
[16:28:13] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[16:31:55] *** Joins: han-solo (~han-solo@user/han-solo)
[16:33:54] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:34:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:35:09] *** Joins: guest (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc)
[16:37:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:38:11] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 268 seconds)
[16:40:35] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 260 seconds)
[16:43:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[16:45:50] *** Joins: vysn (~vysn@user/vysn)
[16:45:56] <sheetjs> wow
[16:46:49] <theskillwithin> sheetjs whats up?
[16:46:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:46:57] *** Joins: shuck (~shuck@user/shuck)
[16:47:12] <sheetjs> lets call it action at a distance
[16:47:33] <theskillwithin> spooky action?
[16:47:34] <sheetjs> finally got Numbers writing to work
[16:47:56] *** Quits: exgirl (uid545763@user/suss) (Quit: Connection closed for inactivity)
[16:47:58] <sheetjs> but it was broken for ~4 hours because the presence of one field messed up how Numbers handles ranges
[16:49:28] <sheetjs> adds ~40K to the minified builds, mostly because it ships with a blanked template
[16:49:34] <sheetjs> probably could squeeze that a bit
[16:50:13] <sheetjs> could even make that a parameter
[16:51:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:52:24] <sheetjs> since its a writer, might as well make it a separate function
[16:52:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:58:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:59:09] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:59:57] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 256 seconds)
[17:03:36] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[17:04:03] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[17:05:06] *** Joins: shuck (~shuck@user/shuck)
[17:12:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 245 seconds)
[17:13:46] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:13:48] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 240 seconds)
[17:14:08] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[17:15:14] *** Joins: b0nn (~shane@user/b0nn)
[17:20:03] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) ()
[17:22:46] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[17:22:46] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[17:22:46] *** Joins: average (~average@user/average)
[17:25:45] *** Joins: adroitmachine (~adroitmac@171.50.208.74)
[17:25:55] <blueagain> ... AUR is stupid
[17:26:03] <blueagain> local (20150516-1) is newer than AUR (4.0-1)
[17:26:50] <blueagain> you'd expect it to get that a yyyymmdd date isn't a proper version number for comparison
[17:28:11] <blueagain> hm, it's probably yay's fault though
[17:31:07] <Alexendoo> blueagain: If the thing you're installing changed version systems to one with a lower number, that's what the epoch field is for
[17:33:58] <blueagain> oh
[17:34:15] <blueagain> it's this: https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=zuki-themes
[17:34:37] <blueagain> I should probably inform the maintainer, problem is I'm running a former antergos converted to arch, that probably messes it up
[17:35:44] <blueagain> I think it was from the antergos repo, since the initial commit of that aur is 3.14
[17:35:50] <blueagain> I should probably force this
[17:36:46] <Alexendoo> Yeah then, the version system hasn't changed so it wouldn't really be an issue for the package
[17:37:34] *** Parts: D4mned (~D1mned@89.108.142.199) (Leaving)
[17:38:02] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[17:38:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:43:36] *** Joins: snedd (~snedd@86.14.114.137)
[17:44:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[17:44:13] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 240 seconds)
[17:44:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[17:45:59] *** Joins: vysn (~vysn@user/vysn)
[17:46:31] *** Quits: snedd (~snedd@86.14.114.137) (Client Quit)
[17:47:06] *** Quits: pizdets (~pizdets@183.182.111.79) (Quit: pizdets)
[17:47:45] *** Joins: pizdets (~pizdets@183.182.111.79)
[17:51:42] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[17:58:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:03:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:05:45] *** Joins: banana__ (~banana_@cpe-65-29-160-189.wi.res.rr.com)
[18:05:52] <sheetjs> !ciu TextEncoder
[18:05:52] <jellobot> sheetjs, TextEncoder & TextDecoder (Edge 79, FF 20, Chrome 38, Opera 25, Safari 10.1, iOS 10.3, Android 98) 94.78% https://caniuse.com/textencoder
[18:07:05] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[18:08:11] *** Quits: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua) (Quit: ZNC - https://znc.in)
[18:08:26] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[18:08:27] *** Joins: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua)
[18:08:32] *** Quits: banana__ (~banana_@cpe-65-29-160-189.wi.res.rr.com) (Client Quit)
[18:10:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:11:13] <sheetjs> !ciu Math.log10
[18:11:14] <jellobot> sheetjs, Failed to look up feature
[18:11:21] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 250 seconds)
[18:11:42] <sheetjs> ouch no IE support :(
[18:14:37] *** Joins: kakashiAL (~kakashi@41.143.8.67)
[18:15:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[18:17:25] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[18:18:59] * austincheney just found a firefox websocket defect
[18:19:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:19:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:19:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:19:31] *** Joins: wroathe (~wroathe@user/wroathe)
[18:20:23] <austincheney> and a memory leak on its performance monitor
[18:21:05] *** Quits: tester12 (~tester12@5.120.78.109) (Quit: Client closed)
[18:21:15] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[18:21:57] *** Joins: Anna28 (~Guest56@185.145.245.99)
[18:23:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:23:49] <austincheney> it seems, at least in the case of my application, firefox is sending two separated frames simultaneously for each network frame.  The first being the frame header and the second being the frame payload.  The workaround is to identify if the frame buffer length is the size of the frame header despite the frame header claiming to be larger and if so buffer it and concat it to the next incoming frame
[18:26:05] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 250 seconds)
[18:26:10] *** Quits: Anna28 (~Guest56@185.145.245.99) (Quit: Connection closed)
[18:28:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:29:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:30:22] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:30:29] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[18:31:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:35:44] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[18:36:10] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[18:37:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:37:59] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[18:40:06] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[18:40:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:42:14] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[18:42:40] *** Joins: voltage_ (voltage@user/voltage)
[18:44:17] *** Joins: monoxane (~monoxane@user/monoxane)
[18:45:20] *** Quits: voltage_ (voltage@user/voltage) (Client Quit)
[18:48:30] *** Joins: voltage_ (voltage@user/voltage)
[18:52:25] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[18:52:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[18:54:15] <stenno> n> const signPrefix = (num) => ['','+','-'].at(Math.sign(num)); [-3,0,4,5].map(signPrefix)
[18:54:16] <jellobot> (okay) [ '-', '', '+', '+' ]
[18:54:17] *** Joins: vysn (~vysn@user/vysn)
[18:54:18] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:54:23] <stenno> lol
[18:54:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[18:55:39] <sheetjs> got IE10 to generate an apple numbers file
[18:56:59] *** Quits: adroitmachine (~adroitmac@171.50.208.74) (Ping timeout: 252 seconds)
[18:58:10] <gde33> is there a better way of doing this?  if(!Array.isArray(x)){ x = [x] }
[18:58:17] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[18:58:38] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:58:51] <sheetjs> [x].flat?
[18:59:21] <gde33> yeah, was wondering about that
[18:59:21] <stenno> nice
[18:59:30] <gde33> x=[x].flat()
[18:59:31] *** Joins: han-solo (~han-solo@user/han-solo)
[19:00:19] <fweht> whats better for performance, `transition: all 400ms` or an array of all properties which im planning to change?
[19:01:17] <gde33> fweht: I think the former
[19:01:48] <gde33> stuff that doesn't do anything generally has great performance :P
[19:02:39] <sheetjs> https://jsfiddle.net/pc1xnkqh/
[19:03:21] <fweht> gde33: thank you!
[19:03:51] <gde33> sheetjs: wow that force downloaded something
[19:04:11] <sheetjs> yeah a numbers spreadsheet
[19:04:21] <gde33> terrifying
[19:04:25] <gde33> no prompt!
[19:04:28] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:04:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:05:03] <gde33> wtf
[19:05:08] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[19:05:27] <gde33> sheetjs: why am I not being asked if I want this?
[19:05:39] <sheetjs> it's a browser setting
[19:05:50] <gde33> ?
[19:06:03] <gde33> I have it set to not do anything without permission
[19:06:39] *** wand is now known as teard0wn
[19:06:40] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:06:45] <gde33> its like full ccp
[19:06:48] *** teard0wn is now known as teardown
[19:07:27] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[19:08:21] <gde33> sheetjs: a settings that lets the internet upload whatever she likes onto peoples computer shouldn't exist?
[19:08:36] <sheetjs> some download setting
[19:09:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[19:09:23] <gde33> reminds me how I use to enjoy posting these things to mozilla irc
[19:10:41] <gde33> open 1000 popups, start 1000 torrents etc
[19:11:11] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:11:37] <gde33> sheetjs: its so small, you could have people download a million files before they reach the "ftw?"
[19:12:13] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:12:15] <gde33> sheetjs: your firefox does give you a prompt?
[19:12:25] <sheetjs> didn't test
[19:12:28] <sheetjs> chromium doesnt
[19:15:45] <gde33> again a way to get rich fast that i have to decline :P
[19:16:47] *** Joins: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[19:17:23] *** Quits: teardown (~user@gateway/tor-sasl/wand) (Quit: leaving)
[19:17:41] *** Joins: wand (~user@gateway/tor-sasl/wand)
[19:18:41] *** Quits: wand (~user@gateway/tor-sasl/wand) (Client Quit)
[19:18:41] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:19:15] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 260 seconds)
[19:20:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:20:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:20:11] *** Joins: wroathe (~wroathe@user/wroathe)
[19:20:20] *** Quits: Digit (~user@user/digit) (Read error: Connection reset by peer)
[19:20:42] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:21:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:22:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:23:14] *** Joins: wand (~user@gateway/tor-sasl/wand)
[19:23:15] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:d11b:a263:3b58:a581)
[19:23:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:26:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:28:42] *** Joins: lapsi (~lapsi@85.14.25.194)
[19:29:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:31:50] <gde33> firefox does have an option to prompt for a download location every time
[19:32:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi)
[19:32:38] <austincheney> why do some languages have a signed 0?
[19:34:24] <gde33> why doesn't my 1967 pocket calculator use floats?
[19:38:22] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[19:38:34] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Client Quit)
[19:38:34] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:2a66:7863:a0d2:38ad)
[19:38:42] *** Joins: Decker (~d3x0r@user/d3x0r)
[19:38:51] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[19:39:08] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[19:42:30] <sheetjs> some languages don't have a native integer type
[19:42:50] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[19:42:56] <sheetjs> they use floating point throughout, typically IEEE754 doubles or singles
[19:43:52] <stenno> austincheney: ieee 754
[19:43:54] *** Joins: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63)
[19:45:17] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[19:46:01] <austincheney> thanks
[19:48:24] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[19:48:51] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[19:50:30] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:51:31] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[19:51:48] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[19:54:47] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[19:55:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:56:36] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[19:57:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:57:38] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[19:58:19] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[19:58:23] <bomb> tell me something positive about Electron.
[19:58:45] <Decker> electrons are always negative so...
[19:59:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:59:39] <Decker> :) if you want a standalone node application, with a display, electron's pretty good; but then you end up trapped using electron... and it becomes difficult to later separate the node componnent to a server and the display to the client
[19:59:50] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[20:00:46] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:00:56] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[20:01:52] <bomb> Decker if I was your beloved brother, would you let me use Electron to make desktop apps?
[20:02:20] <Decker> I would plead with you to understand I'm looking out for your best interest to discourage such a thing :)  (there's also NWJS )
[20:02:42] <gde33> Decker: Actually neither quanta nor qualities below zero exist. Don't get me started on products of the 2.
[20:02:55] <Decker> gde33 hah
[20:04:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:04:51] <gde33> Decker: you have 2 baskets with 2 apples each, we remove 4 apples from each basket then remove 4 baskets. Howmany apples do you have left? Ah so we've made 4 apples by doing arithmetic! Entirely without involvement of trees. Like Jesus!
[20:04:57] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:05:40] <Decker> you owe me 2 baskets and 4 apples
[20:05:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:06:28] <gde33> thats okay, you can have them, there are plenty of apples left!
[20:06:34] <bomb> damn, Electron is so convenient for the dev, but filthy users and their normie computers...
[20:07:20] <gde33> Bombo: think of the jobs!
[20:07:32] <Decker> it is... works out well for Atom/Electron ... but then I ran into a MUD that had an electron client - but they were already a server based thing so it was a little silly; they could have done all the same things in a regular web client
[20:07:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:07:41] <Decker> Atom/VSCode
[20:08:36] <bomb> vscode is fast
[20:08:54] <Decker> I was digging through old projects - and when I first picked up JS like 7 years ago now.; I was doing it in electron because of the unified gui/file/DB access... but now looking back I wish I had done just a littl emore work and used a websocket and seprate client/server clode
[20:09:44] <bomb> but for every vscode there are 1000 Microsoft Teams :\
[20:09:52] <Decker> that - and there's thie Vue thing which packages electron with an app; but doens't work very well with native NPM addons
[20:10:08] <Decker> ya; but they started with a lot of ground work from Atom
[20:10:31] <bomb> right
[20:10:53] <bomb> I'm not a fan of HTML/CSS, or even the JavaScript language per se
[20:11:05] <bomb> but all those JS libs out there. there are awesome ones
[20:11:08] <bomb> like Three.js
[20:13:11] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[20:13:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[20:14:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:16:47] <Decker> you can get around that working with just webGL; but it is a lot more work than scene.add(THREE.load( "model.stl" ));
[20:16:56] <Decker> (something)
[20:18:24] *** Joins: pmercado (~pmercado@186.107.58.34)
[20:22:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:27:07] <blueagain> austincheney: the websocket api is, as a rule, an utter mess
[20:29:26] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[20:30:34] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[20:32:52] *** Quits: lapsi (~lapsi@85.14.25.194) (Quit: Bye bye people :))
[20:32:57] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[20:34:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:34:33] <fweht> i try to display a three.js videotexture, it works everywhere except ios, now i found out that the example video from the three.js page works, but only if i use the url, not after downloading and reuploading it to codesandbox, is it maybe connected to cors headers?  does ios have different cors settings than other browsers?
[20:35:30] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[20:36:49] *** Quits: escherial (~escherial@143.110.239.6) (Quit: The Lounge - https://thelounge.chat)
[20:37:11] *** Joins: escherial (~escherial@143.110.239.6)
[20:38:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:38:58] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[20:39:02] *** Quits: escherial (~escherial@143.110.239.6) (Client Quit)
[20:39:37] <Decker> does sound strange; could be...
[20:40:00] *** Joins: escherial (~escherial@143.110.239.6)
[20:40:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:41:25] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[20:44:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:44:52] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[20:47:49] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:49:33] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:51:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[20:53:33] *** Joins: Digit (~user@user/digit)
[20:53:39] *** Joins: zstix (~zstix@4.15.128.42)
[20:54:03] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[20:54:13] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[20:54:45] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[20:57:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[20:58:02] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:59:05] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[20:59:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:59:51] *** Joins: nomic (~nomic@185.217.117.249)
[21:01:29] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[21:03:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[21:03:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:04:06] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[21:04:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:05:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:07:15] *** Joins: stenno (~stenno@user/stenno)
[21:11:00] *** Quits: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:11:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[21:12:03] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[21:13:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:14:30] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:15:01] *** Joins: alystair (~alystair@user/alystair)
[21:18:58] *** Joins: suss` (~user@user/suss)
[21:19:11] *** Joins: src (~src@user/src)
[21:19:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[21:19:43] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[21:20:11] <hans> >let shippingCost = Number($(".dynamic-shipping-line").textContent.match(/\d+(?:(?:\.|\,)\d+)?/)[0].replace(",", "."));
[21:22:03] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:22:03] *** Joins: Akiva (~Akiva@user/Akiva)
[21:22:40] <ljharb> skylite: because indexing into an array is a code smell. an array should be an atomic list of things.
[21:23:16] <ljharb> skylite: in this case, i'm using flatMap as a combined find + map
[21:23:24] <ljharb> skylite: so the `?.[0]` is basically what `.find` would do
[21:30:11] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:30:23] *** Joins: dvanloon4 (~dvanloon@user/dvanloon)
[21:30:48] <bomb> is WebStorm better than VSCode?
[21:30:51] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[21:30:52] *** dvanloon4 is now known as dvanloon
[21:31:24] <howdoi> define better
[21:32:33] *** Joins: pulse (~pulse@user/pulse)
[21:32:40] <bomb> take it as you will
[21:36:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[21:42:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:43:11] *** suss` is now known as suss
[21:44:25] *** Parts: Habby (~hax@69.165.175.67) ()
[21:44:32] *** Joins: coder7of9 (~coder7of9@user/coder7of9)
[21:44:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[21:44:50] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[21:45:30] *** Joins: hacks (~hax@user/hax)
[21:45:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:48:39] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:48:45] <coder7of9> i am testing polling using ajax and settimeout.. in extreme tests i put the server to sleep 60 seconds and the calls backed up. it appears there are 2 choices. 1)  from the xmlhttp.onreadystatechange call a function which pushes the nest settimout onto the stack  or 2)  have a monitor settimeot to manage the settimeout calls ensuring the last
[21:48:46] <coder7of9> one returned from the ajax call before the next one in implemented.   how else would you manage this
[21:49:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[21:50:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[21:50:32] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 272 seconds)
[21:52:56] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[21:53:17] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[21:54:49] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:00:30] <ljharb> bomb: no
[22:01:04] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[22:08:58] <theskillwithin> https://keycodes.vercel.app/  beta version, will soon be the new https://keycode.info/ soon!
[22:10:05] <blueagain> theskillwithin: what are you building?
[22:10:49] <theskillwithin> oh I didn't build that, Wes Bos did
[22:11:41] <blueagain> who is that
[22:12:41] <theskillwithin> https://wesbos.com/
[22:15:27] <blueagain> that keycodes website is broken in my firefox, probably because it assumes it can use a serviceWorker
[22:17:51] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[22:19:11] *** Quits: escherial (~escherial@143.110.239.6) (Remote host closed the connection)
[22:19:50] *** Joins: dea_ (~dea@213.128.80.36)
[22:20:11] *** Joins: escherial (~escherial@143.110.239.6)
[22:20:48] *** Quits: dea_ (~dea@213.128.80.36) (Read error: Connection reset by peer)
[22:21:07] *** Joins: dea_ (~dea@213.128.80.36)
[22:22:39] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:22:54] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:23:13] <bomb> ljharb thanks
[22:23:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[22:24:25] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[22:25:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:26:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:27:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:28:10] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:48] *** Joins: fef (~thedawn@user/thedawn)
[22:30:26] *** Quits: shkurata (~shkurata@ptr-8riebuk3lxjk0l22r6z.18120a2.ip6.access.telenet.be) (Quit: Leaving...)
[22:33:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[22:33:17] *** Quits: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:33:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 245 seconds)
[22:36:07] *** Quits: coder7of9 (~coder7of9@user/coder7of9) (Quit: Client closed)
[22:37:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:38:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:38:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:39:50] *** Joins: zebrag (~chris@user/zebrag)
[22:39:59] *** Joins: grapheti (~grapheti@dynamic42-98-142-74.dobsonteleco.com)
[22:40:23] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[22:43:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[22:43:40] <grapheti> Is there a _best_ or _more efficient way_ to dig down a tree? Here's how I'm doing it: let items = array.map(x => x.items.map(y => y.item))
[22:43:51] <grapheti> _best practice_*
[22:44:53] *** Joins: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63)
[22:50:25] <austincheney> grapheti, to the schema for the tree not explicity provided to you then you must recursively walk the tree to discover what is there
[22:50:47] <austincheney> *if not to
[22:51:40] <grapheti> The schema looks like this: a[0].b[0].c
[22:51:44] <grapheti> Trying to get to c
[22:51:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:52:46] *** Joins: nomic (~nomic@185.217.117.249)
[22:52:53] <grapheti> and the many repeated values in c to an array
[22:53:48] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 240 seconds)
[22:54:32] *** Joins: l__q (~modinfo@user/modinfo)
[22:55:17] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:55:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[22:55:43] *** Quits: nomic (~nomic@185.217.117.249) (Client Quit)
[22:56:02] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:56:32] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:57:12] <austincheney> grapheti, what type of tree is this?  Is it a DOM element?
[22:57:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:57:40] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 272 seconds)
[22:57:52] <austincheney> c = x.childNodes[0].childNodes[0]
[22:57:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:57:56] *** Joins: matsaman (~matsaman@user/matsaman)
[22:58:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:58:52] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[22:59:00] <grapheti> Oh, sorry. It's a JSON object
[23:01:29] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:01:58] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[23:02:03] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:02:25] <aindilis> anyone know how to get reveal.js to stop resizing PDFs?
[23:03:06] <matsaman> so like, fit width, or?
[23:03:22] <matsaman> or for export?
[23:03:30] <aindilis> well yeah, ideally I would display one page in its entirely with &page=1 (not for export, but for display)
[23:03:44] <matsaman> so fit page?
[23:03:50] *** bomb is now known as bomberman
[23:03:50] <aindilis> yeah, I tried Fit*=
[23:03:53] <aindilis> view=Fit*
[23:04:22] <aindilis> and a lot of other things, and could not crack this problem
[23:05:19] <matsaman> what's it doing by default?
[23:05:41] <aindilis> say I have 4 slides each with a different page= of the pdf
[23:05:50] <aindilis> the first slide appears, then resizes to 89%
[23:05:57] <aindilis> the second slide resizes to 124%
[23:06:01] <aindilis> the last slide to 249%
[23:06:31] <aindilis> x-google-chrome-pdf or something
[23:07:06] *** Joins: dd2 (d4a4407f@67.205.143.82)
[23:07:46] <matsaman> hum
[23:07:53] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[23:07:53] <matsaman> are the pages all different aspect ratios or something?
[23:07:58] <aindilis> no
[23:09:05] <matsaman> aindilis: got a link?
[23:09:15] <aindilis> no sorry, it's not net facing
[23:09:24] <aindilis> I'm trying to disable chrome pdf plugin
[23:09:26] <aindilis> right now
[23:09:30] *** Joins: pajaroherido (uid152904@id-152904.ilkley.irccloud.com)
[23:09:41] <duckgoose> sounds like a css issue more than a script issue
[23:10:02] <duckgoose> are you sure reveal.js is the cause
[23:10:03] <matsaman> it'd be interesting to see the generated code
[23:10:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[23:10:17] <aindilis> I'll paste it into a website one sec
[23:10:25] *** Parts: dd2 (d4a4407f@67.205.143.82) ()
[23:10:35] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[23:11:22] <duckgoose> https://paste.debian.net/
[23:11:31] <aindilis> http://paste.debian.net/1235501/
[23:11:57] <bomberman> inb4 distro wars
[23:12:26] <aindilis> the style= was a recent addition I tested and failed
[23:13:09] <duckgoose> I think "object-fit: contain" is your problem
[23:13:16] <matsaman> aindilis: like, if you set outline: 2px solid fuchsia; on the 'object', is its size/ratio constant between these pages?
[23:13:17] <aindilis> no I just added that
[23:13:38] *** Joins: dea_ (~dea@213.128.80.36)
[23:13:45] <duckgoose> object-fit: fill doesn't get your the desired result?
[23:13:56] <aindilis> let me check
[23:14:47] *** bomberman is now known as bomb
[23:15:05] <aindilis> I don't think it did
[23:15:11] *** Joins: stenno (~stenno@user/stenno)
[23:15:32] <aindilis> matsaman: put that in object's css?
[23:15:54] <matsaman> aindilis: yeah
[23:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:16:03] <aindilis> I don't follow your question, "is its size/ratio constant between these pages?"
[23:16:12] <matsaman> you'll see a fuchsia box, around the 'object'
[23:16:19] <matsaman> if the box never changes shape between these pages, then
[23:16:26] <matsaman> the issue is internal to chrome's viewer thingo
[23:17:13] <aindilis> I don't know much css, can you tell me the style="" for htat?
[23:17:19] <aindilis> fuschia solid etc
[23:17:45] <aindilis> oh nm
[23:17:46] <aindilis> I see
[23:18:59] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6) (Quit: Textual IRC Client: www.textualapp.com)
[23:19:03] <matsaman> style="outline: 2px solid fuchsia;"
[23:19:18] <aindilis> yeah I don't see the outline when I do that
[23:19:28] <aindilis> but the plugin size doesn't change
[23:19:35] <aindilis> it's just the zoom on the pdf in the plugin
[23:19:51] <aindilis> any idea how to disable chrome pdf
[23:20:56] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:21:00] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:21:35] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com)
[23:21:41] *** Joins: justOkay (~justache@user/justache)
[23:22:41] *** Joins: mdemo (~mdemo@user/mdemo22)
[23:24:23] *** Joins: jazzy (~jaziz@user/jaziz)
[23:26:30] <aindilis> well I did that and acrobat did not take over
[23:31:45] <NoiseEee> ooh, an exciting day where i find myself adjusting JS that uses prototype.js
[23:33:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:33:41] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[23:34:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:36:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:37:48] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[23:38:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:39:04] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:39:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[23:39:42] <ljharb> we
[23:39:46] <ljharb> *ew
[23:42:38] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[23:43:24] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:44:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:45:23] <aindilis> I think my issue is with react.js, since this works http://paste.debian.net/1235504/
[23:45:43] <aindilis> but same code inside react.js presentation doesn't
[23:45:46] <aindilis> reveal.js sorry
[23:49:53] <matsaman> aindilis: I'm reading something like it might respect #zoom=somenumber ?
[23:50:35] <aindilis> well I include that exact code letter for letter in the reveal.js and it resizes, but when just run in <html/> it doesn't
[23:51:15] <aindilis> maybe I have some kind of autoload thing going on
[23:51:59] <blueagain> autoload sounds like php
[23:52:04] <aindilis> oh nm then
[23:52:05] <matsaman> if you wanted to compare the generated HTML for each page, that might be useful
[23:52:41] <aindilis> yeah I'm inspecting and i don't see a difference
[23:52:42] <skylite> ljharb: what do you mean by "indexing into an array is codesmell"
[23:52:43] <aindilis> btw, I really appreciate the assistance btw!
[23:53:19] <skylite> what is "indexing into an array"?
[23:53:56] <ljharb> skylite: [0] or [1] etc
[23:53:58] <blueagain> SameSite=Strict is driving me crazy
[23:54:11] <skylite> how is that a bad thing?
[23:54:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:56:14] <ljharb> skylite: because an array is supposed to be a conceptual atomic list; indexing means specific positions are special
[23:56:38] <skylite> ah ok I see
[23:57:09] <aindilis> alright, I'm sick of wasting time on this, I'm just going to write a plugin to my auto presentation system that renders the pdfs pages to an image
[23:57:21] <aindilis> *images
[23:58:25] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
