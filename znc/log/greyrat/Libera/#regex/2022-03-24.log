[00:00:49] *** Joins: re101-dodo-73 (~re101-dod@2800:a4:172a:e600:ea02:aad5:3326:d75)
[00:01:08] <re101-dodo-73> hi!
[00:01:09] *** Quits: ozzi_van_nozzi (~ozzi_van_@141.76.26.242) (Quit: Client closed)
[00:01:18] <OnlineCop> o/
[00:02:14] <re101-dodo-73> Im lookingfor help about how to exclude a name file in a regex
[00:02:36] <OnlineCop> Does your regex tool support `(?!.*name)` ?
[00:02:47] <OnlineCop> (Replace 'name' as needed.)
[00:03:07] <re101-dodo-73> not sure, if for a github action
[00:04:06] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:05:53] <OnlineCop> I'm not sure what regex Github Actions uses; my guess would be Javascript?
[00:06:57] <re101-dodo-73> ok, so i can use ?!.*name to exclude those files
[00:07:24] <OnlineCop> https://stackoverflow.com/a/69758046 seems to indicate '!' in front of the path name.
[00:08:12] <re101-dodo-73> ohh Thanks!
[00:08:49] *** Quits: re101-uguisu-34 (~re101-ugu@190.143.251.212) (Quit: Client closed)
[00:10:33] <re101-wombat-9> so since safari doesnt support lookahead or lookbehinds, I just ended up doing exact math and stripping out the parts I dont want like this String(body.match(/<style(.*?)>/gm)).replace(/<style/, '').replace(/>/, '');
[00:11:40] <OnlineCop> That works.
[00:12:16] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[00:12:35] <re101-dodo-73> bye!
[00:12:37] <re101-dodo-73> thanks
[00:12:40] *** Quits: re101-dodo-73 (~re101-dod@2800:a4:172a:e600:ea02:aad5:3326:d75) (Quit: Client closed)
[00:14:23] *** Parts: re101-wombat-9 (~re101-wom@173.187.118.13) ()
[00:32:15] *** Quits: re101-insect-63 (~re101-ins@70.237.140.65) (Quit: Client closed)
[00:37:46] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[00:39:44] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[00:39:58] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[00:41:09] *** Joins: lavaball (felix@31.204.155.215)
[00:49:15] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Ping timeout: 256 seconds)
[00:59:19] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[01:06:25] *** Joins: re101-gecko-25 (~re101-gec@websrv.3854338.ru)
[01:09:07] *** Quits: adeliktas (~adeliktas@i59F5FF29.versanet.de) (Ping timeout: 260 seconds)
[01:10:13] *** Joins: adeliktas (~adeliktas@i59F5F0A1.versanet.de)
[01:13:52] *** Quits: re101-skunk-21 (~re101-sku@162.93.65.7) (Quit: Client closed)
[01:21:15] *** Quits: adeliktas (~adeliktas@i59F5F0A1.versanet.de) (Ping timeout: 260 seconds)
[01:21:57] *** Joins: adeliktas (~adeliktas@i59F4DBCA.versanet.de)
[01:26:17] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 240 seconds)
[01:27:38] *** ravan_ is now known as ravan
[01:42:13] *** Quits: re101-gecko-25 (~re101-gec@websrv.3854338.ru) (Quit: Client closed)
[01:53:12] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[01:58:24] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 252 seconds)
[02:11:25] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[02:15:59] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 252 seconds)
[02:16:20] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:21:36] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[02:25:54] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 252 seconds)
[02:30:02] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[02:30:22] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[02:31:13] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[02:34:08] *** Joins: bin101 (~bin101@user/bin101)
[02:56:23] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[03:01:07] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 260 seconds)
[03:55:59] *** Quits: src (~src@user/src) (Quit: leaving)
[03:56:54] *** Joins: re101-crane-3 (~re101-cra@2620:149:13c0:c00::4c)
[03:57:59] <re101-crane-3> Hello! I need some regex wisdom please. Any idea why this doesn't work in Safari? (https://regex101.com/r/HRW6mx/1)
[03:58:16] <re101-crane-3> It works in other browsers no problem and I don't know how to get around it
[03:59:43] <re101-crane-3> I'm just trying to get the content between those two periods
[04:02:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:03:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:04:47] <OnlineCop> re101-crane-3: Safari doesn't support lookbehinds; what do you see if you change to .NET flavor?
[04:05:59] <re101-crane-3> on with the NET thing it works
[04:06:02] <re101-crane-3> oh*
[04:06:17] <re101-crane-3> but with the Javascript flavor it shows errors
[04:06:29] <OnlineCop> Regex101 uses the browser's built-in ECMAScript, and Safari's just doesn't support (?<
[04:06:46] <re101-crane-3> dang
[04:06:51] <OnlineCop> Once Safari updates their engine to use a more recent version, it "just works".
[04:07:10] <OnlineCop> You should be able to open the same link in Chrome, Firefox, etc. and it will work properly.
[04:07:18] <re101-crane-3> is there another way to write that regex so it works everywhere?
[04:08:02] <OnlineCop> Usually, match the value (the '.') but then capture all the rest of the stuff you actually want to keep. Then you just look at the Group instead of the Match.
[04:08:35] <OnlineCop> What should it match if the dots touch? "sdf..fdds"
[04:08:49] <OnlineCop> Should it be a zero-length result?
[04:09:18] <re101-crane-3> yeah just everything between those two periods
[04:09:59] <re101-crane-3> I tried this too (https://regex101.com/r/VQU32k/1) but the two periods get into the match
[04:12:32] *** Joins: monodemono (~monodemon@cpe-72-134-32-47.natsow.res.rr.com)
[04:16:53] <OnlineCop> Safari DOES support lookaheads, so you should still be able to use (?=\.)
[04:17:11] <OnlineCop> https://regex101.com/r/VQU32k/2
[04:17:28] <OnlineCop> Yes, you will get the leading '.' in the match result, but you'll notice on the right that it's excluded from the group.
[04:18:08] <re101-crane-3> oh!
[04:18:36] <OnlineCop> You might be able to use the Javascript XRegExp package and see whether that works properly in Safari; I don't have access to that right now so couldn't really check it.
[04:19:30] *** Quits: re101-crane-3 (~re101-cra@2620:149:13c0:c00::4c) (Quit: Client closed)
[04:19:43] *** Joins: re101-crane-3 (~re101-cra@2620:149:13c0:c00::4c)
[04:20:44] <re101-crane-3> oooh
[04:20:47] <re101-crane-3> I'll try that out
[04:20:50] <re101-crane-3> thank youu!!!
[04:20:54] <OnlineCop> My pleasure.
[04:20:55] *** Joins: imcdona (imcdona@fsf/member/imcdona)
[04:24:06] *** Quits: imcdonald (imcdona@fsf/member/imcdona) (Ping timeout: 245 seconds)
[04:36:53] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:44:25] <monodemono> Greetings! I'm a bit vexed by this regex I'm working on. https://regex101.com/r/SYHVY4/2 I'm trying to strip out new lines but only when they aren't followed by an ID number that's between 5 and 9 characters long. The language/platform is the regex search and replace built into TextMate on MacOS. I can't seem to get it to match some of the middle
[04:44:26] <monodemono> lines correctly. This is the closest I've gotten, despite it requiring multiple passes, but it still won't match the lines starting with "0" or "$999" despite neither of those being ≠ a 5-9 digit number preceded by a new line. I've tried all sorts of combinations of moving the quantifiers into/out of the character class, capture group, adding
[04:44:26] <monodemono> matching groups, using a defined number range, etc… Here's the result of the previous one after two passes showing the problem: https://regex101.com/r/SYHVY4/3 this is a sample of a much larger file, hence why I don't want to match the specific characters as they are.
[04:47:12] <OnlineCop> monodemono: PCRE?
[04:47:37] <monodemono> So far everything in PCRE has worked as is, so I would assume so, yes.
[04:47:52] <OnlineCop> You probably want a negative lookahead:  (?!\d{5})
[04:48:07] <monodemono> Ooooh, that does sound promising. I'll try that out, thank you.
[04:48:26] <OnlineCop> https://regex101.com/r/SYHVY4/4
[04:49:11] <OnlineCop> Note that I also have a (?!\n) because if you have \n\n before a 5-digit number, it will succeed before the 1st '\n' but only fail between the two \n's.
[04:49:53] <OnlineCop> You can tack on as many (?!...) as you want, since they don't move your regex "cursor"; they just assert and return to the same place you started at.
[04:49:54] <monodemono> I see that, good foresight. Thank you very much, this looks like it will work perfectly.
[04:50:23] <monodemono> Looks like I'll have to practice with negative lookaheads and add that to my toolbelt haha
[04:50:36] <OnlineCop> If you're trying to handle CSV with regex, you need to be careful about how you're matching the double quotes.
[04:50:39] <OnlineCop> !csv
[04:51:02] <OnlineCop> I usually do `"(?>[^"]+|"")*"`
[04:51:19] <monodemono> I'll keep that in mind, thank you.
[04:51:27] <OnlineCop> That way, it will stop if it hits a double quote, but CSV escapes quotes as "", so it will try to match that.
[04:52:15] <OnlineCop> https://regex101.com/r/SYHVY4/5 would be one way I'd approach it.
[04:52:30] <OnlineCop> Oh yeah; I forgot to actually match the ',' delimiter. Derp.
[04:52:56] <monodemono> If I had a nickel for every time I forgot to match the comma.
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[04:55:55] <OnlineCop> https://regex101.com/r/SYHVY4/6 : I decided that newlines are not allowed (unless it's within a string) so that should fix the last line being part of the previous one.
[04:59:09] <monodemono> This is really cool, I'm going to be saving it to study it further.
[05:00:05] <OnlineCop> 👍
[05:19:49] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 250 seconds)
[05:33:44] *** Quits: monodemono (~monodemon@cpe-72-134-32-47.natsow.res.rr.com) (Quit: Client closed)
[05:34:38] *** Joins: epony (epony@user/epony)
[05:53:33] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[05:58:28] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[06:01:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:06:38] *** Joins: vlm (~vlm@user/vlm)
[06:16:16] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net)
[06:20:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-ecd2-cece-17f9-2d34.fixed6.kpn.net) (Ping timeout: 240 seconds)
[06:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[06:32:27] *** Quits: re101-crane-3 (~re101-cra@2620:149:13c0:c00::4c) (Quit: Client closed)
[06:33:42] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-2904-4e34-9b5c-2c50.fixed6.kpn.net)
[06:34:54] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[06:34:55] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[06:34:55] *** Joins: maetthew (~maetthew@user/maetthew)
[06:39:48] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-2904-4e34-9b5c-2c50.fixed6.kpn.net) (Ping timeout: 240 seconds)
[06:50:14] *** Joins: re101-koala-27 (~re101-koa@2800:484:3477:8ee1:5063:84dc:d2b9:2d0f)
[06:50:22] *** Joins: src (~src@user/src)
[06:50:27] <re101-koala-27> [a-zA-ZÁ-Ýá-ý]+(\s)[[a-zA-ZÁ-Ýá-ý]+\1[a-zA-ZÁ-Ýá-ý]+
[06:52:55] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-d40a-16a1-683d-71ee.fixed6.kpn.net)
[06:59:14] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-d40a-16a1-683d-71ee.fixed6.kpn.net) (Ping timeout: 252 seconds)
[07:02:43] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[07:04:02] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[07:04:20] *** Joins: re101-crane-98 (~re101-cra@2001:ee0:d742:5270:bc8f:97f5:a88b:b3e4)
[07:07:36] *** Quits: re101-crane-98 (~re101-cra@2001:ee0:d742:5270:bc8f:97f5:a88b:b3e4) (Client Quit)
[07:26:21] *** Quits: re101-koala-27 (~re101-koa@2800:484:3477:8ee1:5063:84dc:d2b9:2d0f) (Quit: Client closed)
[07:35:13] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[07:47:17] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[07:48:41] *** Joins: adeliktas0 (~adeliktas@i59F4D979.versanet.de)
[07:49:57] *** Quits: adeliktas (~adeliktas@i59F4DBCA.versanet.de) (Ping timeout: 240 seconds)
[07:49:57] *** adeliktas0 is now known as adeliktas
[07:52:10] *** Quits: src (~src@user/src) (Quit: leaving)
[08:21:03] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Read error: Connection reset by peer)
[08:35:12] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:38:36] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:11:01] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:14:07] *** Joins: re101-olm-99 (~re101-olm@240e:350:553c:2c00:9d9f:73c8:1733:4ac5)
[09:17:06] *** Parts: re101-olm-99 (~re101-olm@240e:350:553c:2c00:9d9f:73c8:1733:4ac5) ()
[09:17:37] *** Joins: KevinX (~KevinX@user/KevinX)
[09:43:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:49:19] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:50:54] *** Quits: Me-me (~me-me@user/me-me) (Quit: Disconnecting on purpose.)
[09:52:59] *** Joins: Me-me (~me-me@tunnel690570-pt.tunnel.tserv12.mia1.ipv6.he.net)
[09:54:29] *** Quits: Me-me (~me-me@tunnel690570-pt.tunnel.tserv12.mia1.ipv6.he.net) (Changing host)
[09:54:29] *** Joins: Me-me (~me-me@user/me-me)
[09:54:29] *** ChanServ sets mode: +v Me-me
[09:56:02] *** Joins: re101-gibbon-11 (~re101-gib@2405:201:7001:2868:14:8a85:3dfa:d434)
[09:57:41] <re101-gibbon-11> Hi @all
[09:57:41] <re101-gibbon-11> can somebody please help me for creating the regex pattern for the below requirements? thanks
[09:57:42] <re101-gibbon-11> VAT ID minimum length should be 4 characters
[09:57:42] <re101-gibbon-11> VAT ID maximum length 25 characters, including special characters like:  ".", "-" or "/"
[09:57:43] <re101-gibbon-11> VAT ID should not all be the same character i.e. 111111, AAAAAAA, etc.
[09:57:43] *** rebot sets mode: +q re101-gibbon-11!*@*
[09:57:44] <rebot> 14re101-gibbon-11: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[09:58:13] *** rebot sets mode: -q re101-gibbon-11!*@*
[09:58:28] *** Quits: re101-gibbon-11 (~re101-gib@2405:201:7001:2868:14:8a85:3dfa:d434) (Client Quit)
[10:00:45] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:09:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[10:25:49] *** Joins: KevinX (~KevinX@user/KevinX)
[10:53:34] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Read error: Connection reset by peer)
[10:55:17] *** Quits: Hash (~Hash@hey.howstoned.ru) (Ping timeout: 240 seconds)
[10:57:46] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[11:09:16] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:12:53] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:29:14] *** Joins: Hash (~Hash@hey.howstoned.ru)
[11:33:57] *** Joins: re101-camel-0 (~re101-cam@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com)
[11:34:46] <re101-camel-0> the original text is "A good abstract shows the key points of a paper".
[11:34:47] <re101-camel-0> the typed text is "test abstract shows the key points of  good a paper".
[11:34:47] <re101-camel-0> the result I want is "A good test abstract shows the key points of good a paper".
[11:34:51] <re101-camel-0> How can I do ?
[11:36:02] <re101-camel-0> Please help me
[11:44:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[11:52:54] *** Joins: lavaball (felix@31.204.155.215)
[12:11:34] *** Joins: re101-dodo-3 (~re101-dod@2001:8004:1ba0:3b90:65f7:a3b3:184e:db18)
[12:20:10] *** Joins: palasso (~palasso@user/palasso)
[12:20:16] *** Quits: re101-dodo-3 (~re101-dod@2001:8004:1ba0:3b90:65f7:a3b3:184e:db18) (Quit: Client closed)
[12:20:21] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-cc74-9bd3-caec-5bd4.fixed6.kpn.net)
[12:23:34] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[12:25:54] *** Joins: wyre (~wyre@user/wyre)
[12:26:55] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:27:37] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[12:31:08] *** Joins: vlm_ (~vlm@user/vlm)
[12:32:34] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 272 seconds)
[12:32:35] *** vlm_ is now known as vlm
[12:38:28] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: Ping timeout (120 seconds))
[12:39:46] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[12:40:19] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Client Quit)
[12:41:34] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[12:51:06] <purplex> re101-camel-0: can you explain how is that a regex question?
[12:52:03] <re101-camel-0> may be not , I want to get this result how can I do?
[13:00:09] <purplex> it sounds like a bigger task than you put it as simple question, if you are building a software capable to detect similar sentences
[13:00:28] *** Joins: mel (~mel@194.30.253.34)
[13:00:42] <mel> hi
[13:02:14] <mel> Im trying to validate on a page the phone number (using country code) but instead of Validating all the CC it sees i would like to validate only 2 (two) specific CC
[13:02:55] <mel> +30 and +357 .
[13:02:56] <mel>  It doesnt seem to be working , i tried everything i found.
[13:07:37] *** Quits: re101-camel-0 (~re101-cam@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[13:14:19] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[13:14:58] *** Joins: rvalue (~rvalue@user/rvalue)
[13:31:06] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net)
[13:32:55] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[13:33:05] *** Joins: proc (uid412603@wikipedia/procrastinatingreader)
[13:33:36] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-cc74-9bd3-caec-5bd4.fixed6.kpn.net) (Ping timeout: 252 seconds)
[13:35:18] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:44:07] *** Joins: rendar (~rendar@user/rendar)
[13:55:24] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[13:57:20] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[13:57:49] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[13:58:31] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[13:58:55] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[13:59:43] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:01:56] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[14:03:16] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:03:26] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[14:03:57] *** Joins: re101-sloth-7226 (~re101-slo@2600:387:f:4430::7)
[14:04:37] *** Quits: re101-sloth-7226 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:04:52] *** Joins: re101-sloth-7216 (~re101-slo@2600:387:f:4430::7)
[14:05:19] *** Quits: re101-sloth-7216 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:05:42] *** Joins: re101-sloth-7299 (~re101-slo@2600:387:f:4430::7)
[14:13:08] *** Quits: re101-sloth-7299 (~re101-slo@2600:387:f:4430::7) (Quit: Client closed)
[14:13:09] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Quit: Ping timeout (120 seconds))
[14:13:59] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[14:14:09] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:14:20] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[14:19:53] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:21:34] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Quit: Client closed)
[14:21:52] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[14:22:30] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[14:28:27] *** Joins: re101-parrot-26 (~re101-par@host-80-22-245-194.business.telecomitalia.it)
[14:30:57] <re101-parrot-26> I would substitute this occurences [A] or [B] or [C] respectively with this |A| |B| |C|. Could you help me? Thanks
[14:35:44] *** Joins: re101-camel-0 (~re101-cam@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com)
[14:37:34] *** Quits: re101-camel-0 (~re101-cam@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[14:54:17] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:55:31] *** Joins: wyre (~wyre@user/wyre)
[14:56:00] *** Quits: w0ng (~w0ng@185.218.127.23) (Ping timeout: 260 seconds)
[14:58:46] *** Joins: BUSY (~BUSY@user/busy)
[15:03:33] *** Joins: w0ng (~w0ng@185.218.127.24)
[15:08:39] <digitok> 07re101-parrot-26, https://regex101.com/r/Zj1bwH/1
[16:14:11] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net) (Ping timeout: 252 seconds)
[16:14:54] <rapha> hi all
[16:16:33] <rapha> OnlineCop: here's my 2nd time using the unit tests you showed me: https://regex101.com/r/6RWzcY/2 ... is there a way to make the red one green as well just with regexes (this is already working, but with some code afterwards, so just asking because i feel like some yak shaving atm)
[16:18:16] *** Joins: re (~user@user/re)
[16:20:19] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[16:21:14] <re101-crane-60> hey
[16:21:24] *** Joins: tester12 (~tester12@5.120.78.109)
[16:23:11] *** Quits: tester12 (~tester12@5.120.78.109) (Client Quit)
[16:23:19] <re101-crane-60> can you help me with regex? I need get all xml attributes values and tag values
[16:23:39] <re101-crane-60> <?xml version="1.0" encoding="UTF-8"?>
[16:23:39] <re101-crane-60> <!--Sample XML file generated by XMLSpy v2015 sp2 (http://www.altova.com)-->
[16:23:40] <re101-crane-60> <Request xmlns="http://com.bssys/egg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" processId="String" serviceId="String" adapterId="String" processName="String" systemId="String" xsi:schemaLocation="http://com.bssys/egg egg.xsd">
[16:23:40] <re101-crane-60>  <parameters>
[16:23:41] <re101-crane-60>   <parameter key="String" value="String"/>
[16:23:41] *** rebot sets mode: +q re101-crane-60!*@*
[16:23:42] <rebot> 14re101-crane-60: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[16:24:09] <digitok> 07rapha, not possible
[16:24:11] *** rebot sets mode: -q re101-crane-60!*@*
[16:24:45] <digitok> !xml @ re101-crane-60
[16:24:46] <perlbot> re101-crane-60: Do NOT regex HTML/XML/JSON! Instead, consider using the appropriate parser in your programming language of choice. (http://bit.ly/1G8p6VH)
[16:27:34] *** Joins: tester12 (~tester12@5.120.78.109)
[16:48:54] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net)
[16:49:41] <rapha> that was one clear-cut answer, thank you digitok and hope you're doin' alright!
[16:51:23] <digitok> hehe, yw :) and i am, thanks. hope you are, too
[17:05:20] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net) (Ping timeout: 252 seconds)
[17:05:51] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net)
[17:10:17] <OnlineCop> rapha: Capturing groups are just '(...)' parentheses. You can make non-capturing groups by adding ?: after the opening paren: `(fol|no)?` => `(?:fol|no)?`, `(\d+,?)` => `(?:\d+,?)`
[17:10:47] <OnlineCop> rapha: That will give you only your (?<pr>...) group without also creating Group 2, Group 3, etc.
[17:11:00] *** Joins: re101-insect-63 (~re101-ins@70.237.140.65)
[17:11:52] *** Quits: re101-insect-63 (~re101-ins@70.237.140.65) (Client Quit)
[17:12:28] <OnlineCop> Something that .NET does differently from all other flavors is that if you repeat a capturing group: `(...)+`, it will push each of them onto the "group N" stack (group 1, group 2, etc.). All other flavors will simply overwrite group 1: `(\w)+` on text "abc" will capture 'a' into group 1. Then it repeats and captures 'b' into group 1, clobbering the old value. And so forth.
[17:12:36] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net) (Ping timeout: 240 seconds)
[17:13:06] <OnlineCop> So if you plan to repeat a group, I like to make an outer capture group that surrounds a repeating non-capturing group: `((?:...)+)` so each of the inner repetitions all get stored.
[17:13:46] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:20:43] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 260 seconds)
[17:23:01] <OnlineCop> re101-crane-60: What do you have, and what do you want?
[17:25:11] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net)
[17:34:57] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net) (Ping timeout: 250 seconds)
[17:42:43] <Bayes> imagine a text where you have word and a tag called {word}. is a negative lookup the cleanest way to match for non-tag word, that is all uses of word except when used exactly as {word}?
[17:44:43] <OnlineCop> Bayes: I guess that depends on which regex flavor you are using.
[17:44:59] <Bayes> https://regex101.com/r/yW4t41/1 this is what I'm trying to do
[17:45:50] <OnlineCop> With PCRE, I actually use the (*SKIP)(*F) idiom: make it match all the stuff you want to exclude, then append `(*SKIP)(*F)|` (note the trailing OR pipe). Then the rest of the regex is what you actually want to keep.
[17:46:11] <OnlineCop> https://regex101.com/r/yW4t41/2
[17:46:48] <OnlineCop> Other languages... yeah, you kinda have to do the (?<! and (?! negative lookarounds.
[17:47:35] <OnlineCop> You have to be especially careful that {word should match and word} should match, so your look-behind actually wants to be doing the look-ahead too: `(?<!\{(?=word\}))word`  (ugly, and not all regex flavors support it).
[17:49:09] <OnlineCop> I use the `(*SKIP)(*F)|` idiom all over the place, personally: Since I code a lot, I want to find 'foo' but then exclude matches after `#line comments`, `//line comments` and even `/*block comments*/`. Sometimes I want to exclude matches within "double"- or 'single'-quoted strings. That lets me tack on any number of exclusions as I need.
[17:52:59] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net)
[17:54:43] <Bayes> ohhh nice OnlineCop I didn't know about (*SKIP)(*F)
[17:55:17] <Bayes> I don't think I'm using PCRE, or at least not ootb
[17:55:51] <Bayes> oh wait
[17:55:56] <Bayes> perl: logical.  Should Perl-compatible regexps be used?
[17:56:17] <Bayes> YAY i have access to PCRE ootb, thanks OnlineCop ＼(＾▽＾)／
[17:57:54] <OnlineCop> If you have GNU grep, `grep -P` will enable it so that works there as well.
[17:58:43] <OnlineCop> I chose PCRE because that's what you had selected on regex101. If you had Python or something else, I might have suggested some of the other methods first.
[17:58:44] <Bayes> the negative lookarounds can make the regex pretty complex
[18:06:15] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[18:07:47] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[18:12:26] *** Quits: proc (uid412603@wikipedia/procrastinatingreader) (Quit: Connection closed for inactivity)
[18:21:05] *** Quits: tester12 (~tester12@5.120.78.109) (Quit: Client closed)
[18:30:03] *** Joins: re101-skunk-21 (~re101-sku@162.93.65.1)
[18:30:34] *** Quits: re101-skunk-21 (~re101-sku@162.93.65.1) (Client Quit)
[18:34:28] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-15b1-2bac-7d01-e48.fixed6.kpn.net) (Quit: WeeChat 3.4.1)
[18:36:04] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:36:43] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Quit: Client closed)
[18:37:59] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[18:41:38] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7c02-435e-8725-9233.fixed6.kpn.net)
[18:44:23] *** Joins: monoxane (~monoxane@user/monoxane)
[19:11:54] *** Joins: livingbeef (~livingbee@88-101-35-203.rcg.o2.cz)
[19:16:00] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[19:16:24] <livingbeef> I'm trying to match all functions like get... that are not followed by left parenthesis, spaces before ( are allowed, (using ag). I currently have get[a-zA-Z]+ *[^(], but it matches things that ARE followed by (. Why's this, should regexp be greedy?
[19:18:04] <livingbeef> it seems liek [^(] is matching the last char of function's names, but that should be eaten by greedy [a-zA-Z]+
[19:19:33] <OnlineCop> Your IRC client is really messing up your text for me. I'm having a hard time seeing what you wrote.
[19:20:33] <OnlineCop> livingbeef: Does ag (or whatever you're using) support lookaheads? `get[a-zA-Z]+(?! *\()` 
[19:21:30] <OnlineCop> [^(] is matching any character, including spaces since ` *` has the possibility to backtrack in case [^(] fails (because it actually finds '(' in the text).
[19:21:48] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[19:22:44] <OnlineCop> re101-crane-60: Don't paste into chat, please. Paste your text into regex101, Save, and then share the link here.
[19:22:59] <livingbeef> I'm bolding some text, maybe your client doesn't support the control chars.
[19:23:15] <livingbeef> it might, I'll look if lookaheads work
[19:23:16] <mel> Hello! Is it possible to validate in a form 2 Different Region codes? Ex. +30 and +357 and only .
[19:23:31] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Client Quit)
[19:23:50] <OnlineCop> mel: `[+](30|357)`
[19:23:51] *** Joins: re101-sloth-72 (~re101-slo@2600:387:f:4430::7)
[19:24:12] <livingbeef> and about " *", that's weird, because it still matches even when there aren't any spaces. Can " *" backtrack over previous stuff, or can [a-zA-Z]+ backtrack too?
[19:24:48] <OnlineCop> Yes, [a-zA-Z]+ can backtrack too.
[19:25:14] <mel> so on this one ^\+?\d.\s?\(?\d{0,3}\)?[-.\s]?\d{0,3}\d{0,4} ill just replace it with this ? `[+](30|357)`
[19:25:28] <OnlineCop> The * and + quantifiers are greedy, but allow backtracking. There are some atomic versions that prevent that, like *+ and ++ so it's still greedy, but you can't backtrack.
[19:25:57] <OnlineCop> mel: Do you need specific numbers, or do you need 2-3 digits?
[19:26:30] <OnlineCop> (30|357) will only match if it finds one of those two. If you have "+1" or "+356", it won't match.
[19:26:32] <mel> ill need 2-3 digits at the beggining to be the country code  and then ill need 10 numbers to match the phone numbers
[19:26:46] <OnlineCop> mel: In that case: `[+]\d{2,3}`
[19:26:55] <mel> yeah but it will validate and all others
[19:27:06] <mel> like +1 +358 or +99
[19:27:10] <mel> right ?
[19:27:29] <OnlineCop> `\d{min,max}` will mean that with a min of '2', `+1` won't match, but the latter 2 will.
[19:28:04] <mel> hmm so i cant do it like this .  We need to let the user have just 2 options +30 or +357
[19:28:48] <mel> and then type their PN (phone number) , so it will be like +30_210_0000000 (_space)
[19:29:44] <livingbeef> OnlineCop: ++ works, thanks
[19:30:31] *** Joins: re101-donkey-30 (~re101-don@198.140.228.10)
[19:33:11] <mel> OnlineCop: Thanks ! I'll keep trying to find something , since they dont wanna just put a simple dropdown option
[19:34:05] *** Quits: re101-sloth-72 (~re101-slo@2600:387:f:4430::7) (Ping timeout: 256 seconds)
[19:35:34] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Quit: Client closed)
[19:35:43] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[19:36:11] <re101-donkey-30> Good Morning, can someone kindly help me with this reg ex.  Just trying to find all combinations of text match "Sign On, Sign-On, Start Up, Start-Up.  https://regexr.com/6i42p
[19:36:12] <rebot> 14Hey, re101-donkey-30! Please consider posting your regex to https://regex101.com/ which is our preferred regex editor. Thanks! :)
[19:36:41] <re101-donkey-30> I am sorry I was not successful in saving my example in regex101.com, it has failed multiple times and this is why I am using regexr.com
[19:36:58] <re101-donkey-30> I hope this is acceptible for now.
[19:39:02] *** Quits: livingbeef (~livingbee@88-101-35-203.rcg.o2.cz) (Quit: leaving)
[19:41:26] <re101-crane-60> I hope I did everything right this time.  I just want to mask all attributes values and all values between tags. Example of my message https://regex101.com/r/WSBFnT/1
[19:47:00] <re101-donkey-30> OnlineCop - I am tryin to save my regex example on regex101.com but it says it has failed to save.
[19:56:13] <OnlineCop> Try saving now (make a minor change and undo it). 
[19:57:20] <OnlineCop> re101-donkey-30: (Start|Sign)[\- ](Up|On) (maybe with the /i case-insensitive flag for "Sign-on" and "Sign-On" to both match)
[19:57:46] <mel> OnlineCop: all fixed . If i enclose it to a group it works this way ^([+](30|357))\(?\d{0,3}\)?[-.\s]?\d{0,6}\d{0,4}$
[19:57:55] <mel> '^([+](30|357))\(?\d{0,3}\)?[-.\s]?\d{0,6}\d{0,4}$'
[19:58:12] <re101-donkey-30> Online Cop, is it possible to make it case insensitive?  This is going to look at over 600 files so it may have variations
[19:59:01] <OnlineCop> re101-crane-60: I don't understand what you're trying to do. What do you want as the final result, or as the matches?
[19:59:43] <OnlineCop> re101-donkey-30: The entire thing, or just some of the letters? There's an /i flag (it's under the "# matches" text, right of the REGULAR EXPRESSION input).
[20:00:31] <OnlineCop> re101-donkey-30: If you want '[S]ign' to be capital, you could do `([Oo]n|[Uu]p)` for the latter portion so only those letters are case-insensitive.
[20:03:31] <re101-donkey-30> Basically I just want a match for the following variations:  Sign-On, Sign-on, sign-on, Sign On, Sign-On, Sign on, Start-Up, Start Up, Start up, Start-Up, start-up
[20:04:29] <re101-donkey-30> Esentially return me these words if it finds any of these combinations.  This will trigger us to look inside for the details.  Am I doing a good job explaining?  Sorry if I am not as I understand there are specific technical things you need to incorporate.
[20:04:31] <re101-crane-60> In the end, I want to have named groups that I can replace with ***
[20:07:15] *** Quits: re101-parrot-26 (~re101-par@host-80-22-245-194.business.telecomitalia.it) (Quit: Client closed)
[20:09:56] *** Joins: M3r (~M3r@user/M3r)
[20:10:40] <OnlineCop> re101-donkey-30: What about SiGn-oN?
[20:12:03] <OnlineCop> re101-donkey-30: `(?i)(sign|start)[\- ](on|up)` would match all the above: https://regex101.com/r/LVbIIU/1
[20:12:03] <re101-donkey-30> Most likely a very small chance as these are employment contracts.  We would most likely fire that person if they ever did that...LOL!
[20:12:39] <OnlineCop> re101-donkey-30: That (?i) turns on case-insensitive everywhere, not just for the initial letters. If you did not want to find those, you'd have to modify the regex.
[20:12:59] <re101-donkey-30> Let me test it out..
[20:13:11] <re101-donkey-30> I am the weird guy that uses PowerAutomate so sometimes I have issues :)
[20:14:26] <OnlineCop> re101-crane-60: I don't know what in your https://regex101.com/r/WSBFnT/1 link is matching correctly or incorrectly. Are you asking for confirmation that it's catching all the edge cases? Is it not matching something (but should) or matching something (but shouldn't)?
[20:22:32] <re101-crane-60> I just don't know how to write regular expressions( I would like to find in the message all the attribute values and all the values between the tags. Separate them into separate named groups and then replace the found values with characters like ***. To end up with something like <tag param1="***" param2="***"> ***</tag>
[20:25:14] <re101-crane-60> In this case, the original message can be any.
[20:34:46] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:35:53] <re101-donkey-30> OnlineCop Unfortunately PowerAutomate is not bringing anything back.  Maybe there is a function in ther ethat is not availble?  I know sometimes there are differences with what PowerAutomate can do.
[20:35:57] <M3r> evening folks! Is there any smarter way to handle this? https://regex101.com/r/0r9BF4/1
[20:36:21] <M3r> I want to capture the first three tokens that are separated with dash or colon
[20:36:45] <M3r> including or excluding the separator itself
[20:37:20] <OnlineCop> re101-donkey-30: Does PowerAutomate have its own case-insensitive toggle? If so, you can get rid of '(?i)'
[20:37:35] <re101-donkey-30> Actually it does...
[20:38:16] <OnlineCop> M3r: If you know it will be 2-digit numbers and dashes, you might want to explicitly look for those values.
[20:38:49] <OnlineCop> M3r: If those are hex values, even [A-F0-9] would be safer.
[20:38:49] <re101-donkey-30> There is a toggle called "case sensitive"
[20:39:42] <OnlineCop> M3r: https://regex101.com/r/0r9BF4/2 for example
[20:39:52] <M3r> OnlineCop yeah, I thought about that, but that would mean a longer query :D
[20:40:09] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:40:27] <OnlineCop> M3r: Sure, but do you want "safer" or "shorter"?
[20:41:08] <M3r> both :)
[20:41:10] <re101-donkey-30> @onlinecop I got rid of the '(?i)' and still nothing '(sign|start)[\- ](on|up)'
[20:41:28] <OnlineCop> M3r: `(?:-|:)` can be shortened to: `[-:]`
[20:42:06] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:42:34] *** Quits: re101-donkey-30 (~re101-don@198.140.228.10) (Quit: Client closed)
[20:42:40] <OnlineCop> re101-donkey-30: If you don't have groups, does `Start-Up` match anything? If so, what about `Start[\- ]Up` ?
[20:43:09] <M3r> cool OnlineCop, it allowed for an emoji even [:-]
[20:43:50] <OnlineCop> M3r: As long as the hyphen is first or last in the character group, you don't need to escape it. But if it's in the middle, it acts like "range": [0-9] for example.
[20:47:34] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Quit: Client closed)
[20:47:49] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:50:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:54:36] *** Joins: re101-donkey-30 (~re101-don@198.140.228.10)
[20:54:45] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[20:54:59] <re101-donkey-30> @onlinecop I got rid of the '(?i)' and still nothing '(sign|start)[\- ](on|up)'
[20:55:17] <re101-donkey-30> Sorry we are having network difficulties here and my connection terminated.
[20:55:18] <OnlineCop> re101-donkey-30: If you don't have groups, does `Start-Up` match anything? If so, what about `Start[\- ]Up` ?
[20:57:40] *** Quits: mel (~mel@194.30.253.34) (Quit: Client closed)
[20:59:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:02:08] <re101-donkey-30> OnlineCop -It doesnt like either of those.
[21:04:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7c02-435e-8725-9233.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:05:11] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[21:05:12] <OnlineCop> Do any of your files contain the literal text 'Start-Up'?
[21:06:01] <re101-donkey-30>  Practice Start‐Up Bonus.  Employer will pay an additional Thirty Thousand Dollars ($30,000) as
[21:06:01] <re101-donkey-30> a practice start‐up bonus upon the start of employment and commencement of practice.
[21:06:07] <re101-donkey-30> This is the literal sentance.
[21:06:59] <OnlineCop> You're excluding the leading and trailing quotes, right?
[21:07:10] <re101-donkey-30> Correct.
[21:07:35] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Client Quit)
[21:08:03] <OnlineCop> If your input is literally just Start-Up and you're getting no results (because that's just a string match, not even using any "regex" magic anywhere), I'd assume something else will be causing the non-match.
[21:09:52] <re101-donkey-30> I agree, something doesnt make sense.  \
[21:15:26] <maroloccio> is there a regex substitution which if "t" is in string <needle> will replace it with "True", otherwise it replaces "f" with "False"?
[21:16:27] <OnlineCop> Most regex flavors don't have a conditional replace, so things like Javascript just chain them: some_string.replace('t', "True").replace('f', "False").
[21:17:04] <OnlineCop> Regex flavors support conditional searches, but the substitution portion doesn't typically have a way to know "how it got there".
[21:17:06] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[21:18:20] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Client Quit)
[21:19:05] *** Joins: re101-crane-60 (~re101-cra@109.68.112.19)
[21:19:11] *** Joins: src (~src@user/src)
[21:19:59] <OnlineCop> PHP has a `preg_replace_callback()` call that actually CAN handle some of the conditional situations as well. It's a feature of the language using the regex flavor, and not with the regex spec itself.
[21:20:31] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:20:31] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:23:11] <re101-donkey-30> OnlineCop: Okay I figured out why it didnt work.  In the PDF it has the short Hyphen instead of the Long hyphen.  When I switched it, it came back with a match.
[21:24:29] <OnlineCop> Add both hyphens into your [\- ] character set.
[21:24:55] <OnlineCop> So you'll probably have a hyphen, m-dash, n-dash, a space, and maybe some other character.
[21:25:17] <OnlineCop> If you WANT to just accept anything, just use a '.' to match "any character" there: Start.Up
[21:31:04] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7c02-435e-8725-9233.fixed6.kpn.net)
[21:33:11] *** Quits: re101-crane-60 (~re101-cra@109.68.112.19) (Quit: Client closed)
[21:33:16] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 245 seconds)
[21:36:02] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7c02-435e-8725-9233.fixed6.kpn.net) (Ping timeout: 268 seconds)
[21:41:44] <maroloccio> OnlineCop: so I can't conditionally substitute with a regex? Or is there a flavour in which I can?
[21:43:34] <OnlineCop> maroloccio: Not on regex101, but that's only because the regex _spec_ doesn't allow it. Engines that use some flavor (PHP uses PCRE, perl is... well, what PCRE aspires to be one day, ECMAScript is usually browser-dependent) will usually have ways to actually do conditional substitution.
[21:44:18] <OnlineCop> Which flavor are you trying to use?
[21:45:08] <OnlineCop> I mean: open regex101 in 2 tabs. Put your original text in the first, and replace 't' with 'True'. Copy its output into the other one's text, and replace 'f' with 'False'.
[21:45:37] <OnlineCop> But if you're trying to do this programmatically in some language, then the answer is often, "Yes, you can do that. It would just be to do ____."
[21:47:01] <OnlineCop> Javascript? Chain '.replace()' commands. PHP? Chain `preg_replace_callback()` commands. Java? Chain (whatever Java uses: probably '.replace()' or '.sub()') commands.
[21:53:12] <maroloccio> Understand, thank you
[21:53:17] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[22:13:34] *** Joins: re101-hyena-47 (~re101-hye@a215111.upc-a.chello.nl)
[22:15:35] <re101-hyena-47> Can someone help me, why is the first value not matched? see: https://regex101.com/r/uFj91M/1
[22:22:31] *** Quits: re101-hyena-47 (~re101-hye@a215111.upc-a.chello.nl) (Quit: Client closed)
[22:34:16] *** Joins: MiguelX4139 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net)
[22:36:08] *** Quits: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net) (Ping timeout: 272 seconds)
[22:36:09] *** MiguelX4139 is now known as MiguelX413
[22:36:28] *** Joins: M3r (~M3r@user/M3r)
[23:09:54] *** Quits: re101-donkey-30 (~re101-don@198.140.228.10) (Quit: Client closed)
[23:10:35] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 250 seconds)
[23:17:28] *** Joins: lavaball (felix@31.204.155.215)
[23:35:48] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:38:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:42:09] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7c02-435e-8725-9233.fixed6.kpn.net)
