[00:00:45] *** Joins: deadmarshal (~deadmarsh@95.38.117.142)
[00:05:48] *** Quits: deadmarshal (~deadmarsh@95.38.117.142) (Ping timeout: 272 seconds)
[00:14:54] <veesh> LeoNerd: you're going at the tree-sitter perl repo?
[00:15:00] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[00:15:10] <veesh> there are A LOT of things wrong with his grammar
[00:15:31] <veesh> like he considers `=>` as making a hash key + value
[00:15:34] <veesh> which is simply false
[00:15:55] <veesh> and he has semicolons as named nodes
[00:16:19] <veesh> i tried working on it about a year back, and wasn't sure if it was a good starting point, or maybe forking a working ruby parser would be better
[00:18:34] <veesh> he has it parse `__PACKAGE__` as a special literal, which he has parse as a statement rather than expression
[00:18:44] * veesh stops complaining
[00:18:47] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6) (Ping timeout: 250 seconds)
[00:18:49] <veesh> just happy someone else noticed too
[00:19:23] *** Joins: zakame (~zakame@user/zakame)
[00:20:12] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[00:21:55] * GumbyPAN CPAN Upload: Genealogy-AncestorChart-0.0.2 by DAVECROSS https://metacpan.org/release/DAVECROSS/Genealogy-AncestorChart-0.0.2
[00:23:42] *** Joins: Moonlight (~root@c-76-105-102-152.hsd1.ga.comcast.net)
[00:23:49] *** Joins: Trigon (~reuben@144.39.114.115)
[00:25:04] <Moonlight> late night for any others?
[00:25:11] <Moonlight> did a script is  cool
[00:25:28] *** Joins: zamanf (~dev@213.133.91.246)
[00:27:03] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:31:20] <Moonlight> whois DaTa
[00:31:24] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 240 seconds)
[00:31:24] <Moonlight> pls
[00:31:40] <ology> ?
[00:33:11] *** Quits: Moonlight (~root@c-76-105-102-152.hsd1.ga.comcast.net) (Quit: leaving)
[00:39:43] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:40:22] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f)
[00:45:14] *** Joins: troller (~p@80.240.216.69)
[00:47:09] *** Quits: proller (~p@2a02:6b8:b081:16::1:24) (Ping timeout: 252 seconds)
[00:56:00] *** Joins: whynot (~whynot@37.73.35.82)
[01:17:03] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:18:56] *** Quits: magla (~gelignite@d536370e.access.ecotel.net) (Quit: Stay safe!)
[01:19:47] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[01:20:12] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[01:24:30] <DaTa> who wants to know?
[01:30:45] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[01:34:01] *** Quits: off^ (~off@50.235.176.163) (Remote host closed the connection)
[01:34:47] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:00] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[01:41:59] *** Quits: bmeneg (~bmeneg@2001:1284:f01c:5bfa:e1d7:4e15:9c92:8462) (Ping timeout: 250 seconds)
[01:44:49] <LeoNerd> veesh: Yes, I am. I'm having quite a hack at it
[01:46:36] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Ping timeout: 240 seconds)
[01:46:55] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:47:49] <xenu> having a working tree-sitter perl parser would be good
[01:48:59] <LeoNerd> I've forced myself into dogfooding it via nvim, so... I'm compelled to fix all the bugs
[01:49:03] <LeoNerd> ... aaaaaalllll the bugs
[01:49:20] <xenu> emacs will likely integrate tree-sitter in 29.0 (the release *after* the next release)
[01:49:26] <LeoNerd> Ohdeargod it has so many. E.g. I've managed to convince it that I have a POD statement that starts in the middle of an expression and therefore the entire rest of the file is One Long Comment
[01:49:29] <xenu> (it's too late for 28)
[01:49:34] <LeoNerd> (because it just marks all of POD as a big comment)
[01:51:34] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[01:55:25] *** Joins: kensanata (~user@user/kensanata)
[02:04:52] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[02:07:02] *** Joins: gloin (~gloin@user/gloin)
[02:07:15] <haj> LeoNerd: POD in the middle of an expression isn't valid Perl, or is it?
[02:08:46] <gloin> From the land of "just because you can doesn't necessarily mean you should: $foo =~ s●this|that●●g;
[02:09:14] <Grinnz> haj: it is. pod is valid after any two newlines
[02:09:22] <Grinnz> and expressions can contain newlines
[02:09:45] <Grinnz> the perl interpreter doesn't care, though
[02:10:32] <haj> https://l.perl.bot/p/exto8p does not compile
[02:10:32] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[02:11:18] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[02:14:49] <xenu> if you wrap it with do {} it will
[02:15:35] <haj> I see that perldoc will parse it as POD, but Perl does not accept POD within statements
[02:16:01] <haj> I'm really curious about these border case because I'm working on Emacs' cperl-mode
[02:16:21] <haj> (and I know a bunch of valid Perl it will never ever get right)
[02:16:36] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 240 seconds)
[02:16:52] <xenu> https://perl.bot/p/ouq3vy
[02:16:52] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[02:17:10] <Grinnz> xenu: two newlines
[02:19:50] <vanfanel64> xenu, how does that not result in errors?
[02:20:35] <haj> That's POD within a block, not in the middle of an expression, and therefore valid
[02:20:37] <Grinnz> the perl parser skips over pod sections in statement context
[02:20:55] <Grinnz> note that the pod will be valid either way
[02:21:06] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[02:21:15] <Grinnz> whether something is recognized as pod by the perl parser, and whether it's recognized as pod by pod parsers, are two different things
[02:21:21] <haj> Without the two newlines I'm surprised that both perldoc and Perl parse it
[02:21:27] <vanfanel64> Oh I was not aware that a do block could be used like a bare block in that regard. I also thought that POD had to be outside of curly blocks for some reason. I am glad to be corrected :)
[02:21:29] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[02:21:43] <Grinnz> haj: yeah they're more lenient than they should be, but i wouldn't rely on it
[02:21:47] <haj> CPerl mode does not recognize it as POD, though
[02:21:48] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[02:22:04] <haj> And I'm not going to change that
[02:22:38] <vanfanel64> What is CPerl? Perl with C? Like Obj C (which is Scheme ducktaped to C, if I remember correctly) ?
[02:22:59] <vanfanel64> s!duck!duct!
[02:23:18] <Grinnz> haj: anyway if you really want a fun test, see how it deals with pod that the perl parser doesn't recognize as pod but is valid perl code https://metacpan.org/dist/HTML-DOM/source/lib/HTML/DOM/Interface.pm#L91
[02:23:18] <Paperbot> Link title(s): [ lib/HTML/DOM/Interface.pm - metacpan.org ]
[02:23:21] <xenu> cperl-mode in emacs, one of the two emacs perl modes
[02:23:27] <vanfanel64> (does not help that some company actually sells "
[02:23:31] <vanfanel64> "ducktape" now
[02:23:33] <xenu> although there's also a thing called "cperl" which is a fork of perl by reini urban
[02:23:57] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[02:24:11] <vanfanel64> what does the cperl fork do differently, what is its benefits?
[02:24:24] <Grinnz> perlbot: cperl
[02:24:25] <perlbot> Grinnz: rurban's fork of perl, which attempts to add compiled types to perl and reimplement or remove most of the features since 5.6 | http://perl11.org/cperl/STATUS.html | http://tio.run/#perl5-cperl
[02:24:40] <vanfanel64> compiled types? Why?
[02:24:55] <vanfanel64> I have never seen anyone ask for that
[02:25:14] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[02:25:17] <haj> Sorry, different mode.  CPerl mode is an Emacs major mode to edit Perl programs.
[02:25:20] <vanfanel64> Type::Tiny already exists for likely 99% of needs to typing
[02:25:27] <Grinnz> vanfanel64: lots of people ask for type safety
[02:25:32] *** Joins: Pixi_ (~Pixi@user/pixi)
[02:26:08] <Grinnz> it's definitely worthwhile for certain things, though i wouldn't consider using a fork of the interpreter maintained by one guy and mostly incompatible with cpan as worthwhile
[02:26:45] <Kaedenn> Is there an `enumerate()` function that gives ($index, $value) for an @array? So I don't have to do `for (my $index = 0; $index < scalar @array; $index++) { my $value = $array[$index]; ... }`
[02:27:12] <Kaedenn> For when I need both the value and the index.
[02:27:14] <LeoNerd> Kaedenn: there isn't yet but literally this week we were again discussing adding one
[02:27:18] <vanfanel64> But anyone can create an object that does checking
[02:27:20] <Grinnz> vanfanel64: Type::Tiny is great for what it is but it's not really comparable to compiled types as far as performance
[02:27:31] <Kaedenn> LeoNerd: that's amusing
[02:27:49] *** Joins: monkey_ (~user@190.104.116.153)
[02:27:51] <Kaedenn> Does perl have generators or functions that yield more than one value?
[02:27:52] <xenu> Kaedenn: you can do this %array[@array]
[02:28:00] <xenu> but it's rather ugly
[02:28:03] <Grinnz> vanfanel64: but again i'm not saying anyone should use cperl, just answering the question
[02:28:05] <Kaedenn> ...what? I don't understand that syntax
[02:28:09] <vanfanel64> If I need something to be something specific, I can check what it is and/or what it contains
[02:28:12] <LeoNerd> Kaedenn: Not entirely sure that `enumerate` is the best name for it, but if we can come up with a good one then it pairs well with the new foreach_list syntax;  foreach my ($index, $value) (enumerate @array) { ... }
[02:28:17] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[02:28:34] <LeoNerd> Ahyes if it's purely an array you can do that, but that won't work for more general lists
[02:28:36] <xenu> eval: my @array = qw/pe nis/; [%array[@array]]
[02:28:41] <perlbot> xenu: Argument "pe" isn't numeric in index/value array slice at (IRC) line 1. Argument "nis" isn't numeric in index/value array slice at (IRC) line 1. ["pe","pe","nis","pe"]
[02:28:57] <xenu> what
[02:29:31] <Grinnz> you used the array elements as indexes
[02:29:41] <xenu> ah, yes, i'm stupid
[02:29:53] <LeoNerd> eval: my @array = qw(zero one two);  [ %array[0..$#array] ]
[02:29:55] <perlbot> LeoNerd: [0,"zero",1,"one",2,"two"]
[02:30:00] <LeoNerd> eval: my @array = qw(zero one two);  [ %array[keys @array] ]
[02:30:01] <genio> for my $i (0 .. $#array) { my $val = $array[$i] }
[02:30:02] <perlbot> LeoNerd: [0,"zero",1,"one",2,"two"]
[02:30:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com)
[02:30:11] <gordonfish> eval: my @array = qw/pe nis/; [%array[keys @array]];
[02:30:13] <perlbot> gordonfish: [0,"pe",1,"nis"]
[02:30:26] <gordonfish> Bah LeoNerd beat me to it
[02:30:28] <Kaedenn> ...keys on an array?!
[02:30:29] <xenu> the perl should DWIM and magically guess what i meant
[02:30:37] <genio> It's not a huge amount of work. I don't know that I get the need
[02:30:40] <gordonfish> Kaedenn: Yes, it yields indices
[02:30:51] <LeoNerd> Kaedenn: Yes.. :( I don't like it either but it was added for.. some vague handwavy symmetry reasons for something
[02:31:07] <Kaedenn> Must have been added after 5.8.8
[02:31:12] <LeoNerd> eval: my @arr = qw( one two three );  [ values @arr ]
[02:31:12] * vanfanel64 has never seen keys used on arrays before
[02:31:14] <perlbot> LeoNerd: ["one","two","three"]
[02:31:16] <LeoNerd> ^-- that one is *even worse*
[02:31:25] <Kaedenn> dear lord
[02:31:26] <xenu> LeoNerd: imo consistency is good
[02:31:32] <vanfanel64> values on an array seems redundant?
[02:31:52] <LeoNerd> xenu: On the one hand, perhaps.. but then on the other hand why can't we push/pop/splice a hash?
[02:31:52] <vanfanel64> Or is there some benefit I am not seeing?
[02:32:06] <Kaedenn> what does `chomp(@array)` do, specifically? my @array = `df -k`;
[02:32:08] * GumbyPAN CPAN Upload: Binance-API-1.09 by TASKULA https://metacpan.org/release/TASKULA/Binance-API-1.09
[02:32:09] <LeoNerd> By that logic, next you'll be arguing in favour of  delete $arr[index]
[02:32:10] <LeoNerd>  :P
[02:32:11] <haj> Grinnz: I've opened Interface.pm and both Perl mode and  CPerl mode get the multiline quote as multiline quote, ending in line 93
[02:32:26] <vanfanel64> eval: my @arr = qw( one two three );  [ [ values @arr ], [ @arr ] ];
[02:32:29] <perlbot> vanfanel64: [["one","two","three"],["one","two","three"]]
[02:32:32] <LeoNerd> Kaedenn: chomp($_) for @array;   it's a weird specialcase that distributes over all the elements
[02:32:32] <vanfanel64> I see nothing different
[02:32:45] <Kaedenn> LeoNerd: thank you
[02:32:48] <xenu> LeoNerd: well the semantics of push() aren't obvious
[02:32:57] <xenu> exists() otoh imo should stay
[02:32:58] <Kaedenn> Should I just replace it with `chomp($_) for @array`?
[02:33:01] <vanfanel64> Why would anyone use values @arr instead of @arr ?
[02:33:09] <haj> Grinnz: But yes, that's the sort of strange cases I'm looking for
[02:33:21] <Kaedenn> vanfanel64: I'm guessing because references, and values makes a copy
[02:33:22] *** Quits: pizdets_ (~pizdets@183.182.111.58) (Ping timeout: 272 seconds)
[02:33:34] <Kaedenn> otherwise the two elements would be references to the same array and modifying one modifies the other
[02:33:38] <Kaedenn> (just a guess)
[02:33:42] <LeoNerd> Hah
[02:33:53] *** Joins: pizdets (~pizdets@183.182.111.3)
[02:33:54] <xenu> haj: well if you're looking for strange cases, make cperl-mode not highlight keywords inside comments lol
[02:33:54] <LeoNerd> eval: my @arr = (1..3); $_++ for values @arr; [@arr]
[02:33:56] <perlbot> LeoNerd: [2,3,4]
[02:34:05] <LeoNerd> Like on hashes, values yields a list of lvalues
[02:34:29] <vanfanel64> eval: my @arr = (1..3); $_++ for @arr; [@arr]
[02:34:31] <perlbot> vanfanel64: [2,3,4]
[02:34:34] <Kaedenn> this makes me feel uneasy on an emotional level
[02:34:35] <vanfanel64> What is different?
[02:34:42] <Grinnz> haj: technically they're correct, it is a multiline quote and doesn't contain pod. unless you parse it with a pod parser
[02:35:02] <vanfanel64> LeoNerd, looks the same with and without values() used
[02:35:04] <haj> xenu: Do you have an example?  It should work just fine
[02:35:10] <LeoNerd> vanfanel64: Yuhhhuh ;)
[02:35:18] <LeoNerd> 23:01 <LeoNerd> ^-- that one is *even worse*
[02:35:21] <LeoNerd> I did say
[02:35:25] <haj> Grinnz: Oh, I see.  Thanks for explaining
[02:36:34] <vanfanel64> eval: my @arr = qw( one two three ); chomp @arr; [ @arr ];
[02:36:36] <perlbot> vanfanel64: ["one","two","three"]
[02:38:07] <vanfanel64> eval: my @arr = qw( one two three ); delete $arr[1]; [ @arr ];
[02:38:07] <xenu> haj: the simplest example that is being highlighted wrongly in cperl-mode in emacs 27:
[02:38:09] <perlbot> vanfanel64: ["one",undef,"three"]
[02:38:12] <xenu> haj: # foo => bar
[02:38:26] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:38:54] <xenu> i thought it was already reported but it's hard to tell, because emacs is using literally the worst bugtracker software in the existence
[02:39:12] * vanfanel64 still cannot tell what values on an array does differently than not using values on an array
[02:39:32] <xenu> vanfanel64: nothing, it's for symmetry with values %foo
[02:39:43] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469)
[02:39:48] <haj> xenu: I see - the key is shown as string, not as comment
[02:39:48] <LeoNerd> I believe I said that, several times
[02:40:21] <haj> I don't think it has been reported, I ran through the bugtracker for all things Perl
[02:40:21] <vanfanel64> Apologies, I do not see where,
[02:41:29] <haj> Until recently hashes and arrays had been highlighted in the wrong places, in particular in things like sprintf("%f"), but this has been fixed
[02:42:02] <haj> I'll have a look... 
[02:44:12] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[02:46:15] <gordonfish> Re: using-delete()-on-an-array; I've seen people in production code write something like delete $arr[$_] for @indices_to_del; @arr = grep defined, @arr; Before. Guess they didn't know about splice()..
[02:46:33] <gordonfish> sweval: my @arr = qw( one two three ); splice @arr, 1, 1; [ @arr ];
[02:46:35] <perlbot> gordonfish: ["one","three"]
[02:47:05] *** Joins: XV9 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f)
[02:47:20] <gordonfish> Not sure why delete() works like undef() when used on array elements, would be interesting to learn the reasoning for that.
[02:47:48] <LeoNerd> Hah.. it works like undef on -some- of them
[02:47:54] <vanfanel64> For hashes deletes the element, so it surprised me
[02:47:57] <LeoNerd> If you delete the final element it works like pop
[02:48:12] <vanfanel64> Why
[02:48:17] <gordonfish> Well that's interesting
[02:48:26] <LeoNerd> Because stupid reasons. It wasn't ever -supposed- to be a thing
[02:48:31] <LeoNerd> The abstraction leaked out. Ooops
[02:48:43] <gordonfish> sweval: my @arr = qw( one two three ); delete $arr[2]; [ @arr ];
[02:48:45] <perlbot> gordonfish: ["one","two"]
[02:48:59] <gordonfish> LeoNerd: Ah, thanks.
[02:49:17] <LeoNerd> delete in the middle can't ever splice, because then it would move the -other- elements around and that would be bad
[02:49:43] <xenu> but it still marks them as non-existant which is weird
[02:49:45] <xenu> eval: @array = 1..10; delete $array[4]; [exists $array[4]]
[02:49:45] <vanfanel64> LeoNerd, that is what splice does and it is not bad there?
[02:49:47] <perlbot> xenu: [""]
[02:50:12] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 240 seconds)
[02:50:15] <LeoNerd> When you splice() you're expecting to shuffle them around.. That's the intended operation
[02:50:18] <vanfanel64> xenu, non-existant, how, they exist as undef
[02:50:35] <vanfanel64> LeoNerd, oh, yes, I see what you meant now
[02:51:02] <LeoNerd> basically, delete/exists don't make sense on arrays and were never supposed to be allowed. They kinda ended up sortof by accident
[02:51:07] <vanfanel64> Is exists() intended to be used with arrays at all?
[02:51:17] <LeoNerd> and we can't get rid of them despite recently thinking about it... because apparently some folks have got into actually using them now :(
[02:51:20] <vanfanel64> I see
[02:51:28] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469) (*.net *.split)
[02:51:28] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (*.net *.split)
[02:51:28] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[02:51:28] *** Quits: shadowpaste (~shadowpas@kitty.scsys.co.uk) (*.net *.split)
[02:51:28] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[02:51:28] *** Quits: Michelle (~michelle@203.206.128.220) (*.net *.split)
[02:51:28] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (*.net *.split)
[02:51:28] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (*.net *.split)
[02:51:28] *** Quits: defjam (~eb0t@90.196.141.185) (*.net *.split)
[02:51:28] *** Quits: arcanez (~arcanez@warpedreality.org) (*.net *.split)
[02:51:28] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (*.net *.split)
[02:51:28] *** Quits: gk_ (~irkk@debrecziner.extrawurst.systems) (*.net *.split)
[02:51:28] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[02:51:28] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[02:51:28] *** Quits: itok (sid418430@ilkley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[02:51:28] *** Quits: noctuks (7vrDyCK6LH@user/noctux) (*.net *.split)
[02:51:28] *** Quits: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com) (*.net *.split)
[02:51:28] *** Quits: rfi_ (~rfi@216.70.102.172) (*.net *.split)
[02:51:28] *** Quits: huf (huf@user/huf) (*.net *.split)
[02:51:28] *** Quits: SysPete (~SysPete@fin.sysnix.com) (*.net *.split)
[02:51:28] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[02:51:33] <vanfanel64> Maybe add a giant warning ?
[02:51:46] <gordonfish> Oh boy, netsplit time
[02:51:53] * gordonfish opens umbrella
[02:52:05] <xenu> i'd argue exists() does make sense, but it should be redefined as sub exists($arr, $i) { $#{$array} >= $i } 
[02:52:25] <xenu> obviously that "marked as non-existent" nonsense should be removed
[02:52:28] <LeoNerd> That could be a valid definition, yes...
[02:52:35] <LeoNerd> But that's not the one that people have been using so far
[02:52:35] <gordonfish> Might as well just check the array size like most people do already ;po
[02:52:41] <gordonfish> s/o$//
[02:53:14] <vanfanel64> This must be the smallest netsplit that I have ever seen
[02:53:47] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[02:53:47] *** Joins: shadowpaste (~shadowpas@kitty.scsys.co.uk)
[02:53:47] *** Joins: jjatria (~jjatria@68.183.32.235)
[02:53:47] *** Joins: Michelle (~michelle@203.206.128.220)
[02:53:47] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[02:53:47] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[02:53:47] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[02:53:47] *** Joins: defjam (~eb0t@90.196.141.185)
[02:53:47] *** Joins: arcanez (~arcanez@warpedreality.org)
[02:53:47] *** Joins: gk_ (~irkk@debrecziner.extrawurst.systems)
[02:53:47] *** Joins: bkhl (~bkhl@user/bkhl)
[02:53:47] *** Joins: corwin (someone@fosshost/director/corwin)
[02:53:47] *** Joins: itok (sid418430@ilkley.irccloud.com)
[02:53:47] *** Joins: finsternis (~X@23.226.237.192)
[02:53:47] *** Joins: noctuks (7vrDyCK6LH@user/noctux)
[02:53:47] *** Joins: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com)
[02:53:47] *** Joins: rfi_ (~rfi@216.70.102.172)
[02:53:47] *** Joins: huf (huf@user/huf)
[02:53:47] *** Joins: SysPete (~SysPete@fin.sysnix.com)
[02:53:47] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[02:53:47] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Max SendQ exceeded)
[02:53:47] *** Quits: finsternis (~X@23.226.237.192) (Max SendQ exceeded)
[02:53:47] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Excess Flood)
[02:53:58] <gordonfish> *incoming*
[02:53:58] *** Joins: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net)
[02:53:59] *** Quits: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net) (Changing host)
[02:53:59] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[02:54:07] * gordonfish ducks and covers
[02:54:20] *** Joins: finsternis (~X@23.226.237.192)
[02:57:23] *** Quits: itok (sid418430@ilkley.irccloud.com) (Ping timeout: 250 seconds)
[02:57:26] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 272 seconds)
[02:59:04] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[03:08:46] *** Quits: haj (~haj@95.91.235.152) (Quit: Leaving.)
[03:08:54] <kjetilho> I wish there was a simple way to get the behaviour of perl -C, except working in a script.
[03:10:27] *** Joins: Trigon (~reuben@144.39.114.115)
[03:13:56] <Grinnz> there is, and it's actually better, because -C can result in malformed strings
[03:14:24] <LeoNerd> You can put -C on the shebang line
[03:14:25] <kjetilho> ok, looking back at my logs, -C127 or -CSLAD does work
[03:15:16] <LeoNerd> (I'd highly recommend the letter forms over the numeric version)
[03:15:35] <kjetilho> without the carping.  the manual page is confusing, since it says it should be equivalent
[03:15:48] <Grinnz> what interfaces are you actually trying to set?
[03:15:56] <kjetilho> and "Note: Since perl 5.10.1, if the -C option is used on the "#!" line, it must be specified on the command line as well" is not true, it will complain even if I run the script with perl -C.
[03:16:01] <Grinnz> -C is kind of a broad brush that hits random stuff
[03:16:35] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[03:16:36] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ec22:2d0d:21e5:35ea) (Ping timeout: 240 seconds)
[03:17:32] <Grinnz> -CS is "{ use open ':std', IO => ':encoding(UTF-8)'; }" or "use open::layers STDIO => ':encoding(UTF-8)';" (the bare block is needed in the open.pm case to keep it from also affecting open() in that scope)
[03:18:04] <Grinnz> -CD is "use open IO => ':encoding(UTF-8)';" or "use open::layers rw => ':encoding(UTF-8)';", both of which will affect that lexical scope only
[03:18:26] <Grinnz> -CA is only easily replaced by https://metacpan.org/pod/Decode::ARGV
[03:18:26] <Paperbot> Link title(s): [ Decode::ARGV - Decode the command-line arguments to characters - metacpan.org ]
[03:19:24] *** Quits: Core3329 (~bscan@2600:380:582b:670e:408f:1b1d:78a0:67fe) (Ping timeout: 240 seconds)
[03:19:58] <Grinnz> less easily: use Encode 'decode'; $_ = decode 'UTF-8', $_ for @ARGV;
[03:20:16] <kjetilho> but why?  when -CSLAD does it?
[03:20:33] <Grinnz> you said you wanted it in a script?
[03:20:45] <kjetilho> yes, on the hashbang
[03:20:49] <Grinnz> why?
[03:20:54] <Grinnz> other options are better
[03:20:59] <LeoNerd> #!/usr/bin/perl -CSLAD
[03:21:02] <LeoNerd> alredy works
[03:21:11] <Grinnz> and shebangs with multiple arguments don't always work
[03:21:16] <kjetilho> LeoNerd: yeah, I was just confused by the manual
[03:21:30] <LeoNerd> They don't always work on 1990s-era commercial UNIX platforms, no
[03:21:35] <Grinnz> -C is terrible because it only allows you to use :utf8
[03:21:41] <Grinnz> so it's only worth using for oneliners
[03:21:42] <kjetilho> "-C on its own … has the same effect as -CSDL."
[03:21:58] <LeoNerd> Solaris in particular is famous for screwing up any shabang with a space in it
[03:22:03] * gordonfish likes to start his coding with a nice big shebang
[03:22:04] <kjetilho> Grinnz: well, I'm not likely to be operating on KOI8 or anything else
[03:22:06] <Grinnz> yes, the letters directly follwoing -C are the subflags
[03:22:22] <Grinnz> kjetilho: sorry for being imprecise there's a lot to explain, the problem is :utf8 does not decode UTF-8
[03:22:27] <Grinnz> it *assumes* UTF-8
[03:22:40] <Grinnz> you want :encoding(UTF-8) instead like i showed above
[03:23:33] <LeoNerd> Oh.. Yeah; we've discussed making that more strict
[03:23:41] <Grinnz> passing invalid utf-8 or random bytes into a :utf8 stream ends up with a broken string; passing it into a :encoding(UTF-8) stream results in replacement characters and a working string
[03:23:42] <LeoNerd> A bit late for 5.36 but hopefully 5.38
[03:23:51] <kjetilho> if I want to operate on random encodings, I will open in binmode and do encode/decode explicitly
[03:24:02] <Grinnz> again, i am not talking about other encodings at all
[03:24:03] <kjetilho> Grinnz: that's fine, GIGO
[03:24:16] <Grinnz> it's not garbage, it will actually not work
[03:24:35] <Grinnz> you could get random behavior or crashes
[03:24:50] <kjetilho> how is that not GIGO?
[03:25:01] <Grinnz> because perl normally doesn't break when using its own strings
[03:25:17] <kjetilho> sounds like a bug in Perl, then
[03:25:21] <Grinnz> yes
[03:25:31] <Grinnz> hence don't use it :P
[03:25:48] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 240 seconds)
[03:25:54] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:26:02] <kjetilho> so we're back to: 00:38 <kjetilho> I wish there was a simple way to get the behaviour of perl -C, except working in a script.
[03:26:08] <kjetilho> :)
[03:26:24] <kjetilho> but for my normal use, -C127 will do.
[03:26:37] <kjetilho> (easier to remember than the salad of letters.)
[03:28:00] <kjetilho> Grinnz: what do you think about the excerpt from perlrun, then? (I have 5.32 her)
[03:28:33] <kjetilho> has it been fixed, or should I look into submitting a bug, perhaps?
[03:28:44] <Grinnz> it's correct? but not really relevant to why -C is nonideal or flags on the shebang can be difficult
[03:28:54] <kjetilho> it does NOT work like -CSDL
[03:29:02] <Grinnz> er, sure it does
[03:29:15] <Grinnz> -C is exactly equivalent to -CSDL
[03:29:24] <kjetilho> you get «Too late for "-C" option»
[03:29:37] <Grinnz> right, because you're putting it on the shebang
[03:30:00] <kjetilho> and then the other excerpt, which says it should work if I put it on the command line
[03:30:14] <kjetilho> but I still get «Too late for "-C" option»
[03:30:20] <Grinnz> yeah, no idea about that part
[03:30:44] <Grinnz> if a script is meant to decode or encode its interfaces, it should just do that
[03:30:53] <kjetilho> it's weird though, that it is impossible for -C to work on the shebang, when -CSDL does.
[03:31:11] <Grinnz> i'm not familiar with the ordering issues there
[03:31:31] <Grinnz> but uh, if one of them works just use the one that works?
[03:31:56] <kjetilho> yes :)  I was just wondering if the docs bug had been fixed in newer versions.
[03:32:19] <Grinnz> check https://perldoc.perl.org/perlrun for the latest stable version of the docs
[03:32:19] <Paperbot> Link title(s): [ perlrun - how to execute the Perl interpreter - Perldoc Browser ]
[03:32:41] <kjetilho> thanks!
[03:33:05] <kjetilho> looks unchanged
[03:33:06] *** Quits: whynot (~whynot@37.73.35.82) (Quit: leaving)
[03:33:15] <kjetilho> well, will have to save that for tomorrow.
[03:33:28] <kjetilho> thanks for your help, Grinnz and LeoNerd !
[03:36:00] *** Joins: gast0n (~g4570n@user/gast0n)
[03:41:06] *** Joins: gloin (~gloin@user/gloin)
[03:48:01] <aquanight> sweval: my $x = bless {}, "A"; bless $x, "B"; ref($x);
[03:48:03] <perlbot> aquanight: B
[03:48:16] <aquanight> I don't know why I second-guessed myself as to if reblessing was even a thing.
[03:51:46] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[03:52:54] <aquanight> kjetilho: er... I thought you could get -C in script?
[03:53:42] <LeoNerd> reblessing is definitely a thing., I even do it in a few places
[03:56:21] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:56:26] <aquanight> 1 -> binmode(*STDIN, ":encoding(UTF-8)"); 2 -> same but for *STDOUT; 4 -> *STDERR; 8 -> use open IN => ':encoding(UTF-8)'; 16 -> use open OUT => ':encoding(UTF-8)'; 32 -> $_ = Encoding::encode("UTF-8", $_) for @ARGV; 64 -> condition everything off of (grep { defined } @ENV{qw/LC_ALL LC_CTYPE LANG/})[0]; 256 -> ${^UTF8CACHE} = 1;
[03:56:55] <aquanight> you don't need -C
[03:57:31] <LeoNerd> I prefer to write it as  STDOUT->binmode( ... );
[03:57:38] <LeoNerd> Just to forget that horrible *
[03:58:12] <aquanight> STDOUT looks to much like a constant for my tastes.
[03:58:30] <LeoNerd> It's annoyingly shouty
[03:58:38] <LeoNerd> I hope one day to be able to spell it  $*STODUT-> ...
[03:58:50] <LeoNerd> But that day will not be 5.36
[03:59:02] <aquanight> but then that means the * is back
[03:59:07] *** Joins: monkey_ (~user@190.104.116.153)
[03:59:20] <LeoNerd> Nah not really. It's just part of a special name. Scheme calls them *earmuffs*
[03:59:43] <LeoNerd> I just didn't want to call it  $*STDOUT* because putting a method-arrow after that looks weeeeeird   $*STDOUT*->binmode()
[03:59:44] <aquanight> the other thing about STDOUT->binmode
[03:59:50] <aquanight> is I would be paranoid some jackass will
[03:59:52] <aquanight> package STDOUT;
[03:59:55] <aquanight> and now I'm fucked.
[04:00:20] <LeoNerd> Actually no...
[04:00:38] <ilmari> eval: package STDOUT { sub say {  die "aiee" } } STDOUT->say("woop")
[04:00:40] <perlbot> ilmari: ERROR: aiee at (IRC) line 1. 
[04:00:40] <LeoNerd> It's the other way round. If someone opens a bareword filehandle named the same as a toplevel module, then you're fucked
[04:00:53] <haarg> ${^STDOUT}
[04:01:00] <aquanight> I mean
[04:01:00] <ilmari> haarg++
[04:01:06] <aquanight> I would like to end bareword filehandles entirely.
[04:01:07] <LeoNerd> Errrrwait what?
[04:01:24] <haarg> it doesn't exist. it could.
[04:01:29] <aquanight> I think haarg is suggesting it should've been ${^STDOUT}
[04:01:41] <aquanight> like most ${^NAMED_SUPERGLOBALS}
[04:01:49] <ilmari> haarg: yeah, my ++ was ISAGN
[04:01:49] <LeoNerd> Eh but those are uuuuuhly
[04:02:02] <aquanight> not worse than $*THING
[04:02:02] <LeoNerd> We have $* spare now, it's been spare for over a decade
[04:02:34] <aquanight> it would let us get rid of the {}
[04:03:16] <aquanight> ...
[04:03:26] <ilmari> STDOUT: https://untappd.com/b/the-ale-factory-stdout/2476955
[04:03:26] <aquanight> I cannot possibly be more confused right now on how STDOUT->binmode works
[04:03:27] <Paperbot> Link title(s): [ Stdout - The Ale Factory - Untappd ]
[04:03:52] <aquanight> I put it in -MO=Concise
[04:04:18] <LeoNerd> Oh, yeah.. So don't forget that at compiletime we don't know if it'll be a bareword filehandle or a package invocation
[04:04:25] <LeoNerd> We'll have to wait until runtime to work that out
[04:04:32] <aquanight> STDOUT->binmode("Test") and the optree is this: entersub { pushmark; const("STDOUT"); const("Test"); method_named("binmode") }
[04:04:38] <LeoNerd> Yes
[04:04:44] * aquanight blinks
[04:05:11] <haarg> what is the confusing part?
[04:05:11] <aquanight> okay
[04:05:13] <LeoNerd> pp_method_named has to check if the invocant happens to be a bareword filehandle, or a package
[04:05:23] <aquanight> I want bareword filehandles dead yesterday.
[04:05:27] <LeoNerd> Yuhhhuh
[04:05:32] <aquanight> if that means I hav eto say
[04:05:34] <aquanight> *STDOUT->binmode
[04:05:39] <aquanight> so frecking be it
[04:05:40] <LeoNerd> They mostly are except people really like STDOUT->autoflush
[04:05:43] <aquanight> I'd rather od that *anyway*
[04:05:47] <LeoNerd> Look, half the audience are still writing $|++
[04:05:55] <aquanight> lol
[04:06:22] <aquanight> LeoNerd: to be fair
[04:06:28] <aquanight> have you looked at what autoflush is?
[04:06:39] <LeoNerd> I'm well aware
[04:06:40] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:06:53] <LeoNerd> But *most people* don't have to write that
[04:06:56] <aquanight> it's more or less basically select shift; $| = shift//1;
[04:07:06] <LeoNerd> What IO/Handle.pm does behind closed doors is up to it
[04:07:13] <aquanight> fair
[04:07:37] <LeoNerd> I thought  select((select $_[0]), $|++)[0])  was the usual idiom?
[04:07:54] <aquanight> I've never seen that.
[04:08:02] <LeoNerd> Or  select+(select $_[0]), $|++)[0]  if you're trying to be extra-obtuse
[04:08:14] <xenu> it's hilarious that we use the same fucking keyword in the same context
[04:08:18] <xenu> to do two completely different things
[04:08:19] <aquanight> but I suppose that'd be the technically right way.
[04:08:28] <aquanight> xenu: reverse says hi
[04:08:36] <LeoNerd> xenu: Yeah I forget if we have a single OP_SELECT to represent both
[04:08:49] <LeoNerd> And therefore a single pp_select to implement them both
[04:09:40] <aquanight> there's two different ops according to Concise
[04:10:05] <LeoNerd> Yeah indeed... pp_sys.c:pp_select seems very specifically just handling the 1-arg select
[04:10:42] <aquanight> pp_sselect is the syscall
[04:10:44] <LeoNerd> Ahah, it's OP_SSELECT / pp_sselect  for the 3-arg one
[04:10:49] <aquanight> 4-arg
[04:11:05] <aquanight> sweval: prototype("CORE::select")
[04:11:05] <LeoNerd> Annoyingly, several other ops use a 'S' prefix to indicate stringy, so I've kinda got used to ignoring that
[04:11:07] <perlbot> aquanight: No output.
[04:11:14] <LeoNerd> E.g. EQ for numerical vs. SEQ for stringy
[04:11:29] <aquanight> sweval: prototype("CORE::binmode")
[04:11:31] <perlbot> aquanight: *;$
[04:11:38] <aquanight> dammit
[04:11:55] <aquanight> but that's because select is either :prototype(), :prototype(*), or :prototype($$$;$)
[04:12:19] <aquanight> nope
[04:12:20] *** Joins: mexen (uid495612@user/mexen)
[04:12:24] <aquanight> the long form is ($$$$)
[04:12:38] <aquanight> I was right about it being 4-arg.
[04:12:58] <aquanight> anyway
[04:13:11] <LeoNerd> Er, yes. 4
[04:13:52] <aquanight> you realize what this means. I have to figure out how to get perlcritic to flag it as an unforgivable sin to say Class->thing instead of Class::->thing
[04:14:01] <LeoNerd> ;)
[04:14:13] <aquanight> I guess that's not the worst
[04:14:14] <LeoNerd> You want to *really* break some code?   open POE, "<", "/dev/nll";
[04:14:24] <LeoNerd> +u
[04:14:28] <aquanight> ...uh.
[04:15:11] <LeoNerd> Imean, it works for any toplevel package name that scripts would likely call methods on, but POE is extra-fun because it's all SHOUTY
[04:15:33] <aquanight> to be fair
[04:15:41] <aquanight> this is why I generally don't do class methods anyway
[04:15:53] <aquanight> they're either object methods or package subs
[04:16:02] <LeoNerd> eval: use Future; open Future, "<", "/dev/null"; Future->done(123);
[04:16:05] <perlbot> LeoNerd: ERROR: Bareword filehandle "Future" not allowed under 'no feature "bareword_filehandles"' at (IRC) line 1. 
[04:16:11] <LeoNerd> Well screwyou perlbot
[04:16:11] <aquanight> but I don't always get to choose. And people for some reason have decided the class methods are a great idea.
[04:16:17] <aquanight> lol
[04:16:35] <aquanight> what bothers me more is that it just flat errors under that pragma
[04:16:39] <LeoNerd> eval: use feature 'bareword_filehandles';  use Future; open Future, "<", "/dev/null"; Future->done(123);
[04:16:41] <perlbot> LeoNerd: ERROR: Can't locate object method "done" via package "IO::File" at (IRC) line 1. 
[04:16:42] <aquanight> it should just ignore the filehandle and go straight to package
[04:16:45] <LeoNerd> There
[04:17:07] <LeoNerd> It was complaining about the open(), not the method call
[04:17:21] <LeoNerd> eval: use Future; { use feature 'bareword_filehandles'; open Future, "<", "/dev/null"; }  Future->done(123);
[04:17:23] <perlbot> LeoNerd: ERROR: Can't locate object method "done" via package "IO::File" at (IRC) line 1. 
[04:18:03] <LeoNerd> *that* should complain too though
[04:19:16] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[04:20:23] <xenu> yeah it's a bug
[04:24:01] <LeoNerd> Is it reported?
[04:25:13] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[04:28:28] <gloin> This seems like it should work but does not: next if (grep(/$resln/, @ignorelist));
[04:28:49] <LeoNerd> You'll have to define "work"
[04:28:55] <gloin> simply looking to see if $resln is in @ignorelist
[04:29:04] <gloin> or the contents of each
[04:29:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:29:25] <gloin> are the contents of $resln in @ignorelist? that's the test I'm attempting
[04:30:43] <gloin> oh nevermind
[04:31:50] <gloin> that didn't work either :(
[04:33:36] <gloin> because I wasn't being greedy... this works: next if (grep {$resln =~ $_ } @ignorelist);
[04:34:08] <LeoNerd> Er... that match is reversed
[04:34:37] <LeoNerd> Imean it might be more what you intended, but it's quite different from the first one you suggested
[04:34:45] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[04:35:25] <gloin> A bit. I missed that $resln will contain more than just the elements in @ignorelist
[04:36:04] <gloin> I'm testing failed systemd units, so @ignorelist might have "this-will-fail.service" but $resln would be "this-will-fail.service A test service designed to fail"
[04:37:27] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:38:30] <gloin> I may end up wanting to crunch $resln down to just the name of the failed unit file for this test though - I could see $resln winding up being "this-works.service Replaced this-will-fail.service"
[04:38:53] <gloin> meh, ^ in the regex will fix :)
[04:43:23] <aquanight> sweval: use Feature; open *Future, '<', '/dev/null'; Future->done(123);
[04:43:25] <perlbot> aquanight: ERROR: Can't locate Feature.pm in @INC (you may need to install the Feature module) (@INC contains: $BLEAD/lib/site_perl/5.35.8/x86_64-linux $BLEAD/lib/site_perl/5.35.8 $BLEAD/lib/5.35.8/x86_64-linux $BLEAD/lib/5.35.8) at (IRC) line 1. BEGIN failed--compilation aborted at (IRC) line 1. 
[04:43:32] <aquanight> sweval: use Future; open *Future, '<', '/dev/null'; Future->done(123);
[04:43:34] <perlbot> aquanight: ERROR: Can't locate object method "done" via package "IO::File" at (IRC) line 1. 
[04:43:36] <simcop2387> daemon: https://www.supermicro.com/en/products/motherboard/X12STN-E new upcoming board
[04:43:37] <Paperbot> Link title(s): [ X12STN-E | Motherboards | Products | Super Micro Computer, Inc. ]
[04:43:38] <aquanight> LeoNerd: TOO MANY F*TURE WORDS
[04:44:02] <aquanight> also wtf
[04:44:10] <aquanight> so yeah
[04:44:15] <aquanight> I hate bareword file handles more now.
[04:44:33] <simcop2387> daemon: video review, https://www.youtube.com/watch?v=1rbqCuXxPZ0
[04:44:33] <Paperbot> YouTube video linked by simcop2387: Cool! HDD Sized SBC w/ 2.5GbE and PCIe Gen4 - published by ServeTheHome
[04:46:00] <simcop2387> also tomorrow during the day at some point i'll be turning off perlbot's server again, to do some heat mitigation stuff
[04:46:14] <daemon> simcop2387, I really want to watch it but I am so tired after 5 days of re-jigging infra that I am not sure I am even awake at this very moment, I will open it in a tab for tomorrow :)
[04:46:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:49:02] <gloin> damn, that looks tight
[04:49:11] <aquanight> hmm
[04:49:32] <buu> eval: localtime(1317096000)
[04:49:34] <perlbot> buu: Tue Sep 27 13:00:00 2011
[04:49:47] <simcop2387> eval: $ENV{TZ}
[04:49:49] <perlbot> simcop2387: Asia/Pyongyang
[04:49:54] <aquanight> perlbot: sweval localtime(time)
[04:49:56] <perlbot> aquanight: Wed Feb 16 10:19:55 2022
[04:50:09] <aquanight> simcop2387: so it that "tomorrow during the day" perlbot time or your time
[04:51:00] <buu> eval: localtime(1318305600)
[04:51:02] <perlbot> buu: Tue Oct 11 13:00:00 2011
[04:51:18] <LeoNerd> xenu: I couldn't find an issue so I reported one:  https://github.com/Perl/perl5/issues/19426
[04:51:19] <simcop2387> aquanight: it used to be that it was one of the weirder timezones, with like a 45 minute offset so i did it as a joke.  i keep meaning to also add the time namespace support and have the bot have a random time between 1970 and 2038 just for fun
[04:51:19] <Paperbot> Link title(s): [ Method resolution still searches inside bareword handles despite `no feature "bareword_filehandle... ]
[04:51:46] <aquanight> simcop2387: re heat management: dunk it in LN2
[04:52:07] <aquanight> sweval: use Future; open *Future, '<', '/dev/null'; Future::->done(123);
[04:52:08] <perlbot> aquanight: ERROR: Can't locate object method "done" via package "IO::File" at (IRC) line 1. 
[04:52:15] <aquanight> LeoNerd: ... um.
[04:52:21] <aquanight> EXPLAIN THIS.
[04:52:51] <LeoNerd> "My client has no comment at this time"
[04:53:14] <aquanight> so I can't even :: to avoid it
[04:53:35] <aquanight> I can never package-method call again.
[04:53:42] <aquanight> I have to frecking do it the stupid way
[04:53:57] <aquanight> UNIVERSAL::can("Future", "done")->(123);
[04:54:04] <aquanight> UNIVERSAL::can("Future", "done")->("Future", 123);
[04:54:09] <simcop2387> weval: use Future; open *Future, '<', '/dev/null'; "Future"->done(123);
[04:54:11] <perlbot> simcop2387: ERROR: Can't locate object method "done" via package "IO::File" at (IRC) line 1. 
[04:54:37] <simcop2387> aquanight: this is another reason to disallow non-lexical filehandles
[04:54:47] <aquanight> ...
[04:54:50] <aquanight> agreed.
[04:55:03] <aquanight> now picketing for: no feature 'global_filehandles';
[04:55:18] <aquanight> it must have total, global effect.
[04:55:48] <LeoNerd> Fun times, fun times
[04:55:49] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[04:55:57] <aquanight> while we're at it. let's get rid of globs entirely.
[04:56:13] <LeoNerd> Honestly I'm close to wanting a `legacy.pm` just so Ican start turning off what I consider annoyingly old legacy things
[04:56:23] <LeoNerd> no legacy qw( bunch of crap that should never have survived past 1990 );
[04:56:25] <aquanight> we should shift entirely to the lua model
[04:56:37] <aquanight> my $Future = require("Future"); $Future->done(123);
[04:57:57] <aquanight> is perl that old?
[04:58:10] <aquanight> I guess I never really gave thought to how old the first perl was
[04:58:41] <LeoNerd>         Larry   1.000          1987-Dec-18
[04:58:43] <LeoNerd> says perlhist
[04:59:09] <aquanight> daaaaamn.
[04:59:11] <LeoNerd>         Larry   5.000          1994-Oct-17
[04:59:20] <aquanight> I mean I think about C and think of C89
[04:59:27] <aquanight> I know C is older than 89 but still
[04:59:38] <LeoNerd> The first release in the 21st century was:                  5.5.640       2000-Feb-02
[04:59:43] <aquanight> I'm pretty sure C before C89 was a wild, savage, and untamed wasteland
[05:00:34] <aquanight> then one must logically assume that 5.5.639 was the last release of the 20th century... but what day?
[05:01:02] <LeoNerd> That doesn't seem to be recorded. The final release of 1999 was:                   5.005_63      1999-Dec-09
[05:01:34] <aquanight> that probably would be it then
[05:01:55] <LeoNerd> Ah; yes a change of format
[05:02:12] <LeoNerd> 5.005_64 became 5.5.640
[05:02:35] <aquanight> 5.5.64 would've been 5.005_064
[05:02:39] <aquanight> I'm guessing
[05:02:53] <LeoNerd> Yes
[05:03:13] <aquanight> perl developers all "nobody needs more than 3 digits for a version component"
[05:03:17] <aquanight> Microsoft: hold my beer
[05:03:39] <aquanight> Microsoft Windows [Version 10.0.19044.1526]
[05:03:48] <aquanight> old-style format *THAT*
[05:04:01] <LeoNerd> We're doing 12 releases a year between minor bumps. We've got enough minor space up until 5.998
[05:04:14] <LeoNerd> Though, actually I recently broke that so in fact we can only go up as far as 5.254
[05:04:48] <aquanight> ...wha?
[05:05:08] <LeoNerd> We'll be good until the year 2131
[05:05:14] <LeoNerd> Someone make a note on the calendar, in case we forget
[05:05:21] <aquanight> lol
[05:05:59] <LeoNerd> https://github.com/Perl/perl5/blob/blead/intrpvar.h#L1032-L1036  <== the reason
[05:06:00] <Paperbot> Link title(s): [ perl5/intrpvar.h at blead · Perl/perl5 · GitHub ]
[05:07:05] * aquanight quietly PRs it to U32
[05:07:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[05:07:34] <LeoNerd> That won't work; it won't fit in the savestack then
[05:07:41] *** Quits: XV9 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (Quit: Textual IRC Client: www.textualapp.com)
[05:07:54] <aquanight> why not?
[05:08:13] <aquanight> then again
[05:08:20] <aquanight> do we even need to be saving the 'major' at this point?
[05:08:21] <LeoNerd> https://github.com/Perl/perl5/blob/blead/scope.c#L1383
[05:08:23] <Paperbot> Link title(s): [ perl5/scope.c at blead · Perl/perl5 · GitHub ]
[05:08:26] <aquanight> it's going to be 5 for ever
[05:08:33] <LeoNerd> Yes; because in not-too-many-years time I hope that'll be 7
[05:08:40] <aquanight> right
[05:08:44] <aquanight> why can't that be upped to U32
[05:08:54] <LeoNerd> https://github.com/Perl/perl5/blob/blead/scope.c#L702  -- also
[05:08:55] <Paperbot> Link title(s): [ perl5/scope.c at blead · Perl/perl5 · GitHub ]
[05:09:21] <LeoNerd> The 'uv' is shared with the main type of the savestack entry
[05:09:30] <aquanight> hmm
[05:09:51] <LeoNerd> I think in practice there are at least 24 bits available so it _could_ be extended a bit more
[05:09:53] <aquanight> I guess it'll have to be broken out to its own field
[05:10:06] <aquanight> so that it can be a dual-64-bit field
[05:10:08] <LeoNerd> But honestly people can worry about that in... a few decades time, if that's still a problem by then. Hopefully it won't be
[05:10:17] <aquanight> that enough minor versions for you?
[05:10:26] <LeoNerd> The savestack is already a crazy variable-length-encoding system
[05:10:31] <LeoNerd> Look at how the SAVE functions work
[05:11:12] <LeoNerd> SAVEHINTS already stores four entries: The type+prevailing version, oldhh, save_cophh, hints
[05:11:37] <LeoNerd> There actually aren't any things that store *five*
[05:11:40] <LeoNerd> That would be huge
[05:14:36] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[05:14:50] <LeoNerd> Anyway, it being nearly 2am I should head to bed
[05:19:39] *** Joins: monkey_ (~user@190.104.116.153)
[05:21:19] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469)
[05:23:04] *** Joins: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net)
[05:24:17] *** Quits: waltman (waltman@2601:4a:701:4451:3f8f:da1c:319d:3209) (Ping timeout: 240 seconds)
[05:25:23] *** Joins: waltman (waltman@2601:4a:701:4451:74cb:c36f:1f58:ffa9)
[05:31:58] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:40:29] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[05:49:24] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[05:55:24] *** Quits: Su-Shee (~Susanne@p4ffc7a34.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[05:56:35] *** Joins: Su-Shee (~Susanne@p5089429c.dip0.t-ipconnect.de)
[06:06:21] *** Joins: frost (~frost@user/frost)
[06:10:26] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:11:03] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[06:21:30] * GumbyPAN CPAN Upload: Google-Ads-GoogleAds-Client-10.0.0 by WFANSH https://metacpan.org/release/WFANSH/Google-Ads-GoogleAds-Client-10.0.0
[06:25:24] *** Quits: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net) (Ping timeout: 240 seconds)
[06:29:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Read error: No route to host)
[06:31:53] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[06:35:00] *** Quits: Aniar (~Aniar@23-116-8-40.lightspeed.cicril.sbcglobal.net) (Ping timeout: 240 seconds)
[06:36:34] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[06:37:17] *** Joins: Aniar (~Aniar@23-116-8-40.lightspeed.cicril.sbcglobal.net)
[06:47:02] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[06:52:54] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[07:00:20] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[07:01:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[07:01:29] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:03:49] *** Joins: alex11 (~alex11@user/alex11)
[07:05:22] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[07:16:36] * GumbyPAN CPAN Upload: SPVM-0.9505 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9505
[07:19:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:81fd:dc83:46f:8469) (Ping timeout: 240 seconds)
[07:20:09] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ec22:2d0d:21e5:35ea)
[07:26:01] *** Joins: deadmarshal (~deadmarsh@95.38.0.168)
[07:37:27] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[07:57:48] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:59:09] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:01:09] *** Joins: Martchus (~martchus@2a01:c22:738d:9100:d250:99ff:fe49:3cce)
[08:01:24] *** Quits: Martchus_ (~martchus@2a01:c22:765c:be00:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[08:03:18] *** Joins: deadmarshal_ (~deadmarsh@95.38.231.90)
[08:03:48] *** Quits: deadmarshal (~deadmarsh@95.38.0.168) (Ping timeout: 240 seconds)
[08:08:53] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:05] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[08:14:06] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[08:14:30] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[08:18:32] *** Quits: deadmarshal_ (~deadmarsh@95.38.231.90) (Ping timeout: 272 seconds)
[08:19:27] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Read error: Connection reset by peer)
[08:20:36] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[08:21:44] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[08:23:36] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[08:27:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[08:28:06] *** Joins: Manderson_ (~manderson@45.40.81.122)
[08:29:21] *** Joins: Manderson__ (manderson@gateway/vpn/protonvpn/manderson)
[08:29:31] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:31:54] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 252 seconds)
[08:33:06] *** Quits: Manderson_ (~manderson@45.40.81.122) (Ping timeout: 272 seconds)
[08:34:07] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:36:31] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:02:32] *** Joins: deadmarshal (~deadmarsh@95.38.231.90)
[09:03:54] *** Joins: frost (~frost@user/frost)
[09:15:54] *** Joins: mexen (uid495612@user/mexen)
[09:31:50] * GumbyPAN CPAN Upload: JSON-Schema-Modern-0.544 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-0.544
[09:34:03] *** Quits: japh (~scp1@user/japh) (Ping timeout: 252 seconds)
[09:34:21] *** Joins: japh (~scp1@user/japh)
[09:36:51] * GumbyPAN CPAN Upload: OpenAPI-Modern-0.022 by ETHER https://metacpan.org/release/ETHER/OpenAPI-Modern-0.022
[09:37:56] *** Joins: tybalt89_ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[09:38:36] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 240 seconds)
[09:39:48] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[09:39:54] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:40:05] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[09:40:59] *** Joins: csrf (~csrf@user/csrf)
[09:42:12] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Ping timeout: 240 seconds)
[09:43:31] *** Joins: tybalt89__ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[09:43:50] *** Quits: tybalt89_ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Read error: Connection reset by peer)
[09:46:43] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[09:46:45] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Remote host closed the connection)
[09:46:52] * GumbyPAN CPAN Upload: Mojolicious-Plugin-OpenAPI-Modern-0.001 by ETHER https://metacpan.org/release/ETHER/Mojolicious-Plugin-OpenAPI-Modern-0.001
[09:47:27] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[09:48:05] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[09:48:54] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[09:52:39] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[09:58:30] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:59:13] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:03:28] *** Joins: ekathva (~ekathva@n3k02urgmuqvuf9nu-1.v6.elisa-mobile.fi)
[10:14:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:17:01] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[10:24:33] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:28:55] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:41:00] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ec22:2d0d:21e5:35ea) (Ping timeout: 240 seconds)
[10:44:00] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:46:20] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[10:48:10] *** Quits: bluray (~bluray@user/zapdos) (Quit: Konversation terminated!)
[10:53:47] <rindolf> "If the Hare in https://en.wikipedia.org/wiki/The_Tortoise_and_the_Hare was pitied against windows update, he could have taken a two weeks vacation in the carribean and still win." ;]
[10:53:48] <Paperbot> Link title(s): [ The Tortoise and the Hare - Wikipedia ]
[10:54:54] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 252 seconds)
[11:07:00] * GumbyPAN CPAN Upload: Lang-HL-5.012 by RAJ https://metacpan.org/release/RAJ/Lang-HL-5.012
[11:08:26] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Remote host closed the connection)
[11:08:39] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[11:13:09] *** Joins: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[11:17:01] * GumbyPAN CPAN Upload: Template-Plex-v0.1.0 by DRCLAW https://metacpan.org/release/DRCLAW/Template-Plex-v0.1.0
[11:17:01] * GumbyPAN CPAN Upload: Net-Async-Redis-3.019 by TEAM https://metacpan.org/release/TEAM/Net-Async-Redis-3.019
[11:22:02] * GumbyPAN CPAN Upload: Lang-HL-5.016 by RAJ https://metacpan.org/release/RAJ/Lang-HL-5.016
[11:27:47] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:34:30] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[11:37:55] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:39:00] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 240 seconds)
[11:42:55] *** Quits: Manderson__ (manderson@gateway/vpn/protonvpn/manderson) (Read error: Connection reset by peer)
[11:43:59] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[11:54:01] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:55:32] *** Joins: art1 (~romeyke@p200300ccdf09b200f2dfa200ad1d3cb4.dip0.t-ipconnect.de)
[11:56:40] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[12:03:49] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:07:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[12:12:14] *** Joins: zamanf (~dev@213.133.91.246)
[12:12:14] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[12:12:14] *** Joins: zamanf (~dev@user/zamanf)
[12:13:01] *** Joins: frost (~frost@user/frost)
[12:14:44] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[12:19:00] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[12:22:36] *** Quits: deadmarshal (~deadmarsh@95.38.231.90) (Ping timeout: 240 seconds)
[12:26:17] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 256 seconds)
[12:28:24] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c9dd:301:29f7:88f5)
[12:31:40] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:33:48] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 240 seconds)
[12:35:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:36:25] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Read error: Connection reset by peer)
[12:37:09] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[12:38:07] *** Joins: Pali (~pali@user/pali)
[12:41:15] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[12:43:09] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:44:37] *** Joins: haj (~haj@95.91.235.152)
[12:44:47] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:47:58] <hethw> how can I rmtree('path/dir/'); and remove the dir too?
[12:48:42] *** Quits: Adura (~Adura@user/adura) (Killed (NickServ (GHOST command used by Adurah!~Adura@bras-base-toroon213mw-grc-25-76-64-165-53.dsl.bell.ca)))
[12:48:55] *** Joins: Adura (~Adura@user/adura)
[12:49:35] *** Quits: Adura (~Adura@user/adura) (Client Quit)
[12:49:45] *** Quits: HvszrStykp (~X@81.171.62.84) (Ping timeout: 256 seconds)
[12:52:44] *** Joins: Adura (~Adura@user/adura)
[12:55:12] <vague> Where is rmtree from?
[12:55:37] <vague> Use Path::Tiny->remove_tree
[12:56:01] <vague> perldoc Path::Tiny
[12:56:02] <perlbot> vague: Your documentation is available at: https://perldoc.perl.org/Path::Tiny
[12:57:01] <vague> Seems to be some problems with metacpan and perldoc.perl.org, although I guess that url isn't valid anyway
[12:59:46] *** Quits: ilmari (~ilmari@user/ilmari) (Remote host closed the connection)
[13:01:05] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[13:02:00] <hethw> vague, it's from File::Path
[13:04:36] <vague> Seems to be a cache-server issue with metacpan? 'Error 503 first byte timeout' -> 'Varnish cache server'
[13:05:17] <hethw> https://perldoc.perl.org/File::Path
[13:05:17] <Paperbot> Link title(s): [ File::Path - Create or remove directory trees - Perldoc Browser ]
[13:06:25] <kjetilho> vague: sounds like a backend issue to me.  I guess the cache already had File::Path docs
[13:07:13] * GumbyPAN CPAN Upload: Plack-Auth-SSO-OIDC-0.011 by NJFRANCK https://metacpan.org/release/NJFRANCK/Plack-Auth-SSO-OIDC-0.011
[13:07:27] *** Joins: deadmarshal (~deadmarsh@95.38.231.90)
[13:07:28] <vague> IF the cache has the page it should show it to me instead of an error page :P
[13:08:35] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Quit: Leaving)
[13:08:35] <vague> hethw, did you try setting { safe => 0 } when calling remove_tree? You are recommended to use remove_tree so I suggest you do that
[13:08:40] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[13:08:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:09:03] <hethw> vague, not yet, I didn't understand why I should do it
[13:09:19] <hethw> aka the meaning of 'safe'
[13:10:22] <vague> Ah no, you need https://perldoc.perl.org/File::Path#keep_root-=%3E-$bool
[13:10:23] <Paperbot> Link title(s): [ File::Path - Create or remove directory trees - Perldoc Browser ]
[13:12:16] <kjetilho> vague: it has the File::Path docs, hence it works.  but Path::Tiny is so obscure probably no one has asked for it since 2018
[13:13:40] <vague> Path::Tiny is obscure? 
[13:14:09] <kjetilho> *points* the proof is there! :)
[13:14:48] <vague> I'm not getting the File::Path page on metacpan either :P
[13:16:04] <kjetilho> "Error 503 first byte timeout" means Varnish was able to connect to the backend, but the backend did not respond with a single byte before timeout.  so the backend sounds completely dead.
[13:21:48] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:23:42] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[13:42:25] *** Joins: erik__ (~erik@2001:1c00:1805:fd00:762a:27ac:572e:3767)
[13:46:20] *** Joins: ilmari (~ilmari@user/ilmari)
[13:49:22] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:49:37] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[13:51:17] * GumbyPAN CPAN Upload: Plack-Auth-SSO-OIDC-0.012 by NJFRANCK https://metacpan.org/release/NJFRANCK/Plack-Auth-SSO-OIDC-0.012
[13:55:02] *** Parts: art1 (~romeyke@p200300ccdf09b200f2dfa200ad1d3cb4.dip0.t-ipconnect.de) ()
[13:55:12] *** Joins: art1 (~romeyke@p200300ccdf09b200f2dfa200ad1d3cb4.dip0.t-ipconnect.de)
[13:56:23] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:56:39] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[14:00:44] <rindolf> kjetilho: vague : path-tiny isnt obscure
[14:03:43] <vague> rindolf, I didn't claim it, kjetilho did :)
[14:04:37] <kjetilho> it was a joke, I even said 2018 as an exaggaration to make that clear!
[14:04:49] <kjetilho> *grumble*
[14:05:26] <rindolf> kjetilho: ah. :|
[14:05:31] <kjetilho> :)
[14:06:48] <rindolf> kjetilho: "If the Hare in https://en.wikipedia.org/wiki/The_Tortoise_and_the_Hare was pitied against windows update, he could have taken a two weeks vacation in the carribean and still win."
[14:06:49] <Paperbot> Link title(s): [ The Tortoise and the Hare - Wikipedia ]
[14:08:43] <erik__> this may be known and it may be the wrong channel to report, but I'm getting "no healthy backends" (HTTP 503) from metacpan.org
[14:08:46] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 272 seconds)
[14:10:11] *** Joins: Darkcoal (~user@user/Darkcoal)
[14:11:50] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:17:08] <rindolf> erik__: https://metacpan.org/pod/Acme::NewMath gives me that here too
[14:17:45] <erik__> rindolf, thanks for confirming. Can you escalate that to the powers which manage it?
[14:18:59] *** Joins: xenu_ (~xenu@carychium-tridentatum.xenu.pl)
[14:19:15] *** Quits: xenu (~xenu@carychium-tridentatum.xenu.pl) (Read error: Connection reset by peer)
[14:20:17] <rindolf> erik__: try http://www.irc.perl.org/channels.html
[14:20:18] <Paperbot> Link title(s): [ irc.perl.org - Channels ]
[14:21:29] *** Joins: troller (~p@2a02:6b8:0:40c:8a54:baea:d917:c94c)
[14:24:57] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[14:28:28] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:32:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[14:32:18] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[14:32:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:45:30] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[14:51:57] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 252 seconds)
[14:55:36] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:00:22] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:03:54] <hethw> vague, thing is I want to NOT keep it
[15:04:06] <hethw> I set it to 0 and nothing happened
[15:04:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[15:08:56] *** Quits: japh (~scp1@user/japh) (Ping timeout: 272 seconds)
[15:09:43] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 250 seconds)
[15:10:32] *** Joins: japh (~scp1@user/japh)
[15:12:03] <hethw> I just tested rmtree does remove the dir (usually)
[15:12:10] <hethw> but apparently not everytime :/
[15:18:25] <hethw> it's not permissions or ownership issue
[15:21:24] *** Quits: deadmarshal (~deadmarsh@95.38.231.90) (Ping timeout: 240 seconds)
[15:24:58] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[15:25:31] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:3933:29:5fe1:cb6b)
[15:25:32] <hethw> ignore that I'm stupid
[15:29:19] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 256 seconds)
[15:29:22] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:31:10] <Spansh> So I wasn't aware that readline (<>) with default line endings capped at 4096 bytes.  Is there a way of preventing that without switching $/ to record mode (I still want readline on newline)?
[15:32:13] <Altreus> does it
[15:32:30] <Altreus> nor was I
[15:33:17] <Spansh> I have a Mojo::Command which does a while (my $foo = <STDIN>) {} and when I paste in a block of text which exceeds 4096, then press enter, $foo caps at 4096 bytes
[15:34:58] *** Quits: heth (~heth@user/heth) (Ping timeout: 260 seconds)
[15:35:17] *** Quits: hethw (~heth@46.238.32.56) (Ping timeout: 240 seconds)
[15:37:24] *** Joins: hethw (~heth@46.238.32.56)
[15:37:24] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 240 seconds)
[15:37:26] *** Quits: japh (~scp1@user/japh) (Ping timeout: 272 seconds)
[15:37:45] *** Joins: japh (~scp1@user/japh)
[15:38:53] <Altreus> Have you ensured that it is not your method of inspecting the value that is capped at 4096?
[15:39:09] <Spansh> Looks like it's not perl, if I dump the output to a file it works fine, https://man7.org/linux/man-pages/man3/tcflow.3.html
[15:39:10] <Paperbot> Link title(s): [ termios(3) - Linux manual page ]
[15:39:14] <Botje> perlbot: suffering from buffering
[15:39:14] <perlbot> Botje: http://perl.plover.com/FAQs/Buffering.html
[15:39:34] <Botje> Spansh: this has nothing to do with perl but rather your STDIN being buffered by 4096b blocks
[15:39:41] <Spansh> yes I just got there :)
[15:39:57] <Spansh> hence the man7 link
[15:40:31] <Spansh> The maximum line length is 4096 chars (including the terminating newline character); lines longer than 4096 chars are truncated.  After 4095 characters, input processing (e.g., ISIG and ECHO* processing) continues, but any input data after 4095 characters up to (but not including) any terminating newline is discarded.  This ensures that the terminal can always receive more input until at least one line can be read.
[15:41:26] <vague> hethw, works here, https://vague.se/pastes/QRyw 
[15:41:28] <Botje> normal advice is to use sysread instead, but then you lose the property of line buffering.
[15:42:36] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[15:43:04] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[15:43:28] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[15:45:45] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:45:48] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 240 seconds)
[15:46:14] <Botje> Spansh: so maybe something like my $buf = ""; $buf .= <STDIN> while $buf !~ /$/\z/; ?
[15:46:33] <Botje> ah no, that will fail if you hit EOF.
[15:46:59] <Spansh> I could do, but for now I just dumped it into a file, it's rare I have to do what I was doing anyway
[15:47:32] <Botje> sub read_block { my $buf = ""; while (defined(my $line = <STDIN>)) { $buf .= $line; last if $buf =~ /$/\z/ } return $buf }
[15:48:09] <Botje> if you're on macOS you can do pbpaste | ...
[15:48:09] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[15:48:16] <Botje> and windows has paste | ...
[15:49:58] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:52:04] <Spansh> also metacpan is poorly
[15:53:42] *** Joins: deadmarshal (~deadmarsh@95.38.231.90)
[15:59:33] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[15:59:59] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[16:01:44] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:01:55] <SpiceMan> that sentence was incompletely
[16:02:17] *** Quits: troller (~p@2a02:6b8:0:40c:8a54:baea:d917:c94c) (Remote host closed the connection)
[16:03:29] *** Joins: proller (~p@2a02:6b8:0:40c:55a1:e487:196:1c7a)
[16:05:32] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:05:55] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:07:15] <ilmari> despite the -ly ending, poorly can be an adjective, not just an adverb, so that's a perfectly cromulent sentence
[16:07:39] <Botje> languagelawyer'd.
[16:08:03] <ilmari> «poorly, adj.  Chiefly British. Unwell, in ill health.» - OED
[16:08:44] <ilmari> first attestation: 1570   T. Tusser Hundreth Good Pointes Husbandry (new ed.) f. 15v   Al cattel wax faint, and looke poorely and thin.
[16:08:57] <ilmari> OED++ # educational
[16:09:59] <ilmari> and yes, "cromulent" is also in the OED :)
[16:11:09] *** Joins: bmeneg (~bmeneg@2001:1284:f01c:5bfa:cc49:c773:a78b:d97e)
[16:11:13] *** Joins: Core1541 (~bscan@2600:380:5872:e08e:4c42:3aef:868b:839e)
[16:11:25] <ilmari> the only reason I have a library card is to get access to oed.com
[16:11:41] <ilmari> I don't live in the borough my library card is from any more, and I've never set foot in any of its librarires
[16:11:48] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[16:12:13] *** Quits: bscan (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[16:12:17] <ilmari> and when I log in with it, it shows my access is via a completely different city's libraries!
[16:12:19] *** Joins: Core7310 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[16:12:36] <simcop2387> cool, bcachefs might hit mainline linux kernel soon.  https://www.phoronix.com/scan.php?page=news_item&px=Bcachefs-2022-Hopes
[16:12:37] <Paperbot> Link title(s): [ Bcachefs Might Be Ready For Upstreaming In Linux This Year - Phoronix ]
[16:13:53] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:15:24] *** Quits: Core1541 (~bscan@2600:380:5872:e08e:4c42:3aef:868b:839e) (Ping timeout: 240 seconds)
[16:15:33] <Altreus> that attestation is an adverb :)
[16:16:19] <Altreus> in fact when you use "is" the line is a bit blurry
[16:16:32] * GumbyPAN CPAN Upload: Scalar-List-Utils-1.61 by PEVANS https://metacpan.org/release/PEVANS/Scalar-List-Utils-1.61
[16:19:09] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Remote host closed the connection)
[16:20:06] <LeoNerd> ^-- tiny compiler warning bugfix; nothing exciting
[16:20:12] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[16:21:05] <simcop2387> LeoNerd: that makes me think i need to get my super-tester finished so i can build bleed and all of cpan with several options at a time, including using multiple compiler versions
[16:21:47] <LeoNerd> Mmmm
[16:27:30] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[16:34:25] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 256 seconds)
[16:34:46] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:35:24] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[16:37:33] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 252 seconds)
[16:38:41] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:44:31] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:50:04] <ens> if i'm opening a filehandle like open($fh, "| app.pl"); and i want to finish writing to the child process' STDIN, but read the results. can i do that somehow or do i need to use IPC::Open2?
[16:50:47] <simcop2387> you'll need something more
[16:50:48] <LeoNerd> That's what Open2 is for
[16:50:55] <simcop2387> perlbot: IPC::Run
[16:50:55] <perlbot> simcop2387: use IPC::Run 'run'; my $stdin = "Input"; my $exitstatus = run [ $command, @args ], \$stdin, \my $stdout, \my $stderr;
[16:51:00] <LeoNerd> But be careful of deadlocks. You -probably- want to use ... what simcop2387 said
[16:51:02] <simcop2387> ipc run is my preferred way
[16:51:15] <ens> oh. nice one thanks folks.
[16:51:27] <LeoNerd> IPC::Run is one of those rare few modules that I didn't actually write, but kinda wish I had done so I could claim the credit. ;) It is nice
[16:52:04] <simcop2387> if you're already using an event loop like IO::Async, Mojo::IOLoop, POE, or ... AnyEvent, they all have better ways within their ecosystems to do that same task
[16:53:31] *** Joins: krismatrix (~krismatri@205.178.37.15)
[16:54:44] *** Joins: bscan (~bscan@2600:380:5872:e08e:906f:b31a:841a:88c9)
[16:54:48] <krismatrix> Can anyone tell me how in mojo, I can created log/development.log and log/production.log files?
[16:55:20] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 272 seconds)
[16:55:35] <Botje> what is your current logging setup like?
[16:55:37] <krismatrix> I remember initially, when in development, if I got errors, I would get an error page with a lot of details. At some point I replaced it to show logs on development.log on dev. But I can't figure out how i did that...and am wondering how one does that.
[16:55:44] <Botje> hey, matacpan is back
[16:57:39] *** Quits: Core7310 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[16:57:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[17:00:35] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[17:00:47] <Botje> krismatrix: do you expect us to guess what you changed or how you run your code currently?
[17:00:48] <krismatrix> i guess all i did was create an exception.html.ep and it displays that page on the site.
[17:01:47] <krismatrix> but i think the creation of log directory and files were automatic by mojo.
[17:02:16] <Botje> https://metacpan.org/pod/Mojolicious#log # no, $app->log sends everything to STDERR by default
[17:02:16] <Paperbot> Link title(s): [ Mojolicious - Real-time web framework - metacpan.org ]
[17:02:48] <Botje> but perhaps your web server (hypnotoad,morbo, or Mojo::Server::*) redirects to such a file for you
[17:02:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:05:55] <krismatrix> mm..that is in development right? My error occurs only in production. morbo does indeed prints things to shell. But i don't what is happenning with hypnotoad.
[17:10:33] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:12:01] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[17:12:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:14:09] *** Joins: henry40408 (~henry4040@175.181.177.116)
[17:16:28] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Remote host closed the connection)
[17:17:36] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[17:18:34] *** Quits: henry40408 (~henry4040@175.181.177.116) (Read error: Connection reset by peer)
[17:19:41] *** Joins: henry40408 (~henry4040@175.181.177.116)
[17:20:31] *** Quits: krismatrix (~krismatri@205.178.37.15) (Quit: Leaving)
[17:27:04] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[17:34:58] *** Joins: aehu6ce8 (~aehu6ce8@31.187.110.131)
[17:36:30] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[17:40:16] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:46:00] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:47:30] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[17:47:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:48:32] *** Joins: txtsd (~txtsd@user/txtsd)
[17:56:31] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[17:58:23] <vague> Hum... how do I set the response header Centent-Type to text/plain in my mojolicious app? This has stopped working quite recently, https://vague.se/pastes/QRyw , instead of offering a download I'd like to just render the contents, I thought this would do it: https://vague.se/pastes/J9oq 
[17:58:55] <vague> (and it has worked before. I didn't even have to set the Content-Type header previously
[18:00:44] <Botje> content-disposition triggers the save dialog
[18:02:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 252 seconds)
[18:02:49] <vague> I think it stopped working when I updated mojolicious a month or so ago
[18:03:35] <vague> 'stopped working' means it stopped rendering the contents and shows the save dialog
[18:03:57] <Botje> 15:30 < Botje> content-disposition triggers the save dialog
[18:04:55] <Botje> https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition#as_a_response_header_for_the_main_body
[18:04:55] <Paperbot> Link title(s): [ Content-Disposition - HTTP | MDN ]
[18:05:48] *** Joins: R2robot_ (~R2robot@user/r2robot)
[18:06:06] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[18:07:24] *** Quits: jink (mrjink@chat.jink.net) (Ping timeout: 240 seconds)
[18:07:33] *** Joins: jink (mrjink@chat.jink.net)
[18:07:48] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[18:07:48] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 240 seconds)
[18:07:48] *** Quits: asdflkj_sh (asdflkj@2605:6400:10:fe:bebd:57ba:41a5:636d) (Ping timeout: 240 seconds)
[18:07:58] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:65ff:4881:d497:d20d)
[18:08:06] *** Joins: tybalt89_ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[18:08:09] *** Joins: GEttR_ (~GEttR@user/gettr)
[18:08:12] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: tybalt89__ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: karjala (sid176588@id-176588.lymington.irccloud.com) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: subie (~subie@2601:4c0:4080:bc0:a17c:d079:69d0:6b80) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[18:08:36] *** Quits: bscan (~bscan@2600:380:5872:e08e:906f:b31a:841a:88c9) (Ping timeout: 240 seconds)
[18:09:47] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[18:09:49] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[18:10:08] *** Joins: txtsd (~txtsd@user/txtsd)
[18:10:17] *** Joins: karjala (sid176588@id-176588.lymington.irccloud.com)
[18:10:24] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[18:16:44] * GumbyPAN CPAN Upload: Net-DNS-Resolver-Unbound-1.07 by RWF https://metacpan.org/release/RWF/Net-DNS-Resolver-Unbound-1.07
[18:16:44] * GumbyPAN welcomes ESALEBU - Esau Alexius Burner to CPAN!
[18:16:46] * GumbyPAN welcomes KGOSSAGE - Keith Gossage to CPAN!
[18:20:48] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-4424-fc06-167e-bc32.res6.spectrum.com)
[18:23:59] *** Quits: R2robot_ (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[18:25:50] <simcop2387> oh fucking hell, https://news.ycombinator.com/item?id=30359309
[18:25:51] <Paperbot> Link title(s): [ Perl code that is syntactically correct only on Fridays | Hacker News ]
[18:26:47] <LeoNerd> I usually pick Tuesdays
[18:28:09] <Botje> You can do the same in a Rust macro; does that say something about Rust too?
[18:31:31] <LeoNerd> I don't know why, but Tuesday just seems to me a bit more comedic than Friday
[18:32:15] <simcop2387> Botje: yes, it really ends up saying that the pre-compiled phase of things is probably turing complete too.
[18:32:24] <simcop2387> LeoNerd: I never could get the hang of Thursdays
[18:33:33] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:35:22] *** Joins: R2robot (~R2robot@user/r2robot)
[18:37:59] *** Joins: furrymcgee (~devuan@cgn-89-1-211-93.nc.de)
[18:47:27] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:53:17] *** Quits: zgu|skaro (~zgu@cpe-172-101-198-113.rochester.res.rr.com) (Quit: Leaving)
[18:56:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[19:03:54] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[19:06:03] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[19:07:10] *** Joins: henry40408 (~henry4040@175.181.177.116)
[19:09:24] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 240 seconds)
[19:12:57] *** Quits: aehu6ce8 (~aehu6ce8@31.187.110.131) (Quit: aehu6ce8)
[19:19:53] *** Joins: trillp (~trillp@149.28.241.196)
[19:22:15] *** xenu_ is now known as xenu
[19:26:59] *** Joins: gast0n (~g4570n@user/gast0n)
[19:28:07] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[19:29:45] *** AI4AI is now known as subie
[19:29:46] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:31:28] *** Joins: diskin (~diskin@185.49.242.58)
[19:31:41] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:37:45] *** Joins: gamo1 (~Thunderbi@cm-93-156-61-102.telecable.es)
[19:37:48] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Ping timeout: 240 seconds)
[19:37:48] *** gamo1 is now known as gamo
[19:42:22] *** Joins: laidback_01 (~jax@98.97.66.6)
[19:42:59] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[19:42:59] *** diskin is now known as Guest8506
[19:42:59] *** diskin_ is now known as diskin
[19:45:24] *** Quits: Guest8506 (~diskin@185.49.242.58) (Ping timeout: 240 seconds)
[20:01:39] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ec22:2d0d:21e5:35ea)
[20:17:30] *** Joins: Trigon (~reuben@144.39.114.115)
[20:22:58] <rindolf> simcop2387: heh, Perl is the underdog: https://onsizzle.com/i/liberals-target-christians-instead-ral-of-muslims-for-the-same-3371812
[20:22:59] <Paperbot> Link title(s): [ Liberals Target Christians Instead Ral of Muslims for the Same Reason That PETA Targets Ra Women ... ]
[20:24:31] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:24:52] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3)
[20:25:01] *** Joins: txtsd (~txtsd@user/txtsd)
[20:28:35] <rindolf> https://www.shlomifish.org/meta/FAQ/featuring_sexy_women_and_girls.xhtml
[20:28:35] <Paperbot> Link title(s): [ Shlomi Fish’s FAQ - You feature sexy women and girls in your works. Are you a pervert? ]
[20:29:02] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:29:18] *** Joins: txtsd (~txtsd@user/txtsd)
[20:29:28] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[20:31:53] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:32:12] *** Joins: txtsd (~txtsd@user/txtsd)
[20:34:24] <kjetilho> uhm, is rindolf hacked?
[20:35:01] <R2robot> seems like normal batshit crazy rindolf to me
[20:35:26] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:35:31] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:35:42] <ilmari> kjetilho: no, he's just a fount of non sequiturs and random links
[20:35:42] *** Joins: txtsd (~txtsd@user/txtsd)
[20:36:04] <R2robot> self promoting blog spam*
[20:37:19] <rindolf> R2robot: heh, and damn proud of being crazy
[20:37:26] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[20:43:13] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:45:06] <rindolf> R2robot: get yur own blog and shut up. [[ For your information, if you're not gods, then <a href="https://www.youtube.com/watch?v=jCe5vfQx50c">you will die</a>. ]] ;)
[20:45:06] <Paperbot> YouTube video linked by rindolf: Ghostbusters ✧ ARE YOU A GOD ? - published by Movies Hall of Fame
[20:45:36] <ilmari> rindolf: chill
[20:46:50] <rindolf> ilmari: 1. i am calm. 2. it was a joke
[20:51:50] <rindolf> R2robot: i own you now. ;]
[20:54:44] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 272 seconds)
[20:57:08] <rindolf> ilmari: whats the good news?
[20:57:25] *** Quits: Michelle (~michelle@203.206.128.220) (Read error: Connection reset by peer)
[20:59:10] *** Joins: Michelle (~michelle@203.206.128.220)
[21:03:09] *** Joins: diskin_ (~diskin@185.49.242.58)
[21:03:09] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Killed (lead.libera.chat (Nickname regained by services)))
[21:03:09] *** diskin_ is now known as diskin
[21:06:59] *** diskin is now known as Guest258
[21:06:59] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[21:06:59] *** Quits: Guest258 (~diskin@185.49.242.58) (Killed (silver.libera.chat (Nickname regained by services)))
[21:06:59] *** diskin_ is now known as diskin
[21:10:13] <kjetilho> oh, fun.  "Since version 1.25 YAML.pm supports trailing comments."
[21:11:01] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:11:17] *** Joins: kensanata (~user@user/kensanata)
[21:11:26] <kjetilho> gotta love a "markup language" which is so poorly defined that such a change can happen willy-nilly
[21:12:07] <kjetilho> (yes, I actually had code which relied on "# foo" in unquoted values to be preserved.)
[21:12:40] *** Parts: art1 (~romeyke@p200300ccdf09b200f2dfa200ad1d3cb4.dip0.t-ipconnect.de) ()
[21:13:33] <Grinnz> YAML::XS and YAML::PP are more complete implementations
[21:14:40] <rindolf> kjetilho: i like YAML, but dislike its spec;s bloat
[21:14:47] *** Joins: zamanf (~dev@213.133.91.246)
[21:15:51] <kjetilho> I can't tell if throwing away the "comment" from `- 127.0.0.1  # localhost` is in according to the spec or not, but I tend to think "not".  https://yaml.org/spec/1.0/index.html#id2561162
[21:15:52] <Paperbot> Link title(s): [ YAML Ain't Markup Language (YAML) 1.0 ]
[21:18:04] <ether> yes, you can have comments in YAML. use quotes if the comment is actually part of your text string
[21:18:14] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:18:57] <kjetilho> ether: in YAML 1.0, comments have to start at the indentation level.  they can't be trailing, except after a block marker.  that's my read, anyway
[21:20:15] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[21:20:43] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:21:04] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:22:32] *** Joins: Markow (~Markow@176.122.215.103)
[21:22:35] <rindolf> perlbot: toml
[21:22:35] <perlbot> rindolf: Tom's Obvious Minimal Language.  https://github.com/toml-lang/toml and also https://metacpan.org/pod/TOML
[21:23:20] <erik__> rindolf, yay more markup languages! we are really short of those! <ugh, toml>
[21:23:23] <kjetilho> YAML 1.2 spells this out, though.  "Plain scalars must never contain the “: ” and “ #” character combinations."
[21:23:47] <pragma-> I want to like TOML but I feel that it does way too much, especially with dates.
[21:25:13] <kjetilho> we need less complexity, not more.  JSON is pretty nice, really.  I just want two changes to it: allow trailing commas and comments.
[21:25:22] <pragma-> same
[21:25:28] <pragma-> json would be ideal if those 2 things
[21:25:34] <pragma-> types would be nice but...
[21:26:17] <ilmari> kjetilho: what you want is https://json5.org/
[21:26:18] <Paperbot> Link title(s): [ JSON5 | JSON for Humans ]
[21:26:47] <ilmari> it adds the bits of syntax from ES5 that make you think you want yaml
[21:26:51] * SpiceMan remembers when YAML was the shit because XML was all there was
[21:26:55] <SpiceMan> now YAML is evil hehe
[21:27:42] <kjetilho> ilmari: yeah, you're right.
[21:27:52] <ilmari> http://ben-kiki.org/ypaste/data/49841/index.html shows that `- 127.0.0.1  # localhost` is a comment (but that's yaml 1.2, I believe)
[21:27:52] <Paperbot> Link title(s): [ YEAST2HTML ]
[21:27:57] *** Quits: proller (~p@2a02:6b8:0:40c:55a1:e487:196:1c7a) (Ping timeout: 252 seconds)
[21:28:12] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 240 seconds)
[21:28:45] <ilmari> that's one of the reference parsers listed on https://yaml.org/, so presumably correct
[21:28:46] <Paperbot> Link title(s): [ The Official YAML Web Site ]
[21:28:50] <kjetilho> ilmari: actually YAML 1.0 has the same restriction as I quoted for 1.2
[21:29:19] <kjetilho> under 4.6.11 Plain.  silly of me to just read the comment section.
[21:29:48] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[21:30:05] * rindolf uses many langs incl XML
[21:31:42] <ilmari> kjetilho: the YAML spec is really hard to read :(
[21:32:31] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[21:36:36] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[21:36:53] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[21:37:07] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:39:30] <simcop2387> LeoNerd: you ever build a PWM motor control type circuit? https://www.reddit.com/r/AskElectronics/comments/stvicz/4pin_pwm_computer_fan_to_voltage_control/
[21:39:34] <Paperbot> Link title(s): [ 4-pin PWM computer fan to voltage control : AskElectronics ]
[21:39:41] <simcop2387> or anyone else too obviously
[21:39:42] <LeoNerd> I've PWM'ed motors, yes
[21:40:38] <simcop2387> basically going to try to pwm a 12v motor, from a pc fan header.  so 12v power and ground, and an open collector pwm signal.  trying to figure out any gotchas i might run into with doing it.
[21:41:04] <simcop2387> i'm actually surprised i couldn't find an existing circuit/board for doing it anywhere
[21:41:05] *** Quits: trillp (~trillp@149.28.241.196) (Read error: Connection reset by peer)
[21:46:36] <pragma-> These are some concerning criticisms of YAML: https://en.wikipedia.org/wiki/YAML#Criticism
[21:46:36] <Paperbot> Link title(s): [ YAML - Wikipedia ]
[21:47:15] <pragma-> YAML spec is over 23k words. TML spec is about 3k words. Hmm.
[21:47:19] <pragma-> TOML.
[21:47:46] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:47:59] <erik__> I seriously hope there's a lot less functionality in TOML, then.
[21:48:14] <erik__> because if it's *more* then it's probably underspecified.
[21:52:01] * pragma- eyes libconfini
[21:52:04] <leont> Many of those criticisms are really about implementations, not the spec itself
[21:52:11] <simcop2387> erik__: yea it's a much much smaller set of features and syntax, deliberately so.  it's one of the reasons i love TOML.
[21:52:42] <simcop2387> leont: that's partly a reflection of the spec though since it seems nobody can make fully interoperable implementations
[21:52:43] * leont has written a YAML implementation, so they hate very different things than ordinary users
[21:53:13] <leont> simcop2387: yeah, that point is very accurate. Though it could be handles just fine if YAML schema's were better defined
[21:55:23] <leont> Half of all problems are with plain strings, if you use quoted strings those problems disappear. But OTOH plain strings are a big part of YAMLs charm
[21:56:06] <simcop2387> yea, something like the Postel/Robustness principle really shouldn't ever happen for something like an encoding format like YAML.  that does make it difficult to do as a human but the problems it can create make things worse.
[21:56:35] <simcop2387> forcing quotes is one reason i like TOML over most other things, including "INI" (quoted because there's really no standard for it)
[22:01:24] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[22:02:27] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[22:03:02] <leont> The hateful part for me as an implementor are all the edge cases. Strings that start on the next line. Empty values. That sort of thing.
[22:05:06] <simcop2387> if it wasn't edge cases then nobody would use it in the first place though, since it'd never work with the normal cases.
[22:05:12] <simcop2387> also: https://news.ycombinator.com/item?id=30361850
[22:05:12] <Paperbot> Link title(s): [ Passwordle | Hacker News ]
[22:07:35] *** Joins: proller (~p@80.240.216.69)
[22:12:09] * GumbyPAN CPAN Upload: Object-Pad-0.61 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.61
[22:22:09] <rindolf> simcop2387: handling the many variations of .ini files is one of the selling points of https://metacpan.org/pod/Config::IniFiles
[22:22:10] <Paperbot> Link title(s): [ Config::IniFiles - A module for reading .ini-style configuration files. - metacpan.org ]
[22:22:31] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[22:23:03] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:23:12] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[22:23:23] <simcop2387> rindolf: yep
[22:25:31] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Read error: Connection reset by peer)
[22:25:42] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 252 seconds)
[22:28:28] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[22:29:43] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[22:29:56] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[22:32:36] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[22:39:38] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[22:40:36] *** Quits: deadmarshal (~deadmarsh@95.38.231.90) (Ping timeout: 240 seconds)
[22:41:04] *** Joins: proller (~p@2a02:6b8:b081:4::1:3b)
[22:41:36] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[22:42:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[22:43:37] *** Quits: rednul (~rednul@mc.emailserverz.com) (Ping timeout: 240 seconds)
[22:44:39] *** Joins: magla (~gelignite@55d40b59.access.ecotel.net)
[22:44:57] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 252 seconds)
[22:46:12] <rindolf> simcop2387: https://github.com/shlomif/perl-Config-IniFiles/issues/8
[22:46:13] <Paperbot> Link title(s): [ support .toml files with -toml_compat (like -php_compat) · Issue #8 · shlomif/perl-Config-IniFile... ]
[22:49:46] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:52:13] * GumbyPAN CPAN Upload: File-Find-utf8-0.014 by HAYOBAAN https://metacpan.org/release/HAYOBAAN/File-Find-utf8-0.014
[22:53:40] <rindolf> simcop2387: i suggest prioritising having a CI for perlbot: https://www.shlomifish.org/philosophy/computers/software-management/perfect-workplace/perfect-it-workplace.xhtml#knowledge-in-the-ether
[22:53:41] <Paperbot> Link title(s): [ The Perfect IT Workplace - Revision 1 - Shlomi Fish’s Homesite ]
[22:54:13] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3)
[22:55:42] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Ping timeout: 272 seconds)
[23:03:51] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[23:05:43] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:50f5:7256:bb18:3ed3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:44] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc3-git-f4bc5bb-Pogorze-Karpackie-CUSTOM-KERNEL)
[23:29:13] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[23:30:34] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[23:31:20] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[23:31:30] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[23:32:48] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Client Quit)
[23:32:57] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[23:34:33] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Client Quit)
[23:34:42] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[23:40:46] <rindolf> simcop2387: docker/kvm/etc are useful4that
[23:43:57] * rindolf is now playing: 11Google [02:12/0704:02]
[23:44:06] *** Parts: Kaedenn (~kaedenn@137.229.82.89) ()
[23:44:47] <simcop2387> rindolf: they're not enough, but i plan to be using drone for a lot of that kind of thing.  perlbot itself doesn't need many tests still though i'll be building some stuff up when i finally get around to removing POE from it
[23:46:52] <rindolf> simcop2387: 'drone' is a bad name
[23:49:18] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 252 seconds)
[23:50:00] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[23:51:24] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 240 seconds)
[23:55:56] <simcop2387> rindolf: it's like insects, for bees drones are workers
[23:56:28] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[23:57:11] <rindolf> simcop2387: whatever
[23:57:24] *** Quits: veesh (~veesh@89.237.109.60) (Ping timeout: 240 seconds)
[23:57:31] *** Quits: erik__ (~erik@2001:1c00:1805:fd00:762a:27ac:572e:3767) (Ping timeout: 250 seconds)
[23:58:37] *** Joins: veesh (~veesh@89.237.102.212)
