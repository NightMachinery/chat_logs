[00:00:26] *** Quits: mambang[m] (~mambang@user/mambang) (Write error: Connection reset by peer)
[00:00:26] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Read error: Connection reset by peer)
[00:00:27] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[00:00:28] *** Quits: mattcen[mx][m] (~mattcen@2001:470:69fc:105::5d1) (Remote host closed the connection)
[00:00:29] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Write error: Connection reset by peer)
[00:03:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:04:16] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[00:06:09] *** Joins: Guest6174 (~mogad0n@user/mogad0n)
[00:13:49] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[00:13:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:13:59] *** ChanServ sets mode: +v EvilDMP
[00:23:21] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[00:26:13] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[00:28:34] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:30:18] *** Quits: knbk__ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 276 seconds)
[00:32:41] *** Joins: benbacardi (~benbacard@91.206.0.63)
[00:35:20] *** Joins: serghei (~serghei@user/serghei)
[00:35:55] *** Joins: Skyz (~Skyz@user/skyz)
[00:47:24] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:47:43] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:49:07] *** Quits: Guddu (~Guddu@171.79.58.196) (Quit: Leaving)
[00:52:28] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:54:32] *** Joins: dre (~dre@2001:8003:c932:c301:b299:b352:c4c4:74a1)
[01:06:58] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[01:11:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:34] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[01:13:10] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[01:13:27] *** Joins: Skyz (~Skyz@user/skyz)
[01:15:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:15:31] *** ChanServ sets mode: +v EvilDMP
[01:19:18] *** Joins: xkuru (~xkuru@user/xkuru)
[01:19:57] *** Quits: benbacardi (~benbacard@91.206.0.63) (Quit: Client closed)
[01:22:18] *** Joins: mattcen[mx][m] (~mattcen@2001:470:69fc:105::5d1)
[01:25:34] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[01:25:34] *** Joins: theorangeone (~theorange@2001:470:69fc:105::4eb8)
[01:25:34] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:25:34] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[01:25:34] *** Joins: mambang[m] (~mambang@user/mambang)
[01:26:17] *** Parts: cdcd (~cdcd@20.51.105.67) (WeeChat 3.2)
[01:28:01] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[01:38:46] *** Joins: djapo (~archangel@user/djapo)
[01:38:49] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[01:41:07] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[01:42:23] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:44:15] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:46:06] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[01:49:14] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[01:56:42] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 250 seconds)
[02:07:12] *** Quits: audiocat (~audio@2603-8081-1800-00ad-0f94-2547-14ef-ab6d.res6.spectrum.com) (Ping timeout: 245 seconds)
[02:10:31] *** Skyz is now known as SolarSkyz
[02:10:51] *** Joins: audiocat (~audio@2603-8081-1800-00ad-22dd-cec0-26c4-09c5.res6.spectrum.com)
[02:11:05] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[02:15:11] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:15:16] *** SolarSkyz is now known as Skyz
[02:20:28] *** Joins: serghei (~serghei@user/serghei)
[02:22:46] <wallbroken> FunkyBob: can I ask you one question?
[02:22:56] <wallbroken> do you really think my project is shit?
[02:24:18] <FunkyBob> don't ask to ask... just ask
[02:24:36] <FunkyBob> I think  your project is a mess, as is to be expected for someone learning a lot of new things quickly
[02:24:37] <dre> wallbroken, it's not that it's shit. it's just untidy and problematic
[02:24:44] <dre> morning FunkyBob
[02:24:47] <FunkyBob> morning, dre
[02:25:12] <PaulWay[w]> wallbroken: I think your project is OK, but you're using a particular feature of Django (generic viewsets) that we've kind of pushed way beyond what it's normally supposed to do.
[02:25:14] <FunkyBob> wallbroken: I think if you stepped back, planned a little, and started afresh... you could produce something a lot tidier, and easier to maintain
[02:25:23] <PaulWay[w]> This exactly.
[02:25:42] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 272 seconds)
[02:25:54] <PaulWay[w]> https://wiki.c2.com/?PlanToThrowOneAway
[02:25:56] <FunkyBob> as youve' said yourself... you had no idea webdev could be so complex
[02:26:00] <FunkyBob> PaulWay[w]: +1
[02:26:08] <wallbroken> FunkyBob: is a mess in design?
[02:26:13] <wallbroken> or in implementation?
[02:26:17] <FunkyBob> wallbroken: a mess in implementation
[02:26:32] <FunkyBob> along the way you've uncovered a lot more about the requirements of hte project, t oo
[02:26:59] <FunkyBob> more experienced (read: more painfully bitten with past projects) devs would have planned more, designed more, before starting
[02:27:09] <FunkyBob> but since you started to learn... well, you learned :)
[02:28:27] <PaulWay[w]> I think you also need to think about people ordering shoes as an Order model and a related OrderItem model.
[02:28:36] <wallbroken> for example i'm still trying to understand why you all told me that m2m field is not a good thing to bound user to orders
[02:29:25] <PaulWay[w]> And you need separate models for all of those model, style, size, colour, heel material and toe choices.
[02:30:13] <wallbroken> why? they are all proprieties of a shoe item
[02:30:30] <FunkyBob> wallbroken: part of the discussion yesterday was trying to work out the real model for things
[02:30:35] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Remote host closed the connection)
[02:30:41] <FunkyBob> understand the business workflows
[02:30:56] <FunkyBob> as you have it now, for instance, a store can only order a shoe type once.
[02:30:57] <FunkyBob> ever
[02:31:00] <PaulWay[w]> Yes, they are.  That's not really relevant to how you manage what values they have.
[02:31:25] <PaulWay[w]> Question, wallbroken - is each shoe completely one-of-a-kind?
[02:31:31] <FunkyBob> but in reality, a store will order a given SKU many  times, right?
[02:31:35] <PaulWay[w]> Or do you get a number of the same model of shoe?
[02:32:08] <wallbroken> PaulWay[w]: each item is identified by an SKU
[02:32:28] <FunkyBob> wallbroken: but an SKU does not identify individual shoes
[02:32:28] <PaulWay[w]> That's not an answer to my question.
[02:32:40] <FunkyBob> but a particular model, in a particular size, right?
[02:32:46] <wallbroken> FunkyBob: it identifies the model
[02:32:55] <wallbroken> yes
[02:33:10] <FunkyBob> but you can order, say, 10 of a given SKU?
[02:33:15] <PaulWay[w]> Is each shoe in your database completely one-of-a-kind?
[02:34:24] <wallbroken> FunkyBob: no
[02:34:32] <wallbroken> you can't
[02:34:50] <FunkyBob> you can't??
[02:34:54] <PaulWay[w]> Right.  So you're making what I would call 'bespoke' shoes - each item is completely unique.
[02:34:56] <FunkyBob> so ever pair of shoes is unique?
[02:34:56] <wallbroken> 10 of a given sku are 10 separated items
[02:35:15] <FunkyBob> ...
[02:35:26] <PaulWay[w]> See, wallbroken ... I think you're thinking about this the wrong way.
[02:35:28] <FunkyBob> but do you need to record all 10 separately in the system?
[02:35:37] <FunkyBob> what business problem does that solve?
[02:35:42] <PaulWay[w]> Problem is, FunkyBob - he thinks he does.
[02:35:46] <PaulWay[w]> He's wrong, but he thinks he does.
[02:35:48] <wallbroken> FunkyBob: exactly
[02:35:59] <FunkyBob> wallbroken: why? what business problem is that solving?
[02:36:03] <PaulWay[w]> Each SKU should have a count of number in stock.
[02:36:16] <FunkyBob> PaulWay[w]: honestly, I've worked at places that do track each item separately
[02:36:16] <wallbroken> FunkyBob: they told me they orders 2  - 3 items with the same sku
[02:36:30] <FunkyBob> wallbroken: ok... so then that's a 'yes' to my question, not a 'no'
[02:36:33] <FunkyBob> about ordering multiples
[02:36:36] <wallbroken> and is more comfortable to see them all as separated items
[02:36:48] <FunkyBob> yes, but WHY?
[02:36:58] <PaulWay[w]> wallbroken: why are they more comfortable seeing them as separated items?
[02:37:03] <FunkyBob> when you're ordering 3... you just say "give me 3"
[02:37:04] <wallbroken> FunkyBob: it's more comfortable they said
[02:37:14] <wallbroken> IDK the specific reason
[02:37:16] <PaulWay[w]> If you get three, does it matter exactly which one you get?
[02:37:17] <FunkyBob> not "I want the three with serial number X, Y, Z"
[02:37:23] <FunkyBob> wallbroken: well, find out the reason
[02:37:29] <PaulWay[w]> That's why I ask whether each item is unique.
[02:37:37] <wallbroken> if you want 3 shoes of the same sku you need to apply a filter and find them
[02:37:53] <FunkyBob> but that's a warehouse issue, not an order issue
[02:37:59] *** Joins: serghei (~serghei@user/serghei)
[02:38:05] <wallbroken> well, you should manage also sizes
[02:38:21] <FunkyBob> wallbroken: surely the store asking for 3 more shoes doesn't care - when asking - what their serial #s are?
[02:38:26] <wallbroken> they told me a model is called "option"
[02:38:31] <FunkyBob> I'm including size in the SKU, as we discussed yesterday
[02:38:34] <wallbroken> "option" + "size" defines SKU
[02:38:43] <FunkyBob> it should also include all other variants, like colour, etc
[02:38:53] <wallbroken> colour is defined in "option"
[02:39:01] <wallbroken> wait, let me get the hierarchy scheme
[02:39:14] <FunkyBob> we don't need quite that detail
[02:39:20] <PaulWay[w]> So three brown size 10 SKU 'ABC' shoes are different from three blue size 10 SKU 'ABC' shoes?
[02:39:34] <PaulWay[w]> Because normally they'd be a different SKU.
[02:39:53] <FunkyBob> wallbroken: again... the person ordering 3 more of a shoe... doesn't care about the serial#, right?
[02:39:58] <wallbroken> FunkyBob: they asked me to implemnt "routes"
[02:40:05] <FunkyBob> so the _order_ doesn't need to know... only the warehouse fulfilling the order
[02:40:11] <wallbroken> a route is a link between distribution center and retail store
[02:40:19] <wallbroken> but i did not know that requirement
[02:40:22] <wallbroken> so i ignored that
[02:40:26] <PaulWay[w]> I think the problem here is: we, from experience, have formed a different idea of the data you have and the relationships between its parts, from the one you have.
[02:40:43] <FunkyBob> also from experience, we're cautious to take on an under-specified project
[02:40:49] <PaulWay[w]> You're coming at it from a 'well, they said to have each line item separate' view.
[02:40:59] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Read error: Connection reset by peer)
[02:41:11] <PaulWay[w]> We're coming at it from a 'three of this type of shoe are the same thing' view.
[02:41:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[02:41:20] *** Joins: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com)
[02:42:26] <FunkyBob> wallbroken: I realise there's a lot going on... but can we address one thing first
[02:42:28] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 246 seconds)
[02:42:32] <PaulWay[w]> And we're doing that because our experience suggests that when you order three more of those shoes, you don't get three new line items - you just add three to the count on that item.
[02:42:48] <FunkyBob> when a Store orders new stock... they don't care about individual items, right?  they just say "I want 3 of these, 4 of them"
[02:43:06] <FunkyBob> it's only when the warehouse packs the shipment that it knows the individual serial# for each, yes?
[02:43:28] *** Joins: tannerstirrat (~tannersti@c-76-25-59-209.hsd1.co.comcast.net)
[02:43:51] <wallbroken> FunkyBob: do you know what "floorset" is?
[02:43:52] *** Quits: Elzington (~Elzington@static-198-54-128-76.cust.tzulo.com) (Ping timeout: 245 seconds)
[02:44:01] <FunkyBob> no
[02:45:11] <tannerstirrat> heyo. i'm trying to declare migration bankruptcy by deleting my migraitons, creating them from scratch, and then using the `replaces` attribute to mark them as covering existing migrations. the problem i'm running into is that there are circular dependencies between modules, which is automatically handled by makemigrations, but they're still showing up because of the `replaces` syntax
[02:45:16] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 246 seconds)
[02:45:25] <PaulWay[w]> https://en.wiktionary.org/wiki/floorset
[02:45:29] <tannerstirrat> is there a way to get django to dump the dependency tree that it's looking at with a CircularDependencyError?
[02:45:41] <tannerstirrat> otherwise it's really really difficult to diagnose where a CircularDependencyError comes from
[02:45:50] <PaulWay[w]> tannerstirrat: you're not going to just do a new --initial migration?
[02:47:07] <wallbroken> The floorset Entity represents a period within a season  during which new items are launched and introduced to the stores
[02:47:39] <FunkyBob> tannerstirrat: so, you sort of doing a manual migration squash?
[02:47:45] <tannerstirrat> PaulWay[w] the thing that i'm trying to avoid is having to do any manual prod database surgery as a part of the deploy process
[02:47:47] <tannerstirrat> exactly
[02:47:49] *** Parts: Skyz (~Skyz@user/skyz) ()
[02:48:09] <tannerstirrat> ideally i'd just squash what i've got, but anywhere that a migration crosses an app boundary, the squash algorithm seems to throw up its hands
[02:48:20] <tannerstirrat> and in the app i'm working on there are hundreds of migrations in some apps -_-
[02:48:31] <FunkyBob> have you been judicious about marking elidable migrations?
[02:48:46] <PaulWay[w]> If you're just generating a new --initial (by deleting all the existing migrations and creating a new 0001_initial.py) then there should be no database surgery required.
[02:49:10] <wallbroken> FunkyBob: yesterday you told me I can sort records into an m2m field using .filter()
[02:49:11] <wallbroken> right?
[02:49:24] <tannerstirrat> PaulWay[w]: i think that would be true if each of my apps only created a single migration file
[02:49:31] <FunkyBob> wallbroken: no, using order_by()
[02:49:40] <tannerstirrat> but the app is such that there are circular dependencies, so there are pairs of migrations in a few apps
[02:50:03] <tannerstirrat> FunkyBob: do you mean in the sense of using `replaces`? or is there a different syntax i should look at?
[02:50:05] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/forms.py#L61
[02:50:12] <wallbroken> those are the fields i want to order
[02:50:22] <FunkyBob> tannerstirrat: no... elidable migrations can be dropped when squashing
[02:50:35] <wallbroken> so i just need to add a new line like cart_user.order_by() ?
[02:50:36] <PaulWay[w]> wallbroken: I get the feeling you're not really interested in us trying to help you.
[02:50:44] <PaulWay[w]> You only want us to tell you what you want to hear.
[02:50:44] <tannerstirrat> FunkyBob: doesn't that only cover data migrations?
[02:51:00] <wallbroken> PaulWay[w]: why do you say that?
[02:51:05] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[02:51:25] <PaulWay[w]> Because you seem to show no interest in the different ideas we're presenting about how to organise your data.
[02:51:27] *** Joins: thiras (~thiras@user/thiras)
[02:52:25] <PaulWay[w]> And I think if you're asking the larger question - 'is my project OK?' then you kind of need to listen to our response.
[02:53:21] <wallbroken> PaulWay[w]: well, my actual model has been discussed previously
[02:53:22] <wallbroken> also here
[02:53:42] <PaulWay[w]> And we were just discussing it now.
[02:55:20] <FunkyBob> wallbroken: and you go off about us stopping helping you
[02:55:25] <FunkyBob> now we're trying to help you, and you won't respond
[02:56:24] *** Joins: serghei (~serghei@user/serghei)
[02:58:09] <nedbat> wallbroken: do you see what i mean? look at how people are reacting
[02:58:19] <wallbroken> FunkyBob: you told me about the problem of stock amount
[02:58:25] <wallbroken> but i told you is a requirement
[02:58:47] <wallbroken> the app is not for me
[02:58:50] <nedbat> wallbroken: just stop. no one, including you, is happy with this arrangement.
[02:59:01] <FunkyBob> i've asked 5 or 6 times about the order/fulfillment dichotemy... don't recall seeing any response from y ou
[02:59:27] <FunkyBob> wallbroken: we're trying to help you get a better solution to make YOUR life easier.
[02:59:40] <wallbroken> your question is: how the user could order multiple items of the same sku, right?
[02:59:48] <FunkyBob> wallbroken: no
[02:59:52] <PaulWay[w]> wallbroken: so is the customer always right? ;-)
[03:00:17] <wallbroken> FunkyBob: so can you rephrase the question please?
[03:00:33] <wallbroken> PaulWay[w]: what is still not clear here is that it's not an ecommerce application
[03:00:38] <FunkyBob> wallbroken: when a store is ordering multiples of a given SKU... does it care exactly which it gets?
[03:00:49] <FunkyBob> also.... what were you going to tell us about floorset?
[03:00:50] <wallbroken> yes
[03:00:54] <wallbroken> absolutely
[03:00:58] <PaulWay[w]> wallbroken: again, you completely ignore my question and say something else.
[03:01:05] <FunkyBob> wallbroken: so the store cares about exactly which serial# of each shoe it gets??
[03:01:06] <PaulWay[w]> See, in English we call that rude.
[03:01:10] <FunkyBob> BEFORE it receives them?
[03:01:18] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 258 seconds)
[03:01:21] <wallbroken> FunkyBob: yes, at all
[03:01:47] <FunkyBob> wallbroken: again... why?  I can understand them wanting to track them after receiving stock... but when _ordering_ it?
[03:02:03] <nedbat> FunkyBob, PaulWay[w]: my question to both is: why?
[03:02:16] <wallbroken> FunkyBob: i'm not able to give you the specific answer, but i guess they need to track each object inside the wharehouse
[03:02:17] <FunkyBob> nedbat: why which?
[03:02:24] <nedbat> why continue?
[03:02:29] <FunkyBob> wallbroken: don't guess... when gathering user requirements, don't guess
[03:02:43] <wallbroken> nedbat: we are just talking
[03:02:58] <nedbat> wallbroken: no, you aren't. you're banging your heads against walls
[03:03:57] <wallbroken> FunkyBob: i asked them multiple times. they told me: "see it as an home lookbook, where you know each shoe you have, even when you have two identical pairs of the same shoe
[03:04:06] <PaulWay[w]> More specifically, you're expecting to tell us what you want and us listen, but not the other way around.
[03:04:38] <wallbroken> maybe a specific shoe has some defect
[03:04:42] <wallbroken> and they need to track
[03:04:47] <wallbroken> what wrong with that?
[03:04:50] <FunkyBob> wallbroken: sure, but that's AFTER you recieve the stock
[03:04:52] <FunkyBob> not when ordering it
[03:05:08] <wallbroken> FunkyBob: but why is this important?
[03:05:25] <PaulWay[w]> nedbat: well, we started out OK.  wallbroken asked if their design was shit.  We told him it was kind of salvageable.
[03:05:26] <FunkyBob> wallbroken: because it means how you define an Order in the system is very differnt
[03:05:37] *** Quits: tannerstirrat (~tannersti@c-76-25-59-209.hsd1.co.comcast.net) (Quit: WeeChat 3.2)
[03:05:42] <PaulWay[w]> But now wallbroken has just gone into "I just want to fix this one problem" and "you don't understand my requirements".
[03:05:52] <PaulWay[w]> So it's kind of futile.
[03:05:58] <wallbroken> PaulWay[w]: they are not "my requirements"
[03:06:09] <FunkyBob> wallbroken: they are the requirements of your project
[03:06:13] <wallbroken> they are committer requirement
[03:06:29] <PaulWay[w]> And at some point you're going to have the wonderful realisation that they are wrong.
[03:06:49] <PaulWay[w]> How old are you wallbroken?
[03:07:07] <wallbroken> 34
[03:07:19] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[03:07:22] <PaulWay[w]> Right, well, the sooner you learn that customer requirements are not always right, the better.
[03:07:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:08:02] <PaulWay[w]> And the amusing thing is: if you use our models, you can still present them exactly what they need to know.
[03:08:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:08:18] *** ChanServ sets mode: +v EvilDMP
[03:08:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:09:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:09:05] *** ChanServ sets mode: +v EvilDMP
[03:09:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:09:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:09:52] *** ChanServ sets mode: +v EvilDMP
[03:09:53] <PaulWay[w]> Is this going to be another one of those "EvilDMP bounces continually" times?
[03:10:10] <FunkyBob> :(
[03:10:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:10:31] <FunkyBob> looks like it
[03:10:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:10:40] *** ChanServ sets mode: +v EvilDMP
[03:10:58] <PaulWay[w]> Ban EvilDMP?
[03:11:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:11:09] <FunkyBob> i've PMd him on twitter
[03:11:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:11:27] *** ChanServ sets mode: +v EvilDMP
[03:11:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:12:01] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[03:12:12] <PaulWay[w]> wallbroken: it sounds to me like your client wants an individual view of every pair of shoes that comes in.
[03:13:01] <PaulWay[w]> But - importantly - there can be pairs of shoes that are exactly the same as other pairs.
[03:14:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:14:03] *** ChanServ sets mode: +v EvilDMP
[03:14:36] <EvilDMP> WAI MacBook WAI
[03:14:51] <PaulWay[w]> Macbook?  There's your problem.
[03:15:31] <EvilDMP> I doubt it, it hasn't been an issue in the past 20 years.
[03:16:10] <PaulWay[w]> It's just been lulling you into a false sense of security.
[03:16:17] <EvilDMP> I will have to go digging tomorrow.
[03:16:30] <EvilDMP> Playing the long game, I see.
[03:16:35] <EvilDMP> Goodnight all!
[03:16:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:17:22] <PaulWay[w]> So he says...
[03:18:48] <wallbroken> if you think it's important, i can add it. in the worst case they will do not use it
[03:20:08] <PaulWay[w]> I'm afraid that it will take more than that.
[03:20:30] <PaulWay[w]> You have to understand why your current approach is causing you problems, and what the solution is.
[03:21:26] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[03:22:13] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[03:22:20] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:25:10] *** Joins: Trieste (T@user/pilgrim)
[03:27:39] <FunkyBob> wallbroken: that question I asked before is a useful tool when sourcing client requirements... to help you understand what solution best fills their needs
[03:27:45] <FunkyBob> "What business problem is this solving?"
[03:28:46] <wallbroken> FunkyBob: well
[03:29:01] <wallbroken> some years ago they were 3 little stores
[03:29:08] <wallbroken> with a centralized distribution center
[03:29:31] <wallbroken> when in a store a specific pair of shoes is needed, they called the employe in the DC
[03:29:41] <wallbroken> "hello john, do you have this pair of shoes?"
[03:29:53] <FunkyBob> sure, we get that... it's stock management
[03:29:55] <wallbroken> "let me check... yes i have. i will deliver it"
[03:30:00] <FunkyBob> but some of the things you're saying don't make any sense to us...
[03:30:19] <wallbroken> now they growl and they needs a more efficient way to manage this problem
[03:30:33] <FunkyBob> yes, we all agree that is not a scalable solution
[03:31:34] <wallbroken> they told me that generally they order 3 - 4 pairs of the same SKU
[03:31:59] <wallbroken> this is why they don't need to manage the "amount" as tipically done in ther management systems
[03:32:07] <wallbroken> that's all i know
[03:32:28] <FunkyBob> but when ordering a particular shoe... they don't need to specify exactly which one... with a specific serial number
[03:32:40] <FunkyBob> the shipment/fulfilment from the warehouse can tell them that
[03:33:09] <wallbroken> are you saying that is an over requirement?
[03:33:29] <wallbroken> or just "pointless" ?
[03:33:40] <FunkyBob> i'm saying what you described before was not really matching their workflow
[03:34:13] <FunkyBob> the person in t he store doesn't pick the exact shoe to order, just specifies the SKU/quantity (ok, maybe quantity is always1... maybe not)
[03:34:28] <FunkyBob> the warehouse picks the shoe, tells them "OK, I'm sending you SKU with serial# XY1231"
[03:35:22] <wallbroken> yes
[03:35:25] <wallbroken> i agree with you
[03:35:30] <wallbroken> i can tell them
[03:35:34] <FunkyBob> excellent. finally a clear answer :)
[03:36:19] <wallbroken> FunkyBob: can I ask you help in ordering that m2m? you told me to use order_by()
[03:36:29] <FunkyBob> yes?
[03:36:32] <wallbroken> it's a method of the m2m field?
[03:36:43] <FunkyBob> it's a method of querysets
[03:36:49] <FunkyBob> so it's a method of Managers
[03:36:53] <FunkyBob> and the m2m field is a type of Manager
[03:37:32] <wallbroken> https://dpaste.org/Dfqi
[03:37:42] <wallbroken> for example what if i want to ordere favourite_user ?
[03:38:28] <FunkyBob> isn't favourite_user a m2m field?
[03:38:32] <wallbroken> sure
[03:38:39] <FunkyBob> then ordering by that doesn't make any sense
[03:39:09] <wallbroken> what i want to do is to highlight the selected row inside the list
[03:39:10] <FunkyBob> it's a collection of users... how does ordering by "a collection" make sense?
[03:39:26] <FunkyBob> how is a row 'selected'?
[03:39:46] <wallbroken> yes, i want to highlight in the top of the list the selected rows
[03:39:46] <FunkyBob> once again I feel you need to explain your _goal_ before your implementation
[03:39:52] <FunkyBob> tell me the why
[03:40:19] <FunkyBob> so do you mean in the selection widget... you want the existing related users to show at the top?
[03:40:20] <wallbroken> because in the user experience, if i have a long list, is painful to move on it to find the selected users
[03:40:30] <wallbroken> yes
[03:41:12] <FunkyBob> hrm
[03:41:24] <FunkyBob> that's quite a different prospect, then
[03:41:44] <FunkyBob> since it's not really ordering through the m2m
[03:41:51] <FunkyBob> well, it sort of is
[03:42:19] <FunkyBob> you'd need to specify the queryset for hte field (which is a queryset of User)
[03:42:31] <FunkyBob> annotate it with if it has the shoe related... and order by that
[03:42:36] <FunkyBob> it's doable, but fiddly.
[03:44:29] <wallbroken> ok, not an easy task
[03:45:13] <FunkyBob> there's a few steps to it, yeah...
[03:45:19] <FunkyBob> so decide how important it is to you :)
[03:45:32] <wallbroken> well, i can move the m2m list into an array
[03:45:35] <wallbroken> order that array
[03:45:43] <wallbroken> ant put that again into the m2m
[03:46:43] <wallbroken> well, honestly is important. because is not easy to manage from that list when you have many users
[03:47:22] <FunkyBob> i think we covered before me saying that approach to changing the selections was a user experience nightmare
[03:47:38] <FunkyBob> and probably never fit with how people would -want- to work with it
[03:48:57] <wallbroken> FunkyBob: what is the alternative?
[03:49:12] <FunkyBob> well again, come back to asking... what is the user trying to do?
[03:49:35] <wallbroken> well
[03:49:39] <FunkyBob> do they want to "change every store that is listed"?  or only change their own stores status?
[03:49:47] <wallbroken> we are in the back office side of the application
[03:50:00] <FunkyBob> ok
[03:50:05] <wallbroken> from the interface, when an item has been delivered
[03:50:26] <FunkyBob> so they want to mark than a specific item was delivered to a specific store?
[03:50:36] <wallbroken> the administrator should set that user in the delivered_users m2m2 field for that item
[03:50:53] <FunkyBob> this is yet another case where a separate Order model would make this  trivial... you could just mark the Order "complete"
[03:51:27] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 255 seconds)
[03:51:38] <wallbroken> yes but what about the UI?
[03:51:56] <FunkyBob> in the UI it would be simple... the user would update the status of an Order
[03:51:56] <wallbroken> how the administrator should flag that item "delivered" for a specific user?
[03:52:29] <FunkyBob> an Order could be as simple as a model with fields (user, shoe, status)
[03:52:40] <wallbroken> good idea
[03:52:44] <wallbroken> we can make that?
[03:52:59] <FunkyBob> then instead of a bajillion m2m fields... you have the Order record
[03:53:14] <wallbroken> yes, your idea is perfect
[03:53:31] <FunkyBob> once again, this idea was proposed to y ou a long long time ago
[03:54:32] <wallbroken> this way, the order will be a separated entity
[03:54:42] <wallbroken> and not anymore inside the Shoe model
[03:55:18] <FunkyBob> yes
[03:55:45] <thiras> is there a way to get the values from django.db.models.fields.related.ManyToOneRel?
[03:55:58] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Ping timeout: 246 seconds)
[03:56:01] <FunkyBob> thiras: which values would you like?
[03:56:15] <thiras> i've trying to iterate over the fields of an model instance
[03:56:15] <wallbroken> FunkyBob: could you help me in doing that tomorrow?
[03:56:55] <thiras> let me share my code bc it's a bit complicated to explain without it
[03:57:13] <FunkyBob> wallbroken: sure
[03:57:27] <thiras> https://bpa.st/OR3Q FunkyBob
[03:57:31] <wallbroken> ok. in the meanwhile i should remove all the m2m fields around?
[03:57:46] <wallbroken> or someone of them are still useful?
[03:58:07] <wallbroken> oh but wait
[03:58:09] <wallbroken> what a mess
[03:58:22] <wallbroken> i have my project full of javascript part which acting on m2m fields
[03:58:41] <wallbroken> i will need to remove them all
[03:59:29] <thiras> my model is quite huge, and has multiple m2m, FK and some reverse FKs from other models
[04:00:23] <thiras> in theory first part (before else block) should work (haven't tried yet), but couldn't figure out how fetch reverse FKs in the else block
[04:02:11] <thiras> just tried and seems working
[04:03:11] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[04:04:33] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:04:52] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Client Quit)
[04:09:09] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[04:12:20] <FunkyBob> thiras: it looks like you're trying to reinvent a serialiser... is this for a JSON API?
[04:12:34] <thiras> no document generation
[04:13:04] <thiras> i've tried django's serializers but they don't fetch the relations
[04:14:24] <thiras> i need to able to fetch the Job instances (my main model i've mentioned above) with all relation solved recursively including the reverses
[04:14:35] *** Quits: jess (~jess@libera/staff/jess) ()
[04:14:45] <thiras> as dict (since i'm passing the dict to jinja2)
[04:15:15] <thiras> to this specifically https://docxtpl.readthedocs.io/en/latest/
[04:16:23] <thiras> i'm open to the alternatives if there is any better
[04:18:05] <FunkyBob> yeah the built in serialisers aren't really suitable for anything but fixtures
[04:18:36] <FunkyBob> all relations... whoo boy... do, select_related and prefetch_Related... for everything... messy
[04:19:00] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:20:04] <thiras> i have to. it's for the final report. it won't get hit a lot so performance is not my first concern
[04:20:37] <thiras> i know that's why i've trying to write something generic to solve all those relations recursively
[04:20:50] <thiras> i have couple of m2m of m2m
[04:21:06] <thiras> through intermediate models
[04:21:40] *** Quits: dre (~dre@2001:8003:c932:c301:b299:b352:c4c4:74a1) (Quit: Leaving)
[04:23:37] *** Joins: cs (~ovnicraft@179.49.44.28)
[04:24:39] <FunkyBob> thiras: but... why does it need to be dicts?
[04:24:45] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 255 seconds)
[04:25:16] <thiras> i've tried to pass the object itself but the library whined about it
[04:26:27] <thiras> `'Job' object is not iterable` as expected
[04:27:04] <FunkyBob> which library?
[04:27:20] <FunkyBob> and ... no, model instances are not iterable
[04:27:55] <thiras> this one https://docxtpl.readthedocs.io/en/latest/
[04:28:51] <thiras> oh no hold on
[04:28:51] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[04:29:03] <thiras> i've passed it in a dict might be working
[04:29:42] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 255 seconds)
[04:29:56] <PaulWay[w]> thiras: you probably need a queryset rather than an object.
[04:31:12] <thiras> PaulWay[w], you mean a queryset that contains all the relations fetched
[04:31:16] <thiras> ?
[04:32:23] <PaulWay[w]> If you're iterating across something, then that something needs to be iterable, so it probably needs to be the queryset.
[04:32:33] *** Quits: cs (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:33:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:34:15] <PaulWay[w]> And you're using standard Django templates, rendering to a .docx.
[04:35:22] <thiras> jinja2 but it's ok. i'm familiar with both
[04:35:47] <PaulWay[w]> Ah yes, got that
[04:36:02] <thiras> i wonder if it's the right approach to write all those select_related's etc rather than a recursive to_dict function
[04:36:22] <PaulWay[w]> Those are orthogonal.
[04:36:33] <FunkyBob> personally, I'd monitor the queries triggered, or look at the usage...
[04:36:42] <FunkyBob> and add selecte_related / prefeth-related as needed
[04:36:46] <FunkyBob> instead of ever reducing to dicts
[04:37:08] <PaulWay[w]> Yep.
[04:37:16] <PaulWay[w]> Reducing to dicts isn't going to save you queries.
[04:37:26] <thiras> you may right. that gives me a huge monitoring advantage
[04:37:46] <PaulWay[w]> And I'd recommend having a test template in plain Jinja2 for quick output checking.
[04:38:30] <thiras> that's also makes sense. i'll need that while writing the queries
[04:40:15] <thiras> thank you
[04:40:25] <PaulWay[w]> I'm actually wondering if you'd be better off writing a HTML document and then using e.g. libreoffice to automatically convert that to a .docx.
[04:42:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:42:33] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[04:43:11] <FunkyBob> docx is xml wrapped in a ZIP file...
[04:43:17] <FunkyBob> should be quite feasible to generate with templates
[04:43:50] <thiras> conversion should be programmatically. but i'll check for libraries for that idea
[04:44:47] <FunkyBob> I've used a lib in the past that used libreoffice to convert programatically to docx
[04:44:57] <FunkyBob> and ostensibly used django templates
[04:45:15] <FunkyBob> it was quite brittle,though...and I ended up manually editing the templates in the source doc file
[04:45:15] <PaulWay[w]> Well, so's odf.
[04:45:32] <FunkyBob> yah
[04:45:42] <FunkyBob> PaulWay[w]: but only one of them allows for a raw XML file, without the ZIP wrapper :)
[04:45:46] <schinckel> There's also pandoc
[04:46:00] <schinckel> You could generate the HTML, and then use pandoc to convert it to docx.
[04:46:14] <FunkyBob> look at us all...  tunelling back to X from Y :)
[04:46:45] <FunkyBob> meanwhile... seems I broke staging... afk
[04:47:19] <PaulWay[w]> FunkyBob: True.
[04:47:27] <thiras> thank i'll give them a shot
[04:47:30] <thiras> thanks*
[04:47:34] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[04:48:19] <schinckel> Well, I stayed up late last night making https://dpaste.org/jirf work.
[04:48:47] <schinckel> Not quite as delicate as the original class, but it now allows things like inferred relationships using range containment.
[04:49:59] <schinckel> ie, if a Person had EmploymentPeriods (that are non-overlapping and have a daterange), then you could have an inferred relationship between a Shift (which is on a date, and a relationship to person too).
[04:50:29] <schinckel> Think it needs a blog post...
[04:57:11] *** Joins: serghei (~serghei@user/serghei)
[04:59:10] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:02:06] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 255 seconds)
[05:06:09] <bparker> any tips for diagnosing an admin change_list page that's so slow it always times out? in that case I don't think I can use the debug_toolbar.
[05:06:53] <bparker> technically I don't see a reason for this slowness, I think it must just not be using indexes for some reason and reverting to temporary tables
[05:07:09] <bparker> the backend is mariadb
[05:08:21] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:08:43] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[05:08:49] <bparker> when I do a 'show processlist' on the database itself, the query seems stuck in a state called 'Statistics'
[05:08:52] <schinckel> It's usually when there's a bunch of missing select_related
[05:09:13] <schinckel> (ie, duplicate/repeated queries)
[05:10:13] <bparker> https://stackoverflow.com/questions/17797191/sql-query-stuck-in-statistics-state
[05:10:22] <bparker> I think I remember solving this same issue on another box with this solution
[05:10:25] <bparker> I'll try that first
[05:11:41] <bparker> boom, that did it
[05:11:44] <bparker> loads very fast now
[05:13:19] <schinckel> That's one of the reasons I advise against putting too much into the admin - it won't always generate the most effective queries.
[05:14:46] <bparker> I hear you but that's not a realistic viewpoint for many people given the sheer size and flexibility of it... if they didn't want people to do this, they shouldn't have made it so attractive
[05:15:01] <bparker> rewriting it is a huge waste of time
[05:15:26] <bparker> just my 2c
[05:16:18] <FunkyBob> its flexibility only stretches so far
[05:16:50] <FunkyBob> imho, it needs a refactor to make it a more hospitable place for custom management interfaces
[05:17:00] <FunkyBob> but try as I might, nobody will sign onto helping me
[05:17:49] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[05:20:10] *** Joins: slavfox (~slavfox@93.158.232.111)
[05:22:01] <FunkyBob> bparker: prime cause for majorly slow edit pages is Fkeys
[05:22:13] <FunkyBob> when the fkey field tries to render the 10 bajillion choices
[05:22:20] <bparker> this was list page but yea I hear you
[05:22:27] <bparker> it's fixed now
[05:22:32] <FunkyBob> sure, does your list page have any editable fields?
[05:22:35] <FunkyBob> ok, what was thew fix?
[05:22:35] <bparker> nope
[05:22:39] <bparker> 00:40 < bparker> https://stackoverflow.com/questions/17797191/sql-query-stuck-in-statistics-state
[05:23:29] <FunkyBob> as you'll understand... the answer doesn't pop out at me there
[05:23:47] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[05:23:51] <bparker> I had to set optimizer_search_depth=0
[05:23:56] <bparker> or a sufficiently low number
[05:24:02] <bparker> other than the default high number
[05:24:23] <FunkyBob> looks like a monster of a query either way
[05:24:48] <bparker> so far the only thing I've *really* struggled with is limiting the querysets of inlines via their forms... I finally got it to work but holy jeebus are there some dragons involved with that
[05:25:39] <bparker> apparently, 'if self.instance' can somehow silently throw an exception but only if you don't try to catch it (which makes NO sense at all to me)
[05:25:54] <bparker> and it will still say it's true when it's not
[05:26:10] <FunkyBob> on a form?
[05:26:11] <bparker> except it behaves differently under pdb
[05:26:13] <bparker> yea
[05:26:20] <FunkyBob> ... what sort of exception?
[05:26:54] <bparker> Model.field.RelatedObjectDoesNotExist
[05:27:05] <bparker> when you try to access self.instance.thefield
[05:27:17] <bparker> but it won't throw it if you don't try to catch it!
[05:27:23] <bparker> it's bonkers
[05:28:08] <bparker> except if you're stepping through in pdb, 'self.instance' WILL throw it then
[05:28:14] <bparker> that's the only way I even found out about it
[05:28:25] <bparker> so then I added a catch for it and it magically worked
[05:28:52] <schinckel> It's probably more that template rendering is catching it.
[05:29:09] <schinckel> Writing your own views for inline querysets is much easier.
[05:29:21] <bparker> sure
[05:29:23] <schinckel> https://schinckel.net/2019/05/23/form-and-formset/
[05:31:20] <bparker> also if you want to access the main instance that the inline is attached to, you have to do some questionable things
[05:31:29] <bparker> which may or may not even be thread-safe I don't know
[05:32:27] <bparker> you need to subclass BaseInlineFormSet and in its get_form_kwargs() you must add a new custom key with the value of self.instance
[05:32:43] <bparker> then in your inline, you can access the parent instance with that
[05:32:52] <bparker> madness
[05:33:53] *** Joins: yanchai (~yanchai@124.6.141.226)
[05:39:48] <schinckel> But your formset.forms[i].instance should have a relationship to the parent instance?
[05:40:31] <schinckel> ie, in my example: form.addresses[0].instance.person has that reference, doesn't it?
[05:51:32] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 272 seconds)
[05:51:36] *** Quits: yanchai (~yanchai@124.6.141.226) (Ping timeout: 255 seconds)
[06:16:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:21:15] <bparker> schinckel: in what class/method are you referring to that variable ?
[06:21:35] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:22:08] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.2)
[06:22:15] <bparker> I'm modifying the queryset in the form class's __init__
[06:26:39] <bparker> so there's no formset variable
[06:32:20] *** Joins: ST47 (~ST47@user/st47)
[06:36:27] *** Joins: djapo (~archangel@user/djapo)
[06:44:57] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:57:40] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[06:58:02] *** Joins: serghei (~serghei@user/serghei)
[07:00:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[07:02:15] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 255 seconds)
[07:02:48] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 258 seconds)
[07:10:17] <schinckel> If you are already in the form, then you should be able to use self.instance.<parent>, IIRC.
[07:13:31] *** Quits: bin4ry (~bin4ry@128.199.135.148) (Quit: The Lounge - https://thelounge.chat)
[07:16:08] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:17:06] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[07:18:14] *** Quits: bin4ry (~bin4ry@128.199.135.148) (Client Quit)
[07:18:41] <bparker> schinckel: self.instance doesn't always exist.
[07:18:53] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[07:19:31] <FunkyBob> bparker: on a model form?  it should
[07:19:34] <bparker> nah
[07:19:36] <FunkyBob> yes
[07:20:05] <FunkyBob> https://github.com/django/django/blob/main/django/forms/models.py#L294-L300
[07:20:13] <FunkyBob> unless you're in __init__ and you haven't called super yet
[07:21:40] <schinckel> ...although, I think maybe instance.parent might not be set on new instances - trying to find where that happens.
[07:21:52] <bparker> I'm in __init__, I called super, and trying to reference self.instance at all throws an exception if there is not already a bound instance
[07:22:08] <FunkyBob> what exception, though?
[07:22:25] <bparker> in my case RelatedObjectDoesNotExist for a certain FK field on the model
[07:22:34] <schinckel> https://github.com/django/django/blob/main/django/forms/models.py#L947
[07:23:02] <FunkyBob> so self.instance does exist, just the related instance does not
[07:23:14] <FunkyBob> that's to be expected, especially if self.instance is a fresh, unsaved instance
[07:23:41] <schinckel> That line I linked should be setting the parent ref though.
[07:24:01] <schinckel> I've found that _construct_instance is a really useful method to override if you need to do weird stuff to your forms.
[07:25:18] <bparker> schinckel: so how would I reference the parent instance in __init__ ?
[07:26:17] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:26:49] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:30:53] <schinckel> Yeah, it looks like it doesn't get set until later.
[07:31:22] <bparker> and even though the inline'd model has a FK back to the parent, self.instance.thatfield also throws a RelatedObjectDoesNotExist
[07:31:23] <schinckel> What do you need the parent instance for?
[07:31:29] <bparker> for filtering the queryset
[07:31:41] <schinckel> Will the same filter be applied to each form in the formset?
[07:32:04] <bparker> yes
[07:32:10] <schinckel> (if so, you almost certainly don't want to filter it in the Form.__init__, as it will result in multiple db hits)
[07:32:53] <bparker> well, that's the only place I've figured out how to do it so far
[07:33:14] <schinckel> I'd do it in the formset.__init__ (once), and then use either add_fields or _construct_form to apply it to the form.
[07:33:47] <bparker> the __init__ I'm using is just a form, not a formset
[07:34:03] <bparker> because currently I save the parent instance only from the formset, in a custom kwarg
[07:34:10] <schinckel> You'll need to show some code then, because I thought you were talking about a formset.
[07:34:26] <bparker> 01:02 < bparker> you need to subclass BaseInlineFormSet and in its get_form_kwargs() you must add a new custom key with the value of self.instance
[07:35:22] <bparker> that's where I set the parent instance, and then access it in the normal form's __init__
[08:00:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:08:44] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:09:29] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:09:58] *** Joins: djapo (~archangel@user/djapo)
[08:18:02] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:18:45] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:20:33] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[08:23:18] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:25:14] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[08:26:12] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:33:42] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[08:35:03] <monokrome> hey - does anyone know if django_dramatiq automatically configures dramatiq to use Django's cache backend or has tools for this?
[08:40:47] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:40] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:47:30] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[08:48:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:49:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 246 seconds)
[08:52:17] <FunkyBob> monokrome: the one I wrote doesn't... it uses the PG broker
[08:53:53] <monokrome> FunkyBob: ah, that's the one I'm using :D
[08:54:14] <monokrome> I always forget it's separate from django_dramatiq
[08:54:17] * monokrome facepalms
[08:54:37] <FunkyBob> how's it working for you?
[08:54:45] <monokrome> seems good so far
[08:54:58] <monokrome> trying to figure out the right way to configure a caching backend for rate limiting though
[08:54:59] <FunkyBob> development was paid for by a client...
[08:55:09] <FunkyBob> rate limiting of jobs?
[08:55:32] <monokrome> Yeah, to use dramatiq's ConcurrentRateLimiter
[08:56:00] <monokrome> I thought about using Django's rate limiting stuff instead but feels weird
[08:56:16] <FunkyBob> django has rate limiting stuff?
[08:56:34] <monokrome> I thought so?
[08:56:50] <monokrome> oh, our API framework I mean :)
[08:57:30] <FunkyBob> i wrote a rate limiting lib for django many moons ago
[08:57:30] <monokrome> that's why it feels weird and I'm trying to figure out the best way to configure dramatiq to use Django's Redis cache for that :)
[08:57:40] <monokrome> oh, cool :)
[08:58:48] *** Joins: serghei (~serghei@user/serghei)
[09:02:58] *** Joins: shangxiao (~davids@101.181.108.207)
[09:03:37] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:04:10] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 252 seconds)
[09:04:18] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:05:36] <shangxiao> what do people do for REST + Django nowdays?  still DRF?
[09:10:25] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:10:53] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:11:50] <monokrome> shangxiao: yeah, DRF is still pretty popular
[09:11:59] *** Joins: djapo (~archangel@user/djapo)
[09:12:07] <monokrome> brb forgot to tmux lol
[09:12:09] *** Quits: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com) (Quit: WeeChat 3.2)
[09:13:17] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[09:14:01] <FunkyBob> shangxiao: stil django-nap :P
[09:18:37] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:21:25] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:21:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[09:23:20] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:28:50] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:28:51] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:34:32] <shangxiao> :P
[09:39:33] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[09:54:37] <serafeim> hello friends
[10:12:17] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:15:23] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[10:23:42] <PaulWay[w]> FunkyBob: why'd you go with a ModelMapper's readonly meta being a dictionary?
[10:24:26] <FunkyBob> did I?
[10:24:59] <FunkyBob>         self.readonly = set(getattr(meta, 'readonly', []))
[10:25:12] <FunkyBob> are my docs wrong somewhere?
[10:25:37] <FunkyBob> huh...
[10:26:16] <PaulWay[w]> https://django-nap.readthedocs.io/en/latest/tutorial/mappers.html
[10:26:40] <FunkyBob> i mean, it will work... until you put false in there :P
[10:26:43] <PaulWay[w]> "readonly = {'question': True,}"
[10:26:53] <PaulWay[w]> (spaces elided)
[10:28:30] <FunkyBob> yeah... fixing now
[10:28:54] <PaulWay[w]> So it's just a set?
[10:29:05] <PaulWay[w]> Or an iterable that can be converted into a set?
[10:29:52] <PaulWay[w]> Also, be on the lookout for `localhot:8000`
[10:30:28] <FunkyBob> gah... poetry's init really needs un-fucking
[10:30:47] <schinckel> localhot:8000 hotties local to you!
[10:31:07] <PaulWay[w]> schinckel: makes sense.
[10:37:25] <FunkyBob> hmm... this is odd
[10:37:41] <FunkyBob> trying to move over to poetry... in gilbery it finds the src in src/ without config... in nap it doesn't...
[10:37:44] <FunkyBob> ah, names
[10:39:08] <FunkyBob> PaulWay[w]: fixes pushed
[10:42:05] <PaulWay[w]> Oh well, hope that helps FunkyBob.
[10:43:52] *** Joins: pycode (~pycode@2001:b07:5d28:551:d32a:34dd:f8ef:945c)
[10:45:24] *** Joins: serghei (~serghei@user/serghei)
[10:46:55] <FunkyBob> PaulWay[w]: hell, it's nice to just know someone took a look at it :)
[10:57:43] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 246 seconds)
[11:03:25] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[11:14:52] *** Joins: utkarsh181 (~user@45.251.50.65)
[11:14:56] <utkarsh181> Hi!
[11:18:44] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[11:19:04] <utkarsh181> \quit
[11:19:06] *** Quits: utkarsh181 (~user@45.251.50.65) (Client Quit)
[11:23:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:23:31] *** ChanServ sets mode: +v EvilDMP
[11:51:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 255 seconds)
[11:51:47] *** Quits: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com) (Ping timeout: 245 seconds)
[11:51:53] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[11:53:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:58:18] <pycode> hello everybody, i try again,on time a day i create a json that has many aggregations inside it, i do that job via command and it takes around 2 minutes to finish its job. Now, the second step is that i need to provide such json when i receive an ajax call, so basically i have create a view that open this file and send it back (without doing aggregations on the fly because of too much waiting). The question is, should i save this
[11:58:18] <pycode> json into a json field on postgres or should i save it on a file...or should i use a nosql db like elasticsearch for example ?
[11:58:41] <pycode> ""for the moment"" i do not have to filter data inside this json but i will surelly do later.
[12:03:51] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[12:09:30] <schinckel> pycode: Are you sure you need to spend 2 minutes to build it? Could you optimise the query/queries?
[12:10:10] <schinckel> Another option I've used on postgres is to have materialised views, and use some sort of trigger to update them.
[12:13:41] <pycode> schinckel, yes because i need to do more job over those aggregations...i mean the aggregations is the first step, then i need to call some AI models etc..
[12:14:06] <pycode> however if it takes 30 seconds is too much, so i cannot build it onthefly
[12:14:19] <pycode> the good thing is that i need to do that ONE TIME a day
[12:14:26] <pycode> and then i can use the same json
[12:14:32] <pycode> so i can cache etc.
[12:14:33] *** Quits: audiocat (~audio@2603-8081-1800-00ad-22dd-cec0-26c4-09c5.res6.spectrum.com) (Ping timeout: 255 seconds)
[12:14:51] <hemebond> pycode: Is the data static?
[12:15:22] <pycode> hemebond, "static" for the day yes, then i need to recalculate it at every midnight
[12:15:28] <hemebond> If you only need it once a day wouldn't a task with cron be enough?
[12:15:46] <pycode> hemebond, exactly i call a django command via cron
[12:15:50] <pycode> that create this json
[12:15:56] <pycode> but then i need to provide that json via a view
[12:16:05] <pycode> to share data via an js application
[12:16:11] <hemebond> I see. I would make it a static file.
[12:17:14] <pycode> i mean this json is used like a "database" on the js application side so i must create a view to provide it
[12:17:20] <pycode> the cool thing is that i can gzip it
[12:17:33] <pycode> hemebond, static file? no elasticsearch ?
[12:17:44] <hemebond> Do you need to query parts of it or just return the entire file every time?
[12:17:44] <pycode> as i wrote maybe...maybe i will need to filter such data via js
[12:17:49] <pycode> so maybe ES could be good
[12:17:54] <pycode> not now, but ..
[12:18:08] <pycode> hemebond, at the moment i need to return the entire file , (at the moment)
[12:18:09] <hemebond> Well if you're using it for analytics then you could import it into ES.
[12:19:17] <pycode> hemebond, exactly in a near future i should  use such data for analytics
[12:19:37] <hemebond> You'll still want a static file then.
[12:19:47] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:22:09] <serafeim> i define a JSONField like this: `models.JSONField(default=list)` ... i want it to be an empty list by default. do thinkfeel its ok ?
[12:25:50] <jor> pycode: as a start, i'd cache it to a file (probably through the usual django media stuff), so retrieving it doesn't even touch any django or database
[12:26:53] <jor> hmm, but i'd also check how big it is in memory. If you can spare that, a simple lru_cache decorator is even simpeler :/
[12:27:08] *** Joins: doev (~doev@p549d7884.dip0.t-ipconnect.de)
[12:30:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[12:32:55] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[12:36:28] *** Joins: djapo (~archangel@user/djapo)
[12:37:21] <djapo> how do I get only the char/text fields from a model.?
[12:41:36] <schinckel> You could do something like [field for field in self._meta.fields if isinstance(field, (models.TextField, models.CharField)]
[12:41:38] <schinckel> But why?
[12:42:40] <schinckel> (I'm really interested into why you might want just the text/char fields)
[12:51:24] *** Joins: HoaxKey (~HoaxKey@40.113.114.131)
[12:51:56] <pycode> jor, i thought about lru cache, but the first time i call it it will take a lot of time
[12:52:50] <pycode> so the first user is asking for that json will get timeout error
[12:52:54] <jor> pycode: ahh, yeah, true. with 2min you really want to run it in the background, in different process. So file it is :)
[12:53:02] <pycode> however, 2 minutes wait no it is too much
[12:53:06] <pycode> ok
[12:53:21] <pycode> jor, is it possible to provide such file via django gzipped?
[12:53:24] <pycode> or should i do that via nginx ?
[12:55:51] *** Joins: Rikem (~mike@user/rikem)
[12:56:04] <jor> pycode: hmm, nginx would be fastest way I think. But that depends on the size and what resources on-the-fly compression costs for nginx
[12:56:30] <jor> otherwise would need to setup nginx to serve the pre-compressed file, that's a bit more work
[12:57:09] *** Joins: rpkilby (~rpkilby@2600:100f:b12e:fb8:44a2:31a8:b3c6:8b76)
[12:57:15] <schinckel> serafeim: Yeah, that's how you'd do it.
[12:57:24] <serafeim> thank you schinckel
[12:57:27] <pycode> jor, i thought that i mean...this django command can do the aggregations and other stuff...then save the gzipped version
[12:57:31] <pycode> without compress it everytime
[12:58:21] <jor> pycode: well, i'd then place it on some special location (outside the usual django media location). So you can configuer nginx to host that with gzip_static
[12:59:00] <pycode> jor, but i suppose nginx will compress it no? is it not possible to compress the files one time only and then serve them as usual ?
[12:59:18] <schinckel> Worth pointing out that lots of deployment mechanisms don't have a writeable file system - you'd  need to make sure you wrote it to a place you _can_ write to - and also something that is available to all of your application servers if you have more than one.
[13:00:28] <jor> pycode: with the gzip_static module, nginx will serve a .gz file directly
[13:01:22] <jor> it will even decompress it I believe, if the browser says it can't handle it through the content negoation
[13:01:31] <pycode> jor, yes nginx can do that but does nginx compress the file or not?
[13:01:32] <pycode> ah ok
[13:01:40] <pycode> so i must leave it as normal file
[13:01:43] <pycode> no compressed i mean
[13:02:21] <jor> no, place a foo.gz file, enable gzip_static, and '/foo' will work
[13:04:56] <pycode> so what happen during content negotiation? nginx will decrompress it if not supported?
[13:06:13] <jor> pycode: yeah, exactly. So for 99% of the current browsers, it'll just directly send the .gz contents in the http response
[13:08:26] *** Quits: HoaxKey (~HoaxKey@40.113.114.131) (Remote host closed the connection)
[13:09:06] <djapo> nvm model_to_dict did it
[13:09:57] <djapo> schinckel: I was doing a correction to the db on those fields via the shell
[13:11:12] <pycode> perfect jor thanks!
[13:15:18] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (Remote host closed the connection)
[13:19:00] *** Joins: benbacardi (~benbacard@91.206.1.124)
[13:21:18] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[13:21:24] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:22:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[13:24:45] *** Quits: rpkilby (~rpkilby@2600:100f:b12e:fb8:44a2:31a8:b3c6:8b76) (Ping timeout: 255 seconds)
[13:29:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:33] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:35:40] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:41:40] <pycode> jor, one qestion you said that i should move those .json files outside media folder is there a particular reason? i should point nginx to provide /media too
[13:41:41] <pycode> no?
[13:44:52] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[13:45:01] <jor> pycode: nah, was just to avoid potential configuration problem, so you don't break the current working /media nginx config. And wasn't sure about gzip_static, if it then also worked on non-compressed files
[13:45:28] <jor> but you can activate it on the whole media location of nginx if you want
[13:46:11] <pycode> ok
[13:46:41] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[13:47:53] *** Joins: spaceone (~spaceone@wc1.wechall.net)
[13:48:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:48:23] *** ChanServ sets mode: +v EvilDMP
[13:48:51] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[13:55:32] <spaceone> hi, my manage.py does not offer my custom commands anymore since i upgraded to debian buster, which has python3-django 1:1.11.29-1~deb10u1
[13:55:46] <spaceone> this is my filesystem strucutre: https://bpa.st/XSXA
[13:56:28] <spaceone> python3 -m foo.http_api.manage superuserexists tells me: Unknown command: 'superuserexists'
[13:57:07] <spaceone> can anyone assist me debugging this?
[13:57:40] <spaceone> i think i am compliant to https://docs.djangoproject.com/en/1.11/howto/custom-management-commands/
[14:00:14] <FunkyBob> spaceone: it's recommended do never use distro packages for django
[14:00:42] <FunkyBob> create a virtualenv, and pip install django into it... that way your distro can't upgrade it out from under you
[14:00:50] <FunkyBob> als.. 1.11??? that's _ancient_!
[14:01:37] <FunkyBob> probably quite insecure, too
[14:02:20] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[14:03:51] <FunkyBob> spaceone: that's a very peculiar way to run manage.py also... typically it's at the root of the namespace
[14:03:56] <spaceone> FunkyBob: jeah ok, but i can't change the environment currently
[14:04:10] <FunkyBob> well, you changed the env upgrading debian...
[14:04:39] <spaceone> yes, it's in development / upgrade
[14:04:55] <spaceone> but i have the constraint to not change anything else now
[14:05:22] *** Quits: Guest6174 (~mogad0n@user/mogad0n) (Quit: Guest6174)
[14:05:43] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:06:14] <spaceone> besides that, do you have an idea how i can easily debug it?
[14:06:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:07:08] <FunkyBob> not "easily", no.. there's so many peculiarities here
[14:08:21] <FunkyBob> it's quite odd for management commands to not be inside an app, for instance
[14:09:02] <FunkyBob> everything seems mixed up... your settings.py is in foo/http_api/app/settings.py .. and it looks like your project module is there in foo/http_api/app
[14:09:12] <FunkyBob> but... then your app code is _above_ it ?
[14:09:33] <FunkyBob> is foo.http_api in INSTALLED_APPS spaceone ?
[14:11:40] <spaceone> I just saw that command_dir is /usr/lib/python3/dist-packages/foo/http_api/import_api/management/commands
[14:11:52] <spaceone> so it adds the 'import_api'
[14:22:38] <spaceone> FunkyBob: foo.http_api is not in INSTALLED_APPS. only foo.http_api.import_api ^^
[14:22:49] <wallbroken> FunkyBob: i was thinking about how to design the new model class
[14:23:02] <wallbroken> i'll create a "ShoeOrder moder class
[14:23:18] <wallbroken> which will contain a one2m field
[14:23:27] <wallbroken> because an order can contain multiple shoes
[14:23:47] <wallbroken> and also
[14:23:59] <wallbroken> ad oneToone field with the user
[14:24:07] *** Joins: thiras (~thiras@user/thiras)
[14:24:08] <wallbroken> because an order can be bound to a single user
[14:24:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[14:24:17] <wallbroken> oh wait
[14:24:28] <wallbroken> an user can do multiple orders at the same time?
[14:26:10] <pycode> parodn for the stupid question, i usually do: yesterday = timezone.now() - relativedelta(days=1)
[14:26:19] <pycode> but in this case i need the start of the YESTERDAY
[14:26:24] <pycode> not current hour:minute etc
[14:27:00] <hemebond> pycode: Can you not just set hour and minute to zero?
[14:27:29] <pycode> should i reset seconds=0, microseconds=0,
[14:27:29] <pycode>                 milliseconds=0, minutes=0, hours=0,
[14:27:30] <pycode> ?
[14:27:37] <pycode> hemebond, how?
[14:27:50] <pycode> replace?
[14:28:18] <hemebond> Hmm. Couldn't you just create a date instead?
[14:28:40] <hemebond> You have a datetime probably, if you create a date from it then you'll lose the hours, etc.
[14:28:41] <pycode> yesterday = (timezone.now() - relativedelta(days=1)).replace(hour=0, minute=0, second=0, microsecond=0)
[14:28:53] <hemebond> That will probably work.
[14:28:54] <pycode> i need to save the timestamp on db
[14:29:25] <hemebond> What is timezone? Where is it from?
[14:29:26] <pycode> i suppose if i just save a date does it will convert it with hour = 0 minute = 0
[14:29:27] <pycode> etc?
[14:29:29] <pycode> UTC
[14:29:36] <pycode> if i do timezone.now()
[14:29:44] <pycode> datetime.datetime(2021, 7, 14, 9, 53, 50, 684283, tzinfo=<UTC>)
[14:29:53] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[14:30:18] <jor> sounds like you want a date instead of datetime :)
[14:30:56] <pycode> jor, yes in this case yes but then i need to save a datetime to db
[14:31:05] <pycode> i have a datetime field
[14:31:15] <hemebond> datetime -> date -> timestamp
[14:31:52] <jor> well, yeah, then just set hours and the others to 0, e.g. .replace(...)
[14:32:05] <pycode> yesterday = (timezone.now() - relativedelta(days=1)).date
[14:32:07] <pycode> ?
[14:32:22] <pycode> whats happen if i save a date on a datetime field inpostgres?
[14:32:24] <jor> anything more fancy and I usually go to the dateutil library and its relativedelta functions
[14:32:47] <pycode> yes i am using relativedelta
[14:33:00] <pycode> but i need to undertssand if i need to reset hour minute etc...or just create a date
[14:33:19] <pycode> if i then save the date whats happen? does it will convert to UTC minute=0 hour=0 etc
[14:33:19] <pycode> ?
[14:33:27] <pycode> or is better to use replace()
[14:34:07] <hemebond> You'll still be doing datetime -> replace -> timestamp
[14:34:19] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:34:53] <pycode> hemebond, yes but i am saying in this datetime i set UTC, If i just set a date...what happen when i save it on db? i always need UTC
[14:35:20] <hemebond> Date should just take the year/month/day from your current object.
[14:35:55] <hemebond> You're using Django functions or something I think so I'm not having much luck testing.
[14:36:35] <GinFuyou> dates doesn't have timezone so you shouldn't use it even if it "works"
[14:36:47] <pycode> hemebond, yes it has y-m-d but as i wrote i need datetime on db
[14:36:55] <pycode> GinFuyou, exactly i suppose i always need datetime in this case
[14:37:01] <pycode> just replace() ?
[14:37:07] <hemebond> 👍
[14:37:12] <pycode>         yesterday = (timezone.now() - relativedelta(days=1)).replace(
[14:37:13] <pycode>             hour=0, minute=0, second=0, microsecond=0
[14:37:13] <pycode>         )
[14:37:28] <GinFuyou> Yeah I think replace is best in this case
[14:37:29] <jor> if you use relativedelta, you can just use the dateutil.relativedelta you can just use hour=0, minute=0 etc (not to be confused with hours, minutes)
[14:37:52] <jor> it does the replace for your
[14:38:50] <pycode> jor,
[14:38:51] <pycode> yesterday = (timezone.now() - relativedelta(days=1, hour=0, minute=0, second=0, microsecond=0))
[14:38:55] <pycode> ?
[14:38:59] <jor> pycode: yep
[14:39:14] <hemebond> This thing? https://dateutil.readthedocs.io/en/stable/relativedelta.html
[14:39:21] <pycode> oh awesome i did not know :) thanks
[14:45:45] <jor> hemebond: yeah, that thing. The best thing since sliced bread ;p
[14:46:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:48:46] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:48:51] <pycode> :D
[14:50:45] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:51:14] <jor> but I kinda only use it for it's weekday=MO(-1) functionality, hardly touch any other stuff in it :)
[14:54:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:54:01] *** ChanServ sets mode: +v EvilDMP
[14:56:43] *** Joins: epilys (~epilys@snf-804220.vm.okeanos.grnet.gr)
[14:56:47] *** Quits: pycode (~pycode@2001:b07:5d28:551:d32a:34dd:f8ef:945c) (Ping timeout: 245 seconds)
[15:00:34] <epilys> hallo, I'm trying to write a template tag that reuses an svg element if it's already rendered, otherwise renders it
[15:01:03] <epilys> but when I'm modifying the context to signify that I have entered the element already, the change is not visible the next time I'm calling the tag
[15:01:14] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[15:01:15] <epilys> i suspect it's because the tag is called in a {% include %}
[15:01:43] <epilys> is it possible to have a response-wide place I can put arbitrary info in when rendering?
[15:02:37] <epilys> here's my code https://dpaste.org/1Sbt
[15:02:49] <FunkyBob> wallbroken: IO would have done it as a single fkey to user, fkey to shoe, and a status [maybe a datetime to r ecord when created?]
[15:02:53] <epilys> oops, ignore the render_context stuff, that was just an experiment
[15:06:17] <hemebond> epilys: what about the template it's in?
[15:06:32] <epilys> hemebond, how do you mean?
[15:06:43] <hemebond> "i suspect it's because the tag is called in a {% include %}"
[15:07:15] <benbacardi> Is there a reason you can't just store it in django's cache?
[15:07:26] <epilys> benbacardi, is that cache per response?
[15:07:35] <benbacardi> No
[15:07:40] <epilys> basically I want to render an svg at most once per html response
[15:07:58] <epilys> because the html size grows if you print it again and again
[15:08:06] <epilys> but with svgs you can reuse them saving response size
[15:08:25] <benbacardi> Okay, that makes more sense
[15:08:46] <benbacardi> Store a count as a class variable?
[15:08:59] <epilys> in what class?
[15:09:09] <benbacardi> Your AvatarElementNode class
[15:09:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:09:42] <jor> epilys: the http request could be used as the 'response-wide' place, grab it from the tempalte context if you have the middleware for that set
[15:10:38] <epilys> jor, I tried adding an attribute and it said it's not assignable
[15:12:53] <benbacardi> I'd be tempted to try something like this: https://dpaste.org/kjNx
[15:13:07] <epilys> benbacardi, what's the lifetime of a class attribute though?
[15:13:13] <epilys> is it reset everytime there's a render?
[15:13:19] <epilys> for each user/ip?
[15:14:23] <benbacardi> It'll be for each python process
[15:14:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:14:46] *** ChanServ sets mode: +v EvilDMP
[15:15:17] <spaceone> FunkyBob: thanks for your support!
[15:15:24] *** Parts: spaceone (~spaceone@wc1.wechall.net) (WeeChat 3.2)
[15:16:06] <epilys> benbacardi, so it's not a good solution, unless I reset it everytime I begin a response
[15:16:20] <epilys> and hope there's no responses sharing same thread
[15:16:23] <epilys> process *
[15:16:42] <benbacardi> Hmm okay
[15:16:48] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 255 seconds)
[15:17:06] <benbacardi> How about a subclass of HttpResponse that has a cache attribute you can set?
[15:17:34] <benbacardi> Hmm that won't be available at that point though
[15:17:50] <benbacardi> Is the view object in the context? Can you add an attribute to that?
[15:17:51] <epilys> interesting problem, this is :D
[15:18:22] <epilys> benbacardi, it's a function view
[15:18:34] <jor> epilys: not assignalbe? you sure? I'd start nesting it, by creating single unique attribute where you place your 'cache' dict with keys
[15:18:45] <epilys> jor, did it yesterday, let me retry
[15:18:51] <jor> alternatively... at thread_local :/
[15:19:10] *** Joins: serghei (~serghei@user/serghei)
[15:19:10] <benbacardi> Can you add stuff to the context dict?
[15:19:31] <jor> but then again, i'd not even bother doing this, make a separate svg view and let browser/http caching do its thing :)
[15:19:39] <epilys> benbacardi, yeah but since this is in an {% include %} the changes aren't visible at other includes
[15:21:23] <benbacardi> Okay, then put an object in the context at the view level
[15:21:44] <epilys> benbacardi, trying this as well now
[15:22:10] <benbacardi> But yeah, what @jor said is probably the best idea. Just put the SVG in as a link, and render it on a different URL, let the browser cache it
[15:22:42] <epilys> yeah that might be a better idea
[15:23:20] <epilys> i wanted to minimize requests but if it works it's fine
[15:23:30] <epilys> thanks a lot for the brainstorming :)
[15:24:16] *** Quits: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de) (Quit: The Lounge - https://thelounge.chat)
[15:24:48] <benbacardi> np :)
[15:25:15] <jor> epilys: 'minimize' requests isn't that important in the http2+ world
[15:25:50] <jor> plus browser caching even works over multiple requests.. for a pretty long time range :)
[15:26:17] <epilys> thats true
[15:27:18] <jor> the time you spend here and implementing it is probably less that all the combined time it cost for end users ;p
[15:27:49] <epilys> jor, no no that's just for satisfying my curiosity
[15:27:57] <epilys> I know there's no practical point to it
[15:28:49] <epilys> coincidentally, the project i'm working on is a broad-themed link aggregator/forum dedicated to "intellectual" curiosity (I don't like that phrase much, sounds snob)
[15:32:11] <epilys> #sic https://sic.nessuent.xyz/
[15:34:57] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Remote host closed the connection)
[15:40:29] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:42:37] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 246 seconds)
[15:50:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:52:11] *** Joins: serghei (~serghei@user/serghei)
[16:01:32] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[16:04:33] *** Joins: domhnall_ (~developer@user/domhnall/x-2887755)
[16:05:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:05:08] *** ChanServ sets mode: +v EvilDMP
[16:08:24] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[16:11:36] *** Quits: clawh (~clawh@78.10.204.236) (Remote host closed the connection)
[16:20:36] *** Joins: ruffni (~user@212-51-128-111.fiber7.init7.net)
[16:20:52] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:22:06] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[16:25:17] *** Quits: ColCrunch (~ColCrunch@pool-100-0-215-56.bstnma.fios.verizon.net) (Quit: Leaving)
[16:26:01] *** Joins: pycode (~pycode@2001:b07:5d28:551:5008:4a07:d41f:882d)
[16:29:52] <ruffni> i'm having a hard time initializing a formset so that it's forms are bound. i'm using formset_factory and the initial data for the forms is passed with the form_kwargs argument. where's the right place to look all that up?
[16:32:47] *** Parts: epilys (~epilys@snf-804220.vm.okeanos.grnet.gr) (Leaving)
[16:37:32] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 268 seconds)
[16:40:44] *** Quits: himcesjf (uid409730@2a03:5180:f::6:4082) (Quit: Connection closed for inactivity)
[16:42:23] <moldy> ruffni: initial data and bound forms are two separate concepts
[16:42:35] <moldy> ruffni: a form is bound if it has user-submitted data
[16:42:44] <moldy> ruffni: at which point the initial data shouldn't matter anymore
[16:46:24] <GinFuyou> iirc you can set initial on formset directly as a list of dicts?
[16:58:04] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[17:09:33] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Read error: Connection reset by peer)
[17:12:36] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[17:16:53] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[17:17:01] *** Joins: himcesjf (uid409730@id-409730.tinside.irccloud.com)
[17:17:10] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[17:19:42] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:28:22] *** Joins: ruffni44 (~ruffni@212-51-128-111.fiber7.init7.net)
[17:30:25] *** Quits: ruffni (~user@212-51-128-111.fiber7.init7.net) (Ping timeout: 246 seconds)
[17:31:49] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:33:28] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[17:37:32] *** Quits: ruffni44 (~ruffni@212-51-128-111.fiber7.init7.net) (Quit: Client closed)
[17:37:48] *** Joins: ruffni (~ruffni@212-51-128-111.fiber7.init7.net)
[17:48:41] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[17:51:59] *** Quits: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com) (Quit: Leaving)
[17:53:39] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[17:54:31] *** Joins: Elzington (~Elzington@static-198-54-128-62.cust.tzulo.com)
[17:56:10] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[18:03:26] *** Quits: domhnall_ (~developer@user/domhnall/x-2887755) (Quit: leaving)
[18:24:59] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[18:30:02] <pycode> hello
[18:30:16] <pycode> is it possible to inspect a queryset to understand what are the related models ?
[18:30:24] <pycode> i mean the models i can call via prefetch_related
[18:36:38] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[18:39:23] <moldy> pycode: you can inspect the model via the ._meta API
[18:40:36] <pycode> i try
[18:41:12] <pycode> how can i see all the options?
[18:41:16] <pycode> moldy, ^
[18:41:30] <moldy> pycode: https://docs.djangoproject.com/en/3.2/ref/models/meta/
[18:42:16] <pycode> perfect
[18:42:17] <pycode> i have
[18:42:18] <pycode> <ManyToOneRel: base.linedata>, <ManyToOneRel: base.tradebar>,
[18:42:35] <pycode> why can i not use prefetch_related('linedata', 'tradebar')
[18:42:35] <pycode> ?
[18:43:02] <pycode> AttributeError: Cannot find 'linedata' on Price object, 'linedata' is an invalid parameter to prefetch_related()
[18:43:43] <pycode> just doing Price.objects.prefetch_related('linedata').all()
[18:44:00] <pycode> on linedata model i have price = models.ForeignKey("Price", on_delete=models.CASCADE)
[18:46:35] <pycode> moldy, ^ :)
[18:47:17] <moldy> pycode: it might be 'linedata_set', i can't remember
[18:48:40] <pycode> moldy, yes adding _set does not return any  error
[18:48:44] <pycode> i forgot that part
[18:50:50] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[19:09:36] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:11:08] <bparker> why even mess with virtualenv? I just use pip install --user
[19:11:27] <bparker> and it goes into .local
[19:13:19] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[19:18:09] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:19:32] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:22:13] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[19:28:24] <moldy> bparker: because you might have more than one project
[19:32:05] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[19:33:49] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Client Quit)
[19:35:01] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[19:48:02] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:52:22] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[19:56:44] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[19:58:13] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:00:41] *** Joins: damiox (~damiox@90.68.29.53)
[20:02:40] <damiox> Hi. I noticed that a fix was released for v3, and wasn't released to v2 even when the v2 doc is assuming the fix is applied. I added a comment to a closed ticket, but not sure if I should open a new ticket or re-open the old one. I think the former may make more sense, but wanted to confirm. Thanks
[20:10:10] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[20:14:05] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:15:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:17:32] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:19:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:24:23] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[20:27:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:27:46] *** ChanServ sets mode: +v EvilDMP
[20:27:52] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 246 seconds)
[20:31:05] <shangxiao> damiox: there used to be a channel specifically for django core devs that you could ask questions like this. not sure whether it made it across to libera but you could try that.
[20:38:19] *** Joins: clawh (~clawh@78.10.204.208)
[20:44:08] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:47:23] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:47:43] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[20:50:57] *** Quits: pycode (~pycode@2001:b07:5d28:551:5008:4a07:d41f:882d) (Ping timeout: 245 seconds)
[20:52:54] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:53:29] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 258 seconds)
[20:58:22] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:58:43] <dlam> in DRF, i forget teh way to remove the "create" form at the bottom of the generic /api/books/123   view?  anyone remember?
[20:59:54] *** Quits: damiox (~damiox@90.68.29.53) (Ping timeout: 252 seconds)
[21:05:12] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:06:17] *** Quits: ruffni (~ruffni@212-51-128-111.fiber7.init7.net) (Quit: Client closed)
[21:14:23] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[21:17:32] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:19:10] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:09] *** Quits: shangxiao (~davids@101.181.108.207) (Quit: WeeChat 3.2)
[21:41:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:45:36] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:46:37] *** Joins: Steve-Dusty (~Steve-Dus@75-32-236-135.lightspeed.rnpsca.sbcglobal.net)
[21:46:51] <Steve-Dusty> Hellop
[21:47:07] <Steve-Dusty> GinFuyou
[21:47:13] <GinFuyou> Yeah, I'm here
[21:47:15] *** Joins: clawh_ (~clawh@185.244.214.60)
[21:47:49] <Steve-Dusty> You said that I should attach ForeignKey to code
[21:47:53] <Steve-Dusty> Todo(
[21:47:56] <Steve-Dusty> Instead of Code?
[21:48:09] <GinFuyou> Yeah, it's what looks logical to me
[21:48:27] <Steve-Dusty> Should I import models from rooms to todoapp?
[21:48:40] <GinFuyou> No, use string as you already did
[21:48:47] <Steve-Dusty> okay
[21:48:52] <GinFuyou> "appname.ModelName"
[21:49:15] <Steve-Dusty> becomes class Todo(models.Model):
[21:49:16] <Steve-Dusty>     code = models.ForeignKey(
[21:49:16] <Steve-Dusty>         'rooms.Code',
[21:49:17] <Steve-Dusty>         on_delete=models.CASCADE,
[21:49:17] <Steve-Dusty>         primary_key=True,
[21:49:18] <Steve-Dusty>         default=None
[21:49:18] <Steve-Dusty>     )
[21:49:19] <Steve-Dusty> bbrb breakfast
[21:49:44] <GinFuyou> don't use it as primary_key
[21:49:46] *** Quits: clawh (~clawh@78.10.204.208) (Ping timeout: 252 seconds)
[21:50:30] <GinFuyou> not sure why you did it first, but here it won't work. just leave it to defaults
[21:50:37] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:50:44] <GinFuyou> otherwise looks fine
[21:50:56] <GinFuyou> also dpaste.org for sharing code
[21:52:36] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:53:41] *** Joins: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl)
[21:54:38] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:55:43] *** Joins: tbcr (~tbcr@user/tbcr)
[22:00:28] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:02:43] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:04:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:08:48] <Steve-Dusty> Okaya
[22:10:08] <Steve-Dusty> So what I did was linking Todo to Code?
[22:11:26] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:12:51] <GinFuyou> You created a relation between two models
[22:13:42] <GinFuyou> Now you can easily get all todos related to a room. Or a room from a single todo
[22:13:42] <Steve-Dusty> what should I do now?
[22:14:03] <GinFuyou> I dunno, it's your project, do what you want?
[22:15:39] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[22:15:45] <Steve-Dusty> I pushed the new code
[22:16:13] <Steve-Dusty> But now when I try to makemigrations in rooms, why do I get asked if I'm trying to add a non-nullable field 'id' to code without a default?
[22:16:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:16:29] *** Joins: dezmaeth (~maeth@pc-148-224-30-200.cm.vtr.net)
[22:17:15] <Steve-Dusty> same with todoapp
[22:17:55] <GinFuyou> it's because you had another field with primary_key. By default primary_key is a surrogate id AutoField (it's auto-added when no other field is marked with primary_key=True)
[22:18:26] <GinFuyou> If you don't have much data it's easier to reset database at this point
[22:19:34] <dezmaeth> hey guys, django test is priting new lines on every unit test, cant find the reason, here is the output https://dpaste.org/HDre
[22:19:56] <Steve-Dusty> No, I don't have any field with primary_key
[22:20:33] <GinFuyou> yes, but you had one. So it now tries to create 'id' field to act as primary_key
[22:21:02] <GinFuyou> that's why I said to not use primary_key... let the django handle it implicitly and you don't get issues like this
[22:21:44] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[22:23:09] <Steve-Dusty> do I flush it?
[22:23:30] <Steve-Dusty> How do I reset it?
[22:23:58] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 272 seconds)
[22:25:24] <captain_morgan> is a template string like this valid.. {% with model.some_array|last as item %} it throws `Negative indexing is not supported` but I'm unsure if it's because the data or that's just not valid
[22:26:46] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[22:29:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:29:34] *** ChanServ sets mode: +v EvilDMP
[22:32:24] <captain_morgan> hmm, I got a trivial example to not throw the error but the `last` value is empty, guess I should just write  a templatetag
[22:32:25] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:34:49] *** Joins: humbertowoody (~humbertow@2806:107e:f:47c1:42e:a029:b54:3720)
[22:36:25] *** Parts: humbertowoody (~humbertow@2806:107e:f:47c1:42e:a029:b54:3720) ()
[22:38:05] *** Joins: humbertowoody (~humbertow@2806:107e:f:47c1:42e:a029:b54:3720)
[22:39:02] <captain_morgan> ahhh, as `model.some_array` is not really an array but a queryset `with model.some_array.last as last` is what I'm after
[22:43:59] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[22:52:40] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:14] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[23:05:00] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[23:08:01] *** Quits: ST47 (~ST47@user/st47) (Changing host)
[23:08:01] *** Joins: ST47 (~ST47@wikimedia/st47)
[23:08:04] <dezmaeth> hey guys, django test is priting new lines on every unit test, cant find the reason, here is the output https://dpaste.org/HDre
[23:10:18] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:14:08] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:16:05] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:19:13] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[23:19:21] *** Joins: magamo (~magamo@pool-71-187-30-17.nwrknj.fios.verizon.net)
[23:22:57] <magamo> Hi, I have a stumper.  Django is complaining about a connection to my MySQL 5.7 database in one particular instance being utf8, even though in both the django configuration, charset = 'utf8mb4' is configured in settings, and the server is forcing a utf8mb4 character set on client connections.
[23:24:50] <magamo> The particulars of the setup is Django 3.2.5, running on Python 3.8 (Ubuntu 20.04 LTS docker).  It's running on AWS ECS, using the latest ECS-optimized AMI for the backing instance.  The database is a MySQL 5.7 instance running on RDS.
[23:25:03] *** Quits: SallyAhaj (~AallyAhaj@user/sallyahaj) (Ping timeout: 276 seconds)
[23:26:45] *** Joins: philipp64|work (~philipp64@mail.redfish-solutions.com)
[23:27:53] <philipp64|work> Hi… Is this an okay place to ask questions about troubleshooting mod_wsgi issues on Apache (ami linux2)?
[23:28:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:04] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[23:53:32] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:58:56] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
