[00:06:52] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:21:13] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[00:32:58] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:34:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:45:50] *** Quits: orbyt (~textual@150.73.100.34.bc.googleusercontent.com) (Remote host closed the connection)
[00:47:54] *** Joins: lunarkitty (uid501895@user/pyra)
[01:35:53] *** Quits: yxhuvud (~quassel@2001:1ba8:1424:ea00:1d1a:2f83:6102:5a66) (Remote host closed the connection)
[01:40:06] *** Joins: yxhuvud (~quassel@2001:1ba8:1424:ea00:579f:fc15:e0bc:85cf)
[01:58:56] *** Joins: markong (~kvirc@213.146.188.203)
[02:29:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ae5d:7719:e7f1:5947) (Ping timeout: 260 seconds)
[02:48:13] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:52:56] *** Quits: trillp (~user@69.233.98.238) (Remote host closed the connection)
[03:18:02] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[03:36:30] *** Joins: trillp (~user@69.233.98.238)
[03:54:19] *** Quits: trillp (~user@69.233.98.238) (Remote host closed the connection)
[04:27:08] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[05:38:35] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:59:24] *** Joins: factor1 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[06:02:42] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[06:02:42] *** factor1 is now known as factor
[06:10:06] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 268 seconds)
[06:37:30] *** Joins: lad (~lad@user/lad)
[06:44:07] *** Joins: mahlon (~mahlon@martini.nu)
[06:54:05] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:18:19] *** Joins: pgib (~textual@173.38.117.89)
[07:59:47] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 264 seconds)
[08:17:08] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[08:58:55] *** Quits: fusta (~fusta@178.251.43.26) (Quit: Leaving)
[09:20:52] *** Joins: jpw (~jpw@user/jpw)
[09:28:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[09:29:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:35:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[09:38:58] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:39:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:45:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[09:49:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:06:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:08:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:24:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[10:28:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:31:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[10:36:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:44:28] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:58:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:02:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:11:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:13:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:18:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[11:20:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:29:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:31:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:36:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:37:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:47:27] *** Joins: Rounin (~david@84.212.130.215)
[11:59:33] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[12:06:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[12:28:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:30:19] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[12:31:17] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:37:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:56:06] *** Quits: kenichi (~kenichi@nakamura.io) (Ping timeout: 260 seconds)
[12:56:21] *** Joins: kenichi (~kenichi@nakamura.io)
[13:01:43] *** Joins: Busk (~Busk@217-19-31-181.dsl.cambrium.nl)
[13:17:03] *** Joins: trillp (~trillp@69.233.98.238)
[13:40:07] *** Joins: tempate (~alpha@user/tempate)
[13:54:40] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[14:07:58] <tempate> I have an sorted array of numbers. Is there an elegant way to get all the elements below a certain value (which is not be in the array)?
[14:32:21] *** Quits: Busk (~Busk@217-19-31-181.dsl.cambrium.nl) (Quit: My computer has gone to sleep. ZZZzzzâ€¦)
[14:40:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[14:42:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:42:56] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[14:46:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[15:17:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[15:18:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:37:18] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[15:46:06] *** Joins: Guest89 (~Guest89@114.5.144.197)
[15:46:39] *** Quits: Guest89 (~Guest89@114.5.144.197) (Client Quit)
[15:55:40] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[16:00:42] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[16:05:11] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Ping timeout: 268 seconds)
[16:08:51] *** Joins: tempate (~alpha@user/tempate)
[16:09:33] *** Quits: tempate (~alpha@user/tempate) (Client Quit)
[16:37:35] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[16:37:50] <adam12> tempate is gone, but I wonder if #partition would work. 
[16:52:53] <jhass[m]> I think partition iterates the entire array, so it's slightly less performant than bsearch_index + #[] in this case
[16:56:09] <adam12> jhass[m]: I totally forgot about bsearch.
[16:56:31] <jhass[m]> aww, you shouldn't, it's amazing for the few cases where it's useful :D 
[16:57:58] <adam12> Ruby is so damn awesome
[16:58:11] <adam12> I wonder when the 3.1 preview is going to drop.
[17:04:00] *** Joins: walidvb (~walidvb@pop.92-184-106-133.mobile.abo.orange.fr)
[17:04:06] *** Quits: bastelfreak (~bastelfre@basteles-bastelknecht.bastelfreak.org) (Quit: WeeChat 3.3)
[17:04:29] <walidvb> hey all, just asked this on rubyonrails, but realize it's more of a ruby issue..
[17:04:44] <walidvb> i created a class method that define_methods. That class method takes in a block. When that block is run, it seems to be run on the class, rather than the instance. Any clue? code =>Â https://gist.github.com/walidvb/b02c7485bb2c9e578157ba5e55bd2c6f
[17:05:59] <jhass[m]> Yes, unless you change it with instance_eval, blocks are called with their definition scope
[17:06:34] <jhass[m]> in this simple example you could also simply forward the block to define_method, which also changes its execution scope
[17:07:25] <walidvb> jhass[m] will look those up, thanks:)
[17:07:39] <walidvb> which is cleaner, in your opinion?
[17:08:33] <walidvb> ah, you mean therefore move the block down to the instance code
[17:09:08] <jhass[m]> Personally I'm not a big fan of passing arguments through setting instance variables
[17:09:41] <jhass[m]> especially in a metaprogramming context like this it can quickly become confusing IMO
[17:10:08] *** Joins: bastelfreak (~bastelfre@basteles-bastelknecht.bastelfreak.org)
[17:10:24] <walidvb> i hear you. i need this to be generic, though.
[17:10:30] <jhass[m]> but if you really just want your proc to be come a method body as is, just forwarding it as define_method's block argument certainly is the most succint
[17:10:31] <walidvb> would you have a `*args` ?
[17:10:46] <jhass[m]> probably, it's hard to judge without the full context :) 
[17:11:29] <walidvb> well, various mailers have a way to select templates, based on their variables(which i could of course pass to the `template_name` method)
[17:11:43] <jhass[m]> doing define_method(:something, &some_lambda) should make the defined method gain the lambda's signature fwiw
[17:11:46] <walidvb> some based on `@export`, others on `@user`, etc
[17:12:20] <walidvb> aah ok think i got it
[17:13:06] <walidvb> although this means i then need to pass the block to the call to `template_name`, no?
[17:13:48] <walidvb> (i sorta liked the cleanliness of having the whole thing on one line, all contained within the `add_templates` call at the top of the class)
[17:14:40] <jhass[m]> no, I don't follow why you'd need to pass any block at the call of the defined method
[17:15:40] <walidvb> i'm not sure how you'd define it, then ðŸ¤”
[17:16:07] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375)
[17:16:30] <jhass[m]> in your example you could do define_method(:template_name, &block) instead of what you're currently doing
[17:16:37] <walidvb> if i `define_method(:foo, &bar)`, then i'd need to call `foo { my_block}`
[17:16:41] <walidvb> ok lemme check
[17:16:53] <walidvb> wait, is my last statement incorrect?
[17:16:58] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[17:17:04] <jhass[m]> I think so
[17:17:57] <jhass[m]> then if you make the lambda -> (export) { export.type } you'd need to call it with template_name(@export)
[17:18:58] <walidvb> yeah i guess that's what i was trying to avoid.
[17:19:30] <walidvb> hoping to make my main functions agnostic of how template_name is run (although you'll argue that they require instance vars to be set (@export in this case))
[17:19:52] <jhass[m]> Yes, it's just an implicit dependency
[17:21:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375) (Quit: Leaving)
[17:24:57] <walidvb> ended up going with `define_method(:foo, &block)`, but i'm not sure i understand how that became an instance call ðŸ¤”
[17:25:31] <jhass[m]> it's just intrinsic behavior of how define_method treats its block argument
[17:25:43] <walidvb> (and tbh the whole thing should work differently, to start with. atm i need the functions to be defined as this is how i grab the templates available to show to the user â€“ wrong ðŸ˜…)
[17:26:08] <walidvb> > it'sÂ  just intrinsic behavior of how define_method treats its block argument
[17:26:09] <walidvb> i'll have to take your word for it, and find time to read some more
[17:26:12] <walidvb> thanks for your help!
[17:26:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83)
[17:26:19] <jhass[m]> > This block is evaluated using instance_eval.
[17:26:19] <jhass[m]> https://devdocs.io/ruby~2.7/module#method-i-define_method
[17:28:17] <jhass[m]> you're welcome
[17:30:27] <walidvb> jhass[m]++
[17:30:30] <walidvb> :)
[17:32:19] *** Joins: leonthemisfit (~Leon@173.sub-174-198-198.myvzw.com)
[17:32:20] *** Quits: leonthemisfit (~Leon@173.sub-174-198-198.myvzw.com) (Changing host)
[17:32:20] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[17:59:51] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:05:04] *** Quits: walidvb (~walidvb@pop.92-184-106-133.mobile.abo.orange.fr) (Quit: Client closed)
[18:19:44] *** Quits: pgib (~textual@173.38.117.89) (Quit: 00 PC LOAD LETTER)
[18:31:30] *** Joins: _aeris_ (~aeris@user/aeris)
[18:32:48] *** Quits: aeris (~aeris@user/aeris) (Ping timeout: 276 seconds)
[18:32:53] *** _aeris_ is now known as aeris
[18:39:58] *** Quits: ua_ (~ua@public-gprs231037.centertel.pl) (Ping timeout: 268 seconds)
[18:43:41] *** Joins: tkonto (~tkonto@213.16.244.28.dsl.dyn.forthnet.gr)
[18:59:00] *** Joins: nemesit (~textual@p200300061141ca239c2aff24a1ffdaf7.dip0.t-ipconnect.de)
[19:04:41] *** Joins: Busk (~Busk@217-19-31-181.dsl.cambrium.nl)
[19:08:00] *** Quits: tkonto (~tkonto@213.16.244.28.dsl.dyn.forthnet.gr) (Quit: tkonto)
[19:09:29] *** Quits: Busk (~Busk@217-19-31-181.dsl.cambrium.nl) (Ping timeout: 256 seconds)
[19:49:35] *** Joins: tkonto (~tkonto@213.16.244.28.dsl.dyn.forthnet.gr)
[20:24:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83) (Ping timeout: 268 seconds)
[20:27:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:33:07] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[20:44:41] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[20:50:28] *** Joins: reset (~reset@user/reset)
[21:05:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:09:33] *** Joins: jpw (~jpw@user/jpw)
[21:31:52] *** Joins: fef (~thedawn@user/thedawn)
[21:42:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:43:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:43:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:45:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:57:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:20:58] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:35:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:35:17] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[22:38:29] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[22:42:02] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb) (Remote host closed the connection)
[22:42:13] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:42:26] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[22:42:26] *** Joins: menace (~someone@user/menace)
[22:42:49] *** Joins: Inline (~Inline@2a02:908:1252:7a80:8056:a659:b191:c249)
[22:44:00] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:51:14] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:f05d:361c:3a9a:58cb)
[22:51:43] *** Joins: _axx0 (~axx@static.246.43.203.116.clients.your-server.de)
[22:52:11] *** Quits: KramerC (kramer@user/kramerc) (Ping timeout: 245 seconds)
[22:53:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 268 seconds)
[22:53:58] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (Ping timeout: 260 seconds)
[22:53:58] *** _axx0 is now known as _axx
[22:54:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:55:00] *** Joins: KramerC (~kramer@user/kramerc)
[22:59:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[23:01:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:17:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[23:26:49] *** Joins: dohtem (uid524096@user/dohtem)
[23:30:36] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[23:30:45] *** Joins: _axx (~axx@static.246.43.203.116.clients.your-server.de)
[23:49:05] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
