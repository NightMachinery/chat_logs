[00:00:34] <kosh> vscode indents python correctly as you write the code but you can't really correct it after the fact
[00:01:38] *** Joins: dre (~dre@2001:8003:c932:c301:331c:7ae7:a9d3:b68)
[00:02:37] *** Joins: tonberry (~d00gy@user/d00gy)
[00:02:42] <freeman_h> kosh, what are you using for it to do it while writing the code
[00:02:51] <freeman_h> any settings to change?
[00:03:03] *** Joins: hudo__ (~hudo@62.68.19.39)
[00:03:09] <parv> ChrisWarrick, Could you expand on point 2 or point to where bugs and weird behaviors had been reported?
[00:03:19] <ChrisWarrick> freeman_h: that’d be the default behavior
[00:03:34] <ChrisWarrick> freeman_h: but if you liked phpstorm, then you’d probably want https://www.jetbrains.com/pycharm/ instead of vscode
[00:03:44] <ChrisWarrick> parv: I’ve seen that in #python countless times
[00:03:50] <ChrisWarrick> parv: no idea if anyone reported it
[00:04:11] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[00:04:25] *** Quits: Naan (~naan@user/naan) (Remote host closed the connection)
[00:04:33] <parv> ChrisWarrick, Ok. I am trying to find on web in the meanwhile.
[00:04:34] <kosh> freeman_h, it includes the python language support from microsoft by default and recognizes the fiels
[00:04:38] <freeman_h> ChrisWarrick, will try pycharm
[00:04:47] *** Joins: Naan (~naan@user/naan)
[00:04:49] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[00:04:53] <kosh> just python and pylance from microsoft
[00:05:15] <kosh> whenever I hit colon it will indent the next line, nothing special
[00:06:42] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[00:06:58] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[00:07:24] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[00:08:36] *** Joins: arinov (~arinov@5.24.126.7)
[00:08:41] *** Joins: cjb (~cjb@user/cjb)
[00:10:44] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:12:14] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[00:12:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[00:12:51] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 268 seconds)
[00:13:25] *** Joins: y04n45402 (~y04nn@nayon.fr)
[00:14:16] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[00:14:17] *** Joins: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[00:15:06] *** Joins: fikran (~fikran@user/fikran)
[00:15:54] *** Quits: y04nn (~y04nn@92.223.89.196) (Ping timeout: 260 seconds)
[00:18:04] *** Joins: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de)
[00:18:59] *** Joins: s98259 (~s98259@user/helenah)
[00:19:03] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[00:19:10] *** Quits: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[00:19:18] <s98259> I'm a bit concerned when messing with sqlite, please can someone confirm this? https://stackoverflow.com/questions/8828495/how-to-lock-a-sqlite3-database-in-python#:~:text=The%20way%20to%20explicitly%20lock,until%20that%20transaction%20is%20committed.
[00:19:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[00:19:55] <s98259> And lets say... the database is locked while an UPDATE or whatever is happening, if another process is going on too would I have to like... check when finished or does it wait?
[00:20:38] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[00:20:44] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[00:20:45] *** Joins: nomic (~nomic@185.217.117.164)
[00:22:01] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:22:24] *** Quits: parv (~quass@user/parv) (Quit: parv)
[00:22:50] *** Joins: Macuser (~Macuser@2600:1003:b444:9550:4860:3740:6ff2:d5dd)
[00:23:17] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[00:23:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:23:47] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[00:24:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:25:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:25:47] <deniska> s98259: waits until the lock is released, or timeout passes (5 seconds by default)
[00:25:54] *** Joins: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:d8f5:415f:566c:2f43)
[00:26:04] <s98259> Oh right.
[00:26:17] <s98259> So... sqlite has a nice locking mechanism already then!
[00:26:26] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[00:26:53] <s98259> But is it recommended? I mean... lets say for whatever reason 5 seconds exceeds but it would've still been possible to have done a write...
[00:26:56] <deniska> s98259: https://www.sqlite.org/lockingv3.html this page explains locking in detail
[00:27:04] <s98259> Thanks.
[00:27:07] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[00:28:18] *** Joins: noarb (~noarb@user/noarb)
[00:28:27] <s98259> And what do you think about the suggestion on that forum to use a "with" statement? If sqlite3 already has its own locking implementation which it does then why would there be a need for with?
[00:28:29] <deniska> s98259: generally sqlite3 locks for very short periods of times, it's hard to hit this limit unless you actually move bigger chunks of data around
[00:28:41] <s98259> Ah! :)
[00:28:43] *** Quits: Macuser (~Macuser@2600:1003:b444:9550:4860:3740:6ff2:d5dd) (Quit: Textual IRC Client: www.textualapp.com)
[00:28:46] <Ninpo> a with context has nothing to do with locks
[00:28:58] <s98259> Yeah, I thought that too, Ninpo.
[00:29:12] <s98259> It actually confused me the suggestion, I wasn't wanting to even try it so I asked about it.
[00:29:21] <deniska> And yeah, the SO answer is… questionable
[00:29:25] <Ninpo> they are recommended though as you get some clean up and transaction roll back etc in case of issues
[00:29:33] <s98259> Okay well sqlite3 sounds like it has things sorted from what I'm reading.
[00:29:43] <Ninpo> sqlite3 is p good
[00:29:49] <s98259> Ninpo: Ah right!
[00:30:21] <s98259> deniska: My mind went "Database is locked here, simple as that? Really?" I've NEVER used with as a lock... lol
[00:30:32] <s98259> And it's the first time I've heard someone claim they have.
[00:31:01] <s98259> Right going to start on my sqlite3 coding, thank you guys and girls. :)
[00:31:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[00:31:39] <s98259> 20:56:52    Ninpo | they are recommended though as you get some clean up and transaction roll back etc in case of issues
[00:31:48] <s98259> In that case I can see where with would be useful. :)
[00:31:52] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2505:c76:f78:c1d6)
[00:31:53] <deniska> yeah, it's commit() which will lock the actual file, not opening a transaction
[00:32:17] *** Parts: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (WeeChat 3.3)
[00:32:41] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:33:21] <s98259> Yeah, and it's makes sense for the commit() function to initiate the lock.
[00:35:08] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[00:35:48] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[00:36:52] <s98259> Also, can anyone recommend the best way to go about a "virtual" directory structure? I have a system where people log into it and they have their own directories but I don't even the home directories to be like PAM home directories nor do I want them having access to /. By system I don't mean some GNU/Linux system, I'm meaning the python application, it's a server application. I want people who
[00:36:54] <s98259> login to have their own storage area.
[00:37:18] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2505:c76:f78:c1d6) (Ping timeout: 260 seconds)
[00:37:32] <s98259> I want to make sure whatever I implement is as safe as possible, I don't want people to be able to snoop around, atleast not easily. I'm aware nothing is 100% secure but it's best to be pre-cautious.
[00:38:15] *** Joins: bandithijo (~bandithij@fedora/bandithijo)
[00:40:49] *** Quits: bandithijo (~bandithij@fedora/bandithijo) (Client Quit)
[00:41:18] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[00:41:40] *** Quits: hogarius (~hogarius@75.81.34.135) (Quit: -a- IRC for Android 2.1.59)
[00:41:40] *** hogarius_ is now known as hogarius
[00:42:02] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[00:42:06] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[00:42:12] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c1d7:63de:66b3:4892) (Quit: Leaving)
[00:43:30] *** Joins: jjhoo (~jahakala@user/jjhoo)
[00:44:10] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[00:44:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ff5a:fb87:fc33:be7c)
[00:45:07] *** Quits: y04n45402 (~y04nn@nayon.fr) (Remote host closed the connection)
[00:45:57] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[00:46:21] *** Quits: teut (~teut@122.181.77.157) (Quit: Client closed)
[00:46:26] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:9487:a7c7:e639:ebc4)
[00:46:46] *** Quits: defjam (~eb0t@90.198.60.224) (Ping timeout: 268 seconds)
[00:47:30] *** Quits: arinov (~arinov@5.24.126.7) (Read error: Connection reset by peer)
[00:48:37] *** Joins: defjam (~eb0t@90.196.140.50)
[00:49:23] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[00:50:01] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[00:51:07] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:9487:a7c7:e639:ebc4) (Ping timeout: 250 seconds)
[00:51:21] *** Joins: nyah (~nyah@94.6.71.219)
[00:52:03] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:52:13] *** Joins: jinsun (~quassel@user/jinsun)
[00:53:22] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:54:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:54:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[00:54:52] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:55:00] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:55:02] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:55:49] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[00:56:04] *** Joins: smeeagle (~textual@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[00:56:05] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[00:58:38] *** Joins: luigibu (~luigibu@80.30.201.209)
[01:01:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:03:10] *** Joins: dohtem (uid524096@user/dohtem)
[01:03:20] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-acbd-18aa-8224-74f9.res6.spectrum.com) (Read error: Connection reset by peer)
[01:04:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:454:5285:ee78:61a4)
[01:06:52] <mattf> is there a nifty trick to create a dataclass with the same fields as an existing enum
[01:07:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:07:17] <mattf> like this: http://ix.io/3FJw
[01:07:41] <RougeR> Could do it using a custom metacls or base class im sure
[01:08:13] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Ping timeout: 250 seconds)
[01:08:17] <mattf> well actually is just a matter of creating the init method anyway
[01:08:43] *** Quits: olasd (~olasd@softwareheritage/olasd) (Quit: WeeChat 3.0)
[01:08:51] *** Joins: olasd (~olasd@softwareheritage/olasd)
[01:08:53] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[01:10:49] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[01:11:23] *** Quits: magla (~gelignite@55d4124a.access.ecotel.net) (Quit: Stay safe!)
[01:11:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:12:41] *** Quits: gitly (~gitly@85.255.234.35) (Read error: Connection reset by peer)
[01:14:03] *** Joins: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[01:14:14] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 260 seconds)
[01:14:17] *** Quits: kujo (~kujo@188.166.12.52) (Quit: kujo)
[01:15:12] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[01:16:37] *** Joins: hexa- (~hexa-@juno.lossy.network)
[01:16:54] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:17:10] *** Joins: Fiji (~Fiji@user/fiji)
[01:17:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:17:45] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:454:5285:ee78:61a4) (Ping timeout: 250 seconds)
[01:18:08] *** Joins: arinov (~arinov@213.194.126.155)
[01:18:38] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:18:48] *** Joins: gitly (~gitly@85.255.234.35)
[01:18:50] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[01:18:52] <Feuermagier> I get an error on "import ctypes": ImportError: libffi.so.7: cannot open shared object file: No such file or directory
[01:18:54] *** Quits: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[01:19:13] <Feuermagier> I've googled it already, but I'm unsure on what causes this
[01:19:28] *** Joins: Fiji_ (~Fiji@user/fiji)
[01:20:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:20:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:20:46] *** Quits: MercilessDeth (~brad@136.49.59.177) (Read error: Connection reset by peer)
[01:21:09] *** Joins: monkey_ (~user@190.104.116.153)
[01:21:10] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[01:22:04] <Yhg1s> Feuermagier: it means the ctypes module was built to use a system-provided version of libffi, and that libffi version is no longer available. How did you install this Python version?
[01:22:16] <Feuermagier> Yhg1s, pacman
[01:22:38] <Feuermagier> I did pacman -Syyu ; system is up-to-date
[01:22:41] <Yhg1s> Feuermagier: that's gentoo's package manager, isn't it? Perhaps something needs to be rebuilt, or reinstalled. (Either Python or libffi)
[01:22:50] <Feuermagier> Arch
[01:22:58] <Yhg1s> oh, right, Arch.
[01:23:06] <Feuermagier> I think Gentoo doesn't even have one
[01:23:07] <Yhg1s> An arch forum might be able to help figure out what went wrong with the build.
[01:23:19] <Yhg1s> Gentoo's is about as functional as Arch's.
[01:23:24] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[01:23:39] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[01:23:44] <Feuermagier> really? - I thought they build everything themselves over there
[01:24:18] <Yhg1s> Feuermagier: I'm not sure what you're saying, sorry. A package manager doesn't have to use binaries (although it _can_ use binaries.)
[01:24:57] <Feuermagier> Yhg1s, oh, I guess you are right there. sry. I know to little in that region.
[01:26:06] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[01:26:42] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:26:46] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[01:27:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:11] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:27:26] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[01:30:07] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[01:30:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:31:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:31:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:33:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:33:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[01:33:38] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[01:33:44] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:35:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:36:02] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[01:36:50] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:818b:d7ec:141a:89c5)
[01:37:07] *** Quits: smeeagle (~textual@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:37:32] <orbisvicis> how can I, with hypothesis unit testing, specify one argument as an example, and another as a strategy?
[01:37:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:38:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:39:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:39:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:40:02] *** Quits: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484) (Quit: Konversation terminated!)
[01:40:56] *** Joins: MercilessDeth (~brad@136.49.59.177)
[01:41:18] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[01:41:35] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:818b:d7ec:141a:89c5) (Ping timeout: 250 seconds)
[01:42:05] *** Joins: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484)
[01:42:37] <jinsun> Feuermagier: did you install python with pyenv? just installing again should solve that
[01:42:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[01:43:44] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:43:52] *** Joins: CoolerY (~CoolerX@user/coolerx)
[01:44:05] <orbisvicis> I guess that would be a strategies.just
[01:44:17] *** Joins: p-i-_ (~Ohmu@223.206.149.105)
[01:47:44] <Feuermagier> jinsun, I have worked with pyenv in the past. That could be an issue. How do I get rid of pyenv and fall back to my system interpreter?
[01:47:50] *** Quits: p-i- (~Ohmu@223.206.149.105) (Ping timeout: 268 seconds)
[01:49:38] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:49:55] <jinsun> you can just pyenv uninstall <problem-python-version>, but I would say stick with pyenv, just install a new version or reinstall that exact version you are using
[01:51:09] <Feuermagier> oh, we have 3.10 now?
[01:51:21] <Feuermagier> that might be it
[01:51:25] *** Quits: gitly (~gitly@85.255.234.35) (Ping timeout: 256 seconds)
[01:51:40] <jinsun> yes 3.10 was released few weeks back
[01:52:04] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[01:52:34] *** Joins: zebrag (~chris@user/zebrag)
[01:53:07] *** Joins: gitly (~gitly@185.69.144.174)
[01:53:18] *** Joins: kaste (~kaste@user/kaste)
[01:54:59] *** Joins: PixelRobot (~PixelRobo@139.47.80.69)
[01:55:08] <kaste> Hello. I haven't used python in a while and am trying to freshen up somewhat
[01:55:54] <kaste> I am now thinking about using a with lock statement with yield and I am not sure, if the yield releases the lock in every case
[01:57:19] *** Quits: MercilessDeth (~brad@136.49.59.177) (Read error: Connection reset by peer)
[01:58:55] <mefistofeles> kaste: using what again?
[01:59:04] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[01:59:43] *** Quits: PixelRobot (~PixelRobo@139.47.80.69) (Remote host closed the connection)
[02:00:16] <KirkMcDonald> kaste: Yielding does not exit a context manager.
[02:00:25] <KirkMcDonald> https://bpa.st/P2VA
[02:01:06] <kaste> OK that's what I thought. Then I need to restructure. Thanks a lot
[02:01:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:03:21] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:06:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:06:02] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[02:06:43] *** Quits: jethro_ (~jethro_@cpc147188-rdng25-2-0-cust423.15-3.cable.virginm.net) (Quit: Leaving)
[02:07:51] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[02:08:30] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:08:52] *** Joins: djapo (~archangel@user/djapo)
[02:12:21] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:12:23] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[02:12:44] *** Joins: MercilessDeth (~brad@136.49.59.177)
[02:15:06] *** Quits: arash (arash@thinks.life.is-a.beauty) (Remote host closed the connection)
[02:15:06] *** Quits: wallbroken (wallbroken@user/wallbroken) (Remote host closed the connection)
[02:16:41] *** Joins: Colt (~Colt@user/colt)
[02:17:41] <orbisvicis> does hypothesis' composite strategy support multiple arguments to test functions?
[02:18:11] *** Joins: apocalyptech (~apocalypt@wilug/apocalyptech)
[02:19:04] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:19:52] <orbisvicis> or is there a way to convert a single strategy to multiple strategies / arguments?
[02:22:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:24:27] *** Joins: fikran (~fikran@user/fikran)
[02:25:14] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:25:44] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:27:09] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:27:22] <nedbat> orbisvicis: can you give us an example of the single strategy you have, and the multiple strategies you want/
[02:28:08] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[02:29:29] <orbisvicis> nedbat: https://bpa.st/3TYQ
[02:29:51] <orbisvicis> to have hypothesis perform the unpacking from composite
[02:30:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:b1e4:d2a1:9d2f:b8a8) (Quit: Client closed)
[02:30:36] <nedbat> orbisvicis: idk if you can make hypothesis do the unpacking
[02:30:55] <orbisvicis> hmm ok
[02:31:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:28] *** Joins: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com)
[02:31:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:03] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[02:33:51] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[02:34:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:34:26] *** Quits: Minori (~Minori@user/minori) (Quit: Leaving)
[02:34:41] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[02:35:53] *** Joins: wallbroken (wallbroken@user/wallbroken)
[02:39:10] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:40:27] *** Joins: arash (arash@thinks.life.is-a.beauty)
[02:40:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[02:42:42] <noarb> Is there a term for dynamically creating function or variable names, not dynamically creating the objects or data themselves?
[02:44:03] <jdavfsxd> code generation
[02:44:19] <nedbat> noarb: it's a tricky thing to do:  how do you manage to use those names later?
[02:45:38] <aphysically> jinsun: look what i found https://doc.rust-lang.org/std/any/
[02:46:33] <noarb> I had tried to do something like this in a for loop: https://stackoverflow.com/q/6181935 a while back (I think I was naming dataframes) and this channel scolded me until I realized that was a bad idea. I'm actually looking at c code, glib and gobject, which seem to do this a lot, and was just looking for some search terms to research more
[02:47:07] *** Quits: Narrat (~omnius@p200300df5f15684606ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:47:24] <nedbat> noarb: i can understand doing this to populate a module that other people will use.
[02:50:45] <noarb> nedbat: do you mean to avoid generic boilerplate code? That does seem to be a major goal of glib
[02:51:02] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:b1e4:d2a1:9d2f:b8a8)
[02:51:53] *** Joins: amazoniantoad (~jr@c-98-193-154-245.hsd1.tn.comcast.net)
[02:52:25] <amazoniantoad> I'm using opencv to divide the image into segments, given that I have done this, how do I save each segment into its own image?
[02:52:48] <amazoniantoad> https://pastebin.com/xNyJhFWD
[02:52:51] <amazoniantoad> Here's my code so far
[02:55:00] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (Quit: ZNC - https://znc.in)
[02:55:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:57:36] *** Quits: amazoniantoad (~jr@c-98-193-154-245.hsd1.tn.comcast.net) (Quit: leaving)
[02:59:39] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:59:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:00:34] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[03:02:38] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[03:02:38] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[03:03:55] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 250 seconds)
[03:04:04] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:05:03] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:05:14] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[03:05:17] <NeilRG> hello
[03:05:39] <NeilRG> can someone confirm my assertion that this mypy test is "wrong" in this Github issue thread?
[03:05:53] <NeilRG> https://github.com/python/mypy/issues/11583#issuecomment-974831467
[03:06:14] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 260 seconds)
[03:06:46] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a)
[03:06:47] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[03:07:19] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[03:07:27] *** Quits: grimvar (~grimvar@i5C75F4BD.versanet.de) (Ping timeout: 265 seconds)
[03:08:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[03:09:42] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) ()
[03:11:31] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a) (Ping timeout: 250 seconds)
[03:12:06] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:12:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:14:07] *** Joins: grimvar (~grimvar@i5C75F4BD.versanet.de)
[03:14:58] *** Joins: newpy (~newpy@206.168.231.90)
[03:16:36] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[03:17:06] <mjacob> is anyone aware of some package on pypi that backports ``zip(..., strict=True)``?
[03:17:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:18:04] *** Joins: Batzy (~quassel@user/batzy)
[03:19:14] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[03:20:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[03:20:43] *** Joins: emf (~emf@2620:10d:c090:400::5:5322)
[03:20:57] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:21:09] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[03:21:53] *** Quits: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Read error: Connection reset by peer)
[03:22:12] *** Joins: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[03:22:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:23:31] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:24:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:24:25] <Feuermagier> I'm getting the following error when I try to run terminator as my user: You need to install the python bindings for gobject, gtk and pango to run Terminator.
[03:24:42] *** Joins: akk (~akk@75.161.146.115)
[03:24:45] <Feuermagier> this seems to be an issue with python, but these are also not pip-packages
[03:25:10] *** Joins: Klinda (~superleag@user/klinda)
[03:25:36] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[03:26:23] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:26:46] *** Quits: emf (~emf@2620:10d:c090:400::5:5322) (Quit: emf)
[03:28:00] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:28:15] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[03:29:09] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[03:29:10] *** Joins: stoneware (~stoneware@user/stoneware)
[03:29:22] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:29:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:35] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:25] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:31:34] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[03:32:11] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:32:34] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[03:32:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[03:35:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:37:27] <NeilRG> mjacob, more_itertools.zip_equal
[03:37:41] *** Joins: capnyesterday (uid528258@id-528258.lymington.irccloud.com)
[03:39:03] <tk> how would I go about making a frozen Counter (and therefore making it hashable?)
[03:40:17] *** Quits: CoolerY (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[03:41:18] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:42:40] *** Joins: ano (~ano@user/ano)
[03:43:35] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[03:47:18] <nedbat> tk: you could make it a frozenset of tuples
[03:47:31] *** Joins: Macuser (~Macuser@2600:1003:b465:11f7:5e1:e00d:ee11:87e6)
[03:48:07] <tk> right but then membership tests are O(n) basically
[03:48:14] *** Quits: gitly (~gitly@185.69.144.174) (Ping timeout: 260 seconds)
[03:48:20] <nedbat> tk: set membership tests are O(1)
[03:48:36] <tk> yes, but you can't test for just half a two-tuple in a set
[03:48:44] <tk> if your key isn't the actual key you want
[03:48:54] <tk> unless I misunderstood
[03:48:54] *** Quits: Fiji_ (~Fiji@user/fiji) (Quit: Leaving)
[03:49:10] <nedbat> tk: no, i misunderstood how many different things you wanted to do.
[03:49:23] <nedbat> tk: you're going to hash the counters and also look up values by keys in them?
[03:49:27] <tk> yes
[03:49:46] <nedbat> tk: if you don't mind me asking, why hash them?
[03:50:13] *** Joins: gitly (~gitly@148.252.128.153)
[03:50:28] <tk> a dynamic programming problem involving a multiset
[03:50:38] <tk> I'm using @cache to do the memoization
[03:50:45] <tk> it expects parameters to be hashable
[03:51:26] *** Quits: y1n (~y1n@178.115.69.79.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[03:51:48] <nedbat> tk: hmm, i'm not sure how to get both of those properties
[03:52:31] <tk> I think it's okay, I think the O(n) lookup hit isn't a problem here
[03:52:33] <nedbat> tk: i guess it wouldn't pay to cache a frozenset, and convert it to a dict for key look up
[03:52:46] <tk> thanks in any case
[03:53:27] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:54:02] *** Quits: jess (~jess@libera/staff/jess) ()
[03:54:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:55:35] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:57:39] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:59:27] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[03:59:52] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[04:02:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:04:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[04:04:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:05:37] *** Quits: capnyesterday (uid528258@id-528258.lymington.irccloud.com) ()
[04:06:04] *** Quits: hudo__ (~hudo@62.68.19.39) (Quit: Leaving)
[04:06:32] *** Quits: grimvar (~grimvar@i5C75F4BD.versanet.de) (Ping timeout: 240 seconds)
[04:06:49] *** Joins: ionface (~ionface@user/ionface)
[04:08:19] *** Joins: grimvar (~grimvar@i5C75F72B.versanet.de)
[04:08:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[04:09:21] *** Quits: Macuser (~Macuser@2600:1003:b465:11f7:5e1:e00d:ee11:87e6) (Quit: Textual IRC Client: www.textualapp.com)
[04:09:57] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[04:11:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:11:30] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (Remote host closed the connection)
[04:11:43] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[04:11:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:12:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[04:12:47] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:15:30] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[04:15:40] *** Joins: comlord (~Thunderbi@180.108.84.197)
[04:18:03] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:18:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[04:18:17] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a)
[04:20:59] *** Joins: pycurious (~Adium@user/pycurious)
[04:23:07] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:23:14] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a) (Ping timeout: 268 seconds)
[04:23:14] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[04:23:28] *** Joins: pycurious (~Adium@user/pycurious)
[04:23:49] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:26:26] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[04:26:40] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (Quit: ZNC - https://znc.in)
[04:26:54] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[04:27:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[04:28:09] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[04:28:50] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[04:29:03] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[04:30:39] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[04:30:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:32:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:32:46] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:33:38] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:33:48] *** Joins: fikran (~fikran@user/fikran)
[04:34:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:34:20] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[04:34:38] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[04:34:56] *** Joins: brabrax (~brabrax@user/brabrax)
[04:37:03] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[04:37:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[04:38:54] <mjacob> NeilRG: thank you
[04:40:16] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:40:35] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[04:40:46] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[04:41:51] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (Quit: Leaving)
[04:43:46] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[04:45:37] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[04:45:44] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:46:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[04:46:37] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[04:51:32] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Ping timeout: 240 seconds)
[04:51:44] *** Joins: Nact (~l@host-85-27-124-83.dynamic.voo.be)
[04:55:48] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (Quit: kernel update)
[04:55:54] *** Quits: Nact (~l@host-85-27-124-83.dynamic.voo.be) (Client Quit)
[04:56:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:57:16] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:57:23] *** Joins: frost (~frost@user/frost)
[04:57:46] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:58:00] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[04:58:42] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 260 seconds)
[04:59:33] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[04:59:46] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[04:59:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:01:39] *** Joins: cjb (~cjb@user/cjb)
[05:02:11] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:04:04] <NeilRG> why is jupyter lab not finding the same imports as jupyter console?
[05:05:02] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:05:21] <NeilRG> ah nm
[05:06:16] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net)
[05:08:10] <rannnn8888> hey help install kivy pycharm https://bpa.st/YGWQ
[05:09:11] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[05:10:14] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[05:10:30] *** Joins: rany (~rany@user/rany)
[05:10:46] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[05:11:02] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[05:11:59] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:d9be:afe3:4e5b:d63)
[05:13:28] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:15:58] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[05:17:11] *** Quits: flokuehn (~flokuehn@87.123.247.50) (Ping timeout: 264 seconds)
[05:17:21] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[05:17:50] <foo> Well this is odd. asyncio.run() is saying: PermissionError: [Errno 13] Permission denied C:\\Users\\USER~1\\AppData\\Local\\Temp\\tmp319usao2'
[05:17:54] <foo> ... can anyone explain that?
[05:18:32] *** Joins: flokuehn (~flokuehn@87.123.247.61)
[05:19:35] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[05:19:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:19:48] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:20:40] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:26:08] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net) (Quit: Client closed)
[05:26:42] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:9c35:bed7:e2c:e900)
[05:26:53] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:9c35:bed7:e2c:e900) (Client Quit)
[05:28:13] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:d9be:afe3:4e5b:d63) (Ping timeout: 250 seconds)
[05:29:05] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[05:29:11] <foo> Nevermind
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:51] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[05:31:55] *** Quits: runlevel_0 (~nyarlatho@208.131.139.218) (Changing host)
[05:31:55] *** Joins: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182)
[05:33:46] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[05:34:57] <foo> Is anyone in here strongly a believer in deleting old git branches that have been merged in?
[05:35:35] <Lando-SpacePimp> foo, I'm a strong believer in science.
[05:35:45] <Lando-SpacePimp> also huggbees
[05:37:39] *** Quits: v- (~gary@user/ghost) (Ping timeout: 276 seconds)
[05:37:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[05:38:55] *** Joins: v- (~gary@user/ghost)
[05:39:23] *** Quits: sharperguy (~sharpergu@88.130.217.243) (Ping timeout: 264 seconds)
[05:39:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:40:06] <nedbat> foo: of course delete them.  why keep them?
[05:40:40] *** Joins: sharperguy (~sharpergu@89.244.127.7)
[05:41:10] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[05:41:53] *** Joins: EdePopede (~ede@user/ede)
[05:43:02] *** Quits: ede (~ede@user/ede) (Ping timeout: 240 seconds)
[05:43:07] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[05:43:21] *** EdePopede is now known as ede
[05:49:45] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:50:19] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 250 seconds)
[05:50:32] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:50:33] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[05:51:51] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 250 seconds)
[05:52:41] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[05:56:08] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:58:22] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:01:19] <deltab> on the one hand, they're no longer relevant and clutter up the list of branches; on the other hand, you may be losing a descriptor of the branch's commits
[06:02:20] <nedbat> deltab: shouldn't the commit messages do that?
[06:03:01] <kevr> There any simple ways to mock an entire module?
[06:04:11] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 250 seconds)
[06:04:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:05:11] <deltab> nedbat: yeah, I think I read something on that in the vicinity of https://www.fossil-scm.org/home/doc/trunk/www/fossil-v-git.wiki
[06:05:54] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:06:07] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[06:07:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:07:02] *** brabrax_ is now known as brabrax
[06:08:14] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[06:08:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:10:13] <deltab> in fossil, as I understand it, the branch name is part of each commit, so it becomes a permanent part of the history
[06:10:57] <nedbat> deltab: that is true in mercurial also
[06:11:01] <deltab> of course nothing is stopping you including that info in the commit message, but it's something extra you have to do
[06:11:02] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[06:11:10] <deltab> (in git)
[06:11:33] <grym> i keep meaning to know something about fossil
[06:12:42] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[06:13:25] <mefistofeles> fossil is nice :P
[06:14:06] <mefistofeles> good for smaller scale projects and a bit more intuitive than git, even though git has improved on that regard
[06:15:14] *** Quits: omegatron (~some@p5484903d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:16:58] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[06:19:01] <luke-jr> f-strings seem quite nice, but an opportunity was missed to make them more flexible :/
[06:19:15] <nedbat> luke-jr: how so?
[06:19:21] <luke-jr> f'{'a'}' should be valid for example
[06:19:44] <dre> uh, what?
[06:19:47] *** Quits: TJ- (~root@about/linux/staff/tj-) (Quit: Ooops, that broke it!)
[06:19:55] <luke-jr> ie, string literals inside the expression
[06:19:56] <dre> what do you suppose the output of that is?
[06:20:00] <luke-jr> 'a'
[06:20:05] <dre> f"{'a'}"
[06:20:09] <nedbat> luke-jr: the literal is parsed, and then the f-ness is figured out
[06:20:32] <dre> luke-jr, if you want 'a'   f"'a'"
[06:20:33] <luke-jr> nedbat: I understand that, but it would have been nicer if it could handle this
[06:20:39] <dre> or even just "'a'"
[06:20:40] <nedbat> luke-jr: yeah, i can see that.
[06:20:52] <luke-jr> eg, like BASH does
[06:21:06] <luke-jr> echo "$(echo "abc") def"
[06:21:11] <dre> like WHAT
[06:21:12] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[06:21:32] <luke-jr> pretty sure it's POSIX sh too, but not 10)% ☺
[06:21:36] <dre> you can literally do f"{'a'}"
[06:21:48] <luke-jr> dre: sure, but you have to avoid using the same quote character
[06:22:26] *** Quits: grym (~grym@user/grym) (Quit: leaving)
[06:22:35] <dre> ???
[06:22:45] *** Joins: grym (~grym@user/grym)
[06:23:04] <dre> that's even worse than complaining about indent blocks
[06:23:36] <dre> and you're using bash an example of never having to use different quote characters.
[06:23:53] <dre> why not use escapes?
[06:23:54] <dre> f"
[06:24:06] <dre> f"{\"a\"}"
[06:24:36] <dre> or, as i would prefer (because i'm insane)  f'{"a"}'
[06:25:54] <dre> luke-jr, how is this not flexible?
[06:26:02] <nedbat> dre: you can't use backslashes in f-strings like that.
[06:26:10] <dre> yes my bad I just realised
[06:26:20] <dre> I still don't get the argument nedbat
[06:26:38] <nedbat> dre: i understand it: it's easy to re-use the same quote, and you have to go back and fix it.
[06:26:54] <nedbat> dre: i'm not sure it would be worth the complexity in the lexer(s), but I understand it.
[06:27:28] <dre> like is this for if statements? f' the job returned {"success" if ok else "failure"}  '
[06:27:32] <dre> is that what we're talking about here?
[06:27:57] <dre> I mean, is the alternative that the f-string expression should be able to handle slahes?
[06:28:07] <luke-jr> I don't recall the use case I had a week ago when I discovered it didn't work, but that could be one I guess
[06:28:20] <dre> I would 10,000% prefer to use '' rather than \" \"
[06:28:23] <luke-jr> note there's an r-string simply to avoid having to use slashes in regexs ;)
[06:28:27] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: smeeagle)
[06:28:41] <nedbat> dre: print(f"Look, here's the value for k: {d["k"]}")
[06:28:53] <dre> oh no we have to d['k']
[06:29:07] <dre> that's one less key, I don't have to hold shift anymore, oh no, what am I going to do
[06:29:09] <nedbat> dre: it seems like you're getting kind of worked up about this.
[06:29:15] <luke-jr> ^
[06:29:16] <nedbat> dre: take it down a notch
[06:29:25] <dre> I'm not
[06:29:34] <nedbat> dre: you're being sarcastic
[06:29:49] <luke-jr> dre: you're taking it as an insult/criticism, rather than a comment/suggestion as I intended
[06:30:03] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[06:30:06] <dre> ok no, lets backtrack
[06:30:18] <dre> please show a simple example of what the input -> output is expected to be
[06:30:29] <nedbat> dre: do you not understand the example I showed?
[06:30:48] <nedbat> dre: it's not a big deal, we're all ok with using alternate quotes.
[06:30:50] <dre> and why that is not workable, compared to using single quotes
[06:30:59] <nedbat> dre: let's just drop it
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:36] <dre> ' <- this one little boy removes all amazing advances that could be possible in python ??
[06:31:58] <dre> if only it wasn't for that single quote.. we'd have a gloriously flexible python system now
[06:32:02] *** Joins: driib2 (~driib@185.65.135.232)
[06:32:09] <nedbat> dre: i'm just checking in with you: are you being sarcastic now?
[06:32:24] <dre> no
[06:32:33] <luke-jr> O.o
[06:32:45] <dre> nedbat, I'm just trying to get what you're saying?
[06:32:56] <dre> like that's effectively what you said previously or do i have it wrong?
[06:32:59] <dre> sorry if so.
[06:33:01] <nedbat> dre: maybe you are not worked up.  You are coming off like you are ranting sarcastically.
[06:33:12] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:39ad:55bb:1724:f8b6)
[06:33:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:33:43] <dre> sorry, i'm trying to understand the example you gave nedbat.
[06:33:48] <dre> could you please explain it again
[06:34:07] <nedbat> dre: ok, but some of your previous comments were clearly sarcastic, so I'm not sure we should continue
[06:34:11] *** Quits: driib (~driib@185.65.135.233) (Ping timeout: 256 seconds)
[06:34:11] *** driib2 is now known as driib
[06:34:15] <nedbat> " oh no we have to d['k'] "
[06:34:18] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:34:26] <dre> that was my response
[06:34:28] <dre> yes
[06:34:34] <dre> and the argument is that
[06:34:37] <nedbat> dre: i think you're understanding what we are saying, so we should just drop it.
[06:34:37] <dre> it's inflexible.
[06:34:40] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:06] <dre> no I'm trying to understand why it's inflexible, that's how it started.
[06:35:19] <dre> I could fix it immediately if you'd want
[06:35:20] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:35:37] <nedbat> dre: you're going to fix f-strings for us?
[06:35:52] <dre> my argument is to say that using both quotes opens the door to various flexibility options,
[06:35:54] <luke-jr> it would simply be nicer to get the obvious correct behaviour rather than an error message, and spare having to track which quote was used
[06:36:05] <luke-jr> also wouldn't possibly run out of quoting options due to nesting
[06:36:11] <dre> sure if you want me to do it.
[06:36:22] <luke-jr> nobody is saying to break f'{"a"}'
[06:36:38] <dre> luke-jr, that's sorta similar to the "too many tabs" issue, if you've got to have 3 different quotes in your string, then perhaps the string needs to be... reworked
[06:36:49] <luke-jr> I have hundreds of tabs ☺
[06:36:52] <nedbat> dre: i'm not sure why you would fix something when your response was to ridicule the complaint
[06:37:09] <luke-jr> oh, indentation tabs, nm
[06:37:09] <dre> you can already print( " do singles: '' and ticks: `` " ) without the need to really "process" anything
[06:37:25] <nedbat> luke-jr: i think we should drop this.
[06:37:30] <dre> and if you want "" to be in the output, you can just swap them, or \"
[06:37:30] <luke-jr> nedbat: ok
[06:37:36] <dre> nedbat, why?
[06:37:48] <nedbat> dre: because it doesn't feel like a respectful discussion
[06:37:49] <dre> it's a useful and interesting discussion
[06:37:57] <dre> in what way?
[06:38:12] <dre> it might be helpful for newbies
[06:38:13] <nedbat> dre: this was ridicule, correct?  "  oh no we have to d['k']  "
[06:38:31] <dre> i was blown away when I found I could do "d[]"
[06:38:46] <dre> ah sorry, f"{d['a']}"
[06:39:21] <dre> nedbat, "oh no, we have ~to~ d['k']" - sorry, the to was erronous.
[06:39:48] <dre> the 'to' was erronous, to make it clear what I'm saying
[06:39:52] <nedbat> dre: "oh no" was the ridicule.
[06:39:55] <dre> obviously quotes are needed n some context.
[06:40:25] <dre> nedbat, oh no? "oh, no, you see  ....  "   -- more quotes are helping us get understanding here.
[06:40:26] <nedbat> which appeared again in:   `   that's one less key, I don't have to hold shift anymore, oh no, what am I going to do   `
[06:40:48] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[06:40:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:41:10] <dre> oh ok
[06:41:17] <powftw> Hey guys, can you please help to solve my problem
[06:41:19] <powftw> https://bpa.st/NNO6LIQ4MOUYIQHTQXIB323NVE
[06:41:46] <powftw> I'm bad at Logical 🤔
[06:42:08] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Remote host closed the connection)
[06:42:16] <luke-jr> this feels like homework
[06:43:09] *** Joins: fikran (~fikran@user/fikran)
[06:43:18] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[06:43:25] <powftw> I've tried my best writing that while loop
[06:43:36] <powftw> It works. But can it be better?
[06:43:38] <dre> so nedbat the point you're trying to make, is that "this is a value: {d["key"]}" is to replace the already given "string " "concatination" "tricks" ?
[06:43:56] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:44:01] <dre> which do work in python, and are great for readability.
[06:44:14] <KirkMcDonald> Except when they're bad for readability.
[06:44:27] <nedbat> dre: my point is that    f"this is a value: {d["key"]}"    is a really easy mistake to make, and if could be not-a-mistake, we'd have more flexibility.
[06:44:29] <dre> KirkMcDonald, breaking up a long line
[06:44:42] <KirkMcDonald> Obfuscating a missing comma in a multi-line list.
[06:44:56] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[06:45:09] <nedbat> dre: whatever you think of the alternatives, isn't it clear that having the option of using either style of quote around "key" there is more flexible?
[06:45:10] <KirkMcDonald> Or a single-line one, for that matter.
[06:45:12] <dre> nedbat, yes, but pointing at the system is wrong, rather than showing the benefit of how it is, is the wrong approach to helping avoid mistakes.
[06:45:34] <dre> nedbat, that's my point, you DO have the option for whatever you want
[06:45:45] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:45:49] <nedbat> dre: we've never said we don't have the options to make it work.
[06:45:56] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[06:46:10] <dre> the only requirement is that have to use the "opposite" to terminate the string, so that it's clear what's string and what's accessor.
[06:46:12] <nedbat> dre: pointing at the system isn't wrong: it's could to consider how the system can work better for programmers.
[06:46:18] <nedbat> *it's good
[06:46:40] <dre> no, but not coming up with answers just leads to worse systems
[06:46:58] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[06:47:05] <dre> what's the answer to your conundrum, and why didn't you point the newbie to that solution.
[06:47:26] <nedbat> dre: i'm not sure there was a newbie here asking for the solution
[06:47:38] <dre> KirkMcDonald, actually, yes, true. I rewind, I've been bitten by that.
[06:47:39] <powftw> Can I use itertools in this problem? https://bpa.st/NNO6LIQ4MOUYIQHTQXIB323NVE
[06:47:50] *** Quits: freeman_h (~freeman_h@94.0.217.120) (Read error: Connection reset by peer)
[06:48:15] <dre> nedbat, are you sure?
[06:48:29] <nedbat> dre: I literally just said "i'm not sure" :)
[06:49:13] <luke-jr> the solution would be to parse the content of {…} without regard for outside quotes
[06:49:14] <dre> ah, sorry, i can't read quotes -- obviously I'm confused.
[06:49:18] <nedbat> dre: i got the sense that luke-jr understood how to use f-strings well, but didn't like this toe-stubbing
[06:50:07] <KirkMcDonald> powftw: Possibly. zip() may be of interest.
[06:50:38] <KirkMcDonald> powftw: I guess the question I have is what if you have more than two fruits in a row?
[06:50:40] <dre> luke-jr, what if the string is print(f"{")                       <- what should be rendered?
[06:51:40] <nedbat> dre: luke-jr also understand the complexity involved in changing the lexing rules
[06:51:49] <luke-jr> dre: that currently errors, and I would expect it to remain an error
[06:52:06] <dre> yeah I found it currently errors too
[06:52:12] <BrenBarn> I think doing that kind of quote-agnostic parsing wouldn't really be worth the effort
[06:52:14] <BrenBarn> it's not a big deal to use the different quotes
[06:52:21] <luke-jr> hmm
[06:52:38] <dre> apparently it is :P
[06:52:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:52:52] <luke-jr> BrenBarn: isn't it the same effect, more or less, as the lexer already does for parenthesis?
[06:52:52] <powftw> KirkMcDonald: orange,apple,mango in this case, orange and apple becomes FRUITS. now it checks mango and the next adjacent. if it is also a fruit (say pineapple) then it's also FRUITS, if not (say CAR) then it's written as it is. `FRUITS,pineapple,CAR`
[06:52:59] <luke-jr> effort*
[06:53:04] *** Joins: Vonter (~Vonter@user/vonter)
[06:53:05] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[06:53:17] <BrenBarn> but parentheses aren't string literals
[06:53:31] <luke-jr> neither are the contents of {…} in a f-string
[06:53:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:53:46] <BrenBarn> they are part of a string (the f-string)
[06:53:55] <nedbat> dre: `  apparently it is :P  `  I really think you've missed our sentiment
[06:54:14] <dre> I'm sorta getting the d["k"] example by nedbat
[06:54:30] <dre> but the argument is still silly
[06:54:38] <dre> in my opinion
[06:54:42] <nedbat> another good dismissive word
[06:54:56] <dre> oh ok let's continue your honour
[06:55:02] <KirkMcDonald> powftw: Hmm. The fact that it also needs to skip the next iteration when a pair is found (meaning it needs to skip the (apple, mango) pair after (orange, apple) is found) makes this more complicated, but it's still doable.
[06:55:24] <KirkMcDonald> powftw: So, yes, zip() may be of use.
[06:56:10] <KirkMcDonald> powftw: That while loop seems entirely credible, however.
[06:56:20] <nedbat> btw, Pablo is the core dev and SC member who has been improving the syntax error messages:  https://www.mail-archive.com/python-dev@python.org/msg113764.html
[06:56:27] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:56:28] <nedbat> dre: take a look at that thread ^^
[06:56:30] <dre> luke-jr, nedbat it goes without saying that you can obtain "some string".format('"whateverquotes"', "'youwant'", '\'however\'', "\" youwantthem \"")
[06:56:56] <nedbat> dre: it goes without saying that before Python was invented, we could program in C.
[06:57:09] <luke-jr> f'this is an example of {getexample(f"some {k['a']} weird case")} that would be a pain currently'
[06:57:11] <dre> yes just making clear
[06:57:14] <KirkMcDonald> You know that "stop doing math" meme? I feel like this conversation has a "stop quoting things" meme waiting to happen.
[06:57:16] <nedbat> dre: some people hated the idea of f-strings completely  because we already had .format
[06:57:28] <nedbat> dre: take a look at that email thread I linked to.
[06:57:36] <dre> yeah I'm reading it
[06:57:45] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:57:46] <nedbat> dre: i don't know what the resolution is, but it at least means it's not absurd to consider.
[06:57:48] <dre> so, just as an aside.
[06:58:15] <dre> luke-jr, the issue with that, is that new people, at that point, will be better served with "please make variables, and use sensible variable names" instead.
[06:58:39] <powftw> KirkMcDonald: I feel my while loop is sometimes not catching up with odd number of fruits. It's dump
[06:58:47] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[06:58:48] <dre> so to keep it to a simple f"this is an example of {something} that would be pain currently"
[06:58:49] <powftw> Also, how zip can be abused here?
[06:58:56] <luke-jr> dre: where do new people come into this?
[06:59:03] <dre> powftw, zip makes two lists -> 1 list of pairs.
[06:59:18] <dre> luke-jr, because new people have to use the language as well :)
[06:59:23] <dre> everyone is new at some point
[06:59:55] <powftw> dre: what about odd number of elements?
[06:59:57] <luke-jr> it's kinda like saying drop parenthesis because new people can't handle them or something
[07:00:24] <luke-jr> people should learn languages, especially simple things like this, if they want to use them
[07:00:26] <dre> luke-jr, woah woah woah woah woah
[07:00:30] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[07:00:41] <dre> my whole point is that " and ' are already simple enough
[07:00:42] <powftw> KirkMcDonald: is that complicated enough that itertools don't have trick to do it?
[07:01:18] <luke-jr> f-strings are simple too; simpler if nesting works as intuitively reasonable
[07:01:31] <dre> and to say some convoluted example is going to show up often
[07:01:43] <KirkMcDonald> powftw: Yeah, basically. If the problem were "collapse *all* adjacent runs of fruits into a single 'FRUIT' string" then you could throw itertools.groupby() at it, but this particular thing is too specific.
[07:01:44] <dre> is to say, that newbies should be learning how to deal with variables.
[07:02:10] <dre> like the example you served is an example of really shonky programming imo
[07:02:13] *** Joins: fdan (~fdan@192.146.154.3)
[07:02:24] <fdan> what is meant by dependency injection
[07:02:25] <dre> but if you wanted to do it like that, you could even just,
[07:02:52] <dre> f'this is an example of {getexample("some {} weird case".format(k['a'])} that would be a pain currently'
[07:02:59] <nedbat> fdan: it means that your function gets passed the other services it needs, rather than accessing them directly.
[07:03:00] <dre> OR any number of options
[07:03:11] *** Joins: vit (~vit@chello085216193138.chello.sk)
[07:03:22] <fdan> nedbat do you mind if you could give a simple example
[07:03:51] <nedbat> fdan: for example, if your function needed to fetch an HTTP resource, the simple way to write the function is to import requests, and use request.get directly.
[07:04:18] <fdan> yes
[07:04:32] <nedbat> fdan: the DI way to do it, your function would have a httpget argument that might default to requests.get, but the caller could pass in another function to use for fetching http things.
[07:04:54] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Quit: Leaving)
[07:05:34] *** Joins: grooverman (~grooverma@177.95.12.14)
[07:06:01] <fdan> nedbat a pythong snippet for the last message would be helpful if you could give me one
[07:07:19] <nedbat> fdan: https://gist.github.com/nedbat/caa6445942d2e29251366e065cd208ab
[07:07:38] <dre> nedbat, actually it's a good point, i remember having to surround my whole .js file in backticks once, so that i can import it as a string, and then inject it into a website/browser so that it would run using the client's JQuery instead of mine
[07:07:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[07:07:49] <nedbat> dre: sounds like a pain
[07:07:59] <dre> ah but it was doable!
[07:08:15] <nedbat> dre: programming language ux is not a simple thing. it's hard to balance the needs of the implementors, the beginner, and the experts.
[07:08:18] <fdan> what is the use of the DI here?
[07:08:25] <dre> so maybe nested quotes /templates etc, might be better and flexible in that way..
[07:08:39] <dre> nedbat, yeah I agree
[07:08:39] <nedbat> fdan: the caller has more control with the DI way.  it could make it easier to test, for example.
[07:09:02] <dre> but let's not let things go crazy :P
[07:09:19] <dre> woah woah woah, TWO quotes? you're out of your mind!
[07:09:37] <nedbat> dre: yeah, what's next? regular expressions!?? :)
[07:09:43] <dre> :P
[07:10:18] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[07:10:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:13:16] *** Quits: adeliktas (~adeliktas@2001:16b8:22ae:9400:6070:1d72:baa1:a7ff) (Ping timeout: 256 seconds)
[07:14:40] *** Joins: WarpedAI (~Warped@user/warped)
[07:17:07] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 268 seconds)
[07:17:47] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:b1e4:d2a1:9d2f:b8a8) (Quit: Client closed)
[07:18:12] <apocalyptech> Hello all!
[07:19:17] <apocalyptech> So I've got a situation where I've got a class which I essentially want to be like this: https://bpa.st/F5DQ
[07:19:52] <apocalyptech> ie: I've got an `io.BytesIO` object with data, and I want some properties (in that example `thing`) which represent fixed offsets within that binary file (in this case just hardcoded to signed 32-bit ints)
[07:20:50] <apocalyptech> I'd rather not have to do the property getter/setter stuff individually for each prop I'm going to have (in the example I've just got `thing` but there'll be a number of them)
[07:21:21] <apocalyptech> Obviously something like this gets me *most* of the way there, but in this case I introduce another "layer" of references to get to the actual value: https://bpa.st/TE3A
[07:21:22] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[07:21:55] <apocalyptech> ie: I'd rather be able to reference `f.thing` as opposed to `f.thing.value`
[07:22:48] <apocalyptech> I've been banging my head against doing my own decorators and trying to work with the `property()` builtin myself but my mojo's not workin' tonight, apparently.
[07:23:11] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[07:23:21] <apocalyptech> Am I missing something obvious here?  Am I just trying to do something inherently un-Pythonic and I should just cope with that second example?
[07:23:42] <nedbat> apocalyptech: this is the kind of thing descriptors are good fo
[07:23:43] <nedbat> for
[07:23:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[07:24:25] *** Quits: nomic (~nomic@185.217.117.164) (Quit: Leaving)
[07:24:30] <nedbat> apocalyptech: but the only example i'm finding is complicated: https://github.com/Andor-Z/My-Learning-Note/blob/202401f1be1f9f7c32049623315c0c54720498f7/python-cookbook/src/6/reading_nested_and_variable_sized_binary_structures/example4.py
[07:25:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[07:25:14] <apocalyptech> nedbat: Aha, thx for the pointer.  :)  I'll browse through there and do some more Googling.  Cheers!
[07:25:39] <apocalyptech> Perhaps something'll spark the ol' grey cells.
[07:25:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:26:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:28:09] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:29:54] *** Joins: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff)
[07:30:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[07:32:29] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:34:27] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[07:35:01] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:01] *** Joins: Colt (~Colt@user/colt)
[07:37:05] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[07:37:33] <NeilRG> do you guys prefer filter to list comprehensions?
[07:38:05] *** Joins: simplicity (~yti@user/simplicity)
[07:39:39] *** Joins: Atque (~Atque@user/atque)
[07:40:21] <powftw> I have a list `fruits= ['orange', 'apple', 'pineapple', 'mango']`
[07:40:54] <powftw> ('pineapple', 'CAR') in fruits return FALSE
[07:41:07] <powftw> BUT
[07:41:23] <powftw> ('CAR','pineapple') in fruits return TRUE
[07:41:31] <powftw> 🙄
[07:41:34] <powftw> Why is that
[07:42:12] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:42:14] <Peng> Both of those result in False
[07:42:17] <NeilRG> ^
[07:43:31] <apocalyptech> nedbat: Aha, yeah, that seems to work pretty great: https://bpa.st/EVCQ
[07:43:52] <powftw> k=('CAR','pineapple')
[07:43:54] <powftw> k[0] and k[1] in fruits
[07:44:00] <powftw> Returns TRUE
[07:44:14] <apocalyptech> Not thrilled with using `obj.b` to get at the bytes from within that class, but I'll happily cope with that if I can't find a way around that.
[07:44:17] <apocalyptech> Cheers, and thanks again!
[07:44:55] *** Joins: chatcat (chatcat@gateway/vpn/airvpn/chatcat)
[07:45:02] <Peng> powftw: "k[0] and k[1]" is 'pineapple'
[07:45:35] <Peng> powftw: So that code is equivalent to 'pineapple' in fruits, which is of course true
[07:46:02] <powftw> Peng: k[0] is CAR
[07:46:03] <queue-> yea 0 would layout the entire array if it wasnt just pineapple it would list more
[07:46:10] <Peng> powftw: "k[0] and k[1]" is 'pineapple'
[07:46:21] <queue-> 0 is the entire array
[07:46:28] <queue-> [1] is pineapple itself, but since there only one item
[07:46:35] <queue-> its pineapple both times, powftw
[07:46:48] <Peng> powftw: If you want "k[0] in fruits and k[1] in fruits", that's how you would write it. The "in" operator doesn't have convenient syntax for checking multiple things.
[07:46:49] <queue-> lets say, you had
[07:47:03] <queue-> k=('CAR','pineapple','test')
[07:47:35] <queue-> pineapple and test are now k[0]
[07:47:37] *** Joins: rany (~rany@user/rany)
[07:47:50] <queue-> and now you have k[1] and k[2]
[07:48:07] <Peng> powftw: I'm not sure what documentation to recommend, but this code doesn't fit together in the way you're thinking.
[07:48:28] <queue-> hes not realizing that CAR is the table or w/e
[07:48:47] <queue-> table/object/blah blah
[07:48:51] <fdan> nedbat If we see in the return statement of the 'First Function' the user is doing only one type of requests to different domain so he passes the domain name alone as a argument. where as in the second function the user wants to perform different type of requests to different domains so he passes the type of the requests also as an argument along
[07:48:52] <fdan> with the domain name. so what happened is based on the request type given in the argument, The request is performed to the domain that is passed as a argument.
[07:49:04] <fdan> is my understanding right with respect to the DI example you gave?
[07:49:15] <powftw> https://usercontent.irccloud-cdn.com/file/2zE2TuWh/IMG_.jpg
[07:49:31] <queue-> oh hmm
[07:49:34] <queue-> ok nevermind :P
[07:49:46] <queue-> it doesnt parse as an array the way i thought it would
[07:49:56] <queue-> for [0]
[07:50:23] <queue-> then you're right and peng is wrong, carry on :D
[07:50:32] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[07:51:53] <Peng> Actually... is "k[0] and k[1] in fruits" equivalent to "(k[0] and k[1]) in fruits" or "k[0] and (k[1] in fruits)"? I don't remember.
[07:52:01] <Peng> I was guessing it was the first
[07:52:59] *** Joins: teddy_k (~theo@2600:1700:7c30:32b0::35)
[07:53:18] *** Joins: Samian (~s@user/samian)
[07:53:27] *** Parts: teddy_k (~theo@2600:1700:7c30:32b0::35) ()
[07:53:50] <queue-> i was just pinging off what you were saying and not reading up lol
[07:54:23] <powftw> queue-: I see .. It made me question myself
[07:54:44] <queue-> yea it threw me off-base as well and made me explain something that was completely wrong, i hate reading up though hehe
[07:55:52] <fdan> nedbat could you confirm me if my views on dependency injection is right?
[07:56:20] <jinsun_> Peng: in has higher precedence according to the docs, though both ways give the same result so it doesn't matter in this case I think
[07:57:32] *** Joins: abip20 (~abdullah@user/abip20)
[07:57:34] <Peng> \o/
[07:58:37] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[07:59:51] <queue-> i think i'd regex this
[07:59:57] *** Joins: jinsun (~quassel@user/jinsun)
[08:00:18] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:00:45] *** Joins: lethu (~lethu@user/lethu)
[08:01:56] <queue-> all this can be done with 1 line of pcre regexes
[08:03:04] <foo> nedbat: I had a jr dev tell me "it doesn't bother them" - how would you respond to that?
[08:03:16] <foo> https://bpa.st/5ZJA -> this is throwing an error on windows, likely the /dev/shm path. /me looks for alternative
[08:03:42] <queue-> well yea if you're on windows /dev isnt a path
[08:03:43] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[08:03:49] <queue-> thats shared memory on linux
[08:03:51] <foo> queue-: yeah, trying to figure out the alternative
[08:03:58] <queue-> use linux
[08:04:01] <queue-> lol
[08:04:07] <foo> queue-: yeah, trying to get them to install WSL. meh.
[08:04:39] <queue-> just change the path
[08:04:51] <jinsun_> powftw:  no need of regex, it can be simply done with multiple `in` checks like Peng  suggested above, or if you have too many things to check then `all(x in fruits for x in k)`
[08:04:59] <foo> queue-: yeah, trying to figure out the equivalent on windows. what would we change it to? hmm
[08:05:08] <aphysically> I think by far the weirdest thing to come out of trojan source is the revelation that python uses NFKC normalization to determine if variable names are the same
[08:05:18] <queue-> CreateFile() with FILE_ATTRIBUTE_TEMPORARY
[08:05:31] <foo> queue-: is FILE_ATTRIBUTE_TEMPORARY a global python var? I did see that too
[08:05:31] <queue-> windows will keep it in cache here
[08:05:34] <queue-> as much as it can
[08:05:40] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[08:06:19] <queue-> https://docs.microsoft.com/en-us/previous-versions/ms810613(v=msdn.10)?redirectedfrom=MSDN
[08:06:26] *** Joins: fdan (~fdan@192.146.154.3)
[08:07:09] <queue-> it is in CreateFile()
[08:07:28] <queue-> ctrl+f 'creating a file mapping'
[08:08:36] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[08:09:17] *** Joins: teut (~teut@122.181.77.157)
[08:10:08] <foo> queue-: yeah but I don't think that's python. hmm, *checks
[08:12:38] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 268 seconds)
[08:12:57] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[08:12:58] <queue-> you were asking for the equivalent in windows, theres not really one u have to map it
[08:13:03] <foo> queue-: ahh
[08:13:41] <queue-> i dont think it has to be /dev/shm here anyway
[08:13:48] <queue-> i think that was just for performance
[08:13:53] <foo> queue-: it can be ./temp/ , eh? I thought about that
[08:13:58] <queue-> ye
[08:13:59] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[08:14:13] <queue-> we only store things in shm cause its faster, caches
[08:14:21] <queue-> for obv reasons hehe
[08:15:22] <foo> queue-: this is a dev environment, right now just need a quick workaround
[08:15:35] <queue-> make a folder somehwere
[08:15:41] <queue-> change it /dev/shm to C:\blahblah
[08:15:44] <queue-> wherever you put it
[08:16:06] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[08:17:22] *** Joins: parv (~quass@user/parv)
[08:20:39] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[08:21:32] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 240 seconds)
[08:22:26] *** Joins: arinov (~arinov@77.67.130.254)
[08:24:19] *** Joins: rany (~rany@user/rany)
[08:24:49] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[08:25:35] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:26:25] *** Joins: Guest313 (~Guest313@pool-96-253-74-73.rcmdva.fios.verizon.net)
[08:26:41] <Guest313> How do you POST to the metadata section of this JSON?
[08:26:43] <Guest313> https://dpaste.org/gYv5#L15
[08:26:49] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 268 seconds)
[08:27:12] <Guest313> https://docs.btcpayserver.org/API/Greenfield/v1/#operation/Invoices_CreateInvoice
[08:27:34] <Guest313> You need to click on the metadata dropdown
[08:27:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:27:46] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[08:28:18] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[08:28:51] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:29:44] <queue-> call the requests. post() method and pass JSON data with the json parameter
[08:29:53] <Guest313> https://dpaste.org/AAvr
[08:29:59] <Guest313> That is my python code
[08:30:08] <queue-> ah you're doing it already
[08:30:32] <Guest313> how do i structure the payload variable with the metadata?
[08:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:14] <Guest313> I always get confused when you have {} inside other {}
[08:32:27] <foo> queue-: sounds like he (the person I'm helping) tried C:\\Users\\HIM\\DOCUME~1\\new_temp\\ ... going to have him try another location, apparently that didn't work
[08:32:31] *** Joins: humberto1 (~humbertow@189.236.62.65)
[08:32:56] <queue-> can we get an error
[08:33:05] <queue-> throw an exception
[08:33:23] <Guest313> you want me to throw the exception?
[08:33:23] <foo> queue-: permission denied I believe but will double check
[08:33:29] <queue-> not you Guest313
[08:33:31] <Guest313> ok
[08:33:45] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[08:34:21] <queue-> first i'd fix your headers = { ... } line just because the change in syntax is confusing
[08:35:18] <Guest313> oh i think i figured it out
[08:35:31] <Guest313> payload = {"metadata": {"test":"value"},}
[08:35:39] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[08:36:15] <Guest313> what would you change the headers line to?
[08:36:25] <queue-> its just the syntax change
[08:36:31] <queue-> you put spaces in payload = { }
[08:36:42] <queue-> but underneath is headers={ }
[08:36:44] <queue-> idgi
[08:37:00] <Guest313> oh so switch them?
[08:37:05] *** Joins: rany_ (~rany@user/rany)
[08:37:07] <queue-> no nvm
[08:37:07] <Guest313> headers first then payload?
[08:37:10] <queue-> lol
[08:37:12] <queue-> nah
[08:37:18] <Guest313> Sorry I want to know what you meant
[08:37:27] <queue-> im asking
[08:37:29] <queue-> why do you use:
[08:37:34] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[08:37:35] <queue-> payload = { ... }
[08:37:42] <queue-> headers={ ... }
[08:37:48] <Guest313> ooh
[08:37:50] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[08:38:10] <Guest313> because i found and copied and pasted the headers variable on stackoverflow lol
[08:38:11] <queue-> but yea it should be like
[08:38:17] *** Quits: defjam (~eb0t@90.196.140.50) (Ping timeout: 256 seconds)
[08:38:17] <queue-> payload = {'metadata'
[08:38:24] <queue-> payload = {'metadata': 'data'}
[08:38:36] <queue-> lol
[08:39:02] <Guest313> for some reason payload = {'metadata': 'data'} did not work
[08:39:12] *** rany_ is now known as rany
[08:39:18] <Guest313> because metadata is nested inside a parent {}
[08:40:20] *** Joins: defjam (~eb0t@90.197.81.95)
[08:40:37] <queue-> instead of json=payload did you try data=json.dumps(payload)
[08:41:05] <Guest313> no but what is the difference?
[08:41:45] *** Quits: tonberry (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[08:42:40] <queue-> only difference i know of is content-type headers has to be set manually, honestly they should both work here
[08:43:25] <Guest313> ok thank you
[08:44:00] <queue-> actually they have updated the documentation: https://requests.readthedocs.io/en/master/user/quickstart/#more-complicated-post-requests
[08:44:36] <Guest313> oh so is the way i have it good then?
[08:45:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:45:47] <queue-> are you debugging at all for each line Guest313 ?
[08:46:04] <queue-> have you tried to throw an exception to see what happens
[08:46:10] <Guest313> mostly
[08:46:20] <Guest313> anyways i gtg ty for the help
[08:46:32] <queue-> ya without trial and error i cant call it directly here :D
[08:46:49] <Guest313> ok maybe i will come back tomorrow and ask you
[08:47:10] <queue-> im sure someone better than me has the answer in here tbh, not sure
[08:47:43] <queue-> python is one of my many langs, im only pretty decent at it, some people in here are great hehe
[08:47:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[08:48:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ff5a:fb87:fc33:be7c) (Quit: Leaving)
[08:49:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:49:20] <foo> queue-:  if os.access("C:\Users\My User\Documents\new_temp", os.R_OK | os.X_OK | os.W_OK):
[08:49:23] <foo> queue-: still throwing an error
[08:49:24] <foo> hmm
[08:50:10] <Peng> Use a raw string or escape the \ ?
[08:50:12] <Peng> Or use /
[08:50:29] <domhnall> Yeah, doesn't Win32 use /
[08:50:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:51:04] <jinsun> either works on windows, doesn't have to be backslash
[08:51:22] <domhnall> oh okay
[08:51:22] <parv> In the code posted at https://www.gormanalysis.com/blog/building-and-deploying-rock-paper-scissors-with-python-fastapi-and-deta/ (2/3 down the page; search for "bazooka"), how does type annotation work at run time? Does FastAPI decorator "@app.get" creates a Weapon object at run time?
[08:52:30] *** Joins: fikran (~fikran@user/fikran)
[08:53:00] *** Quits: Guest313 (~Guest313@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:53:52] <queue-> ya foo
[08:54:08] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:54:08] <queue-> do r'C:\foo\bar'
[08:55:45] <jinsun> ah missed that foo was using backslash, then yeah will have to make it a raw string with r, converting all backslashes to forward slashes also works
[08:55:51] *** Quits: arinov (~arinov@77.67.130.254) (Ping timeout: 256 seconds)
[08:56:02] <queue-> yea i just saw that
[08:56:21] <queue-> os.*('c:/whatever') works
[08:59:37] *** Joins: afidegnum (~user@41.66.203.201)
[09:00:02] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[09:00:57] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[09:01:05] <afidegnum> hi
[09:01:10] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:01:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[09:01:49] <afidegnum> i asked a question on SO about hierarchical data insertion. can you please assist? https://stackoverflow.com/q/70060393/5713751
[09:03:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:04:17] <foo> queue-: The same error: PermissionError: [Errno 13] Permission denied: 'C:\\temp\\tmpzvfpv5co'
[09:04:21] <foo> queue-: bah, perms on temp are 777
[09:05:02] *** Quits: nicode (~nic@2607:f2c0:94d3:a300:b6a2:b673:d91f:e7db) (Ping timeout: 260 seconds)
[09:05:27] <queue-> is C: the only drive
[09:06:17] <parv> Seems like https://fastapi.tiangolo.com/tutorial/body-multiple-params/ answers my query under section "Multiple body parameters" in example code for "update_item" function with "Item" & "User" type annotations.?
[09:06:18] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:08:07] <foo> queue-: yes
[09:09:13] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:10:47] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[09:12:25] *** Joins: aphysically (~aphysical@user/aphysically)
[09:14:18] *** Joins: sagax (~sagax_nb@user/sagax)
[09:14:22] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[09:16:04] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[09:17:59] <jinsun> foo: what were you trying to do originally? why make your own temp folder instead of letting tempfile make it for you?
[09:18:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[09:18:48] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[09:18:48] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[09:18:48] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[09:18:48] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (*.net *.split)
[09:18:48] *** Quits: TML (~tml@user/tml) (*.net *.split)
[09:18:48] *** Quits: Tritium (~tritium@toxin.sdamon.com) (*.net *.split)
[09:18:48] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[09:18:48] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (*.net *.split)
[09:18:48] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[09:18:48] *** Quits: CrypticS_ (~CrypticS_@user/crypticsquared) (*.net *.split)
[09:18:48] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:48] *** Quits: dece (~dece@dece.space) (*.net *.split)
[09:18:48] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (*.net *.split)
[09:18:48] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[09:18:48] *** Quits: timothy (~timothy@redhat/timothy) (*.net *.split)
[09:18:48] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[09:18:48] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:18:48] *** Quits: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd) (*.net *.split)
[09:18:48] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[09:18:48] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[09:18:48] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:18:48] *** Quits: ksynwa (~ksynwa@5.45.111.57) (*.net *.split)
[09:18:48] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (*.net *.split)
[09:18:48] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[09:18:48] *** Quits: rossw (~rossw@cpc158585-brad24-2-0-cust291.17-1.cable.virginm.net) (*.net *.split)
[09:18:48] *** Quits: whaley (~whaley@159.65.32.34) (*.net *.split)
[09:18:48] *** Quits: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0) (*.net *.split)
[09:18:48] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (*.net *.split)
[09:18:48] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[09:18:48] *** Quits: yolo_ (~xxiao@159.89.184.51) (*.net *.split)
[09:18:48] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:18:48] *** Quits: kushal (~hopless@dgplug/kushal) (*.net *.split)
[09:18:56] *** Joins: yolo (~xxiao@159.89.184.51)
[09:19:01] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:19:02] *** Joins: dece (~dece@dece.space)
[09:19:03] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[09:19:08] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[09:19:17] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[09:19:20] *** Joins: TML (~tml@user/tml)
[09:19:22] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[09:19:25] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[09:19:26] *** Joins: leonardo (~leonardo@user/leonardo)
[09:19:27] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[09:19:29] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:19:29] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[09:19:30] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[09:19:32] *** Joins: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0)
[09:19:39] *** Joins: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd)
[09:19:44] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:19:53] *** Joins: whaley (~whaley@159.65.32.34)
[09:19:57] *** Joins: erry (~erry@errietta.me)
[09:19:58] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[09:20:02] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:20:09] *** Joins: bkhl (~bkhl@user/bkhl)
[09:20:15] <afidegnum> any insight ?
[09:20:30] *** Joins: timothy (~timothy@redhat/timothy)
[09:20:41] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[09:21:03] *** Joins: kushal (~hopless@dgplug/kushal)
[09:21:23] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[09:21:26] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[09:22:29] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[09:24:09] *** Joins: Vonter (~Vonter@user/vonter)
[09:24:59] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[09:24:59] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[09:24:59] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:24:59] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[09:24:59] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:24:59] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (*.net *.split)
[09:24:59] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[09:24:59] *** Quits: ST47 (~ST47@wikimedia/st47) (*.net *.split)
[09:24:59] *** Quits: bim9262 (~bim9262@user/bim9262) (*.net *.split)
[09:24:59] *** Quits: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e) (*.net *.split)
[09:24:59] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:24:59] *** Quits: the_rat_ (~ratto@emily.sorcio.org) (*.net *.split)
[09:24:59] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[09:24:59] *** Quits: dambuster_ (~dambuster@185.193.170.225) (*.net *.split)
[09:24:59] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[09:24:59] *** Quits: Widdershins (widders@ps.mad.cash) (*.net *.split)
[09:24:59] *** Quits: dynos01_ (~dynos01@2600:3c01:e000:36a::8400) (*.net *.split)
[09:24:59] *** Quits: flyback (~flyback@2601:540:8201:1e60::43a) (*.net *.split)
[09:24:59] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[09:24:59] *** Quits: mkoskar (~mkoskar@user/mkoskar) (*.net *.split)
[09:24:59] *** Quits: MacGyver (~macgyver@user/macgyver) (*.net *.split)
[09:24:59] *** Quits: towel (~towel@user/towel) (*.net *.split)
[09:24:59] *** Quits: thib (~thib@wikimedia/Thibaut120094) (*.net *.split)
[09:24:59] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[09:24:59] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (*.net *.split)
[09:24:59] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:24:59] *** Quits: nepeat (~nepeat@79.110.170.59) (*.net *.split)
[09:24:59] *** Quits: pystardust (~pystardus@45.32.119.11) (*.net *.split)
[09:24:59] *** Quits: krisd (krisd@s0.mydevil.net) (*.net *.split)
[09:24:59] *** Quits: solrize (~solrize@user/solrize) (*.net *.split)
[09:24:59] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[09:24:59] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[09:24:59] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[09:24:59] *** Quits: fakenullie (~nullie@london.nullie.name) (*.net *.split)
[09:24:59] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:25:00] *** Quits: grawity (grawity@star.nullroute.lt) (*.net *.split)
[09:25:00] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (*.net *.split)
[09:25:00] *** Quits: meph (~mepholic@flux.hxx.in) (*.net *.split)
[09:25:00] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (*.net *.split)
[09:25:00] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (*.net *.split)
[09:25:00] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[09:25:00] *** Quits: laksith (~laksith@laksith.dev) (*.net *.split)
[09:25:00] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:25:00] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[09:25:00] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[09:25:00] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[09:25:00] *** Quits: or4n (~or4n@gerbera.qkka.org) (*.net *.split)
[09:25:00] *** Quits: laman2 (~laman@rego.ai) (*.net *.split)
[09:25:00] *** Quits: Ulti_ (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:25:00] *** Quits: Shapeshifter (~Shapeshif@parakeet.ifi.uzh.ch) (*.net *.split)
[09:25:00] *** Quits: petaflot (~root@lutolf.vserver.nimag.net) (*.net *.split)
[09:25:00] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[09:25:00] *** Quits: icy (~icy@user/icy) (*.net *.split)
[09:25:00] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (*.net *.split)
[09:25:00] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[09:25:00] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[09:25:00] *** Quits: Mogget (Mogget@vogon02.moshwire.com) (*.net *.split)
[09:25:00] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[09:25:00] *** Quits: zoid (~zoid@user/zoid) (*.net *.split)
[09:25:00] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[09:25:00] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[09:25:00] *** Quits: themill (~stuart@debian/stuart) (*.net *.split)
[09:25:00] *** Quits: operational (~operation@imgonnaf.art) (*.net *.split)
[09:25:00] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:25:00] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[09:25:00] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[09:25:00] *** Quits: apocalyptech (~apocalypt@wilug/apocalyptech) (*.net *.split)
[09:25:00] *** Quits: roppert (~roppert@inb4.se) (*.net *.split)
[09:25:00] *** Quits: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de) (*.net *.split)
[09:25:00] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[09:25:00] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[09:25:00] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[09:25:00] *** Quits: t2mkn (~t2mkn@user/t2mkn) (*.net *.split)
[09:25:00] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:25:00] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[09:25:00] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[09:25:00] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[09:25:00] *** Quits: RoadrunnerWMC (~Roadrunne@46.101.129.38) (*.net *.split)
[09:25:00] *** Quits: zivoni_ (~tomas@user/zivoni) (*.net *.split)
[09:25:00] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (*.net *.split)
[09:25:00] *** Quits: raukadah (~chandanku@51.159.58.174) (*.net *.split)
[09:25:00] *** Quits: Repiphany (~Repiphany@user/repiphany) (*.net *.split)
[09:25:00] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[09:25:00] *** Quits: NeuroWinter (~neuro@107.172.219.235) (*.net *.split)
[09:25:00] *** Quits: woky_ (~woky@li1651-31.members.linode.com) (*.net *.split)
[09:25:00] *** Quits: simone (~nya@user/sx) (*.net *.split)
[09:25:00] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:25:00] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[09:25:00] *** Quits: KSaunderson (~user@142.93.152.208) (*.net *.split)
[09:25:00] *** Quits: Fieldy (~no@user/fieldy) (*.net *.split)
[09:25:00] *** Quits: ilmostro (~ilmostro@user/ilmostro) (*.net *.split)
[09:25:00] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (*.net *.split)
[09:25:00] *** Quits: dirtwash (~dirtwash@user/dirtwash) (*.net *.split)
[09:25:07] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:25:08] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[09:25:09] *** Joins: meph (~mepholic@flux.hxx.in)
[09:25:15] *** Joins: Shapeshifter (~Shapeshif@parakeet.ifi.uzh.ch)
[09:25:16] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 250 seconds)
[09:25:19] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[09:25:27] *** Joins: simone (~nya@user/sx)
[09:25:28] *** Joins: gildarts (16abab341f@user/gildarts)
[09:25:28] *** Joins: KSaunderson (~user@142.93.152.208)
[09:25:32] *** Joins: harleypig (thelounge@harleypig.com)
[09:25:32] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[09:25:40] *** Joins: remexre (~remexre@user/remexre)
[09:25:40] *** Joins: notevil (~notevil@user/notevil)
[09:25:45] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[09:25:46] *** Joins: vancz (~vancz@user/vancz)
[09:25:52] *** Joins: richrd (~wavi@thelounge/maintainer/wavi)
[09:25:55] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:26:01] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:26:06] *** Joins: baloona (~baloona@mail.baloona.de)
[09:26:27] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[09:26:29] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[09:26:30] *** Joins: bim9262 (~bim9262@user/bim9262)
[09:26:33] *** Joins: icy (~icy@user/icy)
[09:26:33] *** Joins: dambuster (~dambuster@185.193.170.225)
[09:26:35] *** Joins: flyback (~flyback@2601:540:8201:1e60::43a)
[09:26:39] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[09:26:40] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[09:26:42] *** Joins: hexology (~hexology@user/hexology)
[09:26:43] *** Joins: woky (~woky@li1651-31.members.linode.com)
[09:26:48] *** Joins: themill (~stuart@debian/stuart)
[09:26:50] *** Joins: the_rat (~ratto@emily.sorcio.org)
[09:26:50] *** Joins: fakenullie (~nullie@london.nullie.name)
[09:26:52] *** Joins: nepeat (~nepeat@79.110.170.59)
[09:26:53] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[09:26:54] *** Joins: RoadrunnerWMC (~Roadrunne@46.101.129.38)
[09:26:56] *** Joins: byzandula (~byzandula@beerbq.net)
[09:26:57] *** Joins: zoid (~zoid@user/zoid)
[09:26:57] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[09:27:02] *** Joins: grawity (grawity@star.nullroute.lt)
[09:27:06] *** Joins: operational (~operation@imgonnaf.art)
[09:27:09] *** Joins: leosilva (~leosilva@canonical/leosilva)
[09:27:13] *** Joins: _janus (~janus@blotter.ld-linux.so)
[09:27:21] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[09:27:22] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[09:27:35] *** Joins: stranac (~stranac@195.29.239.126)
[09:27:40] *** Joins: laksith (~laksith@laksith.dev)
[09:27:49] *** Joins: DCTWD (~dc@uz.utmappro.com)
[09:27:57] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:27:57] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[09:28:08] *** Joins: towel (~towel@user/towel)
[09:28:56] *** Joins: Repiphany (~Repiphany@user/repiphany)
[09:29:19] *** cammy is now known as foxbox
[09:29:22] *** Joins: Celelibi (celelibi@user/celelibi)
[09:29:23] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[09:30:13] *** Joins: krisd (krisd@s0.mydevil.net)
[09:30:17] *** Joins: bparker (~nobody@user/bparker)
[09:30:17] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[09:30:20] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[09:30:22] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[09:30:23] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[09:30:23] *** Joins: ST47 (~ST47@wikimedia/st47)
[09:30:26] *** Joins: or4n (~or4n@gerbera.qkka.org)
[09:30:55] *** Joins: jessicara (~shirogits@user/jessicara)
[09:31:26] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[09:33:10] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:34:58] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 260 seconds)
[09:35:10] *** Quits: demirok (~bell@user/demirok) (Quit: Leaving.)
[09:37:42] *** Joins: Wulf (~Wulf@user/wulf)
[09:38:11] *** Joins: lyr (~lyr@user/lyr)
[09:38:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[09:41:25] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:42:06] *** Joins: Ekho (~Ekho@user/ekho)
[09:42:53] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[09:43:03] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 264 seconds)
[09:43:47] *** Joins: noord (~noord@user/noord)
[09:45:06] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 244 seconds)
[09:45:16] *** Joins: humberto1 (~humbertow@189.236.62.65)
[09:46:39] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:47:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[09:47:41] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:49:54] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:53:28] *** LabMonkey is now known as Mechanismus
[09:55:21] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[09:55:41] *** Joins: iflema (~ian@user/iflema)
[09:58:25] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:59:23] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[09:59:40] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[10:00:49] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:39ad:55bb:1724:f8b6) (Quit: Leaving)
[10:02:02] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[10:04:57] *** v- is now known as vaio
[10:05:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:06:38] *** Joins: Vonter (~Vonter@user/vonter)
[10:09:12] *** Joins: manti7 (~manti7@176.10.104.94)
[10:09:54] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:10:24] *** Quits: comlord (~Thunderbi@180.108.84.197) (Ping timeout: 268 seconds)
[10:10:33] *** Joins: diamondbond (~diamondbo@175.157.232.104)
[10:11:51] *** Joins: dvx (~dvx@5.181.92.64)
[10:12:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:16:49] *** Joins: upsala (~zcb@185.213.155.232)
[10:17:24] *** Quits: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:d8f5:415f:566c:2f43) (Read error: Connection reset by peer)
[10:18:14] *** Joins: emf (~emf@2620:10d:c090:400::5:b07b)
[10:19:28] *** Quits: emf (~emf@2620:10d:c090:400::5:b07b) (Client Quit)
[10:19:50] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Remote host closed the connection)
[10:20:27] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[10:21:43] <parv> afidegnum, In that question at stack overflow, there is no "demo.html"; nor an indication of source of "ag" -- so I cannot just run your code there to see what is happening. Do note that supplying all that still may not result in a (helpful) response from me (as I may not be able to resolve your issue).
[10:21:50] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[10:22:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[10:24:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:25:15] *** Joins: mamehiko (~robbie@140.254.77.249)
[10:35:03] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[10:35:41] *** Quits: mamehiko (~robbie@140.254.77.249) (Quit: Leaving)
[10:36:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:36:50] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:38:30] *** Joins: y1n (~y1n@91.141.47.184.wireless.dyn.drei.com)
[10:38:51] *** Joins: CyDefect (~troll@213.55.224.219)
[10:39:02] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Read error: Connection reset by peer)
[10:39:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:40:21] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:42:23] <DPA> C:\\ indicates windows. Windows usually uses complicated ACLs, rather than simple unix permissions. It may be possible to map some of those to some extent, but ultimatively, trying to describe windows file permissions using unix permissions doesn't really work.
[10:44:23] *** Joins: RiFo (~RiFo@user/rifo)
[10:44:34] *** Joins: ihristov (~ihristov@85.187.46.226)
[10:45:13] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[10:45:34] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[10:46:14] *** Quits: dorf (~mstendorf@85.184.147.151) (Remote host closed the connection)
[10:47:04] <s98259> I coded an SSH server using the AsyncSSH library and it sometimes needs to prompt the client for a password, how do I hide the input?
[10:47:17] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:47:19] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:48:24] <ede> \N{EMOJINAME} # it's just awesome: https://twitter.com/driscollis/status/1461780882893819905
[10:48:29] <Affliction> s98259: no idea about asyncssh, but a term that might apply is 'echo', either 'local echo' done by the client, or 'remote echo' sent by the server.
[10:48:34] <deniska> s98259: https://asyncssh.readthedocs.io/en/latest/#line-editing set_echo?
[10:48:57] <Affliction> set_echo would be consistant with my theory
[10:49:10] *** Quits: teut (~teut@122.181.77.157) (Ping timeout: 256 seconds)
[10:50:11] <s98259> Oh interesting, I never looked at this section and I should've done, thanks, going to try implementing it now! :)
[10:50:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:51:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[10:51:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:51:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:51:58] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Remote host closed the connection)
[10:52:17] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:2e5d:4d77:81f:a927)
[10:53:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:53:46] *** Joins: pystardust (~pystardus@45.32.119.11)
[10:54:25] <parv> ede, Thanks for the indirect pointer to "unicodedata" in Python & https://unicode.org/charts/charindex.html
[10:54:29] <pystardust> I am trying to understand why my code is not running async here https://paste.rs/SFI.py, when I do 2 get requests at the same time then I can see they happen one after the other
[10:54:35] <parv> s/pointer/&s/
[10:55:34] <ede> parv: has some examples and an answer mentions the opposite direction.
[10:55:46] <parv> ede,Yup; saw that
[10:56:37] <parv> Sorry for the useless use of semi-colon. # Oh the shame!
[10:57:07] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:57:59] *** Joins: seednode (~seednode@user/seednode)
[10:58:27] <deniska> pystardust: 2 requests take about 20 seconds? Or 10?
[10:59:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:00:08] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:00:15] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[11:00:26] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:2e5d:4d77:81f:a927) (Remote host closed the connection)
[11:00:45] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[11:01:51] *** Joins: fikran (~fikran@user/fikran)
[11:02:46] <pystardust> deniska: takes 20 senconds, and the second print happens only after the first finishes loading
[11:03:33] *** Joins: et_ (~et@user/et)
[11:04:17] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[11:04:17] *** et_ is now known as et
[11:05:34] *** Joins: jay-m126 (~jay-m@129.0.76.86)
[11:05:41] *** Joins: jay-m126_ (~jay-m@129.0.76.86)
[11:08:15] <deniska> pystardust: running the exact same code I see two tasks created and then finishing roughly at the same time
[11:08:56] <pystardust> deniska: how did you start the server? Im using :::  uvicorn something:app --reload
[11:09:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:09:30] <deniska> pystardust: that, but without --reload
[11:10:13] <deniska> behaves the same with --reload though
[11:10:14] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:11:52] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[11:12:08] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[11:12:19] <pystardust> deniska: yup, i am not sure whats going on. Even on flask when I try something without async, like I put a sleep(10) [not async regular] to make it blocking then other request wait till this gets executed before starting
[11:12:34] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:12:36] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:13:05] <pystardust> ill maybe make a script to reproduce this error
[11:14:56] <deniska> pystardust: how are you making requests? I am opening two tabs in a browser
[11:15:33] <pystardust> same
[11:16:19] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:17:33] <deniska> pystardust: tried it another browser
[11:17:40] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:17:43] <deniska> seems like chrome(ium) is doing funny business
[11:17:55] <pystardust> oh I am using chromium to do the same
[11:18:04] <pystardust> lemme try curl
[11:19:39] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 264 seconds)
[11:19:57] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:c47b:c7b9:9266:92fb)
[11:20:32] *** Joins: kosh (~kosh@user/kosh)
[11:21:59] <pystardust> deniska: thanks, curl seems to work perfectly
[11:22:25] *** Joins: c_89 (~c_89@151.54.150.116)
[11:22:28] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 260 seconds)
[11:22:31] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[11:23:33] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[11:23:48] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[11:24:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[11:24:16] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[11:24:17] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[11:26:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:26:25] <afidegnum> pary
[11:26:27] <afidegnum> ok
[11:27:12] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:27:30] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:28:16] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:29:24] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:30:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:31:13] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Quit: Leaving)
[11:31:23] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[11:31:36] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:32:22] *** Joins: grooverman (~grooverma@177.95.12.14)
[11:32:49] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[11:33:34] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:33:54] *** Joins: chele (~chele@user/chele)
[11:34:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:35:15] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Ping timeout: 264 seconds)
[11:35:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[11:36:58] <afidegnum> parv: hi, I have modified the code, can you please look at ti ?
[11:37:04] <mxp> s98259: maybe you can try : from getpass import getpass
[11:37:15] <s98259> That wont work.
[11:37:27] <s98259> Because of how sockets work.
[11:37:39] <mxp> oh i see
[11:37:40] <s98259> But... I have got it working with line editing. :)
[11:37:54] <s98259> Thank you though, appraciated! :)
[11:37:55] <parv> afidegnum, Ok
[11:38:51] *** Joins: andi_ (~andi@user/andi/x-3467420)
[11:39:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[11:39:08] *** Joins: palasso (~palasso@user/palasso)
[11:40:39] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[11:40:50] <afidegnum> parv: i'm using agensgraph, you can replace it with your graph db as well
[11:41:32] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:42:32] *** Quits: gitly (~gitly@148.252.128.153) (Ping timeout: 240 seconds)
[11:44:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[11:44:32] *** Joins: gitly (~gitly@85.255.234.32)
[11:44:51] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 264 seconds)
[11:45:08] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:45:39] <s98259> Not sure I'm fully understanding asyncio.
[11:45:42] <s98259> lol
[11:45:48] <s98259> Just tryna think of how to word my issue.
[11:46:17] *** Joins: bindu (~bindu@user/bindu)
[11:46:38] <afidegnum> parv: you can use this reference: https://github.com/rhizome-ai/apache-age-python/blob/main/samples/apache-age-note.ipynb
[11:46:59] *** Joins: arinov (~arinov@213.194.126.155)
[11:47:30] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[11:47:45] *** Joins: usr123 (~usr123@124.253.245.134)
[11:48:02] *** Joins: resmo (~resmo@2a00:d420:9:8a00:4183:b074:ab29:5b15)
[11:48:19] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[11:48:36] *** Joins: greedom (~greedom@x59cc9af9.dyn.telefonica.de)
[11:49:01] *** Joins: rendar (~rendar@user/rendar)
[11:50:14] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[11:51:13] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:9fbf:aa37:8117:d76)
[11:51:16] *** Quits: resmo (~resmo@2a00:d420:9:8a00:4183:b074:ab29:5b15) (Remote host closed the connection)
[11:51:20] *** Joins: usr12338 (~usr123@124.253.245.202)
[11:52:38] *** usr123 is now known as Guest423
[11:52:38] *** usr12338 is now known as usr123
[11:52:48] <usr123> I'm getting this error while using apache thrift: "E AttributeError: type object 'type' has no attribute 'type_spec'", here is the part of the code that I'm using: https://dpaste.org/NFUq
[11:53:13] <usr123> Above paste contains some of the debugging output as well.
[11:54:02] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 260 seconds)
[11:54:35] <parv> afidegnum, Thanks for "graph" reference. No wonder I was confused with "execCypher" usage that dis not seem to encrypt|decrypt anything. The "age" I am superficially familiar with is Go age encryption tool|library (https://github.com/FiloSottile/age)
[11:55:28] *** Quits: Guest423 (~usr123@124.253.245.134) (Ping timeout: 256 seconds)
[11:56:03] <afidegnum> parv: you can use your own graph database too, or a k-v database, like mongo ... ,
[11:56:47] <rindolf> usr123: i dont see the error there
[11:56:55] <s98259> Damnit I can't see afdm muysen
[11:57:03] <s98259> Ugh, damn sun.
[11:57:06] <s98259> Sorry.
[11:57:15] <usr123> Hey rindolf, the error is in the message I sent
[11:57:31] <s98259> Erm... I might post my code because I don't know what's going on but I can point out an idea.
[11:58:20] <usr123> Edited the paste to contain the error as well
[11:58:34] *** Quits: jay-m126_ (~jay-m@129.0.76.86) (Read error: Connection reset by peer)
[11:58:47] *** Quits: jay-m126 (~jay-m@129.0.76.86) (Read error: Connection reset by peer)
[11:59:39] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[11:59:44] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.123)
[12:00:35] *** Joins: jay-m126_ (~jay-m@129.0.76.218)
[12:00:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[12:01:22] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:02:07] <rindolf> usr123: it is not in https://dpaste.org/NFUq
[12:02:50] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:02:59] *** Quits: sharperguy (~sharpergu@89.244.127.7) (Ping timeout: 250 seconds)
[12:03:11] <usr123> rindolf: https://dpaste.org/YHr8 my bad.
[12:04:18] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[12:04:38] *** Joins: vladoski (~vladoski@2001:b07:add:d406:f397:e0da:72dc:b3d7)
[12:04:48] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[12:05:11] *** Joins: mrwick (~mrwick@user/mrwick)
[12:06:46] <parv> afidegnum, Any graph module usage will be a new one for me. The available relevant packages on FreeBSD seems to be altgraph, pygraph, igraph. Is any preferable over the other?
[12:07:10] <rindolf> usr123: where do you access ".type_spec"?
[12:07:20] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[12:07:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:08:15] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[12:08:41] <afidegnum> I tried pygraph before but it's been a while, you can give it a try too
[12:09:10] <afidegnum> no pygraph is for graph plotting
[12:09:44] <afidegnum> parv: are you familiar with mongodb?
[12:10:32] <usr123> rindolf: Umm, I don't its in the thrift library we're using: https://dpaste.org/3cVG
[12:11:18] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:11:42] *** Quits: y1n (~y1n@91.141.47.184.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[12:12:18] <usr123> rindolf: that's here: https://github.com/thriftrw/thriftrw-python/blob/master/thriftrw/spec/common.pyx#L74
[12:13:39] *** Joins: Klinda (~superleag@user/klinda)
[12:15:22] *** Joins: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com)
[12:15:39] <parv> afidegnum, Looks like I am out of my depth with your issue. I have yet to use mongodb.
[12:16:44] *** Joins: shad (~shad@user/shad)
[12:17:01] <afidegnum> ok
[12:19:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:19:53] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[12:20:46] *** Quits: shad (~shad@user/shad) (Client Quit)
[12:22:41] *** Quits: masticass (~gzc@host-85-201-176-158.dynamic.voo.be) (Ping timeout: 256 seconds)
[12:23:45] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:24:24] *** Joins: inomoz (~inomoz@176.59.125.26)
[12:24:42] <rindolf> usr123: maybe your python ver is too new
[12:24:50] *** Quits: diamondbond (~diamondbo@175.157.232.104) (Ping timeout: 268 seconds)
[12:27:53] *** Joins: comet23 (uid528026@user/comet23)
[12:28:22] <usr123> rindold: ...
[12:28:49] <usr123> rindolf: That's too bad... should I be using pyenv rather than default python in mac?
[12:29:19] <afidegnum> parv: any luck?
[12:29:56] <ede> is "too new" actually a thing?
[12:30:55] <supakeen> too new can be a thing in packaging land or if there are any breaking changes, don't know if it applies here just replying to that comment :)
[12:32:24] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[12:32:35] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[12:32:48] <rindolf> usr123: idk
[12:33:43] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[12:34:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:35:01] *** Joins: vaio (~gary@user/ghost)
[12:35:25] *** Quits: greedom (~greedom@x59cc9af9.dyn.telefonica.de) (Remote host closed the connection)
[12:36:02] *** Joins: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr)
[12:36:07] *** dcaro_away is now known as dcaro
[12:37:48] <parv> afidegnum, Sorry, none. Damn FreeBSD mongodb package is installed without included documentation; going to file a bug. Maddening!
[12:38:23] <parv> Sorry not mongodb but pymongo. MongoDB just does not include any doc.
[12:38:46] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:38:50] <deniska> maybe they're doing a debian thing and split docs in the separate package?
[12:39:50] <afidegnum> parv: what other db do you have ?
[12:40:10] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:41:58] <parv> afidegnum, GDBM; I can install DBD or similar. Thing is I need a python driver & its doc.
[12:41:58] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:42:11] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:42:24] <parv> Just installed MonogoDB & pymongo -- need to hunt for the docs.
[12:42:26] *** Quits: vladoski (~vladoski@2001:b07:add:d406:f397:e0da:72dc:b3d7) (Ping timeout: 245 seconds)
[12:43:12] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 260 seconds)
[12:43:12] <afidegnum> parv:  you can use any db you are familiar with but you need to have 2 tables. one for the object, another for it's relation
[12:43:29] <parv> Ah, ok
[12:43:39] *** Quits: jay-m126_ (~jay-m@129.0.76.218) (Ping timeout: 264 seconds)
[12:44:30] <afidegnum> parv: agensgraph is also used as an extension on postgressql
[12:44:30] *** Joins: jay-m126 (~jay-m@129.0.76.211)
[12:44:47] <afidegnum> so if you have postgres, you are good to go
[12:44:59] *** Joins: jay-m126_ (~jay-m@129.0.76.211)
[12:45:46] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[12:45:57] <parv> I do not have postgresql installed
[12:46:34] <parv> afidegnum, I could have just used a dict or two?
[12:47:08] <afidegnum> parv yes, dict is much simpler, since they are based on it
[12:47:29] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 244 seconds)
[12:47:29] *** Joins: soman (~soman@83.139.147.234)
[12:47:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:47:57] *** Joins: mdk (~mdk@python/psf/mdk)
[12:50:01] <afidegnum> parv are you familiar with replit ?
[12:50:12] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[12:50:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:51:24] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:51:27] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 264 seconds)
[12:51:50] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:52:22] <afidegnum> parv: https://replit.com/@alexandropov/DomTreeParsing?v=1
[12:52:26] *** Quits: soman (~soman@83.139.147.234) (Quit: Client closed)
[12:53:49] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[12:54:51] *** Joins: shad (~shad@user/shad)
[12:57:28] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[12:57:40] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 260 seconds)
[12:57:45] *** Quits: afidegnum (~user@41.66.203.201) (Killed (NickServ (GHOST command used by afidegnu`!~user@102.176.94.200)))
[12:57:59] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 264 seconds)
[12:57:59] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 264 seconds)
[12:58:01] *** Joins: afidegnum (~user@102.176.94.200)
[12:58:09] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 268 seconds)
[12:58:09] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[12:58:13] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[12:58:14] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:14] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:15] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 250 seconds)
[12:58:15] *** Quits: comet23 (uid528026@user/comet23) (Ping timeout: 250 seconds)
[12:58:18] <afidegnum> parv: sorry I was disconnected
[12:58:27] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 250 seconds)
[12:58:27] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 250 seconds)
[12:58:34] *** Quits: Darkfoe (sid402081@id-402081.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: nem (sid113421@user/nem) (Ping timeout: 265 seconds)
[12:58:36] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:37] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:58:39] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[12:58:46] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:58:55] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[12:58:56] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[12:59:02] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[12:59:03] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:04] *** Quits: mobius (sid478273@id-478273.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:59:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:11] *** Quits: lidless (lidless@id-523173.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: peac (sid344662@id-344662.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: Venhal (sid515085@id-515085.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[12:59:19] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:59:20] *** Joins: bindu (~bindu@user/bindu)
[12:59:22] *** Quits: dez (uid92154@user/dez) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[12:59:23] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Quits: davef (sid287421@user/davef) (Ping timeout: 268 seconds)
[12:59:24] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[12:59:27] *** Joins: hogarius_ (hogarius@uxbridge.irccloud.com)
[12:59:28] *** Joins: lidless (lidless@tinside.irccloud.com)
[12:59:32] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:59:32] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:32] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:36] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:59:37] *** hogarius_ is now known as hogarius
[12:59:47] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 260 seconds)
[12:59:59] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:59:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 268 seconds)
[13:00:01] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 265 seconds)
[13:00:01] *** Quits: ThothCastel (sid78195@id-78195.tinside.irccloud.com) (Ping timeout: 265 seconds)
[13:00:01] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[13:00:06] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[13:00:21] *** Joins: nem (sid113421@user/nem)
[13:00:21] *** Joins: ThothCastel (sid78195@tinside.irccloud.com)
[13:00:22] *** Joins: fury (uid193779@helmsley.irccloud.com)
[13:00:28] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[13:00:28] *** Joins: dunc (sid16@uxbridge.irccloud.com)
[13:00:29] *** Joins: Darkfoe (sid402081@helmsley.irccloud.com)
[13:00:30] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[13:00:33] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[13:00:35] *** Joins: davef (sid287421@user/davef)
[13:00:42] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[13:00:46] *** Joins: braxas (sid508886@lymington.irccloud.com)
[13:01:01] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Client Quit)
[13:01:12] *** Joins: qpdb (~qpdb@user/qpdb)
[13:01:14] *** Joins: peac (sid344662@hampstead.irccloud.com)
[13:01:28] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[13:01:30] *** Joins: TingPing (sid2800@helmsley.irccloud.com)
[13:01:31] *** Joins: bjs (sid190364@user/bjs)
[13:01:31] *** Joins: eichin (sid27120@tinside.irccloud.com)
[13:01:34] *** Joins: Evolver (sid32215@user/evolver)
[13:01:40] *** Joins: masoudd (~masoudd@user/masoudd)
[13:01:44] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[13:01:46] *** Joins: dez (uid92154@user/dez)
[13:01:52] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[13:01:58] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[13:02:08] *** Joins: r0bby (r0bby@user/r0bby)
[13:02:30] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[13:02:46] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:02:48] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[13:02:53] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[13:02:54] *** Joins: altendky (sid135382@hampstead.irccloud.com)
[13:03:03] *** Joins: jtanner (sid194399@helmsley.irccloud.com)
[13:03:06] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[13:03:09] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:03:13] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[13:03:35] *** Joins: greyblue9 (sid500829@ilkley.irccloud.com)
[13:03:53] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[13:04:00] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:04:10] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[13:04:14] *** Quits: Gamah (~quassel@gamah.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:04:14] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:04:46] *** Joins: coldmountain (sid484352@helmsley.irccloud.com)
[13:04:54] *** Joins: Gamah (~quassel@gamah.net)
[13:04:56] *** Joins: frodl (sid527064@user/frodl)
[13:05:05] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[13:05:08] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[13:05:29] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[13:07:14] *** Quits: jay-m126_ (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[13:07:32] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:07:46] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-58.poda.cz) (Ping timeout: 260 seconds)
[13:07:51] *** Quits: eichin (sid27120@tinside.irccloud.com) (Ping timeout: 245 seconds)
[13:08:02] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[13:08:16] *** Quits: rpittau (sid346891@tinside.irccloud.com) (Ping timeout: 245 seconds)
[13:08:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:08:52] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[13:08:53] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[13:09:04] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[13:09:14] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[13:09:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[13:09:23] *** Quits: sudomann (~sudomann@2601:543:100:2b70:ccbd:117f:1606:2594) (Ping timeout: 264 seconds)
[13:09:32] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 240 seconds)
[13:09:32] *** Quits: davef (sid287421@user/davef) (Ping timeout: 240 seconds)
[13:11:01] *** Joins: davef (sid287421@user/davef)
[13:11:05] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[13:11:11] *** Joins: fikran (~fikran@user/fikran)
[13:11:39] *** Joins: koopman_ (sid466269@ilkley.irccloud.com)
[13:12:15] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[13:12:23] *** Joins: rburton (rburton@user/rburton)
[13:12:35] *** Joins: debnet (sid330295@python/afpy/debnet)
[13:12:59] *** Quits: dre (~dre@2001:8003:c932:c301:331c:7ae7:a9d3:b68) (Quit: Leaving)
[13:13:10] *** Joins: dohtem (uid524096@user/dohtem)
[13:13:32] *** Joins: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com)
[13:13:37] <koopman_> Hi all
[13:13:45] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[13:14:00] <afidegnum> parv: any update?
[13:14:13] *** Quits: koopman_ (sid466269@ilkley.irccloud.com) (Quit: Updating details, brb)
[13:14:44] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[13:15:08] <parv> afidegnum, To group by parent, then for example, you want "ul" connected to "home", "about us" &  "contact us"; "body" connected to "ul" & other elements?
[13:15:24] <afidegnum> no, wait,
[13:15:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:15:40] <afidegnum> there is a simpler demo let me update it
[13:15:55] *** Joins: koopman (sid466269@id-466269.ilkley.irccloud.com)
[13:15:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:26] <parv> afidegnum, Could you update with expected output?
[13:16:39] *** Quits: jay-m126 (~jay-m@129.0.76.211) (Ping timeout: 264 seconds)
[13:16:55] <afidegnum> parv: yes, give me a min
[13:17:24] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[13:18:07] *** Joins: jay-m126_ (~jay-m@129.0.76.218)
[13:20:23] *** Joins: thiras (~thiras@user/thiras)
[13:21:03] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 256 seconds)
[13:21:19] <afidegnum> parv: recheck, i have updated the html for simplicity
[13:21:42] *** Joins: toine42 (~antoine@2001:41d0:e:41f::1)
[13:22:48] *** Joins: Andrynet (~Andrynet@190.152.209.31)
[13:23:14] *** Joins: lyr (~lyr@user/lyr)
[13:23:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:23:59] *** Joins: humberto1 (~humbertow@189.236.62.65)
[13:25:39] *** Quits: gitly (~gitly@85.255.234.32) (Ping timeout: 264 seconds)
[13:27:14] *** Joins: gitly (~gitly@148.252.128.154)
[13:28:03] *** Quits: Andrynet (~Andrynet@190.152.209.31) (Ping timeout: 265 seconds)
[13:28:22] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[13:30:51] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:32:09] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[13:32:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[13:33:17] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[13:33:27] <afidegnum> parv, have you checked pls?
[13:33:31] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[13:33:41] *** Joins: Minori (~Minori@user/minori)
[13:34:20] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 265 seconds)
[13:34:32] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[13:35:53] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Client Quit)
[13:36:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[13:37:02] *** Parts: royaljelly (~royaljell@user/royaljelly) ()
[13:37:26] *** Quits: gitly (~gitly@148.252.128.154) (Ping timeout: 245 seconds)
[13:37:31] *** Quits: usr123 (~usr123@124.253.245.202) (Quit: Client closed)
[13:37:39] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[13:37:43] *** Quits: Minori (~Minori@user/minori) (Quit: Client closed)
[13:38:18] *** Joins: sudomann (~sudomann@2601:543:100:2b70:ccbd:117f:1606:2594)
[13:38:29] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[13:40:44] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[13:41:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:41:54] *** Joins: gitly (~gitly@148.252.128.154)
[13:42:28] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[13:43:24] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 260 seconds)
[13:43:47] <parv> afidegnum, I did; looked the same on Stackoverflow.
[13:44:15] <afidegnum> yes,
[13:44:24] <afidegnum> i wanted to link the tags
[13:44:48] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[13:44:58] <afidegnum> parv:    i.e html <-> head
[13:45:26] *** Joins: Gerula_ (~Gerula@user/gerula)
[13:45:26] *** Gerula is now known as Guest5072
[13:45:26] *** Quits: Guest5072 (~Gerula@user/gerula) (Killed (zirconium.libera.chat (Nickname regained by services)))
[13:45:26] *** Gerula_ is now known as Gerula
[13:45:54] <afidegnum> body <-> html, div <-> body
[13:46:33] *** Joins: lyr (~lyr@user/lyr)
[13:46:55] <Swayze> oO
[13:47:07] <Swayze> theres a dom for that
[13:47:32] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 240 seconds)
[13:47:39] <afidegnum> Swayze, but i'm saving the dom tree into the db.
[13:47:50] <Swayze> nice nice
[13:47:52] <Swayze> but why
[13:47:54] *** Joins: nomic (~nomic@185.192.69.82)
[13:47:54] <afidegnum> and i want to keep the record the relationship between them
[13:48:02] <Swayze> why not just save it as a dom object
[13:48:04] <Swayze> and read it back as one
[13:48:30] <afidegnum> Swayze yes, it can be done but in case of template editing, some text needs to be flexible in editing
[13:48:58] <afidegnum> so the purpose of this exercise is to be able to capture the textual values and modify them afterwards,
[13:49:20] <afidegnum> and re-render the edited text
[13:49:43] <Swayze> so like a content editor for html
[13:49:56] <afidegnum> exactly
[13:50:27] <Swayze> still in the dom you can get the inner text
[13:50:35] <Swayze> that should work for editing the text
[13:50:44] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[13:50:54] *** Joins: legola (~legola@46.235.101.181)
[13:50:55] <afidegnum> do you have an example?
[13:51:00] <yourfate> is there a shorthand for calling a function and passing `None` for every argument it may have?
[13:51:15] <yourfate> I imagine some sort of `**None` type trickery
[13:51:28] <Swayze> https://www.w3schools.com/jsref/prop_node_innertext.asp
[13:51:34] <Swayze> heres a bunch of examples at the bottom
[13:51:42] <Swayze> you can get the inner text in a few different nice ways
[13:52:14] <raek> yourfate: it is possible to look up how many arguments the function takes, but since that is a bit complicated I woulnd't call that a shortcut
[13:52:24] <OMGOMG> yourfate: when would you ever want that?
[13:52:25] <afidegnum> yes, it's inner-text that I will use, i'm using lxml for dom parsing,
[13:52:28] <Swayze> isnt it generally None if you dont pass it in?
[13:52:46] <yourfate> OMGOMG: when i'm too lazy to implement an empty constructor for a dataclass without default values :D
[13:52:49] <Swayze> why wound you need to pass a None
[13:53:04] <raek> yourfate: is it possible to change the function so that it has None as the default for all those parameters?
[13:53:07] <yourfate> but want an empty one as all fields get filled by a deserialize function
[13:53:33] <afidegnum> Swayze: the purpose is to capture the text and the and the related DOM node, once modified, that node can be re-rendered
[13:54:17] <raek> if the number of arguments is known, then you could make list of Nones something like this: count*[None]
[13:54:40] <yourfate> I think the proper way to do it would be acutally implelent a constructor that uses the deserialize
[13:54:45] <yourfate> i'll look into this
[13:54:50] *** Quits: CyDefect (~troll@213.55.224.219) (Ping timeout: 260 seconds)
[13:55:15] <OMGOMG> yourfate: sounds like a recipe for disaster
[13:55:21] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 245 seconds)
[13:55:22] <yourfate> it does?
[13:55:34] <OMGOMG> no, that last thing you said sounded sensible
[13:55:42] <yourfate> ah good
[13:56:46] <yourfate> ideally I'd make it some sort of classmethod, I'm sure python has that functionality
[13:56:52] <yourfate> like a `.from_binary()`
[13:56:53] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[13:57:23] <supakeen> Python has classmethods yes, and this is a common usecase.
[13:57:43] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[13:57:57] <afidegnum> parv: the essense is to return a the id of the inserted record from the curreont and previous loop
[13:59:23] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:00:36] *** Quits: Douwd (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[14:01:20] <parv> afidegnum, Ok. I was too far off; can't do it right now.
[14:01:27] <afidegnum> ok
[14:02:15] *** Quits: jay-m126_ (~jay-m@129.0.76.218) (Ping timeout: 264 seconds)
[14:02:23] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:03:01] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 250 seconds)
[14:03:46] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[14:04:33] *** Joins: rapha (~jrs@user/rapha)
[14:04:42] <rapha> good morning (UGT) everyone!
[14:04:50] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[14:04:55] <rapha> reading someone else's code and there's a bit that has me very confused...
[14:05:55] <rapha> in https://gist.github.com/sixtyfive/360e85e87dd82c27e2428974053aae5e ... does the "b" in line 3 come into being in line 4? and if so, how is it in scope in line 3?
[14:06:51] <deniska> rapha: it's a list comprehension, the syntax is [expr(thing)v for thing in things]
[14:06:57] <deniska> rapha: it's a list comprehension, the syntax is [expr(thing) for thing in things]
[14:07:28] <deniska> in this case they put a newline before `for thing in things` part for formatting purposes
[14:08:15] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 264 seconds)
[14:08:24] <Jong> Seeing list comprehensions are visually refreshing. I love them
[14:08:44] <Swayze> brilliant
[14:08:46] <Swayze> https://time.com/5948677/four-day-work-week-spain/
[14:09:01] <rapha> oooh
[14:09:08] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[14:09:12] <rapha> without the newline i think i would have understood it
[14:09:16] <rapha> thanks for helping me see, deniska :)
[14:09:17] <dreamer> I've always considered 4 days as fulltime
[14:09:26] <Swayze> yeah but now its actually real
[14:09:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:09:58] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[14:10:05] *** Joins: chele_ (~chele@user/chele)
[14:10:24] <Jong> I work zero days a week because coding is fun
[14:10:30] *** Joins: TJ- (~root@about/linux/staff/tj-)
[14:11:37] <rapha> deniska: i've changed it to be like so: https://gist.github.com/sixtyfive/360e85e87dd82c27e2428974053aae5e ... is there a more DRY way to do that, though? something like making a list for the strings that are the first argument of findAll() ... but then how to deal with the "if not" part?
[14:13:42] <deniska> rapha: honestly looks fine, any "non-DRY" solution will be longer or less clear than that
[14:13:58] *** chele_ is now known as chele
[14:14:16] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[14:14:21] <rapha> alright, i'll keep it like that then until a third or fourth variant crop up. thanks again!
[14:14:34] *** Quits: p-i-_ (~Ohmu@223.206.149.105) (Read error: Connection reset by peer)
[14:14:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[14:15:11] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[14:17:26] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 245 seconds)
[14:19:05] *** Joins: maum (~maum@1.245.147.30)
[14:19:09] <maum> hello
[14:19:39] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[14:19:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:19:41] <maum> Is there a way to draw fractal easily from image file?
[14:20:01] *** Joins: masoudd (~masoudd@user/masoudd)
[14:20:07] <raxor2k> graingert: the socket server hangs for 1sec when retreiving new data from db. can "backgroundTasks" solve this ?
[14:20:08] <maum> Is there a good resource to use in class?
[14:20:25] *** Joins: canarts (~stranac@195.29.239.126)
[14:21:11] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[14:21:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:22:10] *** Joins: pro_z (~pro_z@37.214.63.5)
[14:22:26] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 245 seconds)
[14:22:53] <graingert[m]> raxor2k: How are you retrieving data from the db?
[14:22:57] <graingert[m]> And what do you mean by hangs
[14:23:12] *** Joins: arinov (~arinov@213.194.126.155)
[14:23:18] *** Quits: inomoz (~inomoz@176.59.125.26) (Read error: Connection reset by peer)
[14:23:23] <rapha> hmm not nice for newcomers that "%s, %s" % ["blah", "blah"] doesn't work ... need () instead of [] apparently :(
[14:23:25] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[14:23:46] *** Joins: odrling (~odrling@korone.aidoru.agency)
[14:23:49] *** Joins: toine (~antoine@2001:41d0:e:41f::1)
[14:24:00] *** Quits: toine42 (~antoine@2001:41d0:e:41f::1) (Read error: Connection reset by peer)
[14:24:38] <raxor2k> graingert: i have a open channel to my socket server, which when i connect i get received numbers from 0 to 100 in a infinite loop. once the asyncio task for retreiving the data from db happens, i can see the printing hanging/stopping for 1 sec. Once i deactivate the function that retreieve the data, this does never happe
[14:25:12] <raxor2k> also: the same case is if i use a post request to another api and i wait for answer, same thing happens
[14:25:21] *** Joins: lyr (~lyr@user/lyr)
[14:25:31] *** Joins: slav0nic (slav0nic@python.su)
[14:26:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[14:26:28] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:28:43] <nedbat> maum: what sort of fractal did you want to draw from what sort of image?
[14:30:29] *** Joins: sagax (~sagax_nb@user/sagax)
[14:31:51] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[14:31:57] <maum> nedbat: Is there a place to upload image?
[14:32:02] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:32:13] <nedbat> maum: imgur.com
[14:32:13] *** Joins: Syzygy (~Syzygy@dynamic-2l4rd4y3qrlcfmesry-pd01.res.v6.highway.a1.net)
[14:32:13] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:32:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:32:39] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: smeeagle)
[14:32:46] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:49] *** Quits: Samian (~s@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[14:33:17] <maum> nedbat: https://imgur.com/a/77U54HI
[14:33:53] <supakeen> Those are pretty cool.
[14:34:11] <nedbat> maum: i like it :)  I wouldn't try to recreate those from the pictures, but from first principles
[14:34:15] <supakeen> Do you want to draw the same kind of fractals as in the image or do you want to take the fractals on the image as input?
[14:34:25] <supakeen> The latter is a bunch harder :(
[14:34:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:34:35] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[14:35:28] *** Joins: maum (~maum@1.245.147.30)
[14:35:32] <maum> re hello
[14:36:05] <supakeen> Do you want to draw the same kind of fractals as in the image or do you want to take the fractals on the image as input?
[14:36:32] <maum> I want make code to draw these image in python
[14:36:39] <maum> Is this difficult?
[14:37:22] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[14:37:23] <supakeen> I don't know if it's difficult, that probably depends a bit on what you already know :)
[14:37:31] <supakeen> But drawing shapes is very doable.
[14:37:47] <maum> If I cannot, I want just clean image from image file
[14:37:58] <Syzygy> I'm looking for an old version of a pip library, specifically tensorflow-gpu 2.0.0b1. I do have a docker image where this is installed as well. How would I go about installing this in a new docker image?
[14:39:10] <maum> nedbat: Can we draw fractals from image in python?
[14:39:11] *** Joins: f0fz (~f0fz@122.11.212.225)
[14:39:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:39:42] <nedbat> Syzygy: it looks like they've removed that package from pypi.  do you really need the beta?
[14:39:58] <nedbat> maum: i wouldn't do it from an image. but you can definitely draw images like that.
[14:40:12] *** Quits: f0fz (~f0fz@122.11.212.225) (Client Quit)
[14:40:16] <Syzygy> nedbat, truth be told, it's not for me, it's my girlfriends problem. but yes, she needs it.
[14:40:19] <maum> Is there a easy way?
[14:40:44] <nedbat> maum: you would need to understand the logic and math behind the geometry of those images
[14:40:48] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:40:59] <nedbat> Syzygy: i don't know if there is another source for that package
[14:41:30] <Syzygy> nedbat, it's installed in a docker container she has access to. is that an option?
[14:41:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:41:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:42:09] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[14:42:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:42:20] <maum> nedbat: I see
[14:43:22] <maum> Is there a good python resource to use in class?
[14:43:36] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 268 seconds)
[14:43:39] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 264 seconds)
[14:44:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.123) (Ping timeout: 245 seconds)
[14:44:59] <nedbat> Syzygy: maybe conda has it? I don;t know how to see old versions: https://anaconda.org/anaconda/tensorflow-gpu
[14:45:11] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[14:45:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:46:08] <nedbat> maum: here's a way to do it with turtle: https://www.geeksforgeeks.org/koch-curve-koch-snowflake/
[14:46:37] *** Joins: cursey (~cursey@user/cursey)
[14:46:39] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:945e:d325:846e:7642)
[14:47:07] *** Joins: zoneu (~zoneu@user/zoneu)
[14:47:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:58] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:9fbf:aa37:8117:d76) (Remote host closed the connection)
[14:48:06] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[14:48:11] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:4a90:b062:34d4:9a98)
[14:48:46] <Syzygy> nedbat, good idea, could be because we're not too familiar with conda, but conda search tensorflow-gpu gives zero results. conda search tensorflow gives several but of course since there doesn't appear to be GPU versions, none match
[14:49:48] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[14:52:34] *** Joins: luva2 (~luva@37.120.197.45)
[14:52:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:53:11] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:53:12] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[14:53:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:36] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[14:53:59] *** Quits: luva (~luva@37.120.197.54) (Ping timeout: 256 seconds)
[14:53:59] *** luva2 is now known as luva
[14:54:24] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:54:49] *** Quits: c_89 (~c_89@151.54.150.116) (Quit: Connection closed)
[14:56:58] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:57:36] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:57:54] *** Joins: fandre1986 (~fandre198@62.67.214.101)
[14:58:05] *** Quits: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff) (Quit: Client closed)
[14:58:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:58:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:59:13] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[15:00:27] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[15:01:17] *** Joins: jyu_s (~f0fz@122.11.212.225)
[15:01:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:02:02] <nedbat> Syzygy: i'm not too familiar with (ana)conda either. I don't know why my package appears in three places as three different versions: https://anaconda.org/search?q=coverage
[15:02:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:02:58] <nedbat> (oops, five places, five different versions)
[15:03:14] <Celelibi> I'm looking for an cool mini-project that would include writing / using iterators and generators.
[15:04:04] <Celelibi> I was thinking of making them write a taquin solver using networkx to make them write and use modules. But I'm not sure where the iterables would come in.
[15:04:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:04:12] <supakeen> nedbat: and only 1 being up to date at that
[15:04:26] *** Quits: Jefren1 (~Jefren@70.35.66.187) (Ping timeout: 260 seconds)
[15:04:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:04:34] *** Joins: MacGyver (~macgyver@user/macgyver)
[15:04:39] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:c47b:c7b9:9266:92fb) (Ping timeout: 264 seconds)
[15:05:10] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[15:05:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 264 seconds)
[15:05:55] *** Joins: Ilyu_ (~quassel@166.215.82.79.rev.sfr.net)
[15:06:17] *** Joins: Jefren1 (~Jefren@70.35.66.109)
[15:09:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:10:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:06] <nedbat> Celelibi: adventofcode could be a good source.  I did a talk about one puzzle: https://nedbat.github.io/adventures_prz/prz/adventures.html#1
[15:11:00] <Celelibi> Hm... Actually the taquin (or 15-puzzle) is not a good fit for networkx, it would require generating all the possible nodes beforehand.
[15:11:51] *** Joins: delvian (~delvian@41.13.204.1)
[15:11:52] <Celelibi> Yeah, I did AoC last year.
[15:14:02] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[15:14:31] *** Quits: Jefren1 (~Jefren@70.35.66.109) (Ping timeout: 245 seconds)
[15:14:56] <menace> is there a python module where i can do gnupg/openpgp compatible operations (like signing/verification for example) without having gnupg/pgp installed?
[15:15:20] <nedbat> menace: "cryptography" might do that
[15:15:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:15:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:53] <jbe> py-pgp claims to have that design goal from a cursory web search
[15:16:43] *** Joins: Jefren1 (~Jefren@70.35.67.32)
[15:16:44] *** dcaro is now known as dcaro_lunch
[15:18:22] <Wulf> system requirements: build-essential. Why?!
[15:18:45] <menace> py-pgp looks better than cryptography. the latter is more x509 like.. though py-pgp is old
[15:19:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:19:36] *** Joins: abip20 (~abdullah@user/abip20)
[15:19:44] <nedbat> Wulf: if you are asking about cryptography, it's because it has compiled components.  you can also use wheels.
[15:20:07] <Wulf> nedbat: no, asking about py-pgp
[15:20:32] *** Joins: fikran (~fikran@user/fikran)
[15:20:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:21:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:48] *** Joins: binary011 (~binary01@192.110.171.216)
[15:22:03] *** Quits: Jefren1 (~Jefren@70.35.67.32) (Ping timeout: 264 seconds)
[15:23:17] <supakeen> I'd be very careful of any library reimplementing cryptographic primitives and especially having to be compatible with an ecosystem.
[15:23:36] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[15:23:40] <supakeen> Then again, with GPG there aren't many choices. Most of them will (sometimes less sanely) just subprocess the gpg tools.
[15:24:05] *** Joins: Jefren1 (~Jefren@70.35.67.203)
[15:24:56] <supakeen> Specifically `python-gnupg` is the last one I looked at and AFAIK the most decent; `gnupg` is a fork of `python-gnupg` that fixed things that are also fixed in the actually maintained upstream.
[15:24:58] <supakeen> Etc.
[15:26:31] <jbe> for sure.
[15:26:36] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[15:28:43] *** Joins: sazawal (~sazawal@223.190.87.36)
[15:29:51] *** Quits: Jefren1 (~Jefren@70.35.67.203) (Ping timeout: 264 seconds)
[15:29:51] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[15:31:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:32:01] *** Quits: binary011 (~binary01@192.110.171.216) (Quit: Leaving)
[15:32:25] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Client Quit)
[15:32:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:33:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[15:34:13] *** Joins: Jefren1 (~Jefren@70.35.66.192)
[15:35:41] *** Joins: mihael (~mihael@49.145.40.69)
[15:35:58] <mihael> Anyone stumbled on this error on osx? ImportError: cannot import name 'PackageFinder' from 'pip._internal.index'
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:37:09] <raxor2k> bjs/graingert: before i share code, can you please connect to this address? ws://165.22.179.18:5080/ws/user2/zana
[15:37:14] <raxor2k> then you can see what the problem is
[15:37:15] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[15:38:18] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[15:38:31] <graingert[m]> raxor2k: You can make an asciinema
[15:38:41] *** Quits: Jefren1 (~Jefren@70.35.66.192) (Ping timeout: 245 seconds)
[15:40:03] <raxor2k> graingert: not working in windows ?
[15:40:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[15:40:35] *** Joins: Jefren1 (~Jefren@70.35.67.155)
[15:41:09] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:41:24] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[15:41:45] *** Joins: odrling (~odrling@korone.aidoru.agency)
[15:42:09] <nedbat> what is the ws: scheme?
[15:42:31] <supakeen> WebSocket!
[15:42:39] <supakeen> (and wss being WebSocket Secure)
[15:42:41] *** Quits: mihael (~mihael@49.145.40.69) (Quit: Client closed)
[15:42:57] <supakeen> (you can use `wscat` if you feel like connecting to arbitrary things)
[15:43:01] *** Joins: bindu (~bindu@user/bindu)
[15:43:59] *** Joins: Batzy_ (~quassel@user/batzy)
[15:46:30] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 268 seconds)
[15:47:46] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[15:48:02] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:10] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[15:52:37] <raxor2k> graingert: here is a video showing the problem: https://streamable.com/gz316p
[15:53:03] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[15:54:44] <raxor2k> my question still: is it an asyncio issue or a fastapi issue, and if so, will this "backgrounTasks" help: https://fastapi.tiangolo.com/pl/tutorial/background-tasks/ ?
[15:55:09] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:56:04] <apollo13> is your db access async?
[15:56:16] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:56:36] <apollo13> probably not so that will simply block your process
[15:56:59] *** Joins: Batzy (~quassel@user/batzy)
[15:58:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:59:06] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 245 seconds)
[15:59:13] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:00:50] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:01:09] <graingert[m]> <raxor2k> "graingert: here is a video..." <- Can you show your code?
[16:01:16] <graingert[m]> As a text file, it's not clear in the video
[16:02:27] *** Joins: zeden (~zeden@user/zeden)
[16:04:49] *** Joins: bloody (~bloody@user/bloody)
[16:05:57] <raxor2k> graingert: https://bpa.st/EAIA
[16:12:04] *** Joins: NIKKE (~NIKKE@dyx0pyyg1-tjpj-m-tgxt-3.rev.dnainternet.fi)
[16:12:33] <NIKKE> hello, can i make a python suggestion here, or is it for somewhere else
[16:12:39] <NIKKE> python compiler
[16:12:45] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:13:12] <NIKKE> anyway,  running code summing =+ number   doesnt warn, would be nice if it did
[16:13:50] <Yhg1s> NIKKE: I'm not sure what kind of warning you're looking for.
[16:14:24] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:14:25] *** Quits: nomic (~nomic@185.192.69.82) (Quit: Leaving)
[16:14:27] <NIKKE> well it is obviously meant to be summing += number
[16:14:27] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 256 seconds)
[16:14:41] <NIKKE> the plus sign in =+ number  does nothign
[16:15:14] <Yhg1s> That's more terrain for linters, but you can certainly suggest it. I'm not sure how feasible it is with the new parser (the old parser made it very unpractical), so who knows. bugs.python.org would be where to file the suggestion.
[16:15:33] *** Joins: Batzy_ (~quassel@user/batzy)
[16:17:52] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 260 seconds)
[16:18:22] <parv> NIKKE, Good one; SyntaxError I would have expected
[16:18:43] <nedbat> even default pylint doesn't warn about ` x =+ 1 `
[16:19:34] *** Quits: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net) (Ping timeout: 260 seconds)
[16:20:16] <mrwick> doex x =+ assign 1 to x?
[16:20:27] <Yhg1s> mrwick: it assigns += to x.
[16:20:29] <Yhg1s> eh, +1
[16:20:51] <mrwick> oh right, there the whitespace does not count
[16:21:02] <Yhg1s> Just like almost anywhere, yes.
[16:21:25] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:22:13] <bjs> parv: a SyntaxError is a little extreme, is it not?
[16:22:17] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[16:22:26] <Yhg1s> It won't be a SyntaxError, no.
[16:22:28] <bjs> to enforce a space between the = and the expression
[16:22:37] <Yhg1s> I'm not even sure it's reasonable to raise a warning about it.
[16:22:42] <Yhg1s> (in the compiler, that is. In linters, sure.)
[16:22:43] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[16:22:46] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 260 seconds)
[16:22:56] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:23:33] *** Joins: luischi (~luigi@80.30.201.209)
[16:23:37] *** Joins: shad (~shad@user/shad)
[16:23:39] <bjs> It's too borderline to say, you'd have to take a vote :P
[16:24:25] <parv> bjs, Nah. I would be fine if that would be available as non-default option
[16:24:39] <bjs> parv: to require spaces?
[16:24:40] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[16:24:50] <bjs> or to specifically forbid =- and =+
[16:24:53] <Yhg1s> It's not really a question about what's fine, but about the code it will break.
[16:25:03] <CuriousErnestBro> it's python time!
[16:25:08] <Yhg1s> (and whether that code is currently incorrect.)
[16:25:09] <deniska> a ,= b # gun operator
[16:25:12] <Lando-SpacePimp> CuriousErnestBro, MY MAN!
[16:25:14] <parv> bjs,  the latter: =[-+] & others
[16:25:19] <CuriousErnestBro> been a long time tbh Lando-SpacePimp
[16:25:37] <bjs> parv: others?
[16:26:09] <Lando-SpacePimp> CuriousErnestBro, yeah, well I'm a virologist, so like my current limit is being able to interpret other people's code with a lot of effort
[16:26:33] <bjs> I guess there's ~
[16:26:35] <Lando-SpacePimp> I just want to be able to tweak code already made
[16:26:46] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:26:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Quit: Leaving)
[16:26:59] <CuriousErnestBro> I'm taking an algorithms course and need to basically do this problem: find 2 paths in a graph that are at least distance d apart
[16:27:33] <parv> bjs, I was expecting =[%/] to be ignored too but they are already SyntaxError
[16:27:35] <CuriousErnestBro> imagine 2 people trying to keep social distance while walking through the university building :^)
[16:27:45] <bjs> parv: yes they are not valid operators
[16:27:48] <NoImNotNineVolt> CuriousErnestBro: does the solution need to be efficient?
[16:27:51] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 265 seconds)
[16:27:51] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 245 seconds)
[16:28:10] <CuriousErnestBro> NoImNotNineVolt as much as possible, each player can also stay at his current spot btw
[16:28:21] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:28:32] <CuriousErnestBro> since the deadline is in 10 hours, I'm ok with *a* solution lol
[16:28:50] <CuriousErnestBro> that brings me to my question:
[16:29:17] <CuriousErnestBro> I'm implementing kruskal's algorithm (on a numpy array), does python have something like "integer.MAX_VALUE"
[16:29:24] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[16:29:36] <CuriousErnestBro> I'm guessing no because ints are arbitrary sized
[16:29:39] <CuriousErnestBro> so I'll have to do INFINITY = 10000 at the top of my code?
[16:29:45] *** Joins: odrling (~odrling@korone.aidoru.agency)
[16:29:57] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:30:01] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:30:07] <CuriousErnestBro> uhh i mean floyd warshall algorithm
[16:30:23] <parv> Yhg1s, If people are worried are about =+ being SyntaxError by default (without any turning of knobs in form of option or env variable), then I would be happy to turn that knob myself for myself
[16:30:55] <bjs> parv: the problem with making it a SyntaxError by default is that it is not a SyntaxError now, and people can (and probably some do) write =+ and =- and =~ in their code
[16:31:39] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 250 seconds)
[16:32:00] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:32:07] <graingert[m]> <raxor2k> "graingert: https://bpa.st/EAIA" <- yep it seems you're using the sync engine not the async engine
[16:32:39] <parv> bjs, Right, I am asking for a mechanism to make that to be an error that one would need to invoke, thus not by default.
[16:32:46] <graingert[m]> not sure what next(async_DB()) is supposed to do
[16:32:55] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Client Quit)
[16:33:01] <NIKKE> You could make it a warning so it doesnt break current code
[16:33:08] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:33:09] <NIKKE> if people really code like that on purpose
[16:33:10] <NoImNotNineVolt> CuriousErnestBro: i got nothin, sorry :P
[16:33:16] <CuriousErnestBro> oh there's np.Infinity
[16:33:35] <CuriousErnestBro> NoImNotNineVolt I'll try a BFS lol
[16:34:26] *** Joins: wind104729 (~wind10472@user/wind104729)
[16:34:35] <CuriousErnestBro> they say to consider breaking down one move (movements of both players) into two discrete moves
[16:34:42] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:34:44] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:34:52] *** Parts: wind104729 (~wind10472@user/wind104729) ()
[16:34:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:34:59] <CuriousErnestBro> this can reduce complexity by the number of edges, i don't see how lol
[16:35:02] <parv> (Oye! Rather late here ...)
[16:35:07] <graingert[m]> raxor2k: you need https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html#sqlalchemy.ext.asyncio.AsyncSession but it looks like you're using sqlalchemy.orm.Session
[16:35:08] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:35:38] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[16:35:41] *** dcaro_lunch is now known as dcaro
[16:36:16] <NoImNotNineVolt> i can think of an O(n^4) solution i think
[16:36:33] <NoImNotNineVolt> oh no wait, way worse than that
[16:36:35] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[16:37:23] <graingert[m]> raxor2k: btw I can't see messages you send me via DM on irc
[16:37:26] *** Quits: Linux77 (~Linux7_7@186.233.179.193) (Remote host closed the connection)
[16:37:26] <NoImNotNineVolt> two bfs and an O(n^2) distance check
[16:37:26] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 245 seconds)
[16:37:40] <NoImNotNineVolt> whatever the complexity of that is :P
[16:38:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:27] *** Joins: Linux77 (~Linux7_7@186.233.179.193)
[16:38:58] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[16:38:58] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[16:39:03] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:40:55] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:42:06] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:42:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:43:32] <raxor2k> graingert: ok so to confirm this, im gonna swap the db function with a post request function
[16:43:42] <raxor2k> if the problem is not there then, then ..
[16:43:49] <graingert[m]> via httpx right?
[16:43:53] <graingert[m]> httpx.AsyncClient?
[16:43:59] *** Quits: fandre1986 (~fandre198@62.67.214.101) (Quit: Connection closed)
[16:44:08] <wyre> why `bytes.fromhex(hex(zlib.crc32(b'\x01\x03\x07\x01\xff\x06') & 0xffffffff))` throws me a ValueError?
[16:44:23] <wyre> is not converting hex() the whole argument to hexadecimal value?
[16:44:52] *** Quits: dambuster (~dambuster@185.193.170.225) (Remote host closed the connection)
[16:45:11] <bjs> wyre: which of the calls is giving a ValueError
[16:45:12] <CuriousErnestBro> i get to use walrus!
[16:45:12] <CuriousErnestBro> if dist[i][j] > (smaller_dist := dist[i][k] + dist[k][j]):
[16:45:15] <CuriousErnestBro> :D
[16:45:42] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[16:45:57] <wyre> bjs, apparently fromhex()
[16:46:06] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:46:17] <wyre> https://bpa.st/UAFQ
[16:46:20] *** Quits: davor (~davor@user/davor) (Ping timeout: 260 seconds)
[16:46:28] <Yhg1s> wyre: because hex() produces '0x...'
[16:46:28] <bjs> wyre: oh, hex() returns something like "0x<hex number>"
[16:46:33] <bjs> the 0x isn't valid hex
[16:46:42] <wyre> lol
[16:46:44] <deniska> wyre: you probably want (zlib.crc32(b'\x01\x03\x07\x01\xff\x06') & 0xffffffff).to_bytes(4, 'little')
[16:46:50] <deniska> wyre: (or 'big')
[16:47:47] <deniska> and zlib.crc32 already returns an integer up to 32 bits unsigned, no need to `& 0xffffffff` it
[16:47:51] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 264 seconds)
[16:47:58] *** Joins: davor (~davor@user/davor)
[16:48:07] <bjs> wyre: also hex() might not return a properly-padded number. I agree with deniska that it'll be easier to take the number and turn it into bytes without going through hex at all
[16:48:07] <deniska> zlib.crc32(b'\x01\x03\x07\x01\xff\x06').to_bytes(4, 'little')
[16:48:27] <wyre> I see
[16:49:47] <wyre> bjs, but that is just the CRC; right?
[16:50:05] <wyre> is there also a crc16?
[16:50:27] <bjs> wyre: i'm not sure what you mean
[16:50:37] <wyre> I just need 2 bytes of CRC
[16:50:39] <bjs> wyre: bytes.from_hex has to read 2 hex chars at a time
[16:50:43] <wyre> so I guess crc32 is not the most apropriate
[16:51:25] <deniska> wyre: are you just looking for a 16 bit checksum?
[16:51:30] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:51:51] *** Quits: evilroot (~evilroot@user/evilroot) (Quit: The Lounge - https://thelounge.chat)
[16:52:35] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:52:41] *** Joins: chromis (sid150893@tinside.irccloud.com)
[16:53:02] *** Joins: ano (~ano@user/ano)
[16:53:19] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:53:35] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:55:15] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[16:55:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:56:00] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:56:05] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:58:30] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[17:03:45] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[17:03:48] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::56df)
[17:04:09] *** Quits: Jefren1 (~Jefren@70.35.67.155) (Ping timeout: 250 seconds)
[17:05:34] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:06:17] *** Joins: Jefren1 (~Jefren@206.253.157.227)
[17:07:18] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[17:07:51] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[17:08:27] <wyre> deniska, I'm not sure
[17:08:53] <deniska> What are you trying to achieve then? :)
[17:08:54] <wyre> the protocol document talks about 4bit CRC
[17:09:07] <deniska> wyre: is it an existing protocol you're trying to implement?
[17:09:08] <wyre> so it's actually a byte for CRC
[17:09:19] <wyre> deniska, yes, but it's proprietary
[17:09:22] <deniska> 4 bits is not enough bits for a byte
[17:09:37] <wyre> deniska, sure, half byte, I meant
[17:09:52] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[17:10:13] <deniska> I mean, then you need to know what kind of CRC it needs
[17:10:25] <deniska> there're many different variants of CRCs out there
[17:10:41] <wyre> deniska, sure, has zlib all of them?=
[17:10:46] *** Quits: Jefren1 (~Jefren@206.253.157.227) (Ping timeout: 245 seconds)
[17:11:08] *** Joins: nyah (~nyah@94.6.71.219)
[17:11:16] <deniska> wyre: I think zlib only has whatever's needed for zlib compression algorithm
[17:12:23] <wyre> I actually need a CRC of 2bytes
[17:12:39] *** Joins: Jefren1 (~Jefren@206.253.157.229)
[17:13:03] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Ping timeout: 264 seconds)
[17:13:59] *** Quits: esv (~esv@216.237.228.11) (Remote host closed the connection)
[17:14:44] *** Joins: NeoCore_ (~neocore@37.120.204.180)
[17:14:46] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[17:15:01] *** Joins: Douwd (daniel@crux.bsdpro.net)
[17:15:18] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:15:29] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[17:15:47] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Client Quit)
[17:15:50] <wyre> how can I search with pip? pip search is giving me an XMLRPC error because of request faild
[17:16:02] <wyre> apparently the search will be dropped in a near future
[17:16:25] <deniska> the protocol should specify which kind of crc it wants
[17:16:34] <grym> wyre: pip install pip-search
[17:16:45] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[17:16:51] <grym> https://pypi.org/project/pip-search/
[17:17:04] *** Joins: Macuser (~Macuser@2600:1003:b45c:fe2b:fc63:df63:50f0:5d65)
[17:17:15] <Yhg1s> or, just search with pypi.org (or any web search engine).
[17:17:29] <wyre> deniska, sure, it is crc of 16 bits
[17:17:36] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 260 seconds)
[17:17:55] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[17:17:57] <Yhg1s> wyre: it's not just about how many bits it is, but also how it's calculated.
[17:18:01] <azidhaka> Hi everyone, i have a string a = "17.0000", how do i compare it with an int? if a > 16: ...
[17:18:18] *** Joins: luischi (~luigi@80.30.201.209)
[17:18:23] *** Joins: neoweb (sid343200@lymington.irccloud.com)
[17:18:27] *** Quits: Jefren1 (~Jefren@206.253.157.229) (Ping timeout: 264 seconds)
[17:18:29] <neoweb> https://www.youtube.com/watch?v=wBhS8OXtM5Q
[17:18:34] <bjs> azidhaka: convert it to a number. `if float(a) > 16:`
[17:18:35] <neoweb> That dude is pretty cool mang
[17:18:54] <bjs> azidhaka: (although this line might raise an exception if `a` isn't a valid number)
[17:19:11] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[17:19:14] <deniska> wyre: wikipedia mentions more than 10 polynomials which can be used in 16-bit CRCs https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Polynomial_representations_of_cyclic_redundancy_checks
[17:19:21] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se)
[17:19:24] <azidhaka> bjs: thanks, float works.
[17:19:28] <deniska> wyre: and then there're other variations of the algorithm possible
[17:19:32] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[17:19:56] *** Quits: NeoCore_ (~neocore@37.120.204.180) (Ping timeout: 260 seconds)
[17:20:02] *** Joins: Jefren1 (~Jefren@206.253.157.222)
[17:20:12] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:20:24] <neoweb> Can someone help me understand further what this may or may not work?:  https://bpa.st/2THQ
[17:20:34] *** Quits: NIKKE (~NIKKE@dyx0pyyg1-tjpj-m-tgxt-3.rev.dnainternet.fi) (Quit: Client closed)
[17:20:48] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Client Quit)
[17:20:55] <neoweb> How do out, and err get assigned the right output from the subprocess command
[17:21:09] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[17:21:26] <bjs> neoweb: because the communicate() call returns them https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate
[17:21:28] <Yhg1s> neoweb: I'm not sure what you're asking. That's what subprocess.Popen().communitate does.
[17:21:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:21:34] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.110.mobile.tre.se) (Client Quit)
[17:21:38] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:22:04] <neoweb> Ahh
[17:22:07] <neoweb> I get it now
[17:22:17] <Yhg1s> Also, the manual decode calls there can be removed if you pass encoding='utf-8' to subprocess.Popen.
[17:22:23] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[17:22:30] <neoweb> I didn't understand that it was grabbing the return.
[17:22:33] <bjs> also subprocess.run exists :)
[17:22:52] <neoweb> communicate() returns a tuple
[17:22:54] <neoweb> THANKS
[17:23:12] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[17:23:47] <sharperguy> Hi. I really messed up my python/pip setup. Even pip does not run, because of some version mismatch and when i try to install with pip, I get "TypeError: find_matches() got an unexpected keyword argument 'identifier'"
[17:24:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:24:06] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:24:11] <grym> sharperguy: did you ever `sudo pip` something
[17:24:14] <exarkun> sharperguy: use a virtualenv in the future so you can delete it and create a new one
[17:24:27] <sharperguy> yeah i did
[17:24:34] *** Joins: esv (~esv@216.237.228.11)
[17:24:35] <sharperguy> use sudo i mean
[17:24:39] <grym> sharperguy: ok.  what distro?
[17:24:44] <sharperguy> archlinux
[17:24:55] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:25:03] *** Quits: Jefren1 (~Jefren@206.253.157.222) (Ping timeout: 264 seconds)
[17:25:16] <bjs> sharperguy: did you install this Python yourself or did it come with linux?
[17:25:30] <sharperguy> i installed it via pacman
[17:25:32] <bjs> an easy way to fix might just be to remove and reinstall
[17:25:36] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[17:26:03] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:26:13] <sharperguy> I did reinstall every package on my system with python in the name
[17:26:24] *** Joins: Jefren1 (~Jefren@70.35.67.168)
[17:26:28] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[17:26:32] <Yhg1s> sharperguy: can you show the output you get when you try to run pip?
[17:26:33] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[17:26:54] <sharperguy> can i just delete my .local/lib/python3.9/site-packages directory?
[17:26:56] <bjs> sharperguy: my guess is you installed a (pip) package which was incompatible somehow,  what pip packages do you have installed and what does pip say when you try do something?
[17:27:05] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[17:27:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:28:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[17:28:18] <sharperguy> https://gist.github.com/jpentland/7ba355c63eeb773167236a5890ed2dd7
[17:29:07] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Quit: guenhael)
[17:29:26] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:29:49] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:29:53] *** Joins: fikran (~fikran@user/fikran)
[17:29:57] *** Quits: canarts (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:05] *** Quits: metaace_ (~metaace@user/metaace) (Remote host closed the connection)
[17:30:07] <SnoopJ> Looks like the error is coming from the new dependency resolver; sharperguy what do `pip --version` and `pip show resolvelib` give you?
[17:30:31] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:30:41] <bjs> resolvelib installed in two different places
[17:30:41] *** Joins: mcope (~matt@user/mcope)
[17:30:48] *** Joins: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[17:30:52] <SnoopJ> oh, indeed
[17:31:09] *** Joins: metaace (~metaace@user/metaace)
[17:31:14] <bjs> pip is weird enough that i don't even know if that's correct or a bug :P
[17:31:16] <SnoopJ> removing (or renaming) /home/jp/.local/lib/python3.9/site-packages/resolvelib might resolve the issue
[17:31:29] <sharperguy> pip version 20.3.4, show resolvelib shows it in .local
[17:31:36] <wyre> deniska, I need the XMODEM CRC16
[17:31:57] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:32:02] <bjs> sharperguy: did you install resolvelib yourself at some point?
[17:32:11] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[17:32:15] *** Quits: Jefren1 (~Jefren@70.35.67.168) (Ping timeout: 264 seconds)
[17:32:56] <SnoopJ> bjs, it looks like explicitly-acknowledged breakage (i.e. not a bug) https://github.com/sarugaku/resolvelib/issues/82#issuecomment-966531830
[17:33:23] <sharperguy> yeah i installed it with pip because there was one package that was giving me an error relating to resolvelib when trying to install. That fixes the error i put in the gist but now i have to go back and get the last one
[17:33:41] <SnoopJ> sure, if you share the complete error report for the other one, we could help with that too :)
[17:33:46] <sharperguy> i think i have several similar issues which is why i thought about just deleting all lcaolly installed pacakges
[17:33:47] *** Joins: Jefren1 (~Jefren@70.35.67.154)
[17:34:08] *** Joins: p-i-_ (~Ohmu@223.206.149.105)
[17:34:47] <SnoopJ> if things have been installing into /home/jp/.local (which will likely NOT be the case for any `sudo pip` invocations) then a quick check of that theory would similarly be to rename that site-packages
[17:35:09] <sharperguy> good point
[17:36:00] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[17:36:08] <sharperguy> i also tried to uninstall a package with "sudo pip" which was actually installed via pacman which broke a lot of stuff too, and is why i had to reinstall all the pacman  python packages
[17:36:20] <SnoopJ> yea, `sudo pip` is basically always a mistake, can't recommend against it strongly enough
[17:36:55] <SnoopJ> (there's an open proposal to help prevent this sort of system damage, fingers crossed)
[17:38:43] <sharperguy> ahh ok so i saw when trying to installl requests-futures, there was a similar error to the one we just solved, but in cachecontrol. So i did the same solution, to delete cachecontrol from the local directory and now that fixed it.
[17:39:06] *** Quits: Jefren1 (~Jefren@70.35.67.154) (Ping timeout: 245 seconds)
[17:39:43] <SnoopJ> sharperguy, as an aside, I would also recommend always invoking pip as `python3 -m pip` to avoid the potential failure mode of `python3` and `pip` pointing at different interpreters. https://snarky.ca/why-you-should-use-python-m-pip/
[17:40:14] <sharperguy> ah that is a good idea, i usually run it as pip3
[17:40:46] *** Joins: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de)
[17:41:10] *** Joins: Jefren1 (~Jefren@70.35.67.175)
[17:41:11] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[17:41:18] *** Joins: jyu_s (~f0fz@122.11.212.225)
[17:41:26] <SnoopJ> `pip` or `pip3` usually point at a little stub that does basically that^, but for a specific interpreter (and sometimes that specific interpreter isn't the one that `python3` resolves to, which creates "what the heck, I installed that?!" confusion)
[17:41:41] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[17:41:48] <SnoopJ> not really related to the problems you reported, but it's a favored soapbox
[17:43:14] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[17:43:26] *** Joins: binary01 (~binary01@192.110.171.216)
[17:44:06] <sharperguy> thanks
[17:44:38] <sharperguy> now i have to figure out why pipenv is failing to find libffi.so.7
[17:45:26] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[17:45:37] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[17:45:45] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 250 seconds)
[17:46:18] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[17:46:50] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:46:54] <Yhg1s> Someone else was having the same problem on Arch earlier today. I expect Arch broke something in their Python builds.
[17:47:24] <grym> pyenv +1 as usual, seems like
[17:47:33] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:47:39] <grym> "the OS's python is the OS's business" avoids a lot of trouble
[17:47:39] *** Joins: Andrynet1 (~Andrynet@190.152.209.31)
[17:47:51] *** Quits: Jefren1 (~Jefren@70.35.67.175) (Ping timeout: 264 seconds)
[17:47:53] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:49:33] *** Joins: Jefren1 (~Jefren@70.35.67.145)
[17:51:11] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:51:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: No route to host)
[17:51:47] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:51:59] *** Quits: grym (~grym@user/grym) (Quit: leaving)
[17:51:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 264 seconds)
[17:52:30] <jinsun> the problem actually is with manually built-from-source python because of the libffi updates, the Arch system python works fine, the pyenv ones or any other manually compiled ones have to be recompiled
[17:52:47] *** Joins: grym (~grym@user/grym)
[17:55:33] <azidhaka> Hi everyone, need an idea. I am doing file editing with this simple program: http://p.ip.fi/OSQm which reads a file line by line, writes to another file and if certain line exists, prepends another two lines before it. The problem is that i need to detect if those two lines are already prepent by a previous run. Something like regex look back...
[17:55:39] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[17:55:44] *** Joins: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff)
[17:56:21] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:56:48] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 260 seconds)
[17:57:06] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:961d:84b8:3581:ae4a)
[17:57:33] *** luischi is now known as luigibu
[17:58:03] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[17:59:51] *** Quits: Macuser (~Macuser@2600:1003:b45c:fe2b:fc63:df63:50f0:5d65) (Ping timeout: 264 seconds)
[17:59:55] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[18:00:15] *** Joins: luigibu (~luigi@80.30.201.209)
[18:00:46] *** Quits: Jefren1 (~Jefren@70.35.67.145) (Ping timeout: 245 seconds)
[18:00:52] <bjs> azidhaka: regex looks bad?
[18:00:54] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:00:54] <azidhaka> maybe, instead of reading the file line by line, i should slurp it into a list and that way i can check the previous two list members to see if they are present
[18:01:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[18:01:10] <bjs> azidhaka: that could work,  you could then insert the two lines and throw it back out too
[18:01:15] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:01:16] <CuriousErnestBro> noooo i gotta do recursion
[18:01:29] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:02:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[18:02:13] <grym> but first, you must do recursion
[18:02:45] *** Joins: ianliu (~ianliu@200-232-249-142.dsl.telesp.net.br)
[18:03:02] *** Joins: Jefren1 (~Jefren@70.35.66.105)
[18:03:16] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:03:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:04:11] *** Joins: apocalyptech (~apocalypt@wilug/apocalyptech)
[18:04:18] <neoweb> can someone link me something I can read that helps me understand the use of : everywhere.  I was watching a video, and the guy is constructing classes with it, doing all sorts with it.  https://www.youtube.com/watch?v=wBhS8OXtM5Q
[18:04:32] <ianliu> I'm using "rasterio" to work with geotiffs, and I'm trying to save a file to s3 with rasterio itself. But I'm getting an "rasterio.errors.RasterioIOError: Attempt to create new tiff file '/vsis3/bucket/data.tif' failed: Permission denied". Has anyone seen this error?
[18:04:35] <neoweb> Here is a picture of what I am talking about:  https://usercontent.irccloud-cdn.com/file/EUAWzlhL/image.png
[18:04:48] <sharperguy> jinsun: do you happen to know which package needed to be rebuilt?
[18:04:54] <bjs> neoweb: what do you mean "the use of : everywhere"?  the colon is just part of the grammar of the language
[18:04:57] <Yhg1s> neoweb: ':' is just punctuation. It doesn't do anything on its own
[18:04:59] <bjs> its puncuation
[18:05:07] <neoweb> a_pizza: Pizza = Pizza() vs just doing a_pizza = Pizza()
[18:05:18] <Yhg1s> neoweb: ah, they're using type hints.
[18:05:31] *** Joins: u0 (~user01@user/u0)
[18:05:37] <neoweb> is that it?  I figured as much, but he was using it inside of his functions etc
[18:05:42] <Yhg1s> neoweb: it doesn't do anything, it's just there for external tools to know what type something is supposed to be.
[18:05:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[18:06:00] <Yhg1s> neoweb: yes, they're annotated variables. https://www.python.org/dev/peps/pep-0526/
[18:07:05] <neoweb> I just wanted to make sure, thanks!
[18:08:03] <domhnall> neoweb: did they just start doing that? seems the video is pretty far in.
[18:08:18] *** Quits: Jefren1 (~Jefren@70.35.66.105) (Ping timeout: 260 seconds)
[18:08:19] <domhnall> almost 30mins in
[18:08:20] <neoweb> domhnall: ?
[18:08:32] *** Joins: jaggz (~jaggz@user/jaggz)
[18:08:38] <jinsun> sharperguy: I had to rebuild python itself (which was easy with pyenv, just had to pyenv install again)
[18:08:38] <jaggz> bluepy/btle.py", line 362 , in _waitResp raise BTLEDisconnectError("Device disconnected", resp)
[18:08:43] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 250 seconds)
[18:08:46] <domhnall> neoweb: the type hinting..did they start 30mins in or been doing it?
[18:08:54] <neoweb> he has been using type hinting all over his videos
[18:09:08] <jaggz> do you catch an error like that like normal?  try: .. except BTLEDisconnectedError: .. hmm
[18:09:20] <neoweb> He never explained it, but I did not check his other videos, and I am just trying to refresh right now.  I did not know about the type hint PEP
[18:09:37] *** Joins: KeiraT (~k@lulzsec.co.uk)
[18:09:38] <domhnall> oh okay...that's why I asked.
[18:10:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:10:25] *** Joins: Jefren1 (~Jefren@208.104.190.47)
[18:12:11] <jinsun> sharperguy: are you using system python or some built-from-source python like pyenv? if system python then your problem is different, probably need just some package rebuild, but it could be any package that depended on libffi
[18:12:43] <CuriousErnestBro> is there a better way to do this in numpy? list(filter(lambda m2: dist[m1][m2] > D and state[m1][m2], moves2))
[18:13:05] <CuriousErnestBro> I have a .flatten()'ed list that I want to filter on 2 conditions
[18:13:27] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:13:40] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:14:16] *** Joins: nisstyre (~wes@user/nisstyre)
[18:16:15] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[18:16:23] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:16:28] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:4a90:b062:34d4:9a98) (Remote host closed the connection)
[18:16:41] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:32b6:747c:2ac0:5e7a)
[18:16:49] *** Joins: jyu_s (~f0fz@122.11.212.225)
[18:16:57] *** Quits: Jefren1 (~Jefren@208.104.190.47) (Ping timeout: 268 seconds)
[18:18:20] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[18:18:41] *** Joins: imakestuff_ (~imakestuf@197.156.77.89)
[18:18:49] *** Joins: Jefren1 (~Jefren@70.35.66.251)
[18:19:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1d47:7f49:468:ba96)
[18:20:42] *** Joins: imakestuff (~imakestuf@197.156.77.89)
[18:20:49] *** Parts: afidegnum (~user@102.176.94.200) (ERC (IRC client for Emacs 27.2))
[18:20:59] *** Quits: imakestuff_ (~imakestuf@197.156.77.89) (Client Quit)
[18:21:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[18:23:37] <SnoopJ> almost certainly, yes
[18:23:51] *** Quits: Jefren1 (~Jefren@70.35.66.251) (Ping timeout: 264 seconds)
[18:24:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: No route to host)
[18:24:06] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 245 seconds)
[18:24:23] <SnoopJ> normally you do something like `idx = (predicate1(arr) & predicate2(arr)); selected = arr[idx]`
[18:24:27] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[18:24:46] <SnoopJ> i.e. make boolean indices and then index into the array with them
[18:25:10] *** Joins: Jefren1 (~Jefren@70.35.66.186)
[18:25:51] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[18:25:57] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[18:26:08] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[18:26:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:26:36] <sharperguy> yeah it is system python
[18:26:38] <sharperguy> ok thanks
[18:27:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[18:27:52] <sharperguy> oh wait. When i run "pipenv shell" then it switches me to another python version
[18:27:59] <sharperguy> that is in the virtualenv
[18:29:06] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 245 seconds)
[18:29:22] <SnoopJ> sharperguy, right, one of pipenv's core responsibilities is managing virtual environments for you
[18:29:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:30:48] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:31:03] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[18:32:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:33:51] <wyre> deniska, Yhg1s, I'm trying to follow this example http://crcmod.sourceforge.net/crcmod.predefined.html#examples but I'm having this TypeError https://bpa.st/EUWQ
[18:33:56] <wyre> why is this?
[18:34:35] <grym> wyre: the error tells you why
[18:34:54] <wyre> grym, sure, but why the example doesn't work ootb?
[18:35:00] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[18:35:20] <grym> wyre: it possibly does, in py2, which mostly means the docs are old
[18:35:22] *** Joins: jyu_s (~f0fz@122.11.212.225)
[18:35:34] <grym> "© Copyright 2010, Raymond L Buvel." ah yes, the docs are _old_
[18:35:38] <wyre> hmmm ...
[18:35:50] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[18:35:58] <wyre> and how could I encode the string? 🤔
[18:36:04] <grym> .encode()
[18:36:05] <grym> :)
[18:36:08] *** Joins: bindu (~bindu@user/bindu)
[18:36:21] <grym> optionally, specify which encoding you want
[18:36:28] <grym> (the default is utf8)
[18:38:26] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:40:50] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[18:41:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ccc0-3dfe-67fb-01e8.res6.spectrum.com)
[18:42:51] *** Quits: yac (~user@user/yac) (Ping timeout: 268 seconds)
[18:42:58] *** Joins: wilk (~wilk@user/wilk)
[18:43:10] <sharperguy> yeah i just dont know why pipenv installs a python version thats incompatible with my OS
[18:43:11] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 265 seconds)
[18:43:22] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7) (Quit: smeeagle)
[18:43:46] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[18:43:46] <grym> pipenv can't install python at all
[18:44:38] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:44:54] *** Joins: yac (~user@user/yac)
[18:45:03] *** Joins: CyDefect (~troll@213.55.226.140)
[18:45:03] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[18:46:03] *** Joins: humberto1 (~humbertow@189.236.62.65)
[18:46:24] <grym> (you can or could ask it to ask pyenv to install one, but that's fairly obscure and you said you were using system python anyway)
[18:46:40] <SnoopJ> it doesn't appear to be related, no
[18:46:55] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:48:25] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:49:03] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 264 seconds)
[18:49:38] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[18:51:00] *** Joins: stwange (~j@ip-111-54.ip4.balmont.pl)
[18:51:02] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 240 seconds)
[18:52:10] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 260 seconds)
[18:52:21] <stwange> Is there a simple way to async with external processes? I want to run traceroute against a lot of hosts, but the program isn't going to have root access
[18:52:23] <sharperguy> i dont understand. Before running "pipenv shell" if i run "which python" I get /usr/bin/python, and afterwards i get ~/.local/share/virtualenvs/lnbits2-mlY7KipP/bin/python
[18:52:52] <grym> sharperguy: yes, pipenv has made and activated a venv for you
[18:53:02] <SnoopJ> sharperguy, that is the same thing as `/usr/bin/python -m venv /path/to/venv`
[18:53:10] *** Joins: nuala (~nuala@user/nuala)
[18:53:14] *** Joins: KeiraT (~k@lulzsec.co.uk)
[18:53:15] <mefistofeles> SnoopJ: and activating it :P
[18:53:18] <BtbN> What would be the correct/best way to get that string that python puts into wheels, which describe which python-version it's ABI compatible with?
[18:53:20] <sharperguy> ahh ok... hmm so i'm still not sure why it fails to get the right library version
[18:53:43] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:53:53] <BtbN> I think it's called ABI Tag? But even with that, I'm not finding how to get it
[18:54:05] <SnoopJ> sharperguy, the distinction grym is drawing is that "install a Python" usually refers to the interpreter itself, rather than making an environment (which is *always* the same version as the intepreter that creates it)
[18:54:18] <SnoopJ> it would help if we could see the complete error report
[18:54:25] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:55:25] *** Joins: mixfix41 (~homefame@user/mixfix41)
[18:55:25] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:56:03] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Quit: leaving)
[18:56:04] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 260 seconds)
[18:56:11] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 245 seconds)
[18:58:12] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Quit: leaving)
[18:58:17] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[18:58:21] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[18:58:36] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[18:59:45] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[19:00:14] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:00:43] <sharperguy> https://gist.github.com/jpentland/3dcf7f163d5d9527c217dcf9be7ddd15
[19:00:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:01:14] <jinsun> doesn't look like system python, I see .pyenv there
[19:01:27] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:01:35] <sharperguy> hmm in that case it was accidental and i should delete it
[19:01:52] *** Joins: Fiji (~Fiji@user/fiji)
[19:02:05] <grym> thankfully, uninstalling pyenv is _trivial_
[19:02:21] <grym> (delete ${HOME}/.pyenv and update your shell rc)
[19:02:49] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Client Quit)
[19:03:00] <SnoopJ> that's also Python 3.7, and your earlier error report was talking about 3.9
[19:03:04] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[19:03:19] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob)
[19:03:59] *** Joins: cul8r (~cul8r@76.113.95.199)
[19:04:15] *** Joins: akk (~akk@75.161.146.115)
[19:04:25] <sharperguy> ahh. Now when i activate the shell it asks if i want to install python 3.7
[19:05:18] *** Joins: nomic (~nomic@185.217.117.248)
[19:05:20] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[19:06:04] <sharperguy> so I guess i was using pyenv without realizing it... i am trying now just specifying the local python
[19:07:01] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se)
[19:07:27] <sharperguy> yeah that worked. The pipfile wanted 3.7 but i guess it works with 3.9 as well. Just not the 3.7 installed by pyenv
[19:08:19] *** Joins: nicode (~nic@2607:f2c0:94da:7400:7eb9:a04:ec68:ca1a)
[19:09:28] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:32b6:747c:2ac0:5e7a) (Remote host closed the connection)
[19:09:29] *** Joins: cahrlos12 (~cahrlos12@98.159.232.143)
[19:09:40] *** Joins: water_27300935_ (~water_273@182.90.129.136)
[19:09:42] <cahrlos12> hello
[19:09:42] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:e317:be26:5c35:e479)
[19:10:20] *** Joins: jyu_s (~f0fz@122.11.212.225)
[19:10:21] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[19:10:42] *** Joins: jyu_s (~f0fz@122.11.212.225)
[19:11:28] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:e317:be26:5c35:e479) (Remote host closed the connection)
[19:11:41] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:4b55:7aa9:9a7:ec10)
[19:11:42] *** Quits: cahrlos12 (~cahrlos12@98.159.232.143) (Quit: Client closed)
[19:12:49] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Quit: Lost terminal)
[19:13:04] <SnoopJ> sharperguy, possibly pyenv built the offending interpreter for you before some system change to libffi
[19:13:05] *** Joins: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com)
[19:14:27] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[19:15:28] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[19:16:11] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 245 seconds)
[19:16:22] *** Parts: JaredCE (~JaredCE@93.115.192.243) ()
[19:16:23] *** Joins: cahrlos12 (~cahrlos12@98.159.232.143)
[19:16:30] <cahrlos12> hello
[19:16:31] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[19:16:43] <grym> cahrlos12: hi
[19:17:51] <cahrlos12> i am trying to add a filter to a websocket connection, so when the connection is open i only see part of the whole data
[19:19:26] *** Joins: teut (~teut@122.181.77.157)
[19:21:35] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:22:19] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[19:23:23] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[19:23:28] <JaredCE> i'm using curator on an AWS lambda and trying to use do_dry_run which documentation says will log the output of what it's attempting to do... when running the lambda, i'm not seeing any log output of the dry run
[19:24:39] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se)
[19:24:46] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:24:54] *** Joins: xah37 (~AdminUser@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com)
[19:25:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:27:55] *** Joins: xah37_ (~quassel@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com)
[19:28:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:28:18] *** Joins: bxsx (~x@7.red-79-157-215.dynamicip.rima-tde.net)
[19:28:21] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[19:28:34] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se) (Client Quit)
[19:28:37] *** Quits: xah37 (~AdminUser@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:28:42] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:29:27] *** Parts: water_27300935_ (~water_273@182.90.129.136) (WeeChat 2.3)
[19:29:54] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se)
[19:30:21] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 245 seconds)
[19:30:24] *** Quits: cahrlos12 (~cahrlos12@98.159.232.143) (Quit: Client closed)
[19:30:30] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.211.mobile.tre.se) (Client Quit)
[19:30:43] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:30:52] *** Joins: jyu_s (~f0fz@122.11.212.225)
[19:31:20] *** Joins: luigibu (~luigi@80.30.201.209)
[19:31:39] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[19:31:46] *** Joins: cahrlos12 (~cahrlos12@98.159.232.143)
[19:31:55] *** Joins: KeiraT (~k@lulzsec.co.uk)
[19:32:39] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:32:43] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:33:25] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[19:34:06] *** Joins: jyu_s (~f0fz@122.11.212.225)
[19:35:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:35:01] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net)
[19:35:35] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[19:35:40] <rannnn8888> Someoמק here managed to convert APP to APK ? KIVY APP
[19:35:51] <rannnn8888> someone*
[19:37:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:37:53] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[19:38:45] <HiccupJul> With the subprocess standard library, how can I make it output the stdout and stderr the same as if I was just using a normal bash script to run the command?
[19:38:48] *** Quits: xah37_ (~quassel@2603-6000-8c0b-3200-0000-0000-0000-0011.res6.spectrum.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:38:51] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[19:39:02] <HiccupJul> (in other python scripts, i might want to parse the output, but not in this one)
[19:39:12] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:39:14] *** Joins: fikran (~fikran@user/fikran)
[19:39:27] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[19:39:53] *** Joins: d00gy (~d00gy@user/d00gy)
[19:40:27] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:40:30] *** Joins: sojyu (~sojyu@218.212.3.76)
[19:41:10] <supakeen> I thought (vague memory) that if you use subprocess.run and don't set stdout or stderr to PIPE that would be the behaviour?
[19:41:15] <supakeen> (or capture_output)
[19:41:23] *** Quits: Harlin (~DonQixote@75-163-138-123.clsp.qwest.net) (Quit: Leaving)
[19:41:36] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:42:17] <The-Compiler> supakeen: correct
[19:42:28] <HiccupJul> i must have misremembered. i'll try that then
[19:42:54] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[19:42:58] <HiccupJul> seems to work
[19:43:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[19:43:20] <HiccupJul> for the future - is there a way to preserve that behaviour, but also allow for parsing of the output?
[19:43:31] <teut> https://dpaste.org/TMMj   https://dpaste.org/FPNL
[19:43:41] <teut> can someone tell how to fix this?
[19:43:45] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[19:44:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:44:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[19:45:10] <supakeen> HiccupJul: not directly, one can provide their own file-like objects for stdout, stderr that both output and store in a buffer the data.
[19:45:20] *** Quits: sojyu (~sojyu@218.212.3.76) (Quit: Leaving)
[19:45:47] <HiccupJul> i guess that makes sense
[19:46:24] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:46:33] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[19:46:49] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:47:03] *** Joins: xdeadface (~xdeadface@gateway/tor-sasl/xdeadface)
[19:47:46] <teut> is the decorator to be made async?
[19:47:47] *** Joins: ano (~ano@user/ano)
[19:48:48] <jinsun> teut: that wrapper function returns None always, so you are just awaiting None which you can't do
[19:49:27] <jinsun> just get rid of that wrapper I would say, it seems like a terrible idea
[19:49:37] *** Quits: ianliu (~ianliu@200-232-249-142.dsl.telesp.net.br) (Quit: WeeChat 3.3)
[19:49:39] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[19:49:42] <teut> no , I need that try  except
[19:50:00] <teut> if something fails I was silent failure
[19:50:04] <teut> want*
[19:50:20] *** Quits: cahrlos12 (~cahrlos12@98.159.232.143) (Ping timeout: 256 seconds)
[19:50:52] *** Joins: uhu (~uhu@static.101.168.216.95.clients.your-server.de)
[19:51:04] <teut> earlier if you remember yesterday's code, all the functions code was in that main function
[19:51:08] *** Quits: CyDefect (~troll@213.55.226.140) (Ping timeout: 260 seconds)
[19:51:16] <teut> \the reason was because of this only
[19:51:34] *** Joins: rsx (~dummy@ppp-188-174-130-113.dynamic.mnet-online.de)
[19:51:57] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-157-9.red.bezeqint.net) (Quit: Client closed)
[19:52:42] *** Quits: whaley (~whaley@159.65.32.34) (Quit: WeeChat 3.2)
[19:53:06] <teut> howevermuch I understand the coroutines , always I face difficulty in the end while using it
[19:53:15] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[19:53:44] *** Joins: whaley (~textual@097-082-197-228.res.spectrum.com)
[19:53:51] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[19:53:54] <jinsun> okay that seems like a terrible idea still, but you will have to make your wrapper async def if you want to await it
[19:54:10] <jinsun> and ou probably want to await func inside that too
[19:54:19] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 256 seconds)
[19:54:29] <teut> and if seen the different functions can run async in parallel
[19:54:39] <teut> I dont need to await for them
[19:55:08] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:55:14] <Soni> what's a good alternative to bpaste that isn't nullrouted on Vivo ISP in brazil?
[19:55:23] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[19:55:31] <supakeen> ix.io
[19:55:46] *** Joins: betuxy (~betuxy@p579ad707.dip0.t-ipconnect.de)
[19:55:52] <supakeen> oh that's only command line, anything that isn't dpaste.org or pastebin.com is generally 'ok' here :)
[19:56:03] <supakeen> the latter has ads, the former allows anyone to delete a paste and it happens :(
[19:56:13] <teut> https://bpa.st/VHWQ
[19:56:19] <teut> is this correct?
[19:56:51] <teut> one awaits an async function when they want to wait the below code from executing
[19:57:00] <teut> await == yield
[19:57:01] <Soni> supakeen: btw do you have any plans to add IPv6 support to bpaste?
[19:57:23] <supakeen> that sounds like a fun thing to setup tonight :)
[19:57:27] *** Joins: gryzli (~gryzli@84-238-170-30.ip.btc-net.bg)
[19:57:30] *** Joins: cdown (~cdown@89.32.122.5)
[19:57:56] <bjs> teut: `await` is how you call an `async def`.
[19:58:51] <bjs> teut: technically yes, await is like yield in that it (asyncio) can pause the function execution and let something else run
[19:58:59] <Soni> supakeen: btw we forget, have you done the whole uh... can we pm?
[19:59:31] <teut> in my code all the functions inside on_message are independent
[19:59:35] *** Joins: vlm (~vlm@user/vlm)
[19:59:47] <supakeen> Soni: yes you may :)
[19:59:51] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 264 seconds)
[19:59:51] <teut> so they should ru in any order
[19:59:54] <teut> run
[20:00:04] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[20:00:17] <bjs> teut: well if you call them one after the other like that, they will be run in order like normal function calls
[20:00:19] <teut> how to understand even what to be done
[20:00:27] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[20:00:37] <supakeen> bpa.st is down for a minute while i enable ipv6
[20:00:45] <bjs> teut: if you want them to run concurrently ("at the same time") they'll need to be `async def`s and you can use something like asyncio.gather
[20:01:03] <teut> ya I want concurrent execution of all the functions
[20:01:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:01:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:01:22] <teut> the two if else state,ents I can shift inside my async function
[20:01:48] <teut> let me check that
[20:02:20] *** Joins: humberto1 (~humbertow@189.236.62.65)
[20:03:27] *** Quits: imakestuff (~imakestuf@197.156.77.89) (Remote host closed the connection)
[20:03:41] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 245 seconds)
[20:03:42] *** cdown_ is now known as cdown
[20:03:51] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[20:03:51] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:03:54] *** Quits: rsx (~dummy@ppp-188-174-130-113.dynamic.mnet-online.de) (Quit: rsx)
[20:04:03] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 264 seconds)
[20:04:04] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:04:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: leaving)
[20:04:32] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:04:39] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[20:04:42] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[20:05:23] *** Joins: KeiraT (~k@lulzsec.co.uk)
[20:05:42] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:06:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:07:00] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:07:18] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 260 seconds)
[20:08:02] <teut> https://dpaste.org/pFGh
[20:08:24] <teut> I changed to this but this I m getting errors
[20:08:32] <teut> still I*
[20:09:23] <jinsun> your wrapper is still sync and returns None
[20:09:59] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[20:10:04] *** Joins: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5)
[20:12:14] *** Joins: Moosadee (~Moosadee@198.248.38.25)
[20:12:23] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 264 seconds)
[20:12:31] <teut> ya it works now
[20:12:53] <teut> thanks for helping
[20:13:33] <teut> async decorator looks weird
[20:13:49] <teut> async function inside a sync function
[20:13:57] *** Joins: elena (~elena_re@178.176.73.37)
[20:14:27] <teut> Run awaitable objects in the aws sequence concurrently.
[20:14:35] *** elena is now known as elena_re
[20:14:36] <teut> what does aws means?
[20:14:42] <teut> https://docs.python.org/3/library/asyncio-task.html
[20:15:00] <teut> https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
[20:15:07] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:15:14] <SnoopJ> Ugh, does argparse always hide the original exception raised from inside a `type=` converter? Maybe I should stop trying to force this click-alike spelling and just write a post-hoc check :(
[20:15:28] *** Joins: thnee (~thnee@h-85-24-144-199.A328.priv.bahnhof.se)
[20:15:31] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[20:15:50] *** Joins: Fiji_ (~Fiji@user/fiji)
[20:16:21] <bjs> teut: that's the name of the parameter
[20:16:46] *** Quits: Moosadee (~Moosadee@198.248.38.25) (Client Quit)
[20:16:49] <bjs> teut: I assume it's short for "awaitables"
[20:16:52] <teut> aws is that amazin
[20:16:55] <teut> o*
[20:17:00] <bjs> teut: no? it's just the name of the parameter
[20:17:01] *** Quits: u0 (~user01@user/u0) (Ping timeout: 245 seconds)
[20:17:04] <teut> ok understio
[20:17:07] <bjs> `def gather(*aws, ...`)
[20:17:09] <teut> understood
[20:17:20] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[20:19:02] *** Joins: u0 (user01@user/u0)
[20:19:05] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[20:19:49] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[20:19:51] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:945e:d325:846e:7642) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:20:47] *** Joins: darksun (~darksun@user/darksun)
[20:22:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:22:18] *** Joins: Naan (~naan@user/naan)
[20:22:39] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[20:22:47] *** Quits: teut (~teut@122.181.77.157) (Quit: Client closed)
[20:23:37] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:23:57] *** Quits: elena_re (~elena_re@178.176.73.37) (Quit: WeeChat 3.2)
[20:24:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[20:25:37] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:25:45] *** Joins: teut (~teut@122.181.77.157)
[20:25:57] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:26:25] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:27:15] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:27:27] *** Joins: y1n (~y1n@178.115.37.88.wireless.dyn.drei.com)
[20:28:26] *** Joins: humberto1 (~humbertow@189.236.62.65)
[20:29:02] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:29:43] <teut> so when I use gather, the n functions are put into the event loop  right?
[20:30:17] <bjs> teut: `await gather(f(), g(), h())` puts f, g and h on the event loop and waits for them to all finish
[20:30:34] <teut> and then worker attend then which may/ may not be running in threads
[20:30:39] <teut> them*
[20:30:50] <bjs> what do threads have to do with this?
[20:30:51] <teut> different*
[20:31:20] <teut> once the functions are in the event loop , then they are assigned to different workers
[20:31:32] <bjs> teut: workers?
[20:31:32] <SnoopJ> oh, ArgumentTypeError does what I want
[20:31:39] <bjs> teut: there are no threads inside asyncio
[20:31:46] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[20:32:07] <teut> what? so its just that run a function, yield it  , then run next?
[20:32:17] <teut> in cyclic fashion
[20:32:40] <bjs> teut: basically yes
[20:33:00] <teut> what I heard in js was the the event loop delegates these functions to different workers since js uses pthreads
[20:33:07] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[20:33:08] <bjs> teut: this is #python
[20:33:10] *** Joins: magla (~gelignite@55d4a3e3.access.ecotel.net)
[20:33:32] <teut> why dont you?
[20:33:36] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:33:39] <bjs> teut: why don't who what?
[20:33:41] <SnoopJ> teut, threads are basically the same idea anyway, but the OS is doing the switching
[20:33:49] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[20:34:06] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 245 seconds)
[20:34:38] <teut> yes SnoopJ  , thats correct
[20:34:39] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:34:44] *** Joins: superboot (~agentgasm@user/superboot)
[20:34:56] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 245 seconds)
[20:35:14] <teut> bjs , then its the actor model
[20:35:22] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[20:35:37] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[20:35:38] <bjs> teut: I'm not sure how that follows on or how it answers my question
[20:35:38] <teut> this async stuff of asyncio
[20:36:10] <bjs> teut: well not really but also maybe but also probably not and also who cares? :P
[20:37:02] <teut> no just wanted to clear confusions that I had to how stuff works
[20:37:16] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[20:37:30] <bjs> teut: I think trying to force things to be black&white and put things in "actor model or not" buckets is going to make things *more* confusing
[20:37:36] *** dcaro is now known as dcaro_away
[20:38:18] <teut> I dont know, low level things are harder and there are  so many implementations under the same name
[20:38:26] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[20:38:59] <bjs> teut: I mean you'd probably do better just trying to understand what the libraries are doing than trying to decide if it's "the actor model" or not, because the answer to that question won't help you understand
[20:39:15] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[20:39:19] <SnoopJ> "low level" and "actor model" are very nearly contradictory
[20:39:27] *** Quits: u0 (user01@user/u0) (Ping timeout: 264 seconds)
[20:39:40] <teut> to think for efficient algorithms I need to understand that part too
[20:40:02] <teut> I want to take transition from user to developer
[20:40:26] <bjs> teut: what part
[20:40:39] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 264 seconds)
[20:40:43] <teut> low level details
[20:40:52] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:03] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[20:41:20] *** Joins: u0 (~user01@user/u0)
[20:43:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[20:43:05] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[20:43:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:43:41] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[20:44:01] *** Quits: u0 (~user01@user/u0) (Client Quit)
[20:44:23] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:45:21] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 245 seconds)
[20:46:49] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:47:27] *** Joins: vats (~vats@106.67.68.168)
[20:49:06] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:858f:f39:62d8:4ca7)
[20:51:27] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 264 seconds)
[20:51:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:52:30] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[20:53:10] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:53:26] *** Joins: jpcanepa (~jpcanepa@186.10.191.132)
[20:53:28] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[20:54:06] <powftw> ```{('a', '1'): 2, ('b', '4'): 2, ('c', '3'): 1}``` how to effectively unpack values from this to expected output ```[ 'a12' , 'b42' , 'c31' ]```
[20:54:29] <powftw> Essentially making those dictionaries into an array of strings
[20:54:40] <powftw> Or simply an array
[20:55:06] *** Joins: Narrat (~omnius@p200300df5f0df13d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:55:29] *** Joins: fdan (~fdan@192.146.154.3)
[20:56:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[20:56:32] <phy1729> [''.join(k + (str(v),)) for k, v in foo.items()]
[20:56:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:58:34] <powftw> phy1729: ```str object is not callable```
[20:59:38] <powftw> I mean, basically, just combine the keys and values into a list as shown in expected output. I couldn't well do it
[20:59:38] <phy1729> I think you overwrote the builtin str. Are you using str as a variable for something?
[21:00:22] <powftw> No
[21:00:30] <meejah> powftw: pastebin your attempts thus far
[21:00:34] <powftw> Let me exit the interpreter and do again
[21:00:56] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:01:43] <octav1a> Is there any kind of data structure that could act like a dict but the key is 'order independent' , for example d[('a', 'b')] and d[('b', 'a')] both point to the same value
[21:02:12] <bjs> octav1a: maybe you want a dict with frozenset keys
[21:02:23] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[21:02:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:02:49] <octav1a> bjs: yeah, that looks perfect
[21:02:51] <octav1a> thanks
[21:04:14] <powftw> phy1729: thanks dude
[21:04:31] <powftw> Nice thinking
[21:05:29] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[21:07:08] *** Joins: sedeki (~textual@user/sedeki)
[21:08:01] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[21:09:40] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[21:10:46] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[21:11:58] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[21:13:11] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[21:13:18] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[21:13:39] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Client Quit)
[21:14:49] *** Joins: lukeaar1 (~lukeaar@45.132.224.81)
[21:15:24] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:16:29] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[21:18:36] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[21:20:46] <powftw> phy1729: can I get it with a - in the value
[21:20:59] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:21:06] <powftw> ```[ 'a1-2' , 'b4-2' , 'c3-1' ]```
[21:21:32] <phy1729> [''.join(k) + f'-{v}' for k, v in foo.items()]
[21:22:28] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[21:22:51] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 245 seconds)
[21:23:01] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[21:23:54] *** Joins: kdc (~kdc@196.211.197.159)
[21:24:27] *** Quits: nomic (~nomic@185.217.117.248) (Quit: Leaving)
[21:24:34] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:24:37] *** Quits: addi (~addi@node-1w7jr9ss4mmea0h4xfq3odqf9.ipv6.telus.net) (Quit: 0xC00010FF)
[21:25:28] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[21:25:37] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Quit: Client closed)
[21:25:58] <jinsun> or just `[f"{''.join(k)}-{v}" for k, v in d.items()]`
[21:26:45] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[21:26:57] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[21:27:23] <powftw> Can I get a parathensis around keys?
[21:27:46] *** Joins: VaniaPy (~VaniaPy@46.12.188.40.dsl.dyn.forthnet.gr)
[21:27:55] <powftw> ```[ ('a1)-2' , '(b4)-2' , '(c3)-1' ]```
[21:28:14] <jinsun> yes
[21:28:28] *** Quits: whaley (~textual@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[21:28:54] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[21:29:31] <jinsun> just insert them in the correct place in the prevous examples
[21:29:38] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:29:57] *** Joins: ballingt (sid190590@helmsley.irccloud.com)
[21:30:08] *** Quits: lukeaar1 (~lukeaar@45.132.224.81) (Quit: WeeChat 3.3)
[21:30:13] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[21:30:17] <powftw> It should be around k I believe. But, it's not a string to concentrate
[21:30:25] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[21:30:38] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:31:03] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 264 seconds)
[21:31:10] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[21:31:33] <powftw> jinsun: yes
[21:31:34] <jinsun> you want it around the result of ''.join(k), not k
[21:31:35] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[21:31:39] <powftw> It got it
[21:31:53] <powftw> jinsun: thanks man
[21:31:54] *** Joins: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it)
[21:31:58] *** Joins: jmd (~user@de.cellform.com)
[21:32:26] *** Quits: Andrynet1 (~Andrynet@190.152.209.31) (Ping timeout: 245 seconds)
[21:32:41] <powftw> jinsun: can I ask why we need to convert the thing into fstring f" ?
[21:33:04] <powftw> You're converting the list into one string?
[21:33:33] *** Quits: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net) (Remote host closed the connection)
[21:33:47] <powftw> I mean elements of list
[21:33:58] <jinsun> you can do it without f strings too, but then it will be lot of small strings with + in between which doesn't look as nice
[21:34:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[21:34:42] *** Joins: cheater (~Username@user/cheater)
[21:34:57] <jinsun> ''.join is the thing converting the list to string
[21:35:10] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[21:35:15] <faLUKE> hello. Given myString = "one two\none two three\ntwo three" which is a quick way to  obtain a newString that contains only lines with "one two" substring?
[21:35:38] <Repiphany> myString.split('\n')[0]
[21:35:53] <Repiphany> Oh, misread
[21:35:54] <faLUKE> Repiphany: ??
[21:35:57] <faLUKE> :-)
[21:36:24] <Repiphany> '\n'.join([s for s in myString.split('\n') if 'one two' in s])
[21:36:26] <SnoopJ> myString.partition("\n")[0].split()
[21:36:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:36:32] <SnoopJ> or splitlines() if you'd prefer
[21:36:42] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[21:37:20] <faLUKE> Repiphany: newString = '\n'.join([s for s in myString.split('\n') if 'one two' in s])   ?
[21:38:04] <VaniaPy> how can i get the next value of an element in a dictionary ? i tried that in method get_next() but after converting dict to list can't access the values https://bpa.st/EGLQ
[21:38:28] *** Joins: audiobirb (~audio@user/audio)
[21:40:07] <grym> VaniaPy: `for key, value in mydict.items():`
[21:42:06] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:42:11] <powftw> Can I delete a value of a key and will that be valid?
[21:42:19] <VaniaPy> grym that returns all the items of the dict
[21:42:21] <powftw> Can key simply exist without value?
[21:42:42] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:42:48] <grym> powftw: keys must have a value
[21:43:01] <powftw> Okay
[21:43:05] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.3)
[21:43:16] <grym> VaniaPy: yes, it does.  one at a time
[21:43:34] <grym> ie, the next one :)
[21:44:05] *** Quits: vats (~vats@106.67.68.168) (Read error: Connection reset by peer)
[21:44:15] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[21:44:47] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f) (Ping timeout: 264 seconds)
[21:46:04] *** Joins: lbracher (~lucas@77.109.116.248)
[21:46:14] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[21:46:30] <faLUKE> Repiphany: thanks! It worked
[21:46:30] *** Joins: xkuru (~xkuru@user/xkuru)
[21:46:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[21:47:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f)
[21:47:56] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[21:48:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:48:36] *** Joins: fikran (~fikran@user/fikran)
[21:48:42] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:48:56] <VaniaPy> grym it returns the whole list actually,i need to get the next item by key :/
[21:51:08] <grym> VaniaPy: .items() returns things lazily, but if you know what you need by key, get it by key
[21:52:00] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[21:52:06] <lbracher> Hello! I'm building a function where it receives a list of cities and a text. The aim here is to discover if there's a city name anywhere on the text, and if yes, get the city name. Is there a quicker way to do that without iterating through the list, or anything better than O(n)? Thanks in advance!
[21:52:19] <raxor2k> bjs: are you here
[21:52:27] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[21:52:51] *** Quits: Jefren1 (~Jefren@70.35.66.186) (Ping timeout: 245 seconds)
[21:53:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:53:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:54:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:54:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:54:52] *** Joins: Jefren1 (~Jefren@70.35.67.96)
[21:55:06] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 260 seconds)
[21:55:16] <SnoopJ> lbracher, you could keep your city names in a set() and do `set(the_text) & cities_set` which is O(1) in the number of cities (but is still linear in the text, which is kind of just the price of the problem)
[21:56:04] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[21:56:08] <SnoopJ> sorry, set(the_text.split()) is what I was thinking of. Let's say `set(the_words_in_the_text)` :)
[21:56:51] *** Quits: jpcanepa (~jpcanepa@186.10.191.132) (Quit: Textual IRC Client: www.textualapp.com)
[21:58:06] <akk> Splitting by words probably doesn't work, if you want to find "Los Angeles" and "St Paul" and such.
[21:58:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[21:59:04] <SnoopJ> good point. you could run a sliding window of some width over the text, perhaps
[21:59:17] <akk> and to be reliable, it probably needs some kind of fuzzy search, so it can find both "St Paul" and "St. Paul"
[21:59:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:00:03] <akk> and São Paulo vs Sao Paulo
[22:00:29] <akk> (assuming this is a real-world program and not just a beginner class assignment)
[22:01:48] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 260 seconds)
[22:02:14] <SnoopJ> The latter I would probably treat with an alias
[22:03:14] <SnoopJ> but normalization probably enters the picture somewhere in there for a sufficient level of "real problem"
[22:03:22] <akk> yes, I suppose you could iterate through the original city list and make non-accented copies of any city with an accented character
[22:03:23] <SnoopJ> I usually build the dumb version first
[22:03:37] <akk> and you could remove all punctuation to catch things like St.
[22:04:03] <akk> Agree on building the dumb version first, but that set thing isn't the dumb version, it's an optimization that might not be usable for the actual problem.
[22:04:41] <akk> though it's a good trick :)
[22:04:59] <SnoopJ> O(1) lookup is still useful for this problem if you get the atoms right, but per-word atoms aren't going to be useful, agreed
[22:05:51] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 264 seconds)
[22:06:27] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[22:07:17] <SnoopJ> treating accents etc. is even worse, because of things like ã vs ã
[22:07:31] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[22:08:12] <lbracher> Yes, I thought about spaces and diacritics also... I'm thinking about it a little more, and I think that iteration is the best option for the moment. For instance, get the example of "São Paulo". Since I should be able to also detect the hypothetical city of "Paulo", I should iterate over all cities and use a maximization function in order to get the best possibility.
[22:08:16] <SnoopJ> the unicodedata module does at least have the relevant normalization functions though
[22:09:08] <SnoopJ> https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize
[22:09:30] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:09:35] <CuriousErnestBro> I have [(1,2), (1,2), (1,2)] how do I print 1 1 1\n 2 2 2?
[22:09:41] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[22:10:16] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:10:47] *** Joins: minip (~minip@user/minip)
[22:11:01] <lbracher> CuriousErnestBro, zip will do the trick
[22:11:15] <CuriousErnestBro> lbracher I got this so far: print(*zip(*optPath))
[22:11:21] <SnoopJ> CuriousErnestBro, you can transform to `[(1,1,1), (2,2,2)]` with `pairs = zip(*lst)` and go from there
[22:11:40] <SnoopJ> err, you'd need a list() to get a list, but probably you'd just leave it the lazy way
[22:11:42] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[22:12:37] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[22:16:41] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[22:17:05] *** Joins: greedom (~greedom@dynamic-046-114-002-077.46.114.pool.telefonica.de)
[22:18:23] <bjs> raxor2k: you dont have to ask if i'm here, you can just ask your question and anyone who can help will answer
[22:19:00] *** Joins: reset (~reset@user/reset)
[22:20:22] <CuriousErnestBro> ok figured it out
[22:21:08] <Swayze> nice nice
[22:21:56] <bparker> ...
[22:23:03] *** Joins: demirok (~bell@user/demirok)
[22:23:15] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 264 seconds)
[22:23:21] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:23:34] <CuriousErnestBro> damn rip python is. slow
[22:23:51] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 264 seconds)
[22:25:06] <MacGyver> Depends how you're counting.
[22:25:12] <MacGyver> If you include developer time...
[22:25:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:25:36] <MacGyver> But yes, for some operations it's slow. That's when people reach for things like numpy and pandas.
[22:25:40] *** Quits: stwange (~j@ip-111-54.ip4.balmont.pl) (Quit: This computer has gone to sleep)
[22:25:43] *** Joins: goldfish (~goldfish@user/goldfish)
[22:25:44] <SnoopJ> Certainly it does not prevent you from writing slow code, in any event.
[22:26:50] <lbracher> CuriousErnestBro, nice you got it! And you can always build quick modules in C. It's damn easy!
[22:27:31] *** Quits: teut (~teut@122.181.77.157) (Quit: Client closed)
[22:28:24] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:28:47] <meejah> ...or run it under PyPy
[22:29:18] <kosh> python is definitely slow as a language, most issues can be mitigated with things like numpy and scipy
[22:29:24] <kosh> however there are things where even that is not enough
[22:30:50] <SnoopJ> the majority of them, even
[22:31:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[22:31:44] <SnoopJ> lbracher, or even Python if what you want to do falls under the umbrella of things mypyc does well
[22:32:01] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Quit: So long King Bowser!)
[22:32:15] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[22:32:27] <kosh> you can use stuff like numba and cython to mitigate more issues
[22:32:40] <kosh> but there are places where even that is not really reasonable to do
[22:32:46] * SnoopJ suspects the complaint is an aesthetic one, not a technical one
[22:33:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:34:02] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[22:34:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:34:45] <CuriousErnestBro> I'm doing a BFS
[22:34:57] <CuriousErnestBro> with a queue
[22:35:03] <CuriousErnestBro> deque
[22:35:50] <kosh> for IO tasks you usually can't do much better than python without using exotic code
[22:35:59] <CuriousErnestBro> I'm calling deepcopy twice
[22:36:08] <kosh> that can be slow
[22:36:21] <MacGyver> Maybe don't do deep copies if you're searching.
[22:36:27] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[22:36:52] <kosh> actually today I had to help someone with some c++ code that was running really slowly and they where spending most of their time in malloc and free because they allocated and deleted memory of the same size at every call
[22:36:53] *** Quits: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr) (Quit: leaving)
[22:37:00] *** Joins: iflema (~ian@user/iflema)
[22:37:12] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 268 seconds)
[22:38:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[22:38:24] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[22:40:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:40:59] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:41:02] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[22:42:02] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[22:42:02] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[22:42:22] <bjs> CuriousErnestBro: why are you calling deepcopy in a BFS ?
[22:42:22] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:42:51] *** Quits: Jefren1 (~Jefren@70.35.67.96) (Ping timeout: 245 seconds)
[22:43:18] *** Quits: Elzington (~Elzington@static-68-235-44-38.cust.tzulo.com) (Quit: Leaving)
[22:43:22] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[22:43:25] *** Quits: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu) (Remote host closed the connection)
[22:43:48] <CuriousErnestBro> bjs because I have a matrix with "allowable states" and every branch sets a state equal to false
[22:43:49] *** Joins: phao (~phao@2804:d45:8e7a:de00:c065:3c08:f729:a40c)
[22:44:14] <CuriousErnestBro> hmmm maybe I should just do constant lookups in a global matrix
[22:44:45] <bjs> CuriousErnestBro: a BFS where each branch is making copies/new versions of the matrix sounds slow
[22:44:47] <bjs> in any language :)
[22:44:51] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[22:44:57] *** Joins: Jefren1 (~Jefren@70.35.66.44)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] <phao> Hi. Is there a better way to do stuff like this: col = [a for v in ITER for a in [proc(v)] if pred(a)] ? The idea is that I want to compute proc(v) for all v in ITER, but I'd like to get only the proc(v) such that pred(proc(v)) is true.
[22:45:06] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[22:45:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:45:17] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Quit: WeeChat 3.3)
[22:45:28] *** Joins: daex (~daex@user/daex)
[22:45:34] <bjs> phao: define better
[22:45:44] <bjs> you can obviously write a normal for loop and use a variable
[22:45:54] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[22:46:18] <SnoopJ> phao, `[val for v in ITER if pred(val := proc(v))]` perhaps? (3.8+ syntax)
[22:46:48] <SnoopJ> I'd probably just write a generator function
[22:47:18] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:26] <phao> Ok. Thank you all.
[22:47:27] <SnoopJ> `def pred_proc(it): for v in ITER: val = proc(v); if pred(val): yield val;;`
[22:47:46] *** Joins: stdout (~stdout@216.163.21.11)
[22:49:59] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:50:08] *** Quits: sebmont (~sebmont@79-73-131-124.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[22:51:35] <joris1> he
[22:51:51] *** Quits: zoneu (~zoneu@user/zoneu) (Quit: zoneu)
[22:52:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[22:52:51] *** Joins: darksun (~darksun@user/darksun)
[22:54:34] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:55:18] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[22:56:36] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Ping timeout: 245 seconds)
[22:57:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:57:16] <phao> bjs, SnoopJ Would you know if that `for a in [proc(v)]` in there is considered bad practice?
[22:57:27] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 264 seconds)
[22:57:33] <bjs> phao: it's not bad practice,  it was fairly common before we had :=
[22:57:55] <bjs> phao: although it's one of those things that when you write/see you should ask yourself "wait why am I doing all this work to avoid a function/normal for loop?"
[22:58:05] <SnoopJ> phao, it's smelly to me because it's another list that isn't necessary per se, but I turn comprehensions into generator functions once they pass a certain level of complexity
[22:58:19] *** Joins: sudomann_ (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[22:58:36] <phao> Ok. Thank you.
[22:59:02] <SnoopJ> You could probably address the "extra list" complaint by using () instead of [] anyway :)
[23:00:32] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:01:43] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:02:51] *** Quits: sudomann_ (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 264 seconds)
[23:02:56] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[23:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:03:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:03:34] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[23:03:52] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[23:04:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[23:04:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:05:14] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[23:06:27] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 264 seconds)
[23:06:36] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:07:15] *** Joins: nyah (~nyah@94.6.71.219)
[23:07:59] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:08:27] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Quit: Client closed)
[23:09:18] *** Joins: teut (~teut@122.181.77.157)
[23:09:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 264 seconds)
[23:09:27] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[23:10:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[23:11:15] *** Quits: pro_z (~pro_z@37.214.63.5) (Ping timeout: 264 seconds)
[23:11:33] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[23:12:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:14:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[23:15:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:15:09] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (Quit: *poof*)
[23:15:27] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[23:15:55] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:16:10] *** Quits: adeliktas (~adeliktas@2001:16b8:22e5:f300:6070:1d72:baa1:a7ff) (Quit: Client closed)
[23:17:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:19:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 264 seconds)
[23:19:09] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:19:56] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 245 seconds)
[23:20:24] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[23:20:49] *** Joins: smol (~smol@user/smol)
[23:21:21] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[23:21:38] <sstory> Why is there a syntax error in            if (limit_per_folder > 0) and ((num_images % limit_per_folder) = 0):
[23:21:54] <SnoopJ> sstory, one = is assignment, two == is comparison
[23:21:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[23:22:01] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[23:22:01] *** Quits: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com) (*.net *.split)
[23:22:01] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[23:22:01] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[23:22:01] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[23:22:01] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[23:22:01] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[23:22:04] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[23:22:10] *** Joins: foo (~foo@user/foo/x-8763512)
[23:22:10] <sstory> SnoopJ: oh, c like. I forget. Thanks
[23:22:10] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[23:22:10] *** Joins: streety (~streety@li761-24.members.linode.com)
[23:22:13] *** Joins: marienz (~marienz@libera/staff/marienz)
[23:22:16] *** Joins: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com)
[23:22:24] <sstory> hard to switch from bash, to python, java, etc. ;)
[23:22:25] *** Joins: duoi (~duoi@user/duoi)
[23:22:33] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[23:22:33] <SnoopJ> sstory, if you use Python 3.9, it'll tell you exactly where on the line the problem is ;)
[23:23:00] <sstory> My distro hasn't gotten there yet. Thanks!
[23:23:02] <SnoopJ> https://bpa.st/IMBQ
[23:23:15] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 264 seconds)
[23:24:50] <SnoopJ> sstory, the `friendly` module gives a similar explanation of what's going wrong here, for other versions: https://bpa.st/W4OA
[23:25:05] *** Joins: newpy (~newpy@2601:280:4381:1390:4584:88f3:53fe:a33b)
[23:25:31] <SnoopJ> oh, interesting, that one is indicated in the 3.8 error report as well
[23:26:04] <SnoopJ> wait, and 3.6. maybe I'm remembering a different thing here :)
[23:26:08] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:26:33] *** Quits: VaniaPy (~VaniaPy@46.12.188.40.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[23:27:18] *** Joins: morrigan_ (~m0rr1gan@user/m0rr1gan)
[23:28:33] *** Joins: morrigan1 (~m0rr1gan@user/m0rr1gan)
[23:30:45] *** Joins: resmo__ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[23:30:47] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 256 seconds)
[23:31:36] *** Quits: morrigan_ (~m0rr1gan@user/m0rr1gan) (Ping timeout: 245 seconds)
[23:32:53] *** Quits: smol (~smol@user/smol) (Quit: smol)
[23:33:17] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:4b55:7aa9:9a7:ec10) (Ping timeout: 250 seconds)
[23:35:25] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[23:36:48] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538) (Quit: Client closed)
[23:40:57] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[23:44:11] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8c9e:e156:58f7:e538)
[23:44:24] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 268 seconds)
[23:44:51] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:45:04] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:45:14] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:45:17] *** Joins: sudomannn (~sudomann@2601:543:100:2b70:240a:c606:8504:94ab)
[23:46:22] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[23:46:36] *** Joins: lukeaar (~lukeaar@45.132.224.81)
[23:46:40] *** Joins: Klinda (~superleag@user/klinda)
[23:49:39] *** Quits: sudomann (~sudomann@2601:543:100:2b70:ccbd:117f:1606:2594) (Ping timeout: 264 seconds)
[23:51:11] *** Quits: lukeaar (~lukeaar@45.132.224.81) (Ping timeout: 245 seconds)
[23:53:28] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:53:29] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[23:54:08] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:54:19] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[23:54:27] *** Joins: m0nk3yc0wb0y (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[23:56:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:57:56] *** Joins: fikran (~fikran@user/fikran)
[23:58:06] *** Joins: Gerula (~Gerula@user/gerula)
[23:59:09] <sstory> Snoopj: I think it showed it but I still didn't get it :( Oh well a Monday
[23:59:18] <sstory> I have it working now
[23:59:27] *** Quits: sudomannn (~sudomann@2601:543:100:2b70:240a:c606:8504:94ab) (Read error: Connection reset by peer)
[23:59:56] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 245 seconds)
