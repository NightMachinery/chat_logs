[00:01:01] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:01:44] *** Quits: KeiraT (~unknown@lulzsec.co.uk) (Ping timeout: 244 seconds)
[00:01:54] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[00:01:57] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[00:03:56] *** Joins: KeiraT (~unknown@lulzsec.co.uk)
[00:05:53] *** Joins: qlixed (~qlixed@152.170.36.244)
[00:06:54] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 264 seconds)
[00:08:40] *** Joins: agumonke` (~user@88.160.31.174)
[00:08:55] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:09:26] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[00:09:42] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:09:57] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:10:40] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:11:47] *** Quits: pneff_ (~pneff@81.6.40.205) (Ping timeout: 252 seconds)
[00:12:35] <dav1d> RoadRunner, do you have ~ open as a project?
[00:12:53] <dav1d> if you don't, it should only index, the virtualenv, python installations etc.
[00:13:09] *** Joins: Pitr (~pj@p3.ictree.nl)
[00:13:14] *** Joins: kiit (~kiit@e236041.upc-e.chello.nl)
[00:13:27] <RoadRunner> dav1d: yes, it seems to be treating my home dir as a project
[00:13:34] <grym> RoadRunner: yeah, that seems untoward
[00:14:15] <dav1d> is there a ~/.idea folder?
[00:14:53] <RoadRunner> dav1d: yes
[00:15:23] *** Joins: Pickchea (~private@user/pickchea)
[00:15:25] <dav1d> RoadRunner, then you did open ~ as a project at least once, might be enough to delete the .idea folder and any *.iml files laying around
[00:16:13] <grym> ^
[00:17:19] *** Joins: lazypeon (~lazypeon@www.ezid.rs)
[00:18:49] <RoadRunner> dav1d: I'll try that. I had problems adding an interpreter, pycharm, wouldn't just accept the path to my python (usr/bin/python3.8) and forced a path to my home dir where it was hell bent on seting up a virtual env
[00:19:24] <grym> venvs are a great idea
[00:19:30] <grym> developing in ${HOME}, less so
[00:19:49] <dav1d> RoadRunner, weird, usually has no issue for me adding an SDK and then let's you easily create a venv in ~/.virtualenvs
[00:19:58] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:20:10] *** Joins: ndegruchy (~nathan@156.55.174.130)
[00:20:10] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:20:40] *** Parts: teut (~teut@182.69.85.39) ()
[00:21:53] *** Quits: moonwhisper (~tyler.lub@99-152-114-229.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[00:22:02] <RoadRunner> SDK?
[00:22:02] *** Joins: tspng (~tspng@80-218-192-246.dclient.hispeed.ch)
[00:22:27] *** Joins: pnoud (~pnoud@user/pnoud)
[00:22:33] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:22:34] *** Joins: vodkra (~vodkra@user/vodkra)
[00:22:36] <faceface> raek: perfect, thank you
[00:22:41] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Quit: Going offline, see ya!)
[00:22:53] <faceface> I don't know why I didn't think of a 'main' function
[00:23:47] *** Joins: easior (~easior@61.155.142.70)
[00:24:12] <faceface> I have another question now... I want to write to file x while I read from file y. Do I nest 'with open(x,'w') as xf' under a 'with open(y) as yf' and put all code two levels indented?
[00:24:33] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[00:24:50] <RoadRunner> grym: I don't mind a virtual env, but I wish pycharm didn't force a path on me
[00:25:38] *** Quits: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net) (Remote host closed the connection)
[00:25:50] <faceface> Seems a bit ugly to have a 'with open('file to read from') as rf:' and then indented within that a 'with open('file to write to', 'w'):' and then within that code to loop through the first file and write to the second... Can I put both opens in one with?
[00:26:01] *** Joins: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net)
[00:26:15] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:26:57] <RoadRunner> dav1d: where should I check for .iml files?
[00:27:06] <dav1d> RoadRunner, in ~
[00:27:07] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[00:27:43] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[00:27:43] *** Quits: areicogi (~koning@c-24-5-121-76.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[00:27:51] <grym> RoadRunner: i tend to make a git repo, and then `charm .` in it, and don't let pycharm try to help me
[00:27:58] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[00:29:04] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[00:29:36] <dav1d> RoadRunner, after the files are gone, check if the project is still in the quick access for projects, if so there should also be a "manage projects" somewhere close
[00:30:03] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:31:12] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[00:31:25] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[00:31:35] *** Joins: ksr (~KSR@124.197.12.15)
[00:32:02] *** Joins: HighlyCurious (~HighlyCur@2600:1700:38d0:8250:f962:85b6:4379:dbb1)
[00:32:17] <HighlyCurious> Does gevent support select/poll ?
[00:32:47] <HighlyCurious> Per gevent doc, http://www.gevent.org/api/gevent.select.html, it does not support POLLPRI in poll and does not support xlist in select.
[00:32:52] <HighlyCurious> Is this still valid ?
[00:34:03] *** Joins: skapata (~Skapata@user/skapata)
[00:34:56] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:35:24] <RoadRunner> dav1d: got rid off .idea folder and can't see any .iml's in ~ also removed the ~ project from recent projects. Will reboot the app now and see what happens.
[00:35:59] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 252 seconds)
[00:36:20] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[00:36:36] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net)
[00:36:37] *** Joins: jabberwock (~lidless@user/jabberwock)
[00:36:52] <RoadRunner> grym: what's the advantage of making a git repo rather than just using 'a' folder for development?
[00:37:09] <jabberwock> version tracking?
[00:37:28] <grym> RoadRunner: i don't trust myself to write code without VCS
[00:37:35] <grym> at this point it just seems insane
[00:37:38] *** Joins: easior (~easior@27.115.42.250)
[00:38:16] <faceface> given a Path of 'blah/some.file', how do I open a new file called 'blah/some-new.file'?
[00:38:50] <RoadRunner> grym: I understand where you are going but I am just at an early stages of learning and just want to keep things simple...
[00:38:52] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:39:04] <grym> faceface: .with_name()
[00:39:07] <faceface> [f.parts[-2], f.stem + new, f.parts[-1].join('/')
[00:39:11] <faceface> grym: ooh
[00:39:14] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:39:22] <grym> faceface: https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name
[00:39:38] <grym> RoadRunner: then you'll want to get on board with VCS asap, then.  it's simpler.
[00:39:40] *** Quits: yogoyo (~weechat@user/yogoyo) (Quit: WeeChat 2.3)
[00:39:49] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:40:05] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[00:40:11] <grym> the comprehension burden of a file that's 90% commented out code that kinda sorta worked last week i think ... is _huge_
[00:40:18] <grym> it's actually more work to think in that file
[00:40:22] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[00:40:29] <grym> and i think it's an impediment to learning
[00:40:53] *** Joins: jdmark (~jdmark@67.8.137.130)
[00:40:56] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 252 seconds)
[00:41:15] *** Joins: dme86 (~dan@user/dan86)
[00:41:16] <faceface> grym: opening the file wasn't the hard part, it was how to rename the file.stem and then put the whole path back together again
[00:41:34] <RoadRunner> grym: I'll look into it - thanks
[00:41:39] <grym> faceface: yeah.  your question showed me .with_name, by the way; i had known about .with_suffix() already
[00:42:02] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:42:02] <grym> faceface: oh.  and you want .with_stem() anyway, haha
[00:42:12] <grym> (assuming you want to preserve the extension)
[00:42:12] <faceface> oh, super nice
[00:42:14] *** Quits: kiit (~kiit@e236041.upc-e.chello.nl) ()
[00:42:26] *** Quits: tspng (~tspng@80-218-192-246.dclient.hispeed.ch) (Quit: Leaving, bye!)
[00:42:30] <grym> someone thought about pathlib super duper hard, yep
[00:42:34] <faceface> grym: yeah, I was thinking to preserve the extension
[00:43:19] <faceface> ah, with_name keeps the path
[00:43:30] *** Joins: mickey (~user@user/mickey)
[00:43:31] <grym> with_stem is new in 3.9, fwiw
[00:43:43] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[00:44:08] <faceface> right, I dont' see it
[00:44:21] <faceface> ValueError: Invalid suffix 'bobob'
[00:44:30] <grym> suffixes must start with a .
[00:44:35] <grym> i think
[00:44:48] <faceface> I see
[00:45:07] <faceface> I want '.oldsuf' -> '-blah.oldsuf'
[00:45:18] <faceface> but with name gives me what I need
[00:45:20] <faceface> thank you
[00:46:26] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[00:46:44] <faceface> grym: Just while you're here, if you are reading from x and writing to y line by line, would you nest two 'with's within each other?
[00:47:47] *** Joins: privat (~privat@h081217083231.dyn.cm.kabsi.at)
[00:49:22] <grym> `with (mypath.open('r') as infile, myotherpath.open('w') as outfile):`, i believe, and i _think_ the parens are required
[00:49:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:49:52] *** Quits: privat (~privat@h081217083231.dyn.cm.kabsi.at) (Client Quit)
[00:49:52] <grym> (but i'm not positive)
[00:49:57] <faceface> cool
[00:50:31] *** Joins: stwange (~j@90.253.222.210)
[00:51:00] <WhyNotHugo> graingert: that worked wonders, thanks!
[00:51:07] <stwange> This might not be the best place to ask for help but I'm trying to run an Azure python function and this line is getting me 500. There's no log output (only figured out it was this line by elimination). It works locally.                 r = http.request('PURGE', purge_url, retries=False, fields=headers, timeout=10.0)  Full code here: https://pastebin.com/upJUpDit is there something obviously stupid I'm doing wrong?
[00:51:08] <graingert> WhyNotHugo: ?
[00:51:13] *** Joins: alguien_ (~alguien@user/alguien)
[00:51:39] <WhyNotHugo> Sorry, that was hours ago. You suggestion for `aiostream.stream.list`!
[00:52:14] *** Joins: leighbb (~leighbb@user/leighbb)
[00:52:24] <graingert> WhyNotHugo: ah yes it's a nice operator
[00:52:29] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 252 seconds)
[00:52:53] *** Quits: jabberwock (~lidless@user/jabberwock) (Quit: WeeChat 3.3-dev)
[00:53:07] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-2169-6a0a-8676-2862.res6.spectrum.com)
[00:53:33] *** Quits: geli (~gelignite@55d463ac.access.ecotel.net) (Quit: Stay safe!)
[00:53:34] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:53:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:54:57] <WhyNotHugo> Any asyncio equivalent for `value in generator`?
[00:56:26] <raek> faceface: you can enter two contexts in the same with-block using a comma:   with open("a.txt", "r") as a, open("b.txt", "w") as b:
[00:56:35] *** Joins: jabberwock (~lidless@user/jabberwock)
[00:57:50] <raek> if you want a line break after the comma, you need to add a backslash at the end of the line. in Python 3.10 it will be possible to use parentheses to avoid the backslash: https://docs.python.org/3.10/whatsnew/3.10.html#parenthesized-context-managers
[00:58:00] *** Joins: abn_ (sid376310@id-376310.tinside.irccloud.com)
[00:58:00] *** Joins: PotatoGim_ (sid99505@id-99505.tooting.irccloud.com)
[00:58:02] *** Joins: hogarius_ (hogarius@id-222644.highgate.irccloud.com)
[00:58:03] *** Joins: Karyon_ (~Karyon@user/karyon)
[00:58:54] <Linkandzelda> how do I take a list of potential lists and non-lists, and produce a single list containing all items and items from the lists in those potential lists? e.g. [[1,2], 3] into [1,2,3]
[00:59:22] <faceface> grym: just so you know, parens are *not* required
[00:59:34] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[00:59:36] <faceface> grym: it throws invalid syntax
[00:59:44] <faceface>     new = bim.with_name(bim.stem + '_new.bim')
[00:59:51] <faceface>     with bim.open('r') as oldbim, new.open('w') as newbim:
[00:59:56] <faceface> Perfect :-)
[00:59:56] *** Joins: bss (bss@rie.incorporeal.org)
[01:00:08] <grym> faceface: cool.
[01:00:36] <grym> i think i was thinking of either nested unpacking or like, import linesplitting without nasty \ everywhere
[01:00:46] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:02:18] <CrtxReavr> Did 2.7 support with:?
[01:02:32] <NeilRG> Does this make sense? numpy_exists = importlib.machinery.PathFinder.find_spec('numpy') is not None
[01:02:46] *** Joins: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108)
[01:03:29] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[01:05:05] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[01:05:05] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[01:05:05] *** Quits: abn (sid376310@id-376310.tinside.irccloud.com) (*.net *.split)
[01:05:05] *** Quits: nicolasbock (sid352851@canonical/nicolasbock) (*.net *.split)
[01:05:05] *** Quits: hogarius (hogarius@id-222644.highgate.irccloud.com) (*.net *.split)
[01:05:05] *** Quits: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107) (*.net *.split)
[01:05:05] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[01:05:05] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) (*.net *.split)
[01:05:05] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[01:05:05] *** hogarius_ is now known as hogarius
[01:05:05] *** abn_ is now known as abn
[01:05:06] *** PotatoGim_ is now known as PotatoGim
[01:05:38] <RoadRunner> dav1d: it worked, thank you. The .idea folder didn't come back and charm boots faster now although it still tries to index something and still configures an interpreter instead of just remembering it from before
[01:05:58] <dav1d> nice
[01:06:05] <dav1d> maybe try invaldiating caches
[01:06:10] <grym> CrtxReavr: yes
[01:06:15] <dav1d> force a rebuild of the index and hope that fixes it
[01:06:25] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[01:06:44] <RoadRunner> dav1d: how?
[01:06:58] <dav1d> RoadRunner, double shift, invalidate caches
[01:06:59] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:06:59] *** Quits: adde9708 (uid139358@id-139358.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:07:11] *** Quits: ndegruchy (~nathan@156.55.174.130) (Ping timeout: 268 seconds)
[01:07:21] <RoadRunner> dav1d: and then reboot the app again?
[01:07:27] <dav1d> should come up while typing "invalidate"
[01:07:32] <dav1d> iirc it restarts pychar
[01:07:35] <dav1d> *pycharm
[01:07:58] <bbear> hello
[01:08:05] *** Joins: derelict (~derelict@user/derelict)
[01:08:30] <bbear> what kind of bleeding edge but still very production-ready and rock-solid would you recommand for serving HTTP requests ?
[01:08:40] <bbear> *library
[01:09:02] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[01:09:05] <Habbie> bbear, why bleeding edge?
[01:09:11] <Habbie> bbear, it's a curious combination of asks :)
[01:09:34] <grym> fsvo "bleeding edge", fastAPI
[01:09:58] <grym> we use it preferentially now
[01:10:58] *** Quits: easior (~easior@27.115.42.250) (Ping timeout: 244 seconds)
[01:11:02] *** Joins: bilegeek (~bilegeek@2600:1008:b017:63a6:c26d:d119:faaa:a6d7)
[01:11:15] *** Joins: Vonter (~Vonter@user/vonter)
[01:12:37] *** Joins: fluffyballoon31 (~fluffybal@2620:72:0:6480::11fd)
[01:12:57] *** Joins: Vision (~Vision@024-178-231-009.res.spectrum.com)
[01:13:04] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1005)
[01:13:54] *** Quits: lazypeon (~lazypeon@www.ezid.rs) (Quit: Leaving.)
[01:14:53] *** Quits: Celeo (~Celeo@2603-8001-3301-2e00-2169-6a0a-8676-2862.res6.spectrum.com) (Quit: Leaving)
[01:15:00] *** Joins: rememberYou (~someone@user/rememberyou)
[01:15:40] *** Quits: wattux (~wattux@2a02:810a:1140:4b6c::f428) (Quit: Client closed)
[01:15:54] <RoadRunner> dav1d: invalidated caches; now charm was indexing only /usr/bin/python3.8 and reported that it took it 1min5sec. Does that seem about right for a Core 2 Duo cpu with 4 Gigs of RAM?
[01:16:12] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Ping timeout: 250 seconds)
[01:16:25] <rememberYou> hi guys, do you know how I could transform the following str "0x4b00" in the following b"\x4b\x00" byte?
[01:16:28] <TML> indexing a binary file?
[01:16:38] <TML> that seems unlikely to lead to anything useful
[01:17:45] <RoadRunner> TML: then something is still off?
[01:17:55] <dav1d> RoadRunner, yeah, sounds alright, depends a lot on the amount of dependencies you have installed, but 1min is not bad, my Intellij likes to index for like 15min
[01:18:20] <nedbat> rememberYou: int("0x4b00", 0).to_bytes(2, "big")  -->  b'K\x00'
[01:18:33] <rememberYou> thank you very much
[01:18:44] <supakeen> I'd go with: >>> bytes.fromhex("0x4b00".replace("0x", ""))
[01:18:51] <supakeen> So you don't need to have the length and stuff.
[01:19:01] <supakeen> (with .removeprefix in 3.9?)
[01:19:07] <TML> RoadRunner: not sure - I don't use any IDEs. Just seems odd.
[01:19:21] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[01:19:42] *** fluffyballoon31 is now known as fluffyballoon
[01:19:52] *** Quits: HighlyCurious (~HighlyCur@2600:1700:38d0:8250:f962:85b6:4379:dbb1) (Quit: Client closed)
[01:20:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[01:21:04] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[01:21:51] *** Joins: Obo (~roberto@139.47.77.82)
[01:22:07] <bbear> let's do it with fastapi
[01:22:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:23:00] *** Joins: ultralisk (~Ultralisk@2a00:23c6:4b0e:e900:4d46:e635:e9e:24ee)
[01:23:54] *** Quits: sintax (~sintax@4.4.61.62) (Read error: Connection reset by peer)
[01:26:22] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-58.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:27:07] *** Quits: fluffyballoon (~fluffybal@2620:72:0:6480::11fd) (Quit: Client closed)
[01:27:23] *** Quits: ultralisk (~Ultralisk@2a00:23c6:4b0e:e900:4d46:e635:e9e:24ee) ()
[01:27:30] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[01:27:59] <dav1d> TML, it's not indexing a binary file, the directory, including the dependencies
[01:28:12] <TML> dav1d: a directory under /usr/bin?
[01:28:33] <dav1d> TML, either he reported it wrong or pycharm just shows him the SDK version/exectuable
[01:28:37] <TML> I see
[01:31:10] *** Quits: joseba (~joseba@193.9.4.11) (Read error: Connection reset by peer)
[01:31:33] *** Quits: KeiraT (~unknown@lulzsec.co.uk) (Ping timeout: 272 seconds)
[01:32:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:33:11] *** Joins: alaudet (~al@NTL208H101-111-192.nt.net)
[01:33:31] *** Quits: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.1)
[01:33:41] *** Quits: Snyp (~rksht@49.207.192.68) (Quit: WeeChat 3.1)
[01:33:54] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 240 seconds)
[01:34:42] *** Quits: alaudet (~al@NTL208H101-111-192.nt.net) (Client Quit)
[01:35:08] *** Joins: alaudet (~al@NTL208H101-111-192.nt.net)
[01:35:56] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[01:36:00] *** Quits: agumonke` (~user@88.160.31.174) (Read error: Connection reset by peer)
[01:36:10] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[01:36:17] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:37:50] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 244 seconds)
[01:38:15] *** Quits: armandokeller (~armandoke@200.159.170.169) (Quit: Client closed)
[01:38:21] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[01:39:02] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[01:39:39] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[01:41:32] *** Joins: ksr (~KSR@124.197.12.15)
[01:41:43] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[01:42:11] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[01:42:21] *** Joins: KeiraT (~unknown@lulzsec.co.uk)
[01:43:03] *** Joins: jamea97 (~jamea77@10.189-202-213.bestelclientes.com.mx)
[01:43:04] <jamea97> any plugin for visual studio for check identation in python code?
[01:43:39] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[01:44:32] <dale> I like to correctly capitalize the names of software when writing commit messages or the like, so I'll google the name to see how the README or whatever writes the software.  Imagine my surprise searching for "mypy" and getting back pretty equal shares of mypy, Mypy, and even MYPY (from Google itself).  Surprisingly, no MyPy, which was actually my first guess.
[01:45:22] *** Quits: Obo (~roberto@139.47.77.82) (Quit: WeeChat 2.8)
[01:45:25] <grym> jamea97: there are a few linters, as well as some autoformatters.
[01:45:27] <nedbat> dale: people are pretty bad at this :)   I tend to follow the homepage of the project.
[01:46:02] <dale> nedbat: Agreed!
[01:46:08] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[01:46:29] <dale> nedbat: Though in this case mypy-lang.org is not the most helpful.  <h1>mypy</h1> <p>Mypy is [...]
[01:46:35] <dale> (I'm going with Mypy)
[01:46:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:47:03] *** Joins: ano (~weechat@user/ano)
[01:47:03] <nedbat> dale: words beginnning sentences are often capitalized.  I would use "mypy" if it's in the h1
[01:48:09] <dale> nedbat: I am of the opinion that a proper noun should be capitalized consistently without regard to being the first word in a sentence, but I'm only an amateur English pedant, surely.
[01:48:31] <nedbat> dale: many projects do not use proper-noun-casing
[01:48:39] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[01:49:00] <grym> dale: but, are you an Amateur English Pedant, and if so, which or all of the three constituent words denoting that proper nou... i'll see myself out
[01:49:09] <dale> nedbat: Also agreed!  It's almost like other developers don't sweat details like this?!  I can't imagine what they spend their time on otherwise.
[01:49:18] <dale> grym: lol
[01:49:26] <grym> unix-y lowercase-name as proper nouns also make sense.  like, grep's name is grep, not GREP
[01:49:30] <grym> or Grep
[01:49:30] <nedbat> dale: it's not that they don't sweat details. It's that the command is lower-case, so the name is lowercase.
[01:49:38] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[01:49:39] <nedbat> what grym said
[01:50:06] <grym> ... but then i too fret a little about capitalising them in the rare occasions i start a text sentence with the name
[01:50:10] <dale> At a prior job we explained the idea of "cron jobs" to some of the business people, and they started writing "CRON" in emails because I guess they thought it was an acronym.
[01:50:20] <nedbat> or they had just seen TRON
[01:50:28] <grym> Ceep Right On Numberin'
[01:50:29] <ssbr_> APA style is to capitalize at the start of a sentence even if the word is conventionally not capitalized -- e.g. "<sentence>De Morgan's law is awesome.</sentence>", not "de Morgan's law is awesome."
[01:50:59] <nedbat> meanwhile, at work, we decided that "edX" was never capitalized, even at the start of a sentence.
[01:51:06] <ssbr_> (but also "never capitalize a symbol", which means "never start a sentence with a symbol")
[01:51:07] *** Joins: agumonke` (~user@88.163.231.79)
[01:51:07] <grym> apple article dropping, etc.
[01:51:08] <nedbat> which is why I try not to start sentences with that word.
[01:51:15] *** Quits: greedom (~greedom@2001:16b8:326f:5100:6427:5e2c:e3c4:ff7a) (Remote host closed the connection)
[01:51:17] <grym> ssbr_: yeah, i'll reword to... uh, yes, that ^
[01:51:28] <dale> nedbat: That's the galaxy brain, right there.
[01:51:32] <ssbr_> I'm spy chic
[01:51:52] <grym> capitalisation games are ones up with which one shall not be obliged to put.
[01:51:54] <grym> there.  done.
[01:52:03] *** Joins: greedom (~greedom@2001:16b8:326f:5100:6427:5e2c:e3c4:ff7a)
[01:52:26] <grym> take that, father lowth
[01:52:36] <dale> I tend to make a distinction, with formatting, when I'm talking about a command (ex. `mypy`) versus when I'm talking about the project/software outside of the context of literal commands (ex. Mypy).
[01:52:42] <ssbr_> dale: same.
[01:52:49] <grym> yep!
[01:52:51] <dale> But I was also abused by Sun's Javadoc conventions as a child.
[01:53:02] <ssbr_> For me, the start of the sentence would be either "`mypy` is" or "Mypy is", never "mypy is"
[01:53:10] <nedbat> dale: yay! XML in comments!
[01:53:12] <grym> and i'll disambiguate if possible with rendering tricks so that the command name is rendered in monospace or what have you
[01:53:12] <nedbat> :(
[01:53:15] <ssbr_> (but I'd be quite happy to say "Is mypy")
[01:53:22] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9c3:9440:99d0:1faa)
[01:53:37] <ssbr_> I like how we're all on a wavelength in this.
[01:53:53] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[01:53:53] <supakeen> I always capitalize nicknames and project names.
[01:53:54] <ssbr_> considering how nit-picky this is, I was expecting some major deviation...
[01:54:03] <ssbr_> okay Supakeen
[01:54:03] <supakeen> To discern them from normal words.
[01:54:06] <nedbat> now if we could decide whether coverage.py is "coverage" or "coverage.py"....
[01:54:09] <ssbr_> good to know Supakeen
[01:54:10] <supakeen> No problem SSBR-.
[01:54:15] <grym> nedbat: covpy, obviously
[01:54:16] <ssbr_> Supakeen: how does this not infuriate you
[01:54:30] <supakeen> Thick skin.
[01:54:37] <supakeen> Or just thick, I don't know yet.
[01:54:45] *** Joins: sharksauce (sharksauce@user/sharksauce)
[01:54:47] <grym> i was gonna go with a surprisingly large collection of pogo sticks
[01:54:58] <ssbr_> nedbat: make it cOVERAGE just to screw with people.
[01:55:03] <grym> cURL
[01:55:07] <ssbr_> oh no
[01:55:09] <grym> oh yes!
[01:55:17] <ssbr_> I had no idea that was the joke there. that makes perfect sense.
[01:56:34] <dale> nedbat: I didn't really remember this, but I guess it was originally just HTML 4-ish in comments: https://web.archive.org/web/20001109015600/http://java.sun.com/products/jdk/javadoc/writingdoccomments/index.html
[01:56:49] <dale> nedbat: Unclosed <p> tags everywhere!  Run!
[01:57:50] *** Joins: teut (~teut@182.69.85.39)
[01:57:53] <teut> https://www.techbeamers.com/python-multiple-inheritance/
[01:58:09] <teut> TeamMember.__init__(self, name, uid)
[01:58:09] <teut>       Worker.__init__(self, pay, jobtitle)    what kind of thing is this?
[01:58:22] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[01:58:51] <teut> does running constructor of both superclasses worked this way?
[01:58:55] <teut> did*
[01:59:30] <nedbat> teut: you should avoid multiple inheritance, and if you can't, you shouldn't do it the way this page describes.
[02:00:26] <dale> teut: But yes, that used to be the way, long ago before super().
[02:00:27] <bjs> teut: this way breaks when the class gets used in a bigger program with more inheritance.  super() is carefully written to get it right
[02:00:46] <rpkilby> nedbat, in this case, the impetus is combining two django model manager classes.
[02:01:21] <teut> thanks for the support rpkilby
[02:01:26] *** Joins: Nact (~l@host-85-27-127-203.dynamic.voo.be)
[02:01:42] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:01:47] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[02:02:05] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:02:11] <nedbat> rpkilby: can you say more about why they're being combined? There might be other ways
[02:02:35] <dale> That page actually does it both ways, with and without super.  super(cls, self) is Python 2, right?  Python 3 now you just do super(self)?
[02:02:47] <bjs> dale: python3 is just super()
[02:02:47] *** Joins: matsaman (~matsaman@user/matsaman)
[02:03:30] <dale> Oh, fab.  Thanks.  I have only extracted myself from a large Python 2 code base for about a month.
[02:03:35] <bjs> dale: and that page is missing examples using super().__init__(...)  which is the usual way you want to write things,  if you want everything to work when used with MI
[02:03:43] <dale> bjs: Agreed
[02:04:18] *** Quits: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net) (Ping timeout: 240 seconds)
[02:04:39] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Quit: Client closed)
[02:04:55] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[02:05:18] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[02:05:53] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[02:06:53] <teut> whats the modern way to run both or all the constructors?
[02:07:04] <bjs> teut: using super()
[02:07:05] *** Joins: runciter (~runciter@user/runciter)
[02:07:05] <teut> all the __init__ s
[02:07:11] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[02:07:13] *** Quits: Akuli (~Akuli@87-94-111-251.bb.dnainternet.fi) (Quit: Leaving)
[02:07:25] <rpkilby> nedbat: they're combining a UserManager for creating users, and the other is the InheritanceManager from django-model-utils that allows you to select the subclasses of the parent table in an MTI setup
[02:07:27] <teut> super(cls,  self).__init__()?
[02:07:38] <bjs> teut: you put a single super().__init__(...) call in every `def __init__` (with the right arguments)
[02:07:42] <ssbr_> teut: super().__init__() will forward to the next thing in the MRO. As long as everyone uses it, every __init__ will be called.
[02:08:40] <teut> every?, there's just one  child class with two parents
[02:08:48] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[02:08:48] <bjs> teut: yes, every.
[02:08:56] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[02:09:50] *** Joins: dme86 (~dan@user/dan86)
[02:09:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:10:05] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 268 seconds)
[02:10:14] <bjs> teut: here's an example https://bpa.st/PT7Q  see how putting a super().__init__() in every `def __init__` means that all of the constructors got called, in the right order, and only once, for instances of each class
[02:10:21] <Xano> To come back to my encoding problem from earlier, it appears I made the assumption UTF-8 was the default, even on Windows, but apparently that's not the case and that makes sense. Now, the question is for an application of a certain size, where the applications's own packaged files are UTF-8, but user-provided files may be in any encoding, what are good practices to write code that must be able to open any of these files? A wrapper
[02:10:21] <Xano> around open() that checks if the file path belongs to the application, and if so, set encoding='utf-8'?
[02:10:57] <teut> thats the classic diamond code, you took it from guido's post?
[02:11:55] *** jwhisnant_ is now known as jwhisnant
[02:11:59] <bjs> well no I just wrote it now
[02:12:04] <bjs> but yes, it's very classic.
[02:12:23] <teut> https://bpa.st/OGCA
[02:12:36] <teut> there's the proble,
[02:12:40] <teut> m*
[02:12:51] <bjs> teut: what's the problem?  No you shouldn't call super().__init__ multiple times in the same class
[02:13:05] <bjs> teut: my code did it correctly already.
[02:13:21] <bjs> (did you run it to see that it called all the __init__s for D already?)
[02:13:29] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 244 seconds)
[02:13:56] *** Joins: jmcantrell (~weechat@86.106.143.32)
[02:14:03] <teut> https://bpa.st/3H4Q
[02:14:13] <teut> this is what is being asked
[02:14:29] <bjs> teut: being asked by what/who?  that just looks totally wrong to me
[02:14:39] <rpkilby> I think teut is confused by your earlier statement - incorrectly that they need to call super once for every subclass inside the subclass's init
[02:14:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[02:15:00] *** Joins: __jmcantrell__ (~weechat@89.45.224.250)
[02:15:03] <rpkilby> once for every parent class*
[02:15:14] <teut> Uploaded file: https://uploads.kiwiirc.com/files/5dd8cbe5b982474c3db4cd2d9cfecf3b/pasted.txt
[02:15:21] <bjs> rpkilby: I said what I said very carefully,  that there should be exactly 1 super call inside every `def __init__`.
[02:15:24] <teut> even this looks like that only
[02:15:42] *** jmcantrell is now known as Guest715
[02:15:42] *** Quits: Guest715 (~weechat@86.106.143.32) (Killed (zirconium.libera.chat (Nickname regained by services)))
[02:15:42] *** __jmcantrell__ is now known as jmcantrell
[02:15:43] <bjs> teut: just slow down for a second,  my paste right.  Have you run it?  Do you see that my code (as I gave it) was already correct
[02:15:45] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:16:07] *** Joins: __jmcantrell__ (~weechat@89.45.224.149)
[02:16:07] *** Quits: jmcantrell (~weechat@89.45.224.250) (Killed (mercury.libera.chat (Nickname regained by services)))
[02:16:07] *** __jmcantrell__ is now known as jmcantrell
[02:16:11] <teut> what do I when that's the old guido post, even reymond hettinger has one
[02:16:18] <rpkilby> bjs: right, I'm saying that I think they misread your statement
[02:16:25] <teut> I already know the diamond pattern
[02:16:57] <bjs> teut: okay I get that you know the diamond pattern,  but let's take this one step at a time.  My code here https://bpa.st/PT7Q has a diamond in it,  what did you want to ask/say about this code?
[02:17:26] <jamea97> thanks
[02:18:00] *** Joins: salpynx (~salpynx@121.73.84.248)
[02:18:24] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[02:18:54] <teut> https://bpa.st/D4GA  ok I m running your code, meanwhile this is what I m asking from the start
[02:19:02] <teut> can you do this any way?
[02:19:08] <bjs> teut: okay but _what_ are you asking?
[02:19:16] <bjs> teut: do what exactly?
[02:19:56] <dale> bjs: Perhaps they're asking about how to handle the case where a child class with two parent classes needs to pass different arguments to each of the two parent class's constructors.
[02:20:14] <teut> yes dale understood is right
[02:20:16] <bjs> Perhaps,  but teut's example doesn't even have child/parent classes.
[02:20:18] <bjs> Okay then
[02:20:34] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:20:40] <teut> now I asked this question  1 month ago too, when I was doing something in kivy
[02:20:41] <bjs> oops I misread, now I see it yes
[02:20:42] <dale> bjs: This one does: https://uploads.kiwiirc.com/files/5dd8cbe5b982474c3db4cd2d9cfecf3b/pasted.txt
[02:20:48] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[02:20:50] <bjs> yeah I see I had wrong paste open :)
[02:21:06] <bjs> teut: okay, so with multiple inheritance you have to be careful
[02:21:37] <teut> multiple inheritance has so many confusions ,really java people were intelligent to block it , now I feel
[02:21:40] <bjs> teut: to make sure that "parent" signatures are consistent.  Something like mypy would probably totally reject your class hierarchy as it's very fragile
[02:21:43] <bjs> teut: Java has MI ?
[02:21:49] <teut> it doesnt
[02:22:00] <bjs> teut: it wasn't a question, i'm telling you, java has multiple inheritance
[02:22:08] <teut> interface crap
[02:22:11] <bjs> yes
[02:22:25] *** Quits: jamea97 (~jamea77@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 268 seconds)
[02:22:33] <teut> yes the class hierarchy is fragile
[02:22:48] <bjs> teut: *yours* is yes, because the parents accept different sets of arguments
[02:22:50] <dale> Java also has method overloading.
[02:22:59] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[02:23:07] <teut> Java is inherited from c
[02:23:17] *** Joins: pnoud (~pnoud@user/pnoud)
[02:23:24] <bjs> teut: I'm not sure what you mean by "inherited from C",  they're very different languages
[02:23:25] <jwhisnant> https://www.globalnerdy.com/wordpress/wp-content/uploads/2013/01/java-problem-factory.jpg
[02:23:29] <teut> so it does  but you blocked it due to whatever reasons
[02:24:01] <teut> I mean James gosling didnt want to use c++ so he made java , the adaptations were from c
[02:24:02] <rpkilby> teut: regarding the model managers, you shouldn't need to worry about `__init__`
[02:24:06] <bjs> teut: either you can re-structure your code so that you don't have the situation where different parents have different parameters,  or you can rewrite the __init__s to make the arguments optional and pass them on if they exist
[02:24:11] <bjs> teut: "you blocked it" ?
[02:24:20] *** Quits: ntdll_ (~ntdll@user/ntdll) (Ping timeout: 252 seconds)
[02:24:33] <teut> rpkilby , well I was generally asking things about classes
[02:24:52] <teut> asking general things about classes  , whatever;s correct
[02:24:52] <rpkilby> right, just making sure you didn't think it was necessary for that case.
[02:25:10] <teut> yes I will do it as you said rpkilby
[02:25:22] <rpkilby> A lot of Django's classes are designed to be mixed, and you don't usually end up with awkward multiple inheritance init sceenarios like this
[02:25:40] <rpkilby> just wanted to make sure you were clear on that
[02:25:49] <teut> bjs , I realise that my code would be very confusion  once you chance  the "c" with an "a"
[02:25:54] *** Quits: cth (~Cthulchu@193.194.107.188) (Ping timeout: 240 seconds)
[02:25:56] <teut> confusing*
[02:26:02] <teut> change*
[02:26:25] <matsaman> Is pyftpdlib the best quick & simple FTP server (a la http.server for an HTTP server)?
[02:26:31] <teut> yes I m clear on that rpkilby
[02:26:38] <teut> thanks for the help
[02:26:50] <bjs> teut: here's one way to "pass" those argumetns along https://bpa.st/6UVQ
[02:27:12] *** Quits: Barones (~Barones@2804:48dc:8500:0:9d7a:5ce0:8e66:14dc) (Remote host closed the connection)
[02:27:23] <TML> teut: I'm guessing your already familiar with it, but the mantra "Prefer composition over inheritance" comes to mind as I read your discussion :)
[02:27:26] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[02:27:26] *** Joins: Barones (~Barones@2804:48dc:8500:0:f884:c052:d2c4:4f9f)
[02:27:41] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[02:27:42] <TML> s/your/you're/
[02:28:05] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:28:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:28:22] <teut> yep, composition over inheritance is always  better to use
[02:28:38] <TML> it makes a lot of MI problems just disappear
[02:28:39] <teut> debugging it bjs
[02:28:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[02:28:44] *** Joins: p-i-_ (~Ohmu@node-n7c.pool-118-173.dynamic.totinternet.net)
[02:29:06] <teut> if you dont have MI , you do not have the MI problems...
[02:29:08] <bjs> teut: yes especially if your different "parents" have different sets of arguments, maybe they're just not really part of the same kind of thing and they'd be better not as inheritance at all
[02:29:23] *** Joins: cth (~Cthulchu@193.194.107.250)
[02:29:30] *** Quits: p-i- (~Ohmu@node-n9d.pool-118-173.dynamic.totinternet.net) (Ping timeout: 244 seconds)
[02:29:49] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[02:30:01] <teut> yes , some kind of "sense" came to me the last time I asked this question, but it could be a thing so I asked
[02:31:09] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:34] *** Joins: PolyBlank (~Polyblank@user/polyblank)
[02:32:01] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[02:32:15] *** Quits: PolyBlank (~Polyblank@user/polyblank) (Quit: Leaving)
[02:32:49] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:33:03] *** Joins: jinie (~jimmy@188.114.173.37)
[02:33:07] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Ping timeout: 244 seconds)
[02:33:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[02:34:09] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 244 seconds)
[02:34:44] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[02:34:51] *** Joins: dme86 (~dan@user/dan86)
[02:35:15] *** Quits: Adoi (~Adoi@user/adoi) (Remote host closed the connection)
[02:35:30] *** Joins: Adoi (~Adoi@user/adoi)
[02:37:08] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[02:37:08] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-2169-6a0a-8676-2862.res6.spectrum.com)
[02:37:50] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 268 seconds)
[02:38:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:38:07] <teut> well, I saw what happened but I do not have any logic to why that happened
[02:38:55] *** Joins: malcolm (~Guest49@121.99.224.240)
[02:39:00] <teut> super, removed repeated __init__ calls, seems there is more to this
[02:39:48] *** Quits: mborus (~mborus@2001:16b8:6f74:3600:e9b9:273a:d4d3:cf47) (Quit: Client closed)
[02:40:21] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 244 seconds)
[02:41:51] *** Quits: alguien_ (~alguien@user/alguien) (Ping timeout: 272 seconds)
[02:42:16] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 268 seconds)
[02:43:46] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[02:43:49] <teut> Uploaded file: https://uploads.kiwiirc.com/files/1495d57ef766101ab8f980148d6c447a/pasted.txt
[02:44:06] <teut> this much code rejects the C parent's init , but that didnt?
[02:44:15] *** Joins: c10l (~c10l@89.34.167.207)
[02:45:13] *** Joins: Polyblank_ (~Polyblank@user/polyblank)
[02:45:13] *** Quits: Polyblank_ (~Polyblank@user/polyblank) (Client Quit)
[02:45:35] *** Joins: Polyblank (~Polyblank@user/polyblank)
[02:45:59] <Polyblank> \whois polyblank
[02:46:05] *** Joins: jazzy (~jaziz@2600:380:8739:55:6dd6:5004:ea3a:7085)
[02:46:18] <tunixman> That's a good question.
[02:46:30] <Polyblank> I will ask my mom
[02:46:47] <tunixman> Polyblank: "is using a secure connection"
[02:47:30] <Polyblank> thanks, I notice some people have their public IP's shown, while others do not
[02:47:38] <Polyblank> was trying to see if mine was visible
[02:47:57] *** Joins: audiocat (~audio@2603-8081-1800-0062-58f8-e9e7-7a3e-e9cc.res6.spectrum.com)
[02:49:18] *** Quits: somlis (~somlis@user/somlis) (Write error: Connection reset by peer)
[02:49:28] *** Quits: Polyblank (~Polyblank@user/polyblank) (Client Quit)
[02:50:35] *** Joins: jpic (~jpic@82.142.9.26)
[02:51:21] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[02:52:28] *** Joins: derelict (~derelict@user/derelict)
[02:52:32] *** Quits: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) (Remote host closed the connection)
[02:53:02] <rpkilby> teut: you'll need to understand how the mro works, but in this case the order should be D, B, C, object. You can see this by calling D.mro()
[02:53:13] <Nalt>  I am new to using git and interacting with repositories. I have cloned a repository from GitHub which I wish to contribute to. The next step I should do is make a Branch for the (local) Main repo, right? Also, I am using PyCharm. Can I open a branch I make within PyCharm somehow?
[02:53:30] <rockSTONE> does anyone know if it's possible to convince pytest that a doctest .txt/.rst file actually contains multiple tests, not just one huge test ?
[02:53:30] <rpkilby> When calling super() you're more or less saying "call the next method in the mro chain" however, B and C's init do not call super, so the calls stop there.
[02:53:34] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[02:53:37] <ssbr_> Nalt: you can use whatever branch you want, when you make the PR on github it will let you select which branch to PR from
[02:53:37] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[02:53:38] *** Joins: __jmcantrell__ (~weechat@86.106.143.227)
[02:53:40] *** jmcantrell is now known as Guest8680
[02:53:40] *** __jmcantrell__ is now known as jmcantrell
[02:53:42] <teut> mro , flattens the inheritance tree by prioritizing left node
[02:53:52] <teut> then removes duplicates
[02:53:56] <ssbr_> Nalt: you only need to make new branches for feature work if you're developing in-repo and want to only have PR'd code in the main branch
[02:54:05] <ssbr_> but for a fork that gets PRs into the repo, it doesn't matter
[02:54:05] <rpkilby> teut: so you do D then B, but because B.__init__ doesn't call super(), C is skipped
[02:54:23] *** Joins: chance (~chance@50.47.109.175)
[02:54:50] *** Quits: Celeo (~Celeo@2603-8001-3301-2e00-2169-6a0a-8676-2862.res6.spectrum.com) (Read error: Connection reset by peer)
[02:54:59] <teut> which post are we talking about, can you provide the link?
[02:55:05] <Nalt> ssbr_, a PR means Pull Request which is when I want to merge the branch I have been working in to the Main branch, right?
[02:55:05] *** Quits: jmcantrell (~weechat@86.106.143.227) (Client Quit)
[02:55:40] <ssbr_> Nalt: yes, but PRs also go across forks, in which case it's from the fork and branch you've been working on
[02:55:43] <chance> Nalt: you can merge (and consequently PR) to *any* target branch, though colloquially that's correct
[02:55:46] <ssbr_> that's why you don't need to make a new branch
[02:56:06] <ssbr_> since you're working from a fork, there's no real need to worry AFAIK
[02:56:09] *** Joins: entelar (~entelar@71-218-226-9.hlrn.qwest.net)
[02:56:17] <Nalt> Sorry, I have not yet learned what a fork is
[02:56:30] <ssbr_> Nalt: a duplicate copy of the repository
[02:56:35] <Nalt> Is the process of cloning a repo to my local computer called..
[02:56:38] <Nalt> okay
[02:56:50] *** Quits: entelar (~entelar@71-218-226-9.hlrn.qwest.net) (Client Quit)
[02:56:50] <ssbr_> Nalt: in this case I mean a github fork -- which is a duplicate copy on github
[02:57:02] *** Joins: jmcantrell (~weechat@86.106.143.227)
[02:57:03] <ssbr_> I'm not actually sure if you call a local copy a fork too :)
[02:57:04] <Nalt> well, the duplicate copy is on my local computer.
[02:57:18] <Nalt> er, the copy*
[02:57:20] *** Quits: Guest8680 (~weechat@89.45.224.149) (Ping timeout: 252 seconds)
[02:57:25] *** Joins: easior (~easior@61.155.142.70)
[02:57:25] <ssbr_> Nalt: it will be on github when you go to make a PR. If you do not have permission to push to the project, you'll need to push to a fork.
[02:57:31] <Nalt> Specifically all I did was: git clone URL_HERE
[02:57:38] <chance> also as good a time as any: a "soft" fork (or just "fork") is when you have your own copy of the code that you work on. a "hard" fork is when you take the existing code and make your own project with blackjack and hookers. and then yes what ssbr_ said above, there's the github meaning, which is your copy *on github*
[02:58:07] <teut> right rpkilby , I realize I m missing some info about super(), thanks
[02:58:16] <chance> somewhere around here i have a link for this
[02:58:21] <chance> the github part, i mean
[02:58:38] <ssbr_> Nalt: my normal workflow is: 1) create a fork on github. 2) clone from my fork. 3) make changes (in the default branch). 4) push to my fork 5) make a PR, requesting that my changes in the default branch of my fork be merged into their default branch
[02:58:47] *** Quits: greedom (~greedom@2001:16b8:326f:5100:6427:5e2c:e3c4:ff7a) (Remote host closed the connection)
[02:58:48] <ssbr_> Nalt: I think the github docs should explain in more detail.
[02:58:49] <matsaman> chance: on second thought, forget the blackjack?
[02:59:01] <ssbr_> but I am really not very comfy with git -- I use mercurial and (something like) perforce at work, much simpler ;)
[02:59:12] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net) (Quit: Client closed)
[02:59:17] <chance> matsaman: thank you
[02:59:25] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net)
[02:59:35] <chance> ssbr Nalt you can fix this situation, you don't have to delete the copy you have and clone your own github fork
[02:59:38] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:59:41] <Nalt> Okay, well this maybe is out of scope of the channel sorry. Another user pointed this out too. Could anyone have idea for my PyCharm question?
[02:59:50] <ssbr_> chance: yes, but changing the remote on an existing local repo is annoying
[02:59:53] <rpkilby> teut: yep - super() has some interesting nuances. when you were calling super(B, self) from your D class, it wasn't doing what you were expecting.
[03:00:00] <chance> one line :)  i do it all the time
[03:00:13] <teut> but how is B linked to C that it's  super()  is running C?
[03:00:25] <rpkilby> because super() is aware of its siblings too
[03:00:57] <rpkilby> because remember, you're running through the mro from the perspective of D, which is aware of both
[03:01:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[03:01:37] <teut> hmm, so mro is kind of a global thing
[03:02:36] <rpkilby> iirc, super() returns some kind of proxy, and I'm guessing it attaches some kind of metadata about the mro chain
[03:02:41] <matsaman> chance: t'weren't nothin'
[03:02:46] <teut> https://docs.python.org/2/library/functions.html#super
[03:03:03] <teut> yep quite complicated technical language is written here
[03:03:49] <rpkilby> teut: yep, so it's not using globals, but my guess is that the proxy is aware of the mro
[03:03:50] *** Joins: somlis (~somlis@user/somlis)
[03:04:19] <teut> I will have to understand their code for further deductions
[03:04:20] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:04:31] <teut> for super() , long way to go
[03:04:46] <Neoon> bummer, lets say you have a few million ips + a few million subnets and you wanna check if the ip belongs to a subnet. How would you do it, to do it fast?
[03:04:51] *** Quits: d1b (~db@user/d1b) (Ping timeout: 272 seconds)
[03:05:01] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:05:02] <Neoon> I am using the build in functions but they are slow
[03:05:24] *** Joins: d1b (~db@user/d1b)
[03:07:17] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[03:10:10] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[03:11:09] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[03:11:48] *** Joins: kmh (~kmh@p200300df5f1f6100f5ef16784219cf7c.dip0.t-ipconnect.de)
[03:12:13] *** Joins: richbridger (~richbridg@213-225-3-25.nat.highway.a1.net)
[03:14:37] <jwhisnant> Neoon: what does "fast" mean? (in seconds)
[03:15:13] <Neoon> I mean I run the current code on 11 threads and it still takes like 2 hours
[03:15:23] <Neoon> and I swear I tried to optimize it
[03:15:27] <Neoon> apparently not hard enough
[03:15:46] *** Quits: malcolm (~Guest49@121.99.224.240) (Quit: Client closed)
[03:15:50] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:15:54] <matsaman> you gotta try hard enough dude, that's fundamental =)
[03:16:28] <DPA> I'd make a DB, and encode the IPs as 0 padded hex strings + the type (v4 or v6), to make sure all have the same length. I'd encode the subnets as ip ranges, and store the first / last valid address (Works for any CIDR, but not for every netmask).
[03:16:28] <DPA> After that, I'd just make a select for all IPs, and check with a subselect or join if there exists or which are the subnets the IPs are in. It's a simple minip <= ip <= maxip check
[03:17:18] *** Quits: alaudet (~al@NTL208H101-111-192.nt.net) (Ping timeout: 268 seconds)
[03:17:29] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[03:17:56] *** Quits: chance (~chance@50.47.109.175) (Quit: Client closed)
[03:18:01] <squirrel> Neoon: ipv4 only?
[03:18:07] <Neoon> bloody hell yes
[03:18:13] <Neoon> v6 would be a suicide mission
[03:18:45] <DPA> Oh, then you can just convert them to 32bit integers, and & them with the netmasks.
[03:18:54] <Neoon> basically what I do right now is taking the entire routing table
[03:18:54] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 264 seconds)
[03:18:56] <Neoon> run through it
[03:19:08] <Neoon> split it into /22 and assign a IP to each
[03:19:37] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 244 seconds)
[03:19:38] <Neoon> then I messure it to detect specific patterns
[03:19:52] <Neoon> DPA, yea I will try
[03:19:53] <squirrel> you can probably generate a map of all ip -> subnet if you have enough ram
[03:20:01] <Neoon> RAM is a issue here
[03:20:09] <Neoon> I needed to offload my dict to a sqlite database
[03:20:16] <Neoon> because python uses a shiton of memory
[03:20:23] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[03:20:38] <DPA> You could still sort them and bisect. Or put them in a DB.
[03:20:40] <Neoon> I load each subnet from the in memory database and then I split it
[03:21:35] <Neoon> DPA, I will check thanks
[03:22:01] *** Quits: draeath (~draeath@user/draeath) (Quit: WeeChat 3.1)
[03:23:01] *** Quits: naitsabes (~naitsabes@user/naitsabes) (Ping timeout: 272 seconds)
[03:23:45] *** Quits: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) (Quit: Leaving.)
[03:23:48] *** Joins: easior_ (~easior@61.155.142.70)
[03:24:37] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:24:56] *** Joins: jilocasin (~kvirc@67.241.210.13)
[03:25:02] <jilocasin> evening everyone
[03:25:28] *** Joins: jrabbit (~jack@user/jrabbit)
[03:25:30] <nedbat> jilocasin: hey there
[03:25:30] <jilocasin> can anyone help me with a strange problem I'm having with psycopg2 and postgresql 11?
[03:25:39] *** Joins: rmm (~rob@103.226.107.218)
[03:25:56] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[03:26:06] *** Joins: naitsabes (~naitsabes@user/naitsabes)
[03:26:22] <jilocasin> nedbat: hi
[03:26:45] <nedbat> jilocasin: idk if i can help with that, but someone might. give us some details
[03:26:52] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[03:27:11] *** Joins: sn1tch3r (~sn1tch3r@185.153.176.70)
[03:27:16] *** Quits: rmm (~rob@103.226.107.218) (Changing host)
[03:27:16] *** Joins: rmm (~rob@user/rmm)
[03:28:06] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Remote host closed the connection)
[03:29:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[03:30:48] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[03:31:54] *** Joins: alaudet (~al@2605:b100:d3f:e268:15a2:787c:b65f:ab27)
[03:32:38] *** Joins: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net)
[03:32:59] *** Joins: ksr (~KSR@124.197.12.15)
[03:33:20] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 268 seconds)
[03:34:19] *** Quits: jabberwock (~lidless@user/jabberwock) (Quit: jabberwock)
[03:34:47] *** Quits: trench (trench@user/trench) (Ping timeout: 265 seconds)
[03:34:59] *** Quits: naitsabes (~naitsabes@user/naitsabes) (Quit: WeeChat 3.2)
[03:35:41] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 272 seconds)
[03:35:42] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[03:36:00] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[03:36:08] *** Joins: jabberwock (~pi@user/jabberwock)
[03:36:45] *** Quits: jabberwock (~pi@user/jabberwock) (Client Quit)
[03:36:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:36:54] *** Quits: diverdude (~undodre@216.201.150.178) (Ping timeout: 264 seconds)
[03:37:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:38:32] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:38:47] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[03:38:54] *** Joins: jabberwock (~lidless@user/jabberwock)
[03:39:03] <RoadRunner> on boot, pycharm reports: 'Missing keymap, Cannot find keymap "Mac OS X 10.5+", Install Mac OS X 10.5+ Keymap' but I am under linux so what do I need it for and can I disable this notice?
[03:39:18] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[03:39:30] *** Quits: jmcantrell (~weechat@86.106.143.227) (Ping timeout: 268 seconds)
[03:40:44] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[03:40:44] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:41:23] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 272 seconds)
[03:42:11] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[03:43:01] <rmm> i got some json data im scraping, that updates hourly or so. what's a good way to store it, so i can then compare new data to old data? i.e. output increases in values, rank them etc.?
[03:44:17] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:45:44] *** Quits: p-i-_ (~Ohmu@node-n7c.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[03:45:47] *** Joins: p-i- (~Ohmu@node-62u.pool-118-173.dynamic.totinternet.net)
[03:46:08] *** Joins: ice9 (~ice9@user/ice9)
[03:46:37] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:47:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:47:38] *** Wulf4 is now known as Wulf
[03:49:34] *** Joins: ______GOD______ (~GOD@189.174.212.187)
[03:51:30] *** Quits: alaudet (~al@2605:b100:d3f:e268:15a2:787c:b65f:ab27) (Ping timeout: 240 seconds)
[03:51:47] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[03:52:29] *** Joins: lightbulbjim_ (~lightbulb@user/lightbulbjim)
[03:54:42] *** Joins: ksr (~KSR@124.197.12.15)
[03:55:21] *** Quits: jilocasin (~kvirc@67.241.210.13) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:55:45] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[03:56:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[03:56:20] <Nalt> In PyCharm, can I make a new project for a repository that I have on my local computer?
[03:57:20] *** Joins: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892)
[03:57:48] *** Joins: tims (~tims@27-32-34-159.tpgi.com.au)
[03:59:24] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[03:59:42] *** Quits: stwange (~j@90.253.222.210) (Ping timeout: 264 seconds)
[03:59:59] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[04:02:56] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 268 seconds)
[04:02:56] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Ping timeout: 268 seconds)
[04:03:54] *** Quits: davidlowryduda (~davidlowr@73.61.9.57) (Ping timeout: 240 seconds)
[04:04:52] *** Joins: alaudet (~al@NTL208H101-111-192.nt.net)
[04:05:02] <Nalt> For example, I have a local repo that I want to work on. How do I use PyCharm to do that?
[04:06:08] *** Joins: davidlowryduda (~davidlowr@73.61.8.71)
[04:06:22] *** Joins: trench (trench@user/trench)
[04:07:52] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 268 seconds)
[04:09:03] *** Quits: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892) (Remote host closed the connection)
[04:09:17] *** Joins: malcolm (~malcolm@121.99.224.240)
[04:09:17] *** Quits: malcolm (~malcolm@121.99.224.240) (Client Quit)
[04:09:54] *** Joins: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892)
[04:10:05] *** Joins: candy (~tvrtko@93-136-74-19.adsl.net.t-com.hr)
[04:10:11] *** Joins: malcolm (~malcolm@121.99.224.240)
[04:10:34] *** Quits: ______GOD______ (~GOD@189.174.212.187) (Quit: Turning off a portion of this simulation.)
[04:11:23] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:11:39] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[04:12:50] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 244 seconds)
[04:13:32] *** Quits: tvrtko (~tvrtko@93-138-113-251.adsl.net.t-com.hr) (Ping timeout: 268 seconds)
[04:16:10] <grym> rmm: a database, a nosql store, a pile of files on disk
[04:16:50] *** Quits: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892) (Remote host closed the connection)
[04:17:22] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:18:17] *** Parts: JavaBean (~JavaBean@user/javabean) (No boundaries on the net!)
[04:18:45] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:19:06] *** Joins: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892)
[04:20:29] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[04:20:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:22:13] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[04:23:27] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[04:23:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[04:24:05] *** Joins: pnoud (~pnoud@user/pnoud)
[04:24:19] *** Joins: cjb (~cjb@user/cjb)
[04:24:41] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[04:25:13] <pyeverything> hi can someone please help me with remounding my Google Drive using Python API in Google Colab? here's the error: https://stackoverflow.com/questions/68023780/not-able-to-re-mount-or-access-files-from-a-shared-drive-that-i-previously-was
[04:26:07] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 264 seconds)
[04:26:16] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[04:26:34] *** Joins: ice9 (~ice9@user/ice9)
[04:29:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 264 seconds)
[04:29:17] *** Quits: |7| (~kvirc@user/seachdamh) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[04:29:40] <rmm> grym: yeah i was thinking database. but wasn't sure if it was overkill. maybe just pile of files. thanks!
[04:29:51] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[04:29:52] *** Joins: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:30:12] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[04:31:39] *** Joins: selimcan (~selimcan@154.28.188.103)
[04:31:45] *** Quits: _jrjsmrtn (~jrjsmrtn@ip-193-121-123-176.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:41] *** Quits: sn1tch3r (~sn1tch3r@185.153.176.70) (Ping timeout: 272 seconds)
[04:32:48] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:34:12] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com) (Read error: Connection reset by peer)
[04:34:34] *** Quits: selimcan (~selimcan@154.28.188.103) (Client Quit)
[04:36:24] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[04:36:39] *** Joins: fluffyballoon (~fluffybal@2620:72:0:6480::11fd)
[04:38:04] <Jonno_FTW> pyeverything: did you google this before hand?
[04:38:33] *** Joins: kisser (kisser@user/kisser)
[04:38:42] <pyeverything> yes Jonno_FTW
[04:38:56] *** Parts: kisser (kisser@user/kisser) ()
[04:39:01] <Jonno_FTW> pyeverything: did you see this: https://github.com/googlecolab/colabtools/issues/284#issuecomment-433505181
[04:39:13] <Jonno_FTW> also in IRC, if you want to mention someone, you put their name first
[04:39:25] <pyeverything> I was literally able to access 30 min before asking this question (for at least twice I refreshed my notebook from colab (reloaded it) and ran the cells but then this happened
[04:39:31] <Jonno_FTW> saves people from reading all the way to the end of a message that isn't meant for them
[04:40:05] <pyeverything> what's the difference? it is location agnostic and you will be tagged regardless. I have used IRC since 2009 and never was told so!
[04:40:09] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: afk)
[04:40:18] <pyeverything> goctha
[04:40:20] <pyeverything> thanks
[04:40:20] <Jonno_FTW> it's just what I've seen since 2007
[04:41:02] <Jonno_FTW> have you unmounted and mounted the drive again?
[04:41:03] <pyeverything> Jonno_FTW:  an stackoverflow was suggesting problem is with sockets
[04:41:23] <pyeverything> Jonno_FTW: i didn't know how to unmount. I learned how to mount just today :D
[04:41:33] <Jonno_FTW> have you read the docs?
[04:42:28] <pyeverything> Jonno_FTW: should I have this flag? drive.mount(ROOT, force_remount=True)
[04:42:29] <Jonno_FTW> one would assume that if there is a drive.mount, there is a drive.unmount
[04:42:39] <Jonno_FTW> if you run help(drive) you might get something more helpful
[04:42:53] <Jonno_FTW> I've never used google colab so I have no idea
[04:43:48] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[04:44:18] <pyeverything> Jonno_FTW: worked after restarting
[04:44:20] <pyeverything> thanks
[04:44:27] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net) (Quit: Client closed)
[04:45:00] <Jonno_FTW> pyeverything: there is a timeout_ms argument you can pass, by default it's 15000
[04:45:12] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net)
[04:46:57] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[04:48:11] *** Joins: trufas (~trufas@177.240.218.218)
[04:49:17] *** Quits: deecat (~deecat@73.99.215.70) (Remote host closed the connection)
[04:49:28] *** Joins: ice99 (~ice9@user/ice9)
[04:49:31] *** Quits: ice99 (~ice9@user/ice9) (Remote host closed the connection)
[04:50:16] *** Joins: clf59 (~clf59@user/clf59)
[04:51:21] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[04:52:27] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:52:59] <pyeverything> I have a 3 channel RGB image size 224x400 and then I also have a black and white (one channel) skeleton image (says if a pixel is part of skeleton or not). I want to overlay the skeleton on the original RGB image. I am not sure which function I should use and also I am not sure how doing so for example with add is possible since skeleton is only one channel. https://bpa.st/QD7Q
[04:53:46] <Jonno_FTW> pyeverything: use the mask function in cv2
[04:54:51] <pyeverything> Jonno_FTW:  I already have the skeleton images does that overlay them?
[04:55:32] <Jonno_FTW> pyeverything: actually you want cv2.bitwise_and(col_img, mask) https://stackoverflow.com/a/54260321/150851
[04:58:27] *** Quits: Vision (~Vision@024-178-231-009.res.spectrum.com) (Read error: Connection reset by peer)
[04:59:12] <Jonno_FTW> pyeverything: or you can use the paste method in PIL
[04:59:56] <pyeverything> the insert in pidgin doesn't allow me to add screenshot
[05:00:07] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[05:00:11] <grym> pyeverything: irc has never supported images, even in 2009 :)
[05:00:32] <grym> pyeverything: 0x0.st, imgur, ... all support image uploads, though
[05:00:53] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[05:00:58] <Jonno_FTW> grym: I've seen some attemps though
[05:01:15] <pyeverything> Jonno_FTW:  when I read image as gray and then threshold it it is not read as black and white nor the thresholded one is like so https://imgur.com/a/mKP3Awe
[05:01:16] <Jonno_FTW> using a modified ircd that supported more colours, you can render an image
[05:01:53] <pyeverything> grym: yeah never remember uploading images but just saw that there is a + sign for "insert" in chat GUI but "images" is grayed out
[05:02:12] <pyeverything> Jonno_FTW: are you able to see the imgur screenshot?
[05:02:22] <Jonno_FTW> I am
[05:02:22] <grym> pyeverything: pidgin is, as the name suggests, a many-protocol client
[05:02:48] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[05:02:52] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[05:03:07] *** Parts: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) ()
[05:03:26] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[05:04:03] <pyeverything> sorry I lost the conversation after (08:32:22 PM) grym: pyeverything: pidgin is, as the name suggests, a many-protocol client since I got curious what insert --> horizontal rule d
[05:04:24] <pyeverything> habnabit_!habnabit
[05:04:29] <Jonno_FTW> there was nothing
[05:04:41] <Jonno_FTW> I use irssi for irc
[05:04:52] <pyeverything> Jonno_FTW: did you see this screenshot? https://imgur.com/a/mKP3Awe
[05:04:55] <Jonno_FTW> I did
[05:05:30] <Jonno_FTW> I'm not sure, I suspect that it's not being read as grayscale, print out the first pixel, or shape of the image to see what it really is
[05:05:55] <Jonno_FTW> tbh, I mostly use PIL
[05:07:02] <pyeverything> Jonno_FTW: so  I am looking at this example https://note.nkmk.me/en/python-pillow-paste/ and I don't want to do this. I just want to overlay the skeleton pixels (255 values) onto the original image.
[05:07:21] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:07:41] <Jonno_FTW> if the image to be pasted has an alpha channel, it should work
[05:08:03] <pyeverything> Jonno_FTW:  do you see the elephant photo in this link? https://competitions.codalab.org/competitions/24536 I want to do same
[05:08:27] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[05:08:28] <Jonno_FTW> yeah I see it
[05:08:35] <Jonno_FTW> I've done this sort of stuff before
[05:09:22] <Jonno_FTW> pyeverything: this looks like a job for unet
[05:09:26] *** Quits: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892) (Remote host closed the connection)
[05:09:58] <Jonno_FTW> (depending on how many training samples you have)
[05:10:10] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:10:20] *** Joins: bigRoo (~user@131.236.54.84)
[05:10:26] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 252 seconds)
[05:10:27] *** Joins: larssg (~textual@89.239.212.110.dhcp.fibianet.dk)
[05:11:20] <Jonno_FTW> pyeverything: what format are the skeletons in?
[05:12:18] *** Quits: jabberwock (~lidless@user/jabberwock) (Ping timeout: 240 seconds)
[05:12:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:13:54] *** Quits: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net) (Ping timeout: 240 seconds)
[05:13:58] *** Quits: {HD} (~{HD}@37.19.197.211) (Ping timeout: 268 seconds)
[05:14:03] *** Joins: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892)
[05:14:43] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[05:14:47] *** Joins: wyclif (~wyclif@user/wyclif)
[05:17:03] <pyeverything> Jonno_FTW:  the skeletons are grayscale images 224*400*1 shape
[05:17:09] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[05:17:26] <pyeverything> I documented my question here anyways https://stackoverflow.com/questions/68028006/overlaying-a-1-channel-skeleton-image-onto-a-3-channel-rgb-image
[05:18:01] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[05:18:10] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 268 seconds)
[05:18:12] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[05:18:41] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[05:18:42] *** Quits: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892) (Remote host closed the connection)
[05:18:44] <Jonno_FTW> your question will likely be marked as duplicate
[05:19:27] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[05:19:35] *** Joins: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892)
[05:19:37] *** Quits: withered_wolf (~withered_@2600:1008:b151:56a5:3cd5:42e6:4414:2892) (Remote host closed the connection)
[05:20:06] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[05:20:22] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net) (Quit: Client closed)
[05:22:22] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[05:22:35] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[05:23:29] *** Joins: jyc (uid40911@id-40911.charlton.irccloud.com)
[05:24:25] *** HalfAShark is now known as HalfAShark|SLP
[05:25:35] *** Joins: ^Cricket^ (~Cthulhu@static-72-76-136-147.nwrknj.fios.verizon.net)
[05:26:35] <Jonno_FTW> pyeverything: I would convert the skeleton to a rgba, convert 0s to [0,0,0,0], 1s to [0,255,0,1]
[05:26:40] *** ^Cricket^ is now known as t260g
[05:26:44] <Jonno_FTW> then paste it over the underlying image
[05:27:18] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[05:28:04] <pyeverything> could someone please help me figure what the invalid syntax is here? https://bpa.st/RPUA
[05:28:13] *** Quits: easior_ (~easior@61.155.142.70) (Read error: Connection reset by peer)
[05:28:20] <habnabit_> pyeverything, it's on a previous line
[05:28:24] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[05:28:35] *** Joins: easior_ (~easior@61.155.142.67)
[05:28:36] <grym> pyeverything: almost certainly, the line before the first one you've shown us
[05:28:40] <grym> it's probably missing a parenthesis
[05:28:42] <pyeverything> habnabit_: what do you mean? It is a separate code block
[05:28:48] <habnabit_> pyeverything, oh, actually, no. you can't start a variable name with a digit
[05:29:03] <habnabit_> pyeverything, python's parser is bad and "it's on a previous line" is usually the culprit
[05:29:08] <pyeverything> habnabit_:  oh gosh lol sorry awkward thanks
[05:29:29] <Jonno_FTW> pyeverything: you need a 4th line for the alpha channel
[05:29:57] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:412f:83fa:4c40:a575) (Remote host closed the connection)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[05:31:32] <pyeverything> got it working https://imgur.com/a/3HV5ccH have to go to a meeting now but will answer my question afterwards thanks all
[05:32:00] *** Joins: {HD} (~{HD}@102.165.16.31)
[05:33:55] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Quit: leaving)
[05:34:37] <Jonno_FTW> pyeverything: this may interest you: https://github.com/qubvel/segmentation_models basically your model can output the skeleton if you feed it enough data
[05:34:37] *** Joins: vlm (~vlm@user/vlm)
[05:34:59] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[05:35:56] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[05:36:34] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[05:36:34] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[05:36:52] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[05:37:47] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Remote host closed the connection)
[05:38:26] *** Joins: ano (~weechat@user/ano)
[05:39:26] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[05:39:47] *** Joins: ice9 (~ice9@user/ice9)
[05:41:11] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 244 seconds)
[05:41:14] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 252 seconds)
[05:41:42] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 264 seconds)
[05:42:13] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[05:44:04] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 268 seconds)
[05:44:49] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[05:45:42] *** Joins: easior__ (~easior@61.155.142.70)
[05:46:18] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 240 seconds)
[05:51:49] *** Quits: richbridger (~richbridg@213-225-3-25.nat.highway.a1.net) (Read error: Connection reset by peer)
[05:51:58] *** Joins: cliluw (~cliluw@47.147.80.149)
[05:52:07] *** Joins: richbridger (~richbridg@213-225-3-25.nat.highway.a1.net)
[05:52:13] *** Joins: tijuco (~tijuco@user/tijuco)
[05:52:27] *** Quits: Nact (~l@host-85-27-127-203.dynamic.voo.be) (Quit: Konversation terminated!)
[05:52:46] *** Joins: Nact (~l@host-85-27-127-203.dynamic.voo.be)
[05:59:41] *** Joins: foozle (~foozle@2001-b011-c001-54d9-de33-0b1d-c020-9927.dynamic-ip6.hinet.net)
[05:59:45] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[05:59:50] *** Joins: Midnite (~human@user/midnightlantern)
[06:00:05] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[06:00:46] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:01:10] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:01:55] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[06:02:57] *** Joins: c10l (~c10l@89.34.167.207)
[06:04:32] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[06:04:55] *** Joins: lidless (~lidless@user/jabberwock)
[06:05:59] *** Joins: exciteabletom (~tom@14-203-158-110.static.tpgi.com.au)
[06:06:26] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[06:07:04] *** Quits: ilmostro (~ilmostro@fedpad.nebulae.systems) (Quit: WeeChat 3.0.1)
[06:07:11] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:07:14] *** Joins: ilmostro (~ilmostro@fedpad.nebulae.systems)
[06:07:30] *** Quits: {HD} (~{HD}@102.165.16.31) (Ping timeout: 268 seconds)
[06:07:30] *** Parts: Kaedenn (~kaedenn@137.229.82.89) ()
[06:07:31] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net)
[06:08:11] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[06:08:40] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[06:09:16] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[06:09:27] *** Joins: sebastianos (~sebastian@user/sebastianos)
[06:10:14] *** Joins: pete443_ (~pete@user/pete443)
[06:10:42] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 268 seconds)
[06:11:27] *** Quits: daddy (~ryan@hashbang/bdfl) (Quit: WeeChat 2.9 <:3)~)
[06:12:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[06:13:02] *** Joins: daddy (~ryan@hashbang/bdfl)
[06:15:32] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[06:15:57] *** Joins: ice9 (~ice9@user/ice9)
[06:17:17] *** Joins: mattf (~matheus@179-189-87-110.goldnettelecom.com.br)
[06:18:16] *** Quits: lidless (~lidless@user/jabberwock) (Quit: WeeChat 2.3)
[06:18:30] *** Joins: jabberwock (~lidless@user/jabberwock)
[06:18:39] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[06:18:57] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[06:19:18] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[06:19:24] *** Joins: ______GOD______ (~GOD@189.174.212.187)
[06:20:07] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[06:20:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:20:48] *** Joins: {HD} (~{HD}@191.96.185.21)
[06:21:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:21:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[06:22:18] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 240 seconds)
[06:23:25] *** Gustavo6046_ is now known as Gustavo6046
[06:24:16] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 268 seconds)
[06:24:53] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[06:24:58] *** Joins: pnoud (~pnoud@user/pnoud)
[06:25:16] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:28:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:28:45] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[06:30:26] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[06:30:49] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[06:31:46] *** Joins: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net)
[06:32:39] *** Quits: Nact (~l@host-85-27-127-203.dynamic.voo.be) (Quit: Konversation terminated!)
[06:32:55] *** Joins: Nact (~l@host-85-27-127-203.dynamic.voo.be)
[06:36:18] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Ping timeout: 240 seconds)
[06:36:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:36:36] *** Quits: lightbulbjim_ (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[06:37:16] *** Joins: jmcantrell (~weechat@86.106.143.201)
[06:38:59] *** Joins: az_ (~az0@user/az0)
[06:39:27] *** Quits: ______GOD______ (~GOD@189.174.212.187) (Read error: Connection reset by peer)
[06:39:53] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[06:47:32] *** TheRadishCrisis is now known as Soberion
[06:47:44] *** Joins: ______GOD______ (~GOD@189.174.212.187)
[06:51:11] *** Soberion is now known as Roey
[06:53:02] *** Joins: R24 (~R24@103.201.150.213)
[06:53:31] *** Quits: ska (~ska@cpe-173-174-111-177.austin.res.rr.com) (Ping timeout: 244 seconds)
[06:54:07] *** Quits: R24 (~R24@103.201.150.213) (Client Quit)
[06:56:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[06:57:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:59:05] *** Quits: alaudet (~al@NTL208H101-111-192.nt.net) (Quit: Leaving)
[06:59:13] *** Quits: bilegeek (~bilegeek@2600:1008:b017:63a6:c26d:d119:faaa:a6d7) (Quit: Leaving)
[06:59:14] *** Joins: chandankumar (~raukadah@110.44.96.144)
[06:59:49] *** Quits: Nact (~l@host-85-27-127-203.dynamic.voo.be) (Read error: Connection reset by peer)
[07:00:17] *** Joins: Nact (~l@host-85-27-127-203.dynamic.voo.be)
[07:01:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 268 seconds)
[07:02:49] <rannnn8888> someone here maybe know Compare speed between Pandas vs Sqlite ?
[07:03:35] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:06:05] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[07:06:08] <dreamer> eh?
[07:06:15] <dreamer> pandas is not a database
[07:06:24] <dreamer> so I don't know what it is you think you are going to compare here
[07:06:31] <rannnn8888> sec i uplad example what i mean
[07:08:24] <Jonno_FTW> rannnn8888: there's timeit if you wan't to compare code
[07:10:09] *** Quits: larssg (~textual@89.239.212.110.dhcp.fibianet.dk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:12:07] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 244 seconds)
[07:12:16] <rannnn8888> dreamer , Jonno_FTW i mean this https://dpaste.org/7A5w
[07:12:36] <rannnn8888> if cheack item in list or cheack item in db index
[07:12:42] <rannnn8888> no pandas sorry*
[07:13:27] <Jonno_FTW> probably faster to check if an item is in a list
[07:13:32] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[07:13:32] <Jonno_FTW> but you'd have to check
[07:14:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:14:17] <Jonno_FTW> also variable names can't have a hyphen in them as in line 24
[07:15:13] <rannnn8888> Jonno_FTW yes i write here fast example thxx
[07:15:31] *** Joins: Mija (~Mija@user/mija)
[07:15:35] <rannnn8888> and have way print micr o print("--- %s seconds ---" % (time.time() - start_time)) ?
[07:17:12] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 268 seconds)
[07:17:48] <Jonno_FTW> yeah that should do it
[07:18:00] <Jonno_FTW> just write 2 functions that do the same thing
[07:18:16] <Jonno_FTW> setup your data beforehand and pass it to the functions, then call each function 10k times and take the average
[07:19:17] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[07:20:07] *** Joins: ATAD_ (ATAD@user/atad)
[07:20:22] *** Parts: ATAD_ (ATAD@user/atad) ()
[07:20:51] *** Joins: ksr (~KSR@124.197.12.15)
[07:22:58] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[07:23:28] <dreamer> rannnn8888: `404 Snippet not found`
[07:24:58] <rannnn8888> Jonno_FTW k i cheack i need use list and set(list) the best results by 1 sec :x
[07:25:14] <Jonno_FTW> rannnn8888: depends what you are trying to do
[07:25:31] *** Joins: Midnite (~human@user/midnightlantern)
[07:27:31] *** Joins: mud (~mud@user/kadoban)
[07:27:54] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 264 seconds)
[07:28:14] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[07:28:14] *** dodobrain__ is now known as dodobrain
[07:28:24] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[07:28:43] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[07:31:02] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[07:31:14] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[07:33:57] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Rebooting to update FreeBSD)
[07:37:22] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[07:37:45] *** Joins: viktorivan (~ivan@2806:101e:7:b2aa:4451:1df3:82ce:e5ac)
[07:37:46] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[07:38:02] *** Joins: ali1234 (~al@user/ali1234)
[07:39:05] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[07:40:07] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:40:57] <Linkandzelda> why are class attributes defined inside the class being shared across different objects?
[07:41:11] <habnabit_> Linkandzelda, because that's what class attributes _are_
[07:41:23] <Jonno_FTW> class attributes are stored on the class....
[07:41:24] <habnabit_> Linkandzelda, they aren't defaults; they're owned by the class
[07:41:42] <Jonno_FTW> instance attributes are stored on each instance. Instances have a reference to their class
[07:42:21] <Linkandzelda> habnabit_: why is it that way? it sounds bad to me
[07:42:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:42:58] *** Quits: Nact (~l@host-85-27-127-203.dynamic.voo.be) (Quit: Konversation terminated!)
[07:43:21] <Jonno_FTW> what's bad about it?
[07:43:39] <habnabit_> Linkandzelda, sometimes you need to share state
[07:43:49] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[07:43:59] <Jonno_FTW> state is a tool of the devil
[07:44:58] <Linkandzelda> coming from other languages, i cant see how any object should share the content of another object's attributes. if i want something shared among all objects i use a manager class, or in a pinch pass a parent class to all the instances
[07:45:21] <rannnn8888> idss = str(c.execute('SELECT Symbol FROM stck').fetchall())
[07:45:21] <rannnn8888> idss = set(list(idss))
[07:45:23] <habnabit_> Linkandzelda, erm? what languages are you thinking of?
[07:45:42] <rannnn8888> what i need fix here ? i get 'x','v.'v',v'
[07:45:53] <Linkandzelda> habnabit_: something like php, java, javascript
[07:45:56] <rannnn8888> and not the word
[07:46:04] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:46:08] <rannnn8888> list of words*
[07:46:14] <habnabit_> Linkandzelda, python class attributes are the equivalent of 'static' in java
[07:46:41] <Linkandzelda> habnabit_: something i didnt know, but is good to know... not sure i like it though
[07:47:13] <Linkandzelda> im used to putting a list of attrs a class has access to, for readability. but i guess i have to set them all in the constructor instead
[07:47:20] <habnabit_> Linkandzelda, i mean, it's exactly the same feature. do you dislike 'static' in java too? :)
[07:47:41] <habnabit_> Linkandzelda, i think you might be looking for https://www.attrs.org/en/stable/examples.html
[07:47:41] <Linkandzelda> habnabit_: difference is i didnt write "static", or ask it to behave like this
[07:48:17] <Jonno_FTW> core language behaviour is asking for it
[07:48:57] <Linkandzelda> habnabit_: thats more in line with what im looking for, thanks
[07:49:05] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: dtg01100)
[07:49:29] <rannnn8888> someone know where i wornd here how fix :D ?https://dpaste.org/Be2R#
[07:49:43] *** Quits: viktorivan (~ivan@2806:101e:7:b2aa:4451:1df3:82ce:e5ac) (Quit: Leaving.)
[07:49:57] <mattf> is there a multi paste service that works like wgetpaste still?
[07:50:43] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-5c5a-4235-cc41-cbce.res6.spectrum.com)
[07:53:47] *** Joins: Xi[pissnet] (~woem@user/meoow)
[07:54:05] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:54:12] *** Joins: ksr (~KSR@124.197.12.15)
[07:54:29] *** Quits: chandankumar (~raukadah@110.44.96.144) (Ping timeout: 244 seconds)
[07:54:42] *** Quits: aluria (~aluria@canonical/aluria) (Ping timeout: 240 seconds)
[07:56:47] *** Joins: aluria (~aluria@canonical/aluria)
[07:59:12] *** Joins: travaldo (~travaldo@159.203.88.148)
[08:00:21] *** Quits: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Ping timeout: 268 seconds)
[08:00:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[08:02:19] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[08:02:57] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[08:03:04] <Linkandzelda> habnabit_: if i have a class attr e.g. VAL_DEFAULT = 1, and i put in the constructor self.val = val if val is not None else VAL_DEFAULT. and its None so its set to VAL_DEFAULT. does that copy the value of it or makes it into a shared class attr?
[08:03:47] <habnabit_> Linkandzelda, assignment in python never copies
[08:04:20] <Linkandzelda> habnabit_: so by assigning it the value im actually passing its reference to the class attr, making it shared?
[08:04:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[08:04:57] <habnabit_> Linkandzelda, no, you're passing the object itself without copying it. for a mutable object, that will appear 'shared', yes
[08:04:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:05:13] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[08:05:28] <habnabit_> Linkandzelda, python doesn't have references like C++ does
[08:05:29] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[08:05:35] <habnabit_> or php
[08:05:54] *** Joins: viktorivan (~ivan@2806:101e:7:b2aa:4451:1df3:82ce:e5ac)
[08:06:03] <Linkandzelda> habnabit_: just trying to figure out how to make defaults without a crap load of code
[08:06:59] *** Joins: MTecknology (~Mike@user/mtecknology)
[08:07:06] <Linkandzelda> ive got attrs which are set in the init and some which are not and contain default values like an empty list. i should just declare them all in the __init__?
[08:07:09] *** Parts: MTecknology (~Mike@user/mtecknology) (You saw me, but now you don't.)
[08:07:37] <habnabit_> Linkandzelda, i'd just use the attrs module
[08:08:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[08:08:06] *** Quits: exciteabletom (~tom@14-203-158-110.static.tpgi.com.au) (Remote host closed the connection)
[08:08:59] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 268 seconds)
[08:09:54] *** Joins: tijuco (~tijuco@user/tijuco)
[08:10:30] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 244 seconds)
[08:10:32] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[08:11:27] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[08:12:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[08:12:57] *** Joins: armandokeller (~armandoke@200.159.170.169)
[08:14:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:14:41] <Linkandzelda> habnabit_: it seems very automatic, and im not sure i like that
[08:14:53] *** Quits: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6) (Quit: ERC (IRC client for Emacs 28.0.50))
[08:15:09] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 244 seconds)
[08:15:11] <habnabit_> Linkandzelda, why not?
[08:15:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:16:26] <Linkandzelda> habnabit_: i guess im just used to other ways, but im typically against "magic" things that do invisible actions like this one
[08:17:04] <habnabit_> Linkandzelda, okay. i think of it as a way to make python classes sane like they are in better languages like rust
[08:17:07] *** Parts: mattf (~matheus@179-189-87-110.goldnettelecom.com.br) ()
[08:17:07] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[08:17:17] *** Quits: radu2422 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:17:40] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[08:18:37] *** Joins: radu2422 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[08:19:23] <Linkandzelda> habnabit_: i'll spend some time learning this library, because i can see if i learn how it works i would probably like it
[08:20:09] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[08:23:19] *** Quits: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net) (Quit: Leaving)
[08:24:12] <maxtim> i have the list comprehension: last_week = [files for files in glob.glob(f'{log_dir}/*.txt') for dates in last_week if dates in files]
[08:24:25] <maxtim> how can I pass a list to log_dir
[08:24:52] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 252 seconds)
[08:25:28] <maxtim> if its a list, sometimes it might be just a str
[08:25:29] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 244 seconds)
[08:25:48] *** Joins: pnoud (~pnoud@user/pnoud)
[08:25:50] *** Joins: chandankumar (~raukadah@110.44.96.144)
[08:28:37] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[08:29:44] *** Joins: Snyp (~rksht@49.207.192.68)
[08:31:11] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[08:31:31] *** Quits: montybanksnyc (~montybank@2601:86:600:a2a:21b1:eda2:1fcf:578f) (Read error: Connection reset by peer)
[08:31:37] *** Joins: Midnite (~human@user/midnightlantern)
[08:32:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[08:33:14] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 244 seconds)
[08:33:19] *** Joins: ksr (~KSR@124.197.12.15)
[08:33:49] *** Quits: Haydos (uid356478@id-356478.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:34:13] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:41] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[08:39:15] *** Joins: prs (~Priyanshu@2409:4063:4c81:f42e::7248:eb12)
[08:39:19] *** Quits: Xi[pissnet] (~woem@user/meoow) (Quit: Xi[pissnet])
[08:40:34] *** Joins: jdwidari (~jdwidari@173.38.117.89)
[08:41:06] *** Joins: matsaman (~matsaman@user/matsaman)
[08:41:11] <Midnite> 1111 nicks, 1 op
[08:41:16] <Midnite> how often does that happen?
[08:41:27] <maxtim> lol
[08:42:44] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 252 seconds)
[08:44:45] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 268 seconds)
[08:45:10] *** Joins: tijuco (~tijuco@user/tijuco)
[08:46:06] *** Quits: jdwidari (~jdwidari@173.38.117.89) (Ping timeout: 268 seconds)
[08:46:30] <matsaman> Midnite: where?
[08:46:38] <Midnite> matsaman: here
[08:46:51] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:46:54] <Midnite> well, not any more
[08:46:56] <matsaman> how often is it exactly 1111 people and one person @'d up?
[08:46:59] <matsaman> =)
[08:47:05] <Midnite> exactly
[08:47:20] <matsaman> this sounds like a job for python ... and a log
[08:47:23] <Midnite> I bet some clever person could write a Python script...
[08:47:25] <Midnite> lmao
[08:47:27] <Midnite> yes
[08:47:30] <matsaman> heheheh
[08:47:35] <Midnite> project for me :D
[08:47:40] * Midnite adds it to the list
[08:47:53] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: node-irc says goodbye)
[08:50:06] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 264 seconds)
[08:50:12] *** Joins: rindolf (~rindolf@87.68.240.187.adsl.012.net.il)
[08:50:29] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[08:51:18] *** Joins: cliluw (~cliluw@47.147.80.149)
[08:52:26] *** Joins: Vonter (~Vonter@user/vonter)
[08:53:23] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 244 seconds)
[08:57:22] *** Joins: runciter (~runciter@user/runciter)
[08:57:26] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[08:58:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:58:53] *** Joins: SebastianM (~seba@user/sebastianm)
[08:59:00] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[09:02:42] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:04:16] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Remote host closed the connection)
[09:05:30] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[09:06:51] *** Joins: martixy (~martixy@212.5.147.51)
[09:07:07] *** Quits: recursion (uid504862@id-504862.charlton.irccloud.com) (Changing host)
[09:07:07] *** Joins: recursion (uid504862@user/recursion)
[09:08:46] *** Quits: prs (~Priyanshu@2409:4063:4c81:f42e::7248:eb12) (Remote host closed the connection)
[09:09:47] *** Joins: SrPx (sid108780@id-108780.highgate.irccloud.com)
[09:13:27] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:13:31] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[09:14:01] *** Quits: jabberwock (~lidless@user/jabberwock) (Remote host closed the connection)
[09:14:20] *** Joins: jabberwock (~lidless@user/jabberwock)
[09:15:17] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:15:19] *** Quits: jabberwock (~lidless@user/jabberwock) (Client Quit)
[09:16:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[09:18:11] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[09:18:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:19:54] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:21:17] *** Quits: tims (~tims@27-32-34-159.tpgi.com.au) (Ping timeout: 244 seconds)
[09:21:29] *** Quits: chandankumar (~raukadah@110.44.96.144) (Ping timeout: 272 seconds)
[09:21:31] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:21:35] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[09:23:06] <Feuermagier> I am spawning new processes for independent tasks with Process.start() - how do I limit the maximum amount of processes at a time (I'd like to wait if more than 5 are active already)
[09:24:17] <meejah> Feuermagier: a semaphore is often used
[09:24:46] *** Parts: martixy (~martixy@212.5.147.51) ()
[09:25:38] <Feuermagier> meejah, hmm, they do not share a critical section. Each process tends to use up a few GB of RAM, and if I start 35 at a time I'll run out of RAM (which is bad)
[09:26:07] <Feuermagier> could be one of these "wrong question" thingys
[09:26:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[09:28:28] <meejah> Feuermagier: you can use semaphores with e.g. a count of "5" to control whether you can launch the next process (i.e. acquire the semaphore, run, release)
[09:29:28] *** Joins: magla (~gelignite@55d440eb.access.ecotel.net)
[09:30:48] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:09] *** Joins: rk04 (~rk04@user/rajk)
[09:31:11] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:31:53] <Feuermagier> meejah, hmm, currently my subprocesses can fail. I guess I'll need to handle that?
[09:32:48] *** Quits: Celeo (~Celeo@2603-8001-3301-2e00-5c5a-4235-cc41-cbce.res6.spectrum.com) (Quit: Leaving)
[09:34:55] *** Quits: armandokeller (~armandoke@200.159.170.169) (Quit: Client closed)
[09:35:42] *** Joins: kevr (~kevr@user/kevr)
[09:35:43] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:36:04] *** Quits: jpic (~jpic@82.142.9.26) (Ping timeout: 272 seconds)
[09:36:41] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 272 seconds)
[09:37:30] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[09:41:47] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[09:44:45] *** Joins: kouhai (~kouhai@user/kouhai)
[09:44:58] *** Quits: kouhai (~kouhai@user/kouhai) (Quit: sayonara)
[09:45:16] *** Joins: kouhai (~kouhai@user/kouhai)
[09:48:04] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[09:50:16] <az_> linkandzelda: Do note that there's a stripped-down attrs in Python 3.7+ under the dataclasses module
[09:50:40] *** Quits: foozle (~foozle@2001-b011-c001-54d9-de33-0b1d-c020-9927.dynamic-ip6.hinet.net) (Quit: Leaving)
[09:52:19] *** Quits: ______GOD______ (~GOD@189.174.212.187) (Quit: Turning off a portion of this simulation.)
[09:53:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:55:11] *** Joins: jrjsmrtn (~jrjsmrtn@ip-193-121-123-176.dsl.scarlet.be)
[09:55:27] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:55:37] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[09:57:43] *** Joins: nre (~nre@55d4a49c.access.ecotel.net)
[09:58:04] *** Quits: nre (~nre@55d4a49c.access.ecotel.net) (Client Quit)
[09:58:33] <meejah> Feuermagier: yes, on any kind of exit you'd need to release the semaphore
[09:58:46] *** Joins: nre (~nre@55d4a49c.access.ecotel.net)
[10:00:18] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 264 seconds)
[10:01:46] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[10:02:35] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Remote host closed the connection)
[10:02:42] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 264 seconds)
[10:03:08] *** Quits: nre (~nre@55d4a49c.access.ecotel.net) (Client Quit)
[10:03:55] *** Quits: xy (~icy@user/icy) (Ping timeout: 272 seconds)
[10:06:14] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:07:26] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[10:09:45] *** Joins: frostschutz (~frostschu@2a01:c22:d47d:1100:9b2c:2b59:1690:24fb)
[10:11:10] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:12:11] *** Quits: jmcantrell (~weechat@86.106.143.201) (Quit: WeeChat 3.2)
[10:12:33] *** Joins: jpic (~jpic@82.142.9.26)
[10:12:41] *** Joins: jmcantrell (~weechat@86.106.143.201)
[10:14:08] *** Joins: kevr (~kevr@user/kevr)
[10:14:11] *** Joins: pnoud (~pnoud@user/pnoud)
[10:15:28] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:16:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 244 seconds)
[10:16:39] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Killed (strontium.libera.chat (Nickname regained by services)))
[10:16:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:18:19] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[10:19:45] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 272 seconds)
[10:20:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:20:47] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[10:21:13] *** Quits: LiftLeft (~LiftLeft@154.21.114.153) (Ping timeout: 244 seconds)
[10:21:37] *** Joins: semeion (~semeion@user/semeion)
[10:22:49] *** Joins: mIk3_08 (~Thunderbi@210.185.171.104)
[10:24:55] *** Joins: icy (~icy@user/icy)
[10:24:59] *** Joins: emerent_ (~quassel@p200300cd5703bbebba27ebfffed28a59.dip0.t-ipconnect.de)
[10:24:59] *** emerent is now known as Guest4820
[10:24:59] *** Quits: Guest4820 (~quassel@p200300cd5703bba5ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (mercury.libera.chat (Nickname regained by services)))
[10:24:59] *** emerent_ is now known as emerent
[10:25:31] *** Quits: icy (~icy@user/icy) (Remote host closed the connection)
[10:27:34] *** Quits: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:29:29] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[10:29:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[10:29:45] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[10:32:06] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[10:32:35] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Quit: UAAARRR!)
[10:32:47] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 268 seconds)
[10:34:30] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 264 seconds)
[10:34:36] *** Joins: nre (~nre@55d4a49c.access.ecotel.net)
[10:35:13] *** Joins: kosh (~kosh@user/kosh)
[10:35:13] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[10:36:43] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 244 seconds)
[10:37:30] *** Quits: t260g (~Cthulhu@static-72-76-136-147.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[10:38:06] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 264 seconds)
[10:38:38] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[10:40:20] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[10:40:36] *** Joins: canopus (~user@116.68.98.40)
[10:41:13] *** Joins: wyclif (~wyclif@user/wyclif)
[10:42:01] <ssbr_> dialog chanserv
[10:42:08] <ssbr_> oof
[10:42:45] *** Joins: wattux (~wattux@212.51.23.106)
[10:42:49] *** Joins: upsala (~zcb@185.213.155.160)
[10:43:02] *** Quits: wattux (~wattux@212.51.23.106) (Client Quit)
[10:43:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:43:35] *** Joins: wattux (~wattux@212.51.23.106)
[10:45:27] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:45:30] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 244 seconds)
[10:45:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[10:45:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[10:46:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[10:46:25] *** Joins: gusto (~Augustus@109.255.100.54)
[10:46:34] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[10:46:55] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:40] *** Joins: seednode (~seednode@user/seednode)
[10:48:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:48:46] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:48:49] *** Joins: wyclif (~wyclif@user/wyclif)
[10:49:04] *** Joins: kevr (~kevr@user/kevr)
[10:50:03] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[10:50:40] *** Quits: easior__ (~easior@61.155.142.70) (Quit: Leaving)
[10:51:46] *** Joins: ksr (~KSR@124.197.12.15)
[10:55:13] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 272 seconds)
[10:56:21] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 244 seconds)
[10:57:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:58:32] *** Quits: [O-O] (aaa@user/druid) (Quit: Lost terminal)
[10:59:48] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[11:00:38] *** Joins: rendar (~rendar@user/rendar)
[11:01:48] *** Quits: viktorivan (~ivan@2806:101e:7:b2aa:4451:1df3:82ce:e5ac) (Remote host closed the connection)
[11:03:36] *** Joins: Smyger (~Smyger@ip2-200.brfjupiter.se)
[11:03:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[11:04:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:04:32] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[11:06:39] *** Quits: magla (~gelignite@55d440eb.access.ecotel.net) (Quit: Stay safe!)
[11:06:41] *** Joins: ijlx (~ijlx@dsl-50-5-224-196.fuse.net)
[11:07:17] *** Joins: sadg (~odd@45.83.220.210)
[11:07:21] *** Joins: palasso (~palasso@user/palasso)
[11:07:41] *** Joins: ksr (~KSR@124.197.12.15)
[11:08:00] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[11:08:16] *** Quits: cjb (~cjb@user/cjb) (Remote host closed the connection)
[11:11:31] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[11:11:49] *** Joins: rememberYou (~someone@user/rememberyou)
[11:11:49] *** Quits: jmcantrell (~weechat@86.106.143.201) (Quit: WeeChat 3.2)
[11:12:18] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 264 seconds)
[11:12:55] *** Quits: Snyp (~rksht@49.207.192.68) (Quit: WeeChat 3.1)
[11:13:42] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[11:15:12] *** Joins: chrysanthematic (~chrysanth@82.2.21.4)
[11:15:24] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[11:15:25] *** Joins: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef)
[11:15:51] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:18:18] *** Joins: lazypeon (~lazypeon@www.ezid.rs)
[11:18:24] *** Joins: Abrax (~Abrax@user/abrax)
[11:18:35] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[11:20:46] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:20:54] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:21:45] *** Joins: orbatos[m] (~orbatos@2001:470:69fc:105::3450)
[11:22:14] *** Joins: feriman (~feriman@188.163.113.127)
[11:25:01] *** Quits: ijlx (~ijlx@dsl-50-5-224-196.fuse.net) (Quit: Client closed)
[11:25:39] *** Joins: agumonke` (~user@88.163.231.79)
[11:25:43] *** HalfAShark|SLP is now known as HalfAShark
[11:25:51] <rendar> if i have a class Color, i create default colors with Color.RED = Color("#FF0000") -- now: what is the best method to enumerate all those default colors?
[11:26:06] *** Joins: ksr (~KSR@124.197.12.15)
[11:27:39] *** Joins: node1 (~node1@user/node1)
[11:28:23] *** Joins: larssg (~textual@89.239.212.110.dhcp.fibianet.dk)
[11:28:35] *** Joins: kwong (~kwong@user/kwong)
[11:29:22] *** Joins: kosh (~kosh@user/kosh)
[11:29:22] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:31:07] <jinsun> rendar: if Color is subclass of enum.Enum you can iterate over the class
[11:31:15] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[11:31:16] *** Joins: alguien_ (~alguien@user/alguien)
[11:31:24] <rendar> it's not
[11:33:25] <jinsun> ok, then I guess you have to maintain a list of the default colors, or maybe filter dir(Color) if the names have a pattern
[11:34:27] *** Quits: mxp (~mxp@82.98.30.69) (Quit: leaving)
[11:36:13] *** Joins: varaindemian (~varaindem@86.124.78.162)
[11:36:39] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Ping timeout: 244 seconds)
[11:37:05] *** Quits: chrysanthematic (~chrysanth@82.2.21.4) (Quit: chrysanthematic)
[11:38:09] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[11:38:18] <rendar> jinsun: the pattern is that the name doesn't start with __
[11:39:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:39:53] *** Joins: Schnouki (~schnouki@user/schnouki)
[11:41:20] <jinsun> rendar: then it is simpel right? you can just do default_colors =  [getattr(Color, x) for x in dir(Color) if not x.startswith("__")]
[11:41:27] <rendar> yep
[11:41:29] *** Joins: st4nd (~st4nd@user/st4nd)
[11:42:00] *** Joins: Joene_ (~Joene@cust-158-98-110-94.dyn.as47377.net)
[11:42:58] *** Quits: jpic (~jpic@82.142.9.26) (Ping timeout: 268 seconds)
[11:43:31] *** Quits: Joene_ (~Joene@cust-158-98-110-94.dyn.as47377.net) (Client Quit)
[11:44:07] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[11:44:14] *** Quits: dude-x_ (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[11:44:18] *** Joins: zeenk (~zeenk@82.76.113.130)
[11:44:54] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[11:45:25] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[11:46:03] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:46:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:46:35] *** Quits: pizdets (~pizdets@183.182.115.196) (Quit: pizdets)
[11:46:40] *** Quits: wgwz (~wgwz@45.55.193.150) (Ping timeout: 272 seconds)
[11:46:41] *** Quits: hexeme (~hexeme@user/hexeme) (Remote host closed the connection)
[11:47:00] *** Joins: hexeme (~hexeme@user/hexeme)
[11:47:16] *** Joins: pizdets (~pizdets@183.182.115.196)
[11:47:18] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 272 seconds)
[11:47:22] *** Joins: wgwz (~wgwz@45.55.193.150)
[11:49:21] *** Joins: varaindemian (~varaindem@86.124.78.162)
[11:49:21] <alguien_> How do I include an extra pypi repo without having to specify it on the command line?
[11:49:30] *** Joins: Jmtrix (~qed@user/jmtrix)
[11:50:22] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 268 seconds)
[11:53:15] <rendar> jinsun: with your solution i get: AttributeError: 'member_descriptor' object has no attribute 'a'
[11:53:26] <jinsun> alguien_: you can add it in pip config https://pip.pypa.io/en/stable/user_guide/#config-file
[11:53:39] *** Joins: mxp (~mxp@82.98.30.69)
[11:53:53] *** Quits: lazypeon (~lazypeon@www.ezid.rs) (Quit: Leaving.)
[11:54:35] <alguien_> jinsun, I was thinking the Pipfile? Just want to modify a library that my project uses
[11:54:46] <rendar> unfortunately Color has also properties (.r, .b, .g) and methods that doesn't start with __ :(
[11:55:18] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[11:55:31] <alguien_> jinsun, can I specify two [[source]]s, and will my repo take precedence if I specify it before pypi's?
[11:56:35] *** Joins: juanma (~juanma@3.red-79-157-209.dynamicip.rima-tde.net)
[11:56:35] <jinsun> rendar: ok well then it was not so simple pattern, can you paste your code somewhere?
[11:56:42] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[11:56:55] <rendar> jinsun: i fixed with `if not color.startswith("__") and color.isupper()`
[11:57:02] <rendar> it works, but i don't know if it's solid
[11:57:22] <rendar> jinsun: https://bpa.st/C2DA
[11:58:29] *** Joins: Auron (Auron956@user/auron)
[11:58:34] *** Joins: stwange (~j@90.253.222.210)
[11:58:37] <stwange> This might not be the best place to ask for help but I'm trying to run an Azure python function and this line is getting me 500. There's no log output (only figured out it was this line by elimination). It works locally.                 r = http.request('PURGE', purge_url, retries=False, fields=headers, timeout=10.0)  Full code here: https://pastebin.com/upJUpDit is there something obviously stupid I'm doing wrong?
[11:58:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi)
[11:59:07] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: ZNC - https://znc.in)
[11:59:15] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[11:59:27] <w0x12ef> freenode cannot login
[12:00:16] *** Joins: SebastianM (~seba@user/sebastianm)
[12:00:35] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9c3:9440:99d0:1faa) (Read error: Connection reset by peer)
[12:00:48] *** Joins: ksr (~KSR@124.197.12.15)
[12:00:52] <jinsun> alguien_: you can add one index_url and multiple extra_index_url, and the index_url gets preference, and I guess in extra ones the top one will get more preference
[12:00:56] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 244 seconds)
[12:01:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[12:02:13] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[12:02:37] *** Joins: ano (~weechat@user/ano)
[12:02:45] *** Joins: masber (~masber@dhcp-133-203.cscs.ch)
[12:02:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:03:18] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:03:58] *** Quits: frostschutz (~frostschu@2a01:c22:d47d:1100:9b2c:2b59:1690:24fb) (Quit: Leaving)
[12:05:42] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 264 seconds)
[12:06:00] *** Joins: AB49K (~AB49K@user/ab49k)
[12:06:00] *** Joins: chandankumar (~raukadah@110.44.96.144)
[12:06:56] *** Quits: Keij0 (~Keij0@user/keij0) (Ping timeout: 244 seconds)
[12:07:44] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[12:08:01] *** Joins: chele (~chele@user/chele)
[12:08:39] <kevr> does lxml.etree cache?
[12:08:48] <kevr> and how do we clear the cache?
[12:09:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:09:15] *** Joins: gusto (~Augustus@109.255.100.54)
[12:09:39] *** Joins: Vonter (~Vonter@user/vonter)
[12:10:54] *** Joins: aslicedbanjo (~aslicedba@81.141.55.106)
[12:11:06] *** Quits: kwong (~kwong@user/kwong) (Quit: Going offline, see ya! (www.adiirc.com))
[12:12:15] *** Joins: mrwick (~mrwick@user/mrwick)
[12:12:20] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[12:12:34] *** Quits: electrolytic (~electroly@gateway/tor-sasl/electrolytic) (Ping timeout: 252 seconds)
[12:13:18] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 268 seconds)
[12:13:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[12:13:43] *** Joins: jpic (~jpic@82.142.9.26)
[12:15:39] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[12:16:24] *** Quits: masber (~masber@dhcp-133-203.cscs.ch) (Quit: Client closed)
[12:16:42] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 240 seconds)
[12:17:09] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Quit: leaving)
[12:17:20] *** Joins: Keij0 (~Keij0@user/keij0)
[12:18:17] *** Joins: dvx (~dvx@185.63.97.64)
[12:21:11] *** Joins: Naan (~Naan@user/naan)
[12:21:35] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[12:23:37] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[12:23:57] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[12:24:31] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[12:24:39] *** Joins: ksr (~KSR@124.197.12.15)
[12:24:56] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[12:25:32] <Pitr> hi; didn't see it in the FAQ, but is there a job marketplace related to #python?
[12:25:46] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[12:26:20] *** Joins: kwong (~kwong@user/kwong)
[12:26:43] *** Joins: browniebroke (uid501792@id-501792.tinside.irccloud.com)
[12:28:08] *** Quits: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) (Client Quit)
[12:28:50] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 244 seconds)
[12:29:20] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 268 seconds)
[12:30:27] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[12:32:28] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[12:33:20] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:34:11] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[12:36:24] <alguien_> jinsun, what's the difference? how is one an "index" and the other "extra index"? They look the same to me
[12:36:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:36:34] <alguien_> (both [[source]]s)
[12:39:31] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:39:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:39:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:40:23] *** Quits: kwong (~kwong@user/kwong) (Quit: Going offline, see ya! (www.adiirc.com))
[12:40:25] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[12:40:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:40:51] *** Joins: easior (~easior@61.155.142.73)
[12:41:04] *** Joins: ksr (~KSR@124.197.12.15)
[12:42:07] *** Joins: pnoud (~pnoud@user/pnoud)
[12:43:12] *** Joins: jmcantrell (~weechat@89.45.224.45)
[12:44:01] *** Quits: ethoxy (~0xe3b7@echelon.lucif3r.ru) (Ping timeout: 268 seconds)
[12:45:09] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:f9a1:6a30:5a54:d88f)
[12:45:52] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[12:46:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:47:14] *** Joins: Pickchea (~private@user/pickchea)
[12:48:20] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[12:49:36] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[12:49:53] *** Joins: magla (~gelignite@55d440eb.access.ecotel.net)
[12:50:24] *** Joins: nanoc (~nanocoast@p200300e127264d00c53eefe97e39bc17.dip0.t-ipconnect.de)
[12:50:29] *** Joins: AndreasBuhr (~quassel@p548dd134.dip0.t-ipconnect.de)
[12:50:46] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:50:47] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[12:51:28] <jinsun> alguien_: ya both do the same thing, just index-url has more preference, if you don't override the index-url, pip will use pypi.org can give it more preference
[12:51:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi)
[12:52:30] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:52:38] <alguien_> Is index-url hardcoded? What is it?
[12:53:37] *** Joins: nyah (~nyah@90.221.186.180)
[12:55:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[12:55:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:00:22] <alguien_> Why can't I just include a module I depend on as a subdirectory and have it be used instead of the system/venv one?
[13:02:28] *** Joins: pnoud (~pnoud@user/pnoud)
[13:06:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[13:07:42] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[13:07:48] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:08:52] *** Joins: easior_ (~easior@61.155.142.67)
[13:11:43] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[13:13:00] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[13:14:50] *** Quits: kixx (~kixx@user/kixx) (Ping timeout: 244 seconds)
[13:16:12] *** Joins: ksr (~KSR@124.197.12.15)
[13:16:35] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[13:17:23] *** Joins: __jmcantrell__ (~weechat@89.46.62.162)
[13:17:48] *** Joins: Hackerpcs (~user@user/hackerpcs)
[13:17:51] *** Joins: somlis (~somlis@user/somlis)
[13:18:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[13:18:30] *** Joins: pnoud (~pnoud@user/pnoud)
[13:19:13] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[13:19:47] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 268 seconds)
[13:20:42] *** Quits: jmcantrell (~weechat@89.45.224.45) (Ping timeout: 264 seconds)
[13:21:08] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[13:21:38] *** Joins: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f)
[13:21:44] *** rich is now known as rich-
[13:21:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[13:21:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:22:04] *** rich- is now known as rich
[13:22:18] <wyclif> Pitr: https://www.python.org/jobs/
[13:23:24] *** Quits: juanma (~juanma@3.red-79-157-209.dynamicip.rima-tde.net) (Remote host closed the connection)
[13:23:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[13:24:26] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[13:24:30] *** Joins: st4nd1 (~st4nd@user/st4nd)
[13:25:02] *** Joins: sveinse (~sveinse@7.92-221-150.customer.lyse.net)
[13:26:09] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[13:28:29] *** Quits: st4nd (~st4nd@user/st4nd) (Ping timeout: 272 seconds)
[13:29:33] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[13:32:26] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:32:35] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[13:32:44] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[13:32:44] *** Joins: entuland (~entuland@user/entuland)
[13:33:54] *** Joins: ksr (~KSR@124.197.12.15)
[13:34:12] *** Joins: easior__ (~easior@61.155.142.67)
[13:34:28] *** Joins: jinsun (~quassel@user/jinsun)
[13:35:51] *** Joins: raukadah (~raukadah@110.44.96.144)
[13:36:37] *** __jmcantrell__ is now known as jmcantrell
[13:37:06] *** Joins: pnoud (~pnoud@user/pnoud)
[13:37:30] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 264 seconds)
[13:38:22] *** Joins: easior (~easior@61.155.142.67)
[13:38:37] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 272 seconds)
[13:38:55] *** Quits: chandankumar (~raukadah@110.44.96.144) (Ping timeout: 268 seconds)
[13:40:33] *** Quits: larssg (~textual@89.239.212.110.dhcp.fibianet.dk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:40:45] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[13:40:48] *** Joins: easior_ (~easior@61.155.142.67)
[13:41:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:42:25] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:44:27] *** Quits: fabs (~fabs@samba.ethz.ch) (Quit: fabs)
[13:44:27] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[13:46:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[13:46:54] *** Joins: cth (~Cthulchu@193.194.107.250)
[13:47:38] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[13:47:42] *** Quits: sadg (~odd@45.83.220.210) (Ping timeout: 264 seconds)
[13:48:35] *** Joins: inzkeeper (~trevor@2604:3d09:6583:8b00:765d:1f8b:bca4:b689)
[13:48:45] *** Quits: komencanto (~trevor@2604:3d09:6583:7100::a972) (Ping timeout: 272 seconds)
[13:49:55] *** Joins: ksr (~KSR@124.197.12.15)
[13:50:18] *** Joins: Payam (~Payam@138.106.57.131)
[13:50:42] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 240 seconds)
[13:50:56] *** Quits: Teknique (~kirk@user/teknique) (Read error: Connection reset by peer)
[13:51:06] *** Joins: Teknique (~kirk@user/teknique)
[13:51:16] *** Joins: someuser (~user@41.46.236.120)
[13:53:48] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:54:05] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:54:18] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 240 seconds)
[13:56:29] *** Quits: magla (~gelignite@55d440eb.access.ecotel.net) (Quit: Stay safe!)
[13:56:53] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[13:57:08] <graingert> alguien_: you can vendor stuff if you want, it's not usual practice though
[13:57:37] *** Quits: audiocat (~audio@2603-8081-1800-0062-58f8-e9e7-7a3e-e9cc.res6.spectrum.com) (Ping timeout: 272 seconds)
[13:58:05] <graingert> alguien_: https://pip.pypa.io/en/stable/development/vendoring-policy/
[13:58:59] *** Joins: easior__ (~easior@61.155.142.67)
[14:00:10] <alguien_> graingert, just want to hotfix a lib we use
[14:00:11] *** Joins: wons (~wons@user/wons)
[14:00:19] *** Quits: onu (~onufn@gibbs.uberspace.de) (Read error: Connection reset by peer)
[14:00:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:00:47] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[14:00:50] <alguien_> while the original maintainer develops the bugfix (in the works for some time now)
[14:01:55] *** Joins: qzd (uid237765@id-237765.tooting.irccloud.com)
[14:02:19] <graingert> alguien_: You can use patchy.patch
[14:02:41] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[14:02:43] <alguien_> If I simply wanted my module to be loaded instead of the system module, I'd have to modify sys.path though right?
[14:03:11] <graingert> alguien_: no you just import from urpackage._vendor.vendored_pkg
[14:03:48] *** Joins: onu (~onufn@gibbs.uberspace.de)
[14:04:14] <alguien_> graingert, that's the thing: I don't want to modify imports
[14:04:21] <alguien_> *import statements
[14:06:17] *** Quits: catbeard (~noise@user/catbeard) (Ping timeout: 244 seconds)
[14:06:30] <graingert> alguien_: Use patchy.patch then
[14:06:51] *** Joins: easior_ (~easior@61.155.142.70)
[14:08:23] *** Joins: brickfat (~brickfat@user/brickfat)
[14:09:44] *** Quits: raukadah (~raukadah@110.44.96.144) (Ping timeout: 268 seconds)
[14:09:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:09:59] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 252 seconds)
[14:10:24] *** Ellenor is now known as Reinhilde
[14:13:15] *** Joins: wyclif (~wyclif@user/wyclif)
[14:14:14] *** Joins: tristan__ (~tristan@110.11.238.155)
[14:14:41] *** Joins: ksr (~KSR@124.197.12.15)
[14:15:04] *** Joins: thiras (~thiras@user/thiras)
[14:15:35] *** Joins: derelict (~derelict@user/derelict)
[14:18:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:18:27] *** Joins: kixx (~kixx@user/kixx)
[14:19:03] *** Joins: Adoi (~Adoi@user/adoi)
[14:19:24] *** Quits: Smyger (~Smyger@ip2-200.brfjupiter.se) (Ping timeout: 244 seconds)
[14:19:26] *** Joins: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430)
[14:19:36] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[14:19:36] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[14:21:52] *** Joins: DsszzD (~DsszzD@2409:4060:2091:5870::16c5:70ad)
[14:21:57] <DsszzD> ping
[14:22:34] <Matheo_bis> Pong
[14:22:48] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[14:23:06] *** Quits: nneonneo (~b2xiao@wikipedia/nneonneo) (Ping timeout: 264 seconds)
[14:24:17] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Ping timeout: 252 seconds)
[14:24:48] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[14:24:56] <The-Compiler> ICMP echo reply
[14:25:04] *** Joins: agumonke` (~user@88.163.231.79)
[14:25:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[14:25:14] *** Joins: varaindemian (~varaindem@86.124.78.162)
[14:25:42] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[14:25:58] *** Joins: egon_ (~egon@user/egon)
[14:26:02] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Remote host closed the connection)
[14:26:24] *** Quits: egon_ (~egon@user/egon) (Client Quit)
[14:26:39] *** Quits: sveinse (~sveinse@7.92-221-150.customer.lyse.net) (Quit: leaving)
[14:27:01] *** Joins: sveinse (~sveinse@7.92-221-150.customer.lyse.net)
[14:27:11] *** Joins: chandankumar (~raukadah@110.44.96.144)
[14:28:40] *** Quits: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[14:28:51] <alguien_> Thanks for the suggestion graingert. The docs say patchy's slow. It only has to change code once, correct?
[14:30:33] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 272 seconds)
[14:30:49] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 268 seconds)
[14:32:02] *** Joins: upsala (~zcb@185.213.155.232)
[14:32:52] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[14:33:38] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 252 seconds)
[14:34:53] *** Joins: fabs (~fabs@samba.ethz.ch)
[14:35:04] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[14:35:28] *** Quits: DsszzD (~DsszzD@2409:4060:2091:5870::16c5:70ad) (Remote host closed the connection)
[14:36:03] *** Joins: egon_ (~egon@user/egon)
[14:36:33] *** Joins: ras_manny (~ras_manny@196.24.141.56)
[14:36:44] *** Joins: jla (~jordi@64.225.79.195)
[14:36:51] *** Parts: jla (~jordi@64.225.79.195) ()
[14:39:31] *** Quits: egon_ (~egon@user/egon) (Client Quit)
[14:41:50] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[14:46:07] *** Quits: nre (~nre@55d4a49c.access.ecotel.net) (Ping timeout: 268 seconds)
[14:47:11] *** Joins: ksr (~KSR@124.197.12.15)
[14:47:37] *** Quits: noteness (noteness@user/noteness) (Quit: Ping Timeout: 419 seconds)
[14:47:52] *** Joins: wyclif (~wyclif@user/wyclif)
[14:49:04] *** Joins: masoudd (~masoudd@user/masoudd)
[14:49:25] *** Joins: mnx (~mnx@user/mnx)
[14:49:29] *** Parts: mnx (~mnx@user/mnx) (Bye)
[14:49:31] *** Joins: nre (~nre@55d4a49c.access.ecotel.net)
[14:50:19] *** Joins: noteness (noteness@user/noteness)
[14:50:22] *** Joins: easior__ (~easior@61.155.142.67)
[14:50:26] *** Quits: varaindemian (~varaindem@86.124.78.162) (Ping timeout: 250 seconds)
[14:51:26] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 244 seconds)
[14:52:08] *** Joins: egon_ (~egon@user/egon)
[14:53:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:53:38] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[14:54:37] *** Joins: easior (~easior@61.155.142.67)
[14:56:18] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 240 seconds)
[14:56:58] *** Joins: yogoyo (~weechat@user/yogoyo)
[14:57:47] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[14:59:48] *** Quits: jmcantrell (~weechat@89.46.62.162) (Ping timeout: 268 seconds)
[15:01:02] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 268 seconds)
[15:01:05] *** Joins: Trieste_ (T@user/pilgrim)
[15:01:44] *** Joins: RoyK (~roy@user/royk)
[15:02:35] *** Joins: polyrob_ (~rob@user/polyrob)
[15:03:12] *** Joins: ksr (~KSR@124.197.12.15)
[15:03:19] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 244 seconds)
[15:04:09] *** polyrob_ is now known as polyrob
[15:05:28] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:29] *** Joins: agumonke` (~user@88.160.31.174)
[15:07:42] *** Quits: tristan__ (~tristan@110.11.238.155) (Ping timeout: 268 seconds)
[15:07:44] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 252 seconds)
[15:09:05] *** Joins: dme86 (~dan@user/dan86)
[15:09:30] *** Quits: wons (~wons@user/wons) (Quit: WeeChat 3.2)
[15:09:43] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[15:09:52] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[15:09:57] *** Joins: rsx (~dummy@ppp-188-174-141-49.dynamic.mnet-online.de)
[15:10:08] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[15:11:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:11:39] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[15:11:48] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:12:02] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[15:12:41] *** Quits: emiel (~emiel@2001:981:f73:1:f1b3:24d8:fe26:a3ef) (Ping timeout: 252 seconds)
[15:12:42] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[15:13:47] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[15:14:07] *** Quits: egon_ (~egon@user/egon) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:15:14] *** Joins: egon_ (~egon@user/egon)
[15:15:54] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[15:15:55] *** Joins: gioele (~gioele@user/gioele)
[15:16:43] <gioele> hi, inside a module, is there a way to get the name (or path) of the module that is `import`ing this module?
[15:16:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:17:18] *** Joins: easior_ (~easior@61.155.142.67)
[15:17:30] <nedbat> gioele: you can use the inspect module to examine the call stack.  I hope this is only for debugging?
[15:17:43] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Read error: Connection reset by peer)
[15:17:56] *** Quits: st4nd1 (~st4nd@user/st4nd) (Quit: Leaving)
[15:18:16] *** Joins: st4nd (~st4nd@user/st4nd)
[15:18:26] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[15:18:47] *** Joins: ksr (~KSR@124.197.12.15)
[15:18:57] *** Joins: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430)
[15:19:10] <gioele> nedbat: yes, it is just for debugging. A module is being loaded but I cannot understand where from.
[15:19:40] *** Joins: Naan (~Naan@user/naan)
[15:20:03] <nedbat> gioele: i did something like that here: https://nedbatchelder.com/text/machete/machete.html#7  (the whole talk is https://nedbatchelder.com/text/machete.html)
[15:20:39] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[15:20:49] *** Joins: easior__ (~easior@61.155.142.70)
[15:21:40] <gioele> nedbat: thanks, `inspect.stack()` should do
[15:21:52] *** Joins: wyclif (~wyclif@user/wyclif)
[15:22:06] *** Quits: egon_ (~egon@user/egon) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:22:30] *** Quits: rememberYou (~someone@user/rememberyou) (Ping timeout: 264 seconds)
[15:23:07] *** Quits: st4nd (~st4nd@user/st4nd) (Ping timeout: 268 seconds)
[15:23:48] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:23:55] *** Joins: dme86 (~dan@user/dan86)
[15:23:59] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[15:26:21] *** Joins: emiel (~emiel@2001:981:f73:1:9cae:d26f:441d:541e)
[15:26:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:27:46] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:27:53] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[15:28:12] *** Joins: kwong (~kwong@user/kwong)
[15:28:40] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[15:29:42] <Yhg1s> gioele: FWIW, I usually just make it raise an exception.
[15:29:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:30:07] *** Joins: varaindemian (~varaindem@86.124.78.162)
[15:31:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[15:31:52] *** Joins: hid3 (~arnoldas@78.157.71.116)
[15:32:31] *** Joins: todda7 (~torstein@2a02:587:3730:a638:9f0e:3b7a:4dd:b336)
[15:32:36] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[15:34:19] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[15:35:23] *** Joins: egon_ (~egon@user/egon)
[15:35:27] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[15:36:01] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[15:37:14] *** Quits: egon_ (~egon@user/egon) (Client Quit)
[15:37:32] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[15:37:56] *** Joins: pnoud (~pnoud@user/pnoud)
[15:38:09] *** Joins: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:a009:744d:e0f4:b251)
[15:40:05] <varaindemian> do you know a script for bulk ip lookup?
[15:40:31] <grawity> uh lookup in where exactly?
[15:40:37] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[15:40:50] <grawity> DNS? WHOIS? GeoIP? IRR? BGP?
[15:41:26] *** Joins: darksun (~darksun@user/darksun)
[15:41:58] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:42:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:42:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[15:44:35] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Quit: WeeChat 3.2)
[15:45:35] *** Joins: acresearch (~acresearc@user/acresearch)
[15:46:38] <varaindemian> and how can I read that from a file?
[15:46:44] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[15:47:17] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Client Quit)
[15:48:23] <varaindemian> and output it on the same line
[15:49:43] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[15:50:58] *** Joins: mickey6 (~user@user/mickey)
[15:51:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[15:52:39] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[15:52:43] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[15:55:05] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Quit: WeeChat 3.2)
[15:55:19] *** Quits: mickey (~user@user/mickey) (Ping timeout: 252 seconds)
[15:55:26] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[15:55:36] <varaindemian> ip2geo 8.8.8.8 doesn't seem to work
[15:55:41] *** Joins: mickey (~user@user/mickey)
[15:55:43] <varaindemian> >> ip2geo 8.8.8.8 doesn't seem to work
[15:55:54] <varaindemian> SyntaxError: invalid syntax
[15:56:31] *** Joins: wyclif (~wyclif@user/wyclif)
[15:56:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:57:05] *** chilvers1 is now known as chilversc
[15:57:18] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[15:57:20] <WhyNotHugo> Running `pip install -U pip setuptools wheel` downloads and builds dozens of versions of `pip` until `/tmp` is full. What's going on here?
[15:57:25] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[15:58:04] *** Quits: mickey6 (~user@user/mickey) (Ping timeout: 252 seconds)
[15:59:49] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.1)
[16:00:11] *** Joins: gareppa (~gareppa@user/gareppa)
[16:01:06] <WhyNotHugo> Looks like using `--upgrade-strategy eager` fixes it, but I'm not sure if there's a bug or just user error here.
[16:01:38] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[16:02:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:02:35] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 268 seconds)
[16:03:47] *** Trieste_ is now known as Trieste
[16:04:17] *** Quits: davidlowryduda (~davidlowr@73.61.8.71) (Ping timeout: 244 seconds)
[16:04:58] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:05:15] <varaindemian> how can I execute a shell command in python?
[16:05:26] <varaindemian> I am trying this: #         subprocess.run("ip2geo", "8.8.8.8")
[16:05:27] *** Joins: digilink (~digilink@user/digilink)
[16:05:39] <Helle> varaindemian: I would use a library for that instead
[16:05:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[16:05:44] <varaindemian> bash command: "ip2geo 8.8.8.8"
[16:05:53] <varaindemian> what library?
[16:05:55] *** Joins: frostschutz (~frostschu@2a01:c22:d47d:1100:9b2c:2b59:1690:24fb)
[16:06:27] *** Joins: davidlowryduda (~davidlowr@73.61.8.44)
[16:06:55] <Helle> varaindemian: https://pypi.org/project/ip2geo/ ?
[16:07:22] <Helle> oh hold on, does that actually have a proper API
[16:07:23] <Helle> mm
[16:07:34] <nedbat> anyone have Python 3.10.0b3 running on windows and can try this snippet for me?  https://gist.github.com/6090ab4f6706b454c132996851f4c16f
[16:07:52] *** Joins: Haydos (uid356478@id-356478.tooting.irccloud.com)
[16:07:56] <Helle> https://pypi.org/project/ip2geotools/ looks healthier
[16:08:37] <Helle> as a reminder, do use these libraries with care
[16:08:45] <Helle> because location information may be very wrong
[16:09:00] <Helle> or reported more precisely then the system actually knows
[16:09:11] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-172-10.red.bezeqint.net) (Quit: Client closed)
[16:09:35] <Helle> (looks like NONE of the libraries report precision....)
[16:09:42] <Helle> see https://gizmodo.com/how-cartographers-for-the-u-s-military-inadvertently-c-1830758394 and various related articles of why that matters
[16:10:54] *** Quits: canopus (~user@116.68.98.40) (Read error: Connection reset by peer)
[16:11:41] *** Quits: qzd (uid237765@id-237765.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:11:58] *** Joins: pnoud (~pnoud@user/pnoud)
[16:12:02] *** Quits: kwong (~kwong@user/kwong) (Quit: Going offline, see ya! (www.adiirc.com))
[16:12:05] <Yhg1s> nedbat: sure.
[16:12:07] *** Parts: gioele (~gioele@user/gioele) ()
[16:12:12] <Yhg1s> nedbat: do you want the output, or just know if it crashes?
[16:12:17] <nedbat> Yhg1s: output, thanks
[16:12:30] *** Quits: mIk3_08 (~Thunderbi@210.185.171.104) (Changing host)
[16:12:30] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:12:54] <Yhg1s> nedbat: https://bpa.st/V42Q
[16:13:14] *** alguien_ is now known as alguien
[16:13:33] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Quit: WeeChat 3.2)
[16:13:35] *** Quits: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[16:14:15] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[16:14:20] <nedbat> Yhg1s: how can it be that windows is different than mac?  https://bpa.st/KNZA
[16:14:25] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[16:15:28] <Yhg1s> nedbat: an optimisation difference in the compilers? Things getting optimised away differently, I mean, or computed goto not being used/being used differently?
[16:15:43] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:15:43] <nedbat> Yhg1s: i guess that's the answer. i'll write a bpo
[16:15:56] <Yhg1s> don't forget to noisy mark shannon :P
[16:15:56] *** Joins: raukadah (~raukadah@110.44.96.144)
[16:16:04] <nedbat> Yhg1s: oh, don't worry :)
[16:16:04] *** Quits: adium (adium@user/adium) (Quit: Stable ZNC by #bnc4you)
[16:16:57] *** Quits: chandankumar (~raukadah@110.44.96.144) (Ping timeout: 272 seconds)
[16:17:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[16:18:41] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 252 seconds)
[16:19:05] *** Joins: wyclif (~wyclif@user/wyclif)
[16:19:09] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:20:07] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[16:20:34] *** Joins: w0x12ef (~w0x12ef@111.63.14.116)
[16:20:47] *** Joins: adium (adium@user/adium)
[16:21:31] *** Joins: jamea (~jamea77@177.239.84.167)
[16:21:33] <jamea> hi all
[16:21:46] <jamea> anyone have documentation for read a pdf file?
[16:23:13] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:23:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:24:03] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:24:11] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fda:6d12:ca1d:def7)
[16:24:40] *** Joins: izabera (izabera@user/izabera)
[16:24:50] *** Joins: amirouche (~amirouche@static.62.204.203.116.clients.your-server.de)
[16:24:54] *** Parts: amirouche (~amirouche@static.62.204.203.116.clients.your-server.de) (WeeChat 2.8)
[16:25:00] <izabera> hello there, can i ask about embedding ipython in here?
[16:25:20] <jamea> izabera wich is ipython ?
[16:25:28] <izabera> what
[16:25:40] *** Quits: jpic (~jpic@82.142.9.26) (Read error: Connection reset by peer)
[16:27:01] *** Quits: civillian (~nick@ppp118-208-162-15.cbr-trn-nor-bras39.tpg.internode.on.net) (Ping timeout: 244 seconds)
[16:27:46] <puadxtub> :D
[16:28:00] *** Joins: pnoud (~pnoud@user/pnoud)
[16:28:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:28:41] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[16:29:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:29:43] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[16:30:14] <izabera> it's a cool python thing, for instance it has a shell interface that makes it more pleasant to use python from a terminal, with colours/tab completion/magic
[16:31:33] *** Joins: bxsx (~x@188.147.127.115.nat.umts.dynamic.t-mobile.pl)
[16:31:40] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:31:48] <izabera> i'm trying to embed it and i would like it to be dropped into ipython with some *incomplete* code as a starting point, like     for a, b, c in whatever():   like if i had just typed it, so that i can add to it and edit it if needed
[16:31:56] *** Joins: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430)
[16:31:59] *** Quits: ops (~ops@user/echelon) (Ping timeout: 244 seconds)
[16:32:10] <izabera> there's like a trillion options to configure how ipython is embedded and i can't find one that does that ^
[16:32:18] *** Quits: todda7 (~torstein@2a02:587:3730:a638:9f0e:3b7a:4dd:b336) (Ping timeout: 268 seconds)
[16:32:32] <jamea> any link?
[16:32:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[16:32:53] *** Joins: brownan (~brownan@136.56.137.143)
[16:33:00] <izabera> https://ipython.org/   https://ipython.readthedocs.io/
[16:33:24] <bxsx> hi, does PyPI require admin privileges to remove a package?
[16:34:42] <bxsx> ok, found in the faq
[16:35:17] *** Joins: wyclif (~wyclif@user/wyclif)
[16:35:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi)
[16:36:01] *** Quits: mickey (~user@user/mickey) (Ping timeout: 252 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:37] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[16:40:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:41:33] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[16:42:07] *** Joins: cliluw (~cliluw@47.147.80.149)
[16:42:57] *** Quits: bxsx (~x@188.147.127.115.nat.umts.dynamic.t-mobile.pl) (Read error: No route to host)
[16:46:17] *** Joins: SebastianM (~seba@user/sebastianm)
[16:46:45] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[16:46:50] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:47:05] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[16:47:54] *** Quits: flyback (~flyback@2601:540:8201:1e60:c56c:ec62:6f56:9a57) (Ping timeout: 240 seconds)
[16:48:13] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 268 seconds)
[16:48:51] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[16:49:08] *** Quits: AndreasBuhr (~quassel@p548dd134.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:49:21] *** Joins: phryk (~totallyno@user/phryk)
[16:49:29] *** Quits: w0x12ef (~w0x12ef@111.63.14.116) (Ping timeout: 252 seconds)
[16:49:31] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[16:50:27] *** Quits: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9) (Client Quit)
[16:51:37] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Quit: Client closed)
[16:51:46] *** Joins: yangby (~secret@115.199.97.206)
[16:51:48] *** Joins: Snyp (~rksht@49.207.192.68)
[16:52:22] *** Joins: wyclif (~wyclif@user/wyclif)
[16:53:26] *** Joins: patchie (~sdf@136.228.208.141)
[16:53:33] <patchie> what is ActiveState ?
[16:53:38] <patchie> are they afiliated with Python.org?
[16:54:16] *** Joins: canopus (~user@116.68.98.40)
[16:54:27] *** Joins: zeden (~zeden@user/zeden)
[16:55:48] *** Quits: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[16:55:50] *** Joins: Pickchea (~private@user/pickchea)
[16:55:56] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[16:57:34] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Client Quit)
[16:57:58] *** Joins: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de)
[16:58:04] *** Joins: mrwick (~mrwick@user/mrwick)
[16:58:07] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 272 seconds)
[16:58:20] *** Joins: pnoud (~pnoud@user/pnoud)
[16:58:50] *** Quits: Namigator (~nami@user/namigator) (Ping timeout: 252 seconds)
[17:00:16] *** Joins: cedric (~cedric@2a01:cb11:867:c200:7661:c61a:b498:fda6)
[17:00:30] <Yhg1s> patchie: no. ActiveState is a company that (among other things) provides its own Python distribution and IDE.
[17:00:42] *** Joins: flyback (~flyback@2601:540:8201:1e60:e525:f307:683:192b)
[17:01:43] *** Joins: ndegruchy (~nathan@156.55.174.130)
[17:02:11] <kosh> I wonder what the advantage is of using their distribution vs the default one or conda
[17:02:31] <kosh> at least anaconda focuses on high performance scientific libraries so I can see why they exist
[17:02:55] <p-i-> for r in re.findall(r'<(.*?)>', message): message = message.replace(f'<{r}>', ' ')
[17:03:05] <p-i-> Is there a way to do this more succinctly?
[17:03:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[17:03:28] *** Joins: Namigator (~nami@user/namigator)
[17:03:32] <Yhg1s> kosh: there's not any advantage taht I know of.
[17:03:43] <Yhg1s> (there used to be a slight advantage, back in 2001.)
[17:03:51] <Repiphany> re.sub
[17:04:00] <Yhg1s> patchie: that's pretty much what re.sub is for, yes.
[17:04:20] <Yhg1s> eh, p-i- ^
[17:04:23] <Yhg1s> patchie: sorry.
[17:04:44] <p-i-> Thanks!
[17:05:06] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[17:06:01] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:06:02] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[17:06:15] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:06:34] *** Joins: spithash (~spithash@user/spithash)
[17:06:40] *** Joins: bxsx (~x@188.147.127.115.nat.umts.dynamic.t-mobile.pl)
[17:07:16] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:07:46] <bxsx> how bad is to upload a new version of package to PyPi, then remove it and upload fixed one with the same version number?
[17:07:53] *** Joins: gareppa (~gareppa@user/gareppa)
[17:07:56] <nedbat> bxsx: bad enough that you cannot do it.
[17:08:22] <jamea> i have this string: "Algoritmos \nProyecto\nFinal\nAplicado\nPREGRAD\nO\n2021\n-\n1\nINGENIERÍA \nINDUSTRIAL \nUNIVERSIDAD\nPERUANA\nDE\nCIENCIA\nAPLICADAS\n"
[17:08:29] <nedbat> bxsx: pypi won't let you.  increment the version and upload a new version
[17:08:44] <webknjaz> @bxsx: the artifact versions are immutable but you can use a post-release (see PEP 440)
[17:08:50] <jamea> how to convert to a array or list?
[17:09:26] <webknjaz> @jamea: str.split('\n')
[17:09:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[17:10:07] *** Joins: sims (sim@libera/sponsor/sims)
[17:10:25] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[17:10:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:11:04] <jamea> webknjaz ok, how to get the size or length?
[17:11:10] <jamea> xPaginaPDFstr=pageObj.extractText()
[17:11:11] <jamea> XArrayLineas=xPaginaPDFstr.split('\n')
[17:11:16] <bjs> jamea: len(some_list) returns the length of the list
[17:11:25] <patchie> Yhg1s: ah, ok!
[17:11:27] <patchie> thanks
[17:11:46] <bjs> jamea: something like the tutorial at http://docs.python.org/3/tutorial will cover this kind of stuff, it's worth going through it once or twice
[17:13:25] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:14:06] <bxsx> yeah, the artifact is completely broken and unusable and contains some files that should be included. so i still want to delete it. i assume, the fixed version need incremented version number, but i would need to remove the old version from PyPI anyway. does it look ok? let's say the last release was 1.5.0, now i released 1.6.0 that i need to remove, so i should just upload 1.6.1?
[17:14:42] <nedbat> bxsx: you don't remove old versions, you "yank" them, which means they are still there if people request them specifically.
[17:14:55] <nedbat> bxsx: mostly, yes, upload 1.6.1
[17:15:08] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[17:15:39] <bxsx> nedbat: as a owner of the project, i am able to "delete" it, right? what do you mean by yanking it?
[17:15:44] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Client Quit)
[17:15:50] *** Joins: wakeup (~wakeup@user/wakeup)
[17:15:59] <nedbat> bxsx: it;s an action on pypi.  it's best not to completely delete a version
[17:16:04] <webknjaz> @bxsx: yank is a separate button. it's best not to click "delete"
[17:16:44] <webknjaz> @bxsx: See https://pypi.org/help/#yanked
[17:16:56] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[17:17:44] <p-i-> What's a good way to pull out all 'http://tinyurl.com/blah' from a string?  `re.findall(r'(https?://\S+)', s)` gives me cruft at the end. Like " and </a><br/> etc.
[17:17:54] <webknjaz> @bxsx: if you're absolutely sure that no living soul has that specific version used and/or pinned in their `requirements.txt`, it's okay to delete. But if not, deletion will break other people's setups which is unpleasant.
[17:18:52] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[17:19:03] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 268 seconds)
[17:19:13] <webknjaz> @bxsx: If you "yank" a release, you can always "unyank" later. This will simply add a tag to that release w/o removing it from the version list. But people doing `pip install pkg_name` w/o a specific version request will not get that yanked version with a modern pip (unless they will specifically ask for `==1.6.0`)
[17:19:39] <webknjaz> So it's like a "soft removal" or a recommendation not to use the release.
[17:19:54] <bxsx> webknjaz: i am sure about it, it's not possible to use the release and it was just uploaded few hours ago
[17:20:01] <kosh> bxsx, I had an error in a package just yesterday, I just increment the version and upload a new one
[17:20:11] <bxsx> yeah, just read PEP592
[17:20:44] <bxsx> kosh: sure, but it's not only about error. the package contains multiple files that should never been uploaded or available for anyone
[17:21:30] <kosh> ifit has files that never should have been there and they contain any kind of sensitive information I would probably delete instead of yank for that case
[17:21:35] *** Joins: ano (~weechat@user/ano)
[17:21:49] <kosh> if it has files that should not be there but are harmless I would just yank it
[17:21:53] <jinsun> p-i-: is the string html? then it will be better to use lxml or beautifulsoup than trying it with regex
[17:22:54] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[17:22:56] <bxsx> right. and then upload 1.6.1 or reupload 1.6.0? cause it looks pretty weird to not release 1.6.0 and just bump from 1.5.0 to 1.6.1 but it might be correct
[17:23:14] <p-i-> jinsun: It's got HTML bits in it, but it's incomplete.
[17:23:42] *** Joins: wyclif (~wyclif@user/wyclif)
[17:23:58] <p-i-> I'm trying `re.findall(r'(https?://[^a-zA-Z0-9])', text)` but it's not working.
[17:24:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:25:34] <kosh> I would upload 1.6.1
[17:25:34] <Yhg1s> p-i-: what did you expect that to match? Usually after a / there is something in the [a-zA-Z0-9] range, which you're explicitly excluding.
[17:25:43] <bxsx> i mean, the actual 1.6.0 release is completely fine, according to git repository etc. the only problem is with artifact uploaded to PyPI that I would like to replace but don't want to make more troubles by doing it
[17:26:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 264 seconds)
[17:26:29] <Yhg1s> bxsx: there's nothing wrong with not releasing 1.6.0, really.
[17:26:31] <webknjaz> then just discard that and use a new version.
[17:28:13] <graingert> bxsx: you can use .post0
[17:28:27] <graingert> bxsx: what's on pypi for 1.6.0?
[17:29:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:29:40] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:32:03] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[17:32:03] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[17:32:07] *** Quits: jamea (~jamea77@177.239.84.167) (Ping timeout: 244 seconds)
[17:32:29] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:34:14] *** Joins: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430)
[17:37:20] <p-i-> Yhg1s: I see. I had an unwanted ^
[17:37:33] <p-i-> I'm trying to match any alphanumeric combination after the /
[17:38:16] <p-i-> re.split( '[a-zA-Z0-9]', text ) matches the next character, but how to match an arbitrary number of matching following characters?
[17:38:39] <Yhg1s> p-i-: '+'
[17:38:46] <p-i-> Sorry, re.split( 'https://[a-zA-Z0-9]', text )
[17:38:49] *** Joins: Naan` (~Naan@user/naan)
[17:38:51] <Yhg1s> p-i-: or '*', depending on whether you want to match one-or-more or zero-or-more.
[17:39:57] *** Joins: wyclif (~wyclif@user/wyclif)
[17:40:40] *** Joins: RaverWild (~RaverWild@91-148-178-233.haskovo.ddns.bulsat.com)
[17:41:27] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:41:45] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:41:53] <p-i-> Magic!
[17:42:13] * p-i- todos RTFM teh magic
[17:42:27] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 244 seconds)
[17:42:28] *** Quits: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) (Quit: Leaving.)
[17:42:51] <varaindemian> are you aware of a tool that can check potentially malicious IP addresses? In bulk
[17:43:00] <varaindemian> tool = python script
[17:45:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[17:46:24] *** Joins: badsektor (~badsektor@user/badsektor)
[17:46:24] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[17:46:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:46:49] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Quit: meow.)
[17:47:03] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[17:49:49] *** Joins: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com)
[17:51:38] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[17:52:05] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[17:52:21] <p-i-> re.findall( 'https?://[a-zA-Z0-9._/-]+', 'http://foo-url.com/bar_/quux' )
[17:52:33] <p-i-> This is looking decent now
[17:52:47] *** Joins: mickey (~user@user/mickey)
[17:52:50] <dav1d> urlparse?
[17:52:57] <p-i-> Can anyone see an obvious fail/counterexample?
[17:53:13] <p-i-> dav1d: The URL is in a randomish string
[17:53:30] *** Parts: camel_case (~iphone@user/iphone) (WeeChat 3.0.1)
[17:53:31] <dav1d> ah nvm, just saw you're looking for urls in text
[17:53:44] *** Joins: hntrmrrs (uid49@id-49.highgate.irccloud.com)
[17:53:57] *** Joins: camel_case (~iphone@user/iphone)
[17:54:14] <dav1d> p-i-, what about `[^\s]+`? Everything that is not a space?
[17:54:19] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:54:27] *** Joins: jamea (~jamea77@189.237.100.235)
[17:55:00] <grym> p-i-: https://аррӏе.com  won't pass; i assume that's intentional though
[17:55:06] <p-i-> I can't, there's sometimes " or > or \n following the url, or space
[17:55:12] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[17:55:17] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:55:22] *** Joins: todda7 (~torstein@2a02:587:3729:5274:b6df:d74:d185:4e87)
[17:55:22] <p-i-> grym: yeah, there's guaranteed something after the domain
[17:55:46] <dav1d> p-i-, are you trying to find all <a> tags in an HTML?
[17:55:47] <grym> p-i-: https://аррӏе.com/foo also won't pass
[17:55:47] <p-i-> Amazing how complex every single answer I found on the internet was
[17:55:58] <grym> p-i-: because i am _cheating_
[17:56:09] <p-i-> woh, really? wtf
[17:56:12] <dav1d> *all links from a tags in html
[17:56:18] <dav1d> because lxml can do that
[17:56:21] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:56:23] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[17:56:31] <grym> p-i-: it helps to have a non-mono font to see what's going on
[17:56:34] <grym> but that's not ascii
[17:56:53] *** Joins: wyclif (~wyclif@user/wyclif)
[17:56:55] <p-i-> oh lol
[17:57:06] *** Joins: icy (~icy@user/icy)
[17:57:53] <p-i-> cråfty
[17:58:01] <grym> sneak sneak sneak
[17:58:30] <p-i-> So many scammers doing that on Twitter comments.
[17:58:58] <p-i-> BTC Giveaways every day by Eløn Musk & friends
[17:59:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[17:59:24] <p-i-> Brings out all the bugs in HumanOS
[17:59:40] *** Quits: pizdets (~pizdets@183.182.115.196) (Ping timeout: 245 seconds)
[18:00:36] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[18:00:59] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[18:01:06] *** Joins: c10l (~c10l@89.34.167.207)
[18:01:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:01:51] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[18:02:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:02:52] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[18:03:02] *** Parts: Abrax (~Abrax@user/abrax) (Leaving)
[18:03:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[18:03:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[18:04:33] *** Joins: easior (~easior@61.155.142.70)
[18:04:47] <obiwahn> Is it ok to have 2 setup calls in a setup.py?
[18:05:33] <Yhg1s> obiwahn: eh, let's say no.
[18:05:43] <Yhg1s> (not having a setup.py would be better.)
[18:06:08] <webknjaz> @obiwahn: it depends. What's your use-case? I definitely recommend migrating towards `setup.cfg`-only setup.
[18:07:00] <webknjaz> OTOH I know a project that has a fallback `setup()` call with a different set of arguments (the first one attempts to compile optional C-extensions and the fallback just packages pure-Python implementation)
[18:07:16] <grym> fallback two-line setups are pretty normal
[18:07:32] *** Joins: LiftLeft (~LiftLeft@154.21.28.215)
[18:07:38] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[18:08:04] <obiwahn> thank you
[18:08:25] *** Joins: easior_ (~easior@61.155.142.73)
[18:08:50] <grym> but a setup.py that has two setup() calls in it is new to me
[18:09:05] <grym> i've seen some weird ones but i haven't see that
[18:09:26] <webknjaz> Yeah, I suppose the second invocation would override things on disk
[18:09:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi)
[18:10:12] *** Joins: adder (~adder@user/adder)
[18:11:07] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[18:11:23] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[18:11:28] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[18:12:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[18:13:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:13:32] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[18:13:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:13:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:53] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[18:14:16] *** Joins: Adois (~Adoi@user/adoi)
[18:14:36] *** Joins: Guddu (~Guddu@117.222.86.252)
[18:15:00] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[18:16:08] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[18:16:13] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:17:29] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[18:18:15] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[18:18:33] *** Quits: raukadah (~raukadah@110.44.96.144) (Ping timeout: 272 seconds)
[18:18:33] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[18:18:46] *** Joins: chandankumar (~raukadah@110.44.96.144)
[18:18:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:19:44] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 250 seconds)
[18:20:13] *** Quits: nre (~nre@55d4a49c.access.ecotel.net) (Ping timeout: 268 seconds)
[18:20:21] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[18:21:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:21:51] <graingert> you'd have to catch the sys.exit from the first one
[18:21:54] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[18:22:00] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:22:02] <themill> what's a good package to use to build classes that talk to a REST API, decode the json that is returned etc? My googling only turns up people telling me how to build this using requests.
[18:22:10] <graingert> themill: pydantic?
[18:22:30] <graingert> themill: attrs/cattrs/marshmallow etc
[18:22:48] <m_tadeu> hi...I have "myapp" which is a python interpreter byt itself...I'm able to attach a vscode debug session to it nicely. Now, "myapp" launches another "myapp" using subprocess.Popen...how can I attach my debug session to that subprocess?
[18:23:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: Lost terminal)
[18:23:30] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[18:23:36] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Client Quit)
[18:23:48] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:25:05] <themill> graingert: thanks; they seem to focus on the data deserialisation but I'd still be doing all the actual requests stuff myself (and all the error handling around it, which is tedious and annoying to get right). Is there not something that deals with that step?
[18:25:13] *** Joins: alguien (~alguien@user/alguien)
[18:25:23] <graingert> themill:  you mean calling `.raise_for_status()` ?
[18:25:44] <grym> themill: fastapi
[18:25:52] <graingert> grym: that's a rest api server
[18:25:54] <graingert> not client
[18:25:58] <graingert> s/rest//
[18:25:59] <grym> themill: or, uh, pydantic being the relevant bit of that project
[18:26:08] <grym> graingert: yep, s/brain/coffee
[18:26:18] <graingert> loool
[18:26:27] *** Quits: jess (~jess@libera/staff/jess) ()
[18:26:48] <grym> i find pydantic slightly better suited to "take json moosh into classes" than attrs/desert, but both are good
[18:27:11] <camel_case> pyyaml stands above all
[18:27:15] <grym> what i don't have a good answer for (or anyone seems to have a good answer for) is "i have this spec.json; make me some classes"
[18:27:25] <themill> hmm, I was expecting something to build clients that looked a bit more like the REST server (decorate things and let it do the work)
[18:28:39] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com)
[18:29:03] <habnabit_> camel_case, pyyaml isn't relevant here
[18:29:25] *** Joins: easior_ (~easior@61.155.142.73)
[18:30:22] <tims> themill: I'm not aware of any libraries that do that, I've always created a layer myself. REST is more a design guideline than a specification so API's all tend to have different ways of working.
[18:30:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:30:29] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[18:30:53] <themill> ack
[18:31:01] *** Quits: emiel (~emiel@2001:981:f73:1:9cae:d26f:441d:541e) (Ping timeout: 244 seconds)
[18:31:19] *** Quits: jamea (~jamea77@189.237.100.235) (Ping timeout: 268 seconds)
[18:31:39] *** Joins: easior__ (~easior@61.155.142.67)
[18:33:23] *** Joins: emiel (~emiel@2001:981:f73:1:9cae:d26f:441d:541e)
[18:33:40] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[18:33:44] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[18:33:55] <themill> graingert, grym, tims: thanks, I'll have a play
[18:33:57] <rockSTONE> don't suppose there are any pytest+doctest users about?  i was wondering if there's any way to have the pytest runner pick up each separate >>> block as a separate test from a given .rst/.txt file ... looks like at least the default behaviour is to treat the entire .rst/.txt file as one test
[18:34:07] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[18:34:15] *** Joins: fofoni (~fofoni@user/fofoni)
[18:34:17] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[18:34:26] *** Joins: masoudd (~masoudd@user/masoudd)
[18:34:35] <Yhg1s> rockSTONE: generally speaking, in doctests, the >>> blocks can (and frequently do) reference variables from earlier >>> blocks.
[18:34:58] <Yhg1s> rockSTONE: so that doesn't sound like something that would be common enough to try and support.
[18:35:01] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[18:35:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:35:06] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 240 seconds)
[18:35:06] <rockSTONE> Yhg1s: good point, in which case it would be great to designate a fresh new test in the middle of a file
[18:35:06] <tims> However within a single API you usually find common behaviours and build few methods eg common response codes, authentication etc. I usually end up with common get/post/delete methods that are called varing by path
[18:35:31] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 268 seconds)
[18:35:31] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[18:35:56] *** Joins: dmat (~noone@61.68.168.148)
[18:36:12] <tims> themill: The Python builtin http.server is handy for mocking out the real API responses to test your code.
[18:36:25] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:37:03] *** Joins: easior_ (~easior@61.155.142.70)
[18:37:12] <Yhg1s> rockSTONE: doctest doesn't have a way of doing that, unfortunately.
[18:37:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[18:37:35] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[18:37:40] *** Parts: Jenkens (~Jenkens@user/jenkens) ()
[18:37:54] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 240 seconds)
[18:37:56] <habnabit_> rockSTONE, this might be an indication that you want unit tests instead of doctests
[18:38:06] *** Quits: menace (~someone@user/menace) (Ping timeout: 268 seconds)
[18:38:16] *** Joins: ^Cricket^ (~Cthulhu@static-72-76-136-147.nwrknj.fios.verizon.net)
[18:38:30] <rockSTONE> Yhg1s: waay back in my Zope days i used to use zope.testrunner that split up the tests as i was expecting, guess i was spoiled
[18:38:35] *** Joins: dme86 (~dan@user/dan86)
[18:38:36] <rockSTONE> habnabit_: my doctests are unit tests, thanks
[18:39:00] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[18:39:10] <habnabit_> rockSTONE, right, but i mean proper tests that aren't in the weird doctest paradigm
[18:40:01] <rockSTONE> habnabit_: yeah, i might fall back to that, but the thing is ... i like doing behaviour-driven testing and i find doctest facilitates that much more easily than plain ol' .py tests due to being able to write a narrative
[18:40:18] *** Quits: easior_ (~easior@61.155.142.70) (Client Quit)
[18:40:20] *** Joins: darksun (~darksun@user/darksun)
[18:40:27] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[18:40:40] <rockSTONE> it's all a matter of perspective ... for BDD tests i like "write a story with accompanying tests" rather than "write tests with accompanying docs"
[18:40:58] <habnabit_> rockSTONE, have you used pytest before? i find that it tends to lower the barrier to writing tests significantly more. i know what you mean though since i was always annoyed at having to use the unittest module
[18:41:44] *** Quits: mbryant (~mbryantms@1612740-v109.1116-static.plfdilaa.metronetinc.net) (Quit: Leaving)
[18:41:53] <sybariten> sorr for crossposting between freenode and here, but as a newbie writing modules: are there stylistic rules i should follow?  Im thinking of principles analogous to how a py script should have  a shebang or a function a docstring
[18:41:58] *** Naan` is now known as Naan
[18:42:09] <rockSTONE> yeah i jumped on the pytest bandwagon a few months ago ... but this is my first time doing a project  with pyttest in a behaviour driven development methodology
[18:42:10] <grym> sybariten: pep8 is ever-green (but freenode ain't)
[18:42:11] <sybariten> or can modules be very minimalistic like that
[18:42:19] <grym> sybariten: a module is just a file
[18:42:22] <sybariten> grym: i understand some of those words
[18:42:35] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[18:42:38] *** Joins: Adoi (~Adoi@user/adoi)
[18:42:40] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:42:54] *** Joins: masoudd (~masoudd@user/masoudd)
[18:42:59] <rockSTONE> i suppose i could try pytest-bdd
[18:43:00] <habnabit_> sybariten, is there a reason to use freenode at all? their advice has seemed, uh.. a bit subpar
[18:43:03] <Yhg1s> rockSTONE: The doctest module (which pytest-doctest uses) isn't meant for unit tests, it's meant to verify examples in docs. Writing tests as doctests means they're much more fragile. They have all kinds of hidden external dependencies, which also means you can't split them up the way you want.
[18:43:09] <tims> rockSTONE: We use pytest-bdd for BDD style tests, if you are famiar with Gherkins style tests
[18:43:09] <grym> sybariten: https://www.python.org/dev/peps/pep-0008/  is the basic home of stylistic rules.  freenode is very dead now.  a python module is simply a *.py file with some code in it
[18:43:15] <sybariten> habnabit_: how do you mean?
[18:43:39] <habnabit_> sybariten, they are telling people to consult w3schools..
[18:43:40] *** Quits: emiel (~emiel@2001:981:f73:1:9cae:d26f:441d:541e) (Quit: WeeChat 3.2)
[18:43:55] <rockSTONE> Yhg1s: yeah zope.runner used to make doctest much closer to standard unit tests which i miss i guess
[18:44:03] <rockSTONE> tims: i am and i might try that
[18:44:03] <Yhg1s> sybariten: the current admins of #python on freenode were (repeatedly) banned for good reason :P
[18:44:04] <habnabit_> sybariten, well plus this channel is far more active anyway
[18:44:13] *** Joins: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de)
[18:44:54] <sybariten> grym: thank you! So there is a rulebook or someting. Well dead, i dunno, the chan is like a hundred people..?    Yes but a script is also only a py file  with some code in it  :)
[18:44:55] *** Quits: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[18:44:59] <rockSTONE> heh i dumped freenode when they blocked irccloud
[18:45:05] *** Quits: chandankumar (~raukadah@110.44.96.144) (Quit: Leaving)
[18:46:04] <sybariten> habnabit_: well....  you're obviously also there, arent you   :)   The w3school advice doesnt offend me really, although a link isnt always so helpful as  a real conversation ofcourse.... the use of w3schhols speifically, well i dont care really
[18:46:07] <habnabit_> sybariten, anyway idk if there's any rules specific to writing a library instead of a script other than, like.. "avoid running code at the module scope as much as possible"
[18:46:29] <habnabit_> sybariten, w3schools is an ad farm; it isn't a tutorial site
[18:46:34] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:46:40] *** Joins: wyclif (~wyclif@user/wyclif)
[18:46:49] <sybariten> habnabit_:oh. would peple even do that? I'm not experienced but i cant see why you would run something _inside_ a library
[18:46:59] *** Joins: pnoud (~pnoud@user/pnoud)
[18:47:11] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[18:47:36] <habnabit_> sybariten, sure; sometimes people will do things like try-except ImportError: print('install this module ..')
[18:48:06] <sybariten> habnabit_: well to be honest people have very strong opinions about w3schools, especially on irc, and tend to be very dramatic about it. If you ask a hundred million beginners that learned some basics through them, they probably approve of w3schools
[18:48:10] <grym> sybariten: when i hear "a script" i think " a python program consisting of one module"
[18:48:28] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:48:29] <sybariten> habnabit_: aha
[18:48:33] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[18:48:42] <sybariten> grym: okay
[18:49:04] <habnabit_> sybariten, w3schools is only well known because they've specifically manipulated search results in order to maximize revenue
[18:49:13] <grym> sybariten: more than one module is "a package", and there's some boilerplate you need learn about to make it all play well, but it's not too bad
[18:49:14] <tunixman> I go to w3schools a lot, and I'm definitely not new.
[18:49:38] <tunixman> It may be an ad farm, but it does have a lot of useful content.
[18:51:04] <Yhg1s> tunixman: unfortunately it also contains a lot of bad information.
[18:51:06] <tims> w3schools used to imply a connection with w3c which annoyed people
[18:51:12] <sybariten> yeah i mean i often end up there to try and learn some basic principle and so far i haven't really noticed them lying to be about anything specific
[18:51:33] <sybariten> tims: that is what all this is about i suspect
[18:51:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:51:36] <sybariten> at the base
[18:51:37] <Yhg1s> I've never seen a w3schools tutorial being linked here that was both factually correct and a good idea.
[18:51:47] <habnabit_> sybariten, it's not that they're lying; it's just copy-pasted or lazy writing
[18:52:01] <grym> i like my documentation to be more calorie-dense
[18:52:03] <sybariten> Yhg1s: i take the liberty of thinking that is an exaggeration
[18:52:16] <habnabit_> sybariten, it really isn't. i've had a similar experience to Yhg1s
[18:52:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[18:52:32] <tims> Were fine for really basic stuff but details were often wrong or out of date. MDN was a much better source of web content.
[18:52:41] <habnabit_> MDN *is :(
[18:52:45] <habnabit_> it's still going..
[18:52:48] <DPA> I agree here
[18:53:01] <grym> tims: was? it's still there
[18:53:20] <habnabit_> grym, it's starting to get slightly shabby what with all the moz layoffs
[18:53:20] <grym> (mdn is very good)
[18:53:32] *** Joins: chandankumar (~raukadah@110.44.96.144)
[18:53:49] <grym> the only thing they don't do that i wish they did do is supply zeal-compatible docsets
[18:53:57] <tims> habnabit_: I refer to w3schools in the past tense, I've blocked it for a long time
[18:54:12] <habnabit_> tims, you said 'MDN was'
[18:54:27] <tunixman> Yhg1s: lots of sites have good and bad information, and taking one down won't help people learn how to discern the difference at all.
[18:54:32] *** Quits: chandankumar (~raukadah@110.44.96.144) (Client Quit)
[18:55:27] <Yhg1s> tunixman: I'm not sure I said anything about taking it down. I do, however, regularly recommend people not continue to read the tutorials they are reading, once they show it here.
[18:56:09] *** sn1tch3r_ is now known as sn1tch3r
[18:56:10] *** Joins: Adoi (~Adoi@user/adoi)
[18:56:51] *** Joins: wyclif (~wyclif@user/wyclif)
[18:57:03] <tims> habnabit_: I know, when the two options where MDN and w3schools MDN was better.
[18:57:12] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[18:57:28] *** Joins: miku (~debian@gateway/tor-sasl/miku)
[18:57:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:57:49] *** Quits: cedric (~cedric@2a01:cb11:867:c200:7661:c61a:b498:fda6) (Quit: Konversation terminated!)
[18:57:50] <habnabit_> tims, ok. i just can't help but read it as if there's an implication that MDN is no longer a good source
[18:58:01] *** Joins: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430)
[18:58:15] *** Quits: grawity (grawity@star.nullroute.eu.org) (Killed (ozone (No Spam)))
[18:58:32] <tims> habnabit_: I consider it authorative, w3schools as mentioned a cheap knock off that uses adwords
[18:58:50] *** Joins: teut (~teut@182.69.85.39)
[18:58:53] <teut> Uploaded file: https://uploads.kiwiirc.com/files/a7819c6eacf55381f4c5f6767128c95f/pasted.txt
[18:59:02] *** Joins: grawity (grawity@star.nullroute.eu.org)
[18:59:10] <teut> what does this means in simple terms from the open function?
[18:59:59] <teut> https://docs.python.org/3/library/functions.html#open   the text screwed up in copying , here is it
[19:00:28] <obiwahn> Just wondering is it possible to include '*py' files as package_data?
[19:00:46] <tims> teut: in reference to buffering?
[19:00:50] <graingert> obiwahn: why would you want to do that?
[19:00:58] <Yhg1s> teut: it means "don't bother with that argument"
[19:01:02] *** Joins: alguien (~alguien@user/alguien)
[19:01:03] <teut> yes and what is that "interactive" buffer
[19:01:05] <habnabit_> obiwahn, what would that mean?
[19:01:08] <graingert> obiwahn: setuptools includes py files in packages by default
[19:01:09] <teut> interactive file
[19:01:22] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[19:01:25] <teut> file is just  text
[19:01:30] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 264 seconds)
[19:01:32] <Yhg1s> teut: it's an OS thing. It's like sys.stdout, if it's attached to a terminal and not redirected from a file.
[19:01:34] *** Joins: masoudd (~masoudd@user/masoudd)
[19:01:43] <graingert> obiwahn: you may have forgotten to configure `packages = find:` or forgotten to make an `__init__.py` file
[19:01:46] *** Quits: miku (~debian@gateway/tor-sasl/miku) (Quit: leaving)
[19:01:56] <tunixman> Yhg1s: lots of sites have good and bad information, and ignoring all of the content on a mixed site won't help people learn how to discern the difference at all.
[19:02:00] <obiwahn> But only when they are a module, so i need to add an __init__.py. I was trying to add some examples.
[19:02:11] <graingert> obiwahn: you should add `__init__.py`
[19:02:21] <teut> https://docs.djangoproject.com/en/3.2/ref/request-response/#fileresponse-objects   I have a  io.BytesIO()  buffer that I want to put as first argument of this class
[19:02:24] <Yhg1s> tunixman: are you suggesting I stop telling people that they're reading a bad tutorial when I see they are reading a bad tutorial?
[19:02:25] <teut> how to put it?
[19:02:53] <obiwahn> graingert: but the examples do not make up some module to be included they are just a bunch of unrelated files.
[19:03:07] <Yhg1s> teut: FileResponse() takes any binary file object, so you can just pass your io.BytesIO to it.
[19:03:12] <graingert> obiwahn: well don't inlcude them in the sdist then
[19:03:19] <nedbat> tunixman: in my experience, it doesn't help to point out what is wrong with w3schools.  The people who like it like that there aren't too many words, and that there are examples. They don't care that the content overall is bad.
[19:03:22] <obiwahn> ok it is questional if they should be brought as part of a lib.
[19:03:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:03:40] <obiwahn> s/questional/questionable/
[19:03:42] <teut> open()  returns  a file object  not buffer
[19:03:50] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:03:53] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 268 seconds)
[19:03:58] <habnabit_> graingert, ..? putting them in the sdist sounds fine even if they're not installed
[19:04:07] <Yhg1s> teut: why are you asking about open() if you want to use FileResponse with an io.BytesIO?
[19:04:08] <teut> open("rb").read()   returns the buffer so thats the confusion
[19:04:14] <ali1234> i quite often find myself on w3schools reference pages for some html or css keyword. it seems reasonable?
[19:04:19] <bjs> teut: you said you had a BytesIO object though
[19:04:25] <Yhg1s> teut: no, open().read() returns bytes. not a buffer.
[19:04:31] <obiwahn> i just played with the `MANIFEST.in` and `package_data` and it did not work as expected.
[19:04:32] <nedbat> ali1234: use mdn instead, it's strictly better
[19:04:37] <habnabit_> ali1234, have you seen e.g. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify
[19:04:53] <ali1234> yeah i usually end up there for javascript
[19:05:02] <habnabit_> ali1234, its docs on css and html are excellent
[19:05:07] <obiwahn> I am wondering if it a bug in my usage or a feature that keeps people from doing stupid things.
[19:05:10] <ali1234> hmm noted
[19:05:24] <habnabit_> obiwahn, do you have the file tree online somewhere?
[19:05:38] <teut> https://dpaste.org/HL4J
[19:05:51] <ali1234> though most of the time i'm just reminding myself the name of some attribute, so first link on google is good enough
[19:05:57] <teut> thats the code
[19:06:22] <Yhg1s> teut: and? Does it have a problem?
[19:06:41] <jinsun> teut: that is 404 again
[19:06:48] <teut> what?
[19:06:50] <obiwahn> habnabit_: no sorry can create an example later if that makes more sense. I was hoping to hear that it is not possible, because it is forbidden by design :-)
[19:06:51] <teut> jinsun
[19:06:54] <bjs> teut: please stop using that site.
[19:06:56] <nedbat> ali1234: i can't trust a site that sums up Python with the five bullets under "What can Python do?" on this page: https://www.w3schools.com/python/python_intro.asp
[19:07:05] <teut> oops I forget always
[19:07:10] <bjs> teut: it's like, every time you come here I have to explain to you why that site is bad
[19:07:12] <teut> bad habits dont go so fast
[19:07:47] <teut> https://bpa.st/MN5Q
[19:07:57] <bjs> teut: okay what's the question about this code
[19:08:02] <obiwahn> That is something I can live with, just being too stupid to include resource files is something I have to fix:P
[19:08:11] <teut> ok , I thought buffer = bytes, that was the problem, thanks for the clarification
[19:08:20] <Yhg1s> teut: what is the problem?
[19:08:32] <teut> you solved it ig Yhg1s
[19:08:42] *** Quits: nanoc (~nanocoast@p200300e127264d00c53eefe97e39bc17.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[19:08:43] <Yhg1s> so you didn't have a problem, you just thought you did?
[19:08:57] *** Quits: ndegruchy (~nathan@156.55.174.130) ()
[19:09:07] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[19:09:16] <teut> so I should have have exception to ask question?
[19:09:24] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[19:09:39] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[19:09:40] <tims> teut: You might need to use seek(0) on the buffer to move the file pointer to the start
[19:10:06] <teut> I dont know about file system, let me check if I get the xlsx on the client
[19:10:37] *** Joins: jonky (~brian@2a02:8071:b5aa:3600:23de:a8dc:16b3:e25)
[19:11:20] <jonky> hi
[19:11:34] <tims> Otherwise FireResponse might try to start streaming from the _current_ pointer position which would be at the end of the file
[19:11:47] *** Joins: miku (~debian@gateway/tor-sasl/miku)
[19:11:51] *** Joins: Nact (~l@host-85-27-127-59.dynamic.voo.be)
[19:12:25] *** Joins: ska (~ska@cpe-173-174-111-177.austin.res.rr.com)
[19:12:35] <teut> because  the pointer  reaches  the EOF  while writing the bytes? is that the logic?
[19:12:35] <nedbat> jonky: hey there
[19:12:39] <teut> tims
[19:13:15] *** Quits: bxsx (~x@188.147.127.115.nat.umts.dynamic.t-mobile.pl) (Quit: leaving)
[19:13:26] <tims> teut: yes, so you need to reset it to the beginning before passing to FileResponse
[19:13:39] *** Quits: jazzy (~jaziz@2600:380:8739:55:6dd6:5004:ea3a:7085) (Ping timeout: 272 seconds)
[19:14:01] <teut> thanks, tims, I will do it
[19:14:45] <jonky> when type hints cause circular imports, you can use TYPE_CHECKING to get around that, but what do you do when defining generics where a TypeVar(bound=SomeClass) is defined as a parent class?
[19:15:06] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[19:17:00] *** Joins: wyclif (~wyclif@user/wyclif)
[19:17:30] <jonky> here's an example in case that wasn't clear: https://dpaste.org/2sLp
[19:18:14] *** Joins: slav0nic (slav0nic@python.su)
[19:18:18] <altendky> i would like for https://github.com/python-qt-tools/qts/blob/b247f369a10d42b44768e15fff8c4b181338f2ee/src/qts/QtWidgets.py to support static type checking via cli args to mypy like `--always-true=is_pyside6_wrapper` (it does as is) but to also allow configuration of the pass-through to the underlying library post-import of that module.  it just seems a hassle to force library users to have to import one bit of the library then
[19:18:18] <altendky> run code to configure the rest before they can even import it.  i'm thinking separate .pyi for mypy then __getattr__ or doing fancy importing to inject the `*` import in at the time of underlying library selection...  thoughts?
[19:18:31] <graingert> jonky: you can use a forward reference in your TypeVar bound
[19:18:45] <jonky> graingert: bound='Foo'?
[19:18:50] *** Joins: fm (~fm@user/fm)
[19:18:55] <graingert> Yep
[19:19:08] <jonky> thanks!
[19:19:30] <graingert> jonky: But also you can use `import foo`
[19:19:44] <graingert> And then use `foo.Foo` where you need it
[19:19:50] <graingert> That usually breaks cycles
[19:21:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[19:21:50] <jonky> double thanks
[19:22:00] <p-i-> Is there a proper/good name for the last part of a URL path?
[19:22:27] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[19:22:36] *** Quits: Xano (~Xano@2a00:23c4:420c:d700:e35f:ea13:eb4f:d6ee) (Remote host closed the connection)
[19:22:54] *** Joins: Xano (~Xano@2a00:23c4:420c:d700:945f:9953:3d4c:e983)
[19:23:08] <habnabit_> p-i-, which one is the last part?
[19:23:22] <p-i-> like http://foo.com/bar/quux
[19:23:23] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[19:23:26] <p-i-> quux
[19:23:36] <habnabit_> p-i-, what if there's a ?spam#eggs on the end?
[19:23:51] <habnabit_> p-i-, still quux?
[19:23:55] <p-i-> well that's a query string and a thingummy
[19:24:00] <p-i-> Yeah
[19:24:01] <habnabit_> p-i-, fragment
[19:24:02] *** Quits: todda7 (~torstein@2a02:587:3729:5274:b6df:d74:d185:4e87) (Ping timeout: 252 seconds)
[19:24:07] <p-i-> yup
[19:24:15] <p-i-> But does quux have a name
[19:24:32] <habnabit_> p-i-, idk if there's a name for that. url paths don't often map to any 'real' path
[19:24:40] <p-i-> Ima call it a stub as I can't think of anything better
[19:24:49] *** Quits: Haydos (uid356478@id-356478.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:25:03] <habnabit_> p-i-, pathlib calls it the 'stem'
[19:25:24] <p-i-> oh interesting that kinda works
[19:26:23] <nedbat> p-i-: fwiw, often it is a slug
[19:26:36] <p-i-> YES that's the one!
[19:26:46] <nedbat> p-i-: for example: https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54
[19:26:53] <p-i-> I knew there was a word
[19:26:59] <p-i-> Django uses slug everywhere
[19:27:12] <nedbat> p-i-: but "slug" isn't a URL word, it's about how the  data in the URL is used in the publishing environment
[19:27:46] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[19:28:02] <nedbat> notice in that medium.com url: you can edit the "upgrade...ed25519" part to be anything you want.  It's the last "c6e..." that is the actual id
[19:29:05] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:29:35] <no_gravity> Good Afternoon! Why does this regex not match? https://www.online-python.com/NDathlIXzY
[19:29:51] <p-i-> https://en.wikipedia.org/wiki/Clean_URL#Slug "Some systems define a slug as the part of a URL that identifies a page in human-readable keywords"
[19:30:00] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[19:30:10] <p-i-> Ima go with 'snail'. I think that's fairly noncontentious.
[19:30:12] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[19:30:20] <nedbat> p-i-: right. in the case of my medium url, the slug is "upgrade..ed25519".  then there's an id appended.
[19:31:32] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[19:31:43] <bjs> no_gravity: you want (?ms) not (?i) for that to match
[19:31:44] <nedbat> no_gravity: you need (?is)   "s" is for re.DOTALL
[19:32:01] <bjs> or yeah you don't need ?m here
[19:32:16] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[19:32:28] <nedbat> (why is "s" short for DOTALL when "d" is available?)
[19:32:35] <no_gravity> Hmm.. let me look up DOTALL
[19:32:51] <bjs> no_gravity: also did you want fullmatch rather than just match?  the .* at the end sort of implies you wanted to match the entire string
[19:32:54] *** Joins: wyclif (~wyclif@user/wyclif)
[19:33:04] <no_gravity> bjs: Yeah, I want to match the entire string
[19:33:26] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[19:34:41] <nedbat> no_gravity: maybe you want:  if "earth" in the_string.lower():
[19:34:45] <no_gravity> Ok, so (?is) it is. Great.
[19:35:05] <altendky> related to above, https://replit.com/@altendky/CandidKnowledgeableDeletion-1#main.py how many ways will this fail and what would be better?
[19:35:05] <no_gravity> nedbat: This is for a system that applies AI generated regex on given documents.
[19:35:06] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 264 seconds)
[19:35:11] <nedbat> no_gravity: or, don't use re.match.  use:  re.search(r"(?i)earth", the_string)
[19:35:34] <InPhase> "AI generated regex"  :)
[19:36:11] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:36:15] <no_gravity> nedbat: It needs to match the whole string as it does things like ".*why is.*? >>> question" to convert a given question into the concept "question".
[19:36:20] *** Joins: gareppa (~gareppa@user/gareppa)
[19:37:46] *** Quits: Batzy (~Batzy12@user/batzy) (Quit: lata)
[19:37:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:38:00] <no_gravity> It creates of what I call "sensors", which are processing steps in a DSL that is a superset of regular expressions.
[19:38:20] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 252 seconds)
[19:38:29] <no_gravity> So it can boil down a given text document into more and more specific facts.
[19:39:45] *** Joins: dme86 (~dan@user/dan86)
[19:39:51] <p-i-> re.findall(r'0x[a-fA-F0-9]{40}', '0x01234567890123456789012345678901234567aB') works, length after 0x is 40. But 0x01234567890123456789012345678901234567aBcDE also matches.
[19:40:10] <p-i-> Is there any simple way to ensure the match is 40 chars exactly?
[19:41:11] <altendky> isn't that what `{40}` does?  (not the whole match, but that bit of it)
[19:41:11] <daidoji> p-i- , add '^' and '$' to denote beginning and end of string
[19:41:24] <daidoji> or `\b` to denote boundary of token
[19:41:28] <daidoji> (on both sides)
[19:41:29] <jinsun> p-i-: use re.fullmatch ?
[19:41:40] <daidoji> or yeah fullmatch too
[19:41:42] <gitesh> Hi. Which wheel should I download from here -------> https://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib
[19:41:52] <gitesh> I'm using Python 3.8.5
[19:41:57] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[19:43:05] <p-i-> r'0x^[a-fA-F0-9]{40}$' like this?
[19:43:07] *** Joins: rritoch (~kvirc@222.127.246.55)
[19:43:16] <graingert> gitesh: pypi.org already has matplotlib wheels: https://files.pythonhosted.org/packages/c4/2c/5ee5ed65283710e6edadccdcad28e32c33d51f7501532beca674d704efc3/matplotlib-3.4.2-cp38-cp38-win_amd64.whl
[19:43:22] <p-i-> ^ that's not working
[19:43:28] <xaltsc> Hey, in typing, what's the difference between an abstract class and a protocol ?
[19:43:38] <daidoji> p-i-, probably `^` needs to go at the beginning of the regex and not after the 0x
[19:43:45] <p-i-> re.findall(r'0x[a-fA-F0-9]{40}[^a-fA-F0-9]', text) works but I'd like to codegolf it
[19:44:30] <gitesh> graingert: i just did pip install matplotlib and it's downloaded and installing matplotlib-3.4.2-cp38-cp38-win32.whl
[19:45:01] <graingert> gitesh: is that bad?
[19:45:13] <graingert> gitesh: what did you expect to happen instead?
[19:45:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0ec-147.dhcp.inet.fi) (Ping timeout: 272 seconds)
[19:45:48] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[19:45:52] <gitesh> graingert: i want the best
[19:46:12] <graingert> pretty sure the one on pypi.org is best
[19:46:15] *** Joins: ewdwasright (~ewdwasrig@108.210.81.181)
[19:46:26] <gitesh> graingert: ok downloaded installing
[19:46:44] *** Quits: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[19:47:13] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Ping timeout: 272 seconds)
[19:47:41] <jinsun> xaltsc: you don't have to subclass a Protocol to implement it
[19:47:54] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 240 seconds)
[19:48:15] <grym> which is kind of the point, really
[19:48:16] *** Joins: PdimH (~pdimh@user/pdimh)
[19:48:47] *** Joins: wyclif (~wyclif@user/wyclif)
[19:48:48] <gitesh> graingert: the one the link you gave me, i downloaded and while installing got an ERROR: matplotlib-3.4.2-cp38-cp38-win_amd64.whl is not a supported wheel on this platform.
[19:49:06] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) ()
[19:49:11] <altendky> gitesh: just `your/env/bin/pip install matplotlib` maybe?
[19:49:27] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[19:49:33] <gitesh> altendky: yeah i did that i worked
[19:50:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:50:12] <p-i-> huh. `re.findall('^[A-Z]{3}$', 'A BC DEF GHIJ')` returns []
[19:50:28] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[19:50:39] <altendky> gitesh: sounds good.  do that to get stuff unless you know a reason that other things are better.
[19:50:44] <p-i-> https://stackoverflow.com/questions/14590008/regular-expression-to-match-exact-number-of-characters 120 upvotes says it should return DEF
[19:50:53] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[19:50:54] <gitesh> altendky: hmm... alright
[19:51:24] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[19:51:39] <altendky> p-i-: it depends what you want to require after your match.  $ would be end of line or end of string depending.  unless i'm missing something.
[19:51:43] <grawity> I think the ^ $ suggestion was assuming that you wanted to match against the *entire string*
[19:51:53] *** Quits: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks) (Client Quit)
[19:51:55] <grawity> which is a bit opposite to findall()
[19:52:08] <w0x12ef> how to scale python program running on separate cpu cores ?
[19:52:14] <grawity> in findall() using \b to indicate a "word/non-word boundary" might be more useful
[19:52:22] <p-i-> oh. I see. No, I require exactly 3 characters.
[19:52:33] <grawity> the thing is "I require exactly 3 characters" can mean two things
[19:52:40] <altendky> p-i-: do you?  or do you want to have some boundary adjacent to the 3 characters
[19:52:52] <grawity> using ^ $ ensures that you'll only match if the *whole input* has exactly 3 characters
[19:52:59] <p-i-> boundary. I want only DEF.
[19:53:06] <grawity> wheras using findall with \b ensures that your *match* will only have exactly 3 characters
[19:53:10] <p-i-> ok gottit
[19:53:14] <altendky> p-i-: then you have to pick a boundary.  `\b` may help, as mentioned before
[19:53:22] <grawity> e.g. findall(r"\b[A-Z]{3}\b", "A BC DEF GHIJ KLM NO P")
[19:53:42] <altendky> look at what `\b` considers a boundary
[19:54:03] <xaltsc> jinsun: but besides that, it's roughly the same idea behind it ?
[19:54:04] <altendky> because 'not hexadecimal' is certainly not it
[19:54:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:54:24] <grawity> it'll prevent 0x01234567890123456789012345678901234567aBcDE from matching, which I think was the intent
[19:54:30] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[19:54:39] <p-i-> So \b defines itself as the opposite of its neighbouring match-string...
[19:54:47] <p-i-> That's brilliant
[19:55:19] <altendky> i...  don't think so
[19:55:23] <grawity> not /exactly/ "the opposite of", it doesn't match a character itself but the boundary between them
[19:55:43] <altendky> and it doesn't figure out what you think is a word, it has it's own definition
[19:55:54] *** Joins: w0x12ef_ (~w0x12ef@36.112.128.143)
[19:55:56] <altendky> specifically `\w` and `\W`
[19:56:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:56:24] <altendky> which are still not related to hexadecimal or even a-z
[19:56:25] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 268 seconds)
[19:56:40] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:56:55] <sudomann> what are recommended benchmarkl tools in python
[19:56:58] *** Quits: w0x12ef_ (~w0x12ef@36.112.128.143) (Remote host closed the connection)
[19:57:02] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 268 seconds)
[19:57:12] <sudomann> a quick search showed me pyperf and pytest-benchmark
[19:57:18] <sudomann> are those common and good?
[19:57:32] <altendky> i think i've seen pyperf recommended awhile ago
[19:57:48] <altendky> we often tend towards profiling the program actually doing stuff
[19:58:17] <p-i-> These blockchain addresses are strange. 0-9 a-f A-F. That's base 22.
[19:58:25] *** Joins: darxun (sid504814@id-504814.tinside.irccloud.com)
[19:58:40] <altendky> what chain?
[19:58:54] <altendky> and they really mix lower and upper and have them mean different things?
[19:59:26] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:59:55] <grawity> iirc there was an address type that was base16 or base32 but the case of the letters was used to encode a checksum of that address
[20:00:18] <altendky> fun
[20:00:46] <SirScott> trying to upload a .whl to test.pypi.org and am getting: "Binary wheel '...-cp37-cp37m-linux_aarch64.whl' has an unsupported platform tag 'linux_aarch64'" -- Any pointers?
[20:01:14] *** Joins: derelict (~derelict@user/derelict)
[20:01:25] <p-i-> altendky: BSC
[20:01:49] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:02:21] <p-i-> Yes. bscscan uses only lowercase but web3 lib requires the 'correct' casing and has a helper to transition a lowercase to a mixedcase so it makes its checksum
[20:02:23] <altendky> SirScott: https://www.python.org/dev/peps/pep-0599/ have you checked that?  i forget the nuances offhand.
[20:02:25] *** Quits: rsx (~dummy@ppp-188-174-141-49.dynamic.mnet-online.de) (Quit: rsx)
[20:03:06] <jinsun> xaltsc: well also you cannot use runtime checks like isinstance on Protocols they are meant only for type checkers, unless you use the runtime_checkable decorator
[20:03:36] <SirScott> altendky: thank you... now to figure out how to build with the manylinux2014 tag!
[20:03:43] *** Joins: zakharyas (~snakes@2001:ba8:0:1df:5054:ff:fee2:88b9)
[20:03:55] <altendky> SirScott: there should be manylinux docker images for that.  or use cibuildwheel
[20:04:56] *** Joins: wyclif (~wyclif@user/wyclif)
[20:05:12] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[20:05:21] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[20:05:22] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[20:05:30] *** HalfAShark is now known as HalfAnElectricRa
[20:05:40] *** HalfAnElectricRa is now known as HalfElectricRay
[20:06:22] <SirScott> altendky: got any advice for which to use?  my build currently is on a gitlab shell executor and has Cython compilation steps, using tox for various versions of python
[20:06:23] <jinsun> xaltsc: but yes the idea is mostly same, it is just Nominal vs Structural subtyping https://www.python.org/dev/peps/pep-0544
[20:06:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: Lost terminal)
[20:07:27] *** Quits: GadgetNerd (~GadgetNer@136.244.21.145) (Changing host)
[20:07:27] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[20:07:27] *** Joins: tspng (~tspng@80-218-192-246.dclient.hispeed.ch)
[20:07:33] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[20:07:40] *** HalfElectricRay is now known as HalfAShark
[20:07:45] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[20:07:54] <altendky> SirScott: mm.  cibuildwheel is a wrapper around the underlying proper stuff.  will get you all the manylinux versions etc nicely (works on macos and windows as well).  but it is a layer that may or may not be a hassle.  i guess i would start with it and see what you can do.  hassle may also indicate that your depending too much on things outside of the standard python build path.
[20:08:00] <altendky> *you're
[20:08:03] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:08:22] <zakharyas> I'm trying to use nosetests (1.3.7) to run some tests (not written by me). It seems that no tests can be found from the test file (DEBUG: load from tests/test_asav_sender.py (None)). Full debug output: https://bpa.st/RDXA. Any help appreciated :)
[20:09:03] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[20:09:03] *** Joins: Ergo^ (~ergo@91.238.59.144)
[20:09:05] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[20:09:08] *** Quits: Snyp (~rksht@49.207.192.68) (Ping timeout: 252 seconds)
[20:09:21] <SirScott> altendky: thank you, I appreciate your advice as always!
[20:09:26] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[20:09:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:10:05] <altendky> SirScott: let me know how it goes.  it has been awhile since i had to do binary wheels
[20:10:08] *** Joins: mekhami (~lawrence@135.84.115.18)
[20:10:28] *** Joins: adder` (~adder@user/adder)
[20:10:28] <altendky> but, the project did move to pypa apparently so i guess that's a good sign :]
[20:10:42] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[20:10:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:11:10] <SirScott> altendky: my initial hesitation is that the support table it shows only has 'manylinux' and not 'manylinux2014'
[20:11:41] *** HalfAShark is now known as HalfAFlood
[20:11:42] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[20:11:54] *** Quits: TechSmurf (~tech@user/techsmurf) (Quit: We don't need no water, let the motherfucker burn.)
[20:11:57] *** Quits: Nact (~l@host-85-27-127-59.dynamic.voo.be) (Quit: Konversation terminated!)
[20:12:24] <altendky> SirScott: i think that is saying "all manylinux" since you have...  manylinux, manylinux1, manylinux2010, and manylinux2014?  or something.  maybe it's just 3.
[20:12:39] <SirScott> altendky: hope so :)
[20:12:45] *** Joins: TechSmurf (~tech@user/techsmurf)
[20:13:19] *** Joins: andreas31 (~andreas@gateway/tor-sasl/andreas303)
[20:13:46] *** Quits: Ergo^ (~ergo@91.238.59.144) (Client Quit)
[20:14:19] *** Joins: viktorivan (~ivan@2806:101e:7:b2aa:70e8:cff9:4635:91e2)
[20:16:20] *** Joins: ksr (~KSR@124.197.12.15)
[20:17:35] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:17:50] *** Quits: andreas31 (~andreas@gateway/tor-sasl/andreas303) (Client Quit)
[20:17:53] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[20:18:20] *** Joins: andreas31 (~andreas@gateway/tor-sasl/andreas303)
[20:19:03] *** Joins: jamea97 (~jamea77@200.68.140.31)
[20:19:09] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[20:19:12] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[20:19:33] *** Quits: andreas31 (~andreas@gateway/tor-sasl/andreas303) (Client Quit)
[20:20:53] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[20:21:05] *** Quits: ksr (~KSR@124.197.12.15) (Ping timeout: 268 seconds)
[20:21:46] <teut> Uploaded file: https://uploads.kiwiirc.com/files/6b96032caf6e5d2011110d082146633d/pasted.txt
[20:21:49] *** HalfAFlood is now known as HalfAShark
[20:21:59] *** Joins: Pickchea (~private@user/pickchea)
[20:22:20] <teut> I m often gettig this error in vscode, often it doesnt go away after restating vscode 3-4 times
[20:22:29] <teut> what's the cause?
[20:22:39] <teut> restarting*
[20:23:07] *** Joins: wyclif (~wyclif@user/wyclif)
[20:23:50] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[20:24:58] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:25:00] <grym> seems like that zipfile isn't present.
[20:25:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:25:07] *** Joins: no_gravi1y (~no_gravit@user/no-gravity/x-5639427)
[20:25:23] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:25:37] *** Joins: nicksloan (sid195124@user/nicksloan)
[20:26:03] <teut> that happened on clicking  "Start Debugging"
[20:26:49] <teut> on restarting vscode 3-4 times and clicking that "Start Debigging"  that same error came up, I restarted again and ran `python manage.py runserver`  and now it worked
[20:27:19] <ChrisWarrick> teut: could you use a normal pastebin, such as bpaste?
[20:27:37] <teut> ok
[20:27:57] <teut> its always easy to paste in the chat so I did that
[20:28:15] <ChrisWarrick> it’s easy for you to paste, but not necessarily easier for others to consume the link
[20:28:25] <teut> https://bpa.st/OUIA
[20:28:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:28:39] <teut> got it, this I need to use always
[20:28:53] <ChrisWarrick> teut: is that the complete output?
[20:29:40] <teut> its not the error that I got in the   shell, it's one that  in the  text I got
[20:29:55] <teut> Uploaded file: https://uploads.kiwiirc.com/files/a65a104b5cba78d2e8b49a6208052ed6/image.png
[20:30:04] <teut> I mean this
[20:30:54] *** Parts: no_gravi1y (~no_gravit@user/no-gravity/x-5639427) ()
[20:31:21] <jinsun> I don't see how restarting vscode can ever fix that
[20:31:29] <ChrisWarrick> teut: you enabled breakpoints for all exceptiosn
[20:31:36] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[20:31:46] <teut> what does that means?
[20:31:49] <ChrisWarrick> teut: this line raises an exception that is immediately caught, but your breakpoint was hit anyway
[20:32:03] <teut> I didnt had a breakpoint there
[20:32:05] <ChrisWarrick> teut: you did
[20:32:14] <jinsun> ah okay it was the "Raised Expections" thing
[20:32:14] <ChrisWarrick> teut: look at the first two lines of the breakpoints box
[20:32:20] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[20:32:30] <teut> Uploaded file: https://uploads.kiwiirc.com/files/35dc5ef83d62cd49ea28c5e1d7a01919/image.png
[20:32:35] <teut> I cant see it
[20:32:41] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:32:54] <The-Compiler> teut: look at the bottom left of the window
[20:33:04] <The-Compiler> teut: the "Breakpoints" list
[20:33:23] <teut> oh ok , I get it jinsun , so it would strike  every   exception
[20:33:38] <jinsun> teut: yes even if you catch it later
[20:34:01] <teut> hmm, understood so I should click continue
[20:34:12] <teut> The-Compiler  the break points arer in the views.py
[20:34:32] <ChrisWarrick> teut: not only
[20:34:39] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[20:35:07] *** Quits: dambuster (~dambuster@185.193.170.225) (Quit: Leaving)
[20:35:08] <teut> I once traversed deep inside django's code  , I think then I might have forgotten to remove some
[20:35:09] <The-Compiler> teut: no, you enabled breakpoints for every exception
[20:35:10] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[20:35:31] <teut> you enabled breakpoints for every exception   <-- what does this mean?
[20:35:38] <teut> a break point is a red dot
[20:35:45] <The-Compiler> teut: not only
[20:35:50] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:36:12] <The-Compiler> teut: in the breakpoint list, you enabled "Raised Exceptions", which tells VS Code to break on every exception (even if caught)
[20:36:23] <flagrama> the debugger can make it's own "invisible" breakpoints based on your settings
[20:36:27] <teut> oh oh  , ok  the  header says "Breakpoints"
[20:36:49] <teut> thanks The-Compiler I get it now
[20:37:24] *** Quits: a1paca_ (~a1paca@user/a1paca) (Quit: ZNC 1.8.2 - https://znc.in)
[20:37:32] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[20:37:34] <teut> yes flagrama  , that now looks obvious after being told, but wasnt before to me
[20:37:46] <ChrisWarrick> teut: this option is not checked by default
[20:37:57] <ChrisWarrick> teut: so consider reading before you click
[20:38:13] *** Joins: a1paca (~a1paca@user/a1paca)
[20:38:15] <teut> ok
[20:38:20] *** Quits: zakharyas (~snakes@2001:ba8:0:1df:5054:ff:fee2:88b9) (Remote host closed the connection)
[20:38:49] *** Joins: P1RATEZ (piratez@user/p1ratez)
[20:40:24] *** Joins: wyclif (~wyclif@user/wyclif)
[20:40:46] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[20:41:37] *** Quits: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9) (Remote host closed the connection)
[20:42:23] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[20:42:46] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 244 seconds)
[20:43:17] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 268 seconds)
[20:43:21] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[20:43:35] *** Quits: tspng (~tspng@80-218-192-246.dclient.hispeed.ch) (Remote host closed the connection)
[20:43:37] *** Joins: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net)
[20:43:46] *** Joins: KevinX (~KevinX@23.82.142.213)
[20:43:50] *** Joins: derelict (~derelict@user/derelict)
[20:44:45] <teut> https://bpa.st/FDFA#1L79   here I even took a deepcopy  still I m getting that exception that I cant modify it
[20:45:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:45:30] *** Joins: Akuli (~Akuli@87-94-111-238.bb.dnainternet.fi)
[20:45:34] <teut> hopefully the second exception would be solved solving the first
[20:45:58] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[20:45:59] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:46:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:48] *** Joins: pnoud (~pnoud@user/pnoud)
[20:47:56] *** Quits: themill (~stuart@user/themill) (Changing host)
[20:47:56] *** Joins: themill (~stuart@debian/stuart)
[20:48:02] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:48:17] *** Joins: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430)
[20:48:39] *** Quits: KevinX (~KevinX@23.82.142.213) (Ping timeout: 272 seconds)
[20:49:01] <bjs> teut: the error is saying you shouldn't mutate the things get_fields returns, presumably because mutating it won't propagate the changes anywhere
[20:49:03] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:06] <teut> oops list had .remove()
[20:49:08] <teut> not pop
[20:49:40] <teut> yes bjs but i used  deeepcopy()
[20:49:52] <bjs> teut: yes so you got a copy of the thing get_fields returned
[20:49:58] <bjs> mutating that makes even less sense.
[20:50:13] <teut> how?
[20:50:17] <bjs> teut: how what
[20:50:27] <teut> mutating that makes even less sense.   <
[20:50:34] <bjs> teut: because it's a copy of the thing not the thing itself
[20:50:52] <bjs> teut: if you want you can make a list out of it and pass that around, but it won't affect the underlying thing
[20:50:54] <teut> I just want the field names of my model
[20:50:57] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[20:51:03] <bjs> teut: `fieldnames = list(...get_fields())`
[20:51:18] <bjs> like the error told you to do
[20:51:20] *** Joins: ano (~weechat@user/ano)
[20:51:22] <teut> and how is that different from deepcopy
[20:51:42] <teut> copy of a list is list
[20:51:50] *** Quits: Strom (strom@fedora/strom) ()
[20:52:28] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:52:39] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[20:52:51] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[20:52:53] <jinsun> teut: the original thing is not a list
[20:53:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[20:53:06] *** Joins: esro (~esro@91.231.45.1)
[20:53:22] <teut> yes I just saw it when I tried to add    fieldnames = TransactionEntry._meta.get_fields()   line above
[20:53:23] <bjs> teut: well lists don't give you the error you saw, so it's probably not a list
[20:53:28] *** Joins: Strom (strom@fedora/strom)
[20:53:39] <teut> so its an object
[20:53:44] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:53:45] <jinsun> teut: https://github.com/django/django/blob/225d96533a8e05debd402a2bfe566487cc27d95f/django/utils/datastructures.py#L252
[20:53:50] <bjs> teut: well everything is an object, even lists are objects
[20:53:51] <bjs> so yes
[20:54:01] <teut> I m unused to this way of thinking
[20:54:34] <teut> yes lists are even objects in the python world
[20:55:25] *** Joins: jkl (~jkl@12.216.111.80)
[20:55:47] <teut> https://stackoverflow.com/a/56713616/4213362  this fooled me
[20:56:21] <bjs> teut: have you tried reading the django docs?
[20:56:51] *** Joins: DodgeThis (~DodgeThis@246.102.90.149.rev.vodafone.pt)
[20:57:02] <teut> there was an answer did I need to?  well I m reading it now  since I need it
[20:57:43] <bjs> teut: well,  maybe not if it worked, but when you saw the error you still didn't think it was a good idea to check the docs
[20:57:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:57:54] <bjs> I've not looked, I don't even know if the django docs say anything
[20:57:59] <bjs> but it's just the fact you haven't
[20:58:07] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:58:08] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[20:58:11] <teut> I do search for things in the docs
[20:58:45] <teut> but when I dont find anything stackoverflow then
[21:00:08] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:01:22] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[21:01:40] *** Quits: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[21:02:36] <CuriousErnestBro> hello snakes
[21:02:45] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:03:05] <CuriousErnestBro> can you read json with Path?
[21:03:11] <CuriousErnestBro> I'm getting a AttributeError: 'PosixPath' object has no attribute 'read'
[21:03:38] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[21:04:12] <Akuli> almost :) there is a method that does what you want but it's not named 'read', see pathlib.Path docs
[21:04:42] <CuriousErnestBro> ah, loads
[21:04:42] *** Joins: fstd (~fstd@xdsl-87-79-153-206.nc.de)
[21:04:43] <CuriousErnestBro> TOKEN = json.loads(Path("secret.json").read_text()).TOKEN
[21:05:10] <CuriousErnestBro> grym here's some top tier code ^
[21:05:17] <bjs> CuriousErnestBro: do you mean ["TOKEN"] not .TOKEN
[21:05:57] <CuriousErnestBro> ah, you're right
[21:07:21] *** Quits: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com) (Quit: Client closed)
[21:07:30] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 264 seconds)
[21:09:51] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:10:18] *** Quits: jamea97 (~jamea77@200.68.140.31) (Ping timeout: 268 seconds)
[21:10:45] *** Quits: fabs (~fabs@samba.ethz.ch) (Quit: fabs)
[21:11:41] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[21:12:55] *** Joins: alguien (~alguien@user/alguien)
[21:12:57] *** Joins: fabs (~fabs@samba.ethz.ch)
[21:13:19] *** Joins: todda7 (~torstein@2a02:587:3729:5274:b6df:d74:d185:4e87)
[21:13:36] *** Joins: reduce (~reduce@2001:8a0:f91c:9501:5cf6:f1f:2d7:d1ad)
[21:14:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:15:05] *** Quits: cecep (~weechat@dynamic-089-014-128-091.89.14.pool.telefonica.de) (Quit: WeeChat 3.2)
[21:15:52] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[21:16:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:16:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:16:37] *** Quits: miku (~debian@gateway/tor-sasl/miku) (Quit: leaving)
[21:17:06] *** Quits: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de) (Remote host closed the connection)
[21:17:27] *** Joins: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de)
[21:17:52] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:18:19] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[21:21:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:22:38] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 268 seconds)
[21:22:42] *** Joins: gmcastil (~gmcastil@50-206-38-118-static.hfc.comcastbusiness.net)
[21:22:55] *** fluffyballoon is now known as stickybearloon
[21:23:14] *** Quits: aslicedbanjo (~aslicedba@81.141.55.106) (Quit: Leaving.)
[21:23:25] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:23:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[21:23:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:23:55] *** Joins: goldfish (~goldfish@user/goldfish)
[21:24:09] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[21:24:16] *** stickybearloon is now known as fluffyballoon
[21:25:27] *** Joins: dme86 (~dan@user/dan86)
[21:26:30] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[21:26:38] *** Quits: Barones (~Barones@2804:48dc:8500:0:f884:c052:d2c4:4f9f) (Quit: Leaving)
[21:26:57] *** Joins: mokulus (~mokulus@user/mokulus)
[21:27:34] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[21:28:09] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[21:28:34] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[21:28:57] *** Joins: wyclif (~wyclif@user/wyclif)
[21:29:25] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[21:30:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[21:30:45] *** Joins: lazypeon (~lazypeon@www.ezid.rs)
[21:31:39] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[21:32:04] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[21:32:41] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[21:32:44] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[21:32:49] *** Quits: Mattiasl_ (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:33:31] *** Quits: canopus (~user@116.68.98.40) (Quit: ERC (IRC client for Emacs 27.2))
[21:34:26] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[21:34:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:34:53] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[21:34:53] *** Joins: Thanatos (~Thanatos@197.210.44.249)
[21:35:37] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:35:44] *** Joins: redgloboli (~redglobol@user/redgloboli)
[21:35:50] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:36:49] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[21:37:19] *** Joins: Blankspace (~abcd@user/blankspace)
[21:37:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:37:46] *** Quits: rritoch (~kvirc@222.127.246.55) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:37:53] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[21:37:59] *** Joins: jftsang (~jftsang@87.114.69.72)
[21:38:05] <jftsang> Today I learned: x += y is not the same as x = x + y. For example, if l = [1, 2, 3]; m = l, then l += [4, 5, 6] does something different from l = l + [4, 5, 6]. Which makes me ask: what actually *is* the += operator doing?
[21:38:32] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:38:44] <grawity> calls l.__iadd__([4, 5, 6])
[21:39:43] <jftsang> Right, so __add__ creates a new object whereas __iadd__ modifies the one in place?
[21:40:11] <grawity> sounds about right
[21:41:03] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:41:05] <nedbat> jftsang: the difference you're talking about is a choice "list" made in its implementation
[21:41:12] *** Joins: dudek (~dudek@185.150.236.112)
[21:41:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:41:34] *** Quits: dudek (~dudek@185.150.236.112) (Remote host closed the connection)
[21:41:43] <teut> jinsun  btw what did you search  to get to this page  https://github.com/django/django/blob/225d96533a8e05debd402a2bfe566487cc27d95f/django/utils/datastructures.py#L252?
[21:42:05] <jftsang> nedbat: what do you mean?
[21:42:15] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[21:43:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[21:44:01] <jinsun> teut: that was there in your paste django/utils/datastructures.py
[21:44:33] *** Joins: ST47 (~ST47@user/st47)
[21:44:53] *** Parts: reduce (~reduce@2001:8a0:f91c:9501:5cf6:f1f:2d7:d1ad) (Leaving)
[21:45:29] *** Joins: wyclif (~wyclif@user/wyclif)
[21:45:31] <teut> oh nice technique,  I will add it to my debugging techniques
[21:45:40] *** Joins: sintax (~sintax@4.4.61.62)
[21:45:58] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:46:39] <jinsun> teut: and that blob thing you get by pressing y when you are on github, it converts the link to the branch to a link to the specific commit
[21:47:18] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[21:47:30] <teut> in vscode right?  that opens link in the browser
[21:47:41] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[21:47:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[21:48:27] <teut> "while on github"  i missed it
[21:48:33] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:48:33] *** Parts: lazypeon (~lazypeon@www.ezid.rs) ()
[21:49:04] <jinsun> teut: ya, that y thing works on the github website in the browser
[21:49:45] <teut> well in my vscode   pressing  Ctrl  opens the  file in a new tab in vscode
[21:50:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:50:17] <teut> y thing , I dont know what "y" is
[21:50:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:50:21] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:50:58] <nedbat> jftsang: what i meant is, it's not a global rule that __iadd__ modifies in place and __add__ makes a new object.
[21:51:25] <Thanatos> Hello everyone
[21:51:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:51:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:51:42] <sybariten> hey hey
[21:52:12] <Thanatos> How do I submit form data with duplicate "keys" using requests
[21:52:25] <sybariten> I'm doing an exercise, we're supposed to make a module and import it. Here's what i have and it passes the test.    https://termbin.com/vcjc     Could someone give me advice on whether someting is ugly in these three functions?
[21:52:49] <jinsun> teut: you presss yafter the page loads and the url changes, try it with this link https://github.com/django/django/blob/main/django/utils/datastructures.py
[21:52:53] <gmcastil> sybariten, your use of camelCase offends me
[21:53:00] <sybariten> In the last one for instance, i do if/elif. Should i do an else also, for antyhing that is not integer or string (??) like a try and catch or error check
[21:53:09] <sybariten> gmcastil: is it not popular?
[21:53:11] <grym> sybariten: you don't need parens after retur()
[21:53:12] <gmcastil> sybariten, also, you might consider integrating use of something like pylint
[21:53:20] <grym> sybariten: snake_case is preferred to camelCase in python
[21:53:28] <graingert> sybariten: you might like https://docs.python.org/3/library/functools.html#functools.singledispatch
[21:53:35] <gmcastil> sybariten, it depends on the project you're on, but many people follow the style guide in PEP 8
[21:54:04] <gmcastil> sybariten, I appreciate your use function docstrings, you might want to consider having one for the module as well
[21:54:09] <grym> sybariten: i also would write funny_word's body after the docstring as `return f'{theFunnyWord} is a funny word'`
[21:54:17] <jftsang> sybariten: Consider raising a `TypeError`
[21:54:31] <RaverWild> guys, could anyone please help? simple question on python decorators. situation is in this pastebin. question is in the pastebin comments. i am missing something, but what... thanks! https://pastebin.com/rZ52bX6i
[21:54:39] <Thanatos> the form goes something like data = {"name": "AB", "category": "X", "category": "Y"}. How do I pass that to the server without making it a dictionary first.
[21:54:40] <jftsang> nedbat: Right, so a perverse person could come along and have a class where __iadd__ returns a new object but didn't modify the one in place?
[21:54:43] <gmcastil> and I tend to prefer that modules have the typical `if __name__ == "__main__" ...' in them
[21:55:17] <graingert> sybariten: What should you do if someone passes something that's not an int or a str?
[21:55:21] <teut> oh yes jinsun , it did
[21:56:18] <sybariten> hmmm okay, one thing at a time   hehe
[21:56:35] <gmcastil> sybariten, are you using pylint or some sort of static code checker?
[21:56:44] <gmcastil> there's no shame in doing so - it's a tool like any other
[21:57:21] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[21:57:55] *** Joins: magla (~gelignite@55d440eb.access.ecotel.net)
[21:57:55] <sybariten> gmcastil: okay, for the case i will look at PEP8. I kind of always liked using camelCase. Will also look into module docstrings, didnt know that existed to be honest (embarassing)
[21:57:58] <nedbat> jftsang: right
[21:58:03] <jftsang> sybariten: In `funny_word` instead of doing the cast to `str` and then adding you could also do `return f"{theFunnyWord} is..."`
[21:58:54] <gmcastil> sybariten, https://bpa.st/GJYQ
[21:59:17] <gmcastil> your superflous parens are a bit of a trip hazard
[21:59:43] *** Joins: rhax (~yannick@user/rhax)
[21:59:49] <nedbat> RaverWild: i don't know what you want your decorators to do, but they might be made incorrectly.
[21:59:50] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[21:59:56] <sybariten> sorry guys if my replies are slow its becaus the server i'm ircing from is having _severe_ hiccups
[22:00:12] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[22:00:18] <jftsang> sybariten: Also consider using black (https://pypi.org/project/black/), it's a bit of a sledgehammer but it's occasionally useful
[22:00:19] <bjs> RaverWild: decorators are functions that are ran when the `def` is, not when the function is called
[22:01:10] *** Joins: Betal (~Beta@user/betal)
[22:01:40] <bjs> RaverWild: so your code is doing roughly decor1(decor2(main)) before you even get to line27.
[22:01:49] <jftsang> RaverWild: In other words, the printing is actually happening after line 23. Try commenting out lines 26 and 27 and it should still print
[22:02:43] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 268 seconds)
[22:02:45] *** Joins: wyclif (~wyclif@user/wyclif)
[22:03:51] <RaverWild> jftsang, damn you're right! even with the if name==main commented out, code runs! damn be i! i learned something new today.
[22:03:56] *** Joins: Batzy (~Batzy@user/batzy)
[22:04:05] <jftsang> So ```@dec
[22:04:09] <jftsang> ```@dec
[22:04:14] <sybariten> okay - back and at it. Over a mobile phone instead
[22:04:14] <jftsang> Damnit no multiline input?!
[22:04:43] <nedbat> jftsang: pastebins are good for that
[22:04:58] <jftsang> RaverWild: As you have it, `main is None`
[22:05:00] <sybariten> grym: oh, so one doesnt do return(multiplication(23, 43)) but rather return multiplication(23, 43) ?
[22:05:09] <jftsang> Because decor1 is returning nothing
[22:05:36] *** Quits: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9) (Remote host closed the connection)
[22:06:24] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[22:06:32] <gmcastil> sybariten, i'll mention something that the PEP 8 makes explicit, but dont try to enforce PEP 8 on code that has chosen to follow a different coding standard
[22:06:55] <gmcastil> sybariten, but, i've found that sticking to what is widely accepted makes life easier
[22:07:09] *** Joins: badsektor (~badsektor@user/badsektor)
[22:07:11] <grym> sybariten: correct
[22:07:23] <grym> sybariten: (return isn't a function)
[22:07:48] *** Joins: catbeard (~noise@user/catbeard)
[22:08:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:08:25] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:08:59] <jftsang> RaverWild: https://pastebin.com/ZQcR3Vfq
[22:09:25] <sybariten> grym: ok, so for your suggestion. Not sure i understand. That's another way of concatenating, simply? What does the f'{} signify ?
[22:09:49] <bjs> sybariten: it's string formatting
[22:10:20] <gmcastil> sybariten, newer versions of python have introduced something referred to as fstrings
[22:10:30] <grym> gmcastil: all supported versions :)
[22:10:52] <jftsang> RaverWild: Typically, a decorator should take a function as an argument and then return another function
[22:10:58] <gmcastil> anything past about 2.6 is new for me
[22:11:09] *** Joins: jpic (~jpic@82.142.9.26)
[22:11:13] <sybariten> graingert: according to the task instructions, nothing specific. This one passes the test. But i was thinking its maybe nice to have some exception....
[22:11:25] <gmcastil> although, happily, the job that was requiring me to deal with all of that madness is in the past now
[22:11:50] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[22:11:53] <grym> sybariten: `x = 5; print(f'the value of the variable x is {x}')`, for example
[22:11:57] <sybariten> gmcastil: was the if name main etc thing for me? Is it suitable even for simpler modules?
[22:12:02] <grym> no str() or + or missing a space or anything required
[22:12:03] <grym> very clean
[22:12:13] <gmcastil> sybariten, well, you're just learning, so yeah, i mentioned it as a thing i tend to include in all modules
[22:12:19] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[22:12:27] <jftsang> RaverWild: because the whole point is that, really, decorating the definition `@dec def f: ...` is the same as `f = dec(f)`
[22:12:34] <gmcastil> sybariten, more important is probably to konw what it does and why you might want to include it somewhere
[22:13:12] *** Quits: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[22:13:19] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 268 seconds)
[22:13:22] <sybariten> gmcastil: i'm using pylint in the end when handing in exercises, so then i will get complaints ... i _do_ think i already have it turned on in vs code though!
[22:13:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[22:13:43] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[22:13:50] <gmcastil> the linter warnings are helpful for learning why certain things are considered bad practices
[22:13:55] *** Quits: Matheo_bis (~Matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[22:14:30] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[22:14:51] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Remote host closed the connection)
[22:17:18] *** Joins: Naan (~Naan@user/naan)
[22:17:39] *** Joins: gtback (uid505041@id-505041.tinside.irccloud.com)
[22:18:29] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:18:34] <RaverWild> jftsang, i see. this is why the example i posted puzzled me, as what i read elsewhere was - the decorator take a function and return a function. so the example i posted basically looks weird as it is not by the rules
[22:18:36] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[22:19:04] *** Joins: wyclif (~wyclif@user/wyclif)
[22:20:22] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[22:20:38] <sybariten> gmcastil: (about the learning and the purpose) : true dat
[22:20:52] <sybariten> i think i will overdo things and include it
[22:21:57] *** Quits: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:a009:744d:e0f4:b251) (Ping timeout: 268 seconds)
[22:22:14] *** Quits: rhax (~yannick@user/rhax) (Ping timeout: 252 seconds)
[22:22:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[22:22:48] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:22:50] <gmcastil> more importantly do you understand why?
[22:22:59] <gmcastil> its not overdoing it
[22:23:25] <bjs> RaverWild: it's allowed to return anything
[22:23:57] <bjs> RaverWild: your example should fail when it gets to the main() line because you can't call main anymore.  The only reason your code *doesnt* fail is because the `if __name__ == "__main__"` line has a typo in it
[22:24:01] <bjs> so the if never happens
[22:24:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:25:45] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[22:25:59] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[22:26:02] *** Joins: NeoCore (~neocore@45.152.181.148)
[22:26:46] <RaverWild> jftsang, bjs i see. but still  - why decorator 1 prints in the end? i am still a bit puzzled. so decorator1 wraps around the given function, prints before and after. decorator 1 looking at my example wraps explicitly nowhere but it is put before decorator2 so in reality it wraps around decorator2 i guess (just a guess). so why decorator1 print happens in the end, not the begining of all prints? i still dont get this one
[22:26:59] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:27:08] <bjs> RaverWild: if I write `func1(func2(x))` which function happens first?
[22:27:35] <TML> main
[22:27:38] <TML> ;)
[22:28:31] <emerent> bjs: counterquestion, what is func1 supposed to do, if it executes first?
[22:28:34] <bjs> RaverWild: in this line `func1(func2(x))` func2 executes first, _then_ func1 executes.  This is exactly why for `@deco1 @deco2 def main`  deco2 happens first, then deco1.  Because `@deco1 @deco2 def main` is the same as going `main = deco1(deco2(main))`
[22:29:25] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[22:29:50] <sybariten> gmcastil: i'm reading the geeksforgeeks explanation which i honestly found a little bit convoluted but in very broad words, is it enought to say that it's a way to tell whehter code was executed direcly or imported and executed? ("entry points")
[22:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:35] <mekhami> I've got a class that, when instantiated, needs to be one of its subclass types. I'm overriding __new__, performing some logic on the args/kwargs, and then returning an instance of the subclass based on its properties. Am I doing something heinously dumb here?
[22:30:46] *** Joins: jayteeach (~jared@2601:8b:4400:9cf3::14f3)
[22:30:50] <RaverWild> bjs, thanks. it is more clear now
[22:30:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:00] <RaverWild> gee
[22:31:13] *** Joins: gggp (~textual@36.112.135.215)
[22:31:13] <nedbat> mekhami: i would make a function instead to return the desired object
[22:31:22] <TML> mekhami: I would say that what you just described sounds to me like a case where you should be using composition instead of inheritance
[22:31:34] <mekhami> nedbat: just to avoid metaprogramming in general?
[22:31:48] <nedbat> mekhami: yes, and to be clearer about what is happening
[22:32:12] <nedbat> mekhami: `obj = SomeClass();  assert type(obj) is SomeClass;  FAIL`  weird.
[22:32:22] *** Quits: malcolm (~malcolm@121.99.224.240) (Quit: Konversation terminated!)
[22:32:57] <mekhami> nedbat: my motivation, which is based on DDD practices, is that the logic for which 'thing' i have here should be colocated with the thing itself. moving the logic to a function outside of the 'domain model' seems wrongish
[22:32:58] <sybariten> grym: going back some 20 minutes here.... but you mentioned that theres no need for the str() when using f-strings. I'm thinking i'm using str() so that the concatenation will work even if the user inputs some strange string. How does the f-string thing handle that then?
[22:33:03] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[22:33:22] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[22:33:33] <mekhami> nedbat: you think that's weird? i thought it was fine... we shouldn't really be asserting on types anyway, we should let our ducks be ducks, no?
[22:33:39] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 244 seconds)
[22:33:49] <gggp> cannot login freenode
[22:34:01] *** Joins: ausserz (~ausserz@user/ausserz)
[22:34:02] <nedbat> mekhami: i'm not saying i would actually write code like that, but it's weird to make an object of a class, but it isn't that class.
[22:34:09] *** Parts: ausserz (~ausserz@user/ausserz) ()
[22:34:19] <nedbat> mekhami: think of the function as helping with the class. It's ok.
[22:34:41] <nedbat> mekhami: at least make it a classmethod:  obj = SomeClass.make_correct_instance()
[22:34:48] <graingert> anyio uses it
[22:34:49] *** Joins: wyclif (~wyclif@user/wyclif)
[22:34:49] <mekhami> nedbat: the idea was that the application layer (the api) should instantiate an 'IncomingMessage' but not be concerned with anything but the public api that is shared by all types of incoming message.
[22:34:56] <mekhami> nedbat: a classmethod does make sense
[22:34:56] <graingert> I hated it when it first landed
[22:35:04] <nedbat> mekhami: IncomingMessage.make()
[22:35:08] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:35:20] <nedbat> gggp: you are here on Libera, that's where you want to be.
[22:35:23] <graingert> but now I'm used to anyio.Event making an anyio._asyncio.Event or anyio._trio.Event it's very nice
[22:35:30] *** Quits: jkl (~jkl@12.216.111.80) (Ping timeout: 240 seconds)
[22:35:43] <mekhami> nedbat: i'll go that route, it's definitely simpler.
[22:36:08] *** Joins: digilink (~digilink@user/digilink)
[22:36:23] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:36:28] *** Joins: derelict (~derelict@user/derelict)
[22:36:33] <graingert> mekhami: cattrs/pydantic is good for parsing messages
[22:36:56] <graingert> you can make IncommingMessage = HelloMsg | GoodByeMsg | DataMsg | UserMsg
[22:37:10] <grym> sybariten: it calls str correctly, more or less
[22:37:18] <jinsun> sybariten: f-string internally calls format or str before constructing the string
[22:37:24] <sybariten> oh, nice
[22:38:34] <graingert> jinsun: does it ever call str? I thought it always went via format
[22:38:38] <graingert> which could call str
[22:39:08] *** Joins: sedeki (~textual@user/sedeki)
[22:39:13] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[22:39:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:39:38] <mekhami> graingert: I don't mind the idea in principle, but in practice i've struggled with pydantic way more than I want to. And this project has an expiration date, so I'm not going to invest too much time into new things for it
[22:39:59] <InPhase> cd
[22:40:04] <InPhase> Whoops.
[22:40:26] <jinsun> graingert: dunno I thought when there is no __format__ then it would call str, but I guess format would do that
[22:40:40] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[22:40:51] <graingert> mekhami: cattrs is pretty small
[22:40:56] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[22:41:00] <graingert> mekhami: great for message parsing
[22:41:17] *** Joins: fofoni (~fofoni@user/fofoni)
[22:41:26] <graingert> mekhami: also a union type alias works without cattrs or pydantic etc
[22:41:29] <graingert> you can do it by hand
[22:42:00] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[22:42:22] *** Joins: ano (~weechat@user/ano)
[22:43:01] *** Quits: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9) (Remote host closed the connection)
[22:43:15] <mekhami> to clarify, i don't want to get involved with types
[22:43:19] <graingert> then you don't need a type hierachy just a bunch of data classes
[22:44:04] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[22:44:11] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[22:44:53] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:45:17] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:46:42] *** Joins: dme86 (~dan@user/dan86)
[22:48:21] *** Quits: lacrymology (~lacrymolo@5.225.8.199) (Ping timeout: 272 seconds)
[22:48:38] *** Joins: pnoud (~pnoud@user/pnoud)
[22:50:15] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[22:50:23] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:50:25] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[22:51:03] *** Quits: RaverWild (~RaverWild@91-148-178-233.haskovo.ddns.bulsat.com) (Quit: Leaving)
[22:52:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:52:19] *** Quits: Brocker (~Libera@user/brocker) (Remote host closed the connection)
[22:52:44] <graingert> I switched to poetry on a work project and it's pretty great
[22:53:00] *** Joins: Brocker (~Libera@user/brocker)
[22:53:42] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[22:53:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 264 seconds)
[22:55:26] *** Joins: aslicedbanjo (~aslicedba@81.141.55.106)
[22:55:56] *** Quits: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks) (Quit: Leaving)
[22:56:21] *** Quits: gggp (~textual@36.112.135.215) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:56:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[23:00:33] *** Quits: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9) (Remote host closed the connection)
[23:01:20] *** Joins: greedom (~greedom@2001:16b8:3209:3300:bb2:6a85:c3c:c5c9)
[23:01:30] <jinsun> graingert: can you do editable install with poetry? I am still using setuptools just because of that
[23:01:39] <graingert> jinsun: yes
[23:02:53] *** Joins: alexyov (~alexyov@79.124.0.2)
[23:03:12] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[23:03:37] <jinsun> oh cool, last time I tried it couldn't do, it wanted the setup.py, I'll try it out again
[23:03:39] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Remote host closed the connection)
[23:04:05] <graingert> jinsun: ah I thought you could but not yet it seems
[23:04:05] *** Joins: ______GOD______ (~GOD@189.174.212.187)
[23:04:12] <graingert> I thought it had a symlink mode
[23:04:42] <catern> is there, or has there ever been, some kind of Github to PyPI bridge? I registered a PyPI account a couple years ago https://pypi.org/user/sbaugh/ but I don't seem to be able to log in again with any of the emails I'd expect it to be associated with...
[23:05:59] <webknjaz> @catern: file an issue via https://github.com/pypa/pypi-support
[23:06:05] <graingert> jinsun: got to wait for pep 660 or pep 662
[23:06:08] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[23:06:13] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[23:06:29] <pyeverything> hi do you know how to fix this? https://bpa.st/7DZA
[23:07:02] <webknjaz> @catern: some ancient PyPI accounts do not have verified emails
[23:07:48] <graingert> catern: is it this? https://stackoverflow.com/a/49395798/833093
[23:07:49] *** Quits: DodgeThis (~DodgeThis@246.102.90.149.rev.vodafone.pt) (Read error: Connection reset by peer)
[23:09:52] <sco1> `poetry install` does an editable install by default
[23:12:03] <catern> webknjaz: thanks!
[23:12:40] <grym> sco1: i believe it generates and then deletes a setup.py en passant
[23:12:44] <grym> in order to do this
[23:12:46] <sco1> Yes
[23:13:22] *** Joins: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430)
[23:14:02] *** Quits: viktorivan (~ivan@2806:101e:7:b2aa:70e8:cff9:4635:91e2) (Remote host closed the connection)
[23:15:11] *** Quits: jonky (~brian@2a02:8071:b5aa:3600:23de:a8dc:16b3:e25) (Ping timeout: 244 seconds)
[23:15:34] <catern> further question, is there a way to allocate a project name on pypi without uploading something?
[23:16:14] <webknjaz> @catern: no, it used to be possible pre-Warehouse, in the times of Cheeseshop but not anymore
[23:17:47] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 252 seconds)
[23:18:17] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 244 seconds)
[23:18:52] <webknjaz> You could upload a dummy release with version 0.0.0 to reserve the name but it's considered spam and may be removed. I think the default policy is 6 months. If somebody wants the name, they'll get it by filing a PEP 541 request + waiting for admins to release the name. In case of abuse, the name may also end up in a deny-list. So it's best if you upload your software when you actually have the need.
[23:19:06] *** Quits: dieth (~dieth@user/dieth) (Ping timeout: 240 seconds)
[23:19:12] *** Quits: browniebroke (uid501792@id-501792.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:19:27] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:19:37] <webknjaz> details: https://www.python.org/dev/peps/pep-0541/#id27
[23:22:56] *** Joins: viktorivan (~ivan@2806:101e:7:b2aa:a4f3:e111:4047:23f1)
[23:23:48] *** Quits: viktorivan (~ivan@2806:101e:7:b2aa:a4f3:e111:4047:23f1) (Remote host closed the connection)
[23:24:59] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:25:32] *** Joins: jkl (~jkl@12.216.111.80)
[23:25:48] *** Joins: wyclif (~wyclif@user/wyclif)
[23:25:57] <graingert> catern: use a trademark in your package name
[23:26:06] <graingert> (that you own)
[23:27:12] <graingert> eg if you worked at coca-cola.com you could call your package coca_cola_utils
[23:27:34] <graingert> then if someone uploaded that package on pypi you could request it was taken down
[23:28:47] *** Parts: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) ()
[23:30:53] *** Joins: ntdll_ (~ntdll@user/ntdll)
[23:30:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:31:33] *** Quits: Matheo_bis (~matheo_bi@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[23:32:25] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[23:32:45] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[23:33:16] *** Quits: acid (~acid@user/acid) (Ping timeout: 244 seconds)
[23:33:37] *** Joins: acid (~acid@user/acid)
[23:33:49] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[23:34:58] <purplex> is it fine for function to return False and return "String", any type? (must have forgot)
[23:35:15] <purplex> in same function
[23:35:20] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[23:35:42] *** Joins: SebastianM (~seba@user/sebastianm)
[23:36:21] *** Joins: CombatVet (~c4@user/combatvet)
[23:37:29] <grym> purplex: as in, return "both at once" ?
[23:37:39] <grym> purplex: or return a string normally but return False if something bad happened
[23:38:40] <purplex> like def func(): if x: return False else: return "str"
[23:39:02] <BrenBarn> it's legal Python if that's what you mean
[23:39:13] <purplex> seems to work, not sure if its bad
[23:39:14] <grym> purplex: it's legal, but it's gross
[23:39:35] <grym> functions that return just one type are easier to reason about and test
[23:39:39] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 268 seconds)
[23:39:41] <purplex> can i write it in a good way?
[23:40:00] <grym> `def func(): if x: raise ValueError; else: return "str"`, perhaps
[23:40:09] *** Quits: Thanatos (~Thanatos@197.210.44.249) (Ping timeout: 268 seconds)
[23:40:23] <grym> the natural thing to do with "something naughty has happened" is to raise an informative exception
[23:40:50] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[23:40:50] <purplex> i see, lets say if string was found in list return the string else return something else
[23:41:15] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[23:41:21] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:41:28] *** Joins: mickey8 (~user@user/mickey)
[23:41:29] <purplex> instead exception i would to just say "wasn't found"
[23:41:32] *** Quits: acid (~acid@user/acid) (Ping timeout: 244 seconds)
[23:41:37] <purplex> would like*
[23:41:46] <graingert> purplex: what's wrong with an exception?
[23:41:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:42:02] <purplex> since it may stop my program
[23:42:08] *** Joins: acid (~acid@user/acid)
[23:42:13] <grym> purplex: for "find stuff in this collection" functions, i also like returning a list and sometimes that list's empty
[23:42:43] <purplex> so maybe just return empty string will good idea?
[23:42:49] *** Joins: wyclif (~wyclif@user/wyclif)
[23:42:52] <grym> i do not like having "magic values" of the same type as the regular return type that means "didn't find anything"
[23:43:01] <grym> empty string is ... okay ...
[23:43:04] <graingert> maybe use `-> str | None:`
[23:43:08] <tmart> "Strings are immutable sequences of Unicode code points." from https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str, yet "\U00110000" through "\UFFFFFFFF" are not a Unicode code points (Unicode only defines points < 0x110000). Wouldn't it be more correct to say strings are sequences of 32-bit "characters" or something?
[23:43:09] *** Joins: Adoi (~Adoi@user/adoi)
[23:43:11] <catern> webknjaz: graingert: eh okay I'll upload some real code then
[23:43:17] <grym> but now you can never look for an empty string
[23:43:50] <purplex> i see, so i can return 'None'
[23:43:55] <grym> you can
[23:44:03] <mh3f> purplex:  try:  func() except ValueError: # do the same thing as if the original func() returned False
[23:44:04] *** Joins: Thanatos (~Thanatos@197.210.44.249)
[23:44:09] <mh3f> no reason for it to stop the program
[23:44:10] <grym> and now you have to check `if value is not None:` all the time
[23:44:32] <purplex> so None won't be gross like return False i suppose
[23:44:34] <graingert> def func() -> Literal["str"] | None: return "str" if x else None
[23:44:38] <grym> purplex: it's the same kind of gross
[23:44:44] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[23:44:58] <grym> instead of returning str,bool you're returning str,NoneType
[23:44:58] <graingert> yeah but people expect `| None:` functions
[23:45:04] <grym> it's more normal, yes
[23:45:13] <purplex> even empty string is gross, grym?
[23:45:17] <graingert> `| Literal[False]:` is weird
[23:45:20] <grym> purplex: that's worse than None, imo
[23:45:37] <graingert> "" could represent success or failure
[23:45:46] <grym> purplex: because now you're encoding information about how your function succeeded or not as an instance of the same type
[23:45:50] <grym> it's like using -1 to mean "bad"
[23:46:05] <mh3f> purplex: look at help(list.index)
[23:46:07] *** Joins: chrysanthematic (~chrysanth@109.70.150.245)
[23:46:13] <mh3f> L.index(value, [start, [stop]]) -> integer -- return first index of value.    Raises ValueError if the value is not present
[23:46:22] <graingert> -1 to mean "bad" is less wrong
[23:46:37] <purplex> ok so then exception is more cleaner
[23:46:40] *** Joins: KindOne_ (kindone@user/kindone)
[23:46:47] *** Joins: jack__d_ (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[23:47:51] <grym> graingert: i haaate in band signalling
[23:48:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:48:12] <purplex> mh3f, i see the typical behavior of python functions is to raise exception as well
[23:48:18] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 264 seconds)
[23:48:24] *** byzandula is now known as byzafk
[23:48:25] <mh3f> it allows the caller to handle the exceptions instead of the library
[23:48:45] <graingert> grym: it's not as bad as having a failure overlap success
[23:48:53] <grym> graingert: say more?
[23:48:54] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 264 seconds)
[23:48:55] *** KindOne_ is now known as KindOne
[23:49:35] <graingert> eg `Literal[""] | str`
[23:49:42] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:49:53] <Adoi> hello, I played around with classes, but couldnt remove the error in the paste; https://www.pastebin.cz/raw/Zi8oynd  can you help please?
[23:50:05] <grym> i mean things like, for example, `def f() -> int` and you-the-human have to know that while you always get an int, sometimes that int means "here's your answer" and sometimes it means "an error has occurred" and you have removed -1 from your function's range
[23:50:15] <graingert> oh it's pretty terrible
[23:50:25] <grym> hash(-1) :D
[23:51:06] <Akuli> Adoi, is there a reason why there's two classes named Car and car?
[23:51:10] <graingert> but bool(-1) is True
[23:51:14] <Akuli> Adoi, you seem to be treating Car as if it was car
[23:51:15] <graingert> and bool("") is False
[23:51:20] <graingert> which is even more dangerous
[23:51:29] <grym> yep
[23:51:31] <Adoi> Akuli, yes, most likely my lack of proficiency in class-object matters
[23:51:37] <grym> graingert: tangentially related, nan-padding
[23:51:46] <Akuli> Adoi, so you don't really know how a class works, and you are using inheritance? :D
[23:51:54] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-c0ec-ab41-2900-1ef8.res6.spectrum.com)
[23:51:55] <purplex> graingert do you also advice me to raise exception?
[23:52:00] <Adoi> Akuli, no, I couldnt really understand it
[23:52:03] *** Joins: alguien (~alguien@user/alguien)
[23:52:08] <graingert> Adoi: btw don't put so much code in `if __name__ == '__main__':`
[23:52:17] <graingert> it should only contain `sys.exit(main())`
[23:52:25] <Adoi> graingert, it was the default code in the question, not inserted by me
[23:52:29] <graingert> then put your program in `def main() -> int:`
[23:52:42] <Akuli> graingert, he didn't come here to get style nits
[23:52:49] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[23:52:52] <Akuli> but whatever :)
[23:53:17] <Akuli> Adoi, when you say "class car(Car)", it means "make a new class car that inherits from class Car", and you really shouldn't attempt it if you don't know what inheritance is
[23:53:17] <graingert> I came here to give style nits
[23:53:18] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[23:53:21] <Akuli> :DDD
[23:53:36] <Adoi> Akuli, I had some examples showing the same class build for ex. for dog and animal, so I thought it would suit with Car and car, since "car" is my input
[23:53:52] <Akuli> usually lowercase names are instances and CapitalizedWords names are classes
[23:53:59] <Akuli> are you sure there was an example that made a lower-case class?
[23:54:18] <Adoi> Akuli, hmm, no it was "Dog" not "dog"
[23:54:28] <Akuli> so why did you decide to confuse yourself with a lower-case class name? :D
[23:54:36] <Akuli> change "class car(Car)" to "class Car"
[23:54:41] <Akuli> and delete the first "class Car: pass"
[23:54:42] <Adoi> Akuli, I just noticed it when you said that
[23:54:49] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[23:54:49] <Akuli> then you only have two classes, not 4 classes
[23:54:52] <Akuli> and they are named sanely
[23:54:58] <Akuli> and they don't use inheritance
[23:55:00] <Akuli> and you aren't confused
[23:55:06] <Adoi> Akuli, the class with "pass" was included in the question, I think I should keep it
[23:55:19] <Akuli> maybe they meant "add more stuff to these classes"?
[23:55:22] <Adoi> they dont want those lines to be removed
[23:55:43] <Akuli> if you need to, you can make another class named Car that will simply replace their Car class
[23:55:44] <tunixman> Adoi: I made a small change: https://www.pastebin.cz/en/p/RG3EkYn
[23:55:52] <tunixman> I think it might get you further along.
[23:56:07] <graingert> Adoi: I think they want the pass to be replaced with a class body
[23:56:18] <graingert> Adoi: they should have used `...` rather than pass
[23:56:23] <graingert> eg `class Car: ...`
[23:56:47] *** Joins: RougeR (~rougex250@user/rouger)
[23:57:26] <Akuli> Adoi, to clarify, the problem with your code is/was that the lower-case classes are never used
[23:57:33] <Akuli> so no matter what you put there, it won't help
[23:57:51] <Akuli> the code does "vehicle = Car(max_speed, speed_unit)" and there it uses Car, not car
[23:58:15] <hexnewbie> Would there be a Python parser suitable for reading index.theme of a Freedesktop theme? configparser seems incompatible (index.theme supports repeated sections). I'm looking to get all icons from a theme in a PyQt5/PySide2 program, and Qt does not have an API for that. I don't need the info from the index.theme per se.
[23:58:32] <hexnewbie> But it would be good if I knew what categories the icons were, for more organized display. (I could use directory names)
[23:58:48] <graingert> you can use https://www.irccloud.com/pastebin/8rwQ9I90/car.py
[23:59:02] <graingert> Adoi: ^ you don't actually need to remove the pass
[23:59:12] <Akuli> hexnewbie, you can have repeated sections in configparser https://github.com/Akuli/porcupine/pull/446
[23:59:16] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:24] <graingert> it's redundant and confusing but it still works
[23:59:54] <Adoi> tunixman, your code gives another type error; https://www.pastebin.cz/raw/ZW4T3fM
