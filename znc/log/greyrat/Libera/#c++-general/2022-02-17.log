[00:04:28] <PJBoy> my idea was halfway between
[00:06:43] <PJBoy> https://godbolt.org/z/d1eshMTPj
[00:10:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:12:57] <PJBoy> add some noise to deal with warnings https://godbolt.org/z/8d9Px544o
[00:13:35] <LordKalma> wtf is this?
[00:14:09] <PJBoy> void casts
[00:14:19] <LordKalma> you're a void cast
[00:14:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:15:09] <PJBoy> I'll discard *your* value
[00:15:29] <LordKalma> at least that means I have *some* value :p
[00:16:05] <ashafq> Thank you very much guys!
[00:16:22] <LordKalma> ashafq, you're lucky this isn't #include<c++> .p
[00:16:32] <rpav> template<typename T> inline void unused(const T&) {}
[00:16:32] <PJBoy> you've got your pick of the litter
[00:16:36] <PJBoy> yeah true
[00:16:43] <PJBoy> not being able to say guys is kinda whack
[00:16:51] <Alipha> { (void)LordKalma(); } void LordKalma() {}
[00:16:52] <geordi>  
[00:17:00] <PJBoy> although kinda fair
[00:17:04] <Alipha> LordKalma: not necessarily ^
[00:17:05] *** Joins: KillAnimals (~anon@199-7-159-87.eng.wind.ca)
[00:17:16] <PJBoy> I don't hate it as much as resize_and_overwrite
[00:17:18] <ashafq> LordKalma: what will happen if it was #include<c++>? ðŸ˜Š
[00:17:32] <LordKalma> ashafq, #include<c++> is a c++ community with a discord room
[00:17:37] <ashafq> AH! ðŸ˜Š
[00:17:38] <LordKalma> and they are picky with gender neutral language
[00:17:46] <LordKalma> like "guys"
[00:17:52] <PJBoy> it's mostly just "guys"
[00:17:59] <ashafq> oh ðŸ˜Š thanks people! ðŸ˜Š
[00:18:03] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:18:16] <rpav> cult rules
[00:18:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:18:31] <rpav> also template<typename...Ts> void unused(const Ts&...) {}
[00:18:38] <PJBoy> yeah I was gonna say
[00:18:49] <LordKalma> actually the first time someone complained to be about "guys" was on #kde-devel
[00:18:53] <PJBoy> void unused(auto&&...){}
[00:19:20] <LordKalma> #define unused(x) (void(x))
[00:19:38] <rpav> yeah but the preprocessor :( also doesn't let you ...
[00:20:16] <rpav> it just sucks that TMP is a few things short of being able to completely replace "function"-macro usage
[00:20:30] <LordKalma> stringification?
[00:20:44] <rpav> yeah token pasting and token strings for two
[00:21:00] <LordKalma> all of that will be solved when we have reflection TM
[00:21:02] <PJBoy> there's a fair few macros that simply generate source code text
[00:21:07] <PJBoy> that can never ever be replaced
[00:21:20] <rpav> they could definitely be replaced
[00:21:29] <LordKalma> you mean half of Qt?
[00:21:44] <rpav> most of qt could _already_ be replaced
[00:21:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:21:59] <LordKalma> the other day I learned a big chunk of their header files are generated
[00:22:02] <LordKalma> hahah indeed
[00:22:14] <LordKalma> Q_UNUSED could be that template thing, but whatever
[00:22:21] <rpav> if you could have variable-variable-names you could do a lot, but that's probably hackier than it could be
[00:22:33] <LordKalma> they are already adopting in some C++20 stuff on supported compilers
[00:22:36] <PJBoy> like my macro for log_rethrow
[00:23:03] <rpav> template<string pfx> struct S { int $(pfx + "_x"), $(pfx + "_y");  };
[00:23:25] <PJBoy> where it goes like `LOG_RETHROW(msg) catch (const exception& e) { log(msg); log(e.what()); throw; }`
[00:23:35] <LordKalma> write a paper with that syntax for reflection, rpav
[00:23:40] <LordKalma> we sure don't have enough papers about that
[00:23:41] <rpav> template<string pfx, token x = pfx + "_x"> struct S { int $x; };
[00:23:43] <PJBoy> you can't make a proper language feature that inserts a catch like that, gotta be a macro
[00:23:58] <rpav> LordKalma: this isn't reflection, it's metaprogramming
[00:24:13] <rpav> reflection would be extremely useful though
[00:24:19] <LordKalma> it almost looks like cmake to me
[00:24:20] <LordKalma> :p
[00:24:44] <PJBoy> raytracer in reflections code when
[00:25:05] <rpav> PJBoy: err, why can't that be a simple function
[00:25:08] <LordKalma> Ask Turner and he'll make you a constexpr raytracer
[00:25:22] <PJBoy> because catch statements can't be returned by functions
[00:25:30] <rpav> why does it _need_ to be returned
[00:25:37] <PJBoy> because that's what functions do
[00:25:41] <rpav> no
[00:25:46] <rpav> you're not thinking this through heh
[00:25:51] <PJBoy> you can't generate a catch statement via side effects either
[00:26:11] <PJBoy> idk what on earth you have in mind with a function
[00:26:26] <rpav> f([&]() { do things });  where f() is `try { .. } catch ..`
[00:26:38] <PJBoy> then I can't have any commas in my lambda
[00:26:42] <PJBoy> terrible
[00:26:50] <rpav> what would make it _nice_ is "lazy" parameters
[00:26:57] <LordKalma> what do comas have to do with try blocks?
[00:27:00] <rpav> or better lambda syntax
[00:27:03] <PJBoy> commas have to do with macros
[00:27:08] <PJBoy> they separate arguments
[00:27:08] <rpav> yo don't need macros for this
[00:27:21] <PJBoy> oh uh, right yeah we got rid of the macro bit
[00:27:22] <rpav> you can call a function that runs the code you want, catches, and rethrows
[00:27:31] <rpav> there are _tricky_ things that are harder, but this isn't one
[00:27:57] <PJBoy> that's surprisingly not completely terrible
[00:28:22] <PJBoy> only issue is that my logging wants function name and line number
[00:28:34] <PJBoy> and so if it were in a real function f(), that would be useless
[00:28:55] <PJBoy> but with a source_location default argument, that might be ok
[00:28:58] <LordKalma> rust macros! are better than dumb text pre-processing and you can still use line_number
[00:29:01] <rpav> eh with backtrace you'll be able right, but wasn't there some current trick for that
[00:29:05] <LordKalma> that's why print_ln! is a macro!
[00:29:14] *** Joins: badone (~badone@209.132.189.152)
[00:29:15] <rpav> PJBoy: oh yeah that .. 23 but i mean getting there
[00:29:24] <PJBoy> stacktrace will be great too
[00:29:37] <PJBoy> I want those in my exception messages *anyway*
[00:29:43] <rpav> yeah
[00:29:45] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:30:21] <PJBoy> in fact I might throw away all my exception based macros when that arrives
[00:30:25] <ville> rpav: what do you mean macros don't let you ...?
[00:30:52] <rpav> ville: someone else?
[00:31:16] <ville> 22:49:38            rpav | yeah but the preprocessor :( also doesn't let you ...
[00:31:17] <rpav> macros are "powerful" but dumb syntax hacking should really always be a last resort, and is probably an indication of lacking power elsewhere
[00:31:31] <PJBoy> the ellipsis was a pack
[00:31:39] <PJBoy> you can't ignore several variables with a macro
[00:31:44] <rpav> ville: ah, poorly worded; 1) it's the preprocessor, which sucks and 2) the preprocessor doesn't have sufficient processing power for ...
[00:32:04] <rpav> maybe you can ((void)(__WHATEVER__))
[00:32:16] <ville> what do you  mean by ...?
[00:32:24] <rpav> variadic arguments
[00:32:47] <ville> yes there are variadic macros
[00:33:09] <rpav> please fully read/comprehend
[00:33:33] <PJBoy> the point is that `#define ignore(...) (void(__VA_ARGS__))` doesn't work
[00:33:47] <ville> http://www.eelis.net/c++draft/cpp.replace.general#5
[00:33:48] <PJBoy> because you get a warning about useless comma operator
[00:33:50] <rpav> in this case you _might_ be able to do something
[00:33:58] <rpav> ah do you? lame
[00:34:01] <PJBoy> and there's nothing else you can do
[00:34:28] <rpav> but i mean, even if you could, the point is more you don't have to anymore
[00:37:49] <rpav> ooh i have a potentially terrible idea
[00:39:17] <rpav> ah no, there are no overloadable operators you can shortcut-pass on the LHS
[00:39:46] <ville> PJBoy: nothing you say? call a variadic function of course: http://coliru.stacked-crooked.com/a/0652196396c4d73e
[00:40:13] <PJBoy> that's sufficiently close to nothing in my book
[00:41:19] <PJBoy> like you give a macro some work to do, and they're like "bah I can't do it, I'll delegate to someone else"
[00:42:19] <PJBoy> there's also the issue of not being able to pass that macro non vararg values like std::string
[00:43:58] <ville> you may overload macros on arity if that's what you wish
[00:49:16] <rpav> oh right overloaded operators can't shortcut either
[00:49:20] <rpav> silly C++
[00:49:38] <Alipha> it would be cool if they could
[00:49:43] <rpav> very
[00:49:50] <LordKalma> C++ is a special boy
[00:50:09] <rpav> but basically we need "lazy" parameters .. `int foo(lazy int x) { ... x(); ... }`
[00:50:26] <rpav> the expression is converted implicitly to a function returning the desired type
[00:51:01] <rpav> and it _should_ re-evaluated the expression everytime you call it, because that's most powerful
[00:52:02] <rpav> repeat(i++, 5); // ;)
[00:52:27] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[00:52:40] <kalven> it's been proposed, iirc
[01:00:48] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 252 seconds)
[01:00:49] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:05:26] <ville> PJBoy: oh you mean passing an std::string object in the ... of a function, not macros?
[01:05:46] <PJBoy> yeah
[01:05:56] <PJBoy> it's a variadic function arguments limitation
[01:06:00] <ville> that's implementation defined i presume
[01:06:21] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[01:06:46] <PJBoy> apparently so actually
[01:06:51] <ville> ok it's conditionally supported implementation defined: http://www.eelis.net/c++draft/expr.call#12.sentence-7
[01:08:11] <PJBoy> now I'm confused
[01:08:29] *** Quits: magla (~gelignite@55d40b59.access.ecotel.net) (Quit: Stay safe!)
[01:08:38] <PJBoy> why do the class operations have to be non trivial?
[01:09:16] <PJBoy> it doesn't seem as though class types with trivial ops are supported outside of that sentence
[01:10:11] <PJBoy> and there need be no corresponding parameter??
[01:10:58] <ville> apparently the ... doesn't count as a corresponding parameter
[01:11:19] <PJBoy> alright that bit's fine then
[01:16:33] *** Quits: robod34 (~Username@79.113.227.62) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:17:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:18:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:19:21] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[01:19:29] *** Joins: jokoon (~eio@2a01:e0a:542:e160:3d9c:f044:e5e7:d254)
[01:19:57] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[01:22:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:24:18] <rpav> ðŸ¤” i think a good definition of "a hack" is an immediate solution to a specific case
[01:26:27] <LordKalma> we have a very good in portuguese for hack/bodge
[01:26:35] <LordKalma> whose translation wouldn't make it justice
[01:26:46] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:29:52] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[01:30:10] *** Joins: markong (~kvirc@213.146.188.203)
[01:30:12] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[01:31:02] *** Joins: johnny (~johnny@user/johnny)
[01:37:13] <OnlineCop> Are method documentation (Doxygen comments, etc.) typically done in the interface, or in the implementations?
[01:39:08] <PJBoy> the interface
[01:39:38] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[01:42:35] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:43] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:8c1c:a482:bdcb:d80)
[01:42:43] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:43] *** ChanServ sets mode: +v npaperbot
[01:44:48] *** Quits: jsbach (~jsbach@2a01:c22:b1aa:6f00:d06b:554:9eaa:3358) (Ping timeout: 252 seconds)
[01:49:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:56:50] *** Quits: KillAnimals (~anon@199-7-159-87.eng.wind.ca) (Ping timeout: 272 seconds)
[01:59:48] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[01:59:56] *** Quits: jokoon (~eio@2a01:e0a:542:e160:3d9c:f044:e5e7:d254) (Quit: Leaving)
[02:07:42] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:14:14] *** Joins: k8yun (~k8yun@user/k8yun)
[02:18:52] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[02:18:54] *** Quits: proller (~p@2a02:6b8:b081:4::1:3b) (Ping timeout: 252 seconds)
[02:19:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:22:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:29:21] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[02:29:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:30:55] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[02:31:19] *** Joins: proller (~p@80.240.216.69)
[02:32:10] *** Joins: Didgy (~np_sk@82.147.37.145)
[02:34:26] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[02:34:46] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[02:35:07] *** Joins: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de)
[02:35:49] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[02:39:48] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[02:40:54] *** Quits: adeliktas (~adeliktas@i59F52959.versanet.de) (Ping timeout: 252 seconds)
[02:41:31] *** Joins: adeliktas (~adeliktas@i59F52854.versanet.de)
[02:42:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:44:05] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:50:05] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:57:02] *** Quits: AmR (~AmREiSa@156.199.14.65) (Quit: Konversation terminated!)
[02:57:22] *** Quits: Didgy (~np_sk@82.147.37.145) (Quit: Konversation terminated!)
[02:57:37] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[02:57:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[02:58:18] *** Joins: Didgy (~np_sk@82.147.37.145)
[02:58:28] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:59:25] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:59:57] *** Quits: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:00:20] *** Quits: Didgy (~np_sk@82.147.37.145) (Client Quit)
[03:01:26] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[03:05:38] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 260 seconds)
[03:05:49] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[03:05:58] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:06:17] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[03:06:26] *** Joins: computerquip (sid423484@user/computerquip)
[03:06:57] *** Joins: nightstrike (uid487@2a03:5180:f:5::1e7)
[03:07:16] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[03:08:12] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:14:15] *** Quits: MatSharrow (~matthew@60.102.9.51.dyn.plus.net) (Ping timeout: 250 seconds)
[03:16:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:19:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:23:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:35:53] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[03:38:51] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[03:39:07] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[03:39:11] *** Quits: causative (~halberd@user/causative) (Remote host closed the connection)
[03:39:36] *** Joins: ahlk` (~user@2600:1700:31c0:3a10::43)
[03:39:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:39:59] *** Quits: Khoyo_ (~khoyo@user/khoyo) (Ping timeout: 256 seconds)
[03:40:13] *** Joins: causative (~halberd@user/causative)
[03:40:13] *** Joins: xkuru (~xkuru@user/xkuru)
[03:40:35] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Ping timeout: 240 seconds)
[03:40:42] *** Joins: Khoyo (~khoyo@user/khoyo)
[03:41:41] *** Quits: lru (~lru@240.ip-51-79-50.net) (Ping timeout: 256 seconds)
[03:43:28] *** Joins: lru (~lru@240.ip-51-79-50.net)
[03:43:43] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Ping timeout: 250 seconds)
[03:44:36] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (Ping timeout: 240 seconds)
[03:45:00] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (Ping timeout: 240 seconds)
[03:45:24] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Ping timeout: 240 seconds)
[03:45:24] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[03:45:25] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[03:46:18] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[03:48:32] *** Joins: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[03:49:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:8c1c:a482:bdcb:d80) (Ping timeout: 240 seconds)
[03:52:00] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:52:29] *** Joins: k8yun (~k8yun@user/k8yun)
[03:56:44] *** Joins: x_kuru (~xkuru@user/xkuru)
[03:57:02] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:57:32] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[03:57:37] *** Joins: nki3 (~mmk@198-200-74-246.cpe.distributel.net)
[03:57:50] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:605e) (Quit: Leaving)
[03:57:53] *** Quits: seninha (~seninha@user/seninha) (Read error: Connection reset by peer)
[03:57:53] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Read error: Connection reset by peer)
[03:57:53] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[03:57:53] *** Quits: niko3 (~mmk@198-200-74-246.cpe.distributel.net) (Read error: Connection reset by peer)
[03:58:13] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[03:58:13] *** Joins: seninha (~seninha@user/seninha)
[04:00:21] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[04:00:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[04:09:12] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[04:12:03] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:17:43] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:20:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:23:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:26:12] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[04:31:26] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Ping timeout: 252 seconds)
[04:33:48] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 240 seconds)
[04:33:54] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[04:35:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:69a1:71c1:c043:2acb) (Quit: Textual IRC Client: www.textualapp.com)
[04:36:35] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:39:43] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4)
[04:39:43] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4) (Changing host)
[04:39:43] *** Joins: skapata (~Skapata@user/skapata)
[04:46:09] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[04:51:00] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[04:53:05] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[04:53:33] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[04:53:59] *** Joins: k8yun (~k8yun@user/k8yun)
[04:54:47] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:58:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:02:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[05:03:49] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:07:07] *** Joins: ferdna (~ferdna@user/ferdna)
[05:07:24] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:08:11] *** Quits: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[05:08:38] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[05:09:36] *** Joins: malloy (~jimery@116.30.220.175)
[05:11:27] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[05:15:46] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:20:41] *** Joins: seninha (~seninha@user/seninha)
[05:20:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:22:40] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:28:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:31:34] *** Quits: nki3 (~mmk@198-200-74-246.cpe.distributel.net) (Quit: Leaving)
[05:31:38] *** Joins: k8yun (~k8yun@user/k8yun)
[05:33:02] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[05:33:23] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:37:52] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 272 seconds)
[05:42:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:44] *** ChanServ sets mode: +v npaperbot
[05:43:08] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:cf7:316a:d226:c21f) (Quit: Client closed)
[05:53:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:58:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:20:17] *** Joins: unyu (~pyon@user/pyon)
[06:21:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:24:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:29:09] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:34:24] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:39:44] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:44:18] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[06:53:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:02:21] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:04:38] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 272 seconds)
[07:05:49] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[07:07:05] *** Joins: Azem (~haise01@user/haise01)
[07:08:20] *** Joins: adeliktas8 (~adeliktas@i59F52BE7.versanet.de)
[07:10:12] *** Quits: adeliktas (~adeliktas@i59F52854.versanet.de) (Ping timeout: 240 seconds)
[07:10:12] *** adeliktas8 is now known as adeliktas
[07:10:24] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 252 seconds)
[07:18:09] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[07:19:05] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:21:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:25:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:30:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:34:35] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Quit: Leaving)
[07:34:43] *** Joins: k8yun__ (~k8yun@user/k8yun)
[07:38:12] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[07:39:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:41:41] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[07:43:31] *** Joins: niko3 (~mmk@198-200-74-246.cpe.distributel.net)
[07:51:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:58:05] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[08:22:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:25:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:26:39] *** Joins: fldme (~fldme@178.49.152.151)
[08:26:56] <fldme> does c++ have some kind of codecs?
[08:27:42] <kalven> fldme: what do you mean?
[08:28:25] <fldme> classes for conversion of character encodings; i've only found a trivial utf8<->wchar_t one
[08:30:08] <kalven> https://en.cppreference.com/w/cpp/locale/codecvt
[08:33:20] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:36:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[08:38:08] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:39:00] *** Quits: ville (~ville@user/ville) (Ping timeout: 240 seconds)
[08:40:23] *** Joins: ville (~ville@user/ville)
[08:43:43] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[08:43:51] <yates> if i overload the + and = operators, do i get a += overload for free?
[08:45:52] <ville> and don't double post
[08:46:22] <great_taste> do class template instantiations with large parameter packs slow down compilation significantly in general?
[08:47:05] <great_taste> e.g. 50 parameters
[08:48:20] <ville> i doubt anyone has stats, but i'm going to guess that no. instantiating something that's just flat list of 50 things is not going to be significantly slower than one with 5
[08:51:11] <great_taste> not sure what's causing this massive slow down, but maybe I should try a different design
[08:53:36] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:53:41] <ville> well... what's massive? are you measuring in an empty project vs doing nothing and doing something?
[08:54:14] <great_taste> well yes I've tried commenting out some code and it took a lot less time to compile this cpp file
[08:54:34] <great_taste> like from 2 minutes to 20 seconds :)
[08:56:52] <great_taste> so the other question would be: what to do when you hate your code and don't know how to make it better? :D
[08:59:23] <great_taste> perhaps instead of tuples and parameter packs I should just use type ids and linear look up.
[09:00:03] <great_taste> might be an alternative, I will have to investigate
[09:03:45] <ville> if you're using std::tuple, or something else you didn't write and know what it does then that makes it different. on the surface it may look like you're instantiating something with "50 things", but depending the implementation they can do stuff that slows things down
[09:04:20] <ville> but if you jus had written a class template with "50 parameters" and instantiated that then i doubt that'll register
[09:04:59] <great_taste> yeah it must be my template trickery to visit a tuple
[09:05:07] <great_taste> i.e. get a type with a runtime index
[09:05:40] <great_taste> using an array of functions for O(1) lookup
[09:05:59] <great_taste> I'll try replacing that with a linear lookup in a fold expression and see what happens..
[09:09:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:11:08] <ville> ok you're also now talking about what using the said template might cost. rather than the instantiation of it?
[09:13:15] <great_taste> well yes a class with a large parameter pack that does trivial things certainly wouldn't be heavy like this. But now I've realized I have this visit_tuple function being called and it's probably the heavy thing here.
[09:16:21] <kalven> what compiler are you using?
[09:17:49] <great_taste> gcc
[09:22:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:26:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:38:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:38:44] <kalven> pity
[09:42:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:44] *** ChanServ sets mode: +v npaperbot
[09:53:08] <ville> great_taste: a personal tendency is neverevernever to use std::tuple unless doing tmp. which sort of ends up neverevernever
[09:53:18] *** Quits: fldme (~fldme@178.49.152.151) (Quit: Client closed)
[09:54:02] <great_taste> premature optimization I guess :)
[09:54:11] <ville> great_taste: if you're using it as something where you could have used an array, vector or struct then the next person coming to the code will probably be less than impressed with you avoiding naming things
[09:54:14] <great_taste> I wanted to avoid a linear lookup lol
[09:54:36] <great_taste> but seriously... don't think there will be any perf hit
[09:54:59] <ville> you know the index?
[09:55:09] <great_taste> runtime
[09:55:24] <ville> so then how does tuple solve that?
[09:55:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[09:56:37] <great_taste> think of serializing a network packet, which can be of multiple types and you serialize an index into a tuple of types
[09:57:04] <great_taste> on the other end when reading the packet you have to take the index and find the type in the tuple to deserialize
[09:57:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:57:22] <ville> umm your packet probably includes a type field?
[09:57:39] <great_taste> a type id
[09:57:47] <great_taste> which is an index in the tuple of possible types
[09:57:52] <ville> aranage it so tht you can use that to index?
[09:58:07] <great_taste> it's a runtime index
[09:58:24] <ville> yeah. you've an array of pointer-to-function for example
[09:58:45] <ville> if the type values are not dense you can do a hash table
[09:59:36] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[09:59:39] <ville> but really if the mappings are not supposed to be mutable then a switch statement on the type id is perhaps the "accurate" option
[09:59:39] <great_taste> the array of functions solution seems to be the culprit of the bad compilation performance
[09:59:56] <ville> huh?
[10:00:13] <ville> how can a fixed-size array cost any compilation time?
[10:00:57] <great_taste> it's a constexpr array involving many template parameters
[10:01:09] <great_taste> though I will try replacing it with a linear lookup and see if anything changes
[10:01:11] <ville> why are there any template parameters invlved?
[10:01:38] <great_taste> though that's the only thing that's actually being done in that class with 50+ template parameters, so it's likely to be the culprit
[10:02:22] <ville> think you're too deep in whatever template metaprogramming quagmire you've deviced
[10:04:05] <great_taste> heh
[10:04:13] <ville> how do you comeup with 50+ things to stick in a template parameter list?
[10:04:34] <great_taste> many supported types that can be serialized
[10:04:50] <ville> outside of doing something "clever" for a blogpost i am stumped
[10:05:37] <ville> does the mapping from "thing to serialize" to "function that serializes" vary at runtime in your system?
[10:06:44] <great_taste> no but I need to know what the type is before a deserialize
[10:06:53] <great_taste> *I deserialize
[10:07:21] <ville> but the types are known at compile time and the mapping is known at compile time?
[10:07:30] <great_taste> yes
[10:07:39] <ville> then just do a plain switch() and forget this other nonsense with templates
[10:08:13] <great_taste> yeah this is premature optimization
[10:08:15] <ville> switch(packet_type) { case packet_a: { ... } ... }
[10:08:23] <great_taste> and it's beyond my c++ limits I guess
[10:08:33] * great_taste is not a c++ virtuoso
[10:08:43] <ville> you are not even optimizing anything
[10:09:00] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[10:09:03] <great_taste> well it's O(1) vs O(n) :)
[10:09:20] <ville> you should expect switch to turn into a lookup table
[10:09:34] <great_taste> but it's negligible and cant say much until measured
[10:09:44] <ville> so it's not O(1) vs O(n)
[10:09:51] <great_taste> in theory
[10:09:54] <ville> it's O(1) vs O(1)
[10:10:34] <ville> if you control the packet type ids then you can control the code generation from switch indirectly
[10:11:14] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:11:45] <great_taste> likely a better idea
[10:12:17] <great_taste> I must choose simplicity over "apparent" higher performance
[10:12:38] <ville> i'd word that perhaps bit differently
[10:12:39] <great_taste> either way, just trying to be fancy and explore the possibilities
[10:12:50] <great_taste> I have certainly learned something with this :P
[10:13:13] <ville> sure that's fine if you're being "clever" on purpose and you acknowledge that
[10:13:35] <ville> if i saw code like that you'd be instantly fired
[10:14:23] <kalven> and/or thrown in jail
[10:14:43] *** Quits: niko3 (~mmk@198-200-74-246.cpe.distributel.net) (Remote host closed the connection)
[10:15:00] <great_taste> the c++ committee jail?
[10:16:04] *** Joins: ravan (~ravan@user/ravan)
[10:16:05] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:16:13] <ville> kalven: there would be a car waiting outside the building exit,... you were a swede right?
[10:16:23] <great_taste> being fired is good man, fuck these software engineering jobs
[10:16:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[10:16:51] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:17:28] <kalven> ville: still am
[10:17:47] <ville> kalven: then this: https://sv.wikipedia.org/wiki/Skjutsning
[10:18:11] <ville> wikipedia fails to have an english page for muilutus
[10:22:05] <kalven> hah, damn
[10:23:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:27:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:28:57] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:28:57] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[10:30:16] *** Cyp_ is now known as Cyp
[10:39:06] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:41:01] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:42:26] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:42:28] *** Joins: DSpider (~DSpider@82.79.237.41)
[10:44:08] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[10:49:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[10:58:11] *** Quits: DSpider (~DSpider@82.79.237.41) (Quit: Leaving)
[10:59:02] *** Joins: andreasbuhr (~quassel@p549dba39.dip0.t-ipconnect.de)
[11:04:10] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[11:05:04] *** Joins: ravan (~ravan@user/ravan)
[11:06:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:08:14] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:11:40] *** Joins: rajkosto (~rajkosto@109-93-41-254.dynamic.isp.telekom.rs)
[11:13:20] *** Joins: Didgy (~np_sk@82.147.37.145)
[11:19:49] *** Quits: Didgy (~np_sk@82.147.37.145) (Ping timeout: 256 seconds)
[11:22:17] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[11:22:32] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[11:23:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:28:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:31:35] *** Joins: Didgy74 (~np_sk@82.147.37.145)
[11:31:35] *** Didgy74 is now known as Didgy
[11:33:21] *** Quits: Didgy (~np_sk@82.147.37.145) (Client Quit)
[11:33:53] *** Joins: Didgy (~np_sk@82.147.37.145)
[11:37:14] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:54:07] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:59:38] *** Quits: Didgy (~np_sk@82.147.37.145) (Quit: Konversation terminated!)
[12:02:48] *** Joins: Didgy (~np_sk@82.147.37.145)
[12:03:36] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:06:42] *** Quits: Didgy (~np_sk@82.147.37.145) (Client Quit)
[12:07:42] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Read error: Connection reset by peer)
[12:09:13] *** Joins: Didgy (~np_sk@82.147.37.145)
[12:09:49] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[12:15:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d) (Read error: Connection reset by peer)
[12:16:11] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:995d:44ee:22f0:1482)
[12:17:11] *** Joins: jsbach (~jsbach@2a01:c22:accf:9400:f89c:8bec:657d:22e8)
[12:18:41] *** Joins: robod34 (~Username@79.113.227.62)
[12:24:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:27:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:33:24] *** Quits: Didgy (~np_sk@82.147.37.145) (Ping timeout: 240 seconds)
[12:35:04] <Haohmaru> !fact
[12:35:06] <nolyc> Haohmaru: A constructor for a class is odr-used as specified in [dcl.init].
[12:38:31] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:39:15] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[12:41:29] *** Joins: KillAnimals (~anon@208.98.223.107)
[12:42:53] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:43:11] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:43:37] *** Joins: kevr (~kevr@user/kevr)
[12:45:46] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[12:46:24] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[12:58:49] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6bb0)
[13:01:05] *** Joins: Didgy (~np_sk@82.147.37.145)
[13:10:12] *** Quits: Didgy (~np_sk@82.147.37.145) (Ping timeout: 240 seconds)
[13:14:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:24:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:28:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:30:20] *** Quits: KillAnimals (~anon@208.98.223.107) (Ping timeout: 272 seconds)
[13:30:40] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:32:01] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[13:32:42] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[13:41:21] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:42:33] *** Quits: rajkosto (~rajkosto@109-93-41-254.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[13:42:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:46] *** ChanServ sets mode: +v npaperbot
[13:45:57] *** Quits: mitch0 (~mitch@178-164-240-26.pool.digikabel.hu) (Quit: leaving)
[13:46:14] *** Joins: mitch0 (~mitch@178-164-240-26.pool.digikabel.hu)
[13:47:35] *** Joins: txtsd (~txtsd@user/txtsd)
[13:48:36] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[13:50:47] *** Joins: paul424 (~tom@ip-5-172-234-95.multi.internet.cyfrowypolsat.pl)
[13:53:11] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Read error: Connection reset by peer)
[13:54:14] *** Joins: hackkitten (~hackkitte@94.31.104.136)
[13:57:03] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[13:57:40] *** Joins: angelacrust (~angelacru@182.64.13.254)
[14:00:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:995d:44ee:22f0:1482) (Ping timeout: 240 seconds)
[14:01:05] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:01:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d) (Ping timeout: 240 seconds)
[14:06:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[14:08:12] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:11:53] *** Quits: johnny (~johnny@user/johnny) (Read error: Connection reset by peer)
[14:11:59] *** Joins: johnny_ (~johnny@user/johnny)
[14:14:09] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:22:29] *** Quits: mitch0 (~mitch@178-164-240-26.pool.digikabel.hu) (Remote host closed the connection)
[14:22:29] *** Quits: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu) (Remote host closed the connection)
[14:25:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:28:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[14:29:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:29:46] *** Joins: baltazar (~baltazar@195.199.251.47)
[14:34:47] *** Quits: paul424 (~tom@ip-5-172-234-95.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:38:16] *** Joins: proller (~p@2a02:6b8:0:40c:99de:266d:6fee:27b9)
[14:45:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[14:46:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:48:10] *** Joins: seninha (~seninha@user/seninha)
[14:48:36] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[14:54:28] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[14:57:04] *** Joins: ivii (~ivan@user/ivii)
[14:57:44] *** Joins: xkuru (~xkuru@user/xkuru)
[15:01:36] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[15:04:21] *** Joins: xkuru (~xkuru@user/xkuru)
[15:06:57] *** Joins: artok (~azo@mobile-access-b0486a-201.dhcp.inet.fi)
[15:14:50] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 272 seconds)
[15:23:04] <CarloWood> After a routine OS upgrade that caused relatively minor upgrades; which in itself is really confusing; my project stopped compiling :/
[15:23:22] <CarloWood> One of the problems is a compile error in magic_enum
[15:24:43] <CarloWood> https://bpa.st/YCMQ
[15:25:23] <CarloWood> Not sure what this means :/.  Or how it suddenly started to fail, since I did not upgrade magic_enum - nor a major upgrade of the compiler :/
[15:25:38] <CarloWood> Nevertheless - now it is here - what does it mean?
[15:25:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:29:07] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[15:29:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:30:11] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:31:07] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[15:33:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:33:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[15:34:28] *** Quits: foul_owl (~kerry@23.82.193.104) (Ping timeout: 272 seconds)
[15:35:14] <CarloWood> I tracked it down to one particular enum: SE_EKEYREJECTED = EKEYREJECTED
[15:38:59] *** Joins: theArthurDent (~user@user/theArthurDent)
[15:39:10] *** Joins: luizfrds (~Luiz@152.250.243.147)
[15:40:01] <ville> enums have an underlying type. your value is larger than the type can represent
[15:40:50] <ville> no idea what magic_enum does internally
[15:41:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[15:43:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:47:28] *** Joins: markong (~kvirc@213.146.188.203)
[15:50:06] <PJBoy> can't find any cool projects on github that have a conanfile.txt :(
[15:50:15] *** Joins: foul_owl (~kerry@23.82.193.88)
[15:50:39] <LordKalma> what about a conanfile.py?
[15:52:03] <PJBoy> that's less cool
[15:52:13] <PJBoy> I wanted to show off how easy it is to consume libraries with conan
[15:52:29] <PJBoy> 'cause it really is, you just say what libraries you want and provide what options you need
[15:52:35] <PJBoy> but I can't share $work code
[15:54:54] <LordKalma> honestly, for any public project I'd make a conanfile.py instead of a txt probably
[15:55:03] <LordKalma> becayse that way you can just build the whole thing
[15:55:36] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:58:11] <PJBoy> your conanfile.py invoke the build system?
[15:58:24] <PJBoy> I'm not such a fan of that if so
[15:58:36] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[15:58:43] <PJBoy> though I would consider offering a cheap shell script that invokes conan and then cmake
[16:03:57] <very_sneaky> conanfile has a build() method, which is a wrapper around cmake - though i think it is a superset of conanfile.txt, so you could probably just not define build() if you didn't want it doing that
[16:04:12] <very_sneaky> but conanfile.py allows you to export your library as a package to be consumed by others, so more useful i think
[16:04:20] <very_sneaky> conanfile.py*
[16:05:09] <PJBoy> yeah conanfile.py makes a lot of sense for libraries
[16:06:00] <very_sneaky> even for executables
[16:06:08] <very_sneaky> allows you to bring things in as build dependencies
[16:06:21] <very_sneaky> like, i bring in doxygen, gtest and cmake as build dependencies
[16:06:39] <very_sneaky> currently looking at ways to extend that to latex and a number of python packages
[16:08:02] <very_sneaky> also, can i just say how much i love sphinx - i have all my docs installing themselves in the packages they're for as html, pdf and man pages, and I can get a CI to build and present a static website that lets me view any number of versions with a convenient widget to switch between them, and download each versions docs in any format i decide to make available
[16:13:35] <very_sneaky> it's very satisfying to type `man mylib` and have legitimately useful documentation show up
[16:17:32] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Remote host closed the connection)
[16:20:55] <CarloWood> ville: Seems a weird bug in magic_enum - I reported it: https://github.com/Neargye/magic_enum/issues/136
[16:22:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:26:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:27:02] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 272 seconds)
[16:27:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[16:28:51] *** Joins: lxsameer (lxsameer@user/lxsameer)
[16:30:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:32:43] <CarloWood> Does anyone know how to suppress filename/line number info in preprocessor output? I use -E but I don't want to get the '#...' lines.
[16:32:59] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:34:32] *** Quits: baltazar (~baltazar@195.199.251.47) (Quit: leaving)
[16:35:33] <CarloWood> Ah -P
[16:35:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:37:26] <Haohmaru> !fact
[16:37:27] <nolyc> Haohmaru: An overloaded assignment operator must be declared to have only one parameter.
[16:39:48] *** Quits: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[16:41:19] *** Joins: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[16:43:10] *** Quits: ville (~ville@user/ville) (Quit: ville)
[16:46:46] *** Joins: ville (~ville@user/ville)
[16:47:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2)
[16:47:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2) (Changing host)
[16:47:18] *** Joins: skapata (~Skapata@user/skapata)
[16:52:15] <PJBoy> { S().operator=(S()); } struct S { void operator=(auto...) { BARK; } };
[16:52:16] <geordi>  
[16:52:23] <PJBoy> man they were serious
[16:59:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:05:31] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:07:15] <CarloWood> Shouldn't check_function_exists work out of the box with cmake??
[17:07:21] <CarloWood> CMake Error at threadpool/CMakeLists.txt:14 (check_function_exists):
[17:07:21] <CarloWood>   Unknown CMake command "check_function_exists".
[17:07:36] *** Quits: lh_not_b1t (~lh_bot@mingw-w64/developer/lhmouse) (Quit: Lost terminal)
[17:07:48] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[17:09:00] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[17:09:42] <CarloWood> Oh, include (CheckFunctionExists)
[17:09:49] <CarloWood> left out of ALL examples :/
[17:12:10] *** Quits: proller (~p@2a02:6b8:0:40c:99de:266d:6fee:27b9) (Remote host closed the connection)
[17:14:34] <ville> it's pretty standard, unfortunate as it may be, that documentation doesn't include complete examples. there's notice somewhere in the beginning: "presume such and such includes and such and such using declarations"
[17:15:13] <ville> and then you're left looking at N lines of code not knowing which functions come from the library because nothing is qualified
[17:15:25] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:15:25] *** gentooclimax is now known as climax
[17:16:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[17:16:04] <PJBoy> yeah, the nhollandman json github examples leave out those useful qualifications too
[17:16:33] *** Joins: proller (~p@2a02:6b8:0:40c:f7ae:3beb:5a9b:22d3)
[17:17:24] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[17:17:27] *** Joins: stefanos82 (~stefanos8@213-145-144.netrun.cytanet.com.cy)
[17:18:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:19:48] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[17:22:09] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[17:22:16] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:22:24] *** Joins: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu)
[17:26:27] <ville> gotta make that hello world-level case look good, can't have those nasty qualified ids ruining it and making it actually useful
[17:26:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:27:45] <rpav> i don't recall nlohmann/json being very hard to figure out even given slightly abbreviated examples
[17:28:11] <rpav> `using json = nlohmann::json;` is sufficient to use it with maximal convenience
[17:30:01] <LordKalma> PJBoy, basically you write your projects conanfile as you would write a recipe for CCI
[17:30:03] <PJBoy> that and the header
[17:30:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:30:29] <LordKalma> so people can conan install . your stuff
[17:30:50] <PJBoy> they can do that with a conanfile.txt
[17:31:18] <LordKalma> that installs dependencies
[17:31:23] <LordKalma> not the project itself
[17:31:31] <PJBoy> yeah I guess
[17:32:43] <LordKalma> I wonder if CCI supports a workflow, like
[17:32:53] *** climax is now known as gentooclimax
[17:33:08] <LordKalma> if you wrote a conanfile.py in your repo up to CCIs standards, if iy would be possible to just bypass CCIs file and call the functions from the former
[17:33:16] * LordKalma raises the question in the slack
[17:34:01] <LordKalma> probably not
[17:34:10] <LordKalma> because that wouldn be revision aware I guess
[17:35:45] <PJBoy> so the python file's good for libraries
[17:35:55] <PJBoy> but for an application that just wants to consume libraries
[17:36:09] <PJBoy> that text file is top tier
[17:36:55] <LordKalma> well, you may need more than the file from the moment you start needing logic
[17:37:10] <LordKalma> imagine your application needs libusb for example. there is libusb and there is libusb4win
[17:37:32] <LordKalma> if you need to settings.os == Â¨WindowsÂ¨, then the conanfile.txt isnt enough
[17:38:00] <PJBoy> I would make a cross platform libusb wrapper, obviously
[17:38:28] <PJBoy> was that a real example?
[17:38:36] <PJBoy> 'cause that sounds abysmal
[17:38:49] <LordKalma> libusb and libusb4win are actual things, yes
[17:38:55] <PJBoy> >:(
[17:38:59] <LordKalma> another example is perl
[17:39:07] <LordKalma> CCI has strawberry perl for windows users
[17:39:24] <PJBoy> perl >:(
[17:39:30] <PJBoy> but yeah I see your point
[17:39:43] <PJBoy> with complications you have to do python anyway
[17:39:50] <LordKalma> yes that
[17:40:09] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[17:40:17] <rpav> conan being all python is funny
[17:40:21] <PJBoy> or you make a cross platform perl
[17:40:23] <LordKalma> thats the cool thing with having python scripts I guess. you can do whatever crap you need
[17:40:51] <PJBoy> also the bad thing
[17:41:09] <LordKalma> PJBoy, even git4windows ships with all posix crap it needs, and you think they would make a clean windows perl interpreter? HAHAHAHAHA
[17:41:10] <PJBoy> I want as little complexity as possible in my build scripts
[17:41:39] <LordKalma> nobody is telling you to be complex
[17:41:41] <LordKalma> thats up to you
[17:41:50] <PJBoy> but you're giving me the power
[17:42:00] <PJBoy> and I've seen programmers
[17:42:06] <LordKalma> for which comes great responsability
[17:42:08] <PJBoy> programmers that regularly write make files
[17:42:17] <PJBoy> I don't trust programmers to be simple or reasonable
[17:42:33] <LordKalma> being simple requires lot of discipline, yes
[17:42:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:47] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:42:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:47] *** ChanServ sets mode: +v npaperbot
[17:43:11] <LordKalma> imho the only problem with conan being python is making you install python
[17:43:15] <PJBoy> that's why the text file's so great
[17:43:20] <LordKalma> to solve all dependencies, you need a dependency
[17:43:25] <PJBoy> you know a priori that it's gonna be dead simple
[17:43:48] *** Quits: stefanos82 (~stefanos8@213-145-144.netrun.cytanet.com.cy) (Quit: Leaving)
[17:44:07] <LordKalma> indeed
[17:44:34] <LordKalma> https://github.com/conan-io/conan-center-index/blob/master/recipes/qt/6.x.x/conanfile.py
[17:44:39] <LordKalma> look at this beauty :D
[17:44:42] <LordKalma> the 5.x ones are worse
[17:45:01] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[17:45:45] <rpav> D:
[17:46:43] <rpav> the problem is conan isn't even powerful enough to do the things you need .. really need a meta-package/build-system on top of that
[17:47:47] <rpav> one of the things that should indicate this ought to have been folded into cmake, except we can't _possibly_ be opinionated about what build system everyone should use or no one will use it
[17:47:55] <rpav> resulting in no one using it
[17:49:28] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:50:00] *** Joins: MatSharrow (~matthew@60.102.9.51.dyn.plus.net)
[17:54:47] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:55:17] <LordKalma> conan tries to be veryyyyyyyyyy agnostic
[17:55:22] *** Quits: MatSharrow (~matthew@60.102.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[17:56:04] <rpav> yeah there's a ton of unnecessary complexity as a result
[17:58:02] <Friithian> let's just go back to hand-made make files with zero standarization
[17:58:17] <LordKalma> full circle, eh_
[17:58:38] <LordKalma> and shipping .sln on the side for windows users?
[17:58:38] <Friithian> actullay no: let's go back to hand-made bash scripts with even less tandarization
[17:58:43] <PJBoy> shout outs to windows
[17:58:52] <LordKalma> thats what angela is doing anyway
[17:58:54] <Friithian> oh I don't care about the windows users :P
[17:59:08] <PJBoy> I love it some much when a project ships a sln
[17:59:13] <PJBoy> it's like the kiss of life
[17:59:25] <PJBoy> pulse would agree
[17:59:26] <LordKalma> they asked two times already about syntax on some vim stuff haha
[18:06:26] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:09:54] <LordKalma> https://github.com/conan-io/conan-center-index/blob/master/recipes/qt/5.x.x/conanfile.py
[18:09:57] <LordKalma> look at this
[18:13:18] <xkoncek> i updated to newest rolling release Fedora with g++ 12, suddenly i am getting compile errors: "error: â€˜find_ifâ€™ is not a member of â€˜stdâ€™; did you mean â€˜findâ€™?"
[18:14:05] <xkoncek> hmm... did they simply clean up their header files?
[18:14:27] <xkoncek> yes, i did not explicitly include algo
[18:20:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[18:21:51] *** gentooclimax is now known as climax
[18:23:14] *** Quits: sigma__ (~sigma@86.57.93.233) (Quit: Konversation terminated!)
[18:24:06] *** Joins: arch-angel (~quassel@user/arch-angel)
[18:26:50] *** climax is now known as gentooclimax
[18:27:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:27:55] *** Joins: tachoknight (~textual@2600:1700:3060:3ee0:f467:fda7:b67f:3b6)
[18:31:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:36:15] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 252 seconds)
[18:36:52] *** gentooclimax is now known as climax
[18:37:22] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[18:40:21] <xkoncek> are floating types represented the same way on both little endian and big endian cpus?
[18:41:57] <xkoncek> i assume so, ieee 754 is only one representation
[18:44:23] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:44:33] *** Joins: Xardas (~Xardas@149.233.51.127)
[18:45:13] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Ping timeout: 256 seconds)
[18:45:54] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[18:47:27] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[18:47:44] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[18:48:43] *** Joins: teepee (~teepee@openscad/teepee)
[18:50:07] *** Joins: Leone (~Leo@108.175.224.215)
[18:53:18] <DSpider> should lambdas be marked as "constexpr auto" or just "auto"?
[18:54:24] <LordKalma> depends on whether you want them to be constexpr or not
[18:54:59] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:55:14] <rpav> #define truck const auto
[18:55:23] <LordKalma> truck?
[18:56:58] <rpav> auto or truck
[18:57:27] <TinoDidriksen> xkoncek, floating point endianness is also arch specific. IEEE 754 does not specify endianness.
[18:58:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[18:59:50] <TinoDidriksen> IEEE 754 just says what the high and low bits should be used for, but doesn't say which direction high/low is in hardware. Float endianness follows integer, but you shouldn't need to rely on it anyway - when serializing, decompose and recompose.
[19:00:29] <LordKalma> nah famn, just reinterpret cast that shit
[19:00:51] *** Joins: ravan (~ravan@user/ravan)
[19:01:06] <TinoDidriksen> That will 99% work, yes.
[19:07:19] <LordKalma> between x86's I assume so
[19:08:13] <TinoDidriksen> If you have something that normalizes endianness for uint64/32_t, then reinterpret_cast and passing through that will 99% work for float.
[19:09:51] <rpav> just don't cross-type NaNs, or you'll get full bitwise reversal
[19:11:53] *** zagura is now known as ArchiwumIPN
[19:11:55] *** ArchiwumIPN is now known as zagura
[19:15:57] <Alipha> https://github.com/alipha/cpp/tree/master/endian :-)
[19:16:30] <rpav> need like `v.emplace_back(...) | [](auto& x) { /* chain-use the result */ };`
[19:19:08] *** Joins: paul424 (~tom@ip-5-172-236-127.multi.internet.cyfrowypolsat.pl)
[19:19:52] <PJBoy> why would that ever be better than `v.emplace_back(...); /* use v.back() */`
[19:19:56] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[19:21:10] <rpav> if it weren't for lambda syntax being crap, nice if you have a few lines of v.emplace_back(a0).do_something(); v.emplace_back(a1).do_something(); etc
[19:21:55] <PJBoy> could make free function emplace_back that returns .back()
[19:24:21] <PJBoy> something like `decltype(auto) emplace_back(auto&& container, auto&&... args) { container.emplace_back(forward<decltype(args)>(args)...); return forward<decltype(container)>(container).back(); }`
[19:25:17] <PJBoy> I wonder if anyone's ever proposed language-forward
[19:25:31] <PJBoy> having to write the template argument sucks
[19:25:57] <nwulfe> How is decltype(auto) different from just auto?
[19:26:39] <PJBoy> auto would return by value
[19:26:40] <rpav> PJBoy: emplace_back already returns back in 17
[19:26:47] *** Joins: seninha (~seninha@user/seninha)
[19:26:53] <PJBoy> oh does it?
[19:27:07] <PJBoy> so it does
[19:27:12] <PJBoy> I didn't know about that change
[19:27:17] <rpav> yeah, and i mean you _can_ do like `v.emplace_back(..).foo = 42;` but that's a one-off and a bit dubious
[19:27:26] <nwulfe> neat
[19:27:31] <rpav> yeah, it's hugely useful and ought to have been there
[19:27:32] *** nwulfe is now known as night_wulfe
[19:27:40] <Alipha> !give PJBoy fwd
[19:27:41] <nolyc> PJBoy: fwd is #define FWD(x) std::forward<decltype(x)>(x)
[19:27:52] <rpav> but even doing liek `auto& x = v.emplace_back(..); x...` is kinda ugly
[19:27:56] <PJBoy> decltype(auto) on the other hand returns whatever `.back()` returns
[19:27:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:28:07] <PJBoy> which would just be an lvalue reference
[19:28:12] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[19:28:40] <night_wulfe> Hmm
[19:28:42] <PJBoy> but I wanted to allow for rvalue reference too, which a container could choose to return
[19:29:32] <PJBoy> and then push_back() doesn't return the element
[19:29:35] <PJBoy> why
[19:30:18] <PJBoy> push_back is the one I use more often than not >:(
[19:30:34] <LordKalma> what's going on?
[19:30:56] <rpav> v << T(..) // clearly better
[19:30:59] <rpav> ;)
[19:30:59] <PJBoy> TIL that emplace_back returns a reference to the element just created
[19:31:06] <PJBoy> as of C++17
[19:31:14] <PJBoy> and push_back doesn't
[19:31:16] <PJBoy> crazy world
[19:31:23] <rpav> push_back doesn't? wtf
[19:31:30] <PJBoy> yeah it's just void
[19:31:33] <rpav> i'm not sure why you'd _use_ push_back these days, but
[19:31:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:32:00] <PJBoy> push_back converts less
[19:32:14] <PJBoy> emplace_back does explicit conversion
[19:32:15] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:4825:a7cd:4110:b84d)
[19:32:29] <PJBoy> also emplace error messages suck
[19:33:26] <PJBoy> { vector<bool> v; v.push_back(cout); }
[19:33:26] <geordi> error: no matching function for call to 'vector<bool>::push_back(ostream&)'
[19:33:28] <PJBoy> { vector<bool> v; v.emplace_back(cout); }
[19:33:29] <geordi>  
[19:33:38] <LordKalma> emplace_back sometimes is impossible to guess what the fuck it wants
[19:33:44] <rpav> yeah though i don't really think the explicit conversion thing is bad or something
[19:33:51] <rpav> emplace is like "call the ctor"
[19:34:12] <imMute> LordKalma: isn't it "whatever the T ctor wants"?
[19:34:14] <rpav> if you have a constructor for what you want, it works
[19:34:22] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[19:34:57] *** Joins: mintograde (~mintograd@47.201.5.61)
[19:35:05] <PJBoy> I think my cout -> bool example says it all
[19:35:15] <PJBoy> so I like to go with push_back by default
[19:35:38] <PJBoy> emplace_back if move semantics are slow / non existent, or if I need the speed
[19:35:43] <rpav> i think if you're accidentally emplace_back'ing things you probably have bigger problems
[19:36:07] <PJBoy> could be in generic code
[19:36:27] <PJBoy> yeah idk, I take all the safety I can get
[19:36:55] <PJBoy> move semantics are generally close enough to free that emplace has negligible benefits
[19:37:22] <PJBoy> especially if xxx_back needs to do an allocation
[19:37:44] <rpav> i very often emplace_back as a non-default ctor call
[19:37:59] <PJBoy> push_back works for that too
[19:38:05] <PJBoy> you just gotta pay for a move on top
[19:38:21] <LordKalma> isn't that trimmed out when you use a temporary?
[19:38:29] <LordKalma> push_back(T()); isn't optimized out?
[19:38:47] *** Quits: pa (~pah@user/pah) (Ping timeout: 256 seconds)
[19:38:54] <PJBoy> { vector<B> v; v.push_back(B()); } using tracked::B;
[19:38:55] <geordi> B0* B0=>B1* B0~ B1~
[19:39:04] <PJBoy> nope, or at least not always
[19:39:16] <PJBoy> maybe with aggressive enough inlining
[19:39:53] <PJBoy> { vector<B> v; v.emplace_back(); } using tracked::B; // cf
[19:39:54] <geordi> B0* B0~
[19:39:56] *** Joins: pah (~pah@user/pah)
[19:51:21] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[19:53:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:54:00] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:59:16] *** Joins: Xardas (~Xardas@149.233.51.127)
[20:00:18] *** Joins: AmR (~AmREiSa@156.199.14.65)
[20:05:46] *** Joins: marius_ (~Username@92.81.151.141)
[20:07:24] *** Quits: robod34 (~Username@79.113.227.62) (Ping timeout: 240 seconds)
[20:07:33] *** marius_ is now known as robod34
[20:20:39] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:24:57] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[20:28:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:28:32] *** Joins: txtsd (~txtsd@user/txtsd)
[20:31:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:36:25] *** Quits: paul424 (~tom@ip-5-172-236-127.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[20:37:49] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:42:25] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:43:36] *** pah is now known as pa
[20:45:41] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:45:41] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:45:41] *** Joins: AssKoala (~asskoala@user/asskoala)
[20:46:04] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[21:02:27] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:06:36] *** Quits: causative (~halberd@user/causative) (Ping timeout: 240 seconds)
[21:07:43] *** Quits: theArthurDent (~user@user/theArthurDent) (Quit: ERC (IRC client for Emacs 27.1))
[21:07:46] *** Joins: seninha (~seninha@user/seninha)
[21:13:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[21:14:08] *** Joins: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[21:15:26] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[21:15:30] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[21:15:46] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[21:17:06] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Ping timeout: 272 seconds)
[21:18:23] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 272 seconds)
[21:25:39] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1dcb:8c2a:aa53)
[21:28:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:32:12] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:32:56] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:34:28] *** Joins: lxsameer (lxsameer@user/lxsameer)
[21:36:06] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:99b3:1dcb:8c2a:aa53) (Ping timeout: 252 seconds)
[21:38:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1bd:44f:edc3:e663)
[21:42:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:47] *** ChanServ sets mode: +v npaperbot
[21:44:58] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[21:45:51] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[21:47:06] *** Quits: proller (~p@2a02:6b8:0:40c:f7ae:3beb:5a9b:22d3) (Ping timeout: 252 seconds)
[21:53:35] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:55:46] *** Joins: pulse (~pulse@user/pulse)
[21:56:54] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:02:49] *** Quits: andreasbuhr (~quassel@p549dba39.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:04:15] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[22:05:15] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[22:05:33] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[22:05:55] *** Joins: kevr (~kevr@user/kevr)
[22:07:00] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[22:12:36] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:14:47] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[22:16:34] *** Joins: MatSharrow (~matthew@60.102.9.51.dyn.plus.net)
[22:16:46] *** Joins: niko3 (~mmk@198-200-74-246.cpe.distributel.net)
[22:18:09] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[22:26:37] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:78cb:b566:8ce8:c30c)
[22:27:02] *** Joins: causative (~halberd@user/causative)
[22:29:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:32:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:34:37] *** Quits: dld (~davidlowr@2601:197:600:1210:5c9e:f676:ddc7:b9f7) (Ping timeout: 240 seconds)
[22:35:47] *** Joins: dld (~davidlowr@2601:197:600:1210:c94f:64b7:1eea:84b1)
[22:45:29] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[22:45:39] *** Joins: Tobbi__ (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[22:46:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1bd:44f:edc3:e663) (Ping timeout: 252 seconds)
[22:49:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:50:39] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[22:51:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:52:43] *** Joins: Xardas (~Xardas@149.233.51.127)
[22:58:24] *** Joins: proller (~p@2a02:6b8:b081:6402::1:12)
[22:59:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:05:53] *** Joins: magla (~gelignite@55d4275f.access.ecotel.net)
[23:09:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[23:13:00] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:15:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:16:15] *** Joins: seninha (~seninha@user/seninha)
[23:16:45] *** Quits: proller (~p@2a02:6b8:b081:6402::1:12) (Ping timeout: 252 seconds)
[23:17:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:19:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:21:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:21:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:22:13] *** Quits: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu) (Quit: leaving)
[23:22:28] *** Joins: mitch0 (~mitch@84-236-101-128.pool.digikabel.hu)
[23:29:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:32:36] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[23:33:08] *** Quits: Tokamak (~Tokamak@172.58.191.81) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:33:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:34:12] *** Joins: Tokamak (~Tokamak@172.58.191.81)
[23:34:43] <leonardus> Does anyone here use CodeBlocks as their primary IDE? Wondering if it's still worth using today.
[23:34:47] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[23:35:55] <PJBoy> nope
[23:36:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[23:36:54] <leonardus> PJBoy: nope it's not worth using or nope you don't use it?
[23:37:06] <PJBoy> no one here uses it, and you shouldn't either
[23:37:15] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:37:16] <leonardus> why?
[23:37:56] <rpav> it's basically terrible compared to all the other options
[23:38:11] <rpav> if you want a decent free IDE, qtcreator or kdevelop
[23:38:45] *** Joins: proller (~p@2a02:6b8:b081:7212::1:22)
[23:38:56] <rpav> i wonder if kdevelop can have multiple editor frames yet
[23:39:27] <PJBoy> on the windows side it's just not as good as visual studio
[23:39:43] <PJBoy> its debugger is terrible by comparison
[23:39:44] <rpav> well sure .. though VS has plenty of its own issues
[23:40:03] <PJBoy> I don't think code blocks has anything like a profiler
[23:40:10] <rpav> VS has a lot of MS tools, but its editing and extensibility are a bit shit
[23:40:18] *** Quits: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Read error: Connection reset by peer)
[23:40:23] *** Joins: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[23:40:35] <rpav> i'm not sure i'd use VS for profiling either vs that one new one
[23:40:42] <PJBoy> code blocks doesn't get updated much either
[23:40:44] <pulse> VS is at least 25 years ahead of the pack
[23:40:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:40:58] <PJBoy> last update was March 2020
[23:41:00] <rpav> code blocks is definitely doa
[23:41:02] <PJBoy> and update before was 2017
[23:41:40] <PJBoy> also I tried to set up code blocks once and failed
[23:41:41] <rpav> https://github.com/wolfpld/tracy <- i haven't actually tried this yet, but
[23:42:12] <rpav> PJBoy: i didn't; but it sucks .. i tried customizing various editor keys, and it didn't have the ability, and that was my early nope
[23:42:42] <pulse> i'd still rather use C::B than Eclipse
[23:42:43] <rpav> this was before lsp stuff made "use IDE x" irrelevant
[23:43:06] <rpav> pulse: that's like saying you'd rather use DR-DOS than MS-DOS 5; well maybe, but why would you use either one
[23:43:11] <antto> me!
[23:43:29] <pulse> hmm dr-dos
[23:43:31] <antto> leonardus, que pasa?
[23:43:48] * antto slaps PJBoy with a Block of Code
[23:43:51] <leonardus> que pasAaaaaa
[23:43:58] <rpav> wtf; arch has kdevelop 21.12.2 .. but the kdevelop page only has 5.6.1
[23:44:01] <pulse> i just use vscode on linux tbh
[23:44:09] <pulse> it's the closest i can get to VS
[23:44:17] <pulse> on a non-windows system
[23:44:22] <leonardus> I don't like VS or Qt Creator
[23:44:24] <pulse> intellisense works pretty great too
[23:44:24] <rpav> vscode works, if you can't handle an Elder Editor
[23:44:37] <PJBoy> I dunno if I'd describe VS Code as similar to VS
[23:44:44] <PJBoy> probably not
[23:44:51] <leonardus> I'm trying to find a good C++ text editor or IDE
[23:44:51] <pulse> it's not, but compared to other options on linux it's my favorite
[23:45:07] <rpav> it looks visually similar therefore is 100% identical in all ways (;
[23:45:13] <PJBoy> anyways I agree, VS Code on linux
[23:45:23] <pulse> clion might be good too but it's not free
[23:45:26] <PJBoy> because I can work on windows over SSH
[23:45:35] <rpav> it's pretty shit, but many people don't want to buy CLion or configure vim/emacs so they can have the table scraps
[23:45:37] <leonardus> I'd like something more lightweight than VSCode
[23:45:51] <PJBoy> VS Code's pretty lightweight
[23:45:55] <rpav> leonardus: then vim or emacs + a lot of packaging/configuration
[23:46:20] <rpav> you can have all the features in a fraction of the space, though they may not be quite as pretty .. they will be 100x faster
[23:46:39] <rpav> though i'm not sure what vim has for git frontend
[23:46:50] <rpav> basically anything is better than vscode's shit though
[23:46:51] <leonardus> What about notepad++
[23:47:03] <pulse> i can't in good faith recommend vim for C++ because every time i try it i find myself using some buggy plugin that just won't work the way i want it to
[23:47:04] <rpav> if you're going to buy something, consider clion
[23:47:17] <pulse> almost better to use vim/c++ plainly and forego all the IDE-like features
[23:47:23] <pulse> but idk, some people apparently manage to make it work
[23:47:47] *** climax is now known as gentooclimax
[23:48:22] <rpav> dunno, i use emacs+lsp+stuff myself, but if you don't want an editor you can hack and have to do some assembly on, not the choice for you
[23:48:32] <antto> leonardus, so do you have any questions about Code::Blocks?
[23:48:38] <rpav> although i think doom/spacemacs are a sortof out-of-the-box preconfig
[23:49:11] <pulse> in any case, don't ask programmers for opinions. you'll get 35 conflicting ones
[23:49:23] <pulse> just use whatever you find the most comfortable
[23:49:31] <rpav> except code blocks
[23:49:33] <rpav> or perl
[23:49:37] <pulse> meh, C::B is... workable
[23:49:46] <pulse> depends on what you wanna do too
[23:49:59] <rpav> well so is borland c++ for dos
[23:50:06] <pulse> yeah but you can't build for modern systems with that
[23:50:09] <rpav> but there are better choices now
[23:50:32] <pulse> yeah. VS :P
[23:50:33] <leonardus> antto: yeah why don't people use it?
[23:50:50] <pulse> leonardus, mostly because it's buggy and better options indeed exist
[23:51:02] <antto> because they got gaming-grade PCs so running a whole webbrowser for an IDE is "fine"
[23:51:17] <leonardus> CodeBlocks is web based?
[23:51:20] <pulse> eh, VSCode is pretty efficient
[23:51:21] <antto> and it looks shiny
[23:51:35] <rpav> plus borland had an NT compiler, i bet you could still use it to write win32 apps
[23:51:39] <antto> leonardus, no, C::B is made with wxWidgets, in C++
[23:51:46] <antto> so it's very memory conservative
[23:51:49] <leonardus> antto: do you use CodeBlocks?
[23:51:58] *** Quits: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Read error: Connection reset by peer)
[23:52:03] *** Joins: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[23:52:05] <antto> yes, wasn't it clear already
[23:52:12] <pulse> C::B is at least marginally better than Dev-C++ :p
[23:52:14] <leonardus> Just wanted to make sure
[23:52:21] <rpav> ok so mold has issues with Qt
[23:52:40] <rpav> it will compile and work .. for the most part
[23:52:49] <leonardus> I think I'll at least try it out. I didn't like VSCode, Qt Creator, or Visual Studio
[23:53:06] <antto> https://i.imgur.com/WhdWOEP.png
[23:53:14] <pulse> i don't like Qt, and i can't stand the IDE
[23:53:43] <pulse> hmm, did Dev-C++ get better? this screenshot looks pretty nice https://raw.githubusercontent.com/Embarcadero/Dev-Cpp/master/Source/Images/screenshot800x600.png
[23:53:51] <pulse> i remember it was pretty basic in the past
[23:53:51] <leonardus> I didn't even try Qt Creator because you need to sign up for a Qt account in order to use it.
[23:53:53] <rpav> leonardus: https://emacs-lsp.github.io/lsp-mode/tutorials/images/completion.png
[23:56:41] <DSpider> should lambdas be marked as "constexpr auto" or just "auto"? PS: sorry... I asked this earlier today but I had to step away from the computer and the chat history was replaced by newer messages
[23:56:46] <baltazar> btw, not sure about vim, but neovim's builtin LSP works quite well for me (I'm using it with clangd)
[23:57:15] <rpav> baltazar: what does vim have for git?
[23:57:19] <rpav> vim/neovim
[23:58:02] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:78cb:b566:8ce8:c30c) (Quit: Client closed)
[23:58:19] <baltazar> rpav: idk, I just use cmdline for that plus I have a small git-blame plugin for neovim
[23:58:21] <antto> ooh, here's an old-ish screenshot: https://i.imgur.com/BBC8P74.png
[23:58:50] <rpav> D;
