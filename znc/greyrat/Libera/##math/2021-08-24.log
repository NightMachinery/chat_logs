[00:00:03] *** Joins: oxum (~oxum@122.172.205.112)
[00:00:44] *** Quits: wojtek (~wojtek@31.12.0.178) (Quit: Reconnecting)
[00:00:56] *** Joins: wojtek (~wojtek@31.12.0.178)
[00:03:02] *** Joins: derelict (~derelict@user/derelict)
[00:03:14] *** Quits: wojtek (~wojtek@31.12.0.178) (Client Quit)
[00:05:47] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[00:06:32] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[00:07:18] *** Joins: dauggy (~wojtek@31.12.0.178)
[00:09:47] *** Quits: daoudr_ (~daoudr@178.197.213.56) (Ping timeout: 240 seconds)
[00:12:38] *** Joins: bendersteed (~user@ppp046177076102.access.hol.gr)
[00:13:16] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:14:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:14:33] *** Lord_of_Life_ is now known as Lord_of_Life
[00:15:03] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[00:15:22] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[00:16:47] *** Quits: barravince (~vincenzos@2a02:c7f:f220:5500:12bf:48ff:fe76:8be2) (Ping timeout: 240 seconds)
[00:18:23] *** Quits: venue (~venue@user/venue) (Quit: was tired)
[00:19:34] *** Joins: tonitch (~tonitch@user/tonitch)
[00:21:22] *** Quits: mei (~mei@user/mei) (Ping timeout: 258 seconds)
[00:23:27] *** Quits: specing (~specing@user/specing) (Ping timeout: 250 seconds)
[00:23:44] *** Joins: madage (~madage@user/madage)
[00:24:31] <tonitch> I feel like this is a really dumb question but, is it possible to mathematically set a max to a number (I built a lerp function in my program and I don't want it to exceed the 100%)
[00:24:50] <tonitch> should I put a if t
[00:24:53] *** Joins: oriba (~oriba@dynamic-077-013-016-203.77.13.pool.telefonica.de)
[00:25:14] <tonitch> if: t >= 1 then: t = 1
[00:25:47] <dauggy> tonitch: t = max(t, 1)?
[00:25:58] <zgrep> Err, min* I assume?
[00:26:05] <dauggy> ah yes
[00:27:11] <tonitch> errr... i don't want to goo into programming discution ofc but i'm in cpp with the math.h lib and I know an if function would be ok but I was wondering if it was mathematicaly possible
[00:27:27] <tonitch> don't think there is max() in math.h tho
[00:27:37] <tonitch> *min() either
[00:28:07] *** Joins: specing (~specing@user/specing)
[00:28:12] <dauggy> https://en.cppreference.com/w/cpp/algorithm/min
[00:28:38] <dauggy> it's in the standard library
[00:29:51] *** Joins: avoidr_ (~avoidr@user/avoidr)
[00:29:51] <tonitch> in the algorithm lib yhea, and I see that it is doing it by if statement soo I suppose that this is not possible :p ty :D
[00:32:10] *** Quits: avoidr (~avoidr@user/avoidr) (Ping timeout: 268 seconds)
[00:32:20] *** avoidr_ is now known as avoidr
[00:35:24] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[00:35:52] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Client Quit)
[00:48:24] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:52:18] *** Joins: trinity_ (uid509475@user/trinity)
[00:53:14] <buster> tonitch, std::min(x,y) is likely to compile down to a single instruction (and avoid any branch penalty) on some architectures. (and it's worth remembering that many of the respectable math functions are implemented by complicated programs with plenty of branching.)
[00:55:44] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[00:57:41] <Z-module> Hi twoisprime. You know your nick is sometimes false, right?
[01:01:09] <mh_le> heya
[01:02:38] *** Joins: orbatos (~orbatos@user/orbatos)
[01:02:43] *** Quits: orbatos (~orbatos@user/orbatos) (Remote host closed the connection)
[01:03:07] *** Joins: orbatos (~orbatos@user/orbatos)
[01:05:37] <qergle> cherim: i did it too quickly and calculated the complement of the problem (seating arrangements that violate the husband-next-to-wife restriction)
[01:06:09] <qergle> so my answer plus GuestXX's answer should add up to 9!, but i
[01:06:16] <qergle> too lazy to scroll back to his answer
