[00:05:09] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[00:09:48] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[00:16:11] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:20:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:31:18] <PMunch> Hmm, is there a way to get the nimble path on runtime?
[00:53:05] <PMunch> I see there is `nimblepath="$home/.nimble/pkgs"` in the default nim.cfg file, and also references to a NIMBLE_PATH environment setting
[00:53:22] <PMunch> Along with `/opt/nimble/pkgs` on Linux systems
[00:53:41] <PMunch> Can someone on Windows tell me where their nimble path is?
[00:53:52] <PMunch> And is NIMBLE_PATH set on Windows?
[01:05:30] <FromDiscord> <System64 ~ Flandre Scarlet> why is this illegal?? https://media.discordapp.net/attachments/371759389889003532/949782228244758568/unknown.png
[01:06:32] <PMunch> You can't create cdecl procs anywhere but top-level
[01:06:52] <FromDiscord> <System64 ~ Flandre Scarlet> what does it mean? What should I do then?
[01:06:58] <PMunch> Well I guess you can, but it can't capture any variables as that would make it a closure, a feature which isn't available in C
[01:08:32] <PMunch> You either need to define `palette` as a global variable and define myRaster on top-level, or you need to do some magic in `setRasterCallback` to register a cdecl callback to the low-level api which will actually just call a Nim procedure which picks the Nim callback to call.
[01:08:38] <PMunch> Or something along those lines
[01:08:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:08:59] <PMunch> You know how many callback systems in C has a void* argument? This is why
[01:10:20] <FromDiscord> <System64 ~ Flandre Scarlet> Ah I see, interesting
[01:11:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:31] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:15:20] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "You either need to": and is it possible to make a variable global when you're in a proc?
[01:15:40] <PMunch> Well, there is the {.global.} pragma
[01:15:50] <PMunch> But you probably don't want to make it a global..
[01:15:53] <FromDiscord> <auxym> but that behaves closer to `static` in C
[01:17:19] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "But you probably don't": the thing is I have to pass this callback proc to a C libray
[01:18:49] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:40] <FromDiscord> <System64 ~ Flandre Scarlet> and are global vars cleaned by the GC?
[01:20:08] <PMunch> Well, they live as long as your program lives, so not really
[01:22:03] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Well, they live as": Humm, so I don't know what I can do, especially I can't pass user data
[01:22:59] <PMunch> What is the signature of the C procedure?
[01:23:20] <FromDiscord> <System64 ~ Flandre Scarlet> wait a mintute, I'll show you
[01:24:04] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rrv
[01:24:26] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rrw
[01:27:53] <FromDiscord> <System64 ~ Flandre Scarlet> there is no userdata
[01:33:25] <PMunch> Ah, so you're only ever supposed to have one callback set
[01:34:09] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Ah, so you're only": yeah exactly
[01:35:14] <PMunch> So what you do is have a proc which is cdecl and declared on top level, the only thing this procedure does is check that `not nimCallback.isNil` where `nimCallback` is a global variable. Then in your callback setter you set the nimCallback to whatever Nim proc you want, and give the C library the dummy procedure.
[01:36:52] <FromDiscord> <System64 ~ Flandre Scarlet> so what should I do?
[01:37:01] <PMunch> Exactly what I just told you to do
[01:38:07] <FromDiscord> <System64 ~ Flandre Scarlet> I didn't really understood :/
[01:39:51] <PMunch> Something like this:  https://play.nim-lang.org/#ix=3RrF
[01:40:51] <FromDiscord> <System64 ~ Flandre Scarlet> and this way I can pass any data?
[01:41:46] <PMunch> Yup, because the `nimRasterCallback` is now a Nim procedure
[01:42:00] <PMunch> I guess you might have to set it as `{.closure.}` though
[01:42:12] <FromDiscord> <System64 ~ Flandre Scarlet> okay I'll try this
[01:44:16] <FromDiscord> <System64 ~ Flandre Scarlet> and my userdata should go in my setRasterCallback, not cRasterCallback?
[01:44:56] <PMunch> Well I mean this way you can do it like before
[01:45:06] <PMunch> So the userdata is just captured from the scope
[01:46:33] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:51:30] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[01:51:36] <FromDiscord> <System64 ~ Flandre Scarlet> I don't think I understood very well :/ https://media.discordapp.net/attachments/371759389889003532/949793832499826708/unknown.png
[01:56:20] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RrI
[01:58:08] <FromDiscord> <loaf> how do you get the size of a list
[01:58:10] <PMunch> Well obviously..
[01:58:15] <PMunch> @loaf, len
[01:58:48] <PMunch> @System64_~_Flandre_Scarlet, if you take the code you first posted a screenshot of. And then you copy in the exact thing I posted to you. It should all work
[01:59:26] <FromDiscord> <System64 ~ Flandre Scarlet> Ah yeah it works!
[01:59:38] <PMunch> Great :)
[01:59:51] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RrJ
[02:00:08] <PMunch> Ah..
[02:00:11] <PMunch> Not quite..
[02:00:19] <PMunch> Why do you have setRasterCallback2?
[02:00:31] <PMunch> You don't need data as a global
[02:00:37] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Why do you have": to avoir conflicts with the original one
[02:00:40] <FromDiscord> <System64 ~ Flandre Scarlet> It's not global
[02:00:50] <FromDiscord> <System64 ~ Flandre Scarlet> I'm in my main proc
[02:00:52] <PMunch> You don't need another one
[02:01:01] <PMunch> Take your original code
[02:01:10] <PMunch> Delete setRasterCallback
[02:01:19] <PMunch> Copy in the snippet I sent you in its place
[02:01:26] <PMunch> Voila
[02:01:49] <PMunch> No setRasterCallback2, no passing in a user argument as an argument
[02:02:11] <PMunch> Just the exact code you had earlier, with palette defined in your procedure, and the callback using that defined right after
[02:02:15] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RrK
[02:02:33] <PMunch> Exactly
[02:02:59] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright, and how can I allow any type of data?
[02:03:18] <PMunch> By capturing it in your callback as a closure
[02:03:27] <PMunch> Like you did in your original code
[02:03:42] <PMunch> The one that gave you illegal capture errors
[02:03:51] <PMunch> With this that capture is now legal
[02:04:03] <FromDiscord> <System64 ~ Flandre Scarlet> okay I'll redo that, wait a few minutes
[02:06:31] <FromDiscord> <System64 ~ Flandre Scarlet> Ah it works!
[02:06:50] <PMunch> Hooray :)
[02:06:55] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/949797688583548968/unknown.png
[02:07:43] <PMunch> Nice!
[02:07:49] <FromDiscord> <System64 ~ Flandre Scarlet> so it works with anonymous functions↵But does it work with normal functions?
[02:07:54] <PMunch> By the way, Nim typically uses 2 spaces for indentation
[02:08:04] <PMunch> @System64_~_Flandre_Scarlet, yeah that should work just fine
[02:09:10] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "By the way, Nim": Ah good to know↵My IDE is set up to 4 Spaces
[02:09:40] <PMunch> Should be a fairly simple setting to set it to 2 spaces for .nim and .nims files :)
[02:10:44] <FromDiscord> <System64 ~ Flandre Scarlet> yeah it works for normal functions
[02:10:50] <FromDiscord> <System64 ~ Flandre Scarlet> gotta update it then
[02:12:02] <PMunch> Are you still using Futhark by the way, for the low-level stuff?
[02:12:41] <FromDiscord> <System64 ~ Flandre Scarlet> Yeah
[02:12:46] <FromDiscord> <System64 ~ Flandre Scarlet> it works so well!
[02:13:16] <PMunch> Great to hear :)
[02:13:29] <PMunch> Sorry you had so much trouble getting it set up though
[02:13:50] <PMunch> I've been surprised myself actually by how well it works :P
[02:14:10] <FromDiscord> <System64 ~ Flandre Scarlet> yeah I had an hard time↵But yeah, when the setup is done it works well, but the setup is hard
[02:14:22] <FromDiscord> <System64 ~ Flandre Scarlet> Btw, tried to update, doesn't work https://media.discordapp.net/attachments/371759389889003532/949799558265860106/unknown.png
[02:15:38] <PMunch> That's because you're trying to recursively run setRasterCallback
[02:15:50] <PMunch> Line 61 should be TLN_SetRasterCallback
[02:16:25] <FromDiscord> <System64 ~ Flandre Scarlet> ah now it works!
[02:18:17] <FromDiscord> <System64 ~ Flandre Scarlet> yeaaaah https://media.discordapp.net/attachments/371759389889003532/949800547492442172/unknown.png
[02:18:58] <PMunch> Nice, looks like a broken TV :P
[02:19:21] <FromDiscord> <System64 ~ Flandre Scarlet> This graphics engine is so powerful!
[02:19:31] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 245 seconds)
[02:20:09] <FromDiscord> <System64 ~ Flandre Scarlet> Btw is the method you provided safe? (I meant, no memory leaks or smth)
[02:20:52] <PMunch> Yup, should be perfectly safe
[02:21:10] <FromDiscord> <System64 ~ Flandre Scarlet> Aaaah nice!
[02:21:19] <PMunch> As long as the C code is doing something horrendous
[02:21:24] <PMunch> isn't*
[02:21:51] <FromDiscord> <System64 ~ Flandre Scarlet> In this case it should be the Engine's faumt
[02:21:54] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "faumt" => "fault"
[02:22:25] <NimEventer> New thread by Joekillian: Here is a Svelte + F# - Sutil., see https://forum.nim-lang.org/t/8981
[02:23:50] <FromDiscord> <System64 ~ Flandre Scarlet> I also wrote a color converter
[02:25:16] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RrO
[02:28:05] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Are you still using": https://github.com/WohlSoft/SDL-Mixer-X↵I should Futhark that
[02:29:11] <FromDiscord> <System64 ~ Flandre Scarlet> 'cause I think this library is a MONSTER
[02:29:18] <PMunch> Futhark ALL the things!
[02:31:22] <FromDiscord> <System64 ~ Flandre Scarlet> this lib support a ton of formats! even Chiptunes such as VGM, SPC, NSF, ...
[02:39:15] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/WohlSoft/SDL-Mixer-X/blob/master/include/SDL_mixer.h↵I guess I just need that
[02:50:31] <FromDiscord> <Schelz> I got a question if I use {.passC: "-I" &"/imgui-master/backends" & " -DIMGUI_DISABLE_OBSOLETE_FUNCTIONS=1".}
[02:51:23] <FromDiscord> <Schelz> when using header in a proc does the string need "/" at the start ?
[02:52:15] <FromDiscord> <Schelz> for example proc thisfunc(smth: bool): bool {.importcpp: "newfunc", header: "thisheader".}
[02:52:28] <FromDiscord> <Schelz> (edit) "proc" => "``proc" | ""thisheader".}" => ""thisheader".}``"
[02:53:24] <FromDiscord> <Schelz> cause the compile doesnt through any error with and without the "/" for the header
[02:55:27] <FromDiscord> <demotomohiro> That header pragma generate `#include "thisheader"`. Nim doesn't show error, but back end C++ compiler can.
[02:56:11] <FromDiscord> <Schelz> you mean nim cpp "file.nim" ?
[02:56:19] <FromDiscord> <demotomohiro> Why do you add "/" at the start?
[02:56:50] <FromDiscord> <Schelz> because i its one level up in a folder
[02:57:00] <FromDiscord> <Schelz> (edit) 04removed "i"
[02:57:38] <FromDiscord> <demotomohiro> yes. You are using `importcpp` so that means you are using c++ header file, isnt it?
[02:57:55] <FromDiscord> <Schelz> your right that was a dumb question nvm
[02:59:30] <FromDiscord> <demotomohiro> Then, I think you need to write `header:"../thisheader"` or add `--passC:../` compiler option.
[02:59:53] <FromDiscord> <Schelz> for ``{.passC: "-I" & "/some/folder".} `` needs "/" at the end ?
[02:59:57] <PMunch> Hmm, I tried to use fileExists in a nimscript file but I'm only getting this error: Script Error: /home/peter/.choosenim/toolchains/nim-1.6.4/lib/pure/os.nim:812:16 undeclared identifier: 'cmpic'
[03:00:08] <FromDiscord> <Schelz> In reply to @Schelz "for ``{.passC: "-I" &": with this question i should have started
[03:00:22] <FromDiscord> <demotomohiro> `--passC:-I../`
[03:01:09] <FromDiscord> <Schelz> i use in the code not in the compile command
[03:01:24] <FromDiscord> <Schelz> (edit) "i use ... in" 03added "it"
[03:04:22] <FromDiscord> <demotomohiro> I don't think `{.passC:"-I"&"/some/folder".} needs "/" at the end.
[03:08:22] <FromDiscord> <demotomohiro> `-I` gcc option always takes directory.
[03:16:40] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:53:29] <FromDiscord> <Schelz> can somebody tell me why this ``proc testfunc(a, b: cint): int {.importcpp: "testfunc(@)", header: "function.h".}  = result = a+b echo testfunc(2, 3)  ``↵returns  ``undefined reference to testfunc(int, int)``
[03:53:49] <FromDiscord> <Schelz> (edit) 04removed "" | "result" => "↵result"
[03:54:04] <FromDiscord> <Schelz> (edit) "``proc" => "↵``proc"
[03:54:14] <FromDiscord> <Schelz> (edit) "can somebody tell me why this ↵``proc testfunc(a, b: cint): int {.importcpp: "testfunc(@)", header: "function.h".} = ↵result = a+b echo testfunc(2, 3)  ``↵returns  ``undefined reference to testfunc(int, int)``" => "sent a long message, see http://ix.io/3RrZ"
[04:05:15] <PMunch> Get it while it's hot! Ratel v0.2.0: https://github.com/PMunch/ratel/tree/v0.2.0
[04:05:34] <FromDiscord> <Elegantbeef> Nah hot stuff burns
[04:05:48] <PMunch> @Elegantbeef, it uses nimscripter ;)
[04:05:55] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[04:06:04] <FromDiscord> <Elegantbeef> Shame
[04:06:26] <FromDiscord> <b4mbus> 
[04:06:43] <FromDiscord> <Elegantbeef> Like i said in the issue though pmunch `requires "compiler"` is nothing but a headache
[04:07:35] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[04:07:44] <PMunch> I know..
[04:07:52] <PMunch> But what I did in nimlsp is more of a headache :P
[04:08:34] <FromDiscord> <Elegantbeef> Just make a config with `--path:"$nim"` and it solves the versioning issue
[04:09:09] <FromDiscord> <Elegantbeef> Given that ratel is using it for a binary i think it should be fine
[04:09:11] <PMunch> Hmm, is $nim set automatically in a config?
[04:09:49] <FromDiscord> <Elegantbeef> It will use add the active compiiler's path to the library path, so yes
[04:10:04] <FromDiscord> <Elegantbeef> It's set somewhere atleast
[04:10:27] <FromDiscord> <Elegantbeef> Wonder if I can always use that config, no clue
[04:10:28] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[04:11:02] <FromDiscord> <Elegantbeef> Does putting a `nimscripter.nims` in `src` work... hmmm
[04:11:03] <PMunch> I just tried to pass it as a configuration option and that obviously failed
[04:11:18] <PMunch> What do you mean?
[04:11:55] <FromDiscord> <Elegantbeef> well ideally I make it so the program doesnt need `--path:"$nim"`
[04:12:12] <FromDiscord> <Elegantbeef> So if i move the config to the `src` directory, it might use that?
[04:12:36] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[04:14:00] <PMunch> Ah, no I don't think so
[04:14:15] <PMunch> That's why I do `import boardConf` in Ratel
[04:14:43] <FromDiscord> <Elegantbeef> Ugh
[04:14:58] <FromDiscord> <Elegantbeef> Adding nim to the path isnt the end of the world, but it very much isnt ideal
[04:15:08] <PMunch> Oh wait, it might actually use it for binary building
[04:31:37] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 240 seconds)
[04:46:16] <PMunch> Yup, just pushed a tiny fix to the repo to use that instead
[04:46:43] <PMunch> By the way, do you know why it messes up if I add the `os` import?
[04:47:22] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/issues/11
[04:47:34] <FromDiscord> <Elegantbeef> I looked at it, still not certain how to fix it
[04:47:47] <PMunch> Ah, bummer
[04:48:08] <PMunch> I wanted to check if a file existed in the upload hook and if not run the build hook manually
[04:48:17] <PMunch> *automatically
[04:50:28] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/blob/master/src/nimscripter/vmops.nim might work for you
[04:50:53] <FromDiscord> <Elegantbeef> Might need more ops exposed
[04:51:13] <PMunch> I guess I could check if it was listed in listFiles
[04:51:27] <FromDiscord> <Elegantbeef> Well that module can always be expanded
[04:52:14] <PMunch> Yeah I know, I just want to easy the friction of anyone wanting to use this
[04:54:33] <FromDiscord> <Mysterysib> Hey, are there any docs for lambdas in nim?
[04:55:00] <FromDiscord> <Elegantbeef> Lambdas in nim are just anonymous functions, there are sugar for `=>` and `->` in std/sugar
[04:56:02] <FromDiscord> <Elegantbeef> Do you have any more elaborate questions?
[05:02:22] <FromDiscord> <Mysterysib> Thanks. Just playing around with it atm, but I'm trying to figure out the position of the anon function in the params and how to define both the data type and lambda itself
[05:02:58] <FromDiscord> <Elegantbeef> `var myAnon = proc(a: int, b: string): float = echo a, " ", b`
[05:03:27] <FromDiscord> <Mysterysib> ahhh perfect tysm, proc was what I missed thought I could just write it
[05:04:26] <FromDiscord> <Elegantbeef> With sugar imported you can write it `(a: int, b: string): float => echo a, " ", b` afaik, though i dont really use anonymous procedures much
[05:05:16] <FromDiscord> <Mysterysib> I like them sometimes just so that the code is easier to read and I don't have hundreds of small functions doing one or two operations and are only used once
[05:06:04] <FromDiscord> <Evrensel Kişilik> meoooow
[05:06:15] <FromDiscord> <Evrensel Kişilik> i got a cute name for online debugger
[05:06:19] <FromDiscord> <Evrensel Kişilik> https://debugme.online/
[05:06:43] <FromDiscord> <Mysterysib> sadly debug.me was probably taken :l
[05:06:46] <FromDiscord> <Mysterysib> but it's still cute
[05:07:00] <FromDiscord> <Evrensel Kişilik> yessss
[05:07:40] <FromDiscord> <loaf> i know i keep asking dumb questions but is there a way to use all parts of an array in a proc without it making a for loop
[05:07:51] <FromDiscord> <Mysterysib> while ago I was making a website for certain crypto exchanges and I secured xch.io, and the exchange was named ExchangeDog, but I quit paying for it
[05:08:09] <FromDiscord> <Elegantbeef> "use all parts"?
[05:08:14] <FromDiscord> <loaf> like instead of
[05:08:56] <FromDiscord> <loaf> sent a code paste, see https://play.nim-lang.org/#ix=3Rs9
[05:09:10] <FromDiscord> <loaf> more like proc(array.all)
[05:09:16] <FromDiscord> <Elegantbeef> `import std/sequtils; myArray.apply(myProc)`
[05:09:42] <FromDiscord> <loaf> oh okay
[05:09:57] <FromDiscord> <Elegantbeef> can also do `applyIt`
[05:10:36] <FromDiscord> <Mysterysib> I was thinking of using a lambda for that but that's a lot better. Apply reminds me of something.. forget what, some data science language. maybe R
[05:11:05] <FromDiscord> <huantian> If proc doesnt return a value the for loop is probably the best
[05:11:07] <FromDiscord> <huantian> Imo
[05:11:11] <FromDiscord> <Elegantbeef> yea templates that expose an `it` are nicer than lambdas 😛
[05:11:25] <FromDiscord> <Elegantbeef> There is a variant of `apply` that doesnt mutate the collection
[05:11:51] <FromDiscord> <loaf> is it functionally still just a for loop?
[05:12:00] <FromDiscord> <Elegantbeef> Of course
[05:12:17] <FromDiscord> <Mysterysib> What's an `it`?
[05:12:28] <FromDiscord> <Elegantbeef> There's no otherway unless you inline it
[05:13:00] <FromDiscord> <Elegantbeef> `applyIt` makes a variable for each iteration which is `it` so you then can do things like `[10, 20, 30].applyIt(echo it)` which would echo each element
[05:13:30] <FromDiscord> <Mysterysib> That's really cool
[05:17:19] <PMunch> I really want Eritrea to start dishing out their TLD
[05:17:25] <PMunch> That way I could try and snatch pet.er
[05:17:42] <FromDiscord> <Elegantbeef> Ah yes pet her
[05:17:54] <PMunch> Pet her? I hardly know her!
[05:18:21] <FromDiscord> <Elegantbeef> Didnt expect that response from you 😀
[05:18:34] <PMunch> Haha, why not=
[05:18:48] <FromDiscord> <loaf> what if the proc takes multiple arguments
[05:18:50] <FromDiscord> <huantian> Sounds like Ethoslab :p
[05:19:25] <FromDiscord> <Elegantbeef> Expect it more from someone who was from an English country
[05:20:27] <FromDiscord> <Elegantbeef> Use `applyIt` or just use a for loop↵(@loaf)
[05:20:33] <FromDiscord> <Elegantbeef> There isnt any reason really to avoid it
[05:21:07] <PMunch> I've been on the internet for longer than some of the people in this channel, my repertoire of english jokes and slangs is quite impressive
[05:21:24] <FromDiscord> <Elegantbeef> But you still sometimes forget V and W are different 😛
[05:21:36] <FromDiscord> <loaf> i guess the main reason to avoid it is to easily fit it on one line
[05:21:48] <FromDiscord> <Elegantbeef> `for x in arr: proc(x, y)`
[05:21:53] <FromDiscord> <loaf> okay yeah
[05:21:54] <PMunch> Well that's just my pronunciation :P
[05:21:55] <FromDiscord> <Elegantbeef> We did it we one lined it
[05:22:07] <FromDiscord> <huantian> Why are people so obsessed with onelining
[05:22:19] <FromDiscord> <loaf> why bother with apply at all then
[05:22:19] <FromDiscord> <Elegantbeef> Cause one lining means the code is simple or something
[05:22:26] <FromDiscord> <Elegantbeef> It's why i write C++ on one line
[05:22:32] <FromDiscord> <huantian> It’s fine when its short like that, but its just horrible to read when it gets long
[05:22:33] <FromDiscord> <Elegantbeef> Cause apply is more FPy and there are FPy people
[05:22:43] <PMunch> I mean I tend to one-line quite a few things
[05:22:45] <FromDiscord> <huantian> And it mutates the array as well
[05:22:58] <FromDiscord> <Elegantbeef> It doesnt have to mutate
[05:23:04] <PMunch> Sometimes it just makes it easier to read the code if each line does it's own logic
[05:23:05] <FromDiscord> <Elegantbeef> There are pure variants of apply
[05:23:33] <FromDiscord> <Elegantbeef> I'm not opposed to one lining, but we're trying to one line for no real reason at points
[05:23:41] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[05:23:44] <FromDiscord> <Elegantbeef> Like i hate one line if expressions
[05:24:00] <PMunch> If you have one important function call between five loops which just applies a function to an array I'd rather have 6 lines 5 of which are fairly similar than a bunch of lines where I might miss the important procedure call
[05:24:22] <PMunch> I mean sometimes they make sense
[05:24:53] <PMunch> I love ternaries in C and the similar if statements in Nim
[05:25:01] <FromDiscord> <Elegantbeef> It's harder to read imo
[05:25:09] <PMunch> Naming things is hard, why create more variables than I have to?
[05:25:15] <FromDiscord> <Elegantbeef> I dont mind if expressions, i use them frequently, my issue is doing it on one line is just hard to read
[05:25:36] <PMunch> Ah right
[05:25:39] <PMunch> Fair enough
[05:25:49] <PMunch> Depends a bit on how long it is though
[05:26:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rsi
[05:26:15] <PMunch> For example for Ratel I had `if not fileExists(file): build(file & ".nim")` 
[05:26:18] <FromDiscord> <Elegantbeef> Eh i never one line if expressions regardless of length
[05:26:29] <PMunch> At the top of the procedures which needed the file
[05:26:38] <PMunch> That's a oneliner I appreciate
[05:26:56] <FromDiscord> <Elegantbeef> Yea i pretty much avoid all one liners
[05:27:01] <FromDiscord> <Elegantbeef> I prefer vertical over horizontal code
[05:27:09] <PMunch> Like the procedure itself is one line, so adding a two line check to it doesn't make much sense
[05:27:19] <PMunch> Now the procedure is suddenly more check than content
[05:27:49] <PMunch> Just flip your monitor around, problem solved!
[05:27:58] <FromDiscord> <Elegantbeef> Lol
[05:28:12] <FromDiscord> <Elegantbeef> I have 3 monitors so let me put them all in portrait mode so i can program in java
[05:28:19] <PMunch> Haha
[05:28:29] <PMunch> I actually have one of my three monitors in portrait mode
[05:28:34] <FromDiscord> <Elegantbeef> Fuck i meant landscape
[05:28:36] <PMunch> Mostly have IRC on it though :P
[05:28:47] <FromDiscord> <Elegantbeef> Hey same
[05:28:50] <FromDiscord> <Elegantbeef> Two landscape 1 portrait
[05:29:00] <FromDiscord> <Elegantbeef> portrait is best aspect for splitting imo
[05:29:06] <PMunch> Splitting?
[05:29:19] <FromDiscord> <Elegantbeef> having multiple windows open
[05:29:37] <PMunch> Hmm, I guess in a way
[05:29:37] <FromDiscord> <huantian> I wanna do that thing when you get two vertical monitors and have the, right next to each other
[05:29:39] <FromDiscord> <Elegantbeef> 9\:16 split gives you more horizontal space vs landscape
[05:29:58] <PMunch> True
[05:30:05] <FromDiscord> <Elegantbeef> Most applications benefit from horizontal space i reason
[05:30:18] <PMunch> I prefer moving my head side to side though
[05:30:57] <PMunch> But maybe I should try and flip all my monitors just for fun
[05:31:09] <PMunch> Maybe I'll like it
[05:31:09] <FromDiscord> <Elegantbeef> You dont game do you? 😛
[05:31:16] <FromDiscord> <huantian> Diagonal monitor is the best
[05:31:20] <PMunch> Haha, actually just gotten into some Elden Ring
[05:31:26] <PMunch> But man do I suck at that game
[05:31:36] <FromDiscord> <Elegantbeef> First soulslike?
[05:31:39] <PMunch> Well I guess it's a Souls game so it's supposed to be hard..
[05:31:43] <PMunch> Yeah
[05:32:00] <FromDiscord> <Elegantbeef> Ah welcome to hell
[05:32:14] <PMunch> I don't really play much to begin with, but this was so hyped and I was curious how it would run on Linux via Proton on day 1
[05:32:23] <FromDiscord> <Elegantbeef> My favourite souls like isnt even a from software game, it's salt and sanctuary so I'm an odd duck
[05:32:28] <PMunch> I mean the game is fun, and really cool aesthetic
[05:32:32] <FromDiscord> <Elegantbeef> Yea worked "flawlessly" day 1 i heard
[05:32:38] <FromDiscord> <Elegantbeef> Minus the stutter issue
[05:32:46] <FromDiscord> <huantian> I never got into those kinds of game
[05:33:01] <PMunch> Tiny stutter and I have to use experimental Proton, but apart from that it's flawless
[05:33:14] <PMunch> Oh and the cutscenes seems to be a bit oddly timed
[05:33:28] <PMunch> Like the text seems to go out of sync with the animations
[05:33:35] <FromDiscord> <huantian> I like games for the graphics but dying is too easy
[05:33:59] <PMunch> I do want to get my hands on an old wired Xbox 360 controller though
[05:34:17] <PMunch> I feel like the game was really designed for controllers
[05:34:18] <FromDiscord> <Elegantbeef> Wait are you playing it without a controller?
[05:34:29] <PMunch> Mhm, keyboard and mouse
[05:34:39] <FromDiscord> <Elegantbeef> Well there's your problem
[05:34:46] <PMunch> But I mean to get on my horse it's E+right arrow
[05:35:03] <PMunch> Which means I need to move my hand off-of my mouse and have two hands on the keyboard
[05:35:15] <PMunch> And moving is just a pain, basically impossible to strafe
[05:35:31] <FromDiscord> <Elegantbeef> Yea DS with KBM is masochistic
[05:35:44] <nrds> <06Prestige99> been playing apex on linux, been great
[05:35:50] <FromDiscord> <Elegantbeef> It's a game series that really only becomes playable with a controller
[05:35:54] <nrds> <06Prestige99> well, performance-wise
[05:36:08] <PMunch> Haha, good to know it's not just me thinking I'd be better at it with a controller :P
[05:36:11] <FromDiscord> <Elegantbeef> My trusty steam controller got me through most of DS1 and DS3 😛
[05:37:19] <FromDiscord> <Elegantbeef> Apex does work well, cant wait for more games. Still waiting for hunt showdown though seems that's never going to happen
[05:38:45] <PMunch> I remember playing MDK back in the day (yes I'm old..) and getting my ass handed to me. Tried it a few years later with a controller and wiped the floor with my enemies :P
[05:38:59] <PMunch> Some guys really just aren't meant for keyboard and mouse
[05:39:10] <FromDiscord> <Elegantbeef> MDK?
[05:39:16] <PMunch> Ooh, maybe I should get myself a steam controller
[05:39:22] <PMunch> https://en.wikipedia.org/wiki/MDK
[05:39:27] <FromDiscord> <Elegantbeef> Good luck they're no longer produced
[05:40:23] <PMunch> Old shooter game, IIRC it was one of the first games where you could actually snipe because the rendering engine was optimised so well you could actually have large levels without an oppressive distance fog
[05:40:36] <FromDiscord> <Elegantbeef> At one point valve sold their remaining stock for $1 a controller iirc, sadly was too late could've got a second one, i really like mine
[05:41:02] <PMunch> "Because the game was attempting things never before seen in a PC game, the team decided to write their own programming language from scratch."
[05:41:24] <PMunch> Damn, not even just a new rendering engine, they made a completely new language for it
[05:44:21] <PMunch> The game's original system requirements were a 60 MHz Pentium (although 90 MHz was recommended), 16MB of RAM, 17MB of hard drive storage for basic installation (37MB for full installation)
[05:44:35] <PMunch> For a fully software-rendered 3D game
[05:46:12] <FromDiscord> <typedeck> How do i know if {.compile:"foo.c".} gets linked correctly?
[05:46:35] <PMunch> It should be
[05:46:48] <PMunch> I mean I guess you know by testing if it works..
[05:47:00] <FromDiscord> <typedeck> It doesnt, lol
[05:47:21] <PMunch> What exactly are you trying to do?
[05:47:55] <FromDiscord> <typedeck> sent a code paste, see https://paste.rs/usa
[05:48:05] <PMunch> I mean the game is a bit basic, but all of this crammed into 17MB?! https://www.youtube.com/watch?v=7KxhI2xSfTA
[05:48:40] <FromDiscord> <typedeck> it crashes on execution
[05:49:10] <FromDiscord> <typedeck> when staticly linked it says can not find ref to said functions
[05:50:15] <FromDiscord> <typedeck> sent a code paste, see https://paste.rs/rz4
[05:50:17] <PMunch> Most likely you've just messed up a signature
[05:50:40] <PMunch> May I interest you in Futhark? The main example is basically exactly what you're trying to do: https://github.com/pmunch/futhark
[05:50:40] <FromDiscord> <typedeck> buggers, I ran it through c2nim
[05:50:59] <PMunch> Ah, well there's your problem :P
[05:51:12] <FromDiscord> <typedeck> oh c2nim not so good?
[05:51:25] <PMunch> Personally I've never gotten it to work
[05:51:31] <PMunch> Which is why I wrote Futhark
[05:52:11] <FromDiscord> <typedeck> oh nice, ill read up on it
[05:52:37] <PMunch> I mean you could literally just copy the example which actually uses stb_image
[05:53:40] <FromDiscord> <Elegantbeef> Depending what you're doing/wanting you could also use Pixie and dont have to worry about linking 😛
[05:53:44] <FromDiscord> <typedeck> which parts of the example is using the futhark module
[05:54:03] <FromDiscord> <typedeck> the importc: and static: ?
[05:54:14] <PMunch> Nope, only the importc
[05:54:25] <PMunch> static is just Nim for "run this on compile-time"
[05:54:47] <PMunch> It's only the `importc` block there which is Futhark code
[05:56:57] <FromDiscord> <typedeck> syspath for windows would be \mingw64\include instead of clang/12.0.1/include ?
[05:57:39] <PMunch> Yeah that would probably work
[05:58:00] <PMunch> You do need clang though for Futhark to work, so you can just as well link to the libraries that it ships
[05:58:50] <FromDiscord> <typedeck> I see that now, futhark failed ot build
[05:58:54] <FromDiscord> <typedeck> (edit) "ot" => "to"
[05:59:20] <PMunch> Yeah, see the installation section for more details: https://github.com/pmunch/futhark#installation
[06:00:04] <PMunch> The paths on Windows are also a bit messy. I've developed the whole thing on Linux and haven't found anyone with enough Nim knowhow who runs Windows to help me make it more robust over there
[06:00:45] <PMunch> But once you've got it running it's basically magic
[06:02:05] <PMunch> But I've gotta go to bed now
[06:02:11] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[06:02:15] <FromDiscord> <typedeck> ty for the help!
[06:07:07] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "The paths on Windows": yeah, I had some trouble too, but as he said, when everything is set up, it works like magic
[06:09:01] <FromDiscord> <typedeck> im fighting spaces in paths, lol
[06:09:53] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=3Rst
[06:10:29] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @typedeck "im fighting spaces in": ah exactly the same trouble as me
[06:10:41] <FromDiscord> <System64 ~ Flandre Scarlet> okay so copy the LLVM folder to C:\
[06:10:50] <FromDiscord> <typedeck> lol ofc
[06:10:55] <FromDiscord> <System64 ~ Flandre Scarlet> you did that?
[06:11:57] <FromDiscord> <typedeck> yeah that worked
[06:12:28] <FromDiscord> <typedeck> wonder how you pass spaces to --passL
[06:12:55] <FromDiscord> <System64 ~ Flandre Scarlet> no idea
[06:13:45] <FromDiscord> <huantian> Try putting literal “ around the path inside the string
[06:14:31] <FromDiscord> <typedeck> no that completely breaks it
[06:14:48] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=3Rsu
[06:15:09] <FromDiscord> <huantian> No like \”
[06:15:15] <FromDiscord> <huantian> (edit) "\”" => "\\”"
[06:15:20] <FromDiscord> <Elegantbeef> do \`--passL\:"-L'C\:\\Program Files\\LLVM\\bin'"
[06:16:01] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=
[06:16:08] <FromDiscord> <typedeck> breaks at the space still
[06:16:35] <FromDiscord> <Rika> doesn’t look like it to me
[06:17:11] <FromDiscord> <typedeck> for one its not looking in C: but in project directory in the last one
[06:17:23] <FromDiscord> <System64 ~ Flandre Scarlet> try --passL:"-L'C:/Program Files/LLVM/bin
[06:17:31] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "Files/LLVM/bin" => "Files/LLVM/bin'""
[06:17:56] <FromDiscord> <typedeck> sent a code paste, see https://paste.rs/ZP4
[06:18:17] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=3Rsv
[06:18:50] <FromDiscord> <typedeck> same with single quotes
[06:18:50] <FromDiscord> <System64 ~ Flandre Scarlet> and ``--passL:"-L'C:/Program\ Files/LLVM/bin'"`` ???
[06:19:17] <FromDiscord> <typedeck> same with that
[06:19:18] <FromDiscord> <Rika> That sounds broken, might be a nimble issue
[06:20:37] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:20:40] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @typedeck "same with that": try to copy the llvm folder into the root of C:
[06:21:14] <FromDiscord> <typedeck> yeah that worked
[06:21:23] <FromDiscord> <typedeck> im just fiddling with spaced directories
[06:21:58] <FromDiscord> <System64 ~ Flandre Scarlet> you still try with spaces?
[06:23:02] <FromDiscord> <typedeck> the spaces paths are broken, ill just use C:/, just that llvm installs in "Program Files" so kinda awkward
[06:23:52] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[06:24:04] <FromDiscord> <System64 ~ Flandre Scarlet> copy the LLVM folsze inro C:/↵And then, do --passL:"-LC:/LLVM/bin
[06:24:39] <FromDiscord> <typedeck> yup, works
[06:24:56] <FromDiscord> <System64 ~ Flandre Scarlet> nice
[06:25:04] <FromDiscord> <System64 ~ Flandre Scarlet> now what does it say? is it installed?
[06:25:34] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=
[06:25:55] <FromDiscord> <System64 ~ Flandre Scarlet> Nice, here you go!
[06:29:24] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[06:45:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:49:59] <FromDiscord> <typedeck> wow ok i figured out my problem at large, the mingw gcc in my path compiled binaries that were not compatable with the mingw that nim uses
[06:50:24] <FromDiscord> <typedeck> so i had to remove my previous mingw from the path and add the mingw dist with nim
[06:50:44] <FromDiscord> <typedeck> (edit) "dist" => "that distributes"
[06:51:22] <FromDiscord> <typedeck> maybe have {.compile} use dist mingw gcc instead of path
[06:52:05] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @typedeck "wow ok i figured": which bins are you trying to compile?
[06:52:43] <FromDiscord> <typedeck> {.compile:"stb_image.c".} works now, even without futhark
[06:54:32] <FromDiscord> <typedeck> sent a code paste, see https://play.nim-lang.org/#ix=3RsC
[06:56:46] <FromDiscord> <typedeck> hmm i guess i just didnt have mingw64 isntall
[06:56:57] <FromDiscord> <typedeck> (edit) "isntall" => "installed"
[06:57:23] <FromDiscord> <typedeck> (edit) "installed" => "installed, but {.compile} didnt check that it was using 64bit"
[06:57:36] <FromDiscord> <typedeck> (edit) "hmm i guess i just didnt have mingw64 installed, but {.compile} didnt check that it was using ... 64bit" 03added "32bit instead of"
[07:03:31] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[07:05:37] <FromDiscord> <Bung> wheres old version nim document ? didn't it exists here? https://nim-lang.org/documentation.html
[07:06:25] <FromDiscord> <xflywind> Which version you need?
[07:06:32] <FromDiscord> <Bung> 1.4
[07:07:08] <FromDiscord> <xflywind> You can specify the version number like this: https://nim-lang.org/1.4.8/tut1.html
[07:08:14] <FromDiscord> <Bung> oh, that's nice
[07:10:13] <FromDiscord> <Bung> I just add CI to nimlsp https://github.com/bung87/nimlsp/runs/5436490105?check_suite_focus=true  it only fails on windows, dont know the reason
[07:10:28] <FromDiscord> <Bung> sent a code paste, see https://play.nim-lang.org/#ix=3RsH
[07:31:05] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:33:00] <NimEventer> New thread by Elcritch: Fidget UI: animation using Nim async , see https://forum.nim-lang.org/t/8982
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:04:23] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[08:23:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:51:21] <FromDiscord> <sOkam!> In reply to @sOkam! "Any clue what I": Any pointers?↵It must be in front of my face, but I'm super lost↵What type of cases would case this type of error?
[08:51:47] <FromDiscord> <Elegantbeef> Isnt it clear
[08:51:50] <FromDiscord> <sOkam!> It has worked before, I'm just restructuring and I must have missed something
[08:51:57] <FromDiscord> <Elegantbeef> You're passing a ptr uint32 instead of Gluint
[08:52:24] <FromDiscord> <sOkam!> In reply to @Elegantbeef "You're passing a ptr": but its pointing to the same thing than before
[08:52:50] <FromDiscord> <Elegantbeef> Missing a converter?
[08:53:34] <FromDiscord> <sOkam!> This is the original code, I'm just changing the structure of things https://github.com/nimgl/nimgl/blob/309d6ed8164ad184ed5bbb171c9f3d9d1c11ff81/examples/topengl.nim#L72
[08:55:05] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Missing a converter?": could it change anything that the values are initialized like this? https://media.discordapp.net/attachments/371759389889003532/949900404559327302/unknown.png
[08:55:21] <FromDiscord> <Elegantbeef> `uint32`
[08:55:48] <FromDiscord> <sOkam!> it has worked before with uint32
[08:56:32] <FromDiscord> <Elegantbeef> What's the error
[08:56:32] <FromDiscord> <sOkam!> Which is what the original uses https://github.com/nimgl/nimgl/blob/309d6ed8164ad184ed5bbb171c9f3d9d1c11ff81/examples/topengl.nim#L55
[08:56:35] <FromDiscord> <Elegantbeef> And line
[08:57:54] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3RsV
[08:59:41] <FromDiscord> <demotomohiro> I think GLsizei is unsigned int.
[08:59:44] <FromDiscord> <sOkam!> Its something to do with the value of that vbo thing, but it has been uint32 before and it worked. So its something to do with the restructuring https://media.discordapp.net/attachments/371759389889003532/949901577630658610/unknown.png
[09:00:21] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[09:01:20] <FromDiscord> <demotomohiro> Which type is mismatching? Please show all error messages.
[09:01:33] <FromDiscord> <sOkam!> how to show more error messages?
[09:01:40] <FromDiscord> <Elegantbeef> lol
[09:01:48] <FromDiscord> <Elegantbeef> The issue is they're doing `glGenBuffers (1, x)`
[09:01:49] <FromDiscord> <sOkam!> thats all the output of the cli
[09:01:54] <FromDiscord> <Elegantbeef> That's a command call with tuple
[09:02:00] <FromDiscord> <Elegantbeef> remove the fucking spaces!
[09:02:20] <FromDiscord> <demotomohiro> Maybe, space between procedure name and `(` is a root of problem.
[09:02:38] <FromDiscord> <sOkam!> ill try
[09:03:01] <FromDiscord> <Elegantbeef> that's not a anger "fucking" it's a laughing
[09:03:08] <FromDiscord> <Rika> beef wtf so rude
[09:03:15] <FromDiscord> <Rika> i cant believe you
[09:03:16] <FromDiscord> <Elegantbeef> lol rika
[09:03:26] <FromDiscord> <sOkam!> 😄
[09:03:32] <FromDiscord> <Rika> now youre laughing at me wtf
[09:03:36] <FromDiscord> <sOkam!> welp that changed the error line, so yep
[09:04:28] <FromDiscord> <Elegantbeef> RFC\: Make it so a command call that gets a tuple unpacks the tuple if it matches the arguments of a overload 😛
[09:04:52] <FromDiscord> <Rika> not a good idea id say
[09:05:00] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[09:08:05] <FromDiscord> <Elegantbeef> I agree morer just a joke due to this common noob trabp
[09:08:08] <FromDiscord> <Elegantbeef> trap even
[09:08:40] <FromDiscord> <Rika> morer
[09:08:44] <FromDiscord> <Rika> trabp
[09:09:22] <FromDiscord> <Elegantbeef> Will i ever be able to type and proofread a message, guess we'll never know
[09:11:36] <FromDiscord> <demotomohiro> If Nim compiler found command call syntax with 1 tuple arugment but no matching proc, how about to show message like "You might need to remove space between proc name and `(`".
[09:11:48] <FromDiscord> <Elegantbeef> That also could work
[09:13:00] <FromDiscord> <Rika> that would work best
[09:13:15] <FromDiscord> <Elegantbeef> Who makes the PR?
[09:13:25] <FromDiscord> <Elegantbeef> I votee RIka
[09:13:33] <FromDiscord> <Elegantbeef> That one was my keyboard
[09:13:56] <FromDiscord> <Rika> no
[09:14:05] <FromDiscord> <Rika> i dont write PRs or RFCs
[09:14:10] <FromDiscord> <Rika> i mean i could but eh
[09:14:11] <FromDiscord> <Rika> idk
[09:14:37] <FromDiscord> <Mysterysib> Does nim have a this pointer?
[09:14:51] <FromDiscord> <Elegantbeef> Nim isnt C#/Java so no
[09:15:17] <FromDiscord> <Elegantbeef> Unless you mean something else by "this pointer\:
[09:15:19] <FromDiscord> <Mysterysib> Doesn't C++ have it to?
[09:15:33] <FromDiscord> <Elegantbeef> Sure Nim isnt OOP though
[09:15:38] <FromDiscord> <demotomohiro> C++ has this pointer.
[09:15:39] <FromDiscord> <Rika> nim is closer to C
[09:15:41] <FromDiscord> <Rika> than C++
[09:15:44] <FromDiscord> <Rika> in this sense
[09:15:45] <FromDiscord> <Elegantbeef> It doesnt have class scopes so `this` is ambigious
[09:15:59] <FromDiscord> <Mysterysib> Yeah I feel that it's like C
[09:16:05] <FromDiscord> <Rika> everything is a regular function and there is no sense of class bound functions
[09:16:39] <FromDiscord> <Rika> it (kinda) doesnt really need class bound functions because of mcs anyway
[09:16:44] <FromDiscord> <Elegantbeef> Well typehooks are type bounds 😀
[09:17:12] <FromDiscord> <demotomohiro> If first parameter is ref or pointer, I assume it is this pointer.
[09:17:20] <FromDiscord> <Rika> by type bound i mean functions that come with the type without explicit import or explicit storage in the type
[09:18:39] <FromDiscord> <demotomohiro> In C++, compiler implicitly pass this pointer. In Nim, you pass it explicitly.
[09:19:39] <FromDiscord> <loaf> so i have a list of objects, with some types being inherited from others. is there a way to only get a specific type?
[09:19:55] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3Rt5
[09:20:51] <FromDiscord> <loaf> like for example
[09:21:34] <FromDiscord> <Rika> In reply to @sOkam! "does object have a": objects are always empty unless specified otherwise, wdym?
[09:21:49] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rt7
[09:21:58] <FromDiscord> <loaf> oh
[09:21:58] <FromDiscord> <demotomohiro> You can search for a specific type using `of` operator.
[09:23:05] <FromDiscord> <sOkam!> In reply to @Rika "objects are always empty": ah nvm, i was reading the wrong number 🧑‍🔧
[09:23:47] <FromDiscord> <sOkam!> it printed a number once, fixed it, printed a different one next, but misread and thought it was the same line giving the issue
[09:25:40] <FromDiscord> <Rika> classic
[09:29:07] <FromDiscord> <Elegantbeef> Guess i should note that you can get any child type of that subtype with `of`
[09:38:32] <FromDiscord> <sOkam!> are there any extra tools to debug nim code, other than the compiler?
[09:38:54] <FromDiscord> <Elegantbeef> Native debuggers such as GDB
[09:39:12] <FromDiscord> <Elegantbeef> Since you're doing graphics programming render doc also is there to help
[09:40:16] <FromDiscord> <Elegantbeef> Unless you're talking about static errors
[09:40:23] <FromDiscord> <Elegantbeef> Then nope, read the error message and fix the code 😛
[09:50:37] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Since you're doing graphics": 😮 ty for pointing me towars that app? it looks poggers 🤩
[09:50:50] <FromDiscord> <sOkam!> (edit) "app?" => "app!"
[09:51:28] <FromDiscord> <Elegantbeef> I regret it now 😛
[09:59:52] <FromDiscord> <loaf> is there a way to make sure the output of a proc is the same subtype as the input if it can take anything under the larger type?
[10:21:09] <FromDiscord> <Mysterysib> i'm starting to go crazy with pointers and other stuff. I want to pass a function to another function, but not a C function, a regular nim function
[10:21:32] <FromDiscord> <Rika> You don’t need pointers for that
[10:21:58] <FromDiscord> <Mysterysib> Yeah I tend to think that when I cant figure something out the solution is pointers xd
[10:22:04] <FromDiscord> <loaf> i guess the easy way to do that would be to make the result of the function a variable right?
[10:22:36] <FromDiscord> <Rika> In reply to @loaf "i guess the easy": ?
[10:24:36] <FromDiscord> <Mysterysib> Basically I'm attempting to write a function that takes any function as its variable and determines the number of possible return values it has using a for loop (this would be awfully slow in runtime, but it's a statically compiled function)
[10:25:09] <FromDiscord> <Mysterysib> I was trying to figure out how to get the number of parameters a function has and the type
[10:25:24] <FromDiscord> <Mysterysib> I cannot do it when the function takes a string, but otherwise I can
[10:25:36] <FromDiscord> <Mysterysib> (edit) "can" => "should be able to"
[10:25:54] <FromDiscord> <Elegantbeef> Macros are how you'd do that
[10:26:38] <FromDiscord> <Elegantbeef> "possible return values" what does that even mean
[10:26:52] <FromDiscord> <Elegantbeef> `proc doThing: int` can return `int.low .. int.high`
[10:34:10] <FromDiscord> <Rika> You can’t make a runtime function do that (and it doesn’t really make sense to since functions are static anyway)
[10:39:05] <FromDiscord> <Mysterysib> sent a long message, see https://paste.rs/NgN
[10:39:13] <FromDiscord> <Mysterysib> I am like way over my head in this, but yeah
[10:39:42] <FromDiscord> <Mysterysib> I'm guessing there is a much better way to do this with something completely different
[10:39:43] <FromDiscord> <Rika> I can’t read that mess of format
[10:40:01] <FromDiscord> <Mysterysib> (edit) "http://ix.io/3Rto" => "http://ix.io/3Rtp"
[10:40:12] <FromDiscord> <Elegantbeef> Use 3 back ticks before and after (\`) and write the pseudo code
[10:42:12] <FromDiscord> <Elegantbeef> What are you after?
[10:42:30] <FromDiscord> <Elegantbeef> Like written words of the behaviour you want
[10:42:58] <FromDiscord> <Elegantbeef> Remove any aspect of Nim semantics or ideas from the equation
[10:43:33] <FromDiscord> <Mysterysib> In a nutshell, to create functions of which the runtime code and parameters are dependent on the results of another function, that reads a file and parses + does logic on it (so the output is variant on the file)
[10:44:15] <FromDiscord> <Elegantbeef> Is this a long winded way of saying "I want to precompute a cache from a file"?
[10:44:40] <FromDiscord> <Elegantbeef> What does this file contain?
[10:46:18] <FromDiscord> <Mysterysib> The file is a .har in json format storing a bunch of data from request and response to a site. And I guess the shortest way to say this is I want my code to be able to modify itself
[10:46:48] <FromDiscord> <Elegantbeef> Let's see one instance of this file and what you want to happen
[10:47:43] <FromDiscord> <Mysterysib> I think in C++ it's done with templates if that gives you a better idea of what I mean
[10:47:52] <FromDiscord> <Mysterysib> Okay
[10:48:01] <FromDiscord> <Elegantbeef> Nim has generics, but i still dont know what you're trying to do
[10:50:28] <FromDiscord> <Mysterysib> sent a long message, see http://ix.io/3Rtq
[10:51:14] <FromDiscord> <Mysterysib> (edit) "http://ix.io/3Rtr" => "https://paste.rs/NOH"
[10:51:21] <FromDiscord> <Mysterysib> (edit) "http://ix.io/3Rts" => "https://paste.rs/Fmp"
[10:51:50] <FromDiscord> <Mysterysib> now some other Json files may not have a certain datatype, like say some have floats, others do not
[10:53:22] <FromDiscord> <Mysterysib> Based on the number of datatypes (which are in my case statement cases) the original function with the case statement will recursively call itself until its worked with all the data in the json file (already got this part figure out)
[10:53:48] <FromDiscord> <Elegantbeef> I still have 0 clue what's going on
[10:54:05] <FromDiscord> <Elegantbeef> I'm looking for input -\> output for a single case
[10:54:07] <FromDiscord> <Mysterysib> I'm sooorrry okay let me try this
[10:54:31] <FromDiscord> <Mysterysib> A function has a case statement. There are different cases, that end in different returns.
[10:55:27] <FromDiscord> <Mysterysib> This function calls itself recursively while it processes all the data in a dataset, so you get a bunch of returns
[10:55:44] <FromDiscord> <Mysterysib> the return value is stored in an array, or even just echoed
[10:56:18] <FromDiscord> <Mysterysib> but based on the amount and datatype of these possible cases and their returns, I want to define a custom function
[10:56:50] <FromDiscord> <Mysterysib> for instance, with a dynamic number of parameters
[10:56:57] <FromDiscord> <Elegantbeef> Well i can only say read the json data from a macro and emit the procedures
[10:57:05] <FromDiscord> <Elegantbeef> Cause i cannot understand anything you're wanting
[11:00:23] <FromDiscord> <Rika> `that end in different returns` makes no sense, same object with different kind?↵`so you get a bunch of returns` also makes no sense, what does this mean?
[11:00:34] <FromDiscord> <Rika> `but based on the amount and datatype of these possible cases and their returns` ?????????
[11:06:53] <FromDiscord> <Mysterysib> I think I need to use macros. The docs on them are confusing to me, so I will have to practice until I get it
[11:07:12] <FromDiscord> <Mysterysib> but look, this is the code with the different returns and datatypes
[11:07:20] <FromDiscord> <Mysterysib> sent a long message, see http://ix.io/3Rtx
[11:07:31] <FromDiscord> <Mysterysib> (edit) "http://ix.io/3Rtx" => "https://paste.rs/ULN"
[11:08:59] <FromDiscord> <Mysterysib> (edit) "long message," => "code paste," | "http://ix.io/3Rty" => "https://play.nim-lang.org/#ix=3Rtz"
[11:11:56] <FromDiscord> <feldharke> What GUI should I use if I want populate data in a grid(view)?
[11:16:50] <FromDiscord> <Elegantbeef> Are you talking about what library or what program? 😀
[11:24:00] <FromDiscord> <feldharke> In reply to @Elegantbeef "Are you talking about": Library I think. Programming with Nim
[11:27:32] <FromDiscord> <Elegantbeef> You could use illwill if you want TUI. Gintro, wNim(if windows), or WxNim should be useable for a table gui, not that i know how to use any of them well 😛
[11:31:34] <FromDiscord> <feldharke> In reply to @Elegantbeef "You could use illwill": Havent' found a database front-end example yet. Do you know one?
[11:31:55] <FromDiscord> <Elegantbeef> Nope
[11:39:34] <FromDiscord> <Hamid_Bluri> Hey, I wanna copy a `NimNode` without it's children
[11:39:43] <FromDiscord> <Hamid_Bluri> what should I do?
[11:40:04] <FromDiscord> <Elegantbeef> `copyNimNode`
[11:41:08] <FromDiscord> <Hamid_Bluri> thanks beef
[11:41:16] <FromDiscord> <Elegantbeef> Or just `newNimNode(myNode.kind)`
[12:01:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[12:03:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:13:08] *** Quits: [RMS] (~rs@genoce.org) (Ping timeout: 256 seconds)
[12:15:11] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[12:19:56] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[12:20:53] <FromDiscord> <aph> sent a code paste, see https://play.nim-lang.org/#ix=3RtN
[12:21:06] <FromDiscord> <aph> idk why but it works with code runner
[12:21:20] <FromDiscord> <aph> i want to use vscode's terminal because code runner's one is read only
[12:21:35] <FromDiscord> <aph> `nim c --run test.nim` is the command i ran
[12:21:41] <FromDiscord> <aph> thx :)
[12:24:16] <FromDiscord> <demotomohiro> Did you try to recompile the code while your executable is still running?
[12:26:38] <FromDiscord> <demotomohiro> If so, you need to stop your `test.exe`.
[12:27:36] <FromDiscord> <demotomohiro> Maybe anti-virus software open `test.exe`.
[12:37:55] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[12:44:52] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[12:56:54] *** Joins: rawrrr (uid540880@id-540880.lymington.irccloud.com)
[13:00:50] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[13:05:24] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[13:26:47] <FromDiscord> <aph> oh thx
[13:26:54] <FromDiscord> <aph> sorry late response
[13:37:05] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[13:40:31] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:305c:3b7d:bfc5:900f) (Remote host closed the connection)
[13:47:40] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[13:49:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[14:36:49] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[14:41:36] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[14:42:53] <NimEventer> New post on r/nim by Wouter-van-Ooijen: specify address of a variable, see https://reddit.com/r/nim/comments/t7wnrr/specify_address_of_a_variable/
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] <NimEventer> New thread by Mardiyah: The dynamical scope of proc, see https://forum.nim-lang.org/t/8986
[15:37:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:41:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[15:42:12] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[15:47:00] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[16:08:01] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[16:18:27] *** Joins: [R] (~rs@genoce.org)
[16:57:29] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[16:58:25] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[16:58:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[17:02:44] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[17:37:49] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3RuS
[17:40:09] <FromDiscord> <auxym> nim doesn't support anonymous unions so you'll need to create an object type def for the union
[17:41:12] <FromDiscord> <Rika> sent a code paste, see https://paste.rs/kwL
[17:42:08] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3RuT
[17:47:53] <FromDiscord> <Waldecir Santos> How do I check if a variable is nil ? I'm doing `if isNil(myObj):`  and I keep getting `SIGSEGV: Illegal storage access. (Attempt to read from nil?)`
[17:48:24] <FromDiscord> <Rika> Then a different variable is nil
[17:49:40] <FromDiscord> <Waldecir Santos> But the traceback points to `if isNil(myObj):`
[17:52:45] <FromDiscord> <Rika> more info is needed then
[18:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[18:14:14] *** Joins: arkurious (~arkurious@user/arkurious)
[18:39:46] <Amun-Ra> there's sth wrong with myObj (type/address it points to/etc.)
[18:41:27] <FromDiscord> <Rika> okay...?
[18:51:33] <Amun-Ra> I mean that's my reply for Waldecir Santos
[18:51:49] <FromDiscord> <Rika> didnt realise
[18:51:59] <FromDiscord> <Rika> i dont think that would be the case
[18:53:26] <Amun-Ra> I had silimar issue, I forgot what was the case
[18:53:29] <Amun-Ra> cause*
[19:02:16] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[19:02:48] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:05:58] *** Joins: PMunch (~PMunch@user/pmunch)
[19:15:56] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[19:16:13] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[19:38:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[19:48:21] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[19:53:06] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[20:11:05] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[20:32:31] <FromDiscord> <Phil> ... I am confused, why does nim take issue with some characters in const strings?↵`const ID = "(?P<id>[\d]+)"` this causes a "Invalid character constant" error during compilation.↵The goal I'm trying to achieve with this is having constants of partial regular expressions to put into my URLs. Because typing the same regex for a URL parameter that is just going to denote "this is the name of a dnd campaign" gets old fast (same for ids of 
[20:33:24] <FromDiscord> <Rika> `\d` is an escape character
[20:33:32] <FromDiscord> <typedeck> try """ """
[20:33:46] <FromDiscord> <Rika> either make it raw `r"(?P<id>[\d]+)"` or escape the `\` by doubling `\\`
[20:33:53] <FromDiscord> <Phil> Ohhh wait, when I wrote it in the url as a `re""` it didn't interpret that as such and thus didn't cause issues
[20:34:01] <FromDiscord> <Rika> yes
[20:34:04] <FromDiscord> <Phil> (edit) "`re""`" => "`re"<Lots of stuff>"`"
[20:34:05] <FromDiscord> <typedeck> or is """ """ just multiline ?
[20:34:12] <FromDiscord> <Rika> In reply to @typedeck "or is """ """": just multiline
[20:34:16] <FromDiscord> <Rika> actually
[20:34:19] <FromDiscord> <Rika> idk if it makes it raw
[20:34:21] <FromDiscord> <Rika> i dont think it does
[20:34:41] <FromDiscord> <Phil> Fixes compiling issues as well though
[20:35:01] <FromDiscord> <Phil> I'd like to write that as string for now since I assemble these strings into actual regex's later
[20:35:14] <FromDiscord> <Rika> wdym
[20:35:20] <FromDiscord> <Rika> raw strings are just strings
[20:35:28] <FromDiscord> <Rika> interpreted differently
[20:35:33] <FromDiscord> <Rika> but ultimately still strings
[20:35:42] <FromDiscord> <Phil> doesn't re transform a string into a special type of sorts?
[20:35:50] <FromDiscord> <Phil> Or did I jump somewhere?
[20:35:51] <FromDiscord> <Rika> re does
[20:35:53] <FromDiscord> <Rika> r doesnt
[20:36:03] <FromDiscord> <Phil> Ohhhhh check
[20:36:52] <FromDiscord> <Phil> Well, """ appears to also do raw string (I think?), I'll stick with r though since that conveys more clearly that its intentionally a raw string
[20:37:49] <FromDiscord> <Rika> it probably does
[20:39:12] *** Joins: rockcavera (~rc@192.12.112.199)
[20:39:13] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[20:39:13] *** Joins: rockcavera (~rc@user/rockcavera)
[20:39:27] <FromDiscord> <Phil> now, time to rewrite like 30 urls
[20:49:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:09:15] <FromDiscord> <DMI-1407> btw nim uses clang by default to compile C code right ?
[21:09:27] <FromDiscord> <DMI-1407> (edit) "?" => "?↵(i forgot where i found the info)"
[21:09:42] <FromDiscord> <typedeck> on windows its gcc
[21:09:47] <FromDiscord> <DMI-1407> crap
[21:10:00] <FromDiscord> <DMI-1407> can i change that ?
[21:10:22] <FromDiscord> <typedeck> https://nim-lang.org/docs/nimc.html#compiler-selection
[21:10:50] <FromDiscord> <DMI-1407> ok
[21:10:54] <FromDiscord> <DMI-1407> (edit) "ok" => "ok, thanks"
[21:13:44] <FromDiscord> <typedeck> its defined in nim-1.6.4\config\nim.cfg
[21:18:27] <rockcavera> DMI-1407, I use gcc, clang, vcc and tcc on windows with no problems.
[21:20:09] <rockcavera> you can add the "bin" folder of each compiler in the %PATH% of windows, or configure the config\nim.cfg
[21:20:37] <rockcavera> just the vcc that you don't need...
[21:34:00] <FromDiscord> <b4mbus> How would I make nimlsp recognize nimble packages?
[21:40:45] <FromDiscord> <ynfle> In reply to @b4mbus "How would I make": It should if they are in ~/.nimble/pkgs and imported. I does for me
[21:40:49] <FromDiscord> <ynfle> Not package names though
[21:41:03] <FromDiscord> <ynfle> Is there a way to check if a variable is var or let?
[21:44:11] <FromDiscord> <DMI-1407> dunno if you can catch the exception... but you cant write a second time into an let... 😅
[21:45:09] <FromDiscord> <ynfle> Ya but I want to compiler if it's not
[21:45:21] <FromDiscord> <ynfle> stil want to
[21:45:50] <FromDiscord> <b4mbus> In reply to @ynfle "Is there a way": prolly with macros?
[21:46:47] <FromDiscord> <b4mbus> In reply to @ynfle "It should if they": some of them are there and some not
[21:46:57] <FromDiscord> <b4mbus> w8
[21:47:39] <FromDiscord> <b4mbus> ok it does indeed work, I had to nimble-run again
[21:47:43] <FromDiscord> <b4mbus> thanks
[21:50:18] <FromDiscord> <b4mbus> ok
[21:50:21] <FromDiscord> <b4mbus> got it
[21:51:45] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Yeah, see the installation": https://github.com/WohlSoft/SDL-Mixer-X↵Okay I want to Futhark this (I have the header and the DLL) but the header includes some other SDL2 headers, so, I'm affraid it becomes messy
[21:58:05] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[22:02:25] <FromDiscord> <ynfle> In reply to @b4mbus "prolly with macros?": I can't seem to figure out a way
[22:03:41] <FromDiscord> <huantian> ~~what if you check if assigning to it compiles~~
[22:04:15] <FromDiscord> <ynfle> In reply to @huantian "~~what if you check": True either way for some reason
[22:06:10] <FromDiscord> <krisppurg> sent a long message, see http://ix.io/3Rwq
[22:06:44] <FromDiscord> <huantian> I’d assume modals are still a wip?
[22:08:24] <FromDiscord> <huantian> Is that what they’re called I cannot remember
[22:08:49] <FromDiscord> <krisppurg> well I actually was implementing them like 2 or 3 weeks ago, but then I had to put it on hold.
[22:12:59] <FromDiscord> <huantian> Ah neato
[22:13:23] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @krisppurg "Sorry for the late": Oh alright! I should give it a try
[22:13:56] <FromDiscord> <huantian> I would recommend using dimscmd if you’re going to do commands
[22:15:17] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @huantian "I would recommend using": is it the same thing?
[22:26:52] <FromDiscord> <huantian> It’s like an “addon”
[22:31:41] <FromDiscord> <krisppurg> dimscmd is much more user friendly basically
[22:32:03] <FromDiscord> <System64 ~ Flandre Scarlet> Good to know
[22:43:41] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:01:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[23:06:12] <FromDiscord> <gibson> sent a code paste, see https://play.nim-lang.org/#ix=3RwH
[23:07:29] <Amun-Ra> don't assume string layout
[23:09:36] <FromDiscord> <gibson> okay, thanks. I'll avoid this whole debacle.
[23:10:30] <Amun-Ra> I mean it will, sooner or later, shoot you in your foot (prolly sooner than later) ;)
[23:14:47] <FromDiscord> <gibson> I was trying to give an often-called external C function direct access to a list of complex nim datatype for fast read access, while retaining fancy nim types in the object, such as string. I'll force the nim-side to use cstring with a "Deal with it" attitude. I'll use cstringutils where I can.
[23:16:27] <Amun-Ra> I usually represent low level api 1:1 and then write high level api that protects me/the user from shooting the foot
[23:21:13] <FromDiscord> <gibson> Hmm, I think what I'm looking for is something like an Entity Component System, where the high-level nim code would look like an object description, but the underlying code would be separated arrays that would allow easy interoperability with C. For now I'll do something simpler.
[23:22:09] <FromDiscord> <gibson> (edit) "description," => "description of related fields," | "description of related fields,but the underlying code would be separated arrays ... that" 03added "by field"
[23:26:14] *** rwb is now known as rb
[23:29:56] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[23:34:31] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 245 seconds)
[23:45:26] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3RwP
[23:52:33] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3RwQ
[23:52:35] <FromDiscord> <tandy> this doesnt work \:(
[23:56:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
