[00:10:15] <NimEventer> New thread by Cnerd: Wrapping cpp code, see https://forum.nim-lang.org/t/8339
[00:10:19] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[00:12:37] *** Joins: xet7 (~xet7@user/xet7)
[00:17:11] *** Quits: _KurtGodel_ (~AdiIRC@180.150.11.50) (Read error: Connection reset by peer)
[00:17:33] *** Joins: _KurtGodel_ (~AdiIRC@180.150.11.50)
[00:19:04] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[00:26:19] <FromDiscord> <RattleyCooper> is it possible to get the string result of `execShellCmd`?  It doesn't appear to write results to `stdout` or anything like that.  `osproc` procs only work on binaries like exes and whatnot (`dir` throws an error saying command is not found on windows when using `osproc`).
[00:27:01] <FromDiscord> <RattleyCooper> `execCmdEx` works on binaries but not commands like `dir`
[00:28:14] <FromDiscord> <RattleyCooper> (edit) "`execCmdEx` works on binaries but not ... commands" 03added "system"
[00:28:34] <FromDiscord> <demotomohiro> I think you can call command like `dir` with `osproc` procs by using `poEvalCommand`.
[00:28:48] <FromDiscord> <RattleyCooper> You would think that would be the case but it's not
[00:29:18] <madprops> not sure how im using strformat wrong here https://play.nim-lang.org/#ix=3wim
[00:29:54] <FromDiscord> <RattleyCooper> In reply to @demotomohiro "I think you can": even with `poEvalCommand` I get the error: `"Requested command not found: \'dir\'. OS error:`
[00:30:23] <madprops> the first one doesn't work, the second one does
[00:31:57] <FromDiscord> <RattleyCooper> `strformat` has syntax like `fmt"{var1}, {var2}, {var3}"`
[00:33:30] <FromDiscord> <Yardanico> In reply to @RattleyCooper "even with `poEvalCommand` I": can you show the code you're using to use execShellCmd?
[00:33:42] <FromDiscord> <Yardanico> I think I know why it's failing
[00:34:30] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3wip
[00:34:34] <FromDiscord> <Yardanico> yeah, exactly, maybe he missed poUsePath
[00:34:42] <FromDiscord> <Yardanico> also no need for cmd /c :P
[00:35:26] <FromDiscord> <Yardanico> ah wait, maybe it's different on windows
[00:35:34] <FromDiscord> <Yardanico> on linux it's an actual binary, seems like it's not on windows?
[00:35:50] <FromDiscord> <Yardanico> also @RattleyCooper if you just need to know the current directory, you don't need to use osproc
[00:35:56] <FromDiscord> <RattleyCooper> Well `execShellCmd` doesn't take any `po` options
[00:35:58] <FromDiscord> <enthus1ast> does one know how to catch a compile time exception?
[00:36:00] <FromDiscord> <Yardanico> https://nim-lang.org/docs/os.html#getCurrentDir
[00:36:30] <FromDiscord> <RattleyCooper> No, not looking for cwd, I actually need to issue system commands
[00:36:37] <FromDiscord> <RattleyCooper> And get the result
[00:37:09] <FromDiscord> <RattleyCooper> I am testing with @demotomohiro's example really quick
[00:37:28] <FromDiscord> <haxscramper> Inside of a macro you can just use `try/catch`
[00:37:29] <FromDiscord> <haxscramper> Outside of a macro or inside?
[00:37:31] <FromDiscord> <RattleyCooper> My original command was `var procRes = execCmdEx(theCommand, options={poEvalCommand, poUsePath})`
[00:37:39] <FromDiscord> <haxscramper> But when macro is expanded there is no way
[00:37:51] <FromDiscord> <enthus1ast> i want to use doAssertRaises in a test
[00:37:57] <FromDiscord> <enthus1ast> outside a macro
[00:38:21] <FromDiscord> <haxscramper> you want to check whether macro actually gives and error on invalid input?
[00:38:27] <FromDiscord> <enthus1ast> yes
[00:38:39] <FromDiscord> <haxscramper> no, there is no way to test it using only code
[00:38:43] <FromDiscord> <haxscramper> you might use `testament` for this, and check for compilation output
[00:38:49] <FromDiscord> <enthus1ast> i could mybe testament
[00:38:51] <FromDiscord> <enthus1ast> yes
[00:38:52] <FromDiscord> <enthus1ast> \:)
[00:39:19] <FromDiscord> <haxscramper> https://nim-lang.org/docs/testament.html I thin `nimout:` is what you need
[00:39:34] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wiq
[00:39:46] <FromDiscord> <haxscramper> or errmgs
[00:42:21] <FromDiscord> <enthus1ast> i'm thinking, if macro exceptions are not catchable it might be a bad idea to throw them at all
[00:43:08] <FromDiscord> <enthus1ast> on the other side, it is a non recoverable error
[00:44:31] <FromDiscord> <haxscramper> I do throw exceptions in macros, because it allows for more natural code in the macro implementation
[00:44:32] <FromDiscord> <haxscramper> just raise things
[00:44:40] <FromDiscord> <enthus1ast> yes
[00:44:57] <FromDiscord> <haxscramper> I've also added helper tools for exceptions that allow me to actually produce adequate error messages
[00:45:06] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wit
[00:45:23] <FromDiscord> <RattleyCooper> @demotomohiro , @Yardanico, thanks for the tips!  Got it working.  It needed the `cmd /c` prefixed to the command.  That was the piece I was missing.
[00:45:42] <FromDiscord> <haxscramper> I get stacktrace and actually error that shows what the fuck is wrong in the code, and no just "\<line\>\:\<column\> \<someone messed up something here\>"
[00:45:51] <FromDiscord> <enthus1ast> oh nice [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)
[00:45:51] <FromDiscord> <haxscramper> And `error` had some troubles with that
[00:46:33] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 248 seconds)
[00:48:34] <madprops> so apparently what goes inside vars in &"{...}" is not evaluated with the currernt imports, but from the strformat namespace, if that's make sense. so i have to calculate some stuff beforehand
[00:57:12] <FromDiscord> <Yardanico> that's not exactly true, strformat's macro expands in your current invocation site
[00:57:14] <FromDiscord> <Yardanico> afaik
[00:57:59] <madprops> i had to precalculate some variables though, or else it failed "no parseInt" it would say
[00:58:18] <madprops> so Im guessing it had no access to strutils ?
[00:59:06] <madprops> i'll run a quick test
[00:59:48] <madprops> ah weird it works in the playground
[01:02:55] <madprops> oh i forgot one little detail
[01:02:59] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wiy
[01:03:14] <madprops> it only wouldn't work in the integration test
[01:03:28] <FromDiscord> <enthus1ast> strange my (matrix) element always renders nim code blocks super strange
[01:04:16] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wiz
[01:05:53] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:05:53] <FromDiscord> <enthus1ast> it is the\: `errormsg` and the `file`
[01:08:15] <FromDiscord> <haxscramper> In reply to @Yardanico "that's not exactly true,": it cannot bind symbols from the surrounding scope
[01:08:48] <FromDiscord> <haxscramper> or rather, it injects idents, while symbol might be a gensym so they are considered different
[01:11:03] <madprops> if I run the integration test, it fails here:  `return &"{numberwords(parseInt(split[0]))} point {numberwords(parseInt(split[1]))}"`
[01:11:11] <madprops> but if I run it inside the file itself it works fine
[01:13:37] <madprops> it's this known, or should I make a forum thread?
[01:14:51] <FromDiscord> <haxscramper> it fails how exactly?
[01:15:07] <madprops> it complains parseInt doesn't exist
[01:15:17] <FromDiscord> <haxscramper> You can make a multifile example in https://wandbox.org/
[01:15:26] <FromDiscord> <haxscramper> try importing parseutils?
[01:15:26] <madprops> ok
[01:15:55] <madprops> oh i thought it would use strutils for that
[01:15:56] <FromDiscord> <haxscramper> it might have something to do with binding rules ... do you have strformat in genric/template/macro-expanded-code?
[01:16:16] <FromDiscord> <haxscramper> it is from strutils ... anyway, I meant to just import module with parseInt
[01:16:46] <madprops> strutils has parseint
[01:16:59] <madprops> importing parseutils doesn't change it
[01:17:12] <madprops> i'll try making the files example
[01:40:04] *** Joins: xet7 (~xet7@user/xet7)
[01:48:30] <FromDiscord> <chicken mcnuggets> hi there im a nubie at nim and was wondering when to use a ref object and when to use a pointer object
[01:48:39] <FromDiscord> <chicken mcnuggets> (edit) "use" => "create"
[01:48:44] <FromDiscord> <chicken mcnuggets> (edit) "use" => "create"
[01:50:18] <FromDiscord> <Yardanico> In reply to @chicken mcnuggets "hi there im a": wdym "pointer object"?
[01:50:38] <FromDiscord> <chicken mcnuggets> something like this
[01:50:44] <FromDiscord> <chicken mcnuggets> sent a code paste, see https://paste.rs/YUc
[01:50:47] <FromDiscord> <Yardanico> this is a stack (value) object, not a pointer one
[01:51:00] <FromDiscord> <chicken mcnuggets> ohoh could u elaborate
[01:51:27] <FromDiscord> <enthus1ast> `` is nim's export marker
[01:51:31] <FromDiscord> <zidsal> @enthus1ast I am late too the party it is possible to test for macro throwing exceptions I do it
[01:51:43] *** Quits: max22- (~maxime@2a01cb0883359800b4317c9828564e29.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:51:55] <FromDiscord> <Yardanico> In reply to @enthus1ast "`*` is nim's export": ah, forgot that some people might mistake it for this
[01:52:03] <FromDiscord> <Yardanico> yeah, in nim  is not a pointer marker, it's an export marker
[01:52:07] <FromDiscord> <chicken mcnuggets> Ohhh
[01:52:07] <FromDiscord> <tandy> is there sugar for \`& " " &\` when combining strings like in python with \`, \`?
[01:52:10] <FromDiscord> <chicken mcnuggets> i see
[01:52:13] <FromDiscord> <Elegantbeef> It works like `public` in other languages
[01:52:23] <FromDiscord> <zidsal> never mind you've already worked it out
[01:52:28] <FromDiscord> <Yardanico> and usually you use a value object unless you need shared ownership or a recursive object
[01:52:37] <FromDiscord> <Yardanico> also see https://forum.nim-lang.org/t/3869
[01:53:21] <FromDiscord> <chicken mcnuggets> can you explain what an export marker is lol
[01:53:31] <FromDiscord> <chicken mcnuggets> like it can be exported?
[01:53:32] <FromDiscord> <chicken mcnuggets> LOL
[01:53:32] <FromDiscord> <Yardanico> as elegant beef said
[01:53:36] <FromDiscord> <Yardanico> public in other languages
[01:53:37] <FromDiscord> <chicken mcnuggets> ohh
[01:53:39] <FromDiscord> <chicken mcnuggets> gotcha
[01:53:46] <FromDiscord> <Yardanico> have you read first two nim tutorials?
[01:53:57] <FromDiscord> <Yardanico> also https://narimiran.github.io/nim-basics/ is useful
[01:54:03] <FromDiscord> <chicken mcnuggets> ty
[01:55:05] <FromDiscord> <haxscramper> In reply to @zidsal "<@!551349731532603393> I am late": do you have an example?
[01:55:15] <FromDiscord> <haxscramper> I would much rather prefer to know how to do this
[01:55:18] <FromDiscord> <zidsal> yup so I've only got it to work with testament
[01:55:32] <FromDiscord> <zidsal> is my test
[01:55:34] <FromDiscord> <zidsal> sent a code paste, see https://play.nim-lang.org/#ix=3wiT
[01:55:50] <FromDiscord> <haxscramper> oh, well, I thought it is something built-in
[01:56:00] <FromDiscord> <zidsal> sent a code paste, see https://play.nim-lang.org/#ix=3wiU
[01:56:16] *** Joins: max22- (~maxime@2a01cb08833598001745ae4b16abf79f.ipv6.abo.wanadoo.fr)
[01:56:20] <FromDiscord> <zidsal> na it would be hard to build it in, if it errors at compile time! I'm just glad there is a way to do it
[01:56:56] <FromDiscord> <zidsal> (edit) "na it would be hard to build it in, if it errors at compile time! ... I'm" 03added "(how can you compile the test to run it if the macro errors at compliation)"
[01:58:39] <FromDiscord> <zidsal> I should prob make a pr to update the testament doc's as that wasn't document anywhere I had to dig through the testament code to find it as I was convinced there must be a way this is tested for the compiler project
[02:00:23] <FromDiscord> <haxscramper> Well, technically it is in the documentation, but considering they literally go like "the doc is not full, go dig in the source code, good luck"
[02:06:35] <NimEventer> New thread by Lecale: Nim for UI Automation, see https://forum.nim-lang.org/t/8340
[02:23:07] *** Joins: Pyautogui (~Pyautogui@cpe-23-241-96-47.socal.res.rr.com)
[02:28:50] *** Quits: Pyautogui (~Pyautogui@cpe-23-241-96-47.socal.res.rr.com) (Quit: Connection closed)
[02:37:42] *** Quits: max22- (~maxime@2a01cb08833598001745ae4b16abf79f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:47:20] <FromDiscord> <enthus1ast> also for async code, usually my "class" object in async code is a ref, since var cannot be captured↵(@Yardanico)
[03:07:32] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 245 seconds)
[03:12:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:12:31] <Gustavo6046> Good evening! :)
[03:12:47] <Gustavo6046> I've been interested in Nim lately, seeing how it compares to Rust and yet also how simple it also is.
[03:13:10] <Gustavo6046> https://github.com/nim-lang/Nim/wiki/Nim-for-Python-Programmers I'd like to point out that Python _does_ have fixed-size types, in its *ctypes* standard module. Though they're more often used for C bindings, which is fair.
[03:25:27] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:26:34] *** Joins: flynn (~mcbloch@user/flynn)
[03:34:35] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[03:42:55] <FromDiscord> <Yardanico> you can modify this wiki, it's not an official resource but rather user-contributed
[04:21:58] <madprops> what is the common equivalent of comparing datetimes in js like Date.now () - somedate in nim? Should I instantiate Time objects and compare those?
[04:22:28] <madprops> also is the standard to use milliseconds or other?
[04:27:40] <FromDiscord> <dom96> use the times module
[04:27:43] *** systemds1cks is now known as systemdsucks
[04:29:07] <madprops> I'm trying: int64(getTime().seconds) - seconds
[04:31:30] <madprops> ok got something
[04:31:35] <madprops> getTime() - initTime(seconds, 0)
[04:53:10] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 240 seconds)
[04:56:42] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[04:57:18] *** Joins: xet7 (~xet7@user/xet7)
[05:13:56] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:18:52] <madprops> anything that could be improved here? https://dpaste.org/APJg
[05:23:28] <madprops> cleaned it up a bit
[05:23:35] <madprops> less repetition
[05:36:01] <madprops> something that i haven't seen is a var that turns into a let when assigned
[05:36:11] <madprops> don't know of a prog lang that does it
[05:36:19] <madprops> maybe it's hard to implement
[05:39:08] <FromDiscord> <Elegantbeef> You can emulate that behaviour using a block
[05:40:11] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3wjv for instance
[05:41:09] <madprops> or an if/else similarly right ?
[05:41:47] <madprops> for some reason some if/else block assigning wasn't working
[05:42:02] <madprops> if something: "somestring"
[05:42:04] <FromDiscord> <Elegantbeef> Yes all expressions can return a value
[05:42:22] <FromDiscord> <Elegantbeef> you need all branches to have a returned value
[05:42:31] <madprops> oh maybe I was missing an else
[05:42:45] <FromDiscord> <Elegantbeef> Probably
[05:56:14] <FromDiscord> <j-james> Can someone explain what the `{. bycopy .}` pragma does in more detail?
[05:57:40] <FromDiscord> <Elegantbeef> Instead of doing reference passing optimizations it always copies the object afaik
[05:58:46] <FromDiscord> <Elegantbeef> In Nim objects are often passed by hidden references which is more efficient, but you may not when interacting with something that doesnt know that it's a copy
[06:00:04] <FromDiscord> <j-james> That makes a lot of sense, thanks
[06:00:51] <FromDiscord> <j-james> Off the top of your head, can you think of any cases where one or the other could cause issues?
[06:06:28] <FromDiscord> <Elegantbeef> Presently writing an example \:D
[06:11:52] <FromDiscord> <Elegantbeef> here is a bit of a contrived issue but https://play.nim-lang.org/#ix=3wjJ
[06:12:21] <FromDiscord> <Elegantbeef> Do to forcing the compiler to emit a `doThing(SomeThing)` it mismatches with `doThing(SomeThing)`
[06:59:56] <FromDiscord> <eliyanov> Hello everyone, I'm new here
[07:01:58] <FromDiscord> <Elegantbeef> Hello
[07:02:07] <FromDiscord> <eliyanov> I have a quick question\: if I write `stream.readData(value.unsafeAddr, sizeof(value))` where stream is a FileStream and value is a string, how is the function able to deserialize a string of any length?
[07:03:30] <FromDiscord> <Elegantbeef> It isnt, it writes the data at the pointer
[07:04:02] <FromDiscord> <Elegantbeef> For serializing a string you'd want to write `len` followed by the data of the string, though you may want to look at frosty, or flatty for binary serialization
[07:04:57] <FromDiscord> <Elegantbeef> So in the case of a string it'll write probably `len, dataAddress`
[07:05:46] <FromDiscord> <eliyanov> I'm seeing behavior where I write a string to the binary file and that line given is able to deserialize the whole thing.
[07:06:03] <FromDiscord> <Elegantbeef> Cause the string is still in memory so it's stil lvalid
[07:06:04] <FromDiscord> <Elegantbeef> Cause the string is still in memory so it's stil valid
[07:07:11] *** Joins: TakinOver (~quassel@47.150.196.72)
[07:08:31] <FromDiscord> <eliyanov> Screen Shot 2021-08-17 at 9.38.00 PM.png https://media.discordapp.net/attachments/371759389889003532/877380915523891210/Screen_Shot_2021-08-17_at_9.38.00_PM.png
[07:08:39] <FromDiscord> <eliyanov> Even in this example?
[07:09:12] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:10:23] <FromDiscord> <Elegantbeef> yea `dat` is likely not freed by by the end of main
[07:11:13] <FromDiscord> <eliyanov> Oh the unsafe pointers are the issue maybe
[07:11:45] <FromDiscord> <Elegantbeef> Well to prove my point https://play.nim-lang.org/#ix=3wjR
[07:11:59] <FromDiscord> <Elegantbeef> The character array isnt written
[07:12:42] <FromDiscord> <eliyanov> Yeah that makes sense, thanks for the help
[07:20:04] <FromDiscord> <Elegantbeef> If interested this is what my suggestion was https://play.nim-lang.org/#ix=3wjS
[07:20:47] <FromDiscord> <Elegantbeef> But frosty/flatty make this serialization super easy if you want something already all together 😀
[07:26:37] <FromDiscord> <j-james> What is the difference between `uint32` and `uint32_t`?
[07:28:22] <FromDiscord> <j-james> Particularly in a wrapping-C context
[07:29:07] <FromDiscord> <Elegantbeef> Nim's uint32 is the same as uint32\_t
[07:44:46] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:05:37] *** kayabaNerve_ is now known as kayabaNerve
[08:05:41] *** Joins: xet7 (~xet7@user/xet7)
[08:26:37] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[08:31:10] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:10:42] <FromDiscord> <creonico> How can I use nim in web-assembly?
[09:12:04] <FromDiscord> <Elegantbeef> Emscripten https://github.com/treeform/nim_emscripten_tutorial
[09:17:28] <FromDiscord> <creonico> Does nim not have a standard wasm compilation?
[09:20:05] <FromDiscord> <Elegantbeef> Emscripten would be the "standard"
[10:07:16] <FromDiscord> <impbox [ftsf]> nim can compile to js, not wasm directly
[10:07:28] <FromDiscord> <impbox [ftsf]> if you want wasm, compile to c then use emscripten
[10:20:30] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[10:27:15] *** Joins: xet7 (~xet7@user/xet7)
[10:32:57] <FromDiscord> <Chiggy> Can anyone confirm me if this is a good way to continue fetching a url until a response if received? Coz the server sometimes breaks connection or something. https://media.discordapp.net/attachments/371759389889003532/877432360273068042/unknown.png
[10:33:40] <NimEventer> New thread by Alexeypetrushin: Why `using` not working? Bug?, see https://forum.nim-lang.org/t/8341
[10:33:51] <FromDiscord> <Chiggy> (I didnt know of python's `pass` pass equivalent in nim)
[10:33:55] <FromDiscord> <Chiggy> (edit) "nim)" => "nim so I just used discard)"
[10:34:49] <FromDiscord> <impbox [ftsf]> might want to check the exception type
[10:35:00] <FromDiscord> <impbox [ftsf]> and probably wait a little between attempts
[10:37:37] <FromDiscord> <Chiggy> from what I have noticed, it seems to be protocol error always (I have only seen 5 times as of now) https://media.discordapp.net/attachments/371759389889003532/877433534699171880/unknown.png
[10:38:00] <FromDiscord> <impbox [ftsf]> are you reusing the client for multiple requests?
[10:38:04] <FromDiscord> <Chiggy> no
[10:38:20] <FromDiscord> <Chiggy> I just make one request each time my code runs
[10:38:37] <FromDiscord> <Chiggy> my code runs every minute
[10:40:37] <FromDiscord> <Chiggy> In reply to @impbox "and probably wait a": ig thats good? https://media.discordapp.net/attachments/371759389889003532/877434290831515648/unknown.png
[10:42:11] <FromDiscord> <impbox [ftsf]> i guess so, you may as well make it while true: since raw_content could be "" it'll still break
[10:42:51] <FromDiscord> <impbox [ftsf]> you might want to create your client inside the loop
[10:42:56] <FromDiscord> <impbox [ftsf]> so if it fails you get a new client
[10:43:10] <FromDiscord> <impbox [ftsf]> i've had issues with reusing httpclients before
[10:43:22] <FromDiscord> <Chiggy> In reply to @impbox "i guess so, you": Huh? The api will never return an empty string
[10:43:29] <FromDiscord> <Chiggy> In reply to @impbox "i've had issues with": h ok
[10:43:30] <FromDiscord> <Chiggy> (edit) "h" => "oh"
[10:43:36] <FromDiscord> <impbox [ftsf]> @Chiggy how do you know?
[10:43:46] <FromDiscord> <impbox [ftsf]> they might update the API
[10:43:58] <FromDiscord> <Chiggy> my friend is hosting the api
[10:44:20] <FromDiscord> <Chiggy> but yeah while true will work too
[10:44:30] <FromDiscord> <Chiggy> (edit) "my friend is hosting the api ... " 03added "so I will know if anything changes at all"
[10:44:39] <FromDiscord> <impbox [ftsf]> ok
[10:45:41] <FromDiscord> <j-james> Should I use `cint` for all of `int16, int32, uint32_t` when wrapping C code?
[10:45:51] <FromDiscord> <impbox [ftsf]> nope
[10:46:07] <FromDiscord> <impbox [ftsf]> only use cint for int in c
[10:46:24] <FromDiscord> <Elegantbeef> cint is the platform dependant C integer type
[10:46:30] <FromDiscord> <j-james> Are the rest fine as they are?
[10:46:35] <FromDiscord> <Elegantbeef> The others are fixed size so map to Nim fine
[10:47:10] <FromDiscord> <impbox [ftsf]> from my understanding cint in nim == int in c
[10:47:19] <FromDiscord> <Elegantbeef> actually isnt cint not platform dependant but completely user configurable?
[10:47:39] <FromDiscord> <impbox [ftsf]> and cuint in nim == unsigned int in c
[10:48:17] <FromDiscord> <Elegantbeef> Yea i just dont recall if `int` in C is user definable size 😀
[10:48:30] <FromDiscord> <impbox [ftsf]> i guess it's up to the compiler
[10:48:35] <FromDiscord> <Elegantbeef> I know atleast one data type somewhere is configurable, just dont recall what
[10:49:46] <FromDiscord> <Elegantbeef> Anywho this is way off the point, if there is a bitsize in the name it's safe to use the nim variant
[10:52:28] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[10:55:18] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:08:01] <FromDiscord> <enthus1ast> https://nimble.directory/ heavily suffers from crosstalk issue, go on and hit ctrl + r a few times, it is completely broken some times, sometimes it delivers the logo on the "/" route...
[12:09:23] <FromDiscord> <KnorrFG> sent a code paste, see https://play.nim-lang.org/#ix=3wkP
[12:10:04] <FromDiscord> <enthus1ast> https://nimble.directory/ heavily suffers from crosstalk issues, go on and hit ctrl + r a few times, it is completely broken some times, sometimes it delivers the logo on the "/" route...  (OK some are 429s)
[12:14:10] <FromDiscord> <Clonkk> you need before\_install / after\_install
[12:16:55] <FromDiscord> <Clonkk> Basically if you have `task b, "b":...`, you can define `before b` and `after b` (no underscore actually), this works with `install` and \`\`develop tasks as well in the nimble file↵(@KnorrFG)
[12:17:46] <FromDiscord> <KnorrFG> so, setting flags in a 'before install' will make install respect those flags for compilation?
[12:20:19] <FromDiscord> <Clonkk> For linkage, you use`after install` to install external library and then link in Nim code using pragma
[12:20:36] <FromDiscord> <KnorrFG> ok, ill try, thanks
[12:21:46] <FromDiscord> <Clonkk> Sadly, Nimble doesn't have a way to handle shared libraries properly
[12:26:03] *** Joins: tdc (~tdc@217.61.224.137)
[12:55:37] *** Joins: max22- (~maxime@2a01cb0883359800ddd61dd50d348b5b.ipv6.abo.wanadoo.fr)
[13:37:13] <FromDiscord> <tandy> with object variants (https://nim-lang.org/docs/manual.html#types-object-variants)
[13:37:25] <FromDiscord> <tandy> can you have an object which has both types?
[13:38:20] <FromDiscord> <Rika> “Both”?
[13:38:36] <FromDiscord> <Rika> Both of what’s
[13:38:43] <FromDiscord> <Rika> (edit) "what’s" => "what?"
[13:38:54] <FromDiscord> <Elegantbeef> presently there is no reuse of the  trees so you need repetitive branches if they arent identical
[13:39:03] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3wlh
[13:39:14] <FromDiscord> <Elegantbeef> no you cannot
[13:39:16] <FromDiscord> <tandy> hmm
[13:39:23] <FromDiscord> <tandy> i guess i dont need enums then
[13:40:11] <FromDiscord> <Elegantbeef> why are you using `Option[seq[Track]]`?
[13:40:38] <FromDiscord> <Elegantbeef> Seems redundant when you can just check the length, but might just be me
[13:40:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[13:41:29] <FromDiscord> <tandy> hmm i thought it would be easier to initialise
[13:41:32] <FromDiscord> <tandy> u might be right tho
[13:41:35] <FromDiscord> <Rika> It would be harder
[13:41:53] *** Joins: flynn (~mcbloch@user/flynn)
[13:42:03] <FromDiscord> <Rika> Unless an empty sequence is different from your none type, there is no reason to use option here
[13:42:16] <FromDiscord> <tandy> true
[13:42:38] <FromDiscord> <Elegantbeef> same could be said about the strings
[13:44:14] <FromDiscord> <Elegantbeef> Assuming `""` is unwanted it's the same s `Option[string]`
[13:44:34] <FromDiscord> <tandy> hmm
[13:44:37] <FromDiscord> <tandy> what really is the use of options then hahah
[13:45:02] <FromDiscord> <Elegantbeef> For types that dont have this information
[13:45:22] <FromDiscord> <Elegantbeef> integers, returned value objects, and so forth
[13:46:00] <FromDiscord> <Elegantbeef> For instance https://nim-lang.org/docs/nre.html#match%2Cstring%2CRegex%2Cint
[13:46:22] <FromDiscord> <Elegantbeef> It's equivlent to a `(bool, RegexMatch)` but it's an API which encourages checking the former
[13:46:31] <FromDiscord> <tandy> oh i remember why  im using options
[13:46:38] <FromDiscord> <tandy> in some places anyway
[13:47:01] <FromDiscord> <tandy> im using jsony and when converting my types to json i discard empty options
[13:47:42] <FromDiscord> <Elegantbeef> Cant you do the same just with the `""` and `len > 0`, or do you not want hooks?
[13:49:22] <FromDiscord> <tandy> i was using hooks yeah
[13:49:28] <FromDiscord> <tandy> il look into it thanks
[13:50:28] <FromDiscord> <tandy> are there plans to add reuse?
[13:51:07] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/RFCs/issues/368 yes
[13:51:25] <FromDiscord> <tandy> the reason i was look at enums for this was because i want to have a user url which will be either last.fm/user/{} or listenbrainz.org/user/{}
[13:52:09] <FromDiscord> <Elegantbeef> sure but couldnt that just be an enum for `service` and then a `token: string`?
[13:53:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3wlk
[13:53:55] <FromDiscord> <Elegantbeef> Seems like it covers the same(yes i got lazy)
[13:54:54] <FromDiscord> <tandy> i dont get what service does in this case? also does this mean that i cant have a user for both services (for now) ?
[13:55:07] <FromDiscord> <tandy> is it like a toggle switch kinda
[13:55:11] <FromDiscord> <Elegantbeef> No, it just tells you in other code where you want to connect
[13:55:17] <FromDiscord> <Rika> If you want you can probably make it a set
[13:55:36] <FromDiscord> <Rika> So you can have a user of one or both (but it also means you can have a user of none so)
[13:55:52] <FromDiscord> <tandy> tbh i need to think of a better way to abstract this, because some users may have accounts on both but with different usernames
[13:56:03] <FromDiscord> <Rika> Then just make multiple users
[13:56:24] <FromDiscord> <tandy> yeah but i wanted to have them abstracted as one user on my spa
[13:56:33] <FromDiscord> <tandy> for convenienc
[13:56:38] <FromDiscord> <Elegantbeef> Ok so that's not difficult
[13:57:00] <FromDiscord> <Rika> Then use one User type and another linking type (maybe “ExternalUser)
[13:57:02] <FromDiscord> <Elegantbeef> `services: set[Service]` `userNames: array[Service, string]`
[13:57:11] <FromDiscord> <Rika> Then have a sequence in User of Externals
[13:58:07] <FromDiscord> <Rika> In reply to @Elegantbeef "`services: set[Service]` `userNames: array[Service,": You think too much in game programming style smh
[13:58:19] <FromDiscord> <tandy> lol
[13:58:28] <FromDiscord> <Elegantbeef> Was that directed to me?
[13:58:36] <FromDiscord> <Rika> Who else
[13:58:44] <FromDiscord> <Elegantbeef> Just making sure 😛
[14:01:25] <FromDiscord> <tandy> i settled on this
[14:01:34] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3wln
[14:01:50] <FromDiscord> <Rika> You don’t need those to be ref objects by the way
[14:01:54] <FromDiscord> <Elegantbeef> Now time to bike shed the ref
[14:02:00] <FromDiscord> <Rika> It seems wasteful
[14:02:12] <FromDiscord> <Elegantbeef> A pointer to a list of pointers is just fun!
[14:02:44] <FromDiscord> <Rika> Beef would probably get an aneurysm when he sees what JsonNode looks like
[14:02:46] <FromDiscord> <tandy> oh ok lol, i wasnt really sure what it did and just kept it from other project (lol)
[14:02:49] <FromDiscord> <Rika> I kid, he already has
[14:02:59] <FromDiscord> <Elegantbeef> I know what it looks like
[14:03:08] <FromDiscord> <Elegantbeef> Ref is if you want a reference(managed pointer)
[14:03:10] <FromDiscord> <Rika> See second message
[14:03:56] <FromDiscord> <Elegantbeef> Rika i'm not good at anything i can atleast pretend I know better than others!
[14:05:34] <FromDiscord> <Elegantbeef> Also ref's give you `nil` so you dont really need `Option[SomeRef]`
[14:06:04] <FromDiscord> <Elegantbeef> since `ref bool` and `Option[bool]` are practically the same if you're not looking for reference semantics
[14:06:41] <FromDiscord> <tandy> oh thats neat
[14:06:43] <FromDiscord> <tandy> so options is redundant \:?)
[14:07:12] <FromDiscord> <Elegantbeef> It's got it's purpose, just you have to know when/where to use it
[14:07:34] <FromDiscord> <tandy> but with this, why would i not just use ref?
[14:07:53] <FromDiscord> <Elegantbeef> one is heap allocated, the other is not
[14:08:20] <FromDiscord> <Rika> They are different
[14:08:25] <FromDiscord> <Rika> They have different behaviours
[14:09:19] <FromDiscord> <Elegantbeef> Yea i'm mostly just talking about interaction and the fact both give n + 1 values
[14:09:49] <FromDiscord> <Elegantbeef> They're different, but in the case of a `ref object` and a `option[ref object]` there isnt much difference unless `nil` means something to you
[14:11:24] <FromDiscord> <Elegantbeef> Actually they're identical now that i think about it for pointers the option doesnt use `has` it's just `val != nil`
[14:28:17] <FromDiscord> <tandy> when i dont use a ref object i cant do `new(result)`
[14:30:58] <FromDiscord> <tandy> oh you dont need to do that at all
[15:01:33] <FromDiscord> <ericdp> is there a nim equivalent to elixir's doctest ? ( https://elixir-lang.org/getting-started/mix-otp/docs-tests-and-with.html tldr comments that could be feeded to the repl are unit tests)
[15:11:12] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wlM
[15:12:11] <FromDiscord> <ericdp> thanks
[15:15:34] <FromDiscord> <System64 ~ Flandre Scarlet> How can I make my binding more Nim-friendly please? (or is it already?)
[15:18:13] <FromDiscord> <hamidb80> ?!
[15:18:52] <FromDiscord> <haxscramper> define "more Nim-friendly"
[15:20:00] <FromDiscord> <System64 ~ Flandre Scarlet> Something like a Nim program↵'cause my binding looks like more a C thing no?
[15:20:24] <FromDiscord> <hamidb80> where are your bindings?
[15:21:03] <FromDiscord> <haxscramper> In reply to @System64 "Something like a Nim": You can start by removing this `tLN_` garbage prefix from all definitions
[15:21:05] <FromDiscord> <haxscramper> as a start
[15:21:49] <FromDiscord> <haxscramper> and instead use `proc normalName(): {.importcpp: "C name".}`
[15:22:04] <FromDiscord> <System64 ~ Flandre Scarlet> why cpp?
[15:22:11] <FromDiscord> <haxscramper> importc
[15:22:12] <FromDiscord> <System64 ~ Flandre Scarlet> I don't use C++
[15:22:20] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[15:22:36] <FromDiscord> <System64 ~ Flandre Scarlet> so importc, not importcpp?
[15:25:17] <FromDiscord> <tandy> i just realised, how will i index the sequence though? how will i know which service is which index?↵(@Rika)
[15:25:51] <FromDiscord> <haxscramper> In reply to @System64 "so importc, not importcpp?": Yes
[15:26:15] <FromDiscord> <Rika> In reply to @tandy "i just realised, how": The one beef sent uses the enum as the index
[15:26:22] <FromDiscord> <Rika> You can do that using arrays
[15:28:19] <FromDiscord> <System64 ~ Flandre Scarlet> but if I remove the tLN prefix won't people be confused from where does it come?
[15:30:13] <FromDiscord> <haxscramper> Then don't change wrappers at all, because someone might be confused by something somewhere, and you surely don't want that, right?
[15:30:32] <FromDiscord> <tandy> but the enum isnt a string, and array index has to be an ordinal type?↵(@Rika)
[15:30:40] <FromDiscord> <tandy> \`services\\: array[ServiceUser, Service]\`
[15:30:45] <FromDiscord> <Rika> Enums are ordinal
[15:31:18] <FromDiscord> <PsychoClay> what does `Error: 'sources' is of type <openArray[string]> which cannot be captured as it would violate memory safety,` mean?
[15:31:34] <FromDiscord> <haxscramper> you have a closure that tries to access `var` variable
[15:31:36] <FromDiscord> <tandy> oh my ordering is wrong
[15:32:47] <FromDiscord> <haxscramper> In reply to @PsychoClay "what does `Error: 'sources'": If closure does not outlive its environment, you can do `import std/decls; var sources {.byaddr.} = actualSources`
[15:33:43] <FromDiscord> <PsychoClay> but sources is a proc arg
[15:33:58] <FromDiscord> <haxscramper> it is a mutable proc arg?
[15:34:03] <FromDiscord> <PsychoClay> no
[15:34:17] <FromDiscord> <haxscramper> can you give a code example?
[15:34:36] <FromDiscord> <PsychoClay> sent a code paste, see https://play.nim-lang.org/#ix=3wlT
[15:37:55] <FromDiscord> <PsychoClay> i just turned it into a seq
[15:37:56] <FromDiscord> <haxscramper> with imports please
[15:38:16] <FromDiscord> <haxscramper> well, I guess it has something to do with async transformations
[15:38:50] <FromDiscord> <haxscramper> something somewhere created some kind of maybe closure iterator that theoretically had the capability of producing some kind of error that looked somewhat like yours
[15:44:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[16:07:07] <federico3> @Araq @dom96 did you get my email?
[16:12:22] *** Joins: pro (~pro@user/pro)
[16:13:46] <arkanoid> is it possible to "annotate" type attribute with custom pragma and read back that info at runtime?
[16:13:57] <FromDiscord> <System64 ~ Flandre Scarlet> @haxscramper Is it better? https://media.discordapp.net/attachments/371759389889003532/877518176307535912/Tilengine_copy.nim
[16:14:56] <FromDiscord> <haxscramper> https://nim-lang.org/docs/nep1.html#introduction-naming-conventions just read style guide
[16:21:28] <arkanoid> is it possible to get the module a symbol come from at compile time?
[16:24:46] <FromDiscord> <haxscramper> You mean like `getType().getParentModuleSym()`? No, this is not possible
[16:33:04] *** Quits: max22- (~maxime@2a01cb0883359800ddd61dd50d348b5b.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:34:07] <arkanoid> k
[16:35:33] <arkanoid> if I do $myXmlNode the output string is everything but a well formatted xml string
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:44:39] <FromDiscord> <haxscramper> what is wrong exactly?
[16:54:01] *** Joins: rockcavera (~rc@192.12.114.207)
[16:54:01] *** Quits: rockcavera (~rc@192.12.114.207) (Changing host)
[16:54:01] *** Joins: rockcavera (~rc@user/rockcavera)
[16:55:24] *** Joins: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de)
[17:01:07] *** Joins: arkurious (~arkurious@user/arkurious)
[17:03:23] <FromDiscord> <System64 ~ Flandre Scarlet> ah yeah good to know↵And should I turn my bindings into more OOP thing?
[17:04:07] <FromDiscord> <haxscramper> I would first recommend actually using them for something, and writing required helper procs as you go
[17:05:09] <FromDiscord> <haxscramper> Because it is clear you don't quite understand yourself what can you improve, and neither does anyone who haven't used your library, so
[17:06:22] <FromDiscord> <System64 ~ Flandre Scarlet> yeah true
[17:09:03] <FromDiscord> <System64 ~ Flandre Scarlet> also, does nim have objects procedure? (like a method in a class in Java or classmethod in Python)
[17:14:53] <PMunch> You mean methods?
[17:15:35] <FromDiscord> <System64 ~ Flandre Scarlet> Yeah
[17:16:23] <FromDiscord> <System64 ~ Flandre Scarlet> And also instance méthods (you have to instanciate the class to use the méthod)
[17:19:49] *** Joins: max22- (~maxime@2a01cb0883359800cfd7ddcbf03c8b83.ipv6.abo.wanadoo.fr)
[17:25:54] <arkanoid> everytime I have to write a function that may return nothing but of ref type, I'm unsure if it is more nim like to return nil or nothing(MyRefType)
[17:26:36] <FromDiscord> <haxscramper> what you mean by "nim like"
[17:26:58] <arkanoid> nim stdlib doesn't use Option
[17:27:21] <arkanoid> so it suggests that returnin nil is the way to go
[17:27:22] <FromDiscord> <haxscramper> and? you are not writing stdlib module, right?
[17:27:41] <FromDiscord> <haxscramper> stdlib does not use option due to multiple reasons
[17:27:47] <FromDiscord> <haxscramper> For example araq does not like option
[17:28:32] <FromDiscord> <haxscramper> is that good enough of a reason for you to change how you write code or what? Use I would use option
[17:28:37] <FromDiscord> <haxscramper> `none(T)`
[17:29:42] <FromDiscord> <haxscramper> another reason why stdlib does not use option, is that it was added 6 years ago
[17:29:49] <FromDiscord> <haxscramper> while stdlib is 10+ year old
[17:30:21] <arkanoid> the point that the creator of the language doesn't like it AND is not used in stdlib is a STRONG suggestion that it is not the nim way
[17:30:35] <FromDiscord> <haxscramper> NO IT IS NOT
[17:30:57] <FromDiscord> <haxscramper> ffs, I just can't understand why you would want to do it like this
[17:31:10] <FromDiscord> <haxscramper> does your code benefit from Option or not?
[17:31:32] <FromDiscord> <haxscramper> there is no "STRONG" suggestion for anyting, we are not Go/V,
[17:31:38] <FromDiscord> <haxscramper> write code how you think is good
[17:31:40] <arkanoid> possibly, yes, I'm writing a parser, so your hint is VERY valuable
[17:32:32] <FromDiscord> <haxscramper> now we are talking about something more specific. For a parser I would much rather raise than return nil, and nim parser does not return `nil` for empty nodes, instead it returns `nnkEmpty()`
[17:32:59] <FromDiscord> <haxscramper> Do you parse xml or custom AST?
[17:33:35] <arkanoid> parsing xml. Still trying to turn a wsdl document into nim modules
[17:35:45] <FromDiscord> <haxscramper> Then it all depends on what exactly you are parsing - like if failure is a possibility or not?
[17:35:52] <FromDiscord> <haxscramper> or is it an exceptional case
[17:36:22] <FromDiscord> <haxscramper> and if you immediately return result of the `<can fail>` and put it somewhere else you can return `Empty()`
[17:38:02] <arkanoid> it is actually an error when it returns none, but I'm writing an helper function and not sure if the error should be raised there, helper function should just say "none"
[18:06:33] *** Joins: tdc_ (~tdc@217.61.224.137)
[18:09:39] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 268 seconds)
[18:17:32] <FromDiscord> <dom96> In reply to @federico3 "<@413679055897100289> <@132595483838251008> did you": we replied to the draft security issue
[18:17:57] <federico3> I saw that.
[18:19:45] <FromDiscord> <dom96> In reply to @arkanoid "the point that the": doesn't the fact that it's in the stdlib imply that the creator at least thinks it's a valuable construct? FWIW I use it a lot in my libraries and would have used it in the stdlib if it was added earlier.
[18:34:41] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:40:41] <FromDiscord> <konsumlamm> araq has said on multiple occasions that he doesn't really like it though
[19:01:32] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[19:06:08] *** Joins: pro (~pro@user/pro)
[19:07:56] *** Quits: pro (~pro@user/pro) (Client Quit)
[19:11:11] *** Joins: idf (~idf@198.23.223.146)
[19:12:12] *** Quits: max22- (~maxime@2a01cb0883359800cfd7ddcbf03c8b83.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[19:17:14] <FromDiscord> <Rika> Well why
[19:24:12] <FromDiscord> <haxscramper> I think I'm doing something wrong in the benchmark, because I doubt handwritten vtable implementation would be slower than `case of`
[19:26:35] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wmI
[19:41:15] <arkanoid> dom96: thanks for the feedback
[20:00:01] *** Joins: beshr (~beshr@user/beshr)
[20:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[20:05:41] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:06:00] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[20:07:37] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[20:07:44] *** Gustavo6046_ is now known as Gustavo6046
[20:08:55] <FromDiscord> <mratsim> In reply to @haxscramper "<@!570268431522201601> I wrote a": you might not be doing something wrong. My bench machine was only a dual core from 2015, I can retry your code
[20:10:16] <FromDiscord> <haxscramper> Yes, if you could, it would be awesome. You also need to have https://github.com/haxscramper/hack/blob/master/testing/nim/c_interop/cpp_tests/cxx_opcodes.hpp and https://github.com/haxscramper/hack/blob/master/testing/nim/c_interop/cpp_tests/nim.cfg to compile this
[20:11:27] <FromDiscord> <mratsim>  https://media.discordapp.net/attachments/371759389889003532/877577941846994975/unknown.png
[20:11:44] <FromDiscord> <mratsim> `nim cpp -d:danger -r --hints:off --warnings:off --verbosity:0 testing/nim/c_interop/cpp_tests/switch_vs_dispatch.nim`
[20:12:45] <FromDiscord> <mratsim> on i9-9980XE overclocked at 4GHz, 18 cores, I closed VScode and my browser cause they tend to wakeup CPU at odd times.
[20:14:04] <FromDiscord> <mratsim> methods in the past were multidispatch though
[20:14:19] <FromDiscord> <mratsim> note: test done on Nim 1.4.6
[20:15:08] <FromDiscord> <mratsim> I think Nim at the time was 0.19.6 or 0.20 something
[20:15:21] <FromDiscord> <mratsim> might be worth trying with that version
[20:15:22] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/4jX
[20:17:16] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wmV
[20:20:42] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wmW
[20:21:03] <FromDiscord> <xflywind> Maybe you should also test ref object with attributes
[20:21:17] <FromDiscord> <xflywind> it maybe generate a bit slow code.
[20:21:41] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3wmY
[20:22:16] *** Joins: max22- (~maxime@2a01cb0883359800fe94b4ad8df45bbc.ipv6.abo.wanadoo.fr)
[20:46:17] <arkanoid> how can I fill a Table[string,string] or a StringTableRef at compile time?
[20:46:56] <FromDiscord> <konsumlamm> ref objects can't currently be constructed at compile time
[20:51:07] <arkanoid> no way to have a const table anywhere?
[20:52:46] <FromDiscord> <konsumlamm> shouldn't a normal `Table` work?
[20:52:57] <FromDiscord> <konsumlamm> just like you'd define anything else at compile time
[20:54:59] <FromDiscord> <konsumlamm> i.e. make the table a `const` (if you don't need to change it at runtime) or initialize it in a `static:` block
[21:01:19] <arkanoid> konsumlamm seems easy but I'm trying to building a const table via a recursive function and it doesn't like it
[21:07:09] <FromDiscord> <hamidb80> hey
[21:07:17] <FromDiscord> <hamidb80> when i install a package using nimble
[21:07:23] <FromDiscord> <hamidb80> with specified hash
[21:07:34] <FromDiscord> <hamidb80> nim can't find it
[21:08:20] <FromDiscord> <hamidb80> for example it installed `print@#head`
[21:08:32] <FromDiscord> <hamidb80> nim is looking for `print-1.0.0`
[21:08:43] <FromDiscord> <hamidb80> and can't find it
[21:08:59] <FromDiscord> <hamidb80> (edit) "it installed" => "i install "
[21:09:34] <FromDiscord> <hamidb80> @treeform are you around?
[21:10:16] <FromDiscord> <hamidb80> i think you didn't update your package info
[21:12:01] <FromDiscord> <treeform> where?
[21:12:37] <FromDiscord> <hamidb80> in `print.nimble`
[21:12:58] <FromDiscord> <hamidb80> print 1.0.0 still has that bug that you fixed in head
[21:13:01] <FromDiscord> <hamidb80> (edit) "head" => "`head`"
[21:13:17] <FromDiscord> <hamidb80> and nimble automacally downaloads print 1.0.0
[21:13:31] <FromDiscord> <hamidb80> (edit) "print 1.0.0" => "`print-1.0.0`"
[21:13:46] <FromDiscord> <hamidb80> when i enter `nimble install print`
[21:14:13] <FromDiscord> <treeform> ok
[21:14:18] <FromDiscord> <treeform> which bug?
[21:14:36] <FromDiscord> <hamidb80> https://github.com/treeform/print/issues/11
[21:15:21] <FromDiscord> <treeform> oh yeah
[21:15:22] <FromDiscord> <hamidb80> maybe updating version in `print.nimble` to 1.0.1 fixes this issue
[21:15:25] <FromDiscord> <treeform> will cut new version now
[21:16:24] <FromDiscord> <treeform> done https://github.com/treeform/print/releases/tag/1.0.1
[21:16:49] <FromDiscord> <hamidb80> In reply to @hamidb80 "nim is looking for": but it's super wierd
[21:20:06] <FromDiscord> <treeform> what do you mean?
[21:20:41] <FromDiscord> <treeform> thank you for reporting the bug btw
[21:21:13] <FromDiscord> <Erik L> Hello, any ideas what to do to prevent nimsuggest to go to 100% cpu usage in Mac Os and VS Code?
[21:21:28] <arkanoid> SOLVED!
[21:21:35] <arkanoid> ups, sorry for the caps
[21:21:48] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[21:22:25] *** Joins: xet7 (~xet7@user/xet7)
[21:23:03] <FromDiscord> <hamidb80> In reply to @treeform "what do you mean?": issue fixed after you released a new version 😕
[21:23:06] <FromDiscord> <hamidb80> (edit) "In reply to @treeform "what do you mean?": ... issue" 03added "the"
[21:24:35] <FromDiscord> <treeform> In reply to @Erik L "Hello, any ideas what": Disable it 😦
[21:28:03] <FromDiscord> <jseb> excuse me, how to declare `uSeconds` for uSleep ? I've imported `posix` and tried `uSleep(0)` , `uSleep(0.uSeconds)` , `uSleep(cast[uSeconds](0))` _(doh)_ . But compiler keeps telling me _undeclared identifier uSeconds_
[21:29:09] <FromDiscord> <Rika> capital U
[21:29:14] <FromDiscord> <Rika> Useconds
[21:29:30] <FromDiscord> <jseb> omg
[22:18:30] <arkanoid> is it possible to cast a global let variable into something that doesn't trigger effects?
[22:18:48] <arkanoid> I need an escape hatch not on a proc but on a variable
[22:29:52] <FromDiscord> <Elegantbeef> the `{.noSideEffect.}:` works regardless if the side effect comes from a global variable or a function https://play.nim-lang.org/#ix=3wnu
[22:30:09] <FromDiscord> <undersquire> why cant you use func in parameters?
[22:30:16] <FromDiscord> <undersquire> i see no reason why u cannot
[22:31:07] <FromDiscord> <Elegantbeef> It's not a limitation of idea but implementation, you'll need to use `proc(){.noSideEffect.}` until `func` is allowed
[22:31:56] <FromDiscord> <deech> Is there a sense for how stable `views` are right now? I keep up with `devel` wanted to get a feel for whether any projects are using them extensively.
[22:39:00] <FromDiscord> <krisppurg> Is there in any way I could reduce memory usage in nim, I am compiling with ORC, but it still is not as that as effective? https://media.discordapp.net/attachments/371759389889003532/877615074494267392/unknown.png
[22:39:10] <FromDiscord> <undersquire> In reply to @Elegantbeef "It's not a limitation": ye, just curious as it has an error message saying it cant be used here, but just saw no reason for why
[22:43:14] <FromDiscord> <Yardanico> In reply to @krisppurg "Is there in any": You can try debugging with things like heaptrack to see where does it allocate all that memory
[22:43:18] <FromDiscord> <Yardanico> Is it open source?
[22:43:34] <FromDiscord> <krisppurg> You mean my code?
[22:45:23] <FromDiscord> <Yardanico> Yeah
[22:46:33] <FromDiscord> <krisppurg> Nope, I was going to make it open source, but then I thought setting it up with git would be a problem because of where I would push changes
[22:46:56] <FromDiscord> <krisppurg> but I send it here
[22:47:18] <FromDiscord> <krisppurg> (edit) "but I send it here ... " 03added "if i am allowed to"
[22:48:03] <FromDiscord> <Yardanico> Well you can try heaptrack yourself
[22:48:21] <FromDiscord> <Yardanico> Is the usage high because you think ORC isn't collecting something it should?
[22:48:24] <FromDiscord> <Yardanico> What about refc?
[22:48:29] <FromDiscord> <krisppurg> How do I debug with heaptrack?
[22:48:37] <FromDiscord> <krisppurg> Well sort of high
[22:49:03] <FromDiscord> <krisppurg>  https://media.discordapp.net/attachments/371759389889003532/877617605718974474/unknown.png
[22:55:28] <FromDiscord> <leorize> @krisppurg\: try `-d:useMalloc`
[22:55:44] <FromDiscord> <Yardanico> also --debugger:native
[22:55:48] <FromDiscord> <Yardanico> and then just run heaptrack on your binary
[22:56:10] <NimEventer> New thread by Alexeypetrushin: Why `except` doesn't catch `SIGSEGV: Illegal storage access. (Attempt to read from nil?)`?, see https://forum.nim-lang.org/t/8342
[22:56:29] <FromDiscord> <leorize> Nim's allocator doesn't return the memory to the OS most of the time
[22:56:48] <FromDiscord> <leorize> also if you're using asyncdispatch, then memory inflation is a known side-effect
[22:57:03] <FromDiscord> <Yardanico> well, but he's comparing it to refc which uses 2x less memory
[22:58:12] <FromDiscord> <leorize> it's fairly unstable. Araq#0647 had been talking about how he thinks views design still need a few revisions↵(@deech)
[23:00:40] *** Quits: max22- (~maxime@2a01cb0883359800fe94b4ad8df45bbc.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:05:48] <FromDiscord> <krisppurg> be right back im trying to install gdb (which is used for heaptrack), but for some reason my download speed is slow
[23:07:12] <FromDiscord> <Yardanico> change mirrors? :P
[23:16:48] <madprops> if c not in a_bowels:
[23:16:52] <madprops> what's wrong with this?
[23:17:09] <madprops> "expected: ':', but got: 'keyword not'"
[23:19:07] <madprops> oh there's notin
[23:19:36] <FromDiscord> <Yardanico> there's no "not in" in nim, you have to use notin
[23:19:55] <FromDiscord> <Yardanico> or you can also write it as "not_in" as nim's case insensitivity rules apply to keywords as well
[23:20:04] <FromDiscord> <Yardanico> so p_R_o_C is the same as proc :)
[23:20:08] <FromDiscord> <Yardanico> now you have to live with that knowledge
[23:21:18] <madprops> is there a reason why notin exists?
[23:21:29] <FromDiscord> <Yardanico> because nim is not python :P
[23:21:54] <madprops> i guess it makes compilation parsing easier
[23:28:49] <FromDiscord> <undersquire> isnt notin a function?
[23:28:58] <FromDiscord> <undersquire> (edit) "function?" => "function defined by stdlib?"
[23:29:28] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3wnM
[23:30:03] <FromDiscord> <Elegantbeef> it's some sugar that does `not(x in y)`
[23:30:48] <FromDiscord> <Elegantbeef> But yes it's in the stdlib
[23:32:08] <FromDiscord> <undersquire> so is `in` right?
[23:32:18] <FromDiscord> <undersquire> at this point everything is a function 😉
[23:32:25] <FromDiscord> <undersquire> (which is honestly really cool(
[23:32:27] <FromDiscord> <undersquire> (edit) "cool(" => "cool)"
[23:32:31] <FromDiscord> <Elegantbeef> well they're templates but yes
[23:32:56] <FromDiscord> <Elegantbeef> They're all operators though hence the infix abillities
[23:33:28] <FromDiscord> <undersquire> yeah
[23:33:38] <FromDiscord> <undersquire> In reply to @Elegantbeef "well they're templates but": yeah i meant that Xd
[23:40:55] *** Joins: max22- (~maxime@2a01cb08833598003f4830a9e9f0c724.ipv6.abo.wanadoo.fr)
[23:41:37] <madprops> so I'm trying to have a random seed for sample selectio
[23:41:38] <madprops> var r_gen = initRand(int(epochTime()))
[23:41:58] <madprops> is there way to have that be in milliseconds ... or is there a better way to produce a "unique" rng?
[23:42:36] <FromDiscord> <Yardanico> ehm
[23:42:39] <FromDiscord> <Yardanico> random by default uses time already
[23:42:55] <FromDiscord> <Yardanico> ah, you want a stateful random seed generator
[23:43:15] <FromDiscord> <Yardanico> @madprops see how randomize does it - https://github.com/nim-lang/Nim/blob/version-1-4/lib/pure/random.nim#L627
[23:43:32] <madprops> i don't reallly need the seed. but using random wasn't giving out random results, it seems to use some sort of default seed
[23:43:47] <FromDiscord> <Yardanico> you need to call `randomize()` first
[23:43:58] <FromDiscord> <Yardanico> that will initialize the global rng state
[23:44:17] <FromDiscord> <Yardanico> but if you don't need a global state, you can just use the code from the link I gave
[23:44:52] <madprops> ah i see
[23:46:44] <FromDiscord> <Yardanico> but generally you can use any seed you want, just remember to not use random for cryptographic purposes
[23:50:48] <FromDiscord> <deech> Is there a `compiles(...)` like thing that also captures the suggestions and error message that would have been printed to stderr? Same with `typeof(...)`.
[23:51:37] <FromDiscord> <Yardanico> don't think so
[23:51:46] <FromDiscord> <Yardanico> i think you'll have to write a compiler plugin or something if you want this functionality
[23:58:03] <FromDiscord> <Yardanico> or if you code is self-contained, you can do it the dirty way and write the code to the nim file, run nim compiler on it and capture the result :D
[23:58:51] <FromDiscord> <deech> Would be useful I think, something like `compilesWithSuggestions` which outputs candidates and which argument failed to match in some structured way, maybe even a Nim object.
