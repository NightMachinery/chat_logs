[03:12:30] *** Joins: Edipofederle (~Edipofede@2804:18:780e:bb12:1d4f:1ca4:8fbc:d9df)
[03:12:40] *** Quits: Edipofederle (~Edipofede@2804:18:780e:bb12:1d4f:1ca4:8fbc:d9df) (Remote host closed the connection)
[08:30:24] *** Quits: kares[m] (~karesmatr@2001:470:69fc:105::30d1) (*.net *.split)
[08:30:24] *** Quits: MarcinMielyskiGi (~gitterlop@2001:470:69fc:105::3134) (*.net *.split)
[08:30:24] *** Quits: klobuczek[m] (~klobuczek@2001:470:69fc:105::1:24c) (*.net *.split)
[08:30:24] *** Quits: rebelwarrior[m] (~rebelwarr@2001:470:69fc:105::beba) (*.net *.split)
[08:30:24] *** Quits: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100) (*.net *.split)
[08:30:25] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (*.net *.split)
[08:30:25] *** Quits: Freaky (~freaky@user/freaky) (*.net *.split)
[08:30:57] *** Joins: Freaky (~freaky@ita.aagh.net)
[08:31:01] *** Quits: Freaky (~freaky@ita.aagh.net) (Signing in (Freaky))
[08:31:01] *** Joins: Freaky (~freaky@user/freaky)
[08:31:26] *** Joins: MarcinMielyskiGi (~gitterlop@2001:470:69fc:105::3134)
[08:37:03] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[08:37:14] *** Joins: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100)
[08:37:15] *** Joins: rebelwarrior[m] (~rebelwarr@2001:470:69fc:105::beba)
[08:37:15] *** Joins: klobuczek[m] (~klobuczek@2001:470:69fc:105::1:24c)
[08:37:16] *** Joins: kares[m] (~karesmatr@2001:470:69fc:105::30d1)
[09:44:03] <kares[m]> headius: just let the jossl pre sink in for a while - so ppl could try it out.
[09:44:03] <kares[m]> no complains so far, going to add a system prop flag to turn off the new logic and I am releasing today.
[09:44:22] <kares[m]> will respond on the related issue in the jruby tracker as well ...
[09:45:31] <kares[m]> will see how I'll have time - there's a ton of work that I did not complete + one jossl specific cert handling I needed to revert.
[09:45:32] <kares[m]> I'd like to at least look into the build issue and some long term test failures.
[11:50:55] *** Quits: yosafbridge` (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[12:10:40] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[12:13:46] *** Joins: edipofederle (~edipofede@2804:7830:2f90:cc00:e0a7:ceff:7aa6:de1b)
[12:20:30] <edipofederle> Hi Guys, I notice some builds with some strange errors, like this one (https://app.travis-ci.com/github/jruby/jruby/jobs/544784300) someone is aware of what is the issue?
[15:47:19] <puritylake[m]> <enebo[m]> "puritylake: I updated the branch..." <- Iâ€™ll take a look later when Iâ€™m home
[15:54:31] <edipofederle> Nice, I've pushed this PR (https://app.travis-ci.com/github/jruby/jruby/builds/240496208) and looks like it fix at least one build failed phase...
[17:17:07] <headius> Good morning
[17:17:08] *** Joins: edipofederle[m] (~edipofede@2001:470:69fc:105::30f1)
[17:17:41] *** Quits: edipofederle (~edipofede@2804:7830:2f90:cc00:e0a7:ceff:7aa6:de1b) (Quit: Client closed)
[17:27:32] <edipofederle[m]> Morning, 
[17:28:51] <edipofederle[m]> I lost my self a bit with the IRC, so not sure if my last message arrives; in any case, about build failing, One of the 2 errors was fixed here: https://github.com/jruby/jruby/pull/6907, at least looks like. 
[17:46:18] <headius> edipo.federle ah ok, I will look into that today
[17:46:42] <headius> Oops my string dedup patch had some regressions I didn't notice
[20:15:07] <headius> well that's weird... I can't get it to fail locally
[20:19:13] <edipofederle[m]> yep, It also works fine for me locally
[20:19:38] <headius> I will fix the ones that I can repro but all the String specs seem to pass
[20:21:23] <edipofederle[m]> Is something that will fixes the "The command "tool/maven-ci-script.sh" exited with 1." issue?
[20:21:45] <headius> which issue is that?
[20:21:55] <headius> the other failed job in travis, "check-versions"?
[20:21:57] <edipofederle[m]> I see that issue in several builds
[20:23:34] <edipofederle[m]> Some examples:
[20:23:34] <edipofederle[m]> |
[20:23:34] <edipofederle[m]> https://app.travis-ci.com/github/jruby/jruby/jobs/544833669
[20:23:34] <edipofederle[m]> https://app.travis-ci.com/github/jruby/jruby/jobs/544925661#L3884
[20:26:05] <edipofederle[m]> headius: yes, the check-versions
[20:26:41] <headius> edipo.federle: ah I believe that is because we updated the asm library and did not update jnr-ffi which depends on an older version of asm
[20:26:53] <headius> I will fix that today as well hopefully but it is just verifying all dependencies are aligned
[20:27:35] <edipofederle[m]> I see, is something I can help here?
[20:28:11] <headius> a PR to jnr/jnr-ffi to update to the same ASM 9.1 would move it along ðŸ˜€
[20:28:34] <edipofederle[m]> I will check it,
[20:29:57] <headius> I pushed a fix for the Hash#[]= regression so we will see how the other ones I can't repro look
[20:36:09] <edipofederle[m]> headius: cannto we update the asm version on Jruby from 9.1 to 9.2 (the one used in jnr-ffi) 
[20:36:20] <edipofederle[m]> s//?/
[20:43:47] <headius> ah yeah I am not sure which versions are which but we basically just need them all to match
[20:43:57] <headius> upgrading whereever is fine, it is a minor move
[21:11:12] <enebo[m]> headius: the jruby-jars error in check-version is from misaligned artifacts?
[21:12:13] <enebo[m]> I was looking at this a little earlier today and it appears we never end up running jruby-jars (this is my guess) do to maybe the base/core switch.  I can see that lib/jruby-jars/version.rb never seems to update which is my clue it is not running
[21:12:57] <headius> well it has loads of warnings about the misaligned deps in the output
[21:13:20] <headius> it does say something about artifacts not being present but I think that is because of the other errors
[21:13:26] <headius> but I don't know when this broke... it wasn't my string changes
[21:14:33] <headius> aha these only repro this way with objectspace enabled
[21:25:11] <enebo[m]> I could see it being deps having looked at commits
[21:25:39] <enebo[m]> It seemingly starts when I landed PR from 9.3.0.0-SNAPSHOT to 9.3.0.0 as the executable to run stuff
[21:26:12] <enebo[m]> Things are always a little murkier when we change version numbers as well
[21:33:40] <headius> ok these string changes are not really broken, but the way I am checking for instance vars also sees our synthetic object_id and objectspace each_object tracking variables
[21:34:26] <headius> the change was to avoid interning a string that has instance variables... I don't think there's any reason to avoid interning it if it has been assigned an object_id or registered with objectspace
[21:34:46] *** Joins: annabackiyam[m] (~annabacki@2001:470:69fc:105::1:2349)
[21:45:23] <headius> hmm this is a bit sticky to solve
[21:46:00] <headius> we do not have a clear separation of Ruby instance vars from internal vars we use for object_id, FFI pointer reference, and ObjectSpace tracking list
[21:46:48] <headius> this only fails in a full core/string run with objectspace enabled, because one spec sets an instance var on a string which causes future string's ivar tables (even for just objectspace) to have an extra slot
[21:47:16] <headius> a limitation of our instance variable manager being per-type and not more localized
[21:53:34] <headius> ok this is a little gross but should only impact interning strings when at least one string ivar has been set... I have to scan the ivar array for non-null entries unrelated to object_id etc
[21:54:00] <headius> normal strings in normal execution won't go through this nor will strings that only have the extended variables
[22:03:26] <headius> enebo: I pushed a fix for this regression that you should review
[22:03:47] <enebo[m]> ok
[22:03:56] <headius> this brings back all the issues with our current ivar table, like if one piece of code assigns an ivar or requests an object_id from a String, all future Strings will try to allocate a wider ivar table
[22:04:34] <headius> if you never assign an ivar or use object_id on those future objects they won't create any table, but this just shows the problem with having only one shape for a given type
[22:05:05] <headius> JRuby X will need to support a shape per object so we can localize one-off object_id or ivar usage better
[22:05:41] <headius> (and so we can efficiently allocate objects without always allocating all the possibly needed space
[22:05:44] <headius> lunch, bbl
[22:17:53] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:33:38] <headius> ok that seems to have fixed the string and objectspace failures... my hash fix seems to have regressed something else
[22:45:21] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[23:06:37] <edipofederle[m]> enebo: could you please maybe point me to some example on Jruby code regarding your comment here -> https://github.com/jruby/jruby/pull/6902#discussion_r735888554?
[23:07:21] <enebo[m]> edipo.federle: I will try and find something...
[23:07:56] <edipofederle[m]> I am looking at the PopenExecutor.popen(
[23:09:29] <enebo[m]> ShellLauncher.popen seems like a starting point
[23:10:06] <enebo[m]> That is called by methods in RubyIO so you can see how those parameters are set up
[23:10:33] <edipofederle[m]> nice,  I will check 
[23:10:50] <enebo[m]> And as a first swipe you may even be able to jusr call RubyIO.popen 
[23:10:58] <enebo[m]> It should work exactly as documented by Ruby APIs
[23:11:06] <edipofederle[m]> nice
[23:11:13] <enebo[m]> you just have to manually build your argument array
[23:11:22] <edipofederle[m]> yep
[23:11:27] <edipofederle[m]> I will try
[23:11:34] <enebo[m]> I would possibly suggest doing it a little lower level but in this case it is literally to exit without usage output
[23:11:48] <enebo[m]> So Ithink this may be the least amount of code to support it
[23:12:00] <edipofederle[m]> right, 
[23:12:06] <edipofederle[m]> thanks for now
[23:12:16] <enebo[m]> np
