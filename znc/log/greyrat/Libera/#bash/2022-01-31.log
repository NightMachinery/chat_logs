[00:00:12] <Filystyn> thank you
[00:00:15] <tirnanog> also, https://www.gnu.org/prep/standards/standards.html#Command_002dLine-Interfaces.
[00:00:37] <Blondie101010> sure, but very average
[00:01:53] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:05:41] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Remote host closed the connection)
[00:05:48] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Ping timeout: 268 seconds)
[00:06:06] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[00:07:38] *** Joins: mohab (~mohab@156.223.20.133)
[00:08:33] *** Quits: mohab (~mohab@156.223.20.133) (Client Quit)
[00:12:57] <Filystyn> the posix guidelines are nice
[00:13:19] <Filystyn> I will keep them in mind
[00:13:44] *** Quits: Strom (strom@fedora/strom) ()
[00:14:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:15:19] *** Joins: Strom (strom@fedora/strom)
[00:15:27] <timm> some more guidlines for naming of options: http://catb.org/~esr/writings/taoup/html/ch10s05.html#id2948149
[00:17:26] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[00:18:22] *** Joins: unop (~unop@194.154.249.71)
[00:24:18] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[00:25:35] *** Quits: Hash (~Hash@hashsecurity.org) (K-Lined)
[00:31:28] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[00:32:34] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[00:32:46] *** Joins: lavaball (felix@31.204.155.215)
[00:32:50] *** Joins: unop (~unop@194.154.249.71)
[00:33:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23) (Ping timeout: 245 seconds)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 245 seconds)
[00:34:08] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[00:34:37] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[00:34:42] <Blondie101010> yeah those are good starting guidelines
[00:34:50] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[00:35:32] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[00:37:44] *** Quits: timm (~timm@user/timm) (Ping timeout: 252 seconds)
[00:37:58] <transhumanist> Hi! Getting this error sed: -e expression #1, char 30: unknown option to `s' on this line (1)  ipaddress=10.100.0."$i"
[00:37:58] <transhumanist>    line (2) sed -i '/$ipadress/d' /etc/lxc/dnsmasq.conf echo "dhcp-host=$target,10.100.0.$i" >> /etc/lxc/dnsmasq.conf anyone know whats wrong?
[00:39:16] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[00:39:35] <larryv> pastebin, please
[00:39:42] <transhumanist>  ok sorry
[00:39:44] <tirnanog> you're hiding something. there is no s command employed there.
[00:40:12] <tirnanog> or rather, there is, but it hasn't been shown.
[00:40:42] <transhumanist> https://bpa.st/HMAQ
[00:40:44] <tirnanog> consider using set -x so that you can see how the arguments are actually composed.
[00:41:10] <tirnanog> oh, I see it.
[00:42:25] <tirnanog> silly me. you used single quotes, so the variable doesn't expand. but, also, you mispelled the variable name as "ipadress". be careful with that, by the way. it's technically a code injection.
[00:42:32] *** Joins: bluedust (~bluedust@103.161.144.140)
[00:42:47] <transhumanist>  ok thanks
[00:42:54] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[00:43:13] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:43:51] <tirnanog> further, you're passing echo as an argument to sed, which doesn't make any sense. punt the echo command to a distinct line.
[00:45:26] <Blondie101010> you'll have to manually clean up  /etc/lxc/dnsmasq.conf
[00:47:05] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 252 seconds)
[00:47:08] <akoana> why   (( i++ )) || true  ?
[00:47:34] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 260 seconds)
[00:47:54] <yustin> why debian ?
[00:49:18] *** Joins: rcernin (~rcernin@101.189.141.138)
[00:49:54] <larryv> if you're going to continue injecting $ipaddress into a sed RE you might want to escape the periods
[00:51:21] <wiscii> why not debian ?
[00:51:44] <wiscii> sounds OT
[00:54:40] <Blondie101010> larryv:  sure, do a sed on the string first to use with sed...  in reality, all you want is a quick search and bad matches aren't a big deal
[00:55:51] <larryv> ipaddress=10\\.100\\.0\\."$i" is also not a big deal
[00:56:01] <Blondie101010> getting a precise match on a variable can be hard
[00:57:56] <Blondie101010> until they need to support more or larger subnets and the mess gets unmanageable
[00:59:13] <Blondie101010> matching IPs with regex is seriously hard/extensive
[00:59:52] <Blondie101010> it's much easier in most programming languages
[01:00:25] <Blondie101010> anyways, this is getting side-tracked :/
[01:01:03] <wiscii> woolidge has a good example
[01:02:23] <larryv> Blondie101010: getting side-tracked in #bash? HOW DARE YOU
[01:02:23] <wiscii> https://mywiki.wooledge.org/BashFAQ/114
[01:03:01] <HelloShitty> Hello.I need some help here. I'm writting s small script that is suppoed to get 2 parameters from the command line. Then, I want to pass those 2 parameters to a function inside my script, among other parameters..
[01:03:06] <HelloShitty> I'm calling this function as:
[01:03:09] <HelloShitty> make_available "$@" cm_status "$luksDevice" "$luksKey"
[01:03:35] <HelloShitty> but then, I'm checking that "$luksKey" is an empty variable inside this make_available function
[01:04:03] <HelloShitty> However, before I send "$luksKey" into that function, the variable content is correct and present!
[01:04:12] <HelloShitty> What could be the issue here?
[01:04:18] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[01:04:26] <HelloShitty> Can anyone help with this? If needed, I can show the code!
[01:04:49] <larryv> kindly just show the code
[01:04:50] <wiscii> i have a crystal ball
[01:05:01] <larryv> saves us from guessing
[01:05:27] <HelloShitty> sure
[01:05:42] <Blondie101010> that's a scope issue
[01:05:47] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:06:00] <Blondie101010> HelloShitty:  in shell scripting, everything is in global scope by default
[01:06:33] <HelloShitty> https://gitlab.com/PsySc0rpi0n/howto-lukscontainer/-/blob/main/cryptoLuks.sh
[01:06:49] <HelloShitty> PLease bare with me. I'm just learning bash as I try to write the script
[01:07:06] <HelloShitty> So, if they have global scope by default, this is strange
[01:07:52] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[01:08:00] <Blondie101010> what is the output you get?
[01:08:01] <larryv> make_available() does not refer to $luksKey
[01:08:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:08:33] <Blondie101010> that function's parameter structure is weird
[01:08:42] <HelloShitty> crap
[01:08:45] <larryv> also you're passing these parameters but not actually using them
[01:08:54] <HelloShitty> there is one that I'm not using
[01:09:11] <larryv> like Blondie101010 said, everything defaults to global
[01:09:14] <HelloShitty> I was still working in the script, so there is still things to test, add, remove, etc
[01:09:15] <larryv> you're referring to globals
[01:09:23] <HelloShitty> ok ok
[01:09:33] <HelloShitty> I just seen I sent the wrong vaariable name
[01:09:33] <kurahaupo> HelloShitty: Global in the sense of "doesn't matter if you're inside a function", not global in the sense of "changes are shared between processes". The sharing between processes is strictly copying done when each process starts
[01:09:45] <HelloShitty> ok
[01:10:37] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[01:12:04] <kurahaupo> HelloShitty: line 72 $@ should be quoted
[01:12:16] <kurahaupo> !check
[01:12:33] <HelloShitty> thanks larryv kurahaupo Blondie101010 wiscii
[01:12:52] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[01:13:39] <HelloShitty> kurahaupo: line 72 entirely or just the $@?
[01:13:56] <HelloShitty> Those 3 or 4 lines are just for me to see what is going on with variables and etc
[01:14:38] * wiscii !qefs
[01:14:49] <wiscii> oops
[01:15:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:16:13] <Blondie101010> HelloShitty:  I liked the fact that you added traces
[01:16:45] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[01:16:49] <Blondie101010> that's a good part of troubleshooting
[01:17:38] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:18:03] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[01:18:07] *** Joins: goldfish (~goldfish@user/goldfish)
[01:18:18] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:18:28] <HelloShitty> An I'll need to add more
[01:18:34] <HelloShitty> s/An/And
[01:18:34] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[01:19:05] <Blondie101010> sure, but frankly I find your function structure too weird
[01:19:40] <HelloShitty> That cmd_status variable is used to kind of know which command in the make_available() function was the last one being executed so that the make_unavailable() function knows where to start undoing commands
[01:19:48] <HelloShitty> and I'm not sure they are being correctly set
[01:20:07] <HelloShitty> Which function? make_available()?
[01:20:51] <Blondie101010> it's not bad, but needs work, especially with parameter handling
[01:20:54] *** Joins: domicron8 (~domicron@gateway/tor-sasl/domicron)
[01:21:12] *** Quits: thyriaen_ (~thyriaen@dynamic-077-191-211-108.77.191.pool.telefonica.de) (Quit: Leaving)
[01:21:25] <larryv> i.e., they don't really do any
[01:21:50] <Blondie101010> well they use 1 and two globals
[01:22:12] <HelloShitty> hum, ok. But first I need to address another issue
[01:22:41] <HelloShitty> Not from the code itself but because the script can't create a folder inside /media/psysc0rpi0n/, but I think it should have permissions
[01:22:58] <HelloShitty> and I'm getting "permission denied" error
[01:22:59] *** Quits: goldfish (~goldfish@user/goldfish) (Client Quit)
[01:23:16] <HelloShitty> I changed the code already, it's already different from the link I sent here
[01:23:16] <Blondie101010> what happens if you try it manually?
[01:23:18] <HelloShitty> let me update it
[01:23:33] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[01:23:34] <Filystyn> nice nick ;-)
[01:23:34] *** domicron8 is now known as domicron
[01:23:56] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[01:23:57] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[01:24:07] <HelloShitty> it returns the same problem
[01:24:22] <HelloShitty> But shouldn't my username have access to this folder?
[01:24:22] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[01:24:47] <HelloShitty> Filystyn: hehe, ty
[01:24:50] <Filystyn> cd /media and ls -la
[01:24:57] <tirnanog> which? /media? unlikely.
[01:25:25] <HelloShitty> this psysc0rpi0n folder is owned by root
[01:25:26] *** Joins: tangy (~tangy@user/tangy)
[01:25:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[01:25:42] <HelloShitty> but when I mount a device, like an SD card, for instance
[01:25:42] *** Quits: tangy (~tangy@user/tangy) (Read error: Connection reset by peer)
[01:25:56] <HelloShitty> I mean, when I mount it using GUI desktop
[01:26:08] <HelloShitty> I think it doesn't ask me for root password
[01:26:21] <Filystyn> depends on system
[01:26:24] <HelloShitty> anyway, I think I can fix this
[01:26:33] <HelloShitty> Either by using sudo in the script
[01:26:42] <HelloShitty> or by simply changing the ownership of this folder
[01:26:46] <wiscii> which Linux ?
[01:26:50] <HelloShitty> Debian
[01:27:09] <tirnanog> namei -l /media/psysc0rpi0n
[01:28:39] *** Quits: magla (~gelignite@55d4f325.access.ecotel.net) (Quit: Stay safe!)
[01:30:37] <HelloShitty> you want me to paste here the output?
[01:31:05] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:14] *** Joins: rcernin (~rcernin@101.189.141.138)
[01:31:57] <larryv> pastebin it, by all means
[01:32:08] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:32:18] <Filystyn> tbh I don't get why you mount it on /media
[01:33:27] <Filystyn> or maybe the permission of place does not matter. Duno, I mount rarely anything
[01:34:53] <tirnanog> ad-hoc mounts are probably better directed to /mnt. regardless, it's improbable that either are going to be writeable by anyone other than the root user, which would, of course, impede mkdir.
[01:35:41] <wiscii> mount | grep helloshitty
[01:36:11] *** Joins: dontyouloveshort (~dontyoulo@p4ff9fe7c.dip0.t-ipconnect.de)
[01:36:28] <dontyouloveshort> hi
[01:36:55] <kurahaupo> HelloShitty: Contrary to your experience in other languages, quote marks don't make "strings". You generally need to use quotes around variable expansions, but you generally don't need quotes around things like "Q" (line 113)
[01:36:55] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[01:37:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:37:05] <dontyouloveshort> find ./* -type d -exec ls {}/*part01.rar \;         <- the second * is not working, is there a way to have a "catch all" for part of a filename in that position?
[01:37:19] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[01:37:23] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:37:48] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 256 seconds)
[01:37:52] <phy1729> !wayttd
[01:37:53] <greybot> What Are You Trying To Do?
[01:38:10] <HelloShitty> I don't have muc experience in any other languages. Maybe just basics in C
[01:39:02] <HelloShitty> oh, ok, so Q is seen as a string already?
[01:39:15] <HelloShitty> I thought it needed the quotes to make it a string... A char in this case
[01:39:38] <dontyouloveshort> running unrar x filename.....part01.rar     in a bunch of directories
[01:39:46] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[01:39:53] <dontyouloveshort> filename.....part01.rar changes in every case
[01:40:06] <phy1729> _in_ the directory?
[01:40:26] *** Joins: tangy (~tangy@user/tangy)
[01:40:31] *** Joins: polardroid (~polardroi@user/polardroid)
[01:41:32] <phy1729> If there are no dirs without a matching file,    find ./* -type d -execdir sh -c 'unrar ./*part01.rar' \;
[01:42:32] <Filystyn> you sure all are part01.rar ? that is a bit strange
[01:45:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[01:45:21] <Filystyn> I would do : find . -type f  -iname '.rar'
[01:45:38] <Filystyn> *.rar    ***
[01:45:50] <wiscii> !find
[01:45:50] <greybot> http://mywiki.wooledge.org/UsingFind
[01:46:09] <Filystyn> just to look at rar files
[01:46:25] * wiscii only testing
[01:46:31] <Filystyn> Can you even open arch without giving all parts ?
[01:47:09] <tirnanog> find . -name '*part01.rar' -type f -execdir sh -c 'unrar -x ./*part01.rar' \;
[01:48:32] *** Joins: winter (~winter@user/winter)
[01:48:57] <wiscii> brrr..
[01:49:27] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[01:49:32] <winter> I need to read to a file and write the output to the same file, i.e. `cat x > x`. this doesn't work since the redirection is done before the process is run, so the file is blank when `cat` is run. is my best bet to set a variable, or...?
[01:49:55] <wiscii> temp file
[01:50:03] <larryv> !pf 13 > winter
[01:50:04] <greybot> winter: https://mywiki.wooledge.org/BashPitfalls#pf13 -- Don't do this! -- cat file | sed s/foo/bar/ > file
[01:50:20] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:50:44] <winter> I didn't mean `cat` literally
[01:50:46] <winter> was just an example
[01:50:52] <winter> specifically:
[01:50:54] <wiscii> !xy
[01:50:54] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[01:51:00] <winter> yeah :p, sec
[01:51:08] <emanuele6> !-e > <akoana > why   (( i++ )) || true  ?
[01:51:08] <greybot> why   (( i++ )) || true  ?: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[01:51:21] <larryv> and the pf doesn't only apply to cat
[01:51:28] <winter> `jq '...' x.json > x.json`
[01:51:30] <akoana> emanuele6: yes, why?
[01:51:35] <tirnanog> it doesn't matter whether you are using cat or not. do read the link.
[01:51:56] <winter> gto it
[01:51:58] <winter> *got
[01:51:59] <winter> thanks.
[01:52:34] <winter> would a temporary variable work in lieu of a file, since my desired file content is in stdout?
[01:52:39] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:52:52] <emanuele6> akoana: `i++' evaluates to 0 the first time, which makes (( i++ )) exit 1, which makes the script exit if `set -e' is used
[01:52:54] <akoana> emanuele6: oh they used evil set -e, didn't see it
[01:52:57] <tirnanog> winter: yes.
[01:53:00] <wiscii> so, a subshell
[01:53:05] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Client Quit)
[01:53:10] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[01:53:24] <akoana> emanuele6: ok, now that makes sense, I never use set -e
[01:53:57] <winter> thanks wiscii, tirnanog
[01:54:07] <emanuele6> yeah, also they could have just used `(( ++i ))' or even   `! (( i++ ))' ( `!' doesn't just negate the pipeline it disables `set -e' for the negated command )
[01:54:36] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:54:38] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[01:54:45] <emanuele6> but that would require understanding what `set -e' does and how it works; and people use `set -e' only because they are cargo culting, not because it is actually useful to them
[01:55:03] *** Joins: b0b (~bob@user/b0b)
[01:55:05] *** Quits: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[01:55:10] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Quit: leaving)
[01:55:11] <wiscii> i use "set-ee" to sit on :)
[01:55:16] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Client Quit)
[01:55:22] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[01:55:32] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:55:45] <emanuele6> ( the `(( i++ ))' example is listed in the faq page linked by the factoid by the way along with other examples )
[01:56:05] <akoana> yeah, but in the script i was initialized with 2
[01:56:09] <wiscii> !factoids
[01:56:09] <greybot> My factoid database, and other things, are available at http://wooledge.org/~greybot/
[01:56:24] <akoana> so i wondered how i++ could fail...
[01:56:56] <akoana> sorry gotta go...
[01:56:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[01:57:01] <emanuele6> !cargocult > akoana
[01:57:01] <greybot> akoana: Cargo cult programming is copying pieces of code from other programs, without actually knowing what the code does. Subsequent debugging involves rearranging commands to minimize the number of error messages.
[01:57:16] <emanuele6> !crap
[01:57:16] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[01:57:24] <akoana> lol
[01:57:43] <tirnanog> # help '((' | grep Returns
[01:57:44] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[01:57:44] <shbot> tirnanog:     Returns 1 if EXPRESSION evaluates to 0; returns 0 otherwise.
[01:57:49] <tirnanog> duh.
[01:58:03] <tirnanog> too slow.
[01:58:13] <wiscii> jinx*
[01:58:20] *** Joins: Kyuzo68 (~Kyuzo@host-79-41-239-79.retail.telecomitalia.it)
[01:58:37] * wiscii lifts the jinx
[01:58:39] <wiscii> ;-)
[01:58:43] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:59:31] <wiscii> there's another curse known as a hex ;-)
[01:59:57] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[02:01:17] *** Joins: volga629 (~volga629@72.139.93.26)
[02:01:31] <HelloShitty> kurahaupo: Blondie101010: script is now working. I updated it in Gitlab. I can now think about improving the code
[02:01:38] <HelloShitty> Any suggestions and guidance are welcome!
[02:02:09] <wiscii> wing it !
[02:02:36] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:02:51] *** Joins: dtux_ (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[02:03:51] <HelloShitty> How do I add a line break between when I chose an option and when a message comes? For instance, when I chose 'a', I get this output in this way: aIssuing command
[02:04:15] <HelloShitty> What I want is to have the option 'a' in one line, and the message 'Issuing command' in the next line
[02:04:23] *** Quits: dtux (~dtux@2601:646:8f00:3f2:3d64:645:4c21:1bdc) (Ping timeout: 250 seconds)
[02:04:24] *** dtux_ is now known as dtux
[02:04:59] <welder> Is there a builtin or a program that can translate count in seconds into something like "3 hours 5 minutes 20 seconds:?
[02:05:13] <emanuele6> welder: yes, printf
[02:05:27] <djph> HelloShitty: "\nIssuing Command"
[02:06:03] <tirnanog> or by not using -n1.
[02:06:12] <HelloShitty> oh yeah... I was just looking what would be the line break
[02:06:27] <welder> emanuele6: what % ?
[02:06:27] <wiscii> HelloShitty: printf '%s\n' "a"
[02:06:43] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[02:07:04] <tirnanog> I would suggest to convey the script to shellcheck.net.
[02:07:26] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:07:32] <emanuele6> !meta greybot
[02:07:32] <greybot> emanuele6 1643406363(2022-01-28) learn I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands.
[02:07:52] <emanuele6> # printf '%(%H:%M)T\n' 1643406363
[02:07:53] <shbot> emanuele6: 21:46
[02:08:14] <welder> thank you
[02:08:16] <emanuele6> printf %()T can convert seconds since epoch into strftime string
[02:08:20] <HelloShitty> djph: that didn't work: "\nIssuing commad"
[02:08:29] <emanuele6> welder: but actually is that what you want?
[02:08:30] *** Quits: bingulo (~carlos@2804:431:e7c8:1e13:6aa5:f04b:2b75:a55b) (Remote host closed the connection)
[02:08:31] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[02:08:33] <tirnanog> it's not clear that conversion of an epoch was wanted, though.
[02:08:37] <tirnanog> didn't seem like it.
[02:08:48] <emanuele6> yeah, i think i misunderstood
[02:09:06] <welder> i'd like to translate uptime in seconds into human form
[02:09:07] <emanuele6> if you want to convert to hours minutes seconds use %
[02:09:09] <wiscii> HelloShitty: it did work, it put the \n into your string
[02:09:28] <welder> i fire off my program and id like to ask it in human readable form for how long it's been running
[02:10:00] <welder> well, a bash script, not a C program
[02:10:02] <HelloShitty> wiscii: this is what I got
[02:10:04] <HelloShitty> > a\nIssuing luksOpen command...
[02:10:06] <welder> nvm i got it
[02:10:27] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:10:50] <tirnanog> HelloShitty: yes, because \n is just a string literal when formatted with %s
[02:11:06] <HelloShitty> I'm not using %
[02:11:17] <HelloShitty> echo "\nIssuing luksOpen command..."
[02:11:18] <kurahaupo> tirnanog: those numbers are not "epochs"; those numbers are all relative to the same epoch (1 Jan 1970 00:00 UTC)
[02:11:23] <HelloShitty> this is what I am using
[02:11:27] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:40] <wiscii> !echo
[02:11:40] <greybot> echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[02:11:42] <emanuele6> welder: something like:   total_seconds=16434; hours=$(( total_seconds / 3600 )) minutes=$(( total_seconds % 3600 / 60 )) seconds=$(( total_seconds % 3600 % 60 q))
[02:12:28] <tirnanog> HelloShitty: ok. use printf.
[02:13:21] <emanuele6> ( without the q in the last assignment )
[02:13:55] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[02:13:55] <welder> emanuele6: yeah that's the hard way ;p
[02:14:43] *** Quits: ouestbillie (~gallup@192.222.211.58) (Remote host closed the connection)
[02:15:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[02:15:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:15:55] <emanuele6> welder: the qalculate calculator can do that conversion
[02:16:03] <emanuele6> $ qalc -c '16434s to hours'
[02:16:06] <emanuele6> 16434 × second = 4 h + 33 min + 54 s
[02:16:40] <emanuele6> ( without `-c', `-c' adds colours: qalc '16434s to hours' )
[02:16:59] <kurahaupo> !learn epoch An epoch is the reference date or moment of a calendar system. Many people use 1 Jan 1 CE as the epoch for the Gregorian calendar. Similarly POSIX also specifies 1 Jan 1970 CE 00:00:00 CE as the zero value for time_t values.
[02:16:59] <greybot> epoch is already defined: http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert Unix (epoch) timestamps to human-readable values epoch is : Thu Jan 1 00:00:00 1970
[02:17:09] <kurahaupo> !learn epochs An epoch is the reference date or moment of a calendar system. Many people use 1 Jan 1 CE as the epoch for the Gregorian calendar. Similarly POSIX also specifies 1 Jan 1970 CE 00:00:00 CE as the zero value for time_t values.
[02:17:09] <greybot> OK, kurahaupo
[02:17:28] <emanuele6> with -t you only get the the result:  qalc -t '16434s to hours'     4 h + 33 min + 54 s
[02:18:00] <emanuele6> but the best solution is to just write a function in bash and use that if this is not for interactive use
[02:18:07] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:19:46] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[02:20:10] <kurahaupo> !forget epoch
[02:20:10] <greybot> OK, kurahaupo
[02:20:10] <kurahaupo> !learn epoch http://mywiki.wooledge.org/BashFAQ /070 -- How do I convert Unix-epoch timestamps to human-readable values epoch. Zero was Thu 1/1/1970 00:00:00 UTC
[02:20:10] <greybot> OK, kurahaupo
[02:20:26] <kurahaupo> !learn epoch http://mywiki.wooledge.org/BashFAQ /070 -- How do I convert Unix-epoch timestamps to human-readable values? Zero was Thu 1/1/1970 00:00:00 UTC
[02:20:26] <greybot> epoch is already defined: http://mywiki.wooledge.org/BashFAQ /070 -- How do I convert Unix-epoch timestamps to human-readable values epoch. Zero was Thu 1/1/1970 00:00:00 UTC
[02:20:36] <kurahaupo> !forget epoch
[02:20:36] <greybot> OK, kurahaupo
[02:20:39] <kurahaupo> !learn epoch http://mywiki.wooledge.org/BashFAQ /070 -- How do I convert Unix-epoch timestamps to human-readable values? Zero was Thu 1/1/1970 00:00:00 UTC
[02:20:39] <greybot> OK, kurahaupo
[02:20:54] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:21:37] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[02:21:39] <emanuele6> !forget epoch
[02:21:39] <greybot> OK, emanuele6
[02:21:46] <welder> !forget epoch
[02:21:46] <greybot> I don't know what epoch is
[02:21:48] <welder> xD
[02:22:23] *** Joins: unop (~unop@194.154.249.71)
[02:22:42] <emanuele6> !learn epoch http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert Unix-epoch timestamps to human-readable values? Zero was Thu 01-01-1970 00:00:00 UTC
[02:22:42] <greybot> OK, emanuele6
[02:23:09] <emanuele6> the other factoid says CE though
[02:23:20] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:24:19] <emanuele6> actually, would there be something wrong with using:
[02:25:03] <kurahaupo> ah, thanks for fixing that
[02:25:18] <tirnanog> kurahaupo: by the same token, I find "unix-epoch time" questionable. I have never seen it be referred to as that. I have seen "posix time" and "unix time".
[02:25:19] <emanuele6>   printf '%(%H hours, %M minutes and %S seconds)T\n' "$seconds_to_convert"
[02:26:09] <emanuele6> oh, nevermind oops
[02:26:17] <emanuele6> that would not work
[02:26:32] <emanuele6> the hour part would be wrong
[02:26:50] <tirnanog> posix call it posix time. might as well use that, if we're going to split hairs: https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_15
[02:27:09] <kurahaupo> !forget epochs
[02:27:09] <greybot> OK, kurahaupo
[02:27:09] <kurahaupo> !learn epochs An epoch is the reference date or moment of a calendar system. Many people use 1/1/1 CE as the epoch for the Gregorian calendar. Similarly POSIX also specifies 1970-01-01 00:00:00 UTC as the zero value for time_t values.
[02:27:10] <greybot> OK, kurahaupo
[02:27:24] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[02:27:58] *** Joins: sinaowolabi_ (~SinaOwola@160.152.132.30)
[02:28:23] <emanuele6> if there was a "days since epoch" format sequence, you could use that and include days
[02:28:28] <emanuele6> then it would have worked
[02:28:38] <wiscii> you could add a really sweet PIN to shbot
[02:28:45] <kurahaupo> !learn epoch http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert POSIX timestamps to human-readable values, as offset seconds from the epoch Thu 1/1/1970 00:00:00 UTC
[02:28:45] <greybot> epoch is already defined: http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert Unix-epoch timestamps to human-readable values? Zero was Thu 01-01-1970 00:00:00 UTC
[02:29:04] <kurahaupo> !forget epoch
[02:29:04] <kurahaupo> !learn epoch http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert POSIX timestamps to human-readable values, as offset seconds from the epoch Thu 1/1/1970 00:00:00 UTC
[02:29:04] <greybot> OK, kurahaupo
[02:29:04] <greybot> OK, kurahaupo
[02:29:10] *** Joins: karstensrage (~karstensr@nibbler.warped.com)
[02:29:16] <kurahaupo> Is that better?
[02:29:20] <emanuele6> the other factoid says "1970-01-01 00:00:00 UTC"
[02:29:25] <wiscii> not a PIN .. more like gated entry
[02:29:27] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[02:29:27] *** Joins: karstensrage (~karstensr@user/karstensrage)
[02:29:57] <emanuele6> !forget epoch
[02:29:57] <greybot> OK, emanuele6
[02:30:23] <emanuele6> !learn epoch http://mywiki.wooledge.org/BashFAQ/070 -- How do I convert POSIX timestamps to human-readable values, as offset seconds from the epoch 1970-01-01 00:00:00 UTC
[02:30:23] <greybot> OK, emanuele6
[02:30:29] <jelly> of course it was a Thursday.
[02:30:34] *** Quits: Kyuzo68 (~Kyuzo@host-79-41-239-79.retail.telecomitalia.it) (Quit: Konversation terminated!)
[02:31:04] <emanuele6> # printf '%(A)T\n' 0
[02:31:05] <kurahaupo> (beat me to it; that was exactly what I was in the middle of writing)
[02:31:06] <shbot> emanuele6: A
[02:31:10] <emanuele6> # printf '%(%A)T\n' 0
[02:31:11] <shbot> emanuele6: Thursday
[02:31:21] <emanuele6> yep, it was a Thursday
[02:31:42] <kurahaupo> # date +%A -d @0
[02:31:44] <shbot> kurahaupo: Thursday
[02:32:09] <kurahaupo> # date +%A -d 01/01/0001
[02:32:10] <shbot> kurahaupo: Monday
[02:32:23] <emanuele6> # LANG=nb_NO.utf8 printf '%(%A)T\n' 0
[02:32:25] <shbot> emanuele6: torsdag
[02:32:42] <kurahaupo> # date +%s -d 01/01/0001
[02:32:44] <shbot> kurahaupo: -62135596800
[02:33:11] *** Joins: polve (~polve@user/polve)
[02:33:22] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:33:47] *** Quits: kilitary (~kilitary@188.242.187.4) (Quit: entering irc ...)
[02:34:29] <kurahaupo> # date +%s -d 'October 23, 4004 BCE' # but which timezone?
[02:34:30] <shbot> kurahaupo: date: invalid date 'October 23, 4004 BCE'
[02:34:31] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 245 seconds)
[02:34:37] <wiscii> # date +%U
[02:34:39] <shbot> wiscii: 05
[02:34:59] <kurahaupo> # date +%s -d '23 Oct 4004 BCE' # but which timezone?
[02:35:00] <shbot> kurahaupo: date: invalid date '23 Oct 4004 BCE'
[02:35:15] <emanuele6> interesting; in norwegian, days of the week are not uppercased
[02:35:59] *** Quits: wurstwasser_2 (~frank.hol@aftr-62-216-207-210.dynamic.mnet-online.de) (Remote host closed the connection)
[02:36:59] *** Joins: rcernin (~rcernin@101.189.141.138)
[02:37:07] <emanuele6> actually, that is the case in most languages. days of the week are only uppercased in english
[02:38:02] <emanuele6> s/uppercased/capitalised/g
[02:39:47] <OMGOMG> ..french, german, greek..
[02:40:22] <emanuele6> # LANG=de_DE.utf8 printf '%(%A)T\n' 0
[02:40:24] <shbot> emanuele6: Donnerstag
[02:40:30] *** Joins: igemnace (~ian@user/igemnace)
[02:40:34] <emanuele6> oh, also german
[02:40:40] <emanuele6> interesting
[02:40:53] <wiscii> that is news indeed
[02:40:58] *** Quits: aead (~aead@user/aead) (Ping timeout: 260 seconds)
[02:41:10] *** Joins: akoana (~ah@user/akoana)
[02:41:57] <wiscii> i presume the language defines the use of capitals
[02:42:07] <dontyouloveshort> phy1729, saw your answer...didnt work out ouf of the box but now i have togo to bed....will write a solution tomorrow
[02:42:09] <emanuele6> yes, it is defined in the locale file
[02:42:54] <dontyouloveshort> Filystyn, have to go to bed now, will present a solution tomorrow
[02:43:02] *** Quits: dontyouloveshort (~dontyoulo@p4ff9fe7c.dip0.t-ipconnect.de) (Quit: Leaving)
[02:43:23] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[02:43:53] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[02:44:56] <emanuele6> OMGOMG: in greek and german, yes; not in french though
[02:45:06] <emanuele6> at least not fr-FR
[02:45:28] <emanuele6> ( or fr-BE or fr-CH )
[02:46:07] <emanuele6> you can check with   new Date(0).toLocaleDateString("fr-FR", { weekday: 'long' })   in a web browser
[02:46:21] <emanuele6> so you don't have to install locales
[02:46:34] <emanuele6> ( nodejs also works )
[02:48:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[02:50:14] <OMGOMG> neat
[02:51:39] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:c98c:aeeb:469f:c2bc)
[02:52:10] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[02:52:19] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:c98c:aeeb:469f:c2bc) (Client Quit)
[02:52:41] *** Joins: rcernin (~rcernin@101.189.141.138)
[02:56:54] <omegatron> as a side note: in german, you would write 'donnerstags' if you mean 'every thursday' (unless it's the start of a sentence of course)
[02:57:05] <omegatron> so, it's not always uppercase
[02:58:44] <omegatron> but the single day is
[02:59:15] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:59:29] <kurahaupo1> wiscii: In English the days of the week and the months of the year are treated as names, and a name has an initial capital letter. Languages vary on both points.
[03:01:23] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 250 seconds)
[03:02:15] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[03:02:17] <wiscii> kurahaupo1: actually, names of gods or other relious icons .. hense capitalisation
[03:03:47] <wiscii> also paganism
[03:05:39] <kurahaupo1> It's not just gods whose names are capitalized. People, companies, countries, cities, rivers, pets, even ideas.
[03:06:08] <wiscii> but not all days of the week by all people ..
[03:07:04] <wiscii> most religious pomp is capitalised because "Religion"
[03:07:28] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 250 seconds)
[03:07:39] <wiscii> et al the other egotists
[03:07:42] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[03:07:59] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:08:07] <twkm> sigh.
[03:08:15] <useretail> how to run for loop in random order but through all elements?
[03:08:30] <twkm> elements of what?
[03:08:34] <useretail> of array
[03:08:58] *** Quits: zoe` (~zoe@xdsl-31-164-51-195.adslplus.ch) (Ping timeout: 260 seconds)
[03:09:08] <twkm> arrange to randomize the keys, then iterate over that.
[03:10:08] <twkm> alteratively, use an associative array then they keys will seem random-ish without additional effort.
[03:10:12] <wiscii> is a for loop suitable ?
[03:11:52] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[03:12:05] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[03:12:42] <useretail> any examples?
[03:12:43] <useretail> # myArray=(1 2 4 8); for num in ${myArray[@]}; do echo $num; done
[03:12:49] <shbot> useretail: 1
[03:12:49] <shbot> useretail: 2
[03:12:49] <shbot> useretail: etc... ( http://ix.io/3O59 )
[03:12:59] <emanuele6> !qefs
[03:12:59] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[03:13:12] *** Joins: rgrinberg (~textual@187.223.115.137)
[03:13:57] <emanuele6> !faq random
[03:13:57] <greybot> https://mywiki.wooledge.org/BashFAQ/026 -- How can I randomize (shuffle) the order of lines in a file?  Or select a random line from a file, or select a random file from a directory?
[03:14:14] <emanuele6> there is an example that shows how to shuffle a bash array in pure bash
[03:14:29] <Earnestly> plsno
[03:14:49] <twkm> # declare -A a; a[100]=foo a[101]=bar a[102]=baz a[103]=quux ; declare -p a
[03:14:51] <shbot> twkm: declare -A a=([102]="baz" [103]="quux" [100]="foo" [101]="bar" )
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:09] <emanuele6> that is not random though :D
[03:15:15] <Earnestly> just get data into array in random order
[03:15:20] <Earnestly> in first place
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:41] <Earnestly> Or don't even use array, pipe directly, use shuf if available
[03:15:57] <Earnestly> so for loop becomes while read loop
[03:15:59] <emanuele6> it depends on the content of the array
[03:16:06] <Earnestly> numbers
[03:16:17] <twkm> the faq entry has already been shown.  i was showing the sort-of-random way an associative array appears.
[03:16:18] <emanuele6> if it's numbers, use shuf, yes
[03:16:20] <Earnestly> emanuele6: (or clearly content that is sortable)
[03:16:39] <Earnestly> "ordered"
[03:17:01] <Earnestly> 'shuf' then becomes plug-in filter which can be removed if not random wanted
[03:17:22] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 260 seconds)
[03:17:38] <wiscii> so Yoda
[03:17:56] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[03:17:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:17:58] <Earnestly> not-random becomes word
[03:18:28] <wiscii> sure, it's guud
[03:19:35] *** Quits: sinaowolabi_ (~SinaOwola@160.152.132.30) (Ping timeout: 250 seconds)
[03:21:52] <wiscii> i like the idea of randomly building the array initially
[03:27:36] <wiscii> s/y i/y, i/
[03:27:56] <wiscii> xD why-eye man!
[03:28:04] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:28:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Read error: Connection reset by peer)
[03:30:53] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:31:05] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[03:32:48] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[03:33:03] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[03:34:13] *** Quits: N4buc0 (~N4buc0@191.250.117.129) (Quit: Leaving)
[03:34:17] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 240 seconds)
[03:35:36] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:36:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:36:48] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:37:43] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[03:39:09] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:40:09] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Remote host closed the connection)
[03:40:33] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:42:32] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[03:43:01] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[03:43:02] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[03:45:27] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Quit: WeeChat 3.3)
[03:45:34] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[03:46:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[03:47:16] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:47:30] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:48:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:50:35] *** Joins: sinaowolabi_ (~SinaOwola@160.152.132.30)
[03:50:52] *** Joins: dtux (~dtux@2601:646:8f00:3f2:67a4:3701:f910:3c83)
[03:51:53] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:53:20] <kurahaupo1> If you just want something that *seems* random, use a pseudo-random number generator that has the same period as the length of the array.
[03:53:48] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:56:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[04:00:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[04:00:39] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[04:02:29] *** Quits: liveacoustic (~adison@user/liveacoustic) (Ping timeout: 250 seconds)
[04:03:07] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:04:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[04:04:06] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:10:38] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[04:11:33] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[04:13:19] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[04:16:11] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:19:42] *** Quits: ouestbillie (~gallup@192.222.211.58) (Quit: leaving)
[04:20:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:22:51] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:25:19] *** Quits: ouestbillie (~gallup@192.222.211.58) (Client Quit)
[04:25:41] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:26:38] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Quit: leaving)
[04:28:22] *** Joins: kj (~kj@shadow.cloud-ready.com)
[04:29:06] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[04:29:26] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:29:42] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[04:34:56] *** Joins: volga629 (~volga629@72.139.93.26)
[04:35:43] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:39:41] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[04:39:59] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[04:44:55] *** Joins: bluedust (~bluedust@103.161.144.140)
[04:45:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:48:57] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[04:49:55] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[04:49:55] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:51:38] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:52:32] *** Joins: kj- (~kj@kj.aerisnetwork.net)
[04:55:21] *** Quits: kj (~kj@shadow.cloud-ready.com) (Ping timeout: 256 seconds)
[04:57:53] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 252 seconds)
[04:58:45] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:00:06] *** Joins: arinov (~arinov@213.194.126.155)
[05:00:13] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:03:53] *** Joins: aod (~a@190.75.30.237)
[05:06:07] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:13:03] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:90f8:a601:613b:75b)
[05:13:13] *** Joins: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net)
[05:18:59] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:21:16] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[05:27:08] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:28:21] *** Parts: polardroid (~polardroi@user/polardroid) ()
[05:28:28] *** Quits: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net) (Remote host closed the connection)
[05:29:13] *** Joins: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net)
[05:29:55] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[05:30:17] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:15] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Quit: Konversation terminated!)
[05:33:38] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[05:34:06] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 245 seconds)
[05:36:00] *** Joins: haliucinas (~haliucina@5.20.153.21)
[05:41:43] *** Joins: gonyav (~gv@2a01:620:caee:6900::d85)
[05:41:48] <Celmor[m]> is there an effective difference between "~'/path'" and "~/'path'"? I thought quotes are interpreted before tilde
[05:42:46] <tirnanog> # printf '%s\n' "~'/path'" "~/'path'"
[05:42:48] <shbot> tirnanog: ~'/path'
[05:42:48] <shbot> tirnanog: ~/'path'
[05:42:55] <tirnanog> clearly, there is a difference.
[05:43:31] *** Quits: rgrinberg (~textual@187.223.115.137) (Read error: Connection reset by peer)
[05:43:56] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[05:44:45] <tirnanog> even if the double quotes were merely for ornamentation, there is still a difference.
[05:44:50] <tirnanog> even if the double quotes were merely for ornamentation, there is still a difference.
[05:44:52] <tirnanog> oops, sorry.
[05:45:29] <tirnanog> specifically, in the case of ~'/path', the tilde will not be expanded. the reason for this is explained in the manual.
[05:51:01] *** Quits: gonyav (~gv@2a01:620:caee:6900::d85) (Remote host closed the connection)
[05:51:01] *** Joins: malina (~malina@user/malina)
[05:53:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:56:14] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:904d:637b:7fe7:d86b)
[05:56:46] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:56:57] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:56:58] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[05:56:58] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[05:58:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:58:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[05:58:40] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[05:59:27] *** Joins: shaggysi0 (~shaggysi0@2.25.207.125)
[05:59:28] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[05:59:39] *** Joins: zeden (~zeden@user/zeden)
[06:00:22] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[06:01:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:904d:637b:7fe7:d86b) (Ping timeout: 245 seconds)
[06:01:14] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:05:03] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[06:05:50] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[06:06:03] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:07:41] <kurahaupo1> Celmor[m]: text that is quoted is given a (hidden) mark to that effect, at the same time as the quotes themselves are removed. That's how glob knows not to do anything, even though globbing happens later than dequoting
[06:08:22] <kurahaupo1> If you managed to create a user whose username was /path then ~'/path' would probably work, but that would be a horrible thing to do to your system
[06:09:05] <tirnanog> it would never work.
[06:09:22] <tirnanog> the reason for this is explained under Tilde Expansion.
[06:10:05] <tirnanog> n.b. the constraint that none of the charaters in the tilde-prefix be quoted is not fulfilled.
[06:10:46] <Celmor[m]> alright then, I was just confused by the error message but then quickly found out that bash doesn't like the quotes being there
[06:10:57] <Celmor[m]> got "Stale file handle"
[06:11:32] <kurahaupo1> Celmor[m]: Do you have some sort of centralized user database?
[06:12:04] <kurahaupo1> Or rather, not "do you have one", but rather "could your PAM settings include one by mistake?
[06:13:39] <Celmor[m]> not that I know of
[06:14:59] *** Joins: ominionx (~ominionx@172.58.136.5)
[06:15:17] *** Quits: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net) (Ping timeout: 240 seconds)
[06:15:22] *** Joins: rcernin (~rcernin@101.189.141.138)
[06:16:31] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[06:18:57] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Read error: Connection reset by peer)
[06:20:09] <tirnanog> neither of ~'/path' and ~/'path' specify a login name (ever). the second form works, in so far as the tilde will be replaced with the value of HOME. hence, if that's what you wanted, it's fine.
[06:20:33] <tirnanog> if it seems confusing, you are also free to write it as "$HOME/path".
[06:21:42] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[06:22:01] *** Joins: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net)
[06:24:17] *** Parts: darwin (d@fsf/member/darwin) (Leaving)
[06:26:11] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:29] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:33:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:33:13] *** Joins: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de)
[06:33:35] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[06:33:57] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:10] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:35:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50:4cb1:cccb:3f96:2061)
[06:38:00] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[06:38:39] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:39:32] *** Quits: shaggysi0 (~shaggysi0@2.25.207.125) (Remote host closed the connection)
[06:40:11] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[06:43:02] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[06:46:20] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:46:53] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:54:28] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[06:58:27] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[07:02:35] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::3385)
[07:07:42] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::3385) (Quit: lainon)
[07:08:57] *** Quits: jos1 (~jos3@dyndsl-091-096-043-071.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[07:09:35] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:10:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:10:42] *** Quits: qub411_ (~user@14-202-13-18.tpgi.com.au) (Quit: WeeChat 3.4)
[07:13:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:14:11] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[07:16:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:21:58] *** Joins: smrtz (~smrtz@user/smrtz)
[07:22:38] <wiscii> time for some laughs:
[07:22:40] *** Joins: jos1 (~jos3@host-091-097-191-150.ewe-ip-backbone.de)
[07:23:13] <wiscii> https://github.com/TinCanTech/easy-tls/blob/master/dev/easytls-shellcheck.sh
[07:23:24] <wiscii> !check wiscii
[07:23:51] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:24:17] <larryv> bot's not here.
[07:24:32] <wiscii> larryv: oh, ok
[07:24:37] *** Joins: tekcap (~tekcap@lnsm1-montreal02-142-118-212-10.internet.virginmobile.ca)
[07:24:46] <wiscii> even bots dream ;-)
[07:29:35] *** Joins: crashrep (~crashrep@user/crashrep)
[07:30:37] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:30:55] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[07:31:18] <lotharn> so i have been scraping websites.
[07:31:18] *** Joins: qub411 (~user@14-202-13-18.tpgi.com.au)
[07:31:36] <lotharn> collecting foodbank and charity data
[07:32:21] <lotharn> and one of them blocked my ip. i cant blame them too much, cause i was doing something that was probably kinda expensive.
[07:33:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:33:41] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 245 seconds)
[07:33:55] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:34:43] <lotharn> which has brought me a new problem and i could just continue from a different ip, or use some sort of proxy. is there something that is particularly easy to use with curl?
[07:35:42] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:39] <ormaaj> usually scrape a static html example if you can and test on that. depends what kind of scraping. Scraping usually implies "high level" things like browser automation. If you're doing something expensive then possibly look into ETL type tools and interface more directly with their backend services if possible, rather than scraping the application.
[07:37:25] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[07:38:52] <lotharn> right, i'm working with that now. i stupidly went a probing into a search api.
[07:38:53] <ormaaj> (nabq). If you're basing it all on shell scripts it's probably about time to go for something less of a toy.
[07:38:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[07:38:56] <tekcap> Anyone willing to look at a few lines of code? I'm very new to bash scripting and so this is probably a joke for most of you.
[07:39:37] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:39:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:09] <larryv> tekcap: feel free to throw in a pastebin link and ask your question / describe your problem, and if someone wants to help they will
[07:41:50] *** Joins: Atque (~Atque@user/atque)
[07:42:15] <lotharn> how about a webproxy? can that work with curl?
[07:43:32] <tekcap> I need to to loop through the nameserver variable when I use the dnsvalidator command. I'll use this since my code is there: https://floobits.com/PoshCode/PowerShell.Slack.com/file/bash%20test:5
[07:43:36] <wiscii> https://paste.centos.org/ <-- paste
[07:43:54] <tekcap> Ok, let me switch to this paste site
[07:44:54] <tekcap> https://paste.centos.org/view/13316f4c
[07:46:57] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Ping timeout: 240 seconds)
[07:46:59] <wiscii> tekcap: my apologies, i did not mean for you to switch, it was only an example
[07:47:38] <wiscii> just bad timing ;-)
[07:48:01] *** Quits: aod (~a@190.75.30.237) (Ping timeout: 250 seconds)
[07:48:02] <tekcap> All good! always good to know about other services
[07:48:14] <wiscii> +1
[07:48:47] <larryv> tekcap: presumably you intend NAMESERVER_FILES to contain five elements
[07:48:59] <larryv> it actually only has one
[07:49:00] <tekcap> I thought nesting loops would solve my issue, but then I realized the inner loop will go through all the elements before performing the second iteration of the outer loop
[07:49:09] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:49:51] <wiscii> that is a loop
[07:51:21] <larryv> tekcap: not really sure i understand what you're going for
[07:52:13] <tekcap> I basically need the dnsvalidator command to use the next nameserver in the list, every time the for loop increments
[07:52:26] * wiscii presumes some obscure array expansion
[07:53:31] <larryv> so when $i is xaa, you want to invoke dnsvalidator -tL nameserveraa, when $i is xab, invoke dnsvalidator -tL nameserverab, and so on?
[07:53:37] <lotharn> i am completely lost as to what i am looking at
[07:53:46] <tekcap> Yes, that's exactly it!
[07:53:51] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[07:54:58] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:55:01] <larryv> might want to use an associative array, if your bash is new enough
[07:56:15] <tirnanog> yes. if the number of elements in both arrays would otherwise be the same, an assoc array would be nice.
[07:56:54] *** Quits: sinaowolabi_ (~SinaOwola@160.152.132.30) (Ping timeout: 256 seconds)
[07:57:07] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 250 seconds)
[07:57:31] <tirnanog> or, you can simply use i as a subscript for both arrays.
[07:57:45] <tekcap> Alright, thanks for the tip, I'll go see what those things are
[07:58:37] <tirnanog> for i in "${!DICTIONARY_FILES[@]}"; do something "${DICTIONARY_FILES[i]}" ... "${NAMESERVER_FILES[i]}" ...
[07:59:00] <tirnanog> note the exclamation mark, which would produce the array keys rather than their values.
[07:59:23] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[07:59:43] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[08:02:01] <wiscii> na!l on the head
[08:09:20] *** Joins: bluedust (~bluedust@103.161.144.140)
[08:10:14] <tirnanog> incidentally, your namserver array contains only one element, owing to the lack of whitespace.
[08:10:21] <tirnanog> at least, as shown.
[08:12:17] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[08:14:33] *** Quits: jos1 (~jos3@host-091-097-191-150.ewe-ip-backbone.de) (Remote host closed the connection)
[08:15:13] *** Joins: jos1 (~jos3@host-091-097-191-150.ewe-ip-backbone.de)
[08:18:09] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:18:13] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[08:18:36] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:20:33] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:20:49] <lotharn> i figured it out
[08:21:28] <tekcap> Just playing with associative array now, but not sure how to access both key and value. I only seem to be able to access the one or the other, but not both
[08:21:30] <tekcap> https://floobits.com/PoshCode/PowerShell.Slack.com/file/bash%20test:10
[08:22:35] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[08:23:33] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[08:24:43] <tirnanog> the same principle applies.
[08:24:45] <larryv> # declare -A foo=([x]=1 [y]=2 [z]=3); for key in "${!foo[@]}"; do printf '%s %s\n' "$key" "${foo[$key]}"; done
[08:24:47] <shbot> larryv: z 3
[08:24:47] <shbot> larryv: y 2
[08:24:47] <shbot> larryv: x 1
[08:25:01] *** Joins: foul_owl (~kerry@94.140.8.108)
[08:25:04] <tirnanog> I almost pasted the exact same thing.
[08:25:24] <larryv> ^_^;;
[08:26:46] *** Joins: vlm (~vlm@user/vlm)
[08:26:51] *** Joins: maryo87 (~Maryo@user/maryo)
[08:27:14] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[08:28:40] <tekcap> Ahhh larryv that's perfect
[08:32:02] *** Quits: foul_owl (~kerry@94.140.8.108) (Ping timeout: 256 seconds)
[08:32:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:35:21] *** Quits: timj (~timj@user/timj) (Ping timeout: 245 seconds)
[08:39:40] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[08:40:14] *** Joins: tangy (~tangy@user/tangy)
[08:41:10] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[08:42:31] *** Quits: Quack (~Quack@185.21.216.169) (Quit: Hunters spotted)
[08:45:02] *** Joins: foul_owl (~kerry@94.140.8.107)
[08:48:02] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[08:49:54] *** Joins: timj (~timj@user/timj)
[08:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:52:38] *** Quits: tekcap (~tekcap@lnsm1-montreal02-142-118-212-10.internet.virginmobile.ca) (Remote host closed the connection)
[08:53:09] *** Joins: tekcap (~tekcap@lnsm1-montreal02-142-118-212-10.internet.virginmobile.ca)
[08:55:28] *** Joins: kr1x (~kr1x@170.249.0.122)
[08:56:15] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[09:00:56] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[09:01:04] *** Joins: Quack (~Quack@185.21.216.169)
[09:04:31] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[09:10:55] *** Quits: tekcap (~tekcap@lnsm1-montreal02-142-118-212-10.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[09:25:07] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:29:02] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:01] *** Joins: sinaowolabi_ (~SinaOwola@160.152.132.30)
[09:32:09] *** Joins: XV9 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[09:33:01] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:33:04] *** Quits: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de) (Remote host closed the connection)
[09:33:26] *** Joins: millido (~millido@84.210.150.128)
[09:33:58] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[09:34:52] *** Quits: XV8 (~XV8@2601:5cb:c001:50:4cb1:cccb:3f96:2061) (Ping timeout: 250 seconds)
[09:39:06] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[09:43:43] *** Joins: bluedust_ (~bluedust@117.241.177.177)
[09:46:03] *** Quits: jos1 (~jos3@host-091-097-191-150.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[09:46:37] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 256 seconds)
[09:47:03] *** Joins: timj (~timj@user/timj)
[09:52:08] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:52:22] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[09:56:14] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:56:31] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:58:57] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[10:01:21] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[10:01:34] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[10:01:46] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[10:01:55] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[10:02:08] <matthewcroughan> Can anybody think of a way to make systemctl fail when checking the status of a service
[10:02:18] <matthewcroughan> I want systemctl to fail if `systemctl restart thing` fails
[10:02:24] <matthewcroughan> sadly it returns 0 in all cases, I think
[10:02:31] <matthewcroughan> https://www.freedesktop.org/software/systemd/man/systemctl.html#Exit%20status
[10:02:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[10:02:41] <tarzeau> use service restart thing and checke $?
[10:02:50] <matthewcroughan> systemctl, not service
[10:03:13] <tarzeau> yes service does the systemctl thing, but maybe it probably is also not giving proper return codes
[10:03:25] <tarzeau> but they have systemctl --status and systemctl --all --failed
[10:03:27] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[10:03:45] <matthewcroughan> service is a legacy init thing, it's not present on my distribution, no wrappers are available
[10:03:51] <tarzeau> but i wouldn't try to script anything of systemctl. it's prone to break due to changes
[10:03:59] <lotharn> i love learning.
[10:04:02] <tarzeau> what is your distribution?
[10:04:05] <matthewcroughan> NixOS
[10:04:08] <lotharn> watching the numbers go up
[10:04:12] <lotharn> Nix?
[10:04:16] <tarzeau> what nmbers?
[10:04:23] <lotharn> i wanted to play with nix.
[10:04:31] <matthewcroughan> Yes. I'm using the Nix language to write a NixOS VM test, which spawns QEMU and does some stuff.
[10:04:46] <matthewcroughan> I simply need to test whether a unit has failed to restart or not, but `systemctl` doesn't return exit codes that I'd expect.
[10:04:52] <lotharn> i'm pulling 715 pages of a website every 15-20 seconds
[10:04:58] <tarzeau> matthewcroughan: i often found systemctl failing to restart services
[10:05:10] <tarzeau> matthewcroughan: the only best check is to rely on ps output
[10:05:23] <matthewcroughan> I mean, that's not what I'm asking for, but thanks.
[10:05:39] <lotharn> the numbers are going down IF ANYONE CARES
[10:05:40] <tarzeau> matthewcroughan: it doesn't only not return exit codes, it also doesn't return any kind of feedback (text msg) if it was good or not
[10:05:52] <matthewcroughan> It certainly does return that lol?
[10:06:01] <matthewcroughan> Methinks you just have a bias against systemd
[10:06:03] <tarzeau> matthewcroughan: no it certainly absolutely does not!
[10:06:10] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:06:17] <matthewcroughan> Great. Another systemd argument.
[10:06:19] <lotharn> how can you not make systemctl fail?
[10:06:31] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[10:06:38] <lotharn> hint:dont install systemd
[10:06:39] <tarzeau> you can think whatever you want. i'm with multiple other NONbiased system admins, and they agree with my examples (where it just fails)
[10:06:51] <matthewcroughan> I don't care what sysadmins think about systemd.
[10:06:51] <lotharn> i kinda like systemd
[10:06:59] <tarzeau> i absolutely hate it
[10:07:10] <matthewcroughan> Most syadmins are stuck in 1980.
[10:07:13] *** Joins: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de)
[10:07:14] <lotharn> it feels powerful and dynamic.
[10:07:16] *** Joins: polve (~polve@user/polve)
[10:07:20] <matthewcroughan> The motto is down, not across
[10:07:25] <tarzeau> it feels cumbersome and bloated, just look at https://github.com/systemd/systemd
[10:07:30] <matthewcroughan> You failed to read ASR
[10:07:35] <lotharn> i hear people wince when i set my dhcp to 5 minutes.
[10:07:50] <lotharn> like their on a 4mbps network.
[10:07:50] <e36freak> matthewcroughan: do you get a more meaningful exit status if you explicitly stop and start instead of restart?
[10:07:55] <lotharn> theyre
[10:08:02] <tarzeau> the number of commits, issues, and pull requests. is not healthy
[10:08:03] <matthewcroughan> e36freak: hmm, let me try
[10:08:22] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[10:08:26] *** Joins: Mo (~Mo@dynamic-095-116-146-164.95.116.pool.telefonica.de)
[10:08:31] * lotharn points at your unhealthy mom.
[10:08:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:09:04] <tarzeau> get the source, run find|wc -l and du -sh on it...
[10:09:30] <tarzeau> if everyone had to build the source of all binaries they want to run, it would look different
[10:09:35] <matthewcroughan> "Some people are just a waste of skin". I read that from a grumpy syadmin bulletin board ran in 1974. The people who wrote that, ironically, have now become exactly that.
[10:10:06] <matthewcroughan> Those are the same people who hate systemd today, unable to see that they have in fact just become too disgruntled to realise the problems it solves.
[10:10:50] *** Joins: kurahaupo (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au)
[10:11:05] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:11:25] <matthewcroughan> e36freak: sadly not. Despite the fact that the unit crashes, it still reports exit code 0
[10:11:28] * tarzeau is just glad that "mehrheit ist nicht wahrheit" and "popularity is in no way an indicator for quality"
[10:12:49] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Ping timeout (120 seconds))
[10:13:14] *** Joins: fef (~thedawn@user/thedawn)
[10:13:40] <e36freak> matthewcroughan: can you check is-failed after the fact, i guess?
[10:14:21] <e36freak> or is-active
[10:14:45] <matthewcroughan> `is-failed` is still 0
[10:15:12] <matthewcroughan> the unit is in fact failed, yet `is-failed` returns 0
[10:15:22] <matthewcroughan> `Main process exited, code=exited, status=1/FAILURE`
[10:16:32] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[10:17:54] *** Quits: bluedust_ (~bluedust@117.241.177.177) (Remote host closed the connection)
[10:18:44] <e36freak> by definition...
[10:18:46] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[10:18:52] <e36freak> is-failed PATTERN... Check whether any of the specified units are in a "failed" state. Returns an exit code 0 if at least one has failed, non-zero otherwise. Unless --quiet is specified, this will also print the current unit state to standard output.
[10:18:52] *** Joins: maryo87 (~Maryo@user/maryo)
[10:19:02] <matthewcroughan> I want the inverse of this then
[10:19:12] <e36freak> then you want is-active, or just invert the exit status
[10:19:20] <matthewcroughan> active I did not interpret to be running
[10:19:22] <matthewcroughan> hm
[10:19:28] <e36freak> read the man page
[10:19:35] <matthewcroughan> I did, it's not an easy read
[10:19:36] <matthewcroughan> thank you
[10:20:14] <matthewcroughan> Actually, how about this
[10:20:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:20:41] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[10:20:44] <matthewcroughan> `is-failed` does in fact fail and error correctly if the unit has failed
[10:21:03] <matthewcroughan> Isn't that bizarre, based on what you just said?
[10:21:16] <matthewcroughan> I just had something that was swallowing the output which I just got rid of
[10:23:26] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:23:45] <matthewcroughan> The unit is in the failed state, but it returns an exit code of >0
[10:26:33] <matthewcroughan> Ah, it works, but I have to let the service REALLY fail. There's a race condition where the service is restarting, and working for a split second, and I happened to look too quickly.
[10:27:21] <matthewcroughan> Really what I want to check for is `has-failed`, to see if it has ever failed in history, which is not quite available, but a simple sleep statement will do
[10:27:56] <grawity> systemctl show -P NRestarts foo
[10:29:50] <matthewcroughan> grawity: I would still need to sleep for 5 seconds to see if the unit has been restarted by systemd more than once
[10:30:05] <matthewcroughan> so it's better just to let the unit fail by waiting for 5 seconds, then check if it `is-active`
[10:30:45] <matthewcroughan> All of this stuff in fact would require me sleeping, I can't imagine a situation where I don't have to wait, I'm happy with it for now
[10:30:52] <matthewcroughan> Thank you e36freak and grawity
[10:32:12] <Spawns> matthewcroughan: hello
[10:32:42] *** Joins: jmew (~jmew@host-78-147-81-209.as13285.net)
[10:32:42] *** Quits: jmew (~jmew@host-78-147-81-209.as13285.net) (Changing host)
[10:32:42] *** Joins: jmew (~jmew@user/jmew)
[10:34:51] <matthewcroughan> Spawns: yellow
[10:35:50] <tirnanog> matthewcroughan: no, it's not bizarre. if we take 0 to mean EXIT_SUCCESS - effectively, an indicator of truthiness - then it makes sense that the verb "is-failed" would not be true in the case that no failure has, in fact, occurred. it's "is-failed", not "is-ok".
[10:36:09] <matthewcroughan> yeah, makes sense, derp
[10:36:16] <tirnanog> now, you could quibble as to why they chose is-failed, but this is definitely the right behaviour as it stands.
[10:36:37] <matthewcroughan> either way, I do have to wait for the unit to fully fail, otherwise `is-active` will have a race condiiton where the unit is in the middle of restarting, and is "active" for a millisecond
[10:36:59] <matthewcroughan> so I have to wait until the unit fully fails and stops attempting to restart, before I can determine whether the unit has failed
[10:37:17] <matthewcroughan> And it might take seconds for the unit to fail, so show -P NFailures would also require time to wait
[10:37:26] <tirnanog> it's hard problem to contend with in general. if a supervisor keeps something in the foreground, it can reasonbly report a startup failure.
[10:37:27] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[10:37:45] <tirnanog> but if it's something that double forks, it's not so easy.
[10:38:28] <tirnanog> not that this is bash related, but you can probably expect things to go better with units that don't use a "forking" process model.
[10:39:57] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[10:40:35] <tirnanog> not to mention that, just because a program didn't rapidly abort with a non-zero exit status, it doesn't necessarily mean that it's functioning correctly thereafter.
[10:40:56] *** Quits: rcernin (~rcernin@101.189.141.138) (Quit: WeeChat 3.4)
[10:42:02] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[10:42:22] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[10:43:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:44:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:45:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:46:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[10:47:51] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:21] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[10:50:04] *** Joins: Atque (~Atque@user/atque)
[10:52:35] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[10:52:48] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[10:53:49] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[10:53:58] *** Joins: selckin (~selckin@user/selckin)
[10:58:34] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[10:59:34] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:00:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:03] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[11:00:16] *** Joins: unop (~unop@194.154.249.71)
[11:01:35] *** Joins: vysn (~vysn@user/vysn)
[11:02:23] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[11:02:33] *** Quits: sinaowolabi_ (~SinaOwola@160.152.132.30) (Ping timeout: 256 seconds)
[11:06:36] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:06:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:08:25] *** Joins: tekcap (~tekcap@vlnsm7-montreal02-142-117-175-138.internet.virginmobile.ca)
[11:09:10] *** Quits: kurahaupo (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au) (Ping timeout: 260 seconds)
[11:11:29] *** Joins: bluedust (~bluedust@117.241.177.177)
[11:13:14] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[11:13:27] *** Joins: kurahaupo (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au)
[11:13:44] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[11:15:04] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:15:30] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[11:15:48] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[11:15:51] *** Joins: unop (~unop@194.154.249.71)
[11:16:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:16:20] *** Joins: sinaowolabi_ (~SinaOwola@160.152.35.191)
[11:18:25] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[11:18:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:22:00] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[11:22:21] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[11:22:46] *** Joins: Atque (~Atque@user/atque)
[11:22:57] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[11:24:05] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[11:24:34] *** Quits: sinaowolabi_ (~SinaOwola@160.152.35.191) (Max SendQ exceeded)
[11:27:02] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[11:27:28] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[11:30:10] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[11:30:18] *** Joins: sinaowolabi_ (~SinaOwola@160.152.35.191)
[11:30:20] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[11:30:26] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[11:30:38] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[11:31:09] <grawity> well, no, systemd expects Type=forking services to double-fork – it literally uses the fork/exit event to transition the service into 'active'
[11:31:56] <grawity> well-written daemons (which don't rush to daemon() as soon as they can) can use that to report startup failures in a way that's useful for both systemd and sysv
[11:33:43] <geirha> though is there ever a point in daemonizing a service with systemd?
[11:33:48] <grawity> yes
[11:33:57] <grawity> see 3 messages up
[11:34:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:34:51] <grawity> if it's something that other services would want to use in After=, then it needs to accurately report when it's "ready"
[11:34:55] *** Joins: flipchan (~filip@188-169-255-31.dsl.utg.ge)
[11:34:59] <grawity> Type=simple can't do that at all
[11:35:13] <geirha> Well yes, I get that systemd has support for it, but I see no point in a service daemonizing itself when it is to be handled by systemd
[11:35:31] *** Quits: sinaowolabi_ (~SinaOwola@160.152.35.191) (Ping timeout: 250 seconds)
[11:35:35] <grawity> that's exactly the point, it's repurposed as a generic way to report when it's ready
[11:35:36] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[11:36:00] <grawity> one that works equally well with the service being started via systemd and with it being started via dumb shellscript
[11:36:24] <grawity> sure if your service implements Type=notify without daemonizing, that's a lot better, but it's also systemd-specific
[11:36:37] *** Joins: sinaowolabi__ (~SinaOwola@41.58.235.30)
[11:37:17] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 240 seconds)
[11:37:22] <grawity> (I mean some programmers are like "sd_notify()? over my dead body lol")
[11:38:15] <xiaomiao> more like "I can't even test that nonsense, go away with your ... thing"
[11:38:58] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:39:13] <grawity> sure you can, open a socket listener before you spawn the service
[11:39:33] *** Joins: Earnestly (~earnest@user/earnestly)
[11:39:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:39:43] <grawity> I've seen simple tests set up whole infrastructures with supporting daemons, your test can create a socket
[11:42:26] *** Quits: sinaowolabi__ (~SinaOwola@41.58.235.30) (Ping timeout: 256 seconds)
[11:42:46] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[11:43:52] *** Joins: sinaowolabi__ (~SinaOwola@41.58.235.30)
[11:44:04] *** Joins: lavaball (felix@31.204.155.215)
[11:46:21] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[11:46:29] *** o is now known as niko
[11:46:52] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[11:47:28] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[11:47:46] *** Joins: sinaowolabi_ (~SinaOwola@41.58.235.30)
[11:49:57] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:50:29] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:54:31] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 245 seconds)
[11:55:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[11:56:10] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[11:56:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:56:20] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:56:35] *** Joins: unop (~unop@194.154.249.71)
[11:57:26] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 250 seconds)
[11:58:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:58:26] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Read error: Connection reset by peer)
[11:58:36] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[12:00:39] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:90f8:a601:613b:75b) (Ping timeout: 250 seconds)
[12:02:18] *** Joins: totenkoph (~scythe@user/totenkoph)
[12:02:37] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[12:02:49] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Quit: SCV ready!)
[12:03:16] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[12:03:58] *** Joins: terrorjack5 (~terrorjac@2a01:4f8:1c1e:509a::1)
[12:04:35] *** Joins: heiner1 (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[12:04:50] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 268 seconds)
[12:04:51] *** Joins: thomas25- (thomas25@brought.to.you.by.bnc4free.com)
[12:04:57] *** Quits: Distemper (harry@2a01:7e00::f03c:91ff:fe6c:8379) (Ping timeout: 240 seconds)
[12:05:05] *** Joins: shalok_ (~shalok@user/shalok)
[12:05:27] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: sm (~sm@plaintextaccounting/sm) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: Celmor[m] (~celmormat@2001:470:69fc:105::434) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: M4[m] (~owl4cemat@2001:470:69fc:105::1:3235) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Error (~err@user/error) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: bertptrs (~quassel@user/bertptrs) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: mute (m@crx.fan) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Abdullah (user21348@user/abdullah) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: shalok (~shalok@user/shalok) (Ping timeout: 268 seconds)
[12:05:37] *** shalok_ is now known as shalok
[12:05:52] *** Joins: Errr (~err@ethicalslacker.net)
[12:06:01] *** Joins: Distemper (~harry@li1089-127.members.linode.com)
[12:06:04] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: thomas25 (thomas25@brought.to.you.by.bnc4free.com) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: oj_ (oj@user/oj) (Ping timeout: 268 seconds)
[12:06:04] *** terrorjack5 is now known as terrorjack
[12:06:05] *** Joins: oj (oj@user/oj)
[12:06:16] *** Joins: bertptrs (~quassel@user/bertptrs)
[12:06:32] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Ping timeout: 250 seconds)
[12:06:48] *** Joins: Abdullah (user21348@user/abdullah)
[12:06:55] *** heiner1 is now known as heiner
[12:07:39] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[12:07:39] *** Joins: unop_ (~unop@194.154.249.71)
[12:07:45] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[12:07:47] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[12:08:00] *** Joins: yustin (~yustin@user/yustin)
[12:08:01] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[12:09:25] *** Quits: unop (~unop@194.154.249.71) (Ping timeout: 256 seconds)
[12:09:25] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[12:11:25] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:11:54] *** Joins: timj (~timj@user/timj)
[12:12:34] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:12:45] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[12:16:53] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[12:18:35] *** Joins: Celmor[m] (~celmor@2001:470:69fc:105::434)
[12:18:57] *** Joins: user282069 (~user@li1512-248.members.linode.com)
[12:20:02] *** Joins: mute (m@crx.fan)
[12:20:20] *** Joins: M4[m] (~owl4cemat@2001:470:69fc:105::1:3235)
[12:20:25] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[12:20:47] *** Joins: sm1 (~sm@plaintextaccounting/sm)
[12:20:49] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:21:18] *** Joins: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57)
[12:22:00] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[12:25:17] *** Quits: flipchan (~filip@188-169-255-31.dsl.utg.ge) (Ping timeout: 256 seconds)
[12:26:31] *** Joins: yitz (~yitz@exercism/yitz)
[12:27:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[12:28:14] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[12:29:07] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[12:30:00] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[12:30:02] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[12:31:34] *** Joins: [diablo]6 (~diablo]@user/diablo/x-9068044)
[12:31:52] *** Joins: flipchan (~filip@188-169-255-31.dsl.utg.ge)
[12:31:58] *** Quits: flipchan (~filip@188-169-255-31.dsl.utg.ge) (Changing host)
[12:31:58] *** Joins: flipchan (~filip@user/flipchan)
[12:32:57] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 240 seconds)
[12:33:00] *** [diablo]6 is now known as [diablo]
[12:33:48] *** Quits: unop_ (~unop@194.154.249.71) (Remote host closed the connection)
[12:34:21] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[12:34:37] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:35:00] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[12:35:13] *** Quits: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de) (Remote host closed the connection)
[12:35:15] *** Joins: totenkoph (~scythe@user/totenkoph)
[12:35:29] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[12:36:51] *** Joins: han-solo (~hanish@user/han-solo)
[12:36:54] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[12:40:18] *** Quits: karstensrage (~karstensr@user/karstensrage) (Quit: ZNC - http://znc.in)
[12:41:34] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[12:42:20] *** Joins: situ_ (situ@nat-pool-brq-t.redhat.com)
[12:43:06] *** Joins: jos1 (~jos3@dyndsl-178-142-069-007.ewe-ip-backbone.de)
[12:43:20] *** Joins: Payam38 (~Payam@138.106.57.132)
[12:43:28] *** Joins: arinov (~arinov@213.194.126.155)
[12:43:34] *** Joins: karstensrage (~karstensr@nibbler.warped.com)
[12:44:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8900:12c3:7bff:fe6d:d374)
[12:44:52] <Payam38> Hi, In my shell file I am trying to install a deb package. I want it to return an exit code if it fails. I use this shell file in Gitlab ci. and if there isn't any file I would like to be able to return a non zero exit code.
[12:44:59] <Payam38> How do I do it?
[12:45:03] *** Joins: bluedust (~bluedust@117.241.177.177)
[12:46:37] *** Quits: sinaowolabi_ (~SinaOwola@41.58.235.30) (Ping timeout: 240 seconds)
[12:46:39] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:46:44] <Payam38> or to be more clear I can have an exit code from prev command but how do I quite the script and raise that code so the CI says the job failed?
[12:47:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[12:47:35] *** Joins: shad (~shad@user/shad)
[12:50:53] <colo> Payam38, not sure I understand your problem - can you nopaste code?
[12:51:09] <Payam38> solved it
[12:51:16] *** Joins: mongy (~mongy@user/mongy)
[12:51:23] <Payam38> I need to run a test blabal eq 1 and then exit 1
[12:51:47] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[12:57:29] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[12:57:39] *** Joins: rendar (~rendar@user/rendar)
[12:57:48] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[12:59:46] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[13:01:22] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:05:13] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[13:05:52] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[13:06:11] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (Ping timeout: 245 seconds)
[13:06:18] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 260 seconds)
[13:07:17] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[13:07:23] *** Quits: parst (sid30815@id-30815.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[13:07:38] *** Joins: BlueShark (sid10311@user/blueshark)
[13:08:11] *** Joins: _gabriele (~gabriele@host-95-249-111-197.retail.telecomitalia.it)
[13:08:11] *** Quits: _gabriele (~gabriele@host-95-249-111-197.retail.telecomitalia.it) (Changing host)
[13:08:11] *** Joins: _gabriele (~gabriele@user/gabriele)
[13:08:11] *** _gabriele is now known as gabriele
[13:08:56] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 250 seconds)
[13:09:33] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:09:40] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[13:10:08] *** Joins: parst (sid30815@id-30815.helmsley.irccloud.com)
[13:10:41] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 252 seconds)
[13:10:41] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (Ping timeout: 252 seconds)
[13:10:48] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[13:11:11] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[13:11:48] *** Joins: ljharb (sid43720@user/ljharb)
[13:12:06] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[13:15:46] *** Quits: all64bits (sid503654@id-503654.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[13:15:52] *** Joins: fling (~fling@user/fling)
[13:16:03] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:16:30] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[13:17:05] *** Joins: timm (~timm@user/timm)
[13:17:05] *** Joins: all64bits (sid503654@id-503654.ilkley.irccloud.com)
[13:18:14] <clime> is there a better alternative to screen - one that would allow scrolling up by default and one that wouldn't block output pipe of the process in "copy mode"?
[13:18:53] <Soliton> you could try tmux.
[13:18:54] *** Quits: geirha (~geirha@user/geirha) (Ping timeout: 250 seconds)
[13:19:13] <clime> ye, i think it also has some cumbersome scrolling...
[13:19:15] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[13:19:20] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[13:19:30] <Soliton> well, not sure what magic you expect from scrolling.
[13:19:42] <grawity> terminal multiplexers can't easily "allow scrolling up"... especially if they have features like copy-mode, or multiple windows, or even split panes
[13:19:46] <emanuele6> i don't understand either
[13:20:05] <Soliton> the outer terminal would have to have some screen/tmux integration otherwise it has no clue.
[13:20:07] <Payam38> I don't know what you guys mean but really like to learn
[13:20:11] <Payam38> what is copy-mode?
[13:20:24] <grawity> if you want to fully keep the terminal's scrollback you could use something like dtach or abduco, I guess, which are *not* multiplexers with fancy features, but literally just do attaching/detaching
[13:20:25] <Soliton> a GNU screen thing. nothing to do with shell.
[13:20:55] <clime> ok, i understand it might be complex but it's clumsy
[13:20:55] <Payam38> is tmux something like terminator?
[13:21:13] <Payam38> terminal emulator?
[13:21:18] <emanuele6> but i don't even understand what you find cumbersome to be honest
[13:21:30] <grawity> it's clumsy by nature, because there's really no good way for tmux/screen to swap out whole scrollbacks when you switch windows
[13:21:48] <clime> what is crazy is that if you leave screen in copy mode and exit the parent shell, it can essentially block all the execution of the program because it blocks stdout somehow - that's really unexpected - you have then process on 100% doing nothing (e.g. for many hours)
[13:22:29] <clime> so if tmux can at least this do better, then i guess i would try it
[13:22:31] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[13:23:45] <gnoo> i just tried it in tmux and it didn't block the output (with while sleep 1; do printf '%s\n' $((x++)) ; done )
[13:24:05] <grawity> yeah in tmux it seems to only pause the screen, but not the actual process
[13:24:13] <clime> ok, cool
[13:24:29] <grawity> I tried with `while sleep 1; do date; done`
[13:24:38] <colo> that somewhat reeks of flow control?
[13:24:42] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[13:24:50] <gnoo> i tried it in screen and it does not block either
[13:25:58] <clime> well, i already saw two instances of this, maybe it depends on the process how it uses the output pipe (blocking, non-blocking mode)...not sure
[13:26:16] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 250 seconds)
[13:27:31] <clime> here is the reported issue that i saw on superuser: https://superuser.com/questions/220139/gnu-screen-copy-mode-blocks-execution
[13:27:50] <clime> (that's not me reporting :))
[13:28:02] <colo> GNU screen here, did not block execution either. flow control via ^S and ^Q does block. maybe it's some screen setting?
[13:29:09] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[13:29:25] *** Joins: unop (~unop@194.154.249.71)
[13:29:56] <grawity> hmm let's see what happens if I wait long enough for some buffer to fill up
[13:30:12] <grawity> (...what "output pipe" do they mean?)
[13:30:21] <colo> ftr, ^A^S does suspend the program in the window
[13:30:32] <emanuele6> that is the part i didn't understand
[13:30:50] <grawity> I guess they're referring to the pty, which is indeed a bit pipe-like
[13:30:59] <emanuele6> > one that wouldn't block output pipe of the process in "copy mode"
[13:31:03] <grawity> but I don't buy the explanation
[13:31:25] <grawity> or at least
[13:31:37] <grawity> the idea that it has to unavoidably work this way
[13:33:14] *** Joins: millido (~millido@84.210.150.128)
[13:35:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:36:07] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[13:36:19] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:39:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:40:07] <dob1_> it is right that $* is not quoted ? No, imho.  sudo sh -c 'echo "docker run --rm flyway/flyway:8.4.3 $*" > /usr/local/bin/flyway &
[13:40:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:40:28] <grawity> ok, waited long enough, exited copy mode, and it still shows no signs of blocking – in tmux at least
[13:41:00] <grawity> so I guess that means tmux takes a snapshot for 'copy-mode' but leaves the underlying terminal emulation running, like it should
[13:41:47] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:41:58] <clime> grawity: thanks
[13:42:17] <gnoo> Mon Jan 31 03:55:20 PM +0545 2022^[[A
[13:42:19] <gnoo> Mon Jan 31 03:57:51 PM +0545 2022
[13:42:21] <gnoo> in screen
[13:42:54] <emanuele6> wow
[13:43:57] <grawity> (I did 'while sleep 0.1' so that's at least ~140 kB of data, and it showed no sign of having been paused)
[13:44:24] *** Joins: goldfish (~goldfish@user/goldfish)
[13:44:42] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:45:07] <gnoo> tmux has larger scrollback buffer iirc so it could be it allocates memory more freely than screen which tries to be conservative?
[13:46:13] *** Joins: sinaowolabi_ (~SinaOwola@41.58.235.30)
[13:46:42] <colo> scrollback is just a ring buffer, it's not an upper limit
[13:47:22] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[13:48:35] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[13:48:41] *** dob1_ is now known as dob1
[13:49:07] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:50:09] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[13:50:09] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[13:51:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:52:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:55:27] *** Joins: xx (~xx@user/xx)
[13:57:05] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[13:59:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:59:38] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:59:55] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[14:01:17] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:01:53] *** Joins: geirha (~geirha@user/geirha)
[14:02:00] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:04:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[14:05:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[14:06:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[14:10:19] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.30)
[14:10:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[14:11:20] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:14:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[14:18:03] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[14:21:00] <tercaL> I use the command: export CF_Token="xxx" in bash, before renewing my ssl certs. However that definition disappears when I log out from shell. How to make $CF_Token permanent?
[14:21:42] <colo> tercaL, look at https://mywiki.wooledge.org/DotFiles
[14:21:58] <grawity> would be best to incorporate it in your cert renewal tool
[14:22:27] <grawity> (in particular because cert renewal should be automated via cron anyway...)
[14:23:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:23:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:23:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:24:13] <tercaL> grawity: I do use cron but standalone mode (acme.sh) creates troubles on that.
[14:24:35] <grawity> don't use standalone mode if you're running a webserver
[14:24:50] <grawity> just have that webserver serve the challenge files
[14:24:57] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[14:25:09] <tercaL> And lastly, in csh, whenever I type a command, like nano and press the Up arrow on keyboard, my shell gives me the recent commands I executed with "nano", how to have this feature with bash? That's very useful.
[14:25:30] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[14:26:03] <tercaL> (This is FreeBSD)
[14:26:20] *** Lord_of_Life_ is now known as Lord_of_Life
[14:26:37] <colo> tercaL, I think you can get that via readline's history-search-forward and history-search-backward
[14:26:39] <tercaL> grawity: Good idea. But how about DNS mode? (cf_dns) ?
[14:27:27] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[14:27:32] <colo> at $prevprevjob, I used dehydrated with custom hooks to automate a number of LE/ACME interactions. worked well. we used the DNS-01 challenge there with out own ADNS (powerdns with postgres backend)
[14:27:42] <colo> our own*
[14:28:01] <grawity> tercaL: in bash, yeah, there is a readline function that you can use ~/.inputrc to bind keys to (like https://paste.rs/70Z)
[14:28:34] <tercaL> grawity: What keys are these, at the example link?
[14:28:39] <grawity> up/down arrows
[14:28:52] <colo> tercaL, that will depend on your terminal emulator
[14:29:20] <colo> I use rxvt-unicode, can to bind those two readline functions to my up and down keys, I use these two lines in my ~/.inputrc
[14:29:24] <colo> "\e[A": history-search-backward
[14:29:24] <colo> "\e[B": history-search-forward
[14:29:39] <grawity> technically yes, but I think arrows are standard vt220 keys that all teminals do the same way
[14:30:33] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:32:01] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:34] *** Joins: fef (~thedawn@user/thedawn)
[14:32:52] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[14:33:26] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[14:35:37] *** Joins: unop_ (~unop@194.154.249.71)
[14:36:11] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[14:36:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[14:37:53] *** Quits: unop (~unop@194.154.249.71) (Ping timeout: 256 seconds)
[14:41:34] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[14:45:38] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[14:49:26] *** Quits: sinaowolabi__ (~SinaOwola@41.58.235.30) (Ping timeout: 256 seconds)
[14:49:29] *** Quits: sinaowolabi_ (~SinaOwola@41.58.235.30) (Ping timeout: 268 seconds)
[14:50:12] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:55:07] *** Joins: seninha (~seninha@user/seninha)
[14:55:40] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[14:57:39] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[15:02:26] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[15:04:31] *** Joins: sinaowolabi_ (~SinaOwola@169.159.65.116)
[15:05:38] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[15:06:10] <tercaL> binding keys ^^ worked like a charm. Thank you guys.
[15:06:47] <tercaL> colo: defining CF_TOKEN in my (root) .bash_profile, would cron job fetch that token from there on each renew? (Using DNS mode)
[15:06:58] *** Joins: hlauk (~hlauk@176.33.108.116)
[15:07:27] <tercaL> I manually tried it, and it works (created the certs with that way) but I'm logged in as root and the $CF_Token is defined, I don't know how cron would get it, though.
[15:07:57] *** Quits: hlauk (~hlauk@176.33.108.116) (Remote host closed the connection)
[15:09:35] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[15:09:50] <grawity> tercaL: no, for cron I would instead set it as part of the cron job
[15:10:30] <grawity> possibly put it in another file, then do "@daily . /etc/cftoken.sh && acme" using . to source that file
[15:10:49] <grawity> possibly "@daily . ~/.bash_profile && acme" if you really want it to just read the whole file
[15:11:12] <grawity> possibly "@daily export CF_TOKEN=whatever && acme" but that's not great because it'll show up in syslogs & cron email messages
[15:11:13] <tercaL> good idea. Would --renew-hook /home/command.sh work too?
[15:11:23] <grawity> dunno, I don't use acme.sh
[15:11:24] <tercaL> acme.sh --cron --renew-hook ..
[15:11:40] <tercaL> Got it
[15:12:41] <tercaL> will try these suggestions, thanks
[15:13:00] *** Quits: capt_mercaptan (~capt_merc@user/capt-mercaptan/x-4508049) (Quit: Leaving)
[15:13:21] *** Joins: bluedust (~bluedust@117.241.177.177)
[15:15:01] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[15:15:30] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:18:20] *** Quits: kurahaupo (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[15:20:19] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[15:25:46] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:26:16] *** Joins: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de)
[15:26:41] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:28:21] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[15:28:31] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:32:11] *** Joins: kurahaupo (~kurahaupo@pa49-182-38-76.pa.qld.optusnet.com.au)
[15:32:30] *** Quits: Payam38 (~Payam@138.106.57.132) (Quit: Client closed)
[15:34:12] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[15:35:07] *** Quits: sinaowolabi_ (~SinaOwola@169.159.65.116) (Ping timeout: 268 seconds)
[15:35:15] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[15:35:29] *** Joins: cdown (~cdown@188.214.11.14)
[15:35:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:37:07] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 250 seconds)
[15:39:17] *** Joins: malina (~malina@user/malina)
[15:40:46] *** Joins: volga629 (~volga629@72.139.93.26)
[15:42:35] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[15:43:16] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[15:45:28] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[15:46:04] *** Joins: lavaball (felix@31.204.155.215)
[15:47:05] *** Joins: fef (~thedawn@user/thedawn)
[15:47:22] *** Joins: sinaowolabi_ (~SinaOwola@41.190.3.83)
[15:47:27] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 268 seconds)
[15:49:07] *** Joins: han-solo (~hanish@157.44.200.34)
[15:54:14] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:55:10] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[15:55:10] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[15:55:28] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 268 seconds)
[15:56:05] *** Joins: sinaowolabi (~SinaOwola@41.58.229.45)
[15:56:18] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[15:57:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:57:19] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[15:59:46] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[16:00:04] *** Parts: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Konversation terminated!)
[16:00:09] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[16:00:45] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[16:00:49] <Masklin> Suppose a user by mistake puts     PATH="blablapath" in their .bashrc.
[16:01:12] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:01:16] <Masklin> They get confused because no commands work
[16:01:37] <Masklin> Is there a simpler solution than running e.g. vim with its absolute path on .bashrc to rectify?
[16:01:56] <grawity> PATH=/usr/bin
[16:02:16] <Masklin> or that xD
[16:02:24] <grawity> or, I guess it depends on 1) what makes /usr/bin/vim complex, 2) what sort of access the user has to the machine
[16:02:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[16:02:35] <grawity> if they have a GUI file manager, use the GUI file manager
[16:02:54] *** Quits: unop_ (~unop@194.154.249.71) (Remote host closed the connection)
[16:03:05] <tarzeau> Masklin: the user will find out and fix the mistake he made?
[16:03:31] *** Joins: unop (~unop@194.154.249.71)
[16:03:31] <Masklin> tarzeau: No they won't because they're in class and panicking.
[16:03:39] <geirha> The obvious solution is to reinstall ubuntu
[16:04:03] <djph> the obvious solution is to delete all their files, and re-create their $HOME from /etc/skel
[16:04:05] <Masklin> geirha: Finally some sense, thanks m8
[16:04:09] <tarzeau> some are trying to fix it by panick rebooting?
[16:04:19] <djph> ... wait, no, that's the BOFH solution.
[16:05:12] *** Joins: maryo (~Maryo@user/maryo)
[16:05:23] <tarzeau> uses that annoy me with breaking their SHELL get this from me as a special gift as their shell: https://github.com/alexmyczko/autoexec.bat/blob/master/COMMAND.COM
[16:06:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[16:08:37] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[16:09:07] *** Joins: filohuhum_ (~dante@gateway/tor-sasl/filohuhum)
[16:10:11] <Masklin> tarzeau: That's pretty funny. Funny guy.
[16:13:18] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[16:13:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[16:15:21] *** Joins: bluedust (~bluedust@117.207.237.207)
[16:16:53] *** Joins: liveacoustic (~adison@user/liveacoustic)
[16:17:40] *** Quits: sinaowolabi (~SinaOwola@41.58.229.45) (Ping timeout: 268 seconds)
[16:18:54] *** Quits: kurahaupo (~kurahaupo@pa49-182-38-76.pa.qld.optusnet.com.au) (Ping timeout: 268 seconds)
[16:20:19] *** Joins: Adoi (~Adoi@user/adoi)
[16:24:59] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:26:15] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[16:26:41] *** Quits: situ_ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 256 seconds)
[16:26:47] *** Joins: revolve (~u0_a227@82-132-237-215.dab.02.net)
[16:27:16] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[16:27:31] *** Joins: unop (~unop@194.154.249.71)
[16:28:00] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[16:30:48] *** Quits: XV9 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:30:52] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[16:31:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[16:31:28] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[16:35:37] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:36:44] *** Joins: shad (~shad@user/shad)
[16:38:06] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[16:38:46] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:38:54] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[16:39:36] *** Joins: millido (~millido@84.210.150.128)
[16:40:29] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[16:43:55] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[16:44:05] *** Joins: wurstwasser (~frank.hol@2001:a61:3547:6301:88e6:bf0c:4d3b:f0a1)
[16:45:05] *** Quits: revolve (~u0_a227@82-132-237-215.dab.02.net) (Read error: Connection reset by peer)
[16:45:55] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:46:55] *** Joins: revolve (~u0_a227@82-132-238-143.dab.02.net)
[16:47:22] *** Joins: tercaL (~tercaL@user/tercal)
[16:52:43] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[16:54:09] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[16:56:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[16:59:51] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[17:03:10] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[17:03:44] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[17:04:06] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:04:17] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[17:04:51] *** Joins: igemnace (~ian@user/igemnace)
[17:05:19] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:05:46] *** Quits: tsp (~tsp@allinaccess.com) (Quit: ZNC - http://znc.in)
[17:05:54] *** Joins: tsp (~tsp@allinaccess.com)
[17:07:36] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Remote host closed the connection)
[17:08:50] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[17:09:50] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[17:10:05] *** Quits: han-solo (~hanish@157.44.200.34) (Ping timeout: 268 seconds)
[17:11:20] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:13:16] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 245 seconds)
[17:14:24] *** Quits: sinaowolabi_ (~SinaOwola@41.190.3.83) (Ping timeout: 268 seconds)
[17:15:34] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:16:06] *** Joins: zeden (~zeden@user/zeden)
[17:16:21] *** Joins: volga629 (~volga629@72.139.93.26)
[17:17:32] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[17:17:54] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:18:51] *** Joins: wurstwasser_2 (~frank.hol@aftr-62-216-207-210.dynamic.mnet-online.de)
[17:18:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:19:14] *** Joins: vysn (~vysn@user/vysn)
[17:19:22] *** Quits: kj- (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:19:25] *** Joins: seninha (~seninha@user/seninha)
[17:19:47] *** Quits: wurstwasser (~frank.hol@2001:a61:3547:6301:88e6:bf0c:4d3b:f0a1) (Remote host closed the connection)
[17:20:19] *** Quits: n4dir (~user@mue-88-130-56-087.dsl.tropolys.de) (Remote host closed the connection)
[17:20:57] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:21:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:22:25] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[17:23:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[17:23:57] *** cdown_ is now known as cdown
[17:25:50] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:26:01] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[17:27:18] *** Joins: ravan (~ravan@42.201.198.151)
[17:27:18] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[17:27:18] *** Joins: ravan (~ravan@user/ravan)
[17:27:32] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:30:45] *** Joins: sinaowolabi_ (~SinaOwola@160.152.72.64)
[17:30:46] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[17:31:57] *** Joins: bluedust (~bluedust@117.207.237.207)
[17:32:32] *** Joins: Afroboy (~afroboy@105.107.120.194)
[17:34:41] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:35:57] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[17:39:38] *** Joins: y04nn (~y04nn@92.223.89.196)
[17:40:24] *** Quits: revolve (~u0_a227@82-132-238-143.dab.02.net) (Read error: Connection reset by peer)
[17:41:19] *** Joins: johnjaye (~pi@173.209.65.233)
[17:41:56] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:42:35] *** Joins: yustin (~yustin@user/yustin)
[17:45:12] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[17:45:17] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[17:45:30] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[17:45:44] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:46:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:46:10] *** Joins: Adoi (~Adoi@user/adoi)
[17:46:29] *** Joins: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com)
[17:47:56] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[17:48:19] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 268 seconds)
[17:52:38] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:52:54] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:53:20] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[17:57:55] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[17:58:41] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[17:59:02] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[17:59:35] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:00:31] <soren_> i have a command that's "continuous" (doesn't end) and whose output is just one line that gets updated every few microseconds or so (it's a timer), e.g. output is: `Elapsed Time: 0 days 00:00:01.029 (1.029 seconds)` if I try to awk it to only show the timer, e.g. `utimer -s |  awk '{ print $1 }'`, nothing gets shown, probably because the command doesn't end. 1) is it possible to filter the output
[18:00:33] <soren_> somehow? 2) i guess this is why my statusbar (waybar) is not able to print the output of the command, because it never "ends". are there any solutions to this? E.g. `while true; do date; sleep 1; done` works for the statusbar
[18:01:36] <osse> soren_: it sounds like your command never prints a \n which awk likely is waiting for
[18:02:21] <osse> soren_: try awk -vRS=$'\r'
[18:02:46] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:03:17] <Soliton> do you even need that tool? sounds like it just outputs times.
[18:03:42] <soren_> esse: thank you, that works
[18:04:38] <osse> i'm not spanish, hombre
[18:05:42] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[18:05:43] <Earnestly> Poor cpus, having to forkexec these statusbar pipelines every second
[18:06:00] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[18:06:00] <soren_> i'm looking for an efficient/resource-friendly timer and utimer is the only one i've found that's not written in bash/python that is not bloated. i want to have its output on the statusbar. actually probably awking it as fast as it updates is terrible on resources, so i might not do that (or at least use cut). but at least this might be the reason why the statusbar is not showing the output
[18:06:34] *** Joins: kristianpaul (~paul@user/kristianpaul)
[18:06:40] <soren_> Soliton ^ I suppose it beats external commands like sleep every second?
[18:06:44] *** Joins: Kyuzo68 (~Kyuzo@host-95-244-232-213.retail.telecomitalia.it)
[18:07:06] <Soliton> "it"? the external command "utimer"?
[18:07:54] <Soliton> so you want to display a countdown somewhere that is not a terminal?
[18:08:03] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[18:08:40] *** Joins: tangy (~tangy@user/tangy)
[18:08:54] <soren_> i mean i think utimer is more efficient than a while loop calling multiple external commands as a timer. utimer is cli-based, it should be for it to be displayed on the statusbar
[18:09:35] *** Quits: jaskal (~jaskal@user/jaskal) (Quit: Lost terminal)
[18:09:38] <soren_> at least it's more accurate from doing some reading, not how much better it is resource-wise
[18:09:43] <Soliton> no idea what "the statusbar" is but if it's not a terminal then pretty clearly utimer is not made for it.
[18:10:35] <Earnestly> Soliton: you know window managers?
[18:10:39] <soren_> stdout will diplsay on waybar, so a sleep 1 while loop will show its output on the module as stated
[18:11:14] <kristianpaul> o/
[18:11:17] <Soliton> sounds terrible either way if there is no native way to do this in waybar.
[18:11:47] <Soliton> Earnestly: there are hundreds.
[18:12:04] <Earnestly> Soliton: They all have statusbars (and there are dozens)
[18:12:07] <soren_> i mean AFAIK time is polled on Linux so it doesn't get much better than simple C-based timer if i had to guess
[18:12:10] *** Quits: tangy (~tangy@user/tangy) (Read error: Connection reset by peer)
[18:12:20] *** Joins: tangy (~tangy@user/tangy)
[18:12:24] <Earnestly> Problem is updating bar in ms
[18:12:32] <soren_> a statusbar like waybar lets you write your own modules
[18:12:32] <Earnestly> Because they typically render everything
[18:12:39] <kristianpaul> Hey guys. i'm puzzle trying to give my script both argument parsing and stdin support for pipes. Is there a way to know if stdin is empty in advance so i can just go ahead and parse arguments? The only way i know reading stdin is with read on a while loop
[18:12:43] <Earnestly> So you render everything every ms
[18:12:46] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:13:06] <Soliton> kristianpaul: other way around, check if you got arguments or not.
[18:13:09] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[18:13:33] <kristianpaul> with $#?
[18:13:39] <Soliton> sure.
[18:14:22] <Earnestly> This code is rancid lol
[18:15:05] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:16:16] *** Joins: jaskal (jaskal@user/jaskal)
[18:16:44] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Read error: Connection reset by peer)
[18:16:50] *** Joins: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[18:17:38] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:17:41] <kristianpaul> Soliton: that works but i would like show some help when the script is not used correctly so that why i would like to know without using read if there is not stdin
[18:18:15] <Soliton> "without using read" are you just adding random non-sense requirements?
[18:18:48] <Soliton> who knows what "not stdin" means anyway.
[18:19:04] <Earnestly> Hm, there are tools which try to guess if the user is doing it wrong and will write message like "stdin seems empty, are you sure you're doing it right?" to stderr.  I don't like tools which do this
[18:19:09] <Soliton> do you require all data you want to read from stdin to be there the moment your command starts?
[18:19:23] <kristianpaul> yes
[18:19:36] <Earnestly> The answer is actually no
[18:19:40] <Soliton> anyway, read has -t 0 if you want to check if there is data to read at that moment.
[18:19:43] <Earnestly> Because that's how filters work
[18:19:48] <osse> s/The answer is/but/
[18:19:58] <kristianpaul> Soliton:tks
[18:20:19] <Earnestly> I can attach filter to fifo, don't want it whining at me
[18:20:20] <Soliton> kristianpaul: you do realise that that is not how piping works?
[18:20:36] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:21:22] <Soliton> in a pipeline all process run at the same time. there is no requirement that a program further left must have produced output before a later program wants to read input.
[18:21:22] <kristianpaul> i'm learning by making, i know aint doing it right yet.. just trying to solve one problem at time :(
[18:21:31] <Earnestly> kristianpaul: https://monkey.org/~marius/unix-tools-hints.html
[18:23:12] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:14] <Earnestly> Yes, important to realise that pipeline executes in parallel
[18:23:37] *** Quits: tangy (~tangy@user/tangy) (Read error: Connection reset by peer)
[18:23:39] *** Joins: volga629 (~volga629@72.139.93.26)
[18:23:44] *** Joins: tangyQED (~tangy@user/tangy)
[18:23:45] <Soliton> even with something trivial as  echo foo | mycmd  mycmd might try to read input before echo wrote anything.
[18:24:17] <Soliton> i assume that is not a sitution you would describe as without input.
[18:25:00] *** Quits: Kyuzo68 (~Kyuzo@host-95-244-232-213.retail.telecomitalia.it) (Quit: Konversation terminated!)
[18:26:09] <Soliton> # { sleep 0.001; echo foo; } | { read -t 0 || echo nothing to read; }
[18:26:11] <shbot> Soliton: nothing to read
[18:27:06] <Earnestly> kristianpaul: Let blocking IO do the work for you
[18:28:09] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[18:28:38] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:29:41] <Soliton> unless you have clear timing constraints you should just not care when input can be read.
[18:31:20] *** Joins: zoe` (~zoe@xdsl-31-164-51-195.adslplus.ch)
[18:31:57] <Earnestly> Yeah, nonblocking IO is difficult to handle.  It was what existed first and why CAR Hoare had to invent CSP to essentially solve
[18:32:15] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:24] <Earnestly> Blocking IO, besides stampede problem, is what I would call elegant
[18:32:36] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[18:32:42] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[18:33:11] *** Joins: tangy (~tangy@user/tangy)
[18:33:23] <Soliton> if you want to guess if the user did something wrong you could check if input is a terminal and yell at them then with the assumption that they won't type in (or copy&paste) the input.
[18:33:26] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[18:33:26] *** Joins: karstensrage (~karstensr@user/karstensrage)
[18:33:27] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:33] <Soliton> even that might be annoying.
[18:33:47] <Soliton> certainly grep for example does no such thing.
[18:35:02] *** Joins: sinaowolabi (~SinaOwola@41.58.233.28)
[18:35:55] *** Joins: unop (~unop@194.154.249.71)
[18:38:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe)
[18:38:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe) (Changing host)
[18:38:18] *** Joins: skapata (~Skapata@user/skapata)
[18:39:32] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[18:41:23] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[18:41:32] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:41:58] *** Quits: sinaowolabi (~SinaOwola@41.58.233.28) (Ping timeout: 268 seconds)
[18:42:52] *** Joins: han-solo (~hanish@user/han-solo)
[18:45:47] *** Quits: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[18:47:27] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[18:48:14] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[18:48:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[18:50:50] *** Quits: flipchan (~filip@user/flipchan) (Ping timeout: 256 seconds)
[18:51:37] *** Quits: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com) (Quit: WeeChat 3.4)
[18:54:35] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[18:54:44] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Read error: Connection reset by peer)
[18:54:54] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[18:54:56] *** Joins: volga629 (~volga629@72.139.93.26)
[18:55:09] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[18:55:38] *** Joins: malina (~malina@user/malina)
[18:55:46] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:56:00] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:06:37] *** Quits: Mo (~Mo@dynamic-095-116-146-164.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[19:07:19] *** Joins: flipchan (~filip@188-169-255-31.dsl.utg.ge)
[19:08:15] *** Quits: bluedust (~bluedust@117.207.237.207) (Read error: Connection reset by peer)
[19:09:06] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 268 seconds)
[19:09:14] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[19:10:07] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:11:48] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:11:52] *** Parts: ialokin (znc@user/ialokin) ()
[19:14:27] *** Joins: mat001 (~mat001@213.143.69.121)
[19:14:52] *** Joins: luckiswithme (~luckiswit@149.167.139.131)
[19:16:02] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:16:30] *** Quits: sinaowolabi_ (~SinaOwola@160.152.72.64) (Ping timeout: 268 seconds)
[19:17:32] *** Joins: sinaowolabi_ (~SinaOwola@160.152.72.64)
[19:20:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:21:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:25:24] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 256 seconds)
[19:27:07] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[19:27:42] *** Joins: mat001 (~mat001@72.28.108.216)
[19:28:15] *** Quits: Afroboy (~afroboy@105.107.120.194) (Remote host closed the connection)
[19:30:18] *** Joins: unop (~unop@194.154.249.71)
[19:30:34] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[19:34:06] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:35:23] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[19:36:51] *** Quits: sinaowolabi_ (~SinaOwola@160.152.72.64) (Ping timeout: 268 seconds)
[19:37:13] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[19:40:55] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[19:45:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:46:38] *** Quits: flipchan (~filip@188-169-255-31.dsl.utg.ge) (Changing host)
[19:46:38] *** Joins: flipchan (~filip@user/flipchan)
[19:46:46] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[19:47:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[19:47:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:48:31] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[19:48:33] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[19:48:57] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[19:49:30] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Max SendQ exceeded)
[19:49:35] *** Joins: malina (~malina@user/malina)
[19:51:37] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:51:50] <kristianpaul> read -t 1 seems to work all the time
[19:52:50] <Soliton> # { sleep 1.001; echo foo; } | { read -t 1 || echo nothing to read; }
[19:52:52] <shbot> Soliton: nothing to read
[19:53:01] <Soliton> also read -t 1 actually reads stuff.
[19:53:14] <Soliton> did you comprehend anything said above?
[19:54:07] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[19:55:24] <Earnestly> Yes, -t 0 is special case in code, doesn't read anything
[19:57:19] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:57:44] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[20:00:04] *** Joins: tangyQED (~tangy@user/tangy)
[20:00:50] *** Joins: tete_ (~John@85-195-252-54.fiber7.init7.net)
[20:01:42] *** Joins: Intelo (~Intelo@88.244.94.93)
[20:01:44] <Intelo> Hi
[20:01:45] <Intelo> in regex how to find 'mainFn' in the line that does NOT have '{' ?
[20:02:08] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 268 seconds)
[20:02:25] <tete_> hi, i am writing some scripts for automatic password generation and resetting them automatically (in a programmatic way). unfortunately, my bash skills are rather.. low. so i thought i'll ask here because atm i am fighting with error handling. https://paste.centos.org/view/fa3b7522 - the code in line 116 is executed even tho selenium-side-runner fails, i guess thats because || creates some kind of new shell and that shell is then probably
[20:02:25] <tete_> returned with 1. any idea how i can make that "better" ?
[20:02:55] <Soliton> ^[^{]*mainFn[^{]*$
[20:03:30] <Soliton> !check
[20:03:49] <tete_> forgive me my nasty comment at line 139 :P
[20:03:54] <tete_> forgot to remove that
[20:04:04] *** Quits: luckiswithme (~luckiswit@149.167.139.131) (Read error: Connection reset by peer)
[20:04:05] <Soliton> !which
[20:04:06] <greybot> which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
[20:04:21] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:04:26] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[20:04:42] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:04:42] <tete_> thanks i'll make a notice regarding which ;)
[20:04:43] <Soliton> $? is the exit code of the last command. logError is a command like any other.
[20:05:03] <Soliton> if you want to keep $? at a specific point then save it in a variable.
[20:05:20] <tete_> i want to abort that function and return 1 in line 115 when an error occured in selenium-side-runner
[20:05:27] <tete_> but i dont want to abort the script itself
[20:06:20] <Soliton> if the return is not called then selenium-side-runner did not exit non-zero.
[20:06:51] <tete_> it did, because its not configured, when its called it must fail
[20:07:01] <Soliton> oh right you added useless ().
[20:07:10] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[20:07:14] <Soliton> so you just exit the useless subshell.
[20:07:19] <tete_> thats what i thought ;)
[20:07:30] <tete_> so you mean just remove the () will be enough?
[20:07:34] <Soliton> { logError...; return 1; }
[20:07:37] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:07:42] <tete_> why that { } ?
[20:07:56] <Soliton> otherwise return 1 will always be called.
[20:08:04] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Max SendQ exceeded)
[20:08:32] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[20:08:38] <tete_> ok i dont understand it but i will do it as you say ;) i am really not a bash programmer... just a very little knowledge about that
[20:08:45] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[20:09:01] <Soliton> also sed injection and rewriting the same file multiple times is bad.
[20:09:17] <Soliton> if you must use sed injection at least just call sed once.
[20:09:18] <Earnestly> tete_: It's called a command group, sometimes you want to treat multiple commands as a single logical command
[20:09:23] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[20:09:28] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Max SendQ exceeded)
[20:09:29] <tete_> Earnestly, ah, thanks!
[20:09:31] *** Joins: masber (~masber@2001:620:808:1200:8000::21)
[20:09:36] <tete_> thats what i was looking for, thought with ( ) i'll do that
[20:09:44] <Earnestly> tete_: It does, but it also creates a subshell
[20:09:51] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[20:09:53] <Intelo> Soliton  great. how to regex and get only one line
[20:10:09] <tete_> ah and with { } it runs in the "main" thread of that shell, without spawning anything
[20:10:19] <gnoo> Intelo: grep -m1 <the regex>
[20:10:20] <Earnestly> You can think of it like that
[20:10:37] <Earnestly> tete_: https://mywiki.wooledge.org/BashGuide/CompoundCommands
[20:10:37] <masber> hi, I have a few envs which are used as values for a json data, my issue is that some of those envs are "" and the web server complains that they are null or none when they should have a String
[20:11:21] <Soliton> perhaps you're doing something wrong.
[20:11:41] *** Joins: crashrep (~crashrep@user/crashrep)
[20:11:51] <Intelo> Soliton this selects multple line that don't have mainFn word even
[20:12:01] <masber> so my question is, how can make something like MYVAR=""; curl ... -d "{\"myvar\": $MYVAR}" to be curl -d "{\"myvar\": \"\"}"
[20:12:11] *** Joins: mongy (~mongy@user/mongy)
[20:12:22] <Soliton> Intelo: i have no idea what you're even doing. regex doesn't do anything by itself.
[20:12:47] <Soliton> !jqcreate > masber
[20:12:47] <greybot> masber: To create JSON strings with variable assignments: jq -nc --arg bar "$bar" '{foo:$bar}' ;# compare with awk -v awkvar="$bashvar"
[20:13:07] <Intelo> Soliton https://imgur.com/29WhHDh.png
[20:13:17] <Soliton> an image, of course
[20:13:19] <tete_> perfect, i was searching for this for hours, works like a charm :)
[20:13:25] <tete_> thanks!
[20:13:39] <grawity> masber: the correct(tm) answer is don't try to build JSON as a string, use JSON generating tools (jq, python's json.dump, etc) to generate JSON
[20:14:27] <Earnestly> tete_: (Avoid searching if you can, just use wooledge)
[20:15:13] <Soliton> # jq -nc --arg bar "$MYVAR" '{myvar:$bar}'
[20:15:14] <shbot> Soliton: {"myvar":""}
[20:15:56] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:16:47] *** Joins: maryo (~Maryo@user/maryo)
[20:17:03] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[20:17:09] <Intelo> regex: mainFn[^{]*$
[20:17:10] <Intelo> text:
[20:17:10] <Intelo> abc  aaa  mainFn
[20:17:11] <tete_> <Soliton> if you must use sed injection at least just call sed once. <- whats a better way? when i use one big `sed` it gets unreadable, doesnt it?
[20:17:11] <Intelo> mainFn {
[20:17:11] <Intelo> a
[20:17:12] <Intelo> mainFn
[20:17:12] <Intelo> something I do not want to select.
[20:17:22] <gnoo> Intelo: assuming you have bash and grep, why don't you create a file and then use "grep 'regex' file_name" to test?
[20:17:23] *** Joins: frostwork (~frostwork@user/frostwork)
[20:17:26] *** Joins: maryo (~Maryo@user/maryo)
[20:17:46] <gnoo> and use a pastebin like paste.debian.net
[20:18:10] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[20:18:38] *** Joins: volga629 (~volga629@72.139.93.26)
[20:19:55] <Intelo> gnoo Soliton https://pastebin.mozilla.org/N263iYOa
[20:19:57] <Soliton> tete_: the injection makes it unreadable either way. who knows what's in the variables. they're not sanitized for sed injection so anything can happen.
[20:20:03] *** Joins: bluedust (~bluedust@117.207.237.207)
[20:21:30] <Intelo> gnoo Soliton are we on same page now?
[20:21:39] <Soliton> not really.
[20:21:43] <Soliton> # grep 'mainFn[^{]*$' <<< $'mainFn {\na\nmainFn (something)\nsomething I do not want to select.'
[20:21:45] <shbot> Soliton: mainFn (something)
[20:21:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:21:52] <Soliton> who knows what you're doing.
[20:22:05] <gnoo> Intelo: i saw the image. you should use grep to test. try this: printf '%s\n' 'abc aaa mainFn does not gets selected' '5 mainFn { not selected' 'something I do not want to select.' | grep '^[^{]*mainFn[^{]*$'
[20:22:24] <Soliton> no hint what tool you're going to use the regex with so far.
[20:22:46] <Intelo> javascript but can't regex do it fully?
[20:22:49] <gnoo> it's on a website, ofc
[20:22:49] <Intelo> gnoo ^
[20:22:51] <Soliton> what
[20:22:58] <Soliton> !nabq
[20:22:58] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[20:23:12] <Soliton> next thing you'll say all regex works the same.
[20:23:13] <gnoo> Intelo: are you learning regex or making a website?
[20:23:39] <Intelo> learning regex
[20:23:59] <Intelo> gnoo but coding in javscript to do something
[20:24:04] <Soliton> if you want to apply a regex per line then you need to do that.
[20:24:13] <Intelo> to do what?
[20:24:20] <Intelo> I want per line
[20:24:20] <Soliton> how you do that in js has nothing to do with this channel at all.
[20:24:34] <Intelo> yes, here for regex only
[20:24:52] <gnoo> grep will go line by line, who knows what js does.
[20:25:00] <Soliton> no standard tool expects js regex.
[20:25:18] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8900:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[20:25:30] <gnoo> Intelo: did you try the above command in bash?
[20:25:49] <gnoo> maybe save what you want to search in a file and use grep 'regex' file_name
[20:26:04] <Intelo> yes same
[20:26:05] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8900:12c3:7bff:fe6d:d374)
[20:27:05] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[20:27:12] <gnoo> # printf '%s\n' 'abc aaa mainFn does gets selected' '5 mainFn { not selected' 'something I do not want to select.' | grep '^[^{]*mainFn[^{]*$'
[20:27:14] <shbot> gnoo: abc aaa mainFn does gets selected
[20:27:22] <gnoo> Intelo: same?
[20:28:01] <Soliton> if you want to learn regex here use bash or some standard tool. if you want to learn js or regex in js i'm sure you can find a better channel.
[20:28:02] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Max SendQ exceeded)
[20:28:43] <Intelo> is there a bash fiddle?
[20:28:49] <Intelo> regex fiddle that we can use?
[20:28:56] <Intelo> to cut this out
[20:29:08] <Soliton> most of those sites don't support BRE or ERE.
[20:29:26] <Soliton> you can just type stuff into your shell.
[20:30:56] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[20:36:06] <bn_work> hi, bash 4.4, why do processes launched that use either env or exec, not consistently show the executable name in ps's cmd column output?  ie:  sometimes it just shows the shell script name, sometimes it shows the actual end process, ex:  java (with all its params).  How do I ensure it does only 1 (preferably the latter?)
[20:36:40] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[20:37:13] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:37:16] <Soliton> why do you think it has anything to do with env or exec?
[20:38:09] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:38:22] <Intelo> Soliton gnoo bash has PCRE support too https://regex101.com/r/zTAudi/1
[20:38:49] <Soliton> bash supports ERE.
[20:39:16] <Soliton> !regex
[20:39:16] <greybot> Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[20:40:13] <Soliton> i have still no idea what your goal is.
[20:40:19] <bn_work> Soliton:  because binary executables that launch directly don't seem to have this issue?
[20:40:28] <Soliton> are you going to use regex with grep or something or are you writing js?
[20:41:15] <Soliton> bn_work: so you have a binary that works differently when called with env or exec? show it.
[20:42:03] <Soliton> Intelo: if you want to match per line on that site then get it to remove the m modifier.
[20:42:30] <bn_work> Soliton: well, it's a build-outputted shell script (I didn't write) that seems to launch a java "app" (so binary is java technically)
[20:42:30] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[20:42:32] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:6942:73ca:21d1:da97)
[20:43:10] <Soliton> so why would java not be in ps output??
[20:43:34] <Intelo> Soliton m modifier?
[20:44:05] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[20:44:51] <Soliton> whatever, either learn to use that site or explain what you're trying to do.
[20:45:17] <_lungaro_> can I source a file somehow on successful chdir?
[20:45:31] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[20:45:34] <_lungaro_> ie "cd foo" runs 'source my-command-of-choice'
[20:45:48] <Intelo> Soliton isn't this clear? https://pastebin.mozilla.org/N263iYOa
[20:45:51] <Soliton> cd foo && . my-file
[20:45:58] <Intelo> Soliton I do not want to match the last line
[20:46:11] <Soliton> Intelo: and did you see the grep command above?
[20:46:58] <gnoo> scroll back a little till you see shbot's reply
[20:47:22] <Intelo> ^[^{]*mainFn[^{]*$  doesn't work
[20:47:48] <Soliton> on that site? so learn to use that site in the way you want (and won't tell us).
[20:48:08] <gnoo> Intelo: idk how you expect people to continue if you just ignore what we type?
[20:48:08] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[20:48:27] <Intelo> gnoo Soliton sorry I consumed your time. I should learn more
[20:48:40] <gnoo> Intelo: do you have bash?
[20:48:56] <Intelo> I do but javascript uses pcre. maybe I shoudl realize it
[20:49:02] <Intelo> I think
[20:49:03] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Quit: Quitting)
[20:49:20] <gnoo> some basic stuff is similar in ERE, BRE and PCRE
[20:49:22] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[20:49:40] <Soliton> the issue here is that you expect matching per line and that site doesn't do that.
[20:49:50] <Soliton> nothing even to do with the regex dialect.
[20:49:55] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[20:50:11] <Intelo> Soliton any other solution? e.g use carriage return regex?
[20:50:19] <Intelo> so ^\r\n?
[20:50:22] <Soliton> the above regex is indeed the same in BRE, ERE and PCRE.
[20:50:32] *** Joins: knstn (~knstn@ppp-94-66-57-45.home.otenet.gr)
[20:50:35] <gnoo> Intelo: if you found the above grep usage confusing, why don't you try saving your input to a file and then use grep in a simpler way?
[20:50:46] <Soliton> any other solution to make the site work differently?
[20:50:48] <Intelo> can't we exclude all after \n
[20:51:02] <Soliton> it's getting frustrating to get zero response to explain wtf you want to do.
[20:51:05] <Intelo> gnoo js has no grep
[20:51:12] <gnoo> this isn't about js
[20:51:19] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:51:55] <_lungaro_> if I alias cd to my own command, can I call the built-in somehow?
[20:51:56] <gnoo> the site you're using does not work the way we (or you for that matter) expect
[20:52:02] <bn_work> Soliton: oh wait, I guess it's an `htop` issue :/  why is it inconsistent for the (presumably) identical build-generated launcher scripts.  When java launches in the end, wouldn't it ultimately be what shows up in `htop`'s output?
[20:52:21] <gnoo> _lungaro_: builtin cd or command cd
[20:52:27] <_lungaro_> built in cd
[20:52:36] <Soliton> # help builtin
[20:52:36] <shbot> Soliton: builtin: builtin [shell-builtin [arg ...]] -- http://ix.io/aPF
[20:52:37] *** Joins: johnjaye (~pi@173.209.65.233)
[20:52:45] <Soliton> it wasn't a question.
[20:52:46] <gnoo> use 'builtin cd' or 'command cd'
[20:52:47] <_lungaro_> cheers. i'm trying to replace cd with my own, ultimately hooking into it
[20:52:50] <_lungaro_> cheers
[20:53:20] <bn_work> Soliton: interesting, if I relaunch it, it's ok, so it's only if it's monitored live it gets wonky
[20:53:57] <bn_work> I guess it can't keep up with the cmd /proc/... changes?
[20:54:10] <Soliton> bn_work: if your bash script calls java then bash runs and java runs. of course if you exec java then the shell process is replaced.
[20:55:00] <bn_work> my bash script exec calls their launcher script (which ultimately collects params and runs java)
[20:55:17] *** Quits: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net) (Read error: Connection reset by peer)
[20:55:26] <Soliton> so who knows how that launcher script works.
[20:55:30] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[20:55:34] <Soliton> maybe it also calls exec, maybe not.
[20:56:22] *** Joins: lotharn (~kvirc@2600:8800:280:d400:d8ac:c0d6:e63e:ecd7)
[20:56:43] <Soliton> if it doesn't call exec maybe bash does it anyway, maybe not. maybe it does different things in different circumstances.
[20:58:44] <bn_work> Soliton: looking at their launcher script, looks like it does
[20:58:54] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:59:23] <Soliton> sounds like in the end there should just be a java process.
[20:59:50] <bn_work> yes
[21:01:42] *** Quits: lotharn (~kvirc@2600:8800:280:d400:d8ac:c0d6:e63e:ecd7) (Ping timeout: 250 seconds)
[21:02:12] <_lungaro_> ugh, alias cd wont work well for me. I am still stuck here. Can I use PROMPT_COMMAND somehow to hook a shell function to run, but also only on "cd" ?
[21:02:54] <Soliton> !aliases
[21:02:54] <greybot> Aliases suck. They don't work in scripts. They can't take arguments. They have special evil magical powers that break all expectations. See http://mywiki.wooledge.org/BashFAQ/080 for starters.
[21:02:59] <Soliton> write a function.
[21:03:13] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[21:03:21] <_lungaro_> yeah, i'm not using aliases. My issue is I want to source a function in my shell, after "cd foo"
[21:03:51] <_lungaro_> i can't detect cd with PROMPT_COMMAND, it runs after everything (logically)
[21:03:59] <Soliton> cd() { builtin cd "$@"; [[ $1 = foo ]] && . myfile; }
[21:04:07] <_lungaro_> hmm
[21:04:44] <_lungaro_> yeah, that might be good
[21:04:51] <Soliton> well, you wanted to check cd success, too.
[21:05:03] <_lungaro_> Yep
[21:05:07] <_lungaro_> that might work
[21:05:08] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:05:39] <Soliton> note that without a path . checks PATH. you probably want: . ./myfile
[21:06:35] <_lungaro_> which i had a way to unload the previously loaded things, but oh well
[21:06:41] <_lungaro_> this works well, thanks
[21:07:06] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:07:16] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[21:07:29] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[21:07:56] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[21:11:29] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[21:11:30] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[21:12:14] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:13:23] *** Joins: volga629 (~volga629@72.139.93.26)
[21:18:33] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[21:19:10] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[21:20:13] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:21:28] *** thomas25- is now known as thomas25
[21:21:54] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[21:21:54] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:21:56] *** Quits: cryptonector (~nico@24.28.108.183) (Read error: Connection reset by peer)
[21:22:29] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[21:24:18] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:26:54] <_lungaro_> can I launch a new bash session and have arbitrary commands run at startup?
[21:27:00] <_lungaro_> using -c exits the shell
[21:27:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:27:56] *** Quits: unop (~unop@194.154.249.71) (Read error: Connection reset by peer)
[21:28:04] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:28:31] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:29:03] <Soliton> if your commands don't change state that you want to keep then you can do: bash -c 'cmd1; cmd2; ...; exec bash'
[21:29:29] <_lungaro_> they do change the state
[21:30:23] *** Joins: volga629 (~volga629@72.139.93.26)
[21:30:28] *** Joins: cryptonector (~nico@24.28.108.183)
[21:34:16] *** Joins: ubique (~ubique@user/ubique)
[21:34:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:35:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:36:29] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[21:36:32] *** Joins: Jong (~Jong@2620:10d:c090:400::5:97ac)
[21:37:43] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:46] *** Joins: jmew (~jmew@host-78-147-81-209.as13285.net)
[21:37:46] *** Quits: jmew (~jmew@host-78-147-81-209.as13285.net) (Changing host)
[21:37:46] *** Joins: jmew (~jmew@user/jmew)
[21:37:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:39:57] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 240 seconds)
[21:44:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:46:31] *** Joins: magla (~gelignite@55d4be51.access.ecotel.net)
[21:49:52] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[21:51:30] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:54:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748)
[21:54:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748) (Changing host)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[21:56:25] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[21:56:36] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[21:56:51] *** Joins: dstein64- (~dstein64@dannyadam.com)
[21:57:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:58:27] *** Quits: colo (~colo@user/colo) (Quit: Bye.)
[21:58:41] *** Joins: colo_ (~colo@user/colo)
[21:59:05] *** Joins: hlauk (~hlauk@176.33.108.116)
[21:59:07] *** Quits: ubique (~ubique@user/ubique) (Quit: Konversation terminated!)
[21:59:10] *** Joins: nocture (~nocture@c-xd4ed87fa.cust.hiper.dk)
[22:00:40] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[22:00:40] *** dstein64- is now known as dstein64
[22:00:45] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[22:01:18] *** Joins: dstein64 (~dstein64@dannyadam.com)
[22:01:44] *** Joins: Filystyn (~piotr@user/filystyn)
[22:01:47] <Filystyn> HELLO
[22:02:25] <Filystyn> what does the sequance character /c do in echo
[22:02:36] <Filystyn> I have a hard tim understanding the posix manual
[22:02:39] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:03:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:03:21] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:04:25] <han-solo> # echo -e 'hello \cworld'
[22:04:28] <shbot> han-solo: hello
[22:05:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:05:14] <Filystyn> ok stuff got ignored? umm I don't get the briliance of this
[22:05:42] <geirha> I believe it's an ancient hack to do echo -n without using an option
[22:05:55] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:05:55] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:06:40] <geirha> b# echo -n foo ; echo bar
[22:06:41] <shbot> geirha: -n foo
[22:06:41] <shbot> geirha: bar
[22:06:44] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:06:51] <geirha> b# echo 'foo\c' ; echo bar
[22:06:52] <shbot> geirha: foobar
[22:07:03] <Filystyn> oh yeah that actualy makes some sens'
[22:07:05] <han-solo> "geirha -- The ancient one"
[22:07:18] <han-solo> !geirha
[22:07:41] <han-solo> welp
[22:08:52] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:10:37] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:10:39] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[22:11:09] *** Joins: lavaball (felix@31.204.155.215)
[22:11:27] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[22:12:46] <Filystyn> one more sh question
[22:13:13] <Filystyn>      126    A command was found but was not executable.
[22:13:23] <Filystyn> does it mean a file was found ?
[22:13:46] <Filystyn> or it actualy checks it's a binary and than hello - not executable
[22:13:50] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:13:53] <Filystyn> flga
[22:13:59] <Filystyn> flag**
[22:14:07] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:14:14] *** Quits: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com) (Quit: I'm gonna win SETI@home.)
[22:14:41] <yitz> Filystyn: sounds like it's a file in the PATH which isn't +x
[22:14:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:15:09] <han-solo> # echo true > foo; ./foo; echo "$?"
[22:15:10] <shbot> han-solo: bash: ./foo: Permission denied
[22:15:10] <shbot> han-solo: 126
[22:15:22] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:15:33] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:15:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[22:15:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:16:04] <Filystyn> what a silly return
[22:16:10] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:16:11] *** Joins: Minvera (~Minvera@user/Minvera)
[22:16:37] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[22:16:49] <Filystyn> but k makes sens
[22:16:51] *** Joins: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com)
[22:16:56] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:17:46] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:17:57] <koollman> Filystyn: it doesn't check if it's a binary, or an executable program of some sort, since it cannot be executed anyway. (and since an non-binary file is something that could be executed, too :) )
[22:18:26] <koollman> no need to read the content to have sufficient information to return that error
[22:18:59] *** Quits: tete_ (~John@85-195-252-54.fiber7.init7.net) (Quit: Leaving)
[22:19:11] <Filystyn> cooooool man cool
[22:19:19] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:20:10] *** Joins: Atque (~Atque@user/atque)
[22:21:00] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:21:58] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:22:04] *** Joins: omnio (~omnio@user/omnio)
[22:27:37] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 240 seconds)
[22:29:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:29:53] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:31:15] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Client Quit)
[22:31:25] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:32:41] *** Quits: nocture (~nocture@c-xd4ed87fa.cust.hiper.dk) (Quit: nocture)
[22:32:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:35:18] *** Quits: han-solo (~hanish@user/han-solo) (Quit: night)
[22:35:35] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[22:35:47] *** Joins: zebrag (~chris@user/zebrag)
[22:39:14] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:39:42] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:39:51] *** Joins: lotharn (~kvirc@2600:8800:280:d400:d8ac:c0d6:e63e:ecd7)
[22:40:12] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:41:56] *** Joins: f00 (~timm@user/timm)
[22:42:32] *** Quits: timm (~timm@user/timm) (Read error: Connection reset by peer)
[22:43:39] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:43] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[22:45:12] *** Joins: hlauk (~hlauk@176.33.108.116)
[22:46:47] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[22:48:37] *** Quits: y04nn (~y04nn@92.223.89.196) (Ping timeout: 256 seconds)
[22:48:37] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:50:06] *** Joins: blatsch (~blatsch@user/blatsch)
[22:50:39] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.4)
[22:51:03] *** Joins: greycat (~greg@209.142.155.49)
[22:52:01] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[22:53:04] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[22:53:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:54:05] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:54:06] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[22:54:32] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:54:38] *** Joins: almarwazi (~almarwazi@49.36.189.251)
[22:54:43] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:54:57] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:55:16] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:55:46] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[22:55:49] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:56:10] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:56:18] <neshpion> # printf -v a 'lol\nyeet'; touch "$a"; find -maxdepth 1 -name 'lol*'; b=$(find -maxdepth 1 -name 'lol*'); echo "${b@Q}"
[22:56:20] <shbot> neshpion: ./lol?yeet
[22:56:20] <shbot> neshpion: $'./lol\nyeet'
[22:56:59] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:57:16] <neshpion> find prints ? instead of newline, unless it goes to a pipe?
[23:00:20] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[23:00:36] <emg> more reasons not to print filenames!
[23:00:51] <emg> ls does even weirder stuff, especially across implementations and versions
[23:01:15] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[23:02:13] * wiscii says: this does not require quptes .. [ ${#foo} gt 1 ] || exit 1
[23:02:21] <neshpion> alias ls='echo *'
[23:02:23] <neshpion> :D
[23:02:25] <wiscii> what do you think ?
[23:02:38] <phy1729> wiscii: I think you want a -
[23:02:38] <wiscii> quotes*
[23:02:48] <wiscii> lol yep
[23:02:55] <neshpion> wiscii: i *think* you're right, but it bothers me that you're using [ instead of [[ or ((
[23:03:14] <wiscii> neshpion: POSIX only
[23:03:22] * neshpion clings to bashisms
[23:03:30] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[23:04:02] <wiscii> thanks :)
[23:04:17] *** Quits: luva (~luva@37.120.197.37) (Ping timeout: 240 seconds)
[23:04:42] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[23:05:08] <emanuele6> # IFS=1; foo=helloworld; [ ${#foo} -eq 0 ] && printf 'foo is empty\n'
[23:05:10] <shbot> emanuele6: bash: [: too many arguments
[23:05:12] *** Joins: luva (~luva@45.141.152.62)
[23:05:14] <emg> wiscii: IIRC depends on version of POSIX, an earlier version allowed IFS to be inherrited from the environment, in which case e.g. IFS=0 could cause problems (not that being that paranoid is useful...)
[23:05:30] *** Bitflux is now known as Byteflux
[23:05:59] <wiscii> emg: thanks, i can control IFS from inside ;-)
[23:06:14] <emanuele6> wiscii: it's just unwise to not quote
[23:06:51] <emanuele6> you don't want ever a unquoted expansion there
[23:07:03] <emanuele6> you always want a quoted expansion
[23:07:18] <emanuele6> it does not make any sense to not quote, it is wrong
[23:07:27] <wiscii> emanuele6: yeah, i know .. i'm thinking it over and there is no reason to *not* quote, so i'm probably going to quote anyway
[23:07:31] <emanuele6> of course, not quoting can work
[23:07:40] <emanuele6> but that applies to everything
[23:07:47] <emanuele6> not just ${#foo}
[23:07:56] <emanuele6> it is not special in any way
[23:07:58] <emg> eh, different people have different levels of acceptance about all that, if it's impossible to get something that causes issues then it's fine for some people... but also if someone else changes the script that can change, depends how defensive you want to be
[23:08:15] <emg> (I'm of the quote all the things camp personally)
[23:08:21] *** Joins: zro (~zro@user/zro)
[23:08:23] * neshpion refuses to quote within [[
[23:08:28] <greycat> if your script inherits IFS and acts upon it, you're already fucked to the point where quoting won't save you
[23:08:34] <wiscii> i'm slowly coming round to that camp ;-)
[23:08:40] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[23:08:47] <phy1729> Church of the
[23:08:48] <phy1729> !qefs
[23:08:49] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[23:09:11] <wiscii> arg no !
[23:09:15] <emanuele6> i really don't get how you can think that not quoting ${#foo} is ok, if you understand/think that not quiting $foo is not ok
[23:09:41] <emanuele6> it is exactly the same
[23:10:05] <greycat> One of them is guaranteed to return a string with nothing but digits.
[23:10:06] <emg> no it isn't... ${#foo} is guaranteed to be digits without shell metacharacters
[23:11:12] <wiscii> ^ that's the point
[23:11:31] <wiscii> anyway, i'm off for a walk and think it over ;-)
[23:12:17] *** Joins: volga629 (~volga629@72.139.93.26)
[23:12:43] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:14:04] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[23:15:38] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[23:17:40] *** Quits: davidl (~quassel@217-64-148-122.pool.ovpn.com) (Read error: Connection reset by peer)
[23:17:51] *** Joins: davidl (~quassel@217-64-148-122.pool.ovpn.com)
[23:18:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[23:20:35] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:22:21] *** Joins: ominionx (~ominionx@172.58.136.5)
[23:22:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:23:37] <emanuele6> emg: but quoting is not a defence; quoted expansions and unquoted expansions are different
[23:24:04] <greycat> defense against what?  I lost the context
[23:24:21] <emanuele6> <emg > eh, different people have different levels of acceptance about all that, if it's impossible to get something that causes issues then it's fine for some people... but also if someone else changes the script that can change, depends how defensive you want to be
[23:25:00] <greycat> well, nothing is 100% defense against an idiot editing the script later
[23:25:22] <emanuele6> but `[ ${#foo} = 0 ]' is code that does something that you don't want, but that appears to work most of the times
[23:25:45] <emanuele6> `[ "${#foo}" = 0 ]' is code that actually does what you want.
[23:26:42] <emanuele6> this is not unnecessary quoting like in `[[ "${#foo}" = 0 ]]' or `case "${#foo}" in 0)' in my opinion
[23:27:00] <emanuele6> `[ ${#foo} = 0 ]' is not the right code
[23:29:33] *** Quits: filohuhum_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[23:30:29] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:32:34] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[23:33:56] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[23:33:57] *** Joins: blatsch1 (~blatsch@user/blatsch)
[23:34:36] *** Quits: blatsch1 (~blatsch@user/blatsch) (Remote host closed the connection)
[23:34:48] *** Joins: unop (~unop@194.154.249.71)
[23:35:30] *** Quits: blatsch (~blatsch@user/blatsch) (Ping timeout: 268 seconds)
[23:35:47] *** Joins: blatsch1 (~blatsch@user/blatsch)
[23:35:47] *** Quits: blatsch1 (~blatsch@user/blatsch) (Client Quit)
[23:40:53] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Quit: Leaving...)
[23:41:01] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[23:42:36] *** Joins: y04nn (~y04nn@92.223.89.196)
[23:42:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:45:05] *** Quits: davidl (~quassel@217-64-148-122.pool.ovpn.com) (Read error: Connection reset by peer)
[23:46:18] *** Joins: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870)
[23:47:13] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[23:47:23] *** Quits: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870) (Client Quit)
[23:48:21] *** Quits: unop (~unop@194.154.249.71) ()
[23:50:01] *** Joins: unop (~unop@194.154.249.71)
[23:50:32] *** Joins: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870)
[23:53:11] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[23:55:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[23:55:37] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:59:19] *** Quits: almarwazi (~almarwazi@49.36.189.251) (Quit: leaving)
