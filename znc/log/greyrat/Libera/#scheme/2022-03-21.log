[00:08:31] *** Joins: notzmv (~zmv@user/notzmv)
[00:17:09] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[00:25:48] *** Joins: badkins (~badkins@136.56.92.199)
[00:27:17] *** Joins: tfeb (~tfb@88.98.95.237)
[00:33:23] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[00:33:26] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Quit: karlosz)
[00:37:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[00:38:46] *** Joins: badkins (~badkins@136.56.92.199)
[00:43:16] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[00:46:32] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:47:00] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[00:56:40] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[00:56:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:59:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:19:44] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:22:56] *** Joins: badkins (~badkins@136.56.92.199)
[01:24:29] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Quit: karlosz)
[01:27:56] <amazigh> sham1: That's right! 
[01:33:47] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[01:35:22] *** Quits: X-Scale (~ARM@92.250.103.201) (Ping timeout: 272 seconds)
[01:35:23] *** X-Scale` is now known as X-Scale
[01:45:26] *** Joins: Everything (~Everythin@37.115.210.35)
[01:45:43] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[01:53:41] *** Quits: mnieper (~user@212.30.36.22) (Ping timeout: 252 seconds)
[02:00:00] *** Joins: cromyr (~user@1.128.107.34)
[02:09:24] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[02:09:41] *** Joins: seninha (~chatzilla@user/seninha)
[02:10:28] *** Quits: badkins (~badkins@136.56.92.199) (Quit: Leaving...)
[02:13:54] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[02:14:36] *** Joins: badkins (~badkins@136.56.92.199)
[02:25:21] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[02:31:05] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:33:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[02:35:41] *** Joins: aeth (~aeth@user/aeth)
[02:46:21] *** Joins: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[02:59:49] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[03:04:14] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:06:19] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[03:17:18] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 252 seconds)
[03:18:11] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:3076:e4d5:8023:3746) (Quit: Leaving)
[03:47:25] *** Quits: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a) (Ping timeout: 268 seconds)
[03:48:19] *** Joins: badkins (~badkins@136.56.92.199)
[04:05:07] *** Quits: daviid (~user@179.210.58.162) (Ping timeout: 256 seconds)
[04:09:20] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:10:15] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[04:10:58] *** Joins: daviid (~user@179.210.58.162)
[04:28:48] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 252 seconds)
[04:29:29] *** Joins: X-Scale` (~ARM@46.50.5.55)
[04:30:12] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[04:30:13] *** X-Scale` is now known as X-Scale
[04:34:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[04:36:48] *** Joins: aeth (~aeth@user/aeth)
[04:39:11] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:43:45] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Remote host closed the connection)
[04:44:35] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[04:48:49] *** Quits: atka (~atka@static-198-54-131-84.cust.tzulo.com) (Quit: WeeChat 3.4)
[04:58:43] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[05:03:40] *** Joins: livoreno (~livoreno@user/notzmv)
[05:06:25] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[05:06:55] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[05:09:53] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[05:10:16] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[05:14:35] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Client Quit)
[05:45:42] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[05:48:25] *** Joins: badkins (~badkins@136.56.92.199)
[05:52:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[06:10:03] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[06:10:20] *** Joins: m455 (~m455@user/m455)
[06:13:11] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[06:20:13] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[06:20:31] *** Joins: m455 (~m455@user/m455)
[06:21:17] *** Quits: schulze (~schulze@dynamic-095-112-240-143.95.112.pool.telefonica.de) (Ping timeout: 240 seconds)
[06:28:10] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[06:33:04] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[06:49:47] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 256 seconds)
[07:01:40] *** Quits: daviid (~user@179.210.58.162) (Ping timeout: 268 seconds)
[07:04:20] *** Joins: frost (~frost@user/frost)
[07:04:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8c9f:2901:a9f3:b788) (Ping timeout: 250 seconds)
[07:05:05] *** Joins: zwr (~zwr@2804:d45:b966:fb00:4a06:6d65:d4f7:d219)
[07:23:33] *** Joins: daviid (~user@179.210.58.162)
[07:24:47] *** Quits: daviid (~user@179.210.58.162) (Remote host closed the connection)
[07:29:07] *** Quits: rx80 (~quassel@user/rx80) (Ping timeout: 256 seconds)
[07:33:21] *** Joins: rx80 (~quassel@user/rx80)
[07:38:07] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[07:38:25] *** Joins: m455 (~m455@user/m455)
[07:39:44] *** alMalsamo is now known as lumberjack123
[07:49:19] *** Joins: daviid (~user@179.210.58.162)
[08:00:01] *** Quits: daviid (~user@179.210.58.162) (Remote host closed the connection)
[08:02:10] *** Joins: daviid (~user@179.210.58.162)
[08:04:17] *** Quits: daviid (~user@179.210.58.162) (Remote host closed the connection)
[08:05:04] *** Joins: daviid (~user@179.210.58.162)
[08:33:42] *** Quits: klovett (~klovett@107.116.92.97) (Quit: ZZZzzzâ€¦)
[09:02:56] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[09:24:06] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 245 seconds)
[09:48:26] *** Joins: atka (~atka@static-198-54-131-84.cust.tzulo.com)
[09:49:47] *** Joins: badkins (~badkins@136.56.92.199)
[09:54:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[09:57:56] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:02:53] *** Quits: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[10:29:17] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[10:32:36] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[10:38:07] *** Quits: rx80 (~quassel@user/rx80) (Ping timeout: 268 seconds)
[10:49:53] *** Quits: cromyr (~user@1.128.107.34) (Remote host closed the connection)
[11:26:31] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:32:22] *** Joins: civodul (~user@guix/contributor/civodul)
[11:41:49] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:50:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:54:07] *** Joins: s-liao (~s-liao@101.86.164.158)
[12:06:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[12:09:02] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[12:17:40] *** Joins: zacque (~zacque@1.32.90.32)
[12:18:07] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 256 seconds)
[12:18:41] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[12:34:14] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[12:34:47] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[12:51:24] *** Joins: xyh (~xyh@113.92.73.190)
[12:51:39] <xyh> An online playground of lambda calculus: https://lambda.cicada-lang.org/playground/KGRlZmluZSAodHJ1ZSB0IGYpIHQpCihkZWZpbmUgKGZhbHNlIHQgZikgZikKCihkZWZpbmUgKGlmIHAgdCBmKSAocCB0IGYpKQoKKGRlZmluZSAoYW5kIHggeSkgKGlmIHggeSBmYWxzZSkpCihkZWZpbmUgKG9yIHggeSkgKGlmIHggdHJ1ZSB5KSkKKGRlZmluZSAobm90IHgpIChpZiB4IGZhbHNlIHRydWUpKQoKKGFuZCB0cnVlIGZhbHNlKQoobm90IChub3QgKG9yIHRydWUgZmFsc2UpKSk
[12:51:39] <rudybot> https://teensy.info/iuevGFJRPL
[13:02:25] <Franciman> thanks xyh 
[13:02:59] *** mdhughes_ is now known as mdhughes
[13:10:23] *** sjamaan_ is now known as sjamaan
[13:13:23] <sham1> That's a lot of URL
[13:13:46] <sham1> THe lambda-calculus is probably all within the BASE64
[13:22:04] *** Joins: badkins (~badkins@136.56.92.199)
[13:24:25] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[13:26:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[13:29:49] <amazigh> xyh: how does it work? Is that an interpreter?
[13:56:29] *** Joins: rx80 (~quassel@user/rx80)
[13:56:54] *** Joins: s-liao (~s-liao@101.86.164.158)
[13:59:22] <amazigh> looking for an editor for the Environment committee, and another for the new Publication committee
[13:59:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[14:01:21] <amazigh> see WG2 mailing list.
[14:05:13] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[14:14:21] *** Joins: cedb (~ced@user/ouestbillie)
[14:15:24] *** Joins: seninha (~seninha@user/seninha)
[14:18:16] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[14:19:41] <mdhughes> New Brainfuck-like language.
[14:23:17] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:25:44] <sham1> But those are a dime a dozen
[14:29:19] <amazigh> ?
[14:56:47] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[15:07:33] *** Joins: karlosz (~karlosz@193.137.37.182)
[15:12:17] *** Quits: karlosz (~karlosz@193.137.37.182) (Ping timeout: 252 seconds)
[15:12:20] *** Joins: s-liao (~s-liao@101.86.164.158)
[15:12:50] *** Joins: TCZ (~tcz@91.150.178.124)
[15:25:57] <xyh> amazigh: yes, an interpreter
[15:26:14] <xyh> this year's workshop! https://www.reddit.com/r/scheme/comments/tj3k4a/cfp_scheme_2022_23rd_scheme_and_functional
[15:27:42] *** Quits: TCZ (~tcz@91.150.178.124) (Remote host closed the connection)
[15:28:02] *** Joins: TCZ (~tcz@91.150.178.124)
[15:31:43] *** Joins: badkins (~badkins@136.56.92.199)
[15:31:58] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[15:35:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[15:46:50] <amazigh> re C FFI, and errno shenanigan, it is possible to bypass errno by using syscalls
[15:47:07] <amazigh> I figured that while reading: http://catern.com/linux_api.html
[15:47:57] <amazigh> loko should already be doing something similar. It is necessary to be able to set CPU registers.
[15:54:48] <sham1> Yes, although that becomes a lot harder on platforms like OpenBSD and MacOS which require you to go through the libc, because otherwise your process will be killed
[16:06:53] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[16:07:07] *** Quits: zwr (~zwr@2804:d45:b966:fb00:4a06:6d65:d4f7:d219) (Ping timeout: 250 seconds)
[16:09:39] <dpk> yeah, Linux is the only platform for which the svc instruction (or your local ISA's equivalent) is the official kernel programming interface
[16:10:00] <Franciman> hi dpk 
[16:10:17] <dpk> Mac OS doesn't (yet) *forbid* you from using the system calls directly by number, but they have been known to change the numbers just to fuck with you, i believe
[16:10:42] <dpk> meanwhile, i believe on OpenBSD your process gets terminated if you try to make a system call without going through libc. so don't do that
[16:10:44] <sham1> OpenBSD straight up just kills your process
[16:10:46] <dpk> hi Franciman!
[16:14:17] *** Joins: mnieper (~user@137.250.162.24)
[16:15:05] <mnieper> I have a Racket question. When I am using Racket in R5RS mode, it prints R5RS pairs (the mutable ones) in the form of (x . y).
[16:15:16] <mnieper> (In the REPL window.)
[16:15:51] <mnieper> However, when I use Racket in R6RS mode, the RnRS pairs (also mutable) are printed as Racket's mpairs, e.g. in the form {x . y}.
[16:16:01] <mnieper> (I'm using DrRacket.)
[16:17:06] <mnieper> What is the correct place to use something like Racket's `print-mpair-curly-braces' so that DrRacket's REPL in R6RS mode also prints mpairs the Scheme and not the Racket way?
[16:22:41] *** Joins: notzmv (~zmv@user/notzmv)
[16:36:20] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[16:52:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2034:c204:70d1:cb4e)
[16:52:11] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:54:37] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[16:56:27] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:58:37] *** Joins: klovett (~klovett@107.116.92.97)
[16:59:42] *** Quits: xyh (~xyh@113.92.73.190) (Quit: WeeChat 3.4.1)
[17:15:26] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[17:19:06] *** Joins: badkins (~badkins@136.56.92.199)
[17:21:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:25:30] *** Joins: s-liao (~s-liao@101.86.164.158)
[17:27:31] <gwatt> mnieper: are you asking how to use `print-mpair-curly-braces' from within r6rs mode, or is it a matter of taste?
[17:29:04] <sham1> It seems to be a parameter, so something like parameterize or whatever racket has for that should work
[17:29:49] <sham1> So I suppose the question is how one might turn the parameter off by default in r6rs mode in racket
[17:30:10] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:41] <sham1> Maybe (print-mpair-curly-braces #f) at the top?
[17:40:34] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[17:40:37] *** Quits: casmajavi (~casmajavi@user/casmajavi) (Client Quit)
[17:43:39] *** Quits: zacque (~zacque@1.32.90.32) (Quit: Goodbye :D)
[17:44:05] <gwatt> Probably the real answer is modifying the r6rs #lang to call it set it automatically
[17:47:24] <sham1> Probably 
[17:57:43] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[18:07:55] <mnieper> Yes, I would like to hear the "real answer".
[18:07:56] <mnieper> :)
[18:09:27] <gwatt> well, the two answers I have are 1) "Put (print-mpair curly-braces #f) at the top of an r6rs program" and "modify 'share/pkgs/r6rs-lib/main.rkt' to have (print-mpair-curly-braces #f) in the file"
[18:09:54] <gwatt> Or, submit a patch to racket to do the 2nd option
[18:15:13] <sham1> That's probably better because I'd argue that it's what people expect when using #!lang r6rs
[18:15:18] <sham1> That pairs work like pairs should work
[18:16:48] <mnieper> gwatt: The R5RS mode has something like that in its init.rkt file. Do you know how a Racket package is organized and what the difference between init.rkt and main.rkt is?
[18:17:31] <gwatt> mnieper: I do not. I have never looked into the racket libraries until just now when your question piqued my interest.
[18:18:04] <mnieper> :)
[18:19:14] <gwatt> Though the r6rs implementation does not appear to have any "init.rkt" files, just "main.rkt"
[18:30:44] <amazigh> there is #racket channel here, otherwise I think they are active on slack or discord ;)
[18:31:16] <amazigh> there is seldom racket questions such as this one on #scheme
[18:31:43] <amazigh> I mean there is not a lot of racket user that are active on the channel afaik
[18:38:31] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[18:40:13] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[18:52:22] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:54:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8)
[18:54:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8) (Changing host)
[18:54:57] *** Joins: skapata (~Skapata@user/skapata)
[18:55:40] <ec> What can be accomplished with parameterize that can't be done with a let binding?
[18:58:06] <sham1> Dynamic variables
[19:03:21] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[19:05:36] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:12:05] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:2fd8:c74b:1a18:d64)
[19:12:46] *** Joins: karlosz (~karlosz@193.137.37.182)
[19:17:05] *** Quits: karlosz (~karlosz@193.137.37.182) (Client Quit)
[19:17:27] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Ping timeout: 256 seconds)
[19:30:42] *** Joins: irontom` (~user@38.81.106.5)
[19:30:45] *** Quits: irontom` (~user@38.81.106.5) (Remote host closed the connection)
[19:31:23] *** Joins: irontom` (~user@38.81.106.5)
[19:32:24] *** Quits: irontom` (~user@38.81.106.5) (Remote host closed the connection)
[19:33:07] *** Joins: irontom (~user@38.81.106.5)
[19:34:51] *** Joins: notzmv (~zmv@user/notzmv)
[19:35:32] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[19:40:53] <amazigh> ec: parameters are sort-of globals..
[19:42:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[19:51:21] <sham1> ec: if you're familiar at all with CL, you might think of parameterize and such as Scheme-ish way of doing the same thing as defvar/defparameter
[19:52:37] <sham1> You use (parameterize) to do basically the same thing as when you'd let a *special-variable*
[19:53:00] <sham1> Temporarily setting it to some value further down the call stack
[19:54:35] <amazigh> ec: look for "Dynamic bindings" at https://scheme.rs/specification/
[19:55:25] <sham1> Still no ToC
[19:55:27] <sham1> Sad
[19:58:16] *** Joins: badkins (~badkins@136.56.92.199)
[20:00:25] *** Joins: apg (~apg@71-34-103-243.ptld.qwest.net)
[20:01:08] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[20:03:44] *** Quits: turlando_ (~turlando@93-42-250-112.ip89.fastwebnet.it) (Quit: turlando_)
[20:04:18] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[20:04:18] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[20:04:18] *** Joins: turlando (~turlando@user/turlando)
[20:05:57] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[20:06:08] <amazigh> sham1: fill a bug report :p
[20:07:00] <amazigh> ec: are you familiar with python contextvar? or just python?
[20:07:17] <amazigh> or what python call `with` blocks
[20:11:08] <amazigh> my explanation of parameters: when you do (define myparameter (make-parameter)) it returns a procedure that my take zero or one argument
[20:11:28] <amazigh> (myparameter) without argument will return the current value
[20:11:45] <amazigh> (myparameter FOOBAR) will set myparameter to FOOBAR
[20:12:01] <amazigh> later when you call `(myparameter)` it will return FOOBAR
[20:13:18] <amazigh> the difference with a regular global are a) you can set myparameter without using `set!` which does not work across libraries b) and parametrize which allows to take into account non-local exists (with call/cc) and regular scheme returns
[20:14:02] <sham1> Wait, (myparameter FOOBAR) sets it globally?
[20:14:05] <sham1> Huh
[20:14:07] <sham1> That's useful
[20:14:18] <amazigh> with program escape BODY in (parametrize ((myparameter FOOBAR) body ...) with call/cc or return, myparameter will have its previous value before it was set to FOOBAR
[20:15:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[20:16:23] <amazigh> (myparameter FOOBAR) set the parameter, I did not test but (myparameter FOO) (parameterize ((myparameter BAR)) (myparameter QUX) (display (myparameter))) (display (myparameter)) will display... QUXFOO
[20:16:48] <amazigh> when you exit parametrize, it re-instate the value of the parameter before entering paremeterize
[20:17:16] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[20:18:27] <amazigh> let bindings introduce local variables, parameterize requires a variable that is parameter that exists before the call to parametrize
[20:19:09] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[20:20:30] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) ()
[20:25:44] <sham1> Looking at R7-small at least: "The effect of passing arguments to a parameter object is implementation-defined."
[20:25:56] <sham1> So one may or may not be able to call (myparameter) with a thing and set it
[20:28:09] <amazigh> ?!
[20:28:57] <amazigh> ah ok
[20:29:31] <Zipheir> I wonder if any implementations do something else with parameters to parameters.
[20:29:33] <amazigh> oh!
[20:33:16] *** Quits: mnieper (~user@137.250.162.24) (Ping timeout: 245 seconds)
[20:33:28] <amazigh> Zipheir: what do you mean? I do not understand 'with parameters to parameters'
[20:35:06] <sham1> Passing a parameter to the parameter object, like (myparameter foo)
[20:35:17] <Zipheir> amazigh: It was a weak pun.
[20:36:04] <Zipheir> "Passing an argument to a parameter object"
[20:43:03] <amazigh> Anyway can hit me with more information about the editor role of Committee Publication, what does in entail? I was under the impression that only requires to setup a build system to produce good html and pdf given the layout that is decided. Does it really require a long committement?
[20:43:25] <amazigh> I dare to think that once the build system setup, that could be owned by everybody.
[20:43:29] <amazigh> What I am missing?
[20:44:55] *** Quits: turlando (~turlando@user/turlando) (Quit: turlando)
[20:45:14] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[20:45:21] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[20:45:21] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[20:45:21] *** Joins: turlando (~turlando@user/turlando)
[20:50:51] *** Joins: badkins (~badkins@136.56.92.199)
[20:55:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:56:14] <Zipheir> Any auto-generating system is probably going to take some oversight to continue producing good-quality PDFs/HTML while changes are being made.
[21:02:23] <amazigh> is the hyperspec the only spec for common lisp that is current, or they are other documents that comes with it?
[21:04:35] <Zipheir> If 1994 or something counts as "current"...
[21:05:40] <sham1> Well it's the latest one
[21:06:46] *** Quits: rx80 (~quassel@user/rx80) ()
[21:07:08] <dpk> the lisp-lang.org people claim to be working on a new one
[21:07:22] <dpk> bah, humbug, i say: the old one works fine and has some of the stablest URLs on the Web
[21:07:39] <Zipheir> But CLHS is a community standard, right?  There's the ANSI one, which IIRC doesn't get much attention.
[21:08:19] <Zipheir> (A little like ANSI Scheme, I guess.)
[21:08:24] <dpk> afaik CLHS is just an online version of the ANSI one? but i dunno, i'm not a Common Lisper
[21:08:31] <sham1> Zipheir: I think you mean IEEE Scheme
[21:08:37] <Zipheir> Oops, yes.
[21:08:49] <sham1> Yeah, from what I've understood, CLHS is just the Ansi one in a nicer manner
[21:09:01] <sham1> In a form what's easier to navigate
[21:09:03] <Zipheir> One of those organizations that doesn't publish public versions of documents they expect everyone to follow. :)
[21:09:54] *** Joins: rx80 (~quassel@user/rx80)
[21:11:11] <sham1> The IEEE standard for Scheme does look interesting, I give them that. It even has an abstract
[21:11:26] <Zipheir> "Oh my god, it even has an abstract."
[21:11:53] <sham1> I wouldn't expect that from a standard, although in many ways it does seem more like a research paper
[21:12:25] * amazigh something grml something grml something
[21:12:53] <amazigh> sorry ignore my previous message. I am super excited.
[21:14:30] <Zipheir> grml seems to be ... a Debian-based Linux distro?
[21:14:37] <sham1> Yeah
[21:14:40] <Zipheir> But ... does it have an abstract.
[21:15:12] <sham1> >.>
[21:15:17] <amazigh> ^^'
[21:15:37] <amazigh> grml is somekind of abstract gramblings ;)
[21:16:30] <amazigh> rambling!
[21:16:34] <amazigh> not grambling sorry
[21:16:41] <Zipheir> grmblings
[21:17:06] <amazigh> the sounds some make when talking in their beard
[21:18:41] <amazigh> I will go afk a little.
[21:20:10] *** Joins: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[21:20:58] <Zipheir> rudybot: Time to be serious.
[21:21:15] <rudybot> Zipheir: I don't believe you to be serious at all, so why am I even wasting my time with this
[21:40:01] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:46:16] <Zipheir> Does anyone know why Guile would warn "shadows previous definition of `dummy-1a78708d3c9406a3'" for *every* use of (R6RS) define-record-type in a source file?
[21:46:49] <Zipheir> I don't know what I'm supposed to make of that.  dummy-SKRONK is obviously some internal construct.
[22:00:14] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:01:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:01:57] <dpk> see https://www.gnu.org/software/guile/manual/html_node/Hygiene-and-the-Top_002dLevel.html maybe
[22:09:58] *** Joins: notzmv (~zmv@user/notzmv)
[22:11:59] *** Quits: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:14:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:16:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:18:37] <Zipheir> dpk: Thanks.
[22:20:40] <Zipheir> I guess that explains the dummy-1a78708d3c9406a3 name, but not why each toplevel record definition would shadow the same name.
[22:21:42] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:22:33] *** Joins: badkins (~badkins@136.56.92.199)
[22:48:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[23:06:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:08:57] *** Quits: irontom (~user@38.81.106.5) (Ping timeout: 250 seconds)
[23:09:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:12:35] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:24:55] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:2fd8:c74b:1a18:d64) (Quit: Client closed)
[23:29:21] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[23:39:14] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:41:08] <theseb> Agree?...I've been thinking of all the possible gotchas with implementing list operations (e.g. first, rest, append, remove, etc.) in a lisp implementation....After racking my brain...seems the safest thing is to just always COPY the original list and modify the COPY and return whatever is left.  Is that ok?
[23:41:45] <theseb> It may be inefficient but at least it doesn't give me a headache
[23:44:31] <amazigh> if you shared some code, it would be easier to advise
[23:44:50] <amazigh> if you have headache it means you are making progress :)
[23:48:06] <theseb> amazigh: i still thinking in general.....i believe you'd at least have to make it clear if you wanted a list operation to modify the list IN PLACE or return a new modified version
[23:48:33] <theseb> i.e. change the original or not change the original
[23:49:43] <amazigh> yes
[23:50:04] <amazigh> some operation do modify in place, others don't
[23:51:06] <amazigh> but you do not need to do full copies all-the-time. They are strategies to re-use one or more of the initial datastructure to avoid to copy everything all-the-time.
[23:51:44] <theseb> amazigh: even if you do NOT modify a list there can be ambiguity...
[23:52:00] <theseb> amazigh: e.g. scheme/lisp has operations to return the rest (cdr) of a list
[23:52:12] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[23:52:19] <amazigh> theseb: unrelated to you, i need to rest, possibly sleep :)
[23:52:34] <theseb> amazigh: ok..nm....thanks
[23:52:40] <theseb> sweet dreams
[23:52:43] <amazigh> :)
