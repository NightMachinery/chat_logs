[00:27:14] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Quit: Leaving)
[00:28:35] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[00:31:18] *** Quits: giusb (~giusb@user/giusb) (Remote host closed the connection)
[00:31:48] *** Joins: giusb (~giusb@user/giusb)
[00:37:28] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[00:38:03] *** Quits: guido (~guido@host-95-235-251-144.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[00:38:53] *** Joins: pilyn (~pilyn@user/pilyn)
[00:40:08] <zeraphel> any way for :term to jump back to previous buffer once the job is done ?
[00:41:25] *** Joins: NovelHawk (~mhawk@host-79-23-67-77.retail.telecomitalia.it)
[00:41:57] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:46:33] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[00:46:35] <zeraphel> .. instead of closing the window.
[00:46:50] *** Joins: giusb (~giusb@user/giusb)
[00:57:28] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[00:58:10] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:02:37] <Pope_Rigby[m]> How do change the color of this popup I have for errors?
[01:02:38] <Pope_Rigby[m]> file:///home/cassidy/Pictures/Screenshots/PC/Screenshot_20211217_133208.png
[01:02:58] * Pope_Rigby[m] uploaded an image: (74KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/owltsfMmdrxgMqywTddVTBOl/Screenshot_20211217_133250.png >
[01:03:17] <Pope_Rigby[m]> It's hard to see, because it's the same color as the background
[01:08:55] <zeraphel> alright.. wrote something myself to fulfill my requirements,  sorry i ever doubted you #neovim.   http://ix.io/3IHG
[01:14:37] *** Quits: emf (~emf@2620:10d:c091:480::1:7a0e) (Ping timeout: 240 seconds)
[01:17:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:18:21] *** Joins: sidy (~sidy@user/sidy)
[01:18:58] *** Quits: sidy (~sidy@user/sidy) (Remote host closed the connection)
[01:25:37] *** Joins: mohab (~mohab@45.245.18.151)
[01:26:18] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:36:04] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:38:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[01:43:58] *** Joins: sab02rq (~u0_a283@5.122.75.3)
[01:44:24] <sab02rq> Hi
[01:49:03] <sab02rq> I'm moving my vimscripts to lua language, but I'm no expert on any of them, I had a TermWrapper function which I used it to split a pane and run term with some spacial commands. most of the commands were compile/run commands for c and python which I pass them as parameter to my function at run(call) time, I was wondering, How can I slipt nvim's window and do such work with term command on it with
[01:49:06] <sab02rq> the lua configuration?
[01:52:59] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Quit: leaving)
[02:02:05] *** Joins: u0_a283 (~u0_a283@176.12.77.191)
[02:02:05] *** Joins: donofrio_ (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[02:04:11] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:06:00] *** Quits: sab02rq (~u0_a283@5.122.75.3) (Ping timeout: 268 seconds)
[02:09:13] *** Quits: amichaelc (~amichaelc@user/amichaelc) (Quit: amichaelc)
[02:11:02] *** Quits: u0_a283 (~u0_a283@176.12.77.191) (Ping timeout: 240 seconds)
[02:11:35] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8d58:daf:1eca:e9ec) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:56] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-000a.res6.spectrum.com)
[02:17:42] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-000a.res6.spectrum.com) (Client Quit)
[02:22:37] *** Joins: donofrio__ (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[02:25:02] *** Quits: donofrio_ (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:26:22] *** Quits: mohab (~mohab@45.245.18.151) (Quit: WeeChat 3.3)
[02:27:21] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:35:19] *** Joins: rgrinberg (~textual@187.223.209.106)
[02:50:01] *** Quits: bote (~bote@user/bote) (Quit: bote)
[02:53:13] *** Joins: Guest86 (~Guest86@2a04:241e:502:5500:d36:87b9:fe39:7e6a)
[02:53:17] *** Quits: calm-steam (~calm-stea@user/calm-steam) (Remote host closed the connection)
[02:53:37] *** Joins: calm-steam (~calm-stea@user/calm-steam)
[02:58:39] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[02:59:31] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:59:45] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:00:47] *** Quits: NovelHawk (~mhawk@host-79-23-67-77.retail.telecomitalia.it) (Read error: Connection reset by peer)
[03:10:38] <mg101010[m]> @sab02rq not sure I've seen anything in lua to directly interact with the term, but (you may already know) you can keep the vim commands by wrapping them with `vim.cmd([[...]])`.
[03:17:03] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[03:18:45] *** Joins: emf (~emf@2600:1700:841:cc20:184c:c9e0:41bd:a50)
[03:22:04] <chipps> Hello! I need some help with luasnip. I would like for certain words, let's say "human", to be automatically changed to  
[03:22:12] <chipps> _human
[03:22:27] <chipps> _human_ 
[03:22:39] <chipps> when I type it. How can I make this happen?
[03:22:56] <mg101010[m]> no need for luasnip, use `iabbrev human _human_`
[03:22:57] *** Quits: emf (~emf@2600:1700:841:cc20:184c:c9e0:41bd:a50) (Ping timeout: 240 seconds)
[03:23:07] *** Joins: emf_ (~emf@2620:10d:c091:480::1:2a01)
[03:23:18] <mg101010[m]> or in lua: `vim.cmd('iabbrev human _human_')`
[03:24:13] <chipps> mg101010[m]: I know about iabbrev, but my use case is not that simple usually. It was just an example. I need certain snippets to activate on "words" after I press space
[03:25:58] <chipps> also using luasnips I can make words expand based on certain conditions, which I find quite handy.
[03:26:16] <mg101010[m]> Right... If you have your luasnip shortcuts (s, fmt) setup I think: `s('human', fmt('_human_'))`
[03:27:28] <chipps> mg101010[m]: that doesn't wait for me to press space right? then 'humane' would also be expanded to _human_e
[03:28:26] <chipps> hrsh7th[m]: can you help?
[03:30:37] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6af8:e1a0:7d14:3e3d) (Ping timeout: 240 seconds)
[03:31:25] *** Quits: chipps (~chipps@2600:8807:c0c3:6200::7a51) (Remote host closed the connection)
[03:31:49] *** Joins: chipps (~chipps@2600:8807:c0c3:6200::7a51)
[03:36:57] *** Quits: emf_ (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[03:37:47] *** Joins: watcheronthewall (~watcheron@2001:470:69fc:105::1:4755)
[03:39:12] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[03:39:51] *** Joins: gentoo26[m] (~gentoo26m@2001:470:69fc:105::2ec8)
[03:41:06] *** Parts: pinpox[m] (~pinpoxmat@2001:470:69fc:105::1:4985) ()
[04:16:33] *** Joins: arinov (~arinov@213.194.126.155)
[04:24:03] <chipps> Hello there
[04:26:16] *** Joins: emf_ (~emf@2620:10d:c091:480::1:2a01)
[04:28:37] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[04:32:17] *** Quits: emf_ (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[04:33:55] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[04:34:44] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Quit: Leaving)
[04:37:32] *** Quits: columbarius (~columbari@i5E86B33D.versanet.de) (Ping timeout: 252 seconds)
[04:38:24] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:39:31] *** Joins: columbarius (~columbari@i5E86B390.versanet.de)
[04:54:06] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:56:34] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[04:59:37] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[05:01:25] *** Quits: Guest86 (~Guest86@2a04:241e:502:5500:d36:87b9:fe39:7e6a) (Quit: Client closed)
[05:05:26] *** Joins: vxz[m] (~vxztchncs@2001:470:69fc:105::1:5078)
[05:09:05] <chipps> quick question, what lua regex matches the word "begin" as the first non-whitespace character of a line?
[05:12:35] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[05:20:59] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[05:21:30] <monban[m]> \Abegin
[05:21:30] <monban[m]> I think
[05:21:43] <monban[m]> I'm not familiar with lua regex specifically
[05:21:49] <monban[m]> ^begin might also work
[05:24:40] <sunjonSenghanBri> `print(  ("    foo bar baz"):find("[^%s]") )`
[05:27:17] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[05:39:31] *** Quits: hellstabber (uid531276@id-531276.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:41:12] *** Joins: rgrinberg (~textual@2806:101e:7:6946:c82c:d3ba:1be9:cc6)
[05:42:10] *** Joins: amichaelc (~amichaelc@user/amichaelc)
[05:47:19] *** Joins: Thursday (~Thursday@user/thursday)
[05:47:56] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 252 seconds)
[05:49:19] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[05:53:22] <sszark> How do you pipe some text into nvim while setting a new file destination at the same time? It works fine as long as i'm not piping input. But doing so makes it ignore the file destination. `cat | nvim "+normal G$" +startinsert $filename.md << EndOfMessage`
[05:57:57] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[05:59:11] * chipps has another regex question.
[05:59:21] <chipps> how can I match two newlines?
[05:59:49] <chipps> essentially I want to get a snippet if I do two newlines in a row
[06:00:08] <chipps> (press enter twice in a row)
[06:01:34] *** Joins: emf (~emf@2620:10d:c091:480::1:2e5a)
[06:02:33] *** Joins: PortableDave (~portabled@220.253.22.64)
[06:07:37] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[06:07:57] *** Quits: emf (~emf@2620:10d:c091:480::1:2e5a) (Ping timeout: 240 seconds)
[06:08:13] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[06:11:23] *** Joins: iomari891 (~iomari891@197.210.76.160)
[06:19:45] *** Joins: mohab (~mohab@156.223.125.34)
[06:30:02] *** Quits: rafaeldias (~rafaeldia@2804:14c:658f:4b20::1002) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[06:30:17] *** Joins: rafaeldias (~rafaeldia@2804:14c:658f:4b20::1000)
[06:42:19] *** Quits: chipps (~chipps@2600:8807:c0c3:6200::7a51) (Quit: WeeChat 3.3)
[06:42:32] *** Joins: chipps (~chipps@2600:8807:c0c3:6200::7a51)
[06:42:53] *** Quits: chipps (~chipps@2600:8807:c0c3:6200::7a51) (Client Quit)
[06:42:53] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[06:43:05] *** Joins: chipps (~chipps@2600:8807:c0c3:6200::7a51)
[06:44:38] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[06:46:13] *** Quits: mohab (~mohab@156.223.125.34) (Quit: WeeChat 3.3)
[06:49:13] *** Quits: alban771 (~alban@37.171.212.31) (Ping timeout: 256 seconds)
[06:50:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:56:36] *** Quits: chipps (~chipps@2600:8807:c0c3:6200::7a51) (Quit: WeeChat 3.3)
[06:56:52] *** Joins: chipps (~chipps@2600:8807:c0c3:6200::7a51)
[07:00:14] <Bowuigi[m]> <sszark> "How do you pipe some text into..." <- `commands | cat - filename.md | nvim +whatever`
[07:00:14] <Bowuigi[m]> <chipps> "how can I match two newlines?" <- \n\n
[07:01:31] *** Joins: hololeap (~hololeap@user/hololeap)
[07:06:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[07:07:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:10:21] <Betal> can ask here about coc?
[07:12:33] <sunjonSenghanBri> Betal:libera.chat: better to ask at https://gitter.im/neoclide/coc.nvim
[07:14:04] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[07:15:45] *** Joins: hololeap (~hololeap@user/hololeap)
[07:18:17] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[07:34:21] *** Quits: nzeo (~nzeo@80.64.181.151) (Remote host closed the connection)
[07:34:59] *** Joins: nzeo (~nzeo@80.64.181.151)
[07:54:43] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[07:56:37] *** Quits: nzeo (~nzeo@80.64.181.151) (Ping timeout: 240 seconds)
[08:02:53] *** Quits: iomari891 (~iomari891@197.210.76.160) (Ping timeout: 256 seconds)
[08:04:07] *** Joins: iomari891 (~iomari891@197.210.53.158)
[08:16:57] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 240 seconds)
[08:17:08] *** Joins: off^ (~off@64.253.22.77)
[08:19:59] *** Joins: akurilin_ (uid322841@id-322841.ilkley.irccloud.com)
[08:21:36] <akurilin_> Hey friend, quick question: how do I make visual incremental search with / to stay case insensitive, BUT make flipping through the same symbol in a buffer with the * key stay case sensitive? I currently have ignorecase and smartcase both set, which doesn't quite do the trick.
[08:21:40] <akurilin_> *friends
[08:23:13] <akurilin_> Often when I'm searching through a buffer with / I have no clue what the exact casing of a term will be, so I need it to stay insensitive, but when I have a specific term under my cursor on the screen, I really don't want its case to change when flipping through its instances.
[08:30:11] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[08:30:18] <amichaelc> you could set noignorecase in your vimrc, then use `autocmd CmdlineEnter / set ignorecase` and `autocmd CmdlineLeave / set noignorecase`
[08:31:29] <akurilin_> Oh, let me try that.
[08:31:58] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[08:34:11] <akurilin_> @amichaelc it's almost there, when using / it highlights possible matches case-insensitivey, BUT the instant I press enter, so that I can switch between matches with "n", it reverts to being case-sensitive again.
[08:34:39] <akurilin_> It would work perfectly if it could turn on case sensitivity only after I'm done using "n"
[08:36:17] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[08:36:57] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[08:37:52] <amichaelc> get rid of the CmdlineLeave autocmd, then add a noremap * <cmd>set noignorecase<cr>*
[08:38:17] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[08:41:29] *** Joins: iomari891 (~iomari891@197.210.76.160)
[08:42:57] <shadmansalehShad> Any one knows what `warning: multiple different client offset_encodings detected for buffer` mean ?
[08:43:28] <mjlbach[m]> yes
[08:43:39] <shadmansalehShad> `clangd` & `null-ls` is attched to buffer .
[08:44:03] <shadmansalehShad> What does it mean and any way to stop the warning ?
[08:44:10] <mjlbach[m]> You have multiple language servers (or null-ls) attached to the same buffer, you are trying to use a buf.lua function which needs to generate position requests for each client, at this time we only support generating the same request per client
[08:44:31] <mjlbach[m]> clangd uses utf-8 encoding by default, I assume null-ls uses utf-16, so we warn with an error
[08:44:42] <mjlbach[m]> previously we would send utf-16 requests to everyone silently (which was wrong)
[08:45:00] <shadmansalehShad> ohh . So I need to detach null-ls ?
[08:45:45] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[08:46:26] <mjlbach[m]> Or force clangd to run in utf-16 mode
[08:46:28] <mjlbach[m]>     local capabilities = vim.lsp.protocol.make_client_capabilities()
[08:46:29] <mjlbach[m]>     capabilities.offsetEncoding = { "utf-16" }
[08:46:29] <mjlbach[m]>     require('lspconfig').clangd.setup({capabilities = capabilities})
[08:46:57] <mjlbach[m]> Why do you need null-ls on a cpp buffer?
[08:47:01] <mjlbach[m]> * on a c/cpp buffer?
[08:47:12] <shadmansalehShad> That's even better . Thanks .
[08:48:10] <shadmansalehShad> I haven't yet got null-ls completely set up. I think it's attaching to everything because of some code actions 😛
[08:48:11] <mjlbach[m]> No problem, I'll fix it to allow mixed encodings eventually, it's just a complexity high thing
[08:48:34] <mjlbach[m]> Ah, they recently decoupled from lspconfig so I assumed there was a way to restrict it per filetype
[08:50:33] <shadmansalehShad> There probably is . I installed and partially configured it a while, and haven't yet gotten time to get back to it.
[08:52:53] <mjlbach[m]> What are you using null-ls for?
[08:53:25] <shadmansalehShad> I am testing it out for some formatters .
[08:55:40] <mjlbach[m]> we need a better formatter api :( 
[08:56:07] <mjlbach[m]> I feel like that ends up being most of the reason people use null-ls, but I don't see a reason to go through the built-in client for that
[08:57:32] <shadmansalehShad> Yeah . Also linter support on null-ls is nice too .
[08:58:10] <sunjonSenghanBri> I use formatter.nvim and nvim-lint
[08:58:20] <mjlbach[m]> yeah something has always bothered me though about smashing together linters and formatters, the former was sort of taken care of with vim.diagnostic, the latter still is open
[08:58:24] <sunjonSenghanBri> there's only ~5 of each that I configure in reality
[08:58:40] <sunjonSenghanBri> and they're both "do this on buffer/selection"
[08:58:54] <sunjonSenghanBri> I've no wish to add any more complexity to it
[08:59:11] <sunjonSenghanBri> so I'm curious from the "cool new lua things!" when I see something like null-ls
[08:59:28] <shadmansalehShad> vim.diagnostics definitely filled that role . I wonder if null-ls/nvim-lint has startted using diagnostics api. 
[08:59:29] <sunjonSenghanBri> less curious when I see no end of issues for something that shouldn't have been a problem in the first place
[08:59:40] <mjlbach[m]> shadmansaleh (Shadman): they both have
[08:59:56] <shadmansalehShad> awesome 
[09:00:14] <mjlbach[m]> now to kick out people using format requests with a nice formatting api :P 
[09:00:18] <sunjonSenghanBri> I assumed the valid cases were for webdevs that needed some weird hybrid setups
[09:00:29] <mjlbach[m]> that is correct for 90% of LSP issues
[09:00:41] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[09:01:50] <akurilin_> @amichaelc that does the trick, thank you so much. Needed a good reboot of nvim to kick in.
[09:02:16] <amichaelc> glad to help, and cool idea!
[09:02:37] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[09:03:25] <akurilin_> I'm convinced that I had it working that way in the past, but I broke that setting at some point and never restored it. Although looking back through my vimrc archives, there's no indication of it ever being set up that way, so maybe I'm imagining it :) 
[09:11:37] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[09:13:30] *** Joins: samebchase (~samebchas@51.15.68.182)
[09:13:57] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[09:22:29] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[09:29:15] *** Quits: amichaelc (~amichaelc@user/amichaelc) (Quit: amichaelc)
[09:54:44] *** Quits: rgrinberg (~textual@2806:101e:7:6946:c82c:d3ba:1be9:cc6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:09:49] *** Quits: iomari891 (~iomari891@197.210.76.160) (Ping timeout: 256 seconds)
[10:25:17] *** Joins: guido (~guido@host-87-10-255-102.retail.telecomitalia.it)
[10:28:08] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:3b55:7c2e:5164:be06)
[10:31:45] *** Joins: alban771 (~alban@37.171.67.103)
[10:32:23] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[10:36:39] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[10:36:43] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[10:39:22] *** Joins: rgrinberg (~textual@2806:101e:7:6946:c82c:d3ba:1be9:cc6)
[10:47:41] *** Quits: Akulen (~Akulen@sas.eleves.ens.fr) (Quit: WeeChat 2.8)
[10:50:52] *** Joins: Guest7833 (~Guest78@202.41.10.102)
[10:51:28] <Guest7833> https://stackoverflow.com/questions/70366949/how-to-change-tab-behaviour-in-neovim-as-specified-luasniplsp-popup
[10:51:39] <Guest7833> Help me change tab behaviour
[10:54:34] <mjlbach[m]> You might have better luck asking in the luasnip room
[10:55:03] <mjlbach[m]> https://matrix.to/#/#luasnip:matrix.org
[10:55:28] <mjlbach[m]> The discourse is also now (IMO) more active for neovim questions
[10:55:29] <mjlbach[m]> https://neovim.discourse.group/
[10:59:45] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[10:59:46] <ThePrime[m]> <mg101010[m]> "@sab02rq not sure I've seen..." <- Thank u
[10:59:46] <ThePrime[m]> (that was me on IRC)
[10:59:46] <ThePrime[m]> I was wondering, is there any better ways of doing such a work? (split and run gcc for e.g)
[10:59:46] <ThePrime[m]> I though by writting it with lua, I could have better performence
[11:00:52] <mjlbach[m]> You want to run an asynchronous job?
[11:01:05] <mjlbach[m]> Or run something via term?
[11:01:16] <mjlbach[m]> s/Or run something via term?/Or run something in :term?/
[11:01:16] *** Quits: gdd1 (~gdd@129.199.146.230) (Ping timeout: 268 seconds)
[11:02:00] *** Quits: Guest7833 (~Guest78@202.41.10.102) (Quit: Client closed)
[11:02:21] *** Joins: Guest7867 (~Guest78@202.41.10.102)
[11:02:35] <ThePrime[m]> mjlbach[m]: if you mean running things alongside editing, no this is not what I want
[11:05:21] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[11:09:52] <ThePrime[m]> <mjlbach[m]> "Or run something via term?" <- In the vim I have keybindings to compile and run my tests inside of vim, the command I use is `!gcc %` and `!./a.out`
[11:09:52] <ThePrime[m]> I can use this in nvim as well, but this way, commands can not take input, I wannt to replace that.
[11:10:31] *** Quits: alban771 (~alban@37.171.67.103) (Ping timeout: 268 seconds)
[11:11:54] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[11:25:17] *** Joins: asn (~asn@2001:470:69fc:105::b32)
[11:25:18] <asn> neovim 0.6.0 update for Fedora 35: https://bodhi.fedoraproject.org/updates/FEDORA-2021-e48a4d5f17
[11:25:24] <ThePrime[m]> * In the vim I have keybindings to compile and run my tests inside of vim, the command I use is `:!gcc %` and `:!./a.out`
[11:25:24] <ThePrime[m]> I can use this in nvim as well, but this way, commands can not take input, I wannt to replace that.
[11:28:43] *** Quits: Guest7867 (~Guest78@202.41.10.102) (Quit: Client closed)
[11:33:52] *** Joins: arion96 (~arion69@120.89.66.237)
[11:34:36] *** Quits: arion96 (~arion69@120.89.66.237) (Client Quit)
[11:38:57] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[11:44:07] *** Joins: cheeze2000[m] (~cheeze200@2001:470:69fc:105::1:5200)
[12:02:16] *** Joins: alban771 (~alban@37.171.67.103)
[12:12:58] *** Joins: arion6969 (~refat@120.89.66.237)
[12:16:32] <n00bvim0[m]> I need to reread :help. Again.
[12:19:08] *** Quits: arion6969 (~refat@120.89.66.237) (Remote host closed the connection)
[12:23:50] *** Joins: aJJa_ (~aJJa@2601:283:8301:a20::df78)
[12:25:05] *** Quits: aJJa (~aJJa@2a0a:e340:1001:300::8:3) (Ping timeout: 250 seconds)
[12:29:23] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:30:06] *** Quits: oush9[m] (~oush9matr@2001:470:69fc:105::eb5) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: sailorzoop[m] (~sailorzoo@2001:470:69fc:105::1:2737) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: hazelrah[m] (~hazelrahm@2001:470:69fc:105::1:346a) (Quit: You have been kicked for being idle)
[12:42:03] *** Joins: aditya-K2AdityaK (~aditya-k2@2001:470:69fc:105::1:5203)
[12:42:03] <aditya-K2AdityaK> Hi Folks I was trying to disable the listchars for a specific buffer but `vim.api.nvim_buf_set_option(BUF,  "nolist")`  doesn't work
[12:42:57] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[12:45:16] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[12:45:40] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:46:28] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[12:57:37] *** Quits: dawnbreak (~dawn@119.61.27.20) (Ping timeout: 240 seconds)
[13:01:03] *** Joins: dawnbreak (~dawn@119.61.27.20)
[13:05:13] *** Quits: pilyn (~pilyn@user/pilyn) (Remote host closed the connection)
[13:07:52] *** Joins: iomari891 (~iomari891@197.210.52.58)
[13:28:38] <SeanDewar[m]> aditya-K2 (Aditya Kurdunkar): pretty sure `list` is window-local
[13:29:13] <clason[m]> it is (`:h 'list'`)
[13:40:22] *** Quits: iomari891 (~iomari891@197.210.52.58) (Ping timeout: 268 seconds)
[13:43:15] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Remote host closed the connection)
[13:44:19] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:46:23] *** Quits: rgrinberg (~textual@2806:101e:7:6946:c82c:d3ba:1be9:cc6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:53:11] <aphysically> how do I do Telescope diagnostics bufnr=0 with the lua require syntax
[13:53:21] <aphysically>   buf_set_keymap('n','<leader>ee', '<cmd>lua require("telescope.builtin").diagnostics()<cr>', opts)
[13:53:24] <aphysically> where does bufnr=0 go
[13:53:47] <clason[m]> inside the the options field of `diagnostics`
[13:54:23] <clason[m]> `:h builtin.diagnostics()`
[13:55:18] <aphysically> I thought lua didn't have keyword arguments
[13:55:41] <aphysically> oh it literally takes a {}
[13:55:52] <aphysically>   buf_set_keymap('n','<leader>ee', '<cmd>lua require("telescope.builtin").diagnostics({bufnr=0})<cr>', opts)
[13:55:54] <aphysically> I guess
[13:57:08] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:57:28] <aphysically> at least I assume it's equals still and nothing weird like rust that sometimes uses semicolon :D
[13:58:14] <clason[m]> You should take X minutes to learn basic Lua first; it will save you a lot of headaches in the long run: https://github.com/nanotee/nvim-lua-guide#learning-lua
[13:58:15] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[13:58:23] <clason[m]> (never assume what you can look up!)
[14:01:29] <aphysically> oh they don't have any examples of calling stuff like that
[14:01:32] <aphysically> hmm
[14:01:48] <aphysically> I'll go back to vimrc style :D
[14:02:08] <clason[m]> It's a Lua nicety: around single table or string literals, you can omit the calling parens
[14:02:36] <clason[m]> so `foo {bar = baz}` == `foo({bar=baz})`, and `foo 'bar'` == `foo('bar')`
[14:04:02] <aphysically> a CS person wrote out a maths formula for me (unrelated to CS) entirely in functional syntax and I nearly had a brain aneurysm
[14:04:44] <clason[m]> yes, that's why mathematicians don't like talking with (theoretical) CS people. They have weird ideas about maths...
[14:05:16] <aphysically> anyway the leaving out () reminded me of this experience
[14:05:30] <aphysically> :P
[14:09:23] <clason[m]> yeah, not sure it's the greatest feature; but it does allow you to fake keyword arguments in a language that doesn't have them.
[14:09:31] *** Joins: Hassan01 (~Hassan01@2a02:2f0e:c615:3800:44fd:8967:b83c:4390)
[14:09:37] <clason[m]> (and I like keyword arguments...)
[14:12:19] <aphysically> rust doesn't have keyword arguments this hurts sometimes
[14:12:58] <aphysically> keyword arguments (or some emulation of them) are probably pretty critical for a language being used for configuration
[14:14:41] <clason[m]> they're certainly very useful
[14:14:58] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[14:26:30] <bfredl> My theoretical CS lecturer informed us "we CS people use graphs to prove properties about algorithms, while those maths people use algorithms to prove properties about graphs. and of course we despise each other."
[14:27:48] <Hassan01> anyone else use svelte with neovim? having some trouble setting up indent
[14:30:38] <MrElendig> https://www.youtube.com/watch?v=r-TLSBdHe1A  somewhat related to the cs comment
[14:30:50] <MrElendig> (and a good watch in general)
[14:31:03] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[14:47:44] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[14:58:27] *** Quits: off^ (~off@64.253.22.77) (Remote host closed the connection)
[15:00:58] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[15:03:17] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[15:06:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:07:27] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:12:55] *** Joins: nzeo (~nzeo@80.64.181.151)
[15:14:43] *** Joins: NovelHawk (~mhawk@host-95-247-46-101.retail.telecomitalia.it)
[15:23:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:25:27] *** Quits: w0ng (~w0ng@103.1.212.92) (Ping timeout: 256 seconds)
[15:26:29] *** Joins: w0ng (~w0ng@103.1.212.92)
[15:38:17] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[15:44:24] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[15:44:50] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[15:45:58] *** Joins: rito_ (~rito_gh@45.112.243.172)
[15:54:24] *** Joins: pepper (~pepper@user/pepper)
[15:54:51] *** Quits: Strom (strom@fedora/strom) ()
[15:56:56] *** Joins: Strom (strom@fedora/strom)
[16:02:58] *** Joins: henry404080 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:04:03] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[16:04:03] *** henry404080 is now known as henry40408
[16:11:01] *** Joins: asvln (asvln@gateway/vpn/protonvpn/asvln)
[16:13:24] *** Quits: asvln (asvln@gateway/vpn/protonvpn/asvln) (Client Quit)
[16:13:39] *** Joins: asvln (asvln@gateway/vpn/protonvpn/asvln)
[16:16:32] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[16:16:55] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 250 seconds)
[16:18:23] *** Joins: breavyn (~breavyn@user/breavyn)
[16:19:17] *** Quits: breavyn_ (~breavyn@user/breavyn) (Ping timeout: 240 seconds)
[16:22:46] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:23:28] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Client Quit)
[16:24:46] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:31:19] *** Quits: rafaeldias (~rafaeldia@2804:14c:658f:4b20::1000) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:31:34] *** Joins: rafaeldias (~rafaeldia@2804:14c:658f:4b20::1002)
[16:32:24] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[16:36:10] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[16:37:31] <gaarco[m]> in the `init.lua` of a subfolder/submodule do i have to specify anything?
[16:37:31] <gaarco[m]> do i have to require the files of that module?
[16:38:15] <clason[m]> if you want to use their exports, yes
[16:40:01] <gaarco[m]> is it done with `require("submodule/file")` or `require("file")`? because the latter gives me errors "module file not found"
[16:41:00] <clason[m]> the former, in general -- `require` always looks relative to the global `package.path`
[16:41:20] <clason[m]> I'd recommend looking at published plugins how they handle things (plenary, telescope, gitsigns, etc.)
[16:45:07] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[16:45:44] *** Joins: toastloop (toastloop@user/toastloop)
[16:54:10] *** falk689_ is now known as falk689
[16:54:17] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[16:56:39] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[16:57:07] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[16:57:12] *** Quits: asvln (asvln@gateway/vpn/protonvpn/asvln) (Quit: asvln)
[16:58:36] *** icyphox is now known as icy
[17:01:09] *** Joins: sew[m] (~sewmanszc@2001:470:69fc:105::d17e)
[17:01:09] <sew[m]> Hi, when using `:%s/../../` I can preview some replacements in a new window split. How can I enlarge this preview window vertically? I'm googling and googling and can't find option for it. Has this preview window some specific name?
[17:04:43] <sew[m]> I've found it. It's `:set cwh=N` 🤦
[17:08:47] *** Quits: NovelHawk (~mhawk@host-95-247-46-101.retail.telecomitalia.it) (Quit: Leaving)
[17:08:48] *** Joins: aJJa__ (~aJJa@2a0a:e340:1001:300::8:5)
[17:10:57] *** Quits: aJJa_ (~aJJa@2601:283:8301:a20::df78) (Ping timeout: 240 seconds)
[17:11:27] *** Quits: Hassan01 (~Hassan01@2a02:2f0e:c615:3800:44fd:8967:b83c:4390) (Remote host closed the connection)
[17:12:19] <oj> neovim on debian unstable seems to have changed the way "Y" works
[17:12:27] <oj> it's now equivalent to y$
[17:12:38] <oj> before it was equivalent to yy
[17:12:45] <oj> how do I check what's going on?
[17:13:43] <numToStr[m]> oj: It's the default behaviour in 0.6.0
[17:14:04] <oj> what's the rationale behind changing it?
[17:14:43] <numToStr[m]> To be same as C
[17:15:51] <numToStr[m]> Use `unmap Y` to revert back to old behaviour
[17:16:40] <Bowuigi[m]> oj: It is to be consistent with C and D
[17:16:54] <oj> but is it consistent with vim?
[17:17:23] <numToStr[m]> It's neovim
[17:17:57] <Bowuigi[m]> It doesn't have to be backwards compatible all the time
[17:17:59] <oj> right, I understand the reasoning
[17:18:47] <oj> but changing defaults goes against the muscle memory of a BIG user base
[17:19:23] <oj> especially when yanking is one of the most common actions a user does
[17:19:35] <oj> but I'm not going to argue it, I'm not a maintainer
[17:20:05] <numToStr[m]> numToStr[m]: .
[17:20:06] <oj> thanks for the answer
[17:21:00] <Bowuigi[m]> oj: I usually use reasoning before muscle memory because it is more dynamic
[17:21:28] <Bowuigi[m]> `Y` used to be an inconsistency
[17:22:10] <oj> I do 'Yp' so often I do not even think about it
[17:22:14] <numToStr[m]> oj: Neovim has other good defaults but sometimes (I guess) it bothers some old users. But in the end it's always done in good faith ;)
[17:22:51] <oj> 'yyp' is much clunkier
[17:22:53] <numToStr[m]> And you can also revert back to old settings very easily.
[17:23:01] <oj> yes, as I said, I understand it
[17:23:08] <Bowuigi[m]> numToStr[m]: True
[17:23:15] <oj> I don't need or want to convince you of the opposite
[17:23:39] <oj> I just stated the case above, that's good enough for me
[17:23:58] <numToStr[m]> (now worries, I am on mobile and I type slow ;)) 
[17:24:11] <numToStr[m]> s/now/no/
[17:25:44] <sew[m]> oj: not for me. hitting the same key two times is much simpler for me than hitting two different and in the same time
[17:26:15] <oj> oj: yyp takes longer because the y hits are serialized
[17:26:26] <oj> shift+y can be performed in parallel
[17:26:37] <oj> ;)
[17:26:53] <Bowuigi[m]> Make a binding
[17:27:09] <oj> a binding to Y maybe?
[17:28:32] <Bowuigi[m]> `C-d` probably
[17:28:42] <Bowuigi[m]> For "duplicate"
[17:28:49] *** Joins: toastloop[m] (~toastloop@2001:470:69fc:105::1:5222)
[17:29:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[17:30:17] <oj> Yeah, but I often work in new systems and I rely on the defaults
[17:30:57] *** Quits: nzeo (~nzeo@80.64.181.151) (Remote host closed the connection)
[17:30:57] <oj> it would be a bummer if the servers I log into now behave differently based on which implementation of vim is installed
[17:31:48] <Bowuigi[m]> Hmmm
[17:31:56] <Bowuigi[m]> :version
[17:32:16] <Bowuigi[m]> Then act accordingly
[17:32:18] <oj> that's burden on the user
[17:32:29] <Bowuigi[m]> Or, even better
[17:33:01] <Bowuigi[m]> Use yy whenever you want to copy the whole line, regardless of the version
[17:33:17] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[17:33:58] <Bowuigi[m]> It wouldn't be much of a change
[17:34:03] <oj> it definitely would
[17:34:31] <oj> Y is drilled into my left hand
[17:35:26] <clason[m]> again, `unmap Y` gets you the old behavior
[17:35:37] <oj> I understand this
[17:36:16] <oj> I'm only responding to your arguments if you are specifically trying to question my position as valid
[17:36:24] <oj> I totally understand the rationale
[17:36:39] <oj> but this will add friction for your core user base
[17:37:00] <clason[m]> no, because a) it's documented and b) it's trivial to change
[17:37:02] <oj> that is my position, and I can agree to disagree that consistency is more important than that
[17:37:24] <sunjonSenghanBri> "muh burden"
[17:37:29] <oj> clason[m]: anything extra that the user has to do is friction
[17:37:31] <oj> by definition
[17:37:38] <clason[m]> well, ok, congratulations on your position then ;)
[17:37:41] <oj> and it's obviously a tradeoff
[17:37:59] <clason[m]> yes. so is mapping `Y` to `y$`
[17:38:14] <oj> my opinion about the tradeoff is different than the neovim maintainers, and that is fine
[17:38:22] <clason[m]> yes
[17:38:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:38:33] <clason[m]> so I don't understand why we're still discussing this ;)
[17:38:54] *** Quits: chipps (~chipps@2600:8807:c0c3:6200::7a51) (Quit: WeeChat 3.3)
[17:38:55] <Bowuigi[m]> To be consistent with C and D, which makes it easier for new users and for people that reason instead of use muscle memory
[17:38:57] <oj> because you're arguing that I'm wrong
[17:39:01] <Bowuigi[m]> clason[m]: Idk lol
[17:39:05] <oj> there is no right or wrong
[17:39:08] <oj> it's a design decision
[17:40:04] <clason[m]> (for the record, I'm done here; all points were made, and anything beyond that just adds noise)
[17:40:33] <ii14[m]> one of the neovim goals is better defaults
[17:40:33] <Bowuigi[m]> Same
[17:40:51] <clason[m]> well, "saner" defaults
[17:41:08] <clason[m]> not that this is much less subjective...
[17:41:13] <oj> exactly
[17:45:25] <sunjonSenghanBri> I think using terminology "friction to your core user base" and "burden" to bolster your argument is why you're feeling folk are arguing you're wrong
[17:45:37] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[17:46:11] <oj> I think saying "muh burden" is a little childish if I'm being honest
[17:46:17] <sunjonSenghanBri> "literally unplayable"
[17:46:33] <sunjonSenghanBri> fine, my charicatures may come across that way
[17:46:57] <sunjonSenghanBri> I just figured it was more tasteful than simply calling you out for being whiny
[17:47:03] <oj> charicaturing someone you're talking with is not very constructive
[17:47:17] <oj> as is assuming bad faith
[17:47:22] <sunjonSenghanBri> you passed the turing test.
[17:47:26] <sunjonSenghanBri> you can take it easy
[17:47:46] <clason[m]> mod hat on: we should take it down a notch before it's knives out
[17:47:48] <numToStr[m]> Guys it is just a single character: `Y`
[17:47:59] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[17:48:35] *** Joins: zostj (~rue@1-162-47-43.dynamic-ip.hinet.net)
[17:48:47] <oj> yes, but I do a lot of work in an environment I am very familiar with, and that makes me very efficient, because I can assume the environment is the same everywhere
[17:49:13] <sunjonSenghanBri> but nvim has "sane defaults"
[17:49:18] <clason[m]> I'm sorry, but that is very much not a use case that Neovim targets
[17:49:23] <oj> it's a single issue here, but there are a lot of components in a Linux server 
[17:49:26] <sunjonSenghanBri> it advertises itself on that, and its "core user base" know this
[17:49:29] <oj> small changes compound
[17:49:36] <clason[m]> if you need a consistent, pre-installed environment, you should stick with Vim
[17:49:45] <oj> that's why friction is important in some cases
[17:49:52] <sunjonSenghanBri> it doesn't advertise itself as "transparently compatible with vim - you'll never know the difference!tm"
[17:50:06] <oj> I'm not trying to argue about this change in particular
[17:50:29] <clason[m]> but you are... (apparently now making an example out of it to segue into a bigger point)
[17:50:47] <oj> I'm just talking about why friction is an issue for power users
[17:51:11] <clason[m]> sorry, I said I'm done, and I should stick with it. Suffice it to say that I'm sorry that Neovim doesn't meet (all) your needs, and I hope you find an editor you're completely happy with.
[17:51:29] <oj> again, I'm not abandoning neovim because of this
[17:51:40] <clason[m]> (and mentioning "power user" in this context is a low blow that doesn't help your argument)
[17:52:10] <oj> ok, I'm sorry if I'm coming off as rude, but I'm just using the same terminology I would use in any software design context
[17:52:35] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[17:52:37] <sunjonSenghanBri> that's why I made the turing remarkr
[17:52:42] <sunjonSenghanBri> it's a robotic argument
[17:52:54] <sunjonSenghanBri> that you're trying really hard to make fit.
[17:53:17] <sunjonSenghanBri> it's trivial, understandable, follows prior rationale, etc
[17:53:29] <oj> guys, I'm not going against you!
[17:53:37] <sunjonSenghanBri> be logical, not robotic.
[17:54:19] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[17:54:26] <oj> ok, thanks mr. "muh burden"
[17:54:43] <oj> is it worse to stay on point than to act like a COD kid?
[17:55:10] <sunjonSenghanBri> you're boring now.
[17:55:25] <oj> I have been trying for a long time to just wrap this up and say thank you
[17:55:39] <clason[m]> you're welcome :)
[17:55:43] <oj> thank you.
[17:55:44] *** Joins: arkurious (~arkurious@user/arkurious)
[17:55:49] <numToStr[m]> Well done guys 👍
[17:56:19] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[17:58:36] <ii14[m]> <clason[m]> "if you need a consistent, pre-..." <- I don't think neovim can ever even become a replacement for vim as the default on linux, because it's not compatible with vi. unless distros no longer care about posix compatibility
[17:58:47] <clason[m]> indeed
[17:58:56] <clason[m]> it's a non-goal
[17:59:17] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[18:00:25] <bfredl> yes. neovim is not an "implementation" of vim or of vi. distros should provide neovim as the implementation of neovim :D
[18:01:25] <sunjonSenghanBri> but are you a power user?
[18:01:35] <clason[m]> I am not, of course
[18:01:38] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[18:01:47] <sachinjangra[m]> Hello
[18:01:58] <clason[m]> (and please, the matter is dropped, let's not continue making fun of others)
[18:02:02] <sunjonSenghanBri> Greetings
[18:02:57] <sachinjangra[m]> Mind if I ask a question?
[18:03:07] <clason[m]> go ahead
[18:03:10] <sunjonSenghanBri> I would positively encourage it
[18:03:40] <jamessan[m]> vim isn't compatible with vi either, although it does try to be within certain constraints
[18:04:11] <jamessan[m]> Just like we try to be compatible with vim, within certain constraints
[18:04:38] <sachinjangra[m]> Can I use neovim as a RPC client instead of a server.
[18:04:38] <sachinjangra[m]> For example. I can use any programming language to write my plugin an an RPC api and call those api functions from neovim.
[18:04:54] <ii14[m]> yes, you can
[18:05:38] <ii14[m]> jobstart() with rpc to true
[18:05:41] <bfredl> if you use msgpack-rpc as the protocol of your external process, you can just use rpcrequest/rpcnotify in neovim :]
[18:07:13] <ii14[m]> language servers work that way, but it's json instead of msgpack
[18:07:26] *** Parts: aberrant (~aberrant@c-69-251-113-165.hsd1.va.comcast.net) ()
[18:07:41] <ii14[m]> so you can always pick some other method of serialization
[18:08:17] <sachinjangra[m]> yes I see that there are functions like vim.rpcrequest() and vim.rpcnotify()
[18:08:17] <sachinjangra[m]> There are good for makeing requests. But what if i want to listen to arbitrary notifications from my plugin.
[18:08:17] <sachinjangra[m]> If i send a rpc notification from plugin that is not related to an api function call, i get an error stating that there is no such function
[18:08:59] <ii14[m]> on_stderr in jobstart()?
[18:09:16] <bfredl> well you can send "nvim_exec_lua" as a notification from your plugin, and then call the handler function
[18:10:21] <sachinjangra[m]> ii14: over the default rpc socket that noevim provides
[18:10:56] <ii14[m]> not sure, I think stdout might be used for msgpack and stderr for just whatever
[18:11:23] <ii14[m]> bfredl knows more about it, but it's for sure possible
[18:11:46] <ii14[m]> anything is really
[18:12:31] <bfredl> you cannot "register" arbitrary notify names, so you need to use an API function to get the end result you want (such as `return require'myplugin'._rpc_event_handler(...)` )
[18:14:31] <ii14[m]> in the worst case scenario don't use the rpc option, and handle everything yourself
[18:14:57] *** Quits: columbarius (~columbari@i5E86B390.versanet.de) (Ping timeout: 240 seconds)
[18:15:16] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:16:12] *** Joins: columbarius (~columbari@i5E86B390.versanet.de)
[18:18:12] <sachinjangra[m]> > you cannot "register" arbitrary notify names, so you need to use an API function to get the end result you want (such as `return require'myplugin'._rpc_event_handler(...)` )
[18:18:12] <sachinjangra[m]> bfredl: I guess i will just have to do it this way then.
[18:18:12] <sachinjangra[m]> btw is it alright to call function list `:lua require'myplugin'._rpc_event_handler(...)` 2 to 5 times a second
[18:18:29] <ii14[m]> yeah
[18:18:34] <ii14[m]> that's not that often
[18:18:54] <ii14[m]> depending on what that handler actually does ofc
[18:19:24] <sachinjangra[m]> > depending on what that handler actually does ofc
[18:19:24] <sachinjangra[m]> Just modify one line of the current buffer
[18:19:31] <Bowuigi[m]> > <@sachinjangra:matrix.org> > you cannot "register" arbitrary notify names, so you need to use an API function to get the end result you want (such as `return require'myplugin'._rpc_event_handler(...)` )... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/60fe73cd13c71540db2dcd8e37532ec36c119c7f)
[18:19:36] <ii14[m]> yeah it's okay I think
[18:19:45] *** Joins: ninjin (e5f30034cf@user/ninjin)
[18:20:09] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[18:20:19] <ii14[m]> `require 'myplugin'` will just look up `myplugin` in a hash table, so it's okay
[18:21:19] <sachinjangra[m]> I guess its alright then, thanks a lot.
[18:21:37] <Bowuigi[m]> You have two table accesses versus one local access
[18:21:57] <sachinjangra[m]> > Cache the rpc event handler on a local, much more performant
[18:21:57] <sachinjangra[m]> I am new to programming in general. I don't know much about caching
[18:22:14] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Client Quit)
[18:22:18] <ii14[m]> computers can handle doing that 2 to 5 times a second :)
[18:22:57] <Bowuigi[m]> `local rpc_handler = require("myplugin")._rpc_event_handler`
[18:23:21] <Bowuigi[m]> ii14[m]: Not an excuse to avoid optimization
[18:23:27] <ii14[m]> also, I think this will be called where there is no context, from rpc
[18:23:46] <ii14[m]> so you have to either require or do it a global
[18:23:54] <ii14[m]> s/do/make/
[18:24:18] <Bowuigi[m]> ii14[m]: Two table accesses versus one
[18:25:12] <Bowuigi[m]> `MyPlugin_RPC_Handler = require("myplugin")._rpc_handler`
[18:25:43] <Bowuigi[m]> s/_rpc_handler/_rpc_event_handler/
[18:26:40] <Bowuigi[m]> Saving a table access is good if you are running the function many times a second
[18:27:07] <Bowuigi[m]> Fairly easy to setup too
[18:31:28] <sachinjangra[m]> > `MyPlugin_RPC_Handler = require("myplugin")._rpc_event_handler`
[18:31:28] <sachinjangra[m]> I don't think i can do this. What i am doing is sending an rpc notification from the remote plugin to call a function.
[18:31:28] <sachinjangra[m]> Something like this `nvim_command('lua require("myplugin")._rpc_event_handler()')`
[18:33:56] <clason[m]> You might want to look into how GUIs handle the communication with Neovim over RPC.
[18:34:14] <Bowuigi[m]> Hmmm
[18:34:34] <ii14[m]> MyPlugin_RPC_Handler is a global variable
[18:34:41] <ii14[m]> you can then access it from anywhere
[18:35:07] <ii14[m]> uppercase variables are automatically made global, unless you specify `local`
[18:35:31] <ii14[m]> you can make lowercase variables global by using `_G.myvar = ...`
[18:36:02] <Bowuigi[m]> Every variable is automatically made global unless you use local
[18:36:11] <ii14[m]> yeah I guess
[18:36:19] <Bowuigi[m]> Unless Neovim changed LuaJIT
[18:36:21] <ii14[m]> it's just that language server complains
[18:36:38] <ii14[m]> so in my mind it's an error
[18:36:54] <Bowuigi[m]> ii14[m]: I disabled that warning because it is pointless
[18:37:43] <sachinjangra[m]> The difficulty is not makeing something global. Its to access that global variable from the remote plugin.
[18:37:43] <sachinjangra[m]> From the remote plugin i would still have to call `nvim_command("lua My_Global_Function()")`
[18:38:11] <Bowuigi[m]> Why `nvim_command` if you are already in lua?
[18:38:26] <ii14[m]> it's a remote plugin
[18:38:40] <Bowuigi[m]> Ah
[18:38:52] <clason[m]> why not `nvim_exec_lua`?
[18:40:44] <sachinjangra[m]> > Every variable is automatically made global unless you use local
[18:40:44] <sachinjangra[m]> I am writing my remote plugin rust. Global variables defined in lua are not accessable from an rpc client.
[18:40:44] <sachinjangra[m]> The only functions accessable from rpc clients are api functions like `vim.api.some_function`.
[18:42:03] <sachinjangra[m]> This is from neovim docs `api.txt`... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/5332a9e2f810b4e6edd6071da7965df9cf054c9a)
[18:42:37] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[18:42:56] <sachinjangra[m]> And thats all. I cannot access global variables
[18:43:07] *** Joins: armin (~armin@unix.porn)
[18:43:45] <ii14[m]> any global variables?
[18:43:49] <sachinjangra[m]> * global variables from remote plugins
[18:43:49] <ii14[m]> maybe your global is not yet defined at that point
[18:44:03] <ii14[m]> no, you can access `vim` global
[18:44:23] <ii14[m]> so I'd suspect that it's just not defined yet
[18:44:57] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[18:45:04] <ii14[m]> you have to set the global variable before you start the plugin process
[18:49:34] <luisiaccLuisCC[m> so I can make a "diagnostic source", for example, for prettier, let's say for simplicity that eslint takes the file content via stdin and output stdout, how would I configure something like this via `vim.diagnostic` api?
[18:50:51] <sachinjangra[m]> I guess there is some kind of miscommunication at play here.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/4936477c4687d46d9059999c2f0c47855483781b)
[18:50:54] *** Quits: Kesava (~Kesava@user/kesava) (Ping timeout: 260 seconds)
[18:51:27] <clason[m]> > <@sachinjangra:matrix.org> I guess there is some kind of miscommunication at play here.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/88eaa4025acf61634c956a4b788a2f488fbd296e)
[18:51:52] <clason[m]> almost all of which (and then some) are _also_ exposed to Lua through the `vim.api` table
[18:52:05] <clason[m]> but remote plugins can (and should) call the remote API directly
[18:52:16] <ii14[m]> well yeah
[18:52:23] <clason[m]> https://github.com/daa84/neovim-lib should make it easy
[18:52:39] <ii14[m]> you can't use your own function as a method
[18:52:48] <ii14[m]> for rpc
[18:53:15] *** Parts: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (WeeChat 3.3)
[18:53:16] <ii14[m]> you have to use nvim_command or nvim_exec_lua and access your stuff from there
[18:53:16] *** Joins: Kesava (~Kesava@user/kesava)
[18:55:13] <sachinjangra[m]> > you have to use nvim_command or nvim_exec_lua and access your stuff from there
[18:55:13] <sachinjangra[m]> yeah, thats what i was trying to say. And thanks for all the help
[18:56:28] <ii14[m]> as I said, you could always do all the serialization and deserialization yourself, with rpc disabled, it's not that hard :)
[18:56:37] <ii14[m]> then you can define your own methods and everything
[18:57:54] *** Quits: Kesava (~Kesava@user/kesava) (Ping timeout: 260 seconds)
[18:58:01] <sachinjangra[m]> > as I said, you could always do all the serialization and deserialization yourself, with rpc disabled, it's not that hard :)
[18:58:01] <sachinjangra[m]> Yes, i was also thinking about that. But i thought i would take too much effort, so i gave up
[18:58:21] <sachinjangra[m]> s/i/it/
[18:59:53] <ii14[m]> you send messages to your plugin with `chansend()`, you receive messages through `on_stdout` (or `on_stderr`) callback specified in `jobstart()`
[19:00:10] *** Joins: Betal (~Betal@user/betal)
[19:00:27] <ii14[m]> you just have to serialize or deserialize them and that's it
[19:01:06] <ii14[m]> for example with json_decode() json_encode(), or the new undocumented `vim.json.*`
[19:02:04] *** Joins: Kesava (~Kesava@user/kesava)
[19:02:16] <sachinjangra[m]> > for example with json_decode() json_encode(), or the new undocumented `vim.json.*`
[19:02:17] <sachinjangra[m]> I don't those functions will work with MessagePack. These are two different formats.
[19:02:45] <sachinjangra[m]> Or i could just forget about MessagePack and use json instead
[19:03:11] <sachinjangra[m]> I never even thought about it
[19:03:47] <ii14[m]> there is `vim.mpack`
[19:03:54] <ii14[m]> vim.mpack.encode and vim.mpack.decode
[19:04:13] <ii14[m]> it was somewhat recently added too
[19:04:53] <sachinjangra[m]> > there is `vim.mpack`
[19:04:53] <sachinjangra[m]> Wow! i didn't know this existed.
[19:04:54] <ii14[m]> if you want messagepack
[19:06:01] <sachinjangra[m]> I just looked at the docs and yup this should make it really easy
[19:08:53] <sachinjangra[m]> Ok goodby, and thanks again.
[19:30:08] *** Quits: roschaefer[m] (~roschaefe@2001:470:69fc:105::3a83) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: felschr[m] (~felschrma@2001:470:69fc:105::35d8) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: lytedev[m] (~lytedevma@2001:470:69fc:105::89b5) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: AndreyPavlov[m] (~flyordiem@2001:470:69fc:105::1:37f0) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: MalClrambault[m] (~maelclera@2001:470:69fc:105::c956) (Quit: You have been kicked for being idle)
[19:34:05] *** Quits: toastloop (toastloop@user/toastloop) (Remote host closed the connection)
[19:38:48] *** Joins: huan (~huan@79.162.203.187)
[19:41:16] *** Quits: huan (~huan@79.162.203.187) (Client Quit)
[19:41:34] *** Joins: huan (~huan@79.162.203.187)
[19:42:38] *** Quits: huan (~huan@79.162.203.187) (Client Quit)
[19:42:55] *** Joins: huan (~huan@79.162.203.187)
[19:45:36] *** Quits: huan (~huan@79.162.203.187) (Client Quit)
[19:45:55] *** Joins: huan (~huan@79.162.203.187)
[19:47:00] *** Joins: nihilnovi[m] (~nihilnovi@2001:470:69fc:105::cfda)
[19:48:28] *** Parts: nihilnovi[m] (~nihilnovi@2001:470:69fc:105::cfda) ()
[19:51:36] *** Quits: huan (~huan@79.162.203.187) (Quit: Leaving)
[19:51:52] *** Joins: huan (~huan@79.162.203.187)
[19:55:09] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[20:01:32] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[20:02:08] <bfredl> > <@sachinjangra:matrix.org> I guess there is some kind of miscommunication at play here.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/348d7ea1dc5be3f7496f66d0f0a7fb1896a41cc7)
[20:02:20] *** Joins: amichaelc (~amichaelc@user/amichaelc)
[20:03:02] <bfredl> all this talk about global vs local and one vs two vs three table assesses is irrelevant.. we are looking up a few tables as a consequnce of a RPC event i e a syscall
[20:03:33] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[20:03:52] *** Quits: calm-steam (~calm-stea@user/calm-steam) (Quit: Leaving)
[20:05:16] <Bowuigi[m]> bfredl: Syscalls are fast AFAIK
[20:05:37] *** Joins: lagash (lagash@lagash.shelltalk.net)
[20:06:02] *** Joins: calm-steam (~calm-stea@user/calm-steam)
[20:06:41] <bfredl> racer cars are fast :]
[20:06:54] <clason[m]> but are they.... blazingly fast?
[20:08:50] <Bowuigi[m]> clason[m]: No idea
[20:10:03] <ii14[m]> syscalls are fast on templeos maybe
[20:11:21] <bfredl> you could also just look into the luajit docs. the cost of entering the vm is significantly higher than calling one function, de-referencing one table key etc..
[20:11:28] <Bowuigi[m]> ii14[m]: No network connection so yeah
[20:11:37] <bfredl> s/you could also just look into the luajit docs. the cost of entering the vm is significantly higher than calling one function, de-referencing one table key etc../you could also just look into the luajit docs. the cost of _entering_ the vm is significantly higher than calling one lua function from one other, de-referencing one table key etc../
[20:12:07] <ii14[m]> it's because there are no protection rings
[20:12:14] <ii14[m]> everything is in ring 0
[20:12:32] <ii14[m]> while with every sycall you have to change protection level and stuff like that
[20:12:42] <ii14[m]> on linux or other systems
[20:14:03] <bfredl> temple OS is also single address space. no TLB buffer flushes for process switches etc etc
[20:15:10] <bfredl> I don't think any of the "handmade" OS:s go _that_ far.
[20:22:58] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:31:14] *** Joins: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e)
[20:38:59] <BenjmanBenjman[m> can someone tell me what I'm doing wrong here? Just built nvim from latest (NVIM v0.7.0-dev+741-gff1b0f632) and running nvim -c "checkhealth" results in this error:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/0ebb192fa10ac82a3137741150ca758c7e4f250e)
[20:39:08] <BenjmanBenjman[m> * and running `nvim -c, * -c "checkhealth"` results
[20:40:10] *** Quits: huan (~huan@79.162.203.187) (Quit: Leaving)
[20:40:13] <clason[m]> depending on when you last built neovim, you might have deprecated checkhealth functions in runtime path
[20:40:25] <clason[m]> clean out `/usr/local/share/nvim` and install again
[20:40:49] <ii14[m]> or VIMRUNTIME=runtime
[20:40:57] <ii14[m]> assuming youre in the root of the repo
[20:41:06] <clason[m]> oh, if it's with `--clean`, then you probably have stale plugins lying around
[20:41:15] <clason[m]> check `.local/share/nvim/site/pack`
[20:41:17] <BenjmanBenjman[m> It seems like it's something in my `~/.local/share/nvim`. Removing those files resolves the error
[20:41:29] <BenjmanBenjman[m> Thanks for the help :)
[20:41:38] <clason[m]> 👍️
[20:43:03] *** Joins: huan (~huan@79.162.203.187)
[20:43:40] *** Joins: nzeo (~nzeo@80.64.181.151)
[20:43:46] *** Joins: hellstabber (uid531276@id-531276.hampstead.irccloud.com)
[20:46:24] <p00f> is it possiblr to properly highlight the color codes in qflist for `\u001b[01m\u001b[K<source>:\u001b[m\u001b[K In function '\u001b[01m\u001b[Kmain\u001b[m\u001b[K':`?
[20:46:39] <ii14[m]> nope
[20:46:43] <p00f> F
[20:47:09] <ii14[m]> though
[20:47:23] <ii14[m]> maybe you could parse escape sequences
[20:47:32] <ii14[m]> conceal them
[20:47:41] <ii14[m]> and them use the nvim_set_hl and whatnot
[20:47:48] <ii14[m]> s/them/then/
[20:47:59] <ii14[m]> I think someone already did that, but not for qf
[20:48:07] <ii14[m]> was it sunjon?
[20:48:08] <p00f> norcalli i think
[20:48:15] <p00f> nvim-terminal.lua?
[20:48:25] <ii14[m]> I don't remember
[20:48:40] <p00f> i see
[20:48:53] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (Quit: Surfing the great wave off Kanagawa)
[20:49:11] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[20:49:44] <ii14[m]> I was thinking to just run something in terminal emulator, and simultaneously strip out control sequences and feed it to quickfix in background
[20:49:54] *** Quits: huan (~huan@79.162.203.187) (Quit: Leaving)
[20:50:06] <p00f> bruh
[20:50:07] *** Joins: pepper (~pepper@user/pepper)
[20:50:10] *** Joins: huan (~huan@79.162.203.187)
[20:50:56] <ii14[m]> I think it's always xterm, so that's great
[20:51:07] <ii14[m]> you don't have to worry about terminfo
[20:51:26] *** Quits: huan (~huan@79.162.203.187) (Client Quit)
[20:51:29] <ii14[m]> the problem is with terminal resizing
[20:51:41] <mrus> does anyone know how to change the highlight of the cursor while it's on a `hi Search` area?
[20:51:47] <ii14[m]> it's not wrapping the lines, it just trims them when resized
[20:54:32] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:54:49] <ii14[m]> so you can lose information, and you can restore it, because "muh nomodifiable"
[20:54:55] <ii14[m]> * you can't restore
[20:56:48] *** Quits: hellstabber (uid531276@id-531276.hampstead.irccloud.com) ()
[20:57:35] <zooppMihaiBiog[m> Hi, I've read somewhere in the past (can't remember where) that when it comes to lua configs one should namespace their config modules to avoid name clashes coming from potential plugins. This sounds like sound advice but is this really something likely to happen? Are there any typical 'conventions' for picking a namespace name?
[20:57:43] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[20:57:58] <zooppMihaiBiog[m> s/Hi, I've read somewhere in the past (can't remember where) that when it comes to lua configs one should namespace their config modules to avoid name clashes coming from potential plugins. This sounds like sound advice but is this really something likely to happen? Are there any typical 'conventions' for picking a namespace name?/Hi, I've read somewhere in the past (can't remember where) that when it comes to lua configs one should
[20:57:58] <zooppMihaiBiog[m> namespace their config modules to avoid name clashes with other lua plugins plugins. This sounds like sound advice but is this really something likely to happen? Are there any typical 'conventions' for picking a namespace name?/
[20:58:57] *** Joins: ublx (~ublx@user/ublx)
[21:00:23] <clason[m]> Yes, this happens all too commonly
[21:00:51] <clason[m]> people putting their telescope config into a `telescope.lua` file and requiring that from their `init.lua`
[21:01:21] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[21:01:23] <clason[m]> just make sure you don't use the same name as the plugin (e.g., `telescope_conf.lua`)
[21:03:23] <zooppMihaiBiog[m> Alright, I wasn't sure if this really is an issue or I might be overthinking things. Thank you for your input!
[21:06:03] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Quit: Client closed)
[21:06:12] <p00f> I once made a `definitions.lua` in a top-level folder 🤡
[21:06:31] <p00f> Very common name
[21:07:13] <ii14[m]> I have my stuff in `lsp/m/*`
[21:07:26] <ii14[m]> and then it's `require 'm.lsp'` for example
[21:08:19] <p00f> I remember that because the definitions.lua in my dotfiles collided with the definitions.lua in a plugin (again made by me)
[21:08:35] <p00f> p00f: so s/once/twice
[21:08:54] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[21:09:08] <p00f> Big brain indeed
[21:11:27] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Client Quit)
[21:13:14] <ErPepone[m]> Does it make sense to keep youcompleteme and the lsp server in neovim 0.5+?
[21:14:00] <ii14[m]> idk, can youcompleteme get completion from neovim lsp client?
[21:14:06] <puremouron> well, using youcompleteme gives you a warm feeling inside and makes fairies be born.
[21:14:12] <ii14[m]> or do you not care about completion
[21:14:12] <puremouron> so, i would say that it's up to you :)
[21:14:27] *** Quits: tufei (~Ngyu-Phee@gateway/tor-sasl/tufei) (Quit: Leaving)
[21:14:41] <mjlbach[m]> I would say no, you should use one or the other :)
[21:14:48] <puremouron> the neovim lsp client and ycm are not complementary, so use one or the other
[21:14:51] <mjlbach[m]> YCM is terrific ofc :) 
[21:14:56] <puremouron> ofc 
[21:15:46] <puremouron> but, the warm fuzzy feeling is the USP
[21:15:57] <ErPepone[m]> ahah okay
[21:15:57] <ErPepone[m]> thank you :-)
[21:16:21] <mjlbach[m]> puremouron: can confirm WFF is NYI
[21:16:34] <bfredl> https://www.vi-improved.org/loathing/ as YCM is mentioned here it must be really warm and fuzzy :]
[21:17:12] <puremouron> i think that's out of date. i don't think the #vim guys hate us that much anymore
[21:17:29] <puremouron> i think there's a lot more they can comlain about now
[21:17:41] <bfredl> you mean, like #othervim?
[21:17:41] <bfredl> :D
[21:17:48] <puremouron> well, you said it :)
[21:18:09] <puremouron> but for seriously, that page is correct. YCM is terrible. It's IMPOSSIBLE to install and literally NO USERS have ever used it successfully
[21:18:12] <clason[m]> #longvim
[21:18:33] <puremouron> and it has just the worst support. you just cannot get an answer on anything
[21:20:50] <mjlbach[m]> lol, I know the feel
[21:21:22] *** Joins: Guest13 (~Guest13@196.191.131.131)
[21:21:55] *** Quits: Guest13 (~Guest13@196.191.131.131) (Client Quit)
[21:36:51] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:38:25] <ebray187> Hi, I'm having problems with the autocompletion. Lets say I have a var called "completeopt" defined, and I want to write the word "complete" and a new line, every time I hit the enter key to add the new line the aucompletion change the word complete to completeopt. How can I avoid that? already try noinsert and noselect options
[21:39:22] *** Quits: rafaeldias (~rafaeldia@2804:14c:658f:4b20::1002) (Ping timeout: 260 seconds)
[21:39:41] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-rc1)
[21:40:33] <p00f> <ii14[m]> "I was thinking to just run..." <- yee https://stackoverflow.com/a/49209650
[21:41:14] <n00bvim0[m]> ebray187: What autocompletion plugin do you use?
[21:42:20] <ebray187> n00bvim0[m] no plugin, the set completeopt=menuone
[21:43:13] *** Joins: tufei (~Ngyu-Phee@gateway/tor-sasl/tufei)
[21:45:48] <n00bvim0[m]> I let others answer.
[21:48:09] <n00bvim0[m]> ebray187: try completeopt=...,noselect,noinsert
[21:51:20] <ebray187> Thanks n00bvim0[m] it was just a typo
[21:52:19] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[21:52:50] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[21:53:58] <st3fan> In languages with double quotes strings, is there not a good shortcut to go to the beginning of the string? like the first double quote?
[21:54:10] <st3fan> ideally in a smart way that knows escaped quotes, etc.
[21:56:13] <ii14[m]> `f"` or `F"`?
[21:56:21] <ii14[m]> `0f"`
[21:57:57] <ii14[m]> or I don't know, `va"o<esc>`?
[22:00:01] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[22:02:08] <st3fan> that will do!
[22:09:37] *** Joins: qastokes (~qastokes@c-73-140-212-92.hsd1.wa.comcast.net)
[22:12:27] <ErPepone[m]> what's the most complete monokai color scheme available for neovim?
[22:17:31] <ii14[m]> https://github.com/search?q=monokai+nvim
[22:25:48] <n00bvim0[m]> st3fanii14
[22:28:08] <n00bvim0[m]> <st3fan> "In languages with double..." <- There is an object "double-quoted strings" ( a" ) but I don't known any commands to jump to objects. You can navigate them in visual mode though ( va" - select a string).
[22:28:27] <n00bvim0[m]> s/There is an object "double-quoted strings" ( a" ) but I don't known any commands to jump to objects. You can navigate them in visual mode though ( va" - select a string)./There is an object "a double-quoted string" ( a" ) but I don't known any commands to jump to objects. You can navigate them in visual mode though ( va" - select a string)./
[22:30:28] *** Quits: alban771 (~alban@37.171.67.103) (Ping timeout: 256 seconds)
[22:32:40] *** Joins: alban771 (~alban@37.171.217.223)
[22:32:47] <ErPepone[m]> I'm getting this error when using autocomplete with `nvim-cmp`:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/69347c96fb523e4ffe9f8dc1a2530dcb958417e7)
[22:36:33] <mjlbach[m]> Probably need to use an up to date plugin
[22:38:08] <ErPepone[m]> Which one? Everything is up-to-date to my knowledge
[22:38:13] <ErPepone[m]> (literally just updated everything)
[22:40:41] <ii14[m]> you have vsnip installed with nix?
[22:40:48] <ii14[m]> I don't get it
[22:41:00] *** Joins: ugubok (~ugubok@user/ugubok)
[22:41:48] <mjlbach[m]> ErPepone[m]: > vimplugin-vim-vsnip-2021-11-15
[22:41:48] <mjlbach[m]> that indicates (to me) the nix derivation is out of date
[22:41:51] <mjlbach[m]> I don't use nix anymore
[22:42:23] <ErPepone[m]> Gonna ask for a bump then mjlbach :-)
[22:42:33] <ii14[m]> or just install from git lol
[22:42:41] <ErPepone[m]> ii14[m]: yep
[22:50:25] *** Joins: FishByte (~fishbyte@2601:984:4100:fed0:1e56:c099:e5c7:60be)
[22:52:12] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[22:53:24] *** Joins: Dan (~Dan@host81-158-130-140.range81-158.btcentralplus.com)
[22:53:40] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Client Quit)
[22:54:02] *** Joins: zaden (~maddx@73.92.207.228)
[22:54:05] *** Quits: zaden (~maddx@73.92.207.228) (Client Quit)
[22:54:29] *** Joins: zaden (~maddx@73.92.207.228)
[22:54:35] *** Joins: ixil (~ixil@82.197.178.137)
[22:54:59] *** Quits: zaden (~maddx@73.92.207.228) (Client Quit)
[22:55:24] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[22:59:19] * Pope_Rigby[m] uploaded an image: (4KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/uZSKlhSIuKmuSXLEeJcIgjXH/Screenshot_20211218_112903.png >
[22:59:23] <Pope_Rigby[m]> What is this part below the statusline called in the UI?
[22:59:57] <Pope_Rigby[m]> Just the commandline?
[23:00:45] *** Parts: Dan (~Dan@host81-158-130-140.range81-158.btcentralplus.com) ()
[23:01:25] <Pope_Rigby[m]> Command bar maybe?
[23:05:01] <ii14[m]> command line
[23:06:48] *** Quits: rito_ (~rito_gh@45.112.243.172) (Quit: Leaving)
[23:07:06] <Pope_Rigby[m]> Thanks
[23:13:38] *** Quits: Rue (~rue@2001-b011-1000-198b-d065-8362-1352-dbd7.dynamic-ip6.hinet.net) (Ping timeout: 260 seconds)
[23:15:47] *** Joins: Rue (~rue@2001-b011-1000-174a-763f-e013-054e-0d6d.dynamic-ip6.hinet.net)
[23:18:56] *** Parts: FishByte (~fishbyte@2601:984:4100:fed0:1e56:c099:e5c7:60be) (Leaving)
[23:19:51] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Remote host closed the connection)
[23:20:47] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:20:49] *** Quits: zostj (~rue@1-162-47-43.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:20:59] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[23:21:58] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[23:22:11] *** Quits: Pingerfowder (~Pingerfow@2404:9400:3:0:216:3eff:fee1:1151) (Quit: ZNC - https://znc.in)
[23:23:10] *** Joins: Pingerfowder (~Pingerfow@bishibosh.stronk.xyz)
[23:28:06] *** Joins: ugubok_ (~ugubok@178.214.243.33)
[23:31:08] *** Quits: ugubok (~ugubok@user/ugubok) (Ping timeout: 268 seconds)
[23:38:01] *** Joins: rgrinberg (~textual@187.223.248.37)
[23:49:51] *** Quits: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4) (Remote host closed the connection)
[23:52:58] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[23:54:53] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
