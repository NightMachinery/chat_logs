[00:01:59] <etimmons> pve: I'm working on an extension to ASDF that I think would do what you want.
[00:02:04] <etimmons> https://gitlab.common-lisp.net/etimmons/asdf-inferred-components
[00:02:31] <etimmons> It's not quite ready yet (requires the latest version of ASDF that just got released)
[00:02:50] <etimmons> And I'm traveling right now, so it won't be ready for a bit
[00:03:58] <etimmons> You reminded me that I should make sure it detects newly added files... Can't remember if I already handled that or not
[00:13:59] *** Joins: pjb (~pjb@user/pjb)
[00:25:50] *** Joins: dsk (~dsk@user/dsk)
[00:28:56] *** Joins: karlosz (~karlosz@router.cloyne.org)
[00:30:34] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[00:33:03] *** Quits: cage (~cage@dynamic-adsl-78-15-22-223.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:38:57] *** Quits: IAmRasputin (~ryan.gann@50-207-73-195-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[00:46:58] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:49:32] *** Joins: gosukiwi (~gosukiwi@190.189.133.207)
[00:57:41] *** Joins: Josh_2 (~user@37.25.47.130)
[01:00:12] <Josh_2> hi hi, anyone know how to contact Sabra Crolleton?
[01:00:17] <Josh_2> Sometimes they come in here
[01:18:55] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 246 seconds)
[01:21:23] <pve> etimmons: Thanks for the link. I took a quick glance, but wasn't able to determine exactly how it handles directories. I'll look closer tomorrow.
[01:23:35] *** Parts: gosukiwi (~gosukiwi@190.189.133.207) ()
[01:34:04] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[01:42:40] *** Joins: rgherdt (~rgherdt@ip5f5af1c1.dynamic.kabel-deutschland.de)
[01:42:47] *** Quits: cuz (~user@38.140.58.234) (Remote host closed the connection)
[01:43:02] *** Joins: cuz (~user@38.140.58.234)
[01:43:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[01:43:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[01:48:19] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[02:00:38] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[02:07:26] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 252 seconds)
[02:08:25] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:14:55] *** Quits: attila_lendvai (~alendvai@1F2E5F85.unconfigured.pool.telekom.hu) (Ping timeout: 246 seconds)
[02:17:33] *** Joins: selwyn (~selwyn@user/selwyn)
[02:17:55] *** Quits: pve (~pve@87-93-190-71.bb.dnainternet.fi) (Quit: leaving)
[02:23:56] *** Quits: tyson2 (~user@70.54.112.49) (Ping timeout: 252 seconds)
[02:27:10] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 246 seconds)
[02:33:37] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[02:37:15] *** Quits: lottaquestions_ (~nick@2607:fa49:5040:5c00:6cb4:29c0:7f63:f1ac) (Ping timeout: 256 seconds)
[02:40:23] *** Joins: lottaquestions (~nick@2607:fa49:5040:5c00:148d:6139:6608:cb92)
[02:45:41] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:46:19] *** Quits: frgo (~frgo@p200300deef27d7001c9101156ac708c5.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:46:30] *** Joins: frgo (~frgo@p200300deef27d700d8a3c101e0d6db59.dip0.t-ipconnect.de)
[02:48:09] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 244 seconds)
[02:49:27] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:53:51] *** Joins: akoana (~ah@user/akoana)
[02:56:01] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:04:10] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[21:04:40] *** Server sets mode: +Ccntz 
[21:04:43] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[21:05:08] <jcowan> I wrote a substantial Web 1.0 (no JavaScript) application entirely in perl and bash (and one C program that was a performance bottleneck); there were about 100 programs.  It was lightning fast, though precomputation and caching helped a lot with that.
[21:05:18] *** Quits: amb007 (~a_bakic@181.146.204.77.rev.sfr.net) (Ping timeout: 272 seconds)
[21:05:29] <jcowan> Click-see new page, faster than the mind an update.
[21:05:45] *** Joins: Josh_2 (~user@37.25.47.130)
[21:06:02] <Josh_2> Hi
[21:06:14] *** Joins: amb007 (~a_bakic@81.145.204.77.rev.sfr.net)
[21:06:37] <aeth> well, Perl's explicit language model was to be a better sh/awk/etc. so it's not surprising that perl-and-bash go well together
[21:07:47] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:09:39] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[21:10:38] <jcowan> That included all the back-end database maintenance, because the database was the file system.  Very fast, very robust, no server required.
[21:12:06] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[21:13:34] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[21:13:48] *** Joins: VincentVega (~user@212.241.24.113)
[21:13:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[21:14:03] *** Quits: VincentVega (~user@212.241.24.113) (Client Quit)
[21:14:32] <pjb> Indeed, the killer feature of unix, is the creation of new executable.  cc -o my-program source.c && ./my-program ; on any other systems, it's way more complicated to go from successful compilation to launching your program. You have to manage libraries, install (and have the access rights to do so) the program, write JCL or whatever.
[21:15:12] <pjb> Eg. on iOS you must go thru the AppStore, codesign, write up descriptive forms, wait for Apple's approval, etc.
[21:15:31] <pjb> (it's not only old CICS and JCL systems).
[21:27:53] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Quit: bpanthi977)
[21:28:59] <remexre> am I failing at reading, or does clhs 11.1.2.1.2 not actually state (intern "FOO" :CL) should be an error?
[21:34:36] <Bike> I suppose I don't see anything explicitly saying such
[21:34:50] <Bike> 11.1.2.1 could be read to mean that adding or removing _external_ symbols is not allowed, though
[21:38:29] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:a06c:ae50:50cb:4c4e) (Remote host closed the connection)
[21:44:58] *** Quits: amb007 (~a_bakic@81.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:45:48] <jcowan> The title of that section is actually misleading: it's constraints on the external symbols of the cl package.
[21:46:21] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:46:21] <jcowan> However, "It also follows that conforming programs can use external symbols of the COMMON-LISP package as the names of local lexical variables with confidence that those names have not been proclaimed special by the implementation unless those symbols are names of standardized global variables" could not hold if you were able to intern arbtirary external names into the package.
[21:46:39] <remexre> right, but (intern "FOO" :CL) would be creating an internal name, right?
[21:47:22] <jcowan> Yes.  But then (export cl:foo) makes it external.
[21:47:59] <jcowan> I really don't think that the spec authors expected the cl package to be anything but immutable.
[21:48:14] <aeth> If you package-lock CL like in SBCL then you have to have (intern "FOO" :CL) fail or else you can add to it something that you can't then remove.
[21:48:34] <polygon-op> cl package is required to be locked
[21:48:47] <polygon-op> locking arbitrary packages by the programmer is an extension
[21:48:53] <jcowan> polygon-op: Per the standard?
[21:48:58] <polygon-op> yes
[21:49:03] <polygon-op> (I don't remember the section)
[21:49:08] <aeth> polygon-op: no, CL package external symbols are undefined behavior if you treat them as if they are not locked
[21:49:18] <aeth> Which means that portably, you have to treat it like it's locked because it will be in some implementations
[21:49:22] <aeth> we're talking about http://www.lispworks.com/documentation/HyperSpec/Body/11_abab.htm
[21:49:36] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[21:50:06] <aeth> So for you, the Lisp program/library author, you have to treat it as if it's locked. Implementations do not, though.
[21:50:31] <jcowan> As I said, that is all about what you can do with external cl: symbols.  There is nothing about creating symbols there.
[21:50:44] <jcowan> (defparameter cl:foo nil) is the easiest way to do so.)
[21:51:27] <jcowan> (or try to do so)
[21:51:33] <polygon-op> I must have remembered wrong then, sorry
[21:52:29] <jcowan> It's a subtle point, the fact that immutable containers and immutable objects in the containers are independent.
[21:52:55] <jcowan> all four combinations are possible
[21:53:18] <aeth> Yes, but for practical purposes, you especially want to lock the internals because otherwise a lot of programs will be written (in-package #:cl) because it's easier than using CL
[21:54:23] <aeth> Programmers will use the worst style permitted by the language.
[21:59:05] *** Joins: selwyn (~selwyn@user/selwyn)
[22:00:09] <jcowan> True, but Fortran can be written in any language.
[22:00:39] <jcowan> (at least in the old days; Fortran is a pretty powerful array-processing language today, and even has a non-backward-compatible subset called F.)
[22:06:40] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[22:08:03] <aeth> I think it limits itself to the externals of COMMON-LISP because it sees the internals of COMMON-LISP as an implementation detail (e.g. do you implement it inside of COMMON-LISP or do you implement it elsewhere and import it into COMMON-LISP before reexporting or both?)
[22:08:37] <aeth> And messing with implementation internals is, of course, implementation-specific rather than standard.
[22:10:09] <aeth> It gives you just enough to know that users aren't expected to be able to redefine #'+ into #'*, though, which lets you make assumptions as a macro author.
[22:10:29] <aeth> (well, #'CL:+ and #'CL:*)
[22:11:25] <aeth> Of course, the user might be able to, but now you can get mad at the user for abusing non-portable UB
[22:14:50] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:40:10] *** Quits: AnimalClatter (~AnimalCla@208.66.176.26) (Ping timeout: 240 seconds)
[22:41:39] *** Joins: AnimalClatter (~AnimalCla@208.66.176.26)
[22:52:14] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[22:52:22] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[22:52:31] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[23:00:12] *** Joins: Alfr (~Alfr@user/alfr)
[23:12:15] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:18:48] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[23:27:46] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[23:33:55] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[23:42:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:54:35] *** Joins: kakuhen (~kakuhen@user/kakuhen)
