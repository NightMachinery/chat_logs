[00:09:17] *** Quits: pro_z (~pro_z@37.214.69.237) (Ping timeout: 240 seconds)
[00:09:42] *** Quits: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com) (Ping timeout: 257 seconds)
[00:38:40] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979)
[01:02:30] *** Parts: Timvde (~tim@towely.vdeynde.com) (WeeChat 3.3)
[01:03:37] *** Quits: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br) (Ping timeout: 240 seconds)
[01:06:42] *** Joins: _ev (ev@user/ev/x-8999918)
[01:16:15] *** Quits: coldmountain (uid484352@id-484352.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:21:27] <_ev> Can DRF be somehow used to authenticate web/session users?
[01:29:16] *** Joins: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br)
[01:40:23] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:41:29] <PaulWay[w]> YEs
[01:41:39] <PaulWay[w]> Look up the authentication and permission classes.
[01:43:49] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[01:46:15] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:49:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[02:44:45] *** Quits: jladd_ (~jladd@c-71-63-157-185.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[02:46:40] *** Joins: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net)
[02:48:41] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:49:00] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:51:35] *** Joins: djapo (~archangel@user/djapo)
[03:04:41] *** Quits: CrowX- (~CrowX-@185.167.46.134) (Remote host closed the connection)
[03:09:49] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:12:54] *** Quits: remote (~self@user/hackers) (Ping timeout: 268 seconds)
[03:14:32] *** Joins: remote (~self@user/hackers)
[03:19:24] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:21:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:23:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:24:13] *** Quits: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[03:24:23] *** Joins: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de)
[03:26:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[03:30:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:34:14] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 260 seconds)
[03:36:21] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:36:40] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[03:42:40] *** Joins: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca)
[03:42:42] *** Quits: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca) (Client Quit)
[03:43:48] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[03:44:39] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:50:02] *** Joins: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca)
[03:57:44] *** Quits: aselman4 (~aselman4@lnsm3-toronto63-142-120-137-176.internet.virginmobile.ca) (Quit: Client closed)
[04:43:58] *** Quits: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[04:48:30] *** Joins: ircuser (~ircuser@c-174-54-86-30.hsd1.pa.comcast.net)
[04:48:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:49:24] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:51:07] *** Joins: yanchai (~yanchai@124.6.141.226)
[04:51:22] *** ircuser is now known as RFulcher
[04:51:26] <RFulcher> Hi, does anyone have experience with DigitalOcean Apps?
[05:00:31] <PaulWay[w]> Yes, I imagine someone does.  Why?
[05:04:07] <RFulcher> I have a very simple app I am trying to deploy to it and I can't get it deployed.  I do everything I can and always get ModuleNotFoundError: No module named 'dj_database_url'.  I have the requirements.txt setup and the settings.py all setup.  I can run it locally no problem but it won't deploy to DigitalOcean Apps.
[05:04:42] <PaulWay[w]> What errors are you getting?
[05:04:47] <PaulWay[w]> Just that module?
[05:04:58] <PaulWay[w]> Just that module error?
[05:05:01] <PaulWay[w]> (sorry)
[05:05:30] <PaulWay[w]> Can you do any other tests in that environment to see if it's importing your project correctly?
[05:06:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:07:22] <RFulcher> well it was a different module, same error, and then I went through the DigitalOcean document.  And now it is just this error.  The deployment pulls from Github and automatically deploys, just like Heroku.
[05:07:56] <RFulcher> This is the instructions I went through.
[05:07:58] <RFulcher> https://www.digitalocean.com/community/tutorials/how-to-deploy-django-to-app-platform
[05:12:32] <PaulWay[w]> And what stage do you get to with that error?
[05:14:03] <RFulcher> The very beginning.  Where can I post the log, its not very long.
[05:14:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[06:06:40] <RFulcher> after looking at some other posts it looks like this is happening at build time.  if that helps anyone.
[06:06:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:16:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:21:20] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:21:40] *** Joins: thiras (~thiras@user/thiras)
[06:24:24] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:35:57] *** Joins: blag (~blag@071-094-056-144.res.spectrum.com)
[06:42:17] *** Quits: blag (~blag@071-094-056-144.res.spectrum.com) (Ping timeout: 240 seconds)
[06:45:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:17:22] *** Joins: Atque (~Atque@user/atque)
[07:19:57] *** Quits: yanchai (~yanchai@124.6.141.226) (Ping timeout: 240 seconds)
[07:26:34] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[07:29:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:30:11] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:31:15] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[07:40:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:46:26] <glik22_> is there any way to mark a migraiton to run locally but not in production? i'm changing the data type for a column, but in reality i'm doing that with logical replication which will not be part of the normal migration cycle.
[07:46:53] <glik22_> so django needs to become aware of the updated column type, but i don't want the sql to run in production
[07:49:11] <PaulWay[w]> You can use something like '--fake' on the migrate command to not do the changes but make the record in the database as if they have been made.
[07:49:28] <PaulWay[w]> Check the options on migrate for the exact command.
[07:53:59] <glik22_> PaulWay[w]: by record in the database do you mean a record in the django_migrations table?
[08:01:10] *** Quits: sreve (~quassel@p4ff44e89.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:01:26] *** Joins: sreve (~quassel@p4ff44dfd.dip0.t-ipconnect.de)
[08:04:52] <PaulWay[w]> Yes.
[08:29:43] *** Joins: epony (epony@user/epony)
[08:54:14] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[09:11:07] *** Joins: mattil (~mattil@d4d70swyt047qzw037t-4.rev.dnainternet.fi)
[09:14:58] *** Joins: rusrushal13 (~rusrushal@2401:4900:447e:b662:c06d:f354:ecf:b32e)
[09:18:46] *** Quits: mattil (~mattil@d4d70swyt047qzw037t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:22:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:25:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:26:31] *** Quits: rusrushal13 (~rusrushal@2401:4900:447e:b662:c06d:f354:ecf:b32e) (Ping timeout: 256 seconds)
[09:28:17] *** Joins: zuQe89 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:29:41] *** Joins: Bitflux (~byte@byteflux.net)
[09:29:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:30:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:31:20] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3ccd:8bd3:af65:ead2)
[09:31:29] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[09:35:14] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[09:35:27] *** Joins: cyphase_eviltwin (~cyphase@user/cyphase)
[09:37:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (*.net *.split)
[09:37:08] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (*.net *.split)
[09:37:09] *** Quits: remote (~self@user/hackers) (*.net *.split)
[09:37:09] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (*.net *.split)
[09:37:09] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[09:37:09] *** Quits: cyphase (~cyphase@user/cyphase) (*.net *.split)
[09:37:09] *** Quits: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com) (*.net *.split)
[09:37:09] *** Quits: wht (~wht@havoc.proulx.com) (*.net *.split)
[09:37:09] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (*.net *.split)
[09:37:09] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[09:37:09] *** Quits: pepper (~pepper@user/pepper) (*.net *.split)
[09:37:09] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:37:09] *** Quits: noyb (~noyb@user/noyb) (*.net *.split)
[09:37:09] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[09:37:09] *** Quits: carom (~carom@143.198.135.106) (*.net *.split)
[09:37:09] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:37:09] *** Quits: dang`r`us (~eismann@pg.afoo.at) (*.net *.split)
[09:37:09] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[09:37:09] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:37:09] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:37:09] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:37:10] *** Quits: fizzizist (~fizzizist@72.53.248.15) (*.net *.split)
[09:37:10] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:37:10] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:37:11] *** zuQe89 is now known as zuQe8
[09:40:00] *** Joins: djapo (~archangel@user/djapo)
[09:40:50] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[09:41:17] *** Joins: xkuru (~xkuru@user/xkuru)
[09:42:20] *** Joins: Atque (~Atque@user/atque)
[09:42:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[09:42:50] *** Joins: remote (~self@user/hackers)
[09:42:50] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[09:42:50] *** Joins: wht (~wht@havoc.proulx.com)
[09:42:50] *** Joins: pepper (~pepper@user/pepper)
[09:42:50] *** Joins: simplicity (~yti@user/simplicity)
[09:42:50] *** Joins: carom (~carom@143.198.135.106)
[09:42:50] *** Joins: dlam (~dlam@dlam.me)
[09:42:50] *** Joins: dang`r`us (~eismann@pg.afoo.at)
[09:42:50] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:42:50] *** Joins: fizzizist (~fizzizist@72.53.248.15)
[09:42:50] *** Joins: flynn (~mcbloch@user/flynn)
[09:43:22] *** Joins: sandeepk (~sandeepk@223.130.30.23)
[09:48:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3ccd:8bd3:af65:ead2) (Ping timeout: 250 seconds)
[09:54:34] *** Joins: koolazer (~koo@user/koolazer)
[09:55:10] <serafeim> hello friends
[09:58:49] *** Joins: rusrushal13 (~rusrushal@2401:4900:447e:b662:c06d:f354:ecf:b32e)
[10:02:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:14:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:32:47] *** Joins: mrwick (~mrwick@user/mrwick)
[10:41:51] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979) (Ping timeout: 250 seconds)
[10:47:33] *** Quits: rusrushal13 (~rusrushal@2401:4900:447e:b662:c06d:f354:ecf:b32e) (Ping timeout: 256 seconds)
[10:54:00] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[10:54:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:57:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:00:05] *** Joins: dor (~erg@78.11.12.207)
[11:00:20] *** Joins: xkuru (~xkuru@user/xkuru)
[11:22:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: back later)
[11:27:49] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[11:28:10] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[11:45:15] *** Joins: newdimension (~newdimnes@user/newdimension)
[11:47:16] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[11:48:24] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[11:48:45] *** Joins: remote (~self@user/hackers)
[11:49:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[11:52:05] <carloratm> started today learning about task queues and brokers... what's the best place to put a tasks module: in a task-dedicated app which orchestrates tasks for the whole project, or in a tast module of the specific apps?
[11:52:29] <serafeim> depends on your reqs
[11:53:01] <serafeim> you may want to take a look at my tutorial here https://spapas.github.io/2015/01/27/async-tasks-with-django-rq/
[11:53:21] <carloratm> my current goal is to send email generated by events on a couple of different apps
[11:53:52] <carloratm> thank you. will look at that
[11:54:06] <serafeim> this is a common requirement
[11:54:26] <serafeim> you may want to skip setting a task queue if you only have this requirement though
[11:54:36] <serafeim> are you going to use something like mailgun ?
[11:55:15] <carloratm> TBH I'd like to take the chance and study that topic
[11:55:58] <serafeim> ok if you wnt to learn but keep in mind that it's not really worth the fuss
[11:55:58] <carloratm> It's for a side project so I can spend time learning
[11:56:15] <carloratm> ok
[11:56:24] <serafeim> using task queues is something you should avoid using if you can
[11:56:55] <serafeim> because it adds extra moving parts to your project and makes it 10 times more complex
[11:56:58] <serafeim> my 2c
[11:58:03] <carloratm> that's fair but is also seem a very popular topic, like "the next step" after basic cruds
[11:59:00] <carloratm> oh mailgun seems deprecated in favor of https://github.com/anymail/django-anymail
[11:59:09] <carloratm> will look also at that, thank you
[11:59:14] <serafeim> the mailgun is the provider
[11:59:22] <serafeim> the mailgun django project is the one deprecated
[12:00:05] <carloratm> ah I see
[12:00:41] <serafeim> at least try to avoid using celery
[12:01:42] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[12:01:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[12:03:31] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[12:11:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:14:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[12:19:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[12:40:24] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:03:17] <ktosiek> Is there a good way to serve media files from gunicorn? I already have a reverse proxy/LB, and would like to drop the http server that sits next to my Django app (mostly for simplifying administration)
[13:09:03] <serafeim> no
[13:09:24] <serafeim> ktosiek: it could be possible with django whitenoise
[13:09:40] <serafeim> http://whitenoise.evans.io/en/stable/
[13:09:44] <nbjoerg> ktosiek: the web server rarely causes admin overhead, IME
[13:09:45] <serafeim> but i would prefer using the nginx
[13:10:51] <ktosiek> nbjoerg: that's true, but I have to migrate off lighttpd and was wondering if I need it at all.
[13:11:29] <debnet> Hello everyone.
[13:11:31] <debnet> Do you by any chance know of a way to retrieve the list of models that have been used to evaluate a Django QuerySet?
[13:11:31] <ktosiek> serafeim: WhiteNoise is cool, but doesn't handle media (or anything dynamic, for that matter)
[13:11:50] <ktosiek> Looks like I'll have to move to a simple nginx setup after all.
[13:11:54] <debnet> Like for example I make a request ModelA.objects.filter(related_b__field=value).order_by(related_c__field) that would give me (ModelA, ModelB, ModelC)
[13:12:44] <serafeim> ktosiek: really? i didn't know that
[13:13:32] <ktosiek> serafeim: yup, there's even a big warning in the docs :-)
[13:13:41] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 245 seconds)
[13:13:56] <serafeim> ah ok. i haven't used whitenoise that much (and only for serving static files)
[13:14:05] <ktosiek> debnet: that's an unusual thing to need, what do you need this for?
[13:14:53] <ktosiek> You might try looking at QuerySet's .query, that will at least give you tables used in the query
[13:15:11] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Ping timeout (120 seconds))
[13:15:32] *** Joins: newdimension (~newdimnes@user/newdimension)
[13:16:41] <debnet> @ktosiek We have an utility page for client to make their own select queries by selecting blocks, but we want ensure they have right to browse the selected models. It's easy to do for the "base" model but it's hard to keep track of database operations like filters, annotations, sorts...
[13:17:00] <debnet> We know there is .query on QuerySet but the whole thing is a mess and unfortunalty undocumented.
[13:19:28] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[13:19:57] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596)
[13:24:32] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596) (Client Quit)
[13:27:50] <ktosiek> I think it would be best to do that in your query building logic, or make a wrapper around QuerySet.
[13:29:35] <ktosiek> Yeah, .query is pretty much an implementation detail. But hey, ._meta used to be undocumented too ;-)
[13:33:52] <debnet> @ktosiek Unfortunalty I have no choice for the moment. If I can have the table names, I could manage to do something.
[13:33:52] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596)
[13:39:21] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:41:26] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[13:42:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:4fd:dbce:481a:2caf)
[13:51:43] *** Joins: slav0nic (slav0nic@python.su)
[14:07:11] *** Joins: Stefan92 (~stefan92@84-30-13-229.cable.dynamic.v4.ziggo.nl)
[14:09:17] *** Quits: Stefan92 (~stefan92@84-30-13-229.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[14:12:32] <ktosiek> Another hack that I've used (for writing tests, not production code) is to get all models, build a huge regexp that looks a db_table of one of them, and look for it in str(queryset.query)
[14:18:42] <ktosiek> debnet: .query.table_map looks like just what you need: it lists all the model tables used in the query
[14:21:12] <debnet> Sounds interesting!
[14:24:49] *** Joins: impaladin (~impaladin@37.208.105.10)
[14:32:10] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[14:33:58] *** Joins: remote (~self@user/hackers)
[14:35:55] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596) (Ping timeout: 256 seconds)
[14:45:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:09:59] <debnet> @ktosiek It works almost well. Is there a way to retrieve a model class by the table name?
[15:11:19] <ktosiek> No idea, but you can get a list of all models through apps API and build a table -> model mapping yourself
[15:11:24] *** Joins: Binarydreamer (~Guest15@cpe-74-75-137-171.maine.res.rr.com)
[15:12:17] *** Quits: Binarydreamer (~Guest15@cpe-74-75-137-171.maine.res.rr.com) (Quit: Connection closed)
[15:28:15] <impaladin> Greetings. I try to log the ldap auth on modoboa - much more precisely - with the django logger but until now every implementation failed. Do someone know which file I have to edit and with which content? Please don't be shy to ask questions on my superficial question!
[15:42:49] *** Joins: xkuru (~xkuru@user/xkuru)
[15:43:01] *** Joins: thorbenl (~RatiosuGu@D47097B1.rev.sefiber.dk)
[15:49:49] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[15:50:03] *** Joins: x_kuru (~xkuru@user/xkuru)
[15:50:51] *** Quits: pycode (~pycode3@2001:b07:5d28:551:4fd:dbce:481a:2caf) (Ping timeout: 250 seconds)
[15:51:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:51:51] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[15:52:13] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[15:58:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:01:29] *** Joins: thiras (~thiras@user/thiras)
[16:02:25] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:07:51] <thorbenl> Hey djangonauts:)  Im struggling a lot with upgrading our django to 4.0, since we use market-specific tests (or rather, app specific tests in this case) I have already posted it in a nicer overview over at https://code.djangoproject.com/ticket/33454#comment:7
[16:08:40] <thorbenl> Thje setup works on 3.2.11, but does not on 4.0.1, which i assume is due to the `--tag` flag on tests
[16:08:55] <RFulcher> HI, looking for anyone with experience on DigitalOcean App
[16:10:48] <serafeim> thorbenl: there's an error about app_label isn't this related ?
[16:10:52] <thorbenl> The problem seems to be that the test runner includes Apps, that aren tsupposed to be included, even tho they neither have a tag, nor are included in the `INSTALLED_APPS` list, since it gets dynamically populated based on market settings
[16:11:01] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[16:11:05] <thorbenl> serafeim no, not at all, seems missleading
[16:11:12] <serafeim> uh oh
[16:11:20] <thorbenl> all these apps have app_labels, also, the apps in question are not included in the test run, at least they shouldnt
[16:12:05] <thorbenl> so we have MARKET_A that runs tests, and then MARKET_B is supposed to run a small subset of diff test, like 25 or so. but the test runner on 4.0 now included apps from market_a, even tho it didnt do that on 3.2.11
[16:12:16] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[16:15:07] <thorbenl> running `MARKET=market_b python3.9 manage.py test --tag=market_b --exclude-tag=functional --timing --keepdb --verbosity 3` gives me `Including test tag(s): bostadsportal.se.` and `Excluding test tag(s): functional.`
[16:15:10] <thorbenl> which is correct
[16:15:24] <thorbenl> `Including test tag(s): MARKET_B.` and `Excluding test tag(s): functional.`
[16:17:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:19:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[16:21:27] <thorbenl> here is the currnet output: https://gist.github.com/Thorbenl/f331bda5235a90f551b58f93f917bf29
[16:21:46] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:21:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[16:23:32] *** Joins: Trieste (T@user/pilgrim)
[16:25:17] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[16:25:19] *** Quits: impaladin (~impaladin@37.208.105.10) ()
[16:27:27] <thorbenl> I just downgraded to 3.2.11 and everything works without issues:)  executes 25 tests as expected
[16:28:59] <serafeim> this is really difficult to research
[16:29:37] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:30:37] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[16:39:56] *** Joins: pmcnabb9 (~pmcnabb@user/pmcnabb)
[16:42:14] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 250 seconds)
[16:42:14] *** pmcnabb9 is now known as pmcnabb
[16:47:23] <thorbenl> I know:/  I wish i could just dump access to the repo here haha
[16:48:27] <thorbenl> i saw https://github.com/django/django/commit/038940cf5525c41464a1b9e9ba3801042320b0cc and that must be somewhat the reason for the change, but i dont understand it..:D
[16:51:15] *** Joins: READ10 (~dallan@user/read10)
[16:59:37] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:00:30] *** Joins: ocs (~oliver@2a01:c22:b07d:2400:739c:450f:ef15:6e60)
[17:07:43] <thorbenl> Is there no way for me to figure out why the testrunner picks up these tests from a non-included app o.o
[17:09:04] <ocs> Hey everyone, I'm currently deploying my Django application using channels2/Daphne. I'm stuck with adding workers. AFAIK, there is no parameter to Daphne to do so. What I got from a ticket from 2018 (https://github.com/django/channels/issues/960) is that people are either using load balancing via nginx, or other third party software such as uvicorn or Circus. As the thread is quite old, I wonder if things have changed and what the
[17:09:05] <ocs> state of art is? Has anyone experience with that? Otherwise I'll probably look into uvicorn. Thanks a million!
[17:10:02] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[17:21:43] *** Joins: pycode (~pycode3@2001:b07:5d28:551:61cf:4bdb:4826:f1c3)
[17:23:47] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596)
[17:26:49] <moldy> thorbenl: iirc the test runner doesn't care about apps, it just search the filesystem tree for files following a naming pattern
[17:26:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:27:23] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:27:36] *** Quits: ocs (~oliver@2a01:c22:b07d:2400:739c:450f:ef15:6e60) (Ping timeout: 268 seconds)
[17:27:37] <thorbenl> i just dont understand the change they made to tags.:)  we didnt change anything in our codebase regrading runnign tests, just upgraded from 3.2.11
[17:29:48] <moldy> thorbenl: hmm Mariusz explained it in the ticket
[17:31:36] *** Quits: thorbenl (~RatiosuGu@D47097B1.rev.sefiber.dk) (Quit: Client closed)
[17:31:50] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:36:32] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[17:50:05] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:50:12] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:50:46] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:51:08] *** Joins: pro_z (~pro_z@37.214.69.237)
[17:55:02] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[18:18:18] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[18:19:19] *** Joins: msgre63 (~msgre@213.235.86.241)
[18:19:28] *** Joins: mattil (~mattil@87-95-65-28.bb.dnainternet.fi)
[18:22:46] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[18:24:02] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[18:24:04] *** Quits: mattil (~mattil@87-95-65-28.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[18:25:49] <msgre63> Hello! I found that queryset.query doesn't put values in quota and therefore SQL is not valid. Example: I have following QS: `Game.objects.filter(name="word1 word2 word3")` which works as expected. Anyway, SQL taken from  `Game.objects.filter(name="word1 word2 word3").query` looks like: `SELECT "games_game"."id", "games_game"."name" FROM
[18:25:50] <msgre63> "games_game" WHERE "games_game"."name" = word1 word2 word3 ORDER BY "games_game"."name" ASC` is not valid: `ERROR:  syntax error at or near "word2"`. The "word1 word2 word3" term should be in quotas, like: `SELECT "games_game"."id", "games_game"."name" FROM "games_game" WHERE "games_game"."name" = 'word1 word2 word3' ORDER BY "games_game"."name"
[18:25:50] <msgre63> ASC`. Am I wrong?
[18:26:23] <moldy> msgre63: yes, queryset.query is not intended to give you a real runnable SQL query
[18:26:57] <moldy> msgre63: what i usually do is something like `from django.db import connection; print(connection.queries[-1])` (after the query has run)
[18:30:57] *** Joins: mxp (~mxp@185.16.205.131)
[18:31:54] <msgre63> moldy: aha! found on SO: "Django never actually interpolates the parameters: it sends the query and the parameters separately to the database adapter, which performs the appropriate operations." and it makes sense. thanks!
[18:36:27] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:37:31] *** Quits: sandeepk (~sandeepk@223.130.30.23) (Quit: Leaving)
[18:38:07] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[18:38:28] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[18:38:33] *** Joins: mattil (~mattil@d4d70r4gwhj4175r80f-4.rev.dnainternet.fi)
[18:40:43] *** Quits: RFulcher (~ircuser@c-174-54-86-30.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[18:42:51] *** Quits: mattil (~mattil@d4d70r4gwhj4175r80f-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[18:44:47] *** Quits: msgre63 (~msgre@213.235.86.241) (Quit: Client closed)
[18:48:06] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d14:182c:14c5:2762:c20c:8596) (Quit: Client closed)
[19:04:41] *** Joins: dez (uid92154@user/dez)
[19:21:24] <pycode> i have circular error because from managers.py i am importing models to get a "constant" and from models i obviously import managers.py for my Model
[19:21:29] <pycode> is there a workaround?
[19:22:04] <hylje> use a separate constants module that doesn't itself import anything
[19:22:37] <pycode> hylje, ok so basically constants.py and then i load it from models.py and managers.py
[19:22:39] <pycode> ok thanks!!
[19:24:36] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[19:24:56] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[19:25:34] *** Quits: seizecypher (~ceazcyphe@88.223.40.155) (Quit: WeeChat 2.8)
[19:31:04] <pycode> with managed = False i can avoid using a primary key right?
[19:31:19] <pycode> i have a materialized view and the primary key is composite (2 columns)
[19:31:27] <pycode> i cannot do that in django so...
[19:31:39] <pycode> can i just skip it? without specifing a primary key?
[19:31:42] <hylje> not sure, i think django models want a logical primary key regardless of migrations (managed)
[19:33:02] <pycode> hylje, hmm so what can i do in this case?
[19:33:17] <pycode> add a fake id field as primary ?
[19:33:27] <hylje> for example, as long as it's unique it should be fine
[19:33:43] <pycode> ok
[19:33:44] <hylje> you can also use some other DB access library beside django models
[19:34:00] <pycode> hylje, ? what do you mean? sounds interesting ... :D
[19:34:34] <hylje> well, just because you have django and models doesn't mean you can't also use other libraries (e.g. plain sql with psycopg2, sqlalchemy, something else)
[19:38:27] *** Joins: pycode1 (~pycode3@93-40-5-81.ip36.fastwebnet.it)
[19:38:32] <pycode1> hylje, pardon, back...
[19:38:38] <pycode1> sure i can use other libraries too
[19:38:45] <pycode1> but i prefer to use the ORM if possible
[19:38:57] <hylje> the ORM has limits, particularly with weird primary key setups
[19:39:11] <hylje> so it's a no go unless you want to write a very large PR to django to fundamentally change how the ORM works
[19:39:54] *** Quits: pycode (~pycode3@2001:b07:5d28:551:61cf:4bdb:4826:f1c3) (Ping timeout: 250 seconds)
[19:40:31] <pycode1> ok
[19:40:48] <pycode1> but in this case i can create the ID it is not a big problem i set it as Serial
[19:40:54] <pycode1> and it will works
[19:41:13] <hylje> any unique field will do even if it's not the "true" PK
[19:50:01] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[20:01:14] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:12:04] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[20:12:38] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[20:20:58] *** Joins: baserow_nigel (~baserow_n@2a02:8084:b440:9000:442b:6de2:e2f8:22ae)
[20:24:55] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.3)
[20:25:34] <baserow_nigel> Heyo, I believe I have a found a bug in the `BaseDatabaseSchemaEditor` and wanted to double check before raising a bug, specifically if you look at `BaseDatabaseSchemaEditor.__exit__` if there is some deffered_sql which fails to execute and the schema editor is atomic, it will not correctly exit the atomic block for the schema editor
[20:25:34] <baserow_nigel> (https://github.com/django/django/blob/4ce59f602ed28320caf3035212cb4d1c5430da2b/django/db/backends/base/schema.py#L121) . We directly use django's schemaeditor wrapped in another atomic transaction which lead to us discovering this as the connection was left with a non-commited transaction open when some deffered_sql failed to execute. Instead I
[20:25:35] <baserow_nigel> believe there should be a try/finally in `BaseDatabaseSchemaEditor.__exit__` ensuring if it is atomic a rollback occurs upon failure of the deffered_sql
[20:32:44] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:34:21] <baserow_nigel> I'm not sure this can ever actually affect migrations as it looks like if the `deferred_sql` ever fails the exception will bubble all the way up, kill the command, close the connection, which presumably rolls back the non committed atomic migration. But for programmatic users of `connection.schema_editor()` this can cause all subsequent requests
[20:34:22] <baserow_nigel> that try to use the connection etc to fail due to the left open transaction.
[20:40:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:42:32] *** Joins: ocs (~oliver@dynamic-089-014-213-166.89.14.pool.telefonica.de)
[20:43:17] *** Joins: jfoster (~textual@user/jfoster)
[20:48:26] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:48:28] <baserow_nigel> Correction, I believe for subsequent requests to fail if you also need to be using something like pgbouncer which will kill the connection if you close it with an open transaction (which django doesn't realise has happened and will continue trying to use the now closed connection) (https://www.psycopg.org/docs/usage.html#transactions-control)
[21:00:44] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[21:00:57] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[21:09:41] *** Quits: baserow_nigel (~baserow_n@2a02:8084:b440:9000:442b:6de2:e2f8:22ae) (Quit: Client closed)
[21:17:02] *** Quits: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6) (Ping timeout: 240 seconds)
[21:20:09] *** Joins: baserow_nigel (~baserow_n@2a02:8084:b440:9000:3556:e0a2:1027:bb81)
[21:26:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:32:29] *** Joins: ircuser (~ircuser@173-163-111-153-cpennsylvania.hfc.comcastbusiness.net)
[21:32:37] *** ircuser is now known as rfulcher
[21:34:20] *** Quits: pycode1 (~pycode3@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 256 seconds)
[21:34:54] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[21:37:56] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:48:41] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[21:50:07] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[21:51:02] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[21:52:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:56:36] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[22:09:19] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:23:57] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[22:25:05] *** Joins: cryocaustik73 (~cryocaust@user/cryocaustik)
[22:25:14] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Read error: Connection reset by peer)
[22:25:14] *** cryocaustik73 is now known as cryocaustik7
[22:25:30] *** Joins: tonitch_ (~tonitch@user/tonitch)
[22:25:41] *** Quits: koo5_ (~quassel@51.140.155.227) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: carloratm (carloratm@tilde.club) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: pjs (~pjs@user/pjs) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[22:25:51] *** Joins: shodan45 (~quassel@107.161.22.155)
[22:26:00] *** Joins: koo5_ (~quassel@51.140.155.227)
[22:26:03] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[22:26:15] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 256 seconds)
[22:26:21] *** Joins: pjs (~pjs@user/pjs)
[22:26:35] *** Joins: dodo (~dodo@user/dodo)
[22:31:32] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (Remote host closed the connection)
[22:31:49] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[22:34:54] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[22:38:37] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[22:41:25] *** withered_wolf is now known as thoughtfu
[22:41:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[22:42:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:43:18] *** thoughtfu is now known as withered_wolf
[22:46:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[22:47:13] *** Quits: baserow_nigel (~baserow_n@2a02:8084:b440:9000:3556:e0a2:1027:bb81) (Ping timeout: 256 seconds)
[23:03:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:05:18] *** Quits: pro_z (~pro_z@37.214.69.237) (Ping timeout: 250 seconds)
[23:09:01] *** Joins: mcint (mcint@user/mcint)
[23:19:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:31:44] *** Quits: ocs (~oliver@dynamic-089-014-213-166.89.14.pool.telefonica.de) (Quit: Leaving)
[23:35:03] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:50:55] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:52:42] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[23:54:22] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[23:55:23] *** Joins: admin123 (~harrymore@2607:fb90:558f:42d1:ed7f:df64:71cb:d760)
[23:57:18] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
