[00:02:55] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[00:10:01] <foobaz> apparently i don't need to configure gopls to use staticcheck, because i use ale to run gopls, and ale supports staticcheck directly
[00:13:20] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[00:15:33] <bookworm> roundabout way of doing things in the LSP age but why not
[00:16:55] *** Quits: agrest (~user@styria.daemonized.org) (Quit: agrest)
[00:18:11] <lungaro_> go mod cache is screwing me. not sure how but I put replace github.com/org/pkg1 => ../go-pkg1 in my go.mod and its not picking up my changes
[00:18:13] <foobaz> i'm sure you're right but now that i have it working i am loathe to change it
[00:18:22] <lungaro_> how do I debug this or just wipe all the cahces?
[00:18:23] <lungaro_> caches*
[00:22:18] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[00:22:23] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[00:22:24] <lungaro_> omfg, i think ./vendor was present
[00:22:38] <lungaro_> i thought i had to pass -mod=vendor for that to work =/
[00:23:34] <foobaz> i had a similar problem recently and it turned out i was editing go.mod on one machine and compiling the package on another, i felt very silly
[00:23:46] <lungaro_> wouldn't be surprised if I did that too
[00:24:08] <lungaro_> I have like 3 dev places now and then i make VMs too
[00:24:15] <lungaro_> its bonkers
[00:24:37] <lungaro_> i should come up with a better name scheme too cause I name them "s1", "s2" and "d1" and "D2"
[00:24:49] *** Quits: revolve (~u0_a227@82-132-247-39.dab.02.net) (Read error: Connection reset by peer)
[00:25:59] *** Joins: revolve (~u0_a227@82-132-245-185.dab.02.net)
[00:26:55] *** Joins: oxum (~oxum@106.203.207.2)
[00:27:05] *** Quits: ari (~ari@vmi500470.contaboserver.net) (Remote host closed the connection)
[00:29:41] *** Joins: src (~src@user/src)
[00:30:31] *** Quits: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[00:32:43] *** Quits: burningserenity_ (~burningse@2603:9001:f01:ad99::100a) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:02] *** Joins: agrest (~user@almyra.daemonized.org)
[00:38:20] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:39:02] <foobaz> "ineffective break statement. Did you mean to break out of the outer loop?"
[00:39:14] <foobaz> yes i did, thank you staticcheck for finding a real bug
[00:39:27] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[00:39:44] *** Quits: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[00:40:00] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[00:42:20] *** Quits: TFKyle (~kyle@64.201.205.70) (Quit: :q!)
[00:42:26] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[00:42:47] <lungaro_> i dont even know if I use that. will have to check if doom emacs has it enabled. I should know more about how that stuff gets setup
[00:42:54] <lungaro_> (That's sweet btw)
[00:43:41] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[00:44:48] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[00:45:00] *** Joins: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net)
[00:45:15] *** Joins: oxum (~oxum@106.203.207.2)
[00:50:33] *** Joins: qilx (~quassel@62.201.21.8)
[00:51:02] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[00:54:16] <qilx> Hi, please how can I create pointer to existing string variable using reflect? I tried method Addr(), but getting error: reflect.Value.Addr of unaddressable value. String variable is in fact struct`s field and I am iterating that struct with reflect.
[00:55:11] <b0nn> qilx: why reflect?
[00:56:05] *** Joins: jinie_ (~jimmy@188.114.173.37)
[00:58:09] *** Joins: oxum (~oxum@106.203.207.2)
[00:59:06] <qilx> b0nn: I am writing custom marshaler
[00:59:33] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:00:26] *** Parts: merpnderp (sid16744@id-16744.stonehaven.irccloud.com) ()
[01:03:13] <b0nn> hmm, I'm not 100% sure you /can/ get the address of a string
[01:03:24] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 272 seconds)
[01:03:33] <b0nn> Strings are immutable, and if Go allowed you to take a strings address, then you'd be allowed to mutate it
[01:04:51] <b0nn> https://pkg.go.dev/reflect#StringHeader
[01:06:35] <b0nn> I mean, reflect will give you that string header, which has a uintptr that can be converted to an unsafe pointer, but as the doc says, there's no guarantee that the data will stay at that address
[01:07:32] <b0nn> Maybe, though, the pathway is to []byte it, then Go will happily let you address that data
[01:07:34] <qilx> Ok, that means I have to rewrite all unmarshaling function to use reflect.Value instead of pointers :-/ ... thank you
[01:08:01] <b0nn> Have you looked at how go does the unmarshalling of json?
[01:08:27] <qilx> no, good idea, I will take a look
[01:08:29] <foobaz> you can't mutate a string, but the address of a string can be used to swap in a new string, which is also immutable
[01:08:56] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:08:59] <b0nn> https://pkg.go.dev/reflect#StringHeader
[01:09:17] <b0nn> er https://cs.opensource.google/go/go/+/refs/tags/go1.16.7:src/encoding/json/decode.go;l=96
[01:09:29] *** Joins: normen (~normen@p200300d7173dc900c804794b8c716a79.dip0.t-ipconnect.de)
[01:10:07] <b0nn> Ahhhh they've got click to definition working, that's so much better
[01:10:37] <b0nn> https://cs.opensource.google/go/go/+/refs/tags/go1.16.7:src/encoding/json/decode.go;drc=refs%2Ftags%2Fgo1.16.7;l=170
[01:12:16] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[01:21:13] <qilx> it seems to me, that json package also uses reflect.Value directly instead of pointers
[01:22:24] <b0nn> It does look that way
[01:23:23] <qilx> than it is solved :-) ... I have to rewrite it :-) ... Thank you for help!
[01:23:49] <b0nn> Heh, there might be a pathway for you to follow but I think the fact that you are hitting a wall suggests not
[01:24:00] <fikran> Question. I have a function that does not return an value. Is there a strategy to testing it?
[01:24:13] <fikran> It should just Println a value to the terminal.
[01:24:20] <b0nn> examples
[01:24:29] <b0nn> examples will check the output
[01:24:40] <b0nn> the other option is to hijack std.Out
[01:24:51] <fikran> ah...and that can be read and verified? the examples?
[01:24:52] <fikran> oh?
[01:24:58] <fikran> I would be interested in seeing how that's done.
[01:25:12] <b0nn> https://blog.golang.org/examples
[01:25:55] <b0nn> hijacking std.Out can be a bit involved
[01:26:02] *** Joins: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net)
[01:28:17] <rudi_s> An alternative is to refactor the function to e.g. take a writer or similar and then use that to test it.
[01:28:47] *** Quits: independent56 (~independe@52.red-193-153-30.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[01:29:25] <fikran> take the writer? the file descriptor?
[01:29:56] *** Quits: jinie_ (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:30:38] *** Quits: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net) (Remote host closed the connection)
[01:30:44] <bpalmer> Or,  have your public function be  func Foo() { foo(os.Stdout)  }   and only bother testing foo
[01:30:56] <bpalmer> that way you don't change your public interface, but you make it easier to test.
[01:31:01] *** Joins: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net)
[01:31:24] <fikran> and the testing framework has a method of reading Streams?
[01:31:27] <bpalmer> (this is why test coverage should never be a driving metric, btw, imo)
[01:31:36] <fikran> heh, this is literally the first meaningful test I'm writing in Golang :)
[01:31:51] <bpalmer> fikran: when a function takes an io.Writer , just pass it a bytes.Buffer and then read its contents after the fact
[01:32:12] <fikran> okay! that's an option
[01:32:27] <fikran> is there a general-purpose Println equivalent that I can set the stream to? that will reduce the complication of the migration I'm doing.
[01:32:46] <fikran> or a log equivalent...
[01:33:04] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:33:14] <bpalmer> fikran: I'm not sure what you mean. fmt.Fprintf is how you print stuff to an arbitrary io.Writer
[01:33:21] *** Joins: jinie (~jimmy@188.114.173.37)
[01:33:40] <bpalmer> so , in func foo(w io.Writer) {   fmt.Fprintf(w, "Hello, %s", "world") }
[01:33:53] <bpalmer> and similarly, fmt.Fprintln
[01:34:14] <fikran> awesome! Thankk you so much!
[01:34:32] <fikran> Sorry to be spoon-fed. I am just in a phase, I need to get paste it, then documentation makes sense to me.
[01:35:18] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[01:35:43] <bpalmer> I suppose strings.Builder might be nicer than bytes.Buffer, in some cases.
[01:36:27] <Sam> "in some cases" being "when the final output will be a UTF-8 string" :)
[01:36:48] *** Parts: agrest (~user@almyra.daemonized.org) ()
[01:39:25] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:49:57] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Quit: ZNC 1.8.2 - https://znc.in)
[01:57:18] *** Joins: jinie (~jimmy@188.114.173.37)
[01:57:57] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[01:59:40] *** Joins: jinie (~jimmy@188.114.173.37)
[02:00:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:02:17] *** Joins: fikran (~fikran@user/fikran)
[02:13:58] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[02:15:36] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:3d66:98fa:2b38:7415) (Quit: WeeChat 3.2)
[02:18:14] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:a924:4956:68bc:291f) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:21:59] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:a924:4956:68bc:291f)
[02:25:23] <fikran> So...question. My code has a "file scope" variable. In testing code, would I also make that variable file-scope?
[02:25:42] <Tv_> fikran: ain't no such thing as file scope for variables, in Go
[02:25:48] <fikran> sorry, not file scope. I said the wrong thing
[02:25:50] <Tv_> that's package scope
[02:25:53] <fikran> Tv_: right! I am thinking C.
[02:26:00] <fikran> yes, package scope - some documentation I just read calls it global scope.
[02:26:11] <fikran> https://golangr.com/scope/
[02:26:43] *** LSD is now known as acidsys
[02:26:52] <Tv_> you're reading crap guides
[02:27:08] <fikran> wondering what the best way to work with that is. Should I have a blank package-scope variable and then assign it in the Test case?
[02:27:19] <Tv_> fikran: for what purpose
[02:27:56] <fikran> I am writing a test case.
[02:28:41] <Tv_> and what purpose is this variable serving in that
[02:29:32] *** Quits: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net) (Ping timeout: 272 seconds)
[02:32:21] <fikran> oh, its a state of the running application.
[02:36:52] *** Quits: zwr (~zwr@2804:d45:b966:fb00:b8b0:daa2:aad7:31ac) (Remote host closed the connection)
[02:38:04] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[02:39:11] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:43:39] *** Joins: dr0n (~dr0n@94.11.23.235)
[02:44:30] *** Quits: dr0n (~dr0n@94.11.23.235) (Remote host closed the connection)
[02:46:36] *** Joins: Torr (~Torr@user/torr)
[02:50:40] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[02:50:50] <fikran> Coming from C, my coding style needs to be adjusted for Go
[02:50:56] <fikran> speaking of which, I need to seriously abandon C...
[03:06:21] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[03:11:42] <blaisebool> Hello, could someone help me understant why my return value "guess" is empty ? https://gopaste.it/read/7871861b/5e6eb295
[03:12:57] <blaisebool> seems like the function parameter guess  is different from what is on the for loop... I don't get it.
[03:13:17] <fizzie> You're declaring a new independent variable called `guess` in the function.
[03:13:26] <fizzie> := is a variable declaration, not an assignment.
[03:13:43] <ikke> := is both
[03:13:50] <ikke> a := 1
[03:13:53] <fizzie> Well, fair, it's at least one declaration.
[03:14:03] <rudi_s> Also, don't use named return values. They can be quite confusing.
[03:15:32] <fizzie> In any case, in the context of that code the line `guess, err := reader.ReadString('\n')` is purely a declaration, and creates a new variable inside the for loop's body that hides the named return value from the outer scope. That's why the outer one never gets changed, and remains "".
[03:17:22] <fizzie> FWIW, the `valid` flag isn't also really necessary there, because the only time you ever set it to true is at the immediate end of the loop. So you could just replace the `valid = true` with a return statement, and make it a `for { ... }` instead.
[03:17:35] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:a924:4956:68bc:291f) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[03:17:55] <blaisebool> fizzie , you made my day \o/
[03:18:20] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[03:18:25] <fizzie> I think there's a lint check about hiding variables in go vet or staticcheck or one of those tools.
[03:20:47] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:21:12] <fizzie> Oh, right, it was the `go vet -shadow` thing and it got removed and made an external tool instead. :/
[03:22:10] <fizzie> But at least gopls can run it: https://github.com/golang/tools/blob/master/gopls/doc/analyzers.md#shadow
[03:23:04] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[03:23:54] <blaisebool> So you've got me hooked! I just learned something new. I thank you for that. thanks a lot fizzie , without you I would not have seen this hidden "guess" in the for loop.
[03:24:06] *** Joins: flynn (~mcbloch@user/flynn)
[03:25:42] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 258 seconds)
[03:27:01] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[03:33:41] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:34:09] *** Joins: jsrnop (~mark@user/jsrnop)
[03:36:12] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:38:19] <fikran> is there a pattern for Testing with a time.Sleep() call?
[03:38:26] <fikran> ie, to make it...not do stuff?
[03:40:06] <b0nn> hrm
[03:40:37] <b0nn> I don't, I mock or fake time.Sleep because I don't want tests to unnecessarily take longer than a few ms
[03:40:52] <fikran> I'd love to see an example of how that works.
[03:41:04] <b0nn> So, the question is, what do you want the time.Sleep to achieve, and is there another way to ensure that the system is in that state without waiting
[03:46:40] <bpalmer> Often, time.Sleep is an anti-pattern in code, anyway, because you actually want to establish a sync point with something else, not just hope the something else finishes what it's doing.
[03:47:20] <fikran> in this, I'm having a human-readable log print out every 60 seconds.
[03:47:34] <fikran> If there's a better way, I'm fine with it. I just went with that because that's what I knew from the tutorials I read.
[03:48:17] <bpalmer> That may be suitable (although you might also just look at time.Ticker)
[03:48:45] <bpalmer> if the latter, you can express your work in terms of channel messages.
[03:49:20] *** Joins: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[03:50:12] <b0nn> Yeah, you certainly don't want a test to take n minutes if all you are testing is that log messages are emitted every 60 seconds
[03:50:37] *** Quits: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e) (Ping timeout: 258 seconds)
[03:51:28] <bpalmer> Oh, yeah, even if you are using time.Sleep, you want to be able to replace the clock with a simulated clock for testing.
[03:52:27] <bpalmer> e.g.,  var sleep = time.Sleep   as a package variable, and then replace it in a test with something like a function that checks how many messages have been output and how many times it's been called
[03:56:52] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[03:58:44] *** Joins: jinie (~jimmy@188.114.173.37)
[04:09:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:11:36] *** Joins: fikran (~fikran@user/fikran)
[04:12:10] *** Quits: jinie (~jimmy@188.114.173.37) (Read error: Connection reset by peer)
[04:12:37] *** Joins: jinie (~jimmy@188.114.173.37)
[04:19:59] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[04:24:03] <b0nn> If time is properly screwed with you can test for things that are nearly impossibel to /make/ happen, but /could/ happen (eg. time taking a backward step
[04:24:46] <b0nn> er, by properly screwed with, I mean using mocks and fakes (bpalmer's example is what I call a fake)
[04:26:33] *** Joins: toretto (~0xe3b7@user/toretto)
[04:26:54] <toretto> i'm not sure why go decided not to use `()` for the `for`, `if` and other statements.
[04:27:11] <b0nn> python doesn't either
[04:27:15] * b0nn shrugs
[04:28:02] <toretto> i was told that go tries to get close to C, like Ken Thompson and all the people, like it got pointers, strucs and such. but i'm not sure why they decided this decition.
[04:28:19] *** Joins: BUSY (~BUSY@user/busy)
[04:28:19] <toretto> close to C in the sense, coding style, syntax and such.
[04:30:44] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:32:16] <toretto> ok, how to have multiple update statements within the `for`? like, `for i := 0; i < 10; i++, foobar++ {` and such? is there a way to do that within the for update block, like in C? (i don't wanna do it inside)
[04:32:34] *** Joins: gggp_ (~gggp@60.10.194.46)
[04:33:19] <b0nn> for i := 0; i < 10; i, foobar = i+1, foobar+1
[04:33:54] <toretto> no, but i also wanna have `{}` block.
[04:34:08] <toretto> b0nn:
[04:34:27] <b0nn> ...
[04:34:33] <b0nn> then put one on the end
[04:34:37] <bpalmer> toretto: that's using multiple assignment. The {} body remains
[04:35:08] <bpalmer> in go for-loops, {} around the loop body is required (another distinction from C)
[04:36:24] * b0nn apologises; my patience is a bit thin at the moment - will go have a break
[04:36:27] <toretto> i've did this, `for i := 0; i < 10; i++, foo++ {}`, but idk what i'm missing, i'm getting expected '{', found ',' (and 1 more errors)
[04:36:34] <toretto> not sure what's going wrong.
[04:36:50] <bpalmer> toretto: take another look at what b0nn wrote
[04:38:14] <bpalmer> the syntax of for loops is specified in https://golang.org/ref/spec  ; the three part for syntax allows for 3 "simple statements"
[04:38:51] <bpalmer> "i++"  is a simple statement; "i = i + 1" ; is a simple statement. "i++" and then "j++" is not a single simple statement.
[04:39:01] <bpalmer> "i, j = 1, 2" is.
[04:39:27] <A_Dragon>  that mean i, j = i+1,j+1 works? should right?
[04:39:46] <toretto> ah, i see.
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:54:54] * fikran wonders if there is a way to iterate over a defined const list....
[04:55:06] <fikran> https://play.golang.org/p/oQRddf6AnDO like this
[04:57:02] <bpalmer> nope
[04:57:52] <Sam> That's not a list, it's separate declarations.
[04:58:32] <fikran> ahh...so for the sake of testing, I might want to refactor this
[05:00:17] <Sam> maybe, but you might also just rethink how you do your testing. There's probably no reason to require testing every single value unless they all invoke different code paths
[05:00:37] <fikran> they don't. I am brand new to serious testing
[05:07:33] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:11:54] *** Quits: revolve (~u0_a227@82-132-245-185.dab.02.net) (Ping timeout: 252 seconds)
[05:13:31] *** Joins: yoonkn (~user@175.197.208.79)
[05:14:04] *** Joins: gggp__ (~gggp@221.219.65.230)
[05:15:46] *** Joins: gggp (~gggp@221.219.65.230)
[05:17:38] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[05:19:16] *** Quits: gggp__ (~gggp@221.219.65.230) (Ping timeout: 272 seconds)
[05:19:35] *** Joins: revolve (~u0_a227@82-132-245-185.dab.02.net)
[05:22:20] *** Joins: toretto_ (~0xe3b7@45.15.16.60)
[05:24:47] *** Quits: toretto (~0xe3b7@user/toretto) (Ping timeout: 250 seconds)
[05:34:56] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef)
[05:38:54] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef) (Ping timeout: 276 seconds)
[05:52:33] *** Joins: neurocyte1 (~neurocyte@212.232.89.168)
[05:52:34] *** Quits: neurocyte1 (~neurocyte@212.232.89.168) (Changing host)
[05:52:34] *** Joins: neurocyte1 (~neurocyte@user/neurocyte)
[05:55:47] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[05:56:21] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 258 seconds)
[05:56:21] *** neurocyte1 is now known as neurocyte
[05:57:03] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:01:08] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[06:03:47] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[06:05:03] *** Joins: ente_ (~ente@p200300dc5f283e00f543925550ae38b5.dip0.t-ipconnect.de)
[06:10:03] *** Joins: toretto (~0xe3b7@ca1-1.azirevpn.net)
[06:11:35] *** Quits: ente_ (~ente@p200300dc5f283e00f543925550ae38b5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:12:20] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:12:20] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[06:12:57] *** Quits: toretto_ (~0xe3b7@45.15.16.60) (Ping timeout: 252 seconds)
[06:13:19] *** Joins: ente_ (~ente@p200300dc5f34ec005771f8e422bb0c79.dip0.t-ipconnect.de)
[06:14:12] *** Joins: jinie (~jimmy@188.114.173.37)
[06:14:27] *** Joins: busybusybusy (~BUSY@user/busy)
[06:15:05] *** Joins: vitejose (~vitejose@2600:6c40:5b00:6875:fd4a:331d:36f2:28c7)
[06:15:18] *** Quits: BUSY (~BUSY@user/busy) (Killed (NickServ (GHOST command used by busybusybusy)))
[06:15:24] *** busybusybusy is now known as BUSY
[06:16:07] *** Quits: gggp (~gggp@221.219.65.230) (Read error: Connection reset by peer)
[06:17:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[06:18:56] *** Joins: arcatech (~arcatech@user/arcatech)
[06:18:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[06:20:55] *** Joins: fikran (~fikran@user/fikran)
[06:21:12] *** Joins: pepee (~user@user/pepee)
[06:21:20] *** Joins: gggp (~gggp@60.10.23.170)
[06:43:53] *** Joins: codebam (~codebam@user/codebam)
[06:43:56] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:45:19] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[06:54:28] *** Joins: iateadonut (~dan@121.177.17.154)
[06:54:45] *** Quits: revolve (~u0_a227@82-132-245-185.dab.02.net) (Ping timeout: 252 seconds)
[06:55:55] *** Joins: arcatech (~arcatech@user/arcatech)
[06:55:56] *** Joins: revolve (~u0_a227@82-132-246-94.dab.02.net)
[07:03:22] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[07:10:11] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Quit: The Lounge - https://thelounge.chat)
[07:10:59] *** Joins: toretto_ (~0xe3b7@45.15.16.60)
[07:13:22] *** Quits: toretto (~0xe3b7@ca1-1.azirevpn.net) (Ping timeout: 240 seconds)
[07:33:58] *** Joins: noxim (~noxim@user/noxim)
[07:34:49] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[07:35:19] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:8511:501a:28e5:ffd0)
[07:49:45] *** Joins: yoonkn (~user@175.197.208.79)
[07:50:51] <iateadonut> fizzie - your answer received a recommendation from the go language collective: https://stackoverflow.com/questions/68677030/how-can-i-get-the-error-code-os-errnotexist-from-the-error-itself - did you get some kind of award or something for that?
[07:56:03] <fizzie> I don't know. :) I've never really gotten into the SO world, I don't know how it works. Maybe I need to turn that ghost of an account that got generated via the "post as a guest" thing to a real account now, to commemorate that.
[08:00:42] <iateadonut> well, i was impressed by your answer, since everyone else on SO was being total dicks about it.  one guy deleted his answer.
[08:05:46] <fizzie> Well, you're welcome. But really I've been focusing mostly on IRC for this sort of thing.
[08:05:47] <fizzie> This website seems much more gamified than our intranet question-answer thing, which just has some points.
[08:08:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:10:05] <iateadonut> i think it's good that you can ask a question there and wait two days or even a few years for an answer.
[08:11:02] <iateadonut> my highest-point answer was a php answer; there was already a bunch of upvoted answers, and mine slowly rose up the ranks... (imho, my answer is much better than every other answer)... so now when people look for the answer to that same question, they can find it.
[08:12:55] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[08:13:48] *** Joins: jinie (~jimmy@188.114.173.37)
[08:14:18] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:15:35] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[08:28:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[08:30:14] *** Joins: fikran (~fikran@user/fikran)
[08:30:51] *** Joins: gggp_ (~gggp@123.116.95.154)
[08:34:18] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[08:35:53] *** Joins: gggp__ (~gggp@60.10.194.46)
[08:39:24] *** Quits: gggp_ (~gggp@123.116.95.154) (Ping timeout: 272 seconds)
[08:41:23] *** Joins: gggp_ (~gggp@60.10.194.46)
[08:44:17] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 245 seconds)
[08:48:28] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[08:54:51] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[08:55:29] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[08:59:40] *** Joins: darkapex (~darkapex@user/darkapex)
[09:01:00] *** Joins: oxum (~oxum@106.203.207.2)
[09:01:05] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:04:24] *** Joins: codebam (~codebam@user/codebam)
[09:05:46] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 240 seconds)
[09:09:48] *** Joins: oxum (~oxum@106.203.207.2)
[09:18:18] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 240 seconds)
[09:19:53] *** Joins: gggp__ (~gggp@60.10.23.170)
[09:23:07] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[09:24:22] *** Joins: gggp_ (~gggp@60.10.194.46)
[09:27:28] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[09:30:50] <opcode> okay I need help understanding imports.  Suppose I have ~/code/project1/main.go and ~/otherdir/library/lib.go... how can I specify that in an import directive?  I've been reading the official docs on golang.org and it seems like the docs suggest with a straight face that you have to prepend "example.com/" to every local import... that can't be true right?
[09:32:52] *** Joins: gggp__ (~gggp@60.10.194.46)
[09:36:00] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[09:36:01] *** Quits: normen (~normen@p200300d7173dc900c804794b8c716a79.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[09:39:27] <snappy> opcode: you import packages, not files
[09:39:55] <opcode> Ok so how do I import a package from somewhere else on my hard disk
[09:40:00] <opcode> Ime.
[09:40:13] <opcode> I.e. one that isn't in a subdirectory of the current module
[09:40:51] <opcode> The docs don't cover that case, nor do any tutorials I've been able to find online
[09:40:57] <opcode> Is it even possible?
[09:42:40] <snappy> opcode: see go mod edit -replace; https://thewebivore.com/using-replace-in-go-mod-to-point-to-your-local-module/
[09:44:39] *** Joins: milkshark (~milkshark@148-64-96-237.PUBLIC.monkeybrains.net)
[09:45:01] <opcode> Hmm so what if the package I'm pointing to doesn't exist anywhere but my hard drive, in other words if there's nothing to replace
[09:45:35] *** Parts: milkshark (~milkshark@148-64-96-237.PUBLIC.monkeybrains.net) ()
[09:49:53] <bpalmer> the simplest way while still using modules is to give the package some prefix that you can replace. It doesn't actually need to be in hostname syntax like example.com
[09:51:06] <bpalmer> however, if you don't to use modules, you can just set GO111MODULE to be off
[09:51:45] <bpalmer> oops, I see in the go 1.16 patch notes that you'll have to use modules in 1.17
[09:52:08] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[09:52:15] <opcode> Wait so I need to specify a phony path that doesn't exist, just to replace it later?
[09:58:08] <f8l12> opcode, that can be any string i think. just think of replace as alias if i understand it correctly
[09:58:44] <opcode> ... I am honestly kind of astounded at how obtuse of a system that is
[09:59:20] <opcode> Maybe go isn't the language for me after all
[10:00:15] <opcode> I don't think I can enjoy writing in a language that requires you to jump through hoops just to import code from a different directory
[10:00:17] <opcode> Sheesh
[10:00:25] <f8l12> you should give it a chance. it's a really good language :P but it's always had issues with modules
[10:00:48] <bpalmer> I don't think modules are very well explained myself.
[10:01:10] <snappy> This is why I still like GOPATH, really got used to its quirks.
[10:02:08] <bpalmer> I did just test in a little sample app src/main.go (in package main)  , src/logger/logger.go (in package logger) ; in main.go, import "logger".   go mod init example.com , add "require (logger v0.0.0)\nreplace logger => ./logger" and go build works fine
[10:02:28] <bpalmer> so you don't even need a prefix.
[10:02:38] <opcode> Right but you're under src there
[10:02:57] <bpalmer> but yes, i thought GOPATH and vendoring worked fine for my use cases, so I still haven't adopted a module mindset.
[10:03:30] <bpalmer> opcode: you could move the logger package anywhere; just specify the filesystem path instead of ./logger
[10:03:51] *** Joins: CoolerX (~CoolerX@user/coolerx)
[10:04:14] <opcode> I dunno that seems like a total hack
[10:04:28] <opcode> To specify it and then immediately replace it
[10:04:42] <opcode> I was under the impression that that was for working with development branches
[10:04:51] *** Joins: normen (~normen@p200300d7173dc9007177f5265d9006c8.dip0.t-ipconnect.de)
[10:04:54] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[10:05:27] <bpalmer> I've always gotten the feeling that go modules are designed for people who publish each package individually and separately to github often.
[10:06:30] <opcode> I mean maybe but even Microsoft lets me include arbitrary locations on disk in c#, and friggin Fortran has had that flexibility since the 1950s..
[10:06:51] <bpalmer> how do you specify arbitrary locations on disk in C#?
[10:06:53] <opcode> Did Google think nobody would ever write code that they didn't want to publish to github
[10:07:59] <bpalmer> s/github/some repository/, I should say.
[10:08:52] <opcode> As for your question about c#
[10:09:46] *** Quits: normen (~normen@p200300d7173dc9007177f5265d9006c8.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:10:00] *** Quits: vitejose (~vitejose@2600:6c40:5b00:6875:fd4a:331d:36f2:28c7) (Quit: vitejose)
[10:11:10] <opcode> You just add a using directive
[10:11:22] <opcode> And make sure the compiler can find it
[10:11:47] <opcode> Anyways I'm demoralized and going to seriously rethink learning go, gn all
[10:12:08] <bpalmer> opcode: using directives don't let you specify a file path. ALl this rigmarole is the "make sure the compiler can find it" part
[10:12:28] <bpalmer> but again, the simplest way is to pick some identifier for yourself that all your code is in. Like example.com
[10:12:28] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[10:13:09] <bpalmer> in the example I gave before, src/main.go  src/logger/logger.go  ; delete all the go.mod files. go mod init example.com  in the src/ directory; and import logger as "example.com/logger". It just 'works'
[10:13:53] *** Joins: jinie (~jimmy@188.114.173.37)
[10:17:11] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[10:18:18] *** Joins: codebam (~codebam@user/codebam)
[10:20:22] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:22:38] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[10:28:44] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[10:29:42] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[10:29:48] *** Quits: LiftLeft (~LiftLeft@191.96.227.138) (Ping timeout: 252 seconds)
[10:30:50] *** Joins: gggp_ (~gggp@123.113.176.18)
[10:33:02] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:33:09] *** Joins: codebam (~codebam@user/codebam)
[10:33:23] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[10:34:16] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[10:35:01] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Client Quit)
[10:35:19] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[10:35:41] *** Joins: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e)
[10:37:01] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Client Quit)
[10:37:19] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[10:37:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[10:39:33] *** Joins: fikran (~fikran@user/fikran)
[10:40:55] *** Joins: oxum (~oxum@106.203.207.2)
[10:42:51] *** Joins: gggp__ (~gggp@60.10.194.46)
[10:44:19] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[10:46:14] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 256 seconds)
[10:46:42] *** Quits: gggp_ (~gggp@123.113.176.18) (Ping timeout: 272 seconds)
[10:54:21] *** Quits: iivvoo (~l@m3r.nl) (Quit: The Lounge - https://thelounge.chat)
[10:54:43] *** Joins: iivvoo (~l@m3r.nl)
[10:57:01] *** Joins: gggp_ (~gggp@60.10.194.46)
[10:57:41] *** Quits: finnb (~finnb@51.15.63.237) (Quit: The Lounge - https://thelounge.chat)
[10:58:23] *** Joins: finnb (~finnb@51.15.63.237)
[10:59:34] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[11:00:21] *** Joins: gggp__ (~gggp@60.10.194.46)
[11:01:26] *** Joins: prophet60091_ (~prophet60@87.122.108.1)
[11:03:47] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[11:05:42] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 272 seconds)
[11:09:24] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[11:16:48] *** Joins: gggp_ (~gggp@60.10.194.46)
[11:17:40] *** Joins: mrig (~mrig@user/mrig)
[11:19:30] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[11:28:12] *** Joins: califax (~califax@user/califx)
[11:30:10] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[11:30:54] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Quit: mikoto-chan)
[11:35:34] *** Joins: oxum (~oxum@106.203.207.2)
[11:37:37] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 245 seconds)
[11:40:12] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[11:43:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:44:04] *** Joins: califax (~califax@user/califx)
[11:47:46] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:49:53] *** Joins: me-sudoer-dentne (~Kundargi@45.112.146.61)
[11:50:05] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[11:50:09] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[11:50:09] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[12:03:40] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[12:05:30] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 252 seconds)
[12:06:39] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[12:08:21] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[12:08:39] *** Joins: normen (~normen@p200300d7173dc9007177f5265d9006c8.dip0.t-ipconnect.de)
[12:09:19] *** Joins: icy (~icy@user/icy)
[12:12:12] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[12:13:58] *** Joins: jinie (~jimmy@188.114.173.37)
[12:14:19] *** Joins: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net)
[12:18:55] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[12:34:42] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[12:34:52] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (Quit: Ping timeout (120 seconds))
[12:34:56] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[12:35:18] *** Joins: thiccdaddy (~OwO@thiccdaddy.sexy)
[12:35:24] *** Joins: scjosh8 (~scjosh@206.189.79.69)
[12:35:31] *** Joins: smitop (~smitop@user/smitop)
[12:35:52] *** Quits: Louis (~Louis@my-hostna.me) (Quit: ZNC - https://znc.in)
[12:35:55] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[12:35:56] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Remote host closed the connection)
[12:35:56] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[12:36:02] *** Joins: Louis (~Louis@my-hostna.me)
[12:36:10] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Ping timeout: 256 seconds)
[12:36:14] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[12:36:28] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[12:36:44] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 256 seconds)
[12:36:44] *** Quits: daegalus (~yulian@user/daegalus) (Ping timeout: 252 seconds)
[12:36:44] *** Quits: ansimita (~ansimita@user/ansimita) (Ping timeout: 252 seconds)
[12:36:47] *** Joins: a1paca_ (~a1paca@user/a1paca)
[12:36:48] *** Quits: Archwyrm (~archwyrm@archwyrm.net) (Ping timeout: 245 seconds)
[12:37:11] *** Joins: dfch (~dfch@user/dfch)
[12:37:13] *** Quits: scjosh (~scjosh@206.189.79.69) (Ping timeout: 245 seconds)
[12:37:13] *** scjosh8 is now known as scjosh
[12:37:17] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 252 seconds)
[12:37:17] *** Quits: wkalt (~wkalt@user/wkalt) (Ping timeout: 252 seconds)
[12:37:18] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 256 seconds)
[12:37:41] *** Quits: samf (~root@159.65.228.88) (Ping timeout: 250 seconds)
[12:37:45] *** Joins: n1000 (~n1000@user/n1000)
[12:37:52] *** Quits: a1paca (~a1paca@user/a1paca) (Ping timeout: 256 seconds)
[12:38:07] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[12:38:23] *** Quits: Lost (~spinning@user/lost) (Ping timeout: 252 seconds)
[12:38:26] *** Joins: daegalus (~yulian@user/daegalus)
[12:38:39] *** Joins: samf (~root@159.65.228.88)
[12:38:41] *** Joins: Archwyrm (~archwyrm@archwyrm.net)
[12:38:50] *** Joins: chasmo77 (~chas77@71.63.241.168)
[12:38:56] *** Joins: Lost (cold@user/lost)
[12:39:05] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[12:39:15] *** Joins: wkalt (~wkalt@user/wkalt)
[12:40:46] *** Quits: normen (~normen@p200300d7173dc9007177f5265d9006c8.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[12:44:58] *** Joins: oxum (~oxum@106.203.207.2)
[12:46:31] *** Quits: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[12:46:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[12:48:51] *** Joins: fikran (~fikran@user/fikran)
[12:49:54] *** Joins: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net)
[12:49:58] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[12:54:57] *** Quits: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[12:57:03] *** Joins: shka (~herr@109.231.62.239)
[13:01:08] *** Joins: elf_fortrezz (~elf_fortr@adsl-72-50-6-19.prtc.net)
[13:03:48] *** Joins: kodah (~kodah@user/kodah)
[13:11:03] *** Quits: prophet60091_ (~prophet60@87.122.108.1) (Ping timeout: 258 seconds)
[13:14:05] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[13:16:28] *** Joins: normen (~normen@p200300d7173dc9007177f5265d9006c8.dip0.t-ipconnect.de)
[13:18:06] *** Quits: f8l12 (~f8l12@191.96.150.84) (Ping timeout: 252 seconds)
[13:24:33] *** Quits: revolve (~u0_a227@82-132-246-94.dab.02.net) (Read error: Connection reset by peer)
[13:25:53] *** Joins: revolve (~u0_a227@82-132-244-238.dab.02.net)
[13:41:20] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 258 seconds)
[13:52:31] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[13:52:33] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[14:02:51] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[14:05:23] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[14:06:52] *** Joins: oxum (~oxum@106.203.207.2)
[14:08:07] *** Joins: jinie (~jimmy@188.114.173.37)
[14:11:14] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 258 seconds)
[14:12:12] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[14:12:32] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[14:12:37] *** Joins: jinie (~jimmy@188.114.173.37)
[14:13:16] *** Quits: elf_fortrezz (~elf_fortr@adsl-72-50-6-19.prtc.net) (Quit: Client closed)
[14:13:58] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[14:14:19] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[14:16:18] *** Joins: elf_fortrezz (~elf_fortr@adsl-72-50-4-51.prtc.net)
[14:16:45] *** Quits: caubert (~caubert@136.244.111.235) (Quit: WeeChat 3.2)
[14:16:54] *** Quits: elf_fortrezz (~elf_fortr@adsl-72-50-4-51.prtc.net) (Client Quit)
[14:17:03] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[14:18:10] *** Joins: caubert (~caubert@136.244.111.235)
[14:23:16] *** Joins: frost (~frost@59.71.241.179)
[14:23:44] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[14:23:58] *** Joins: frost (~frost@59.71.241.179)
[14:40:43] *** Joins: prophet60091_ (~prophet60@87.122.108.1)
[14:41:45] *** Joins: jinie (~jimmy@188.114.173.37)
[14:42:22] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[14:46:47] *** Joins: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru)
[14:48:17] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[14:48:25] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Ping timeout: 246 seconds)
[14:48:58] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[14:50:30] *** Joins: darkapex (~darkapex@user/darkapex)
[14:56:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[14:58:10] *** Joins: fikran (~fikran@user/fikran)
[14:59:44] *** Joins: LiftLeft (~LiftLeft@191.96.150.118)
[15:07:18] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: Lost terminal)
[15:09:07] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[15:23:08] *** Joins: Atque (~Atque@user/atque)
[15:23:34] *** Quits: src (~src@user/src) (Quit: leaving)
[15:29:18] *** Parts: iateadonut (~dan@121.177.17.154) ()
[15:41:19] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 258 seconds)
[15:42:11] *** Joins: mrig (~mrig@user/mrig)
[15:44:25] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[15:48:56] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[15:49:16] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[15:50:03] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[15:59:48] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[16:01:27] *** Joins: mrig (~mrig@user/mrig)
[16:06:16] *** Joins: zwr (~zwr@2804:d45:b966:fb00:394b:479a:b187:6c90)
[16:10:08] *** Quits: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e) (Quit: WeeChat 3.2)
[16:20:57] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[16:22:13] *** Joins: darkapex (~darkapex@user/darkapex)
[16:22:26] *** Joins: oxum (~oxum@106.203.207.2)
[16:25:18] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[16:26:51] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[16:28:19] *** Joins: jinie (~jimmy@188.114.173.37)
[16:31:02] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[16:39:35] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 258 seconds)
[16:40:39] *** Joins: oxum (~oxum@106.203.207.2)
[16:42:05] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[16:42:38] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:8511:501a:28e5:ffd0) (Ping timeout: 272 seconds)
[16:49:19] *** Joins: Guest9694 (~hentai@2a01:e0a:a5c:a070:c86c:2447:351c:5606)
[16:49:20] *** Quits: Guest9694 (~hentai@2a01:e0a:a5c:a070:c86c:2447:351c:5606) (Changing host)
[16:49:20] *** Joins: Guest9694 (~hentai@user/hentai)
[16:49:44] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[16:50:33] *** Joins: oxum (~oxum@106.203.207.2)
[16:54:10] <fizzie> Re the earlier discussion about "local imports", maybe the proposed workspace mode would allow that sort of workflows more easily, in addition to its main use case of editing multiple modules.
[16:54:16] <fizzie> https://go.googlesource.com/proposal/+/master/design/45713-workspace.md
[16:54:52] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:55:21] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 252 seconds)
[16:55:43] <fizzie> While all the examples seem to use relative paths, I think absolute ones are just fine too. Maybe it's not that different from doing the replace directives, and yeah, you still need to come up with a "logical" name to use in imports, but still.
[16:55:58] *** Joins: oxum (~oxum@106.203.207.2)
[16:58:46] <fizzie> (A "foo.local" name might be a reasonable thing to use in something that's definitely never going to be uploaded anywhere. Though I just use a real domain name.)
[16:59:37] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[16:59:59] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[17:00:18] *** Joins: oxum (~oxum@106.203.207.2)
[17:02:22] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[17:05:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:07:29] *** Joins: fikran (~fikran@user/fikran)
[17:09:08] *** Joins: oxum (~oxum@106.203.207.2)
[17:11:14] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:13:11] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[17:14:19] *** Joins: oxum (~oxum@106.203.207.2)
[17:19:04] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[17:19:24] *** Joins: oxum (~oxum@106.203.207.2)
[17:29:20] *** Joins: frost (~frost@59.71.241.179)
[17:29:47] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[17:30:16] *** Joins: arcatech (~arcatech@user/arcatech)
[17:32:40] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[17:36:24] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[17:42:43] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:46:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:394b:479a:b187:6c90) (Ping timeout: 258 seconds)
[17:47:11] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2d9b:b55f:a535:512a)
[17:52:25] *** Joins: oxum (~oxum@106.203.207.2)
[17:53:02] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[17:55:14] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:02:27] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[18:03:54] *** Joins: oxum (~oxum@106.203.207.2)
[18:04:13] *** Joins: Vukan (~drazen@2a02:587:d413:d6a:9ae5:e703:6028:b3d5)
[18:07:39] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:07:53] *** Joins: oxum (~oxum@106.203.207.2)
[18:08:44] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:09:22] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 256 seconds)
[18:09:30] *** Joins: oxum (~oxum@106.203.207.2)
[18:12:54] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:13:43] *** Joins: oxum (~oxum@106.203.207.2)
[18:18:00] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:26:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[18:28:22] *** Joins: jinie (~jimmy@188.114.173.37)
[18:45:54] *** Joins: oxum (~oxum@106.203.207.2)
[18:46:12] *** Joins: dung[m] (~dungbrocc@2001:470:69fc:105::d25b)
[18:47:14] *** Joins: kubblai (sid478659@fedora/kubblai)
[18:47:38] *** Joins: rawtaz (~rawtaz@user/rawtaz)
[18:47:54] *** Quits: Vukan (~drazen@2a02:587:d413:d6a:9ae5:e703:6028:b3d5) (Ping timeout: 256 seconds)
[18:48:09] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:52:38] *** Joins: oxum (~oxum@106.203.207.2)
[18:55:40] *** Quits: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl) (Quit: The Lounge - https://thelounge.chat)
[18:55:55] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[18:56:19] *** Joins: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl)
[18:58:33] *** Joins: oxum (~oxum@106.203.207.2)
[18:59:55] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: bye!)
[19:00:36] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[19:03:21] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:04:35] *** Joins: oxum (~oxum@106.203.207.2)
[19:07:48] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:08:27] *** Joins: oxum (~oxum@106.203.207.2)
[19:08:49] *** Joins: siddhant_ (~Kundargi@45.112.144.181)
[19:09:50] *** Quits: siddhant_ (~Kundargi@45.112.144.181) (Client Quit)
[19:10:04] *** Joins: siddhant_ (~Kundargi@45.112.144.181)
[19:10:21] *** Quits: siddhant_ (~Kundargi@45.112.144.181) (Remote host closed the connection)
[19:11:23] *** Quits: me-sudoer-dentne (~Kundargi@45.112.146.61) (Ping timeout: 258 seconds)
[19:13:06] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 240 seconds)
[19:13:34] *** Joins: oxum (~oxum@106.203.207.2)
[19:15:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:16:48] *** Joins: fikran (~fikran@user/fikran)
[19:19:24] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:21:11] *** Joins: oxum (~oxum@106.203.207.2)
[19:24:26] <fikran> I have a program that crashes that prints out a fairly large stack trace, the top line of which is "fatal error: concurrent map iteration and map write". Is there a way to determine exactly which line this happens on?
[19:25:27] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:26:40] *** Joins: oxum (~oxum@106.203.207.2)
[19:28:12] *** Quits: ente_ (~ente@p200300dc5f34ec005771f8e422bb0c79.dip0.t-ipconnect.de) (Quit: WeeChat 3.2)
[19:29:21] *** Joins: ente_ (~ente@p200300dc5f34ec005771f8e422bb0c79.dip0.t-ipconnect.de)
[19:31:25] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:32:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 272 seconds)
[19:36:18] *** Joins: Snyp (~rksht@49.207.202.63)
[19:39:06] <rawtaz> fikran: i guess you need to look through the stack trace to see what the various goroutines are doing?
[19:40:23] *** Joins: oxum (~oxum@106.203.207.2)
[19:42:23] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[19:42:37] *** Joins: oxum (~oxum@106.203.207.2)
[19:49:23] *** Joins: elastic_dog (~elastic_d@ary207.neoplus.adsl.tpnet.pl)
[19:53:56] *** Quits: revolve (~u0_a227@82-132-244-238.dab.02.net) (Read error: Connection reset by peer)
[19:55:54] *** Joins: revolve (~u0_a227@82-132-247-23.dab.02.net)
[20:02:45] *** Quits: Snyp (~rksht@49.207.202.63) (Quit: WeeChat 3.2)
[20:04:39] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[20:08:58] <nevivurn> fikran: you could also try running (tests) with -race, it can show where the accesses occured.
[20:10:21] *** Quits: _rayke (rayke@user/rayke) (Quit: WeeChat 3.2)
[20:19:51] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:23:07] <Tv_> fikran: the stacktrace should give you that, though finding the relevant goroutines might be a needle-in-haystack scenario. i'd try finding "map" in the stack trace
[20:23:28] <Tv_> and yeah -race will detect it even more forcefully
[20:24:13] <Tv_> with just the normal detection, the other party might have already returned and not be visible in the stack trace, while -race retains more informatio
[20:24:13] <Tv_> n
[20:25:16] *** Joins: Rayke (rayke@user/rayke)
[20:26:38] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[20:28:28] *** Joins: jinie (~jimmy@188.114.173.37)
[20:29:35] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 250 seconds)
[20:35:24] *** Joins: codebam (~codebam@user/codebam)
[20:43:05] *** Quits: strudl (~strudl@user/strudl) (Quit: got milk?)
[20:43:15] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[20:43:39] *** Joins: strudl (~strudl@user/strudl)
[20:44:47] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[20:45:15] *** Quits: sweb (~sweb@static.187.181.76.144.clients.your-server.de) (Ping timeout: 252 seconds)
[20:45:18] *** Quits: fmac (~fmac@hel1-1.fmac.xyz) (Ping timeout: 258 seconds)
[20:45:23] *** Quits: holgersson (~quassel@user/holgersson) (Quit: No Ping reply in 180 seconds.)
[20:46:21] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[20:46:30] *** Quits: cultpony (~cultpony@user/cultpony) (Quit: ZNC 1.8.2 - https://znc.in)
[20:46:48] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[20:47:15] *** Joins: fmac (~fmac@hel1-1.fmac.xyz)
[20:47:39] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[20:47:45] *** Joins: cultpony (~cultpony@user/cultpony)
[20:49:03] *** Joins: holgersson (~quassel@user/holgersson)
[20:49:38] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[20:50:45] *** Quits: acid (~acid@user/acid) (Ping timeout: 252 seconds)
[20:51:02] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[20:51:07] *** Joins: oxum (~oxum@106.203.207.2)
[20:51:17] *** Joins: sweb (~sweb@static.187.181.76.144.clients.your-server.de)
[20:51:20] *** Joins: ryaeiin[m] (~ryaeiinma@2001:470:69fc:105::d1fa)
[20:51:40] *** Parts: ryaeiin[m] (~ryaeiinma@2001:470:69fc:105::d1fa) ()
[20:53:25] *** Quits: fmac (~fmac@hel1-1.fmac.xyz) (Ping timeout: 250 seconds)
[20:54:21] *** Joins: fmac (~fmac@hel1-1.fmac.xyz)
[20:54:42] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:55:37] *** Joins: acid (~acid@user/acid)
[20:55:54] *** Quits: oxum (~oxum@106.203.207.2) (Ping timeout: 240 seconds)
[20:59:01] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[20:59:13] *** Quits: strudl (~strudl@user/strudl) (Quit: got milk?)
[21:00:01] *** Joins: strudl (~strudl@user/strudl)
[21:03:56] *** Joins: fef (~thedawn@user/thedawn)
[21:08:07] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[21:09:05] *** Joins: prophet60091__ (~prophet60@87.122.100.181)
[21:12:08] *** Quits: prophet60091_ (~prophet60@87.122.108.1) (Ping timeout: 258 seconds)
[21:12:16] *** Joins: Ryaeiin (~Ryaeiin@45.144.113.102)
[21:13:16] *** Quits: Ryaeiin (~Ryaeiin@45.144.113.102) (Client Quit)
[21:13:35] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[21:15:29] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[21:18:49] *** Quits: cultpony (~cultpony@user/cultpony) (Quit: ZNC 1.8.2 - https://znc.in)
[21:18:57] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Client Quit)
[21:18:59] *** Quits: fmac (~fmac@hel1-1.fmac.xyz) (Ping timeout: 250 seconds)
[21:19:55] *** Joins: cultpony (~cultpony@user/cultpony)
[21:20:14] *** Joins: fmac (~fmac@hel1-1.fmac.xyz)
[21:20:44] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[21:21:38] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[21:23:10] *** Quits: acid (~acid@user/acid) (Ping timeout: 256 seconds)
[21:24:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[21:24:37] *** Joins: src (~src@user/src)
[21:26:07] *** Joins: fikran (~fikran@user/fikran)
[21:26:35] *** Joins: Ryaeiin (~Ryaeiin@45.144.113.102)
[21:27:14] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-122.prtc.net)
[21:27:34] *** Quits: Ryaeiin (~Ryaeiin@45.144.113.102) (Client Quit)
[21:28:37] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95)
[21:28:50] *** Joins: acid (~acid@user/acid)
[21:30:50] *** Joins: Ryaeiin (~Ryaeiin@185.187.243.234)
[21:32:42] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[21:33:04] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[21:37:56] *** Quits: mohan43u (~mohan@user/mohan43u) (Ping timeout: 252 seconds)
[21:39:19] *** Joins: mohan43u (~mohan@user/mohan43u)
[21:42:54] *** Joins: toretto (~0xe3b7@ca1-1.azirevpn.net)
[21:43:57] *** Quits: toretto_ (~0xe3b7@45.15.16.60) (Ping timeout: 258 seconds)
[21:44:04] *** Joins: zutt (~zutt@user/zutt)
[21:44:52] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[21:46:24] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Ping timeout: 256 seconds)
[21:46:54] *** Joins: Pies (~Pies@314es.pl)
[21:48:03] *** Quits: Ryaeiin (~Ryaeiin@185.187.243.234) (Quit: Quit)
[21:54:26] *** Quits: toretto (~0xe3b7@ca1-1.azirevpn.net) (Quit: leaving)
[21:56:42] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:58:09] *** Joins: Vukan (~drazen@2a02:587:d413:d6a:9ae5:e703:6028:b3d5)
[21:59:28] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[21:59:58] *** Joins: f8l12 (~f8l12@191.96.227.79)
[22:06:15] *** Joins: Ryaeiin (~Ryaeiin@45.144.113.102)
[22:06:54] *** Joins: norbinaa (~be3uykpy@2a00:a040:19a:b060:bdca:40bb:31ac:38e0)
[22:09:58] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[22:10:02] *** Quits: Ryaeiin (~Ryaeiin@45.144.113.102) (Client Quit)
[22:10:42] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef) (Ping timeout: 272 seconds)
[22:11:02] *** Joins: fef (~thedawn@user/thedawn)
[22:13:04] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[22:20:10] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[22:20:19] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[22:25:08] *** Quits: dza (~dza@user/dza) (Read error: Connection reset by peer)
[22:26:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[22:27:59] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d872:f90:6e12:f95) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:28:26] *** Joins: dza (~dza@user/dza)
[22:28:31] *** Joins: jinie (~jimmy@188.114.173.37)
[22:35:31] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:49:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:02:48] *** Quits: Vukan (~drazen@2a02:587:d413:d6a:9ae5:e703:6028:b3d5) (Ping timeout: 276 seconds)
[23:18:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-122.prtc.net) (Ping timeout: 246 seconds)
[23:22:08] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:34:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 276 seconds)
[23:34:23] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Remote host closed the connection)
[23:35:26] *** Joins: fikran (~fikran@user/fikran)
[23:36:54] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Ping timeout: 256 seconds)
[23:37:22] *** Joins: oxum (~oxum@106.203.207.2)
[23:38:51] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:39:41] *** Joins: Atque (~Atque@user/atque)
[23:40:21] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[23:44:16] *** Joins: oxum (~oxum@106.203.207.2)
[23:45:47] *** Quits: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar) (Ping timeout: 258 seconds)
[23:47:15] <fikran> My code is crashing, but I do not know where. The stack trace scrolls across the screen wayyyy too fast and I cannot figure out what is what.
[23:47:20] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[23:47:29] <fikran> I have a pretty good idea about what the issue is, but I do not know where.
[23:48:12] *** Quits: fmac (~fmac@hel1-1.fmac.xyz) (Remote host closed the connection)
[23:48:34] *** Joins: fmac (~fmac@hel1-1.fmac.xyz)
[23:48:56] *** Joins: oxum (~oxum@106.203.207.2)
[23:50:59] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[23:52:51] *** Joins: independent_ (~independe@156.red-193-153-27.dynamicip.rima-tde.net)
[23:53:28] *** Quits: oxum (~oxum@106.203.207.2) (Remote host closed the connection)
[23:55:00] *** Joins: oxum (~oxum@106.203.207.2)
[23:57:29] *** Joins: hexfive (~eric@50.35.83.177)
[23:57:39] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
