[00:06:13] <shka> damn, rubel made quite a recovery
[00:06:37] <shka> could get 50% yield when buying at the dip and selling now
[00:13:00] <waleee> the trade volume for ruble<->euro and ruble<->usd is probably quite low so any transaction might have a large impact on the price
[00:13:48] <waleee> google claims ruble->usd volume was 775, compared to the daily 20/50-day average of 54300 - 64623
[00:17:38] <shka> oh, so essentially everybody who had ruble and could sold them, already did that
[00:17:46] <waleee> shka: eg the ruble has lost about 25% of it's value against the Swedish krona (SEK) since 2022-02-25
[00:18:13] <waleee> and has a continuing downwards trend, albeit more slowly than in the beginning
[00:20:44] <waleee> shka: heh, I looked at the wrong row, https://www.poundsterlinglive.com/data/currencies/usd-pairs/USDRUB-exchange-rate/ claims 0 trades
[00:20:45] -ixelp- USD/RUB: Today’s Live Exchange Rate Data, Chart, Statistics, Spreads, Volumes and Historical Comparisons
[00:20:57] <shka> yeah, about right
[00:25:57] <waleee> but you could still bet on Chinese purchases of/in ruble
[00:30:41] <waleee> or the more risky "Putin decides to backdown/is deposed without turmoil of Russian financial institutions"-scenario
[00:49:56] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 245 seconds)
[00:50:16] *** Joins: lisp123 (~lisp123@120.154.103.52)
[00:50:46] *** Quits: Brucio-61 (~Brucio-35@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[00:54:42] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 252 seconds)
[01:12:07] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[01:12:17] *** Joins: Brucio-61 (~Brucio-35@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[01:14:13] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[01:18:36] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[01:20:03] <selwyn> in the market for a new mouse
[01:32:06] *** Joins: random-nick (~random-ni@87.116.167.125)
[01:34:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[01:35:59] *** Joins: aeth (~aeth@user/aeth)
[01:56:32] <waleee> lol got a youtube-ad by the israeli "iron dome"-manufacturer
[02:23:10] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[02:23:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[02:23:44] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[02:30:46] <semz> what's their pitch?
[02:31:48] * hayley wonders about putting out a $100 bounty for the first bug found in production code written in Jai. Wouldn't that be funny.
[02:37:27] <hayley> Not that I really want to throw away $100, on the other hand.
[02:53:08] <hayley> https://twitter.com/BadMedicalTakes/status/1504236318074851330 lmao
[03:07:00] <Gnuxie> chromosomes 
[03:07:36] <hayley> I need you to pee in the cup so I can get the DNA analysed so I can use the right pronouns
[03:08:06] <Gnuxie> peeNA
[03:08:36] <Gnuxie> vaccination 
[03:08:50] <Gnuxie> have these people ever seen a chromosome 
[03:09:24] <Gnuxie> how do i know chromosomes are real ? 
[03:09:38] <hayley> https://www.youtube.com/watch?v=T2u6B2bSrkk
[03:09:38] -ixelp- Elvis Costello - Less Than Zero (Static Video) - YouTube
[03:09:46] <hayley> MINUSP
[03:10:39] <Gnuxie> hold up
[03:10:51] <Gnuxie> i need you to take a DNA test before we go on a date 
[03:32:00] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:42:10] <moon-child> gilberth: ah, found it again!  https://www.brow.sh/ was the textual firefox backend I mentioned a while ago
[03:42:11] -ixelp- Browsh
[03:45:13] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[03:53:55] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 268 seconds)
[03:56:41] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[03:58:52] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[04:23:22] <atw> thoughts on ARM MTE?
[04:29:48] <hayley> Stop using C.
[04:30:37] <hayley> I use low level languages like Lisp, and I don't get any hardware acceleration for runtime safety, but C people do. No fair.
[04:41:05] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[04:42:18] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[04:47:27] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:59:08] * hayley grabbing sources for this article.
[04:59:27] <hayley> "Dynamic [languages] and GC are actually features [...] I think it's fine for people who are not professional programmers [...] who are not making system software, and probably not interactive software." - Jon Blow, while typing into Emacs, an interactive editor.
[05:03:53] <atw> MTE would be of no use to a lisp implementation?
[05:03:54] <hayley> https://social.xenofem.me/notice/AHUJJe4hCfjGBcuysy The fourth person to make the node-fun-allowed joke.
[05:04:21] <moon-child> what place did I get?
[05:04:29] <hayley> Well, it could help if you decide to (declare (optimize (safety 0))), but you better not.
[05:05:27] <hayley> moon-child: You're not in my logs. But IIRC it went someone outside #lispcafe, aeth, epony, and now this gal.
[05:05:54] <moon-child> in pcj at some point, I said 'personally, I find deno to be the most fun package manager' or something like that
[05:06:02] <moon-child> can't find it now, might have deleted it
[05:06:33] <hayley> The count is probably wrong, nonetheless. But I think I last gave a "Congratulations!" message to the third person.
[05:07:35] <hayley> Shit, stylewarning was fourth already <https://twitter.com/stylewarning/status/1417722521567170570>
[05:08:48] <sm2n> pcj?
[05:09:02] <hayley> According to https://ccl.clozure.com/irc-logs/scheme/scheme-2019-11.txt notzmv/zmv took up the name once.
[05:09:18] <hayley> sm2n: r/programmingcirclejerk
[05:09:26] <sm2n> oh
[05:10:58] <sm2n> <https://twitter.com/bantg/status/1504213698658938881> It appears there has been another major supply chain failure in javascript land
[05:11:51] <moon-child> lol
[05:12:05] <sm2n> Seems to be targeting windows users though... <https://github.com/RIAEvangelist/peacenotwar/blob/main/index.js>
[05:12:06] -ixelp- peacenotwar/index.js at main · RIAEvangelist/peacenotwar · GitHub
[05:16:51] <hayley> Maybe my "ocap == less supply chain bogosity" marketing idea isn't so bad.
[05:18:07] <sm2n> No, that's a good idea
[05:21:59] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[05:23:32] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:24:04] <hayley> This article I am writing is going to contain a lot of brilliant irony, by the looks of things.
[05:36:10] *** Joins: occ (~occ@user/occ)
[05:36:51] <occ> is there a channel on ltk ?
[05:44:15] <GreaseMonkey> "The authors of node-ipc have pushed malware in an update, which wipes your disk if you happen to have Russian or Belorussian IP address." oh come on, you should only do that if you can confirm it's running on the Kremlin network
[05:44:24] <GreaseMonkey> otherwise you're just fucking over civilians
[05:45:11] <hayley> I will refrain from mentioning that this is how sanctions usually work.
[05:45:38] * hayley has been accused of smurfing in online classes
[05:50:26] <moon-child> smurfing?
[05:50:29] <moon-child> painting yourself blue?
[05:51:04] <GreaseMonkey> it's only smurfing if you've done the exact classes already
[05:51:14] <hayley> Smurfing in a game with a ranking system is usually used to mean that you use an account with a low rank, to easily win at games.
[05:51:39] <GreaseMonkey> in this case, you're trying to get a qualification you don't already have yet
[05:51:56] <GreaseMonkey> you've got the knowledge, and now you're getting the BS compliance
[05:52:30] <hayley> Right.
[05:56:30] <hayley> "Your clock is 10 minutes and 45.3 seconds ahead." Shit, that bad these days.
[05:58:51] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[06:00:37] *** Joins: aeth (~aeth@user/aeth)
[06:09:20] *** Joins: Inline__ (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de)
[06:12:13] *** Quits: Inline (~Inline@p200300cd470a26002e72b25ea400e9f0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:16:26] <sm2n> If they don't like it they should just give the degree directly
[06:17:08] <hayley> Accused by another student, who doesn't give out degrees, unfortunately.
[06:17:35] <sm2n> Tell them to go petition the administration then
[06:18:28] <hayley> Maybe a better move, sure.
[06:19:14] <sm2n> Who knows, maybe they will succeed and you will be free
[06:22:36] * hayley writes a program in this god-awful stack language she is critiquing, and she has already decided the value of this is less than zero.
[06:23:11] <hayley> But I need to write the program to show that an interpreter is slower than even a stupid translator (translating one instruction to a bunch of x86-64 instructions).
[06:25:25] <hayley> Maybe I should not have used recursive fib() as I usually do, because this does not seem too kind to recursion.
[06:29:58] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[06:33:58] *** Quits: occ (~occ@user/occ) (Ping timeout: 250 seconds)
[06:36:51] *** Joins: occ (~occ@user/occ)
[06:58:58] <hayley> "error: ‘for’ loop initial declarations are only allowed in C99 or C11 mode" Seriously, who the fuck decided this couldn't even be a C99 program?
[07:02:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[07:06:08] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:07:02] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[07:09:15] *** Joins: lisp123 (~lisp123@120.154.103.52)
[07:11:37] <waleee> yikes c89? so "int i = ... ; for(use_i_here)" ?
[07:11:45] <hayley> Yes.
[07:12:03] <hayley> There are also comments telling Clang to stop complaining about linting, so it is hardly old code. wtf
[07:12:35] <kakuhen> <GreaseMonkey> ""The authors of node-ipc have..." <- this gets allowed but the colors.js guy deleting his library after being fed up with corporations leeching off his free work ends up being slammed and his github account suspended
[07:13:09] <kakuhen> i guess it's ok to screw over people, but not corporations
[07:13:32] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[07:14:32] <hayley> Seems I got it working now. Whew.
[07:14:59] <hayley> I only had to modify the code to print the stack after every instruction, because I sure as hell am not inserting breakpoints everywhere, and the "traceback" after a crash is useless.
[07:15:00] <waleee> microsoft probably decided to take a passive-aggressive stance on certain declamations by Putin about legalized piracy & nationalization of their property in Russia
[07:15:26] <hayley> "error: C++ style comments are not allowed in ISO C90" Very funny, now which standard is this?
[07:15:38] <hayley> It is indeed C89.
[07:15:38] <kakuhen> the one nobody follows ;)
[07:15:41] <waleee> the /* */ I assume?
[07:15:56] <hayley> Using //
[07:16:05] <waleee> eh what
[07:16:29] <gilberth> hayley, if your code is C99 why don't you tell your compiler it is?
[07:16:33] <hayley> Aha, so fib(20) takes like 550ms on this VM. Good.
[07:16:51] <hayley> gilberth: It's not my code, but I am hacking on it, and I have never checked what C89 doesn't have.
[07:17:09] <hayley> Most people are sane and wouldn't explicitly tell Clang to use --std=c89.
[07:17:20] <gilberth> Yes, and why C89?
[07:17:31] <hayley> I have no idea.
[07:17:48] <hayley> Most of this VM is downright masochistic, and I guess using C89 would keep with the theme.
[07:17:50] <kakuhen> people have a hard-on for ANSI C and I do not know why
[07:18:10] <kakuhen> i think objective-c used c89 up until obj-c 2.0 became a thing in 2011
[07:18:17] <kakuhen> then they finally started using c99
[07:18:44] <gilberth> hayley: Well. Whatever it is what you are trying to do. At least it doesn't seem to be K&R C.
[07:18:45] <hayley> Okay, and fib(20) takes 146.8 microseconds to run in SBCL, with real arithmetic and not (mod 2¹⁶).
[07:19:06] <hayley> gilberth: I'm trying to demonstrate the point that this VM is literally a waste of hardware.
[07:19:38] <kakuhen> imagine not having a proper numeric tower in (get-decoded-time)
[07:19:46] <gilberth> Yes, and what has the VM to do with olde C?
[07:19:53] <kakuhen> err sorry, #.`(get-decoded-time)
[07:20:08] <hayley> The VM is written in C89.
[07:20:18] <hayley> No backquote, just #.(get-decoded-time)
[07:20:28] <gilberth> kakuhen: Do you mean GET-UNIVERSAL-TIME?
[07:20:28] <kakuhen> right
[07:20:34] <moon-child> pre-c11 is not suitable for writing production software
[07:20:36] <moon-child> no memory model
[07:20:37] <moon-child> :^)
[07:20:39] <kakuhen> no because that gives me seconds and not year
[07:20:39] <hayley> We get the damn joke, okay?
[07:20:58] <hayley> Year would be #.(nth-value 5 (get-decoded-time))
[07:20:58] <dave0> hayley: is fib(20)==6765 ?
[07:21:04] <kakuhen> or i can just give all values
[07:21:07] <gilberth> Anyhow, I actually would prefer that GET-UNIVERSAL-TIME would return a rational. :-)
[07:21:09] <kakuhen> it includes teh year so itworks
[07:21:10] <hayley> dave0: Yes.
[07:21:11] <moon-child> dave0: depends, where do you count from?
[07:21:26] <moon-child> and, does your sequence start with 0 or 1?
[07:21:28] <dave0> int fib(int a) { if(a==0) return 0; if(a==1) return 1; return fib(a-2)+fib(a-1); } printf("%d ", fib(20));
[07:21:28] <hayley> You're welcome to nitpick after I've written my article.
[07:21:47] <gilberth> #,(get-universal-time) would have something else :-p
[07:22:04] <kakuhen> hayley reminds me of a friend of mine, he is in his 2nd quarter ever at uni and he's taking all grad classes
[07:22:09] <moon-child> three different fib variants?: fib(0)=0 fib(1)=1; fib(0)=1 fib(1)=1; fib(1)=0 fib(2)=1
[07:22:12] <kakuhen> He was in homological algebra with me this quarter...
[07:22:18] <kakuhen> 1st year student
[07:22:27] <hayley> fib(0) = 0, fib(1) = 1, fib(n) = fib(n-1) + fib(n-2)
[07:23:21] * hayley thinks again
[07:23:32] <hayley> Dammit, this assembler only takes hexadecimal values, and #x20 ≠ 20. Elementary.
[07:24:31] <hayley> SBCL takes 50ms instead. Still a factor 10, and SBCL is doing its arithmetic properly.
[07:27:47] <gilberth> 50ms for (FIB 20)?
[07:27:51] <hayley> GCC appears to...inline recursive calls to fib() by some amount?
[07:28:01] <hayley> For (fib #x20) i.e. (fib 32)
[07:30:02] <gilberth> Ah, right you said SBCL. That's supposed to be slow then.
[07:30:16] <hayley> Very funny.
[07:30:36] <gilberth> Well, my CCL is a bit faster with FIB than my SBCL.
[07:31:04] <hayley> Well, the point is "this shit VM vs an optimising compiler", so I will use an actually optimising compiler, and thus GCC.
[07:31:33] <gilberth> Anyhow, a factor of ten isn't that bad for an VM.
[07:31:42] <waleee> wonderfully vague sometimes, "optimising"
[07:32:15] <hayley> It's more like a factor 100, as I had predicted earlier.
[07:32:18] <gilberth> As when I compile fib with gcc, I get less than 1\tau per function call. Hard to beat with any VM.
[07:32:41] <hayley> Note that the VM only has 16-bit ints, so I consider a C compiler fair game.
[07:32:58] <hayley> Yes, gcc seems to inline to some depth, if you look at the disassembly.
[07:33:28] <moon-child> there is closed-form fib, right?
[07:33:34] <moon-child> does that count? :P
[07:33:44] <hayley> Very funny (again).
[07:34:18] <gilberth> Still, in my experience I could expect like 400 VM-MIPS on my 3.6GHz machine. The fastest I have seen is 800MIPS with my B32 emulator, which is as a trivial ISA as you can get.
[07:35:50] <gilberth> Therefore a factor of ten would be ok. But you said it's 100.
[07:36:24] <gilberth> Not even CLISP is that slow when compared with CCL.
[07:36:39] * hayley goes to check CFLAGS.
[07:36:59] *** Joins: occ (~occ@user/occ)
[07:37:21] <hayley> They believe in -Os rather than -O2 or something. Should I fix it for this benchmark?
[07:37:44] <hayley> Doesn't seem to help anyway.
[07:38:29] * gilberth scratches head.
[07:39:08] *** Joins: semz_ (~semz@user/semz)
[07:41:34] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:41:35] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[07:43:42] * gilberth has a hard time remembering WordStar key bindings.
[07:44:55] <hayley> The spec for this VM is useless, too. So I get to find out what these instructions mean while I test my macros for translating it to x86-64 assembly.
[07:55:49] <gilberth> I get a factor of about 20 when using Turbo Pascal and CP/M-80. But then, stack relative addressing with the 8080 is a real pain.
[07:56:08] <gilberth> And Turbo Pascal isn't an optimizing compiler.
[07:58:03] <gilberth> One could try an PDP-11 emulator.
[08:09:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:11:25] <gilberth> Or find a MSP430 emulator and use gcc to compile the program. That's a riscy 16-bit CPU.
[08:16:08] <GreaseMonkey> -O3 -flto is where it's at
[08:16:19] <GreaseMonkey> actually, -Ofast
[08:16:23] <GreaseMonkey> and of course -flto
[08:21:08] <moon-child> pls no -ffast-math -ffp-contract=on
[08:23:08] <hayley> Okay, my translation finally works, and it takes around 85ms. A little over 5x faster.
[08:37:15] <hayley> Using simulated 32-bit arithmetic for the result also drops the VM speed down like 4x. Lovely.
[08:39:20] <hayley> So, 390× slower than C. Probably worse than CPython, even.
[08:46:59] * dave0 freshens everyone's coffee
[08:55:33] <hayley> "It is also argued that this virtual machine can be simulated with pen and paper. A human computer would have to simulate "paging" and try to only keep memory that has been used in the computation on the paper."
[08:56:31] * hayley doesn't struggle to make puns in this article, either.
[08:57:25] *** Joins: lisp123 (~lisp123@120.154.103.52)
[09:01:44] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[09:08:06] *** Joins: razetime (~quassel@117.193.3.115)
[09:08:46] <ck_> mm coffee
[09:18:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:20:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:20:32] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[09:34:38] <hayley> "As so far this company has running for 52 year(s) 88 days." Hm, someone compared to Unix epoch?
[09:42:44] <hayley> I should also note that this VM stack only really has 8-bit integers. You can push a 16-bit integer, and then diddle the 8 bits that are on the top of the stack. So it's closer to an unfortunate RISC than Forth, to me. At least all Forth integers are "atomic".
[09:52:31] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[09:52:53] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[10:03:51] *** Joins: occ (~occ@user/occ)
[10:06:51] <hayley> Also, of note, I would expect that simulating larger words in the host language, so that the VM has larger words, is faster than the program trying to simulate larger words in the simulated environment, since it at least saves on instruction dispatch. No?
[10:08:16] <hayley> In our case, it would also reduce the amount of data stack motion, because this is a stack machine.
[10:14:02] *** Quits: razetime (~quassel@117.193.3.115) (Ping timeout: 240 seconds)
[10:22:10] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[10:37:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[10:38:32] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[10:41:56] *** Joins: occ (~occ@user/occ)
[10:45:35] *** Joins: lisp123 (~lisp123@120.154.103.52)
[10:50:21] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 252 seconds)
[10:52:01] *** Joins: Bakerposting (~Bakerpost@n122-104-71-229.sun4.vic.optusnet.com.au)
[11:09:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:17:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[11:18:17] <hayley> Apparently <http://cwe.mitre.org/data/definitions/190.html> is only the twelfth worst sort of bug, well after memory mismanagement and string injection. But it is classified as "Language-Independent" when...well, try to overflow a bignum.
[11:18:18] -ixelp- CWE - CWE-190: Integer Overflow or Wraparound (4.6)
[11:20:38] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[11:31:08] <hayley> You know, I thought this VM wasn't dangerous enough; you could achieve arbitrary code execution, and then you'd just hose the VM. So they decided to add a filesystem API too. You're just running a C program at this point.
[11:35:25] *** Joins: shka (~herr@109.231.3.55)
[11:45:48] <GreaseMonkey> at least a filesystem API can be sandboxed
[11:47:32] <hayley> I guess you can, but it'd be outside the VM.
[11:48:00] <hayley> .oO( Ambient authority, ambient authority everywhere )
[12:08:55] *** Quits: occ (~occ@user/occ) (Read error: Connection reset by peer)
[12:17:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[12:19:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:28:31] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[12:42:13] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:42:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:49:19] *** Joins: rogersm (~rogersm@90.166.180.250)
[13:18:22] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:24:12] <lisp123> web3 any good?
[13:25:03] <hayley> No good.
[13:25:36] <lisp123> thx
[13:25:43] <lisp123> wont waste my time looking into it
[13:25:45] <hayley> ywlcm
[13:25:48] <shka> web3 is not just bad, it is actually evil
[13:26:11] *** Joins: kevingal (~quassel@37.228.248.44)
[13:26:36] <lisp123> shka: because of tokens?
[13:28:07] <shka> more or less
[13:28:32] <lisp123> +1
[13:28:40] <shka> digital scarcity, ads everywhere, and slapping $$$ on fucking everything
[13:28:57] <shka> only corporate shills would want that
[13:29:19] <shka> refuse, resist
[13:29:52] <lisp123> for sure
[13:30:07] <shka> https://www.youtube.com/watch?v=6ODNxy3YOPU
[13:30:08] -ixelp- Sepultura - Refuse/Resist [OFFICIAL VIDEO] - YouTube
[13:30:08] <lisp123> im sick of google already - every single news article is behind a paywall now
[13:30:28] <lisp123> time to go back to the old ways where eveyrone has a homepage and links to their favourite blogs
[13:31:02] <ck_> maybe with rss feeds! you could aggregate them with google reade..oh.
[13:36:20] <selwyn> we have to return
[13:36:48] <shka> to forever?
[13:37:21] <shka> https://www.youtube.com/watch?v=6ETla9zs5SI
[13:37:22] -ixelp- Return to Forever - The Romantic Warrior HQ - YouTube
[13:37:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[13:40:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:49:58] <moon-child> a thought: not only did _the birth and death of yavascript_ correctly predict the death of 'native binaries' (still waiting for that to come to fruition), it also correctly predicted that 'war was happening'
[13:50:10] <selwyn> death of javascript?
[13:50:20] <ck_> baba yagascript
[13:51:33] <moon-child> https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript  birth and death of yavascript
[13:51:34] -ixelp- The Birth & Death of JavaScript
[14:01:24] <selwyn> https://www.timeout.com/news/a-lost-atlantis-is-about-to-be-uncovered-off-the-yorkshire-coast-031622
[14:01:24] -ixelp- A Lost ‘Atlantis’ Is About to be Uncovered Off the Yorkshire Coast
[14:15:27] <Gnuxie> uwu
[14:16:24] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[14:16:37] <Gnuxie> aww
[14:16:42] <Gnuxie> i thought it was going to rise out of the sea
[14:17:55] <hayley> I think the rising sea level makes the opposite happen.
[14:18:00] <shka> selwyn: js death?
[14:18:31] <selwyn> i thought moon-child said it died
[14:18:34] <selwyn> got my hopes up
[14:18:55] <shka> That is not dead which can eternal lie,
[14:19:02] <shka> And with strange aeons even death may die.
[14:19:16] <shka> matches cobol more actually 
[14:20:11] <shka> or java in next 20 years
[14:20:19] <selwyn> i don't know what deal with the devil we would have to do
[14:20:24] <selwyn> to kill off js
[14:21:23] <moon-child> would the devil willingly kill off his own creation?
[14:25:06] <shka> js https://www.youtube.com/watch?v=QBN2gBHk9Xs
[14:25:06] -ixelp- You Can't Fix This - YouTube
[14:25:47] * hayley off to job interview
[14:25:51] <moon-child> good luck
[14:25:53] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[14:25:54] <shka> hayley: good luck
[14:26:01] <shka> let us know how i went
[14:26:07] <shka> *it went
[14:26:13] <hayley> 🤔
[14:26:38] *** Joins: rogersm (~rogersm@90.166.180.250)
[14:26:49] * hayley enjoys testing headphones with https://www.youtube.com/watch?v=_Xn_s8Wh8jQ
[14:32:56] *** Quits: kevingal (~quassel@37.228.248.44) (Remote host closed the connection)
[14:36:23] <edgar-rft> headphone -> https://teensy.info/8nuIIWI5ij
[14:42:45] *** Joins: razetime (~quassel@117.207.19.145)
[14:43:19] *** Joins: random-nick (~random-ni@87.116.176.196)
[14:49:35] * hayley back
[14:55:45] <shka> that was quick
[14:55:47] <shka> just hr?
[14:56:01] <hayley> Yes.
[14:56:45] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[15:03:22] *** Quits: razetime (~quassel@117.207.19.145) (Ping timeout: 260 seconds)
[15:03:56] *** Joins: razetime (~quassel@117.207.19.145)
[15:05:12] * hayley continues listening to Pink Floyd 5.1 downmixes with fancy headphones
[15:06:30] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:15:08] <shka> https://www.youtube.com/watch?v=75QZBFZBCKE
[15:15:08] -ixelp- The Return - YouTube
[15:26:27] *** Quits: razetime (~quassel@117.207.19.145) (Ping timeout: 252 seconds)
[16:03:49] <hayley> https://www.dgmlive.com/news/robert-fripp-exposures-32-discs-boxed-set-robert-fripp-studio-live-1977-1983
[16:03:50] -ixelp- Exposures 1977 - 1983
[16:10:48] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[16:39:36] *** Joins: razetime (~quassel@117.254.35.217)
[16:54:07] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[17:29:39] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:40:12] *** Quits: razetime (~quassel@117.254.35.217) (Ping timeout: 240 seconds)
[17:40:46] *** Joins: razetime (~quassel@117.254.35.21)
[17:47:59] *** semz_ is now known as semz
[17:48:06] *** Quits: razetime (~quassel@117.254.35.21) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:11:47] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[18:17:35] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:28:17] *** Joins: razetime (~quassel@117.254.35.21)
[18:41:39] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com)
[18:51:33] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[18:52:55] *** Quits: razetime (~quassel@117.254.35.21) (Ping timeout: 256 seconds)
[18:53:29] *** Quits: X-Scale (~ARM@89.214.146.27) (Ping timeout: 256 seconds)
[18:53:29] *** X-Scale` is now known as X-Scale
[18:54:06] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:58:54] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[19:05:43] <shka> https://www.youtube.com/watch?v=tdBFSfz8WmY
[19:05:44] -ixelp- Watch NASA rollout their newest and most powerful rocket, SLS! - YouTube
[19:05:49] <shka> woohoo
[19:07:52] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:07:54] *** Joins: razetime (~quassel@117.207.19.145)
[19:07:56] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[19:08:36] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:09:06] *** Joins: X-Scale` (~ARM@89.214.146.79)
[19:09:15] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[19:09:42] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[19:09:43] *** X-Scale` is now known as X-Scale
[19:09:58] <pjb> shka: let's hope it doesn't fall or break. $4e9 a piece…
[19:25:47] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Remote host closed the connection)
[19:26:29] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com) (Remote host closed the connection)
[19:27:31] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:39:19] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:49:52] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:50:03] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[20:25:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[20:27:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:35:19] <gilberth> Good morning #lispcafe!
[20:38:10] <shka> gilberth: hi!
[20:45:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:47:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:53:42] *** Quits: razetime (~quassel@117.207.19.145) (Ping timeout: 252 seconds)
[20:59:51] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:07:00] <sham1> $TIME_OF_DAY to you too gilberth!
[21:13:30] <ck_> greeting. mention of weather. inquiry about personal reference
[21:18:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:20:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:27:41] *** Joins: rogersm (~rogersm@90.166.180.250)
[21:50:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:51:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[21:52:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:57:05] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[22:06:41] *** Inline__ is now known as Inline
[22:06:51] *** Quits: Inline (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de) (Quit: Leaving)
[22:26:07] <gilberth> Hmm, when I say "struct { unsigned x:4; } s; s.x = 15; s.x++;" does "s.x" have a defined value then?
[22:27:06] <ck_> have I missed something in C? what does "unsigned x:4;" mean
[22:27:32] <gilberth> It's an unsigned integer four bits wide.
[22:28:24] <ck_> oh right, 'bit fields', of course
[22:28:27] <gilberth> You could have that in structs. The expectation is that these are packed then.
[22:29:03] <gilberth> I am too lazy to read the spec and was hoping somebody would know.
[22:32:12] <gilberth> And I was wondering. Because intN_t is optional, yet we have those bit fields, which perhaps mean the same thing.
[22:33:58] <ck_> I see no explicit mention of overflow behaviour in https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.233.708
[22:33:59] -ixelp- CiteSeerX — 6.7.2.1 Structure and union specifiers
[22:35:52] <gilberth> Curious document you have there.
[22:38:48] *** Joins: Inline (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de)
[22:42:06] <gilberth> C11 doesn't say much in the chapter about structs. All it says "an integer type of the specified number of bits". Hmm.
[22:44:32] <ck_> let's say it isn't defined by spec, what could possibly happen in a fantasy implementation for your example?
[22:45:09] <ck_> what could possibly happen that doesn't make s.x be 0 after adding 1 to F, I mean
[22:48:41] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Ping timeout: 245 seconds)
[22:48:54] <gilberth> Well, it could be UB. When I take "of the specified number of bits" as having the range 0..2^n-1 then the conversion that happens at the assignment s.x = 16, would be defined. As the type conversion from 'unsigned int' to that bit field integer type would remove the extra range. Now: Is "remove range" defined?
[22:49:54] <gilberth> As "s.x++" is the same as "s.x = s.x + 1" and when the "+" is evaluated both side are first promoted to "unsigned int" yielding an "unsigned int" and then converted to the bit field integer type and finally stored.
[22:52:22] <gilberth> I must say that the ANSI CL standard is more accessible as terms are usually defined in the glossary. I mean, now I would have to figure out if "remove range" is the same as a modulus applied.
[22:52:53] <gilberth> If you're paranoid this could also mean clamping ;)
[22:54:30] <ck_> maybe things are a little more interesting with a signed field
[22:54:49] <gilberth> Ah, it says so in 6.3.1.5. You add or substract the maximum value of the type wanted to the value given until it is in range. That's modulus, isn't it? For unsigned at least.
[22:55:51] <ck_> "the maximum value of the type wanted"?
[22:56:01] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[22:56:38] <ck_> but wouldn't that mean you'd subtract 0x0F from 0x10 in your example
[22:56:49] <gilberth> ck_: For signed it is undefined. 6.3.1.5 §3 says so. "Otherwise, the new type is signed and the value cannot be represented in it; either the result is implementation-defined or an implementation-defined signal is raised."
[22:56:55] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:57:29] <semz> the standard says max+1, so it is just modulus
[22:57:30] <gilberth> ck_: "one more than the maxium value" it says. My bad.
[22:57:56] <semz> but huh? am I misreading this or did C11 outlaw the crazy "optimizations" that GCC/LLVM do based on signed overflow?
[22:58:32] <semz> hm no, it's in C99 too
[22:58:42] <gilberth> What kind of optimizations?
[22:59:22] <semz> The kind where for (int i = 0; i < i+1; ++i); is replaced with an infinite loop because signed overflow is UB and may therefore be assumed to never happen.
[22:59:27] <gilberth> Well, it was always the case that "unsigned x = -1" is undefined.
[22:59:42] <semz> unsigned x = -1; isn't undefined.
[23:00:20] <gilberth> It is. It says so in the section, I quoted. (6.3.1.3)
[23:01:08] <semz> "Otherwise, if the new type is unsigned, the value is converted by repeatedly adding or subtracting one more than the maximum value that can be represented in the new type until the value is in the range of the new type.49)"
[23:01:20] <semz> Unsigned types explicitly have wraparound semantics.
[23:01:31] <semz> (whether this is a good thing is a different matter...)
[23:01:39] <gilberth> Which type? The wanted type or the given type?
[23:02:19] <gilberth> I see. ok. I should read closer.
[23:03:37] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[23:03:59] <gilberth> Anyhow, I say that "struct { unsigned x:4; } s; s.x = 16;" is defined.
[23:05:05] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:06:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:06:53] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[23:09:05] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[23:12:17] *** Joins: aeth_ (~aeth@user/aeth)
[23:12:18] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[23:12:20] *** aeth_ is now known as aeth
[23:20:57] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:31:40] *** Joins: aeth_ (~aeth@user/aeth)
[23:31:41] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[23:31:43] *** aeth_ is now known as aeth
[23:38:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:51:04] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:51:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:51:52] <Lycurgus> i gotta conclude that lw 7.1.2 personal edition for linux 64 is broken
[23:52:03] <Lycurgus> but not with great confidence
[23:52:34] <Lycurgus> the thing that makes it look broken works on mac for same version
[23:53:26] <Lycurgus> and commercial vendors distributing broken linux version, especially when they have proliferated versions to cover is a well known thing
[23:57:45] <Lycurgus> sfaict it's only gui, but i suspect there may be threading issues even without it
[23:58:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:59:28] <gilberth> I wonder if LispWorks is also affected by this feature of macos to raise timeouts to 10s and more.
