[00:01:10] *** Quits: roadie (~user@2a02:8108:5a40:1d87:b850:c068:358c:507a) (Remote host closed the connection)
[00:01:35] *** Joins: roadie (~user@2a02:8108:5a40:1d87:b850:c068:358c:507a)
[00:06:37] *** Quits: roadie (~user@2a02:8108:5a40:1d87:b850:c068:358c:507a) (Ping timeout: 240 seconds)
[00:07:47] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[00:09:13] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[00:09:24] *** Joins: l__q (~modinfo@user/modinfo)
[00:12:40] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[00:14:02] <velix> TinoDidriksen: $pdo = null;
[00:14:12] <velix> TinoDidriksen: That's a usecase for finally
[00:14:59] <TinoDidriksen> If you open the connection in the same scope, which is extremely rare for databases.
[00:15:11] <velix> TinoDidriksen: to take care that the PDO connection opened in a function gets really closed.
[00:15:16] <velix> TinoDidriksen: I'm not using classes ;)
[00:15:36] <TinoDidriksen> That has nothing to do with classes.
[00:16:37] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Quit: Leaving)
[00:17:09] <velix> I'm opening a PDO connection a function. Since I don't know if it's closes, I'm just using finally{$pdo = null};
[00:17:11] <velix> doesn't hurt.
[00:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[00:19:47] <Blondie101010> your code must be very ugly for that to make sense
[00:20:05] <TinoDidriksen> Database connections are usually opened in much higher scope and passed down to functions/classes that need it.
[00:20:37] <velix> Blondie101010: Why do you ALWAYS have to complain about others code without seeing it?
[00:20:48] <velix> I think you're one of the biggest social losers I've seen in my hole life.
[00:20:54] <velix> Even covid doesn't touch you.
[00:21:00] <velix> idiot.
[00:21:01] <velix> please ban me
[00:21:05] *** Parts: velix (~velix@user/velix) (Leaving)
[00:21:11] <Blondie101010> hmm
[00:21:13] <TinoDidriksen> Wow
[00:21:50] <TinoDidriksen> Well, he asked for it, in multiple ways.
[00:49:41] <da_wunder> well cannot be sure what blondie said - I have ignored that nick a while ago, for similar reasons
[00:51:11] <Blondie101010> me too :/
[00:51:14] *** Parts: Blondie101010 (~Blondie10@user/blondie101010) (Closing Window)
[00:51:25] *** Joins: travisghansen (~travisgha@192.74.130.86)
[01:08:37] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:10:40] *** Quits: Bencraft (~Bencraft@user/Bencraft) (Quit: Ping timeout (120 seconds))
[01:11:01] *** Joins: Bencraft (~Bencraft@user/Bencraft)
[01:12:44] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Client Quit)
[01:20:11] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:25:32] *** Joins: seifeslimene (~seifeslim@102.156.51.21)
[01:28:39] <Robdgreat> why would someone ask to be banned when /part exists?
[01:33:08] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Strange women lying in ponds distributing swords is no basis for a system of government!)
[01:34:53] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4.1)
[01:35:10] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:40:03] <TML> No clue, but it seems pretty on-brand for how upset they got at such an innocuous comment
[01:50:47] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[01:51:34] <Nekomander> Indeed. They take it too personally when it's only the code being discussed, not them. LMAO.
[01:52:13] <mpldr_> what the hell was that exchange?
[01:52:50] <Nekomander> They do not seem to realize that variables in PHP stores a value which is an object ID, which them points to the actual object. PHP variables don't store the object itself. o_O
[01:53:32] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4.1)
[01:53:51] <Nekomander> As TinоDidriksen pointed out, it only works in same scope, especially if no other variables stores the object id.
[01:54:08] <mpldr_> and even then… nulling it is not the same as closing the connection
[01:55:08] <Nekomander> Exactly. The garbage collector would get to it, when it feels like doing so.
[01:56:18] <Nekomander> Not really much of a point of closing the connection if it's going to be a simple web page load. Compared to a long-running process that could benefit from closing and opening connections.
[01:57:02] <mpldr_> usually even in long running processes you don't really want to close the connection. reestablishing it takes more time
[01:57:56] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 272 seconds)
[02:00:09] *** Joins: malmalmal (~malmalmal@38.pool92-178-53.dynamic.orange.es)
[02:00:27] <Nekomander> Oh yeah, even so, closing connection in most software that depends on SQL DB would kill the entire point of the software.
[02:07:31] *** Parts: Bushmaster (~Goondog@user/bushmaster) (later folks)
[02:09:41] *** Joins: l__q (~modinfo@user/modinfo)
[02:15:52] <chozorho> Hey, I am having continued problems with installing mongodb for the right version of PHP on my web server... allow me to elaborate
[02:16:48] <chozorho> da_wunder nim helped me understand that the php cli profile is completely separate from the web-server profile, which makes sense. However...
[02:18:27] <chozorho> the problem still remains: how exactly am I supposed to install something *for the apache2 web server*, if the default install path uses my "php" cli file paths?
[02:19:09] <chozorho> I've been trying to invoke things like "pecl" and "pearl" to do this installation, and *sometimes* it claims to have succeeded...
[02:19:14] <da_wunder> your apache should not even know php cli
[02:19:32] <Albright> chozorho: What operating system are you using?
[02:20:00] <chozorho> this source was interesting too, but it didn't completely work for me: https://stackoverflow.com/questions/19561722/pecl-installs-for-previous-php-version
[02:20:25] <Albright> Okay, are you also using macOS/
[02:20:26] <da_wunder> in your apache you just use eg. mod_php and expose your application public directory (what you want to expose to public internet) in your apache site configuration
[02:21:00] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[02:21:13] <chozorho> Albright nim, it's a debian server, version um, I think it's Debian 9... maybe 10
[02:21:15] <da_wunder> and really using docker would help you a lot with that - you could say exactly which PHP to install and so on
[02:21:24] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[02:21:44] *** Quits: malmalmal (~malmalmal@38.pool92-178-53.dynamic.orange.es) (Quit: Leaving)
[02:21:52] <Albright> chozorho: Okay, and did you use a package manager to install Apache? I think on Debian that'd be apt
[02:23:08] <chozorho> Albright nim -- yep I did, that was a long time ago though. But I know I did a `a2enmod php7.3` more recently
[02:23:38] <Albright> What is "nim?"
[02:23:39] <chozorho> da_wunder nim I am still digesting what you wrote... hmmm
[02:23:58] <chozorho> Albright nim, it is a Korean-style honorific suffix. I am in love with Korea
[02:24:09] <chozorho> a Koreaboo, if you will ^^
[02:24:15] <Albright> oh jeez
[02:24:16] <da_wunder> Albright: I'm wondering the same, I have no idea twhat that "nim" means...
[02:24:20] * chozorho gets banned from the channel
[02:24:49] <Albright> chozorho: Anyway, if you use that same package manager to install PHP and related libraries, they should integrate with each other fairly seamlessly.
[02:25:02] <da_wunder> ^
[02:25:21] <da_wunder> but sometimes you need to restart eg. apache to get that new version
[02:25:31] <Albright> I would suggest not using a2enmod and related since that will install PHP as an Apache module. We want to use PHP-FPM/FastCGI instead if possible.
[02:25:31] <chozorho> but....
[02:25:52] <chozorho> r-really? huh...
[02:26:03] <da_wunder> and to check that I would just create simple info.php with `<?php phpinfo();` and open that in your browser and see what you have there
[02:26:52] <chozorho> yea yea, I've done that, it says 7.3.27
[02:27:05] <chozorho> but the weird part is...
[02:28:18] <chozorho> well, I've been messing with the php "extensions" or whatever, just to try to get a PHP script to work. And I'm sure the script itself isn't wrong, because I managed to get it to work with php7.4 at one point
[02:28:21] <chozorho> but now...
[02:28:53] <chozorho> it's acting as if the mongodb extension doesn't exist, or isn't found...
[02:29:16] <da_wunder> so your script works with PHP 7.4 and not with 7.3?
[02:30:12] <da_wunder> and if that is the use case - you're most likely using different versions in your production, development, what ever environment
[02:31:02] <chozorho> it's basically this problem all over again: https://themathjester.com/lab/index.php#linux_land2
[02:31:19] <chozorho> in full disclosure, that's my software blog, I describe it well there
[02:31:22] <da_wunder> so what I would really highly recommend you to do - is to normalize those all to use same versions of all 3rd stuff - with that you have _same_ environment where you should see the same problem - and so on you should be able to fix that
[02:31:46] <Albright> And installing stuff with apt instead of whatever else should resolve that. :)
[02:32:05] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[02:32:30] <chozorho> but, see, I don't really have a "development" environment... this is all my personal, low-stakes VPS. So it's basically all "production"
[02:33:10] <chozorho> also, albright nim, I... I could have sworn there was a reason I couldn't simply use apt by itself... but I could be wrong
[02:34:02] *** Quits: hh (~g@37.214.75.10) (Remote host closed the connection)
[02:35:01] <__adrian> you should "really get" a dev environment
[02:35:06] <__adrian> ;)
[02:35:17] <da_wunder> ^
[02:39:20] <chozorho> -.-
[02:40:08] <chozorho> I mean my VPS has backups
[02:40:16] <__adrian> ?
[02:40:18] <chozorho> who needs a separate test environment when you have backups!
[02:40:30] <chozorho> (I'm kidding)
[02:40:35] <da_wunder> wtf
[02:40:46] <Sammitch> [emotional damage]
[02:41:28] *** Joins: funhouse (~funhouse@user/funhouse)
[02:42:32] <da_wunder> chozorho: imho if you're really "00:10 < chozorho> who needs a separate test environment when you have backups!" that is totally wrong and you really should think your whole process again
[02:43:07] <chozorho> I mean I was mostly kidding, but like
[02:43:15] <chozorho> like I said, these are _really_ low stakes
[02:43:56] *** Quits: guido (~weechat@host-87-17-251-90.retail.telecomitalia.it) (Quit: WeeChat 3.4.1)
[02:44:06] <da_wunder> chozorho: most of people here are not kidding - and take seriously what ever who say - so please stop that
[02:44:15] <__adrian> "stakes" doesn't mean anything
[02:44:31] <Albright> php is srs bsns
[02:45:00] <Albright> We're just trying to get you to a place where you have a predictable environment you're working in.
[02:45:23] <Albright> That means using best practices.
[02:46:36] <Sammitch> if you can't burn an environment to the ground and spin up a fresh replacement inside of an hour, you need to up your game
[02:46:50] <da_wunder> ^
[02:47:21] <da_wunder> I would even demand that same to happen less than 5min
[02:48:14] *** Joins: filename (~kilitary@188.242.105.134)
[02:48:54] <Sammitch> faster is better, but I think an hour is a reasonable bar to set
[02:49:14] <da_wunder> yeah, that is start point
[02:50:02] <da_wunder> and really people should nuke those environments and see if they can build those from scratch
[02:50:50] <da_wunder> and with that I mean, you really should test that like every week, two weeks, monthly, etc
[02:51:03] <Sammitch> like if I wanted delete and redeploy all the microservices in prod, yeah 5 mins. if I wanted to nuke all the underlying servers it just takes more time for those plays to run. :P
[02:56:30] <chozorho> so... I might just give up and try to use/install a different extension, but as a last resort, let me explain something weird
[02:57:24] <chozorho> even after I attempt to configure pecl to use my php/7.3/apache2 profile, whenever I call a `pecl` command, it gives the following warning from php:
[02:58:00] <chozorho> "PHP Warning:  PHP Startup: Unable to load dynamic library 'mongodb.so' (tried: /usr/lib/php/20190902/mongodb.so (/usr/lib/php/20190902/mongodb.so: cannot open shared object file: No such file or directory), ..."
[02:58:16] <chozorho> wait hang on... why does...
[02:58:33] <da_wunder> one side note that php 7.3 is not supported anymore
[02:58:34] <Albright> Okay, well, we don't want to use PECL to install this except as a last resort
[02:58:58] <chozorho> yea, if I just `ls` that directory, it indeed does not contain that shared lib, so that's one thing I should consider. But still
[02:59:57] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:59:58] <chozorho> still, the part that confuses me is the following
[03:00:16] <chozorho> if I just try a simple `pecl install mongodb`, then it claims:
[03:00:19] <chozorho> "pecl/mongodb is already installed and is the same as the released version 1.13.0"
[03:00:21] <da_wunder> and maybe you should follow eg. these instructions - https://www.mongodb.com/developer/quickstart/php-setup/
[03:00:23] <Albright> If you install these things properly, this will all be irrelevant
[03:00:24] <chozorho> and then "installation failed"
[03:01:55] <chozorho> well, interestingly, your link *does* recommend using `pecl install mongodb`, but that brings me back to square zero, doesn't it...?
[03:02:49] <Albright> I guess we're kinda telling you conflicting things
[03:03:18] <Albright> I would tell you to ignore whatever is on Mongo's site and just install what your package manager gives you (if it gives you anything).
[03:03:43] <chozorho> but...
[03:03:51] <chozorho> mongo's site says:
[03:03:54] <chozorho> "The mongodb package provided by Debian is not maintained by MongoDB Inc. and conflicts with the official mongodb-org package. If you have already installed the mongodb package on your Debian system, you must first uninstall the mongodb package before proceeding with these instructions."
[03:04:01] <chozorho> errr wait hang on
[03:04:43] <chozorho> I think I already dealt with that, nvm
[03:05:55] <chozorho> yea I already have mongodb-org. nvm that
[03:11:10] *** Joins: l__q (~modinfo@user/modinfo)
[03:25:16] <entropy_> how do you eliminate sql injection with this: $_GET["id"]
[03:27:37] <Albright> entropy_: Are you using a framework that has a database layer?
[03:27:43] <entropy_> no
[03:27:58] <Albright> entropy_: In that case, use PDO and follow these instructions:
[03:28:15] <entropy_> ok
[03:28:48] <Albright> https://www.php.net/manual/en/pdo.prepare.php
[03:29:32] <entropy_> i can't find $_GET there
[03:29:46] <entropy_> basically i want to query a database with the contents of $_GET
[03:29:51] <Albright> tl;dr: $query = 'SELECT * FROM foo WHERE id = :id'; $stmt = $db->prepare($sql); $stmt->execute(['id' => $_GET['id']);
[03:30:41] <Albright> https://phptherightway.com/#pdo_extension might also be helpful
[03:30:53] <Albright> It literally shows an example with $_GET['id']
[03:31:24] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[03:35:36] <entropy_> Albright do $stmt->execute(); <- this will return the $id?
[03:36:20] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:36:36] <Albright> entropy_: No. If you want to get the results of the query, use $stmt->fetchRow() or fetchAll()
[03:36:58] <Albright> See the methods at https://www.php.net/manual/en/class.pdostatement.php
[03:37:16] <Albright> Excuse me, just fetch(), not fetchRow()
[03:39:16] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[03:49:09] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[04:01:13] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[04:02:28] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:05:37] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:11:31] *** Joins: filename (~kilitary@188.242.105.134)
[04:12:48] <entropy_> Albright https://pastebin.com/1YehcTeB
[04:12:50] <entropy_> is this right?
[04:13:48] <Albright> entropy_: Not sure where $idnew is coming from in line 3 - you probably just want $id
[04:14:17] <entropy_> ok
[04:14:19] <entropy_> thank you
[04:26:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[04:51:18] *** Joins: oxy (nd@inorth.org)
[04:52:37] *** Quits: seifeslimene (~seifeslim@102.156.51.21) (Ping timeout: 256 seconds)
[04:53:12] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[05:00:39] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[05:00:44] <entropy_> Albright it only works if.. line 8 is $id (https://pastebin.com/tAaht0GM)
[05:01:07] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[05:01:17] <entropy_> the actual id is $raw
[05:02:08] <Albright> Line 8 is basically making sure $_GET['id'] is a number.
[05:02:29] <Albright> Check out the documentation on filter_input() if that part is confusing you.
[05:02:59] <Albright> By using $raw instead of $id on line 9, you're bypassing that verification.
[05:03:11] <Blondie101010> why is there a copy in $raw and $id is unused?
[05:03:24] <Albright> What do you mean by "a copy?"
[05:03:53] <Blondie101010> it's assigned to another variable
[05:04:39] <Blondie101010> I was questioning about the same thing as you
[05:05:42] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:06:32] <entropy_> so i can make it $something (instead of $id) and use this id in the execute?
[05:06:39] <entropy_> or does it have to be $id?
[05:07:50] <Blondie101010> right now your line 8 does nothing concrete
[05:07:52] <da_wunder> it could be `$x = $_GET['id'];`
[05:08:22] <Blondie101010> but line 8 is not bad, so you should use $id
[05:08:47] <entropy_> ok
[05:08:49] <entropy_> thanks
[05:13:15] *** Quits: newwebdev13 (~newwebdev@78.135.92.217) (Quit: Leaving)
[05:15:42] *** Joins: l__q (~modinfo@user/modinfo)
[05:16:41] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4.1)
[05:27:02] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:31:33] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:42] *** Joins: vlm (~vlm@user/vlm)
[05:39:01] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[05:39:14] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[05:40:51] *** Joins: l__q_ (~modinfo@user/modinfo)
[05:43:02] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 268 seconds)
[05:45:51] *** Quits: mpldr_ (~mpldr@user/mpldr) (Quit: WeeChat 3.4.1)
[05:52:44] <__adrian> entropy_: don't "sanitize." the input is good (use it) or is bad (tell the user no, try again). do not try to "fix" inputs.
[05:53:39] *** l__q_ is now known as l__q
[05:54:03] <entropy_> https://pastebin.com/s1PydneC <- how do you PDO the variable only? and not query the db?
[05:54:14] <__adrian> the comment "Automatically sanitized for SQL by PDO" regarding bindParam() is also wrong - it's not sanitized and it's not escaped.
[05:54:27] <__adrian> entropy_: don't @
[05:55:00] <__adrian> if the input is not submitted, that's a user input error.
[05:55:18] <__adrian> if the input is not an integer, that's a user input error.
[05:56:04] <__adrian> don't fix them - instead, tell the user they made a mistake. then throw the inputs away and DO NOT USE THEM.
[05:56:40] <__adrian> "how do you PDO the variable only? and not query the db?"  i don't know what you're asking here.
[05:57:23] <entropy_> i want to not allow a single variable vulnerable to sql injection
[05:57:40] <__adrian> use parameters.
[05:57:44] <entropy_> like what?
[05:58:00] <__adrian> SELECT * FROM pastes WHERE id = :id  ← like that
[05:58:16] <__adrian> that's _after_ you validate the input.
[05:58:17] <entropy_> but i want to escape a singe $_GET (no database)
[05:58:25] <__adrian> no. DO NOT ESCAPE.
[05:58:28] <__adrian> use parameters.
[05:58:46] <__adrian> what do you mean by "no database"?
[05:59:23] <entropy_> maybe make it check if the $_GET is alphanumeric?
[05:59:31] <entropy_> otherwise throw an error?
[05:59:45] <__adrian> the first thing you do is _validate_ the input. think about the rules for the input.
[06:00:14] <__adrian> it's required (cannot be empty/missing), and also must be an integer greater than 0. yes?
[06:00:51] <__adrian> is this correct / does it make sense?
[06:01:30] <entropy_> ok
[06:01:33] <entropy_> yeah kinda
[06:01:55] <__adrian> so make that into code. how do you make sure it's not missing/empty?
[06:01:58] <entropy_> but i don't want to throw an error if !isset($_GET["id"])
[06:02:19] <deltab> what should happen instead?
[06:02:24] <__adrian> ^
[06:02:31] <__adrian> why not? how is that not an error?
[06:02:38] <entropy_> i want if !isset a $_GET, set it to a default level
[06:02:47] <entropy_> does that make sense?
[06:02:48] <__adrian> that's fine.
[06:03:02] <__adrian> $id = $_GET["id"] ?? $default_id;
[06:03:09] <BadAdviceCat> entropy_, Shaquille O'Neal is not going to like your website.
[06:03:39] <__adrian> entropy_: so if $_GET["id"] is missing, you assign your default id instead. makes sense?
[06:03:40] <BadAdviceCat> When he types in ' for his name, your website will either blow up, or not allow for him to type his name the way he prefers. That'll make a sad Shaq.
[06:04:13] <entropy_> BadAdviceCat what do you suggest?
[06:04:24] <BadAdviceCat> https://pbs.twimg.com/media/ChBmD99WIAAOz-a.jpg I do not think you want a sad Shaq.
[06:04:36] <__adrian> he's going to suggest parameters. but first, we need to finish validating.
[06:04:41] <BadAdviceCat> It'll be your fault. Then a mob of people will surround your house.
[06:04:55] <BadAdviceCat> I'll be that idiot with the pitch fork and a torch.
[06:05:16] <__adrian> entropy_: we checked if the input was missing and assigned a default if so. what was the second rule to validate?
[06:05:31] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[06:06:03] <entropy_> if $_GET, set a $var to this value... If $_COOKIE, set it to this value, else set it to a default value
[06:06:15] <__adrian> you can do that too
[06:06:21] <entropy_> example?
[06:06:31] <__adrian> $id = $_GET["id"] ?? $_COOKIE["id"] ?? $default_id;
[06:06:41] <entropy_> oh nice!
[06:06:48] <__adrian> so. what was the second rule to validate?
[06:07:06] <entropy_> can i do this?
[06:07:12] <entropy_> $id = $_GET["id"] ?? $_COOKIE["id"] ?? "text";
[06:07:17] <__adrian> yes
[06:07:21] <entropy_> ok cool
[06:07:26] <__adrian> so. what was the second rule to validate?
[06:08:19] <entropy_> to see if there is no "'"
[06:08:20] <entropy_> or something
[06:08:21] <__adrian> no
[06:08:26] <__adrian> see above
[06:08:36] <__adrian> this is NOT about the database at all. it's about the input.
[06:08:38] *** Joins: l__q (~modinfo@user/modinfo)
[06:08:50] <__adrian> what kind of value does the $id need to be?
[06:09:31] <entropy_> anything that won't blowup the execution?
[06:09:36] <__adrian> absolutely not
[06:09:42] <entropy_> hmm
[06:09:44] <__adrian> is "alligators" a valid $id ?
[06:10:07] <entropy_> ok well
[06:10:10] <__adrian> yes or no?
[06:11:00] <entropy_> for the $cat it can only be a couple of things
[06:11:09] <__adrian> we're talking about the $id
[06:11:14] <__adrian> is "alligators" a valid $id ?
[06:11:20] <entropy_> no
[06:11:22] <__adrian> no. $id = "alligators" is nonsense. so your validation rule "anything that doesn't blow up" is also nonsense.
[06:11:31] <__adrian> what _shoudl_ the $id be?
[06:11:34] <__adrian> what kind of value?
[06:11:36] <__adrian> *should
[06:12:08] <entropy_> it check if it's a valid id in the SQL QUERY
[06:12:11] <__adrian> no
[06:12:17] <entropy_> ?
[06:12:20] <__adrian> we're NOT talking about the database yet.
[06:12:24] <entropy_> ok
[06:12:26] <__adrian> we're ONLY talking about the input.
[06:12:57] <__adrian> earlier i asked you if "must be an integer greater than 0" was correct. is it?
[06:13:31] <entropy_> no the ID is a random string with A-Z/a-z/and numbers
[06:13:40] <__adrian> ok
[06:13:48] <__adrian> so that's what we need to check against.
[06:13:57] <__adrian> how would you check that?
[06:14:04] <entropy_> here...
[06:15:09] <entropy_> i was asking about something else __adrian
[06:15:10] <entropy_> https://pastebin.com/15VnKqjj
[06:15:14] <entropy_> is what i'm using for ID
[06:15:39] <__adrian> that's not the same as what you just said
[06:16:00] <entropy_> hmmm
[06:16:04] <__adrian> that code implies your $id must be a number. and integer > 0. it does not look like A-Z is ok.
[06:16:18] <__adrian> so which is it?
[06:16:28] <entropy_> A-Z
[06:16:36] <entropy_> and a-z numbers, etc
[06:16:37] <__adrian> a-z and 0-9?
[06:16:40] <__adrian> ok
[06:16:42] <entropy_> yes
[06:16:47] <__adrian> there's two parts to that rule.  (a) must be a string, and (b) must contain only A-Za-z0-9
[06:16:55] <__adrian> does it have to be a certain length?
[06:17:33] <__adrian> e.g., is it supposed to be 10 characters long, or 15, etc.?  or is any length ok?
[06:17:45] <entropy_> mt_rand(5, 8);
[06:17:51] <entropy_> so 5 - 8 chars long
[06:18:31] <__adrian> that's not what mt_rand() does
[06:18:36] <entropy_> oh
[06:18:52] <__adrian> mt_rand() returns a _number_. and integer. between $min and $max.
[06:19:04] <__adrian> so  mt_rand(5,8) might return  5, 6, 7, or 8.
[06:19:18] <entropy_> https://pastebin.com/m5q9nttM
[06:19:23] <__adrian> https://php.net/mt_rand  read the manual. test your code.
[06:19:24] <entropy_> here is my function
[06:19:36] <__adrian> throw that function away
[06:20:02] <__adrian> and whatever tutorial you got it from, throw that away too.
[06:20:29] <entropy_> hmm what do i replace it with?
[06:20:30] <__adrian> question: are these database IDs?
[06:20:54] <entropy_> no it's for a new database id
[06:21:00] <entropy_> not previously declared
[06:21:12] <__adrian> i asked if they were database ids
[06:21:15] <__adrian> that sounds like "yes"
[06:21:18] <entropy_> yes
[06:21:22] <entropy_> then
[06:21:33] <__adrian> why are you not letting the databases choose IDs?
[06:21:59] <entropy_> i didn't know you had to
[06:22:38] <__adrian> you don't _have to_. but you're going to the trouble of trying to make something, when a perfectly fine solution already exists. did you have a need/reason?
[06:23:04] <entropy_> well i have a bunch of id's in the database
[06:23:09] <entropy_> already
[06:23:16] <entropy_> 244 total
[06:23:21] <__adrian> made like that ^  ?
[06:23:41] <entropy_> using my function yes
[06:23:55] <__adrian> those are going to start colliding at some point. if they haven't already.
[06:24:18] <__adrian> if you need a meaningless ID for a database row, the most straightforward solution is to use  ( id SERIAL PRIMARY KEY )
[06:24:28] <entropy_> well i do a check in the database if id is taken, then if so, choose a new one
[06:24:47] <__adrian> they'll still  collide, if you have any sort of volume.
[06:25:06] <entropy_> ok what SQL should i use?
[06:25:09] <__adrian> e.g., if you have two calls happening at once, the checks can overlap.
[06:25:17] <entropy_> oh ok
[06:25:54] <__adrian> did you make the id column the PRIMARY KEY ?
[06:26:51] <entropy_> no
[06:26:53] <__adrian> that ^ will make the DB understand that the value must be unique, and to not accept duplicates.
[06:27:01] <entropy_> oh n eat
[06:27:04] <entropy_> oh neat
[06:27:23] <__adrian> recommend learning more about databases  ;)
[06:27:32] <entropy_> like this?
[06:27:38] <entropy_> ALTER TABLE `pastes`
[06:27:38] <entropy_> ADD PRIMARY KEY (`id`);
[06:28:02] <__adrian> yes
[06:28:22] <entropy_> then will it automatically assign a a-z A-Z 0-9?
[06:28:28] <__adrian> no
[06:28:33] <entropy_> how do you do that?
[06:28:37] <__adrian> but if you give the same id twice, it won't break anything.
[06:29:33] <entropy_> what if you call it once? does it return more than one (if exists)?
[06:29:47] <__adrian> what?
[06:29:56] <__adrian> call what?
[06:30:24] <__adrian> a primary key is _unique_. there can't be more than one.
[06:30:35] <__adrian> more than one is an error.
[06:30:42] <__adrian> the DB won't take it.
[06:30:45] <entropy_> ok
[06:31:27] <entropy_> so you don't need to specify the 'id' in the execution of creating a new id?
[06:31:32] <entropy_> is that right?
[06:31:48] <__adrian> not if you want to keep using your special IDs, no.
[06:31:49] <Blondie101010> that depends on the DB, if it is set to auto assign it
[06:32:13] <__adrian> if you make a SERIAL primary key, then yes. but that's not what you're doing.
[06:32:56] <__adrian> so you'll need to decide if you can change that or not. can you replace your existing IDs with just 1,2,3, etc.?
[06:33:17] <__adrian> if so, then the DB can make new IDs. if not, then you must continue making them yourself.
[06:34:03] <entropy_> "replace your existing IDs with just 1,2,3" <- no i need it to be a-z A-Z 0-9
[06:34:09] <entropy_> any ideas?
[06:34:28] <__adrian> "> if not, then you must continue making them yourself."
[06:34:43] <entropy_> hmmm ok
[06:36:05] <entropy_> so then, how do i _efficiantly_ create new IDs?
[06:36:34] <entropy_> you said checking if one exists, is a bad idea
[06:36:44] <entropy_> and using the randomizer() function
[06:36:56] <entropy_> what would you suggest?
[06:38:32] <__adrian> there's several issues with that function. yes, it's inefficient, but also: *mt_rand() is not super random  *"random" is not the same as "unique"  *8 characters is not a lot of space to avoid duplicates  *you can't know if the new ID is a duplicate or not
[06:39:47] <entropy_> well it's either between 3 and 8
[06:39:52] <entropy_> so that might help
[06:40:08] <entropy_> if they were all 8, that would be a real problem
[06:40:10] <__adrian> not really
[06:40:15] <entropy_> oh
[06:40:17] <entropy_> hmm
[06:40:36] <entropy_> is this good?
[06:40:38] <entropy_> $search = $_GET["search"] ?? $_COOKIE["search"] ?? "";
[06:40:41] <__adrian> that last one is solved by making the ID a primary key in the db.
[06:40:53] <entropy_> oh
[06:40:57] <__adrian> then, if it's a duplicate, you'd get an error. and you could try again.
[06:41:55] <entropy_> "solved by making the ID a primary key in the db" <- how would you debug this?
[06:42:17] <__adrian> "debug" it?
[06:42:25] <__adrian> it's the change we discussed earlier.
[06:42:40] <__adrian> alter the table and make the id the primary key.
[06:42:52] <entropy_> what if it exists? do what now?
[06:43:05] <__adrian> if what exists?
[06:43:15] <__adrian> a duplicate?
[06:43:21] <entropy_> the ID
[06:43:26] <entropy_> yes
[06:43:41] <__adrian> if a new id exists, then the database will error, and you can try again.
[06:44:02] <entropy_> so what is the if to check if it exists?
[06:44:11] <entropy_> how would you code it to make it select a new ID?
[06:44:15] <__adrian> don't check first
[06:44:39] <__adrian> make your random ID, try to use it. if it errors because it's a duplicate, make a new one and try again.
[06:45:02] <entropy_> isnt that what i have already?
[06:45:42] <Blondie101010> that decision depends on the DB...  I've seen some that get very slow on duplicate
[06:47:12] <__adrian> no. you said you're _checking_.
[06:47:33] <entropy_> so what is the code for the db to check if an id exists, then if so, select a new one?
[06:48:36] <__adrian> for your database, look up the error code for a duplicate primary key.
[06:48:49] <__adrian> in your code, if the INSERT fails, check if that code was the error.
[06:48:57] <__adrian> and if it was, you know you can try again.
[06:49:51] <entropy_> here is my insert line
[06:50:09] <entropy_> https://pastebin.com/Ccpcte4u
[06:50:42] <entropy_> er SELECT line
[06:52:08] <__adrian> blondie: it's not going to be slower than a whole second query
[06:53:07] <__adrian> entropy_: when you execute that statement, wrap it in try..catch. if it throws, check the error for the db error code.
[06:53:29] <entropy_> ok example?
[06:54:12] <Blondie101010> __adrian:  I remember proving it in Oracle
[06:55:48] <Blondie101010> but it's probably premature optimization from my part
[06:56:03] <entropy_> ok so what if there are multiple same ids?
[06:56:08] <entropy_> would it lag?
[06:56:11] <Blondie101010> not possible
[06:56:16] <Blondie101010> a unique key is unique
[06:56:28] <Blondie101010> so the DB will return an error
[06:56:47] <entropy_> "wrap it in try..catch" <- example?
[06:57:07] <Blondie101010> if you use PDO in exception error mode, sure
[06:57:36] <Blondie101010> test it by inserting the same thing twice
[06:57:42] <Blondie101010> you'll see what it throws
[06:59:21] <__adrian> try { $insert->execute($values); } catch (PdoException $e) { ... }
[06:59:54] <__adrian> like blondie says, just inster a duplicate on purpose ans then  var_dump($e);  and you'll see what the error code is
[07:01:18] <__adrian> blondie: to be clear, you saw  "insert duplicate" take _longer_ than "query for duplicate first, then insert"?
[07:01:38] <entropy_> well then you would need to try it again, with a new ID, right? and how would you generate this NEW id?
[07:01:48] <__adrian> seems weird. but also, checking leave open a race condition, so the "insert duplicate" can still happen
[07:01:51] <entropy_> i guess functions are out of the question
[07:02:09] <__adrian> entropy_: why? generate it the same way you generated the first ID
[07:02:39] <entropy_> oh
[07:02:40] <entropy_> ok
[07:03:58] <Blondie101010> __adrian:  that prechecking was faster, but I was working on huge batches, so it wasn't individual queries
[07:04:01] <entropy_> so why make it a SQL execute() if there is a goto function in the php file that checks this?
[07:04:24] <__adrian> entropy_: what?
[07:05:01] <entropy_> why use try {} on the SQL execute if i can make a goto loop in php and this checks if ID exists?
[07:05:15] <entropy_> isnt it like pretty much the same thing?
[07:05:23] <__adrian> do you actually mean  `goto`  in your code?
[07:06:31] <__adrian> goto is not a loop. it's a jump. don't use goto.
[07:06:37] <entropy_> here is my if id exists check: https://pastebin.com/rya1XPvA
[07:06:50] <entropy_> can you help me re-write it and make it better?
[07:07:07] <__adrian> oh holy cow
[07:07:25] <entropy_> i'm still pretty new at PHP
[07:07:41] <Blondie101010> not sure what you're trying to do
[07:07:58] <entropy_> it checks if ID exists, and if it does, goto start
[07:08:03] <entropy_> else continue
[07:08:15] <__adrian> *don't use goto, use a loop.  *don't select your entire table.
[07:08:28] <Blondie101010> if only to replace that awful code, you should use adrian's suggestion :)
[07:08:29] <__adrian> and as mentioned, don't check in the first place.
[07:08:57] <__adrian> IF and when you want to check something, though, check for that thing. do not SELECT * and then dig through it in php.
[07:09:08] <entropy_> ok
[07:09:21] <__adrian> select 1 where id = ? limit 1
[07:09:35] <__adrian> that would tell you if the id already existed in the database.
[07:09:55] <entropy_> select 1 FROM pastes WHERE id = ? limit 1
[07:09:56] <entropy_> ?
[07:09:58] <__adrian> *FROM of course
[07:10:08] <__adrian> yes
[07:10:25] <Blondie101010> about replacing `goto`, it is done with a proper loop
[07:10:29] <__adrian> ^
[07:10:39] <__adrian> most likely  while ()  in your case
[07:10:41] <entropy_> can you make me an example i may learn from?
[07:10:55] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[07:11:30] <Blondie101010> $status = false; do { $status = doSomething(); } while ($status === FALSE);
[07:12:42] <entropy_> how would that work with the SQL?
[07:13:13] <Blondie101010> fetch the answer
[07:13:20] <Blondie101010> and $status would depend on that
[07:13:53] <__adrian> https://dpaste.org/OGAp
[07:14:56] <entropy_> ok
[07:14:58] <entropy_> thanks
[07:15:23] <entropy_> you don't need to end the code with something?
[07:15:34] <entropy_> $id is the NEW id though right
[07:15:36] <__adrian> ?
[07:15:51] <entropy_> in case it exists, go back and try it again?
[07:16:05] <__adrian> https://php.net/while
[07:16:19] <__adrian> https://php.net/do-while
[07:18:41] <Blondie101010> entropy_:  PHP code begins with `<?php` and ends with `?>` but it is not required or recommended to close the php block unless you need to output after
[07:18:52] <entropy_> oh ok
[07:19:29] <entropy_> __adrian so ALWAYS $id will end up being a new ID?
[07:19:54] <Blondie101010> yes as it would otherwise loop
[07:19:58] <entropy_> ok thanks
[07:20:05] <entropy_> will test and see
[07:20:12] <Blondie101010> testing is important
[07:20:15] <entropy_> yeah
[07:20:16] <entropy_> sec
[07:22:41] <entropy_> ok
[07:22:42] <entropy_> now i get
[07:22:44] <entropy_> "This page isn’t working"
[07:22:46] <entropy_> from chrome
[07:23:16] <entropy_> oops
[07:23:21] <entropy_> sorry, i had a typo
[07:23:58] <__adrian> "so ALWAYS ...?"  that depends on your function.
[07:24:22] <entropy_> can you help me make a random function?
[07:24:30] <entropy_> to know how to properly do this?
[07:24:52] <Blondie101010> ever used composer?
[07:24:56] <entropy_> no
[07:25:20] <Blondie101010> it's a superb tool to use external libraries
[07:25:34] <Blondie101010> and your problem could be easily solved that way
[07:26:36] <entropy_> what about this? https://stackoverflow.com/questions/4356289/php-random-string-generator
[07:27:07] <entropy_> first google attempt
[07:27:26] <__adrian> https://packagist.org
[07:27:52] <Blondie101010> entropy_:  you can easily find ways to do that
[07:27:57] <__adrian> but the problems i described are more about what your function does, not how it does it.
[07:28:16] <__adrian> if you don't want to use a serial id, a better choice is a UUID
[07:28:39] <Blondie101010> it depends a bit on what you use the ID for that justifies making it that way
[07:28:59] <__adrian> yes, just talking in generalities.
[07:29:35] <__adrian> the big takeaway here is you need to understand your needs and make decisions about them
[07:31:38] <entropy_> ok so... https://www.geeksforgeeks.org/generating-random-string-using-php/ -> $n=10; <- how do you make it random between 3, 8?
[07:31:59] <Blondie101010> what is the purpose?
[07:32:18] <entropy_> get a random string from 3 chars to 8 chars
[07:32:24] <Blondie101010> to do what?
[07:32:32] <Blondie101010> it matters
[07:32:37] <entropy_> to create a new ID
[07:32:44] <__adrian> you would need to read the documentation for that code, not ask us. but again, i'm recommending you do not simply go choose something at random and start using it. you need to think about what you actually need.
[07:32:45] <Blondie101010> 3 chars is very short
[07:32:55] <__adrian> 8 is very short
[07:34:37] <Blondie101010> entropy_:  to directly answer you, you could: $num = rand(3, 8); // and use $num in the loop condition
[07:35:08] <entropy_> ok
[07:35:09] <entropy_> thank you
[07:35:12] <Blondie101010> np
[07:35:43] <deltab> what will this id be used for? will it be displayed to the user and typed in, or used only by software? is it secret or public? does it matter if someone can guess it? how many things do oyu need ids for?
[07:36:20] <entropy_> ok i made it mt_rand(3,14)
[07:36:28] <entropy_> this should make it better, right?
[07:36:44] <__adrian> why are stuck on random-lengths?
[07:36:59] <__adrian> make it always the same length, and always long
[07:38:27] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[07:39:13] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[07:40:50] <Blondie101010> entropy_:  do you know what your nick means?
[07:41:25] <__adrian> rather appropo
[07:43:07] <__adrian> the original question was about validation and parameters... we never got to the end of that
[07:46:47] <chozorho> *apropos
[07:47:37] *** Quits: Hash (~Hash@hey.howstoned.ru) (Ping timeout: 240 seconds)
[08:09:02] <entropy_> what's a better way to do this? https://pastebin.com/9xXy69Zu
[08:13:51] <Blondie101010> your IP is a int?
[08:14:08] *** Quits: adhawkins (~adhawkins@user/adhawkins) (Ping timeout: 272 seconds)
[08:14:36] <thumbs> UNSIGNED INT can accomodate IPv4, but not V6
[08:15:16] <Blondie101010> yes, but not pass a numeric filter
[08:16:07] <Blondie101010> I'm actually not 100% sure
[08:17:31] <Blondie101010> entropy_:  I also don't get your while loop
[08:18:00] <Blondie101010> why do you need to fetch many times and not change anything with it?
[08:18:12] *** Joins: adhawkins (~adhawkins@user/adhawkins)
[08:19:49] *** Quits: sreve (~quassel@p54a71d5a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:20:24] *** Joins: sreve (~quassel@p54a70282.dip0.t-ipconnect.de)
[08:26:04] *** Joins: thiras (~thiras@user/thiras)
[08:39:51] *** Joins: guido (~weechat@host-87-10-249-107.retail.telecomitalia.it)
[08:43:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[08:49:45] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[08:52:23] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:52:45] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:59:25] *** Quits: jgrim (~jgrim@159.223.114.62) (Quit: Buh bye!)
[09:00:30] *** Joins: jgrim (~jgrim@159.223.114.62)
[09:20:54] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[09:21:21] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[09:22:03] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[09:27:03] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Remote host closed the connection)
[09:27:17] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:29:18] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[09:31:16] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[09:38:55] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[09:39:21] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[09:43:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:28:34] *** Joins: ianthrive (~ianthrive@166.70.191.9)
[10:38:09] <entropy_> what's wrong here? https://pastebin.com/TWFAfeTD
[10:38:42] <entropy_> do i have to do the whole thing twice if i have 2 values i want?
[10:42:04] <Blondie101010> !+PDOStatement::bindParam
[10:42:04] <php-bot> bool PDOStatement::bindParam(mixed $paramno, mixed &$param [, int $type [, int $maxlen [, mixed $driverdata]]]) - bind a parameter to a PHP variable.  $paramno is the 1-based position of the placeholder in the SQL statement (but can be the parameter name for drivers that support named placeholders).  This isn't supported by all drivers.  It should be called prior to execute(). - http://php.net/PDOStatement.bindParam
[10:42:16] <Blondie101010> note that the second parameter is by reference
[11:08:09] <TinoDidriksen> You should use bindValue() instead, or even better just pass the values array to execute()
[11:14:55] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[11:16:06] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[11:40:17] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[11:44:20] *** Quits: ianthrive (~ianthrive@166.70.191.9) (Quit: Textual IRC Client: www.textualapp.com)
[11:46:51] *** Joins: hh (~g@37.214.75.10)
[11:48:45] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: WeeChat 3.0)
[11:54:00] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[11:56:25] <entropy_> thanks Blondie101010
[11:56:27] <entropy_> works good
[12:15:08] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:18:01] *** Joins: Forza (~Forza@user/forza)
[12:43:31] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:48:51] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[12:51:16] *** Quits: regedit (uid150526@id-150526.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:52:24] *** Quits: ypszilon (~ypszilon@user/ypszilon) (Quit: ᮮ)
[12:53:05] *** Joins: ypszilon (~ypszilon@user/ypszilon)
[12:59:52] *** Joins: Bogdaniel (~Bogdaniel@89.137.238.168)
[13:10:55] *** Quits: Bogdaniel (~Bogdaniel@89.137.238.168) (Quit: Client closed)
[13:35:30] *** Quits: LuKaRo (~LuKaRo@p4fc3382e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:46:21] *** Joins: Jasen67 (~Jasen@98.126.155.250)
[14:04:48] *** Quits: Jasen67 (~Jasen@98.126.155.250) (Quit: Client closed)
[14:14:44] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[14:17:11] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:18:43] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[14:41:47] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[14:42:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[14:45:37] *** Quits: mr_gant (~mr_gant@103.192.80.185) (Ping timeout: 240 seconds)
[14:55:40] *** Quits: mooz (~none@173.208.98.70) (Ping timeout: 272 seconds)
[15:00:39] *** Joins: mr_gant (~mr_gant@144.48.38.172)
[15:01:55] *** Joins: filename (~kilitary@188.242.105.134)
[15:06:30] *** Joins: mooz (~none@173.208.98.70)
[15:08:54] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: If at first you don't succeed, skydiving is not for you.)
[15:20:43] *** Joins: ms49434 (~ms49434@user/ms49434)
[15:23:10] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[15:27:24] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 240 seconds)
[15:51:25] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[15:53:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:53:42] *** ordos is now known as _ordos
[16:01:43] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:06:00] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:07:15] <phpn00b> I'm writing a very lightweight API for my website. I know, there's SLIM and others, but I really need just a small one. Is it fine to use try/catch here or shall I wrarp it in a function or shall I do the error handling completly in the "business logic" functions? https://bpa.st/N2GA
[16:08:55] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:13:03] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:13:25] <phpn00b> Did you get my question? Sorry, gamja webchat is broken somehow.
[16:15:26] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:15:45] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:16:49] <da_wunder> phpn00b: if that is enough for you then I guess it's just fine
[16:18:28] <da_wunder> phpn00b: but eg. I see that you're doing some validation there - and I'm assuming that if validation fails you're throwing exception adn then showing error message "calculate  unavailable", doesn't really say to user that error is in the input - and also then that is not server error 500, more likely 400 http status should be used in that case
[16:19:09] <phpn00b> da_wunder: Thanks for your reply. Inside the business logic and the validator there are sane error reports. The API isn't for direct use, it's just the backend of a wbesite.
[16:19:22] <phpn00b> The error 500 is just the "last ressort", if all other failed.
[16:19:36] <phpn00b> like something REALLY got wrong.
[16:19:44] <phpn00b> But I've got sane error codes for all kinds of user input ;)
[16:20:06] <phpn00b> wrong type, forgot an argument, bad formatting etc.
[16:20:40] <da_wunder> that example didn't show that, that is why I raised that up
[16:21:44] <phpn00b> da_wunder: Yeah sorry. I should have explained that better. Sorry :-(
[16:22:04] <phpn00b> da_wunder: This try/catch is just for the case, anything got really wrong :D
[16:22:31] <phpn00b> Like the "require" fails, the function doesn't exist, etc.
[16:22:32] <da_wunder> and if that catch on your example is the last resort, then I would wrap that switch to single function and wrap that function call in single try/catch block
[16:23:07] <phpn00b> da_wunder: ah, makes sense!
[16:23:38] <phpn00b> But then I can't tell, which part failed.
[16:24:00] <da_wunder> you need to log that
[16:24:17] <da_wunder> stacktrace of that error is showing where it's coming
[16:25:21] <phpn00b> Hmm. But that would need lots of more work. Since I want to inform the user e.g. "calculate unavailable". I'd need to figure out WHICH require failed.
[16:25:34] <da_wunder> for user it's just "internal server error" - for you it's something different, you need to see that stacktrace to pinpoint what is happening
[16:26:12] <da_wunder> your user should know what he/she was doing - right?
[16:26:50] <phpn00b> da_wunder: I hope he/she already knows what he/she tried to do ;)
[16:27:16] <da_wunder> so for that user error message could be just "Oh, noes something went wrong, please try it again. If this same continues, please contact our tech support."
[16:27:47] <da_wunder> and then you should have logs where you can see those stacktraces of each error to see what has went wrong
[16:27:54] <phpn00b> da_wunder: Sure. That's the generic way. I just throught: let's be polite and show what failed.
[16:28:25] <phpn00b> da_wunder: Sure, I have logs and they show errors.
[16:29:59] <da_wunder> then couple of choices - throw those specific exceptions (and try to remember to add those everywhere), create logic to determine that user friendly error message in your main try/catch block - you have that exception there so you should be able to do that
[16:31:45] <phpn00b> Yeah, I've tried to catch the specific thrown stuff, e.g. for "require", but then I need to identify the thing that failed already. I ended up doing it THIS way because the try/catch are endpoint specific ;)
[16:32:02] <phpn00b> But this way is pretty hard to read, I'm aware.
[16:32:08] <phpn00b> I'll try it again
[16:33:34] <da_wunder> imho - you should use custom exception classes, when you want to send some specific error message back to user, and in cases when eg. function doesn't exists you really should just send "Internal server error 500", because that is what is happening
[16:34:41] <phpn00b> da_wunder: Okay. I just thought it might be easier if the user would report: "Hey, I got 'endpoint XY is dead', can you have a look"? But I'm having it in the logs anway.
[16:34:54] <phpn00b> So you're right... being polite might not be needed at all ;)
[16:35:22] <da_wunder> just because error like that is _fatal_ and errors like that should not happen, because then you're using not working code
[16:36:33] <da_wunder> and that kind of error is totally different vs some function/method logic error
[16:38:14] <phpn00b> Ok.
[16:38:38] <phpn00b> At least, I'm not sending OK 200 "error", like others :D
[16:40:18] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:40:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:42:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:42:20] *** Joins: LuKaRo (~LuKaRo@p200300dfa732173cc4814602d73ef0b9.dip0.t-ipconnect.de)
[16:42:36] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:42:51] <phpn00b> Sorry, I am back again. Gamja webclient is very instable. Last message was 4 minutes ago :
[16:43:29] <phpn00b> I'm sad that you cannot set a "name" in a try{} block, which can be used in catch{} to identify where it broke.
[16:43:48] <phpn00b> I think I need classes for this?
[16:45:28] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:45:47] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:46:14] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[16:51:42] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:52:01] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:52:32] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[16:55:39] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:55:58] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:57:38] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:57:58] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[16:59:38] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[16:59:58] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:00:26] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[17:04:10] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:04:29] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:06:09] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:06:29] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:12:39] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:12:59] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:14:39] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:14:59] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:16:40] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:16:59] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:18:39] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:18:59] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:20:39] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:21:00] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:21:37] <phpn00b> Wow, this isn't working in PHP 7? I remember that I used it some years ago: https://3v4l.org/sAGD6
[17:23:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:23:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:23:48] <phpn00b> this one works: https://3v4l.org/n2AhE
[17:25:04] <phpn00b> This also works: https://3v4l.org/IWrJY
[17:25:12] <phpn00b> Interesting, then this is new in 8.x
[17:26:09] <da_wunder> because now you're typecasting that input as a string
[17:27:49] <phpn00b> da_wunder, yeah but "100" should also be typecasting as a string?
[17:27:58] <phpn00b> but in the past it needed ("100")
[17:29:33] <da_wunder> those () are needed there, before you try to array access it
[17:29:57] <da_wunder> that is basically doing the same as https://3v4l.org/X7qFd
[17:30:02] *** Joins: magla (~gelignite@d536552c.access.ecotel.net)
[17:31:55] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:32:14] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:32:23] <phpn00b> da_wunder: Thank you
[17:34:03] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:34:22] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:36:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:36:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:38:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:38:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:40:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:40:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:42:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:42:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:44:17] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:44:37] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:48:22] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:48:42] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:52:19] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:52:39] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:54:19] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:54:39] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[17:55:35] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[17:58:33] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[17:58:53] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:00:08] *** Joins: newwebdev13 (~newwebdev@78.135.91.69)
[18:02:31] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:02:51] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:04:31] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:04:52] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:06:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:06:56] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[18:08:45] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:09:05] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:12:43] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:13:03] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:14:32] *** Quits: guido (~weechat@host-87-10-249-107.retail.telecomitalia.it) (Ping timeout: 272 seconds)
[18:16:07] *** Joins: guido (~weechat@host-79-23-252-83.retail.telecomitalia.it)
[18:18:57] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:19:20] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:21:00] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:21:29] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:23:31] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:23:51] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:25:31] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:25:51] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:29:43] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:30:02] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:33:41] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:34:01] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:37:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:38:06] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:44:27] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:44:46] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:46:26] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:46:46] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:48:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:49:13] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:53:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[18:55:35] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[18:55:57] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[18:56:33] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[18:57:31] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[18:59:45] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:00:06] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:01:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:02:06] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:03:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:04:06] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:05:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:06:06] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:07:46] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:08:09] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:09:49] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:10:09] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:16:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:16:31] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:18:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:18:31] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:20:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:20:31] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:22:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:22:31] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:24:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:24:31] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:26:11] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:26:30] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:28:10] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:28:29] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:32:37] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:32:56] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:34:36] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:34:55] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:36:35] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:36:54] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:38:34] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:38:53] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:40:33] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:40:52] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:41:27] <da_wunder> phpn00b: please fix your connection - we're seeing you closing connection and joining again every 4min
[19:42:10] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[19:44:31] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:44:50] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[19:46:36] *** Quits: jhave (~jhave@gw.jdh.dk) (Ping timeout: 245 seconds)
[19:48:21] *** ChanServ sets mode: +o php-bot
[19:48:25] *** php-bot sets mode: +b $a:phpn00b
[19:48:39] <__adrian> phpn00b: fix your connection
[19:51:34] <__adrian>  /msg me if you need help rejoining once fixed
[19:53:14] *** Quits: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de) (Remote host closed the connection)
[19:53:40] *** php-bot sets mode: -o php-bot
[19:59:11] *** Joins: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net)
[20:01:11] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[20:04:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Read error: No route to host)
[20:04:54] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[20:09:40] *** Quits: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:16:03] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[20:24:11] *** Quits: magla (~gelignite@d536552c.access.ecotel.net) (Quit: Stay safe!)
[20:25:05] *** Joins: jhave (~jhave@gw.jdh.dk)
[20:28:45] *** Quits: Awaru (~Awaru@213.152.187.235) (Ping timeout: 256 seconds)
[20:33:07] *** Joins: glider (~glider@user/glider)
[20:34:10] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[20:41:34] *** Quits: guido (~weechat@host-79-23-252-83.retail.telecomitalia.it) (Quit: WeeChat 3.4.1)
[20:53:00] *** ChanServ sets mode: +o __adrian
[20:53:01] *** __adrian sets mode: -b $a:phpn00b
[20:53:09] *** ChanServ sets mode: -o __adrian
[20:53:48] *** Joins: phpn00b (~phpn00b@dynamic-093-131-010-089.93.131.pool.telefonica.de)
[20:54:13] <phpn00b> I hope the client is fixed now. Sorry. Need to switch to a bouncer soon.
[20:54:59] <phpn00b> Does anyone have a sane snippet to detect, if an array is "flat" only? "Flat" means: it shouldn't be a multi-array. On the web there are many solutions, but I don't know if there's a lighter one: https://3v4l.org/R8tng
[20:55:24] <__adrian> you'd loop and make sure no value is an array
[20:57:00] <phpn00b> Yeah. that was my own approach, too. But I thought there might be array_filter() or such? ;)
[20:57:30] <__adrian> array_filter() will touch every item in the array. with foreach (), you can stop as soon as you find an array.
[20:58:26] <__adrian> function array_is_flat(array $a) :bool { foreach ($a as $v) { if (is_array($v)) { return false; } } return true; }
[20:59:42] <phpn00b> okay!
[21:00:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:03:56] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[21:16:53] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:50:00] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[21:50:47] <sumthing1980> hello do you know of a simple in page editor for making simple formatting, like rich text, simple html tags for example
[21:50:59] <sumthing1980> not php I know but maybe you can give me pointers
[21:59:28] *** Joins: roadie (~user@2a02:8108:5a40:1d87:599e:d3ad:56ca:658e)
[22:09:33] <Blondie101010> no good php editor supports HTML *and* vice-versa...  learn to organize your code better
[22:14:33] <sumthing1980> Im looking to make a comment section that has some js I think
[22:14:48] <sumthing1980> that lets you format in bold italic h1 etc
[22:14:53] <sumthing1980> simple stuff
[22:15:28] <sumthing1980> so the browser lets you edit with buttons and uses html in the background and if you send it will send the html code
[22:16:28] *** Quits: jhave (~jhave@gw.jdh.dk) (Ping timeout: 272 seconds)
[22:16:46] <phpn00b> Blondie101010: Didn't phpstorm support this?
[22:17:06] <dag> https://news.ycombinator.com/item?id=30786927
[22:17:10] *** Joins: jhave (~jhave@80-62-117-17-mobile.dk.customer.tdc.net)
[22:17:12] <Blondie101010> does it include a page editro?
[22:17:38] <dag> looks like i will get the last laugh on my friends who bullied me for using php all these years. it's making a comeback
[22:18:24] <phpn00b> Blondie101010: I know some Full Stack devs using phpStorm for both.
[22:18:36] <phpn00b> But at least, vscode should shupport ANYTHING? :D
[22:18:51] <sumthing1980> so to be clear Im not trying to edit php, I use geany
[22:18:57] <dag> but it's also been a nicely visible red flag when people mock php the moment i bring it up. easier to recognize npcs.
[22:19:04] <Blondie101010> phpn00b:  vscode supports page layout editing?
[22:20:12] <Blondie101010> the closest tool I've used was Dreamweaver and it generated awful HTML and didn't support all PHP statements
[22:20:34] <phpn00b> Blondie101010: https://marketplace.visualstudio.com/items?itemName=tizenweb.designeditor
[22:20:53] <phpn00b> There are many WYSIWYG additions in vscode marketplace.
[22:20:59] <sumthing1980> like this
[22:20:59] <sumthing1980> https://www.reddit.com/r/outrun/comments/tpn04o/vr_lounge/
[22:21:19] <Blondie101010> ok, so it does handle them though separately
[22:21:22] <sumthing1980> on reddit in the comment section you can add markup tags
[22:21:29] <Blondie101010> don't mix your languages
[22:21:33] <sumthing1980> Im not trying to edit php
[22:22:11] <Blondie101010> then your question here is *pointless*
[22:22:46] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[22:26:00] *** Joins: funhouse (~funhouse@user/funhouse)
[22:38:29] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[22:40:48] *** Quits: jhave (~jhave@80-62-117-17-mobile.dk.customer.tdc.net) (Read error: Connection reset by peer)
[22:43:55] *** Joins: jhave (~jhave@gw.jdh.dk)
[23:07:13] <da_wunder> personally I like PHPStorm more than VSCode
[23:19:54] *** Joins: magla (~gelignite@d536552c.access.ecotel.net)
[23:23:27] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:23:56] *** Joins: justOkay (~justache@user/justache)
[23:26:56] *** Joins: thiras (~thiras@user/thiras)
[23:29:27] *** Joins: richardjh (~Thunderbi@2a02:c7f:716d:f400:7c77:a742:4661:f27c)
[23:30:23] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:30:36] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[23:52:27] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[23:52:45] *** Quits: richardjh (~Thunderbi@2a02:c7f:716d:f400:7c77:a742:4661:f27c) (Quit: richardjh)
[23:55:15] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:55:55] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
