[00:01:13] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[00:03:22] *** Joins: mro (~mro@2002:5cc3:9cd1:0:7914:f7bd:a792:9067)
[00:18:43] *** Quits: gravicappa (~gravicapp@145.255.1.142) (Ping timeout: 256 seconds)
[00:25:02] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[00:26:37] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[00:40:15] *** Quits: gwizon (~gwizon@ool-457f6b92.dyn.optonline.net) (Ping timeout: 268 seconds)
[00:44:40] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[00:45:39] <d_bot> <myrkraverk> Is it active?
[00:45:48] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[00:45:50] <d_bot> <myrkraverk> [And I'm not on libera, though I guess I could change that.]
[00:49:05] <d_bot> <myrkraverk> .
[00:50:20] <d_bot> <myrkraverk> In Standard ML, is there an obvious choice for a simple symbol table [for an assembler; project/challenge 1-1 just has single character labels, so there are only ever 26 entries.]
[00:52:03] <companion_cube> so you mean, an array?
[00:52:35] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 268 seconds)
[00:54:38] <d_bot> <myrkraverk> Well, possibly.  Each entry has a lot of stuff, like, a label can be used several times before it's defined.
[00:55:35] <d_bot> <myrkraverk> The symbol table might be different for a 1-pass and a 2-pass assembler.  Both are part of challenge 1-1.
[01:00:56] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Read error: Connection reset by peer)
[01:01:13] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[01:01:56] <d_bot> <myrkraverk> .
[01:02:27] <d_bot> <myrkraverk> Then of course, later on exercises and further projects add multi character labels, so it won't always be just 26 entries.
[01:03:17] *** Quits: mro (~mro@2002:5cc3:9cd1:0:7914:f7bd:a792:9067) (Ping timeout: 240 seconds)
[01:14:35] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: バイバイ)
[01:16:51] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[01:25:49] *** Joins: ctk (~calimero@ctkarch.org)
[01:25:58] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Read error: Connection reset by peer)
[01:28:32] *** Quits: ctk (~calimero@ctkarch.org) (Changing host)
[01:28:32] *** Joins: ctk (~calimero@user/calimeroteknik)
[01:28:39] *** ctk is now known as CalimeroTeknik
[01:39:09] *** Joins: olle (~olle@i5E866D87.versanet.de)
[01:43:40] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[01:48:36] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:17:29] *** Joins: zebrag (~chris@user/zebrag)
[02:32:29] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:42:54] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[02:44:10] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[02:49:40] *** Joins: spip (~bobo@37.170.242.58)
[02:50:22] *** Quits: bobo_ (~bobo@37.171.45.122) (Ping timeout: 268 seconds)
[02:56:06] *** Joins: bobo_ (~bobo@37.170.242.58)
[02:56:32] *** Quits: spip (~bobo@37.170.242.58) (Ping timeout: 268 seconds)
[03:01:56] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:06:39] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[03:07:07] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[03:11:56] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[03:22:25] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[03:27:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[03:37:16] *** Quits: olle (~olle@i5E866D87.versanet.de) (Ping timeout: 256 seconds)
[03:47:51] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 245 seconds)
[03:56:01] *** Joins: chiastre (~chiastre@user/chiastre)
[04:32:47] *** Joins: spip (~bobo@37.170.242.58)
[04:33:58] *** Quits: bobo_ (~bobo@37.170.242.58) (Ping timeout: 268 seconds)
[04:43:49] <d_bot> <darrenldl> a map seems suitable(?
[04:46:03] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Remote host closed the connection)
[04:46:21] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:47:46] *** Quits: towel_ (~towel@user/towel) (Quit: ZNC - https://znc.in)
[04:48:00] *** Joins: towel (~towel@user/towel)
[04:48:30] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:48:37] *** Quits: micro_ (~micro@user/micro) (Ping timeout: 240 seconds)
[04:48:53] *** Joins: zebrag (~chris@user/zebrag)
[04:49:23] *** Quits: Armael (~Armael@macaron.isomorphis.me) (Ping timeout: 268 seconds)
[04:49:37] *** Joins: micro (~micro@user/micro)
[04:49:43] *** Quits: hannes (~hannes@193.30.40.133) (Read error: Connection reset by peer)
[04:50:29] *** Joins: hannes (~hannes@193.30.40.133)
[05:02:57] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 268 seconds)
[05:05:38] *** Joins: epony (epony@user/epony)
[05:07:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:39] *** Joins: chiastre (~chiastre@user/chiastre)
[05:26:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:55:22] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[05:58:14] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[05:58:40] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[06:00:17] *** Quits: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[06:34:12] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Read error: Connection reset by peer)
[06:39:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:43:15] *** Joins: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net)
[07:12:08] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:12] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[08:00:44] *** Joins: mbuf (~Shakthi@171.61.172.103)
[08:20:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:28:32] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:30:46] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[08:57:13] *** Quits: spip (~bobo@37.170.242.58) (Ping timeout: 256 seconds)
[08:57:14] *** Joins: bobo_ (~bobo@37.170.242.58)
[09:00:52] *** Joins: gravicappa (~gravicapp@145.255.1.142)
[09:08:10] *** Quits: ansiwen_ (~sanders@vm1.a6n.de) (Quit: ZNC 1.7.1 - https://znc.in)
[09:09:53] *** Joins: ansiwen (~sanders@vm1.a6n.de)
[09:29:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:52:42] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:52] *** Quits: Ekho (~Ekho@user/ekho) (Quit: CORE ERROR, SYSTEM HALTED.)
[09:56:09] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (Ping timeout: 256 seconds)
[09:59:23] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[10:05:09] *** Joins: Ekho (~Ekho@user/ekho)
[10:05:59] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[10:11:17] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[10:28:06] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[10:28:49] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:41:45] *** Joins: kaph (~kaph@an-19-174-100.service.infuturo.it)
[10:50:30] *** Quits: kaph (~kaph@an-19-174-100.service.infuturo.it) (Read error: Connection reset by peer)
[10:50:56] *** Joins: kaph (~kaph@an-19-174-100.service.infuturo.it)
[11:11:10] *** Joins: kaph_ (~kaph@151.57.50.182)
[11:11:55] *** Quits: kaph (~kaph@an-19-174-100.service.infuturo.it) (Read error: Connection reset by peer)
[11:28:20] *** Quits: kaph_ (~kaph@151.57.50.182) (Remote host closed the connection)
[11:34:26] *** Joins: kaph (~kaph@151.57.50.182)
[11:35:00] *** Quits: kaph (~kaph@151.57.50.182) (Remote host closed the connection)
[11:39:54] *** Joins: kaph (~kaph@151.57.50.182)
[11:40:06] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[11:57:25] *** Quits: kaph (~kaph@151.57.50.182) (Ping timeout: 256 seconds)
[12:05:31] *** Joins: Armael (~Armael@macaron.isomorphis.me)
[12:12:43] *** Joins: spip (~bobo@37.170.242.58)
[12:13:23] *** Quits: bobo_ (~bobo@37.170.242.58) (Ping timeout: 268 seconds)
[12:24:09] *** Joins: bobo_ (~bobo@37.170.242.58)
[12:25:06] *** Quits: spip (~bobo@37.170.242.58) (Ping timeout: 268 seconds)
[12:32:14] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[13:12:25] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Remote host closed the connection)
[13:19:14] *** Joins: olle (~olle@i5E866D9A.versanet.de)
[13:33:26] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[13:39:59] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Ping timeout: 256 seconds)
[13:41:32] *** Joins: caasih_ (sid13241@id-13241.ilkley.irccloud.com)
[13:41:37] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: caasih (sid13241@id-13241.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: ado (sid462155@id-462155.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[13:41:37] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (Ping timeout: 240 seconds)
[13:41:37] *** caasih_ is now known as caasih
[13:41:43] *** Joins: conjunctive_ (sid433686@id-433686.helmsley.irccloud.com)
[13:41:49] *** Joins: ado (sid462155@id-462155.uxbridge.irccloud.com)
[13:41:57] *** Quits: noddy (~user@user/noddy) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: sparogy (~sparogy@2604:a880:cad:d0::648:8001) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: landonf (landonf@mac68k.info) (Ping timeout: 240 seconds)
[13:42:18] *** conjunctive_ is now known as conjunctive
[13:42:37] *** Quits: remexre (~remexre@user/remexre) (Ping timeout: 240 seconds)
[13:42:38] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[13:43:04] *** Joins: greaser|q (greaser@antihype.space)
[13:43:08] *** Joins: sparogy (~sparogy@afontaine.dev)
[13:43:16] *** Joins: remexre (~remexre@user/remexre)
[13:43:57] *** Joins: chiastre (~chiastre@user/chiastre)
[13:44:15] *** Joins: noddy (~user@user/noddy)
[13:44:31] *** Quits: ansiwen (~sanders@vm1.a6n.de) (Ping timeout: 256 seconds)
[13:44:51] *** Joins: ansiwen (~sanders@vm1.a6n.de)
[13:46:13] *** Quits: Armael (~Armael@macaron.isomorphis.me) (Ping timeout: 256 seconds)
[13:46:13] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[13:50:09] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[13:54:30] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[13:58:56] *** Joins: Armael (~Armael@macaron.isomorphis.me)
[14:03:37] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Ping timeout: 240 seconds)
[14:15:11] *** Quits: pgiarrusso (sid258222@2a03:5180:f:4::3:f0ae) (Ping timeout: 250 seconds)
[14:15:28] *** Joins: pgiarrusso (sid258222@id-258222.hampstead.irccloud.com)
[14:15:47] *** Joins: d_bot_ (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027)
[14:17:21] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027) (Ping timeout: 250 seconds)
[14:17:28] *** Joins: SoniEx2 (~quassel@autistic.space)
[14:18:00] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Read error: Connection reset by peer)
[14:18:27] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[14:35:13] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[14:38:43] *** Joins: landonf (landonf@mac68k.info)
[14:39:53] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Ping timeout: 250 seconds)
[14:49:33] *** Joins: spip (~bobo@37.170.231.47)
[14:49:37] *** Quits: bobo_ (~bobo@37.170.242.58) (Ping timeout: 240 seconds)
[14:57:15] *** Joins: bartholin (~bartholin@158.110.70.210)
[15:00:18] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:6467:c9ec:5037:de45)
[15:07:33] *** Joins: mro (~mro@2002:5cc3:c990:0:3032:4a4c:d5e0:f8be)
[15:08:00] *** Joins: bobo_ (~bobo@37.170.231.47)
[15:08:23] *** Quits: spip (~bobo@37.170.231.47) (Ping timeout: 256 seconds)
[15:09:32] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[15:11:11] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[15:11:58] *** Quits: mro (~mro@2002:5cc3:c990:0:3032:4a4c:d5e0:f8be) (Ping timeout: 250 seconds)
[15:17:45] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Remote host closed the connection)
[15:17:52] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[15:20:46] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Remote host closed the connection)
[15:30:46] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[15:32:43] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Remote host closed the connection)
[15:38:14] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[16:02:19] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[16:02:19] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[16:02:19] *** Joins: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d)
[16:02:19] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[16:02:19] *** Joins: Sofi (~sofi@2001:470:69fc:105::1:44cc)
[16:02:19] *** Joins: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1)
[16:03:12] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Quit: Client limit exceeded: 20000)
[16:04:53] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[16:09:34] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (Quit: Client limit exceeded: 20000)
[16:09:34] *** Quits: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1) (Quit: Client limit exceeded: 20000)
[16:10:35] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Quit: Client limit exceeded: 20000)
[16:45:25] *** Joins: kaph (~kaph@151.37.72.8)
[16:46:28] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:01:25] *** Joins: kaph_ (~kaph@151.35.35.178)
[17:01:39] *** Quits: kaph (~kaph@151.37.72.8) (Read error: Connection reset by peer)
[17:06:15] *** Quits: gravicappa (~gravicapp@145.255.1.142) (Ping timeout: 256 seconds)
[17:09:49] *** Quits: kaph_ (~kaph@151.35.35.178) (Remote host closed the connection)
[17:10:05] *** Joins: kaph (~kaph@151.35.35.178)
[17:16:02] *** Quits: kaph (~kaph@151.35.35.178) (Read error: Connection reset by peer)
[17:44:13] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[17:52:52] *** Joins: Haudegen (~quassel@91.114.49.10)
[18:14:05] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[18:14:24] <d_bot_> <myrkraverk> I did not find any map-like data structure in the standard library.
[18:14:24] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[18:14:24] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[18:14:38] *** Joins: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1)
[18:14:41] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[18:14:41] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[18:14:45] <d_bot_> <myrkraverk> But I can roll my own, or use <https://hg.sr.ht/~cannam/sml-trie> maybe.
[18:15:25] <d_bot_> <orbitz> @myrkraverk  https://ocaml.org/releases/4.13/api/Map.html ?
[18:15:41] <d_bot_> <myrkraverk> I'm using _standard ML_, for this project.
[18:16:14] <d_bot_> <orbitz> ohh sorry
[18:16:30] <d_bot_> <myrkraverk> No worries.  The mods have not yet deigned to create an #sml channel.
[18:20:23] <d_bot_> <KW78> there is a ml-general channel in the functional programming discord
[18:20:24] <d_bot_> <KW78> https://discord.com/channels/280033776820813825/899463437212610590
[18:22:38] <d_bot_> <Butanium (@me on answer)> You have to give an invitation to this channel
[18:22:45] <d_bot_> <Butanium (@me on answer)> A link is not enough
[18:25:43] <d_bot_> <KW78> ok tks done (but I have a weird error Internal Server Error although the invite does appear)
[18:26:31] *** Quits: chrisz (tcy7b45777@55d43e0c.access.ecotel.net) (Remote host closed the connection)
[18:30:11] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Remote host closed the connection)
[18:39:23] <d_bot_> <colin> SMLNJ lib supports RedBlackMapFn
[18:39:36] <d_bot_> <colin> ships with MLton, with patches, just need to include in mlbasis file and it will just work
[18:40:35] <Armael> mmh, would it be possible to rename back d_bot_ to d_bot on IRC?
[18:41:26] *** Joins: gravicappa (~gravicapp@145.255.1.142)
[18:41:44] <Armael> not sure who to ask
[18:42:16] <companion_cube> bluddy I think
[18:53:27] <olle> Or "dbot"
[18:54:46] *** Joins: gwizon (~gwizon@ool-457f6b92.dyn.optonline.net)
[19:16:21] *** Parts: tankf33der (mpech@envs.net) (the lounge - https://webirc.envs.net)
[19:35:23] <adrien> Armael: why?
[19:35:55] <Armael> because I configured weechat to display "d_bot"'s messages like normal messages
[19:36:01] <Armael> (the config was from zozozo I believe)
[19:36:16] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[19:36:22] <Armael> but if the bot changes name well it doesn't work anymore
[19:38:09] *** Quits: rak (~rak@debian/rak) (Quit: Segmentation fault (core recycled))
[19:40:03] *** Joins: rak (~rak@debian/rak)
[19:43:33] <zozozo> Armael: note that you can have multiple configurations for my script, e.g. on my instance of weechat I have it configured to work for both d_bot and d_bot_
[19:57:40] *** Quits: Absalom (kax@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:58:05] *** Joins: Absalom (kax@envs.net)
[20:02:54] *** Joins: jlrnick (~josephler@2a01cb040a1594005527cf31a8bff18b.ipv6.abo.wanadoo.fr)
[20:06:43] <adrien> Armael: then handle trailing underscores! :D
[20:07:16] <adrien> it merely means the bot is not currently identifier to IRC services, it's probably something fairly common
[20:07:42] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[20:08:19] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Client Quit)
[20:08:23] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Remote host closed the connection)
[20:21:22] *** Quits: jlrnick (~josephler@2a01cb040a1594005527cf31a8bff18b.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:26:01] <Armael> :'(
[20:27:13] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:35:10] *** Joins: chrisz (ctgsfjujn6@55d43e0c.access.ecotel.net)
[20:36:24] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[20:42:41] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[20:48:16] *** Quits: mbuf (~Shakthi@171.61.172.103) (Quit: Leaving)
[21:09:32] <d_bot_> <Président daren le pétrolier> Hi! I'm looking for the implementation of the stdlib `Stream` module in the compiler repo but I can't find it in the `stdlib/` directory, does anyone know its source?
[21:10:59] <companion_cube> it's just been removed, if you're looking at trunk
[21:11:08] <companion_cube> not in stdlib anymore 💃
[21:15:02] <Armael> https://github.com/ocaml/camlp-streams it's there now
[21:16:08] <companion_cube> it's just so… strange :D
[21:18:07] <d_bot_> <undu> is there anywhere I can read about the reasoning behind the removal? the PR is quite empty
[21:25:24] <d_bot_> <Président daren le pétrolier> oh curious, thank you!
[21:27:49] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[21:29:44] <companion_cube> the usage has been discouraged for years, although I don't remember official stuff right now
[21:30:00] <companion_cube> but basically, Stream is a weird, kind of slow, quirky form of iterators
[21:31:04] <d_bot_> <Président daren le pétrolier> I'm looking for a data structure to read line by line a file without loading it entirely in memory, I thought that the streams could be adapted
[21:31:39] <d_bot_> <Président daren le pétrolier> do you know of a more suitable structure for this usage?
[21:32:39] <companion_cube> well, the simpler is a recursive function with `input_line`
[21:32:57] <companion_cube> that said, Seq.t is standard now, and I have a collection of iterators that do that kind of stuff
[21:33:09] <companion_cube> but there's no iterator that's perfectly adapted to IOs I think, alas
[21:36:03] *** Quits: bartholin (~bartholin@158.110.70.210) (Quit: Leaving)
[21:38:50] <d_bot_> <Président daren le pétrolier> oh ok, good to know
[21:39:04] <d_bot_> <Président daren le pétrolier> what are the differences between a stream and a `Seq.t`?
[21:43:30] *** Quits: gwizon (~gwizon@ool-457f6b92.dyn.optonline.net) (Quit: Lost terminal)
[21:51:10] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:04:21] <companion_cube> well, check out the implementations
[22:07:51] <d_bot_> <Président daren le pétrolier> I will do that, thank you 🙂
[22:10:56] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:13:36] *** Joins: mro (~mro@port-92-195-201-144.dynamic.as20676.net)
[22:18:22] *** Joins: rgrinberg (~textual@187.223.115.137)
[22:22:25] *** Quits: mro (~mro@port-92-195-201-144.dynamic.as20676.net) (Quit: Leaving...)
[22:44:23] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:48:56] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Remote host closed the connection)
[22:49:16] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[22:52:03] *** Joins: zebrag (~chris@user/zebrag)
[23:00:28] *** Quits: rgrinberg (~textual@187.223.115.137) (Read error: Connection reset by peer)
[23:01:41] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[23:02:28] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:45] <d_bot_> <EduardoRFS> If anyone wants bikeshedding, good PR https://github.com/ocaml/ocaml/pull/10979
[23:08:17] <d_bot_> <octachron> You even gave room for bikeshedding with `(let.)`, `let!` and `let+x = Some 0 in x`!
[23:13:02] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:13:02] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:13:05] *** greaser|q is now known as GreaseMonkey
[23:17:28] <d_bot_> <EduardoRFS> I just made it exactly the same as Reason but we can remove those, I didn't understand the `let+x = Some 0 in x` case
[23:17:30] <d_bot_> <VPhantom> Oh that is a nice one!
[23:20:49] <d_bot_> <VPhantom> For now what I do is dedicate one character per monad (`let|` for `Option.bind`, `let*` for `Result.bind` or `Lwt_result.bind` depending on context, etc.)
[23:20:56] <companion_cube> let.1 x = … in let.2 y = … in x,y
[23:20:59] <companion_cube> can't wait :p
[23:21:25] <d_bot_> <EduardoRFS> I guess it's better than >>=?=
[23:21:27] <d_bot_> <VPhantom> The notion of having a short keyword instead would definitely make things more explicit for the reader.
[23:22:02] <d_bot_> <octachron> `let+x = Some 0 in x` is currently valid since `x` is the start of a new token. With the extension of the `letopsymbolchar` in your PR, the expression is now tokenized as `let+x`  `=` ... and triggers a syntax error.
[23:22:38] <d_bot_> <EduardoRFS> and as a core maintainer you cannot unsee that right?
[23:22:43] <d_bot_> <VPhantom> What does `let+x` currently mean in that example?
[23:22:48] <d_bot_> <EduardoRFS> let+ x
[23:22:52] <d_bot_> <VPhantom> Oh!
[23:22:57] <d_bot_> <davesnx> I 100% believe that landing a syntactic feature in OCaml is just opening the PR straight away
[23:23:04] <d_bot_> <davesnx> I love you @EduardoRFS
[23:24:12] <d_bot_> <EduardoRFS> I always forget that OCaml accepts a lot of code without spaces
[23:24:20] <d_bot_> <EduardoRFS> it's not even whitespace insensitive just not insensitive
[23:24:26] <d_bot_> <EduardoRFS> just insensitive
[23:25:21] <d_bot_> <octachron> @EduardoRFS , I cannot unsee that this is a breaking change, but it would not be the first time that we break code with missing conceptually required white spaces.
[23:26:00] <d_bot_> <octachron> There was a similar issue with `< 'a.?x:int -> ... >` and the custom indexing operators.
[23:27:13] <d_bot_> <VPhantom> Since `let.` and `let!` weren't allowed as let bindings, then the `.` or `!` make sense as the keyword "introducers" here, to me.
[23:28:50] <d_bot_> <EduardoRFS> ! will not cut, as gasche mentioned in the PR, so we can use `.` and multiple `.`
[23:29:06] <companion_cube> let<await>
[23:29:30] <d_bot_> <VPhantom> Yeah, `.` is more intuitive to me anyway. 😛 That PR is actually what I expected when I heard let bindings were coming, before I saw the single-symbol implementation.
[23:30:15] <d_bot_> <VPhantom> @companion_cube That seems unnecessarily "noisy" to me. The period is discrete, and it's half the characters also.
[23:30:31] <companion_cube> I was kidding :p
[23:30:35] <companion_cube> I do think the dot is good.
[23:30:35] <d_bot_> <VPhantom> Whew! 😛
[23:31:38] <d_bot_> <octachron> only with unicode angled brackets `let❬await❭` , `<` is a binary operator not a bracket.
[23:31:47] <d_bot_> <VPhantom> oh boy…
[23:32:18] <companion_cube> :D
[23:32:25] <companion_cube> the classic go solution
[23:34:19] <d_bot_> <EduardoRFS> I'm pretty sure golang people were using this for generics at some point
[23:34:30] <d_bot_> <EduardoRFS> https://news.ycombinator.com/item?id=14276891
[23:34:30] <d_bot_> <EduardoRFS> yes
[23:35:23] <d_bot_> <VPhantom> All those wrapping brackets and what not is why I feel uncomfortable with the likes of Rust and Java. They're a sea of symbols compared to how clean OCaml can be.
[23:37:04] <d_bot_> <d4hines> I'm working on an application that uses Lwt to process incoming messages asynchronously, but I'm trying to offload expensive (pure) computations to another domain using `Lwt_domain` . However, my application also calls other programs using `Lwt_process.pmap`, which calls `Unix.fork` under the hood. This raises the error:
[23:37:05] <d_bot_> <d4hines> ```
[23:37:06] <d_bot_> <d4hines> Unix.fork may not be called while other domains were created
[23:37:08] <d_bot_> <d4hines> ```
[23:37:09] <d_bot_> <d4hines> What is the prescribed way to call other programs when using multicore?
[23:45:24] <d_bot_> <EduardoRFS> actually that's a good question, why does multicore banned fork? Also how can I execute a CLI without it?
[23:46:19] <companion_cube> EduardoRFS: can we also get `;.foo` ?
[23:46:30] <companion_cube> I hate `let.blabla () = …`  so much
[23:46:36] <companion_cube> or `let+ () = …`
[23:47:00] <d_bot_> <EduardoRFS> no
[23:47:16] <d_bot_> <EduardoRFS> Didn't knew that I had veto power, but it's nice to use it
[23:47:28] <companion_cube> :(
[23:47:35] <companion_cube> sa
[23:47:37] <companion_cube> d
[23:55:13] <d_bot_> <octachron> with `create_process` and friends?
[23:56:23] <sadiq> You can fork but only if you've only ever had a single Domain
[23:56:46] <sadiq> oh I see that's already been said earlier =)
[23:56:47] <companion_cube> ofc the problem is if create_process and the likes are too limitd
[23:56:53] <companion_cube> which, they sometime are :/
[23:57:27] <sadiq> how might they be too limited?
[23:57:39] <sadiq> (am not saying they aren't, I just don't know what the other use cases are)
[23:58:20] <companion_cube> well, if you want to be able to pkill the process, and redirect/read stdin/stderr/stdout, and possibly enforce a timeout, and get the exit code
[23:58:31] <companion_cube> I think there's not one API that does all of them
[23:58:56] <companion_cube> I certainly havea couple of "popen" like functions that redo create_process, but with more options, because I often need a timeout on my subprocesses
