[00:02:19] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:05:35] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[00:07:26] <codebam> does anyone know what might be causing this error with graphql codegen? https://x0.at/QzlQ.txt
[00:11:04] <GreenJello> version mismatch?
[00:11:35] <GreenJello> really could be any number of things
[00:11:37] <GreenJello> really could be any number of things
[00:11:53] <systemfault> really could be any number of things
[00:12:00] <GreenJello> lol, sorry
[00:13:11] *** Quits: hexeme (~hexeme@user/hexeme) (Quit: co'o ro do)
[00:13:29] <merpnderp> It's life.
[00:13:32] <merpnderp> life is hard.
[00:13:34] <merpnderp> Then you die.
[00:13:39] <neshpion> life?
[00:13:41] <neshpion> really could be any number of things
[00:14:20] *** Joins: Noustropos (~Noustropo@91.221.89.10)
[00:14:22] *** Joins: hexeme (~hexeme@user/hexeme)
[00:16:04] <sheetjs> do you ever wonder about the before time?
[00:16:14] <neshpion> the land before time?
[00:16:25] <sheetjs> dBASE II/86      1 July 1983
[00:16:39] <GreenJello> the time before land
[00:17:11] <neshpion> the land down under
[00:17:12] *** Joins: onosendi (~onosendi@user/onosendi)
[00:18:21] *** Joins: sillyslux__ (~silly@user/silly)
[00:18:44] <systemfault> Well... the before time isn't that old...
[00:18:54] <systemfault> n> +(new Date())
[00:18:55] <jellobot> (okay) 1628020135149
[00:19:03] <systemfault> n> new Date(0)
[00:19:03] <jellobot> (okay) 1970-01-01T00:00:00.000Z
[00:19:13] *** Joins: Atum_ (IRC@user/atum/x-2392232)
[00:19:30] <sheetjs> i'd venture to guess that most people here were born after the epoch
[00:21:09] *** Joins: Guest39 (~Guest39@p200300c8cf22760046d0b83c644df6d8.dip0.t-ipconnect.de)
[00:21:20] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:21:44] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[00:21:46] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[00:22:06] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:22:27] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 276 seconds)
[00:22:33] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[00:23:19] *** Quits: Guest39 (~Guest39@p200300c8cf22760046d0b83c644df6d8.dip0.t-ipconnect.de) (Client Quit)
[00:25:00] *** Joins: Pilik (~Pil@80.255.81.66)
[00:25:04] *** Quits: Pil (~Pil@80.255.81.66) (Read error: Connection reset by peer)
[00:26:40] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:27:45] *** Joins: PrenzlBu_ (~PrenzlBur@p200300ca57319c0021345bbb156be496.dip0.t-ipconnect.de)
[00:29:38] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:316f:1a84:f8a0:c03a) (Quit: Textual IRC Client: www.textualapp.com)
[00:31:45] <codebam> GreenJello: how would I check for a version mismatch?
[00:32:08] <codebam> is there another way I can debug where this error is coming from?
[00:32:48] *** Joins: mrdata (~mrdata@user/mrdata)
[00:34:10] *** Quits: PrenzlBu_ (~PrenzlBur@p200300ca57319c0021345bbb156be496.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:34:16] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[00:34:24] <GreenJello> codebam, link to the repo again?
[00:34:26] *** Joins: thiras (~thiras@user/thiras)
[00:34:27] *** Joins: onosendi (~onosendi@user/onosendi)
[00:35:52] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:36:29] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[00:37:35] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:38:47] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 258 seconds)
[00:40:24] <codebam> GreenJello: https://github.com/benbender/next-datocms-ts
[00:40:41] <codebam> that's the repo, I unpacked it into my next.js site under pages/blog
[00:41:20] <codebam> then moved files around into their proper folders
[00:41:36] <GreenJello> you're probably using the wrong version of @graphql-codegen/cli
[00:41:55] <codebam> how do I check or switch versions? which version should I be using?
[00:41:58] <GreenJello> you should be invoking it with npx to use the one from package.json
[00:42:10] <codebam> I just installed the latest one
[00:42:11] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[00:42:11] <codebam> okay
[00:42:13] <GreenJello> which is version 1.x
[00:42:31] <GreenJello> latest is 2.x, but the repo doesn't seem to have been updated for it
[00:42:47] <GreenJello> if you want to upgrade, you'll have to read the changelog and/or migration guide
[00:42:53] <codebam> I ran it with `npx graphql-codegen` but I get the same error. it's 1.21.8
[00:43:23] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 258 seconds)
[00:43:30] *** Joins: z1haze (~z1haze@user/z1haze)
[00:44:00] <z1haze> how can i use a variable in my regex, eg instead of /\d\w{2}/ i want to replace the digit with an actual number im looking for
[00:44:33] *** Quits: mattil (~mattilinn@62-113-176-119.bb.dnainternet.fi) (Quit: Leaving)
[00:44:35] <GreenJello> codebam, I don't have any other ideas, aside from googling everything you can think of and reading issue threads
[00:44:45] <codebam> okay, thank you
[00:44:48] <GreenJello> z1haze, you have to use new RegExp
[00:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:10] <GreenJello> and pass it a string representing the regex
[00:45:11] *** Joins: name-- (~Mysteryhu@2001:4bb8:2e9:6503:8d7b:d6b4:1114:6334)
[00:45:14] <z1haze> and its just a concatenated string?
[00:45:18] <GreenJello> yeah
[00:45:28] <z1haze> i wonder if it just not support template strings, because i tried that
[00:45:31] <GreenJello> String.raw is helpful when doing this
[00:45:54] <GreenJello> new RegExp(String.raw`${digit}\w{2}`)
[00:46:18] <z1haze> let me try, thanks
[00:47:17] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:42] <GreenJello> the other thing of note is that you really want to validate inputs to this if it can be user-influenced, to prevent regex DOS attacks
[00:47:59] <GreenJello> so in this case, checking that it's a single digit, if the user provides the digit
[00:47:59] *** Quits: Pilik (~Pil@80.255.81.66) (Read error: Connection reset by peer)
[00:48:02] *** Quits: thehunter (~Mysteryhu@2001:4bb8:2e1:69d9:8d7b:d6b4:1114:6334) (Ping timeout: 245 seconds)
[00:48:11] *** Joins: Pil (~Pil@80.255.81.66)
[00:48:11] <z1haze> oh im not doing this on an input
[00:48:18] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[00:48:48] <z1haze> so my ide really does not like this
[00:48:52] <z1haze> new RegExp(String.raw(`${digit}\w{2}`));
[00:49:04] <z1haze> i assumed you missed the opening (.. let me know if that was on purpose
[00:49:23] <GreenJello> my code is correct
[00:49:25] <z1haze> oh lmao
[00:49:28] <z1haze> sorry
[00:49:29] <GreenJello> it's a tagged template literal
[00:49:41] <entuland> doesn't like it how exactly? highlighting or execution?
[00:50:27] *** Joins: onosendi (~onosendi@user/onosendi)
[00:50:41] <z1haze> nah, after doing it how he had it, its fine
[00:50:46] <GreenJello> you can double-escape instead of using String.raw if it's a problem, but I'd only recommend that if you have a liner reporting on useless escapes
[00:51:02] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Quit: Atum_)
[00:51:03] <GreenJello> ah, cool
[00:51:20] <z1haze> i incorreclt assumed that .raw was a method
[00:54:53] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 258 seconds)
[00:58:09] <sheetjs> "invalid range in character set" does IE 5 support utf-8?
[00:58:56] <systemfault> DOS... and now IE5? We're in 2021, aren't we?
[00:59:34] <sheetjs> haha sometimes issues pull us back to the before time
[00:59:37] <GreenJello> I have a friend that was playing with MacOS 7.6 over the weekend
[00:59:58] <sheetjs> there was some dbf parsing issue wherein a crafted file would freeze chrome
[01:00:19] <sheetjs> it's been years so I wanted to understand exactly how older versions would handle those cases
[01:00:43] <sheetjs> and there's lots of random little corner cases hidden in the 1970s and 1980s
[01:01:05] <sheetjs> for example, a test file with dBASE II had a number field which had the text "       .   "
[01:01:33] <sheetjs> somehow an adjacent field, also intended to be empty, had "      0.000"
[01:01:57] *** Joins: Atum_ (IRC@user/atum/x-2392232)
[01:02:00] <sheetjs> and it's really unclear if dBASE II can be forced to generate that weird blank number.  loading the db and running list shows 0.000 for the blank cell
[01:02:27] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:03:25] <sheetjs> as another example, sheetjs currently ignores deleted records, but dBASE II treats deleted records like how Excel treats hidden records
[01:03:46] <sheetjs> so i'm not sure whether those rows should be created and marked as hidden or just skipped
[01:05:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:05:16] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Client Quit)
[01:05:51] <sheetjs> n> Array.from({length:100e6})
[01:05:57] <jellobot> (timeout)
[01:06:18] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[01:07:40] <sheetjs> systemfault: ^^ that's how the issue manifested itself in 2021
[01:08:05] <systemfault> An array of only 100M elements, NO PROBLEM
[01:08:27] <wroathe> What's the worst that could happen
[01:08:38] <sheetjs> apparently a CVE or 3
[01:09:33] *** Joins: summersault2 (~summersau@179.221.251.16)
[01:09:40] *** Joins: onosendi (~onosendi@user/onosendi)
[01:09:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[01:10:55] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[01:11:24] <sheetjs> kinda feel bad that no one seriously expressed interest in data preservation
[01:11:30] *** Quits: summersault (~summersau@2804:7f0:3886:c810:81aa:5e4d:9476:179f) (Ping timeout: 240 seconds)
[01:12:51] <systemfault> Like what?
[01:13:07] <systemfault> Tons of people are interested in writing console emulators for example
[01:13:27] <systemfault> Not that many people are interested in Excel file formats...
[01:13:52] <sheetjs> not specifically "Excel file formats" but government still holds and distributes data in lotus 1-2-3
[01:14:40] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[01:14:56] <sheetjs> https://www.fhwa.dot.gov/ohim/hs97/metric.htm
[01:14:57] <wroathe> systemfault: That's a good point. There are probably some cooks that think that all data should be preserved and have decicated a portion of their lives to preserving it, but for most people it's highly dependent on their interests.
[01:15:22] <wroathe> kooks*
[01:15:29] <systemfault> wroathe: Are you hungry? ;)
[01:15:35] <wroathe> systemfault: Always
[01:15:54] <wroathe> But not for cooks - they tend to taste like cigarettes and anxiety
[01:17:45] <theskillwithin> 😮 import configData from './config-data.json' assert {type: 'json'};
[01:18:04] <theskillwithin> 😃 import styleSheet from "./styles.css" assert { type: "css" };
[01:18:41] <wroathe> theskillwithin: Is that a syntax extension or something?
[01:19:25] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Ping timeout: 258 seconds)
[01:21:32] <theskillwithin> wroathe I think its new syntax, native in the browser. i tthink
[01:22:11] <theskillwithin> https://github.com/tc39/proposal-json-modules
[01:23:25] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[01:23:58] <wroathe> theskillwithin: Interesting
[01:29:34] <theskillwithin> ya, before, I think even using webpack you couldn't import a .json module only js modules
[01:33:08] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[01:34:25] <ljharb> it's import assertions
[01:34:32] <ljharb> which was required by JSON modules
[01:34:45] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:34:46] <ljharb> it's required in browsers for JSON, it's not required in node
[01:34:52] <wroathe> theskillwithin: You've been able to import json with webpack forever. They talk about that in the issue that motivated this addition in that proposal you linked.
[01:34:53] <ljharb> or at least, it won't/shouldn't be
[01:34:57] <ljharb> and browsers will require it for css
[01:35:09] <ljharb> (but browsers don't support css imports, so it's up to your bundler)
[01:35:21] <wroathe> Now that the syntax for imports is getting more complicated though, I'm a bit disappointed they didn't just use and extend commonjs
[01:36:00] <ljharb> yeah ESM is pretty unfortunate, that's true
[01:36:43] <wroathe> require(id, contentType) or some such
[01:37:42] <sheetjs> they say commonjs is the DOS of javascript modules
[01:39:25] <wroathe> who is they
[01:39:39] <sheetjs> the esm zealotry
[01:39:52] <wroathe> Ah
[01:40:46] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:c9e:1cfa:7bc2:1ccc)
[01:41:00] <wroathe> Hardly the only advantage, but one nice thing about require just being a plain old function is that it composes well. For example, you can define a const requireJson = id => require(id, 'json');
[01:41:31] <sheetjs> `import()` was added later for that
[01:41:43] <sheetjs> but it's nowhere near as flexible as require
[01:42:02] <sheetjs> hmm why does trimEnd and trimRight exist
[01:42:10] <sheetjs> !mdn trimRight
[01:42:11] <jellobot> sheetjs, String.prototype.trimEnd() - The trimEnd() method removes whitespace from the end of a string. trimRight() is an alias of this method. https://mdn.io/trimright
[01:42:21] *** Quits: Pil (~Pil@80.255.81.66) (Read error: Connection reset by peer)
[01:42:31] *** Joins: Pil (~Pil@80.255.81.66)
[01:43:52] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[01:45:28] *** Joins: codebam (~codebam@user/codebam)
[01:46:55] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 250 seconds)
[01:50:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:51:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:52:56] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Read error: Connection reset by peer)
[01:53:18] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[02:02:16] <ljharb> lol nobody says that
[02:02:32] <ljharb> sheetjs: trimRight and trimLeft were the legacy, nonstandard ones
[02:02:44] <ljharb> we added trimStart and trimEnd, and made them === to the legacy ones
[02:03:02] <ljharb> n> [String.prototype.trimStart === String.prototype.trimLeft, String.prototype.trimLeft.name] @ sheetjs
[02:03:03] <jellobot> sheetjs, [ true, 'trimStart' ]
[02:03:47] *** Joins: silly_ (~silly@user/silly)
[02:04:50] *** Joins: clf59 (~clf59@user/clf59)
[02:06:51] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[02:10:13] *** Joins: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[02:10:51] <sheetjs> However, for web compatibility reasons, trimRight remains as an alias to trimEnd. In some engines this means:
[02:10:51] <sheetjs> String.prototype.trimRight.name === "trimEnd";
[02:10:58] *** Quits: junktext (~junktext@77.247.181.218) (Ping timeout: 240 seconds)
[02:12:24] *** Joins: jazzy (~jaziz@2600:380:465b:aa32:a5e0:69d:ea69:d1e4)
[02:26:10] *** Quits: Pil (~Pil@80.255.81.66) (Ping timeout: 256 seconds)
[02:27:04] *** Quits: clf59 (~clf59@user/clf59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:47] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 265 seconds)
[02:28:02] *** Joins: Praise (~Fat@user/praise)
[02:29:33] *** Joins: Pil (~Pil@80.255.81.66)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:06] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[02:30:20] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:53] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[02:31:56] *** Joins: codebam (~codebam@user/codebam)
[02:33:48] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[02:34:06] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[02:36:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[02:40:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:43:10] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:44:32] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[02:46:26] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[02:48:15] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[02:50:57] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Remote host closed the connection)
[02:51:46] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 240 seconds)
[02:51:54] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[02:53:10] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:53:52] *** Quits: teut (~teut@106.214.44.24) (Quit: Connection closed)
[02:54:06] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[02:54:07] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[02:54:21] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[02:54:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[02:55:37] *** Quits: l__q_ (~modinfo@user/modinfo) (Remote host closed the connection)
[02:58:52] *** Joins: masber (~masber@178.197.197.167)
[03:03:05] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[03:04:23] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[03:05:20] *** Joins: l__q (~modinfo@user/modinfo)
[03:06:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:07:43] <optimant> sheetjs: re data preservation, definitely an interesting area. strikes me how many people treat PDF as a form of archival for instance.
[03:08:28] *** Joins: drew` (~drew@user/drew)
[03:09:09] *** drew` is now known as drew
[03:10:30] <sheetjs> that's a failure of the rest of the industry optimant
[03:10:50] <sheetjs> word is an absolute mess, with magic flags that basically say "layout like how Word 4.0 did it"
[03:11:18] <sheetjs> HTML/CSS are a series of suggestions
[03:11:31] <optimant> and deep down inside a tiny Word 4.0 runtime to get it just so, probably
[03:12:23] <sheetjs> since consoles were mentioned earlier, the situation is like how a 3ds has the DS hardware, or how a Wii has the GC hardware
[03:12:27] *** Quits: dangrenier83 (~user@user/dangrenier83) (Quit: WeeChat 3.2)
[03:12:44] <sheetjs> wouldnt be surprised if modern word ships with stripped down layout engines from older versions
[03:13:13] *** Joins: Latvian (~Latvian@ee-ext-vpn.if.ee)
[03:14:30] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[03:14:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[03:15:20] *** Parts: Latvian (~Latvian@ee-ext-vpn.if.ee) ()
[03:20:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[03:21:48] *** Joins: codebam (~codebam@user/codebam)
[03:21:59] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[03:25:18] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 272 seconds)
[03:27:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[03:27:42] *** Quits: masber (~masber@178.197.197.167) (Quit: Client closed)
[03:28:35] *** Joins: codebam (~codebam@user/codebam)
[03:35:39] *** Quits: Noustropos (~Noustropo@91.221.89.10) (Read error: Connection reset by peer)
[03:37:27] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[03:38:51] <nedbat> i'm curious why the suffix for BigInt is n?
[03:39:21] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:39:35] <GreenJello> huh, now I am as well lol
[03:40:22] *** Joins: Betal (~Beta@user/betal)
[03:42:03] <GreenJello> neither the spec nor mdn seem to explain it
[03:42:27] <GreenJello> the spec just refers to the 'n' token as 'BitIntLiteralSuffix'
[03:42:32] <GreenJello> Big*
[03:43:21] <sheetjs> there were discussions at the time
[03:43:45] <sheetjs> problem with something like i/l is visual and potentially conflicting with C/C++
[03:43:56] <nedbat> maybe because b would look like binary, and i would look like int
[03:44:20] <sheetjs> so in C, u/l are for unsigned/signed int
[03:44:51] <sheetjs> U/L for long, sometimes you see LL but that varies on the system context
[03:45:05] <gehn> or ull
[03:45:29] <sheetjs> there are 3 commonly used models
[03:45:39] <sheetjs> ILP32, LP64, LLP64
[03:46:11] <sheetjs> and they all have specifications for "l" and "L", which makes their use as a generic big integer suffix unpalatable
[03:46:56] <sheetjs> iirc MSVC also supports lowercase "i"
[03:47:04] <sheetjs> uppercase I is potentially confusing with number 1
[03:47:19] <sheetjs> some IBM systems use M for decimal64
[03:47:59] <sheetjs> so at the end of the day, "n" is both not commonly used (/potentially confused with something else) and has a vague relation to the concept ("number")
[03:48:17] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[03:48:51] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[03:50:07] *** Joins: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com)
[03:51:10] <sheetjs> serendipitously
[03:51:17] <sheetjs> "n" doesnt even collide with printf/scanf
[03:51:53] <sheetjs> in printf, "n" signals to print the number of bytes written
[03:54:24] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:58:52] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[03:59:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:7cc0:b6ca:d4c5:a4a7)
[04:00:20] *** Joins: codebam (~codebam@user/codebam)
[04:02:09] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[04:05:12] *** Joins: junktext (~junktext@109.201.152.172)
[04:08:42] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f509:fc1d:498c:5473) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:03] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[04:09:43] *** Joins: clf59 (~clf59@user/clf59)
[04:09:44] *** Quits: clf59 (~clf59@user/clf59) (Client Quit)
[04:17:43] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Ping timeout: 250 seconds)
[04:19:01] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[04:23:30] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[04:25:16] *** Joins: codebam (~codebam@user/codebam)
[04:26:09] *** Quits: xsperry (~as@user/xsperry) ()
[04:26:10] *** Quits: junktext (~junktext@109.201.152.172) (Ping timeout: 240 seconds)
[04:27:55] *** Joins: sillyslux__ (~silly@user/silly)
[04:30:08] *** Joins: xsperry (~as@user/xsperry)
[04:30:58] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[04:32:28] *** Joins: l__q (~modinfo@user/modinfo)
[04:33:26] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[04:33:48] <entuland> ah, the joys if JSON.parse("null") returning null instead of throwing... Today I Learned.
[04:33:52] <lmat> Why does this match? 'a'.match('^[0-9]*.?[0-9]*$')  'aa' doesn't match as expected and '1' matches as expected. '1a' and any numbers with just one letter matches!
[04:34:28] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[04:34:35] <GreenJello> entuland, also JSON.parse('7') or JSON.parse(' "x" ')
[04:35:17] <entuland> yeah, I was kinda stuck on the array / object thing
[04:35:18] <GreenJello> lmat, it's the .
[04:35:38] <GreenJello> and * matches 0 or more
[04:35:46] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:36:15] <entuland> replace * with + if you want to impose at least one occurrence
[04:36:39] <lmat> GreenJello: AHH!!!
[04:36:48] * lmat is so stupid. must be punished
[04:36:58] <GreenJello> it's not that kind of channel
[04:38:02] <entuland> odd, in some regex dialects . and ? have the same meaning
[04:38:22] <GreenJello> I wouldn't consider that regex
[04:38:34] <entuland> yeah, very weird
[04:39:56] <lmat> GreenJello: u da man :-D
[04:40:26] <lmat> Punishment complete, code changed, committed, unit tests passing, merging soon!!
[04:43:18] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[04:44:32] *** Joins: codebam (~codebam@user/codebam)
[04:45:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2c5d:93aa:8825:e460)
[04:47:31] *** Joins: silly_ (~silly@user/silly)
[04:47:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:47:58] <buu> How do I put an arbitrary unicode char in a string
[04:48:20] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[04:48:48] <buu> For example, 200e
[04:49:06] <GreenJello> n> '\u{200e}'
[04:49:07] <jellobot> (okay) '‎'
[04:49:20] <GreenJello> n> '\u{200e}'.codePointAt(0).toString(16)
[04:49:21] <jellobot> (okay) '200e'
[04:49:53] <GreenJello> n> String.fromCodePoint(0x200e).codePointAt(0).toString(16)
[04:49:54] <jellobot> (okay) '200e'
[04:49:56] <buu> n> '\u{200e}'.match(/\p{C}/)
[04:49:57] <jellobot> (okay) null
[04:50:33] <buu> n> '\u{200e}'.match(/\p{Cc}/)
[04:50:34] <jellobot> (okay) null
[04:50:40] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 256 seconds)
[04:50:45] <GreenJello> n> '\u{200e}'.match(/\p{C}/u)
[04:50:46] <jellobot> (okay) [ '‎', index: 0, input: '‎', groups: undefined ]
[04:50:57] <buu> oh man
[04:51:26] <buu> Ok then.
[04:53:11] *** Joins: Intelo (~Intelo@88.246.74.102)
[04:54:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[04:55:06] *** Joins: physikoi (~physikoi@user/physikoi)
[04:55:51] *** Joins: codebam (~codebam@user/codebam)
[05:01:49] *** Joins: [R] (~rs@genoce.org)
[05:02:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:02:58] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[05:04:20] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[05:04:58] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2c5d:93aa:8825:e460) (Ping timeout: 240 seconds)
[05:07:39] *** Parts: Intelo (~Intelo@88.246.74.102) ()
[05:09:31] <nedbat> entuland: where do . and ? have the same meaning?
[05:09:41] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[05:09:47] *** Quits: federico_it (~textual@151.95.117.132) (Quit: Textual IRC Client: www.textualapp.com)
[05:10:05] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:11:20] *** Joins: sillyslux__ (~silly@user/silly)
[05:11:49] <entuland> watcom debugger file matching regexp https://users.pja.edu.pl/~jms/qnx/help/watcom/wd/regexp.html
[05:12:50] <entuland> I wonder if I should really call return near the top of my function to make it easier to understand its main purpose and leave all the helper functions beneath :P
[05:13:19] <entuland> hell yes, it will be okay
[05:14:34] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[05:15:44] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[05:16:03] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[05:17:09] <nedbat> entuland: that page defines . and ? the same as all regexes: . matches any character, ? matches zero or one of the preceding regex
[05:17:32] <entuland> the file matching section
[05:18:22] <entuland> "Regular expressions and filenames" [...] "3. A question mark (?) is the same as a regular expression dot (.); that is, a question mark matches exactly one character."
[05:18:27] <nedbat> entuland: oh, they are calling file globs "regular expressions" for some reason.  it's just mislabeled.
[05:18:37] <entuland> yeah
[05:19:49] <entuland> I'm sure there are other occurrences of similar oddities - I bet many have even tried to roll their own regex implementation from scratch
[05:22:10] *** Quits: z1haze (~z1haze@user/z1haze) (Read error: Connection reset by peer)
[05:22:28] <entuland> I know I tried when I was learning C :P
[05:25:45] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[05:28:10] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 272 seconds)
[05:32:31] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[05:33:20] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[05:33:37] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: Lost terminal)
[05:34:11] <hans> the .json() promise fails, and nobody is catching it, why isn't window.onerror invoked? https://jsfiddle.net/f287sn05/
[05:35:57] <pavonia> What is the exact syntax rule for field names in object literals that do not need to be put into quotes?
[05:36:14] *** Quits: shailangsa (~shailangs@host86-185-98-7.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[05:39:45] *** Joins: Celeo (~Celeo@user/celeo)
[05:40:07] <buu> n> 'a\u{200e}b'.length;
[05:40:08] <jellobot> (okay) 3
[05:40:23] <buu> n> 'a\u{200e}b'.replace(/\p{C}/u,"").length;
[05:40:24] <jellobot> (okay) 2
[05:40:27] <buu> AUGH
[05:40:48] <GreenJello> ?
[05:40:56] <buu> details = details.replace(/\p{C}/u, "");
[05:41:01] <buu> oh
[05:41:12] <buu> Only removes the first one =]
[05:42:19] *** Joins: silly_ (~silly@user/silly)
[05:45:30] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 240 seconds)
[05:50:20] *** Joins: xsperry (~as@user/xsperry)
[05:50:30] <entuland> hans, check this: https://jsfiddle.net/entuland/ky49qtL5/
[05:50:50] <entuland> also check the _real_ console
[05:51:05] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:51:22] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 245 seconds)
[05:51:29] <entuland> oh well, farewell
[05:53:20] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:54:16] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:56:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:56:46] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[06:00:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:02:27] *** Quits: Jonno_FT1 (~come@api.carswap.me) (Quit: Reconnecting)
[06:02:33] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[06:02:34] *** Joins: Jonno_FTW (~come@api.carswap.me)
[06:03:08] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[06:03:08] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[06:03:18] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c008424b38c896bc4d3.dip0.t-ipconnect.de)
[06:03:27] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[06:06:44] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[06:06:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:07:30] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c008424b38c896bc4d3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:07:57] *** Joins: Shailangsa_ (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[06:08:50] *** Joins: sillyslux__ (~silly@user/silly)
[06:08:56] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:10:36] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Client Quit)
[06:12:12] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 245 seconds)
[06:15:44] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[06:17:50] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:18:21] *** Joins: silly_ (~silly@user/silly)
[06:19:29] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[06:21:00] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[06:21:02] *** Joins: silly (~silly@user/silly)
[06:22:00] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 272 seconds)
[06:23:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:23:49] *** Joins: silly_ (~silly@user/silly)
[06:24:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 258 seconds)
[06:24:23] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[06:24:49] *** Joins: Rockwood (~Rocky@user/rocky)
[06:25:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[06:25:36] *** Gustavo6046_ is now known as Gustavo6046
[06:25:42] <Rockwood> o/
[06:26:14] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Quit: The Lounge - https://thelounge.chat)
[06:26:38] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[06:28:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:29:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:29:09] *** Joins: keypushe- (keypusher@user/keypusher)
[06:29:12] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[06:32:03] *** keypushe- is now known as keypusher
[06:38:49] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:40:32] *** Joins: Rockwood (~Rocky@user/rocky)
[06:40:46] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:44:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:46:18] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:47:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[06:49:28] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:53:19] *** Joins: Ares000 (~Ares3@37.228.196.119)
[07:03:56] *** jmcantre1 is now known as jmcantrell
[07:11:25] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[07:11:27] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[07:13:19] *** Joins: Enissay (~Enissay@user/enissay)
[07:14:59] *** Joins: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de)
[07:15:03] *** Joins: sillyslux__ (~silly@user/silly)
[07:17:52] *** Joins: silly (~silly@user/silly)
[07:18:37] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 258 seconds)
[07:18:50] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[07:19:21] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[07:20:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:22:24] *** Joins: lesihctej (jetchisel@user/jetchisel)
[07:24:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[07:25:13] *** Quits: PrenzlBurg (~PrenzlBur@p5b05e91c.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:30:24] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 272 seconds)
[07:31:09] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c008424b38c896bc4d3.dip0.t-ipconnect.de)
[07:33:24] *** Quits: IceMichael (~IceMichae@dynamic-046-114-153-111.46.114.pool.telefonica.de) (Ping timeout: 276 seconds)
[07:36:34] *** Joins: jazzy2 (~jaziz@2600:380:8600:750f:540f:fa5c:c6b2:c04a)
[07:37:49] *** Joins: IceMichael (~IceMichae@dynamic-046-114-156-234.46.114.pool.telefonica.de)
[07:37:53] *** Joins: jazzy3 (~jaziz@2600:380:8600:750f:a0eb:13de:7970:4f87)
[07:38:10] *** Quits: jazzy (~jaziz@2600:380:465b:aa32:a5e0:69d:ea69:d1e4) (Ping timeout: 240 seconds)
[07:38:27] *** Joins: mud (~mud@user/kadoban)
[07:40:58] *** Quits: jazzy2 (~jaziz@2600:380:8600:750f:540f:fa5c:c6b2:c04a) (Ping timeout: 240 seconds)
[07:41:39] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[07:41:39] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Client Quit)
[07:42:39] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[07:43:58] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Remote host closed the connection)
[07:44:40] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[07:46:38] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[07:47:23] *** Joins: Axy (~Axy@user/axy)
[07:48:55] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:09] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[07:49:16] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[07:52:12] *** Quits: IceMichael (~IceMichae@dynamic-046-114-156-234.46.114.pool.telefonica.de) (Ping timeout: 245 seconds)
[07:53:06] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 258 seconds)
[07:53:10] *** Joins: IceMichael (~IceMichae@dynamic-046-114-156-234.46.114.pool.telefonica.de)
[07:53:27] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Ping timeout: 245 seconds)
[07:53:47] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:55:43] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[07:57:44] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:58:04] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[07:58:23] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:59:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[08:01:30] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[08:01:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:02:01] *** Joins: silly_ (~silly@user/silly)
[08:04:59] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:05:06] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[08:06:59] *** Joins: sillyslux__ (~silly@user/silly)
[08:09:35] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[08:11:33] *** Joins: matsaman (~matsaman@user/matsaman)
[08:12:18] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Remote host closed the connection)
[08:15:19] *** Joins: silly_ (~silly@user/silly)
[08:15:22] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:15:24] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:7cc0:b6ca:d4c5:a4a7) (Quit: Leaving)
[08:18:01] *** Joins: ferdna (~ferdna@user/ferdna)
[08:18:03] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[08:18:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:18:47] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 258 seconds)
[08:25:58] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:26:50] *** Joins: sillyslux__ (~silly@user/silly)
[08:28:06] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[08:28:34] *** Joins: silly (~silly@user/silly)
[08:28:50] *** Parts: name-- (~Mysteryhu@2001:4bb8:2e9:6503:8d7b:d6b4:1114:6334) ()
[08:30:08] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[08:30:10] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[08:31:25] <sheetjs> oof this magic number
[08:31:27] <sheetjs> 0x388317533400
[08:31:39] <theskillwithin> 👻
[08:32:33] <sheetjs> i know i wrote this code
[08:32:43] <sheetjs> i don't even know how that number came up
[08:33:11] <sheetjs> never mind
[08:33:55] <sheetjs> this is wild, there's a good chance this code was never tested
[08:33:58] <theskillwithin> maybe if your lucky the commit msg might help
[08:34:15] <sheetjs> im reading the spec here
[08:34:55] <sheetjs> the timestamp field is interpreted as
[08:34:56] <sheetjs> 8 bytes - two longs, first for date, second for time.  The date is the number of days since  01/01/4713 BC. Time is hours * 3600000L + minutes * 60000L + Seconds * 1000L
[08:36:25] <sheetjs> huh i mightve flipped the code
[08:37:23] <sheetjs> so there are a few different time types
[08:38:06] <sheetjs> dBASE III introduced the Dat type "D" which is simply YYYYMMDD as 8 ascii characters
[08:38:42] <sheetjs> Visual FoxPro added DateTime :T:
[08:38:57] <sheetjs> and dBASE Level 7 added Timestamp "@"
[08:41:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[08:42:37] *** Joins: Talon (~Talon@203-24-233-166.mobile.uscc.net)
[08:45:08] *** Quits: Shailangsa_ (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) ()
[08:45:14] <sheetjs> weird, it's giving the right answer
[08:45:31] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:48:01] <sheetjs> maybe dbase changed something between versions? so according to the baselines generated from dBASE 11 (not II) it is correct
[08:49:39] * wintersky sips vodka
[08:50:15] * theskillwithin sips whiskey
[08:50:30] * sheetjs sips water
[08:50:38] <wintersky> \o/
[08:50:52] <sheetjs> dBASE 11, dBASE 12, dBASE 2019
[08:51:19] <sheetjs> theskillwithin: sounds like DCMASports
[08:51:31] <sheetjs> not to be confused with DMCASports
[08:51:39] *** Quits: Talon (~Talon@203-24-233-166.mobile.uscc.net) (Ping timeout: 252 seconds)
[08:51:58] <wintersky> https://www.youtube.com/watch?v=YkVkjKP49dY
[08:51:58] <skillbot> YouTube Title: STRACHY NA LACHY - Niebotyczne niebowstąpienie [OFFICIAL VIDEO]
[08:52:08] *** Joins: Talon (~Talon@57-117-231-166.mobile.uscc.net)
[08:53:57] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c008424b38c896bc4d3.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:55:12] <sheetjs> worst part is that libreoffice says the file is corrupt :(
[08:55:50] <theskillwithin> is it a politicians tax return?
[08:56:17] <sheetjs> nah it was a test file i made a long time ago
[08:57:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:58:07] *** Joins: trace987 (~trace@95.90.106.112)
[08:58:25] <sheetjs> <Buffer 42 cc b7 70 4e b6 0c 00> are the resulting bytes
[08:59:03] <sheetjs> n> Buffer.from("42 cc b7 70 4e b6 0c 00".split(" ").map(x => parseInt(x, 16)))
[08:59:04] <jellobot> (okay) <Buffer 42 cc b7 70 4e b6 0c 00>
[08:59:25] <sheetjs> n> Buffer.from("42 cc b7 70 4e b6 0c 00".split(" ").map(x => parseInt(x, 16))).readFloat64BE(0)
[08:59:26] <jellobot> (fail) TypeError: Buffer.from(...).readFloat64BE is not a function
[09:00:07] <sheetjs> n> new Date(Buffer.from("42 cc b7 70 4e b6 0c 00".split(" ").map(x => parseInt(x, 16))).readDoubleBE(0) - 0x388317533400)
[09:00:08] <jellobot> (okay) 2002-02-02T23:59:59.000Z
[09:02:29] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[09:05:59] *** Joins: WishBoy (~WishBoy@user/wishboy)
[09:06:34] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:11:22] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 240 seconds)
[09:11:34] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Remote host closed the connection)
[09:11:39] <sheetjs> heh libreoffice accepts the visual foxpro artifact but not the dBASE11 file ; dBASE 2019 accepts the dBASE11 file but not the VFP one
[09:12:04] <theskillwithin> buffer? I barley know her!
[09:12:05] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[09:12:43] *** Quits: Pil (~Pil@80.255.81.66) (Read error: Connection reset by peer)
[09:13:38] <sheetjs> sheetjs is definitely doing the right thing here
[09:14:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:15:41] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[09:17:24] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 276 seconds)
[09:28:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[09:36:17] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:36:46] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[09:36:59] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[09:39:17] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[09:46:57] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[09:48:31] *** Joins: codebam (~codebam@user/codebam)
[09:48:47] *** Joins: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw)
[09:48:54] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:50:59] *** Joins: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[09:52:07] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[09:52:58] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:56:39] *** Quits: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[09:57:08] *** Joins: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw)
[09:58:44] *** Joins: vysn (~vysn@user/vysn)
[09:58:49] <theskillwithin> sheetjs people who don't have context might think your talking about yourself in the 3rd person lol
[09:59:06] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:59:08] <sheetjs> haha SheetJS is doing the right thing here
[09:59:16] <sheetjs> but yeah, raised an issue with libreoffice
[09:59:27] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[09:59:47] <sheetjs> i wish more people were excited about this stuff
[09:59:51] <sheetjs> instead, other projects are dying :(
[10:00:09] <no_gravity> Can I add an event handler to a page that gets fired when a certain class of element is hovered, even if that element is added to the page later on?
[10:00:18] <sheetjs> node-dbf "Library no longer maintained" https://github.com/abstractvector/node-dbf/issues/46
[10:00:37] <theskillwithin> I can't think of anything more exciting than a spreadsheet
[10:00:40] <sheetjs> dbf "This project is currently unmaintained." https://github.com/mapbox/dbf#looking-for-new-maintainers
[10:00:56] <sheetjs> 3 year old theskillwithin loved spreading sheet
[10:01:02] <sheetjs> 30 year old theskillwithin love spreadsheets
[10:01:46] <theskillwithin> no_gravity onmouseover  or if adding with addEventListener mouseover
[10:02:17] <no_gravity> theskillwithin: onmousover on what element? The element might not exist yet.
[10:02:41] <sheetjs> like how jquery does it?
[10:02:46] <no_gravity> Rhe MutationObserver might be an approach that could work: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver
[10:03:29] <no_gravity> theskillwithin: The idea here is to show a special tooltip when the user hovers an element of class specialTooltip. But the element could be created any time in the future.
[10:03:33] <theskillwithin> document.querySelectorAll('.myClass').forEach((yay) => { yay.addEventListener('mouseover', () => console.log('fire!'
[10:03:47] <no_gravity> theskillwithin: The element might not exist yet.
[10:04:23] <theskillwithin> you can do a lot with pure css hover
[10:04:42] <no_gravity> theskillwithin: The problem with pure css is that it cannot do overflow detection.
[10:04:44] <theskillwithin> also what do u mean the element might not exist.  cuz DOM hasn't loaded yet?  or some other reason?
[10:05:05] <sheetjs> MutationObserver is the modern approach
[10:05:09] <theskillwithin> ya that is a problem with css hover
[10:05:18] <sheetjs> theskillwithin: for example, adding an event handler to an element that will be created in the future
[10:05:26] <no_gravity> theskillwithin: I am writing kind of a mindmap software. The user can add dom elements at any time.
[10:05:46] <theskillwithin> no_gravity then you add the event listener at the same time they add the elements
[10:05:50] <sheetjs> no_gravity: there use to be an event DOMSubtreeModified
[10:06:06] <sheetjs> but the modern approach is MutationObserver
[10:06:18] <no_gravity> theskillwithin: That would make a hard coupling between the specialTooltip module and the createElements module.
[10:06:27] <theskillwithin> MutationObserver is not needed here i don't think.  also MutationObserver is quite advanced approach that i don't think u should do
[10:06:42] <no_gravity> theskillwithin: Having hard coupling between all modules would create a big mess as the tool grows.
[10:07:02] <theskillwithin> no_gravity it does?
[10:07:33] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Remote host closed the connection)
[10:08:03] <no_gravity> Basically I am writing a new visual website designer.
[10:08:22] <theskillwithin> prob should have used react instead of vanilla js
[10:08:26] <no_gravity> But with a focus on mindmap like layouts.
[10:09:00] <theskillwithin> you prob should also be removing the event listener when you remove an element as well
[10:10:29] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:11:08] <no_gravity> The best case would be if there is a event "user hovers something". So the "specialTooltip" module could receive that and check if the hovered thing has the specialTooltip class.
[10:12:15] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[10:13:44] <theskillwithin> no_gravity do you know any react?  its great for sites that are more reactive like ur describing
[10:15:06] <no_gravity> theskillwithin: React is not really applicable to this use case.
[10:15:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[10:15:26] <no_gravity> My questions really revolve around the browser api. React is about how to structure code.
[10:16:22] <theskillwithin> thats not what React is about,  but back to the point
[10:17:07] <theskillwithin> no_gravity in pure js, I recommend doing it without MutationObserver.  if you ignore my advice, just remember MutationObserver measures the delta, its not super intuitive.  you must know when the elements are created, so you have full control to addEventListener at that time,  that seems like best solution.
[10:17:37] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[10:18:31] <theskillwithin> like your already coding adding the elements, its not a mystery when there added to you.
[10:19:07] *** Joins: codebam (~codebam@user/codebam)
[10:20:36] <hmw[at]> JavaScript is pseudo code with semicolons at the end of every instruction.
[10:23:56] <no_gravity> hmw[at]: And brackets around blocks.
[10:29:57] <friend> is both a function in js? I looked up js both and didn't see any mention of it. I found this in a repo: settings.over=both(settings.over); What does this do?
[10:30:04] <no_gravity> Holy Moly, it looks like a simple mouseover handler on the body is the solution! https://jsfiddle.net/jqtgnv4e/
[10:30:28] <no_gravity> friend: No
[10:32:01] <friend> any idea what settings.over=both(settings.over) means?
[10:32:28] *** Joins: nemosaltat (~nemosalta@cpe-45-50-45-153.socal.res.rr.com)
[10:32:29] *** Quits: nemosaltat (~nemosalta@cpe-45-50-45-153.socal.res.rr.com) (Excess Flood)
[10:32:38] <friend> DOh! I missed it the first time. Found it. Sorry.
[10:32:51] <no_gravity> friend: No problem. That makes $5.99
[10:33:14] <friend> I'll take cash app if you don't mind. Always happy to keep ya working. Next?
[10:41:25] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:42:09] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[10:42:24] <theskillwithin> no_gravity oh wow nice!
[10:45:37] *** Joins: matsaman_ (~matsaman@user/matsaman)
[10:45:50] <no_gravity> theskillwithin: Yeah, this makes me very happy
[10:46:15] *** Quits: matsaman (~matsaman@user/matsaman) (Killed (NickServ (GHOST command used by matsaman_)))
[10:46:21] *** matsaman_ is now known as matsaman
[10:48:10] <theskillwithin> then of course mouseout for when they leave the tooltip
[10:48:20] <theskillwithin> and boom
[10:49:14] <theskillwithin> test on mobile tho,  might get odd behavior there
[10:51:36] *** Joins: PrenzlBurg (~PrenzlBur@2a01:598:d03d:82c9:cf6:9d76:dd43:ac74)
[10:52:29] *** Quits: Talon (~Talon@57-117-231-166.mobile.uscc.net) (Ping timeout: 250 seconds)
[10:53:27] <no_gravity> I expect that making this application work on mobile will be a good chunk of work. Currently I am targeting an MVP for the desktop. I am 7 hours in and expect it to take another 10 hours or so.
[10:54:14] <no_gravity> Yesterday I researched existing tooltip libraries for 2 hours. And then decided to write my own.
[10:54:17] *** Joins: federico_it (~textual@151.95.117.132)
[10:55:43] *** Joins: Talon (~Talon@134-89-223-166.mobile.uscc.net)
[10:55:54] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[10:57:41] *** Joins: codebam (~codebam@user/codebam)
[10:58:20] <theskillwithin> no_gravity what does it look like?
[10:58:48] <no_gravity> theskillwithin: What?
[10:59:14] *** Quits: PrenzlBurg (~PrenzlBur@2a01:598:d03d:82c9:cf6:9d76:dd43:ac74) (Remote host closed the connection)
[10:59:41] <theskillwithin> no_gravity what your making
[10:59:50] *** Quits: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:53] <no_gravity> theskillwithin: It looks a bit like a mind-map tool.
[11:00:10] *** Quits: Talon (~Talon@134-89-223-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[11:00:33] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[11:00:58] <theskillwithin> no_gravity ya i got that but what does that mean,  is it like whimsical.com
[11:01:43] <theskillwithin> oh its like a visual tree
[11:01:45] <theskillwithin> nice
[11:02:07] *** Joins: Talon (~Talon@112-255-235-166.mobile.uscc.net)
[11:02:07] <no_gravity> theskillwithin: Not sure, because whimsical starts with a signup button. I start with the tool itself :)
[11:06:41] *** Quits: Talon (~Talon@112-255-235-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[11:07:58] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:08:06] *** Joins: Talon (~Talon@105-245-231-166.mobile.uscc.net)
[11:09:29] <theskillwithin> no_gravity like this? https://dicegraph.github.io/DiceGraph/#/sample/render/mindmap
[11:10:41] <no_gravity> theskillwithin: Well, there are a few similarities but my tool is quite different.
[11:11:16] <no_gravity> theskillwithin: It is much more geared towards interactively creating mindmaps in a visual way.
[11:11:17] <theskillwithin> ya, just wanted to be clear on what a mind map is cuz iv never built one
[11:11:48] <theskillwithin> the hardcore people prob would do in D3
[11:12:19] <no_gravity> Well, you could also say that I build a website designer.
[11:12:54] <theskillwithin> well, i thought i was getting it, but now you lost me even more
[11:13:04] <no_gravity> Because if the user creates just one entry on the map "Hello world" and saves the map, the saved file will contain "<div>Hello World</div>"
[11:13:29] <theskillwithin> sounds painful
[11:13:57] <no_gravity> Well, they would place it somewhere on the screen, so the output would be: <div style="top: 124px; left: 312px">Hello World</div>
[11:14:15] <theskillwithin> lol so your trying to recreate dreamweaver?
[11:14:33] <no_gravity> I don't know, I never used dreamweaver.
[11:14:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[11:14:59] <no_gravity> Dreamweaver was probably geared towards creating typical websites. My tool is more geared towards creating mindmaps.
[11:15:21] <no_gravity> Although you could create a mindmap in dreamweaver and you can create a typical website in my tool.
[11:15:26] <matsaman> is that just an example, or would they really save the map by saving the rendered HTML?
[11:15:45] <no_gravity> matsaman: Yes, I have saving and loading already implemented. It saves the actual html.
[11:16:01] <no_gravity> matsaman: There is no "rendering". The tools operates directly on the DOM.
[11:16:08] <matsaman> hrmmm
[11:16:34] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[11:18:19] <matsaman> I feel like, generating into some plain text hierarchical format might be best, and have your scripting generate the visual from that
[11:19:05] <no_gravity> matsaman: My use case is different. I want to move items around on the screen with the mouse.
[11:19:19] <matsaman> like, <div style="top: foo; left: foo;">bar</div> is that more useful than 'bar -> baz' and a bitmap? Or 'bar -> baz' and HTML nobody cares about that JS generates
[11:19:29] <matsaman> yeah...
[11:19:37] <matsaman> and the the precise location matters later?
[11:19:58] <matsaman> this sounds more drawing than relationships
[11:20:15] <matsaman> which is perhaps not revelatory for me to state =)
[11:20:36] <no_gravity> There is no precise location. Say you organize your life. Then you might say "Ok, I will move my broken car over there to the lower right. It is not that important to fix it now".
[11:20:39] <theskillwithin> pun intended matsaman ?
[11:20:56] <theskillwithin> state...
[11:21:00] <theskillwithin> nvm
[11:21:03] <matsaman> heh
[11:21:08] <no_gravity> It does not matter if the broken car is 3 pixels further to the right or to the left.
[11:21:16] <matsaman> okay
[11:21:30] <matsaman> but you're going to keep that exact 3 px shift the user chose anyway
[11:21:39] <no_gravity> Yes
[11:21:42] <matsaman> gotcha
[11:22:35] <matsaman> well give us a peek when it's viewable eh? =)
[11:22:53] <no_gravity> Ok
[11:23:18] <no_gravity> matsaman: What do you do?
[11:25:12] <matsaman> boring web stuff like everybody else
[11:25:23] <no_gravity> Freelancer?
[11:25:48] <matsaman> no just a working stiff
[11:26:02] <matsaman> cog in the machine =)
[11:26:06] <no_gravity> I see. I hope the world decentralizes so everybody is free.
[11:26:55] <matsaman> at the rate people are dying, we might even have the space for it sooner than otherwise
[11:27:29] <matsaman> mostly because of the magic of the world 'sooner' =P
[11:27:40] <no_gravity> I tend to think planet earth will turn into living matter down to the core.
[11:28:03] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 276 seconds)
[11:28:16] <matsaman> something will be fine here
[11:28:19] <matsaman> poison ivy will be
[11:28:32] <matsaman> and cockroaches
[11:28:49] <matsaman> anyway I should split =) later on
[11:28:51] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:29:43] <no_gravity> So far humans have a good run https://ourworldindata.org/uploads/2018/11/Annual-World-Population-since-10-thousand-BCE-for-OWID.png
[11:30:00] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:33:04] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[11:34:26] <theskillwithin> no_gravity for the population to increase,  every person would have to pair up with each other, and have at least 2 kids.
[11:35:12] <theskillwithin> no_gravity people in 3rd world countries have more kids,  so as these countries get more developed, the population will actually decrease
[11:36:18] <no_gravity> theskillwithin: Depends on the timeframe. Everytime a single baby is born, the population increases.
[11:36:43] <theskillwithin> i don't think you get the math
[11:36:49] <theskillwithin> https://youtu.be/2LyzBoHo5EI
[11:36:50] <skillbot> YouTube Title: Why the world population won’t exceed 11 billion | Hans Rosling | TGS.ORG
[11:37:37] <no_gravity> I now that argument very well. My bet is the exponential growth will continue.
[11:37:38] <sheetjs> npm finally complaining about 2fa
[11:37:45] <sheetjs> "Hi there! It looks like you don’t have two-factor authentication (2FA) enabled on your npm account. "
[11:37:53] <sheetjs> "At npm and GitHub, we are working towards securing the software supply chain - https://github.blog/2020-09-02-secure-your-software-supply-chain-and-protect-against-supply-chain-threats-github-blog/. Enabling 2FA for your npm account is a small action you can take today to help secure the supply chain for yourself and the larger ecosystem. 2FA is an extra layer of security used when logging into websites or apps. With 2FA, you have to log i
[11:37:53] <sheetjs> n with your username and password and provide another form of authentication that only you know or have access to. "
[11:38:32] <sheetjs> its weird to phrase it like that, especially given that npm is a subsidiary of github
[11:38:58] <sheetjs> and also that it pushes the onus on the poor developers instead of the trillion dollar parent company
[11:40:03] <ThePendulum> what's the alternative?
[11:40:04] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[11:40:22] <sheetjs> microsoft pays developers and offers a foundation to donate end of life projects?
[11:40:47] <sheetjs> all of this is circling the incentive problem
[11:41:13] <theskillwithin> no_gravity a single baby born is actually a population decrease
[11:41:40] <sheetjs> microsoft uses sheetjs in office 365
[11:42:03] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:7cc0:b6ca:d4c5:a4a7)
[11:42:06] <sheetjs> the only thing stopping a mess in office land is one person's refusal to succumb to temptation
[11:42:34] <sheetjs> *that* is a problem repeated across the industry, and all of this nonsense is trying to pretend that the problem is something different
[11:43:10] <no_gravity> theskillwithin: 2+1=3
[11:43:28] <theskillwithin> -2 cuz your parents dying soon
[11:43:36] <sheetjs> no_gravity: if time is quantized, within a given unit of time X number of babies are born and Y number of people die
[11:43:40] <theskillwithin> so you had 2, and now u have 1
[11:44:21] <no_gravity> theskillwithin: Only if the parents die before the baby has a baby.
[11:44:30] <sheetjs> ThePendulum: there are funny parallels to the NCAA problems
[11:44:53] <ashnur> interesting js discussion
[11:45:00] <theskillwithin> no_gravity then it repeats, the baby has to have more than 3 babies to increase population.   but now even more cuz didn't account for prev gen
[11:45:25] <sheetjs> there's a race condition at place
[11:45:36] <theskillwithin> yes
[11:46:22] <ThePendulum> you want them to pay the developers of over 1,5 million projects to secure their account?
[11:46:41] <sheetjs> what is the actual attack here?
[11:47:00] <sheetjs> someone publishes a "malicious" package
[11:47:10] <sheetjs> there's nothing stopping the original publishers from doing that
[11:47:43] <sheetjs> and their attempt to explain the situation with event-stream sorta missed the point
[11:48:10] <sheetjs> dominictarr decided he didn't want to continue maintaining it.  he has no obligation in this situation
[11:48:21] <sheetjs> someone else offered to pick up the slack, good on them
[11:48:37] <sheetjs> that this someone else may have done something fishy is the real attack and it has nothing to do with any of the mumbo jump
[11:48:43] <no_gravity> theskillwithin: If humans reproduce more than 2x faster than they die, population increases even if every couple has only 1 child.
[11:48:51] <sheetjs> *mumbo jumbo including 2FA or MFA
[11:49:58] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[11:50:08] <no_gravity> theskillwithin: If longevity and reproduction speed stay fixed, then this happens up to an equilibrium and then the population is stagnant.
[11:50:15] <no_gravity> theskillwithin: But longevity increases over time.
[11:50:55] <theskillwithin> do you plan on living til 120 years of age?
[11:50:57] <sheetjs> the core problem is that everyone outsourced everything and privatized all the games
[11:51:26] <no_gravity> theskillwithin: I think we will cure "death" in a few generations.
[11:52:13] <theskillwithin> you think everyones going to magically be a couple, and have 2.1 kids?
[11:53:41] <no_gravity> theskillwithin: 1) If we don't die, we don't need 2.1 kids per couple.
[11:53:51] <sheetjs> github copilot and open source laundering is the logical comclusion
[11:54:09] <no_gravity> theskillwithin: 2) I think we will turn "dead" matter into "living" matter via other means than birth.
[11:54:15] <theskillwithin> your talkinga bout something totally different now
[11:54:39] <no_gravity> I'm talking about earth turning into living matter all the way down to the core.
[11:55:58] <no_gravity> And therefore population increase will continue on its exponential path just like the last 10000 years.
[11:56:05] <theskillwithin> convenient time to change topics huh
[11:59:12] <ThePendulum> why would people choose to use this alternative way of creating life when on average they seem to be trying to get pregnant /less/ often
[11:59:18] <no_gravity> My topic is breakfast now. Cu later!
[11:59:30] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[11:59:31] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:00:01] <sheetjs> "why" is an interesting question ThePendulum
[12:00:29] <silly> imo, when croatia soon enters the euro zone, it should put logos of its highest valued companies on euro coins. like rimac, ledo, tommy, ...
[12:00:56] <silly> infobip
[12:00:57] <theskillwithin> the trend is the more poverty the more kids.  so like in africa a family might have 8 kids, where in usa the avg is 1
[12:01:16] <sheetjs> there are a few forces, including viability
[12:01:17] <theskillwithin> but the quality of life is increasing, so the less kids
[12:01:29] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:01:32] <sheetjs> but the current rut is also a conscious policy decision
[12:01:48] <theskillwithin> rut?
[12:01:52] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:01:52] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:01:52] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:01:52] <sheetjs> decline
[12:01:55] <ThePendulum> and the people most likely to have access to an artificial baby facility are probably the rich people that don't want babies
[12:02:17] <sheetjs> the millenial and gen z generations, for example
[12:02:26] <theskillwithin> ThePendulum wtf is this brave new world?
[12:02:35] <sheetjs> we faced quite a few economic challenges throughout adulthood
[12:02:54] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[12:03:23] <sheetjs> so say, a generation ago people may have held 3 months emergency fund
[12:03:24] <ThePendulum> theskillwithin: just working with the premise of turning death into life without birth
[12:03:38] <sheetjs> but friends are now holding multiple years and are still economically insecure
[12:03:51] <sheetjs> just the prospect of losing a job and not being able to find another puts a huge strain
[12:05:21] <theskillwithin> and inflation sucks
[12:05:44] <sheetjs> inflation isn't inherently bad
[12:05:52] <sheetjs> but like all forces, there are winners and losers
[12:06:09] <sheetjs> and a conscious decision to backstop the stock market or corporate bond market benefit those assetholders at the expense of everyone else
[12:06:27] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:06:53] <theskillwithin> i make 130k,   when my dad made that, to match that due to inflation id have to make like 250k salary nowdays
[12:06:55] <sheetjs> like when github founders decided not to give back to the open source community that powered their fortunes
[12:07:12] <sheetjs> those are decisions people and agencies make
[12:07:23] <sheetjs> tying back to the other discussion
[12:07:34] <sheetjs> there's a conscious effort not to give money to the open source community
[12:08:01] <sheetjs> not too dissimilar to NCAA proudly saying the student-athletes are unpaid
[12:08:04] *** Joins: mickey (~user@user/mickey)
[12:08:13] <theskillwithin> inflation clearly hurts the poor more than the rich
[12:08:30] <sheetjs> only in the sense that food prices rise but they don't have access to the assets that also rose in price
[12:09:00] <theskillwithin> food is pretty important i guess
[12:09:16] <sheetjs> there are ways to have inflation without food prices rising
[12:09:33] <sheetjs> and there's a conscious decision to ignore food prices
[12:09:44] <theskillwithin> thats called communism.
[12:09:54] <theskillwithin> and that never works
[12:10:17] <sheetjs> we already have it, oil subsidies, solar subsidies, bank subsidies, automation subsidies
[12:10:55] <sheetjs> the only reason you think food issues are bad is because it benefits normal people
[12:10:58] <theskillwithin> so the poor pay tax, to pay for that shit,  and get inflation in return
[12:11:05] <sheetjs> again, that's another decision
[12:11:08] <sheetjs> look at peter thiel
[12:11:16] <sheetjs> IRS decided not to go after a multi billion dollar payday
[12:11:22] <theskillwithin> its almost like taxation is theft, and money is just transfered to the rich
[12:11:26] <sheetjs> instead nickel and diming earned income
[12:11:40] <sheetjs> not all taxation is theft
[12:11:50] <sheetjs> taxation is one of the few stimulative processes
[12:11:58] <theskillwithin> i know, but in context here
[12:12:29] <sheetjs> its like when people give open source developers a hard time for making decisions but actually ignore the context
[12:12:30] <sheetjs> lol
[12:13:45] <theskillwithin> sheetjs show me a rich politician, and ill show you a corrupt one
[12:13:58] <sheetjs> that's what the current system rewards
[12:14:40] <sheetjs> the community cheers when an open source project turns proprietary
[12:14:44] <sheetjs> which is weird, right?
[12:14:55] <sheetjs> we should be encouraging more open source, not less
[12:16:21] *** Joins: hmw[at] (~hmw@4in6.metalab.wien.funkfeuer.at)
[12:16:26] <ThePendulum> I can't immediately think of an overwhelmingly positive reaction to a project going proprietary
[12:16:43] <ThePendulum> not sure where that community is
[12:17:18] <sheetjs> i think it was a hacker news discussion when handsontable switched licenses
[12:17:47] <Koopz> wasn't there a website compiling all sorts of bad things JS does?
[12:18:08] <sheetjs> there was a talk "WAT" about unexpected behaviors
[12:18:12] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:18:18] <ThePendulum> https://www.destroyallsoftware.com/talks/wat
[12:18:35] <ThePendulum> blog https://blog.kevinchisholm.com/javascript/javascript-wat/
[12:18:48] <theskillwithin> n> Array(16).join('=]' -1) + ' Batman!'
[12:18:49] <jellobot> (okay) 'NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!'
[12:19:02] <ThePendulum> it's not all the bad things though, just enough to fit within an attention span
[12:19:15] <sheetjs> they aren't necessarily bad things either
[12:20:08] <sheetjs> it's not like C-style undefined behavior
[12:20:50] <undefined_bob> I'm undefined_bob :3
[12:21:03] <sheetjs> nice
[12:21:06] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:21:09] <theskillwithin> hi undefined_bob
[12:21:14] <sheetjs> here's an example i'm facing
[12:21:23] <sheetjs> DBF stores numeric values as text
[12:21:47] <sheetjs> in most normal formats, if a value is blank you wouldn't write anything
[12:21:47] <ThePendulum> n> bob
[12:21:48] <jellobot> (fail) ReferenceError: bob is not defined
[12:21:51] <sheetjs> or maybe you'd put 0
[12:22:02] <sheetjs> some DBF files are just putting the text "   .  "
[12:22:17] <sheetjs> the spirit is to make the text appear to align with other fields
[12:22:22] <sheetjs> how do you translate that value?
[12:22:34] <sheetjs> do you mark it as if it weren't set, or do you mark it as a zero?
[12:22:47] <undefined_bob> ThePendulum: :3
[12:22:51] <sheetjs> there are lots of little cases like this
[12:23:17] <sheetjs> and the language designers, to their credit, carefully consider these cases
[12:23:36] <theskillwithin>   font-feature-settings: 'tnum';
[12:23:36] <theskillwithin>   font-variant-numeric: tabular-nums;
[12:23:43] <sheetjs> that's CSS
[12:23:55] <theskillwithin> idk what DBF is
[12:24:03] <sheetjs> some old data format
[12:24:14] <sheetjs> early 1980s
[12:24:22] <hans> how do i determine if something is a string or not a string?
[12:24:38] <sheetjs> typeof
[12:24:38] <ThePendulum> n> typeof 'hans'
[12:24:39] <jellobot> (okay) 'string'
[12:24:40] <theskillwithin> idk what dBASE is, i assume a db
[12:24:41] <hans> like  `if(typeof(v)==='string'){}  kindof works
[12:24:51] <hans> n> typeof (new String("hans"));
[12:24:52] <jellobot> (okay) 'object'
[12:25:12] <sheetjs> n> new String("hans")
[12:25:13] <jellobot> (okay) [String: 'hans']
[12:25:22] <sheetjs> it's different from the string literal
[12:25:31] <sheetjs> n> new String("hans").toString()
[12:25:32] <jellobot> (okay) 'hans'
[12:25:53] <hans> n> (new Error("hans")).toString()
[12:25:54] <jellobot> (okay) 'Error: hans'
[12:25:59] <hans> huh
[12:26:07] <sheetjs> Error object has a toString
[12:26:10] <ThePendulum> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_primitives_and_string_objects
[12:26:26] <sheetjs> n> new Error().stack
[12:26:27] <jellobot> (okay) 'Error\n    at evalmachine.<anonymous>:1:2\n    at Script.runInThisContext (node:vm:129:12)\n    at run (/run/run.js:64:35)\n    at /run/run.js:153:28\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)'
[12:27:10] <sheetjs> anyway ThePendulum what seemed odd about this whole discussion about "open source supply chain security" is that the true fix is fixing the incentives
[12:27:16] <sheetjs> and no one is really talking about that
[12:27:18] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9151:10d7:4d61:76e1)
[12:28:13] <sheetjs> https://www.bloomberg.com/opinion/articles/2021-07-29/archegos-was-too-busy-for-margin-calls sorta related
[12:28:14] <theskillwithin> sheetjs, i just started watching Mythic Quest,  ur into video games so u might like
[12:28:22] <theskillwithin> on apple tv
[12:28:34] <sheetjs> in this story, credit suisse had a risk department and knew that the hedge fund had a position that demanded more collateral
[12:28:46] <sheetjs> but others in the firm decided to ignore that
[12:28:49] <theskillwithin> sheetjs that dude from its always sunny is in it
[12:28:56] <ThePendulum> it just seems like a separate issue
[12:29:15] <sheetjs> is it really?
[12:29:38] <sheetjs> at its core, the problem is everyone wants other people to behave in certain ways that run counter to their incentives
[12:29:58] <sheetjs> and no one wants to really address that
[12:30:45] <sheetjs> sheetjs would probably make a lot more money if we decided tomorrow to relicense the open source software as proprietary
[12:30:53] <hans> what the balls
[12:31:42] <hans> why can i iterate an Error with `for(let index in err){}` , but i can not iterate a SyntaxError thrown by JSON.parse() with for(let index in err){}  ?
[12:32:04] <sheetjs> but that's something the users trust we won't do, and we firmly refuse to compromise the open source like that
[12:32:04] <ThePendulum> what if I want to make money off sheetjs and I have a hunch what your password could be?
[12:32:06] <hans> when iterating a normal Error like that, i get .message and .line and all that stuff, but when iterating a SyntaxError like that, i get aboslutely nothing
[12:32:08] <theskillwithin> sheetjs, most of us wouldn't have a job if we didn't work for a company
[12:32:33] <sheetjs> right theskillwithin that's the inherent problem
[12:32:40] <sheetjs> we're expecting other developers to do work for free
[12:32:53] <sheetjs> without really talking about their incentives to compromise the open source for a payout
[12:33:32] <sheetjs> ThePendulum: if wroathe were on, he'd say "blame npm, sell your self-hosted npm instance as a service"
[12:33:46] <ThePendulum> I'd expect in most cases it's a third party whose primary endeavor is scamming people
[12:34:01] <sheetjs> the example they gave was event-stream
[12:34:08] <sheetjs> the attack against event-stream wasn't guessing a password
[12:34:23] <sheetjs> it was literally the author handing the project over to someone else
[12:34:37] <sheetjs> so you can ask questions like why did the author do that and what are his/her responsibilities
[12:35:12] <sheetjs> and there's a simple answer that if you aren't paying, the author isn't responsible to tell you anything
[12:35:35] <sheetjs> ultimately it comes back to incentives
[12:35:41] <ThePendulum> I'm not sure money changes anything relevant in that equation, commercial companies exchange proprietary software all the time
[12:35:54] <sheetjs> sure but that wasn't the claim
[12:36:05] <sheetjs> if you aren't paying, you can't expect service
[12:36:07] <theskillwithin> sheetjs exactly which is why inflation sucks and socialism fails
[12:36:18] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:19] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[12:36:52] <sheetjs> there's no government system paying open source developers either
[12:37:07] <sheetjs> if you want to compare to NHS or other socialized systems, the government is generally paying
[12:37:42] <sheetjs> here, i'm awake at 4 in the morning working on something no one will pay me for
[12:37:50] <theskillwithin> the gov sucks at getting talent.   so many hackers don't apply cuz drug test
[12:38:20] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:50] <ThePendulum> in exchange you use free libraries in projects that someone does pay you for
[12:39:02] <theskillwithin> like there are 0-days that cost 3 million dollars to purchase
[12:39:27] <sheetjs> that is the theoretical basis for all of this ThePendulum but it depends on everyone playing the same game
[12:39:47] <ThePendulum> I wouldn't be able to get paid nearly as much if I had to build literally every single component from scratch and it'd take years before we could generate revenue
[12:39:50] <sheetjs> when gains are privatized and not circulated back to the ecosystem, you end up with brain drain and decay
[12:40:00] <sheetjs> ThePendulum: but everyone would face that force
[12:40:05] *** Joins: keypushe- (keypusher@user/keypusher)
[12:40:12] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 276 seconds)
[12:40:13] <theskillwithin> you can only have everyone playing the same game if you use force. and thats the problem, is your violating individual freedom
[12:40:41] <sheetjs> the unspoken "gentlemen agreements" have been broken
[12:40:56] <theskillwithin> ?
[12:41:15] <sheetjs> were you here when we talked about facebook devs?
[12:41:56] <sheetjs> haha so after adding some sheetjs stuff to react, a facebook dev seriously suggesting stripping attributions :(
[12:42:01] <theskillwithin> sheetjs what about when the gains are just printed by the gov, and taxing ur money  and its devaluing the dollar you save as an american.  but the rich keep their value cuz they invest
[12:42:46] <theskillwithin> sheetjs attributions?
[12:42:50] <sheetjs> that was years ago, but the current discussion around github copilot is related
[12:43:03] *** keypushe- is now known as keypusher
[12:43:23] <sheetjs> https://github.com/facebook/react/blob/v16.0.0/src/renderers/shared/utils/adler32.js#L17 for years they used some sheetjs stuff in react
[12:44:15] <theskillwithin> nice!
[12:44:56] <theskillwithin> sheetjs btw the gov has admitted they are telling what social media platforms should censor
[12:45:19] <sheetjs> its too late to talk politics
[12:45:35] <theskillwithin> its too late to fix it
[12:48:35] <theskillwithin> sheetjs don't forget to checkout Mythic Quest on apple tv
[12:49:28] <sheetjs> only on apple tv?
[12:50:26] <theskillwithin> idk, i have a NAS with unraid installed on it and there are docker apps that auto download what i tell it to and send to my plex
[12:51:07] <theskillwithin> sheetjs it has computer game theme tho, so u might like
[12:52:20] <theskillwithin> sheetjs do you like its always sunny in philidelphia?
[12:52:25] <sheetjs> figuring out what people were thinking about 35-40 years ago is a game of sorts too
[12:52:33] <sheetjs> haha the before-time
[12:52:47] <sheetjs> it is humbling to look at some of the dates
[12:52:54] <sheetjs> Excel 2.0 was 1987
[12:53:01] <sheetjs> Multiplan was 1982
[12:53:50] <ThePendulum> so would you prefer you got paid for that bit of code in react and in turn you have to pay for react?
[12:54:15] <sheetjs> i didn't care about getting paid
[12:54:24] *** Quits: Talon (~Talon@105-245-231-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[12:54:34] <sheetjs> one of the facebook employees tried to get the attribution stripped
[12:54:59] <sheetjs> that's sorta the unstated agreement here, you use something you credit it (it's also an important part of MIT Apache and other licenses)
[12:55:29] <ThePendulum> isn't that literally what the license either does or doesn't state? :P
[12:55:49] <sheetjs> people are free to break licenses and do all the time
[12:56:16] <sheetjs> GPL violations and ensuing conversations are "common"
[12:56:56] *** Joins: Talon (~Talon@4-76-233-166.mobile.uscc.net)
[12:57:11] <ThePendulum> depends on what you call free, not arsed to take them to court, sure
[12:57:49] <sheetjs> the microsoft github copilot situation brought this conversation up again
[13:01:18] *** Quits: Talon (~Talon@4-76-233-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[13:01:39] *** Joins: Talon (~Talon@255-11-233-166.mobile.uscc.net)
[13:03:09] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:05:57] *** Quits: Talon (~Talon@255-11-233-166.mobile.uscc.net) (Ping timeout: 245 seconds)
[13:08:15] *** Joins: Talon (~Talon@77-111-231-166.mobile.uscc.net)
[13:09:41] *** Joins: Guest46 (~Guest46@118-168-75-105.dynamic-ip.hinet.net)
[13:09:51] *** Parts: Guest46 (~Guest46@118-168-75-105.dynamic-ip.hinet.net) ()
[13:12:37] *** Quits: Talon (~Talon@77-111-231-166.mobile.uscc.net) (Ping timeout: 245 seconds)
[13:14:06] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:14:12] *** Joins: Talon (~Talon@113-119-231-166.mobile.uscc.net)
[13:16:06] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:7cc0:b6ca:d4c5:a4a7) (Quit: Leaving)
[13:18:34] *** Quits: Talon (~Talon@113-119-231-166.mobile.uscc.net) (Ping timeout: 240 seconds)
[13:18:49] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:19:40] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[13:19:43] *** Joins: Talon (~Talon@75-211-223-166.mobile.uscc.net)
[13:24:21] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:24:27] *** Quits: Talon (~Talon@75-211-223-166.mobile.uscc.net) (Ping timeout: 252 seconds)
[13:26:42] *** Joins: Talon (~Talon@22-255-235-166.mobile.uscc.net)
[13:28:44] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:28:48] <no_gravity> Whats the quickest way to add some html to the dom? Currently I do tmp=document.createElement.('span'); tmp.innerHTML=html; document.body.appendChild(tmp); But that wraps the html in a useless span.
[13:30:53] <no_gravity> I could loop through the elements inside the span aftwerwards and move them to the body and then delete the span. Hmm.. so much work.
[13:32:28] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[13:33:56] *** Quits: Talon (~Talon@22-255-235-166.mobile.uscc.net) (Ping timeout: 272 seconds)
[13:34:11] *** Joins: Talon (~Talon@152-190-233-166.mobile.uscc.net)
[13:37:59] <silly> no_gravity, https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML
[13:38:27] *** Quits: Talon (~Talon@152-190-233-166.mobile.uscc.net) (Ping timeout: 250 seconds)
[13:38:27] <silly> the more you touch the dom, the slower it gets
[13:38:36] <no_gravity> silly: That seems promising. Lets try it ...
[13:38:37] <silly> loop sounds bad
[13:39:08] <silly> that is, if you touch the dom on every iteration...
[13:39:13] *** Joins: Talon (~Talon@185-239-231-166.mobile.uscc.net)
[13:41:03] <no_gravity> silly: Thanks man, it rocks! https://jsfiddle.net/v7Lan1rp/
[13:44:04] *** Quits: Talon (~Talon@185-239-231-166.mobile.uscc.net) (Ping timeout: 272 seconds)
[13:44:31] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[13:44:55] *** Joins: Talon (~Talon@197-230-223-166.mobile.uscc.net)
[14:05:18] *** Joins: undefined_bob1 (~undefined@user/undefined-bob/x-5411918)
[14:07:43] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 244 seconds)
[14:11:53] *** Joins: entuland (~entuland@user/entuland)
[14:12:54] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:16:15] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:21:15] *** Quits: victor (sid208353@id-208353.tinside.irccloud.com) (Changing host)
[14:21:15] *** Joins: victor (sid208353@user/victor)
[14:22:02] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:22:36] *** Joins: gggpkm (~gggpkm@123.116.95.154)
[14:25:17] *** Quits: undefined_bob1 (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 244 seconds)
[14:25:34] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[14:26:33] *** Joins: undefined_bob1 (~undefined@user/undefined-bob/x-5411918)
[14:29:56] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 244 seconds)
[14:30:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[14:34:50] *** Quits: Talon (~Talon@197-230-223-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[14:35:25] *** Joins: Talon (~Talon@154-208-231-166.mobile.uscc.net)
[14:39:41] *** Quits: coc0nut (~coc0nut@128.90.138.207) (Changing host)
[14:39:41] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[14:39:49] *** Quits: Talon (~Talon@154-208-231-166.mobile.uscc.net) (Ping timeout: 258 seconds)
[14:40:34] *** Joins: Talon (~Talon@46-236-223-166.mobile.uscc.net)
[14:44:49] *** Quits: w0ng (~w0ng@103.1.212.140) (Ping timeout: 256 seconds)
[14:47:30] *** Quits: Talon (~Talon@46-236-223-166.mobile.uscc.net) (Ping timeout: 252 seconds)
[14:48:32] *** Joins: Talon (~Talon@35-84-223-166.mobile.uscc.net)
[14:53:12] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:53:42] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 268 seconds)
[14:54:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[15:00:11] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[15:00:15] *** Joins: w0ng (~w0ng@185.218.127.38)
[15:05:32] *** Quits: ThePendulum (~znc@2a03:b0c0:0:1010::1a8:1) (Ping timeout: 252 seconds)
[15:06:25] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:8ded:befc:bf12:b752) (Quit: WeeChat 3.2)
[15:08:04] *** Quits: gry (~quassel@botters/gry) (Quit: No Ping reply in 180 seconds.)
[15:08:40] *** Joins: gry (~quassel@botters/gry)
[15:10:12] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 272 seconds)
[15:12:04] *** Joins: ThePendulum (~znc@2a03:b0c0:0:1010::1a8:1)
[15:12:50] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:3d66:98fa:2b38:7415)
[15:15:51] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 258 seconds)
[15:16:15] *** Joins: thiras (~thiras@user/thiras)
[15:17:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[15:23:48] *** Joins: silly_ (~silly@user/silly)
[15:25:35] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[15:26:39] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[15:27:21] *** Quits: silly (~silly@user/silly) (Ping timeout: 258 seconds)
[15:29:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:29:03] *** Quits: gggpkm (~gggpkm@123.116.95.154) (Remote host closed the connection)
[15:49:49] *** Quits: hmw[at] (~hmw@4in6.metalab.wien.funkfeuer.at) (Ping timeout: 268 seconds)
[15:50:48] *** Quits: lesihctej (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:03:00] *** Quits: Talon (~Talon@35-84-223-166.mobile.uscc.net) ()
[16:03:27] *** Joins: nomic (~nomic@host81-157-178-98.range81-157.btcentralplus.com)
[16:05:15] <Emil> Hey
[16:05:49] <Emil> I'm implementing drag and drop files
[16:06:05] <Emil> and here https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop it says: The drop event is fired when the user drops the file(s). In the following drop handler, if the browser supports DataTransferItemList interface, the getAsFile() method is used to access each file; otherwise the DataTransfer interface's files property is used to access each file.
[16:06:37] <Emil> So I'm wondering what's the point of getasfile
[16:09:31] *** Quits: stiv3n (~stiv3n@184.170.242.213) (Ping timeout: 258 seconds)
[16:09:40] *** Joins: DarkSeid_ (~textual@90.201.4.27)
[16:10:38] *** Joins: mearp (~mearp@154.13.1.41)
[16:11:16] *** Joins: pulse (~pulse@user/pulse)
[16:11:23] *** Joins: stiv3n (~stiv3n@184.170.242.177)
[16:11:48] <mearp> is it possible to suppress this warning? "Warning: Cannot update a component (`ComponentWrapper`) while rendering a different component (`Component`)" ?
[16:12:02] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[16:12:50] <mearp> apparently the official way is to wrap the setState call in a useEffect hook, however this won't work as it's happening inside a function within a custom hook
[16:20:53] *** Joins: teut (~teut@106.214.44.24)
[16:22:31] <epolanski> why is NaN == NaN false
[16:22:48] <epolanski> NaN is a global object, but it obviously isn't comparing by reference#]
[16:23:11] <epolanski> thus it's converting to a number and does numbers are different?
[16:23:19] <epolanski> those*
[16:24:35] <Alexendoo> n> typeof NaN
[16:24:36] <jellobot> (okay) 'number'
[16:28:53] <Alexendoo> NaN is defined to not be equal to anything, by IEEE 754
[16:29:16] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[16:29:44] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[16:30:47] <Maxdamantus> Right, otherwise you would have things like `Infinity/Infinity == Infinity - Infinity`.
[16:33:45] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[16:37:31] *** undefined_bob1 is now known as undefined_bob
[16:38:08] *** Quits: DarkSeid_ (~textual@90.201.4.27) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:39:01] *** Quits: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[16:39:34] *** Joins: henry40408 (~henry4040@112-104-114-132.adsl.dynamic.seed.net.tw)
[16:41:20] *** Quits: teut (~teut@106.214.44.24) (Ping timeout: 258 seconds)
[16:43:20] <epolanski> as I supposed
[16:43:21] <epolanski> then
[16:43:27] <epolanski> then whole article is uselss and also wrong
[16:43:28] <epolanski> https://blog.sekab.dev/why-nan-nan-returns-false-in-javascript
[16:43:40] <epolanski> NaN is different than NaN in any language respecting IEEE 754
[16:44:18] <Maxdamantus> It's not "different". It just compares non-equal to itself
[16:44:57] <Maxdamantus> Note that it doesn't apply to NaN objects, only the NaN number value.
[16:45:14] <Maxdamantus> n> const o = Object(NaN); [o == o, o];
[16:45:14] <jellobot> (okay) [ true, [Number: NaN] ]
[16:46:37] *** Joins: teut (~teut@182.69.87.27)
[16:49:41] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[16:50:07] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:54:29] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[16:56:20] <epolanski> Maxdamantus: wait does it means it's not different
[16:56:36] <epolanski> https://en.wikipedia.org/wiki/NaN#Comparison_with_NaN
[16:56:49] <epolanski> this says NaN == any number (including NaN) is false
[16:56:54] <Maxdamantus> It is the same. It just compares non-equal with itself.
[16:56:56] <Maxdamantus> Right.
[16:57:04] <Maxdamantus> n> Object.is(NaN, NaN);
[16:57:04] <jellobot> (okay) true
[16:57:17] <epolanski> okay, I like you being pedantic
[16:57:21] <epolanski> you are right
[16:57:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:59:01] <DnzAtWrk> NaN is a virus
[16:59:03] <DnzAtWrk> prove me wrong
[16:59:06] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[16:59:10] <qswz> lottie files, yay or nay?
[17:00:00] <qswz> problem is they're use, like 500kB+ jsons, uncompressible
[17:00:09] <qswz> s/use/huge
[17:02:52] *** Joins: DarkSeid_ (~textual@90.201.4.27)
[17:06:58] <Emil> Regarding drag and drop, it's said that we don't get dragstart and dragend if we drag from the os
[17:07:15] <Emil> how can I detect if dragover as finished then?
[17:07:19] <qswz> where is it said that
[17:07:40] <qswz> oh yea itd make sense
[17:07:44] <Emil> Note that dragstart and dragend events are not fired when dragging a file into the browser from the OS.
[17:07:47] <Emil> https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop
[17:08:09] <qswz> in dragover you need to event.preventDefault to signify you listen to drags
[17:08:12] <Emil> ie how should I detect if i should remove the styling
[17:08:21] <qswz> in drop
[17:08:49] <qswz> or if the dragover is stopping
[17:09:15] <qswz> check https://caub.github.io/misc/optim
[17:09:38] <qswz> see green outline when you dragover
[17:10:04] <Emil> hmm oh yeah it's said that we get dragover every few ms
[17:10:19] <Emil> so I suppose I could do it by having an animation that times out after a second
[17:11:23] <qswz> fun thing is that irssi colorize your name as lime (light green)
[17:12:09] <Emil> haha that's a neat coincidence
[17:16:48] *** Joins: haniaF_ (~haniaF@79.191.119.137.ipv4.supernova.orange.pl)
[17:18:42] *** Quits: haniaF (~haniaF@83.24.40.67.ipv4.supernova.orange.pl) (Ping timeout: 272 seconds)
[17:20:39] *** Joins: Poboy (~Poboy@user/poboy)
[17:24:16] *** Quits: jazzy3 (~jaziz@2600:380:8600:750f:a0eb:13de:7970:4f87) (Ping timeout: 258 seconds)
[17:24:31] <diverdude> Hi, I have a binary file which contains a binary sequence that represents a small 4x5 2D array of double (64bit floats) values. How do i decode that into a javascript 2D array of floats?
[17:25:16] <qswz> you chunk it
[17:25:22] <qswz> take a knife and chunk it
[17:26:29] <diverdude> ok and do you also have a serious answer=`? :)
[17:27:28] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[17:29:07] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[17:29:17] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Read error: Connection reset by peer)
[17:31:23] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[17:34:01] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:34:24] *** Quits: DarkSeid_ (~textual@90.201.4.27) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:34:34] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:34:53] *** Joins: DarkSeid_ (~textual@90.201.4.27)
[17:35:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:36:09] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[17:36:31] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[17:39:20] *** Quits: DarkSeid_ (~textual@90.201.4.27) (Client Quit)
[17:42:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:44:08] <systemfault> diverdude: You load the data into a Float64Array and then, you can just use more Float64Array views reusing the underlying ArrayBuffer object
[17:44:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[17:44:46] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:44:54] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:48:32] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 272 seconds)
[17:50:57] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[17:58:34] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[18:00:03] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[18:00:49] *** Joins: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[18:01:50] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[18:05:00] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[18:09:44] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:10:32] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[18:11:09] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[18:12:18] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[18:14:52] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:14:59] *** Joins: Guest9 (~Guest9@194.27.73.6)
[18:15:46] *** Joins: mattil (~mattilinn@87-92-5-183.bb.dnainternet.fi)
[18:16:17] *** Joins: Poboy (~Poboy@user/poboy)
[18:20:42] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 240 seconds)
[18:20:50] *** Quits: Guest9 (~Guest9@194.27.73.6) (Quit: Client closed)
[18:21:20] *** Joins: qadah (~qadah@194.27.73.6)
[18:21:50] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[18:21:50] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[18:21:50] *** Joins: Heraes (~Heraes@user/romarain)
[18:22:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[18:24:14] *** Quits: qadah (~qadah@194.27.73.6) (Client Quit)
[18:24:50] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 258 seconds)
[18:27:32] *** Quits: federico_it (~textual@151.95.117.132) (Quit: Textual IRC Client: www.textualapp.com)
[18:34:44] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:36:02] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 272 seconds)
[18:37:43] <diverdude> systemfault: ok i tried doing this: var fs = require('fs'),binary = fs.readFileSync('./tstdmp.bin'); a = Float64Array.from(binary)   but a does not contain float values it seems
[18:37:58] *** Joins: Lyn (~Lyn@user/law)
[18:38:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:38:28] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:38:40] <no_gravity> n> 3<7<10
[18:38:41] <jellobot> (okay) true
[18:38:45] <no_gravity> n> 3<10<7
[18:38:46] <jellobot> (okay) true
[18:38:50] <no_gravity> Nah :)
[18:38:57] <no_gravity> Is there something like a<b<c in JS?
[18:39:48] *** Quits: nomic (~nomic@host81-157-178-98.range81-157.btcentralplus.com) (Quit: Leaving)
[18:40:48] <systemfault> No
[18:40:56] <no_gravity> C'est la vie.
[18:41:00] <systemfault> En effet.
[18:41:59] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Remote host closed the connection)
[18:42:08] <diverdude> systemfault: is there something more i should do to get the float array out?
[18:44:04] *** Joins: Lynn (~Lyn@user/law)
[18:44:25] *** Quits: Lyn (~Lyn@user/law) (Killed (NickServ (GHOST command used by Lynn)))
[18:44:28] *** Lynn is now known as Lyn
[18:44:29] <systemfault> Depends on how the 2D array is serialized... but often, that 2d array is just going to be serialized as a contiguous block
[18:44:59] <systemfault> So you could probably load the whole thing as a Float64Array and it would work... then you can add your extra views on top of it
[18:46:47] *** Joins: monoxane6 (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[18:47:03] <diverdude> systemfault: its just serialized as a contigous block in 'C' style
[18:47:27] <Lyn> should nodemon be installed as a dev dependency
[18:47:43] <diverdude> systemfault: but why does this not work then? var fs = require('fs'),binary = fs.readFileSync('./tstdmp.bin'); a = Float64Array.from(binary);
[18:48:57] <ThePendulum> n> const foo = 'bar', lorem = foo;
[18:48:57] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 265 seconds)
[18:48:57] *** monoxane6 is now known as monoxane
[18:48:57] <jellobot> (okay) undefined
[18:49:01] <ThePendulum> n> const foo = 'bar', lorem = foo; lorem
[18:49:02] <jellobot> (okay) 'bar'
[18:49:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:49:39] <diverdude> systemfault: i just get this result: https://dpaste.org/UAzt
[18:49:54] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[18:50:03] <systemfault> diverdude: And that's not good?
[18:50:53] <diverdude> systemfault: those are integers... and it should actually be 20 elements, each with value 1.0 arranged in a 4x5 array
[18:51:11] <diverdude> systemfault: that does not seem to be what i am getting
[18:52:11] <diverdude> this is what i have in the binary sequence: https://dpaste.org/W0Lx
[18:52:38] <systemfault> diverdude: What if you do: new Float64Array(binary.buffer) ?
[18:53:14] <ThePendulum> may I also suggest to use const instead of var and one definition per const statement/line. so const a = 'a'; const b = 'b'; const c = 'c'; instead of var a = 'a', b = 'b', c = 'c'. much more readable and maintainable
[18:53:55] <diverdude> ok that definetly gave something different :D https://dpaste.org/BC6G   but also incorrect it seems
[18:54:23] <systemfault> Don't you know how many floats that array is supposed to have?
[18:54:27] <diverdude> 20
[18:54:28] *** Joins: zebrag (~chris@user/zebrag)
[18:54:31] <systemfault> And you're sure that there isn't more data?
[18:54:46] <ThePendulum> okay this is just criminal https://stackoverflow.com/a/3781428
[18:54:47] <diverdude> 100%. i made that array myself in python
[18:55:10] <systemfault> diverdude: Give me a second... it's just that stupid Buffer optimization causing issues here I believe
[18:55:50] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[18:56:03] <systemfault> diverdude: Try: new Float64Array(binary.buffer, binary.byteOffset, binary.length / Float64Array.BYTES_PER_ELEMENT)
[18:57:05] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:5967:2fb0:cc2f:4c7c) (Quit: Leaving)
[18:58:16] <diverdude> systemfault: this is how i create the data in python in case you want to see: (very simple) https://dpaste.org/Yb4s
[18:58:43] <systemfault> Did you try the latest snippet?
[18:58:50] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:01:02] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:01:15] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:02:29] <diverdude> systemfault: ahhh that worked :)
[19:02:35] <systemfault> Awesome
[19:02:45] <diverdude> new Float32Array(binary.buffer, binary.byteOffset, binary.length / Float32Array.BYTES_PER_ELEMENT)
[19:02:52] <diverdude> it was float32...sorry
[19:02:54] <systemfault> Why did you say they were doubles?
[19:02:56] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd)
[19:02:59] <systemfault> Ahh ok :)
[19:03:02] <diverdude> that was my mistake
[19:03:02] *** Quits: mattil (~mattilinn@87-92-5-183.bb.dnainternet.fi) (Quit: Leaving)
[19:03:06] <diverdude> sorry
[19:03:18] <systemfault> No problem, just glad you got it now
[19:03:25] <diverdude> yeah thanks to you :)
[19:03:46] <diverdude> btw. can i somehow reshape this to a 4x5 2D array ?
[19:04:28] <systemfault> You have to slice it yourself using .subarray
[19:04:45] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 250 seconds)
[19:04:45] <systemfault> Don't worry about performance, the underlying buffer is reused
[19:05:26] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[19:06:03] <systemfault> Float32Array is just a "view", it contains no data
[19:06:09] <diverdude> systemfault: ok..in a loop or can i do it in a one-liner somehow?
[19:06:37] <systemfault> I'm pretty sure but not 100% sure that you will need a loop
[19:07:14] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:07:38] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[19:08:42] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[19:08:47] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:09:02] <Poboy> Hey wassup, JavaScript kiddies
[19:09:04] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:09:09] *** Joins: hans (~hans@77.16.76.189.tmi.telenormobil.no)
[19:09:57] <no_gravity> Natvie Javascript dependency management have become so good. It is a joy.
[19:12:07] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[19:12:19] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd) (Quit: Leaving)
[19:12:30] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd)
[19:14:58] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 240 seconds)
[19:15:35] <Poboy> Oh wow, I don't even know what that is
[19:16:35] <no_gravity> Poboy: Browsers all support imports and dynamic imports now.
[19:16:38] <no_gravity> It is very nice.
[19:16:59] <Poboy> (y)
[19:18:00] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[19:21:12] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[19:21:12] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:22:44] <systemfault> How is it nice.... nobody but beginners use native imports.
[19:22:56] <systemfault> It's not even controversial
[19:22:59] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[19:23:48] <diverdude> i am doing const d = await fetch('http://127.0.0.1:6543/patches/1/0/348761614/142/test/6f0fa73ca33a3a60d5ff5ff2d22d3c58f5e065d7');   which should return a binary result. But how do I access that binary data?
[19:24:14] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[19:24:53] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[19:25:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:25:34] <systemfault> Assuming a browser, d is a "response" object, not an arraybuffer
[19:25:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:26:01] <systemfault> You'd need to do something like const d = await fetch('http://127.0.0.1:6543/patches/1/0/348761614/142/test/6f0fa73ca33a3a60d5ff5ff2d22d3c58f5e065d7').then(response => response.arraybuffer()) or similar
[19:26:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Client Quit)
[19:26:24] <systemfault> Apparently, it's .arrayBuffer() with the capital B
[19:26:35] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:26:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[19:27:13] <systemfault> Then you can just create the Float32Array using that arraybuffer (You shouldn't need to do with .byteOffset + length thing like with NodeJS's Buffer)
[19:29:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:29:30] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Ping timeout: 240 seconds)
[19:29:49] <diverdude> ohhh so cool :D
[19:29:54] <diverdude> youre a genius
[19:32:41] *** Quits: hans (~hans@77.16.76.189.tmi.telenormobil.no) (Ping timeout: 258 seconds)
[19:35:19] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[19:35:41] *** Joins: hans (~hans@2a02:2121:10b:8f9e:5dcc:410d:6739:3abb)
[19:37:17] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 258 seconds)
[19:39:51] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:79b:e975:13c9:f97c)
[19:40:07] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:79b:e975:13c9:f97c) (Changing host)
[19:40:08] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[19:40:48] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:45:31] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:47:15] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 276 seconds)
[19:47:57] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[19:48:25] *** Quits: CiaoSen (~Jura@p549cb217.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[19:51:32] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[19:52:40] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 272 seconds)
[19:55:24] *** Joins: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[19:56:34] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[19:58:20] *** Quits: hans (~hans@2a02:2121:10b:8f9e:5dcc:410d:6739:3abb) (Ping timeout: 268 seconds)
[20:06:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:07:30] <hassoon> 'afternoon
[20:13:11] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[20:19:34] *** Joins: PrenzlBurg (~PrenzlBur@145.243.166.71)
[20:19:49] *** Quits: PrenzlBurg (~PrenzlBur@145.243.166.71) (Read error: Connection reset by peer)
[20:21:37] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:24:00] *** Joins: hans (~hans@2a02:2121:10b:8f9e:5dcc:410d:6739:3abb)
[20:29:33] <cthulchu> I wonder why there's no custom, better and more comfortable devtools for Chrome.
[20:31:25] <cthulchu> like the tendency of devtools to open What's New on every update in the drawer. Annoying. I never read it and it just steals my time
[20:31:59] <cthulchu> or the fact that we can't remove the CSS panel from the Elements when it's wide enough
[20:32:37] <cthulchu> or that it forgets the order of tabs on chrome update...
[20:32:42] <cthulchu> </rant>
[20:37:12] *** Joins: ckdcreation (~ckdCreati@147.55.133.129)
[20:40:32] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:41:23] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[20:42:58] *** Quits: hans (~hans@2a02:2121:10b:8f9e:5dcc:410d:6739:3abb) (Ping timeout: 240 seconds)
[20:45:07] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[20:47:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:48:15] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[20:50:32] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:50:39] *** Joins: hans (~hans@81.166.125.50.static.multigamer.no)
[20:51:13] <wroathe> cthulchu: Because the sheer amount of work it would take to build a competing product is astronomical
[20:51:31] <cthulchu> oh
[20:51:31] <wroathe> cthulchu: And the interface it depends on isn't standardized, and changes often
[20:51:36] <cthulchu> it's not open source?
[20:51:51] <wroathe> It's open source. Are you just suggesting forking and tweaking it?
[20:52:01] <cthulchu> of course.
[20:52:35] <cthulchu> that could be... advertised as a browser explicitly for development
[20:52:36] <wroathe> Well, the effort is still fairly high in that scenario, and the problems you outlined aren't exactly deal breakers for most people
[20:52:47] <cthulchu> right
[20:52:51] <wroathe> And the chromium project tree is absolutely massive
[20:53:21] <systemfault> Even V8 is massive.
[20:53:32] <systemfault> And it's just "one" part of chromium :P
[20:54:23] <cthulchu> right, and so buildtime would bee insufferable.
[20:54:43] *** Joins: summersault (~summersau@2804:7f0:3886:c810:2982:c383:666b:7acd)
[20:55:21] <wroathe> And from a maintenance perspective, being on the receiving end of an upstream over a long period of time is generally unpleasant for a maintainer
[20:55:26] <wroathe> The shit flows one way
[20:56:16] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:56:34] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:57:27] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 276 seconds)
[20:57:39] *** Quits: summersault2 (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[20:57:52] *** Quits: summersault (~summersau@2804:7f0:3886:c810:2982:c383:666b:7acd) (Read error: Connection reset by peer)
[20:58:01] *** Joins: summersault2 (~summersau@177.19.240.91)
[20:59:01] *** duch_kazatel is now known as robertmaxrees
[21:00:18] *** Quits: IceMichael (~IceMichae@dynamic-046-114-156-234.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[21:00:36] *** Joins: Betal (~Beta@user/betal)
[21:02:20] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[21:02:21] *** Joins: codebam (~codebam@user/codebam)
[21:02:58] *** Quits: summersault2 (~summersau@177.19.240.91) (Ping timeout: 272 seconds)
[21:05:18] *** Joins: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com)
[21:07:06] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:07:44] *** Joins: pavonia (~user@user/siracusa)
[21:09:01] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:11:58] *** Quits: hans (~hans@81.166.125.50.static.multigamer.no) (Ping timeout: 258 seconds)
[21:12:28] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[21:12:41] *** Joins: hans (~hans@81.166.125.50.static.multigamer.no)
[21:13:53] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 258 seconds)
[21:14:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:16:13] *** Quits: strive (~strive@user/strive) (Quit: WeeChat 3.2)
[21:16:43] *** Joins: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c)
[21:17:20] *** Quits: hans (~hans@81.166.125.50.static.multigamer.no) (Ping timeout: 258 seconds)
[21:17:42] <birkoff> when I set a div to display=none via javascript the next time it is set to display=block via javascript form buttons on it are disabled
[21:19:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[21:19:17] <GreenJello> those are unrelated
[21:19:24] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:20:10] <birkoff> then why else can it happen ? I do not set those buttons explicity to disabled anyhwere
[21:20:48] <GreenJello> I have no way of knowing that
[21:21:07] <robertmaxrees> birkoff prove it :shrug:
[21:21:15] *** Joins: matsaman (~matsaman@user/matsaman)
[21:21:28] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[21:23:44] <systemfault> birkoff: Maybe that initially, the display isn't block?
[21:25:14] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[21:26:22] *** Joins: junktext (~junktext@109.201.152.179)
[21:27:14] *** Quits: yaalon (~yaalon@ftth-static-173-239-90-128.rioaccess.com) (Remote host closed the connection)
[21:29:11] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:31:13] *** Joins: summersault (~summersau@177.19.240.91)
[21:38:19] *** Joins: gehn (~gehn@user/gehn)
[21:50:38] *** Joins: pycode (~pycode@2001:b07:5d28:551:b26b:ae89:369e:921f)
[21:50:39] <pycode> hello
[21:50:52] <pycode> is there a particular limit on localstorage/sessionstorage in MB ?
[21:53:40] <systemfault> IIRC, it's around 5MB
[21:53:57] <systemfault> That said, if you have that much data to store, you're using the wrong storage mechanism
[21:54:57] <hans_> there's a specific api you can use to request like unlimited storage tho, not sure of the specifics, but mega.io use it to handle GIGABYTES in javascript
[21:54:58] <incognito> how to tell fs.write() to be fsync ?
[21:55:22] *** Joins: P1RATEZ (~piratez@user/p1ratez)
[21:55:34] *** Joins: PrenzlBurg (~PrenzlBur@p200300ca57319c00c0e6b84421405a5f.dip0.t-ipconnect.de)
[21:55:42] <systemfault> If you need a lot of storage, look at indexedDB
[21:55:53] *** Joins: Rockwood (~Rocky@user/rocky)
[21:56:08] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:56:20] <pycode> systemfault, i need to store timeseries for many stocks
[21:56:27] <pycode> so i need around 15M of data
[21:56:28] *** Joins: Rockwood (~Rocky@user/rocky)
[21:56:34] <pycode> to avoid downloading data again and again
[21:56:39] <systemfault> pycode: Look at indexedDB
[21:57:07] <systemfault> pycode: IIRC, the API is pretty awful... so look for a wrapper, maybe "localforage"(not a typo)
[21:57:35] <pycode> hmm ok
[21:58:41] <systemfault> But yeah, the definitive answer is indexedDB... because WebSQL died
[21:59:07] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 258 seconds)
[21:59:51] <pycode> ok thank i will give it a try, never used it never heard about that...but now i have to store more data
[21:59:55] <pycode> so i need something different
[22:00:07] <pycode> otherwise the website will be too heavy to load
[22:00:17] <pycode> too many prices to download
[22:00:21] <pycode> soi need to store theme somewhere
[22:00:29] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[22:01:54] *** Quits: PrenzlBurg (~PrenzlBur@p200300ca57319c00c0e6b84421405a5f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:01:59] *** Quits: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c) (Remote host closed the connection)
[22:02:14] *** Joins: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c)
[22:02:44] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[22:04:30] *** Joins: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi)
[22:05:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:b26b:ae89:369e:921f) (Remote host closed the connection)
[22:06:04] *** Quits: junktext (~junktext@109.201.152.179) (Remote host closed the connection)
[22:06:38] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[22:08:05] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:08:51] *** Joins: TheAceOfHearts_ (~TheAceOfH@24.41.239.76)
[22:09:16] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:c07a:b68:5c99:6652)
[22:09:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9151:10d7:4d61:76e1) (Ping timeout: 256 seconds)
[22:10:01] *** Joins: Guest9 (~Guest9@103.240.204.119)
[22:10:19] *** Quits: Guest9 (~Guest9@103.240.204.119) (Client Quit)
[22:11:38] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:12:18] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[22:15:20] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:19:07] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:19:55] <no_gravity> When you have a bunch of html elements that are absolutely positioned, is it possible to put a container around them that is as big as this bunch of elements together?
[22:22:41] <systemfault> Not that I know... may I ask why you have a lot of absolutely positioned elements?
[22:22:46] <systemfault> Are you doing animations?
[22:23:06] <no_gravity> systemfault: I am building a web based mind mapping tool.
[22:23:23] <no_gravity> Where the user moves items around on the screen.
[22:24:39] <systemfault> There's probably a way to do it using some JS... but you'd probably have to write it yourself
[22:24:51] <no_gravity> Thats what I am doing now.
[22:28:36] <gehn> iterate the children, find the min/max for top bottom left right
[22:28:45] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:28:45] <no_gravity> Thats what I am doing now.
[22:29:11] <gehn> ok I don't think there's anything standard that does this, it's the kind of thing you'd do yourself
[22:30:33] <GreenJello> just make sure to do all of your measuring before updating any of the sizes
[22:30:53] <systemfault> Yeah... or else, layout trashing nightmare.
[22:31:06] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 240 seconds)
[22:31:07] <GreenJello> you can measure normally, but put all of the updates in a requestAnimationFrame
[22:31:49] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:32:34] <no_gravity> Here is the code I wrote: https://pastebin.com/raw/NyzEdA0x
[22:32:40] <no_gravity> Wonder how to make it more elegant.
[22:33:48] <GreenJello> looks fine
[22:34:18] *** Quits: bobdobbs` (~user@150.107.174.253) (Ping timeout: 256 seconds)
[22:35:00] *** Quits: peterhil (~peterhil@mobile-access-5d6ace-52.dhcp.inet.fi) (Ping timeout: 252 seconds)
[22:35:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:35:55] *** Joins: Poboy (~Poboy@user/poboy)
[22:36:39] *** Quits: TheAceOfHearts_ (~TheAceOfH@24.41.239.76) (Ping timeout: 252 seconds)
[22:37:00] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[22:39:54] *** Quits: davlefou_ (~davlefou@5.183.212.65) (Ping timeout: 268 seconds)
[22:44:15] <no_gravity> The code in action: https://jsfiddle.net/sxgc2tv6/
[22:44:26] <no_gravity> Nah, it looks ugly :)
[22:44:36] <no_gravity> I hate that I have to copy all the values from elements[0]. And that it goes over element 0 twice.
[22:45:37] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:46:01] <pavonia> What about using [].reduce?
[22:46:12] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:46:12] <matsaman> no_gravity: I fell like you should be able to loop through all the elements and get all the x,y, then get the mins and maxes at once
[22:46:15] <matsaman> it should be pretty short
[22:46:21] <matsaman> haven't done it in JS before though
[22:46:26] <matsaman> feel* like =P
[22:46:35] <sheetjs> loop across the keys
[22:46:48] <no_gravity> pavonia: I never used reduce. Can you edit the fiddle to make use of it?
[22:47:19] <pavonia> No :p
[22:47:37] <sheetjs> n> var src = { a:1, b:2, c:3, d:4, e:5 }, keys = ["a","b","c","d"], dst = {}; keys.forEach(k => dst[k] = src[k]); dst
[22:47:38] <jellobot> (okay) { a: 1, b: 2, c: 3, d: 4 }
[22:47:40] <birkoff> is it possible to use URLSearchParams.set() or similar to send same param with several values ? set() always overwrites what it deems the unique param but when the browser send something like https://url.com/?q=1&q=2&q=3 a webserver see {"q": ["1","2","3"] }
[22:48:01] <l__q> How to check sometimes if a user is still online with socketio? Im think about sending from server a ping, and if user dont send back a pong in 30sec then remove it from online list, but how to await a user respond on serwer? Or is a better way do, do that?
[22:48:11] <GreenJello> birkoff, there's a .append I think
[22:48:26] <sheetjs> to the general problem no_gravity we have to deal with borders in a few places and it was easiest to store a "side" array with the key names
[22:48:59] <birkoff> GreenJello: thanks
[22:49:01] <matsaman> I don't think you'd have to store it, but it'll be more readable if you do
[22:49:11] <matsaman> and of no performance consequence
[22:49:21] <no_gravity> I prefer to keep all data natively in the DOM.
[22:49:31] <matsaman> well you're still doing that
[22:49:36] <matsaman> this is just for calculations
[22:49:42] <matsaman> storing in a let or whatever you please
[22:49:48] <matsaman> merely for readability
[22:49:52] <matsaman> of your JS
[22:50:13] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/xlsx.flow.js#L13485
[22:50:16] <matsaman> but again, you don't have to, you can get the data and immediately get the mins & maxes without storing in a variable
[22:53:02] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 252 seconds)
[22:53:49] <GreenJello> no_gravity, https://jsfiddle.net/ecmzo7h8/
[22:53:54] *** Joins: trufas (~trufas@177.240.218.218)
[22:54:19] <no_gravity> GreenJello: Reading ...
[22:56:16] <no_gravity> GreenJello: Pretty cool :)
[22:56:47] <matsaman> yeah that looks nice
[23:04:17] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[23:05:10] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[23:05:41] *** Quits: stiv3n (~stiv3n@184.170.242.177) (Ping timeout: 250 seconds)
[23:05:54] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:11] *** Joins: Jck_true3 (~jcktrue@188.228.89.240)
[23:07:01] *** Joins: IceMichael (~IceMichae@dynamic-046-114-156-234.46.114.pool.telefonica.de)
[23:07:06] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[23:07:06] *** Jck_true3 is now known as Jck_true
[23:07:40] *** Joins: stiv3n (~stiv3n@2601:647:8101:e370:2857:f30e:ec0c:aedf)
[23:08:03] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[23:08:52] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:09:35] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:09:51] *** Quits: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c) (Remote host closed the connection)
[23:10:08] *** Joins: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c)
[23:12:36] *** Joins: bynx (~bynx@pool-173-67-246-236.rcmdva.fios.verizon.net)
[23:12:45] *** Joins: mexen (uid495612@user/mexen)
[23:13:29] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[23:17:19] *** Quits: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c) (Ping timeout: 258 seconds)
[23:17:38] *** Quits: bynx (~bynx@pool-173-67-246-236.rcmdva.fios.verizon.net) (Quit: leaving)
[23:21:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[23:26:12] *** Joins: keypushe- (keypusher@user/keypusher)
[23:26:26] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[23:29:03] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[23:29:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[23:29:16] *** keypushe- is now known as keypusher
[23:33:37] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:33:56] *** Joins: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c)
[23:34:18] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[23:34:59] *** Joins: zakame (~zakame@user/zakame)
[23:37:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[23:37:44] *** Quits: ckdcreation (~ckdCreati@147.55.133.129) (Read error: Connection reset by peer)
[23:37:44] *** Joins: onosendi (~onosendi@user/onosendi)
[23:38:02] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[23:40:43] *** Joins: oscuroaa (~fcharles-@135.129.112.112)
[23:43:24] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[23:47:59] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 258 seconds)
[23:48:37] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[23:53:45] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[23:55:46] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[23:55:52] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 265 seconds)
[23:56:58] *** Quits: hans_ (~hans@2a02:2121:10b:8f9e:7cab:6aca:74bb:c69c) (Ping timeout: 240 seconds)
[23:58:24] *** Quits: fiend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
