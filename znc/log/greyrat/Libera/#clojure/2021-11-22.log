[00:00:32] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[00:05:06] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 260 seconds)
[00:10:44] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:11:54] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:20:20] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[00:33:09] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[00:39:57] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[00:40:38] *** Quits: X-Scale (~ARM@83.223.249.106) (Ping timeout: 260 seconds)
[00:41:18] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[00:41:50] *** X-Scale` is now known as X-Scale
[00:42:17] *** Joins: xsperry (~xs@user/xsperry)
[00:43:30] *** Joins: jjhoo (~jahakala@user/jjhoo)
[01:02:26] *** Joins: VincentVega (~user@212.241.24.160)
[01:16:01] *** Joins: X-Scale` (~ARM@31.22.202.54)
[01:16:32] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[01:18:46] *** X-Scale` is now known as X-Scale
[01:21:04] *** Joins: libertyprime (~libertypr@203.211.73.21)
[01:37:15] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[01:44:02] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[01:53:57] *** Joins: Ischwitch (~Ingvix@user/ingvix)
[01:55:23] *** Quits: Ingvix (~Ingvix@user/ingvix) (Ping timeout: 256 seconds)
[01:55:23] *** Ischwitch is now known as Ingvix
[01:56:13] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 29.0.50)
[02:08:22] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[02:09:28] *** Quits: libertyprime (~libertypr@203.211.73.21) (Quit: leaving)
[02:09:53] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[02:16:43] *** Joins: Colt (~Colt@user/colt)
[02:22:04] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:47:15] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Ping timeout: 250 seconds)
[02:51:21] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 250 seconds)
[02:53:02] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[03:03:22] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[03:11:30] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[03:16:31] *** Quits: rinwa (~user@188.120.142.86) (Read error: No route to host)
[03:18:27] *** Joins: rinwa (~user@188.120.142.86)
[03:45:57] *** Quits: VincentVega (~user@212.241.24.160) (Remote host closed the connection)
[04:05:42] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[04:11:04] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[04:32:43] *** Joins: kipz (~kipz@home.kipz.org)
[04:34:43] *** Quits: kipper (~kipz@home.kipz.org) (Ping timeout: 250 seconds)
[05:02:22] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 260 seconds)
[05:03:42] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[05:37:38] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[06:04:03] *** jackhill is now known as KM4MBG
[06:55:16] *** KM4MBG is now known as jackhill
[07:02:08] *** Joins: mbuf (~Shakthi@223.178.114.167)
[07:16:20] *** Joins: libertyprime (~libertypr@203.211.73.21)
[07:34:09] *** Joins: Colt2 (~Colt@user/colt)
[07:34:25] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:35:01] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:35:34] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:36:12] *** Quits: Colt2 (~Colt@user/colt) (Client Quit)
[07:37:03] *** Joins: Colt (~Colt@user/colt)
[08:31:19] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 250 seconds)
[08:44:34] *** Quits: libertyprime (~libertypr@203.211.73.21) (Ping timeout: 260 seconds)
[08:50:42] *** Quits: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-6c7b-602c-655c-4c52.res6.spectrum.com) (Remote host closed the connection)
[09:09:01] *** Quits: Munto (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 250 seconds)
[09:12:12] *** Joins: Munto (~Munto@120.51.3.93.rev.sfr.net)
[09:13:59] *** Joins: libertyprime (~libertypr@203.211.73.21)
[09:18:48] *** Quits: etiago- (~etiago@cpc120220-heme13-2-0-cust103.9-1.cable.virginm.net) (*.net *.split)
[09:18:48] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:18:48] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (*.net *.split)
[09:19:17] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[09:19:48] *** Joins: flynn (~mcbloch@user/flynn)
[09:20:09] *** Joins: etiago (~etiago@user/etiago)
[09:24:59] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:25:00] *** Quits: benoitj (~benoitj@user/benoitj) (*.net *.split)
[09:25:00] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[09:25:00] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:25:00] *** Quits: gko (~user@user/gko) (*.net *.split)
[09:25:00] *** Quits: laman2 (~laman@rego.ai) (*.net *.split)
[09:25:00] *** Quits: aphyr (~kyle@aphyr.com) (*.net *.split)
[09:25:00] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[09:25:00] *** Quits: rufo (~rufo@ct.rufoa.com) (*.net *.split)
[09:25:00] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[09:25:00] *** Quits: bcmiller (~bm3719@66.42.95.185) (*.net *.split)
[09:25:06] *** Joins: bcmiller (~bm3719@66.42.95.185)
[09:25:14] *** Joins: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de)
[09:25:15] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[09:25:17] *** Joins: aphyr (~kyle@aphyr.com)
[09:25:26] *** Quits: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de) (Changing host)
[09:25:26] *** Joins: Ragnor (~Ragnor@user/ragnor)
[09:25:36] *** Joins: laman2 (~laman@rego.ai)
[09:26:01] *** Joins: gko (~user@user/gko)
[09:26:33] *** Joins: benoitj (~benoitj@user/benoitj)
[09:26:42] *** Joins: hexology (~hexology@user/hexology)
[09:26:58] *** Joins: rufo (~rufo@ct.rufoa.com)
[09:31:34] *** Joins: andreyorst_erc (~user@176.59.42.30)
[09:36:02] *** Quits: libertyprime (~libertypr@203.211.73.21) (Ping timeout: 240 seconds)
[09:41:11] *** Quits: zak (~zak@144.172.69.61) (Ping timeout: 256 seconds)
[09:41:36] *** Joins: Ekho (~Ekho@user/ekho)
[09:46:51] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 256 seconds)
[10:14:08] *** Quits: andreyorst_erc (~user@176.59.42.30) (Read error: Connection reset by peer)
[10:14:31] *** Joins: andreyorst_erc (~user@176.59.42.30)
[10:18:07] *** Joins: shiranaihito (~textual@219.85.135.50)
[10:22:12] *** Quits: andreyorst_erc (~user@176.59.42.30) (Remote host closed the connection)
[10:30:17] *** Joins: libertyprime (~libertypr@122-56-211-243.mobile.spark.co.nz)
[10:41:10] *** Quits: libertyprime (~libertypr@122-56-211-243.mobile.spark.co.nz) (Ping timeout: 260 seconds)
[10:56:52] *** Quits: shiranaihito (~textual@219.85.135.50) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:00:38] *** Quits: v3gajerusalem (~v3ga@99-38-191-33.lightspeed.clmasc.sbcglobal.net) (Quit: WeeChat 3.2)
[11:00:39] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[11:00:53] *** Joins: v3ga (~v3ga@2600:1702:ad0:3b90::40)
[11:02:31] *** Quits: v3ga (~v3ga@2600:1702:ad0:3b90::40) (Client Quit)
[11:04:35] *** Joins: shiranaihito (~textual@2001-b011-4000-1762-5533-c2dd-b1b6-20a3.dynamic-ip6.hinet.net)
[11:05:21] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 245 seconds)
[11:22:32] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[11:24:17] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[11:26:31] *** Joins: libertyprime (~libertypr@203.211.73.21)
[11:33:34] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:37:45] *** Joins: op2 (~op@user/op2)
[11:44:51] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 264 seconds)
[11:45:08] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:52:48] *** Joins: dawdler (~dawdler@user/dawdler)
[12:58:14] *** Quits: davdunc (sid93271@id-93271.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:28] *** Quits: port9 (sid124217@id-124217.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[12:58:28] *** Quits: rjk_ (sid809@id-809.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[12:58:36] *** Quits: bbz (sid62109@id-62109.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:45] *** Quits: mp (sid298319@id-298319.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:58:53] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:58:54] *** Quits: obviyus (sid415299@user/obviyus) (Ping timeout: 250 seconds)
[12:59:11] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:17] *** Joins: gaustin_ (sid356092@helmsley.irccloud.com)
[12:59:22] *** Quits: victor_ (sid208353@id-208353.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:59:32] *** Quits: gaustin (sid356092@id-356092.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:35] *** gaustin_ is now known as gaustin
[12:59:47] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:51] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[12:59:53] *** Joins: obviyus (sid415299@user/obviyus)
[12:59:59] *** Quits: theruran (uid11305@id-11305.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:59] *** Quits: cespare (sid330206@id-330206.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[13:00:01] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[13:00:01] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[13:00:02] *** Joins: theruran_ (uid11305@hampstead.irccloud.com)
[13:00:10] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[13:00:26] *** Joins: dunc (sid16@uxbridge.irccloud.com)
[13:00:31] *** Joins: davdunc (sid93271@ilkley.irccloud.com)
[13:00:45] *** Joins: manicennui (uid349235@tinside.irccloud.com)
[13:01:48] *** Joins: pl (sid98063@helmsley.irccloud.com)
[13:01:48] *** Joins: port9 (sid124217@uxbridge.irccloud.com)
[13:01:48] *** Joins: conjunctive (sid433686@helmsley.irccloud.com)
[13:01:49] *** Joins: meinside (uid24933@helmsley.irccloud.com)
[13:02:08] *** Joins: rjk_ (sid809@uxbridge.irccloud.com)
[13:03:39] *** Joins: victor_ (sid208353@tinside.irccloud.com)
[13:04:01] *** Joins: mp (sid298319@lymington.irccloud.com)
[13:04:25] *** Joins: cespare (sid330206@hampstead.irccloud.com)
[13:04:28] *** Joins: IUSR (sid348938@hampstead.irccloud.com)
[13:13:32] *** Joins: bbz (sid62109@id-62109.ilkley.irccloud.com)
[13:37:26] *** Quits: libertyprime (~libertypr@203.211.73.21) (Ping timeout: 245 seconds)
[13:44:35] *** Joins: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz)
[13:53:10] *** Quits: rinwa (~user@188.120.142.86) (Read error: Connection reset by peer)
[13:56:11] *** Joins: struchu (~struchu@staticline-31-183-169-56.toya.net.pl)
[14:12:09] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[14:25:27] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[14:33:52] *** Quits: struchu (~struchu@staticline-31-183-169-56.toya.net.pl) (Quit: WeeChat 3.3)
[14:34:10] *** Quits: xsperry (~xs@user/xsperry) ()
[14:34:28] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[14:39:06] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 265 seconds)
[15:01:07] *** Joins: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[15:05:26] *** Joins: xsperry (~xs@user/xsperry)
[15:05:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 264 seconds)
[15:05:55] *** Joins: Ilyu_ (~quassel@166.215.82.79.rev.sfr.net)
[15:06:06] *** Joins: X-Scale` (~ARM@31.22.202.54)
[15:06:12] *** Joins: struchu (~struchu@staticline-31-183-169-56.toya.net.pl)
[15:08:16] *** Quits: X-Scale (~ARM@31.22.202.54) (Ping timeout: 268 seconds)
[15:08:21] *** X-Scale` is now known as X-Scale
[15:21:13] *** Joins: atw (~user@cst2-164-145.cust.vodafone.cz)
[15:22:08] *** Quits: struchu (~struchu@staticline-31-183-169-56.toya.net.pl) (Quit: WeeChat 3.3)
[15:37:50] <sobel> unexpectedly interesting dive into ordered hash maps/sets. https://blog.toit.io/hash-maps-that-dont-hate-you-1a96150b492a
[15:40:13] <sobel> TL/DR: get you a data structure that can do both (ordered and associative access)
[15:41:11] <sobel> the other TL/DR is Java has some winning implementations under the hood, but we prolly knew that here
[15:43:17] *** Joins: struchu (~struchu@staticline-31-183-169-56.toya.net.pl)
[15:45:27] *** Quits: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz) (Ping timeout: 264 seconds)
[15:51:18] <wink> > data structure that can do both (ordered and associative access)
[15:51:18] <wink> without context this sounds like PHP's arrays
[15:51:34] <wink> and boy do people have opinions about those ;)
[15:55:09] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:56:34] *** Quits: struchu (~struchu@staticline-31-183-169-56.toya.net.pl) (Quit: WeeChat 3.3)
[15:59:06] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[16:00:48] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:10:10] <ridcully> it means most likely that items put into the map keep the order.  e.g. like clojures implementation for the first 8 or so items or LinkedHashMap from java land
[16:10:10] <sobel> i doubt Team PHP put nearly as much thought into their arrays
[16:10:34] <sobel> the article mentions LinkedHashMap in specific
[16:23:02] *** Joins: yewscion (~yewscion@72-21-196-67.amazon.com)
[16:44:49] <wink> maybe I should've added some ;) but they were inspired by Perl I guess and the author mentioned those
[16:45:22] <wink> but that's always made me wonder if people deliberately made HashMaps non-ordered of if it was just an implementation detail
[16:45:44] <wink> because except perf I don't see any downside to have them ordered
[17:10:59] <sobel> from what i can tell, making them ordered was a bit of extra work but justified by the languages that were already leaning on them for that. imagine depending on an ordered set to be your de-duping queue. but apparently that happened.
[17:11:03] <sobel> a lot
[17:12:46] <sobel> i could do better to learn where to insert ;) more often. (full irony: i call out Poe's law when i see it preying on a thread)
[17:24:55] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:25:36] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[17:26:03] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:26:33] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[17:30:31] *** Joins: Afroboy (~afroboy@154.121.54.111)
[17:35:27] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[17:35:49] *** Joins: son0p (~ff@181.136.122.143)
[17:36:28] *** Joins: flynn (~mcbloch@user/flynn)
[17:46:50] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[18:02:46] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[18:05:21] *** Quits: shiranaihito (~textual@2001-b011-4000-1762-5533-c2dd-b1b6-20a3.dynamic-ip6.hinet.net) (Ping timeout: 245 seconds)
[18:32:26] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Ping timeout: 245 seconds)
[18:34:27] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[18:47:55] *** Joins: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-d9e2-1ab8-216d-6fda.res6.spectrum.com)
[18:48:31] *** Joins: chujev_ (~chujev@88.103.235.151)
[18:51:02] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 240 seconds)
[18:51:59] *** Quits: chujev (~chujev@88.103.227.222) (Ping timeout: 264 seconds)
[18:53:29] *** Joins: chujev (~chujev@88.103.227.222)
[18:53:44] *** Quits: chujev_ (~chujev@88.103.235.151) (Ping timeout: 260 seconds)
[18:57:03] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[18:57:53] *** Joins: learner-monad (~ehanneken@user/learner-monad)
[19:02:31] *** Joins: zak (~zak@144.172.69.61)
[19:04:43] *** Quits: learner-monad (~ehanneken@user/learner-monad) (Quit: WeeChat 3.3)
[19:06:02] <selfsymmetric-mu> We have sorted-map in Clojure, but since that's sorted not ordered you have to keep track yourself. 
[19:06:40] <selfsymmetric-mu> I'm quite glad that Python made dictionaries order stable.
[19:14:22] <ridcully> there is clj-commons/ordered if you need that
[19:16:30] <selfsymmetric-mu> ridcully: Oh, wonderful!
[19:16:58] <selfsymmetric-mu> I watched a talk about spec yesterday. I wonder if the spec philosophy would be to use a regular core data structure, and then spec the semantics onto it.
[19:18:32] *** Quits: Afroboy (~afroboy@154.121.54.111) (Quit: Leaving)
[19:21:31] *** Joins: learner-monad (~ehanneken@user/learner-monad)
[19:22:14] <ridcully> the trap here is actually, that small maps are ordered.  so things work in tests and the repl and explode once they see the real world.  but in the end it just shows: know your data types.
[19:31:03] *** Quits: atw (~user@cst2-164-145.cust.vodafone.cz) (Ping timeout: 264 seconds)
[19:40:46] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 245 seconds)
[19:41:23] *** Quits: Harlin (~DonQixote@75-163-138-123.clsp.qwest.net) (Quit: Leaving)
[19:44:13] *** Joins: xsperry (~xs@user/xsperry)
[19:48:48] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 260 seconds)
[19:58:51] *** Joins: chujev_ (~chujev@88.103.234.141)
[20:02:01] *** Quits: chujev (~chujev@88.103.227.222) (Ping timeout: 245 seconds)
[20:03:16] *** Joins: chujev (~chujev@198.20.115.180)
[20:03:41] *** Quits: chujev_ (~chujev@88.103.234.141) (Ping timeout: 245 seconds)
[20:04:56] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[20:09:06] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Ping timeout: 245 seconds)
[20:18:53] *** Joins: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e)
[20:29:56] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 245 seconds)
[20:43:20] <yeik-the-spik[m]> Does aleph + manifold bend your mind? Or does my mind bend aleph + manifold?
[20:44:51] <yeik-the-spik[m]> The amounts of mutation in my code with those two kind scares me. But when I think about it, atoms are used to mutate. Is asynchronous code mutable by necessity?
[20:46:53] <yeik-the-spik[m]> Not that I find anything wrong. I just find it odd.
[20:47:18] *** Joins: vats (~vats@106.67.68.168)
[20:50:49] *** Parts: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-d9e2-1ab8-216d-6fda.res6.spectrum.com) (Leaving)
[20:51:21] *** Quits: mbuf (~Shakthi@223.178.114.167) (Quit: Leaving)
[20:52:54] *** Joins: seschwar (~seschwar@user/seschwar)
[20:58:21] *** Joins: to-hu (~Thunderbi@p200300e9af1a11003cedacdab7e46855.dip0.t-ipconnect.de)
[21:04:04] *** Quits: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:05:19] *** Joins: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru)
[21:13:39] *** Quits: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:13:41] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 245 seconds)
[21:14:43] *** Joins: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru)
[21:15:42] *** Quits: matty_matt (~matt@2601:140:c006:b40:cd3a:8015:fb46:4e3e) (Quit: WeeChat 3.2)
[21:25:02] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Remote host closed the connection)
[21:26:12] *** Quits: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:26:48] *** Quits: to-hu (~Thunderbi@p200300e9af1a11003cedacdab7e46855.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:27:09] *** Joins: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru)
[21:28:03] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Ping timeout: 264 seconds)
[21:31:58] *** Joins: shiranaihito (~textual@2001-b011-4000-3c66-e00a-14f3-9f1f-7ec9.dynamic-ip6.hinet.net)
[21:34:20] *** Joins: matty_matt (~matt@2601:140:c006:b40:2cee:e3fc:21ad:9d98)
[21:36:22] *** Quits: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:38:15] *** Joins: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru)
[21:44:05] *** Quits: vats (~vats@106.67.68.168) (Read error: Connection reset by peer)
[21:44:43] *** Joins: atw (~user@cst2-164-145.cust.vodafone.cz)
[21:55:58] *** Quits: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru) (Quit: Lost terminal)
[21:56:24] *** Joins: uncleyear (~ian@pppoe.178-66-158-226.dynamic.avangarddsl.ru)
[22:02:36] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:997a:3f9a:563b:b791)
[22:09:54] *** Joins: andreyorst (~user@176.59.42.207)
[22:10:40] *** Quits: andreyorst (~user@176.59.42.207) (Remote host closed the connection)
[22:10:53] *** Joins: andreyorst (~user@176.59.42.207)
[22:10:56] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[22:11:00] *** Quits: andreyorst (~user@176.59.42.207) (Remote host closed the connection)
[22:11:20] *** Joins: andreyorst_erc (~user@176.59.42.207)
[22:23:39] *** Quits: andreyorst_erc (~user@176.59.42.207) (Remote host closed the connection)
[22:24:21] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[22:25:22] *** Joins: xulfer (uid452788@id-452788.ilkley.irccloud.com)
[22:27:56] *** Quits: DasBrain_ (DasBrain@user/dasbrain) (Ping timeout: 268 seconds)
[22:28:03] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:997a:3f9a:563b:b791) (Ping timeout: 264 seconds)
[22:29:15] *** Quits: matty_matt (~matt@2601:140:c006:b40:2cee:e3fc:21ad:9d98) (Ping timeout: 264 seconds)
[22:29:16] *** Joins: to-hu (~Thunderbi@p200300e9af1a11002c2d46af59e8d445.dip0.t-ipconnect.de)
[22:34:50] *** Joins: matty_matt (~matt@2601:140:c006:b40:2cee:e3fc:21ad:9d98)
[22:34:56] *** Quits: atw (~user@cst2-164-145.cust.vodafone.cz) (Ping timeout: 245 seconds)
[22:41:45] *** Joins: atw (~user@cst2-164-145.cust.vodafone.cz)
[23:22:01] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[23:22:01] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[23:22:01] *** Quits: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de) (*.net *.split)
[23:22:01] *** Quits: choas (~lars@ppp-188-174-58-126.dynamic.mnet-online.de) (*.net *.split)
[23:22:08] *** Joins: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de)
[23:22:08] *** Joins: choas (~lars@ppp-188-174-58-126.dynamic.mnet-online.de)
[23:22:20] *** Joins: jeaye (~jeaye@user/jeaye)
[23:22:25] *** Joins: struchu (~struchu@staticline-31-183-169-56.toya.net.pl)
[23:27:23] <selfsymmetric-mu> ridcully: Small maps are ordered?
[23:30:00] <ridcully> selfsymmetric-mu: (->> (reductions #(assoc %1 %2 %2) {} (range)) (drop 8) (take 2))
[23:30:21] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[23:30:35] <ridcully> selfsymmetric-mu: clojure switches the implementation at this size
[23:33:41] *** Quits: matty_matt (~matt@2601:140:c006:b40:2cee:e3fc:21ad:9d98) (Ping timeout: 245 seconds)
[23:44:36] <jeaye> Yeah, that can be kind of annoying.
[23:45:20] <jeaye> The "short map" optimization is really good, though.
[23:45:44] <jeaye> Basically storing a vector<pair<key, value>> instead of the hash map, for small maps.
[23:46:08] <jeaye> It's O(n), instead of O(log32(n)), but the overhead is so small that it's much faster.
[23:48:05] *** Quits: struchu (~struchu@staticline-31-183-169-56.toya.net.pl) (Quit: WeeChat 3.3)
[23:48:41] *** Joins: pseudonymous (~pseud@78.143.68.142.static.fibianet.dk)
[23:50:49] <pseudonymous> wondering, I have a function which uses clojure.java.jdbc/with-transaction to create a tx which is passed along. Later in my code, I crash because a function generated from hugsql seems to call clojure.java.jdbc/get-connection on the object ( https://pastebin.com/5KAL52Uw ) ... how can I bridge this ? It cannot be that I cannot operate in the tx context.
