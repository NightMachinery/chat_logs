[00:00:13] *** Joins: badsektor (~badsektor@user/badsektor)
[00:00:14] *** Joins: greedom (~greedom@2001:16b8:2eaf:f00:d9fd:24e4:94e9:32e0)
[00:01:16] *** Joins: samhain (~samhain@user/samhain)
[00:03:25] *** Joins: nre (~nre@55d47251.access.ecotel.net)
[00:03:43] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[00:04:04] *** Joins: milosz (~milosz@user/milosz)
[00:04:45] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[00:05:57] *** Joins: HumanBird (~HumanBird@2603-8001-7003-5966-adcd-7d3d-1cf5-adab.res6.spectrum.com)
[00:06:29] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:06:56] *** Joins: voldial (~user@user/voldial)
[00:07:45] <voldial> How do I get an iterator that yields DateTimes for the 1st day of each month?
[00:07:49] *** Joins: Naan (~naan@user/naan)
[00:07:53] <HumanBird> https://bpa.st/X5AQ  why does the audio have so much static in it when it plays?
[00:08:04] <Payam> The proper way of having a private function is to have one underscore? right? like `def _myfun()`. while having `def __myfun()` is to prevent overriding. correct? how about private variables? is it with one underscore or two?
[00:08:19] <pragmaticenigma> Payam: no
[00:08:37] *** Quits: nre (~nre@55d47251.access.ecotel.net) (Quit: Leaving.)
[00:08:57] <Payam> tell more please
[00:10:00] *** Joins: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r)
[00:10:01] <bjs> Payam: yes one underscore is the convention for "private". but it doesn't actually make it private
[00:10:19] <bjs> it's just a hint to the reader, Python treats _names just like normal names
[00:10:26] *** Quits: maxking (~maxking@54.11.83.34.bc.googleusercontent.com) (Changing host)
[00:10:26] *** Joins: maxking (~maxking@user/maxking)
[00:10:36] <jinsun_> voldial: if you can use pandas there is https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.MonthBegin.html
[00:10:41] *** jinsun_ is now known as jinsun
[00:10:55] <Payam> https://ibb.co/HFMkKBt
[00:11:02] <Payam> bjs https://ibb.co/HFMkKBt
[00:11:26] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[00:11:56] <bjs> Payam: what's the question
[00:11:59] <bjs> this is just an image.
[00:12:14] <voldial> jinsun: thanks, that looks useful
[00:13:22] <Payam> bjs . what is the correct way of having "private" variables and functions?
[00:14:08] <bjs> Payam: like the text says, with a single underscore.  Which usually signals "internal implementation details" to the reader
[00:14:11] *** Joins: sn1tch3r_ (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r)
[00:14:12] <bjs> (and like I said earlier)
[00:14:27] *** Quits: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::c639) (Quit: Leaving)
[00:14:42] <Payam> bjs you see in the image that the private variable "__private" is not overriden i subclass C.
[00:14:53] <Payam> but would "_private" get overriden?
[00:14:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[00:15:08] <bjs> Payam: yes, it's not private though you can still access it from elsewhere. It's for avoiding clashes in inheritance.
[00:15:16] <bjs> Payam: yes
[00:15:42] *** Joins: sn1tch3r__ (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r)
[00:15:50] <Payam> yes. Thanks. so the normal way of having private functions is to have one underscore and the same for private variables
[00:16:11] <bjs> Payam: there is no privacy in Python.  You can access everything.
[00:16:25] <bjs> Payam: single underscore _names are a common convention that say "dont use this" to the reader
[00:16:28] <Payam> I understand bjs. I am trying to follow the convension :)
[00:16:40] *** Quits: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r) (Ping timeout: 258 seconds)
[00:17:10] *** Joins: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r)
[00:17:53] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (Quit: Leaving!)
[00:18:06] <HumanBird> figured it out. needed to add a .astype(np.float32) to get rid fo the static
[00:18:14] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[00:19:18] *** Quits: sn1tch3r_ (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r) (Ping timeout: 252 seconds)
[00:19:21] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:19:21] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[00:19:25] <pragmaticenigma> Payam: the single underscore is nothing more than a signal to developer. It does not hold any special meaning to the Python interpreter. It is a way for a developer to write code without concerns that if their class were to be inherited by another, the properties that were defined are less likely to be overwritten by the derived class.
[00:20:10] *** Quits: sn1tch3r__ (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r) (Ping timeout: 265 seconds)
[00:20:16] *** Joins: samhain (~samhain@user/samhain)
[00:20:21] <pragmaticenigma> while at the same time allowing the derived class access to those properties and methods, however, it is not recommened to use single underscore methods and properties, as they may not hold the same values in the future.
[00:21:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[00:21:56] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[00:22:03] <pragmaticenigma> So the single underscore is more a social contract. the creator offers the consumer the ability to view, inspect, and use, but to understand that what is true today, may not be true in a future release
[00:22:55] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:23:27] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:24:22] <pragmaticenigma> the closest thing Python has to a "private" member of an object is the use of a double underscore, which the Python interpreter mangles such that other objects cannot directly use those methods and properties. However, nothing is truly "private" in either case
[00:24:23] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[00:25:00] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[00:26:10] *** Joins: diek (~diek@187.36.4.113)
[00:27:11] *** Joins: zeenk (~zeenk@82.76.113.130)
[00:27:22] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[00:27:49] <patchie> whats the easiest way to get weekday, and week-number? I am making a watchface for a python based wristwatch.
[00:28:48] <pragmaticenigma> patchie: https://docs.python.org/3/library/datetime.html
[00:29:09] *** Joins: Fossil (~Fossil@95.85.23.165)
[00:30:21] <patchie> yeah, and the easiest way is?
[00:30:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[00:30:36] <patchie> bah, forget that i asked...
[00:33:08] <pragmaticenigma> okay, I'll be more specific: https://docs.python.org/3/library/datetime.html#datetime.date.isocalendar
[00:33:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[00:34:01] <patchie> thanks!
[00:35:24] *** veegee_ is now known as veegee
[00:35:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[00:36:03] *** Joins: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149)
[00:37:13] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[00:38:05] *** Joins: psydroid (~psydroidm@user/psydroid)
[00:38:07] *** Quits: t0e (~t0e@37.19.212.133) (Ping timeout: 244 seconds)
[00:38:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[00:39:34] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:39:54] *** Quits: {HD} (~{HD}@191.96.185.131) (Ping timeout: 268 seconds)
[00:41:18] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[00:41:37] *** Joins: samhain (~samhain@user/samhain)
[00:41:55] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[00:42:17] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[00:42:24] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[00:43:01] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[00:43:24] <patchie> pragmaticenigma: it was kind of easy, thanks!
[00:43:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:46:50] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[00:49:52] *** Joins: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net)
[00:49:52] *** Joins: GregTheHun_ (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108)
[00:50:07] *** Quits: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108) (Ping timeout: 264 seconds)
[00:50:10] *** GregTheHun_ is now known as GregTheHun
[00:50:53] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[00:50:58] *** Quits: frostschutz (~frostschu@2a01:c22:c819:6f00:b59a:20ec:36bc:630e) (Quit: Leaving)
[00:51:12] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[00:52:11] *** Joins: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:54:05] *** radu2422 is now known as radu242
[00:54:16] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 246 seconds)
[00:54:22] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[00:54:26] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[00:54:58] *** Quits: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r) (Ping timeout: 265 seconds)
[00:55:22] *** Quits: trace (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:56:03] *** Joins: pnoud (~pnoud@user/pnoud)
[00:56:03] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[00:56:08] *** Joins: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[00:57:22] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.2)
[00:57:58] *** Joins: derelict (~derelict@user/derelict)
[00:59:59] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[01:00:11] *** Joins: feriman (~feriman@188.163.113.127)
[01:01:24] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[01:01:47] <bn_work> hi, python 3.7, still very new to python, trying to debug an openapi generated python client, is there a way to enable global python tracing so I can see what the generated client is doing as it executes? PS:  looked at https://docs.python.org/3/library/trace.html but it's not really helpful and just shows a list of libs vs a trace of execution?
[01:01:56] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[01:02:33] *** sn1tch3r_ is now known as sn1tch3r
[01:03:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:03:28] <The-Compiler> bn_work: https://python-hunter.readthedocs.io/en/latest/readme.html or perhaps a debugger
[01:06:32] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 265 seconds)
[01:07:44] <bn_work> The-Compiler: yeah, do you have suggestions on a good debugger?  was using the one in vscode but when I specify module debugging and paste my package name , it errors with `~/.vscode/extensions/ms-python.python-2020.2.63990/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49753 -m foo` `/anaconda3/bin/python: No module named foo.__main__; foo is a package and cannot be directly executed`
[01:08:10] <bn_work> perhaps I am not putting in the correct "module" name?
[01:08:21] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[01:08:44] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[01:08:58] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[01:09:01] <Yhg1s> bn_work: you can tell the trace module what to output, but you might be happier with a real debugger. The error you're getting from vscode means you have the wrong module name, yes.
[01:09:10] <Yhg1s> (or, it's a package and you can't execute it because it has no __main__.py)
[01:10:28] *** Joins: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r)
[01:10:31] *** Joins: canton7 (canton7@about/csharp/canton7)
[01:10:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[01:11:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Quit: Leaving)
[01:11:09] <The-Compiler> bn_work: that's what I would have suggested, but I'm pretty new to VS Code myself, just used pdb before that
[01:11:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[01:11:49] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:11:55] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:13:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:14:39] *** Joins: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:15:13] <bn_work> Yhg1s: hmm, yeah, it only has `__init__.py` :/
[01:15:25] <Yhg1s> bn_work: so what are you trying to run?
[01:15:45] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Ping timeout: 265 seconds)
[01:15:46] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[01:16:03] <bn_work> Yhg1s: it's an openapi generated python client
[01:16:12] <Yhg1s> bn_work: how would you run it from the shell?
[01:16:51] <bn_work> Yhg1s: it's a lib... so it's not directly invokable, at least not that I'm aware of
[01:17:14] *** Quits: sn1tch3r (sn1tch3r@gateway/vpn/nordvpn/sn1tch3r) (Ping timeout: 252 seconds)
[01:17:14] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[01:17:17] <Yhg1s> bn_work: okay, but to debug it, you need to *run* it. You'll have to write a program that uses the lib so you have something to run and debug.
[01:17:46] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[01:17:51] <Yhg1s> bn_work: this would also explain why trace only shows you imports, mind you. Because that's all the library will do when you run it ;P
[01:18:28] <bn_work> Yhg1s: yes, I have a Jupyter NB that I've converted to just a .py file that uses the lib, and I'm debugging through that, but vscode doesn't jump into any of the lib files as it traces (not sure if something needs to be configured?)
[01:18:29] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Remote host closed the connection)
[01:19:07] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[01:20:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:20:44] <bn_work> I may be wrong about `-m trace` just showing libs, but it's not providing output that I'm finding useful.  The debuggers that I'm used to will auto jump between source files as you single-step through and you can inspect vars as you do so
[01:21:16] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[01:21:47] <Yhg1s> bn_work: yes, the trace module is not a replacement for a debugger (but you *can* tell it what to output as it traces). The vscode debugger should work for your use-case.
[01:22:10] <bn_work> Yhg1s: how do I get vscode to do the behavior above?
[01:22:24] <Yhg1s> bn_work: I'm not sure what behaviour you're looking for. Are you looking to trace, or step through the code?
[01:22:42] <bn_work> > auto jump between source files as you single-step through and you can inspect vars as you do so
[01:23:05] <bn_work> so far it only stays in my file
[01:23:56] <Yhg1s> bn_work: it's very difficult to tell what's going on with just the description, I'm afraid. How are you stepping through the code? what calls are you seeing the code do where you expect to step into the function?
[01:24:56] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[01:25:17] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[01:25:56] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[01:27:12] *** Joins: {HD} (~{HD}@191.96.185.62)
[01:29:08] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 252 seconds)
[01:30:47] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Remote host closed the connection)
[01:30:54] <bn_work> Yhg1s: I hit the "step into" button and it just only shows my file (presumably advances, as I see variables change) but it doesn't jump into any of the lib's source files
[01:31:12] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[01:31:20] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:31:24] <bn_work> (this is after setting the initial breakpoint from where I want to start tracing from)
[01:31:57] *** Joins: roolebo (sid64806@charlton.irccloud.com)
[01:32:00] <Yhg1s> bn_work: https://code.visualstudio.com/docs/python/debugging#_justmycode is probably the relevant config setting then.
[01:32:28] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[01:33:36] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Ping timeout: 244 seconds)
[01:34:11] *** Joins: ostrich (~ostrich@user/ostrich)
[01:34:51] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:34:55] <bn_work> Yhg1s: thanks, just set that to false and no diff :(  do I need to restart vscode for it to take effect?
[01:35:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:35:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:35:17] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:36:36] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:38:22] <bn_work> like the call stack always just shows 1 level only, my file.  Do I need to select some base folder so it knows where to find libs?
[01:40:28] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[01:40:32] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:41:14] <Linkandzelda> how can i swap out temporarily an object in a class for another? i have self.logger, which i want to swap self.logger = override_logger, then later self.logger = self.original_logger. i have a feeling this wont do what i want though?
[01:41:22] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[01:41:31] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.2)
[01:42:04] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[01:43:19] <bjs> Linkandzelda: why won't it do what you want?
[01:43:52] <bjs> if anything tries to access `self.logger` after you swap it (but before you replace it), it'll get the new thing instead.
[01:43:54] *** Quits: magla (~gelignite@55d45fb8.access.ecotel.net) (Quit: Stay safe!)
[01:43:55] <Linkandzelda> bjs: im just afraid by doing self.original_logger = self.logger, then doing self.logger = XX that it will overwrite self.original_logger
[01:44:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[01:44:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:44:10] <bjs> Linkandzelda: override?
[01:44:16] <bjs> Linkandzelda: oh no, it won't do that.
[01:44:44] <Linkandzelda> bjs: ok, then thats good
[01:44:52] <bjs> Linkandzelda: just like for normal variables: `y = x` then `x = 42` doesn't affect `y`.
[01:45:22] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:45:56] <phy1729> re.compile(r'(f)[o\1]o')   doesn't error and does match foo, but does it match anything else? (Doesn't match f1o or ffo here at least)
[01:46:06] *** Quits: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[01:46:13] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[01:46:47] <bjs> phy1729: well it matches "f\1o"
[01:46:55] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Remote host closed the connection)
[01:47:02] <phy1729> oh
[01:47:10] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[01:47:28] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[01:47:44] <bjs> phy1729: perhaps I should ask what regex you were actually trying to make :)
[01:47:58] <phy1729> I guess it's octal?
[01:48:13] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Remote host closed the connection)
[01:48:21] <phy1729> I'm writing a regex parsing thing, so reading the docs and working through the edge cases
[01:48:50] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:48:57] <bjs> phy1729: \1 is just character with value 1. Aka chr(1).  Yes I think it interprets it as a single-digit octal
[01:49:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 252 seconds)
[01:49:23] <phy1729> [\10] matches \x08 which pointes to octal
[01:49:42] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:49:59] <bjs> oh it's not single digit, my mistake
[01:50:30] <bjs> phy1729: note this isn't regex doing this:  print("\x10" == chr(8))
[01:50:33] *** Joins: selimcan (~selimcan@154.28.188.41)
[01:50:49] <phy1729> but it's an r' string
[01:51:45] <bjs> phy1729: oh right, hmm. I guess `re` tries to match normal Python escapes
[01:52:09] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:52:09] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[01:52:19] <Yhg1s> Yes, it's re. The normal escapes don't work in character classes ([]'s), but it's interpreting the \1 as an octal escape.
[01:52:28] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:52:34] <phy1729> dear cthulhu why
[01:52:42] <Yhg1s> bn_work: sorry, I don't know. I haven't used vscode's debugger enough, but I don't remember running into that problem.
[01:52:50] <Yhg1s> phy1729: probably behaviour inherited from PCRE.
[01:53:21] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[01:53:21] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Quit: meow.)
[01:53:34] <bjs> phy1729: when you said writing a regex parsing thing, did you mean a parser using regex or literally something that parses regexs
[01:53:35] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[01:53:39] *** Joins: samhain (~samhain@user/samhain)
[01:54:04] <phy1729> the latter
[01:54:48] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[01:55:34] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 258 seconds)
[01:56:07] <Yhg1s> phy1729: I hope you're using sre_parse then ;P
[01:56:13] <Yhg1s> (or at least know how to use it.)
[01:56:48] *** Quits: ph88^ (~ph88@2a02:8109:9e00:7e5c:1960:9d14:60f8:23cf) (Ping timeout: 265 seconds)
[01:56:55] <phy1729> I need the AST from parsing the regex. I don't think it exposes that.
[01:57:19] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[01:57:25] <Yhg1s> phy1729: I meant for validating your parser.
[01:57:35] <Yhg1s> it shows you how the string is parsed, after all.
[01:57:41] *** Joins: bilegeek (~bilegeek@2600:1008:b017:63a6:c26d:d119:faaa:a6d7)
[01:57:43] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:57:56] <phy1729> Is it documented anywhere but the code?
[01:58:08] <Yhg1s> nope, it's an internal module.
[01:58:18] *** Quits: ostrich (~ostrich@user/ostrich) (Quit: WeeChat 3.2)
[01:58:30] <bn_work> The-Compiler: any thoughts on the vscode python debugger issue I'm running into?
[01:58:36] *** Joins: ostrich (~ostrich@user/ostrich)
[01:58:57] <xaltsc> Hey, with Python type-hint, say I have a type variable X bound to some superclass CLS. Let CTNR being a generic container that binds X. If cls1 and cls2 are two subclasses of CLS, is CNTR[Union[cls1, cls2]] a valid type ?
[01:59:23] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:59:49] <habnabit_> xaltsc, i expect it would be even if there's no relationship between cls1/cls2 at all
[02:00:02] <bjs> well, if X has bound=CLS
[02:00:02] <The-Compiler> bn_work: no idea I'm afraid - only been using VS Code for a month, and not debugging much
[02:00:08] *** Quits: ostrich (~ostrich@user/ostrich) (Client Quit)
[02:00:32] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:00:59] <xaltsc> bjs: are you saying that it is ?
[02:01:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[02:01:13] <graingert> xaltsc: can you make a mypy-play.net?
[02:01:29] <bjs> xaltsc: well you sound "bound to", it was unclear what you even mean by "X bound to"
[02:01:50] <bjs> xaltsc: but as you have written it, yes it should be a valid type,  whether it's the type you wanted is unclear because it's not even clear what X is
[02:02:50] *** Gustavo6046_ is now known as Gustavo6046
[02:02:59] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[02:03:43] *** Joins: stalhatz (~stalhatz@2001:861:4900:ad50:9054:d93a:d475:bc40)
[02:04:50] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:04:53] <xaltsc> graingert: seems to type check https://mypy-play.net/?mypy=latest&python=3.10&gist=23f1a89d3c5e22c678e2b34113b11eb4
[02:05:20] <xaltsc> bjs: X is a typevar
[02:05:25] <xaltsc> with bound=CLS yes
[02:05:30] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 265 seconds)
[02:05:48] <bjs> I am surprised you're not being bit by invariance somewhere here
[02:07:23] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[02:07:25] *** Joins: pnoud (~pnoud@user/pnoud)
[02:07:37] <xaltsc> Yeah, it doesn't feel like it should work
[02:07:40] <bjs> xaltsc: imagine you had `def f(c: container[Union[cls1, cls2]])`  the invariance of X means that you must pass something that is a Union. You cannot go `f(container(cls1()))` only `f(container(maybe_cls1_or_cls2))`
[02:08:20] <bjs> maybe what you really wanted was Union[container[cls1], container[cls2]]  (or to make X covariant?  it depends what the container really is)
[02:08:39] <graingert> xaltsc: I'd probably do it like this: https://mypy-play.net/?mypy=latest&python=3.10&gist=4537e6a49b37236a1c5e64a724ea54b8&flags=strict
[02:08:48] <bjs> e.g. List[T] then T is invariant,  but Sequence[T] here T is covariant.
[02:08:54] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[02:09:04] <bjs> or well I haven't checked, but that's what it should be ^^
[02:09:41] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[02:10:01] <xaltsc> Tbh, I don't really understand what "covariant" means in python typing. Is it related in anyway to functors and category theory in any way ?
[02:10:09] <bjs> graingert: a container of a union when the type is invariant seems wrong
[02:10:21] *** Quits: NeoCore (~neocore@45.152.181.148) (Quit: Leaving)
[02:10:22] <bjs> xaltsc: it's the standard covariance in typing: https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)
[02:10:34] <graingert> bjs: hmm
[02:10:41] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:11:06] <bjs> graingert: well, odd at least
[02:11:15] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[02:11:28] <bjs> graingert: if you think `def f(x: List[Union[cls1, cls2]])` for example, this function does not accept a List[cls1]
[02:11:44] <graingert> right
[02:11:47] <graingert> that's fine though
[02:12:00] <bjs> It's fine to construct container[Union[...]] it's just often it's not what people _mean_ when they type it
[02:12:03] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Ping timeout: 258 seconds)
[02:12:14] <graingert> you can have a `List[Banana | Orange]`
[02:12:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[02:12:27] <bjs> graingert: yes
[02:12:49] <graingert> I think I've done this with Outcome Success and Failure
[02:12:54] <bjs> I take back the word "wrong" i just meant,  it's often a source of confusion for people :)
[02:13:07] <graingert> variance a source of confusion?!
[02:13:11] <bjs> I know right
[02:14:09] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[02:14:23] <bjs> But for xaltsc: generally speaking, mutable containers are generally invariant, other containers are generally covariant (wrt the type var X).  The type you constructed is perfectly fine and valid, you just need to check which behaviour you want
[02:14:42] <bjs> since the actual container here is a little lacking in detail it's hard to say which you actually want :)
[02:14:57] <bjs> and they mean different things whether you have covariant=True or not in your TypeVar.
[02:14:58] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 268 seconds)
[02:15:10] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[02:15:18] <xaltsc> Yeah, I want Union and List to commute, so I think I have to rewrite my code.
[02:15:32] *** Quits: selimcan (~selimcan@154.28.188.41) (Quit: Leaving)
[02:15:45] <bjs> xaltsc: note that List[Union[x,y]] != Union[List[x], List[y]] in either case.
[02:15:55] <bjs> xaltsc: what's important is whether List[x] is a List[Union[x,y]] or not :)
[02:16:12] <bjs> (s/List/your container type/ ofc)
[02:16:43] <xaltsc> OK, thanks
[02:17:55] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[02:18:56] <xaltsc> Another problem I ran into when trying to typing my is to create complex type variables/Types. I often want to have a TypeVar, that, given another TypeVar Y = TypeVar(, bound=cls1), is, say X = TypeVar('X', Y, cls2) (with a priori no relationship between cls1 and cls2. Is there a way to express this idea in Python ?
[02:19:37] <graingert> how would X = TypeVar('X', Y, cls2)  be useful?
[02:20:18] <graingert> you mean like X = TypeVar('X', Intersection[cls1, cls2]) ?
[02:20:41] <xaltsc> I have a container that can accept either subclasses of cls1 or cls2, but the precise subclass of cls1 given matters.
[02:21:11] <bjs> xaltsc: can't you just use X in the same places you'd use Y in that case?
[02:21:30] <bjs> graingert: Intersection would've been a nice thing to have
[02:21:49] <bjs> it'd make Protocol annotations much nicer
[02:21:49] <xaltsc> The problem is that X is not a valid typevar since Y is never bound
[02:22:12] <xaltsc> (bound to a generic or protocol here)
[02:22:16] <bjs> xaltsc: okay but my question is,  do you really need both X and Y. If X is just bound to Y, can't you just use Y (or use X) everywhere instead.
[02:22:30] *** Joins: Adoi (~Adoi@user/adoi)
[02:22:33] <bjs> I know there are cases where you can't, but as you saw earlier concrete examples help a lot
[02:22:50] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:23:19] *** Quits: Celeo (~Celeo@2603-8001-3301-2e00-3068-1ccc-7f3d-2906.res6.spectrum.com) (Quit: Leaving)
[02:24:25] *** Joins: pnoud (~pnoud@user/pnoud)
[02:24:30] <xaltsc> My code may be badly designed :D So maybe, but it's the same kind of preoccupations that I had earlier with containers. I want to specify a precise list of types that the container can accept, with a loose restriction on Y.
[02:24:51] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[02:25:57] <xaltsc> In Haskell I would have had an Either Y Z with a type constraint on Y for instance
[02:26:19] *** Joins: diek (~diek@187.36.4.113)
[02:26:41] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[02:27:00] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:27:10] *** Joins: p-i-_ (~Ohmu@node-2kp.pool-118-173.dynamic.totinternet.net)
[02:27:28] *** Joins: audiocat (~audio@2603-8081-1800-0062-7509-afad-1d88-2b2e.res6.spectrum.com)
[02:27:31] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:28:27] <graingert> Yeah GADTs and all that
[02:28:54] <graingert> Whatever would upset dabeaz the most
[02:28:55] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[02:29:11] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[02:29:40] *** Quits: p-i- (~Ohmu@node-n33.pool-118-173.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[02:29:42] *** Joins: Celeo (~Celeo@2603-8001-3301-2e00-212b-f103-c7e9-42d7.res6.spectrum.com)
[02:30:56] <xaltsc> So I guess there's no way to say that in Python right now ?
[02:31:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[02:31:38] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[02:32:36] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[02:35:30] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[02:35:41] *** Quits: Akuli (~Akuli@87-94-111-168.bb.dnainternet.fi) (Quit: Leaving)
[02:37:04] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:39:16] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:40:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[02:40:27] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) ()
[02:41:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:43:38] *** Joins: adde9708 (uid139358@id-139358.tinside.irccloud.com)
[02:44:30] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[02:44:38] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:45:03] *** Joins: rannnn8888 (~rannnn888@bzq-79-177-151-167.red.bezeqint.net)
[02:45:09] *** Joins: pikachu (~charmande@87.125.58.78)
[02:45:20] <graingert> xaltsc: intersection will need a pep
[02:45:27] *** Joins: doran (~doran@user/doran)
[02:45:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:45:42] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:47:52] *** Joins: dme86 (~dan@user/dan86)
[02:49:07] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:5169:7fb6:2f3e:d68f)
[02:49:14] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[02:49:23] <rannnn8888> hey when i use concurrent.futures ThreadPoolExecutor The possible amount of thresds depends on the amount of CPU in my cmuputer ??
[02:49:50] *** Quits: doran (~doran@user/doran) (Quit: Client closed)
[02:51:42] *** Quits: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108) (Remote host closed the connection)
[02:52:29] <graingert> rannnn8888: by default, yes
[02:52:34] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[02:52:45] <graingert> you can pass an maxworkers int in
[02:54:12] *** Joins: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net)
[02:54:26] <raxor2k> How do i deal with a function that returns me: (6,) instead of 6?
[02:54:31] <raxor2k> when calling from DB
[02:55:13] <graingert> raxor2k: sqlalchemy has .scalar()
[02:55:25] <phy1729> Unpack the tuple or use [0]. I presume you're selecting a single column
[02:56:03] <raxor2k> phy1729: yes i am selecting a single column
[02:56:07] <raxor2k> graingert: i will try that now
[02:56:14] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[02:56:17] *** Quits: {HD} (~{HD}@191.96.185.62) (Ping timeout: 265 seconds)
[02:56:20] <graingert> also sqlalchemy results also have attributes
[02:56:26] <graingert> so you can do .column
[02:56:47] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[02:58:30] <raxor2k> graingert: .scalar() or .column?
[02:58:36] <graingert> both work
[02:58:36] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:58:41] <graingert> in the (6,) case
[02:59:02] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:59:07] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[02:59:19] <rannnn8888> graingert yes i use now 100 with cpu 1 if i buy server with more cpu i can run more from 100 ? (if i try more from 100 the server down 100 works perfect)
[02:59:34] <graingert> ?
[02:59:58] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[03:00:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:00:53] <graingert> rannnn8888: they capped in in recent python versions
[03:01:22] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[03:01:26] *** Joins: driib9 (~driib@185.195.233.169)
[03:01:50] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Ping timeout: 268 seconds)
[03:02:02] *** Joins: {HD} (~{HD}@102.165.16.42)
[03:02:11] <rannnn8888> graingert what u mean i dont can run more from 100 becouse it capped in the python ?
[03:02:26] <rannnn8888> And not related to the server
[03:02:26] <graingert> yes
[03:02:40] <graingert> no
[03:02:53] <rannnn8888> Cool I did not know and there is a way around the limit?
[03:03:11] <graingert> 23:22:45 <graingert> you can pass an maxworkers int in
[03:03:56] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[03:04:05] <graingert> if you've got 100cpus you probably want dask
[03:05:12] <rannnn8888> 23:22:45 <graingert> you can pass an maxworkers int in sec i think i not understend
[03:05:23] <rannnn8888> u said the python limit this and not the cpu
[03:05:23] *** Quits: driib (~driib@185.195.233.168) (Ping timeout: 252 seconds)
[03:05:23] *** driib9 is now known as driib
[03:05:24] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[03:05:31] <rannnn8888> limit this to 100 max
[03:05:32] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Quit: The Lounge - https://thelounge.chat)
[03:05:38] <graingert> no
[03:05:41] *** Quits: noteness (noteness@user/noteness) (Read error: Connection reset by peer)
[03:05:41] *** Quits: user3456 (user3456@user/user3456) (Read error: Connection reset by peer)
[03:05:48] <rannnn8888> so what limit this ?
[03:06:17] <graingert> rannnn8888: https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor
[03:06:50] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[03:06:52] <graingert> Changed in version 3.8: Default value of max_workers is changed to min(32, os.cpu_count() + 4). This default value preserves at least 5 workers for I/O bound tasks. It utilizes at most 32 CPU cores for CPU bound tasks which release the GIL. And it avoids using very large resources implicitly on many-core machines.
[03:07:14] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:07:37] *** Joins: user3456 (~user3456@user/user3456)
[03:07:40] *** Joins: noteness (noteness@user/noteness)
[03:08:45] *** Quits: greedom (~greedom@2001:16b8:2eaf:f00:d9fd:24e4:94e9:32e0) (Remote host closed the connection)
[03:08:57] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[03:08:59] <rannnn8888> graingert yep i read it before but not real understend this , what happen if i try run this with max 200 with 2 cpu its not work :X  ?
[03:09:09] <graingert> ?
[03:09:16] <graingert> what is "it"?
[03:09:43] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[03:10:41] *** Quits: user3456 (~user3456@user/user3456) (Read error: Connection reset by peer)
[03:10:41] *** Quits: noteness (noteness@user/noteness) (Read error: Connection reset by peer)
[03:10:44] *** Joins: greedom (~greedom@2001:16b8:2eaf:f00:d9fd:24e4:94e9:32e0)
[03:10:58] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:11:00] <rannnn8888> scraps code use concurrent.futures.ThreadPoolExecutor(max_workers=200) as executor:
[03:11:35] <graingert> scraps?
[03:12:13] <rannnn8888> scraping use request
[03:12:32] <graingert> what's that?
[03:12:38] *** Joins: user3456 (user3456@user/user3456)
[03:12:46] *** Joins: noteness (noteness@user/noteness)
[03:13:10] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:13:22] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:13:26] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[03:13:54] *** Joins: Vonter (~Vonter@user/vonter)
[03:15:06] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[03:16:35] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:17:15] *** Joins: diek (~diek@187.36.4.113)
[03:18:29] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[03:19:02] *** Joins: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912)
[03:19:34] *** Joins: skapata (~Skapata@user/skapata)
[03:21:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:21:25] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[03:23:14] <graingert> rannnn8888: ?
[03:23:19] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[03:25:25] *** Joins: pnoud (~pnoud@user/pnoud)
[03:26:45] *** Joins: niv (~niv@2a02:810a:1140:6454:b1e7:4cbe:6edb:8a14)
[03:27:00] *** Joins: davidm777 (~davidm777@97-122-162-183.hlrn.qwest.net)
[03:27:17] *** Joins: ops (~ops@user/echelon)
[03:27:18] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[03:27:28] *** Quits: davidm777 (~davidm777@97-122-162-183.hlrn.qwest.net) (Client Quit)
[03:28:03] <raxor2k> graingert: how can i modify multiple lines that has "NULL" and insert to them? The current code only checks the first row..? https://bpa.st/FPEQ
[03:29:06] *** Quits: diek (~diek@2804:14d:7681:82bd:7183:d2c9:d4f8:912) (Remote host closed the connection)
[03:29:35] *** Joins: diek (~diek@187.36.4.113)
[03:30:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[03:31:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:31:17] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[03:31:26] *** Joins: diek (~diek@187.36.4.113)
[03:31:53] *** Quits: niv (~niv@2a02:810a:1140:6454:b1e7:4cbe:6edb:8a14) (Quit: Textual IRC Client: www.textualapp.com)
[03:32:46] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:32:51] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:32:59] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[03:33:14] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[03:34:16] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:35:07] *** Joins: lidless (~lidless@user/jabberwock)
[03:35:18] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[03:36:03] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[03:36:21] *** Quits: LordVan_ (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[03:36:26] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com) (Read error: Connection reset by peer)
[03:36:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[03:36:50] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:37:32] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[03:38:10] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[03:38:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[03:39:17] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:39:42] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[03:40:29] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[03:41:26] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:41:32] *** Quits: pikachu (~charmande@87.125.58.78) (Quit: Client closed)
[03:41:41] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:41:47] *** Joins: Sir_Andrei (~andrei@r179-28-238-58.dialup.mobile.ancel.net.uy)
[03:41:50] <Sir_Andrei> Ppl
[03:42:11] <Sir_Andrei> I want a decorator that, when I call a function a(), execute its decorator before calling the function I called.
[03:42:22] <Sir_Andrei> It is like, calling transparently the function, but executing the decorator in the process.
[03:42:41] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:42:45] *** Joins: finsternis (~X@23.226.237.192)
[03:42:52] *** Joins: akaWolf (~akaWolf@akawolf.org)
[03:43:11] <nedbat> Sir_Andrei: that sounds like what many decorators do
[03:43:25] <raxor2k> graingert: i solved it. nvm
[03:43:48] <graingert> Sir_Andrei: which process?
[03:45:21] *** Joins: justinf210 (~justinf21@192-230-162-143.3rivers.net)
[03:45:25] <nedbat> Sir_Andrei: like this? https://gist.github.com/nedbat/febce1a7d3fc3844502addd6e89c29ea
[03:45:52] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[03:45:52] *** Wulf4 is now known as Wulf
[03:46:48] *** Joins: rom16384 (~Adium@2001:818:e755:fa00:2c07:acd0:6ae0:1e03)
[03:46:52] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[03:46:53] *** Quits: p-i-_ (~Ohmu@node-2kp.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[03:47:12] *** Joins: p-i- (~Ohmu@node-hbm.pool-118-173.dynamic.totinternet.net)
[03:48:53] *** Joins: niv (~niv@limbo.cypherpunks.io)
[03:48:58] *** Quits: ntdll_ (~ntdll@user/ntdll) (Ping timeout: 265 seconds)
[03:50:13] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:51:35] *** Joins: ras_manny (~ras_manny@196.24.141.56)
[03:53:02] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:55:25] *** Quits: zeenk (~zeenk@82.76.113.130) (Quit: Konversation terminated!)
[03:55:38] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[03:56:31] *** Quits: bilegeek (~bilegeek@2600:1008:b017:63a6:c26d:d119:faaa:a6d7) (Quit: Leaving)
[03:56:44] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 252 seconds)
[03:57:11] *** Quits: justinf210 (~justinf21@192-230-162-143.3rivers.net) (Ping timeout: 265 seconds)
[03:58:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[03:58:16] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 244 seconds)
[04:03:32] *** Joins: trace (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[04:03:42] *** Joins: davidm777 (~davidm777@97-122-162-183.hlrn.qwest.net)
[04:04:37] *** Quits: davidm777 (~davidm777@97-122-162-183.hlrn.qwest.net) (Client Quit)
[04:04:48] *** Quits: davidlowryduda (~davidlowr@73.61.8.252) (Ping timeout: 252 seconds)
[04:05:46] <Sir_Andrei> nedbat. Thx man!
[04:05:48] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[04:05:58] *** Joins: Adoi (~Adoi@user/adoi)
[04:06:28] <Sir_Andrei> You made it return a Callable. I rarely use decorators so I almost don't have experience with them. Thanks for your time @nedbat
[04:06:41] <Sir_Andrei> It works for what I want.
[04:06:44] *** Joins: davidlowryduda (~davidlowr@73.61.8.202)
[04:06:48] <nedbat> Sir_Andrei: great :)
[04:07:06] <Adoi> hello, did add() by any chance precede append() in earlier python versions?
[04:07:13] <Adoi> for lists, I mean
[04:07:33] *** Quits: rom16384 (~Adium@2001:818:e755:fa00:2c07:acd0:6ae0:1e03) (Quit: Leaving.)
[04:08:22] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[04:09:48] <nedbat> Adoi: i don't think so, why do you ask?
[04:10:18] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[04:10:32] *** Joins: candy (~tvrtko@89-172-19-50.adsl.net.t-com.hr)
[04:13:08] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[04:14:05] *** Quits: tvrtko (~tvrtko@89-172-12-202.adsl.net.t-com.hr) (Ping timeout: 272 seconds)
[04:14:13] <Adoi> nedbat, a website uses "add()" and the code on the page is shown to successfully give the desired output. however, in my interpreter, I get the error that the list does not take add(), as expected. I thought maybe the authoring developer used an earlier version.
[04:14:34] <nedbat> Adoi: are you sure the site isn't using sets?
[04:17:39] <Adoi> nedbat, this is the place in code where add() comes in ; https://www.pastebin.cz/raw/B55fk2m ...currently it works with add(), too...I dont know what jupyter is doing.
[04:17:57] <Adoi> graph_dict is a dictionary
[04:18:38] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[04:19:03] <nedbat> Adoi: i'd like to see where else graph_dict is being written into .
[04:19:10] <Adoi> sure
[04:19:14] <nedbat> Adoi: are you sure that last line is ever executed?
[04:19:38] <Adoi> nedbat, it is redundant, isnt it?
[04:19:59] <nedbat> Adoi: it doesn't look redundant, but it might be if there are other places creating keys
[04:20:06] <Adoi> at least that was what I thought
[04:20:19] <Adoi> I thought it did the same thing as the if part
[04:21:13] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:22:06] *** Joins: jazzy (~jaziz@2600:380:854e:22c1:c558:7a2d:a4b2:cfa6)
[04:22:22] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[04:22:32] *** Quits: greedom (~greedom@2001:16b8:2eaf:f00:d9fd:24e4:94e9:32e0) (Remote host closed the connection)
[04:22:33] <Adoi> ok, not exactly
[04:22:49] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[04:23:39] <Adoi> nedbat, this is the whole of it; https://www.pastebin.cz/raw/zEA2Zpa
[04:23:55] *** Quits: Strom (strom@fedora/strom) ()
[04:24:10] *** tf_ is now known as tf
[04:24:56] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[04:25:18] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:25:30] *** Joins: Strom (strom@fedora/strom)
[04:26:26] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 252 seconds)
[04:27:47] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:28:04] *** Joins: mickey (~user@user/mickey)
[04:28:30] <nedbat> Adoi: maybe the .add line never runs.
[04:28:40] <raxor2k> is it dangerous to go into a existing module/library and adjust/change some code?
[04:28:45] <nedbat> Adoi: do you have a way to run this code?  Try adding 1/0  after the .add line
[04:29:35] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[04:30:01] <Adoi> nedbat, yes, the code works, without modifying it
[04:30:16] <nedbat> Adoi: ok, add 1/0 to see if the line is even running.
[04:31:05] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:31:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:33:24] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[04:33:34] <Adoi> nedbat, if I got you correctly, adding 1/0 under add gives this; "ZeroDivisionError: division by zero"
[04:34:13] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[04:34:26] <nedbat> Adoi: do you mind pastebinning the code with the 1/0 in it
[04:34:39] <Adoi> sure
[04:34:42] <fructose> raxor2k: If you're asking that question, that makes it more dangerous
[04:35:12] <nedbat> Adoi: btw, i think you don't need your __next__ method at all
[04:35:20] <Adoi> nedbat, here it is; https://www.pastebin.cz/raw/7sYoFNw
[04:35:34] *** Quits: waxfire2 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:35:48] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[04:35:54] *** Joins: CombatVet (~c4@user/combatvet)
[04:36:11] <nedbat> Adoi: ok, change that new line to:   print(repr(self._graph_dict[x]))    and show us what you get
[04:36:34] *** Joins: skapata (~Skapata@user/skapata)
[04:36:52] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[04:37:08] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[04:37:15] *** Joins: death916 (~death916@user/death916)
[04:37:46] <Adoi> nedbat, I get no output
[04:38:23] <nedbat> Adoi: are you sure you are running that code? If the 1/0 caused an exception, then the print should print something
[04:38:27] *** Joins: iflema (~ian@user/iflema)
[04:39:40] *** Joins: wyclif (~wyclif@user/wyclif)
[04:40:48] *** Quits: lidless (~lidless@user/jabberwock) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:40:48] *** Quits: Sir_Andrei (~andrei@r179-28-238-58.dialup.mobile.ancel.net.uy) (Read error: Connection reset by peer)
[04:41:08] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[04:41:13] *** Joins: lidless (~lidless@user/jabberwock)
[04:41:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:42:19] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 258 seconds)
[04:42:33] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[04:42:56] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[04:43:33] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 265 seconds)
[04:43:49] <Adoi> nedbat, I ran the code in the terminal, and there are no errors whether with add() or otherwise.
[04:44:16] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:44:19] <nedbat> Adoi: where did the print(repr(self._graph_dict[x]))  go?
[04:45:46] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[04:47:38] <Adoi> I place it inside if block, and it gives "TabError: inconsistent use of tabs and spaces in indentation"
[04:47:56] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[04:47:57] <Adoi> while everything is properly aligned
[04:48:00] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[04:48:04] *** Joins: dme86 (~dan@user/dan86)
[04:48:33] <Adoi> but as I said, the code works and it makes me wonder how it happens when dict does not take add()
[04:48:58] *** Joins: hexa- (~hexa-@juno.lossy.network)
[04:50:50] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 265 seconds)
[04:52:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[04:54:13] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[04:54:30] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[04:55:14] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:55:55] <Adoi> this is where I inserted the print command; https://www.pastebin.cz/raw/kvhHvbG
[04:58:30] <nedbat> Adoi: you've mixed tabs and spaces.  Fix that. I don't know what is running when.
[05:00:28] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[05:03:11] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[05:03:44] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[05:05:42] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[05:07:30] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[05:09:32] <Adoi> nedbat, the tabs are fixed, and I inserted the print to the same place as it appears in the paste. the code works properly, with no errors
[05:09:41] *** Quits: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:09:48] <nedbat> Adoi: and no printing? That makes no sense.
[05:11:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[05:11:35] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[05:11:58] *** Quits: kmh (~kmh@p200300df5f1f6100ec162bd270d20611.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:12:18] <maxtim> how can I iterate over two lists of unequal length to create a dict?
[05:12:32] <Adoi> nedbat, only the expected output is printed. same output when 1/0 is inserted
[05:12:46] <nedbat> maxtim: what dict do you want from [1, 2, 3], [10, 20] ?
[05:13:03] <nedbat> Adoi: but when 1/0 is in there, you got an exception. Now I wonder if it was in the right place, with the tabs and spaces
[05:14:17] <maxtim> nedbat, in my mind, it looks more like {'state': ['file1', 'file2'], 'state2': ['file3', 'file4']}
[05:14:44] <nedbat> maxtim: you said two lists?
[05:15:16] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[05:15:46] <maxtim> oh yeah. I have two lists: ['state1', 'state2'] ['files'](many)
[05:17:42] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[05:17:59] <Adoi> nedbat, the above "ZeroDivisionError: division by zero" comes when I run the code in jupyter. when I run it on terminal, no errors.
[05:19:50] <nedbat> Adoi: then you may not be running the same code.
[05:20:10] <nedbat> put in the print statement again, and run it in jupyter
[05:20:28] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:21:40] <Adoi> nedbat, I already did, really no errors
[05:22:18] *** Quits: HumanBird (~HumanBird@2603-8001-7003-5966-adcd-7d3d-1cf5-adab.res6.spectrum.com) (Quit: Client closed)
[05:22:53] <nedbat> Adoi: it will remain a mystery
[05:22:57] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[05:23:07] <nedbat> maxtim: i don't know how you want to combine the two lists
[05:24:04] <maxtim> nedbat, I actually figured it out...
[05:25:25] <Adoi> nedbat, the mystery how add() works with dict ?
[05:25:26] *** Joins: srhm (~ascii@user/srhm)
[05:26:14] <nedbat> Adoi: the mystery is how .add works with a list.
[05:26:32] *** Joins: pnoud (~pnoud@user/pnoud)
[05:26:52] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:26:56] *** Joins: ATAD_ (~ATAD@user/atad)
[05:27:33] <Adoi> nedbat, but "graph_dict" is a dictionary?
[05:27:56] <nedbat> Adoi: yes, but it's graph_dict[x].add, not graph_dict.add
[05:28:33] <nedbat> Adoi: i still think that .add line is never running
[05:28:36] *** Quits: emerent (~quassel@p200300cd5703bb37ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:28:49] *** Joins: emerent (~quassel@p200300cd5703bbd5ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:28:49] <maxtim> i actually ended up doing a for loop with a list comprehension so : for x in range(len(states)): mydict[states[x]]=[blah blah]
[05:29:00] *** Parts: ATAD_ (~ATAD@user/atad) ()
[05:29:18] <Adoi> nedbat, but the part before .add is the key of the dictionary?
[05:29:45] <nedbat> Adoi: .add is being used on a value from the dictionary
[05:29:57] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.2)
[05:30:05] <nedbat> Adoi: graph_dict is a dictionary.  graph_dict[x] is a list
[05:31:16] <nedbat> Adoi: try this:  change "add" in that line to "xyzzy"
[05:31:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[05:31:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:56] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[05:35:48] *** Joins: vlm (~vlm@user/vlm)
[05:35:59] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[05:37:58] *** Quits: trace (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Quit: Leaving)
[05:38:28] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:38:45] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:38:49] *** Joins: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net)
[05:39:19] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:40:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:40:23] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:40:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:42:32] *** Quits: adde9708 (uid139358@id-139358.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:42:44] *** Joins: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[05:44:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[05:45:19] <Adoi> nedbat, it is a list because of this earlier line; "self._graph_dict[vertex] = []" ?
[05:45:27] <nedbat> Adoi: yes
[05:46:00] *** Quits: ras_manny (~ras_manny@196.24.141.56) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:46:17] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[05:46:25] <nedbat> Adoi: change "add" to "xyzzy"
[05:46:32] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:46:34] <nedbat> see what happens
[05:47:09] *** Quits: rannnn8888 (~rannnn888@bzq-79-177-151-167.red.bezeqint.net) (Quit: Client closed)
[05:47:12] <Adoi> nedbat, this does; "AttributeError: 'set' object has no attribute 'xyzzy'"
[05:47:19] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Read error: Connection reset by peer)
[05:47:30] <nedbat> Adoi: aha! it's a set, not a list.  I don't know how it because a set.
[05:47:38] <nedbat> *became a set
[05:47:51] <Adoi> https://www.pastebin.cz/raw/zN9qK2P
[05:48:34] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[05:48:51] <nedbat> Adoi: oh it's because of how you initialized it as "g =  ...."
[05:49:06] <nedbat> Adoi: btw, if you use a pastebin with line numbers, we can talk about the code more easily
[05:49:20] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:49:32] <nedbat> Adoi: you have .add on one line, and  = [y]  on another line.  Those two lines are incompatible.
[05:50:44] *** Quits: niv (~niv@limbo.cypherpunks.io) (Ping timeout: 265 seconds)
[05:51:09] <Adoi> nedbat are you referring to those inside the if and else of the same block?
[05:51:14] <nedbat> Adoi: yes
[05:51:29] <nedbat> Adoi: if you use https://bpa.st/+python, we'll have line numbers
[05:52:46] <Adoi> sorry, sure, I changed it, found this one; https://www.appdevtools.com/pastebin
[05:52:49] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[05:52:56] *** Quits: cdown_ (~cdown@89.32.122.5) (Quit: https://chrisdown.name)
[05:54:10] *** Quits: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[05:54:36] *** Quits: lidless (~lidless@user/jabberwock) (Ping timeout: 265 seconds)
[05:57:43] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:59:42] *** Joins: samian (~sami@174.27.107.153)
[05:59:43] <samian> hello
[06:00:35] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:00:36] <samian> I'm commenting my code. Does this make sense? https://bpa.st/XA5A
[06:00:48] <samian> specifically the part "when argument copied into m is a"
[06:01:08] <samian> I suck at cs language
[06:01:15] *** Joins: c10l (~c10l@89.34.167.207)
[06:01:28] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[06:02:17] *** Joins: PdimH (~pdimh@user/pdimh)
[06:02:41] <fruitypunk> how can you call that plain english
[06:03:04] <samian> by lying to myself lol
[06:03:23] <fruitypunk> wtf is it doing?
[06:03:56] <samian> fruitypunk, there's a time perspective. I first wrote "explained in plain english", and then began writing the details. My goal is to make the details plain english.
[06:04:02] <nedbat> samian: you should use docstrings, not comments.
[06:04:03] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[06:04:14] <samian> fruitypunk,  I'm not finished writing up the details!
[06:04:21] <samian> nedbat, good reminder!
[06:04:22] <fruitypunk> nuuu
[06:04:27] <fruitypunk> no more details
[06:04:48] <nedbat> samian: there are standard formats. if you use them, it's easier for people to understand.
[06:04:49] <fruitypunk> One line that tells what it's doing. not a reminder how to implement is
[06:04:51] <fruitypunk> *it
[06:05:08] <fruitypunk> by definition i'm not interested in how its implemented
[06:05:10] <samian> nedbat, understood. I'll use docstrings
[06:05:44] <fruitypunk> sqr(x) # this function returns the square of x
[06:05:45] <samian> my question is about words used when talking about arguments and corresponding parameters
[06:05:52] <cul8r> samian: it makes sense
[06:07:16] <samian> maybe the word is simply "corresponding" ?  "When the argument corresponding to parameter m is a list, m becomes list."
[06:07:34] <samian> thanks cul8r
[06:07:35] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[06:07:48] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[06:08:54] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[06:08:58] *** Joins: pete443_ (~pete@user/pete443)
[06:09:12] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 268 seconds)
[06:09:25] <cul8r> samian: you could leave it at `when argument m is a single value` and `when argument m is a list` if you want to "simplify" it, but as its clear as it currently is.
[06:09:52] <maxtim> can i use re to return an entire line from a file?
[06:10:08] <maxtim> assign it to a variable*
[06:10:59] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[06:11:42] <samian> I'm comparing "argument copied into" and "value passed into"
[06:11:45] *** Joins: diek (~diek@187.36.4.113)
[06:11:47] <samian> isn't one more correct than the other?
[06:11:56] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:12:08] <samian> or "argument passed into" ?
[06:12:23] <samian> argument/value,   copied vs passed
[06:12:29] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[06:12:50] <samian> those are the words I'm confused about which would be a better choice
[06:13:01] <very_sneaky> samian: ":param ln: A list containing the number of rows in each table, ordered by index. Example: ..." would be clearer to me
[06:13:34] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[06:13:35] <very_sneaky> samian: i like ordering my docstrings this way: https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html
[06:14:28] <samian> cool I'm looking at the link now
[06:14:44] *** Joins: diek (~diek@187.36.4.113)
[06:15:42] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[06:16:37] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[06:17:02] <cul8r> samian: probably argument because value implies a single element. but this is getting pretty deep into definitions and grammar. and probably better to use "passed"
[06:19:27] <Adoi> I made a new paste; https://bpa.st/4VQQ  really much nicer to read :)
[06:21:47] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[06:22:17] *** Quits: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net) ()
[06:23:30] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[06:23:59] <very_sneaky> samian: I would use the phrase "argument provided is of type :class:`float`" or "argument provided is of type :class:`list`. I would also make some comment about whether you expect it to be modified by the function if it's a mutable object, i.e. a list
[06:24:16] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[06:24:56] <very_sneaky> pretty sure the "single value" will be immutable, and the list will be mutable, but that probably depends on what specific types they are
[06:27:01] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[06:27:21] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[06:30:23] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[06:31:47] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[06:34:30] <very_sneaky> actually, this isn't something i've had a lot of experience with in python - is it possible to force a mutable type to be immutable as a function argument? i.e., pbv as opposed to pbr? obviously could call the func as `{ x = [1,2,3]; f(list(x)); }` making a copy of `x`, but this requires the user to know what they want, rather than the function providing guarantees about what it will and won't do
[06:34:31] <very_sneaky> with otherwise mutable input args
[06:34:51] <very_sneaky> s/had/haven't had/
[06:36:14] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[06:38:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:41:38] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[06:41:44] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Ping timeout: 252 seconds)
[06:43:27] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[06:44:21] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-f048-d07a-b5df-aadb.res6.spectrum.com)
[06:44:51] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[06:47:54] *** Joins: diek (~diek@187.36.4.113)
[06:47:55] *** Joins: lidless (~lidless@user/jabberwock)
[06:47:58] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-f048-d07a-b5df-aadb.res6.spectrum.com) (Remote host closed the connection)
[06:48:15] *** Joins: dme86 (~dan@user/dan86)
[06:48:17] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[06:49:16] *** Joins: veek (~veek@117.192.19.102)
[06:50:02] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:53:02] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[06:58:22] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[06:58:45] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 272 seconds)
[06:59:02] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Client Quit)
[07:00:18] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Remote host closed the connection)
[07:01:41] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[07:02:46] *** Joins: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net)
[07:05:51] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:5169:7fb6:2f3e:d68f) (Read error: Connection reset by peer)
[07:06:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[07:06:21] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[07:06:36] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[07:06:39] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[07:06:39] *** Joins: gggp (~textual@60.10.194.47)
[07:06:50] *** Joins: Thanatos (~Thanatos@157.230.239.98)
[07:07:12] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[07:07:32] <Adoi> hello, I suppose nedbat is no more online. in line 42 of this code; https://bpa.st/4VQQ , can you please help me know how "self._graph_dict[x]" is regarded as a set?
[07:08:20] <habnabit_> Adoi, you can just ask the channel
[07:08:28] <habnabit_> (and should)
[07:09:08] <habnabit_> Adoi, i'm not sure what your question is, though. what do you mean by 'regarded as a set'?
[07:09:35] <Adoi> habnabit_ I have just been talking to nedbat for a while about it, hence was my mention
[07:10:11] <Adoi> habnabit_  it is treated as a set as it takes "add()"
[07:10:22] <Adoi> and I dont figure how it is a set
[07:10:34] <Adoi> since graph.dict is a dict
[07:11:01] <habnabit_> Adoi, dicts map from keys to values. the value in this case is a set. it doesn't treat the dict as a set; it uses the set stored as a value for that key as a set
[07:12:53] <Adoi> yes, I understand the dict key-value pair. and I dont say dict is treated as a set. "graph.dict[x] is not a dict, it is an arbitrary value in the dict, therefore I am asking how it counts as a set
[07:13:21] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 258 seconds)
[07:13:34] <habnabit_> Adoi, it 'counts as a set' because indexing the dict gives you the value, which is a set. a set counts as a set
[07:14:06] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[07:15:31] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[07:17:16] *** Joins: icy (~icy@user/icy)
[07:18:09] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[07:18:56] <Adoi> when I check the type of graph.dict[x], it doesnt return "set"
[07:19:36] <habnabit_> Adoi, oh?
[07:19:42] *** Joins: ppw (~ppw@user/ppw)
[07:19:47] <ppw> heya
[07:20:01] <jabberwock> \o
[07:20:19] *** Quits: Thanatos (~Thanatos@157.230.239.98) (Remote host closed the connection)
[07:21:12] <ppw> quick question: can I speed up python's dict() if I take advantage of the fact that all of the keys and values are small integers?
[07:21:34] <habnabit_> ppw, not really
[07:22:18] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[07:22:32] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[07:22:56] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[07:23:03] <Adoi> ok, can someone explain to me perhaps?
[07:23:53] <habnabit_> Adoi, what is it if not set?
[07:24:10] <Adoi> dict_keys or similar
[07:24:21] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[07:24:24] <Adoi> I checked it an hour ago or earlier, therefore cant remember exactly
[07:24:34] <habnabit_> Adoi, pastebin the code that shows that
[07:24:40] <habnabit_> Adoi, something we can run to see the same
[07:24:43] *** Joins: aquijoule_ (~richbridg@213-225-10-42.nat.highway.a1.net)
[07:25:24] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[07:25:38] <ali1234> Adoi: did you write this code or is it from that webpage you were talking about earlier?
[07:25:52] <ali1234> because it looks like it is bugged to me
[07:26:16] <ali1234> line 42 should say append, not add, because the things in the dict are lists, not sets
[07:26:40] <ali1234> alternatively line 44 should say ... = set(y)
[07:26:42] <habnabit_> ali1234, they seem to be sets or lists depending on the branch taken
[07:26:47] <ali1234> right
[07:26:51] <Adoi> habnabit_, sorry, as I said it has been a while and I tried a lot of things, so I erred in recalling the output..it shows "set", but it is not clear to me why it is a set
[07:27:09] <Adoi> ali1234, it is from the web.
[07:27:18] *** Quits: richbridger (~richbridg@213-225-3-25.nat.highway.a1.net) (Ping timeout: 264 seconds)
[07:27:21] <habnabit_> Adoi, you can't guess/summarize output and get useful help :)  if you want help, you need to show us what you _actually_ did, not what you think you remember you did
[07:27:22] *** Joins: pnoud (~pnoud@user/pnoud)
[07:27:31] <habnabit_> ali1234, {y}. set(y) would be {*y}
[07:28:03] <Adoi> you did not ask me to show it first, and when you asked for it, I corrected my comment
[07:28:18] <Adoi> and we are all people, we may err
[07:28:19] <ali1234> this code smells funny
[07:28:38] <habnabit_> Adoi, yes, exactly. this is why i asked you to show me. i don't trust humans to summarize errors
[07:29:10] <Adoi> are we in a loop?
[07:29:29] <habnabit_> Adoi, we will be until you show us the code that produce this output you're talking about ;)
[07:29:46] *** Quits: Celeo (~Celeo@2603-8001-3301-2e00-212b-f103-c7e9-42d7.res6.spectrum.com) (Changing host)
[07:29:46] *** Joins: Celeo (~Celeo@user/celeo)
[07:30:01] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:30:02] <Paul> Adoi, You can use Pastebin or https://bpa.st/+python
[07:30:36] <Adoi> habnabit, if you took some time to read my posts above, instead of focusing on why I mentioned nedbat, you would likely have seen that I pasted the linnk twice
[07:30:49] <habnabit_> Adoi, huh? i didn't say anything about nedbat
[07:30:55] <Adoi> oh god
[07:31:15] <ali1234> so what actually do you mean by "regarded as a set"?
[07:31:21] <Adoi> ali1234, I had the same suspicion for a while, but apparently the set thing is correct
[07:31:31] <ali1234> what set thing?
[07:31:42] <ali1234> there's no clue that the values are supposed to be sets other than the use of add?
[07:31:44] <Adoi> add is correct because the part before the dot is a set
[07:31:48] <habnabit_> Adoi, you posted some code, but it doesn't print the type of anything, so i don't know what you're talking about
[07:31:55] <ali1234> is that what you're asking? why did they use add there when the values aren't actually sets?
[07:31:58] <habnabit_> Adoi, where is the code that prints the wrong type?
[07:32:01] <Adoi> ali1234, I agree, and I am trying to get that clue
[07:32:04] *** Joins: Fiji (~Fiji@user/fiji)
[07:32:26] <Repiphany> {"a"} is a set but {} is a dict
[07:32:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:32:42] <Repiphany> Your code doesn't make that distinction in lines 74-80 defining g
[07:32:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[07:32:59] <Repiphany> g["f"] is a dict when it should be an empty set
[07:33:02] <ali1234> ah hah
[07:33:08] <ali1234> yes, you found it
[07:33:26] <Repiphany> Also line 10
[07:33:38] <Repiphany> Wait, that should be a dict I guess
[07:33:47] <ali1234> yeah line 10 is okay, cos its empty
[07:34:21] <ali1234> Adoi: so the problem here is that when the vertex already exists in the pre-defined data, the values are sets as Repiphany said. but when a new vertex is added, it's data is a list (line 44)
[07:34:42] <ali1234> so you end up with some of them being sets, and some lists
[07:34:52] <ali1234> that's a problem because add only works on sets
[07:35:03] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[07:35:13] <ali1234> now, whether you want a set or a list here depends on whether your graph is allowed to have duplicate connections between vertices
[07:36:05] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[07:36:15] <ali1234> but you have to pick one
[07:36:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:36:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:36:28] *** jmcantrell is now known as Guest5404
[07:36:28] *** Quits: Guest5404 (~weechat@user/jmcantrell) (Killed (cadmium.libera.chat (Nickname regained by services)))
[07:36:28] *** __jmcantrell__ is now known as jmcantrell
[07:36:47] <Adoi> yes, it allows duplicates
[07:37:17] <ali1234> then you should use lists. change line 42 to "append" and fix the definition of g
[07:37:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[07:37:38] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[07:38:03] <ali1234> heh. best part is line 79. that's actually a dict!
[07:38:04] <Adoi> "{"a"} is a set"...it is a list, no?
[07:38:09] <habnabit_> no
[07:38:11] <ali1234> no, that is a set
[07:38:18] <ali1234> a list would be ["a"]
[07:38:21] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[07:38:31] <Adoi> ok maybe I see the curly bracket as the square one
[07:38:45] <Adoi> due to my irc fonts
[07:38:54] <ali1234> i dont like using {} to define sets at all, it's too confusing with dicts... case in point: this code
[07:39:25] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Client Quit)
[07:39:39] <habnabit_> meh writing an empty set isn't so bad. {*()}
[07:39:44] <Adoi> but why should g{"f"} be empty, I must enter some dict to run the code?
[07:40:02] <ali1234> g{"f"} doesn't mean anything. you mean g['f']?
[07:40:19] <Adoi> yes, I mean the dict between lines 74-80
[07:40:28] <ali1234> in which case, in the example, that vertex just doesn't connect to any other
[07:40:45] <ali1234> but it is incorrectly written, because {} is neither set nor list, it's a dict
[07:40:55] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:41:30] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[07:41:53] <Adoi> my question is still why dict values are sets in line 42. why is it that "when the vertex already exists in the pre-defined data, the values are sets" ?
[07:42:07] <ali1234> Adoi: because dict values can be *anything*
[07:42:20] <ali1234> they are whatever you set them to
[07:42:53] <ali1234> and the definition of g at line 74 causes them to be sets, except for "f" which is a dict
[07:43:19] <Adoi> to me everything in g is keys and values
[07:43:37] <ali1234> a set is a value
[07:43:52] <ali1234> the keys are all strings
[07:43:55] <Adoi> how is f a dict? is it not a key-value pair in dict g ?
[07:44:03] <ali1234> there are rules about what can be a key, but no rules about what can be a value
[07:44:16] *** Joins: r3m (~launch@user/r3m)
[07:44:19] <ali1234> the key "f" has value {}. {} is a dict
[07:44:20] <Reinhilde> so I have a gtk application that hangs any time I do anything in it, sometimes for minutes or more
[07:44:28] <cul8r> Adoi: the type of {"d"}, which is the value of key "a" in g, is set.
[07:44:51] <Repiphany> g = {'a': {}}; type(g) == dict, type('a') == str, type(g['a']) == dict
[07:44:55] <Reinhilde> what are some general principles I could apply to reduce this hanging?
[07:45:48] <Adoi> oh...just because the values in g are literally "sets", they are regarded as such?
[07:46:08] <ali1234> what do you mean by "regarded as"? regarded by whom?
[07:46:13] <habnabit_> Adoi, indexing a dict gives you the value itself. it isn't 'regarded' as anything. _is is the object_
[07:46:19] <Adoi> if I used lists as values in g, then I would have to use append in line 42, then?
[07:46:20] <habnabit_> Adoi, indexing a dict gives you the value itself. it isn't 'regarded' as anything. _it is the object_
[07:46:29] <ali1234> the developer of the code? in which case, yes, but the developer has made a few mistakes so you shouldn't just trust them
[07:46:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[07:46:45] <ali1234> Adoi: if you used lists... yes
[07:46:58] <Adoi> I am talking natural speak. when I say regarded, I mean regarded by the terminal, interpreter, jupyter, whatever
[07:47:09] <habnabit_> Adoi, just say 'is'
[07:47:12] <habnabit_> Adoi, it is a set
[07:48:01] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:48:07] <ali1234> Adoi: python has something called introspection. the interpreter etc actually knows what type everything is. it's not like in say C where you have to say up front what your vector/list is going to hold
[07:49:47] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:50:25] <Adoi> ok, honestly I didnt pay attention to the particular fact that the values themselves in the dict are sets, and therefore the line 42. I tended to think of it as something to attribute to "self._graph_dict[x]"
[07:50:55] <Adoi> trying to make sense in connection to graph.dict
[07:51:56] <ali1234> self._graph_dict[x] is just whatever object was put under that key x
[07:52:44] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[07:53:05] <Adoi> right, that simple
[07:53:39] <Adoi> ali1234, but do you find the code buggy nonetheless?
[07:53:57] <ali1234> yes, this code has at least two bugs that i can see
[07:54:27] <Adoi> nedbat had said I didnt need next after iter
[07:54:42] <ali1234> i have not even looked at tht part of the code
[07:54:48] <Adoi> :)
[07:55:38] <Adoi> also that lines 42 and 44 are incompatible
[07:56:12] *** Quits: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net) (Read error: Connection reset by peer)
[07:56:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 244 seconds)
[07:56:34] *** Joins: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net)
[07:57:43] <Adoi> though to me they seem ok
[07:57:59] <ali1234> they are contradictory
[07:58:17] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:58:20] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[07:58:35] <ali1234> but you'll only find that out if you add a vertex, and then try to add an edge to it, which the pasted code does not appear to do
[07:59:25] <ali1234> if you change line 104 to graph.add_edge({"a", "z"}) the program will crash with something like "list doesn't have a method add()"
[07:59:44] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[07:59:53] <Adoi> maybe lines 33 and 44 are contradictory?
[08:00:06] <ali1234> yeah that one too
[08:00:17] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[08:00:21] <ali1234> there's a really simple way to fix this btw, just use a defaultdict
[08:00:42] <ali1234> then you dont have to worry about when the vertex doesn't exist
[08:01:03] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:01:27] <ali1234> but you should try to understand the problems in this code before using the shortcut
[08:01:40] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[08:02:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[08:02:46] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[08:02:58] *** maxking is now known as abhilash
[08:02:58] *** Joins: badsektor (~badsektor@user/badsektor)
[08:03:47] *** Joins: P1RATEZ (piratez@user/p1ratez)
[08:04:00] *** abhilash is now known as maxking
[08:04:32] *** Quits: ppw (~ppw@user/ppw) (Quit: ppw)
[08:05:06] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 264 seconds)
[08:05:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:05:27] *** maxking is now known as araj
[08:05:40] *** araj is now known as maxking
[08:06:48] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[08:07:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[08:07:43] *** Lord_of_Life_ is now known as Lord_of_Life
[08:08:59] <Adoi> ali1234, you mean set-list contradiction between lines 42 and 44 ?
[08:09:07] <ali1234> yes and line 33 too
[08:09:07] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:09:49] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 252 seconds)
[08:09:50] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[08:10:14] <Adoi> but, considering only 42 and 44,  it is ok that one value is a set and another, new value may be a list, no?
[08:11:10] <Repiphany> You can mix whatever types you want in tuples, lists, dicts if your other code is designed to deal with all those types
[08:11:21] <ali1234> it is allowed for a dict to have a mixture of different types of objects as values
[08:11:36] <ali1234> however this code does not account for that and so will fail
[08:11:41] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[08:11:47] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:12:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:12:58] *** Joins: wyclif_ (~wyclif@user/wyclif)
[08:13:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:16:05] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Remote host closed the connection)
[08:16:15] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[08:16:49] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[08:17:40] *** wyclif_ is now known as wyclif
[08:17:55] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.2)
[08:19:00] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Client Quit)
[08:19:56] *** Quits: arawn (~arawn@cpe-72-227-64-168.maine.res.rr.com) (Quit: Leaving)
[08:21:59] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[08:26:01] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[08:26:43] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 240 seconds)
[08:26:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:27:13] <Adoi> using an added vertex while adding an edge gives the error you mentioned, and I guess the other, last problem you refer to is that the data types for values are clearly, almost rigidly set
[08:27:49] *** Quits: ncb (~nocebo@user/nocebo) (Changing host)
[08:27:49] *** Joins: ncb (~nocebo@user/ncb)
[08:28:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[08:28:54] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Client Quit)
[08:29:12] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:29:45] *** Joins: tijuco (~tijuco@user/tijuco)
[08:30:27] *** Quits: tijuco (~tijuco@user/tijuco) (Client Quit)
[08:30:50] *** Joins: tijuco (~tijuco@user/tijuco)
[08:30:50] *** Quits: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net) (Quit: Leaving)
[08:31:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[08:33:39] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[08:33:40] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:33:47] *** Parts: nickodd (~nickodd@user/nickodd) ()
[08:34:09] *** Quits: tijuco (~tijuco@user/tijuco) (Remote host closed the connection)
[08:34:21] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: ozoned (~odoood@2601:c8:c003:a550::2)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:37] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[08:38:09] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[08:39:13] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[08:39:27] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[08:40:50] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[08:40:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:41:03] *** Joins: CombatVet (~c4@user/combatvet)
[08:41:33] *** Joins: fluter (~fluter@user/fluter)
[08:42:19] *** Joins: Guddu (~Guddu@117.222.87.241)
[08:42:58] *** Joins: gggp (~textual@60.10.194.47)
[08:46:27] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:47:09] *** Quits: ozoned (~odoood@2601:c8:c003:a550::2) (Ping timeout: 265 seconds)
[08:48:23] *** Joins: dme86 (~dan@user/dan86)
[08:51:43] *** Joins: wyclif (~wyclif@user/wyclif)
[08:52:00] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[08:52:59] *** Joins: nickodd (~nickodd@user/nickodd)
[08:53:17] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[08:53:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[08:53:57] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[08:55:44] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 252 seconds)
[09:02:09] *** Quits: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net) (Quit: Leaving)
[09:03:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:03:54] *** Joins: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net)
[09:03:59] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[09:04:04] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:04:23] *** Joins: Mandus (~aasmundo@85.112.154.250)
[09:04:35] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[09:04:59] *** Quits: p-i- (~Ohmu@node-hbm.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[09:06:48] *** Quits: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net) (Client Quit)
[09:07:45] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[09:09:54] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 265 seconds)
[09:09:56] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[09:10:11] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[09:12:11] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 258 seconds)
[09:15:09] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[09:15:35] *** Joins: p-i- (~Ohmu@183.89.31.114)
[09:16:25] *** Quits: wei2912 (~wei2912@112.199.250.21) (Ping timeout: 258 seconds)
[09:16:38] *** Quits: p-i- (~Ohmu@183.89.31.114) (Read error: Connection reset by peer)
[09:16:50] *** Joins: p-i- (~Ohmu@mx-ll-183.89.31-114.dynamic.3bb.co.th)
[09:17:58] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[09:18:42] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 258 seconds)
[09:18:51] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: dtg01100)
[09:20:31] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[09:20:42] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[09:20:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:22:42] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[09:25:13] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[09:28:13] *** Joins: pnoud (~pnoud@user/pnoud)
[09:30:41] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[09:30:46] *** Joins: iflema (~ian@user/iflema)
[09:32:05] *** Joins: wei2912 (~wei2912@112.199.250.21)
[09:32:08] *** Joins: upsala (~zcb@185.213.155.232)
[09:33:16] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[09:33:31] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[09:34:06] *** Joins: jdmark (~jdmark@67.8.137.130)
[09:34:15] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[09:35:31] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[09:35:50] *** Quits: p-i- (~Ohmu@mx-ll-183.89.31-114.dynamic.3bb.co.th) (Remote host closed the connection)
[09:36:43] *** Quits: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Ping timeout: 258 seconds)
[09:37:28] *** Joins: p-i- (~Ohmu@mx-ll-183.89.31-114.dynamic.3bb.co.th)
[09:38:14] *** Joins: kjjaeger (~kjjaeger@2601:806:4300:b20:3fb3:e484:23fa:2d48)
[09:40:39] *** Quits: attackthemoon (~attackthe@2600:6c40:1d00:560c:b8dc:6c57:c55a:bc6c) (Read error: Connection reset by peer)
[09:43:25] *** Quits: p-i- (~Ohmu@mx-ll-183.89.31-114.dynamic.3bb.co.th) (Remote host closed the connection)
[09:43:50] *** Joins: unyu (~pyon@user/pyon)
[09:44:07] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:5169:7fb6:2f3e:d68f)
[09:44:42] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[09:45:11] *** Quits: veek (~veek@117.192.19.102) (Ping timeout: 265 seconds)
[09:46:34] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:47:26] *** Quits: ______GOD______ (~GOD@189.174.212.187) (Ping timeout: 252 seconds)
[09:49:21] *** Quits: neibo (~neibo@191.red-83-61-70.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[09:49:45] *** Quits: Nact (~l@host-85-27-121-83.dynamic.voo.be) (Quit: Konversation terminated!)
[09:50:20] *** Joins: technopagan (~technopag@p200300c5370b7d00ac2d87e2ab54367d.dip0.t-ipconnect.de)
[09:50:55] *** Joins: neibo (~neibo@104.red-83-39-219.dynamicip.rima-tde.net)
[09:52:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:55:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:56:06] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:56:33] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[10:00:06] *** Joins: mokulus (~mokulus@user/mokulus)
[10:01:14] *** Quits: technopagan (~technopag@p200300c5370b7d00ac2d87e2ab54367d.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[10:02:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[10:05:12] *** Joins: gggp (~textual@60.10.194.47)
[10:05:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:05:30] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[10:07:29] *** Joins: CombatVet_ (~c4@user/combatvet)
[10:07:31] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[10:07:48] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[10:08:00] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[10:08:06] *** CombatVet_ is now known as CombatVet
[10:09:54] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[10:09:59] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:10:19] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:10:19] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[10:10:34] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Client Quit)
[10:10:50] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[10:12:42] *** Joins: ______GOD______ (~GOD@189.174.212.187)
[10:14:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:16:10] *** Joins: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[10:16:38] *** Joins: niv (~niv@limbo.cypherpunks.io)
[10:20:40] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[10:21:22] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[10:22:48] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:23:22] *** Quits: kjjaeger (~kjjaeger@2601:806:4300:b20:3fb3:e484:23fa:2d48) (Ping timeout: 246 seconds)
[10:25:24] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[10:30:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:30:53] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:32:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[10:32:39] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:32:45] *** Quits: LiftLeft (~LiftLeft@154.21.114.224) (Ping timeout: 252 seconds)
[10:32:57] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:34:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:34:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[10:37:10] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[10:37:16] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[10:38:05] *** Quits: Paul (~Paul@user/paul) (Read error: Connection reset by peer)
[10:41:35] *** Quits: kolcon (~kolcon@v.kolouch.org) (Read error: No route to host)
[10:44:50] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:46:42] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:25] *** Joins: seednode (~seednode@user/seednode)
[10:48:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[10:49:00] *** Joins: p-i- (~Ohmu@118.173.87.178)
[10:49:31] *** Joins: gggp (~textual@60.10.194.47)
[10:50:20] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[10:51:53] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[10:53:32] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.2)
[10:55:18] *** Joins: kosh (~kosh@user/kosh)
[10:57:17] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 244 seconds)
[10:58:04] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[11:01:20] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[11:02:44] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:02:50] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[11:03:18] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:03:54] *** Joins: susam (~susam@user/susam)
[11:04:38] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[11:05:02] *** Joins: pnoud (~pnoud@user/pnoud)
[11:05:39] *** Joins: CombatVet (~c4@user/combatvet)
[11:07:28] *** Joins: palasso (~palasso@user/palasso)
[11:07:50] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[11:09:22] *** Joins: zeenk (~zeenk@82.76.113.130)
[11:09:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[11:14:30] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:16:56] *** Joins: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92)
[11:19:26] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:1835:58:ecd5:c2f3)
[11:19:48] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:25:53] *** Joins: mertyildiran (~mertyildi@88.231.90.79)
[11:26:02] *** Quits: mertyildiran (~mertyildi@88.231.90.79) (Client Quit)
[11:26:47] *** Joins: mertyildiran (~mertyildi@88.231.90.79)
[11:27:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[11:27:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:27:39] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[11:28:00] *** Quits: metta (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: metta)
[11:28:15] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:29:34] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 252 seconds)
[11:30:29] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[11:30:40] <PyLrn> Hi Is there any library for python  to draw flexible lines like number 8 , or face etc ?
[11:31:41] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[11:32:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[11:33:58] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[11:34:34] *** Joins: janemba (~janemba@94.204.254.193)
[11:36:03] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[11:37:27] *** Joins: doev (~doev@p549d74de.dip0.t-ipconnect.de)
[11:38:22] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[11:38:24] *** Quits: mertyildiran (~mertyildi@88.231.90.79) (Quit: WeeChat 2.8)
[11:38:59] *** Joins: wyclif (~wyclif@user/wyclif)
[11:42:12] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[11:42:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:43:11] *** Joins: feriman (~feriman@188.163.113.127)
[11:43:30] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[11:44:03] *** Joins: diek (~diek@187.36.4.113)
[11:44:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:46:57] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:47:36] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:48:51] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:48:53] *** Quits: diek (~diek@187.36.4.113) (Ping timeout: 265 seconds)
[11:50:14] *** Joins: CrazyEddy (~CrazyEddy@overkill.epicsol.org)
[11:51:04] <Wulf> PyLrn: those lines might be called "splines"
[11:52:28] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[11:53:30] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[11:53:32] *** Joins: tkazi (~tkazi@user/tkazi)
[11:54:06] <deniska> I vaguely remember using cairo, but it was so long ago that it may as well have been another life
[11:54:21] <deniska> maybe it wasn't even in python
[11:54:37] <Wulf> there are python bindings for gtk, so cairo might work
[11:56:15] *** Joins: wyclif (~wyclif@user/wyclif)
[11:56:25] <Wulf> https://github.com/pygobject/pycairo/
[11:57:24] *** Joins: control (~guesswho@user/control)
[11:58:12] <Reinhilde> is there a way to make Gtk asynchronous from the remainder of the script?
[11:58:42] <Wulf> put it into a thread?
[11:59:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:00:23] <PyLrn> :deniska,:Wulf , Thanks i will check
[12:01:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:03:25] *** Joins: ntdll_ (~ntdll@user/ntdll)
[12:03:51] *** Joins: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:04:24] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Ping timeout: 268 seconds)
[12:05:52] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[12:08:35] *** Quits: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Read error: Connection reset by peer)
[12:09:07] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[12:09:14] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:11:31] *** Quits: doev (~doev@p549d74de.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[12:11:45] *** Quits: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de) (Quit: iftheraincomes)
[12:12:24] *** Joins: wyclif (~wyclif@user/wyclif)
[12:12:44] <PyLrn> deniska , Wulf: Cairo works , Thanks a lot ,  Let me go through the doc , meanwhile , one quick query , is there a way i can show the line moving and drawing like the way it does in turtle? or we can only write into the file
[12:13:05] *** Joins: rendar (~rendar@user/rendar)
[12:13:09] *** Joins: aw1 (~aw1@203.171.246.149)
[12:13:30] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[12:13:53] <deniska> PyLrn: cairo doesn't make assumptions where you are going to draw, you can display it on a screen using some sort of GUI toolkit
[12:14:37] <deniska> You can take a look at pyside2 which uses qt, it should have its own functions to draw graphics
[12:17:17] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[12:17:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:17:53] *** Joins: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171)
[12:19:15] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 258 seconds)
[12:19:21] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:19:43] *** Joins: gggp (~textual@60.10.194.47)
[12:20:29] *** Joins: NeoCore (~neocore@45.152.181.148)
[12:21:13] <PyLrn> :deniksa, Thanks i will check that
[12:21:26] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:21:50] *** Quits: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171) (Remote host closed the connection)
[12:22:44] *** Joins: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171)
[12:23:08] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:23:31] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[12:24:10] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[12:25:33] *** Joins: civillian (~nick@124-171-97-43.dyn.iinet.net.au)
[12:26:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[12:27:58] *** kevr is now known as sofakingcool
[12:28:02] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 265 seconds)
[12:28:35] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:28:55] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[12:30:09] *** sofakingcool is now known as kevr
[12:31:02] *** Joins: wyclif (~wyclif@user/wyclif)
[12:32:06] *** Joins: kmh (~kmh@p5ded1544.dip0.t-ipconnect.de)
[12:32:57] *** Quits: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171) (Quit: Konversation terminated!)
[12:34:00] *** Joins: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171)
[12:34:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:35:01] *** Joins: frostschutz (~frostschu@2a01:c23:7918:f900:246f:5df9:8518:6413)
[12:35:16] *** Quits: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171) (Client Quit)
[12:35:45] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:36:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:37:19] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:09] *** Quits: Guddu (~Guddu@117.222.87.241) (Quit: Leaving)
[12:39:24] *** Joins: greedom (~greedom@2001:16b8:3277:8500:9607:923:8670:8171)
[12:39:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:40:17] <graingert> Reinhilde: there's trio guest mode
[12:40:33] <Reinhilde> there's what?
[12:41:39] <graingert> Reinhilde: https://pypi.org/project/trio-gtk/
[12:41:43] *** Joins: foozle (~foozle@2001-b011-c001-54d9-0188-f2b9-30b4-9f0b.dynamic-ip6.hinet.net)
[12:42:03] <Reinhilde> how substantial must modifications be to use this
[12:45:53] *** Quits: zeenk (~zeenk@82.76.113.130) (Quit: Konversation terminated!)
[12:46:00] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[12:46:38] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:47:10] *** Joins: wyclif (~wyclif@user/wyclif)
[12:47:46] *** Joins: LemurP (~lemurp@cm-84.214.104.84.getinternet.no)
[12:47:54] <PyLrn> :Reinhilde , pip install , worked and it installed successfully ,  Do you think gtk is necessary ? ( i dont have much idea about gtk)
[12:48:03] <Reinhilde> of course it's necessary
[12:48:10] <Reinhilde> PyLrn, You're misunderstanding.
[12:48:32] <Reinhilde> all that does is install trio-gtk. What I need to do is actually use it in a program, that already uses Gtk some other way
[12:50:34] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:52:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:52:40] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:54:26] <graingert> Reinhilde: Yeah should be fine
[12:54:40] <graingert> Reinhilde: guest mode is just that, it mostly gets out of your way
[12:54:44] <Reinhilde> Oh.. No this isn't what we're looking for
[12:55:06] <graingert> And you can use httpx.AsyncClient in your gtk callbacks
[12:55:08] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[12:55:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[12:57:13] <Reinhilde> i'm actually debugging gajim (jabber client) of all things
[12:57:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:59:10] <kmh> hmm
[13:00:06] *** audiocat is now known as audioburn
[13:00:12] *** audioburn is now known as audiocat
[13:00:14] *** Joins: abraham (~abraham@191.96.120.28)
[13:00:34] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:00:45] <Reinhilde> so.. cprofile?
[13:00:46] <control> hello, how can i set cupy to use more devices cp.cuda.Device(1).use()
[13:03:38] *** Quits: foozle (~foozle@2001-b011-c001-54d9-0188-f2b9-30b4-9f0b.dynamic-ip6.hinet.net) (Quit: Leaving)
[13:04:34] *** Joins: wyclif (~wyclif@user/wyclif)
[13:05:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[13:05:52] *** Joins: pnoud (~pnoud@user/pnoud)
[13:06:39] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:09:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:11:10] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:11:19] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[13:11:33] *** Joins: spithash (~spithash@user/spithash)
[13:13:00] *** Quits: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92) (Quit: Client closed)
[13:13:01] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[13:13:11] *** Joins: nre (~nre@55d467e5.access.ecotel.net)
[13:15:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:15:46] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[13:16:24] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[13:17:08] *** Joins: wyclif (~wyclif@user/wyclif)
[13:17:37] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving.)
[13:19:19] *** Joins: brumla (~brumla@178.77.217.196)
[13:20:43] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[13:22:54] *** Quits: brumla (~brumla@178.77.217.196) (Client Quit)
[13:24:02] *** Joins: pnoud (~pnoud@user/pnoud)
[13:24:25] *** Quits: samian (~sami@174.27.107.153) (Quit: Leaving)
[13:27:29] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[13:27:50] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:29:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[13:31:52] *** Quits: nre (~nre@55d467e5.access.ecotel.net) (Ping timeout: 265 seconds)
[13:34:14] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[13:35:57] *** Joins: aslicedbanjo (~aslicedba@host86-138-188-75.range86-138.btcentralplus.com)
[13:37:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[13:39:17] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.2)
[13:42:06] *** Joins: pulegium (~pulegium@2.25.248.211)
[13:42:54] *** Quits: pulegium (~pulegium@2.25.248.211) (Quit: leaving)
[13:43:39] *** Joins: janemba (~janemba@185.107.80.152)
[13:44:19] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[13:44:23] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[13:46:25] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:48:16] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[13:48:38] *** Joins: kosh (~kosh@user/kosh)
[13:49:51] *** Quits: asix (~Anders@user/asix) (Ping timeout: 268 seconds)
[13:50:43] *** Joins: fkdjf (~fkdjf@178.49.152.42)
[13:50:49] *** Quits: niv (~niv@limbo.cypherpunks.io) (Remote host closed the connection)
[13:51:27] <fkdjf> if I have a collection of different objects, how can I iterate only classes which I want?
[13:52:42] <Repiphany> filter or list/generator comprehension
[13:53:40] <fkdjf> how do I filter by class?
[13:54:04] *** Quits: marnold (~matt@2603-7081-4642-8e00-f164-9ea0-ff20-b89b.res6.spectrum.com) (Remote host closed the connection)
[13:54:17] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[13:54:21] <Repiphany> for item in filter(lambda x : isinstance(x, cls), my_list): ...
[13:54:47] <Repiphany> or [item for item in my_list if isinstance(item, cls)] or whatever
[13:55:41] *** Joins: feriman (~feriman@188.163.113.127)
[13:55:49] *** Joins: dme86 (~dan@user/dan86)
[13:59:44] <fkdjf> it says, TypeError: isinstance() arg 2 must be a type or tuple of types
[13:59:51] *** Joins: Padawan (~Padawan@user/padawan)
[14:01:13] <Repiphany> cls in my examples could be int or str or whatever you're trying to iterate
[14:02:02] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[14:03:22] *** Joins: asix (~Anders@user/asix)
[14:04:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:04:40] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[14:05:03] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[14:08:46] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)[14:25:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:26:15] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:26:19] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:27:02] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[14:27:36] *** Joins: spithash (~spithash@user/spithash)
[14:28:10] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:30:40] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[14:31:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:33:28] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:34:30] *** Joins: aaii__ (~aaii@93.119.212.97)
[14:36:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 258 seconds)
[14:36:53] <ChrisWarrick> you could figure that out with dis.dis
[14:36:56] *** Quits: aaii_ (~aaii@5.114.106.110) (Ping timeout: 252 seconds)
[14:37:18] <ChrisWarrick>               2 LOAD_CONST               0 (3)
[14:37:22] <ChrisWarrick>               2 LOAD_CONST               0 ((1, 2, 3))
[14:38:00] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.2)
[14:38:40] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[14:39:26] <rendar> can i write this snippet as a one-liner? https://bpa.st/Z2FQ
[14:39:54] <ChrisWarrick> rendar: I wouldn’t
[14:40:13] <Repiphany> Your indentation is borked
[14:40:17] <ChrisWarrick> rendar: data_min_x = sample_x if data_min_x is None or sample_x < data_min_x else data_min_x
[14:40:27] <ChrisWarrick> rendar: although I’d keep it the way it is, only replacing else: if with an elif
[14:40:27] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[14:40:29] <rendar> ok
[14:40:59] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[14:41:20] <ChrisWarrick> rendar: or I’d consider using the version with `or` I used in my one-liner
[14:41:38] <rendar> right
[14:41:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[14:41:56] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[14:42:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:42:26] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[14:42:30] *** Joins: mickey2 (~user@user/mickey)
[14:42:33] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:42:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:42:44] *** Joins: CombatVet (~c4@user/combatvet)
[14:42:44] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[14:43:05] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:43:05] *** mickey2 is now known as mickey
[14:43:24] <Repiphany> data_min_x = sample_x if data_min_x is None else min(data_min_x, sample_x)
[14:43:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:43:32] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:44:10] *** Joins: wyclif (~wyclif@user/wyclif)
[14:44:17] *** Joins: jpic_ (~jpic@82-64-233-31.subs.proxad.net)
[14:46:39] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:1835:58:ecd5:c2f3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:47:34] *** Joins: feriman (~feriman@188.163.113.127)
[14:47:56] *** Quits: jpic (~jpic@82.142.9.26) (Ping timeout: 268 seconds)
[14:48:12] *** Joins: Adoi (~Adoi@user/adoi)
[14:48:47] *** Joins: ras_manny (~ras_manny@196.24.141.56)
[14:49:08] *** Quits: jpic_ (~jpic@82-64-233-31.subs.proxad.net) (Ping timeout: 258 seconds)
[14:49:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:49:09] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[14:49:21] *** Joins: jpic (~jpic@82.142.25.194)
[14:51:03] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[14:52:00] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Remote host closed the connection)
[14:53:02] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[14:53:05] <bjs> fkdjf: `for x in y` the y is only evaluated once anyway
[14:53:53] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[14:54:00] <fkdjf> so the compiler place some objects like constants?
[14:55:38] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[14:56:44] <bjs> fkdjf: no it's not like a constant, it's just that a `for x in y:` statement evaluates y only once and remembers the value
[14:57:59] <Repiphany> Or if y is a generator it's lazy and one value at a time
[14:58:15] <bjs> well y is still evaluated only once in that case, you don't get a new generator each time
[14:58:34] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[14:59:13] *** Joins: palasso (~palasso@user/palasso)
[14:59:30] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[15:00:26] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[15:01:25] *** Joins: dme86 (~dan@user/dan86)
[15:02:00] *** Joins: wyclif (~wyclif@user/wyclif)
[15:02:57] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[15:03:51] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:04:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[15:04:14] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[15:04:33] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:04:44] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[15:04:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[15:04:55] *** Joins: knull (~knull@88-111-144-111.dynamic.dsl.as9105.com)
[15:05:11] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 268 seconds)
[15:05:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:05:19] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:05:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[15:05:19] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[15:05:44] *** Joins: mickey (~user@user/mickey)
[15:05:46] *** Joins: CombatVet (~c4@user/combatvet)
[15:05:46] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[15:05:46] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:05:47] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[15:05:58] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:06:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:06:09] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:ac0d:fdc3:fd4a:dcb6)
[15:06:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:07:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:07:25] *** Quits: Retr0id (~Retr0id@user/retr0id) (Quit: Ping timeout (120 seconds))
[15:08:02] *** Joins: Retr0id (~Retr0id@user/retr0id)
[15:08:50] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[15:11:06] *** Joins: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92)
[15:11:29] *** Joins: magla (~gelignite@55d433eb.access.ecotel.net)
[15:11:56] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:12:17] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[15:12:23] *** Joins: mickey (~user@user/mickey)
[15:12:52] *** Joins: palasso (~palasso@user/palasso)
[15:13:02] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[15:15:01] *** Quits: knull (~knull@88-111-144-111.dynamic.dsl.as9105.com) (Quit: WeeChat 2.8)
[15:15:21] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:1960:9d14:60f8:23cf)
[15:16:31] *** Quits: mickey (~user@user/mickey) (Client Quit)
[15:16:40] *** Joins: mickey (~user@user/mickey)
[15:16:54] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[15:17:22] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[15:18:06] *** Joins: wyclif (~wyclif@user/wyclif)
[15:21:34] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:21:50] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 244 seconds)
[15:22:52] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[15:23:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:23:50] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[15:23:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[15:24:03] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[15:24:05] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[15:24:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Quit: _)
[15:24:05] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[15:24:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[15:24:05] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[15:24:16] *** Joins: ano (~weechat@user/ano)
[15:24:18] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:24:19] *** Joins: CombatVet (~c4@user/combatvet)
[15:24:19] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:24:20] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[15:24:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:24:31] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:24:34] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[15:24:40] *** Joins: mickey (~user@user/mickey)
[15:24:52] *** Joins: pnoud (~pnoud@user/pnoud)
[15:24:55] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 268 seconds)
[15:25:26] *** Joins: palasso (~palasso@user/palasso)
[15:25:29] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[15:26:57] <PyLrn> Hi is there any python library where i can draw some text like ' Welcome ' it should be like drawing and i want to save in video format , Can anyone suggest any python libraries
[15:27:42] <PyLrn> Please note someone suggested to use cairo , it looks good however i cant save in video format
[15:28:06] *** Joins: Snyp (~rksht@49.207.194.192)
[15:29:34] <Snyp> what's the difference between import a, then doing a.b, versus from a import b ?
[15:29:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[15:29:51] <Snyp> b is a module also
[15:30:11] <nedbat> Snyp: often, `import a; a.b` doesn't work, you need to import b
[15:34:07] <Snyp> nedbat: exactly, i'm facing that. why though?
[15:34:20] *** Joins: aaii_ (~aaii@5.114.208.192)
[15:34:31] <Snyp> (it's from python tika module)
[15:34:39] <bjs> Snyp: if you have `pkg/__init__.py` and `pkg/foo.py`  then `import pkg` runs __init__.py, but doesn't import foo
[15:34:45] <bjs> whereas `from pkg import foo` will import foo.py
[15:34:51] *** Joins: woky (~woky@li1651-31.members.linode.com)
[15:35:02] <Snyp> oh
[15:35:06] *** Joins: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de)
[15:35:41] <bjs> Snyp: it's common for libraries to add imports to __init__.py so that `import pkg` also imports the other things. But it's a choice the author of the library has to make.
[15:36:21] *** Joins: rolo (~error@ip1f12fbd1.dynamic.kabel-deutschland.de)
[15:36:24] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[15:36:37] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[15:36:40] *** Joins: wyclif (~wyclif@user/wyclif)
[15:37:03] *** Quits: aaii__ (~aaii@93.119.212.97) (Ping timeout: 265 seconds)
[15:37:03] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[15:37:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:38:45] <Snyp> bjs: i see. just googling, from a library implementer's pov, is that what the __all__ list should contain? or is the better way to do it in __init__.py something like ``from .submod import *`` ?
[15:39:05] <Snyp> err.. nvm
[15:39:27] <Snyp> you never want to import *, that just pulls all the submodule functions into the main module
[15:39:29] <bjs> Snyp: __all__ doesn't affect the `import pkg`
[15:39:53] <bjs> Snyp: if the author wants `import pkg` to let you go `pkg.foo` then __init__.py needs to contain `from . import foo`
[15:40:05] <Snyp> bjs: ah.. got it now
[15:40:07] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[15:40:16] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:3573:4e54:4d99:437f)
[15:40:29] <Snyp> thanks
[15:41:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[15:42:36] *** oz4ga is now known as tim
[15:42:55] *** tim is now known as oz4ga
[15:43:47] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 265 seconds)
[15:48:12] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:48:33] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[15:48:33] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Ping timeout: 258 seconds)
[15:48:59] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:49:13] *** Joins: wyclif (~wyclif@user/wyclif)
[15:51:20] *** Joins: aaii__ (~aaii@93.119.212.97)
[15:51:33] *** Quits: aaii__ (~aaii@93.119.212.97) (Remote host closed the connection)
[15:52:43] *** Joins: palasso (~palasso@user/palasso)
[15:52:43] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[15:52:45] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:53:58] *** Quits: aaii_ (~aaii@5.114.208.192) (Ping timeout: 265 seconds)
[15:56:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[15:57:14] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[15:57:25] *** Parts: susam (~susam@user/susam) ()
[15:57:58] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:58:12] *** Quits: dmat (~noone@61.68.168.148) (Quit: leaving)
[15:58:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:59:20] *** Joins: dmat (~noone@61.68.168.148)
[16:00:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:01:38] *** Quits: p-i- (~Ohmu@118.173.87.178) (Quit: Leaving...)
[16:02:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[16:03:15] *** Joins: susam (~susam@user/susam)
[16:06:07] *** Parts: susam (~susam@user/susam) ()
[16:06:09] *** Joins: susam (~susam@user/susam)
[16:07:20] *** Quits: davidlowryduda (~davidlowr@73.61.8.202) (Ping timeout: 258 seconds)
[16:09:09] *** Joins: davidlowryduda (~davidlowr@73.61.8.185)
[16:09:12] *** Joins: thiras (~thiras@user/thiras)
[16:09:59] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:11:08] *** Joins: menace (~someone@user/menace)
[16:12:43] *** Quits: Thanatos (~Thanatos@104.248.60.142) (Remote host closed the connection)
[16:15:35] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[16:16:39] *** Quits: jazzy (~jaziz@2600:380:854e:22c1:c558:7a2d:a4b2:cfa6) (Ping timeout: 265 seconds)
[16:18:02] <ph88> hey all. I have this code  from datetime import strptime  why do i get error  cannot import name 'strptime' from 'datetime'
[16:19:06] <bjs> ph88: strptime is a function on the datetime.datetime class
[16:19:09] <bjs> not on the datetime module
[16:21:00] <ph88> oh i see thank you bjs
[16:22:47] *** Joins: trace (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[16:25:56] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[16:27:42] *** Joins: entuland (~entuland@user/entuland)
[16:27:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:28:48] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[16:29:56] *** Joins: jdwidari (~jdwidari@2605:a601:a61e:8800:c19a:9bbc:b415:ebbe)
[16:31:56] *** Quits: fkdjf (~fkdjf@178.49.152.42) (Quit: Client closed)
[16:31:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[16:32:15] *** Joins: zebrag (~chris@user/zebrag)
[16:32:31] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:32:33] *** Joins: aslicedbanjo (~aslicedba@host31-52-127-174.range31-52.btcentralplus.com)
[16:32:55] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:34:09] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:34:32] *** Quits: jdwidari (~jdwidari@2605:a601:a61e:8800:c19a:9bbc:b415:ebbe) (Ping timeout: 265 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:39] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[16:39:17] *** Joins: skapata (~Skapata@user/skapata)
[16:39:43] *** Parts: susam (~susam@user/susam) ()
[16:40:22] *** Quits: rolo (~error@ip1f12fbd1.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[16:40:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[16:41:22] *** Joins: gggp (~textual@60.10.194.47)
[16:44:12] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 265 seconds)
[16:45:46] *** Joins: jazzy (~jaziz@2600:380:854e:22c1:2051:28b0:fcd:d60)
[16:45:49] *** Joins: snalty (~Shhh@user/snalty)
[16:45:53] *** Joins: susam (~susam@user/susam)
[16:49:18] <PyLrn> Hi Is there any library for python where i can draw a text say Welcome in animation and to save in a video format?
[16:49:51] *** Joins: euouae (~euouae@user/euouae)
[16:50:02] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 268 seconds)
[16:50:56] *** Joins: jw_ (~njw@58.182.164.99)
[16:52:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:52:25] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[16:52:49] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[16:54:18] *** Quits: audiocat (~audio@2603-8081-1800-0062-7509-afad-1d88-2b2e.res6.spectrum.com) (Ping timeout: 264 seconds)
[16:56:24] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[16:56:44] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:54e5:5a1:e7e5:25d1)
[16:58:59] <nedbat> PyLrn: you could use blender for that: https://www.youtube.com/watch?v=xqXuZil6mMU
[16:59:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[17:00:14] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[17:02:17] <gitesh> alist = [4,2,8,6,5], blist = alist * 2, blist[3] = 999, print(alist)
[17:02:28] <gitesh> how do I know * will create a new list?
[17:02:30] <PyLrn> :nedbat, Thanks you mean using grease pencil in blender? , i thought of doing it with some coding , so that we can change the shape later,
[17:02:57] *** Joins: snalty (~Shhh@user/snalty)
[17:03:30] *** Joins: dme86 (~dan@user/dan86)
[17:03:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:03:47] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[17:03:54] <nedbat> PyLrn: tbh, i don't know the details of blender, sorry :)
[17:04:34] <nedbat> gitesh: you read the documentation i guess.
[17:04:39] <nedbat> gitesh: what else could it do?
[17:04:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[17:05:08] <gitesh> if i believed arithmatic operation create new things? is that fine?
[17:05:26] <gitesh> no because += mutate list
[17:05:52] <Repiphany> __mul__ is defined for lots of things that aren't numbers
[17:06:05] <Repiphany> "a"*10
[17:07:41] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:08:05] *** Quits: Padawan (~Padawan@user/padawan) (Quit: bye)
[17:08:06] <Repiphany> It's consistent with "adding" lists being simple concatenation anyway
[17:08:08] *** Joins: sokan (~sokan@2a02:587:9e1a:5100:daf0:bb7f:b6c4:2421)
[17:08:15] <Repiphany> list*10 -> concatenate 10 copies of list
[17:08:17] <PyLrn> nedbat:You are right we can do it in blender , however its a manual work , we have python interface it is limited to certain meshes like cubes circles etc etc
[17:09:08] <nedbat> gitesh: a regular operation (like *) always makes a new object.  Incremental operators (like +=) sometimes make new, sometimes mutate the existing object.
[17:09:30] <sokan> hi, Code: https://dpaste.com/ENJ5XA4A7. Error: https://dpaste.com/H6M7S98ZC. Due to lack of time, I copy-pasted some premade code and tried to change the few parameters based on the model/math I wanted to study.
[17:10:17] <gitesh> nedbat: that's what i wanted until i read the docs
[17:10:33] <gitesh> thanks
[17:11:19] *** Joins: nre (~nre@55d4722c.access.ecotel.net)
[17:12:15] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[17:12:46] <Repiphany> sokan: 56: dx,dy = fitz_nagu([X,Y],0,**param)  has alpha=0 as a positional argument but another alpha designed in param
[17:12:46] *** Joins: fstd (~fstd@xdsl-87-79-153-206.nc.de)
[17:12:58] <Repiphany> defined
[17:13:51] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[17:14:19] <sokan> Repiphany: aha! how can I see which one is defined in param?
[17:14:53] <Repiphany> Line 66 you're calling plot_vector_field with sc as the second argument
[17:14:57] <Repiphany> which comes from cases_no_current
[17:15:11] *** Joins: wyclif (~wyclif@user/wyclif)
[17:16:19] <sokan> oh dear
[17:16:24] <sokan> I see what I did wrong
[17:16:38] <sokan> there's also this alpha: alpha=opacit
[17:17:26] <sokan> or maybe that's not the only issue
[17:17:50] *** Joins: Thanatos (~Thanatos@104.248.60.142)
[17:18:04] <Repiphany> Try changing 56: dx, dy = fitz_nagu([X, Y], **param)
[17:18:30] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[17:19:08] <sokan> at least now I can see some plots and no error
[17:19:19] <sokan> needs to change the yaxis range though
[17:20:01] <sokan> it's -600,400 and I need it down to -0.1,0.4
[17:20:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:22:36] *** Joins: Fiji (~Fiji@user/fiji)
[17:22:44] <sokan> aaaand problem solved!
[17:22:48] <sokan> thank you so much Repiphany :D
[17:23:30] <sokan> Repiphany: alpha is defined as the second variable/parameter in dx,dy?
[17:24:29] <Repiphany> ?
[17:24:58] <sokan> you mentioned alpha=0 as a positional argument
[17:25:25] <Repiphany> def fitz_nagu(x, alpha, beta, gama, I):
[17:25:26] <sokan> so if I change my own variable from alpha to say alfa that would also be a solution?
[17:25:34] <Repiphany> dx,dy = fitz_nagu([X,Y],0,**param)
[17:25:41] <sokan> got it
[17:25:42] *** Joins: pnoud (~pnoud@user/pnoud)
[17:25:55] <sokan> and the alpha in param?
[17:26:17] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[17:26:17] <sokan> it's the alpha=opacity?
[17:26:25] <Repiphany> Read the error message
[17:26:46] *** Joins: adde9708 (uid139358@id-139358.tinside.irccloud.com)
[17:28:06] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[17:28:09] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 268 seconds)
[17:31:05] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[17:31:33] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[17:32:10] *** Joins: jinsun_ (~quassel@user/jinsun)
[17:32:32] *** Quits: menace (~someone@user/menace) (Ping timeout: 265 seconds)
[17:32:44] *** Joins: wyclif (~wyclif@user/wyclif)
[17:32:47] *** Quits: aw1 (~aw1@203.171.246.149) (Remote host closed the connection)
[17:34:44] *** Joins: palasso (~palasso@user/palasso)
[17:35:19] *** Quits: magla (~gelignite@55d433eb.access.ecotel.net) (Read error: Connection reset by peer)
[17:35:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[17:36:14] *** Quits: nre (~nre@55d4722c.access.ecotel.net) (Quit: Leaving.)
[17:37:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:38:19] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:38:49] *** Quits: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[17:38:58] *** Joins: enrico (~enrico@gandi.enricozini.org)
[17:40:24] *** Joins: magla (~gelignite@55d433eb.access.ecotel.net)
[17:40:31] <enrico> Hello. I would like to package a running module as a zipapp. In theory, I can create TemporaryDirectory, shutil.copytree(os.path.dirname(modulename.__file__), ..) into it, and call zipapp.create_archive on it. However this would file if the module is itself loaded from a zipfile
[17:40:53] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[17:41:02] <enrico> I checked importlib and importlib.resources, but I didn't see a way to recursively extract everything that is in a running module/package
[17:41:14] <enrico> Did I miss something?
[17:41:46] *** Joins: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868)
[17:42:30] *** Joins: nre (~nre@55d4722c.access.ecotel.net)
[17:43:12] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[17:44:12] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (Ping timeout: 268 seconds)
[17:44:48] *** Quits: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92) (Quit: Client closed)
[17:45:06] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[17:45:16] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:45:27] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 244 seconds)
[17:45:37] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:46:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:48:40] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[17:49:18] *** Joins: wyclif (~wyclif@user/wyclif)
[17:49:18] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[17:49:46] *** Joins: Trieste_ (T@user/pilgrim)
[17:50:04] *** Quits: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868) (Ping timeout: 258 seconds)
[17:50:27] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[17:51:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:51:41] *** Joins: brickfat (~brickfat@user/brickfat)
[17:52:09] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[17:54:02] *** Joins: geli (~gelignite@55d4f0d2.access.ecotel.net)
[17:54:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:54:14] *** Quits: lmmx (~louis@host-92-0-169-218.as13285.net) (Quit: Leaving)
[17:55:05] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:55:54] <yourfate> so I want to run a function on files in a filesystem, it's a lot of files in a lot of dirs (600gb of jpegs). I'd like to try my hand at concurrencty. what's the general game plan, do I first list all the dirs and build a list of files I want to work on, then divy that up to concurrent executors
[17:56:00] *** Joins: jellyknight (~gelignite@55d4c90a.access.ecotel.net)
[17:56:02] <yourfate> or is there a even neater way to do it?
[17:56:03] *** Trieste_ is now known as Trieste
[17:56:18] *** Quits: Thanatos (~Thanatos@104.248.60.142) (Remote host closed the connection)
[17:56:44] *** Quits: magla (~gelignite@55d433eb.access.ecotel.net) (Ping timeout: 265 seconds)
[17:56:47] *** Quits: nre (~nre@55d4722c.access.ecotel.net) (Quit: Leaving.)
[17:57:26] <euouae> yourfate: do you not want to use a library for the directory listing?
[17:57:44] <yourfate> my naive plan was to use `pathlib.Path.glob()`, then concurrent futures executor.map() on that result
[17:58:10] <enrico> yourfate: you can use a generator to list all the files, and pass it to multiprocessing.Pool.imap_unordered for processing. That way you already start processing while you're already scanning the filesystem
[17:58:25] <euouae> yourfate: as someone informed me, threads on python are not actually going to give you a performance boost; so use the process pool
[17:58:53] *** Quits: geli (~gelignite@55d4f0d2.access.ecotel.net) (Ping timeout: 258 seconds)
[17:59:42] *** Quits: abraham (~abraham@191.96.120.28) (Ping timeout: 252 seconds)
[18:00:07] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[18:01:04] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Remote host closed the connection)
[18:01:10] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[18:01:31] *** Joins: Paul (~Paul@user/paul)
[18:01:43] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[18:02:33] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:02:52] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[18:03:28] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[18:04:40] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[18:05:25] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:05:34] *** Joins: gareppa (~gareppa@user/gareppa)
[18:06:05] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[18:06:26] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:06:36] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[18:06:38] *** Joins: wyclif (~wyclif@user/wyclif)
[18:06:49] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[18:06:51] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 265 seconds)
[18:07:54] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[18:09:06] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[18:09:44] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[18:11:02] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:12:04] *** Joins: gggp (~textual@60.10.194.47)
[18:12:45] *** Joins: CombatVet (~c4@user/combatvet)
[18:12:47] *** Joins: KevinX (~KevinX@23.82.137.226)
[18:16:10] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:16:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[18:17:17] *** Quits: KevinX (~KevinX@23.82.137.226) (Ping timeout: 258 seconds)
[18:17:39] <xaltsc> Hey, is Sphinx the de facto standard for documentation in python ?
[18:20:25] *** Quits: jellyknight (~gelignite@55d4c90a.access.ecotel.net) (Quit: Stay safe!)
[18:20:34] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[18:21:21] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:54e5:5a1:e7e5:25d1) (Ping timeout: 265 seconds)
[18:22:18] <oprypin> xaltsc, sure. does that bother you?
[18:22:30] <xaltsc> no, just checking :D
[18:22:39] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[18:22:57] <The-Compiler> xaltsc: pretty much - some use https://www.mkdocs.org/ instead, but Sphinx is definitely more popular
[18:25:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:25:43] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com)
[18:26:24] <xaltsc> ok thanks :)
[18:27:09] *** Parts: skapata (~Skapata@user/skapata) (Ĝis)
[18:27:50] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[18:29:24] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[18:30:15] *** Joins: diek (~diek@187.36.4.113)
[18:31:06] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:ac0d:fdc3:fd4a:dcb6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:31:13] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[18:31:51] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[18:32:01] *** Joins: varaindemian (~varaindem@86.124.234.168)
[18:32:12] *** Quits: varaindemian (~varaindem@86.124.234.168) (Client Quit)
[18:32:53] *** Joins: varaindemian (~varaindem@86.124.234.168)
[18:33:14] *** Quits: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[18:36:49] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 265 seconds)
[18:37:19] *** Joins: wyclif (~wyclif@user/wyclif)
[18:37:53] *** Joins: ulu (~ulu@user/ulu)
[18:38:04] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[18:38:43] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:38:56] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:1960:9d14:60f8:23cf) (Remote host closed the connection)
[18:39:42] <euouae> There's also pydoc, right?
[18:40:20] *** Joins: nre (~nre@55d4722c.access.ecotel.net)
[18:40:26] *** Quits: nre (~nre@55d4722c.access.ecotel.net) (Client Quit)
[18:40:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:42:06] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:42:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:46:02] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[18:46:28] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[18:47:21] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[18:47:37] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[18:48:09] *** Joins: Ivyy (~Ivyy@84.247.50.42)
[18:49:31] *** Quits: jazzy (~jaziz@2600:380:854e:22c1:2051:28b0:fcd:d60) (Ping timeout: 264 seconds)
[18:49:34] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Ping timeout: 252 seconds)
[18:50:02] *** Joins: pnoud (~pnoud@user/pnoud)
[18:51:03] *** Joins: raxor2k (~raxor2k@78.158.234.232)
[18:51:08] <raxor2k> graingert: are you here
[18:51:29] <raxor2k> Is it possible to change the ping-pong timer of the websocket?
[18:51:29] *** Joins: Auron (Auron956@user/auron)
[18:51:50] *** Joins: fellipe (~fellipe@2804:14c:65c2:44c8::1001)
[18:53:39] *** Joins: wyclif (~wyclif@user/wyclif)
[18:53:59] *** Joins: niv (~niv@limbo.cypherpunks.io)
[18:54:07] <fellipe> hi everyone. Can someone point me an easy library enough to make me able to embed watermark and stream a video on the moment a user clicks on the download button?
[18:55:11] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[18:55:43] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:56:23] *** Joins: Julian (~tos9@host-82-58-0-63.retail.telecomitalia.it)
[18:57:49] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[18:58:03] *** Quits: Makdaam (makdaam@user/makdaam) (Read error: Connection reset by peer)
[18:58:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[18:59:26] *** Quits: cloudeng (~cloudeng@136.56.42.219) (Read error: Connection reset by peer)
[18:59:53] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[18:59:58] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:00:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[19:01:50] *** Parts: susam (~susam@user/susam) ()
[19:01:54] *** Quits: Xano (~Xano@2a00:23c4:420c:d700:f3f9:8b66:94d4:7117) (Ping timeout: 240 seconds)
[19:02:08] *** Joins: susam (~susam@user/susam)
[19:02:36] *** Joins: gggp (~textual@60.10.194.47)
[19:02:58] *** Joins: gigo (~gigo@user/gigo)
[19:03:12] *** Joins: Makdaam (makdaam@user/makdaam)
[19:07:10] *** Quits: s8n (~s8n@user/s8n) (Ping timeout: 252 seconds)
[19:07:33] *** Joins: pnoud (~pnoud@user/pnoud)
[19:08:39] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[19:09:28] *** Joins: wyclif (~wyclif@user/wyclif)
[19:10:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 265 seconds)
[19:12:37] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[19:12:48] *** Joins: zeenk (~zeenk@82.76.113.130)
[19:14:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:16:41] <gitesh> s = "ball", r = "", for item in s:, r = item.upper() + r, print(r)
[19:16:49] <gitesh> how does this reverse the order?
[19:16:57] *** Joins: dme86 (~dan@user/dan86)
[19:17:05] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:17:38] <gitesh> i take is as upper method converted b to B , so it's B+"" which is "B"
[19:17:51] <gitesh> oh
[19:18:00] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) ()
[19:18:15] <gitesh> got it
[19:18:47] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[19:19:12] *** Joins: Wegge (~wegge@user/wegge)[19:28:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[19:29:26] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[19:30:17] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[19:30:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:31:53] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[19:32:31] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[19:32:42] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[19:32:55] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 265 seconds)
[19:32:59] <Julian> gitesh: Treat that as a riddle, not code you'd actually write; that's certainly not how you'd actually reverse a string.
[19:33:22] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[19:33:29] <Reinhilde> :)
[19:34:10] *** Joins: iauc (~iauc@84.209.101.110)
[19:34:17] *** Joins: jw_ (~njw@58.182.164.99)
[19:34:35] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[19:34:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[19:35:20] <iauc> hi, I am trying to fix this: https://github.com/RDFLib/rdflib/issues/1336 - which is basically too deep recursion with pyparsing. I'm not sure where the best place is to ask about it.
[19:35:52] <fellipe> hi everyone. Can someone point me an easy library enough to make me able to embed watermark and stream a video on the moment a user clicks on the download button?
[19:35:58] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[19:36:15] <BtbN> That's gonna need a _ton_ of CPU power
[19:37:14] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 265 seconds)
[19:37:42] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:38:34] *** Joins: diek (~diek@187.36.4.113)
[19:39:02] *** Quits: fellipe (~fellipe@2804:14c:65c2:44c8::1001) (Quit: Client closed)
[19:40:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[19:41:22] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[19:42:22] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[19:42:31] *** Joins: wyclif (~wyclif@user/wyclif)
[19:42:32] *** Joins: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92)
[19:43:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:43:33] *** Quits: diek (~diek@187.36.4.113) (Ping timeout: 265 seconds)
[19:43:37] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[19:46:23] *** Joins: nre (~nre@55d4722c.access.ecotel.net)
[19:47:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[19:47:42] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[19:48:40] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[19:50:26] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:50:46] *** Quits: Ivyy (~Ivyy@84.247.50.42) (Ping timeout: 265 seconds)
[19:51:05] <xaltsc> About typing, are imports that are made when TYPE_CHECKING is true actually needed at runtime ? To avoid circular import, I import classes this way and with the syntax `obj: type = def_of_obj()`, python complains **at runtime** that type is not defined.
[19:51:33] <xaltsc> ^ to be clear, type here is an arbitrary type not the type 'type'
[19:51:49] *** Joins: brownan (~brownan@136.56.137.143)
[19:52:42] *** Joins: gggp (~textual@60.10.194.47)
[19:55:10] *** Joins: jamea (~jamea77@177.239.82.167)
[19:55:54] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[19:55:58] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:56:48] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[19:57:18] *** Joins: marnold (~matt@2603-7081-4642-8e00-0000-0000-0000-0002.res6.spectrum.com)
[19:57:41] *** Joins: gloomy (~ldorigo@192038134149.mbb.telenor.dk)
[19:58:25] *** Joins: wyclif (~wyclif@user/wyclif)
[19:58:39] <gloomy> Hi. Why doesn't pylance (or mypy) allow me to pass a Generator[int, None, None] to a function that accepts an Iterator[int]  ? Aren't generators iterators?
[19:59:13] <nedbat> gloomy: why does the function take an iterator? it would be better to take an iterable
[19:59:25] <nedbat> gloomy: for example, a list is an iterable, but not an iterator
[19:59:27] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[19:59:38] <nedbat> and generators are iterables
[20:00:03] <gloomy> that was my next question - how to choose between Iterable[int] and Iterator[int] for the argument type
[20:00:47] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[20:00:57] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[20:01:01] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[20:01:16] *** Quits: nre (~nre@55d4722c.access.ecotel.net) (Quit: Leaving.)
[20:01:29] <gloomy> But I'm confused as to how those three types are related
[20:02:15] <gloomy> And changing it to Iterable[int] still gives me an error...
[20:02:42] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:03:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:03:52] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[20:04:51] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:40b4:1c28:949f:857b)
[20:05:47] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 265 seconds)
[20:06:12] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[20:07:16] *** Joins: magla (~gelignite@55d4c90a.access.ecotel.net)
[20:09:30] <gloomy> Hmm, ok, kooks like it works, pylance is being weird
[20:10:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:10:54] *** Quits: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de) (Remote host closed the connection)
[20:11:12] *** Joins: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de)
[20:12:50] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[20:13:35] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[20:13:37] *** Joins: jw_ (~njw@58.182.164.99)
[20:13:39] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:14:01] *** Quits: Julian (~tos9@host-82-58-0-63.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[20:14:05] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[20:15:09] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:15:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:15:25] <no_gravity> Is there a common way to comment on a function=
[20:15:27] <no_gravity> Is there a common way to comment on a function?
[20:15:45] *** Joins: damoreno (~damoreno@redhat/damoreno)
[20:16:39] <gloomy> You mean to describe what it does?
[20:16:44] <gloomy> Google for "docstrings"
[20:16:51] <no_gravity> gloomy: Yes, what it does.
[20:16:53] *** Quits: control (~guesswho@user/control) (Ping timeout: 258 seconds)
[20:17:16] <damoreno> Hey. When using click, how do you handle the exceptions and return code? Do you have any example. I have a command right now with two lines and 4 except blocks. I'm curious about how people use click properly
[20:17:27] <no_gravity> gloomy: Oh shit that """...""" *below* the function header line?
[20:18:30] *** Joins: imp (~imp@186.205.11.214)
[20:19:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[20:20:39] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:20:52] *** Quits: raxor2k (~raxor2k@78.158.234.232) ()
[20:21:15] *** Quits: LuKaRo (~LuKaRo@p4fc322c8.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:21:37] *** Joins: Skyz (~Skyz@user/skyz)
[20:22:03] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[20:22:43] <The-Compiler> no_gravity: yep, those docstrings are pretty much the standard way to document things like functions/classes/modules in Python
[20:23:15] <The-Compiler> damoreno: can you show your code? It's probably easier to suggest something based on that
[20:23:34] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[20:23:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:24:03] <no_gravity> The-Compiler: I will try it for a while. so far I think it makes reading the function harder.
[20:24:09] *** Quits: ras_manny (~ras_manny@196.24.141.56) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:12] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[20:24:34] *** Quits: Skyz (~Skyz@user/skyz) (Client Quit)
[20:25:00] <The-Compiler> xaltsc: yes, the annotations are still being evaluated at runtime - you'll either need to turn it into a string, or use "from __future__ import annotations" (3.7+)
[20:25:22] <xaltsc> The-Compiler: Even in 3.9 ?
[20:25:29] <The-Compiler> xaltsc: yes
[20:25:54] *** Joins: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net)
[20:25:58] *** Quits: binarymutt_ (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Client Quit)
[20:26:19] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:19] <jinsun_> and even in 3.10, they postponed the stringification of annotations
[20:26:21] <The-Compiler> xaltsc: it was supposed to become the default in 3.10, but that decision was reverted because it causes some trouble for other run-time usages of type annotations
[20:26:22] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[20:26:34] *** jinsun_ is now known as jinsun
[20:26:44] <The-Compiler> see e.g. https://github.com/samuelcolvin/pydantic/issues/2678 for some context
[20:26:49] *** Joins: gareppa (~gareppa@user/gareppa)
[20:26:58] <damoreno> The-Compiler: let me paste an example (without many details)
[20:27:12] <xaltsc> ok thanks
[20:28:01] *** Joins: Akuli (~Akuli@82-203-167-46.bb.dnainternet.fi)
[20:28:23] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Quit: Leaving)
[20:28:49] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:29:15] *** Joins: rsx (~dummy@ppp-188-174-151-149.dynamic.mnet-online.de)
[20:31:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[20:31:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:31:37] <damoreno> The-Compiler: So, something like this: https://bpa.st/PYIA What would be a proper way to handle error codes? Now I have that single subcommand, but I'll have at least 3 more
[20:31:57] *** Quits: ncb (~nocebo@user/ncb) (Quit: updating)
[20:32:43] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:33:25] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[20:33:45] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[20:34:09] *** Joins: ncb (~ncb@user/ncb)
[20:34:48] *** Joins: LiftLeft (~LiftLeft@154.21.114.203)
[20:34:54] *** Joins: brickfat (~brickfat@user/brickfat)
[20:35:00] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[20:36:26] *** Quits: zeenk (~zeenk@82.76.113.130) (Ping timeout: 258 seconds)
[20:38:45] <rendar> there is some prettier way to get if a tuple contains a None or NaN? for now i have this https://bpa.st/ZZWQ
[20:38:59] *** Joins: gloomy_laptop (~ldorigo@213.237.94.100)
[20:40:14] *** Quits: ncb (~ncb@user/ncb) (Quit: ncb)
[20:40:55] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:41:06] *** Quits: meti (~meti@user/meti) (Quit: ZNC - http://znc.in)
[20:41:13] <KirkMcDonald> rendar: if any(x is None or math.isnan(x) for x in foo)
[20:41:20] *** Joins: ncb (~ncb@user/ncb)
[20:41:43] <rendar> cool thanks
[20:42:02] *** Quits: gloomy (~ldorigo@192038134149.mbb.telenor.dk) (Ping timeout: 265 seconds)
[20:42:02] <no_gravity> It seems "requests" is not using curl under the hood. As it fails for some servers because it cannot negotiate the right ssl cipher.
[20:42:06] <no_gravity> Is there a way to fix this?
[20:42:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[20:42:36] <jinsun> no_gravity: requests doesn't use curl, pycurl does but it is not as easy to use
[20:42:48] *** Joins: meti (~meti@user/meti)
[20:43:02] <no_gravity> Oh wow, curl also fails on this server
[20:43:44] *** Joins: wyclif (~wyclif@user/wyclif)
[20:44:22] <ammar2> sounds like a bad server
[20:44:42] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:45:23] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[20:46:59] <gloomy_laptop> Is there any way to use the `Literal` type in python 3.6? Haven't been able to find out
[20:47:49] <damoreno> The-Compiler: any advice?
[20:48:20] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[20:48:43] <rendar> if tuple dimensions are wrong, should i raise TypeError or ValueError?
[20:48:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:49:35] *** Quits: PyLrn (~PyLrn@2402:e280:3d22:227:28c3:e4a:8ff7:1a92) (Quit: Client closed)
[20:49:47] <yitz> I'd say ValueError. Or use a dataclass?
[20:49:58] *** Quits: dme86 (~dan@user/dan86) (Quit: Lost terminal)
[20:50:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[20:50:36] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[20:50:56] *** Joins: darksun (~darksun@user/darksun)
[20:51:09] *** Joins: LuKaRo_ (~LuKaRo@p5deda2e4.dip0.t-ipconnect.de)
[20:51:10] *** Joins: fellipe (~fellipe@2804:14c:65c2:44c8::1001)
[20:51:12] *** Parts: fellipe (~fellipe@2804:14c:65c2:44c8::1001) ()
[20:51:46] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[20:52:18] *** Joins: jw_ (~njw@58.182.164.99)
[20:54:19] *** Joins: Celeo (~Celeo@user/celeo)
[20:55:27] *** Joins: LuKaRo (~LuKaRo@p5deda7df.dip0.t-ipconnect.de)
[20:55:36] *** Quits: LuKaRo_ (~LuKaRo@p5deda2e4.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[20:56:15] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[20:56:41] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[20:57:05] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[20:57:20] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[20:58:54] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[20:59:16] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:59:36] *** Joins: wyclif (~wyclif@user/wyclif)
[21:00:35] *** Quits: Snyp (~rksht@49.207.194.192) (Ping timeout: 258 seconds)
[21:01:15] *** Joins: badsektor (~badsektor@user/badsektor)
[21:01:20] *** Quits: LuKaRo (~LuKaRo@p5deda7df.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[21:01:49] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[21:02:19] *** Joins: diek (~diek@187.36.4.113)
[21:02:30] <graingert> gloomy_laptop: typing_extensions has backports for everything
[21:02:30] <jabberwock> I'm wondering how to compare a pisense "pixel" to colorzero.Color. Sound familiar?
[21:04:08] *** Joins: LuKaRo_ (~LuKaRo@p200300dfa70b18573403f4a957659168.dip0.t-ipconnect.de)
[21:04:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:05:09] *** Joins: zeenk (~zeenk@82.76.113.130)
[21:05:12] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 265 seconds)
[21:05:24] <gloomy_laptop> graingert: thanks, looking into it
[21:06:18] *** Quits: rsx (~dummy@ppp-188-174-151-149.dynamic.mnet-online.de) (Quit: rsx)
[21:08:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:08:23] *** Joins: pnoud (~pnoud@user/pnoud)
[21:09:05] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:09:09] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[21:09:30] *** Joins: justinf210 (~justinf21@39.sub-174-204-1.myvzw.com)
[21:12:29] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[21:12:50] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[21:12:52] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[21:13:09] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 244 seconds)
[21:13:27] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[21:14:04] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:14:35] <rendar> wtf?! https://bpa.st/NBKQ why this is happening?
[21:14:55] <BtbN> "timeseries_scalar" is always true
[21:15:26] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:54e5:5a1:e7e5:25d1)
[21:15:26] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[21:16:19] <rendar> err! my bad sorry, ok thanks
[21:17:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:18:55] *** Joins: euouae (~euouae@user/euouae)
[21:19:05] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:19:33] <euouae> Hello I want to create a python program that can create a database in a default user directory. Should I use the `appdirs` package? Or is there such functionality in setuptools?
[21:19:47] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[21:19:57] <euouae> I see setuptools allows me to specify data files in my project directory, but I have none; I want to call a "CreateDB()" function on the default user data directory
[21:20:26] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[21:20:47] *** Joins: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[21:20:54] *** Quits: justinf210 (~justinf21@39.sub-174-204-1.myvzw.com) (Ping timeout: 258 seconds)
[21:21:54] *** Joins: justinf210 (~justinf21@39.sub-174-204-1.myvzw.com)
[21:22:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:24:14] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[21:28:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[21:28:28] *** Quits: gloomy_laptop (~ldorigo@213.237.94.100) (Read error: Connection reset by peer)
[21:29:59] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 268 seconds)
[21:31:50] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:40b4:1c28:949f:857b) (Ping timeout: 268 seconds)
[21:32:45] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[21:35:27] <euouae> I think I'll use appdirs
[21:35:36] <euouae> with appdirs.user_data_dir()
[21:36:15] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[21:36:26] <gitesh> seqmut-11-12: What sequence will you iterate through as you accumulate a result in the following prompt? Write code to print out each character of the string my_str on a separate line.
[21:36:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[21:37:04] *** Joins: finsternis (~X@23.226.237.192)
[21:37:04] <gitesh> but here I'm not accumulating the result
[21:37:09] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[21:37:29] <gitesh> is printing out each character on a separate line a accumulator pattern?
[21:37:34] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:37:51] *** Joins: s8n (~s8n@user/s8n)
[21:37:57] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:741d:bb2a:8acc:1441)
[21:38:32] *** Joins: budo (~budo@c-24-62-207-85.hsd1.ma.comcast.net)
[21:39:40] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[21:40:06] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[21:41:38] *** Joins: jw_ (~njw@58.182.164.99)
[21:42:27] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[21:42:29] *** Quits: baltazar (~baltazar@84-236-29-252.pool.digikabel.hu) (Remote host closed the connection)
[21:45:10] <nedbat> gitesh: what code are you talking about?
[21:45:43] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[21:45:55] *** Joins: srhm (~ascii@user/srhm)
[21:46:46] *** Quits: rendar (~rendar@user/rendar) ()
[21:47:46] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:13] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:741d:bb2a:8acc:1441) (Ping timeout: 265 seconds)
[21:48:15] <gitesh> nedbat: there is no code, it's just a question
[21:49:01] *** Joins: pwnd_sfw6 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[21:49:03] <nedbat> gitesh: you said, "but here I'm ..."  where is here?
[21:49:09] <euouae> not sure what seqmut is, yes it is an accumulator pattern
[21:49:25] <gitesh> nedbat: here in the sentence before that one
[21:49:31] <euouae> The accumulator variable is the input state
[21:49:35] <gitesh> in the question i meant
[21:49:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[21:49:42] *** pwnd_sfw6 is now known as pwnd_sfw
[21:49:43] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:50:17] <gitesh> euouae: ?
[21:50:21] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Read error: Connection reset by peer)
[21:50:22] <gitesh> what input state?
[21:50:37] <euouae> The input state is the thing you're writing the characters to
[21:50:54] <euouae> I'm not speaking in python, it's just general terminology
[21:52:28] <euouae> Think of it this way: instead of print("foo") print("bar"), use input = "" input += "foo\n" input += "bar\n". Is that making the accumulation explicit?
[21:53:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:53:41] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:57:11] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:00:47] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[22:01:09] <nedbat> wow, how many ways can a "journalist" misunderstand python? https://thenextweb.com/news/why-python-not-programming-language-future-syndication
[22:01:37] *** Parts: Lando-SpacePimp (~Lando@user/lando-spacepimp) (They told me they fixed it. I trusted them to fix it. It's not my fault!)
[22:01:47] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:01:51] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:04:25] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[22:04:31] *** Joins: wyclif (~wyclif@user/wyclif)
[22:04:49] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:05:06] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 240 seconds)
[22:05:51] <euouae> I don't understand why they're against whitespace heh
[22:06:19] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:06:24] *** Joins: rigid (~rigid@user/rigid)
[22:06:30] <euouae> I also think it's funny that Go programmers are the highest paid, well duh they work for google
[22:06:30] <rigid> ahoy
[22:06:35] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[22:06:35] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[22:07:33] <euouae> I've had a good experience with python, I've felt very productive and the transition from C++ was seamless
[22:07:34] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:07:55] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Remote host closed the connection)
[22:08:31] <rigid> i want to read binary data from stdin and "ignore EOF". Is there a way I can do "for c in sys.stdin.buffer.read(): ..." without the loop ending on EOF? I'm reading from a named pipe and I want to redirect multiple sequential commands to it
[22:09:18] <rigid> i.e. "cat foo1.bin > my_fifo ; cat foo2.bin > my_fifo" shouldn't quit "./myapp.py < my_fifo"
[22:09:26] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[22:09:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:10:32] *** Joins: virtualroot (~virtualro@user/virtualroot)
[22:11:15] <nedbat> rigid: instead of a for loop, you could use .read() in a while True loop
[22:11:16] <rigid> it seems multiple calls to sys.stdin.buffer.read() will fail, I suppose stdin got closed
[22:12:00] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:12:16] <nedbat> rigid: why don't you use   cat foo*.bin > my_fifo     #? after all, cat is short for catenate: it's meant to be used with multiple files
[22:12:54] <rigid> because foo2.bin doesn't exist, yet when I cat foo1.bin
[22:13:33] <nedbat> rigid: hmm, i don't know how eof is treated in that case
[22:13:50] <euouae> rigid: the issue is with the meaning of EOF for a pipe in your system
[22:14:06] <euouae> rigid: according to what I am reading, EOF is sent when there's no more writers for the pipe
[22:14:39] <rigid> euouae: yeah. and "tail -f" would work but it's line buffered which doesn't work with my binary data :-/
[22:14:43] <flower_> global argcomplete doesn't work here on Debian Linux
[22:14:49] <flower_> testing with this code: http://paste.debian.net/1201841/
[22:14:56] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:14:58] <rigid> i suppose there's no python way to solve that
[22:14:59] <euouae> rigid: I think it's a design issue in your code
[22:15:05] <flower_> https://kislyuk.github.io/argcomplete/#activating-global-completion
[22:15:31] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:15:33] <euouae> rigid: you could hold the pipe open with a writer that never writes; otherwise, you need a protocol to establish that a file is sent without triggering EOF
[22:15:52] *** Joins: stultusv (~Stultus_V@p7176066-ipoefx.ipoe.ocn.ne.jp)
[22:16:22] *** Quits: {HD} (~{HD}@102.165.16.42) (Ping timeout: 252 seconds)
[22:17:04] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:17:14] *** Parts: shadoozo (~shadoozo@user/shadoozo) (IRC is just a multiplayer notepad)
[22:18:21] <rigid> hm, i tried that too with "exec 9> my_fifo" but then my python app doesn't seem to receive any data
[22:19:15] <euouae> rigid: can you use sockets instead? You can send your files to localhost
[22:19:24] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:19:31] <rigid> oh, that's a good idea. i'll try that!
[22:19:39] <rigid> euouae: thanks, didn't think of that
[22:20:02] <euouae> no problem, that's called IPC if you want to look it up, inter-process communicatoin
[22:21:05] <euouae> rigid: https://docs.python.org/3/library/selectors.html#examples
[22:21:22] *** Joins: wyclif (~wyclif@user/wyclif)
[22:22:26] *** Joins: {HD} (~{HD}@102.165.16.172)
[22:22:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[22:22:33] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Quit: WeeChat 3.0.1)
[22:23:00] *** Joins: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net)
[22:23:16] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Client Quit)
[22:25:55] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[22:26:14] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:26:22] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[22:26:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:26:58] *** Joins: gloomy_laptop (~ldorigo@81.161.149.37)
[22:27:54] <flower_> seems to work
[22:28:10] *** Quits: stultusv (~Stultus_V@p7176066-ipoefx.ipoe.ocn.ne.jp) (Quit: WeeChat 3.0.1)
[22:28:22] *** Joins: stultusv (~Stultus_V@p7176066-ipoefx.ipoe.ocn.ne.jp)
[22:28:44] *** Quits: stultusv (~Stultus_V@p7176066-ipoefx.ipoe.ocn.ne.jp) (Client Quit)
[22:28:58] *** Joins: stultusv (~Stultus_V@p7176066-ipoefx.ipoe.ocn.ne.jp)
[22:32:27] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[22:32:34] *** Parts: virtualroot (~virtualro@user/virtualroot) ()
[22:34:17] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[22:35:13] *** Joins: Narrat (~omnius@p200300df5f10627006ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:36:44] *** Quits: justinf210 (~justinf21@39.sub-174-204-1.myvzw.com) (Remote host closed the connection)
[22:37:05] *** Quits: ncb (~ncb@user/ncb) (Remote host closed the connection)
[22:37:30] *** Joins: ncb (~ncb@user/ncb)
[22:39:17] *** Joins: wyclif (~wyclif@user/wyclif)
[22:39:25] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:40:29] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[22:40:36] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[22:41:07] *** Joins[23:26:25] *** Quits: someuser (~user@41.46.236.120) (Read error: Connection reset by peer)
[23:26:40] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:27:29] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:27:54] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:29:43] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 265 seconds)
[23:30:14] *** Joins: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:30:28] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[23:33:08] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:33:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:34:06] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 265 seconds)
[23:36:12] *** Joins: wyclif (~wyclif@user/wyclif)
[23:37:02] *** Joins: LuKaRo (~LuKaRo@p200300dfa710407ea7d6edf132d3efd1.dip0.t-ipconnect.de)
[23:37:20] *** Joins: knull (~knull@88-111-144-111.dynamic.dsl.as9105.com)
[23:37:44] *** Parts: knull (~knull@88-111-144-111.dynamic.dsl.as9105.com) ()
[23:38:35] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[23:40:11] *** Joins: bilegeek (~bilegeek@2600:1008:b017:63a6:c26d:d119:faaa:a6d7)
[23:41:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:42:04] *** Joins: Thanatos (~Thanatos@157.230.235.93)
[23:43:04] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[23:43:44] *** Joins: ras_manny (~ras_manny@196.24.141.56)
[23:44:42] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[23:45:42] *** Joins: heco (~redrum@user/redrum88)
[23:46:21] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[23:47:46] *** Joins: justinf210 (~justinf21@47.sub-174-247-116.myvzw.com)
[23:47:55] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[23:48:29] *** Joins: heco_ (~redrum@user/redrum88)
[23:48:34] *** Quits: ras_manny (~ras_manny@196.24.141.56) (Ping timeout: 265 seconds)
[23:49:47] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:50:07] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:50:46] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[23:51:01] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 265 seconds)
[23:51:49] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:51:56] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 258 seconds)
[23:51:58] *** Joins: Nact (~l@host-85-27-124-131.dynamic.voo.be)
[23:52:02] *** Joins: Julian (~tos9@host-82-58-0-63.retail.telecomitalia.it)
[23:52:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[23:52:26] *** Quits: justinf210 (~justinf21@47.sub-174-247-116.myvzw.com) (Ping timeout: 265 seconds)
[23:53:53] *** Quits: heco_ (~redrum@user/redrum88) (Ping timeout: 265 seconds)
[23:54:23] *** Quits: Thanatos (~Thanatos@157.230.235.93) (Remote host closed the connection)
[23:54:28] *** Joins: wyclif (~wyclif@user/wyclif)
[23:55:02] *** Joins: heco (~redrum@user/redrum88)
[23:55:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[23:56:29] *** Quits: slavfox (~slavfox@93.158.232.111) (Remote host closed the connection)
[23:57:13] *** Joins: Thanatos (~Thanatos@165.22.184.59)
[23:57:48] *** Quits: Thanatos (~Thanatos@165.22.184.59) (Remote host closed the connection)
[23:57:50] *** Joins: slavfox (~slavfox@93.158.232.111)
[23:58:02] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[23:59:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
