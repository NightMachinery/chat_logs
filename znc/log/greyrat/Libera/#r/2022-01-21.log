[00:04:01] <Bayes> confuzeus yep, it's okay cause it's non-parametric so technically speaking you have infinitely many parameters as n increases
[00:04:20] <Bayes> fendur yep that was related with my earlier comment, I didn't try it with 10k but it should be okay
[00:04:47] <Bayes> as with anything we do, is an approximation to a full log lik but it's supposed to work ok in many settings
[00:05:08] <Bayes> aaand it's an approximation you can also use for bayesian inference
[00:05:31] <Bayes> aaaand given the approximation in the loglik, the model is still an exact model
[00:06:02] <Bayes> which is the kind of issue you gotta deal with if you go the vb route IIUC
[00:26:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:44:48] <mefistofeles> https://github.com/rmcelreath/stat_rethinking_2022 interesting
[01:00:17] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (Quit: Leaving)
[01:04:17] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[01:26:02] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:30:17] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:55:29] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[01:57:53] <Bayes> yeah I saw about it last week or so in hn
[03:16:11] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:46:37] *** Quits: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com) (Ping timeout: 240 seconds)
[04:13:29] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[04:18:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:23:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:41:21] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:00:20] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:c888:576e:95d3:5aca)
[05:02:01] *** Quits: kmh (~kmh@2a00:6020:5004:6800:1743:f411:8593:8ada) (Ping timeout: 268 seconds)
[06:58:57] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[07:00:53] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[10:16:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:20:44] *** Joins: MetricT3 (~MetricT@075-131-120-170.res.spectrum.com)
[10:22:32] *** Quits: MetricT2 (~MetricT@2600:6c5d:4500:af86:ed53:b108:c9ad:7456) (Ping timeout: 240 seconds)
[10:38:06] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[10:42:14] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[10:43:55] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[10:50:02] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[10:50:08] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 256 seconds)
[10:53:23] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[11:17:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:18:16] *** Joins: Vojtaeus (~vojta@user/vojtaeus)
[11:31:31] *** Joins: palasso (~palasso@user/palasso)
[11:38:07] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 256 seconds)
[11:59:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:24:31] *** Joins: sebatron (~sebatron@f250189.upc-f.chello.nl)
[12:24:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:25:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi)
[12:40:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:42:21] *** Quits: theruran (uid11305@id-11305.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:03:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi)
[13:04:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df083-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:16:54] *** Quits: BinarySavior_ (~BinarySav@josh.vet) (Ping timeout: 256 seconds)
[13:18:15] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[13:44:18] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[13:53:14] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[13:59:52] *** Joins: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com)
[14:40:46] <CuriousErnestBro> Error in d[1:(n - i), k] : invalid subscript type 'closure'
[14:40:53] <CuriousErnestBro> how can I subscript correctly?
[14:58:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:14:12] *** Quits: sebatron (~sebatron@f250189.upc-f.chello.nl) (Ping timeout: 256 seconds)
[15:15:32] <fendur> CuriousErnestBro: make sure you know what n i and k really are
[15:16:07] <CuriousErnestBro> got it
[15:16:31] <CuriousErnestBro> k was also a function but R picks the function out of the outer scope instead of the variable 
[15:16:41] <CuriousErnestBro> well, I was using it both ways so I get why...
[15:50:04] <fendur> cool
[16:04:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:07:42] *** Joins: sebatron (~sebatron@f250189.upc-f.chello.nl)
[16:09:41] *** Parts: sebatron (~sebatron@f250189.upc-f.chello.nl) ()
[16:48:52] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:11:23] <Bayes> also: `seq(n-i)` vs `1:(n - i)`
[17:12:16] <Bayes> also, if you're doing this over k, in some application you can do `apply(d, 2, head, n-i)`
[17:13:14] <CuriousErnestBro> Bayes ive been using seq.int thruout my code 
[17:13:34] <Bayes> there are so many ways
[17:13:48] <Bayes> in most cases it's the same \pm personal preference
[17:14:06] <CuriousErnestBro> (1 + i):n becomes seq.int(from = 1 + i, to = n)?
[17:14:15] <Bayes> unless you get into weird situations such as... i being ill defined or changing d from one object type from other
[17:15:00] <Bayes> yeah, also `tail(seq(n), -i - 1)`
[17:15:30] <Bayes> ah also, in some cases you can get "nicer" expressions by removing the first (1+i) rows
[17:15:48] <Bayes> d[-seq(1+i), k]
[17:15:53] <Bayes> or things like that
[17:16:01] <CuriousErnestBro> ehh that's less. reasible imo
[17:16:14] <CuriousErnestBro> readible
[17:16:18] <CuriousErnestBro> readable?
[17:16:33] <Bayes> depends, I do that when I have a block matrix
[17:16:50] <CuriousErnestBro> btw
[17:16:52] <Bayes> especially 2x2, you compute indices once and then work with "this rows" and "all but this rows"
[17:16:53] <CuriousErnestBro> ive found applying a function to two matrices is much slower than nesting mapply 2 times
[17:17:17] <Bayes> mew?
[17:17:18] <Bayes> eh
[17:17:20] <Bayes> mwe
[17:17:25] <CuriousErnestBro> mwe?
[17:17:32] <Bayes> minimal working example
[17:17:40] <Bayes> if you can be bothered
[17:27:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[17:33:40] <CuriousErnestBro> working on ti
[17:36:50] <CuriousErnestBro> Bayes https://bpa.st/S3KA
[17:36:51] <CuriousErnestBro> makes my R crash
[17:37:36] <Bayes> CuriousErnestBro lemme try it
[17:38:30] <Bayes> I set n <- 20; m <- 10 to try it
[17:38:37] <Bayes> slow doesn't seem to work for me
[17:38:37] <Bayes> Error in dim(robj) <- c(dX, dY) :
[17:38:38] <Bayes>   dims [product 200] do not match the length of object [40000]
[17:38:50] <CuriousErnestBro> yeah i get the same
[17:40:48] <Bayes> hm
[17:42:38] <Bayes> yeah idk
[17:42:40] <Bayes> interesting
[17:45:08] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[17:45:28] <Bayes> mh
[18:01:26] <CuriousErnestBro> yeah indexing by matrix doesn't do what I think it does
[18:01:29] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[18:02:16] <fendur> i feel like that's not what mapply is for. but i also don't completely understand the goal
[18:03:27] <Bayes> yep
[18:03:46] <Bayes> I'm not even sure that the outer and mapply concepts are the same
[18:03:56] <fendur> mapply(func(a,b,c) { do stuff with corresponding elements of a,b,c }, A, B, C);  where A, B, C, are the lists of data
[18:04:04] <fendur> just to repeat from yesterday (or whatever day)
[18:04:27] <fendur> A, B, C are lists or vectors of data
[18:05:00] <fendur> just like lapply, except multiple inputs taken in parallel
[18:05:10] <Bayes> mapply: func(a[1],b[1],c[1]), func(a[2],b[2],c[2]), ..., func(a[n],b[n],c[n])
[18:05:21] <fendur> yes
[18:05:43] <Bayes> outer: for (i in 1:n) for (j in 1:n) func(a[i], b[j])
[18:06:08] <Bayes> ie, outer will run your function for every combination of a and b
[18:06:40] <Bayes> while mapply will call your function for a[i] and b[i]
[18:06:43] <fendur> where a could = b
[18:07:07] <Bayes> outer is closely related to expand grid, mapply is all about vectorization
[18:09:29] <Bayes> CuriousErnestBro play around with these two lines, this should help you visualize the difference between mapply and outer
[18:09:37] <Bayes> `mapply(paste0, month.abb, 1:30); outer(month.abb, 1:30, paste0)`
[18:14:40] <Bayes> so we call this "an isotropic exponential kernel", but then the function name is `exponential_isotropic` hm
[18:21:57] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[18:22:05] <CuriousErnestBro> Bayes i figured it out
[18:22:25] <CuriousErnestBro> gamma.hats <- .mapply(gamma.hat, list(row.idx, col.idx), MoreArgs = NULL) |> unlist() |> array(dim(col.idx)) 
[18:24:14] <fendur> what is gamma.hat?
[18:25:56] <CuriousErnestBro> my function
[18:26:11] <CuriousErnestBro> the docs said to use the dot version of mapply
[18:26:24] <fendur> (i+j)^x[i,j] ?
[18:26:50] <CuriousErnestBro> that was the mwe
[18:27:10] <fendur> what's the real function?
[18:27:34] <CuriousErnestBro> gamma.hat <-
[18:27:34] <CuriousErnestBro>     function(i, k) {
[18:27:34] <CuriousErnestBro>       1 / n * crossprod(d[seq.int(n - i), k] - d.bar[k], d[seq.int(1 + i, n), k] - d.bar[k])
[18:27:34] <CuriousErnestBro>     }
[18:27:48] <CuriousErnestBro> d is my data, d.bar are the column means
[18:28:05] <fendur> shouldn't d be an input to the function?
[18:28:47] <fendur> and perhaps also d.bar
[18:28:48] <CuriousErnestBro> it's in scope for the upper function
[18:28:49] <CuriousErnestBro> d doesn't change so i made it this way
[18:44:43] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:03:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:04:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[19:11:22] *** Joins: fltrz (~ik@94.105.125.89.dyn.edpnet.net)
[19:14:55] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Quit: Leaving)
[19:15:35] <fltrz> I used sample.split from caTools to split a simple dataset into a training_- and test_set. The online notes then use the scale function on both separately. On first sight this seems wrong: I fear training and test will have different scalings. Where in the docs can I find stated what the scale() function used say the whole dataset for determining identical scale parameters for the train and test set?
[19:16:17] <fltrz> i.e. it feels like its "helpfully" doing the right thing without telling me, and I suffer pro-noia as much as paranoia
[19:35:14] <fendur> yeah it seems weird to me. irl, they'd be on the same scale
[19:35:49] <fendur> though, often, and unfortunately, the observed data gets rescaled and new data is similarly rescaled upon receipt, which is also weird.
[19:37:05] <fendur> er, on the same scale and centered on the same mean
[19:37:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[19:40:15] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[19:45:59] <fltrz> fendur: I just tested it manually by entering 1's and 2's in a column (10 rows) and manually recomputed. There is nothing going on under the hood, its the ML course that is wrong...
[19:47:05] <fltrz> scale only looks at the values in the parameter it received without automagically understanding its a subset of the dataset. so the ML course is incorrectly rescaling the training and test sets separately.
[19:47:51] <fltrz> In the online course we are recommended to chat with the chat bot and or post Q&A questions. I am starting to think they intentionally put in mistakes to headhunt critical thinkers
[20:10:01] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[20:13:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:57] *** Quits: Vojtaeus (~vojta@user/vojtaeus) (Quit: Odcházím...)
[20:38:03] <Bayes> re: fendur asking "shouldn't d be an input to the function?"
[20:38:30] <Bayes> that's a question I ask myself many times and I can never decide
[20:39:48] <Bayes> you need to reduce a function of multiple arguments to a few arguments, or possibly one, to plug it into some Map/apply-like function
[20:41:30] <Bayes> (i) pass all additional, non-varying arguments to Map/apply and have a large Map/apply call; (ii) create an anonymous function in your Map/apply call, (iii) define a function that reads stuff from outside it's scope, (iv) create a curry-like function factory that you'll use once ¯\_(ツ)_/¯
[20:42:14] <Bayes> they all seem not so nice to me but I couldn't figure out anything nicer so I end up picking the least evil based on my current mood
[21:50:04] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:04:17] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 240 seconds)
[22:05:21] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:16:22] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 256 seconds)
[22:28:10] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:38:58] *** Joins: theruran (uid11305@id-11305.hampstead.irccloud.com)
[22:51:07] *** Quits: nvuafo (~usrnvuafo@user/nvuafo) (Remote host closed the connection)
[22:51:22] *** Joins: nvuafo (~usrnvuafo@user/nvuafo)
[23:31:48] *** Quits: dustinm`_ (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[23:42:33] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
