[00:00:17] *** Joins: dre (~dre@2001:8003:c932:c301:154c:d733:7b9b:7bcb)
[00:03:00] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[00:04:16] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[00:21:06] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[00:43:28] <CrowX-> I would like to fetch a remote file using requests.get with stream=True, and return it using StreamingHttpResponse. What do I feed StreamingHttpResponse? The response.raw? Or something else?
[00:52:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:53:23] <FunkyBob> CrowX-: doesn't it offer you a file-like ?
[00:55:04] *** Joins: fikran (~fikran@user/fikran)
[00:58:00] <CrowX-> FunkyBob, I'm not sure what you mean, but I am currently feeding it with (chunk for chunk in r.iter_content(1024))
[00:59:02] <FunkyBob> CrowX-: requests response objects have an option to provide you with a file-like object
[00:59:13] <FunkyBob> which StreamingHTTPResponse can consume, iirc
[01:00:12] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: Textual IRC Client: www.textualapp.com)
[01:02:12] <CrowX-> FunkyBob, do you know how to get the file-like object from response? I can't seem to find anything about it online
[01:06:06] <FunkyBob> seems response.raw is it
[01:06:11] <FunkyBob> https://docs.python-requests.org/en/latest/api/#requests.Response.raw
[01:07:10] <clydez> can't find dpaste.de ?
[01:07:25] <clydez> seems to be offline here
[01:07:25] <FunkyBob> clydez: dpaste.com
[01:07:36] <clydez> oh ok thanks
[01:09:24] <FunkyBob> need to get someone to update the topic
[01:22:48] <CrowX-> FunkyBob, but if you access response.raw, you're going to read the whole response at once, right?
[01:23:20] <FunkyBob> why do you say that?
[01:23:37] <FunkyBob> is that how file objects normally work for you?
[01:26:55] <CrowX-> FunkyBob, I guess I should have formulated the question differently. Is it not going to read the whole response at once?
[01:28:15] <FunkyBob> no
[01:29:05] <CrowX-> FunkyBob, cool, thanks. Also, would there be a significant speed difference between loading response.raw vs (chunk for chunk in r.iter_content(1024)) to StreamingHttpResponse?
[01:29:19] <CrowX-> r.raw I mean.
[01:30:11] <CrowX-> i.e. do I gain anything speed-wise by using response.raw?
[01:32:47] <FunkyBob> possibly
[01:33:06] <FunkyBob> it may pass the file-like object all the way thruogh to your WSGI/ASGI layert... so it could end up running in C land
[01:55:49] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:56:06] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[02:03:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:43] *** Quits: PomeloEU (~PomeloEU@ip26-2-214-87.adsl2.static.versatel.nl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:13:15] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[02:15:08] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[02:15:27] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:22:09] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Read error: Connection reset by peer)
[02:22:50] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[02:39:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:49:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:52:31] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:54:45] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[02:57:57] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:58:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:58:32] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[02:59:31] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[03:02:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:04:25] *** Joins: fikran (~fikran@user/fikran)
[03:28:15] *** Joins: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net)
[03:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:45:14] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:50:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:50:40] *** audiobirb is now known as audiocat
[03:58:44] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:00:46] *** Quits: CrowX- (~CrowX-@185.167.46.134) (Remote host closed the connection)
[04:07:46] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[04:15:27] <hackedhead> jfoster: so far, the answer has been "be very, very careful"  =[
[04:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:23:30] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Quit: beastDiv1)
[04:23:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[04:24:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:25] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[04:25:44] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[04:26:02] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[04:32:18] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979)
[04:34:29] <beastDivision> so when i run manage.py test, it fails, and i ran it with -v3 so I know which migration it is failing on, but I don't know exactly why it is failing, or what I need to do to fix it. I think it's an issue with the length of one of the model choice fields, but yeah, any idea on how to debug this further or resolve something like this? https://dpaste.org/V2jx running django 3.2, python 3.10, postgres
[04:34:31] <beastDivision> 12
[04:35:32] <dre> beastDivision, what does the model look like?
[04:35:47] <dre> you've got a max_length=2  and trying to put larger value in it
[04:36:04] <FunkyBob> beastDivision: the value you're trying to save into the field is too long
[04:36:20] <dre> sup FunkyBob top of the morn' to ye
[04:37:24] <FunkyBob> morning, dre
[04:37:48] <FunkyBob> beastDivision: which model has CharField(length=2) in its field?
[04:37:55] <FunkyBob> fields
[04:38:57] <FunkyBob> beastDivision: ?
[04:40:58] *** Joins: pepper (~pepper@user/pepper)
[04:41:29] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[04:43:11] <beastDivision> FunkyBob: sorry I was reading the code trying to figure out what is relevant to paste, cause there is like 24 migrations and stuff
[04:43:55] <beastDivision> I think I see the issue though, I need to add a data migration where i change the value, I must have done it manually or something originally
[04:51:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:54:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:54:27] *** Joins: pembo13 (~pembo13@47.196.95.206)
[04:55:50] *** nedbat_ is now known as nedbat
[04:56:33] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 268 seconds)
[05:00:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[05:01:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:03:28] *** Joins: blag (~blag@071-094-056-144.res.spectrum.com)
[05:08:46] *** Joins: ST47 (~ST47@wikimedia/st47)
[05:10:27] <beastDivision> okay yeah, I figured it out. thanks, there was a missing data migration that needed to be ran before I reduced the length to 2
[05:10:35] <beastDivision> thanks for the help
[05:11:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:13:46] *** Joins: fikran (~fikran@user/fikran)
[05:20:08] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:49] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:32:42] *** Joins: thanhnl0697 (~thanhnl06@14.161.0.53)
[05:38:37] <beastDivision> can I use MyModel.objects.get() inside of a .get_or_create() for a foriegn key field?
[05:45:38] *** Joins: rje (~textual@50.35.241.164)
[05:46:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:50:25] <PaulWay[w]> Not sure how you're expecting to use that beastDivision
[05:56:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:04:25] *** Quits: captain_morgan (~morgan@oit.cloud) (Remote host closed the connection)
[06:04:47] *** Joins: captain_morgan (~morgan@oit.cloud)
[06:13:05] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:26:17] *** Quits: thanhnl0697 (~thanhnl06@14.161.0.53) (Quit: Client closed)
[06:33:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:34:18] *** Quits: audiocat (~audio@user/audio) (Read error: Connection reset by peer)
[06:35:17] *** Joins: audiocat (~audio@user/audio)
[06:39:17] *** Quits: rje (~textual@50.35.241.164) (Read error: Connection reset by peer)
[06:39:34] *** Joins: rje (~textual@50.35.241.164)
[07:08:16] *** Quits: pembo13 (~pembo13@47.196.95.206) (Quit: Leaving)
[07:20:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:23:07] *** Joins: fikran (~fikran@user/fikran)
[07:34:37] <Guest07> Hi this sounds a bit strange but is it possible in forms.py to make a <label> Label </label> <div id="card-element"></div> ?
[07:35:17] <Guest07> Stripe uses a div as an iframe for the charfield
[07:36:28] <Guest07> or is the template the only way to make a div and not forms.py?
[07:40:45] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:44:48] <FunkyBob> Guest07: you can specify templates per field, also
[07:45:38] <FunkyBob> and for the form : https://docs.djangoproject.com/en/4.0/ref/forms/api/#template-name
[07:46:33] <dre> Can the django.core.paginator.Paginator class paginate any list of data? or is it just reliant on Models / QS ?
[07:46:35] <Guest07> Oh a django 4 thing interesting which is why I have not heard about it
[07:47:04] <Guest07> So you mean you can have an entire template html file specifically just for 1 field?
[07:47:11] <FunkyBob> Guest07: the per-field template support was in before django 4
[07:47:22] <FunkyBob> Guest07: yes... and django does already
[07:47:41] <FunkyBob> https://github.com/django/django/tree/main/django/forms/templates/django/forms
[07:49:57] *** Joins: shangxiao (~davids@101.165.198.94)
[07:50:57] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[07:51:07] <Guest07> Holy smokes batman! That is amazing lol.
[07:51:28] <FunkyBob> pretty much obviates the need for the form field support in django-sniplates
[07:51:39] <shangxiao> hey folks any recommendations for a list of nationalities & languages to be stored in model & edited with a form?
[07:52:31] <FunkyBob> shangxiao: not just supported language/i18n codes?
[07:53:28] <dre> https://dpaste.org/Ysof#L34,35 -- If I was to set up a Pagination class on this list of mismatches; the pagination will actually re-run the POST form won't it? if Line 32 takes a long time, then scrolling through the table would also take a long time.
[07:53:29] <shangxiao> FunkyBob: yep so it's anecdotal
[07:53:42] <dre> actually I think I want to do a js table anyway.
[07:54:35] <Guest07> So for example, if you have payment.html with a ton of form fields but then you have another file like card.html with just the div tag, can you combine payment.html and card.html together with all the fields + the div?
[07:55:38] <FunkyBob> Guest07: you can control how {{ form }} renders by specifying templates for the form, as well as for each field
[07:55:53] <Guest07> If I recall, I think I was able to do something with a custom bootstrap textbox one time and combined that.
[07:55:58] <FunkyBob> Guest07: you could define the template + custom widget for the stripe payment whatever... and reuse it where needed
[07:56:30] <FunkyBob> (the custom widget is ONLY needed to specify the template name...)
[07:57:05] <Guest07> I see I guess I did it at one point because now it sounds familiar I just didn't understand it at a logical level at the time
[07:57:26] <Guest07> thank you
[07:57:33] <FunkyBob> you've always been able to iterate the form and render each field individually
[07:57:43] <FunkyBob> but now you can specify templates for the various levels,
[07:57:44] <Guest07> yes makes sense
[07:58:23] <FunkyBob> in your page template, you can still "just" use {{ form }} or {{ form.as_p }} or what have you
[08:06:43] <PaulWay[w]> A question about Django's test suite: I've got a bunch of tests in a test case class, and I want to run the same tests with a different set of fixtures to see if they still work.  Is there an easy way to do that?
[08:07:02] <PaulWay[w]> Or is that going to be a case of subclassing the original test case class and changing the fixtures declaration?
[08:07:06] <PaulWay[w]> I suppose that's relatively easy...
[08:09:32] *** Quits: sreve (~quassel@p4ff44ea0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:10:01] *** Joins: sreve (~quassel@p549d70a6.dip0.t-ipconnect.de)
[08:29:22] <PaulWay[w]> I suppose the tests that aren't really relevant or I want to skip I can just override and pass in the subclass.
[08:30:05] *** Quits: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:36:26] *** Quits: shangxiao (~davids@101.165.198.94) (Quit: WeeChat 3.4)
[08:37:53] *** Quits: defjam (~eb0t@90.203.120.248) (Read error: Connection reset by peer)
[08:43:42] *** Joins: defjam (~eb0t@90.209.247.249)
[08:46:18] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Quit: Leaving...)
[08:52:49] <blag> Please forgive my dumb question, but how "smart" is OuterRef? Would something like this work: OuterRef('problem__problem_set__id') ?
[08:59:05] *** Quits: cs (~ovnicraft@186.70.222.62) (Read error: Connection reset by peer)
[09:05:47] *** Joins: xkuru (~xkuru@user/xkuru)
[09:22:13] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:30:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:32:28] *** Joins: fikran (~fikran@user/fikran)
[09:35:25] <blag> Answering my own question here, OuterRef behaves like an F expression with late binding, so it is possible to query through relationships like in my example. However, other errors can cause error messages that make it look like OuterRef is not referring to the right thing, and that's what was tripping me up.
[09:36:26] <blag> Oh, and you can nest OuterRef's if you have nested Subquery's, which is neat.
[09:42:10] *** Joins: ovnicraft (~ovnicraft@186.70.222.62)
[09:45:02] *** Quits: jfoster (~textual@user/jfoster) (Ping timeout: 240 seconds)
[09:51:16] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979) (Ping timeout: 250 seconds)
[09:53:58] *** Joins: cliluw (~cliluw@47.147.73.223)
[09:57:27] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:58:22] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:08:51] *** Joins: mattil (~mattil@d5hyc-gn1f5kxgc6ypy-4.rev.dnainternet.fi)
[10:10:00] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:10:14] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[10:14:08] *** Quits: mattil (~mattil@d5hyc-gn1f5kxgc6ypy-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[10:16:45] <serafeim> hello friends
[10:21:06] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[10:21:23] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[10:26:10] <dre> hey serafeim
[10:48:20] *** Quits: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[10:49:32] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[10:54:50] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[10:57:42] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[10:58:03] *** Joins: VaniaPy (~VaniaPy@46.12.65.88.dsl.dyn.forthnet.gr)
[10:59:40] *** Joins: cyphase (~cyphase@user/cyphase)
[11:14:24] *** Joins: mrwick (~mrwick@user/mrwick)
[11:15:45] *** Joins: slav0nic (slav0nic@python.su)
[11:17:40] *** Quits: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net) (Remote host closed the connection)
[11:40:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:41:49] *** Joins: fikran (~fikran@user/fikran)
[11:52:21] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:06:40] *** Joins: pycode (~pycode3@2001:b07:5d28:551:b749:d1fc:f160:1a98)
[12:07:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:08:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:14:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:14:14] <VaniaPy> Hello,i'm trying to apply migrations for a new app that i added to my project and i can't
[12:14:21] <VaniaPy> i deleted the db
[12:14:32] <VaniaPy> and the migrations of all the apps
[12:14:36] <VaniaPy> and still no result
[12:14:43] <VaniaPy> is there an alternative solution?
[12:15:15] <VaniaPy> as i remember in django < 2.0 there was a comand python manage.py syncdb
[12:15:19] <VaniaPy> or something like that
[12:16:32] *** Quits: gitly2 (~gitly@148.252.128.242) (Ping timeout: 240 seconds)
[12:18:49] *** Joins: gitly2 (~gitly@85.255.233.145)
[12:23:08] *** Joins: sandeepk (~sandeepk@223.130.30.239)
[12:25:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:25:59] *** ChanServ sets mode: +v EvilDMP
[12:43:00] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:45:12] <VaniaPy> lot of psychological problems in that drf...
[12:53:52] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:55:00] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 250 seconds)
[12:57:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:58:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:58:32] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:59:23] *** Joins: sandeep (~sandeepk@223.130.30.103)
[13:00:37] *** Quits: sandeepk (~sandeepk@223.130.30.239) (Ping timeout: 240 seconds)
[13:02:32] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:03:16] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[13:05:29] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:07:01] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[13:09:18] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[13:09:47] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[13:15:24] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:18:05] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[13:19:56] <k_sze> I just had an acquaintance trying to argue with me that Django is not useful nowadays because it can't do React server-side rendering.
[13:20:44] <serafeim> lol
[13:21:10] <serafeim> actually that's the main usefulness of django. that it doesn't need the node.js crap to work
[13:21:46] <k_sze> My feeling is that Node.js is literally good for nothing else.
[13:22:04] <k_sze> If I *really* want React SSR, I somehow let Django call out to Node.js *just* for the React SSR.
[13:22:06] <serafeim> node.js is good for nothing
[13:23:26] <k_sze> Yeah, I hate everybody who harps on Node.js. Weird async programming model, utterly useless "standard library" ("We have a Set class, but it doesn't support any useful set operation").
[13:23:55] <serafeim> the whole node.js ecosystem is total crap
[13:25:06] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[13:28:11] *** Joins: thanhnl0697 (~thanhnl06@14.161.0.53)
[13:28:29] *** Quits: VaniaPy (~VaniaPy@46.12.65.88.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[13:34:37] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:44:05] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[13:45:00] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[13:47:15] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[13:49:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:51:10] *** Joins: fikran (~fikran@user/fikran)
[14:01:35] *** Quits: blag (~blag@071-094-056-144.res.spectrum.com) (Ping timeout: 256 seconds)
[14:02:24] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:40:18] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[14:43:01] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Read error: Connection reset by peer)
[14:43:07] *** Joins: brsc2910 (~Thunderbi@109.255.244.60)
[14:45:25] *** brsc2910 is now known as brsc2909
[14:49:44] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:53:03] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[14:57:29] *** Joins: rusrushal13 (~rusrushal@2409:4056:193:1b10:a38a:9a8:8f21:e6f1)
[15:00:11] *** Joins: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29)
[15:05:05] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:08:26] *** Quits: thanhnl0697 (~thanhnl06@14.161.0.53) (Quit: Client closed)
[15:16:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:b749:d1fc:f160:1a98) (Ping timeout: 240 seconds)
[15:20:10] *** Quits: dre (~dre@2001:8003:c932:c301:154c:d733:7b9b:7bcb) (Ping timeout: 250 seconds)
[15:32:02] *** Joins: dre (~dre@2001:8003:c932:c301:6ef3:5315:93ef:2b0a)
[15:43:17] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[15:51:26] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e711:dd4:a517:3ae1)
[15:58:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:00:31] *** Joins: fikran (~fikran@user/fikran)
[16:20:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e711:dd4:a517:3ae1) (Ping timeout: 250 seconds)
[16:25:25] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:28:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:29:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[16:31:45] *** Joins: carloratm (carloratm@tilde.club)
[16:38:55] <carloratm> hi all, I have a templatetag that looks like this {% f param1 request.user %}
[16:39:20] <carloratm> is it possible to assign that value in a with block?
[16:42:25] <serafeim> doesn't `{% f param1 request.user as foo %}` work ?
[16:43:54] <carloratm> serafeim: yes, thank you
[16:44:07] <serafeim> cool
[16:55:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Quit: Leaving)
[16:56:37] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:58:43] *** Joins: augusto (~augusto@187.72.242.56)
[16:59:02] *** Quits: augusto (~augusto@187.72.242.56) (Client Quit)
[16:59:22] *** Joins: augusto (~augusto@187.72.242.56)
[17:01:41] *** Quits: augusto (~augusto@187.72.242.56) (Client Quit)
[17:03:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:05:27] *** Joins: VaniaPy (~VaniaPy@46.12.65.88.dsl.dyn.forthnet.gr)
[17:12:50] *** Quits: dre (~dre@2001:8003:c932:c301:6ef3:5315:93ef:2b0a) (Ping timeout: 250 seconds)
[17:23:45] *** Joins: CrowX- (~CrowX-@185.167.46.134)
[17:25:05] <CrowX-> How large should a response be to justify using StreamingHttpReponse as opposed to HttpResponse?
[17:25:12] *** Joins: pycode (~pycode3@2001:b07:5d28:551:eb25:ad9f:142e:2ae1)
[17:25:33] *** Joins: dre (~dre@2001:8003:c932:c301:5559:1784:a76e:c418)
[17:29:33] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:30:07] *** Quits: rusrushal13 (~rusrushal@2409:4056:193:1b10:a38a:9a8:8f21:e6f1) (Ping timeout: 256 seconds)
[17:34:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[17:42:11] *** Joins: mattil (~mattil@d558lb4g2rj0fsvrbd8-4.rev.dnainternet.fi)
[17:45:59] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[17:46:18] *** Quits: mattil (~mattil@d558lb4g2rj0fsvrbd8-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:53:56] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[17:54:40] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[17:55:03] *** Joins: sleepingsteve (~kvirc@107-179-210-35.cpe.teksavvy.com)
[17:55:28] *** Quits: ovnicraft (~ovnicraft@186.70.222.62) (Quit: Textual IRC Client: www.textualapp.com)
[17:56:42] <k_sze> CrowX-, I don't think size is a direct factor. It depends on how much RAM can be allocated to your python process.
[17:57:06] <CrowX-> k_sze, sure, but what if ram is not an issue? Let's say I have unlimited RAM. Then what?
[17:57:32] <k_sze> The real question is usually whether your response can *logically* be generated completely before sending it off.
[17:59:04] <CrowX-> k_sze, if we ignore the generation of the response and are only interested in what happens after we send it off, would there be an answer to my original question?
[17:59:23] <k_sze> e.g. you can effectively use StreamingHttpResponse to serve a never-ending feed of live temperature readings from some IoT device, just so your client doesn't have to send multiple requests repeatedly. (Not the best example, but you get the idea)
[17:59:58] <sleepingsteve> I have a model with: models.TextField() and then I setup admin page for it. In the display I am trying to allow hyperlinking. <a href=" but it always displays as text. I tried mark_safe but no luck.
[18:02:59] <k_sze> CrowX-, the WSGI/ASGI, reverse proxy, load balancer, etc are all supposed to be able to get the response from the Django process in chunks and send them in chunks. So as long as you have enough RAM and it doesn't take too long to generate the whole response, there's no need to use StreamingHttpResponse.
[18:04:59] <k_sze> So what you really need to find out is: 1. how much RAM do you have? 2. how impatient are your client, application gateway, reverse proxy, load balancer etc regarding the reception of the response.
[18:05:30] <CrowX-> k_sze, who determines the size of the chunks?
[18:06:10] <k_sze> CrowX-, each of those components have their own ideas, some might be configurable, some might not be.
[18:06:14] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:07:28] <k_sze> e.g. If you have enough RAM, but it take too long to generate the whole response such that the load balancer loses patience and times out, then you might want to try using StreamingHttpResponse.
[18:07:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:08:21] <CrowX-> k_sze, if I am to feed a StreamingHttpResponse object with a chunked response (some generator function), would it make a difference of the size of the chunks I use (again, ignoring the part that builds the response)?
[18:09:52] *** Joins: fikran (~fikran@user/fikran)
[18:10:54] <k_sze> Not *really*. If my understanding is correct, the response is *pulled* from StreamHttpResponse, not *pushed* through. e.g. if the load balancer in front has its buffer full and is not ready yet, no more response will be pulled from your StreamHttpResponse, and your response generator won't yield.
[18:14:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[18:18:43] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[18:19:02] <k_sze> CrowX-, depending on a few factors, your clients might get smoother or rougher response timings as the response is consumed from StreamingHttpResponse: for instance: 1) how many layers of application gateway/load balancer/reverse proxy there are between the client and your app; 2) how large are the buffers of each of those layers; 3) how large is each chunk from your StreamingHttpResponse.
[18:22:02] <k_sze> And the internet connection speeds of your clients, relative to how fast your app can generate a chunk of response. It might be a full time job for an engineer to optimize these things.
[18:22:48] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:23:35] <k_sze> For now, don't worry about it. If you really want to, and are willing to bear the slightly added complexity, just try StreamHttpResponse with whatever chunk size and see whether it's an improvement.
[18:23:45] *** Quits: b-rex (van@down.by.the.river.lol) (Quit: ZNC 1.8.2 - https://znc.in)
[18:25:00] *** Joins: b-rex (van@down.by.the.river.lol)
[18:27:29] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[18:37:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[18:46:21] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:01:35] <CrowX-> k_sze, yeah, I solved my issue by using chunk sizes of 10M, I was just being curious if there are common practices there that I don't know of.
[19:01:40] <CrowX-> thanks
[19:02:06] *** Quits: sandeep (~sandeepk@223.130.30.103) (Ping timeout: 256 seconds)
[19:08:43] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[19:13:32] *** Quits: dre (~dre@2001:8003:c932:c301:5559:1784:a76e:c418) (Ping timeout: 240 seconds)
[19:21:05] *** Quits: sleepingsteve (~kvirc@107-179-210-35.cpe.teksavvy.com) (Read error: Connection reset by peer)
[19:22:42] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:25:48] *** Joins: dre (~dre@2001:8003:c932:c301:f51b:a6a3:7655:7551)
[19:31:34] *** Joins: beuys (~beuys@user/beuys)
[19:31:39] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[19:43:03] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[19:52:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:55:54] *** Joins: jfoster (~textual@user/jfoster)
[19:56:54] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:57:18] *** Joins: rje (~textual@50.35.241.164)
[20:05:57] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[20:17:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:19:13] *** Joins: fikran (~fikran@user/fikran)
[20:21:41] <pycode> hello pardon for asking i have noticed that i often use a code that create a queryset and then i use read_frame to create a pandas dataframe, no i would like to put such code in somewhere without copying the code everywhere, i use the Price model, so the questions are
[20:21:47] <pycode> 1. should i put that code inside the Price model
[20:21:55] <pycode> 2. should i put that coide inside the manager of the price model
[20:22:14] <pycode> for the last one i few doubt because a manager should return a queryset not a pandars dataframe
[20:22:30] <pycode> so i suppose creating a "static" method inside the Price model could be good
[20:25:47] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[20:26:36] <GinFuyou> No, manager methods are not required to return queryset, many don't
[20:27:05] <GinFuyou> So it depends on use-case, do you apply it on model, list of models, queryset, etc
[20:27:18] <GinFuyou> But no hard rules I guess
[20:29:15] <pycode> GinFuyou, i apply it on a queryset
[20:29:23] <pycode> becvause read_Frame requires the queryset as parameter
[20:29:34] <pycode> so i do filter etc...and pass the queryset and then get back the pandas dataframe
[20:30:05] <GinFuyou> then queryset method sounds fine? Just make a good name that avoid confussion and you are fine
[20:33:35] <pycode> GinFuyou, i have a custom manager that i have assigned to "objects" inside my model
[20:33:53] <pycode> so i can put a method there that get a queryset as input and convert it into dataframe
[20:34:31] <GinFuyou> I usually use QuerySet.as_manager() but there should be no fundamental differences
[20:39:07] *** Joins: ST47 (~ST47@wikimedia/st47)
[20:41:23] <pycode> yeah i did the same objects = PriceQuerySet.as_manager()
[20:41:43] <pycode> but now if i do Price.objects.filter(foo=1).get_dataframe()
[20:41:51] <pycode> or something like that
[20:42:10] <pycode> i do not know why i thought that a manager should always returns queryset
[20:42:45] <pycode> it takes a queryset as parameter. or better.. .the "self" is the queryset inside the PriceQuerySet class i just wrote
[20:43:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:43:37] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:48:56] <pycode> GinFuyou, i just have to remember that i cannot chain other queryset call after to_dataframe so i think "to_dataframe" could be a good name :)
[20:52:36] *** Joins: cyphase (~cyphase@user/cyphase)
[20:52:50] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[20:53:10] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[20:55:00] <GinFuyou> sounds reasonable
[20:56:04] *** Joins: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net)
[20:58:16] <pycode> ok
[20:58:17] <pycode> thanks!
[21:01:40] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[21:02:15] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[21:03:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:06:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:06:52] *** ChanServ sets mode: +v EvilDMP
[21:07:01] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:10:18] *** Quits: dre (~dre@2001:8003:c932:c301:f51b:a6a3:7655:7551) (Ping timeout: 250 seconds)
[21:14:44] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:21:59] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[21:22:30] *** Joins: dre (~dre@2001:8003:c932:c301:ce6d:d9b0:21ac:1ee2)
[21:22:36] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[21:24:29] *** Joins: PomeloEU (~PomeloEU@ip26-2-214-87.adsl2.static.versatel.nl)
[21:28:40] *** Quits: VaniaPy (~VaniaPy@46.12.65.88.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:32:37] *** Joins: sandeep (~sandeepk@223.130.30.103)
[21:32:45] *** Quits: sandeep (~sandeepk@223.130.30.103) (Remote host closed the connection)
[21:40:00] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:40:21] *** Joins: rje (~textual@65.141.156.170)
[21:41:27] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:45:25] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[21:46:37] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[21:48:54] <jfoster> Is it appropriate to ask for professional introductions or job referrals in this channel? I have only used it to ask and provide answers to Django questions.
[21:49:54] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[21:51:31] *** Quits: rje (~textual@65.141.156.170) (Quit: Textual IRC Client: www.textualapp.com)
[21:53:57] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[22:02:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:12:30] *** Quits: carom (~carom@143.198.135.106) (Ping timeout: 256 seconds)
[22:12:48] *** Joins: carom (~carom@143.198.135.106)
[22:17:22] <pycode> is th3re a kind of create_or_update ?
[22:17:43] <pycode> update_or_create
[22:17:45] <pycode> nevermind
[22:26:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:28:34] *** Joins: fikran (~fikran@user/fikran)
[22:33:10] <pycode> is it possible to run postgres VACUUM somehow in django?
[22:35:22] <moldy> pycode: i don't think django has explicit support for that, but you can always run SQL from a cronjob or such
[22:35:49] <pycode> ok
[22:35:58] <pycode> yes i think cronjob is better
[22:35:59] <pycode> thanks
[22:58:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:eb25:ad9f:142e:2ae1) (Ping timeout: 240 seconds)
[22:58:37] *** Quits: jfoster (~textual@user/jfoster) (Ping timeout: 240 seconds)
[23:00:08] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[23:09:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:09:41] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[23:16:15] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:18:23] *** Joins: VaniaPy (~VaniaPy@46.12.65.88.dsl.dyn.forthnet.gr)
[23:19:38] *** Joins: jmd (~user@de.cellform.com)
[23:20:48] <beastDivision> does anyone know of good alternatives to celery? I'm specifically looking for something that can be made highly available / fault tolerant, I use celery beat with django, but it has no fault tolerance built in and there are a couple of projects that seemed to try to address this, but they are either now unmaintained or have some critical bugs that remain unresolved because of design decisions for
[23:20:49] <beastDivision> how celery was implemented
[23:23:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:26:18] *** Joins: jmd (~user@de.cellform.com)
[23:27:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:27:13] *** ChanServ sets mode: +v EvilDMP
[23:29:40] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[23:29:57] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[23:30:04] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:38:13] *** Joins: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com)
[23:54:34] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[23:56:30] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[23:59:08] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
