[00:00:56] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Client Quit)
[00:01:14] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:01:18] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[00:01:19] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[00:01:35] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:07:52] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Quit: Leaving)
[00:09:01] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[00:09:24] *** Quits: Tokamak_ (~Tokamak@172.58.191.11) (Ping timeout: 240 seconds)
[00:10:05] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Client Quit)
[00:11:00] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[00:11:14] <Alipha> meator: well, you can limit what goes into a template parameter, either with concepts (c++20) or SFINAE: https://godbolt.org/z/9bGYsdcxa
[00:11:17] <Alipha> !sfinae
[00:11:19] <nolyc> Substitution Failure Is Not An Error. See http://en.wikipedia.org/wiki/SFINAE
[00:12:47] <johnny> qt feels weird to write in the context of C++
[00:13:29] <johnny> Qt is pretty close to C with classes .. it just has more classes
[00:14:10] <johnny> there's gotta be something C++ specific in there though. i'm sure someone could tell me if i cared enough
[00:14:32] <johnny> sometimes it seems like you could write most of qt ala glib
[00:14:39] *** Joins: Tokamak (~Tokamak@166.205.152.51)
[00:20:39] <renopt> eh, qt is pretty old by c++ standards, started well before all of the modern C++ stuff became a thing
[00:21:14] <renopt> it's kinda what old c++ used to look like in a sane codebase
[00:21:44] <rpav> yeah .. qt is heavily c++03
[00:22:05] <johnny> C++03 still had templates and exceptions :)
[00:22:07] <rpav> or 98 because as Alipha? points out there are no substantial changes and it's basically an identical standard?
[00:22:09] <Alipha> CarloWood: oh. nice. you effectively made just a lookup table @ https://godbolt.org/z/qaMfa7MPG (sorry. i didn't get around to actually figuring out what you did until just now)
[00:22:23] <johnny> qt doesn't seem to use either of those
[00:22:38] <johnny> or at least much of those
[00:22:42] <rpav> johnny: no variadic templates and exceptions sucked then (and still aren't nice for non-fatal errors)
[00:23:05] <rpav> variadic templates were a game changer and a critical defining feature of modern c++
[00:23:16] <rpav> it took merely 30 years
[00:23:19] <Alipha> yeah, c++03 was basically just a "bug fix" (the notable thing i know of is that it guaranteed contiguity of std::string and std::vector)
[00:23:22] <rpav> think what we'll have in another 30
[00:23:25] <johnny> lol
[00:23:53] <johnny> well perception has changed for me as somebody newish to C++ rather than you old folks :)
[00:24:04] <Alipha> johnny: c++11 added a lot
[00:24:22] <johnny> that was only 12 years ago :)
[00:24:28] <rpav> c++11 is basically c++ 2.0
[00:24:35] <Alipha> move semantics, smart pointers, variadic templates...
[00:24:36] <rpav> or 3.0 .. maybe 11 is binary
[00:25:34] <johnny> but i was just saying how much Qt feels like C with classes suchthat it's not that different than it would be in the gtk universe
[00:25:43] <rpav> auto, &&, lambdas, constexpr, variadic templates .. and made good in 17 with better constexpr, better range for, structured bindings, and folding .. and better again in 20 with concepts and stuff
[00:25:50] <johnny> and i was hoping somebody could mention something tha's really done in a C++ fashion
[00:26:15] <johnny> as in what actually requires C++
[00:26:20] <rpav> only really my unreleased tiny ui lib
[00:26:41] <johnny> something you couldn't reasonable fashion with glib
[00:26:53] <johnny> reasonably*
[00:27:29] <rpav> e.g. in qlu, you don't subclass and override or connect signals .. some things have lambda callbacks, or you can do like `datamap = {{"/dlg/btn1", &mybool}, {"/dlg/input", &mystring}};`
[00:27:37] <rpav> and then you just read the values from their variables
[00:27:41] <johnny> qlu?
[00:27:46] <johnny> oh your thingy?
[00:27:48] <rpav> yeah
[00:28:13] <johnny> i can read, i promise
[00:28:16] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[00:28:26] <rpav> i wasn't super clear
[00:28:54] <johnny> on that note.. i've seen folks talk about dearimg or whatever it is
[00:28:58] <johnny> imgui
[00:29:07] <rpav> you could do that in C with judicious use of void* and probably a separate `{"/dlg/btn1", &mybool, BOOL_TYPE}`
[00:29:21] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[00:29:30] <johnny> i would assume you'd use some macros to hide that void*
[00:29:41] <rpav> yeah this aims to have the convenience of imgui (e.g. `if(quit) exit()` and pushing a button sets `quit = true`) without the stupidity of typing ui definitions in your code
[00:30:15] <johnny> although i doubt imgui is gonna be very useful if you care about accessbility
[00:30:16] <rpav> johnny: in C++ i have an `any_ptr` which stores type information about what the pointer is, and then checks when the UI file gets loaded and the UI generated
[00:31:21] <johnny> i don' twrite native gui stuff, so i don't need such a thing
[00:31:30] <rpav> UI is a complex thing for reasons that don't really have language solutions; the language end of things is generally pretty simple
[00:31:56] <johnny> sure, but qt isn't just ui though. it's basically a whole standard library
[00:32:09] <rpav> qt is an entire java-style platform
[00:32:19] <rpav> which was a feature 10 years ago, and is less a feature today
[00:32:54] <johnny> indeed, but even so, it's not like an eventloop is even a core part of all oses
[00:33:03] <rpav> "one-stop shop" that works is pretty useful, though "works" doesn't necessarily mean "works really well" ;/
[00:33:05] <johnny> i *think* one could consider it core ot windows
[00:33:28] <johnny> i don't know enought about the windows api, but it seemed like there is a native event loop you can rely on
[00:33:42] <rpav> win32 windows graphical apps have an event callback
[00:33:52] <johnny> but there's no such thing on linx.. maybe there is on osx
[00:34:02] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[00:34:53] <johnny> the funniest thing is that nginx uses/used their poorly performing event loop rather than something that's reasonable on window
[00:34:56] <johnny> on windows*
[00:35:28] <johnny> although that's a c application so i guess not super relevant here
[00:35:57] <johnny> i can say that it's got a real uncanny valley ./configure script
[00:37:07] *** Joins: plastico (~plastico@neomutt/plastico)
[00:38:43] *** Quits: mitch0 (~mitch@84-236-97-135.pool.digikabel.hu) (Ping timeout: 256 seconds)
[00:38:43] *** Quits: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu) (Ping timeout: 256 seconds)
[00:39:54] *** Joins: adeliktas1 (~adeliktas@i59F4D979.versanet.de)
[00:40:23] *** Joins: mitch0 (~mitch@188-143-106-228.pool.digikabel.hu)
[00:40:31] *** Joins: baltazar (~baltazar@188-143-106-228.pool.digikabel.hu)
[00:41:46] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[00:41:47] *** Quits: adeliktas (~adeliktas@i59F4D979.versanet.de) (Quit: Ping timeout (120 seconds))
[00:41:47] *** adeliktas1 is now known as adeliktas
[00:41:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Ping timeout: 260 seconds)
[00:46:46] <rpav> antlr seems neat but like .. java
[00:46:59] *** Quits: mint__ (~mint@85.174.200.135) (Quit: Leaving)
[00:49:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:49:32] *** Joins: mint__ (~mint@85.174.200.135)
[00:52:52] *** Quits: paul424 (~tom@ip-5-172-239-247.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:54:03] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[00:55:02] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:58:08] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Max SendQ exceeded)
[00:58:35] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[01:01:07] *** gentooclimax is now known as climax
[01:01:42] *** Quits: mint__ (~mint@85.174.200.135) (Quit: Leaving)
[01:02:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (copper.libera.chat (Nickname regained by services)))
[01:02:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:10:11] *** Joins: [o (~istupy@2620:0:1003:206:54:765:1f81:a396)
[01:14:28] *** Quits: magla (~gelignite@55d40a33.access.ecotel.net) (Quit: Stay safe!)
[01:17:50] <xisop> I have a text game where i'm constantly rolling dice using some of the basic C++ suites for randomized numbers.. in my game, there are players, there are npc's, there is damage.. all of these things are calculated by dice rolls. I currently use one dice roll for most things, but I've been told to separate them out. What would be a good first step in separating dice rolls out?
[01:18:37] <xisop> To add more information, I randomize items that are left behind on dead NPC's.. so, think of diablo 2's randomized loot system.. or borderlands
[01:19:53] <sprout_> hello people!  I think I need a test-and-set operator to implement a concurrent reference count increment,  does anyone know what primitives C++ provides for that?
[01:21:00] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[01:22:21] <TinoDidriksen> xisop, who said to use separate random sources? And why?
[01:22:52] <antto> a sabotager from the competition
[01:23:19] <xisop> TinoDidriksen: a friend who is more senior in C++ than I. I believe his intention was that someone could abuse other systems in the game to figure out/coerce the randomization routines into a pseudo-known state
[01:23:20] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 272 seconds)
[01:23:30] <xisop> tbh, it's all over my head. but i believe that was his concern
[01:23:43] <Friithian> if you're using a good random source other sources shouldn't change anything
[01:23:56] <Friithian> other sinks*
[01:24:11] <xisop> I'm using xoroshift mostly
[01:24:29] <rpav> i feel like there are probably better ways to cheat than obscurely influencing the prng
[01:24:49] *** Quits: jsbach (~jsbach@2a01:c23:6503:2e00:20af:254d:e8dd:27a0) (Ping timeout: 268 seconds)
[01:24:51] <xisop> sounds liek it's a non issue then
[01:25:19] <rpav> like do your d&d dice rolls really need to have cryptographically-robust randomness, probably not
[01:25:43] <xisop> i'm looking for *random enough*
[01:25:57] <TinoDidriksen> And if it's a single-player game then it doesn't matter at all. People can just use Cheat Engine to fiddle with it.
[01:26:03] <rpav> #define random(...) 4
[01:26:08] <xisop> well no, it's not a single player game
[01:26:18] *** Joins: proller (~p@2a02:6b8:b081:b65d::1:15)
[01:26:18] <xisop> it's a multiplayer text game. a MUD haha
[01:26:38] <TinoDidriksen> So the random source is on a server? Then multiple people would have to coordinate to corrupt the source.
[01:26:58] <antto> don't they have better things to do? ;P~
[01:27:07] <xisop> LOL
[01:29:40] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:30:03] <Friithian> https://stackoverflow.com/a/19666713/10580242 this is a pretty good way of doing randomness over a specific distribution
[01:30:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[01:32:07] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[01:32:09] <xisop> nice
[01:34:13] <xisop> thanks folks
[01:36:32] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:39:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:39:41] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[01:40:14] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[01:43:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:44:42] <sprout_> what is weak exchange supposed to do? https://egel-language.blogspot.com/2022/03/what-is-weak-exchange-supposed-to-do.html
[01:44:44] <sprout_> stuck
[01:45:00] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[01:46:54] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[02:00:03] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8855:cd0a:9b22:ba37)
[02:13:30] *** Joins: markong (~kvirc@213.146.188.203)
[02:15:24] <sprout_> nvm
[02:18:48] <sprout_> I misread std::atomic as a nested namespace instead of a class declaration
[02:18:52] <sprout_> that gives me the third argument I need I think
[02:19:08] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[02:20:02] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:29:50] *** Quits: g0se (~goose@111.199.80.15) (Ping timeout: 272 seconds)
[02:32:41] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:35:37] *** Quits: robod34 (Username@79.113.200.158) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[02:36:10] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[02:39:50] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Client Quit)
[02:40:26] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:43:47] <CarloWood> Hmm, ... remove all element from vector A that are in B without changing the order of the remaining elements in A...
[02:43:53] <CarloWood> all elements*
[02:44:22] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:44:32] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:44:32] *** ChanServ sets mode: +v npaperbot
[02:44:42] <kalven> so, std::remove_if ?
[02:44:42] <CarloWood> Actually - no, it doesn't matter if the order is changed - so I can use erase_if or what is it called...
[02:44:48] <CarloWood> remove_if
[02:45:02] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[02:45:09] <CarloWood> remove_if does change the order kalven, but that is ok.
[02:45:48] <CarloWood> Or am I confused...
[02:45:53] <kalven> it doesn't
[02:46:17] <CarloWood> Then I am confused - what is this idiom called where you swap stuff and then erase the end of the vector?
[02:46:36] <ville> erase-remove?
[02:46:48] <ville> unstable erase?
[02:47:10] <kalven> remove/remove_if just makes sure to move all elements that you're *not* removing to the start of the sequence, it doesn't change the relative order of those elements
[02:47:38] <ville> remove is stable_partition
[02:48:28] <kalven> except it doesn't have care about the stuff on the other side of the partition
[02:49:55] <CarloWood> Hmm yeah - remove_if doesn't remove anything; so it uses swap. I think it will still change the order therefore...
[02:49:57] <ville> anyhoo there's also the idea of a unstable erase where you move from the end of the vector into the elements you want to erase
[02:50:22] <kalven> it doesn't change the relative order of elements to keep
[02:50:31] <ville> you need to specify change order relative to what?
[02:52:35] <ville> if you remove_if() from: abcdef => ace|xxx the order of the things after the "partition point" | is not specified hence xxx
[02:53:17] <ville> the eleents ace are guaranteed to keep their relative order
[02:54:10] <CarloWood> Ugh - I think I've been using the erase(remove_if idiom all this time thinking it won't move the whole bloody vector... but it does indeed...
[02:54:13] <CarloWood>  { vector<int> v = { 1, 2, 3, 4, 5, 6, 7, 8, 9 }; remove_if(v.begin(), v.end(), [](int n){ return n == 5; }); SHOW(v); }
[02:54:14] <geordi> v = {1, 2, 3, 4, 6, 7, 8, 9, 9}
[02:54:31] <CarloWood> That moved 6, 7, 8, and 9 one position back :/
[02:54:49] <ville> if you want to avoid that, then write an unstable erase
[02:54:57] <CarloWood> I thought it would return: { 1, 2, 3, 4, 9, 6, 7, 8, 5 }
[02:54:59] <ville> did 20 finally include it?
[02:55:03] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:55:05] <kalven> think of all the cycles lost!
[02:55:10] <Alipha> xisop: you should use a cryptographically strong random number generator, which unfortunately standard c++ doesn't provide. You could read from "/dev/urandom"
[02:56:26] <ville> pretty sure there was atleast a paper or unstable erase
[02:56:35] <Friithian> doesn't std::random_device read from urandom (on systems that have it)?
[02:56:47] <ville> Friithian: unspecified
[02:58:22] <CarloWood> xisop: ping
[02:59:33] <CarloWood> Friithian: that doesn't matter - the problem is that the seed is small and you can easily infer the internal state of the rng from some output (dice rolls), after which all the next ones can be predicted.
[03:00:03] <CarloWood> You have to put the output of the rng through a one-way-hash
[03:01:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:01:45] *** Joins: badone (~badone@209.132.189.152)
[03:04:01] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:05:47] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[03:06:34] <Alipha> urandom is secure random bytes
[03:06:39] <xisop> CarloWood: hi
[03:06:52] <CarloWood> xisop: hi
[03:07:24] <xisop> CarloWood: so it's possible eh?
[03:07:33] <CarloWood> xisop: see above. You have to put the output of a pseudo random number generator through a one-way-hash function, like SHA256
[03:07:47] <xisop> oh interesting
[03:08:03] <cq-work> I'm not sure why you need that if the issue is lack of randomness.
[03:08:21] <xisop> the issue isn't lack of randomness, it's inferring values from what's been spit out
[03:08:22] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[03:08:42] <kalven> or just use a ready made csprng if that is a concern
[03:08:56] <cq-work> Yeah, I'm not sure where SHA-256 comes into play at all here
[03:09:18] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[03:09:19] <xisop> because it's a one way hash?
[03:09:35] <xisop> you couldn't reverse it, is what i think he's getting at
[03:09:40] <CarloWood> I wrote something about this - but I am sure there are better articles about it somewhere... anyway, what I wrote is here: http://libecc.sourceforge.net/reference-manual/classlibecc_1_1rng.html  scroll down to "predictability". That is almost always the case for normal rng's.
[03:10:05] <cq-work> If you have a reasonable estimate of what the input is, you can. If you give a hash function the same input over and over, you get the same resul.t
[03:10:21] *** Quits: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628) (Ping timeout: 252 seconds)
[03:10:26] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[03:10:30] <cq-work> If the number is very large, that becomes less and less viable.
[03:11:59] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 252 seconds)
[03:12:27] *** Joins: k8yun (~k8yun@user/k8yun)
[03:13:00] <Friithian> CarloWood: that's why I posted https://stackoverflow.com/a/19666713/10580242, it uses std::random_device to generate the seed, which uses urandom, then uses mt19937 to get the random numbers which should be more than enough
[03:13:22] <kalven> CarloWood: some tips: instead of saying "fast" and "passes all known statistical tests", post some actual benchmarks comparing it to others and testu01 results
[03:14:09] *** Joins: Terminus (~null@user/terminus)
[03:15:21] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:15:34] <CarloWood> xisop: assuming you read my page.. the mersenne twister that is std::mt19937 uses the exact same principle. That's why they use that number http://lcn2.github.io/mersenne-english-name/m19937/prime-c.html
[03:16:53] <CarloWood> On the other hand... if the state is 19937 bits - it might be unguessable as it is from the data you can collect during game play.
[03:18:29] <CarloWood> Friithian: no, the point is that from the first 19937 bits of output you can deduce the internal state. It doesn't matter how random that internal state (seed) was when you picked it.
[03:19:02] <Alipha> right
[03:19:12] <Friithian> that assumes the user can figure out if the next thing they do is the next number generated
[03:19:51] <Alipha> You underestimate the ability of hackers
[03:20:18] <cq-work> We should all spend $15000 on a QRNG PCI card
[03:20:50] <Friithian> I'll go buy a lava lamp
[03:20:56] <kalven> or pick a proven csprng and move on :P
[03:21:15] <Friithian> or just only use std::random_generator for everything and eat the cylces
[03:21:21] <CarloWood> I'd say that for a multiplayer game the Mersenne twister is enough... but then again, I watched a few Track Mania youtubes... for some people it is their LIFE. If those people could get a world record by analyzing a few kB of data, it would be done (in terms of fanatics - randomness doesn't play a role in that game)
[03:22:13] *** Quits: Terminus (~null@user/terminus) (Quit: ZNC 1.8.2 - https://znc.in)
[03:22:31] *** Joins: Terminus (~null@user/terminus)
[03:24:13] <CarloWood> If you use my rng (that only has 521 bits internal state) and then read 512 bits at a time and put that through SHA1 to get 128 bits from that ... then it is cryptographically secure. You can NEVER guess that. 521 bits internal state is already infinite in that nobody will EVER have the same internal state in the life time of all parallel universes together.
[03:24:36] <CarloWood> but you still have to hash it - or it is easy to predict.
[03:25:51] <CarloWood> I just noticed this on my page:
[03:25:54] <CarloWood> Considering that it took me something of the order of an hour to find working feedback points for a RNG with 521 bits, it would now take about 9 weeks to find feedback points for a RNG of 19937 bits instead of 262 year as would be the case when using ordinairy matrices.
[03:26:21] <CarloWood> I guess it is pretty damn hard to get the internal state of the messenne twister lol.
[03:26:58] <CarloWood> 9 weeks using my "compressed matrixes" method...
[03:27:17] *** Quits: rajkosto (~rajkosto@93-86-99-236.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[03:27:34] <CarloWood> Oh - nah
[03:27:48] <CarloWood> that is about finding the feedback points, not the internal state.
[03:27:51] <CarloWood> nm :/
[03:27:55] <cq-work> Once again, one-way hashing a random number isn't a cryptographically secure method.
[03:28:07] <cq-work> That's at best security through obfuscation.
[03:28:11] <kalven> 624 numbers needed to predict the next with mt
[03:28:26] <CarloWood> cq-work: Oh? Why would you say that?
[03:28:35] <cq-work> I've already explained why.
[03:29:23] <CarloWood> No you didn't? :/
[03:29:31] <cq-work> <cq-work> If you have a reasonable estimate of what the input is, you can. If you give a hash function the same input over and over, you get the same resul.t
[03:29:38] <cq-work> It's not encryption.
[03:30:24] <CarloWood> The whole point is that you want to know the input... you have no idea whatsoever what it is (its the output a rng with a near infinite period)
[03:35:31] <CarloWood> If you use SHA1 (using that as example because wrote that as part of libecc too, so I have that data in front of me), you input 512 bits of output from the pseudo random generator and get 160 bits - totally mangled. You can't guess the input because 1) you have 352 bits LESS, 2) the bits are cryptographically mangled - that is, you can not reverse the process, also not if you get the next 1000000 batches of 160 bits and
[03:35:31] <CarloWood> know exactly how the prng (and sha1) works.
[03:36:50] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:37:24] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[03:37:40] <CarloWood> The only way to predict the next 160 bits is by predicting the next 512 bits of input (all 512 of them!), which you can only do if you know the full internal state of the prng (all 512 bit).  You could brute force it by just trying which seeds lead to the same output, but that is all you can do.
[03:37:59] <CarloWood> And brute forcing even 128 bits is current deemed unfeasible.
[03:38:11] <kalven> needs more handwaving
[03:38:46] * Friithian wooooooooooo *waves*
[03:40:02] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[03:40:04] <CarloWood> kalven: what kind of remark is that?
[03:40:32] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Client Quit)
[03:40:36] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Ping timeout: 252 seconds)
[03:41:32] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[03:42:24] <xisop> CarloWood: the part of my game i'm most concerned about is damage rolls, critical chances, and loot quality chances... should i have separate dedicated rollers for each of those?
[03:42:26] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[03:42:43] <Friithian> not really, that's mostly a waste of resources
[03:43:20] <Friithian> I would suggest something that handles the random generation of numbers and just spits it out for other classes to use
[03:44:52] <CarloWood> xisop: as I said before, from a practical point of view - you can just use the prng / code of the link that Friithian gave (the mersenne twister).  This isn't about a billion dollars.  I wouldn't do it when it price was cracking bitcoin, but for an online game I have the feeling that nobody will come close to predicting anything even if they try.
[03:45:10] <CarloWood> when the* price
[03:45:18] <xisop> fair enough
[03:45:45] <Friithian> tbh mt is prob entirely overkill for this
[03:46:16] <CarloWood> And then I don't see the point of separating rng's - it's random. Having multiple would increase the total internal state and make it harder to guess easy due to having less data... but well. Nah
[03:46:39] <xisop> i have xoroshiro for some things and mt as the basis for nearly all of my dice rolls.. i'll just keep that to one instance
[03:47:45] <CarloWood> It would also help if nobody knows how the code looks like ;). That would help a LOT in fact.
[03:47:56] <xisop> it's not open source :)
[03:48:01] <CarloWood> If this is open source then well - then all they need is enough data.
[03:48:43] <xisop> i've thought of making it open source but there are too many negatives to that scenario
[03:48:44] <CarloWood> Then on top of needing an unknown amount of data, they don't even know what to do with the data to reconstruct the internal state of the prng(s)...
[03:49:50] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:51:28] <xisop> appreciate your input CarloWood
[03:56:35] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8855:cd0a:9b22:ba37) (Quit: Quit)
[04:02:23] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[04:06:25] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:11:06] *** Quits: proller (~p@2a02:6b8:b081:b65d::1:15) (Remote host closed the connection)
[04:12:04] *** Joins: proller (~p@80.240.216.69)
[04:13:43] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[04:14:10] *** Joins: biberu (~biberu@user/biberu)
[04:15:55] <kalven> CarloWood: the remark is that this not how cryptoanalysis is done. If xisop needs a csprng, then they'd be much better off grabbing a high quality one that has actually seen some serious analysis.
[04:16:12] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[04:17:45] *** Joins: ferdna (~ferdna@user/ferdna)
[04:24:06] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:29:52] *** Joins: proller (~p@2a02:6b8:b081:6412::1:1f)
[04:32:04] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[04:41:24] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 240 seconds)
[04:44:27] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[04:48:16] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:50:06] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[05:06:59] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[05:09:23] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:16:53] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[05:17:36] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[05:19:32] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[05:27:52] *** Joins: RandomRead3r (~RandomRea@user/randomreader)
[05:29:48] *** Quits: RandomReader (~RandomRea@user/randomreader) (Ping timeout: 240 seconds)
[05:29:48] *** RandomRead3r is now known as RandomReader
[05:33:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[05:33:43] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[05:34:27] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[05:37:58] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:38:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[05:40:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[05:45:21] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 250 seconds)
[05:50:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:56:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:59:48] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:02:43] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[06:03:32] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[06:15:42] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:16:34] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 272 seconds)
[06:17:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:28:10] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[06:44:23] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:44:32] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:44:32] *** ChanServ sets mode: +v npaperbot
[06:49:55] *** Quits: Tokamak (~Tokamak@166.205.152.51) (Ping timeout: 260 seconds)
[06:51:35] *** Joins: Tokamak (~Tokamak@172.58.188.218)
[06:52:29] *** Quits: malloy (~jimery@116.30.221.173) (Quit: WeeChat 3.0)
[06:57:46] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[06:57:58] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:06:33] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[07:09:41] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[07:15:29] *** Joins: Inline__ (~Inline@p4fedbdac.dip0.t-ipconnect.de)
[07:17:55] *** Quits: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:28:36] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[07:29:48] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:30:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:31:08] *** Joins: johnny (~johnny@user/johnny)
[07:38:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:43:16] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[07:47:05] *** Joins: adeliktas7 (~adeliktas@i59F4DF8C.versanet.de)
[07:49:22] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:49:40] *** Quits: adeliktas (~adeliktas@i59F4D979.versanet.de) (Ping timeout: 272 seconds)
[07:49:40] *** adeliktas7 is now known as adeliktas
[07:52:36] *** Quits: Tokamak (~Tokamak@172.58.188.218) (Ping timeout: 240 seconds)
[07:54:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:56:15] *** Joins: Tokamak (~Tokamak@166.205.152.97)
[08:09:36] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:13:27] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[08:15:48] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:23:43] *** Quits: emerent (~quassel@p200300cd5743c336ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:24:31] *** Joins: emerent (~quassel@p200300cd5743c32bba27ebfffed28a59.dip0.t-ipconnect.de)
[08:40:02] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[08:40:43] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[09:10:23] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d88c:26d9:591b:c70e)
[09:22:21] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[09:30:02] *** Quits: emerent (~quassel@p200300cd5743c32bba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:31:49] *** Joins: emerent (~quassel@p200300cd5743c32bba27ebfffed28a59.dip0.t-ipconnect.de)
[09:57:16] *** Joins: ferdna (~ferdna@user/ferdna)
[10:06:11] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[10:17:41] * great_taste wishes writing tests wasn't so miserable
[10:17:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[10:18:18] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[10:19:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:22:36] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[10:23:05] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[10:24:08] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:25:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:27:13] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[10:33:48] *** Inline__ is now known as Inline
[10:34:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d88c:26d9:591b:c70e) (Quit: Quit)
[10:39:12] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6523)
[10:42:05] *** gentooclimax is now known as climax
[10:42:40] *** climax is now known as gentooclimax
[10:44:23] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:44:33] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:44:33] *** ChanServ sets mode: +v npaperbot
[10:45:21] *** Joins: Xardas (~Xardas@149.233.51.127)
[10:46:55] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:46:59] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Read error: Connection reset by peer)
[10:47:40] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[10:50:37] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[10:59:38] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:00:56] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:01:15] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:17:06] *** Joins: g0se (~goose@111.199.80.15)
[11:22:58] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[11:23:11] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628)
[11:24:17] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[11:34:03] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:38:48] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[11:43:10] *** paule32_ is now known as paule32
[11:46:09] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:46:35] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:49:48] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 240 seconds)
[11:56:28] *** Joins: Kill-Animals (~anon@199-7-158-231.eng.wind.ca)
[11:58:25] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[11:58:39] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[11:58:39] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[11:58:39] *** Joins: AssKoala (~asskoala@user/asskoala)
[12:00:48] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[12:01:06] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[12:06:54] *** Joins: evangeline (~Eleanor@178.79.105.181)
[12:12:10] *** Joins: malloy (~jimery@116.30.221.173)
[12:20:10] *** Joins: jsbach (~jsbach@2a01:c22:a5b8:7600:58d2:c69d:9e7e:7ca5)
[12:20:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:36:09] *** Joins: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de)
[12:37:47] *** Joins: dkdn (~dkdn@178.49.152.42)
[12:39:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[12:40:20] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:49:00] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[13:01:31] *** Joins: ivii (~ivan@user/ivii)
[13:01:57] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[13:02:22] <LordKalma> !rq
[13:02:22] <nolyc> LordKalma: <PJBoy> whatever you do, do it backwards
[13:02:59] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[13:05:03] *** Joins: johnny (~johnny@user/johnny)
[13:05:11] *** Joins: robod34 (Username@79.113.200.158)
[13:06:03] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:07:45] *** Quits: dkdn (~dkdn@178.49.152.42) (Quit: Client closed)
[13:07:55] *** Joins: dkdn (~dkdn@178.49.152.42)
[13:17:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:21:07] *** Quits: dkdn (~dkdn@178.49.152.42) (Ping timeout: 256 seconds)
[13:21:18] *** Quits: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de) (Quit: Ping timeout (120 seconds))
[13:21:19] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:21:53] *** Joins: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de)
[13:23:16] *** Joins: dkdn (~dkdn@178.49.152.42)
[13:23:44] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[13:33:24] *** Quits: Kill-Animals (~anon@199-7-158-231.eng.wind.ca) (Ping timeout: 240 seconds)
[13:34:43] *** Joins: Kill-Animals (~anon@208.98.223.15)
[13:38:44] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[13:39:05] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[13:43:09] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:5d91:f6dd:f948:80a5)
[13:47:21] *** Quits: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de) (Quit: Client closed)
[13:50:35] *** Quits: dkdn (~dkdn@178.49.152.42) (Quit: Client closed)
[13:57:20] *** Joins: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de)
[13:57:25] *** Quits: bobb_ (~bobb_@dslb-088-066-139-243.088.066.pools.vodafone-ip.de) (Client Quit)
[14:00:28] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[14:14:15] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:14:56] *** Joins: plastico (~plastico@neomutt/plastico)
[14:20:28] *** Joins: paul424 (~tom@ip-5-172-236-58.multi.internet.cyfrowypolsat.pl)
[14:23:23] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:28:29] *** Joins: xkuru (~xkuru@user/xkuru)
[14:29:16] *** Joins: Roughy (~mdaw45ns@user/roughy)
[14:32:55] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 250 seconds)
[14:33:47] *** Quits: Kill-Animals (~anon@208.98.223.15) (Ping timeout: 260 seconds)
[14:34:45] *** Joins: mathe (~wellmathe@dhcp-138-246-3-8.dynamic.eduroam.mwn.de)
[14:37:32] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 272 seconds)
[14:40:29] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[14:41:37] *** Quits: malloy (~jimery@116.30.221.173) (Quit: WeeChat 3.0)
[14:42:12] *** Quits: mathe (~wellmathe@dhcp-138-246-3-8.dynamic.eduroam.mwn.de) (Ping timeout: 240 seconds)
[14:43:58] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[14:44:24] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:44:33] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:44:33] *** ChanServ sets mode: +v npaperbot
[14:44:45] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[14:46:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:57:26] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Remote host closed the connection)
[14:58:13] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[14:58:37] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[14:59:36] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:02:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[15:06:02] <LordKalma> very_sneaky, https://github.com/conan-io/conan/pull/10800
[15:06:10] <LordKalma> the feature I wanted just got pulled in
[15:06:11] <LordKalma> very nice
[15:06:23] <LordKalma> not for all toolchains, but it's a start
[15:29:42] *** Joins: toulene3 (~toulene@user/toulene)
[15:31:22] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[15:31:23] *** toulene3 is now known as toulene
[15:34:36] *** Joins: Kill-Animals (~anon@199-7-159-123.eng.wind.ca)
[15:36:04] <PJBoy> what's the tldr?
[15:36:25] <PJBoy> was it not previously possible to declare global flags in toolchains?
[15:38:01] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 256 seconds)
[15:38:37] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:39:14] <LordKalma> You could set the environment in profiles, but not conanfile's
[15:39:45] <LordKalma> I wanted to be able to, like, add `-ffast-math` at like conanfile level, things like that
[15:53:14] <very_sneaky> LordKalma: noice
[15:53:25] <very_sneaky> yeah I've been so impressed with how quickly memsharded triages these issues
[15:53:44] <very_sneaky> there's 2000 issues and he responds so quickly - i don't get that kind of responsiveness from people i work with on much smaller code bases
[15:56:16] <very_sneaky> that's a non trivial change too, +304 -171 over 12 files
[16:04:19] <PJBoy> yeah full respect to that guy
[16:04:33] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[16:05:43] *** Quits: Kill-Animals (~anon@199-7-159-123.eng.wind.ca) (Ping timeout: 260 seconds)
[16:07:21] *** Quits: paul424 (~tom@ip-5-172-236-58.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[16:08:22] *** Joins: seninha (~seninha@user/seninha)
[16:13:13] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[16:13:46] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[16:15:40] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:22:09] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[16:22:27] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 256 seconds)
[16:23:51] *** Joins: andreasbuhr (~quassel@p549db8a1.dip0.t-ipconnect.de)
[16:23:51] *** Quits: andreasbuhr (~quassel@p549db8a1.dip0.t-ipconnect.de) (Client Quit)
[16:29:33] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[16:32:33] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[16:35:24] *** Quits: proller (~p@2a02:6b8:b081:6412::1:1f) (Ping timeout: 240 seconds)
[16:36:50] <LordKalma> The dev was franramirez688, not memsharded, but yeah, memsharded is really amazingly responsive
[16:37:00] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[16:40:54] *** Joins: markong (~kvirc@213.146.188.203)
[16:44:45] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[16:45:03] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[16:46:04] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[16:48:44] *** Joins: LuckyFire (~LuckyFire@46.217.32.109)
[16:54:25] *** Joins: magla (~gelignite@d5367a39.access.ecotel.net)
[17:11:02] *** Joins: proller (~p@2a02:6b8:b081:b713::1:36)
[17:12:23] *** Quits: proller (~p@2a02:6b8:b081:b713::1:36) (Remote host closed the connection)
[17:20:49] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:22:31] *** Quits: Kakurady (~nekoyasha@bras-base-toroon63x9w-grc-18-76-68-53-51.dsl.bell.ca) (Quit: Konversation terminated!)
[17:26:09] *** Joins: xkuru (~xkuru@user/xkuru)
[17:34:06] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[17:34:27] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[17:36:41] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[17:40:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:42:26] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 245 seconds)
[17:42:49] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[17:51:06] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[17:51:22] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[18:00:26] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:05:55] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Ping timeout: 256 seconds)
[18:11:38] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[18:18:20] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:32:34] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[18:37:28] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:37:50] *** Joins: meator (~meator@user/meator)
[18:40:32] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:44:24] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:44:33] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:44:33] *** ChanServ sets mode: +v npaperbot
[18:59:23] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[19:00:55] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[19:01:06] *** Joins: m5zs7k_ (~m5zs7k@web10.mydevil.net)
[19:01:34] *** m5zs7k_ is now known as m5zs7k
[19:09:25] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[19:11:26] *** Joins: teepee (~teepee@openscad/teepee)
[19:14:13] *** Joins: pulse (~pulse@user/pulse)
[19:15:05] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[19:15:23] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:21:15] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[19:28:39] <rpav> 🤔 you can't #include into a multiline string can you
[19:29:29] <Alipha> No, sorry
[19:29:30] <rpav> like, this means the preprocessor has specific provisions for parsing c++ multiline strings
[19:29:57] <rpav> i didn't figure since this would mean you'd have to be careful about what text you put in the string, but
[19:30:12] *** Quits: Tokamak (~Tokamak@166.205.152.97) (Ping timeout: 240 seconds)
[19:33:22] <rpav> you can `constexpr auto* text =\n#include "foo.txt"\n;` apparently
[19:34:12] *** Joins: Tokamak (~Tokamak@166.205.152.97)
[19:35:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:38:03] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:38:04] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[19:40:21] <PJBoy> yeah that seems reasonably possible
[19:41:47] <PJBoy> where the quotes are in foo.txt
[19:43:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:46:10] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:5d91:f6dd:f948:80a5) (Remote host closed the connection)
[19:46:33] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[19:47:41] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[19:48:34] *** Quits: Tokamak (~Tokamak@166.205.152.97) (Quit: Textual IRC Client: www.textualapp.com)
[19:48:41] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[19:48:46] *** Joins: szymon (~ugh@185.242.6.204)
[19:49:19] <rpav> yea
[19:49:31] *** Quits: szymon (~ugh@185.242.6.204) (Max SendQ exceeded)
[19:49:33] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:49:53] *** Joins: szymon (~ugh@185.242.6.204)
[19:50:00] <rpav> they're a much more minor annoyance in a text file with some kind of textual formatting than trying to have nice textual formatting in the literal string
[19:50:03] *** Quits: szymon (~ugh@185.242.6.204) (Remote host closed the connection)
[19:51:54] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Ping timeout: 252 seconds)
[19:57:52] <rpav> https://github.com/yhirose/cpp-unicodelib <- this guy seems to write some seriously useful shit .. this is a header-only unicode library supporting normalization and all those other things
[19:59:36] <rpav> apparently including constants for all the glyph names (?!) .. but not stringifying it ;/
[20:00:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:00:42] <rpav> i should hack out a patch to X-macro the header for names
[20:03:16] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:03:39] *** Joins: AmR (~AmREiSa@156.199.157.142)
[20:07:34] <PJBoy> and MIT licensed, nice
[20:08:02] <Friithian> bah, MIT license is weak
[20:08:04] <PJBoy> I'm not a huge fan of it being header only
[20:08:17] <PJBoy> a 2.6MB header and a 1.8MB header
[20:08:30] <PJBoy> but I mean, that's easy to solve
[20:08:50] <PJBoy> as long as there're no macros, can easily turn it into a module instead
[20:13:24] <cq-work> Put it in a pch, call it a day
[20:13:39] <cq-work> (although modules will be nice but I mean... it's looking grim)
[20:14:16] <cq-work> Are std modules going to make C++23 even?
[20:14:26] <PJBoy> I thought they were
[20:14:36] <PJBoy> but last I checked the C++26 roadmap, I saw them there
[20:15:41] <PJBoy> on the other hand
[20:15:47] <PJBoy> https://github.com/cplusplus/papers/issues/1115 says C++23
[20:15:57] <PJBoy> either way, nothing's confirmed
[20:16:35] <PJBoy> but https://github.com/cplusplus/papers/issues/857 says C++26
[20:17:31] <cq-work> Yeah, I really hate how it's taken a decade to get this feature in and I can basically assume the first iteration is going to be fucked up and have to be fixed by some later standard years down the road.
[20:18:03] <cq-work> Modules sound nice but I literally can't use them for anything meaningful. :/
[20:19:18] <PJBoy> I've used them with succeed in VS
[20:19:23] <PJBoy> the other compilers are just slacking
[20:19:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:21:42] <LordKalma> cppref says gcc has bit_width since 10
[20:22:07] <PJBoy> I'm really confused as to what the difference between those two papers I linked is
[20:22:21] <LordKalma> I have 11.2 (msys2) and it says "error: 'bit_width' is not a member of 'std'"
[20:22:57] <cq-work> https://github.com/gcc-mirror/gcc/blob/releases/gcc-10.1.0/libstdc++-v3/include/std/bit
[20:23:17] <cq-work> Definitely in there
[20:24:26] <LordKalma> I think i'm missing an #include <bit>
[20:24:37] <LordKalma> msvc was probably giving it to me transitively
[20:26:10] <kalven> :|
[20:26:39] <PJBoy> MSVC is so C++20 compliant that it shoves it down your throat
[20:28:38] <CarloWood> utils::utf8_string_to_filename (str="This /is/ a उदहारण! It _contains_ a% and ‗", from=" _/", to="_‗∕", illegal="/")
[20:28:45] <CarloWood> gives me:
[20:28:53] <CarloWood> "This_%2Fis%2F_a_उदहारण!_It_‗contains‗_a%%_and_%E2%80%97"
[20:28:55] <CarloWood> :)
[20:29:10] <kalven> I look forward to when you can just import the entire standard lib and not worry about inidividual headers
[20:29:49] <CarloWood> Hmm - that is actually not correct.... I want to replace '/' with '∕'
[20:30:10] <cq-work> I don't want to look forward, I want them now T.T
[20:31:39] <Alipha> #include <bits/stdc++.h>  // :-)
[20:32:09] <cq-work> (I've unironically used that (or similar) for building a pch)
[20:32:22] <kalven> I use 'import std;
[20:32:34] <kalven> I use 'import std;' in a personal project that is clang only, and it's great
[20:33:19] <cq-work> I think build2 has module wrappers over the standard library. Does clang already provide some for that?
[20:33:27] <kalven> CarloWood: what if the input string contains that weird slash? do you escape it?
[20:33:40] <CarloWood> yes
[20:33:49] <CarloWood>   // Add glyphs that are in `to` but not in `from` to the illegal dictionary.
[20:33:49] <CarloWood>   // This is necessary to make sure that each unique input str results in a unique filename (and consequently is reversable).
[20:33:49] <CarloWood>   illegal_dictionary += to_dictionary - from_dictionary;
[20:34:38] <CarloWood> I think I should first do the translation and THEN check for (remaining) illegal characters...
[20:34:58] <kalven> or just urlencode and move on
[20:35:02] <Alipha> whitelists are better than blacklists
[20:35:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:36:44] <PJBoy> I assume `import std;` will never be able to fetch the stdlib macros though
[20:37:45] <cq-work> What macros would be an issue there... assert?
[20:37:45] <kalven> I think I only use assert
[20:38:23] <LordKalma> <macros> when?
[20:38:24] <cq-work> How does assert work with modules
[20:38:45] <cq-work> or does it not and you literally just included cassert as a header
[20:39:33] <PJBoy> stdin/stdout/stderr, EXIT_FAILURE/EXIT_SUCCESS, SEEK_CUR/SEEK_END/SEEK_SET, NAN/INFINITY/HUGE_VAL
[20:39:44] <LordKalma> urgh, ldb from llvm that I downloaded from github crashes because it wants python10.dll
[20:39:48] <LordKalma> and I'm using 3.9
[20:39:53] <LordKalma> *python310.dll
[20:39:56] <PJBoy> none of those things need to be macros, but they are
[20:40:13] * LordKalma should build llvm from source
[20:41:05] <PJBoy> I expect you'll have to include cassert still
[20:41:12] <cq-work> I've lived so long without knowing stdin/err/out was a macro. I could have kept living that way.
[20:41:36] <kalven> PJBoy had to ruin it
[20:41:41] <LordKalma> Does the C language even have functions? god...
[20:41:45] <LordKalma> might as well not
[20:42:01] <PJBoy> hey man, visual studio colours stdin as purple
[20:42:11] <PJBoy> the colour of macros
[20:42:13] <kalven> LordKalma: have you seen _Generic ?
[20:42:23] <LordKalma> I know that's a thing
[20:42:35] <LordKalma> dunno how it's implemented
[20:42:54] <PJBoy> in MSVC, stdin is a macro for `(__acrt_iob_func(2))`
[20:43:30] * LordKalma is cloning llvm from github
[20:43:32] <LordKalma> I'm scared
[20:43:36] <PJBoy> *stderr
[20:45:49] <Friithian> wait, are you building llvm?
[20:46:19] <PJBoy> yeah
[20:46:34] <Friithian> inb4 oom
[20:46:42] <PJBoy> apparently it's easier than getting uptodate python
[20:46:44] <PJBoy> which I believe
[20:46:59] <Friithian> if you're building the entire toolchain… good luck
[20:47:12] <PJBoy> wait a minute
[20:47:14] <PJBoy> you're on windows
[20:47:17] <PJBoy> just get python 10
[20:47:19] <LordKalma> PJBoy, I just feel like doing something different
[20:47:40] <LordKalma> I don't know why conda keeps the minor version of python
[20:47:48] <LordKalma> lemme check if it's updateable
[20:48:14] <LordKalma> a) If you want to upgrade between major python version like 3.5 to 3.6, you'll have to do: conda install python=$pythonversion$
[20:48:16] <LordKalma> fair enough
[20:48:46] <Friithian> I have built python from source also, python is a might bit easier
[20:49:08] <LordKalma> Lemme try to update python in conda
[20:50:04] <LordKalma> "Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source." // not a great start, but it's still computing
[20:50:52] <LordKalma> In the meanwhile, Qt Creator things 64 bits llvm on windows 64 bits is a cross compiler... https://bugreports.qt.io/browse/QTCREATORBUG-27256
[20:50:58] <LordKalma> *thinks
[20:52:44] <LordKalma> sometimes I wish conda was like nvm. So easy to change system-wide node with it
[20:55:31] <rpav> bah there's no any::holds<T>, wtf
[20:56:17] <PJBoy> it has std::any_cast
[20:56:23] <LordKalma> std::is_same_v<myany.type(), T>?
[20:56:33] <rpav> which throws if it _doesn't_ have T, with no test available prior
[20:56:42] <PJBoy> it doesn't have to throw
[20:56:45] <PJBoy> there's a pointer overload
[20:56:51] <rpav> ah
[20:57:08] <PJBoy> .type() isn't a compile time constant for obvious reasons
[20:57:29] <PJBoy> so is_same_v ain't gonna cut it
[20:57:40] <PJBoy> .type() == typeid(T) would work though
[20:57:42] <LordKalma> oh yeah
[20:57:44] <LordKalma> sorry
[20:57:47] <rpav> the obvious reason is not actually true
[20:58:16] <rpav> well
[20:58:17] <LordKalma> yes it is. std::any a; if(runtime_foo()) a = 5; else a = 5.0;
[20:58:27] <rpav> v.type() is definitely not possible
[20:58:43] *** Joins: pulse (~pulse@user/pulse)
[20:58:51] <rpav> what's annoying is typeinfo values in general aren't compile-time, even though they could be
[20:59:16] <rpav> it would require the compiler do a bit of work though so clearly not going to happen
[20:59:31] <LordKalma> conda can't install 3.10...
[20:59:38] <rpav> actually wait doesn't c++20 allow constexpr allocations
[20:59:45] <rpav> or is that like, a 23 thing
[20:59:45] * LordKalma wonders if he feel like setting up his conda environments 
[21:00:18] <PJBoy> you get some limited constexpr allocations in C++20, yeah
[21:00:51] <PJBoy> no library support for type_info of course
[21:01:14] <PJBoy> but it seems technically possible
[21:01:28] <rpav> sure but you can implement your own, though i'm not sure if the restrictions on them prevent you from using the pointer values
[21:01:44] <PJBoy> although typeid returns a reference
[21:02:04] <PJBoy> { constexpr auto& t = typeid(int); }
[21:02:05] <geordi>  
[21:02:05] <rpav> right but rtti is dumb and ctti is better
[21:02:10] <PJBoy> yeah so that actually does work
[21:02:31] <rpav> isn't rtti restriction between TUs
[21:02:36] *** Joins: str0 (~str0@178.220.28.32)
[21:03:07] <PJBoy> not that I'm aware of
[21:03:28] <PJBoy> I almost never use type_info though so idk
[21:06:08] <rpav> it's pretty useless and implementing your own is nicer and a lot more useful
[21:18:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:50:44] *** Joins: peoliye (~peoliye@54-240-198-36.amazon.com)
[21:54:37] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:54:47] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:57:13] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:57:28] *** Joins: sonic (~sonic@user/sonic)
[21:57:47] <CarloWood> I think my decoder isn't working...
[21:57:51] <CarloWood> Encoded: "This_∕is∕_a_उदहारण!_It_‗contains‗_a%%_and_%E2%80%97"
[21:57:51] <CarloWood> Decoded: "Ps���U"
[21:59:06] *** Joins: meator (~meator@user/meator)
[22:01:16] <CarloWood> I guess that std::filesystem::path::u8string() returns a temporary :/
[22:01:59] *** Quits: meator (~meator@user/meator) (Client Quit)
[22:02:23] *** Joins: sh00p (~z@89-253-71-70.customers.ownit.se)
[22:02:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4dd0:35a3:af1d:f7b)
[22:02:33] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4dd0:35a3:af1d:f7b) (Changing host)
[22:02:33] *** Joins: skapata (~Skapata@user/skapata)
[22:08:14] *** Joins: paul424 (~tom@ip-5-172-238-122.multi.internet.cyfrowypolsat.pl)
[22:14:35] <CarloWood> Man, why is this so difficult :/
[22:15:54] <CarloWood> My current decoder looks like this: https://bpa.st/7LXA
[22:16:05] <CarloWood> I mean, encoder.
[22:16:41] <LordKalma> Building LLVM from source is actually pretty easy. Cmake configures fine, but for a small issue I had
[22:16:50] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[22:17:43] <CarloWood> Input escape characters ('%') are always translated to "%%" - which is always translated back to '%' - so that should work, hmm - unless you convert some character into a '%' I guess :\ ... but lets ignore the escape character for now.
[22:20:07] <CarloWood> Then I have the following possible cases for input characters: 1) they pass through unchanged, 2) they are replaced with another (legal) character, 3) they are escaped.   However - escaping happens in a second stage - so it is possible that an input character is first translated and then escaped.
[22:20:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[22:24:04] <CarloWood> Let F be the set of chars in 'From', T be the set of chars in 'To' and I be the set of chars in 'Illegal'. Then there are in fact 9 different input cases: an input character is in F or not, in T or not, in I or not - and if it is in F then the resulting translation is in T which is in I or not.
[22:24:54] <CarloWood> Why do I have the feeling this is going to be irreversible? :/
[22:24:59] <LordKalma> [24/6701] Building CXX object
[22:25:02] <LordKalma> this is going to take a while
[22:25:14] <kalven> here's a nickel kid, get yourself a cluster
[22:26:32] <TinoDidriksen> Are you at least building it in parallel?
[22:26:35] <kalven> CarloWood: are you doing this for stackoverflow clout?
[22:32:53] <AmR> I need some help about idea with Qt. I want call parent from child to add widgets to parent, How I can do that ?
[22:41:56] <LordKalma> -j12 :)
[22:42:38] <LordKalma> I have https://i.gyazo.com/fc3a8bfd087e736670ddb659e9c7930c.png
[22:42:45] <LordKalma> (nevermind the I have)
[22:43:29] <Friithian> oh god are you building with all logical cores? I hope the linker you have doesn't use a shitton of ram
[22:44:25] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:44:32] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:44:32] *** ChanServ sets mode: +v npaperbot
[22:44:49] <LordKalma> if it blows, i'll try again
[22:45:59] <LordKalma> I added libc to the build, wonder if it'll just error out in a while hahah
[22:46:30] <LordKalma> the cmake command is `cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;libc;libclc;lld;mlir;polly;pstl' -DLLVM_ENABLE_RUNTIMES='libcxx;libcxxabi;libunwind;compiler-rt;libc;openmp' -DCMAKE_INSTALL_PREFIX=D:\Programs\LLVM_trunk -DCMAKE_BUILD_TYPE=Release` and then `cmake --build build -j 12`
[22:47:56] *** Joins: meator (~meator@user/meator)
[22:53:47] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[22:53:57] <CarloWood> Forget 9 ... it's 20 ..... https://gyazo.com/411692967cef2434c4aedbd48a054d68
[22:54:55] <CarloWood> kalven: sort of - I don't need the reverse myself; but they asked for something that was reversible. And to be honest, it is the only way to be sure that every unique input string gives a unique filename.
[22:57:20] <CarloWood> In that VEN diagram that I posted: the green circle is the 'from' set, which is always translated to a corresponding point in the blue circle (1:1, or how to math people call that... 'onto'). Blue is thus the 'to' set.
[22:57:45] <CarloWood> Red are the illegal characters - so those are always escaped.
[22:58:09] <CarloWood> All black dot with a green circle around it are inputs - and the arrows show how they are converted.
[22:58:15] *** Quits: Inline (~Inline@p4fedbdac.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:59:41] <CarloWood> There is therefore one case that is ambiguous... The black/green input in the blue/red circle (not in green). Seeing its escape sequence I don't know if the input was in blue, or that it first came from green.
[23:01:03] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:01:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[23:02:34] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[23:02:40] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:06:06] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[23:07:06] <kalven> url-encoding solves this, it just wont keep the non-latin characters unencoded
[23:07:22] <kalven> to which I would say: stop hitting yourself
[23:07:49] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[23:10:02] *** Joins: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de)
[23:15:26] <johnny> hah
[23:16:50] *** Quits: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:17:13] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[23:17:18] *** Joins: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de)
[23:17:34] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[23:18:43] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 256 seconds)
[23:19:18] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[23:24:51] <LordKalma> 6400/6700. Let's see if the linker hold
[23:24:54] <LordKalma> *holds
[23:25:18] <LordKalma> also, in 6000 files there's a single warning. I bet it's not intended
[23:25:34] <johnny> on that note.. i wonder how many compiled objects/executables you folks have hanging around on your computer across all your projects
[23:25:41] <johnny> and how much space they take up
[23:25:53] <LordKalma> ahhhh crap
[23:25:55] <LordKalma> failed
[23:26:03] <johnny> your cpu tried really hard
[23:26:04] <LordKalma> [6652/6701] Linking CXX executable bin\clang-linker-wrapper.exe
[23:26:04] <LordKalma> FAILED: bin/clang-linker-wrapper.exe
[23:26:06] <LordKalma> :(
[23:26:08] <johnny> err computer tried really hard
[23:27:01] <LordKalma> ran ninja again and it's building again
[23:27:02] <LordKalma> so idk
[23:28:22] <johnny> what arey ou building?
[23:28:27] <LordKalma> llvm
[23:28:43] <johnny> oh yeah its' right there in the CMAKE_INSTALL_PREFIX :)
[23:28:44] <rpav> fun
[23:28:57] <johnny> my eyes kinda blur over on the cmake args :(
[23:29:11] <rpav> i hit OOM a lot linking llvm now ;/
[23:29:27] <johnny> and how much memory and/or swap do you have?
[23:29:28] <rpav> it didn't used to be nearly as bad
[23:29:39] <rpav> 32G ram + 16G swap
[23:29:48] <johnny> do you use compressed ram?
[23:30:01] <johnny> zram .. that's the word
[23:30:04] <rpav> no
[23:30:07] <LordKalma> annnnd it failed because I was too eager and decided to try building libunwind :)
[23:30:22] <rpav> "compressed ram" sounds terribly slow heh
[23:30:30] <johnny> it's not really
[23:30:36] <rpav> though i guess there would be little downside to compressed swap
[23:30:40] <johnny> but even so
[23:31:18] <johnny> hmm...  i never really thought about how much more you could split the linking task up into smaller parts so it didn't have to do it all in one go
[23:31:44] <LordKalma> Here I go again
[23:31:45] <rpav> i'm not sure how much you can
[23:31:46] <Friithian> I wish you could have x threads for compiling, then like, 4 for linking
[23:31:47] <LordKalma> time wasted :)
[23:32:05] <rpav> Friithian: 4 is probably a lot
[23:32:10] <Friithian> yeah, true
[23:32:17] <rpav> or at least, 4 linking processes .. i run out on 1
[23:32:21] <Friithian> or use a more efficient linker
[23:32:22] <Friithian> ooof
[23:32:38] <rpav> or at least i run really low and the OOM killer usually strikes
[23:32:40] <johnny> i haven't looked into mold yet
[23:32:47] <LordKalma> actually here it linked pretty much anything just fine, honestly
[23:32:57] <rpav> mold uses a lot of threads for linking and it's great, i'm not sure it does much one way or the other for memory consumption
[23:33:08] <rpav> it also wasn't quite ready for primetime last i tried .. some broken qt things
[23:33:17] <LordKalma> now let's wait another hour or so
[23:33:21] <rpav> but a lot better than before taht when it simply couldn't link
[23:33:32] <johnny> programming is hard
[23:33:46] <LordKalma> with a less eager build :)
[23:33:48] <rpav> i'm definitely hype about it though because it is fast as hell
[23:37:35] <Friithian> lol I am seeing suggestions to use gold as your linker
[23:37:44] <xkoncek> gold is dead
[23:37:55] <Friithian> I know, that's why it is funny
[23:38:33] <xkoncek> bitcoin is where it's at
[23:39:11] <Friithian> I wonder how llvm is built for distro releases
[23:41:01] <johnny> that's easy to find out
[23:41:08] <TinoDidriksen> https://salsa.debian.org/pkg-llvm-team/llvm-defaults/-/tree/experimental/debian mostly "rules"
[23:41:17] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[23:42:02] <rpav> lld is at least fast and links everything
[23:42:19] <johnny> just pick the packaging format you're most familiar with and look at what are uhmm "source" files for it.  in the case of arch/gentoo it's the same , but in debian and rpm it's a set of different files
[23:42:47] <LordKalma> also: https://github.com/conan-io/conan-center-index/blob/master/recipes/llvm-core/all/conanfile.py
[23:55:25] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[23:56:33] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
