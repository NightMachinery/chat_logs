[00:01:24] <FromDiscord> <Phil> Welp, all examples insist on static numbers of threads, not a dynamic number of threads. I'd start experimenting with createThread procs and see how to get the initial Thread you need for them to work, otherwise I'd recommend contemplating whether dynamic thread amounts are desired or not.
[00:01:38] <FromDiscord> <Phil> I myself shall head off to sleep
[00:02:21] <FromDiscord> <d4rckh> the thread count must be dynamic
[00:02:31] <FromDiscord> <d4rckh> have a great sleep and thanks for helping me
[00:02:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:03:03] <FromDiscord> <d4rckh> maybe someone else can help me with having dynamic thread amounts? 😛
[00:03:28] <FromDiscord> <Phil> You could always start experimenting with the procs yourself 😛
[01:11:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:18:59] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:31:41] <FromDiscord> <Schelz> So i found that winim has bind for "DEFINE_GUID" but is there a bind for "DECLSPEC_UUID" ?
[01:31:52] <FromDiscord> <Schelz> i couldn't find any
[02:09:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:41:35] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[02:42:08] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[02:53:39] <FromDiscord> <Ayy Lmao> Does anyone know how to get nimsuggest to work on the vscode extension? Whenever I check the `Use Nimsuggest Check` option I stop seeing errors.
[02:54:14] <FromDiscord> <Elegantbeef> Which extension are you using?
[02:54:34] <FromDiscord> <Ayy Lmao> the one from nimsaem
[02:55:02] <FromDiscord> <Elegantbeef> That setting uses `nimsuggest chk` instead of `nim check` for error reporting
[02:55:20] <FromDiscord> <Elegantbeef> Or vice versa, it doesnt really matter afaik
[02:56:03] <FromDiscord> <Ayy Lmao> I would like to use the `nimsuggest chk` setting because of this specific project that takes 5 seconds to compile.
[02:56:58] <FromDiscord> <Elegantbeef> Give me asecond to toy with it, to see if i can get it working
[02:57:57] <FromDiscord> <Ayy Lmao> In sublime text with nimlsp, it seems to show errors very quickly, but has this problem where changes in other files don't seem to be immediately visible and I have to restart the language server every time
[03:04:22] <FromDiscord> <Elegantbeef> add your file to your project settings 😛
[03:04:32] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/952348902345023570/image.png
[03:04:35] <FromDiscord> <Elegantbeef> For instance
[03:04:39] <FromDiscord> <Elegantbeef> I think that's right... could be wrong
[03:05:22] <FromDiscord> <Elegantbeef> Hmm i cannot get nimsuggest check to play nice
[03:05:24] <nrds> <06Prestige99> Compiling for wasm, anyone know how to enable linking?
[03:05:25] <FromDiscord> <Elegantbeef> II take it back
[03:05:30] <FromDiscord> <Elegantbeef> It's impossible to use
[03:05:49] <nrds> <06Prestige99> "To use dlopen, you need to use Emscripten's linking support" 
[03:06:13] <FromDiscord> <Ayy Lmao> In reply to @Elegantbeef "It's impossible to use": hehe, have you messed around with sublime text at all?
[03:06:29] <FromDiscord> <Elegantbeef> Nope most recently i've been using kate
[03:07:40] <FromDiscord> <Ayy Lmao> I'll have to take a look at that one. I like the idea of using sublime text but the issue I'm having with nimsuggest with it is unusable.
[03:08:45] <FromDiscord> <Elegantbeef> Yea the issue with kate is the LSP has a bug with Nimlsp so no error reporting
[03:10:50] <FromDiscord> <Ayy Lmao> Well maybe when incremental compilation comes it will alleviate my issues.
[03:14:16] <FromDiscord> <Elegantbeef> Nimlsp is nimsuggest backed so what's the issue with sublime?
[03:15:18] <FromDiscord> <Ayy Lmao> If I change something in one file, it isn't reflected in other files' error messages unless I restart the language server or restart sublime text.
[03:15:36] <FromDiscord> <Elegantbeef> That means your project is dispatching mutliple LSPs
[03:16:07] <FromDiscord> <Elegantbeef> You need a config that sets up the LSP so it has a single entry into your project so only 1 server is running
[03:16:37] <FromDiscord> <Elegantbeef> Is this project public?
[03:17:43] <FromDiscord> <Ayy Lmao> I'm not sure how to do that. The project I'm working on isn't public but just imagine a source file on the top level that is using files that are in a folder next to it.
[03:18:19] <FromDiscord> <Ayy Lmao> If I change any of the files none of the other files are aware of the changes
[03:18:28] <FromDiscord> <Elegantbeef> It might just be a `config.nims` with a `--path:"myEntry.nim"`
[03:18:40] <FromDiscord> <Elegantbeef> Yes like i said multiple LSPs are running
[03:18:45] <FromDiscord> <Elegantbeef> So each file is getting it's own
[03:19:40] <FromDiscord> <Ayy Lmao> I'll try to do a config.nims and see what happens
[03:25:46] <FromDiscord> <Ayy Lmao> In reply to @Elegantbeef "It might just be": It doesn't seem to work unfortunately.
[03:28:10] <FromDiscord> <Elegantbeef> Yea i dont know how to  configure it properly, perhaps pmunch is on, doubtful though
[03:28:24] <FromDiscord> <Ayy Lmao> I wonder if there's some setting somewhere to set an entrypoint. I never configured anything like that or found something that was telling me to
[03:35:16] <FromDiscord> <huantian> In reply to @Elegantbeef "It might just be": looking at the readme for nimlsp, I'd assume the "selector" option does this?
[03:37:30] <FromDiscord> <Ayy Lmao> What's confusing to me is that the selector option is something you set in the lsp settings, and doesn't seem like a project specific setting. It would be a drag to have to change that all the time.
[03:37:30] <FromDiscord> <Elegantbeef> Yea it seems so
[03:38:12] <FromDiscord> <Elegantbeef> Does sublime text not have project specific settings?
[03:41:29] <FromDiscord> <Ayy Lmao> Not that I know of. I'm a noob with it though. Looking through the other lsp clients they all seem to have `source.something` as well.
[03:42:00] <FromDiscord> <Ayy Lmao> sent a code paste, see https://paste.rs/rhD
[03:42:10] <FromDiscord> <Elegantbeef> The selector might just be a pattern for files
[03:42:15] <FromDiscord> <Elegantbeef> `source` being akin to ``
[03:42:33] <FromDiscord> <Ayy Lmao> Yeah that's what I'm thinking
[03:43:13] <FromDiscord> <Ayy Lmao> I just don't know how to tell it to not boot up a separate language server for each file.
[03:43:24] <FromDiscord> <Elegantbeef> I think it's down to nimlime then
[03:43:45] <FromDiscord> <Elegantbeef> Or sublime's lsp implementation
[03:44:06] <FromDiscord> <Elegantbeef> With your project opened you do have multiple NimLsp's open in your task manager eh?
[03:46:11] <FromDiscord> <Ayy Lmao> It looks like there's only one actually
[03:46:39] <FromDiscord> <Elegantbeef> That's odd given the behaviour
[04:23:11] <FromDiscord> <michaelb.eth> I have a situation where calling `alloc` or `alloc0`, or `allocShared`, or `allocShared0` always crashes with SIGSEGV after a particular number of previous calls succeeded. This only happens with Nim 1.2, is working fine with Nim 1.4 and Nim 1.6
[04:23:25] <FromDiscord> <michaelb.eth> (edit) "is" => "it's"
[04:24:19] <FromDiscord> <michaelb.eth> seems like it's probably a bug with Nim 1.2, but I'm not sure how to dig into it further, did go hunting in the issue tracker on GitHub and the forum
[04:24:41] <FromDiscord> <Rika> Sounds like the time to use bisect on the compiler then
[04:31:35] <FromDiscord> <Elegantbeef> You also can look at the generated code to see if it's sensible with `-d:danger` to reduce noise
[04:33:52] <FromDiscord> <Elegantbeef> Do you have a min repro?
[04:37:21] <FromDiscord> <ajusa> Is there a way to get the name and type of a variable that is passed into a template?
[04:37:45] <FromDiscord> <Elegantbeef> `astToStr()` for name and `typeof()`
[04:37:59] <FromDiscord> <ajusa> typeof is what I was missing, thanks!
[04:38:14] <FromDiscord> <Elegantbeef> you can do `template doThing(a: untyped{sym})` to force it to only accept symbols
[04:38:19] <FromDiscord> <Elegantbeef> Though that's subject to be removed
[05:34:39] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[05:37:50] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:54:16] <FromDiscord> <ajusa> I'm starting to realize that I try to time when I work on Nim code to when Elegantbeef is online
[05:55:51] <FromDiscord> <Elegantbeef> I'm always on
[05:55:58] *** ox is now known as oz
[05:55:58] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[05:56:11] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[06:24:35] <FromDiscord> <Bung> whats opposite operation of `nimble develop` ?
[06:49:02] <FromDiscord> <huantian> Remove it like any other package
[06:58:55] <FromDiscord> <Bung> that's not proper way I think, It assuming I dont have any comments on that dir
[07:00:10] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:02:20] <FromDiscord> <Rika> Uninstall
[07:02:25] <FromDiscord> <Rika> Use the uninstall sub command
[07:02:42] <FromDiscord> <Rika> Specify @#head if need be
[07:06:50] <FromDiscord> <Bung> okay, that's make sense, thank you
[07:22:10] <FromDiscord> <elaykph> where's the docs for builtins :/
[07:22:15] <FromDiscord> <elaykph> I can't seem to find it
[07:22:31] <FromDiscord> <elaykph> maybe it's just me blind again as usual
[07:23:44] <FromDiscord> <Elegantbeef> Do you mean keywords?
[07:23:51] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#lexical-analysis-identifiers-amp-keywords
[07:24:59] <FromDiscord> <Bung> `command line(1, 2) Error: invalid command line option: '--css'` I face this when use karax's karun
[07:25:39] <FromDiscord> <Bung> it used to work monthes ago
[07:27:49] <FromDiscord> <Bung> oh found I provide extro arg `-s`
[07:40:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[07:41:50] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[07:42:37] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[07:45:17] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[08:17:02] <FromDiscord> <elaykph> In reply to @Elegantbeef "https://nim-lang.org/docs/manual.html#lexical-analy": works thx
[08:17:30] <FromDiscord> <Elegantbeef> Very few keywords cannot be overridden so it's hardly a concern
[09:26:17] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[09:42:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:43:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:45:18] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[09:45:48] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[10:34:12] <FromDiscord> <Bung> is there cross platform , event based file watcher ?
[10:38:35] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:40:18] <FromDiscord> <Bung> @xflywind macos support has been done ? https://github.com/xflywind/fsnotify
[10:46:47] <FromDiscord> <baalajimaestro> sent a code paste, see https://paste.rs/vGX
[11:12:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:19:26] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:40:19] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:42:19] *** Joins: toulene (~toulene@user/toulene)
[11:42:51] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:46:41] *** Joins: toulene (~toulene@user/toulene)
[11:55:36] <FromDiscord> <rakgew> is there a way to retrieve fields directly from a typedesc? (without macro?) similar to .fieldPairs of an instantiated object, but just for the field names?
[11:56:11] <FromDiscord> <Elegantbeef> `for name, _ in obj.fieldPairs` 😛
[12:00:38] <FromDiscord> <rakgew> on a typedesc?
[12:00:51] <FromDiscord> <rakgew> I get  type mismatch for that..
[12:01:12] <FromDiscord> <Elegantbeef> i resolved it you need `Type()`
[12:01:13] <FromDiscord> <rakgew> aahh wait. ok you instantiated it. I see.
[12:04:25] <FromDiscord> <Elegantbeef> you will probably want a variant that does `func doThing(myType: typedesc[ref object])`  and `func doThing(myType: typedesc[object])`
[12:06:31] <FromDiscord> <dilawar (Dilawar Singh)> `fileExsits` seems like case-sensitive on Windows?!
[12:07:07] <FromDiscord> <xflywind> In reply to @Bung "<@!658563905425244160> macos support has": no
[12:07:27] <FromDiscord> <Elegantbeef> It calls https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfileattributesa so i doubt it is
[12:07:57] <FromDiscord> <rakgew> instantiating works well. if I wanted to access a field value of the object with a string is there an equivalent to python's getttr? like\: `getattr(Type, "field_name")` ?
[12:08:24] <FromDiscord> <Elegantbeef> I mean it doesnt make sense in Nim since it's static
[12:08:30] <FromDiscord> <Elegantbeef> So field access has to be done statically
[12:09:24] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S6k
[12:10:03] <FromDiscord> <rakgew> I would like to loop over type and fill the values with user input..
[12:10:19] <FromDiscord> <Elegantbeef> Ok so then why do you need to access by name
[12:10:37] <FromDiscord> <rakgew> so I ask them with stdin and then fill the value.. (if type matches)
[12:11:29] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/dfs
[12:11:36] <FromDiscord> <Elegantbeef> Then you can call this recursively
[12:12:08] <FromDiscord> <rakgew> ahh right - we have the field anyways! sry, I should have seen that.
[12:12:11] <FromDiscord> <rakgew> thank you!!
[12:12:21] <FromDiscord> <Elegantbeef> No problem
[12:13:10] <FromDiscord> <Elegantbeef> Really though i'd suggest a `proc getFromInput(val: var T)` so you can heavily customize this without manually dispatching
[12:13:28] <FromDiscord> <Elegantbeef> then inside you'd just do `getFromInput(field)`
[12:13:46] <FromDiscord> <rakgew> yes, that sound good!
[12:14:47] <FromDiscord> <Elegantbeef> If unclear `T` is just your type
[12:15:24] <FromDiscord> <rakgew> yes. luckily I currently only have string and int.. \:-D
[12:15:30] <FromDiscord> <Elegantbeef> So by default you'd implement it for all primitives, then just use `proc getFromInput(val: var object)` as the entry for default
[12:15:38] <FromDiscord> <Elegantbeef> Ah
[12:15:48] <FromDiscord> <Elegantbeef> Well if you ever want more it makes life easier
[12:16:12] <FromDiscord> <rakgew> exactly - I like the extendebility of that approach.
[12:18:12] <FromDiscord> <Elegantbeef> I love how simple it is but how extensible it is
[12:20:39] <FromDiscord> <dilawar (Dilawar Singh)> false alarm. I misread `walkDirRec` docs and assumed by default it only returns directory. Logic error from here on. All well now!
[12:20:56] <FromDiscord> <Elegantbeef> Would be odd to fix the windows directory system
[12:21:35] <FromDiscord> <dilawar (Dilawar Singh)> Thanks for reassurance. motivated me to dig a little deeper.
[12:21:46] <FromDiscord> <Elegantbeef> No problem
[12:22:00] <FromDiscord> <Elegantbeef> Looking at the source is always the best solution
[12:28:42] <FromDiscord> <rakgew> when I loop over an instantiated type via fieldPairs, I can `echo fieldName, fieldValue` but not with strformat\: `echo fmt"{fieldName} - {fieldValue}"`. it says `error generic instantiation of 'fmt'` is there another way needed to use fmt here?
[12:30:30] <FromDiscord> <Elegantbeef> name doesnt exist in the end, which is the problem
[12:31:12] <FromDiscord> <rakgew> ah? I thought it would be an empty string on generic instantiation?
[12:31:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S6q
[12:31:49] <FromDiscord> <rakgew> I actually instantiated it before the loop
[12:31:52] <FromDiscord> <Elegantbeef> Nah the `field`/`fieldPairs` is unrolled so `name`/`field` dont really exist
[12:32:45] <FromDiscord> <rakgew> hmm.. why does it exist for echo then?
[12:32:56] <FromDiscord> <rakgew> but not for fmt?
[12:33:15] <FromDiscord> <Elegantbeef> Cause `name`/`field` are replaced by the compiler in that case
[12:33:39] <FromDiscord> <Elegantbeef> But the compiler cannot replace symbols it doesnt think exist since `fmt "{name}"` hides that the `name` is inside `fmt`
[12:34:20] <FromDiscord> <rakgew> ah ok, so optimizations behind the scenes? well fair enough.
[12:34:25] <FromDiscord> <Elegantbeef> No
[12:34:28] <FromDiscord> <Elegantbeef> Fmt is a macro
[12:34:43] <FromDiscord> <Elegantbeef> It's due to how fmt works and how the loop works
[12:35:15] <FromDiscord> <rakgew> ok, so the macro tries to use it, but the compiler says it does not exist.
[12:36:01] <FromDiscord> <Elegantbeef> Yea cause of how the unroll works there is no `name` or `field` variable so when fmt is expanded it's attempting to access a variable that doesnt exist
[12:36:49] <FromDiscord> <rakgew> I see. thank you so much! \:-D
[12:37:00] <FromDiscord> <Elegantbeef> No problem
[12:37:17] <FromDiscord> <Elegantbeef> It's a bit of a annoying problem, but not much of a solution really
[12:38:25] <FromDiscord> <rakgew> right, just from looking on my code, would have been nice to use fmt there.
[12:38:43] <FromDiscord> <rakgew> but it is not a biggie..
[12:39:26] <FromDiscord> <Elegantbeef> you can also just do echo `name, ": ", field`
[12:40:11] <FromDiscord> <rakgew> yes, this is what I am now using..
[12:42:23] <FromDiscord> <Elegantbeef> "This has been redundant information with Beef"
[12:44:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[13:04:18] *** Parts: brocc (6e4dfe96fc@user/brocc) ()
[13:09:21] <FromDiscord> <rakgew> is there way to somehow prefill a default string value when showing `stdin.readLine`?
[13:09:39] <FromDiscord> <Elegantbeef> What do you mean?
[13:10:25] <FromDiscord> <rakgew> I currently fall back to a default, when the user does not enter anything, but if the default text could be pre-entered it would be obvious what they get.
[13:10:51] <FromDiscord> <rakgew> like I use today's date if they do not enter anything for date
[13:11:14] <FromDiscord> <Elegantbeef> I'd personally output it like `Enter a date (13/03/22):`
[13:11:21] <FromDiscord> <rakgew> could today's date be 'pre-typed in'?
[13:12:49] <FromDiscord> <rakgew> right, I could put into the question as well.
[13:14:02] <FromDiscord> <Elegantbeef> You might be able to write to stdin but i dont know how
[13:14:41] <FromDiscord> <rakgew> ok, thx.
[13:19:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[13:25:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[14:16:15] <NimEventer> New thread by Mardiyah: Inserting single if statement into template, see https://forum.nim-lang.org/t/9004
[14:22:22] <FromDiscord> <Bung> how to write -d:x=y in nims file ?
[14:22:51] <FromDiscord> <planetis> you need "" around the arguments I think
[14:24:16] <FromDiscord> <Bung> `switch("define", "release")`  `proc switch(key: string; val = "")`
[14:26:32] <FromDiscord> <planetis> -d\:"foo" works too
[14:28:51] <FromDiscord> <Bung> hmm, `Error: undeclared identifier: 'd'` I think it works in .cfg
[14:30:53] <FromDiscord> <planetis> https://nim-lang.github.io/Nim/nims.html
[14:31:10] <FromDiscord> <planetis> sorry it's --define\:"x"
[14:32:22] <FromDiscord> <Bung> where do i put value
[14:37:33] <FromDiscord> <Bung> hmm works now, thanks
[14:38:30] <FromDiscord> <S3cur3Th1sSh1t> How would you port the following to Nim? `#define RVA(type, base_addr, rva) (type)(ULONG_PTR)((ULONG_PTR) base_addr + rva)`
[14:42:55] <FromDiscord> <Rika> do we assume `type` is a `typedesc`, `base_addr` is a `pointer`, and `rva` is an `int`?
[14:43:13] <FromDiscord> <Rika> what is ULONG_PTR?
[14:44:00] <FromDiscord> <Rika> a pointer represented as a ULONG? what length is this ULONG exactly? same as in 64 bit arch?
[14:55:41] <FromDiscord> <S3cur3Th1sSh1t> sent a long message, see http://ix.io/3S71
[14:57:47] <FromDiscord> <S3cur3Th1sSh1t> sent a long message, see http://ix.io/3S72
[14:58:28] <FromDiscord> <S3cur3Th1sSh1t> I cannot use untyped here for the values, this would only be possible for macros - from reading the docs.
[14:58:38] <FromDiscord> <Rika> proc no
[14:58:51] <FromDiscord> <Rika> ah well i guess it works
[14:59:18] <FromDiscord> <Rika> im not a windows programmer so i do not know these types
[14:59:42] <FromDiscord> <Rika> that works
[14:59:48] <FromDiscord> <S3cur3Th1sSh1t> How would I use this function as macro?
[14:59:54] <FromDiscord> <Rika> you dont need to
[15:00:05] <FromDiscord> <S3cur3Th1sSh1t> sent a long message, see http://ix.io/3S73
[15:00:08] <FromDiscord> <Rika> thats wrong
[15:00:10] <FromDiscord> <Rika> use a template in that case
[15:00:22] <FromDiscord> <Rika> the proc works as any other proc except that the `atype` must be determined on compile time (of course)
[15:00:38] <FromDiscord> <S3cur3Th1sSh1t> sent a long message, see https://paste.rs/upt
[15:01:06] <FromDiscord> <Rika> im not sure if stropping works properly in templates so maybe
[15:01:10] <FromDiscord> <Rika> it probably does
[15:01:48] <FromDiscord> <S3cur3Th1sSh1t> What does stropping mean? I'm only hobbyist programmer 🙂
[15:01:54] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[15:02:11] <FromDiscord> <Rika> the `` around type
[15:02:24] <FromDiscord> <S3cur3Th1sSh1t> Ah, yeah I already used that. It's just ignored ^^
[15:02:31] <FromDiscord> <S3cur3Th1sSh1t> Usable like a normal variable
[15:02:34] <FromDiscord> <Rika> ok
[15:02:37] <FromDiscord> <Rika> then its working yes
[15:04:18] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[15:07:50] <FromDiscord> <Bung> is nims broken , I get "\n  none"' ,"\n  0"'
[15:08:03] <FromDiscord> <Rika> ?
[15:08:54] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[15:09:13] <FromDiscord> <Bung> sent a code paste, see https://paste.rs/Ymx
[15:09:49] <FromDiscord> <Bung> when I get these values from nim
[15:29:24] <FromDiscord> <soda> Is it really not possible to pass primitives by reference? 🤔
[15:30:05] <FromDiscord> <soda> what about a string?
[15:30:52] <FromDiscord> <konsumlamm> it is possible, via `var`
[15:31:02] <FromDiscord> <konsumlamm> but why exactly do you need to pass them by reference?
[15:31:18] <FromDiscord> <soda> What is the syntax for passing a reference to a proc?
[15:31:58] <FromDiscord> <konsumlamm> the paramater has to be a `var SomeType`
[15:32:09] <FromDiscord> <konsumlamm> then you just pass the argument like you normally would
[15:33:27] <FromDiscord> <soda> hmm
[15:33:56] <FromDiscord> <soda> doesn't seem to be right
[15:35:34] <FromDiscord> <soda> you mean ↵proc someProc(str: var string) ?
[15:35:39] <FromDiscord> <konsumlamm> yes
[15:35:47] <FromDiscord> <soda> 🤔
[15:36:08] <FromDiscord> <soda> ah okay i understand
[15:38:31] <FromDiscord> <soda> So a custom object initialized as a ref is always heap allocated
[15:39:02] <FromDiscord> <soda> Are vars then all stack allocated?
[15:39:34] <FromDiscord> <Rika> a var object is stack
[15:39:40] <FromDiscord> <Rika> a var ref object is naturally still heap
[15:40:08] <FromDiscord> <Rika> but you can then edit the ref object being pointed to as well
[15:40:34] <FromDiscord> <soda> hmm okay makes sense
[15:53:46] <FromDiscord> <Phil> actually... wait, for my web-projects signal system I create a hashmap full of pointers to functions on start-up that may get called during runtime.↵Since pointers are untraced references... do I have to manually deallocate these pointers manually on shutdown?
[15:57:39] <FromDiscord> <Rika> `pointers to functions` as in `proc()`s? or literal `ptr`s?
[15:57:53] <FromDiscord> <Rika> `proc()` is ok, dont worry about those, i believe its no issue
[15:58:16] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[15:58:58] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3S7c
[15:59:50] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3S7d
[15:59:56] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3S7d" => "https://play.nim-lang.org/#ix=3S7e"
[16:01:06] <FromDiscord> <Rika> Did you allocate anything
[16:01:11] <FromDiscord> <Rika> Like, anything at all
[16:01:18] <FromDiscord> <Rika> If no then nothing is there to free
[16:01:32] <FromDiscord> <Phil> You mean with calling "alloc" ? Then no
[16:01:52] <FromDiscord> <Rika> How do you set these pointers then
[16:04:30] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/yfY
[16:04:57] <FromDiscord> <Phil> Called like this:↵`connect(SignalType.stPostCreate, DiaryEntry, diaryEntryCreateSignal)`
[16:06:11] <FromDiscord> <Phil> Which is why I was under the impression that the underlying nim magic has some memory allocated somewhere to store the proc in, and then a second area of memory allocated for the Table of Pointer-Hashsets
[16:06:36] <FromDiscord> <Phil> (edit) "Which is why I was under the impression that the underlying nim magic has some memory allocated somewhere to store the proc ... in,(STORE)." 03added "(diaryEntryCreateSignal)" | "(diaryEntryCreateSignal)in, and then a second area of memory allocated for the Table of Pointer-Hashsets ... " 03added "(STORE)."
[16:06:54] <FromDiscord> <Phil> And I thought that maybe I have to dellocate the memory that the pointers take up or sth
[16:07:02] <FromDiscord> <Phil> (edit) "dellocate" => "deallocate"
[16:28:12] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[16:29:48] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[16:53:47] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952557587373641749/imissyou.nim
[16:53:52] <FromDiscord> <retkid> discords nim parser
[16:53:57] <FromDiscord> <retkid> doesn't like """ """
[16:54:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[17:20:27] <FromDiscord> <retkid> Ok so i have a really stupid problem right
[17:20:50] <FromDiscord> <retkid> ugh i know the aner
[17:20:51] <FromDiscord> <retkid> (edit) "aner" => "anwer"
[17:20:57] <FromDiscord> <retkid> its just a pita
[17:21:05] <FromDiscord> <retkid> (edit) "anwer" => "answer"
[17:21:10] <FromDiscord> <retkid> nevermind 🙄
[17:21:49] <FromDiscord> <enthus1ast> the nim html parser is not that great
[17:21:54] <FromDiscord> <enthus1ast> html/xml
[17:22:06] <FromDiscord> <enthus1ast> if you want to use this i would clean the html beforehand
[17:22:50] <FromDiscord> <enthus1ast> eg with html tidy
[17:26:52] <FromDiscord> <enthus1ast> or use the "html tokens" way araq describes in the forum (i cannot find the post....)
[17:27:55] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[17:33:54] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[17:50:18] <FromDiscord> <retkid> In reply to @enthus1ast "the nim html parser": well im using Q to avoid it
[17:51:48] <FromDiscord> <Rika> What is Q
[17:52:20] <FromDiscord> <retkid> q
[17:52:38] <FromDiscord> <retkid> https://github.com/OpenSystemsLab/q.nim
[18:18:28] <FromDiscord> <Patitotective> In reply to @retkid "doesn't like """ """": multiline comments neither
[18:20:02] *** Joins: arkurious (~arkurious@user/arkurious)
[18:20:06] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952579311389528074/unknown.png
[18:20:21] <FromDiscord> <retkid> isn't that so readable
[18:38:38] <FromDiscord> <enthus1ast> @retkid\: q uses the default nim stuff
[18:38:50] <FromDiscord> <retkid> ah
[18:38:51] <FromDiscord> <enthus1ast> xmltree htmlparser
[18:38:59] <FromDiscord> <retkid> should we rise up and make our own parsser
[18:39:01] <FromDiscord> <retkid> (edit) "parsser" => "parser"
[18:39:29] <FromDiscord> <enthus1ast> It would be nice to have a really good html parser
[18:39:38] <FromDiscord> <retkid> in that script i was parsing twitches verbose fuck you randomly generated JS content
[18:39:39] <FromDiscord> <enthus1ast> But a big task imho
[18:39:55] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[18:40:07] <FromDiscord> <retkid> they didn't change the start of the header i needed tho >:)
[18:40:07] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[18:40:12] <FromDiscord> <retkid> (edit) "header" => "class"
[18:40:38] <FromDiscord> <enthus1ast> Maybe identify issues, create small test cases and open issues in the nim parsers
[18:41:11] <FromDiscord> <retkid> i wanna grow up and start developing for the community because treeform inspires me a lot
[18:41:22] <FromDiscord> <retkid> but im also busy and wanna do weirds hit
[18:41:24] <FromDiscord> <retkid> (edit) "weirds hit" => "weird shit"
[18:41:26] <FromDiscord> <retkid> 😔
[18:42:20] <FromDiscord> <enthus1ast> Same, stupid work all the time 😭↵(@retkid)
[18:42:25] <FromDiscord> <soda> Prioritize weirdness at all times
[18:43:20] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[18:43:23] <FromDiscord> <retkid> also due to life issues and depression productivity went:↵📉 (whistle bomb noise)
[18:47:52] *** Joins: fowl (~fowlmouth@user/fowl)
[18:52:35] <FromDiscord> <soda> what's a cool project?
[18:52:46] <FromDiscord> <soda> something to make to further solidify my understanding of nim
[18:53:09] <FromDiscord> <soda> lookin for ideas
[18:53:54] <FromDiscord> <retkid> In reply to @soda "something to make to": i hoard my ideas for myselfg
[18:53:55] <FromDiscord> <retkid> (edit) "myselfg" => "myself"
[18:53:56] <FromDiscord> <retkid> >:)
[18:54:29] <FromDiscord> <auxym> in my experience side projects only work if you're really interested in them, so it's highly personal
[18:54:45] <FromDiscord> <retkid> nah man
[18:54:50] <FromDiscord> <retkid> im obsessive
[18:54:58] <FromDiscord> <retkid> i complete projects if they are possible to complete
[18:55:01] <FromDiscord> <auxym> if you're just looking for something to do though, do advent of code maybe?
[18:55:10] <FromDiscord> <soda> In reply to @auxym "if you're just looking": oh good idea
[18:55:11] <FromDiscord> <retkid> i find it very very very stressful to have a project unfinished
[18:55:18] <FromDiscord> <retkid> for some reason
[18:55:45] <FromDiscord> <auxym> eh, I get obsessive when I'm really into something. At the opposite end I have many half-finished projects that I have fully lost interest in.
[18:56:08] <FromDiscord> <retkid> I have an unfinished project that im really sad about
[18:56:19] <FromDiscord> <Rika> then do it and be not sad about it
[18:56:19] <FromDiscord> <soda> In reply to @retkid "i hoard my ideas": Non-free license ur ideas
[18:56:22] <FromDiscord> <retkid> Im pretty sure I've come to the conclusion its mathematically impossible
[18:56:34] <FromDiscord> <Rika> u dont know that until u formally prove it
[18:56:41] <FromDiscord> <soda> personally i don't really associate programming with emotions lol
[18:56:51] <FromDiscord> <soda> motivation and interest doesn't really have much to do with it
[18:56:52] <FromDiscord> <soda> maybe weird
[18:57:02] <FromDiscord> <Rika> In reply to @retkid "Im pretty sure I've": dont let ur conjectures be conjectures
[18:57:16] <FromDiscord> <retkid> In reply to @Rika "u dont know that": OK Its practically mathematically impossible. It got to a point where it was it was 3 weeks of just trying new ideas to no better rseults
[18:57:18] <FromDiscord> <retkid> (edit) "rseults" => "results\"
[18:57:19] <FromDiscord> <auxym> In reply to @soda "oh good idea": Yeah, in addition to improving your Nim, you'll learn about ds/algos. Highly recommend looking into other people's nim solution once you're done, too, so you can see patterns that you might no know about
[18:57:37] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[18:57:48] <FromDiscord> <Rika> In reply to @retkid "OK Its practically mathematically": my point still stands, just because you think you cant do it doesnt mean its impossible to do; you have to be able to explain why it cant be done
[18:57:57] <FromDiscord> <auxym> In reply to @Rika "u dont know that": per the incompleteness theorem, it might be impossible to prove 🙂
[18:58:01] <FromDiscord> <soda> In reply to @auxym "Yeah, in addition to": I've done a lot of this stuff in C++ which makes it a good idea to re-attempt stuff in nim
[18:58:09] <FromDiscord> <soda> already have a point of comparison
[18:58:17] <FromDiscord> <retkid> In reply to @Rika "my point still stands,": I guess it can be done but not efficiently. My objectives where extremely hard to do
[18:58:23] <FromDiscord> <Rika> In reply to @auxym "per the incompleteness theorem,": well then we just get another np complete problem and you can set a bounty xd
[18:58:43] <FromDiscord> <Rika> In reply to @retkid "I guess it can": well now most of us are probably morbidly curious what you were trying to do
[18:59:07] <FromDiscord> <soda> btw, is there a way to have '->' instead if ':' for proc return declarations? Like with lambdas?
[18:59:08] <FromDiscord> <retkid> N o p e
[18:59:15] *** Joins: toulene8 (~toulene@user/toulene)
[18:59:22] <FromDiscord> <auxym> In reply to @soda "btw, is there a": check out the sugar module
[18:59:29] <FromDiscord> <soda> In reply to @auxym "check out the sugar": i don't work with normal proc afaik
[18:59:34] <FromDiscord> <soda> (edit) "i" => "it"
[18:59:44] <FromDiscord> <soda> just closures
[19:00:01] <FromDiscord> <Rika> then no
[19:00:02] <FromDiscord> <retkid> In reply to @Rika "well now most of": I will tell you after I get out my brute force hammer and databases of data and show you that I cant find any correlation in these numbers to calculate the values in a fast way without gpu acceleration
[19:00:09] <FromDiscord> <Rika> you can prolly make a macro for that
[19:00:19] <FromDiscord> <soda> oh yeh hmm
[19:00:24] <FromDiscord> <soda> haven't looked into macros at all yet
[19:00:27] <FromDiscord> <soda> err
[19:00:29] <FromDiscord> <Rika> i will condemn you if you do
[19:00:38] <FromDiscord> <soda> err unless you're not talking to me?
[19:00:44] <FromDiscord> <retkid> they are
[19:00:45] <FromDiscord> <Rika> i am talking to you
[19:00:51] <FromDiscord> <soda> why would u condemn it?
[19:00:53] <FromDiscord> <retkid> macros are the cool stuff that -> are
[19:01:05] <FromDiscord> <retkid> (or are they templates?)
[19:02:13] <FromDiscord> <Rika> In reply to @soda "why would u condemn": because its cursed and unnecessary imo
[19:02:30] <FromDiscord> <auxym> https://siraben.dev/2022/03/01/tree-sitter.html anyone feel like writing a neovim treesitter grammar for nim?
[19:02:38] <FromDiscord> <Rika> nope
[19:02:41] <FromDiscord> <Rika> no thanks
[19:02:59] <FromDiscord> <auxym> same, hence why I'm trying to lure others into doing it
[19:03:08] <FromDiscord> <Rika> someone already tried and died trying
[19:03:11] <FromDiscord> <Rika> we dont need more casualties
[19:03:19] <FromDiscord> <soda> In reply to @auxym "https://siraben.dev/2022/03/01/tree-sitter.html any": maybe an emacs package
[19:04:23] <FromDiscord> <auxym> tried emacs a couple times, could never get into it. first time spacemacs on linux w/ nim package, crashed often, second time doom on windows, is slow as a dog
[19:04:33] <FromDiscord> <soda> doom emacs
[19:04:39] <FromDiscord> <Rika> he just said that
[19:04:46] <FromDiscord> <Rika> "second time doom on windows"
[19:04:57] <FromDiscord> <soda> yep
[19:05:02] <FromDiscord> <soda> just saying what i use
[19:05:10] <FromDiscord> <soda> you gotta run it as a client
[19:05:21] <FromDiscord> <soda> but i only know how to do it on windows, then it's very fast
[19:05:26] <FromDiscord> <auxym> yeah, apparently emacs being super-slow on windows is a known thing. If I'm going to invest time into learning a complex editor, it has to work well cross-platform. neovim is quite fine on linux and windows
[19:06:41] <FromDiscord> <Rika> In reply to @soda "you gotta run it": what does this mean?
[19:06:50] <FromDiscord> <Rika> is this related to the emacs is an os meme
[19:06:54] <FromDiscord> <Rika> does emacs secretly run a server
[19:06:54] <FromDiscord> <soda> emac --daemon
[19:07:00] <FromDiscord> <soda> (edit) "emac --daemon" => "emacs--daemon"
[19:07:02] <FromDiscord> <Rika> thats fuckin cursed id say
[19:07:06] <FromDiscord> <soda> (edit) "emacs--daemon" => "emacs --daemon"
[19:07:11] <FromDiscord> <soda> no it's got nothing to do with that
[19:07:24] <FromDiscord> <Rika> okay
[19:07:30] <FromDiscord> <soda> it just lets you load your emacs config only once and spawn clients quickly
[19:07:34] <FromDiscord> <Rika> okay
[19:07:37] <FromDiscord> <Rika> i see
[19:15:40] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952593293756203018/unknown.png
[19:15:58] <FromDiscord> <retkid> I hope if anyone finds my repo and they see this, they giggle as much as I did
[19:23:43] *** Quits: toulene8 (~toulene@user/toulene) (Read error: Connection reset by peer)
[19:25:07] *** Joins: toulene (~toulene@user/toulene)
[19:25:25] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:29:06] *** Joins: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de)
[19:36:30] <FromDiscord> <auxym> do nim seqs ever shrink the internal buffer? eg if you pop out half the items? Or they only grow?
[19:47:21] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[19:52:17] <FromDiscord> <michaelb.eth> sent a long message, see http://ix.io/3S8d
[19:52:29] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[19:53:14] <FromDiscord> <soda> Oh nice. tbh doom's got a few hundred more packages that it needs
[19:54:38] <FromDiscord> <Rika> In reply to @auxym "do nim seqs ever": only grow
[19:55:30] <FromDiscord> <michaelb.eth> prelude’s been around longer I think (I’ve been using it since 2013 iirc), and while it’s evolved over the years the maintainer has stuck to his principles of keeping it lightweight
[19:55:57] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[19:56:26] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[19:56:32] <FromDiscord> <soda> I will def check it out
[19:56:52] <FromDiscord> <soda> been considering going with vanilla emacs and adding my own packages, but this might be a nice alternative
[20:02:57] <FromDiscord> <michaelb.eth> sent a long message, see https://paste.rs/urW
[20:03:08] <FromDiscord> <soda> oh absolutely
[20:03:11] <FromDiscord> <michaelb.eth> (edit) "http://ix.io/3S8g" => "https://paste.rs/d5t"
[20:03:17] <FromDiscord> <soda> it's by far the best git fronted i've used
[20:03:27] <FromDiscord> <michaelb.eth> (edit) "https://paste.rs/4VD" => "https://paste.rs/M3q"
[20:03:29] <FromDiscord> <soda> (edit) "fronted" => "frontend"
[20:03:34] <FromDiscord> <soda> i also really like org mode and elfeed
[20:05:38] <FromDiscord> <soda> sent a code paste, see https://paste.rs/9bn
[20:05:41] <FromDiscord> <soda> dude this is so nice
[20:06:10] <FromDiscord> <Rika> your return statements are unnecessary, you can use implicit return
[20:06:18] <FromDiscord> <soda> yeah i just used to it
[20:06:24] <FromDiscord> <Rika> ok
[20:06:25] <FromDiscord> <soda> but noted
[20:06:50] <FromDiscord> <soda> probably a good idea to write nim in the nim way
[20:07:01] <FromDiscord> <Rika> well theres not really a nim way thats the thing
[20:07:14] <FromDiscord> <soda> yea true with the metaprogramming stuff especially
[20:07:37] <FromDiscord> <soda> but omitting the return statement does give a more accurate way of how the code transpiles i think
[20:09:16] <FromDiscord> <Rika> eh i dont see how
[20:09:28] <FromDiscord> <Rika> ~~btw people will get mad at you if you call it transpiling~~
[20:10:21] <FromDiscord> <soda> hmm. well i assume the cost of the function pointer is omitted by literally replacing it with contents of the proc block, but i may be wrong
[20:10:26] <FromDiscord> <soda> In reply to @Rika "~~btw people will get": lol why is that
[20:11:09] <FromDiscord> <soda> (edit) "hmm. well i assume the cost of the function pointer is omitted by literally replacing it with contents of the proc block, ... but" 03added "making the 'return' not mean anything beyond serving programmer, "
[20:11:19] <FromDiscord> <Rika> negative connotation of the word really
[20:11:48] <FromDiscord> <soda> hmm okay
[20:11:54] <FromDiscord> <soda> also noted
[20:12:03] <FromDiscord> <Rika> In reply to @soda "hmm. well i assume": procedures arent usually inlined unless the compiler deems it should
[20:12:23] <FromDiscord> <soda> i see
[20:12:47] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/i9E
[20:13:16] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3S8j
[20:13:23] <FromDiscord> <konsumlamm> transpiling implies that the compiler just does source-to-source translation without optimizing anything or checking much, which isn't true for Nim
[20:13:28] <FromDiscord> <retkid> I could write one easily, but it should be in sugar right?
[20:14:07] <FromDiscord> <soda> In reply to @konsumlamm "transpiling implies that the": So what's the more accurate alternative?
[20:14:37] <FromDiscord> <konsumlamm> "compiling"
[20:15:31] <FromDiscord> <soda> okay
[20:17:02] <FromDiscord> <soda> Do i need an external package to work with opengl?
[20:17:22] <FromDiscord> <michaelb.eth> re: return, see https://status-im.github.io/nim-style-guide/language.result.html↵↵The top part could be worded better: “pros” is “pros of using result”, “cons” is “cons of using result”.
[20:19:59] <FromDiscord> <retkid> looks like there isn't
[20:19:59] <FromDiscord> <retkid> ugh
[20:20:52] <FromDiscord> <soda> In reply to @retkid "looks like there isn't": sorry i dont know any js
[20:21:04] <FromDiscord> <retkid> basically
[20:21:08] <FromDiscord> <retkid> .some(x=>)
[20:21:18] <FromDiscord> <retkid> returns a bool if any criteria is met in an array
[20:22:04] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3S8o
[20:22:05] <FromDiscord> <retkid> prints true
[20:22:27] <FromDiscord> <michaelb.eth> std/sequtils any, I think
[20:22:47] <FromDiscord> <michaelb.eth> https://nim-lang.org/docs/sequtils.html#any%2CopenArray%5BT%5D%2Cproc%28T%29
[20:22:51] <FromDiscord> <retkid> 😭 it hid under my nose
[20:35:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:41:05] <FromDiscord> <retkid> anyone got a cleaner way to do this
[20:41:24] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/am2
[20:43:07] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3S8B
[20:43:08] <FromDiscord> <retkid> thats more compact but less readable idk
[20:43:10] <FromDiscord> <huantian> start = x== 0
[20:43:27] <FromDiscord> <huantian> ending = x == endy
[20:43:54] <FromDiscord> <retkid> I like the way you think
[20:43:57] <FromDiscord> <huantian> (edit) "x==" => "x =="
[20:44:39] <FromDiscord> <retkid> though I think thats less readable
[20:44:55] <FromDiscord> <retkid> but its very smart
[20:45:15] <FromDiscord> <huantian> Perhaps a different variable name would help
[20:45:18] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952615850551181352/unknown.png
[20:45:25] <FromDiscord> <retkid> i see we had a similar childhood
[20:45:52] <FromDiscord> <huantian> Heh modded mc eh?
[20:46:11] <FromDiscord> <retkid> i watched him like 1.6.4-1.8.9
[20:46:18] <FromDiscord> <retkid> rip witchery 😭
[20:46:31] <FromDiscord> <huantian> Witchery was cool
[20:46:48] <FromDiscord> <retkid> its cool how many modders can tolerate java
[20:47:08] <FromDiscord> <retkid> I would have appreciated more mods as a kid if i wasn't coding in lua
[20:48:43] <FromDiscord> <huantian> Heh java is just fine imo
[20:48:54] <FromDiscord> <huantian> Heard good stuff about kotlin tho
[20:49:01] <FromDiscord> <retkid> Kotlin is cool
[20:49:06] <FromDiscord> <retkid> its much more freeing
[20:50:30] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952617158989447198/unknown.png
[20:51:17] <FromDiscord> <huantian> I don’t understand how people make large projects in lua though, that’s something I probably could not do
[20:52:15] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3S8D
[20:52:24] <FromDiscord> <retkid> comment will remind me when i forget tomorrow
[20:52:26] <FromDiscord> <retkid> >:)
[20:53:58] <FromDiscord> <huantian> Perhaps you can assign the two comparisons to a variable with a name that can remind you what they are
[20:54:15] <FromDiscord> <retkid> this makes sense to me
[20:54:17] <FromDiscord> <huantian> isFirstElement↵isLastElement
[20:54:40] <FromDiscord> <retkid> perhaps
[20:54:45] <FromDiscord> <retkid> 🤔
[20:55:15] <FromDiscord> <huantian> I mean the current setup is fine if you like it lol
[20:55:34] <FromDiscord> <retkid> I shall consume grilled cheese like a child and come back
[20:55:41] <FromDiscord> <retkid> it will enlighten me
[21:18:50] <FromDiscord> <sOkam!> In reply to @retkid "": those do be facts
[21:19:12] <FromDiscord> <sOkam!> goes both ways 😄
[21:32:03] <FromDiscord> <huantian> Botania is a QoL mod
[21:32:17] <NimEventer> New question by pietroppeter: How to implement a macro to apply a template repeatedly with some common and some varying arguments, see https://stackoverflow.com/questions/71459423/how-to-implement-a-macro-to-apply-a-template-repeatedly-with-some-common-and-som
[21:58:03] <FromDiscord> <S3cur3Th1sSh1t> One more noobie question from my side. I'm often facing the situation, that procs which are defined later in the same file cannot be resolved when compiling. Are there any flags or something so that the order of the procs is ignored?
[22:01:18] <FromDiscord> <soda> prob not↵use a forward declaration
[22:04:31] <FromDiscord> <S3cur3Th1sSh1t> I have the problem that one calls another which calls the first 🤔
[22:05:09] <FromDiscord> <S3cur3Th1sSh1t> They call each other in some cases so both need the other one to be declared first.
[22:05:26] *** Joins: retronav (pranav@user/obnoxiousnerd)
[22:06:09] <FromDiscord> <soda> sent a code paste, see https://paste.rs/g9v
[22:06:16] <FromDiscord> <soda> a forward declaration would fix this issue
[22:06:35] <FromDiscord> <S3cur3Th1sSh1t> Ah, okay. Now I understand it.
[22:06:41] <FromDiscord> <soda> but whatever you are doing could probably be re-written to avoid this
[22:06:54] <FromDiscord> <soda> it's usually not a good idea to have cyclic dependencies like that
[22:10:25] <Amun-Ra> S3cur3Th1sSh1t: there is experimental feature "codeReordering"
[22:10:34] <Amun-Ra> if won't help with cyclic dependencies tho
[22:12:33] <FromDiscord> <S3cur3Th1sSh1t> In reply to @soda "it's usually not a": Thank you! 🙂 I'll also re-think about the implementation
[22:14:14] <Amun-Ra> S3cur3Th1sSh1t: you can have forward proc declarations in nim
[22:16:14] <Amun-Ra> S3cur3Th1sSh1t: https://play.nim-lang.org/#ix=3S90
[22:16:57] <Amun-Ra> and if that's a mutual dependency of two types in one type block - that's builtin
[22:22:25] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[22:23:29] <FromDiscord> <planetis> Man new concepts work for me!
[22:23:49] <FromDiscord> <planetis> about freaking time something works first try
[22:50:53] <FromDiscord> <michaelb.eth> is there a writeup on what's changed in concepts? when you say "new concepts" is that something that's in 1.6 or not released yet?
[22:53:50] <Amun-Ra> new syntax is the only thing I know that changed (apart from Self)
[23:06:18] <FromDiscord> <planetis> nope
[23:06:47] <FromDiscord> <planetis> and I kind of take it back, I can't have openarray[MyConcept] that doesn't compile
[23:07:30] <FromDiscord> <planetis> it's mostly two rfcs https://github.com/nim-lang/RFCs/issues/168 and another one about serializing json
[23:07:35] <FromDiscord> <planetis> there are mostly unimplemented
[23:14:51] <FromDiscord> <planetis> https://play.nim-lang.org/#ix=3S9i
[23:24:06] <FromDiscord> <planetis> I figured out I can have both seq[float32] and float32 match for ShaderV so it works
[23:24:22] <FromDiscord> <planetis> but it's not how  I wanted to express that
[23:48:55] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[23:53:05] <FromDiscord> <soda> In reply to @michaelb.eth "Emacs Prelude is another": Thanks for this. Been looking for something like it for a while now.
[23:53:40] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[23:54:03] <FromDiscord> <michaelb.eth> glad you like it, has certainly served me well, and it's easy to customize, whether modifying prelude itself or putting `.el`modules in `personal/` dir
