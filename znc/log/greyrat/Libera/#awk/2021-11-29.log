[00:09:17] *** brennen is now known as brennen|afk
[00:10:32] *** Joins: zacts (~zacts@user/zacts)
[00:11:16] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 265 seconds)
[00:12:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:13:31] *** Joins: seninha (~seninha@user/seninha)
[00:23:39] *** Joins: lavaball (felix@31.204.155.215)
[00:42:41] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 265 seconds)
[00:53:37] *** Joins: Torr (~Torr@user/torr)
[00:58:04] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[01:03:44] *** Joins: kensanata (~user@user/kensanata)
[01:04:10] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[01:08:31] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[01:12:35] *** Quits: Doraemon (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[01:12:56] *** Joins: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de)
[01:39:31] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:48:44] *** Parts: Thanatermesis (~Thanaterm@191.92.148.122) (ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[01:55:40] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 265 seconds)
[02:17:13] *** Quits: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[02:31:52] *** Joins: roarde (~roarde@user/roarde)
[02:56:05] *** Joins: emanuele6 (~emanuele6@net-2-36-148-173.cust.vodafonedsl.it)
[02:56:11] *** Quits: emanuele6 (~emanuele6@net-2-36-148-173.cust.vodafonedsl.it) (Changing host)
[02:56:11] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:20:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:58:06] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[04:00:10] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[04:11:00] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 265 seconds)
[05:16:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:22:03] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:47:22] *** Joins: Torr (~Torr@user/torr)
[05:50:52] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[05:50:52] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[05:50:52] *** Joins: wuseman (~wuseman@user/wuseman)
[06:05:35] *** Joins: vlm (~vlm@user/vlm)
[06:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:41:21] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[06:42:31] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[07:06:04] *** Joins: hejux (~hejux@146.56.136.247)
[07:06:46] <hejux> i'd like to hide Recv-Q and Send-Q from ss -nutlp output, how do i do that with awk?
[07:07:18] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[07:16:30] <hejux> https://paste.rs/ufE
[07:16:58] <hejux> e36freak: :P
[07:17:11] <emanuele6> cross posting? :O
[07:17:25] <hejux> they are brothers right?
[07:18:14] <e36freak> completely different tools
[07:19:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:23:47] <emanuele6> you could do something like
[07:23:51] <emanuele6> NR==1 && match($0,/Recv-Q\s*Send-Q\s*/) { start = RSTART; len = RLENGTH } { print substr($0,1,start+1)substr($0,start+len+1) }
[07:24:46] <emanuele6> maybe `{ start = RSTART; len = RLENGTH }' is redundant, i don't know if RSTART are guaranteed to be persistent
[07:25:53] <emanuele6> i think yes
[07:26:52] <emanuele6> so just    NR==1 { match($0,/Recv-Q\s*Send-Q\s*/) } { print substr($0,1,RSTART+1)substr($0,RSTART+RLENGTH+1) }    should work
[07:27:30] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[07:28:39] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[07:28:45] <hejux> emanuele6: but the head line becomes : Netid State  Reocal Address:Port  Peer Address:PortProcess
[07:28:55] <emanuele6> err yeah the math is off
[07:29:04] <emanuele6> it should be: substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH)
[07:30:17] <hejux> much better, but : Netid State  Local Address:Port  Peer Address:PortProcess
[07:30:28] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[07:30:30] <hejux> see that Peer Address:PortProcess it should be Peer Address:Port Process
[07:30:37] *** Joins: shbot (~shbot@37.139.2.101)
[07:30:58] <emanuele6> no.
[07:31:54] <emanuele6> why should awk add a space there?
[07:32:00] <emanuele6> it is not in the input.
[07:32:10] <hejux> and  Local Address:Port    becomes Reocal Address:Port ?
[07:32:34] <emanuele6> that is not true.
[07:32:50] <emanuele6> <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 1
[07:32:53] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 1
[07:32:54] <shbot> emanuele6: Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess
[07:33:01] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 'NR==1 { match($0,/Recv-Q\s*Send-Q\s*/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[07:33:02] <hejux> sorry, it is a problem of my output, i use ss -nutlp | head -n2 
[07:33:03] <shbot> emanuele6: Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess
[07:33:16] <hejux> and head removes the space before `Process`
[07:33:55] <hejux> shitty ss output 
[07:34:48] <e36freak> FIELDWIDTHS gets it done with gawk
[07:34:54] <emanuele6> also i got confused with perl
[07:34:56] <e36freak> fixed width fields are a pain in the ass otherwise
[07:35:06] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[07:35:07] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[07:35:13] <emanuele6> no \s stuff in awk
[07:36:13] <emanuele6> also ' +' is more appropriate than '\s*' anyway
[07:37:27] <hejux> i'll just remove the head, with ss -H
[07:43:25] <hejux> much better: 
[07:43:32] <hejux> printf '%s\n' "Netid State Local Address:Port  Peer Address:Port Process" ; sudo ss -nutlp | gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }' | grep -v 'Netid'
[07:43:38] <hejux> fuck the ss :)
[07:44:18] <e36freak> that awk should remove the head just fine
[07:44:19] <emanuele6> why grep-vNetid?
[07:44:35] <e36freak> oh
[07:44:39] <e36freak> just put "next" in there
[07:44:51] <emanuele6> that removes every line that contains Netid
[07:44:54] <hejux> awk did not remove the head
[07:44:55] <emanuele6> awk can do that too
[07:44:57] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:45:05] <e36freak> {match($0,Recv-Q +Send-Q +/); next} {print ...
[07:45:22] <emanuele6> but if you want to remove the first line you should use head +1, not grep -v somethinginthefirstline
[07:45:39] <emanuele6> but since you are using awk anyway, just use awk to do it
[07:45:48] <emanuele6> one way is as e36freak showed
[07:46:17] <hejux> printf '%s\n' "Netid State Local Address:Port  Peer Address:Port Process" ; sudo ss -nutlp | gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) ; next } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[07:46:42] <hejux> this works like a charm 
[07:46:51] <emanuele6> why are you printing the header yourself??
[07:46:52] <e36freak> why are you printing your own header
[07:47:00] <e36freak> just remove the next and leave the header as-is then
[07:47:02] <e36freak> i'm so confused
[07:47:08] <e36freak> the awk removes that part of the header as well
[07:47:18] <hejux> because i need the header, 
[07:47:30] <e36freak> then get rid of the printf and just use the original awk?
[07:47:38] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[07:47:39] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[07:47:57] <emanuele6> i showed you this before with just the header, awk removed the columns.
[07:47:58] <hejux> if awk did not get rid of the header, the header shows: "Peer Address:PortProcess" instead of "Peer Address:Port Process"
[07:48:29] <hejux> anything that prcoess the output of ss, will make the header like this ".... Peer Address:PortProcess"
[07:48:31] <e36freak> ss does that, not awk
[07:48:31] <emanuele6> because "Peer Address:PortProcess" is what is in the input.
[07:48:42] <e36freak> ss does that when stdout is not a tty, apparently
[07:48:42] <emanuele6> look at your paste.
[07:50:13] <hejux> so, if just plain ss output , head is  " ..... Peer Address:Port    Process" , after any process (head, grep ... name it), the header becomes  "..... Peer Address:PortProcess"
[07:50:48] <hejux> that is why i remove the head and then add it back with a space before ' Process'
[07:50:51] <emanuele6> this is your paste, right? https://paste.rs/ufE
[07:51:03] <emanuele6> do you see that it says Address:PortProcess
[07:51:14] <hejux> emanuele6: my paste was processed by command 'head -n2'
[07:51:51] <emanuele6> it's not the processing that is doing that, that is how ss prints output to non terminals for some reasons
[07:52:09] <hejux> hey do you guys have `ss`?  try `ss -nutlp` and `ss -nutlp | head -n2` 
[07:52:10] <emanuele6> but there still is no point in printing your own header
[07:52:23] <hejux> you'll see the difference in `HEAD LINE`
[07:52:23] <emanuele6> the padding will be messed up
[07:52:29] <e36freak> just do | cat
[07:52:45] <e36freak> it's because ss doesn't have info on the terminal width when stdout is not a tty, so it drops to a default width
[07:52:51] <e36freak> which for some reason clobbers that last header
[07:53:08] <emanuele6> that makes sense
[07:53:12] <e36freak> doesn't really seem to be a tool designed to be parsed
[07:53:32] <emanuele6> but it is probably a bug that it prints Process next to Port without a space
[07:54:07] <hejux> so now, you guys understand why i added a printf?
[07:54:24] <emanuele6> it is wrong any way
[07:54:35] <emanuele6> you have: printf '%s\n' "Netid State Local Address:Port  Peer Address:Port Process"
[07:54:55] <emanuele6> Netid State  Recv-Q Send-Q Local Address:Port Peer Address:PortProcess
[07:55:13] <emanuele6> this is what i get with head-1
[07:55:37] <emanuele6> if you remove "Recv-Q Send-Q ", you are left with "Netid State  Local Address:Port Peer Address:PortProcess"
[07:55:58] <emanuele6> two spaces before Local, not one
[07:56:39] <emanuele6> and the rest of the lines will be aligned with Process before you add the space
[07:57:09] <emanuele6> so you have either got Local shifted one back or Process shifted one right
[07:57:10] <e36freak> NR==1 {match($0, /blah/); sub(/PortProcess/, "Port Process")} {...}
[07:57:23] <e36freak> would be close enough
[07:57:50] <hejux> ss -nutlp, HEAD is : Netid                State                 Recv-Q                Send-Q                               Local Address:Port                                Peer Address:Port               Process
[07:58:17] <hejux> ss -nutlp | head -n2, HEAD is : Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess
[07:58:20] <hejux> this sucks 
[07:59:13] <hejux> it is a terminal width problem?
[07:59:34] <e36freak> it's an issue with ss, which isn't designed to be parsed
[07:59:40] <e36freak> that sub() should probably get you close enough
[07:59:59] <hejux> ok 
[08:00:29] <emanuele6> what do you need this for?
[08:01:02] <emanuele6> does it get processed further?
[08:01:05] <hejux> sudo ss -nutlp | gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) ; sub(/PortProcess/, "Port Process") } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:01:09] <hejux> this works ... 
[08:02:02] <emanuele6> oh, i just noticed something
[08:02:29] <emanuele6> the elements in the Process column are aligned with the "r" in "Process"
[08:02:42] <e36freak> yeah
[08:02:46] <e36freak> so adding a space should be just fine
[08:03:13] <emanuele6> yes, they probably just forgot a space in the line that prints the header
[08:03:22] <emanuele6> and did the rest "right"
[08:04:29] <hejux> i embed that info to the function in my bash script to display "Listen info, iptables info, and a bunch of other info"
[08:04:36] <emanuele6> it is misaligned also when it is running in a terminal
[08:05:57] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[08:09:28] <hejux> get it translated : 
[08:09:30] <hejux> printf '%s\n' "协议   状态          本地监听         外部连接     程序" ; sudo ss -nutlp | gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) ; next } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:10:43] <hejux> perfect :)
[08:10:49] <hejux> thank you guys 
[08:11:46] <emanuele6> since you are making so many assumptions about the width, you could just hardcode RSTART-1 and RSTART+RLENGTH
[08:13:53] <hejux> to one space?
[08:14:44] <emanuele6> i mean 13 and 27
[08:14:51] <hejux> i need the translated HEAD to align with the gawk output :)
[08:19:36] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 265 seconds)
[08:22:14] *** Joins: ljharb (sid43720@user/ljharb)
[08:31:01] *** Quits: fford (~fford@p200300c6ff35820060d8bedc1c419ec5.dip0.t-ipconnect.de) (Quit: WeeChat 1.5)
[08:35:53] <hejux> this gawk is really hard to understand 
[08:36:29] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[08:36:45] <emanuele6> what gawk?
[08:37:29] <emanuele6> nothing in that awk script is gawk
[08:37:44] <emanuele6> it's just regular POSIX-compliant awk
[08:40:10] <hejux> i mean, awk is hard to understand as well 
[08:41:30] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[08:41:38] <emanuele6> but there is no gawk :/
[08:42:00] <hejux> awk is a link to gawk in my system 
[08:42:21] <emanuele6> and awk is a link to nawk in shbot
[08:42:23] <emanuele6> still works
[08:42:36] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' awk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:42:36] <hejux> ls -la $(where awk)
[08:42:37] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[08:42:43] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' nawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:42:44] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[08:42:48] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' mawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:42:49] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[08:42:53] <emanuele6> # <<< 'Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess' gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:42:54] <shbot> emanuele6: Netid State  Local Address:Port  Peer Address:PortProcess
[08:43:06] <emanuele6> works on any awk that is POSIX compliant
[08:43:12] <emanuele6> nothing gawk-y about it
[08:43:22] <hejux> noted
[08:43:44] <emanuele6> i don't think gawk specific features could make it better to be honest
[08:50:18] *** Joins: seninha (~seninha@user/seninha)
[08:51:46] *** Joins: r3m (~launch@user/r3m)
[08:56:25] <hejux> emanuele6: printf '%s%4s%13s%15s%7s\n' "协议" "状态" "本地监听" "外部连接" "程序" ; like this ?
[08:56:41] <emanuele6> what?
[08:58:29] <hejux> emanuele6: full line : 
[08:58:31] <hejux> printf '%s%4s%13s%15s%7s\n' "协议" "状态" "本地监听" "外部连接" "程序" ; sudo ss -nutlp | gawk 'NR==1 { match($0,/Recv-Q +Send-Q +/) ; next } { print substr($0,1,RSTART-1)substr($0,RSTART+RLENGTH) }'
[08:59:22] <emanuele6> why?
[08:59:41] <emanuele6> isn't that the same thing as before?
[09:05:31] <hejux> yeah, but use number to control the space, instead of guess 
[09:32:02] *** Quits: mete (~mete@static.201.165.216.95.clients.your-server.de) (*.net *.split)
[09:32:02] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[09:32:03] *** Quits: brennen|afk (~brennen@user/brennen) (*.net *.split)
[09:32:03] *** Quits: ccx (~ccx@82.142.125.46) (*.net *.split)
[09:32:03] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[09:32:03] *** Quits: izabera (izabera@user/izabera) (*.net *.split)
[09:32:27] *** Joins: mete (~mete@static.201.165.216.95.clients.your-server.de)
[09:32:40] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[09:32:45] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[09:32:50] *** Joins: dextaa (~DV@user/dextaa)
[09:34:29] *** Joins: ccx (~ccx@82.142.125.46)
[09:34:52] *** Joins: brennen|afk (~brennen@user/brennen)
[09:35:05] *** Joins: user51 (~user51@176.228.151.30)
[09:36:24] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[09:36:24] *** Quits: Camusensei (~Camusense@megaman.thican.net) (*.net *.split)
[09:36:25] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[09:36:25] *** Quits: Patsie (patsie@patsie.nl) (*.net *.split)
[09:36:32] *** Joins: Patsie (patsie@patsie.nl)
[09:36:34] *** Joins: ccl (ccl@shell.xshellz.com)
[09:36:37] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[09:37:55] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[10:07:08] *** Quits: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) (Quit: leaving)
[10:46:56] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[10:46:56] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[10:46:57] *** Joins: wuseman (~wuseman@user/wuseman)
[10:54:08] *** Joins: lgc (~lgc@user/lgc)
[11:45:37] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[11:45:37] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[11:45:37] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[11:46:28] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 264 seconds)
[12:25:38] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[13:07:52] *** Joins: ztx (~ztx@user/ztx)
[13:08:28] *** Joins: lavaball (felix@31.204.155.215)
[13:10:43] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[13:15:19] *** Joins: earnest (~earnest@user/earnestly)
[13:26:01] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[13:26:10] *** Joins: shbot (~shbot@37.139.2.101)
[13:32:00] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[13:35:37] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:36:23] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[13:40:02] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:10:18] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[14:10:18] *** Joins: izabera (izabera@user/izabera)
[14:49:20] *** Joins: lavaball (felix@31.204.155.215)
[14:52:23] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[14:55:02] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 240 seconds)
[15:29:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:34:52] *** Joins: seninha (~seninha@user/seninha)
[17:52:15] *** dfdx_ is now known as dfdx
[18:33:15] *** brennen|afk is now known as brennen
[18:47:57] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[18:57:00] <earnest> I wonder, can awk be used to detect if a directory exists by testing the exit status of >> somehow?  E.g. print test >> dest, somehow checking if this succeeded or not
[18:57:09] <earnest> Without using getline and such
[19:10:54] <emanuele6> in gawk, a failed write is a fatal error
[19:10:55] <emanuele6> so no
[19:12:14] <emanuele6> # mkdir 'x'; gawk 'BEGIN {print >> "x"; print hey}'
[19:12:15] <shbot> emanuele6: gawk: cmd. line:1: fatal: cannot redirect to `x': Is a directory
[19:13:21] <emanuele6> # mkdir -m 500 'x'; gawk 'BEGIN {print >> "x/a"; print "hey"}'
[19:13:22] <shbot> emanuele6: hey
[19:14:09] <emanuele6> err
[19:14:32] <emanuele6> anyway, any failed write is a fatal error
[19:22:33] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[20:42:05] <earnest> Yeah, I gave up on this
[20:42:47] <earnest> emanuele6: Ended up with this horror: https://0x0.st/-hr4.txt
[20:46:20] <earnest> (It is related, oddly enough.  The failure to use awk means I needed to use the shell for directory handling, but because I couldn't use awk, I needed to handle escaping horrible inputs somehow)
[20:46:34] <e36freak> why wouldn't you just do all that with PE?
[20:46:41] <earnest> e36freak: posix
[20:46:56] <earnest> I was tempted to just use bash instead, purely for that
[20:47:28] <e36freak> you can do it with POSIX PE but it's a bit more painful and involves loops
[20:47:50] <earnest> Yeah I'd have to loop to implement 'g', I've done this before as well.  I hope POSIX sh gets / and //
[20:47:56] <earnest> ($'soon')
[20:49:25] <emanuele6> path=$(... print p"x"}') path=${path%x}
[20:49:48] <earnest> e36freak: If this script was larger than 40 lines I might be tempted to create a function which does that looping and PEs
[20:50:04] <earnest> But this codepath is honestly never expected to be hit
[20:51:00] <emanuele6> since path is expected to maybe contain $nl in that branch, you should print a non-newline character at the end of the output and then remove it ^
[20:51:17] <earnest> emanuele6: True, that is a fair consideration
[20:52:59] <earnest> emanuele6: However the only place a newline can appear is at the start or middle because the path is constructed with known values at the end (at least can never contain newlines)
[20:53:16] <e36freak> fair enough
[20:53:22] <emanuele6> fair
[20:53:58] <earnest> i.e. path=$prefix/foo/$title, where $prefix is the dangerzone
[20:54:28] <earnest> All because curl's --etag flags won't create directories ;(
[20:54:46] <earnest> https://github.com/curl/curl/issues/7942
[20:55:32] <earnest> At least a bug was found
[20:57:30] <earnest> emanuele6: Heh, initially I just detected this and skipped them.  This is usually how I handle newlines in filenames if there's no other way around it
[21:02:37] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[21:06:13] <e36freak> for funsies http://ix.io/3GuD
[21:06:54] <earnest> e36freak: Nice slug
[21:08:43] <earnest> e36freak: (Also e31 is going to be mucho value later)
[21:11:31] <earnest> Good grief, they're still only £16,000 roughly (850Ci)
[21:23:14] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Read error: Connection reset by peer)
[21:37:10] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[21:37:10] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[21:37:10] *** Joins: wuseman (~wuseman@user/wuseman)
[21:37:53] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[21:40:35] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:53:00] <e36freak> there's an 840 behind me right now
[21:53:15] <e36freak> they're a major pain in the ass to work on and find parts for
[22:01:01] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[22:16:31] *** Quits: jandrusk (~jra@d149-67-206-12.clv.wideopenwest.com) (Quit: WeeChat 3.3)
[22:39:30] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[22:44:13] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[22:45:43] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Read error: Connection reset by peer)
[22:48:12] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[22:54:21] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Remote host closed the connection)
[23:32:56] *** Quits: izabera (izabera@user/izabera) (Ping timeout: 265 seconds)
[23:33:55] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[23:38:15] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[23:51:05] <earnest> That's probably only going contribute to their increasing rarity lol
[23:51:29] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
