[00:10:29] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:14:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:14:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:20:59] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:26:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[00:26:38] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:28:29] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[00:34:08] *** Joins: slav0nic (slav0nic@python.su)
[00:48:18] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[00:48:51] *** Joins: dkr13 (~dkr13@dkr13.de)
[01:31:09] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[01:31:34] *** Joins: fikran (~fikran@user/fikran)
[01:33:05] *** Quits: fikran (~fikran@user/fikran) (Client Quit)
[01:33:39] *** Joins: fikran (~fikran@user/fikran)
[01:48:18] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 272 seconds)
[01:48:31] *** Joins: cliluw (~cliluw@47.147.77.43)
[01:50:54] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[01:52:00] *** Joins: lucas_ (~lucascast@192-140-51-239.static.oncabo.net.br)
[01:52:16] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Read error: Connection reset by peer)
[02:04:25] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[02:16:58] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[02:24:29] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Quit: Leaving)
[02:26:38] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:33:01] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:51:07] *** Joins: audio (~audio@user/audio)
[02:53:40] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[03:11:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:13:04] *** Joins: x_kuru (xkuru@user/xkuru)
[03:14:49] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[03:14:58] <Kim^J> colo: Netbox, https://github.com/netbox-community/netbox
[03:15:31] <Kim^J> (I'm a bit biased because I work with that pretty much every day, but I'm not the author of it)
[03:16:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[03:16:44] *** Quits: cbasah (~cbasah@user/cbasah) (Quit: Leaving)
[03:17:13] *** Joins: xkuru (~xkuru@user/xkuru)
[03:19:04] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[03:19:30] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[03:43:24] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[03:46:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:48:52] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:49:09] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:49:56] *** Parts: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) ()
[04:11:49] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[04:12:05] <audio> how can i use pydrive2 (https://github.com/iterative/PyDrive2/) to upload to a specific folder in drive?
[04:12:05] *** Quits: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net) (Quit: Bye lol - https://miguelcr.me)
[04:12:13] *** Joins: cliluw (~cliluw@47.147.77.43)
[04:28:48] *** Joins: rob4226 (~Thunderbi@154.6.25.48)
[04:38:04] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 250 seconds)
[04:57:59] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:03:29] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:27:58] *** Joins: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net)
[06:08:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:09:33] *** Joins: justAstache (~justache@user/justache)
[06:30:48] *** Joins: yanchai (~yanchai@115.147.34.99)
[06:33:58] <yanchai> hi is it safe to say that using a queryset like this u=User.objects.get(id=1) and profile =  u.profile
[06:34:22] <yanchai> does this make 2 queries or just 1 in a form of join?
[06:35:50] <FunkyBob> is profile a ForeignKey field?
[06:35:57] <FunkyBob> or a OneToOne
[06:37:57] <FunkyBob> yanchai: ?
[06:39:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:40:46] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[06:41:18] <yanchai> is it wise to use select_related and prefetch_related to avoid n+1 anomalies?
[06:41:32] <FunkyBob> is  there any point answering you when you appear to be ignoring us?
[06:47:01] <yanchai> FunkyBob: sorry mate i sometimes get dc. i am using terminal in irc thats why i cant see your reply whenever i get disconnect
[06:47:08] <yanchai> my apology mate.
[06:48:03] <FunkyBob> as to y our first question, assuming 'profile' is a to-one relation, yes, it will trigger 2 queries, as you wrote it.
[06:48:25] <FunkyBob> and yes, select_related and prefetch_related are ways to avoid N+1 cases for to-one and to-many relations, respectively
[06:48:57] <yanchai> FunkyBob: thanks so much mate
[06:52:33] <FunkyBob> yanchai: select_related will include it in the initial query
[06:52:47] <FunkyBob> yanchai: prefetch_related will limit to one extra query per join
[06:53:26] <yanchai> oh ok got it thanks mate
[07:00:35] <fikran> I am getting this error that I do not understand:  CommandError: Unable to serialize database: cursor "_django_curs_139683545995072_sync_4489" does not exist
[07:00:44] <fikran> This happens when I run `./manage.py dumpdata`
[07:01:22] <FunkyBob> fikran: is that the entirety of the output?
[07:01:32] <fikran> no, quite a bit of data is spit out
[07:01:44] <fikran> but this is towards the end.
[07:02:10] <fikran> Running >/dev/null shows that is the only error and its at the very end.
[07:03:45] <fikran> I think...I have an idea
[07:04:18] <FunkyBob> there's a few ideas about for the causes...
[07:04:36] <FunkyBob> like out of memory, or neding to pipe... iirc there's a --traceback option to dumpdata to give you more details
[07:05:23] <yanchai> FunkyBob: mate is it possible to use prefech_related in a reverse relationship look up?
[07:05:38] <FunkyBob> yanchai: yes
[07:06:10] <yanchai> oh so the related_name= in the model attribute comes in?
[07:06:21] <yanchai> got it thanks
[07:06:26] <FunkyBob> or the default one, yeah
[07:06:35] <fikran> https://pastebin.com/6d17RsV5
[07:06:37] <yanchai> thanks mate
[07:06:40] <fikran> that is the error that occurs
[07:06:44] <FunkyBob> fikran: please read the topic
[07:06:44] <fikran> I am not certain which code to share.
[07:06:49] <fikran> I'm sorry
[07:06:53] <fikran> ohhh
[07:07:04] <FunkyBob> well, I think that error makes it quite clear
[07:07:12] <FunkyBob> perhaps there's a migration you've forgotten to create or apply?
[07:07:18] <FunkyBob> psycopg2.errors.UndefinedTable: relation "file_repository_inode" does not exist
[07:07:52] <fikran> https://www.dpaste.org/bwEu
[07:08:03] <fikran> oh?
[07:08:10] <fikran> I actually deleted all migrations and re-created
[07:08:15] <fikran> I also dropped the DB (I'm testing)
[07:08:16] <FunkyBob> why?
[07:08:21] <FunkyBob> ah
[07:08:39] <FunkyBob> if you re-created all the migrations, and dropped+recreated the DB
[07:08:44] <FunkyBob> did you also _apply_ the migrations?
[07:08:44] <fikran> yes.
[07:08:46] <fikran> yes.
[07:08:47] <FunkyBob> and if all this is true
[07:08:51] <FunkyBob> why are you running dumpdata?
[07:09:13] <fikran> yes.
[07:09:15] <fikran> oh
[07:09:19] <fikran> I read "are you?"
[07:09:20] <FunkyBob> meanwhile, PG is convinced the table doesn't exist
[07:09:34] <FunkyBob> ?
[07:09:42] <fikran> so currently, I have some scripts that parse through XML files to pouplate the database with some pre-cursor data
[07:09:57] <fikran> and that sorta doesn't make sense, its probably better to have some fixtures pre-created.
[07:10:02] <FunkyBob> are they separate to your django app?  or part of the migrations?
[07:10:25] <FunkyBob> better to make them data migrations, so they're enacted when the models are in a known state
[07:10:41] <fikran> I don't follow your question?
[07:10:43] <FunkyBob> otherwise when your models progress over time, y our fixtures become unusable
[07:10:48] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:10:55] <FunkyBob> fikran: these scripts that munge the XML and insert data...
[07:11:00] <fikran> yes.
[07:11:01] <FunkyBob> are they part of your django app?
[07:11:08] <fikran> no, they are stand-alone python programs.
[07:11:10] <FunkyBob> part of standing up a new site instance?
[07:11:14] <fikran> however, they use the ORM
[07:11:21] <FunkyBob> so they _are_ part of your project
[07:11:26] <FunkyBob> because they depend on it
[07:11:39] <fikran> err, yes. I'm sorry, I misunderstood.
[07:11:59] <FunkyBob> so
[07:12:19] <FunkyBob> it would be wise to run that step ... of parsing the XML and importing its data... as a migration step
[07:12:21] <schinckel> Yeah, it’s worth making them explicitly part of the project - I’d even make them management commands so they _cannot_ be run without django.
[07:12:30] <fikran> FunkyBob: is there documentation on this?
[07:12:35] <FunkyBob> that was going to be my next suggestion, schinckel :)
[07:12:43] <schinckel> Oh, yeah, that too. You could call a management command as a migration operation… ;)
[07:12:50] <fikran> I am trying to modernize this old dead project.
[07:13:16] <FunkyBob> https://docs.djangoproject.com/en/4.0/topics/migrations/#data-migrations
[07:13:18] <schinckel> Dead, or stagnated?
[07:13:30] <fikran> stagnated.
[07:15:05] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[07:15:52] <FunkyBob> fikran: so, do you understand why I'm recommending this path?
[07:18:18] <fikran> FunkyBob: not yet, but that isn't on you. I'm reading the documentation from the start
[07:18:21] <fikran> the Migrations section.
[07:18:42] <fikran> "Generated by Django 1.11 on 2017-05-11 06:17"
[07:18:58] <FunkyBob> fikran: you understand that over time, your models are going to change, right?
[07:19:05] <fikran> no.
[07:19:09] <FunkyBob> no?
[07:19:26] <fikran> well, I know that new migrationns are created, but I do not think I fully understand what that means other than they are necessary when the model changes
[07:19:27] <FunkyBob> you think in the life of this project, you're never ever ever going to change the definitions of the models?
[07:19:52] <fikran> right, i understand that. I was somehow thinking there was more than that
[07:20:11] <FunkyBob> migrations record these changes, and applying them updates the DB schema to match
[07:20:19] <FunkyBob> however
[07:20:22] <FunkyBob> your XML importing tool
[07:20:32] <FunkyBob> is written against a specific version of the models, yes?
[07:20:40] <FunkyBob> the current one
[07:21:06] <FunkyBob> and if that model changes too much,  your import script will break
[07:21:29] <FunkyBob> so the suggestion is to run it as part of a migration... so you can be _guaranteed_ the model definitions will be as they are now
[07:23:41] <fikran> ahh
[07:23:44] <fikran> that makes sense.
[07:26:32] <FunkyBob> if the _only_ time this XML code is run is in standing up a new instance, you could put all the code inside the migration [assuming it's not too large]
[07:26:52] <FunkyBob> otherwise, it could be wise to look into, as schinckel suggested, making it a management command
[07:27:10] <fikran> yes, that's exactly what I will do.
[07:27:19] <fikran> almost done up to the section you pasted me.
[07:27:38] <FunkyBob> https://docs.djangoproject.com/en/4.0/howto/custom-management-commands/
[07:28:20] <fikran> up to that section in reading.
[07:30:52] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:24] <fikran> I'm not clear from this document on how to generate the migration with the populated data.
[07:32:35] <fikran> is it the --empty yourappname flag?
[07:32:39] <FunkyBob> yes
[07:36:13] <fikran> Hm..so I ran `./manage.py makemigrations --empty nist`, where 'nist' is the name of my app.
[07:36:45] <fikran> But, the migrations file (nist/migrations/0002_auto_20220225_0403.py) is basically empty.
[07:36:50] <FunkyBob> yes
[07:36:51] <fikran> i mean, there is no data in it.
[07:36:55] <FunkyBob> that's what the --empty flag means
[07:37:00] <FunkyBob> now you write the code in it to do t he data migration
[07:37:41] <fikran> I'm not understanding how/where the pre-population comes from?
[07:38:23] <FunkyBob> huh?
[07:38:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[07:38:34] <FunkyBob> into this migration file you put the code that will read the XML data and put it in the DB
[07:38:43] <FunkyBob> as a RunPython block
[07:38:47] <FunkyBob> like in the docs you said you just  read
[07:39:50] *** Quits: sreve (~quassel@p4ff44f33.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:40:02] <fikran> I'm slow. So, my loaddata.py, I basically need to copy the code out of it and place it in the migration.
[07:40:05] *** Joins: sreve (~quassel@p4ff44ddc.dip0.t-ipconnect.de)
[07:40:14] <FunkyBob> that's one option, yes
[07:40:19] <FunkyBob> 02:55 < FunkyBob> if the _only_ time this XML code is run is in standing up a new instance, you could put all the code inside the migration [assuming it's not too large]
[07:40:54] <fikran> yeah, the code isn't too much.
[07:41:46] <fikran> not familiar with RunPython, reading up on it.
[07:42:10] <fikran> This is not what I expected. I was somehow expecting Fixtures, which I believe were json files.
[07:43:32] <fikran> FunkyBob: do you have an example of this with code written in?
[07:45:24] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 256 seconds)
[07:47:16] <FunkyBob> fikran: fixtures, unless applied in migrations, also have the same brittleness of your stand-alone script
[07:47:28] <fikran> yeah, makes sense.
[07:47:42] <fikran> Is there an example of this? The documentation is giving it conceptually but it would be useful to see code.
[07:47:56] <fikran> I mean, I know there is an example present, but I'm not internalizing it and it would be helpful.
[07:48:50] <FunkyBob> so... the example in the docs with 'combine_names' ...
[07:49:11] <FunkyBob> more detailed than that?
[07:49:23] <fikran> That string does not appear in migration-operation?
[07:49:30] <FunkyBob> which string?
[07:49:35] <fikran> "combine_names"
[07:49:49] <FunkyBob> what do  you mean 'migration-operation'?
[07:50:00] <FunkyBob> I'm talking about the data migration docs I linked to before
[07:50:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[07:50:07] <FunkyBob> https://docs.djangoproject.com/en/4.0/topics/migrations/#data-migrations
[07:50:33] <fikran> I'm not thinking...
[07:50:43] *** Joins: mattil (~mattil@helsinki.portalify.com)
[07:50:43] <fikran> I apologize, I must sound like slow.
[07:50:49] <FunkyBob> no, just confused
[07:51:10] <FunkyBob> which is to be expected when encounting a bunch of new ideas
[07:51:58] <fikran> that's acually pretty straight forward.
[07:52:11] <fikran> I was hoping to migrate off that XML file, but I guess this works.
[07:53:22] <FunkyBob> wwell, you don't have to do it this way
[07:55:21] <FunkyBob> just beware the big problem with json, and xml for that matter, is yyou have to parse the whole document before using any of it
[07:59:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[08:02:36] <fikran> yeah
[08:03:10] <fikran> Error occurred during checks: ValueError('Dependency on app with no migrations: auth')
[08:03:21] <fikran> Yes running "./manage.py makemigrations auth" doesn't do anything.
[08:03:57] <fikran> hm...I don't have an app called auth.
[08:04:53] <fikran> Unless its referring to django.contrib.auth?
[08:07:48] <fikran> hm...this error only occurs when I run dangoserver a certain way
[08:09:19] <FunkyBob> it should be referring to django.contrib.auth
[08:09:23] <FunkyBob> which version of django are you using?
[08:09:27] <FunkyBob> and what 'certain way'?
[08:10:16] <fikran> 4.0.2
[08:11:21] <fikran> its run via VS code with this command: /home/fikran/src/axial/manage.py runserver_plus --cert-file /home/fikran/cert/easy-rsa/web.crt 127.0.0.1:8000
[08:11:54] <fikran> err no, I'm sorry, that isn't it.
[08:16:03] <fikran> I'm not able to consistently recreate the issue, but its related to VS code somehow.
[08:18:36] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[08:25:27] *** Joins: theprophet (~theprophe@212.58.102.155)
[08:25:57] <theprophet> are generic views better ? or i should stick with simple views?
[08:31:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:32:20] <FunkyBob> theprophet: are you conflating generic views with class-based views?
[08:32:26] <FunkyBob> not all class-based views are 'generic' views
[08:32:52] <FunkyBob> the short of it is... use the tool that best suits the need
[08:32:52] <theprophet> FunkyBob yes class based views
[08:33:35] <theprophet> FunkyBob i mean this looks like something that has been sucked out of the finger.
[08:33:45] <FunkyBob> pardon?
[08:33:56] <FunkyBob> class-based views can make it easy to share common functionality between views
[08:34:00] <fikran> VS Code runs the django test server with this line:  /usr/bin/env /home/farhan/src/axial/.venv/bin/python /home/farhan/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/python/debugpy/launcher 40467 -- /home/farhan/src/axial/manage.py runserver_plus --cert-file /home/farhan/cert/easy-rsa/web.crt 127.0.0.1:8000
[08:34:07] <fikran> Only when I run it this way does the error manifest.
[08:34:18] <fikran> the error being that the dependent app with no migrations: auth
[08:34:36] <fikran> which is odd because...I don't have an app called auth. Except for django.contrib.auth.context_processors.auth
[08:34:56] <FunkyBob> fikran: surely django.contrib.auth is in your INSTALLED_APPS list?
[08:36:03] <fikran> it is, its the 2nd one down.
[08:36:08] <fikran> the first is 'admin', which I'm going to be removing.
[08:36:42] <fikran> if that needs migrations, running 'makemigrations' doesn't do anything.
[08:37:33] <FunkyBob> auth ships with its own migrations
[08:37:40] <fikran> hm...
[08:37:45] <fikran> what might be causing this then?
[08:37:51] <fikran> oddly enough, it just started up.
[08:38:22] <FunkyBob> my guess would be some odd interaction with whatever the vscode 'launcher' does to the env
[08:38:24] <fikran> I might just delete the entire environment and start over.
[08:41:24] <fikran> and there appears to be an LTS version of 5.0 coming out in about a year. I'll probably attach myself to that.
[08:42:31] <theprophet> FunkyBob can you detail this part you said --> class-based views can make it easy to share common functionality between views ' , what exactly do you mean by this ?
[08:43:00] <theprophet> 1-2 examples if you care
[08:45:23] <FunkyBob> theprophet: all of the generic views are examples of this...
[08:46:56] <theprophet> FunkyBob do you mean like, template sharing and stuf?
[08:47:03] <FunkyBob> have a method in a class... subclass from that in views that need it... boom, shared code
[08:47:28] <theprophet> i see
[08:47:51] <theprophet> thanks
[08:48:01] <FunkyBob> or, sure, template names, form classes, any other attributes
[08:48:05] <FunkyBob> it's all Python classes :)
[09:04:47] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[09:06:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:09:12] <fikran> during development i might accumulate 20 migrations per commit, wonder what the best way to work with that is
[09:26:34] <FunkyBob> fikran: there's a few different approaches
[09:26:49] <FunkyBob> if it's really per commit... you can remove then and recreate them... since they're not shared
[09:26:54] <FunkyBob> of course, you'd have to revert your DB also
[09:28:19] <FunkyBob> another option is to use migration squashing [it's in the docs]
[09:28:32] <FunkyBob> it generates a new migration that collapses others into a few steps as possible
[09:36:11] *** Joins: audio (~audio@user/audio)
[09:39:56] *** Joins: teut (~teut@122.161.83.81)
[09:42:27] <wez> Hey, is there a changelog for Django 3.2? I can't seem to find out on the website / docs.
[09:44:16] <wez> nm, it's called release notes.
[09:47:14] *** Joins: epony (epony@user/epony)
[09:58:04] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[10:03:17] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:09:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:10:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:12:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:12:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:14:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:14:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:16:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:16:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:18:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:19:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:20:17] <serafeim> hello friends
[10:21:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:21:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:23:11] *** Joins: djapo (~archangel@user/djapo)
[10:23:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:23:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:25:16] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:26:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:26:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:29:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:29:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:31:15] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[10:31:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:31:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:33:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:33:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:33:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:35:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:36:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:38:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:38:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:40:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:40:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:42:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:42:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:42:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:43:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:44:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:44:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:45:57] *** Quits: defjam (~eb0t@90.196.141.185) (Ping timeout: 250 seconds)
[10:46:41] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[10:46:48] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[10:47:24] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:47:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:47:51] *** Joins: defjam (~eb0t@90.210.89.170)
[10:47:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:53:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[11:02:33] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[11:02:41] *** Joins: mattil (~mattil@d51n63ths1p8wk5pk1z-4.rev.dnainternet.fi)
[11:04:18] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[11:05:40] *** Joins: sandeepk (~sandeepk@223.130.30.191)
[11:06:44] *** Quits: mattil (~mattil@d51n63ths1p8wk5pk1z-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:10:28] *** Joins: pepper (~pepper@user/pepper)
[11:11:00] *** Joins: mrwick (~mrwick@user/mrwick)
[11:21:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:27:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[11:36:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:36:00] *** ChanServ sets mode: +v EvilDMP
[11:41:12] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[11:54:53] *** Joins: pycode (~pycode3@2001:b07:5d28:551:2da1:82f1:2901:8ce5)
[12:12:16] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:13:01] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:31:22] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:38:38] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[12:39:12] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[12:39:35] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[12:39:50] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[12:47:08] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[12:53:47] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[12:56:02] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:57:57] *** Quits: sandeepk (~sandeepk@223.130.30.191) (Remote host closed the connection)
[12:58:21] *** Joins: sandeepk (~sandeepk@223.130.30.191)
[13:03:15] *** Joins: Elzington_ (~Elzington@87.249.134.17)
[13:05:59] *** Quits: Elzington (~Elzington@68.235.43.84) (Ping timeout: 252 seconds)
[13:20:32] *** Joins: teut (~teut@122.161.83.81)
[13:35:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[14:41:37] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[14:41:57] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[14:42:45] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[14:44:03] <pycode> hello
[14:44:28] <pycode> how do you usually mix your code when you need to use UI and DRF views ?
[14:44:53] <pycode> just adding api_views.py and then adding other extra def files like permissions.py etc?
[14:45:17] <pycode> is it not a bit confused for tests (for example) mixing regual views with apis could be confusing no?
[14:45:23] <pycode> how to you orgnaize your code?
[14:51:28] <moldy> usually api/views.py etc.
[14:55:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[14:56:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[14:59:17] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:03:50] <pycode> ok moldy so you basically add a folder inside the app called "api"
[15:03:57] <pycode> ok i think is the best solution
[15:04:08] <pycode> i was reading https://danielhnyk.cz/django-rest-framework-how-to-structure-your-app/
[15:04:19] <pycode> but seems too redundant
[15:04:28] *** Joins: slav0nic (slav0nic@python.su)
[15:04:58] <pycode> he creates a folder called "api" then "app_name" and then all the files there
[15:09:18] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[15:21:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:2da1:82f1:2901:8ce5) (Ping timeout: 252 seconds)
[15:23:22] <moldy> more than one way to do it
[15:29:33] <colo> Kim^J, thank you! will check it out
[15:32:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[15:32:51] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:45:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:03:34] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[16:05:08] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:13:59] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[16:14:33] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:16:53] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: going to lala land)
[16:16:57] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:19:08] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[16:21:55] *** Joins: timkofu (~timkofu@user/timkofu)
[16:21:58] <timkofu> Hi
[16:23:26] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:29:00] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[16:42:35] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[17:01:02] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:09:12] <wez> hi timkofu, how are you?
[17:24:38] *** Joins: mogan90 (~mogan90@132.140.7.93.rev.sfr.net)
[17:27:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:28:52] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[17:29:17] *** Joins: pro_z (~pro_z@37.214.61.103)
[17:33:35] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[17:38:25] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 256 seconds)
[17:43:05] *** Joins: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it)
[18:04:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:05:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:28:32] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[18:51:51] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[18:53:01] *** Parts: blackout69 (~blackout6@net-109-117-245-37.cust.vodafonedsl.it) ()
[19:01:13] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:03:49] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:06:21] *** Joins: pycode (~pycode3@2001:b07:5d28:551:6826:61e3:38bf:c94f)
[19:08:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:13:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:20:46] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 245 seconds)
[19:31:04] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:31:52] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[19:33:12] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[19:40:21] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:43:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:44:12] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[19:49:42] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[19:59:26] *** Joins: xkuru (~xkuru@user/xkuru)
[20:07:48] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:14:13] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:33:25] *** Quits: sandeepk (~sandeepk@223.130.30.191) (Quit: Leaving)
[20:38:03] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:38:35] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[20:41:49] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:43:09] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Ping timeout: 256 seconds)
[20:43:26] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[20:51:56] *** Joins: x_kuru (~xkuru@user/xkuru)
[20:51:56] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:55:01] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[20:59:59] *** Joins: GinF (~GinFuyou@reya.cloud.tilaa.com)
[21:00:29] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 256 seconds)
[21:05:10] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[21:05:55] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[21:06:30] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:06:45] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[21:08:53] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:11:40] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[21:11:58] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[21:13:48] <pycode> do you usually use environs to read env variables for settings.py ?
[21:17:39] <GinF> Nope, I use django-classy-settings usually
[21:17:44] *** GinF is now known as GinFuyou
[21:18:09] <pycode>  django-classy-settings hmm let me see
[21:18:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:18:26] <pycode> https://github.com/funkybob/django-classy-settings ?
[21:18:28] <pycode> 2018
[21:18:29] <pycode> ?
[21:19:11] <pycode> GinFuyou, ^
[21:19:43] <Wooble> I mean, it loads settings, how much maint could it need?
[21:20:01] <GinFuyou> Yes, that one
[21:20:12] <pycode> i am asking if you are using ENV vars to store settings values
[21:20:26] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:20:56] <GinFuyou> Yes, plus defaults from CBS when needed
[21:23:14] <pycode> ok
[21:24:22] *** Joins: djapo (~archangel@user/djapo)
[21:24:40] *** Joins: jmd (~user@de.cellform.com)
[21:36:05] <jmd> AppConfig.ready is a hook that can be used to initialise things.  But is there a hook to do the opposite? That is to say, I'm looking for something that'll run just before the App stops.
[21:38:45] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[21:46:08] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[21:54:53] <GinFuyou> jmd I'm not even sure there is a such a concept as app stopping
[21:58:03] *** Joins: Atque (~Atque@user/atque)
[21:58:23] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:02:17] <Wooble> (what do you want to do when it stops, and why?)
[22:03:39] <jmd> Well I want to do it just *before* it stops, so tha it shuts down cleanly.
[22:04:35] <Wooble> what's it doing that it could be non-clean?
[22:05:29] <jmd> Well for one thing, it's running a thread.  So I need to terminate that.
[22:08:44] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:09:15] <theseb> MyModel.objects.filter(date in [date1,date2,date3]) <---- how do this?
[22:09:22] *** Joins: llanhmod_ (~developer@user/domhnall/x-2887755)
[22:09:25] <theseb> i need to pick off 3 dates
[22:10:49] <theseb> nice nm Blog.objects.filter(pk__in=[1, 4, 7])
[22:10:54] <theseb> i think is it
[22:12:27] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:13:28] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[22:16:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:16:05] *** Quits: llanhmod_ (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:17:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:18:37] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:18:40] *** Joins: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net)
[22:24:47] *** Quits: pycode (~pycode3@2001:b07:5d28:551:6826:61e3:38bf:c94f) (Ping timeout: 252 seconds)
[22:36:55] *** Joins: dor (~erg@78.11.12.207)
[22:41:40] *** Quits: dor (~erg@78.11.12.207) (Ping timeout: 272 seconds)
[22:43:14] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[22:48:09] *** Quits: pro_z (~pro_z@37.214.61.103) (Ping timeout: 256 seconds)
[22:52:44] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[22:57:54] <merrinx> good evening
[22:58:04] <merrinx> any good place to read diff on each kernel release
[23:08:15] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:08:31] *** Joins: teut (~teut@122.161.83.81)
[23:14:13] <puckoh> merrinx: django is not a kernel? if you want release notes, they are here; https://docs.djangoproject.com/en/4.0/releases/
[23:14:43] <merrinx> I just... now realised I ask that question in the wrong chat LMAO
[23:14:52] <merrinx> Thank you though puckoh
[23:22:53] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[23:29:50] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:32:49] <fikran> as I'm developing, I end up having a ton of migrations. I'm wondering how I should handle them all
[23:32:58] <fikran> I might have 20 per commit because I'm modifying so much.
[23:42:05] <FunkyBob> fikran: you mentioned this last night
[23:42:12] <FunkyBob> I'm wondering why you end up with so many migrations
[23:52:19] <dodo> fikran: you can just delete all the dev migrations, and make one with all the changes
[23:52:30] <fikran> eek people repsonded?
[23:52:53] <fikran> reading what you wrote.
[23:53:19] <fikran> cool!
[23:53:24] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[23:53:25] <FunkyBob> are you really making so many changes to your models?
[23:53:37] <FunkyBob> (also, I suggested what dodo just did... last night when you said the same thing)
[23:54:05] <fikran> not at the moment, but I was looking at my old code and saw my .gitignore specifies the migrations.
[23:54:19] <FunkyBob> that's not good
[23:54:32] <Wooble> (also if you're running makemigrations 20 times per commit, you *might* be committing too infrequently :) )
[23:55:11] <FunkyBob> Wooble: that had crossed my mind :)
