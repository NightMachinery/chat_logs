[01:09:33] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[03:02:15] <FromDiscord> <Elegantbeef> @impbox [ftsf]\: hopefully you dont mind that i threw this quick example in TMWN to showcase nimscripter 1.0 😀
[03:02:16] <FromDiscord> <Elegantbeef> https://www.jasonbeetham.com/snake/nicoscripter.html
[03:02:49] <FromDiscord> <impbox [ftsf]> not at all
[03:03:00] <FromDiscord> <impbox [ftsf]> just need a prettier text editor
[03:03:16] *** Quits: oprypin_ (~irc@pryp.in) (Quit: Bye)
[03:03:26] *** Joins: oprypin (~irc@pryp.in)
[03:03:34] <FromDiscord> <Elegantbeef> Indeed and a instant pause, but yea it's just an example showing it working with wasm
[03:04:42] <FromDiscord> <Elegantbeef> Oh the mouse pause works now, odd guess i tested the wrong code earlier
[03:14:42] <FromDiscord> <huantian> Is it possible to have nimsuggest via the nim vscode plugin always give me autosuggest in snake_case or camelCase only?
[03:14:52] <FromDiscord> <huantian> or do I just have to deal with it
[03:15:18] <FromDiscord> <Elegantbeef> I did look at adding the functionality and it very much seems like it might be possible but will slow down the suggestions
[03:15:49] <FromDiscord> <Elegantbeef> There also was a big issue with screamy constants
[03:16:15] <FromDiscord> <huantian> yeah I can see how that would be problem
[03:20:01] <FromDiscord> <huantian> It is a tad annoying when two libraries have different styles
[03:21:13] <FromDiscord> <Elegantbeef> Yea it's all these people using snakecase like animals
[03:23:29] <FromDiscord> <Benjamin> Wouldn't it just be a simple postprocessing step?
[03:25:29] <FromDiscord> <Elegantbeef> It is mostly
[03:25:58] <FromDiscord> <Elegantbeef> Add a flag for "prefer X styling" and then convert all the suggestions to the case you want before outputting
[03:26:32] <FromDiscord> <Elegantbeef> I do think i have the code still if anyone wants to finish it and make a PR
[03:27:56] <FromDiscord> <Elegantbeef> vscode.diff https://media.discordapp.net/attachments/371759389889003532/904519591374512218/vscode.diff
[03:28:07] <FromDiscord> <Elegantbeef> on saem's Vscode extension
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:49:00] <FromDiscord> <tandy> can you compile a nim project for windows on a linux machine without a vm?
[03:49:12] <FromDiscord> <Elegantbeef> get mingw and possibly
[03:49:24] <FromDiscord> <Elegantbeef> pass `-d:mingw` and let 'er rip
[03:52:07] <FromDiscord> <tandy> oo leme  see what the fedora package is
[03:56:43] <FromDiscord> <tandy> nice that seemed to make an exe
[03:56:48] <FromDiscord> <tandy> hopefuly it works lol
[03:58:16] <FromDiscord> <Elegantbeef> Doing more than the Rust game devs did for the linux build
[04:01:46] <FromDiscord> <tandy> lol
[04:09:53] <FromDiscord> <OceanMongrel> This might be a stupid question, but is there a way to write functions in swift, which can be used by min? Is there any way the two languages can interact resulting in a single executable?
[04:10:07] <FromDiscord> <Elegantbeef> Min or Nim?
[04:10:15] <FromDiscord> <OceanMongrel> sorry, nim
[04:10:31] <FromDiscord> <Elegantbeef> Min is a language made with Nim so it wasnt a joke 😀
[04:11:53] <FromDiscord> <Elegantbeef> Well you can write libraries using either then connect them using dynamic library mechanicism much like if you wrote the code in C
[04:12:27] <FromDiscord> <retkid> anyway to use curly braces in nim?
[04:12:37] <FromDiscord> <Elegantbeef> That'd probably require writing some tooling to make it easier to access code from Nim and Swift
[04:12:48] <FromDiscord> <Elegantbeef> Yea for sets 😛
[04:13:00] <FromDiscord> <Elegantbeef> Otherwise no you need to customize your editor or preprocess the file
[04:13:15] <FromDiscord> <Elegantbeef> https://github.com/treeform/genny for a reference of the type of thing you'd probably want ocean
[04:13:27] <FromDiscord> <retkid> god damn treeform is everwhere
[04:13:32] <FromDiscord> <retkid> such a talented mofo
[04:13:59] <FromDiscord> <OceanMongrel> Thanks! I'll look into it
[04:14:05] <FromDiscord> <Elegantbeef> Now to down play him but he's afterall a dev that uses Nim full time so kinda the expected
[04:14:10] <FromDiscord> <Elegantbeef> not to\
[06:32:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 264 seconds)
[06:40:17] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:42:07] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[06:42:38] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[06:49:58] <FromDiscord> <joe733> Hi, what would be the Nim equivalent of `[False]  3` which gives `[False, False, False]` in Python?
[06:52:14] <FromDiscord> <Elegantbeef> you can do `import std/sequtils; newSeqWith[bool](3, true)` or given false is default for bool `newSeq[bool](3)`
[06:52:16] <FromDiscord> <huantian> I think it would be `newSeqWith` from sequtils
[06:52:21] <FromDiscord> <huantian> sniped
[06:52:22] <FromDiscord> <Elegantbeef> Assuming you want a seq
[06:52:51] <FromDiscord> <Elegantbeef> If you want an array there are no builtin shortcuts
[06:53:38] <FromDiscord> <Elegantbeef> Although again `var a: array[3, bool]` would give false
[06:59:24] <FromDiscord> <joe733> Thanks!
[07:00:08] <FromDiscord> <Elegantbeef> No problem
[07:14:27] <FromDiscord> <demotomohiro> !eval echo default(array[3, bool])
[07:14:30] <NimBot> [false, false, false]
[07:28:34] <FromDiscord> <impbox [ftsf]> if you want truth you're less lucky
[07:28:52] <FromDiscord> <impbox [ftsf]> but lies are free!
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:13:28] <FromDiscord> <evoalg> if it's a seq, then I could import sequtils and do `@[true].cycle(3)` if I wanted the truth ... it's kind of the equivalent of python's `[True]  3`
[08:27:22] <FromDiscord> <Rika> repeat represents the intent better
[08:29:15] <FromDiscord> <evoalg> 'true.repeat(3)' you're right!
[08:30:28] <FromDiscord> <Rika> cycle is for repeating seqs into a flattened seq
[08:30:51] <FromDiscord> <Rika> so @[1, 2, 3].cycle(3) => @[1,2,3,1,2,3,1,2,3]
[08:34:43] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:35:27] <FromDiscord> <evoalg> I'm still impressed that collect can replicate almost every proc in sequtils ... collect is so powerful
[08:35:32] <FromDiscord> <Rika> it is
[08:35:50] <FromDiscord> <Rika> less stupid to read as well compared to list comprehensiosn
[08:36:27] <FromDiscord> <evoalg> absolutely ... it may sound strange but collect is one of the best things about nim for me
[08:37:36] <FromDiscord> <Rika> anything with two or more nested loops should not be a comprehension but so many people do it anyway so 😄
[08:40:45] <FromDiscord> <evoalg> I've done it many times, and it's so unreadable. In python with the for loops and the if's at the end, and then the "if else" being hacked into the syntax later, but it has be before the for loops, then nested LC's it quickly becomes so unreadable
[08:43:04] <FromDiscord> <evoalg> whoever came up with collect, thank you
[08:49:19] <FromDiscord> <Elegantbeef> Yea collect is the more readable and proper left to right top to bottom evaluation
[08:57:29] <FromDiscord> <evoalg> I'm trying to echo a 2D seq so it prints one "row" per line, and I can do that in a loop, but in python I would use pprint as it's quick ... I tried "print" but that's not what I want, should I just stick to the for loop?
[08:59:14] <FromDiscord> <Elegantbeef> You could do that or make your own `$` or `rowPrint` which either gives you a string or prints it for you
[08:59:25] <FromDiscord> <Elegantbeef> But yea pretty much the best way to do it is loop 😀
[09:01:12] <FromDiscord> <evoalg> loop is fine, thank you!
[09:24:12] *** Quits: robertmeta (sid514@user/robertmeta) (*.net *.split)
[09:24:12] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (*.net *.split)
[09:24:12] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (*.net *.split)
[09:24:12] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:24:29] *** Joins: robertmeta (sid514@user/robertmeta)
[09:24:29] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[09:24:31] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[09:24:31] *** Joins: mjsir911 (~bnc@sirabella.org)
[09:24:42] *** Quits: mjsir911 (~bnc@sirabella.org) (Changing host)
[09:24:42] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:32:50] *** Quits: skrzyp (~skrzyp@skrzyp.net) (*.net *.split)
[09:33:12] *** Joins: skrzyp (~skrzyp@skrzyp.net)
[10:20:04] <FromDiscord> <evoalg> actually as the 2D seq grows larger, print automatically puts it in a nice format if it would otherwise hit the end of the terminal window, whereas echo just wraps, so I'm quite happy with "print"
[10:29:51] <FromDiscord> <treeform> In reply to @evoalg "I'm trying to echo": I am not sure what "print" you are talking about but I have my "print" that works kind of like pretty print from python: https://github.com/treeform/print
[10:30:23] <FromDiscord> <evoalg> yep I'm using yours ... I nimble installed it ... thank you for that print!
[10:31:01] <FromDiscord> <treeform> cool, thank you for using it
[10:31:59] <FromDiscord> <treeform> I should document it but I recently added printTable which might work even better for priting seqs.
[10:32:23] <FromDiscord> <evoalg> ooooo sounds nice
[10:32:55] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/904626538861973524/unknown.png
[10:33:35] <FromDiscord> <Rika> Nice
[10:34:04] <FromDiscord> <treeform> instead of: https://media.discordapp.net/attachments/371759389889003532/904626828524793887/unknown.png
[10:34:50] <FromDiscord> <evoalg> I'm not sure it likes my seq[seq[char]] though
[10:35:03] <FromDiscord> <treeform> yeah probably not 🙂
[10:35:03] <FromDiscord> <evoalg> it's mean for tables right?
[10:35:10] <FromDiscord> <evoalg> okay
[10:35:21] <FromDiscord> <treeform> its mean for seq of objects
[10:35:36] <FromDiscord> <treeform> for seq[seq[char]] you want some sort of grid almost
[10:35:36] <FromDiscord> <evoalg> ahh yep ... makes sense
[10:35:55] <FromDiscord> <evoalg> print seems to suit really nicely
[10:35:57] <FromDiscord> <evoalg> for it
[10:36:01] <FromDiscord> <treeform> ok cool
[10:36:37] <FromDiscord> <evoalg> and colors just work, very cool
[10:41:08] <FromDiscord> <treeform> nice
[10:48:10] <FromDiscord> <evoalg> That dark blue that print prints is hard to read on my dark terminal, but maybe that's my terminal color scheme
[10:48:42] <FromDiscord> <treeform> I am sure you can play around with your settings. I am just using the 8 primary terminal colors.
[10:49:01] <FromDiscord> <evoalg> sound good!
[10:53:56] <FromDiscord> <evoalg> sorted!
[11:57:23] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[11:57:41] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[12:01:46] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:05:09] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[12:05:44] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[12:06:49] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[12:07:09] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[12:09:11] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[12:11:27] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[13:34:17] <PMunch> This post raises an interesting question. With default Table initialisation maybe it makes sense to have something like this in the official tables module? https://forum.nim-lang.org/t/8568#55665
[14:00:49] <FromDiscord> <Rika> https://www.lightbluetouchpaper.org/2021/11/01/trojan-source-invisible-vulnerabilities/
[14:05:08] <FromDiscord> <Rika> Vulnerability that affects essentially all programming languages as it is based on the source and its rendering and not the code
[14:06:43] <supakeen> A story as old as escape sequences in the shell.
[14:06:51] <FromDiscord> <enthus1ast> bak in the days we've used this / or similar tricks in filenames
[14:06:51] <supakeen> But good to renew exposure into it.
[14:07:09] <supakeen> It was always one of the main things for filenames and/or all those curl ... | sh things that they might contains escapes.
[14:09:03] <NimEventer> New thread by Lachu: [Imageman][nimgl] Loading texture, see https://forum.nim-lang.org/t/8571
[14:44:54] <PMunch> Huh, I've seen this for use in phishing attempts to create domains that look similar to the real domain but actually contains homoglyphs
[14:45:05] <PMunch> But interesting to see it be used for code
[14:47:12] <PMunch> Maybe we should set up our editors to use semantic highlighting and pick different colours for different variables
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:30] <NimEventer> New thread by Monyarm: Is there any way to check if a type is distinct?, see https://forum.nim-lang.org/t/8572
[15:53:32] <NimEventer> New thread by Gyohng: Is there a multithreaded HTTP library?, see https://forum.nim-lang.org/t/8573
[15:58:14] <madprops> when using `pairs` required to get index,value ?
[15:58:24] <madprops> when is*
[16:00:41] <FromDiscord> <haxscramper> it is required when you need to get index and value? Or you mean when it has to be called explicitly?
[16:01:03] <FromDiscord> <haxscramper> usually you don't need to call it explicitly, but sometimes I do for the sake of explicitness
[16:01:19] <madprops> yeah I meant explicitly
[16:02:06] <FromDiscord> <enthus1ast> i just flawlessly interopted with nim from a Lazarus gui, nice
[16:02:18] <FromDiscord> <Rika> you can call it explicitly with a single var for loop to have a tuple instead in that var
[16:02:26] <FromDiscord> <Rika> `for tpl in a.pairs():`
[16:02:27] <FromDiscord> <Rika> or so
[16:03:32] <NimEventer> New thread by Gyohng: This forum preview JS error, see https://forum.nim-lang.org/t/8574
[16:04:32] <FromDiscord> <enthus1ast> maybe this will be my new "secret weapon" for ultra fast guis
[16:05:14] <FromDiscord> <enthus1ast> ultra fast in the sence of clicking them together, build the most heavy lifting logic in nim then ship
[16:05:50] <FromDiscord> <Rika> what is lazarus
[16:06:18] <FromDiscord> <enthus1ast> a Ide for freepascal like Delphi (but actually cross platform\: Win, Mac, Linux)
[16:06:44] <FromDiscord> <enthus1ast> i know pascal is not sexy \:)
[16:07:00] <FromDiscord> <enthus1ast> but actually nim shares a lot of its ideas with pascal
[16:07:17] <FromDiscord> <enthus1ast> the first compiler was build in pascal by araq iirc
[16:11:40] <FromDiscord> <enthus1ast> maybe not `ideas`, but it looks more like nim than eg c
[16:12:22] <FromDiscord> <enthus1ast> looks familiar right?
[16:12:22] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3DAO
[16:18:58] <FromDiscord> <Rika> i know that nim shares a lot with pascal, i just didnt know what lazarus was
[16:19:35] <NimEventer> New thread by Gyohng: Query nim include paths, see https://forum.nim-lang.org/t/8575
[16:19:39] <FromDiscord> <enthus1ast> tl;dr   an ide and (mostly gui) class library
[16:19:45] <FromDiscord> <enthus1ast> for freepascal
[16:19:49] <FromDiscord> <Rika> cool
[16:21:00] <FromDiscord> <Yardanico> In reply to @enthus1ast "tl;dr   an": there are libs that wrap lcl in different languages, for example one in go - https://github.com/ying32/govcl
[16:21:37] <FromDiscord> <Yardanico> he also made https://github.com/ying32/nim-vcl but it's archived
[16:21:53] <FromDiscord> <Yardanico> @enthus1ast  you might be interested in this one anyway ^
[16:22:10] <FromDiscord> <enthus1ast> yes, thank you
[16:22:42] <FromDiscord> <Yardanico> 1.5mb source files though :DD
[16:22:55] <FromDiscord> <enthus1ast> currently if i need crossplatform gui i use python/tk ... bundled with pyinstallert
[16:23:15] <FromDiscord> <enthus1ast> and i hate it every time i do it \: )
[16:29:59] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[16:32:11] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[16:34:54] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 260 seconds)
[16:35:18] *** kayabaNerve_ is now known as kayabaNerve
[16:36:24] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:45:01] *** Quits: krux02 (~krux02@p200300ca8f00b9007f473b6073e7a3c7.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:54:31] <FromDiscord> <cabboose> sup party people
[16:55:35] *** Joins: arkurious (~arkurious@user/arkurious)
[16:55:46] <FromDiscord> <Rika> learning nixos to set up some (nim) web services + gitea+ci for such services
[16:55:51] <FromDiscord> <Rika> you
[16:56:03] <FromDiscord> <Rika> (edit) "learning" => "(re)learning"
[16:56:14] <FromDiscord> <cabboose> Considering whether to watch DUNE or not
[16:56:22] <FromDiscord> <cabboose> so, not as productive
[16:56:39] <FromDiscord> <Rika> oh dude you dont want to try to be "as productive" as me
[16:56:48] <FromDiscord> <Rika> ive been going on this journey nonstop for weeks now
[16:56:57] <FromDiscord> <Rika> im prolly burnt out but im obsessed with getting this working
[16:57:29] <FromDiscord> <cabboose> Oh yeah I'm already burnt out. I've literally been told by a health professional to play games and "have fun"
[16:57:40] <FromDiscord> <cabboose> and that obsession
[16:57:43] <FromDiscord> <cabboose> thats the one that does it
[16:57:45] <FromDiscord> <cabboose> save yourself rika
[16:57:45] <FromDiscord> <Rika> i dread working on it but i keep on searching info about how to do it in my spare time, idfk why the fuck i do that
[16:57:47] <FromDiscord> <cabboose> while you still can
[16:57:53] <FromDiscord> <IsaacPaul> my fun is programming
[16:57:55] <FromDiscord> <IsaacPaul> xD
[16:57:59] <FromDiscord> <Rika> NO
[16:58:00] <FromDiscord> <Rika> DONT SAY THAT
[16:58:05] <FromDiscord> <cabboose> It's fun until its not fun
[16:58:12] <FromDiscord> <Rika> THATS LITERALLY WHY IVE BEEN WORKING ON THIS FOR SO LONG
[16:58:22] <FromDiscord> <IsaacPaul> that and going to breweries
[16:58:46] <FromDiscord> <cabboose> Programming is my fun too; the issue is nothing is fun anymore
[16:58:46] <FromDiscord> <Rika> are all programmers alcohol abusers because i feel like im not a programmer until i do so
[16:59:09] <FromDiscord> <cabboose> In reply to @Rika "are all programmers alcohol": if the people I talk to are anything to go by it seems like you have to abuse something
[16:59:14] <FromDiscord> <cabboose> like beef abuses himself
[16:59:19] <FromDiscord> <IsaacPaul> I used to, I've cut back. I feel not as 'sharp' anymore and I don't want it to effect my programming
[16:59:21] <FromDiscord> <cabboose> so it doesnt have to be alcohol? I guess?
[16:59:22] <FromDiscord> <Rika> i guess i am already there
[17:00:05] <PMunch> @cabboose, can highly recommend Dune
[17:00:10] <FromDiscord> <Rika> In reply to @IsaacPaul "I used to, I've": basically we (read: i) need to learn about what makes us (read: me) obsess over stuff like this
[17:00:16] <FromDiscord> <cabboose> alright im starting it
[17:00:18] <FromDiscord> <cabboose> cheers cobba
[17:00:47] <FromDiscord> <cabboose> In reply to @Rika "basically we (read: i)": If you want to answer some questions with me I can do a screening on that
[17:00:58] <FromDiscord> <Rika> wdym
[17:01:03] <FromDiscord> <IsaacPaul> It's the effort -> reward process imo
[17:01:05] <FromDiscord> <Rika> me no english native me no understand
[17:01:29] <FromDiscord> <cabboose> You know a psychology questionnaire that helps to show how someones brain works
[17:01:32] <FromDiscord> <Rika> what questions? screen what?
[17:01:33] <FromDiscord> <Rika> oh
[17:01:45] <FromDiscord> <Rika> yeah i havent taken any of those in my life i believe
[17:01:53] <FromDiscord> <cabboose> Not many people have hahaha
[17:07:05] <FromDiscord> <Steffen> Hello peoples
[17:07:21] <FromDiscord> <Steffen> Suppose Im trying to get C library working via FFI
[17:07:38] <FromDiscord> <Steffen> I have a function now that returns NULL on error
[17:07:43] <FromDiscord> <Steffen> How would I check for that?
[17:09:45] <FromDiscord> <Rika> NULL and nil are the same afaik?
[17:10:55] <FromDiscord> <Steffen> that would be nice
[17:11:45] <FromDiscord> <IsaacPaul> they're different in obj-c , not sure about nim. ↵I'm assuming you're getting a zeroed pointer back so whatever return value that is a pointer should work..
[17:12:44] <FromDiscord> <Steffen> mhh
[17:13:29] <FromDiscord> <IsaacPaul> I can test and see
[17:14:00] <FromDiscord> <haxscramper> `let returnValue = function()` followed by `isNil(returnValue)`↵(@Steffen)
[17:14:17] <FromDiscord> <haxscramper> there is no such thing as NULL in C, it is just a macro that expands to 0 or something along those lines
[17:14:25] <FromDiscord> <haxscramper> so you just get null pointer
[17:14:29] <FromDiscord> <hips> I like a beer on Friday night, that's about it 😅
[17:15:24] <FromDiscord> <Steffen> yeah, null pointer
[17:16:36] <FromDiscord> <Steffen> trying to get ldap working
[17:16:45] <FromDiscord> <Steffen> "If an error occurs, ldap_open() and ldap_init() will  return  NULL  and  errno    should    be   set   appropriately. "
[17:16:52] <FromDiscord> <Steffen> https://www.openldap.org/software/man.cgi?query=ldap_initialize&apropos=0&sektion=3&manpath=OpenLDAP+2.5-Release&arch=default&format=html
[17:17:13] <FromDiscord> <Steffen> Been a few years since I messed with C. But looks doable
[17:17:47] <FromDiscord> <dom96> basically the only time I drink alcohol is at FOSDEM, but I think we should discuss such things in #offtopic
[17:18:42] <FromDiscord> <Rika> how do people wrap errno stuff in C?
[17:21:39] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3DBc
[17:21:47] <FromDiscord> <IsaacPaul> (edit) "https://play.nim-lang.org/#ix=3DBc" => "https://play.nim-lang.org/#ix=3DBd"
[17:22:43] <FromDiscord> <IsaacPaul> In reply to @Rika "how do people wrap": Good question 😆
[17:23:44] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3DBe
[17:24:29] <FromDiscord> <IsaacPaul> disregard the attribute stuff, but idk if that will break things.. :S
[17:27:45] <FromDiscord> <Steffen> mhh, Im getting a not null back
[17:29:20] <PMunch> @Rika, depends on what you mean by wrap
[17:29:38] <FromDiscord> <Rika> translate the interface for nim
[17:30:59] <PMunch> I guess the "proper" way would be to have an exception type like CError which has an errno field and then have wrappers like `errno = 0; <actual call>; if errno != 0: raise CError(errno: errno, msg: <call to convert errno to string>)`
[17:35:23] <FromDiscord> <Steffen> oh wow
[17:35:29] <FromDiscord> <Steffen> looks like its working
[17:35:44] <NimEventer> New thread by Benob: Nim's version of the Trojan Source vulnerability, see https://forum.nim-lang.org/t/8576
[17:42:03] <FromDiscord> <Steffen> I hate ldap
[17:43:49] <FromDiscord> <IsaacPaul> In reply to @IsaacPaul "On a import c": Nevermind, found some example code on github 😄 ↵https://github.com/numforge/laser/blob/master/laser/simd.nim#L21↵Really loving the built in vscode in github (via `.` )
[17:54:17] <FromDiscord> <Steffen> How can I set a pointer to an int?
[17:54:19] <FromDiscord> <Steffen> first type mismatch at position: 3↵  required type for invalue: ptr cint↵  but expression '"3"' is of type: string
[17:55:51] <FromDiscord> <Yardanico> well, it seems like you're passing a string where the proc expects a pointer to an int. Can you show the proc definition and tell where the actual function comes from?
[17:55:57] <FromDiscord> <enthus1ast> pardon
[17:55:58] <FromDiscord> <enthus1ast> var ii\: cint
[17:56:02] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3DBy
[17:56:27] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3DBz
[17:56:35] <FromDiscord> <Yardanico> (edit) "https://play.nim-lang.org/#ix=3DBz" => "https://play.nim-lang.org/#ix=3DBA"
[17:56:58] <FromDiscord> <Steffen> https://www.openldap.org/software/man.cgi?query=ldap_set_option&apropos=0&sektion=3&manpath=OpenLDAP+2.6-Release&arch=default&format=html
[17:57:05] <FromDiscord> <Steffen> proc ldap_set_option(ld: ptr LDAP; option: cint; invalue: ptr cint): cint
[17:58:02] <FromDiscord> <Yardanico> oh, then the proc definition is wrong
[17:58:11] <FromDiscord> <Yardanico> it should just be `invalue: pointer`
[17:58:15] <FromDiscord> <Steffen> yes and no
[17:58:24] <FromDiscord> <Yardanico> ?
[17:58:49] <FromDiscord> <Steffen> Depends on Option
[17:58:50] <FromDiscord> <Steffen> LDAP_OPT_PROTOCOL_VERSION↵              Sets/gets the protocol version.  outvalue and  invalue  must  be↵              int .
[17:59:22] <FromDiscord> <Yardanico> yes, but again, your proc shouldn't make assumptions of specific argument types, they say it's `void` so you should use `pointer`
[17:59:29] <FromDiscord> <Yardanico> and of course you'll be able to pass `ptr cint` to it
[17:59:36] <FromDiscord> <Yardanico> because `ptr cint` is compatible with `pointer`
[18:00:24] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3DBB
[18:01:09] <FromDiscord> <Steffen> yeah, thank you. that compoled
[18:01:12] <FromDiscord> <Steffen> compiled too
[18:04:27] <FromDiscord> <Steffen> root@fd1b95a338cc:/ssh-ldap# ./ffi↵Not null↵0↵Success
[18:04:32] <FromDiscord> <Steffen> I like success
[18:05:10] <FromDiscord> <Rika> who doesnt
[18:07:40] <FromDiscord> <tandy> i just saw nimskull
[18:07:49] <FromDiscord> <Rika> 💀
[18:07:50] <FromDiscord> <tandy> thought it might be from [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)
[18:08:10] <FromDiscord> <Yardanico> it's from saem
[18:08:14] <FromDiscord> <Yardanico> and othjers
[18:08:19] <FromDiscord> <Yardanico> (edit) "othjers" => "others"
[18:08:20] <FromDiscord> <haxscramper> it's from multiple people
[18:08:27] <FromDiscord> <Yardanico> exactly
[18:08:51] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[18:08:51] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[18:08:51] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:10:25] <FromDiscord> <haxscramper> how do you like roadmap on the readme btw?
[18:11:26] <FromDiscord> <Arend | ᛗᛟᚢᚱᛁᛖᛊ> I have a suggestion for the roadmap 😏
[18:11:54] <FromDiscord> <Rika> lets hear it
[18:13:34] <FromDiscord> <tandy> \:\>) very nice
[18:14:10] <FromDiscord> <xflywind> In reply to @haxscramper "how do you like": So eventually `nim-works/cps` will abandon Nim?
[18:14:45] <FromDiscord> <Rika> probably not?
[18:15:01] <FromDiscord> <haxscramper> define "abandon"
[18:15:32] <FromDiscord> <haxscramper> we don't want to keep ten years work of backwards compat hacks, barely working impls for two concepts, shit like coreReordering and so on
[18:15:56] <FromDiscord> <haxscramper> at the same time breaking for the sake of breaking is not a goal either
[18:16:22] <FromDiscord> <haxscramper> right now we want working compiler
[18:16:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[18:17:06] <FromDiscord> <Rika> i think they mean you'll abandon cps on nim in favor of maintaining cps for skull
[18:20:27] <FromDiscord> <haxscramper> and one that can be easily contributed to
[18:20:30] <FromDiscord> <haxscramper> and language specification
[18:20:44] <FromDiscord> <xflywind> In reply to @Rika "i think they mean": yeah, it's painful to maintain two incompatible compiler
[18:20:52] <FromDiscord> <xflywind> (edit) "compiler" => "compilers"
[18:21:08] <FromDiscord> <Yardanico> you mean to maintain a library for two compilers
[18:21:17] <FromDiscord> <haxscramper> cps is a main reason of "we want working compiler"
[18:22:14] <FromDiscord> <xflywind> I see
[18:22:41] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[18:22:41] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[18:22:41] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:22:45] <FromDiscord> <haxscramper> well, if you want to know my personal opinion on that one
[18:22:49] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[18:23:15] <FromDiscord> <haxscramper> I would prefer to put my effort into project where I know what are goals and plans are
[18:23:33] <FromDiscord> <haxscramper> But I don't personally want to rewrite all my code either
[18:24:01] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[18:24:21] <FromDiscord> <haxscramper> You can see it as nim 2.0 if you want
[18:25:49] <NimEventer> New thread by IvanS: Fidget questions - 1) scrolling - 2) closing window, see https://forum.nim-lang.org/t/8577
[18:26:44] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:35:49] <FromDiscord> <tandy> how far apart will nim and nimskull be? i see you have bors for getting commits from the nim repo but i guess it will be hard to tell whether araq etc will keep going or join the nimskull effort?
[18:41:31] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[18:42:02] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[18:42:02] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[18:42:02] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:57:49] <FromDiscord> <leorize> what does bors have to do with getting commits from nim repo? \:p
[19:02:03] <FromDiscord> <leorize> anyway, I wouldn't expect nimskull to deviate too far from nim
[19:03:52] <FromDiscord> <leorize> for most meaningful purposes, as far as I can tell, because Nim's ecosystem is something that nimskull will have to play nice with
[19:04:04] <FromDiscord> <Rika> what is bors?
[19:04:14] <FromDiscord> <enthus1ast> the mergebot?
[19:04:39] <FromDiscord> <enthus1ast> (had to google it myself)
[19:04:56] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/904755219416637440): the mergebot maybe?
[19:05:08] <FromDiscord> <dom96> didn't know bors supported non-rs repos
[19:05:20] <FromDiscord> <leorize> it's not rocket science (literally \:p)\: https://graydon.livejournal.com/186550.html
[19:05:23] <FromDiscord> <dom96> I guess it's pretty configurable to run whatever you want
[19:05:56] <FromDiscord> <leorize> bors doesn't really care what repo you're using, it just waits on CI result
[19:06:33] <FromDiscord> <leorize> you can read the linked article to see the problem it solves
[19:07:24] <FromDiscord> <tandy> oh i thought bors was one of those bots that grabs commits from another repo mb
[19:08:45] <FromDiscord> <Rika> no thats called git pull xd
[19:10:09] <NimEventer> New Nimble package! tecs - Simple ECS implementation for Nim, see https://github.com/Timofffee/tecs.nim
[19:10:55] <FromDiscord> <tandy> @Rika)
[19:11:05] <FromDiscord> <tandy> \_\>\:()
[19:11:08] <FromDiscord> <tandy> lol
[19:11:27] <FromDiscord> <Rika> what
[19:16:12] <FromDiscord> <leorize> I'm pretty sure that cps the library will continue to target Nim↵(@xflywind)
[19:20:58] <FromDiscord> <xflywind> Interesting; I see
[19:30:00] <NimEventer> New thread by Archnim: Nim interpreter, see https://forum.nim-lang.org/t/8578
[19:33:56] <FromDiscord> <Yardanico> uh
[19:34:33] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[19:38:24] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[19:38:24] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[19:38:24] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[19:49:18] <FromDiscord> <Rika> Lol
[19:52:55] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[19:53:18] <arkanoid> hello! playing around with arraymancer for the first time. Do you know how to test if an element is contained in a tensor?
[19:53:52] <arkanoid> like "7 in [0,1,2,3,4,5,6,7].toTensor" => true
[20:03:14] <FromDiscord> <Rika> does that not work directly?
[20:04:01] <arkanoid> no
[20:04:30] <arkanoid> Rika: I have to 7 in myTensor.toSeq
[20:06:01] <FromDiscord> <Rika> seems like the proc doesnt exist indeed
[20:06:46] <arkanoid> I'm a champion in finding missing features on first use
[20:26:06] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[20:26:37] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[20:26:37] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[20:26:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:44:11] *** Joins: rockcavera (~rc@192.12.114.204)
[20:44:12] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[20:44:12] *** Joins: rockcavera (~rc@user/rockcavera)
[21:00:59] <FromDiscord> <geekrelief> In my nimble file, I'm trying to get the value of a `--cc` flag from `nim.cfg` using `get("cc")` https://nim-lang.org/docs/nimscript.html#get%2Cstring but it's returning empty. Any clue what I'm doing wrong?
[21:07:20] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[21:15:06] <FromDiscord> <dom96> Nimble doesn't read nim.cfg
[21:15:53] <FromDiscord> <geekrelief> ok yeah, I guess I need to create a work around. I'm kind of confused. Is Nimble meant to be used as a build system?
[21:16:33] <FromDiscord> <geekrelief> I mean it kind of works, but it's a little awkward for me.  Or maybe I just don't "get" it yet.
[21:21:25] <FromDiscord> <IsaacPaul> Still a good question.. how to know what compiler you're using inside of a cfg file.
[21:21:49] <FromDiscord> <IsaacPaul> (edit) "Still a good question.. how to know what compiler ... you're" 03added "(clang / gcc)"
[21:28:40] <FromDiscord> <IsaacPaul> Maybe just avoid the command flag --cc and use cc=clang inside if you config file.. I have a feeling the compiler flags are meant to override the configuration.
[21:28:55] <FromDiscord> <IsaacPaul> but idk
[21:32:44] <FromDiscord> <geekrelief> I'm sidestepping the issue for now. Using .cfg vs .nims has always been awkward for me.  I thought with a new project I'd try using nimble as a build system, but maybe that's not its intent and I should look at nake?
[21:34:59] <FromDiscord> <Solitude> .cfg/nims are orthogonal to nimble
[21:36:52] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3DD3
[21:38:03] <FromDiscord> <IsaacPaul>  to each .nim file
[21:38:42] <FromDiscord> <geekrelief> Yeah I'm using .cfg and .nims for setup, but I'm building multiple targets and I also need to switch compilers, so they need different flags too.
[21:39:36] <FromDiscord> <geekrelief> I building bindings which generate differently depending on the compiler, then I'm building a plugin against binding.
[21:41:33] <FromDiscord> <geekrelief> I want to define which compiler I'm using for the bindings and plugin in one place while allowing the bindings its own set of flags vs the plugin.
[21:42:17] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3DD5
[21:42:41] <FromDiscord> <IsaacPaul> then inside the if you know its clang or gcc or whatever
[21:43:00] <FromDiscord> <IsaacPaul> there's probably a better way
[21:46:11] <FromDiscord> <geekrelief> Yeah, that's probably going to be more convoluted than I'd like.  It's so much easier to understand one file and set all the flags in there which is what I did for my prior project.  Thanks for the suggestion though.
[21:54:15] <FromDiscord> <dom96> If you want a Nimble-only solution then you can do something like this: https://github.com/nim-lang/nimble/blob/master/tests/nimscript/nimscript.nimble#L34
[21:58:32] <FromDiscord> <haxscramper> does nimble even react to `--nimblePath`?
[21:58:39] <FromDiscord> <haxscramper> I'm trying to install package in non-default directory
[21:58:53] <FromDiscord> <haxscramper> `nimble install --nimblePath:(pwd) benchy`
[21:59:35] <FromDiscord> <haxscramper> same for `nimble --nimblePath:(pwd) install benchy`
[22:00:01] <FromDiscord> <Solitude> `--nimbleDir:dirname         Set the Nimble directory.`
[22:00:07] <FromDiscord> <haxscramper> sht
[22:00:12] <FromDiscord> <haxscramper> 10^9 IQ time
[22:05:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[22:06:46] <FromDiscord> <dom96> hm, Nimble should fatal with an invalid flag like that
[22:06:56] <FromDiscord> <dom96> I guess it doesn't?
[22:08:17] *** Joins: neurocyte0132889 (~neurocyte@45.10.60.185)
[22:08:17] *** Quits: neurocyte0132889 (~neurocyte@45.10.60.185) (Changing host)
[22:08:17] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:12:20] <FromDiscord> <Schelz> how to import a .cpp file in nim ?
[22:17:08] <FromDiscord> <haxscramper> no, it never failed with invalid flags↵(@dom96)
[22:17:13] <FromDiscord> <haxscramper> for as long as I can remember
[22:17:29] <FromDiscord> <hips> In reply to @Schelz "how to import a": perhaps https://github.com/nimterop/nimterop ?
[22:17:43] <FromDiscord> <haxscramper> if you want to try your luck yes,
[22:18:00] <FromDiscord> <haxscramper> Technically c2nim "supports" C++ as well, but I can't comment on how good this support is
[22:18:24] <FromDiscord> <haxscramper> Otherwise you can add read on the `importcpp` pragma on the manual and do wrapping by haand
[22:20:17] <FromDiscord> <Recruit_main707> pretty sure nimterop is abandoned and did not support c++ properly ever
[22:20:38] <FromDiscord> <Schelz> i can use c too its not a problem
[22:20:55] <FromDiscord> <haxscramper> my personal recommendation is to
[22:21:04] <FromDiscord> <haxscramper> well, how big/complex is the API?
[22:21:53] <FromDiscord> <Schelz> not pretty big some bool structure, and some int too
[22:22:27] <FromDiscord> <haxscramper> then I guess you can just try `c2nim api.h` and see how it goes
[22:22:40] <FromDiscord> <Schelz> isnt a solution to compile the cpp in .so and import it in nim ?
[22:23:01] <FromDiscord> <Schelz> like loading in it a dll and use it
[22:23:03] <FromDiscord> <haxscramper> it is a possibility, yes, but there are other ways
[22:23:05] <FromDiscord> <Recruit_main707> youd still need to wrap the functions
[22:24:40] <FromDiscord> <haxscramper> to work with dynamic libraries you can do `proc dynproc(arg: cint): SomeStructure {.importc: "nameOfTheProcInLibrary", dynlib.}`
[22:25:15] <FromDiscord> <haxscramper> And if you want to do using only headers you can wrap it as `proc headerproc(arg: cint): SomeStructure {.header: "header.h", importc: "nameOfTheProcInLibrary".}`
[22:25:32] <FromDiscord> <haxscramper> I suppose I forgot something in the `{..}`, but this is a general idea
[22:32:18] <FromDiscord> <IsaacPaul> Since it's a header file you'll better results by adding the `--header` flag when using c2nim.
[22:33:15] <FromDiscord> <haxscramper> it doesn't detect this based on file extension?
[22:33:20] <FromDiscord> <IsaacPaul> nope
[22:36:58] <FromDiscord> <IsaacPaul> weird .. maybe it does.. I remember initially having issues and now it seems to work
[22:39:51] <FromDiscord> <IsaacPaul> ah ok the difference is with `--header` c2nim will use importc and without it will try to just directly translate it to nim
[22:40:06] <FromDiscord> <IsaacPaul> so ya, nope
[22:40:30] <arkanoid> I'm trying to cross-compile from linux to windows for the first time using this config.nims: https://termbin.com/w1gg, but I'm getting "/usr/bin/x86_64-w64-mingw32-ld: cannot find -ldl"
[22:46:42] <FromDiscord> <Astavie> sent a code paste, see https://play.nim-lang.org/#ix=3DDu
[22:47:59] <FromDiscord> <Schelz> this is an error that give me when i compile a file that has glfw and imgui as dll and i run it https://media.discordapp.net/attachments/371759389889003532/904811526127489064/unknown.png
[22:54:43] <arkanoid> why -d:mingw works at command line, but fails with a config.nims with just that?
[22:54:54] <FromDiscord> <Schelz> dose anyone has libstdc++-6.dll.a in the mingw64 ?
[22:54:59] <FromDiscord> <Schelz> (edit) "dose anyone has libstdc++-6.dll.a in the mingw64 ... ?" 03added "floder"
[22:55:04] <FromDiscord> <Schelz> (edit) "floder" => "folder"
[22:56:40] <arkanoid> got it: Note: In general, the define switches can also be set in NimScripts using switch or --, as shown in above examples. Few define switches such as -d:strip, -d:lto and -d:lto_incremental cannot be set in NimScripts.
[22:56:51] <arkanoid> https://nim-lang.org/docs/nims.html
[23:01:34] *** Joins: krux02 (~krux02@p54932344.dip0.t-ipconnect.de)
[23:02:52] <FromDiscord> <dom96> In reply to @haxscramper "no, it never failed": we have such a long test suite for these flag behaviours, it's getting a bit nuts that there are still bugs
[23:02:59] <FromDiscord> <dom96> in any case, please submit a bug report
[23:07:04] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:24] <FromDiscord> <haxscramper> done
[23:08:44] <NimEventer> New thread by Astavie: Did NRVO break?, see https://forum.nim-lang.org/t/8579
[23:09:13] <FromDiscord> <dom96> thanks!
[23:11:33] *** Joins: fputs (~thelounge@67.59.83.166)
[23:12:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[23:15:54] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:16:26] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:19:09] *** Server sets mode: +nt 
[23:33:28] <FromDiscord> <leorize> the same issue made -d\:release do nothing in config files (til recently)
