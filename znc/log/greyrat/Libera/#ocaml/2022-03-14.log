[00:13:44] *** Quits: mro_ (~mro@2002:5cc3:d560:0:9e5:d69:be85:198e) (Quit: Leaving...)
[00:55:38] *** Quits: jlrnick (~josephler@2a01cb040a159400d5f1734ba665bbe6.ipv6.abo.wanadoo.fr) (Quit: ouch!)
[00:59:45] *** Joins: rgrinberg (~textual@177.244.18.30)
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:13:57] <d_bot_> <mbacarella> it was giving me protocol error 0x1 because i ***obviously*** forgot to include the header content-type: application/grpc
[01:14:04] <d_bot_> <mbacarella> *headdesk*
[01:14:30] <d_bot_> <mbacarella> only had to man-in-the-middle-attack this grpc service to figure it out
[01:14:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:22:25] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:41] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[01:56:09] *** Joins: namkeleser (~namkelese@101.175.104.107)
[02:11:21] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:34:28] *** Quits: oriba (~oriba@dynamic-089-014-025-098.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:11:48] <d_bot_> <ansiwen> do you think that could work as an etcd client?
[03:20:23] <d_bot_> <ansiwen> I created a rest api client for the gRPC gateway of etcd, but if a native gRPC access is feasible, I might prefer that.
[03:24:48] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 272 seconds)
[03:29:51] *** Joins: vicfred (~vicfred@user/vicfred)
[03:38:34] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:53:55] *** Quits: namkeleser (~namkelese@101.175.104.107) (Ping timeout: 256 seconds)
[04:02:37] *** Joins: oriba (~oriba@dynamic-089-014-025-098.89.14.pool.telefonica.de)
[04:04:29] *** Quits: oriba (~oriba@dynamic-089-014-025-098.89.14.pool.telefonica.de) (Client Quit)
[04:12:19] *** Joins: Soni (~quassel@autistic.space)
[04:16:32] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:02:50] <d_bot_> <mimoo> anyone knows how I'm supposed to listen on a number of channels continuously?
[05:03:18] <d_bot_> <mimoo> I have the following code:
[05:03:18] <d_bot_> <mimoo>
[05:03:20] <d_bot_> <mimoo> ```
[05:03:21] <d_bot_> <mimoo> let rec run_network (pubkey_to_channel, channels) =
[05:03:22] <d_bot_> <mimoo>   print_endline "running network";
[05:03:23] <d_bot_> <mimoo>   let events = List.map Event.receive channels in
[05:03:25] <d_bot_> <mimoo>   Format.printf "done receiving, now syncing\n";
[05:03:26] <d_bot_> <mimoo>   let Types.{ from; label; _ } = Event.select events in
[05:03:27] <d_bot_> <mimoo>   Format.printf "received %s from %s\n" label (Bls.PublicKey.to_hex from);
[05:03:29] <d_bot_> <mimoo>   run_network (pubkey_to_channel, channels)
[05:03:30] <d_bot_> <mimoo> ```
[05:03:31] <d_bot_> <mimoo>
[05:03:33] <d_bot_> <mimoo> but it doesn't print anything. I think it works because if I rewrite it to not recurse it prints out some messages it receives
[05:04:03] <d_bot_> <mimoo> I'm not sure I'm using the Event API correctly
[05:04:11] <d_bot_> <mimoo> or if recursing like this to listen continuously is a bad idea?
[05:05:24] <d_bot_> <mimoo> there are no examples on the Event doc (https://ocaml.org/api/Event.html#TYPEevent), so it's really hard to understand how to use this API. For example, the documentation for Event.choose is not understandable to me:
[05:05:24] <d_bot_> <mimoo>
[05:05:26] <d_bot_> <mimoo> > choose evl returns the event that is the alternative of all the events in the list evl.
[05:05:53] <d_bot_> <mimoo> what is an alternative?
[05:38:32] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:34:21] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 252 seconds)
[06:35:53] *** Joins: tomku (~tomku@user/tomku)
[06:37:34] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 260 seconds)
[06:53:18] *** Joins: gravicappa (~gravicapp@145.255.0.191)
[06:57:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[07:19:58] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:26:35] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[07:31:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:37:25] *** Joins: spip (~bobo@37.170.57.11)
[07:38:08] *** Quits: bobo (~bobo@37.164.129.244) (Ping timeout: 272 seconds)
[07:54:57] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:03:07] *** Joins: rgrinberg (~textual@177.244.18.30)
[08:11:05] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[08:30:31] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:30:39] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[08:48:14] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[09:20:17] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[09:34:46] *** Quits: ski (~ski@remote12.chalmers.se) (Quit: Lost terminal)
[09:43:40] *** Joins: ski (~ski@remote12.chalmers.se)
[09:45:47] *** Joins: def (~def@ks35179.kimsufi.com)
[09:45:56] *** Parts: def (~def@ks35179.kimsufi.com) ()
[09:49:53] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[09:50:35] *** Joins: vicfred (~vicfred@user/vicfred)
[09:51:46] *** Joins: vicfred_ (~vicfred@user/vicfred)
[09:53:33] *** Quits: vicfred_ (~vicfred@user/vicfred) (Client Quit)
[09:55:06] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 252 seconds)
[10:05:48] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 240 seconds)
[10:08:45] *** Joins: rgrinberg (~textual@177.244.18.30)
[10:15:29] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[10:16:15] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:16:41] <d_bot_> <quernd> I'm pretty sure a native gRPC client for etcd is feasible, in fact I think I have code for that somewhere. Remind me later in the day
[11:03:53] *** Joins: amosbird (~amosbird@13.75.119.182)
[11:12:10] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[11:37:43] *** Joins: jlrnick (~josephler@gw.lipn.univ-paris13.fr)
[11:47:51] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[11:49:59] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[12:06:55] *** Joins: kakadu (~kakadu@195.19.236.234)
[12:30:05] *** Joins: mbuf (~Shakthi@223.178.86.208)
[12:58:50] *** Joins: haesbaert (~haesbaert@195.95.187.184)
[13:29:05] *** Joins: olle (~olle@212-181-59-82.customer.telia.com)
[13:37:32] *** Quits: jlrnick (~josephler@gw.lipn.univ-paris13.fr) (Ping timeout: 240 seconds)
[13:40:20] *** Joins: bartholin (~bartholin@158.110.71.61)
[13:40:49] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[13:44:25] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[14:07:00] *** Quits: chrisz (idn8ps0bs5@d5361408.access.ecotel.net) (Ping timeout: 252 seconds)
[14:08:45] *** Joins: chrisz (vbds0o7wps@d5365df2.access.ecotel.net)
[15:13:54] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[15:28:05] *** Joins: unyu (~pyon@user/pyon)
[15:29:46] *** Joins: bobo (~bobo@37.164.151.94)
[15:29:58] *** Quits: spip (~bobo@37.170.57.11) (Ping timeout: 272 seconds)
[15:34:30] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[15:54:22] *** Joins: jlrnick (~josephler@gw.lipn.univ-paris13.fr)
[16:12:24] *** Quits: jlrnick (~josephler@gw.lipn.univ-paris13.fr) (Ping timeout: 252 seconds)
[16:20:40] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[16:29:52] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[16:34:46] <d_bot_> <ansiwen> Cool. I just worry a bit in about the ocaml-h2 client dependency, because we are using it in a mirage unikernel, that also acts as a cohttp-server, but I hope that is not a conflict, @anmonteiro ?
[16:51:31] *** Joins: oriba (~oriba@dynamic-089-014-251-097.89.14.pool.telefonica.de)
[17:24:12] *** Joins: zebrag (~chris@user/zebrag)
[17:25:37] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:37:24] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[17:42:57] <d_bot_> <kodwx> Does anyone else think OCaml stdlib errors should be more detailed?
[17:48:23] <d_bot_> <anmonteiro> Should be fine
[17:48:50] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[17:51:57] *** Quits: bartholin (~bartholin@158.110.71.61) (Ping timeout: 252 seconds)
[18:01:20] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[18:01:45] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[18:01:57] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[18:04:40] *** Joins: bartholin (~bartholin@158.110.71.61)
[18:28:47] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Remote host closed the connection)
[18:30:48] *** Quits: bartholin (~bartholin@158.110.71.61) (Ping timeout: 250 seconds)
[18:32:43] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[18:32:57] *** Joins: bartholin (~bartholin@158.110.71.61)
[18:38:25] *** Joins: Haudegen (~quassel@91.114.49.10)
[18:42:20] *** Joins: dextaa_ (~dextaa@user/dextaa)
[18:43:15] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[18:43:48] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 250 seconds)
[18:44:02] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:44:35] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[18:45:10] *** Joins: mro (~mro@2002:5cc3:a02b:0:e00a:d194:42e8:c058)
[18:49:49] *** Quits: mro (~mro@2002:5cc3:a02b:0:e00a:d194:42e8:c058) (Ping timeout: 240 seconds)
[19:01:12] <d_bot_> <mbacarella> bane of existence is a top-level exception in the middle of some application linked to millions of lines of code that just says "Not_found"
[19:01:48] <companion_cube> OCAMLRUNPARAM=b
[19:01:50] <companion_cube> et voilà !
[19:02:26] <d_bot_> <mbacarella> i meant it'd be nice if it said the thing that was `Not_found`, like `Not_found_s key`
[19:03:08] <companion_cube> if you get `Not_found_s 42` it doesn't help taht much :)
[19:05:11] <d_bot_> <mbacarella> mmmmmmmm disagree
[19:06:16] <companion_cube> if you have tons of integer tables…
[19:07:43] <d_bot_> <mbacarella> convert them to strings. much more descriptive that way.
[19:07:51] *** Quits: bartholin (~bartholin@158.110.71.61) (Ping timeout: 252 seconds)
[19:08:02] <companion_cube> except we don't have a universal type to string converter
[19:08:28] <d_bot_> <mbacarella> `Not_found_s "42"`  ✅
[19:08:42] <companion_cube> I mean you have to modify `Map.Ordered` for that
[19:08:46] <companion_cube> to include a printer
[19:08:57] <companion_cube> and then you pay additional costs for each lookup miss
[19:09:52] *** Joins: bartholin (~bartholin@158.110.71.61)
[19:12:13] *** Quits: seeg (0bf4efab5c@2604:bf00:561:2000::2c7) (Remote host closed the connection)
[19:12:13] *** Quits: jakzale (6291399afa@user/jakzale) (Remote host closed the connection)
[19:12:13] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:12:13] *** Quits: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6) (Remote host closed the connection)
[19:12:40] *** Joins: sleepydog (03e7eaddce@2604:bf00:561:2000::3c6)
[19:12:41] *** Joins: jakzale (6291399afa@user/jakzale)
[19:12:48] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:13:03] *** Joins: seeg (0bf4efab5c@2604:bf00:561:2000::2c7)
[19:17:31] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[19:17:57] <d_bot_> <mbacarella> seems fine? i guess i'd be annoyed if i relied on matching `| Not_found` instead of `Map.mem` that i now had this waste hanging on the end `| Not_found _`
[19:18:18] <companion_cube> Map.mem + Map.find is 2 lookups
[19:18:29] <companion_cube> ofc now we have Map.find_opt so that's kind of ok
[19:20:17] <d_bot_> <octachron> And matching with `| exception Not_found -> `
[19:22:09] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Ping timeout: 252 seconds)
[19:27:37] *** Quits: olle (~olle@212-181-59-82.customer.telia.com) (Remote host closed the connection)
[19:48:15] <sleepydog> i think it's better not to assume it's OK to print function arguments. that's how you get sensitive information in a log file
[19:48:40] <d_bot_> <minimario> i'm having problems printing in ocaml jupyter notebooks; ie i type something like ```let _ = Printf.printf "hi" in 3``` and it doesn't print anything
[19:48:48] <d_bot_> <minimario> anyone know how to fix this?
[19:50:35] <d_bot_> <octachron> First, you should try to add `\n` of `%!` to the printed string.
[19:51:04] <d_bot_> <octachron> Otherwise, the stdout channel might not be flushed.
[19:51:59] <d_bot_> <minimario> oh i see
[19:52:05] <d_bot_> <minimario> when i manually "flush stdout" it works now
[19:52:06] <d_bot_> <minimario> 🙂
[20:06:31] *** Quits: bartholin (~bartholin@158.110.71.61) (Quit: Leaving)
[20:14:44] *** Joins: mro (~mro@2002:5cc3:a02b:0:e00a:d194:42e8:c058)
[20:19:07] *** Quits: mro (~mro@2002:5cc3:a02b:0:e00a:d194:42e8:c058) (Ping timeout: 256 seconds)
[20:21:25] *** Joins: zebrag (~chris@user/zebrag)
[20:28:02] *** Quits: dh` (~dholland@netbsd/developer/dholland) (Ping timeout: 240 seconds)
[20:32:16] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:41:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:43:27] <d_bot_> <quernd> I found my old etcd gRPC code, it still works. I'm going to clean it up and add it as an example to the repo
[20:44:18] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[20:54:08] <d_bot_> <ansiwen> Awesome, thanks a lot!
[20:55:46] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[20:56:12] <d_bot_> <quernd> It's very basic though, it's basically the example from this repo, without Envoy: https://github.com/blandinw/ocaml-grpc-envoy
[20:56:38] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:02:39] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[21:03:42] <d_bot_> <ansiwen> No worries, it will be at least be very helpful as a starting point
[21:06:52] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:07:02] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Ping timeout: 240 seconds)
[21:07:32] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[21:08:46] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[21:10:39] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:23:10] *** Quits: mbuf (~Shakthi@223.178.86.208) (Quit: Leaving)
[21:36:28] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[21:40:57] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Ping timeout: 240 seconds)
[21:49:17] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:51:34] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:06] *** Joins: mro (~mro@port-92-195-160-43.dynamic.as20676.net)
[22:14:32] *** Quits: mro (~mro@port-92-195-160-43.dynamic.as20676.net) (Ping timeout: 240 seconds)
[22:24:15] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:34:22] *** Joins: dh` (~dholland@static-96-237-178-170.bstnma.fios.verizon.net)
[22:34:40] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:47] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:56:06] *** Quits: chrisz (vbds0o7wps@d5365df2.access.ecotel.net) (Ping timeout: 252 seconds)
[22:57:54] *** Joins: chrisz (ala2kkckq2@d5360fd8.access.ecotel.net)
[23:03:24] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[23:13:44] <d_bot_> <Alistair> Is there a `wasm_of_ocaml` - like `js_of_ocaml`?
[23:14:03] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[23:16:00] <d_bot_> <VPhantom> We're waiting for GC support in WASM itself for that to become possible.
[23:20:32] <d_bot_> <VPhantom> (See <https://github.com/sabine/ocaml-to-wasm-overview>. There's also the Go way, to write a new GC specifically for OCaml in WASM, but obviously that's even more work.)
[23:29:11] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 256 seconds)
[23:32:23] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:38:27] *** Quits: gravicappa (~gravicapp@145.255.0.191) (Ping timeout: 252 seconds)
[23:54:58] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[23:55:31] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
