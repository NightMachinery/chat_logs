[00:02:45] *** Joins: neither (~neither@139.179.217.215)
[00:06:03] <neither> hi how can I match against any type a package provides: there are `Pack::Age::Cls`, `Pack::Age::Cls::Int32`, `Pack::Age::Cls::Int64`, `Pack::Age::Cls::Float32` etc. I try to check if `$var` is of any of these types? i.e., does it come from `Pack::Age::Cls` family
[00:07:40] <neither> there is no inheritance relation going on by the way
[00:48:13] <moritz> give them a common marker role, like Pack::Age::Cls::Type, and then check against that role
[00:53:26] <neither> thanks but I don't control their code
[01:02:46] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:02:46] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:03:35] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[01:04:22] *** Joins: [Coke]_ (~coke@172.58.236.175)
[01:05:05] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[01:05:30] *** Quits: [Coke] (~coke@172.58.239.51) (Ping timeout: 272 seconds)
[01:33:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:34:01] *** vrurg_ is now known as vrurg
[01:46:43] <moritz> then any(type1, type2, type3, ...)
[01:46:52] <Geth> ¬¶ problem-solving/docs-website: 8b951c04cb | (Daniel Sockwell)++ | solutions/documentation/new-documentation-frontends.md
[01:46:54] <Geth> ¬¶ problem-solving/docs-website: Solution for Raku/doc/issues/1246
[01:46:56] <Geth> ¬¶ problem-solving/docs-website: 
[01:46:58] <Geth> ¬¶ problem-solving/docs-website: This PR proposes a solution to Raku/doc/issues/1246.  (I now realize
[01:47:00] <Geth> ¬¶ problem-solving/docs-website: that issue was in the doc repo rather than the problem-solving one and
[01:47:02] <Geth> ¬¶ problem-solving/docs-website: thus _technically_ I should open an issue in this repo and discuss the
[01:47:04] <Geth> ¬¶ problem-solving/docs-website: matter here before opening a PR.  Since that issue has been active for
[01:47:06] <Geth> ¬¶ problem-solving/docs-website: 5 years and has generated the a similar discussion as it would have as
[01:47:08] <Geth> ¬¶ problem-solving/docs-website: <‚Ä¶commit message has 12 more lines‚Ä¶>
[01:47:10] <Geth> ¬¶ problem-solving/docs-website: review: https://github.com/Raku/problem-solving/commit/8b951c04cb
[01:49:48] <Geth> ¬¶ problem-solving: codesections++ created pull request #320: Solution for Raku/doc/issues/1246
[01:49:48] <Geth> ¬¶ problem-solving: review: https://github.com/Raku/problem-solving/pull/320
[01:51:43] *** Quits: lichtkind (~lichtkind@p200300feb70872b4b5dcdb2cc3a00e17.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:57:48] <Geth> ¬¶ problem-solving/docs-website: 2147c097b0 | (Daniel Sockwell)++ | solutions/documentation/new-documentation-frontends.md
[01:57:48] <Geth> ¬¶ problem-solving/docs-website: fix typo
[01:57:48] <Geth> ¬¶ problem-solving/docs-website: review: https://github.com/Raku/problem-solving/commit/2147c097b0
[01:58:36] *** [Coke]_ is now known as [Coke]
[02:25:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:29:35] *** Joins: jgaz (~jgaz@2600:8805:d980:16e::9e0)
[02:37:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[02:57:56] *** Quits: aru (~aru@ip-86-49-27-241.net.upcbroadband.cz) (Quit: WeeChat 3.0)
[03:14:15] *** Joins: grondilu (~grondilu@91-164-198-91.subs.proxad.net)
[03:14:58] <grondilu> Isn't there such a thing as a parametrized module?  I've tried with a role but failed :
[03:15:05] <grondilu> m: role Foo[$foo] { sub talk is export { say "$foo" } }; import Foo["hi"]; talk
[03:15:06] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    talk used at line 1‚ê§‚ê§¬ª
[03:16:02] <grondilu> m: module Foo { sub talk is export { say "hi" } }; import Foo; talk
[03:16:02] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´hi‚ê§¬ª
[03:18:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:21:40] *** Quits: n1to (~n1to@user/n1to) (Ping timeout: 272 seconds)
[03:56:01] *** Quits: jgaz (~jgaz@2600:8805:d980:16e::9e0) (Quit: Leaving)
[04:09:12] *** Quits: neither (~neither@139.179.217.215) (Quit: Connection closed)
[04:10:22] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[04:35:35] *** Joins: tejr (~tejr@user/tejr)
[04:38:04] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:40:03] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[04:56:55] *** Joins: coleman (~coleman@2600:1700:13be:9240::40)
[05:24:15] <drakonis> ah, debian already offers rakudo 2022.03 on experimental
[05:26:13] <drakonis> 12 days
[05:26:17] <drakonis> not too bad
[05:39:36] *** Quits: grondilu (~grondilu@91-164-198-91.subs.proxad.net) (Quit: leaving)
[05:57:00] *** Quits: coleman (~coleman@2600:1700:13be:9240::40) (Ping timeout: 240 seconds)
[05:57:23] *** Joins: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net)
[06:28:47] *** Quits: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 260 seconds)
[07:23:26] *** Quits: Xliff (~XliffDroi@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[08:05:38] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[08:30:26] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[08:34:21] *** Joins: Sgeo (~Sgeo@user/sgeo)
[08:53:54] *** Joins: zacts (~zacts@user/zacts)
[09:04:38] <drakonis> i'm actually impressed that raku shows up on every rosetta code page
[09:16:19] *** Joins: p6steve__ (~stephenro@host81-141-53-40.range81-141.btcentralplus.com)
[09:18:35] *** Quits: p6steve (~stephenro@host81-141-53-40.range81-141.btcentralplus.com) (Ping timeout: 260 seconds)
[09:18:47] *** Quits: p6steve_ (~stephenro@host81-141-53-40.range81-141.btcentralplus.com) (Ping timeout: 246 seconds)
[09:20:53] *** Joins: p6steve (~stephenro@host81-141-53-40.range81-141.btcentralplus.com)
[09:27:02] <Voldenet> it's not that surprising, rosetta code really is rich database
[09:27:03] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:47:01] *** Joins: frost (~frost@user/frost)
[10:38:20] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[10:39:02] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[11:09:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[12:09:41] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:09:41] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[12:09:41] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[12:09:41] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[12:09:41] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:09:41] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:09:41] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:09:41] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[12:09:41] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: coverable6 (~cov-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:09:41] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:09:41] *** Quits: releasable6 (~rel-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[12:09:41] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:10:02] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[12:10:04] *** Joins: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu)
[12:10:06] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[12:10:07] *** Joins: statisfiable6 (~sta-able@ns306169.ip-94-23-219.eu)
[12:10:19] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[12:10:22] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[12:10:27] *** Joins: releasable6 (~rel-able@ns306169.ip-94-23-219.eu)
[12:10:32] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[12:11:03] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[12:11:06] *** Joins: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu)
[12:11:30] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[12:11:30] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[12:11:54] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[12:12:30] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[12:12:34] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[12:12:48] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[12:12:49] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[12:27:32] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[12:37:26] *** Joins: n1to (~n1to@user/n1to)
[13:15:20] <moritz> Larry Wall supplied some of the initial raku examples, back when it was still called Perl 6
[13:37:26] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[13:37:26] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[13:37:43] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[13:39:40] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[13:55:57] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:07:10] *** Quits: bartolin (~christian@mail.aglaz.de) (Remote host closed the connection)
[14:07:44] *** Joins: bartolin (~christian@mail.aglaz.de)
[14:32:01] *** Joins: Xliff (~XliffDroi@pool-71-255-227-73.washdc.east.verizon.net)
[14:47:16] *** Joins: zacts (~zacts@user/zacts)
[15:18:30] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[15:24:25] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:22:48] *** Quits: sena_kun (~koto@94.142.239.45) (Remote host closed the connection)
[16:23:43] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 260 seconds)
[16:23:57] *** Joins: sena_kun (~koto@94.142.239.45)
[16:29:15] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[16:38:05] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[16:38:23] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:47:06] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Quit: WeeChat 2.8)
[17:03:49] *** Joins: frost (~frost@user/frost)
[17:04:42] *** Joins: lichtkind (~lichtkind@p200300feb70872be088deb9b570cd346.dip0.t-ipconnect.de)
[17:07:31] *** Joins: nebuchadnezzar (~dad@82-65-17-178.subs.proxad.net)
[17:41:58] *** Quits: sena_kun (~koto@94.142.239.45) (Remote host closed the connection)
[17:45:37] *** Joins: sena_kun (~koto@94.142.239.45)
[17:56:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:05:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[18:40:59] *** Joins: monkey_ (~user@190.104.116.153)
[18:54:11] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[19:01:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:02:23] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[19:13:09] *** Joins: neither (~neither@139.179.217.215)
[19:20:04] <Geth> ¬¶ doc: cc93b85cc5 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/filename-extensions.pod6
[19:20:04] <Geth> ¬¶ doc: correct the description of the table
[19:20:04] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/cc93b85cc5
[19:20:07] <linkable6> Link: https://docs.raku.org/language/filename-extensions
[19:34:38] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[19:45:37] *** Joins: jgaz (~jgaz@2600:8805:d980:16e::9e0)
[19:56:13] *** Joins: coleman (~coleman@2600:1700:13be:9240::40)
[20:32:48] *** Joins: hesh307 (~hesh307@pool-108-24-83-115.cmdnnj.fios.verizon.net)
[20:33:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[20:54:28] *** Quits: lichtkind (~lichtkind@p200300feb70872be088deb9b570cd346.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:54:54] *** Quits: sena_kun (~koto@94.142.239.45) (Remote host closed the connection)
[21:00:14] *** Joins: sena_kun (~koto@94.142.239.45)
[21:11:57] *** Quits: jgaz (~jgaz@2600:8805:d980:16e::9e0) (Quit: Leaving)
[21:14:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:36:14] *** Quits: p6steve (~stephenro@host81-141-53-40.range81-141.btcentralplus.com) (Ping timeout: 246 seconds)
[21:37:02] *** Quits: coleman (~coleman@2600:1700:13be:9240::40) (Ping timeout: 260 seconds)
[21:37:03] *** Quits: p6steve__ (~stephenro@host81-141-53-40.range81-141.btcentralplus.com) (Ping timeout: 260 seconds)
[21:37:25] *** Joins: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net)
[22:25:43] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[22:30:31] *** Joins: p6steve_ (~stephenro@host81-141-53-40.range81-141.btcentralplus.com)
[22:30:31] *** Joins: p6steve (~stephenro@host81-141-53-40.range81-141.btcentralplus.com)
[22:37:34] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:38:02] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:44:08] *** Joins: grondilu (~grondilu@91-164-198-91.subs.proxad.net)
[22:45:36] <grondilu> How do I compare blobs? &infix:<eq> seems to work but I thought blobs are not supposed to be cast into Str?
[22:47:05] <grondilu> also ~~ does not seem to work
[22:49:20] <grondilu> I guess I need to find an counterexample
[22:49:53] <moon-child> normalisation
[22:56:27] <grondilu> nevermind it seems that ~~ does work in the end.  I may have made a mistake when trying it.
[22:58:44] <grondilu> :w
[22:58:44] <lizmat> m: Blob.new(1,2,3) eq Blob.new(1,2,3)
[22:58:45] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "eq" in expression ".new(1,2,3) eq Blob.new(1,2,3)" in sink context (line 1)‚ê§¬ª
[22:58:50] <lizmat> m: say Blob.new(1,2,3) eq Blob.new(1,2,3)
[22:58:51] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´True‚ê§¬ª
[22:58:56] <lizmat> grondilu ^^
[22:59:04] <lizmat> m: say Blob.new(1,2,3) eq Blob.new(1,2,4)
[22:59:04] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´False‚ê§¬ª
[23:00:26] <grondilu> so using eq is safe even though Blob.Str raises an error?
[23:00:44] <grondilu> m: Blob.new(1,2).Str
[23:00:45] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´Stringification of a Blob is not done with 'Str'.  The 'decode' method‚ê§should be used to convert a Blob to a Str.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[23:01:27] <grondilu> notice that I don't mind, it's just a bit confusing considering the doc for eq says it stringifies.
[23:02:34] <grondilu> https://docs.raku.org/routine/eq :  "Coerces both arguments to Str (if necessary); returns True if both are equal."
[23:03:00] <grondilu> I suppose with Blob it's a case when coercion is precisely not necessary.
[23:03:32] <grondilu> makes sense, my bad.
[23:05:12] <lizmat> yeah.. it feels a bit counterintuitive at first
[23:05:35] <lizmat> I guess you could also see a blob as a giant Int... in which case == would make more sense
[23:05:41] <lizmat> however, that already had a meaning
[23:05:49] <lizmat> m: say Blob.new(1,2,3) == Blob.new(1,2,4)
[23:05:49] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´True‚ê§¬ª
[23:05:56] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:05:58] <lizmat> that just compares number of elements
[23:17:24] *** Quits: hesh307 (~hesh307@pool-108-24-83-115.cmdnnj.fios.verizon.net) (Ping timeout: 272 seconds)
[23:20:16] <grondilu> I'm fine with that semantic for ==.  A blob is more akin to a Str than to an Int anyway.
[23:20:22] <grondilu> IMHO
[23:21:09] <lizmat> thing was that when the discussion was there about how to compare blobs, == already had the meaning of counting number of elements
[23:21:31] <lizmat> so I guess one chose the easy way out there
[23:39:07] *** Quits: sena_kun (~koto@94.142.239.45) (Quit: Leaving)
[23:39:26] *** Quits: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[23:48:51] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[23:50:59] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:53:26] <Xliff> m: say Blob.new(1,2,3) eqv Blob.new(1,2,3)
[23:53:26] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´True‚ê§¬ª
[23:54:14] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) }; }; a x 10,000,000; say now - INIT now 
[23:54:15] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected closing bracket‚ê§at <tmp>:1‚ê§------> 3 Blob.new(1,2,3) eqv Blob.new(1,2,3) }; 7‚èè5}; a x 10,000,000; say now - INIT now‚ê§¬ª
[23:54:24] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) };  a x 10,000,000; say now - INIT now 
[23:54:25] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´5===SORRY!5===‚ê§Undeclared routine:‚ê§    x used at line 1‚ê§‚ê§Other potential difficulties:‚ê§    Leading 0 has no meaning. If you meant to create an octal number, use '0o' prefix; like, '0o00'. If you meant to create a string, please add quota‚Ä¶¬ª
[23:54:46] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) };  a for ^10,000,000; say now - INIT now 
[23:54:46] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´Potential difficulties:‚ê§    Leading 0 has no meaning. If you meant to create an octal number, use '0o' prefix; like, '0o00'. If you meant to create a string, please add quotation marks.‚ê§    at <tmp>:1‚ê§    ------> 033) eqv Blob.new(1,2,3) };  a ‚Ä¶¬ª
[23:54:57] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) };  a for ^10000000; say now - INIT now 
[23:55:15] <Xliff> Hmmm... maybe too much?
[23:55:19] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´(timeout)¬ª
[23:55:30] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) };  a for ^100000; say now - INIT now 
[23:55:31] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´0.346323012‚ê§¬ª
[23:55:41] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eqv Blob.new(1,2,3) };  a for ^1000000; say now - INIT now 
[23:55:45] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´3.055390325‚ê§¬ª
[23:56:00] *** Joins: sena_kun (~koto@94.142.239.45)
[23:56:02] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) == Blob.new(1,2,3) };  a for ^1000000; say now - INIT now 
[23:56:05] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´2.835100357‚ê§¬ª
[23:56:12] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) eq Blob.new(1,2,3) };  a for ^1000000; say now - INIT now 
[23:56:15] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´3.007381087‚ê§¬ª
[23:56:26] <Xliff> So looks like '==' performs the best.
[23:57:10] <Xliff> m: sub a  { my $a =  Blob.new(1,2,3) == Blob.new(1,4,3) };  a for ^1000000; say now - INIT now 
[23:57:13] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´2.821660389‚ê§¬ª
[23:59:41] <lizmat> Xliff:  == on Blobs just checks # elements
