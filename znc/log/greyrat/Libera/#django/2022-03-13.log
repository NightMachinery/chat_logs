[00:07:34] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[00:17:00] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[00:17:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:17:02] *** ChanServ sets mode: +v EvilDMP
[00:18:02] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:21:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:23:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:27:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[00:32:51] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[00:33:27] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:48:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:48:09] *** ChanServ sets mode: +v EvilDMP
[02:07:46] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[02:11:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:15:46] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[02:23:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:28:27] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[02:38:12] *** Quits: b-rex (van@down.by.the.river.lol) (Ping timeout: 240 seconds)
[02:40:42] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 252 seconds)
[02:41:44] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[02:41:45] *** Joins: dalley (~dalley@2605:a601:a61a:c700:7e5b:46bd:b2a4:30c6)
[02:42:27] <dalley> what's the easiest way to get the raw value of a particular column, that is, without going through "from_db_value()"
[02:46:12] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 240 seconds)
[02:55:17] <wez> dalley: SELECT column FROM table;
[03:15:33] *** rdrg109_ is now known as rdrg109
[03:19:12] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[03:31:24] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:32:20] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:39:07] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:35:10] *** Joins: bambanxx (~bambanx@190.5.46.132)
[04:41:34] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0dff-237e-1d92-8de5.res6.spectrum.com)
[04:50:34] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:53:25] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[04:55:05] *** Joins: Atque (~Atque@user/atque)
[04:55:18] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:04:17] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 240 seconds)
[05:23:17] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[05:31:28] <dre> dalley, Foo.objects.filter(bar=True).values_list('baz', flat=True)
[05:31:37] <dre> or
[05:31:48] <dre> dalley, Foo.objects.filter(bar=True).values_list('baz', 'bazinga')
[05:31:53] <dalley> that skips all of the processing on the model field type?
[05:32:15] <dre> oh, no idea, sounds wild
[05:38:30] <dre> I'm actually really enjoying this read: https://spookylukey.github.io/django-views-the-right-way/index.html
[05:38:40] <dre> blasting my ass
[05:40:05] *** Joins: audiobirb (~audio@user/audio)
[05:43:59] *** Joins: yanchai (~yanchai@115.147.34.99)
[05:58:19] <jim> dalley, well (I guess) you'd be accessing the database directly (without django "in your way"
[05:58:19] *** Quits: bambanxx (~bambanx@190.5.46.132) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:00:08] <jim> do you want this in django (so inside a something.py file)?
[06:02:06] *** Quits: schinckel (uid38120@user/schinckel) (Quit: Connection closed for inactivity)
[06:03:05] <jim> if you want it inside django, you could start by importing the model, then doing (modelname).objects.all()
[06:04:10] <jim> maybe you could get each row, then get the thing in the row you want, and once you have that, append it to an initially empty list
[06:09:50] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 250 seconds)
[06:17:04] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:17:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:17:24] *** Joins: thiras (~thiras@user/thiras)
[06:21:23] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[06:22:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:25:00] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:37:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:37:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:38:14] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[06:43:27] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[07:07:29] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0dff-237e-1d92-8de5.res6.spectrum.com) (Quit: Client closed)
[07:12:42] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:16:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:22:36] *** Quits: ahadi (~ahadi@246-42-142-46.pool.kielnet.net) (Ping timeout: 240 seconds)
[07:25:35] *** Quits: dre (~dre@2001:8003:c932:c301:5689:c0f3:d693:ff24) (Ping timeout: 252 seconds)
[07:25:41] <yanchai> hi
[07:25:54] <jim> hi
[07:26:15] <yanchai> how do we get the result of a function from a different file in views?
[07:26:33] <yanchai> example i have a function somewhere in the helps.py
[07:26:55] <dodo> yanchai: you just call it
[07:27:24] *** Joins: ahadi (~ahadi@175-40-142-46.pool.kielnet.net)
[07:28:17] <jim> the result ofwhich file are you in when you want the result?
[07:28:40] <yanchai> well lets say that function gives 2 results a context dict and a response, in my views when i call that function and check if it has a context or a response redirect
[07:28:52] <jim> oops runon weird stuff
[07:29:00] <yanchai> yeah
[07:29:11] <yanchai> its like i use this function pass request as parameter
[07:29:25] <yanchai> and then inside that function will validate something about the request
[07:29:48] <yanchai> if it turns false it will render the template
[07:30:05] <yanchai> if it turns true it will redirect to another pag
[07:30:07] <yanchai> if it turns true it will redirect to another page
[07:30:19] <jim> ok
[07:30:57] <yanchai> so my views looks like this https://dpaste.org/yzo9
[07:31:00] <jim> I'd say you want to import it first?
[07:31:03] <yanchai> if false it renders the template
[07:31:13] <yanchai> but if true it returns an error
[07:32:48] <yanchai> wait let me double check it first
[07:32:56] <jim> if checklist(request) returns an empty (sometething), that's an error?
[07:33:30] <yanchai> nope something with cannot render httpresponse
[07:33:33] <jim> checklist() returns a list?
[07:33:43] <yanchai> let me double check it first
[07:34:45] <jim> ok, let's see,,, howbout:
[07:35:07] <jim> def create_declaration(request):
[07:35:52] <jim>     the_checklist = checklist(request)
[07:37:24] <jim> repr_str = repr(the_checklist)
[07:37:29] <jim> whoops
[07:37:37] <jim>     repr_str = repr(the_checklist)
[07:37:51] *** Quits: sreve_ (~quassel@p4ff443b7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:38:13] <jim> return HttpResponse(repr_str)
[07:38:19] <jim> oops again
[07:38:20] *** Joins: sreve (~quassel@p54a71a79.dip0.t-ipconnect.de)
[07:38:25] <jim>     return HttpResponse(repr_str)
[07:38:41] <jim> and you need:
[07:39:01] <jim> from django.http import HttpResponse
[07:39:12] <jim> try that
[07:39:16] <jim> see what you get
[07:39:24] <yanchai> ok here is the error context must be a dict rather than HttpResponseRedirect.
[07:39:51] <yanchai> because inside my checklist() function if it is true it will redirect but it is inside of it
[07:39:59] <yanchai> let me recode and see what i can do
[07:43:00] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Ping timeout: 272 seconds)
[07:43:31] <yanchai> yep thats the error context must be a dict rather than HttpResponseRedirect.
[07:43:41] <jim> yanchaicould you try mine (a debug tool) and show whatyou get?
[07:44:09] <yanchai> oh ok
[07:44:12] <yanchai> let me try
[07:45:12] <jim> you probably get a object
[07:45:18] <yanchai> is it inside the function checklist() file? or my views?
[07:46:09] <yanchai> ok got it
[07:46:43] <jim> show the thing it returned
[07:48:40] <jim> do you understand contexts?
[07:50:31] <yanchai> context must be a dict rather than bool.
[07:51:13] <yanchai> in my checklist() function if validation is true i return True
[07:51:26] <jim> yes, the dict has things you want to make available to the template, and you name each thing
[07:51:54] <jim> so it returns a bool?
[07:52:11] <yanchai> check this out
[07:52:13] <yanchai> https://dpaste.org/hqJD
[07:52:57] <yanchai> the purpose of doing this so i can reuse it with the other types of user
[07:53:08] *** Quits: rob4226 (~Thunderbi@154.6.25.49) (Quit: rob4226)
[07:53:29] <yanchai> rather than repeating the same login in vies of different user type
[07:53:34] *** Joins: rob4226 (~Thunderbi@154.6.25.49)
[07:54:44] <jim> what you're doing with a context, is putting a set of variables that you want to make available to the template
[07:54:59] <yanchai> yes if it is a get request
[07:55:16] <yanchai> and if it is a post it will check the data and validate if it us true it should redirect
[07:55:29] <jim> the key of the dict is a variable name, the value is what you want to have for that variable in the template
[07:56:00] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[07:56:03] <yanchai> if it is a get request it works
[07:56:19] <yanchai> but if it is a post it saves the data into the database but doesnt redirect
[07:56:31] <jim> make sure the function works (make sure it always returns True or False)
[07:56:45] <yanchai> it is working actually
[07:56:56] <yanchai> its just i am missing something that it doesnt redirect
[07:57:16] <yanchai> if i put the redirect inside the checklist() it shows the error earlier
[07:57:28] <jim> I think it's not always returning the bool
[07:57:59] <yanchai> before i moved my code to a function checklist it was working in my views
[07:58:05] <jim> so, you got if requ3est.method = 'POST'
[07:58:11] <yanchai> but that would be repeatative
[07:58:23] <yanchai> i mean redundant
[07:58:36] <yanchai> so i decided to create a function that will be used for all user types
[07:58:45] <jim> I didn't suggest anything yet :)
[07:59:04] <yanchai> oh ok hahaha i was just elaborating my idea hehehe
[07:59:31] <jim> but one thing I will suggest...
[07:59:56] <yanchai> ok
[08:00:03] <jim> have a variable result you define at the top of the function, to have a default value
[08:00:32] <jim> then at the very bottom (last line) of the function, return result
[08:00:39] <jim> then,
[08:00:47] <jim> where you return True
[08:01:10] <jim> instead of return True, do result = True
[08:01:21] <yanchai> ok let me try
[08:01:34] <jim> it's a little better design
[08:02:03] <jim> your function will -always- return a bool
[08:02:07] <yanchai> my initial variable should look like this result = [] or result = ""
[08:02:43] <jim> can it return those things?
[08:04:23] <yanchai> and we are back context must be a dict rather than HttpResponseRedirect.
[08:04:48] <yanchai> wait let me recode my views
[08:05:02] <jim> yeah, you need to have a better design on your function
[08:05:26] <jim> what -exactly- do you want to return from checklist?
[08:05:47] <yanchai> 2 types
[08:05:48] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 272 seconds)
[08:05:59] <yanchai> if it is a get it should return a dictionary which is the context
[08:06:14] <jim> (I think you can do what you want, but it will take some work, and some making sure things are right)
[08:06:16] <yanchai> if it is post it should return a redirect
[08:06:55] <yanchai> btw my function checklist() works in get request
[08:07:02] <yanchai> and in post it works if the form is invalid
[08:07:02] <jim> well, that's going to need some thought
[08:07:27] <yanchai> but if is valid it stores data but the returns that error
[08:07:55] <yanchai> oh dear my english sucks due to typho sorry
[08:08:18] <jim> ok, so we need to separate these different kinds of things it returns
[08:08:56] <yanchai> ok meaning the post and get request will be a separate 2 functions instead?
[08:09:59] <jim> if your function tests for whether the form is valid, you will need to return the bool. if you want, you can return other things, and, you need to separate them out so it's clear what all you're returning
[08:10:26] <jim> no,
[08:10:47] <yanchai> hmm
[08:10:49] <yanchai> ok
[08:10:58] <jim> meaning that when the function returns, the value it returns, the caller can tell which thing is which
[08:11:28] <jim> and you can easily do that, it jsut has to be clear
[08:11:35] <jim> just
[08:12:50] <jim> look at this...
[08:13:28] <jim> def color_size(request):
[08:13:43] <yanchai> ok
[08:13:59] <jim>     color = black
[08:14:14] <jim>     size = small
[08:15:29] <jim>     if request.method = 'POST':
[08:15:54] <jim> (got it wrong)
[08:16:07] <jim>     if request.method == 'POST':
[08:16:51] <jim>         form = MyForm(request.POST)
[08:17:37] <jim> hold on, I'll write the whole thing first, then show it to you
[08:18:06] <yanchai> ok thanks jim
[08:18:43] <yanchai> hey jun
[08:18:48] <yanchai> hey jim i got it
[08:19:06] <jim> you did?!
[08:19:15] <yanchai> your idea of initial variable was correct
[08:19:46] <jim> well let me still show you another example
[08:19:53] <yanchai> ok thanks
[08:26:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:30:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[08:33:53] *** Joins: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba)
[08:41:15] <jim> ok, I have something you might be able to understand
[08:41:29] <yanchai> ok jim
[08:42:27] <jim> https://termbin.com/ii71
[08:43:52] <jim> in this (fake, never used, not debugged, but at least commented :) function, when it returns, it will ALWAYS be a list, and the first thing in the list will ALWAYS be a bool that tells you if the form validated
[08:44:48] <jim> the other things it returns, are ALWAYS in the SAME position in the list (no matter which if or else or whatever)
[08:45:36] <jim> a list is a pretty nice way to output multiple values, but so is a dict
[08:46:17] <yanchai> ok jim thanks
[08:46:20] <jim> in addition, you can have a position in the list for a context dict
[08:46:27] <yanchai> btw when do we use list dict and tuple?
[08:46:58] <jim> a list, you can add to and take away from
[08:47:05] <jim> a tuple, you cannot
[08:47:31] <jim> once you make a tuple, if you want a different one, you have to make a new one and replace the old
[08:47:50] <yanchai> and a dict?
[08:48:25] <jim> well when you want many things, but you want to give each thing names
[08:48:41] <jim> also
[08:48:57] <jim> some funcs want dicts, or lists or tuples
[08:49:20] <jim> for those, you gotta give it what it wants
[08:49:20] <yanchai> oh ok
[08:49:33] <yanchai> so its a python thing not a django thing right?
[08:50:10] <jim> sometimes yes, sometimes it is in django, something in there wants something specific
[08:51:15] <jim> but especially,
[08:51:51] <jim> do you see how the return value of the example I wrote, has the things always in the same place?
[08:52:56] <jim> you're -guaranteed- that the first thing in the returned list is a bool (True, or False)
[08:53:14] <jim> and it tells you if the form was valid
[08:53:59] <jim> this makes the function easier to use (it might need some more comments)
[08:54:00] <yanchai> yeah its more cleaner thanks jim
[08:54:53] <yanchai> yeah
[08:54:56] <yanchai> thanks jim
[08:55:18] <yanchai> btw jim
[08:55:33] <yanchai> response = HttpResponseRedirect( (go wherever here) )
[08:55:59] <yanchai> should i put the url there? like response = HttpResponseRedirect('user:dashboard'))
[08:56:02] <yanchai> ?
[08:56:18] <jim> I think that's where to go if the form validates
[08:56:39] <yanchai> oh k
[08:56:43] <yanchai> thanks jim
[08:58:09] <jim> you still have the list that gets returned, and they still have the same positions... sometimes the response won't have anything in it (except for a False) if the form did not validate
[08:58:22] <jim> but there's still a specific place for it
[09:00:03] <jim> and, maybe "where to go if the form validates" is a -constant- place
[09:10:47] <jim> yanchai, this was a small thing on how to design functions
[09:11:01] <jim> it's not everything
[09:12:13] *** Quits: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba) (Ping timeout: 240 seconds)
[09:13:13] *** Joins: shangxiao (~davids@101.165.217.11)
[09:13:45] <yanchai> ok jim thanks i really appreciate it
[09:14:02] <yanchai> not with this function my life is easier hehehe
[09:14:17] <yanchai> coz i dont need to rewrite everthing in my other modules
[09:14:20] <yanchai> :)
[09:15:26] <jim> yeah, amount of extra effort is important... maybe you make a different choice based on that
[09:18:36] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:30:36] *** Joins: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl)
[09:43:40] <jim> yanchai, one thing, examine the function closely, and make sure that the value for the result list is formed correctly no matter what if or else runs
[09:48:18] <jim> because you want the 'return result' at the end to run properly no matter what happens inside
[09:50:12] *** Joins: audiobirb (~audio@user/audio)
[09:55:17] *** Joins: dre (~dre@2001:8003:c932:c301:efa8:3ab4:6d9d:737a)
[10:08:36] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[10:09:37] <yanchai> jim: noted mate thanks
[10:13:22] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 250 seconds)
[10:29:16] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[10:38:37] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[10:38:57] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[10:53:43] <shangxiao> anyone know of a way to do date ranges in forms?
[10:53:54] <shangxiao> i mean with a single field
[10:57:34] <shangxiao> actually django filters has a date range field… nice
[10:58:15] <jim> a conventional technique suggests, do all date arithmetic using the database
[10:58:42] <jim> I dunno how to implement that in django though
[11:00:26] <jim> can you give an example of a date range you would use?
[11:01:53] <shangxiao> this is for a form that isn't a model form or interacting with the db though
[11:02:11] <shangxiao> django filters field does the job nicely :)
[11:04:38] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[11:07:28] <shangxiao> oh there's also the contrib.postgres.forms.DateRangeField
[11:07:57] <shangxiao> I could probably just use that and extract the range from teh psycopg2 range type
[11:10:26] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[11:20:50] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[11:22:43] <jim> postgres has great date operators and functions
[11:25:37] <jim> yanchai, sometimes someone writing functions in C would return a pointer to an object, if the function succeeded, or 0/"null pointer" if it failed... but you have python, and so you have a lot more possibility for returning what you want
[11:43:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:43:11] *** ChanServ sets mode: +v EvilDMP
[11:43:46] <yanchai> jim: oh i see thanks jim
[11:45:34] <yanchai> is data tables a good practice?
[11:45:49] <yanchai> or just pagination?
[11:55:37] <jim> I don't understand the question
[11:56:23] <jim> you're thinking of using "data tables", what I don't understand, is for what?
[11:57:09] *** Quits: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[12:02:25] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[12:03:59] <jim> hi GinFuyou
[12:04:48] <GinFuyou> Hello
[12:15:18] <jim> I'm still trying to figure out why my subclass of django.contrib.auth.forms.UserCreationForm doesn't work... my guess is I'm creating both the subclass itself, and the email field, incorrectly, and it needs some more validation code in order to let the rest of its validation happen
[12:45:08] *** Joins: blackout69 (~blackout6@37.183.230.121)
[12:56:38] <GinFuyou> Sorry, can't help today, I have competition later, probably won't be back till nigth
[13:02:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:24] <jim> GinFuyou, ok, good luck on your competition (in what area are you competing?)
[13:09:04] <GinFuyou> spochan (kind of sport fencing)
[13:09:40] <jim> damn... don't get hit :)
[13:10:00] <GinFuyou> Thanks, gl to you figuring out forms too
[13:10:20] <jim> thanks, I think I'm gonna need it
[13:24:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:24:58] *** ChanServ sets mode: +v EvilDMP
[13:25:22] *** Joins: thiras (~thiras@user/thiras)
[13:25:50] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[13:43:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:49] *** Joins: slav0nic (slav0nic@python.su)
[14:14:48] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[14:22:12] *** Joins: Fifan (~Fifan@188.243.183.56)
[14:31:12] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 250 seconds)
[14:32:07] *** Joins: cyphase (~cyphase@user/cyphase)
[14:37:38] <yanchai> guys the user model is for authentication only right?
[14:37:46] <yanchai> i mean for best practice?
[14:42:41] <jim> well for example the admin module uses that model to show a list of users
[14:43:32] <jim> from there, you can ban the poor guy...or elevate him to superuser status
[14:45:37] <wez> yup
[14:46:04] *** Joins: blackout69 (~blackout6@37.183.198.248)
[14:47:06] <wez> jim: Is this your website? https://jimmybrings.com.au
[14:59:29] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[15:08:49] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[15:28:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:28:17] *** ChanServ sets mode: +v EvilDMP
[15:28:26] <yanchai> is there a way to make the select drop down into a simple text?
[15:29:30] <yanchai> from this https://prnt.sc/JicfxAxzQLu7
[15:30:05] <yanchai> to this https://prnt.sc/YoTXOp4ybal3
[15:30:12] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[15:33:11] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:33:59] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:34:04] *** Joins: delizin (~delizin@206.85.224.158)
[15:35:00] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:35:27] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:36:39] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:37:04] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:37:25] *** Quits: delizin (~delizin@206.85.224.158) (Quit: Client closed)
[15:38:11] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:40:35] *** Joins: delizin (~delizin@206.85.224.158)
[15:41:33] *** Quits: delizin (~delizin@206.85.224.158) (Client Quit)
[15:51:56] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 272 seconds)
[16:13:54] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 250 seconds)
[16:19:17] *** Joins: shangxiao (~davids@101.165.217.11)
[16:20:05] *** farn_ is now known as farn
[16:20:19] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[16:21:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:21:49] *** Joins: yanchai (~yanchai@115.147.34.99)
[16:23:00] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[16:25:33] *** Joins: mxp (~mxp@185.16.205.131)
[16:29:04] *** Quits: Stench (~Staunch@134.238.169.107) (Ping timeout: 250 seconds)
[16:34:42] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 250 seconds)
[16:43:51] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 252 seconds)
[16:46:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:47:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:47:08] *** ChanServ sets mode: +v EvilDMP
[16:49:14] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[16:50:45] *** Joins: Fifan (~Fifan@188.243.183.56)
[16:52:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:52:02] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 250 seconds)
[16:53:35] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[16:53:41] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:54:12] *** Joins: shangxiao (~davids@101.165.217.11)
[17:26:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:32:57] *** Joins: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl)
[17:36:57] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 240 seconds)
[17:37:42] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 272 seconds)
[17:38:24] *** Joins: Fifan (~Fifan@188.243.183.56)
[17:44:04] *** Joins: shangxiao (~davids@101.165.217.11)
[17:48:22] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 250 seconds)
[17:49:50] *** Joins: shangxiao (~davids@101.165.217.11)
[17:54:07] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[17:54:12] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 240 seconds)
[17:59:15] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:00:30] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:24:15] *** Joins: shangxiao (~davids@101.165.217.11)
[18:28:54] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 252 seconds)
[18:37:22] *** Joins: bambanxx (~bambanx@190.5.46.132)
[18:44:48] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:49:03] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[18:49:19] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[18:49:34] *** Joins: Atque (~Atque@user/atque)
[18:50:16] *** Quits: bambanxx (~bambanx@190.5.46.132) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:52:56] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 250 seconds)
[18:57:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:57:07] *** ChanServ sets mode: +v EvilDMP
[19:04:09] *** Joins: bambanxx (~bambanx@190.5.46.132)
[19:05:51] *** Quits: bambanxx (~bambanx@190.5.46.132) (Client Quit)
[19:11:07] *** Joins: bambanxx (~bambanx@190.5.46.132)
[19:12:47] *** Quits: bambanxx (~bambanx@190.5.46.132) (Client Quit)
[19:14:16] *** _janus- is now known as _janus
[19:20:20] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[19:21:42] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.a189.priv.bahnhof.se)
[19:46:51] *** Joins: Saknussemm (~Saknussem@151.60.26.20)
[19:54:25] *** Quits: Saknussemm (~Saknussem@151.60.26.20) (Quit: Leaving)
[20:12:42] *** Joins: magnumCool (~phil@133.red-185-104-166.telecablesantapola.es)
[20:26:08] *** Parts: magnumCool (~phil@133.red-185-104-166.telecablesantapola.es) ()
[20:44:57] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[20:50:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:57:54] *** Joins: dkliban_ (~dkliban@75.190.90.130)
[20:59:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:01:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:04:36] *** Quits: dkliban_ (~dkliban@75.190.90.130) (Ping timeout: 240 seconds)
[21:22:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:24:09] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[21:28:51] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[21:40:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[21:41:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[22:06:36] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[22:08:13] *** Joins: Fifan (~Fifan@188.243.183.56)
[22:08:43] *** Joins: cyphase (~cyphase@user/cyphase)
[22:15:24] *** Quits: Fifan (~Fifan@188.243.183.56) (Quit: Leaving)
[22:25:52] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[22:32:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:36:17] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[22:39:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[22:49:51] *** Joins: en7ropy (~en7ropy@172.241.167.37)
[22:50:18] *** Quits: en7ropy (~en7ropy@172.241.167.37) (Remote host closed the connection)
[22:51:31] *** Joins: en7ropy (~en7ropy@172.241.167.37)
[22:52:34] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[22:53:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:53:40] *** ChanServ sets mode: +v EvilDMP
[22:53:41] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[22:54:21] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[23:25:06] *** Joins: Throgkt (~Throgkt@user/throgkt)
[23:54:12] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:54:29] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:59:59] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
