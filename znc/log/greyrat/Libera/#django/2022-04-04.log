[00:20:20] *** Quits: dodo (~dodo@user/dodo) (Quit: dodo)
[00:21:19] *** Joins: dodo (~dodo@user/dodo)
[00:24:47] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[00:31:55] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[00:36:58] *** Quits: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net) (Quit: Client closed)
[00:39:15] *** Joins: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net)
[00:39:18] *** Quits: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net) (Client Quit)
[00:39:44] *** Joins: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net)
[00:49:45] *** Quits: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net) (Quit: Client closed)
[00:50:50] *** Joins: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net)
[00:50:53] *** Quits: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net) (Client Quit)
[00:53:23] *** Quits: slav0nic (slav0nic@2a01:7e01::f03c:93ff:fe79:3aa) (Remote host closed the connection)
[00:53:28] *** Joins: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net)
[00:53:52] *** Joins: slav0nic (slav0nic@python.su)
[00:54:09] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[00:54:38] *** Joins: slav0nic (slav0nic@python.su)
[00:57:05] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:58:04] *** Joins: dudek (~dudek@185.150.236.127)
[01:19:04] *** Quits: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::) (Remote host closed the connection)
[01:21:04] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[01:21:25] *** Joins: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::)
[01:22:00] *** Joins: Caffiend (~Caffiend@112-65-237-24.gci.net)
[01:25:14] *** Quits: dor (~erg@188.147.35.199.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[01:32:03] *** Joins: kristijonas (~kristijon@m83-179-35-72.cust.tele2.lt)
[01:37:18] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[01:37:38] *** Joins: cebor (~cebor@user/cebor)
[01:38:35] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:47:39] *** Quits: kristijonas (~kristijon@m83-179-35-72.cust.tele2.lt) (Ping timeout: 256 seconds)
[01:48:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:49:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:54:14] *** Quits: Caffiend (~Caffiend@112-65-237-24.gci.net) (Quit: Client closed)
[01:54:21] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[01:54:59] *** Joins: cebor (~cebor@user/cebor)
[01:57:50] *** Joins: kristijonas (~kristijon@m83-179-35-72.cust.tele2.lt)
[01:59:11] *** Quits: GSOC725 (~GSOC725@wsip-70-184-219-219.om.om.cox.net) (Quit: Client closed)
[02:03:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:05:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:08:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:09:51] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[02:10:05] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:10:41] *** Joins: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it)
[02:15:07] *** Quits: kostkon (~kostkon@2a02:587:a109:dd41:ac91:bec1:90f5:5a68) (Read error: Connection reset by peer)
[02:15:27] *** Joins: kostkon (~kostkon@2a02:587:a109:dd41:ac91:bec1:90f5:5a68)
[02:34:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:35:12] *** Joins: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au)
[02:39:26] *** Quits: kristijonas (~kristijon@m83-179-35-72.cust.tele2.lt) (Ping timeout: 272 seconds)
[03:08:00] *** Quits: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:13:32] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[03:27:50] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[03:36:53] *** Quits: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it) (Quit: Leaving.)
[03:38:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:39:54] *** Joins: dez (uid92154@user/dez)
[03:40:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:55:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:56:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:59:57] *** Joins: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[04:03:02] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 272 seconds)
[04:08:09] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:08:50] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[04:09:59] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[04:12:32] *** Quits: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 260 seconds)
[04:14:54] *** Joins: tenzai (~yanchai@222.127.97.162)
[04:29:14] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 246 seconds)
[04:35:05] *** Joins: addi (~addi@node-1w7jr9st781t58crjbhqg89k1.ipv6.telus.net)
[04:39:39] *** Joins: Skyz (~Skyz@user/skyz)
[04:52:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:03:55] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[05:09:03] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 260 seconds)
[05:16:15] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[05:18:08] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:23:52] *** Quits: addi (~addi@node-1w7jr9st781t58crjbhqg89k1.ipv6.telus.net) (Quit: 0xC00010FF)
[05:24:21] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[05:31:39] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[05:33:54] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Client Quit)
[05:39:13] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:40:32] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[05:42:58] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Client Quit)
[05:58:31] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[06:10:35] <PaulWay[w]> Question: is there a difference between `os.getenv` and `os.environ.get`?  Which is preferred?
[06:13:53] *** Quits: audio (~audio@user/audio) (Ping timeout: 260 seconds)
[06:26:48] <FunkyBob> PaulWay[w]: there are subtle and annoying differences , iirc, if you start using threads and/or subprocess... and something is updating env
[06:28:19] <PaulWay[w]> OK.  That sounds like a relatively infrequent occurence to plan for.
[06:29:09] <FunkyBob> bit us, so I know about it :)
[06:29:32] <FunkyBob> therer are comments in t he docs about get/set env versus the dict... though from memory they're hardly conclusive
[06:30:57] <PaulWay[w]> I guess I expect this to work a bit like the way Perl's environment hash works: it looks like a hash but the code actually backs it onto the real `getenv` / `setenv` environment calls.
[06:49:51] <gutts> I have a string that is a multiline string of code (python code) - trying to feed it to JS for an object param value - how can I feed it so that it doesn't dump the straight code and escapes for json linebreaks? json_loads?
[06:52:40] <gutts> oh, es template literals
[06:59:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:08:42] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:09:57] <bparker> PaulWay[w]: you can specify a default value (or just let it return None) when using get(), so it doesn't throw a KeyError exception when it doesn't exist
[07:14:49] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[07:27:43] *** Joins: linuxkarl (~karl@c-69-245-3-48.hsd1.tn.comcast.net)
[07:28:08] <linuxkarl> hello from Nashville, TN everyone!
[07:29:26] *** Joins: schinckel (uid38120@user/schinckel)
[07:30:51] <linuxkarl> is everyone asleep! lol, lazy programmers!
[07:43:42] *** Quits: tenzai (~yanchai@222.127.97.162) (Ping timeout: 260 seconds)
[07:44:00] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:45:56] *** Joins: tenzai (~yanchai@222.127.97.162)
[07:58:53] *** Quits: sreve (~quassel@p54a7145f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:58:59] *** Joins: sreve_ (~quassel@p549d73f7.dip0.t-ipconnect.de)
[08:05:06] *** Quits: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::) (Ping timeout: 260 seconds)
[08:05:40] <sheepman[m]> linuxkarl: ironically I was working on a django app until about an hour ago lol
[08:23:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[08:26:52] <linuxkarl> i'm just getting back into django, i was really big into python when django was first being developed years ago, at the time i was working as a php developer and was dying to work with python instead, now that I dont have a job i can work on whatever i want, lol
[08:40:16] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:9d72:5a3d:d0:fe01)
[08:43:31] *** Quits: linuxkarl (~karl@c-69-245-3-48.hsd1.tn.comcast.net) (Read error: Connection reset by peer)
[08:59:04] <PaulWay[w]> bparker: you can also supply a default to `os.getenv()`.
[09:16:48] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:19:04] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:28:16] *** Joins: dor (~erg@188.147.35.236.nat.umts.dynamic.t-mobile.pl)
[09:32:32] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:32:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[09:37:27] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[09:37:53] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:39:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:39:59] *** Joins: pydev (~pydev3@2001:b07:5d28:551:6651:9d71:67ec:866f)
[09:48:51] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:49:18] *** Joins: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi)
[09:53:47] *** Quits: mattil (~mattil@dzypk8xb7ssjxvx7nhz-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[10:03:03] *** Quits: pydev (~pydev3@2001:b07:5d28:551:6651:9d71:67ec:866f) (Ping timeout: 260 seconds)
[10:04:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:07:13] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 260 seconds)
[10:09:51] *** Joins: xythercoder (~xythercod@2409:4062:2290:d111::1922:68a4)
[10:21:15] *** Quits: xythercoder (~xythercod@2409:4062:2290:d111::1922:68a4) (Ping timeout: 260 seconds)
[10:23:48] *** Joins: xythercoder (~xythercod@2401:4900:3e9a:2e0e::e34:c0b7)
[10:48:05] <serafeim> hey friends
[11:02:02] *** Joins: mrwick (~mrwick@user/mrwick)
[11:03:42] *** Quits: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au) (Ping timeout: 240 seconds)
[11:06:06] *** Joins: luigibu (~luigi@93.176.153.88)
[11:06:22] <xythercoder> serafeim: 👋
[11:09:27] *** Quits: blip25 (~blip2@blip2.net) (*.net *.split)
[11:09:27] *** Quits: drjp_ (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (*.net *.split)
[11:09:27] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[11:09:27] *** Quits: MapMan (mapman@user/mapman) (*.net *.split)
[11:09:27] *** Quits: adamchai1z (~adamj@51.15.34.126) (*.net *.split)
[11:09:27] *** Quits: urth (~urth@geertswei.nl) (*.net *.split)
[11:09:28] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[11:10:00] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[11:11:44] *** Joins: urth (~urth@geertswei.nl)
[11:13:11] *** Quits: felixx (felixx@django/moderator/felixx) (*.net *.split)
[11:13:11] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (*.net *.split)
[11:13:11] *** Quits: zkanda (~zkanda@box.makean.art) (*.net *.split)
[11:13:11] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[11:13:11] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (*.net *.split)
[11:13:11] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[11:13:11] *** Quits: moldy (~rene@user/moldy) (*.net *.split)
[11:13:11] *** Quits: fury__ (~fury@znc.codexterous.com) (*.net *.split)
[11:13:12] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[11:13:12] *** Quits: benjaoming (~benjaomin@37.139.19.237) (*.net *.split)
[11:13:12] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:13:19] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[11:13:24] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[11:13:29] *** Joins: debnet (sid330295@python/afpy/debnet)
[11:13:36] *** Joins: benjaoming (~benjaomin@37.139.19.237)
[11:13:53] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[11:13:56] *** Joins: zkanda (~zkanda@box.makean.art)
[11:14:00] *** Joins: fury_ (~fury@znc.codexterous.com)
[11:14:00] *** ChanServ sets mode: +v apollo13
[11:14:04] *** Quits: xythercoder (~xythercod@2401:4900:3e9a:2e0e::e34:c0b7) (Read error: Connection reset by peer)
[11:14:05] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:14:14] *** Joins: felixx (felixx@django/moderator/felixx)
[11:14:14] *** ChanServ sets mode: +v felixx
[11:14:15] *** Joins: deepy (deepy@user/deepy)
[11:14:46] *** Joins: koolazer (~koo@user/koolazer)
[11:14:55] *** Joins: adamchainz (~adamj@51.15.34.126)
[11:21:32] *** Joins: xythercoder (~xythercod@2401:4900:3e9a:2e0e::e34:c0b7)
[11:27:50] *** Joins: pepper (~pepper@user/pepper)
[11:53:38] *** Joins: iomari891 (~iomari891@197.210.77.153)
[11:57:26] *** Quits: xythercoder (~xythercod@2401:4900:3e9a:2e0e::e34:c0b7) (Quit: Quit)
[12:12:04] *** Joins: xythercoder (~xythecode@157.41.159.127)
[12:16:07] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[12:32:35] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[12:36:28] *** Quits: xythercoder (~xythecode@157.41.159.127) (Quit: Konversation terminated!)
[12:38:42] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[12:58:40] *** Joins: slav0nic (slav0nic@python.su)
[12:59:08] *** Joins: pydev (~pydev3@2001:b07:5d28:551:40b9:d444:1cb2:6f6)
[13:17:50] *** Joins: luigibu (~luigi@93.176.153.88)
[13:26:36] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:32:21] *** Quits: iomari891 (~iomari891@197.210.77.153) (Ping timeout: 256 seconds)
[13:34:51] *** Quits: az (az@user/azz) (Ping timeout: 256 seconds)
[14:01:13] *** Joins: xythercoder (~xythecode@157.41.159.127)
[14:02:53] *** Quits: tenzai (~yanchai@222.127.97.162) (Ping timeout: 260 seconds)
[14:22:08] *** Quits: pydev (~pydev3@2001:b07:5d28:551:40b9:d444:1cb2:6f6) (Ping timeout: 260 seconds)
[14:32:59] *** Quits: schinckel (uid38120@user/schinckel) (Quit: Connection closed for inactivity)
[14:36:04] *** Joins: pydev (~pydev3@2001:b07:5d28:551:de01:73b5:4cc9:4ae)
[14:49:06] *** Joins: arend (~arend@84-31-198-78.cable.dynamic.v4.ziggo.nl)
[14:49:14] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[14:49:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:51:17] <arend> Hi everyone. I have a question, I'm running into an issue with Django Rest Framework and CSRF. I tried everything what I could find, including changing Nginx config, turning of CSRF, adding CSRF exempt etc, but I keep getting the following error ""detail": "CSRF Failed: Referer checking failed - no Referer."" when testing the API using POstman. I do include a CSRF token which should be valid, but I keep getting this message when
[14:51:18] <arend> doing a POST request. Does anyone have a suggestion on how to fix it?
[14:53:55] <carlio> set a Referer HTTP header in your POSTMan request, I guess?
[14:54:25] <carlio> there might be a nicer config way to do it, I don't know
[14:55:09] <arend> I do have that, I have "Referrer: https://development.URL.com"
[14:55:14] <arend> in Postman
[14:55:31] <carlio> ok them I'm out of ideas sorry! I'm not that familiar with Postman or DRF
[14:55:40] <carlio> oh wait
[14:56:02] <carlio> "Referrer:" <-- that's spelled wrong, try "Referer:"
[14:56:24] <arend> Oh wow, thank you! I've been struggling with this for hours
[14:56:33] <arend> Now it does work haha
[14:56:42] <carlio> :)
[14:57:49] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[14:58:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:01:48] *** Quits: pydev (~pydev3@2001:b07:5d28:551:de01:73b5:4cc9:4ae) (Ping timeout: 260 seconds)
[15:17:53] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 248 seconds)
[15:23:41] *** Quits: arend (~arend@84-31-198-78.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[15:36:21] *** Joins: tenzai (~yanchai@49.145.168.191)
[15:53:11] *** Quits: cliluw (~cliluw@47.147.77.43) (Read error: Connection reset by peer)
[15:55:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[15:55:59] *** Quits: cliluw (~cliluw@47.147.77.43) (Remote host closed the connection)
[15:56:05] *** Joins: pydev (~pydev3@2001:b07:5d28:551:fb33:1e94:9e29:ace5)
[15:57:26] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:03:43] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 268 seconds)
[16:04:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[16:05:12] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:07:06] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:11:41] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 246 seconds)
[16:13:36] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:13:36] *** Quits: cliluw (~cliluw@47.147.77.43) (Remote host closed the connection)
[16:15:14] *** Joins: cliluw (~cliluw@47.147.77.43)
[16:18:44] *** Joins: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt)
[16:18:47] *** Quits: pydev (~pydev3@2001:b07:5d28:551:fb33:1e94:9e29:ace5) (Ping timeout: 260 seconds)
[16:19:45] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 248 seconds)
[16:23:29] *** Quits: xythercoder (~xythecode@157.41.159.127) (Quit: Konversation terminated!)
[16:24:03] *** Joins: thiras (~thiras@user/thiras)
[16:25:01] *** Quits: luigibu (~luigi@93.176.153.88) (Ping timeout: 240 seconds)
[16:30:23] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[16:30:39] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[16:35:23] <tenzai> hi guys
[16:35:43] <tenzai> how do we make sure that the record will be filtered only within that day?
[16:36:23] <wez> filter it with a date maximum
[16:36:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:37:02] <wez> also, you should ask the females and non-binaries too, one of them may know the answer.
[16:39:33] <tenzai> wez: if i filter the date created only that day like created == datetime.datetime.now()?
[16:41:28] <wez> no, use <
[16:41:36] <wez> not ==
[16:44:27] *** Quits: lucascastro (~lucascast@192-140-51-210.static.oncabo.net.br) (Ping timeout: 260 seconds)
[16:45:31] <tenzai> wez: wont that include yesterday?
[16:48:04] <wez> unless you tell it not you
[16:48:13] <wez> you can use a range
[16:50:25] <carlio> you'll find it easier with datetime.date.today() instead of datetime.datetime.now() because that'll strip away the hours/minutes/seconds for you. Then you can say `.exclude(created__gt=date.today(), created__lt=date.today())` probably (note, I haven't tested it but that's where I'd start!)
[16:50:51] *** Joins: Atque (~Atque@user/atque)
[17:03:35] *** Joins: luigibu (~luigi@93.176.151.71)
[17:05:32] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[17:07:31] *** Joins: pydev (~pydev3@2001:b07:5d28:551:d733:16e8:2bb9:9387)
[17:07:50] <tenzai> oh yeah i forgot about that
[17:07:51] <tenzai> hahaha
[17:08:18] <tenzai> so gte__datetime.date.today()?
[17:14:13] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:14:32] *** Joins: thiras (~thiras@user/thiras)
[17:16:38] *** Joins: soul-d (~uknown@user/soul-d)
[17:18:54] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:19:33] *** Joins: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br)
[17:29:08] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:30:08] *** Joins: Atque (~Atque@user/atque)
[17:36:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:38:01] *** Joins: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::)
[17:38:32] *** Joins: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it)
[17:38:57] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[17:39:10] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[17:42:09] *** Parts: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it) ()
[17:53:24] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[17:56:29] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[17:57:33] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:01:20] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:01:46] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:02:07] *** Quits: prodigius (~prodigius@75-163-158-175.clsp.qwest.net) (Quit: Leaving)
[18:02:21] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[18:02:33] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:04:02] *** Quits: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt) (Ping timeout: 246 seconds)
[18:04:33] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:05:00] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:05:25] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[18:05:32] *** Joins: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi)
[18:14:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:21:02] *** Quits: mattil (~mattil@dzypk8fqjggfzfh07zp-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:25:23] *** Quits: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br) (Ping timeout: 260 seconds)
[18:45:49] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[18:49:32] *** Joins: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br)
[18:49:51] <pydev> hello! does anyone use HTMX? I have seen there is a package for django, looks interesting. I think i should give it a try instead of SPA
[18:51:28] <tenzai> pydev: currently i am using htmx
[18:51:51] <tenzai> its cool because it has less code than jquery or react/vue
[18:52:20] <pydev> it is cool but i am thinking about that because i hate inline code like: https://htmx.org/examples/edit-row/
[18:52:27] <tenzai> and still you can use django forms
[18:52:45] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[18:53:08] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Ping timeout: 252 seconds)
[18:54:25] <tenzai> its cool actually but will depend on your taste and your preferred way of doing it.
[18:54:31] <tenzai> for me it works fine
[18:54:36] <pydev> i am testing the rest framework because i thought to create a SPA for a specific user control panel...but yes creating a SPA is more difficult, i need more time etc...
[18:54:47] <pydev> yes it will surelly work
[18:55:32] <tenzai> or you may use other js frameworks like vue or react
[18:55:58] <pydev> i was learning Svelte, it is a cool js framework
[18:56:08] <pydev> but working with HTMX seems easy and fast
[18:56:44] <pydev> idk
[19:05:05] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[19:05:06] <GinFuyou> wow 20 unused imports
[19:05:27] <GinFuyou> I need some kind of auto-cleaner for imports here
[19:09:02] <dodo> GinFuyou: check reorder-python-imports
[19:10:06] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:10:10] <GinFuyou> dodo, thanks, I've picked unimport for now
[19:13:08] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:20:00] *** Joins: pepper (~pepper@user/pepper)
[19:22:08] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:24:49] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 248 seconds)
[19:33:25] *** Joins: kostkon__ (~androirc@2a02:1388:408b:3a93:71e4:58c0:1414:121d)
[19:36:00] *** Quits: kostkon__ (~androirc@2a02:1388:408b:3a93:71e4:58c0:1414:121d) (Read error: Connection reset by peer)
[19:37:05] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 248 seconds)
[19:40:07] *** Joins: kostkon__ (~androirc@2.142.66.94.static.otenet.gr)
[19:40:38] *** Quits: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br) (Ping timeout: 246 seconds)
[19:42:21] *** kostkon__ is now known as kostkon_
[19:44:10] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:49:35] *** Joins: xkuru (~xkuru@user/xkuru)
[19:50:03] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:58:21] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[20:02:38] *** Joins: arondknight (~arondknig@2804:14d:5cd3:8c81:95d9:ffaa:7d04:df71)
[20:02:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:03:12] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[20:04:18] *** Quits: luigibu (~luigi@93.176.151.71) (Quit: WeeChat 3.5)
[20:06:00] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[20:07:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[20:09:46] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[20:11:29] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Remote host closed the connection)
[20:24:00] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[20:26:44] *** Joins: en7ropy (~en7ropy@185.187.243.161)
[20:27:34] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:33:57] *** Quits: pydev (~pydev3@2001:b07:5d28:551:d733:16e8:2bb9:9387) (Ping timeout: 256 seconds)
[20:44:50] *** Joins: Caffiend (~Caffiend@112-65-237-24.gci.net)
[20:52:19] *** Quits: arondknight (~arondknig@2804:14d:5cd3:8c81:95d9:ffaa:7d04:df71) (Quit: WeeChat 3.4.1)
[20:58:07] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:02:11] *** Quits: tenzai (~yanchai@49.145.168.191) (Ping timeout: 246 seconds)
[21:02:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[21:04:17] *** Joins: dez (uid92154@user/dez)
[21:06:18] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:24:00] <GinFuyou> ducky, I have a model Tag, that has FK to itself - parent. Given a queryset of tags, how can I better find how many children each tag has in this queryset? (meaning only children that are also in it)
[21:24:17] <GinFuyou> I guess I could use annotation here
[21:31:16] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:38:08] *** Joins: bambanxx (~bambanx@2800:150:106:137e:8fb:4720:7231:c7c5)
[21:39:24] *** Quits: Caffiend (~Caffiend@112-65-237-24.gci.net) (Ping timeout: 250 seconds)
[21:47:38] *** Joins: GSOC725 (~GSOC725@2600:8804:189:8800:1c7b:ea78:5999:5d56)
[21:49:32] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 260 seconds)
[21:55:05] *** Quits: GSOC725 (~GSOC725@2600:8804:189:8800:1c7b:ea78:5999:5d56) (Quit: Client closed)
[21:56:53] *** Joins: thiras (~thiras@user/thiras)
[22:09:06] *** Joins: kostkon_ (~androirc@athedsl-394286.home.otenet.gr)
[22:14:51] *** Joins: Caffiend (~Caffiend@112-65-237-24.gci.net)
[22:17:19] *** Parts: Caffiend (~Caffiend@112-65-237-24.gci.net) ()
[22:17:30] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:25:11] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[22:31:14] *** Joins: lucascastro (~lucascast@192-140-51-210.static.oncabo.net.br)
[22:32:01] <GinFuyou> qs.annotate(c=Count('children', filter=Q(children__pk__in=pks)))
[22:42:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:43:06] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[22:57:40] *** Quits: bambanxx (~bambanx@2800:150:106:137e:8fb:4720:7231:c7c5) (Quit: Textual IRC Client: www.textualapp.com)
[22:59:16] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:03:37] *** Quits: kostkon (~kostkon@2a02:587:a109:dd41:ac91:bec1:90f5:5a68) (Read error: Connection reset by peer)
[23:03:57] *** Joins: kostkon (~kostkon@2a02:587:a109:dd41:ac91:bec1:90f5:5a68)
[23:06:39] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:29:10] *** Joins: GSOC725 (~GSOC725@2600:8804:189:8800:49a4:762e:398b:b489)
[23:39:55] *** Quits: dor (~erg@188.147.35.236.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
