[00:03:36] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[00:04:49] *** Joins: dextaa2 (~dextaa@user/dextaa)
[00:05:00] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[00:06:01] *** Joins: arktnld (~arktnld@179.186.108.236)
[00:06:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[00:09:14] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:100f:556b:9085:4e1f) (Quit: Client closed)
[00:09:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:595d:ffb7:402f:76a0) (Quit: Quit)
[00:13:22] <Franciman> uhm
[00:13:34] <Franciman> if I can prove that (x^3 - y^2) is prime
[00:13:54] <Franciman> it surely is irreducible
[00:13:58] <Franciman> ah
[00:14:05] <Franciman> and C[x,y] is UFD, hence it is prime
[00:14:22] <Franciman> so given that C[x,y]/(x^3-y^2) is a domain, I have the degrees rule
[00:16:10] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 252 seconds)
[00:17:42] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[00:17:51] *** Joins: trbp (~trbp@user/trbp)
[00:18:15] <riv> this all seems very difficult, can it be automated on computer?
[00:19:45] <int-e> riv: well the normal form thing is basically what you'd get from the obvious one-element Gröbner basis
[00:20:01] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[00:20:05] <int-e> (with a monomial order that has y^2 > x^3)
[00:20:38] <int-e> I guess you can do something with that.
[00:23:52] *** Quits: arktnld (~arktnld@179.186.108.236) (Ping timeout: 252 seconds)
[00:23:56] *** Joins: crm (~crm@70.120.0.94)
[00:25:00] *** Joins: arktnld (~arktnld@177.205.39.242.dynamic.adsl.gvt.net.br)
[00:26:17] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 248 seconds)
[00:29:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:30:26] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[00:30:26] *** Joins: specing_ (~specing@user/specing)
[00:30:28] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 252 seconds)
[00:30:30] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:32:07] *** specing_ is now known as specing
[00:32:49] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Read error: Connection reset by peer)
[00:33:10] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[00:37:50] *** Quits: arktnld (~arktnld@177.205.39.242.dynamic.adsl.gvt.net.br) (Ping timeout: 250 seconds)
[00:40:18] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Quit: Stay safe!)
[00:40:43] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[00:43:16] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[00:45:32] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[00:46:30] <cherim> greenbagels: http://mathb.in/63346 is 2K(1-16t^2/E^2) / (E pi^2) where K is the complete elliptic integral (K(m) in terms of 1-m*sin^2(x), so m=k^2).
[00:48:26] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 244 seconds)
[00:48:37] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 252 seconds)
[00:49:01] <greenbagels> cherim: .......how do you see this stuff
[00:50:42] <cherim> Take the integral representation of delta(y) = 1/(2pi) int_{-inf}^{inf} e^{i y t} dt. Then you can perform integrations over x and y, each gives you Bessel J_0(2t)
[00:51:27] <cherim> Then you have a table integral  int_{-inf}^{inf} J_0(2t)^2 e^{it} dt
[00:52:03] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Ping timeout: 244 seconds)
[00:52:05] <cherim> With your E and t dragged in coefficients all around (my t above is just a variable)
[00:52:40] *** Joins: Kaylah (~Kaylah@ptr-eit6u3gpspvt6v7zo0k.18120a2.ip6.access.telenet.be)
[00:54:44] <cherim> But you can probably have it directly integrating first by x, then the remaining integral is K
[00:54:51] <cherim> So not an achievement at all
[00:57:33] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[01:00:38] *** Joins: Koen__ (~Koen@246.244.88.92.rev.sfr.net)
[01:02:23] *** Quits: roadt_ (~roadt@114.102.181.0) (Ping timeout: 244 seconds)
[01:02:58] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Ping timeout: 250 seconds)
[01:02:59] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd)
[01:06:52] *** Joins: ghen (~nobody@2601:649:100:8b0:a922:368a:9428:c1b8)
[01:08:39] *** Joins: arktnld (~arktnld@177.133.7.245.dynamic.adsl.gvt.net.br)
[01:14:21] *** Joins: kingjulian (~kingjulia@41.1.86.87)
[01:17:18] *** Joins: Ronnin (~Ronnin@2607:fb90:c235:8e60:36a9:50a:aed9:9e83)
[01:18:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:19:28] *** Quits: Koen__ (~Koen@246.244.88.92.rev.sfr.net) (Remote host closed the connection)
[01:19:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:21:07] *** Lord_of_Life_ is now known as Lord_of_Life
[01:21:19] *** Quits: trbp (~trbp@user/trbp) ()
[01:22:57] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:25:29] *** Quits: Ronnin (~Ronnin@2607:fb90:c235:8e60:36a9:50a:aed9:9e83) (Read error: Connection reset by peer)
[01:25:57] *** Joins: Ronnin (~Ronnin@172.241.26.83)
[01:26:32] *** Joins: Koen_ (~Koen@246.244.88.92.rev.sfr.net)
[01:26:32] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Client Quit)
[01:27:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:29:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:29:58] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89)
[01:30:10] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:30:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:37:21] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[01:38:17] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[01:39:23] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:39:46] *** Quits: kingjulian (~kingjulia@41.1.86.87) (Ping timeout: 252 seconds)
[01:41:20] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[01:43:43] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 244 seconds)
[01:45:36] *** Joins: hyiltiz (~quassel@31.220.5.250)
[01:46:48] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Quit: Leaving)
[01:49:24] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 244 seconds)
[01:51:19] *** Quits: arktnld (~arktnld@177.133.7.245.dynamic.adsl.gvt.net.br) (Ping timeout: 252 seconds)
[01:51:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd) (Ping timeout: 252 seconds)
[01:55:57] *** Joins: Guest59 (~Guest59@2a00:23c7:1fa4:7201:84ce:2dc3:b500:1e38)
[01:57:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[01:59:59] *** Joins: mh_le (~Mads@user/mh-le/x-4465771)
[02:01:24] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:03:56] *** Quits: Guest59 (~Guest59@2a00:23c7:1fa4:7201:84ce:2dc3:b500:1e38) (Quit: Client closed)
[02:07:48] *** Quits: Kaylah (~Kaylah@ptr-eit6u3gpspvt6v7zo0k.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[02:09:09] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[02:09:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:12:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:12:38] *** Quits: sazawal (~sazawal@122.162.80.16) (Quit: Leaving)
[02:15:08] *** Quits: Simplar (~Simplar@188.163.93.118) (Quit: Going offline, see ya! (www.adiirc.com))
[02:16:12] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Quit: Connection closed)
[02:22:43] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:24:07] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[02:24:26] *** Quits: Ronnin (~Ronnin@172.241.26.83) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[02:25:29] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[02:25:53] *** Joins: crmur__ (~crm@70.120.0.94)
[02:28:31] *** Joins: p0indexter (~alpha@user/p0indexter)
[02:28:47] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Ping timeout: 245 seconds)
[02:29:12] *** Quits: crm (~crm@70.120.0.94) (Ping timeout: 250 seconds)
[02:31:57] *** Joins: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607)
[02:33:06] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[02:34:40] *** Joins: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com)
[02:35:09] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[02:35:45] *** Soliloquy is now known as Quokka
[02:42:46] *** Joins: Kaylah (~Kaylah@ptr-eit6u3gpspvt6v7zo0k.18120a2.ip6.access.telenet.be)
[02:43:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:44:48] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[02:45:39] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[02:45:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:47:05] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:758c:11b0:b518:9a27)
[02:51:26] *** Joins: oxide (~lambda@user/oxide)
[02:58:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[03:00:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:02:15] *** Joins: plankster (~plankster@user/plankers)
[03:03:04] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: WeeChat 3.2)
[03:05:34] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[03:08:00] *** Gustavo6046_ is now known as Gustavo6046
[03:09:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 252 seconds)
[03:09:40] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[03:16:07] *** Quits: byanka__ (~byanka@78.137.43.40) (Ping timeout: 240 seconds)
[03:24:16] *** Quits: arseniiv (~arseniiv@94.41.82.46.dynamic.ufanet.ru) (Ping timeout: 252 seconds)
[03:24:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[03:25:30] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 244 seconds)
[03:26:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:05] *** Joins: cjb (~cjb@user/cjb)
[03:31:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[03:31:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:33:25] *** Gustavo6046_ is now known as Gustavo6046
[03:38:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:40:39] *** Joins: Drek45 (~jrept371@129.59.122.18)
[03:41:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:47:20] *** Joins: jeslie0 (~user@108.162.150.9)
[03:53:59] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:56:31] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[03:56:34] *** Joins: sm2n_ (~sm2n@user/sm2n)
[03:58:34] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 244 seconds)
[03:59:30] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:03:52] *** Quits: jeslie0 (~user@108.162.150.9) (Ping timeout: 252 seconds)
[04:06:52] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[04:08:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:09:19] *** Joins: Fohsap (~Muimi@60.20.219.231)
[04:09:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:10:28] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:10:37] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:10:48] *** Joins: flynn (~mcbloch@user/flynn)
[04:10:54] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[04:11:40] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[04:17:15] *** Joins: Arcorann (~A@user/arcorann)
[04:20:52] *** Joins: ferdna (~ferdna@user/ferdna)
[04:22:43] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[04:24:20] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[04:24:56] *** Joins: lifeisajoe (~lifeisajo@user/lifeisajoe)
[04:29:07] *** Joins: p0indexter (~alpha@user/p0indexter)
[04:29:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:30:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:31:07] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:42:22] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[05:01:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:07:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:07:40] *** Quits: p0indexter (~alpha@user/p0indexter) (Ping timeout: 240 seconds)
[05:08:46] *** Quits: ghen (~nobody@2601:649:100:8b0:a922:368a:9428:c1b8) (Ping timeout: 252 seconds)
[05:10:58] <qergle> 73% of all fields medalists are descendants of d'alembert or liebniz
[05:12:06] *** Joins: p0indexter (~alpha@user/p0indexter)
[05:12:24] <specing> :O
[05:21:08] *** Joins: Achylles_ (~Achylles_@177.188.61.119)
[05:22:06] *** Quits: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607) (Remote host closed the connection)
[05:24:09] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:19] *** Quits: Kaylah (~Kaylah@ptr-eit6u3gpspvt6v7zo0k.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[05:32:56] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:758c:11b0:b518:9a27) (Ping timeout: 250 seconds)
[05:34:23] <greenbagels> qergle: nice d'alembertian fact
[05:38:39] *** Joins: Skyz (~Skyz@user/skyz)
[05:39:34] *** Quits: Skyz (~Skyz@user/skyz) (Client Quit)
[05:41:33] *** Quits: kmh (~kmh@p200300df5f0533005dc82434a697d12d.dip0.t-ipconnect.de) (Quit: Leaving)
[05:42:58] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[05:44:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:44:40] *** Quits: lifeisajoe (~lifeisajo@user/lifeisajoe) (Remote host closed the connection)
[05:48:19] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[05:52:54] *** Quits: Achylles_ (~Achylles_@177.188.61.119) (Remote host closed the connection)
[05:53:02] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[05:54:29] <Fangs> quantum: for some sensible notion of C^oo, the unit sphere there is contractible
[05:54:45] <Fangs> do you have a good model for C^oo?
[05:54:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[05:55:10] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:56:24] <Fangs> I know people like to use the L^2 space on [0,1], but you said you don't like functional analysis. hoping you'd know an alternative
[05:56:31] <Fangs> I think you can use sequential spaces \ell_2
[05:58:48] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[05:58:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[06:03:46] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[06:04:52] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a) (Ping timeout: 252 seconds)
[06:04:58] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:06:53] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:2c79:b44:78b6:918)
[06:07:01] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com)
[06:08:09] *** Quits: emerent (~quassel@p200300cd5701a19fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:08:21] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[06:09:03] *** Joins: emerent (~quassel@p200300cd5701a160ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:11:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[06:15:52] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[06:19:09] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[06:19:34] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[06:22:10] <tusko> I may be over thinking this, but I'd like to prove that if a|b and b|a, then a = +-b.
[06:24:12] <Fangs> tusko: can you use the prime decomposition of integers?
[06:26:48] <tusko> Is it enough to say a|b -> b=ak for some k \in Z and b|a -> a=bn for some n \in z. Substitution of one into the other results in nk=1.
[06:26:54] <tusko> I don't even know what that is tbh
[06:27:03] <tusko> I'm sure I could use it if I knew what i was.
[06:27:43] <Fangs> tusko: yes, what are the solutions to nk = 1 over the integers
[06:27:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:28:14] <tusko> um, hm... 1/k = n or 1/n =k?
[06:28:30] <tusko> or, I guess (1,1) and (-1,-1)
[06:28:33] <Fangs> integers
[06:28:36] <Fangs> yeah
[06:29:00] <tusko> so I see where you're going there
[06:30:01] <tusko> In that case, since b = ak and a = bn, and since n and k are either 1 or -1, then a = +/- b (and b = +- a)?
[06:30:41] <Fangs> yup
[06:31:09] <tusko> idk why it feels like a suboptimal proof to me :/
[06:31:41] <tusko> Math has never really been easy for me
[06:31:57] <Fangs> idk what you're talking about, you just produced a really elegant proof
[06:32:38] <tusko> idk, for example, we were proving in class today how many steps it should take to find the gcd.
[06:33:15] <tusko> I had almost no idea what we were talking about. I still only understand maybe half of it
[06:33:23] <tusko> I doubt I could reproduce such a proof.
[06:34:28] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Quit: .)
[06:35:13] <qergle> did you use subtraction or mod in your gcd algo?
[06:37:36] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[06:40:09] <tusko> hm, so we did a = bq1 + r1 ... b = r1q2 + r2 ... r1 = r2q3 + r3 ... rt-2 = rt-1qt + rt
[06:41:00] <tusko> and then, like, a > b > r1 > r2 > ... > rt-2 > rt > 0
[06:43:42] <tusko> then we made some assumptions about r_i-1 > ri/2 or r_i-1 <= ri/2 to show that r_i-2 >= r_i/2 (Always)
[06:43:42] <qergle> that's commonly called the euclidean algorithm
[06:43:42] <tusko> I'll have to pull out my notes, because I was lost in the sauce
[06:43:42] *** Quits: voidah (~voidah@user/voidah) (Ping timeout: 240 seconds)
[06:43:52] <tusko> yeah, so we were told Euclid's algorithm is like the best algorithm to find gcd for going on like 2000 years or something
[06:44:12] <tusko> not sure if Euclid's algorithm == euclidean algorithm. I could be calling things wrong
[06:45:04] <qergle> say we want gcd(12,88)
[06:45:32] <qergle> so we can do that in 2 steps essentially
[06:45:51] <qergle> 88 = 7*12 + 4 -> 12 = 3*4 + 0 -> gcd=4
[06:46:12] <tusko> right, boom gcd=4. Its incredible
[06:46:38] <tusko> I also know now that it takes, I think, at worst 2k operations to do for any number. But the proof was bananas
[06:47:10] <qergle> or something a little longer, say gcdd(1242,63);  1242=19*63+45 -> 445=2*18+9 -> 18=2*9+0 -> gcd=9
[06:47:30] <Fangs> tusko: euclid's algorithm works over more fancy rings too
[06:47:38] <Galois> finding the solutions of nk = 1 in the integers is just as hard as proving that if a|b and b|a then a = ± b
[06:48:21] <Fangs> thats the proof they produced
[06:49:32] <qergle> trivia: worst case scenario of euclidean algorithm gcd(F_n,F_{n+1}) iirc.
[06:49:39] <Galois> the point is you have to prove nk = 1 has only (1,1) and (-1,-1) as solutions. This isn't automatic. For example it doesn't hold in the rationals.
[06:50:25] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:52:49] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:52:49] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd)
[06:52:49] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[06:52:49] <tusko> Right, true. This is a class in elementary cryptography, so we've been mostly restricted to integers or natural numbers. I'd like to take abstract algebra and/or number theory next, but I am a straight up dunce.
[06:52:54] <Juliu> Hi guys
[06:53:04] <Juliu> I dont think that cryptography exists
[06:54:14] <Galois> well, if you want to learn it properly, you should do it properly.
[06:54:15] <Fangs> Galois: |nk| >= |n| and |nk| >= |k| for non-zero n, k.. which should follow if you're willing to believe that  |z| >= 1 for any nonzero integer z
[06:54:15] <qergle> crypto is a good environment in which to learn elementary nt
[06:54:15] *** Joins: hyiltiz (~quassel@31.220.5.250)
[06:54:50] <Galois> good, so now you must prove z ≠ 0 → |z| ≥ 1
[06:55:00] <qergle> tusko: have you seen a book by hoffstein/pipher/silverman?
[06:55:00] <tusko> qergle, that's what I was hoping. Ya know, take a little nibble, then jump into a number theory course next semester
[06:55:09] <Galois> (by the way, defining |z| is probably more trouble than it's worth in a computer proof assistant)
[06:55:12] <tusko> I think that's our textbook, actually.
[06:55:27] <qergle> this one i'm thinking is a springer/utm
[06:55:33] <tusko> My prof was one of their students.
[06:55:34] <Fangs> depending on how you define the integers, this is probably really annoying (I see you're already saying that)
[06:56:12] <tusko> qergle, Yeah, yellow and blue text. I like it. Its very readable.
[06:56:18] <Galois> it's enough to show that if 0 < z then ¬ z < 1.
[06:57:22] <Galois> this is a commonly encountered proof in elementary number theory. Have you seen it before? (Do you -- OP -- care to learn it properly?)
[06:57:34] <Fangs> if you take N x N/~ with (a,b) ~ (c,d) if.... {I want (a,b) to mean a-b.. so a-b=c-d iff a+d = c+b} if.... a+d = c+b
[06:57:49] <Galois> oh you're using the construction of Z. Yes, you can do it that way.
[06:57:59] <qergle> it's a nice book because aside from the basics, you get a nice section on ecc (elliptic curves) and one of the co-authors (silverman) is an expert. then you also get a section on lattice based crypto and the three co-authors pioneered this way back when cryptographers shunned mathematicians.
[06:58:22] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:58:33] <Fangs> .. then you probably have to prove that each class has (0,n) or (n,0) representative, and define the norm as n..
[06:58:35] <tusko> I'm pretty sure Schnorr claims to have broken RSA for some key size using a lattice method.
[06:58:39] <Fangs> this is painful
[06:58:42] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:58:52] <Galois> you also have to prove there is no natural number 0 < n < 1
[06:59:06] <tusko> Galois, you're a deep dude man. You proved all this?
[06:59:12] <Galois> of course
[06:59:18] <qergle> schnorr has been claiming to have broken rsa since forever
[06:59:31] <Fangs> Galois: how much are you willing to let OP to assume?
[06:59:32] <qergle> he wakes up every once in a while from his slumber and re-posts his assertions
[06:59:56] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[07:00:09] <Galois> that, in itself, is an interesting question for OP to answer!
[07:00:29] <Fangs> I don't think they should go down this deep
[07:00:45] <tusko> You guys went pretty deep.
[07:00:52] <tusko> I'm treading water.
[07:01:20] <Galois> ok, but the thing is, if you _don't_ go deep, then there's nothing to prove.
[07:01:38] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:01:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:01:44] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:01:48] <Galois> we know from experience that if a|b and b|a then a = ± b
[07:02:07] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:02:11] <Galois> what need can be satisfied by proving this, without proving it deeply?
[07:02:18] <Fangs> |nk| >= |n| and |nk| >= |k| for non-zero n, k.. which should follow if you're willing to believe that  |z| >= 1 for any nonzero integer z <-- now you have to prove z=/=0 -> |z| >= 1
[07:02:40] <Fangs> Galois: I'm just curious if you have a slicker way to prove that statement instead of going my route
[07:02:48] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:03:04] <Galois> you could simply assume as an axiom ∀ z, ¬ 0 < z < 1
[07:03:06] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:03:18] <tusko> I didn't know it tbh, but I get your point. What is z exactly?
[07:03:26] <tusko> is that the field of integers?
[07:03:39] <Galois> sorry, I meant ∀ z ∈ ℤ, ¬ 0 < z < 1
[07:03:41] <Fangs> tusko: its a variable name for a non-zero integer
[07:03:59] <Fangs> ZZ or \mathbb{Z} is the *ring* of integers
[07:04:06] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:04:17] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:04:19] <Fangs> (you can't divide by an integer "n" in general and get an integer)
[07:04:24] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:04:34] <tusko> Yeah, see this seems to rely on some defns from algebra that I haven't really seen yet.
[07:04:55] <Galois> it relies on the definition of "less than"
[07:04:57] <tusko> I *think* ring means equipped with two operations, but i don't really know
[07:05:40] <Fangs> tusko: we aren't really doing anything deep with anything relating to rings, we're just assuming you know how to add and multiply (and take the absolute value of integers)
[07:06:20] <Galois> and the "deep" proof that I mentioned of ¬ 0 < z < 1 requires two things: properties of <, and induction / well-ordering
[07:06:43] <tusko> I don't even know how to parse what that means
[07:06:54] <dude12312414> at some point you also have to define + inductively in terms of Succ and < in terms of + and existence
[07:07:00] <tusko> I think it means there is no nonzero integer between 0 and 1
[07:07:07] <tusko> but isn't that obvious?
[07:07:08] <Galois> you don't _have_ to do that. You can define + using axioms.
[07:07:11] <dude12312414> (if you want to go down to the bare-bones Peano axioms)
[07:07:35] <Fangs> tusko: yes, its 'obvious' but if I give you a ""model"" of the integers, how would you test if this model satisfies this ""obvious"" property?
[07:07:43] <Galois> I've done it from Peano axioms, I've done it from ZFC axioms, I've done it from intuitionistic type theory, I've done it every which way
[07:07:44] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[07:08:01] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:08:11] <tusko> lol, well I def know we can define zero, as Z, and then one as Succ(Z), two as Succ(Succ(Z)), and so on :)
[07:08:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:09:07] <Galois> ok here's the proof. No it's not a "different" proof than what Fangs did, it's just going deeper. We just want to prove there's no integer between 0 and 1.
[07:09:40] <Galois> we'll assume the usual ordering relation <, and we'll assume that we know the natural numbers are well-ordered
[07:10:01] <Juliu> Am I the only one thinking that most mathematical proofs are not real proofs and very informal?
[07:10:14] <Galois> yes, but my proofs are as formal as you want them to be
[07:10:15] <tusko> Bourbaki agreed with u
[07:10:29] <Galois> I use bourbaki's axioms, but corrected
[07:10:47] <tusko> so edgy :>
[07:11:03] <Galois> Suppose there exists 0 < z < 1. Let x be the smallest such integer (guaranteed to exist by the well ordering principle) Then 0 < x^2 < x < 1, so x^2 is a smaller such number; contradiction.
[07:12:09] <Juliu> Galois, a contradiction is not a problem and no reason that something does not exist, unless your axioms say otherwise. Which proves that your "proof" is informal
[07:12:15] <tusko> What is the connection between that an proving that a|b and b| a => a = +/-b?
[07:12:21] <Galois> Juliu: welcome to /ignore.
[07:12:29] <Galois> here's the formal version:
[07:12:29] <Galois> Theorem zero_lt_a_lt_1 : ∀ a : Z, 0 < a → a < 1 → False.
[07:12:29] <Galois> Proof.  move=> a. rewrite -(A3 1) =>
[07:12:29] <Galois>   /[swap] /lt_plus_one_le [/lt_trans /[apply] | ->] /lt_irrefl //. Qed.
[07:12:35] <Juliu> Galois, seems you are not mature enough for criticism
[07:12:49] *** Joins: samir (~azureuser@user/samir)
[07:13:00] <Galois> What it has to do with a|b and b|a was explained by Fangs
[07:13:23] <Fangs> 12:32 <Fangs> |nk| >= |n| and |nk| >= |k| for non-zero n, k.. which should follow if you're willing to believe that  |z| >= 1 for any nonzero integer z <-- now you have to prove z=/=0 -> |z| >= 1
[07:13:28] <qergle> the connection is that xy=1 ⇒ x=y=±1
[07:14:15] <Fangs> tusko: at some point you had nk=1, so |nk| = |1| = 1, so 0 < |n| <= 1 and 0 < |k| <= 1
[07:14:35] <Fangs> this is just a formalization of the step where you wenk nk = 1 implies n = k = -1 or n = k = 1
[07:14:49] <qergle> for example, if you're not in ℤ, say you're in ℚ then xy=1 can have solution x=1/2,y=2, for example.
[07:14:53] <tusko> I see, so then we needed to prove that there is no integer between 0 and 1
[07:14:57] <Galois> right, there's something else you used there: if x|y and 0<y then x≤y
[07:15:27] <Fangs> tusko: in general, it depends on how much you're willing to assume, as in my convo with Galois, you could go *all* the way down
[07:15:40] <Fangs> 12:39 <Galois> we'll assume the usual ordering relation <, and we'll assume that we know the natural numbers are well-ordered
[07:16:09] <Fangs> we could have not assumed that, and look at the construction of the integers as tuples of (non-negative) natural umber (a,b)
[07:16:19] <Fangs> then you can still go down and construct the natural numbers too
[07:16:23] <qergle> if this were a crypto class with some elementary nt propping it up, i would assume xy=1 ⇒ x=y=±1 and use that to prove x|y and y|x ⇒ x=±y
[07:16:27] <tusko> Oh, right, I see so then you'd want to prove natural numbers exist
[07:16:47] <Fangs> or at least you have one model of it, for which whatever proposition you assert holds
[07:16:50] <qergle> i re-used variables names in honor of hardy and wright
[07:17:02] <Galois> qergle: but that's a circular argument, because you could just as easily claim to use x|y and y|x ⇒ x=±y to prove xy=1 ⇒ x=y=±1
[07:17:12] <qergle> it was a re-use of variables
[07:17:22] <tusko> qergle, I tried to buy a copy of their book but it sold
[07:17:27] <Galois> I'm not worried about variable re-use, I'm worried about the lack of logical meaning
[07:17:57] <Galois> it's like the usual circular proofs that (sin(x))' = cos(x)
[07:18:12] <qergle> x|y and y|x -> x=ky, y=jx -> xy=xyjk -> jk=1 -> j=k=±1
[07:18:26] <qergle> this gives what we seek
[07:18:43] <Galois> conversely xy = 1 → x|1 and 1|x → x = ± 1
[07:19:26] <Galois> you've just rephrased the problem into a closely equivalent alternative statement; you haven't proved anything
[07:19:48] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[07:20:05] <qergle> that's true, because i am taking jk=1 -> j=k=±1 as a given
[07:20:06] <Juliu> The nerd fight is on
[07:20:09] * Juliu gets popcorn
[07:20:40] <Galois> to actually break out of the circularity, the critical idea is in fact induction or well ordering
[07:21:06] <Galois> if you don't go at least deep enough to encounter that idea, you haven't really accomplished anything in my opinion
[07:22:02] <Galois> you can then if you want go deeper to Peano axioms or ZFC axioms, and you'll learn something new for sure, but the first increment of learning occurs when you hit well ordering
[07:22:10] <qergle> and i liked it. take the set S={z ∈ ℕ | 0 < z < 1}, WO gives a minimal element x in S. then x² ∈ S and x²<x, oops.
[07:25:06] <qergle> but it might be more foundational than tusko's class is meant to be
[07:25:06] <qergle> therefore S is empty
[07:25:06] <Galois> it is surely more foundational than the class is intended, but it's not more foundational than what students really need to learn in order to be successful in number theoretic cryptography
[07:25:06] <qergle> or something along those lines.
[07:25:06] *** Joins: econo (uid147250@user/econo)
[07:25:06] <Juliu> Cryptography is probably fake anyway
[07:25:06] <Galois> it's the standard proof, and it isn't even a very artificial proof. The proof gets _directly_ to the heart of the reason why the statement is true.
[07:25:06] <Galois> if you had 1/2, then you'd have 1/4, 1/8, 1/16, etc. and well-ordering fails
[07:25:06] <qergle> 1/8?
[07:25:06] <Galois> x, x^2, x^3, x^4, ...
[07:25:06] <Galois> an infinite descending sequence
[07:25:06] <Galois> all positive
[07:25:06] <qergle> the map is x↦x² though
[07:25:06] <Galois> ok, sure, you can do 1/2, 1/4, 1/16, ... if you wish
[07:25:11] <Galois> I don't think this materially affects the concept
[07:25:20] <tusko> Galois, but how can you begin by saying xy = 1?
[07:25:28] <Galois> a|b and b|a
[07:25:32] <Galois> so a=bx and b=ay
[07:25:37] <Galois> so a=(ay)x
[07:25:54] <Galois> so (and this is itself a nontrivial result) either a=0 or xy=1
[07:26:49] <tusko> right, ok, but then from there you suggest that I should either prove well-ordering of the natural numbers or assume it and show ! 0 < z < 1?
[07:27:18] <qergle> Galois assumed N is WO
[07:27:22] <tusko> or perhaps well-ordering of the integers, since I need to show a = +/-b
[07:27:40] <Galois> from xy=1 you can assume without loss of generality (!) that x and y are positive, so then x divides 1, so then (by another nontrivial result) x ≤ 1.
[07:27:58] <Galois> if x = 1 then you're done, if x < 1 then (remember) x was positive, so 0 < x < 1, and then you show this is an impossibility
[07:28:06] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[07:28:13] *** Joins: orbyt (~textual@172.92.4.78)
[07:28:21] <tusko> I see, and this would extend to the negative case?
[07:28:28] <tusko> by symmetry?
[07:28:43] <Galois> I think this is the point where you have to stop asking questions and start doing the work yourself if you expect to learn anything. I've given you all the main ideas.
[07:28:47] <Juliu> Contradiction does not mean impossible
[07:28:54] <Fangs> let's summarise
[07:30:07] <Galois> as for your question about well-ordering of the natural numbers, I would definitely assume that for now. Assuming it gets you to the main idea.
[07:31:13] <Fangs> xy=1 ⇒ x=y=±1 is logically equivalent to x|y and y|x ⇒ x=±y and the point Galois was making was that you had to at least go one level deeper to prove a non-logically equivalent statement (i.e. at saysomething well-ordering or something about induction)
[07:31:16] <tusko> Galois, I"ve understood what you said. I mean, really I came up with a good chunk of the proof already, besides this idea of xy = 1 -> x|1 and y|1 and |xy| = |1| = 1 so that 0 <= x <= 1 and 0 <= y <= 1. Then there emerges the need to show that there is no integer between 0 and 1.
[07:31:19] <Fangs> (which was something I didn't catch)
[07:32:04] <tusko> it should be < on the 0 side
[07:32:04] <Galois> "logically equivalent" is a bit subjective since technically all true theorems are logically equivalent, but the point I make is that the two statements are very easily shown to be equivalent
[07:32:41] <qergle> isn't that often the case in proofs though?
[07:32:52] <Galois> yes, and then you have to prove at least one of the two
[07:33:11] <qergle> you show via a set of steps that P and Q are equivalent statements and you began with Q as true by assumption (or priori knowledge)
[07:33:26] <tusko> Honestly, my prof would probably love to see that proof. He asks us everyday to prove all sorts of 'obvious' things
[07:33:43] <tusko> That is 'but why is it true'
[07:33:43] <Galois> correct. But in this case doing that would lead to the outcome where you assume a|b → b|a → a=±b is true by assumption
[07:34:29] <qergle> you assume xy=1 ⇒ x=y=±1 and then show that divisibility gives that a|b,b|a ⇒ a=±b
[07:34:58] <Galois> I don't find that satisfying, because you're just assuming a closely related equivalent statement
[07:35:26] <Galois> whereas well-ordering is NOT equivalent to a|b,b|a ⇒ a=±b
[07:35:34] <Galois> (and THAT is also an interesting exercise, go do it!)
[07:35:36] <qergle> i think you see this when the intent is to get students familiar with the implications of divisibility without getting into the makeup of N
[07:36:14] <Galois> I don't think that serves the students well in this class. Using this book you would surely need to learn, say, modular arithmetic at some point.
[07:36:22] <Fangs> idk if this is in tusko's sylabus, but that's also often a statement about prime ideals in rings
[07:36:34] <Galois> and modular arithmetic is different enough from Z arithmetic that you want a rigorous grounding in the foundations of Z and N
[07:36:46] <Galois> so that you know what parts of your intuition still hold in Zn, and what parts don't
[07:36:57] <qergle> like you start of with this: defn an integer b is divisible by a non-zero integer a, if we have an integer x st b=ax. this is notated a|b.
[07:37:55] <qergle> and then you go into the implications like a|b, b|c \implis a|c
[07:37:56] <qergle> etc
[07:38:08] <Galois> to put it more bluntly, if you assume "xy=1 ⇒ x=y=±1" without further understanding of the level below, then you're going to get in big trouble once you start doing arithmetic mod n, where this fact does NOT hold
[07:39:23] <qergle> true. but don't you sometimes teach iteratively? like some lectures in you say "remember when we said xyz in lecture 1, well it's not always true, for example, here..."
[07:39:41] <qergle> as opposed to front-loading the entirety of the foundation
[07:39:49] <Galois> I think that's ok, but it's more like you'd be backtracking in lecture 2 instead of in lecture 20
[07:40:23] <Fangs> teaching aside, tusko you said that fact was obvious
[07:40:33] <Fangs> so I assume you had some intuition on why its true
[07:40:42] <Fangs> could you have formalized that intuition?
[07:41:10] <Fangs> (I think discussion along this lines is more worthwile than fussing about what OP's course teach or not teach)
[07:41:12] <qergle> if you coqify the class there's no getting around it from the start, i guess.
[07:42:38] <Galois> I don't coqify my cryptography class, but you are expected to know the foundations
[07:42:39] <qergle> you can't coqify a|b,b|a ⇒ a=±1b without going in a big deeper.
[07:42:39] <Galois> yes, you need at least well ordering or induction
[07:42:39] <qergle> s/big/bit
[07:42:39] <Galois> if pedagogy doesn't motivate you, consider that most of the really successful cryptographers are highly skilled in math, including foundational math
[07:42:47] *** Quits: otto_s (~user@p5b044a64.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:42:48] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:43:34] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:44:52] *** Joins: otto_s (~user@p5de2f66c.dip0.t-ipconnect.de)
[07:46:03] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[07:46:40] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:47:38] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:49:53] <tusko> what is coq?
[07:49:58] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[07:50:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:50:35] <Galois> it's the program I used to prove that formal statement above
[07:50:37] <Galois> Theorem zero_lt_a_lt_1 : ∀ a : Z, 0 < a → a < 1 → False.
[07:50:51] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[07:51:09] *** Parts: samir (~azureuser@user/samir) (WeeChat 2.8)
[07:51:39] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:51:39] <Juliu> Still not a formal proof
[07:51:42] <tusko> Oh, gotcha. Yeah, I can appreciate your insistence on things like the well-ordering principle. I understand what that is and that it is important. I'm not sure how many times one needs to prove it before they assume it to be true.
[07:51:58] <tusko> Reading some math journals it would seem many things are assumed at some level
[07:52:09] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:2c79:b44:78b6:918) (Ping timeout: 250 seconds)
[07:52:11] <Galois> you need to prove it once
[07:52:32] <tusko> Well, didn't I do that when I took discrete math and proved why induction works?
[07:52:53] <tusko> Induction is, after all, based on the well-ordering principle.
[07:53:05] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:b53e:f2f2:3cdd:f236)
[07:53:29] <Juliu> tusko, does it have to be?
[07:53:36] <Galois> how did you prove induction?
[07:53:48] <tusko> So, Fangs, I suppose that is where my intuition comes from that there aren't any integers between 0 and 1
[07:54:19] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[07:54:22] <tusko> Galois, I doubt I proved it to your satisfaction probably. But I have also seen well-ordering principle used to prove the archimedean property of the integers, for example.
[07:54:23] *** Joins: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net)
[07:54:45] <Fangs> 12:43 <Fangs> 12:32 <Fangs> |nk| >= |n| and |nk| >= |k| for non-zero n, k.. which should follow if you're willing to believe that  |z| >= 1 for any nonzero integer z <--  thats where this came from too, tusko
[07:55:32] <Nickssen> Hello friends, I am solving an ODE using the method of Frobenius. My recursion relation relates c_n with c_n-2
[07:55:49] <Nickssen> Is there a step to determine the rest of the information I need to solve the problem?
[07:56:44] <tusko> Galois, well I would say we prove some proposition p(n) is true for some integer n, and then we assume p(k) is also true. and if p(k) is true, then we show that p(k+1) must also be true.
[07:57:02] <tusko> This, in effect builds a well-ordered set from n to infinity (assuming n is an integer)
[07:57:33] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:57:34] <tusko> But, really, it needn't be restricted to integers.
[07:57:51] <Galois> you're using induction; you're not proving induction
[07:57:56] <Nickssen> https://imgur.com/a/Y4B72jl    this is the problem. I have the exponents of singularity r= 1/2 and 5/2. I am only asked for one solution so I went with 1/2. I got the relation c_n  = -c_n-2   /   n(n-2) for n>2.....
[07:58:10] <tusko> Galois, yes I thought you might say that
[07:58:26] <Nickssen> But I cant figure how to give a generic term for c_n in order to give a frobenius solution
[07:59:55] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:02:13] <Juliu> Nickssen, the c_(2k)'s might be completely independent from the c_(2k+1)'s
[08:03:28] *** Joins: Guest34 (~Guest34@2409:10:3440:1a00:577:dd4d:ea9:244a)
[08:04:18] *** Joins: mbuf (~Shakthi@122.178.183.62)
[08:06:22] <Nickssen> sorry for the quality, my phone broke and im using a piece of  crap one
[08:06:26] <Nickssen> https://imgur.com/a/Y4B72jl
[08:06:48] <Nickssen> The recursion relation does give me some information about the general term, but im missing c_0 and c_1
[08:06:56] <Nickssen> oh and c_2 as well
[08:08:43] <cherim> You know what the solutions are, right? Only doing this series thing because they ask you to?
[08:08:45] *** Quits: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:08:56] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:09:12] <Nickssen> I don't know the solutions
[08:09:19] <Nickssen> I only know the form of the solution
[08:09:35] <cherim> It's a Bessel-type equation with solutions x^{3/2} J_1(x) and x^{3/2} Y_1(x)
[08:09:39] <Nickssen> y(x) = x^r  series (c_n t^n)
[08:10:11] <Nickssen> damn I should   have seen that
[08:10:40] <cherim> The first behaves as x^{5/2} near x=0, the second has logarithmic singularity
[08:10:58] <Nickssen> luckily he only asks for 1 solution
[08:10:58] <cherim> It won't help doing power series near x=0 for Y_1(x)
[08:11:23] <Nickssen> I would have to use abels theorem for the 2nd one though, right?
[08:12:29] <qergle> soon things will be so foundational that i'd fail one of Galois's intro classes
[08:12:31] <cherim> And you correctly get the recurrence that unfolds as 1, 1/(n(n-2)), 1/(n(n-2)(n-2)(n-4)),... or such, with two factorials growing in the denominator
[08:12:40] <cherim> As they should in Bessel functions
[08:13:55] <qergle> which is which?
[08:14:05] <qergle> is J 1st and Y 2nd or vice versa?
[08:14:17] <Nickssen> cherim, would r = 1/2 have a log singularity?
[08:14:23] <Nickssen> That's the one I was working with :/
[08:14:52] <cherim> J_1(x) ~x so the good one is certainly x^{5/2}
[08:15:33] <Nickssen> these bessel bois are tough
[08:15:41] <Nickssen> or im dumb
[08:16:27] <qergle> or maybe things will become so foundational and automated that we get to offload it all to our AIs
[08:16:39] <Nickssen> We had studied besssel functions of order p as: x^2 + xy' + (x^2 + p^2) = 0, with x_o =0 a regular singular point
[08:16:53] <Nickssen> Do coefficients not matter on the terms?
[08:17:02] <cherim> What do you get if you substitute y(x)=x^{3/2} z(x) ?
[08:17:08] <qergle> at some point we start calling them hankel
[08:17:11] <Nickssen> oh and  x^2 - p^2 srry
[08:18:18] <Nickssen> Cherim, but my roots are 1/2 and 5/2
[08:18:29] <Nickssen> I don't understand why we'd use 3/2
[08:18:32] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:18:48] <cherim> You don't want to get a function that is nonzero at x=0
[08:19:00] <cherim> Bessel J_n(x) ~ x^n
[08:19:15] <cherim> You want to cast the equation to the standard form though
[08:20:50] <Nickssen> hmph
[08:20:54] <Nickssen> Trying to understand
[08:22:37] <pi0> is BNF part of math?
[08:22:54] *** Joins: Guest3411 (~Guest34@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[08:25:03] <Nickssen> Am I supposed to transform the equation in order to form Bessel's equation?
[08:25:40] <cherim> Yes, isn't that logical? x^2 y''+xy'+(x^2-p^2)y = 0 is almost like what you have, x^2 y''-2xy'+(x^2+5/4)y=0
[08:26:26] <cherim> If you want to express the solution in terms of the solution of the standard equation, find out what to do with y(x) to make it satisfy the standard equation
[08:28:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:30:40] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[08:32:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9c50-f290-3cc4-9a67.res6.spectrum.com) (Read error: Connection reset by peer)
[08:32:25] <Nickssen> Thanks cherim, ill give it a try to find the proper substitution
[08:32:32] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[08:32:57] <cherim> y(x)=x^{3/2} z(x) , expand derivatives and simplify
[08:37:47] <Nickssen> thanks cherim !!
[08:38:58] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[08:39:11] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[08:39:30] *** Joins: zwisch__ (~zwisch@135-23-67-207.cpe.pppoe.ca)
[08:39:32] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[08:39:32] *** Joins: mrdata_ (~mrdata@user/mrdata)
[08:39:36] *** Joins: aakashi2001 (~aakashi20@103.61.255.3)
[08:39:36] *** Quits: aakashi2001 (~aakashi20@103.61.255.3) (Changing host)
[08:39:36] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:39:55] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[08:40:19] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Client Quit)
[08:41:00] *** Quits: join_subline (~join_subl@135-23-251-24.cpe.pppoe.ca) (Ping timeout: 250 seconds)
[08:41:47] *** Quits: zwisch_ (~zwisch@135-23-67-207.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[08:42:07] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[08:42:18] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 250 seconds)
[08:42:21] *** Joins: darkapex (~darkapex@user/darkapex)
[08:42:48] *** Joins: join_subline (~join_subl@135-23-251-24.cpe.pppoe.ca)
[08:43:11] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[08:43:16] *** mrdata_ is now known as mrdata
[08:49:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:49:57] <Guest3411> I want to find derivative of 5x/(sqrt(1+x^2)). So I write: 5x * (1+x^2)^(-1/2). Then product rule says: 5*(1+x^2)^(-1/2) + 5x * (-1/2)*(2x)^(-3/2). Right?
[08:52:26] <qergle> is your d/dx (1+x^2)^(-1/2) corect?
[08:54:20] *** Quits: Guest34 (~Guest34@2409:10:3440:1a00:577:dd4d:ea9:244a) (Quit: Client closed)
[08:55:54] <Guest3411> whoops. no its not
[08:56:16] <Guest3411> (-1/2)*(1+x^2)^(-3/2) * 2x
[08:56:26] <qergle> that's right
[08:56:47] <Nickssen> my de prof says he knows how to differentiate
[08:56:52] <Nickssen> but he hasnt learned to integrate
[08:57:07] <Nickssen> then he asks us if we know derivatives
[09:00:47] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[09:00:47] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[09:00:47] *** Quits: Hafydd (~Hafydd@user/hafydd) (*.net *.split)
[09:00:47] *** Quits: ksft (~k@user/ksft) (*.net *.split)
[09:01:07] *** Joins: Hafydd (~Hafydd@user/hafydd)
[09:01:12] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[09:01:15] *** Joins: ksft (~k@pool-173-48-47-80.bstnma.fios.verizon.net)
[09:02:05] *** Joins: alip (~alip@exherbo/developer/alip)
[09:05:40] <Guest3411> for the function sqrt(x^2 + 1)/sqrt(2x+1), I'll do it the same way basically. (1/2)*(x^2+1)^(-1/2) * (2x) * (2x+1)^(1/2) + (x^2+1)^(1/2) * (1/2)*(2x+1)^(-3/2) * (2)
[09:05:43] <Guest3411> right?
[09:05:59] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 244 seconds)
[09:06:42] *** Quits: ksft (~k@pool-173-48-47-80.bstnma.fios.verizon.net) (Changing host)
[09:06:42] *** Joins: ksft (~k@user/ksft)
[09:06:53] *** Quits: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au) (Quit: Konversation terminated!)
[09:08:06] *** Joins: node1 (~node1@user/node1)
[09:08:09] <qergle> you lost me there
[09:08:34] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 244 seconds)
[09:09:00] <qergle> oh never, mind, parsing so much is hard on small phone
[09:09:08] <qergle> looks good, i think
[09:10:08] <qergle> i'd clean up all the 1/2 * 2, you have though, just to make it tighter.
[09:10:30] *** Quits: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net) (Quit: Client closed)
[09:10:53] *** Joins: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au)
[09:11:14] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[09:11:15] <Guest3411> so can we recover this sort of power rule from the limit definition of derivative ?
[09:11:24] <qergle> yes
[09:11:44] <tusko> the limit definition of derivative?
[09:12:30] <qergle> Guest3411: you can use the binomial expansion and then you have linearity
[09:13:08] <qergle> you can also factor cleverly.
[09:13:15] <tusko> you better do 100 epsilon-delta proofs real quick as penance before Galois pops in here
[09:15:47] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[09:17:03] *** Joins: mei (~mei@user/mei)
[09:18:03] <qergle> hrmm, ok, so maybe two cases
[09:18:27] <qergle> rational and irrational exponents. i'll skip this.
[09:19:30] *** Quits: mrdata (~mrdata@user/mrdata) (Read error: Connection reset by peer)
[09:20:15] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[09:20:38] *** Joins: frelleck (~frelleck@user/frelleck)
[09:20:51] *** Quits: oxide (~lambda@user/oxide) (Quit: oxide)
[09:20:56] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[09:20:56] *** Joins: mrdata (~mrdata@user/mrdata)
[09:26:53] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:28:03] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:29:39] *** Joins: aakashi2001 (~aakashi20@103.61.255.29)
[09:29:39] *** Quits: aakashi2001 (~aakashi20@103.61.255.29) (Changing host)
[09:29:39] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:33:53] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 244 seconds)
[09:36:06] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:36:52] *** Joins: hyiltiz (~quassel@31.220.5.250)
[09:39:49] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[09:43:24] *** Joins: zacts (~zacts@user/zacts)
[09:46:05] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:46:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:46:43] *** Quits: mbuf (~Shakthi@122.178.183.62) (Quit: Leaving)
[09:46:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:50:21] <pi0> hey all sorry for asking again
[09:50:26] <pi0> but does anyone remember BNF?
[09:51:19] *** Quits: ckie (~ckie@user/cookie) (Quit: off I go~)
[09:51:20] *** Quits: tomaw (tom@libera/staff/tomaw) (Quit: Quitting)
[09:51:38] *** Joins: ckie (~ckie@user/cookie)
[09:52:17] *** Quits: cloudcell (sid48145@id-48145.tinside.irccloud.com) (Changing host)
[09:52:17] *** Joins: cloudcell (sid48145@user/cloudcell)
[09:52:31] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 252 seconds)
[09:53:08] *** Joins: segnior (segnior@user/segnior)
[09:54:04] *** Joins: tomaw (tom@libera/staff/tomaw)
[09:55:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[09:56:01] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[09:57:51] <Guest3411> how is tan(x) similar to sin(x) or cos(x)? i know tan(x) = sin/cos, but the graph doesn't look like either really
[09:57:51] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[09:58:18] <tusko> The graph kind of looks like their ratio
[09:58:36] <Guest3411> whatchu mean
[09:59:25] <tusko> I mean, if you considered the ratio of sin(x) to cos(x) over a range of x-values, it would start to look a lot like tan(x), like right away
[10:00:36] <newpy> I'm having issues calculating E[X|A] in this video: https://www.youtube.com/watch?v=5CHUuMZZzSY&list=PLUl4u3cNGP60hI9ATjSFgLZpbNJ7myAg6
[10:01:00] <newpy> I get the right answer when I use the mean between the endpoints
[10:01:30] <newpy> but shouldn't it also work if I do \int{(a+b)/2,b}[ 2/(b-a) * x dx] ?
[10:02:11] <newpy> it's a simple uniform distribution for anyone who doesn't want to click the link
[10:04:06] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[10:04:44] <newpy> hmm, wolfram gets the right answer, I must be doing the integral wrong
[10:06:16] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[10:06:17] *** Joins: trinity (uid509475@user/trinity)
[10:08:40] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[10:10:10] *** Joins: kingjulian (~kingjulia@41.1.86.87)
[10:10:10] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:10:49] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[10:12:07] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:18:56] *** Joins: gggp (~textual@111.63.14.115)
[10:19:02] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[10:19:32] <newpy> I'm trying to go backwards, does a/4 + 3b/4 differentiate to 2x/(b-a) ?
[10:20:52] <newpy> err sorry that's not right, it's not an indefinite integral
[10:20:56] *** Joins: Mija (~Mija@user/mija)
[10:29:43] <qergle> newpy: yes, the integral is right
[10:30:07] <qergle> ∫ 2/(b-a) x dx from (a+b)/2 to b
[10:30:20] *** Joins: oxide (~lambda@user/oxide)
[10:30:50] <newpy> 1/(b-a) * x^2 | from (a+b)/2 to b
[10:30:54] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[10:31:42] <newpy> 1/(b-a) * [b^2 - 1/4 * (a+b)^2] ?
[10:32:43] <newpy> oh that's (a+b)(a-b) = -1(a+b)(b-a), didn't notice that
[10:32:50] <qergle> x^/(b-a) from (a+b)/2 to b is b^2/(b-a)-((a+b)/2)^2/(b-a)
[10:32:52] *** Joins: rubiksdream (~a@223.197.234.77)
[10:33:32] <qergle> and ((a+b)/2)^2 is a^2/4 + ab/2 + b^2/4
[10:34:49] <qergle> so numeraire: b^2-(a^2/4+ab/2+b^2/4) = 3b^2/4 - a^2/4 - ab/2
[10:35:38] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:35:46] <cherim> Average of a linear function is half-sum of values at endpoints. So (a+b)/4+b/2.
[10:36:02] <qergle> that's how the video did it
[10:36:07] <newpy> cherim, I know that
[10:36:09] <qergle> but he wanted to verify it by integrating
[10:36:42] <newpy> I think I'm onto something with 1/4 * (a+b)^2 = -1/4 * (a+b)(b-a)
[10:36:50] <newpy> which cancels the 1/(b-a) for that term
[10:37:12] <newpy> but I'm still stuck with b^2 / (b-a) then
[10:37:30] <qergle> well you have 1/4 * (3b^2 - 2ab - a^2), right?
[10:37:48] <qergle> what if you had 1/4 * (b^2 -2ab - a^2) instead?
[10:39:10] <newpy> I don't see how that reduces
[10:39:25] <qergle> oh sorry, i messed up a sign
[10:39:34] <qergle> you have 3b^2-2ab-a^2
[10:40:25] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[10:40:33] <qergle> so (3b+a)(b-a)
[10:40:52] <newpy> oh there you go
[10:40:53] <newpy> well done
[10:47:40] <tusko> Saw a copy of Arithmeticorum libri sex, et de numeris multangulis liber unus for sale
[10:49:59] *** Quits: frelleck (~frelleck@user/frelleck) ()
[10:57:48] <Guest3411> "find the points on the graph of y = 2sin(x) + sin^2(x) at which the tangent line is horizontal" -- so solve f'(x) = 0 ?
[10:59:49] <qergle> yes
[11:00:39] *** Joins: palasso (~palasso@user/palasso)
[11:00:58] *** Quits: rubiksdream (~a@223.197.234.77) (Ping timeout: 250 seconds)
[11:04:09] <Guest3411> i get 2(sin(x) + 1)cos(x) = 0. So 2(sin(x) + 1) = 0 or cos(x) = 0. That means sin(x) = -1 or cos(x) = 0. sin(x) = -1 only if x = 3pi / 2 or multiples of 3pi/2. cos(x) = 0 only if x = pi or multiplies of pi
[11:04:11] <Guest3411> right?
[11:04:51] <Guest3411> er, wait pi/2
[11:05:02] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[11:05:27] *** Joins: kakashiA1 (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de)
[11:06:01] <qergle> cos(x)=0 at π/2 and 3pi/2
[11:06:23] <qergle> sin(x)+1=0 when sin(x)=-1 or x=3π/2
[11:06:53] <qergle> so you have {π/2,3π/2} as solutions
[11:07:53] <qergle> the sin(x)+1 term ends up adding nothing new
[11:08:08] <Guest3411> howyeah
[11:08:12] <Guest3411> makes sense
[11:08:54] <pi0> https://i.imgur.com/99eGurN.png
[11:09:03] <pi0> question is this correct? or should it look like this?
[11:09:21] *** Joins: jamtorus (~quassel@185.213.154.161)
[11:09:22] <pi0> https://cdn.discordapp.com/attachments/824701621598158848/882149996034674688/unknown.png
[11:09:34] <qergle> you shouldn't have two circles
[11:09:40] <qergle> leave the green circle, call that A
[11:09:53] <qergle> then fill in everything in the blue box outside the green circle
[11:10:01] <qergle> that's Aᶜ
[11:10:32] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Quit: .)
[11:10:48] <pi0> i think i understand
[11:10:55] <pi0> like the 2nd image you mean
[11:11:03] <qergle> 1 is the universe, the entire box
[11:11:32] <qergle> 1-A is the box content minus the circle's content
[11:11:57] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[11:12:49] *** Quits: jellydonut (~quassel@185.213.154.161) (Ping timeout: 252 seconds)
[11:13:35] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[11:15:06] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[11:15:06] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Changing host)
[11:15:06] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:15:42] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 250 seconds)
[11:16:15] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 250 seconds)
[11:16:47] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Client Quit)
[11:18:11] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[11:18:17] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[11:26:30] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[11:27:50] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 250 seconds)
[11:30:21] *** Joins: oxide (~lambda@user/oxide)
[11:31:43] <pi0> thank you qergle
[11:31:55] <qergle> ok
[11:34:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[11:36:56] *** Joins: tacegory (~tacegory@user/tacegory)
[11:38:15] *** Quits: hugh_marera (~hugh@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[11:39:14] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net)
[11:39:43] *** Joins: hugh_marera (~hugh@186-149-117-154.bitcointernet.co.za)
[11:50:46] *** Quits: kingjulian (~kingjulia@41.1.86.87) (Ping timeout: 252 seconds)
[11:51:05] *** Quits: Dotz0cat (~Dotz0cat@h85.15.31.71.dynamic.ip.windstream.net) (Ping timeout: 248 seconds)
[11:53:57] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[11:53:57] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Changing host)
[11:53:57] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:54:26] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[11:59:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net) (Quit: Client closed)
[11:59:59] *** jaamro is now known as ormaaj
[12:01:47] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[12:05:40] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[12:06:42] *** Joins: hyiltiz (~quassel@31.220.5.250)
[12:09:06] *** Joins: vysn (~vysn@user/vysn)
[12:09:31] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:17:40] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[12:21:44] <Trashlord> I'm going to build an army of mathematicians. It will have a lot of divisions
[12:27:54] *** Joins: umamisoup (uid511883@id-511883.stonehaven.irccloud.com)
[12:30:18] *** Joins: specing_ (~specing@user/specing)
[12:30:18] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[12:32:00] *** specing_ is now known as specing
[12:32:09] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[12:32:37] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd) (Ping timeout: 252 seconds)
[12:35:17] <lericson> where would you get them? at the factory?
[12:35:31] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:08] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[12:39:00] *** Joins: mbuf (~Shakthi@122.178.229.44)
[12:39:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:41:16] <gauss> Trashlord: name checks out
[12:42:56] <Trashlord>  ¯\_(ツ)_/¯
[12:43:09] <Trashlord> it's definitely one of my worse puns
[12:43:37] *** Joins: rubiksdream (~a@1-64-49-062.static.netvigator.com)
[12:44:06] *** Joins: kingjulian (~kingjulia@41.1.86.87)
[12:49:59] *** Quits: Null_A[m] (~jasonjckn@2001:470:69fc:105::bb85) (Quit: You have been idle for 30+ days)
[12:52:44] *** Joins: BlueSky (~BlueSky@user/bluesky)
[12:54:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:01:17] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[13:07:16] *** Quits: kingjulian (~kingjulia@41.1.86.87) (Ping timeout: 244 seconds)
[13:07:19] *** Joins: kxkamil (~kxkamil@ogp162.internetdsl.tpnet.pl)
[13:09:47] *** Joins: kakashiAL (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de)
[13:12:13] *** Quits: kakashiA1 (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[13:18:06] *** Joins: diamondbond (~diamondbo@116.206.245.127)
[13:26:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:35:03] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:35:19] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:35:44] *** Quits: diamondbond (~diamondbo@116.206.245.127) (Quit: Leaving)
[13:35:44] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[13:35:45] *** Quits: trinity (uid509475@user/trinity) (Quit: Connection closed for inactivity)
[13:37:29] *** Joins: oxum (~oxum@106.203.195.217)
[13:39:05] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:39:46] *** Joins: jmft2_ (~JMFT@82.3.54.26)
[13:41:31] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7d1f:94f8:9299:1486)
[13:41:53] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 244 seconds)
[13:43:18] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:47:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[13:47:20] *** Joins: flynn (~mcbloch@user/flynn)
[13:49:20] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd)
[13:50:00] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[13:52:36] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a0e1:df84:3dfd:1dd) (Client Quit)
[13:53:13] *** Joins: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net)
[13:57:39] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[14:02:13] *** Joins: kobalt (~rsonx@user/kobalt)
[14:02:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:05:19] *** Joins: cheater (~Username@user/cheater)
[14:11:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:11:13] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[14:11:27] *** Joins: kobalt (~rsonx@user/kobalt)
[14:11:59] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[14:12:31] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[14:13:58] *** Joins: mgrabovs (~mgrabovs@redhat/mgrabovs)
[14:15:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[14:15:59] *** Joins: arseniiv (~arseniiv@94.41.82.46.dynamic.ufanet.ru)
[14:19:06] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[14:22:37] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:b53e:f2f2:3cdd:f236) (Ping timeout: 252 seconds)
[14:23:15] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:2daa:f38a:b2b7:ac83)
[14:28:47] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[14:30:50] *** Quits: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net) (Quit: Client closed)
[14:30:56] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:37:16] *** Joins: montxero (~user@149.167.149.74)
[14:39:13] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[14:44:50] *** Joins: kingjulian (~kingjulia@41.1.86.87)
[14:45:32] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[14:47:15] *** Joins: Simplar (~Simplar@188.163.93.118)
[14:47:55] *** Quits: freeemint (~freemint@2001:638:904:ffe8:2abf:c8f8:8aa3:41d7) (Ping timeout: 252 seconds)
[14:48:39] <Simplar> In a right triangle where I know three sides, how do I find the cosine of an angle between the median to hypotenuse and the bisector of the right angle?
[14:50:10] <quantum> Fangs: Sorry, I was asleep. What do you mean by C^∞?
[14:50:29] <Fangs> some infinite dimensional space
[14:50:47] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[14:51:57] <Fangs> quantum: this might be relevant to you, the sphere in an infinte dimensional space is contractible, and if you let U(1) act on it, you get BU(1).. so the infinite dimensional sphere ends up being the 'path space' over BU(1) you were talking about the other day
[14:52:07] <quantum> Yeah, I don't really have a decent mental model for those
[14:52:22] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 250 seconds)
[14:53:08] <Fangs> if you're content with algebraic topological description, you can make these with just cells.. for the sphere you can take 2 at each dimension, but yeah dw about it
[14:53:49] <quantum> I recall that you can construct CP^∞ using a direct limit
[14:55:31] <Fangs> yeah thats the process I'm thinking
[14:55:33] <quantum> Is there a similar sort of construction for general infinite dimensional CW/cell complexes? Make a direct system of balls/cells and then take the limit
[14:55:48] <quantum> I don't see why it shouldn't work
[14:57:37] *** Joins: seninha (~seninha@user/seninha)
[14:58:04] <Fangs> I think you can take the unit sphere in the sequence space and quotient that directly too
[14:58:23] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[15:01:54] <quantum> hmmm
[15:02:46] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7d1f:94f8:9299:1486) (Ping timeout: 252 seconds)
[15:06:41] <greenbagels> Simplar: can you draw a pic of what you want
[15:08:21] <Simplar> greenbagels: https://prnt.sc/1qvggvz
[15:08:29] <Simplar> I know AB, BC, AC. And I need the angle alpha
[15:08:41] <Simplar> CM is a line such that AM = MB
[15:08:43] <Simplar> (median)
[15:09:17] <Simplar> Angle LCA is 45 degrees aswell
[15:11:23] *** Joins: kobalt (~rsonx@user/kobalt)
[15:13:15] *** Joins: numsima (~numsima@101.175.64.73)
[15:14:55] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:55] *** Joins: cadmio (~cadmio@151.43.179.45)
[15:17:57] <cadmio> Hello
[15:19:54] <cadmio> Let σ^S_n and with σ^A_n the conjugate classes of the permutation σ of A_n respectevely in S_n and A_n. Prove that σSn coincides with σAn if there exists an odd permutation of S_n commuting with σ.
[15:25:28] *** Joins: Dotz0cat (~Dotz0cat@h30.94.187.173.dynamic.ip.windstream.net)
[15:28:04] <greenbagels> Simplar: https://i.imgur.com/7NNBbYd.png does this help
[15:29:38] *** Quits: kingjulian (~kingjulia@41.1.86.87) (Ping timeout: 250 seconds)
[15:29:43] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[15:29:45] *** Joins: savask (~savask@Powder/Developer/savask)
[15:30:49] <quantum> cadmio: We always have `σ^{A_n} \subset σ^{S_n}` so we only need to show the other inclusion. Take `λ\in σ^{S_n}, λ = gσg^{-1}` and condition on the parity of `g`.
[15:31:15] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Quit: No Ping reply in 180 seconds.)
[15:31:44] <cadmio> quantum: indeed a permutation that belongs to S_n is not said to belong in A_n too
[15:32:35] <quantum> Sorry?
[15:32:40] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:33:20] <Simplar> greenbagels: that was obvious
[15:33:39] <cadmio> I meant to say that two permutation conjugated in S_n could not be conjugated in A_n
[15:33:47] <kobalt> may I ask for your approach on this problem https://i.imgur.com/V8BQRNv.png this is combinatoics, I think.
[15:33:56] <Simplar> If we have a 3,4,5 triangle: https://prnt.sc/1qvi0xi
[15:34:06] <Simplar> am I allowed to replace sin with sqrt(1-cos^2)?
[15:34:35] <quantum> cadmio: Not necessarily, which is why you have to condition on the parity of `g`
[15:34:45] <greenbagels> Simplar: so did you solve it?
[15:34:58] <quantum> when `g` is even it's fine, but you need the hypothesis when `g` is odd
[15:35:02] <greenbagels> oh didnt see your iamge
[15:35:04] <cadmio> but the other way round is true
[15:35:50] <qergle> consider how many orthgonal axes you can have in 10-d space
[15:36:11] <quantum> cadmio: yeah, which is why `σ^{A_n} \subset σ^{S_n}` is always true
[15:38:49] <quantum> cadmio: If you give me a minute I'll write out a full proof as opposed to a sketch
[15:39:06] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[15:40:28] <kobalt> qergle: 10 axes can be mutually perpendicular to each other in 10-d.
[15:40:49] <kobalt> but how did you interpreted the question.
[15:41:07] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:41:44] <cadmio> quantum: It was proved in class but I don't understand a passage
[15:41:49] <qergle> the condition being imposed by vanishing dot product is orthgonality
[15:44:09] <cadmio> http://mathb.in/63356 τ = ασα' = αδσδ'α' = (αδ)σ(αδ)' where ' stands for ^-1
[15:45:07] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 252 seconds)
[15:45:08] <greenbagels> Simplar: ok sorry i was busy; you don't need all these trig identities to get what you want
[15:45:18] <greenbagels> you can directly write alpha in terms of beta and some number of degrees
[15:45:35] <greenbagels> if you just work with these sum-of-interior-angles and supplementary-angle identities
[15:45:41] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:46:07] <greenbagels> (and if you know all three sides and the fact that it's a right angle, you can determine the other two angles from law of sines)
[15:49:31] <quantum> cadmio: `A_n` is closed under conjugacy so I skipped proving that, but that's essentially what I did
[15:51:49] <cadmio> I don't understnad the substitution of α with αδ here τ = ασα' = αδσδ'α'
[15:52:20] <cadmio> by replacing alpha with alphadelta you get the same permutation tau
[15:52:25] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[15:53:24] <quantum> I'll write it out a different way
[15:55:43] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:55:55] *** Joins: flynn (~mcbloch@user/flynn)
[16:02:11] <quantum> cadmio: http://mathb.in/63357
[16:02:41] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[16:06:09] <quantum> Since `sgn :  S_n \to {-1,1}` is a group homom. with kernel `A_n`, it's pretty easy to show that any element conjugate to an element of `A_n` is also in `A_n`
[16:07:26] *** Joins: caramel_ (~caramel@user/caramel)
[16:10:27] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 240 seconds)
[16:11:29] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[16:13:01] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[16:15:24] <cadmio> ok thanks I'll try to study you proof
[16:15:25] <cadmio> see you
[16:15:36] *** Quits: cadmio (~cadmio@151.43.179.45) (Quit: WeeChat 3.0)
[16:20:00] *** Joins: voidah (~voidah@user/voidah)
[16:29:00] *** Joins: dez (uid92154@user/dez)
[16:30:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:31:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:33:18] *** Joins: numsima (~numsima@101.175.64.73)
[16:33:25] *** Joins: gggp (~textual@111.63.14.115)
[16:33:46] *** Quits: dld (~davidlowr@2601:197:600:1210:2dc5:f09c:7b2e:fda2) (Ping timeout: 250 seconds)
[16:35:15] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[16:35:29] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 244 seconds)
[16:37:42] *** Joins: oxide (~lambda@user/oxide)
[16:39:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:41:05] <[itchyjunk]> uh
[16:42:01] <[itchyjunk]> if i have a value from [0,1) and i wanted a value from {0,1,2,3}, i just take my first value and multiply is by 4 and ignore the decimal point?
[16:42:10] <[itchyjunk]> i know there are different ways to do it
[16:42:21] <PlanckWalk> Yes, that's one way to do it
[16:43:18] <[itchyjunk]> okay great!
[16:43:23] <PlanckWalk> Or you coudl multiply by 2^247 and look at the last two bits
[16:43:38] *** plankster is now known as plankers
[16:43:45] <PlanckWalk> (before the binary point)
[16:44:04] <PlanckWalk> Or the first two bits after, your choice
[16:44:32] <[itchyjunk]> that sounds crazy
[16:46:03] <kobalt> I guess there cannot be a bijection from an uncountably infinite set to a finite set. Are you trying to generate random numbers.
[16:46:06] <PlanckWalk> Crazy would be taking the very last 2 bits
[16:46:18] *** Quits: umamisoup (uid511883@id-511883.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[16:48:10] <PlanckWalk> There are lots of other partitions of the interval into four sets of equal measure.
[16:49:57] <PlanckWalk> You could repeatedly multiply by 5 until you get a result in [1,5), then drop decimal and subtract 1.
[16:50:45] <int-e> PlanckWalk: what about 0 :-P
[16:50:48] <PlanckWalk> (You can assign 0 to whatever you like))
[16:50:52] <PlanckWalk> It has measure 0
[16:51:03] <int-e> PlanckWalk: but it's still in the set [0,1)
[16:51:06] <PlanckWalk> Yes.
[16:51:12] <PlanckWalk> You can assign 0 to whatever you like.
[16:51:13] <int-e> so you have to map it somewhere, and you didn't
[16:52:12] * PlanckWalk is pretty sure that "You can assign 0 to whatever you like" is a mapping
[16:52:20] <PlanckWalk> Or really, it's a choic of 4 mappings
[16:53:16] <PlanckWalk> If you really want me to choose which mapping, I'll say map 0 to 2.
[16:53:28] <int-e> PlanckWalk: you added that after I inquired about 0 though
[16:53:40] <PlanckWalk> I added that 1 second before you inquired
[16:53:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[16:53:59] <int-e> well, no, not from my perspective
[16:54:29] <plankers> yall talking about quantum electrodynamics
[16:54:30] <int-e> I guess that's IRC.
[16:54:42] <plankers> i remember all the weird arbitrary choices of constants from that class and not much else lol
[16:54:56] <PlanckWalk> Yeah, IRC doesn't guarantee ordered messages
[16:55:33] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[16:55:34] *** Joins: qbt (~edun@user/edun)
[16:55:45] <quantum> It makes things doubly confusing when you're viewing things through the matrix bridge
[16:56:40] <plankers> "so now we just make the planck length equal to the planck mass equal to the planck time and they all equal one and it works out fine"
[16:56:46] <plankers> like what ok i guess
[16:56:48] <quantum> oh yeah, int-e I set up the QFT reading group site
[16:57:13] <PlanckWalk> Of course for even more fun, I could have started with "let V be a vector space basis of R over Q, and ..."
[17:01:06] <quantum> I once put together a list of terrible consequences of the axiom of choice with a friend
[17:01:06] <quantum> I think we called it a list of "counterexamples" to the AxC
[17:01:06] <PlanckWalk> You mean awesome consequences
[17:01:06] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:01:54] <quantum> The fact that R has a Q-basis is a lie promulgated by heretical logicians
[17:01:57] <quantum> </s>
[17:01:58] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[17:02:57] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[17:04:36] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[17:05:21] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[17:06:09] * PlanckWalk can't recall whether the Axiom of Determinacy proves the nonexistence of such a basis or not
[17:06:10] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 240 seconds)
[17:07:06] <PlanckWalk> Ah right, all sets of reals are Lebesgue measureable so it does
[17:08:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Ping timeout: 250 seconds)
[17:08:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:09:15] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[17:09:40] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[17:09:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[17:10:35] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[17:12:03] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: Dima[m] (~reddima10@2001:470:69fc:105::366) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: lo (~loyonmatr@2001:470:69fc:105::d3) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: atx (~atx@2001:470:69fc:105::923) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: Tisoxin (~ikosit@user/ikosit) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: sp (~susammatr@2001:470:69fc:105::31bc) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: Lucifargundam[m] (~lucifargu@2001:470:69fc:105::2faa) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: phimeister (~phiphirip@2001:470:69fc:105::bf2d) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: Freemo[m] (~freemoqot@2001:470:69fc:105::c203) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: mofeing (~mofeing@2001:470:69fc:105::d17f) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: dunpeal (~dunpeal@2001:470:69fc:105::3e80) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: kreyren[m] (~kreyrentc@2001:470:69fc:105::bafb) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: yangneo (~yangneo@user/yang-neo) (Quit: Bridge terminating on SIGTERM)
[17:12:07] *** Quits: quasisphere[m] (~quasisphe@2001:470:69fc:105::dbd2) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[17:13:50] *** Joins: oxum (~oxum@106.203.195.217)
[17:14:46] *** Joins: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b)
[17:16:22] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[17:18:00] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:18:55] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[17:19:24] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[17:19:24] *** Joins: kadoban (~kadoban@user/kadoban)
[17:19:24] *** Joins: atx (~atx@2001:470:69fc:105::923)
[17:19:24] *** Joins: lo (~loyonmatr@2001:470:69fc:105::d3)
[17:19:24] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[17:19:24] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[17:19:25] *** Joins: sp (~susammatr@2001:470:69fc:105::31bc)
[17:19:25] *** Joins: phimeister (~phiphirip@2001:470:69fc:105::bf2d)
[17:19:25] *** Joins: Freemo[m] (~freemoqot@2001:470:69fc:105::c203)
[17:19:25] *** Joins: Lucifargundam[m] (~lucifargu@2001:470:69fc:105::2faa)
[17:19:25] *** Joins: kreyren[m] (~kreyrentc@2001:470:69fc:105::bafb)
[17:19:25] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:19:25] *** Joins: mofeing (~mofeing@2001:470:69fc:105::d17f)
[17:19:25] *** Joins: Tisoxin (~ikosit@user/ikosit)
[17:19:25] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[17:19:25] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[17:19:25] *** Joins: jinsun_ (~jinsunmat@2001:470:69fc:105::e50b)
[17:19:25] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[17:19:26] <greenbagels> which one is determinacy
[17:19:37] *** Joins: quasisphere[m] (~quasisphe@2001:470:69fc:105::dbd2)
[17:19:38] *** Joins: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a)
[17:19:39] *** Joins: yangneo (~yangneo@user/yang-neo)
[17:20:06] *** Joins: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org)
[17:21:33] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[17:22:39] *** Joins: oxum (~oxum@106.203.195.217)
[17:23:16] <PlanckWalk> The weird one about infinite games, or equivalently infinite alternating existential and universal quantified statements.
[17:25:21] *** Joins: hyiltiz (~quassel@31.220.5.250)
[17:25:41] <jpearse> PlanckWalk: i'm not really a maths guy (a lowly computer scientist) but i have a sort of interest in the reals, axiom of determinacy and axiom of choice. so you're making me ponder a lot...
[17:27:19] <greenbagels> PlanckWalk: never heard about it, but reading up on it, it seems like its incompatible with choice
[17:27:52] <greenbagels> can you say anything about whether non-measurable sets exist without choice? im only aware of the vitali set construction
[17:30:05] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:30:20] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[17:30:36] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[17:30:36] *** Joins: Bayes (~Bayes@user/bayes)
[17:35:43] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[17:38:15] <[itchyjunk]> my code has an issue
[17:38:25] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[17:38:37] <[itchyjunk]> the number i get form [0,1) includes stuff like 0.001 etc
[17:38:48] <[itchyjunk]> so my code outputs 0 most of the time :<
[17:38:57] <dude12312414> ?
[17:39:09] <[itchyjunk]> Math.random() gives me [0,1)
[17:39:19] <[itchyjunk]> i want integers {0,1,2}
[17:39:33] <[itchyjunk]> i did Math.random()*3
[17:39:42] <[itchyjunk]> but doesn't work as expected
[17:40:05] <greenbagels> floor(rand(0,1)*3) ?
[17:40:09] <dude12312414> is there a floor?
[17:40:34] *** Quits: robin_ (~robin@user/terpri) (Ping timeout: 252 seconds)
[17:40:56] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[17:40:56] *** jamtorus is now known as jellydonut
[17:42:06] <[itchyjunk]> hmm there is floor
[17:42:14] <greenbagels> or a typecast to integer
[17:42:15] <[itchyjunk]> so say rand picked 0.0001
[17:42:19] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[17:42:23] <[itchyjunk]> i was type casting to integer
[17:42:26] <[itchyjunk]> that doesn't helo
[17:42:34] <[itchyjunk]> because 0.001*3 gets type casted to 0
[17:42:38] <dude12312414> well yeah
[17:42:40] <[itchyjunk]> i get 0 most of the time
[17:42:43] <dude12312414> that's normal
[17:42:48] <greenbagels> how many times are you checking
[17:42:51] <[itchyjunk]> but why does floor work?
[17:43:00] <[itchyjunk]> i checked 10 times and i got 0's
[17:43:01] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Client Quit)
[17:43:12] <jpearse> PlanckWalk: one of the things that brought me to studying these topics was when I considered the paradox known as Thompson's Lamp and was wondering about how to formalise it.
[17:43:14] <[itchyjunk]> for a set {0,1,2}, that's doesn't seem random
[17:43:15] <greenbagels> run it 1000 times and plot the output
[17:43:46] <[itchyjunk]> dude12312414, does floor do something else here for me?
[17:44:11] <greenbagels> it doesnt do anything an integer cast wouldn't
[17:44:12] <dude12312414> well it just does the truncation to integer
[17:44:25] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[17:44:31] <dude12312414> the integer cast should do that too if it works properly
[17:45:28] <jpearse> [itchyjunk]: make sure you are doing something like var = Math.Random()*3 and not: var = Math.Random()*3; var = var * 3;
[17:45:29] <[itchyjunk]> i am getting better results with Math.floor for some reason :/
[17:45:51] <[itchyjunk]> i am doing int var = (int) (Math.random()*3);
[17:46:10] <buster> an integer cast might overflow where the floating-point floor() function would only lose precision
[17:46:20] <greenbagels> you can't check this thing with only 10 samples
[17:46:28] <[itchyjunk]> oh
[17:46:31] <buster> well, that doesn't overflow :)
[17:46:36] <[itchyjunk]> i think i found the issue
[17:46:37] *** Quits: Xinayder (~alex@user/xinayder) (Ping timeout: 252 seconds)
[17:46:43] <Juliu> buster, since he is storing it in an int anyway ...
[17:46:46] <[itchyjunk]> it was parenthesis issue i think
[17:46:49] <dude12312414> stupid question but are you actually calling random() each time? Or is it a "random" number a-la xkcd?
[17:47:10] <[itchyjunk]> the Math.floor() was woring properly
[17:47:23] <[itchyjunk]> but my (int) was only applying to the first value it sees
[17:47:29] <Juliu> What does Math.random() do?
[17:47:34] <[itchyjunk]> (int) ( ( .. ) ) fixed it
[17:47:51] <[itchyjunk]> idk what it does but it returns a double \in [0,1)
[17:47:58] <dude12312414> ah
[17:48:16] <[itchyjunk]> idk how random number functions would work
[17:48:28] <[itchyjunk]> somehow tap in the entropy of universe and trun it into a number?
[17:48:35] <dude12312414> yeah if it thought it was ((int)Math.Random())*3 then you always get 0
[17:48:36] <Juliu> So you want a random integer that is either 0, 1, or 2, equally distributed?
[17:48:50] <[itchyjunk]> dude12312414, yes that's what happened :(
[17:48:53] <[itchyjunk]> but it works now
[17:49:44] <jpearse> Lavarand is a hardware random number generator designed by Silicon Graphics that works by taking pictures of the patterns made by the floating wax in lava lamps, extracting entropy data from the pictures, and using the result to seed a pseudorandom number generator.
[17:49:54] <Juliu> In case the random number generator returns a random interger in the range from 0 to MAX, it is not that straightforward to convert it to a random 0 to n range as most people believe
[17:49:57] *** Joins: Xinayder (~alex@user/xinayder)
[17:50:38] <[itchyjunk]> mine returns a double
[17:51:00] <Juliu> Try my example :)
[17:51:11] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[17:51:45] <Juliu> I.e. convert {0,1,2, ... M} to {0,1,2,... N}
[17:52:14] <lericson> where N < M?
[17:52:18] <Juliu> Yes
[17:52:29] <Juliu> N <= M
[17:53:41] <lericson> just mod M
[17:54:00] <Juliu> Most would simply do n = (int) ((m/M) * N)
[17:54:43] <Juliu> m is already in the range 0 ... M; All mod M would do is put it in the 0 ... M-1 range
[17:55:01] <lericson> just mod N+1 then
[17:55:20] <Juliu> You probably meant mod N, which is also not correct, since it does not preserve the uniform random distribution
[17:55:31] <Juliu> or mod (N+1)
[17:55:38] <kxkamil> drop numbers from N+1...M
[17:56:06] <Juliu> kxkamil, not is not deterministic in case it is real randomness, so the program might eventually never terminate
[17:56:09] <kxkamil> will not work for N << M
[17:56:14] <Juliu> *this is not
[17:56:44] <Juliu> It also becomes very inefficient in case N is much smaller than M
[17:56:47] <lericson> i think this is fairly contrived
[17:56:58] <kxkamil> well, real rundomness is hard
[17:57:03] <Juliu> True
[17:57:07] <lericson> when people do modulus, it's not between 10 and 3
[17:57:15] <lericson> it's usually 2^20 and something much, much less
[17:57:20] <lericson> which is for all intents and purposes random
[17:57:35] <lericson> but fair point i guess
[17:58:30] <Juliu> lericson, lets say you have a random integer between 0 and 100, and you do mod 66. Then you would get the first half of your new numbers 2 times as likely as the later half
[17:58:36] <lericson> i know that
[17:58:39] <lericson> but this is again contrived
[17:59:05] <Juliu> It is only useful of M is large and N is small, so this effect can be neglected
[18:00:30] <Juliu> The best solution for this problem that I can think of is n = floor( (m / (M+1)) * (N+1) ), an no one ever does this correctly
[18:00:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:00:39] <lericson> but yeah i think kxkamil's approach is what typically happens in less contrived scenarios where this arises, it's simply rejection sampling
[18:00:52] <lericson> ha i've seen that before i think
[18:01:01] <lericson> in the QBASIC help for RAND() or something
[18:01:13] <Juliu> kxkamil's approach might end up having an exponential runtime, so we would basically wait forever
[18:01:14] <lericson> because it returned 0..65535
[18:02:55] <Juliu> Anyway, I just wanted to meantion this, since basically no one ever does this conversion correctly. So [itchyjunk] is lucky that his random number generater outputs something in [0,1)
[18:03:00] <kxkamil> hmm, so maybe construct bits of randomnes from N+1... numbers
[18:03:11] <kxkamil> and get onw from 0...N
[18:03:22] <Juliu> kxkamil, nice idea!
[18:03:28] <Juliu> That would work
[18:03:41] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[18:03:48] <greenbagels> kxkamil: im sure that's what random number generation libraries in modern languages do
[18:03:54] <kxkamil> but your formula m/(M+1) mod (N+1) maybe better ... hmm ...
[18:04:19] <Juliu> kxkamil, of course it woulds still have the problem with the determinism
[18:04:33] <lericson> the suggested formula does not result in a uniform distribution
[18:04:50] <Juliu> greenbagels, I bet those even those random number generator libraries do it incorrectly
[18:04:56] <Juliu> -those
[18:05:05] <kxkamil> only if you get random bits slow
[18:05:05] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[18:05:20] <lericson> https://bpa.st/M32Q results in this https://bsg.lericson.se/jing/sqU6oIpvTr5y.png
[18:05:21] <greenbagels> Juliu: doubtful; there are a lot of tools out there for analyzing sets of random numbers
[18:05:25] <Juliu> kxkamil, "my" formula does not use a mod. It just uses / and *
[18:06:03] <Juliu> greenbagels, I wouldnt trust "random" numbers too much, since for almost all applications they just are good enough
[18:06:09] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[18:06:35] <greenbagels> sure; i wouldn't trust anything except an auditable hardware RNG to give me random numbers
[18:06:56] <Juliu> But of course in practive we could simply do what kxkamil suggested
[18:06:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[18:07:12] *** Joins: samir (~azureuser@user/samir)
[18:07:47] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[18:07:51] <Juliu> Depending on the way those libraries generate the random number, there might be a way to already include the maximum into this process
[18:08:51] <kxkamil> you can also do random walk in 0...M
[18:09:31] <Juliu> What do you mean?
[18:09:49] <kxkamil> sorry, in 0...N
[18:10:00] <Juliu> I still dont know what you mean :)
[18:10:19] <kxkamil> start from N/2
[18:10:36] <Juliu> And then?
[18:10:53] <kxkamil> no, sorry, bad idea
[18:11:48] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[18:11:52] <Juliu> no problem
[18:12:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:12:41] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c005-d117-11eb-28f3.res6.spectrum.com)
[18:13:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:13:11] <Juliu> Let's simply solve this problem like true computer scientists and say M and N are forbidden to be non-powers-of-2
[18:13:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:13:50] <Juliu> Who needs a number that is not a power of 2 anyway?
[18:13:52] <lericson> it's fine if n divides m
[18:14:16] <Juliu> How do we find the numbers that devide m ?
[18:15:00] <jpearse> not quickly enough
[18:15:09] <lericson> by construction, of course
[18:15:22] <Juliu> I mean of course n is given here, but in case n was not given
[18:15:23] <lericson> the easiest is to let m = n ;)
[18:15:39] <Juliu> lericson, cheater
[18:16:05] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[18:16:07] <Juliu> How about n = 0 ? Then we always get perfectly random variables in the range between 0 and 0
[18:16:35] <Juliu> I bet we can even guarantee the uniform distribution in that case
[18:16:51] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[18:17:08] <lericson> you could just map everything to 0 anyway and claim that, while unlikely, the numbers are sampled from a uniform distribution
[18:19:08] *** Joins: Dragoon (~Dragoon@e244041.upc-e.chello.nl)
[18:20:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[18:20:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[18:20:45] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net)
[18:21:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:21:26] <Juliu> That does not solve the problem of how we find the numbers that divide m
[18:21:35] *** Joins: dld (~davidlowr@2620:6e:6000:2900:3d0a:b99:963f:cf07)
[18:22:04] *** Quits: Dragoon (~Dragoon@e244041.upc-e.chello.nl) (Quit: WeeChat 3.2)
[18:22:18] *** Joins: Dragoon (~Dragoon@user/dragoon)
[18:23:22] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:24:43] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[18:25:05] *** Joins: zacts (~zacts@user/zacts)
[18:27:36] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[18:29:42] <Juliu> It seems the question is too hard for the math geeks in here
[18:31:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[18:31:19] *** Quits: cryptomonad (~cryptomon@194.191.225.149) (Read error: Connection reset by peer)
[18:31:28] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[18:34:36] *** Quits: cryptomonad (~cryptomon@194.191.225.149) (Client Quit)
[18:35:15] *** Quits: Guest3411 (~Guest34@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[18:36:36] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[18:39:10] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[18:39:18] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:39:29] *** Quits: voidah (~voidah@user/voidah) (Ping timeout: 244 seconds)
[18:39:55] <jpearse> The general number field sieve is the fastest known classical algorithm for factoring numbers over 10100. The Quadratic sieve algorithm is the fastest known classical algorithm for factoring numbers under 10100.
[18:40:30] *** Quits: mgrabovs (~mgrabovs@redhat/mgrabovs) (Quit: Carpe diem)
[18:41:38] <Juliu> I doubt that you can give an exact number from which on your method is faster, but ok
[18:43:46] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[18:44:24] *** Joins: zacts (~zacts@user/zacts)
[18:44:29] *** Joins: oxum (~oxum@106.203.195.217)
[18:48:53] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[18:49:17] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 245 seconds)
[18:49:30] *** Quits: lericson (~lericson@user/lericson) (Remote host closed the connection)
[18:49:47] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 240 seconds)
[18:50:10] *** Joins: robin (~robin@user/terpri)
[18:51:31] <riv> i should implement Quadratic sieve one day
[18:51:35] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[18:52:15] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[18:52:43] *** Joins: voidah (~voidah@user/voidah)
[18:54:24] <savask> Recently they factored RSA-232 by some super-optimized version of the general number field sieve
[18:54:41] <riv> cool!
[18:54:50] <riv> almost 256 bits, wow!
[18:54:53] <riv> except not...
[18:55:01] <riv> i guess every bit is a big jump up
[18:55:31] <Juliu> Time to invent a better method
[18:55:39] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:56:11] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Quit: Leaving)
[18:56:38] <savask> riv: Funny that RSA-240 was factored earlier than RSA-232 https://en.wikipedia.org/wiki/RSA_Factoring_Challenge#The_prizes_and_records
[18:56:51] *** Joins: XCode (~Username@d66-222-211-170.abhsia.telus.net)
[18:57:10] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[18:57:12] <riv> hmm i guess there's a lot of randomness in factoring
[18:57:15] <riv> that's interesting
[18:57:34] <riv> alternative inference: 240 bits is actually more secure than 232 bits
[18:58:33] *** Joins: lericson (~lericson@user/lericson)
[18:58:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 244 seconds)
[19:00:02] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[19:00:22] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:2daa:f38a:b2b7:ac83) (Ping timeout: 252 seconds)
[19:00:50] <Juliu> Maybe a lot more encryptions are already broken but the public just doesnt know about it
[19:01:27] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44)
[19:01:34] <jpearse> the history of the DES encryption s-boxes is actually kinda fascinating
[19:02:12] *** Quits: XCode (~Username@d66-222-211-170.abhsia.telus.net) (Quit: XCode)
[19:02:45] <jpearse> turns out the U.S. govt knew about differencial cryptanalysis techniques that were a few decades ahead of the public.
[19:05:06] <Juliu> I still think that cryptography is a myth
[19:05:17] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net) (Ping timeout: 256 seconds)
[19:05:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[19:07:41] <riv> Juliu, Great contribution to the chat man! XD so awesome that you are here and write this fucking shit
[19:09:28] <Juliu> Not my fault you dont understand what I mean
[19:09:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:14:39] *** Quits: D-04 (~D-04@217.138.194.126) (Ping timeout: 250 seconds)
[19:15:48] *** Joins: D-04 (~D-04@45.87.212.70)
[19:17:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[19:17:53] *** [_] is now known as [itchyjunk]
[19:23:10] *** Joins: DarkSeid_ (~textual@94.3.103.210)
[19:23:51] *** Joins: hyiltiz (~quassel@31.220.5.250)
[19:24:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:25:33] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:25:52] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:26:04] *** Joins: flynn (~mcbloch@user/flynn)
[19:26:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:29:42] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[19:32:11] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 244 seconds)
[19:32:57] *** Quits: arseniiv (~arseniiv@94.41.82.46.dynamic.ufanet.ru) (Ping timeout: 245 seconds)
[19:33:09] *** Joins: Noventicx6 (~Noventicx@crux.uberspace.de)
[19:33:26] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[19:34:31] *** Joins: aakashi2009 (~aakashi20@103.61.255.3)
[19:34:31] *** Quits: aakashi2009 (~aakashi20@103.61.255.3) (Changing host)
[19:34:31] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[19:35:10] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Ping timeout: 240 seconds)
[19:35:11] *** Noventicx6 is now known as Noventicx
[19:35:17] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 244 seconds)
[19:35:27] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 250 seconds)
[19:36:17] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[19:36:20] *** Joins: magla (~gelignite@55d413e5.access.ecotel.net)
[19:36:44] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[19:39:55] *** Quits: Simplar (~Simplar@188.163.93.118) (Quit: Going offline, see ya! (www.adiirc.com))
[19:40:11] *** Joins: hyiltiz (~quassel@31.220.5.250)
[19:41:43] *** Joins: oxum (~oxum@106.203.195.217)
[19:45:36] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:46:43] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net)
[19:47:25] *** Quits: slidercrank (~slidercra@user/slidercrank) (Client Quit)
[19:47:46] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[19:50:30] *** Quits: mh_le (~Mads@user/mh-le/x-4465771) (Remote host closed the connection)
[19:50:30] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[19:51:24] *** Joins: oxum (~oxum@106.203.195.217)
[19:51:35] <lericson> i think you're a myth
[19:53:24] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[19:53:28] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[19:53:43] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:54:04] *** Joins: oxum (~oxum@106.203.195.217)
[19:54:14] *** Quits: Fohsap (~Muimi@60.20.219.231) (Remote host closed the connection)
[19:56:49] <Juliu> I exist, obviously. Cryptography might not
[19:56:59] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca)
[19:56:59] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca) (Changing host)
[19:56:59] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[19:57:01] <DarkSeid_> Hey all :) as a self-learner who wants to start studying mathematics (I did like, Calc I years ago) is it a good idea to do some pre-calc work before getting started in calculus? My goal is to learn linear algebra & most of the topics coming under the umbrella of "discrete mathematics" but im in no rush. I'm not gifted either, I tried working through Spivaks calculus book after I did Calc I years ago and it hurt my morale so much I stopped studying lol,
[19:57:01] <DarkSeid_>  couldn't answer any of the questions
[19:57:40] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[19:58:03] <BadK4rMa> pre-calc isnt required
[19:58:26] <BadK4rMa> its prly half and half.. some ppl dont study pre-calc and some do
[19:58:40] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[20:00:38] *** Joins: oxum (~oxum@106.203.195.217)
[20:01:09] <DarkSeid_> does it help with learning calc, or is just the basics that most people should know
[20:02:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:05:14] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[20:05:48] <BadK4rMa> its helpful its just like an inbetween step
[20:09:18] *** Joins: polyrob_ (~rob@user/polyrob)
[20:11:49] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[20:11:49] *** polyrob_ is now known as polyrob
[20:12:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net) (Ping timeout: 256 seconds)
[20:14:07] *** Joins: oxum (~oxum@106.203.195.217)
[20:16:37] *** Quits: voidah (~voidah@user/voidah) (Ping timeout: 244 seconds)
[20:19:01] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[20:29:30] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[20:30:01] *** Joins: voidah (~voidah@user/voidah)
[20:30:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[20:33:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:33:39] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net)
[20:36:07] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:36:22] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:36:55] *** Joins: p0indexter (~alpha@user/p0indexter)
[20:39:26] <greenbagels> DarkSeid_: the major boon of precalculus is getting familiarity with the mechanical properties of things like trigonometric functions
[20:39:45] <greenbagels> and knowing how to visualize a large variety of functions and how they transform under "simple" changes
[20:39:54] <DarkSeid_> yeah, and that's something i need to learn so i think it makes sense to do it :)
[20:39:59] <greenbagels> i agree
[20:40:02] <DarkSeid_> ty
[20:40:29] <DarkSeid_> now all i have to do is work in this study time around a full time job lol
[20:40:32] <greenbagels> however i don't know if that means there has to be a strict ordering of "you ahve to do all of these precalc topics before ever touching calculus" DarkSeid_
[20:41:10] <greenbagels> like for example the first chapter of spivak wouldn't need any of those trig or parent function topics, iirc
[20:41:14] <DarkSeid_> in the UK we have these things called A levels which are basically what you study for 2 years before you go to university, so ill work my way through the A level textbooks and that should be sufficient
[20:41:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[20:41:26] <greenbagels> ok; are they free resources?
[20:41:31] <DarkSeid_> the first chapter of spivak was literally impossible for me, it was all proof based stuff
[20:41:49] <DarkSeid_> yeah they are :) or very cheap textbooks, not expensive. like 15 dollars per book i think?
[20:41:58] <greenbagels> right that's the main difficulty of spivak i imagine; moving from primarily-computational math to mroe abstract and logic heavy math
[20:42:06] <greenbagels> at least, that was my main struggle
[20:42:08] <DarkSeid_> i mean if there's free resources with lots of exercises, im all ears
[20:42:28] <DarkSeid_> yeah, i've heard the book "how to prove it" can help, which i intend to get after i finish pre-calc\
[20:42:29] <greenbagels> no i just would never suggest someone spend like $100 on a high school / college precalculus textbook
[20:42:38] <DarkSeid_> oh god no, i couldn't if i wanted haah
[20:43:32] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:44:52] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[20:45:30] <DarkSeid_> i might try to supplement it with some MOOC's, so much good free stuff available
[20:47:10] *** Joins: aman (~aman@user/aman)
[20:47:14] <greenbagels> :) i will take this opportunity to advertise my alma mater's MOOC, heh
[20:47:35] <greenbagels> https://ximera.osu.edu/mooculus
[20:51:14] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 244 seconds)
[20:51:38] *** Quits: aman (~aman@user/aman) (Client Quit)
[20:53:18] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:54:02] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:54:46] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[20:54:47] *** Quits: mbuf (~Shakthi@122.178.229.44) (Quit: Leaving)
[20:55:52] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 252 seconds)
[20:57:13] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[20:58:24] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Remote host closed the connection)
[20:58:37] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[20:58:59] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[21:00:51] <DarkSeid_> greenbagels thanks!
[21:01:27] <DarkSeid_> im always unsure whether i should just pick the moocs from the "best" universities or not like MIT, because i don't know if they necessarily have the best actual moocs
[21:01:31] *** Joins: Drek45 (~jrept371@129.59.122.18)
[21:01:47] <greenbagels> i dunno
[21:02:06] *** Joins: darkapex_ (~darkapex@user/darkapex)
[21:03:23] <DarkSeid_> yeah, me neither lol
[21:03:38] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 244 seconds)
[21:04:29] <greenbagels> my suggestion is to dig in and move to something else if it doesnt work
[21:04:38] <greenbagels> this is probably similar to the "What's the best <X> textbook" question
[21:04:40] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[21:06:33] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net) (Ping timeout: 256 seconds)
[21:08:10] *** Quits: p0indexter (~alpha@user/p0indexter) (Ping timeout: 240 seconds)
[21:12:23] *** Joins: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net)
[21:13:43] *** Joins: p0indexter (~alpha@user/p0indexter)
[21:14:38] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:17:19] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[21:21:37] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:25:00] <DarkSeid_> greenbagels yep, true
[21:26:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[21:26:47] *** Joins: qeed_ (~qeed@072-190-106-143.res.spectrum.com)
[21:26:53] *** Quits: rubiksdream (~a@1-64-49-062.static.netvigator.com) (Ping timeout: 244 seconds)
[21:28:27] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 240 seconds)
[21:28:43] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[21:30:51] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:31:04] *** Joins: flynn (~mcbloch@user/flynn)
[21:32:13] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[21:32:43] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[21:34:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:34:15] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:34:55] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[21:35:46] *** Joins: arseniiv (~arseniiv@94.41.82.46.dynamic.ufanet.ru)
[21:36:14] *** Quits: DarkSeid_ (~textual@94.3.103.210) (Quit: Textual IRC Client: www.textualapp.com)
[21:38:46] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[21:39:12] *** plankers is now known as plank
[21:39:37] *** Quits: jinsun_ (~jinsunmat@2001:470:69fc:105::e50b) (Changing host)
[21:39:37] *** Joins: jinsun_ (~jinsunmat@user/jinsun)
[21:39:44] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:39:52] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 252 seconds)
[21:41:10] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[21:41:29] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:45:05] *** Joins: Koen_ (~Koen@246.244.88.92.rev.sfr.net)
[21:46:49] *** Joins: h4zel (~hazel@user/h4zel)
[21:48:32] *** Joins: Hercules (~Hercules@user/hercules)
[21:49:03] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Reconnecting)
[21:49:20] *** Joins: jinsun_ (~jinsun@user/jinsun)
[21:51:52] <Juliu> There is no such thing as best universities
[21:53:37] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44) (Ping timeout: 252 seconds)
[21:56:16] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44)
[21:59:02] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[22:02:36] <tusko> depends on the subject
[22:03:20] *** Parts: savask (~savask@Powder/Developer/savask) ()
[22:03:26] <greenbagels> it entirely depends on what you mean by "best" too
[22:04:02] <greenbagels> some universities have statistically significantly correlations on whether their students go on to do certain tasks (which, im obligated to reiterate, is a correlation)
[22:04:31] <tusko> Yeah, that's true. I would tend to emphasize their networks. I know, for example, that some investment banks, auditing and consulting firms, etc recruit from ~15 schools in the US.
[22:05:07] <tusko> You can get in from elsewhere, but you'll have a much more lubricated path if you are affiliated with one of those schools.
[22:05:32] <tusko> There is still fierce competition within the schools, of course.
[22:05:40] *** Quits: voidah (~voidah@user/voidah) (Ping timeout: 240 seconds)
[22:07:19] *** Quits: niston (~gridrun@user/niston) (Ping timeout: 252 seconds)
[22:08:27] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[22:11:23] *** Joins: Simplar (~Simplar@188.163.93.118)
[22:11:36] <Simplar> Am I allowed to do this? cos(x)-sin(x) = cos(x)-sqrt(1-cos^2(x))
[22:11:46] <Simplar> if x is an angle between 0 and pi/2 radians
[22:11:46] *** Quits: varjack (~unknown@user/varjack) (Remote host closed the connection)
[22:12:00] *** Joins: varjack (~unknown@user/varjack)
[22:12:38] <greenbagels> the pythagorean identity holds for all x
[22:13:08] *** Joins: HellCat (Lord@2601:18a:c000:5290:8115:296d:2b92:d249)
[22:13:33] *** Panther is now known as Guest6384
[22:13:33] *** Quits: Guest6384 (Lord@2601:18a:c000:5290:d4c1:b8a3:79b2:3b3b) (Killed (calcium.libera.chat (Nickname regained by services)))
[22:13:33] *** HellCat is now known as Panther
[22:14:47] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 240 seconds)
[22:15:14] *** Quits: Simplar (~Simplar@188.163.93.118) (Client Quit)
[22:16:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[22:16:15] *** Joins: bjs (sid190364@user/bjs)
[22:23:47] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[22:23:53] *** Joins: Maturion (~Maturion@78.11.168.109.cust.ip.kpnqwest.it)
[22:26:06] <qergle> as long as sin()≥0 you won't lose anything
[22:29:09] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net)
[22:29:38] <qergle> but say x=7π/4, then cos(x)-sin(x)=√2 but cos(x)-sqrt(1-cos^2(x))=0
[22:30:10] <greenbagels> tru i guess my answer was kind of misleading
[22:30:40] <qergle> pythagoras isn't failing, it's just that sqrt(x^2) can drop things.
[22:32:42] <greenbagels> right, thats why i said misleading
[22:32:55] <greenbagels> i could see them understanding my answer as a "yes"
[22:33:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:33:30] <greenbagels> i should've asked them why they were restricting it to their interval instead
[22:33:36] <greenbagels> a lesson for next time...
[22:39:34] *** Joins: genoobie (~genoobie@pool-74-110-61-101.bflony.fios.verizon.net)
[22:40:26] *** Quits: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[22:40:55] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 252 seconds)
[22:44:23] *** Quits: Dotz0cat (~Dotz0cat@h30.94.187.173.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[22:44:52] <Panther> "For many years I have wanted to write The Great American Differential Geometry book." M. Spivak
[22:45:05] <Panther> So.. he went and wrote 5. :)
[22:47:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[22:49:01] *** Joins: econo (uid147250@user/econo)
[22:57:49] *** Quits: Maturion (~Maturion@78.11.168.109.cust.ip.kpnqwest.it) (Ping timeout: 244 seconds)
[23:01:25] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:04:25] *** Joins: vysn (~vysn@user/vysn)
[23:06:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[23:06:35] *** Joins: XCode (~Username@node-1w7jra23mzp4eppqwa7c7hecu.ipv6.telus.net)
[23:08:25] *** Quits: econo (uid147250@user/econo) (Ping timeout: 252 seconds)
[23:08:31] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[23:08:34] *** Joins: econo (uid147250@user/econo)
[23:09:10] *** Joins: Simplar (~Simplar@188.163.93.118)
[23:10:52] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 245 seconds)
[23:13:05] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[23:16:42] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 245 seconds)
[23:26:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:28:46] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[23:28:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net) (Ping timeout: 256 seconds)
[23:29:12] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[23:29:52] *** Joins: hyiltiz (~quassel@31.220.5.250)
[23:32:30] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8938)
[23:34:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:37:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[23:41:02] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[23:41:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:53:10] *** Quits: Cale (~cale@cpef48e38ee8583-cm0c473de9d680.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[23:53:44] *** Joins: Cale (~cale@cpef48e38ee8583-cm0c473de9d680.cpe.net.cable.rogers.com)
[23:54:49] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:55:09] *** Joins: flynn (~mcbloch@user/flynn)
[23:58:16] *** Quits: kakashiAL (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de) (Ping timeout: 244 seconds)
[23:58:18] <Simplar> https://prnt.sc/1qwdn89 Here is a task I am trying to solve
[23:58:35] <Simplar> O1 is a point of intersection of all three angle bisectors
[23:58:43] <Simplar> O2 is a point of intersection of all three medians
[23:58:50] <Simplar> The task is to find O1O2
[23:58:59] <Simplar> I fail so hard with that angle
