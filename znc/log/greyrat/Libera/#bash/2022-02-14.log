[00:01:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:02:17] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[00:04:51] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[00:05:08] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[00:11:39] *** Joins: crashrep (~crashrep@user/crashrep)
[00:12:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:16:23] *** Quits: magla (~gelignite@d536720f.access.ecotel.net) (Quit: Stay safe!)
[00:20:07] *** Joins: xx (~xx@user/xx)
[00:22:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:22:16] *** Joins: themachine (~themachin@user/themachine)
[00:25:57] *** Joins: nyex (~Thunderbi@177.84.107.26)
[00:29:34] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:30:36] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[00:39:41] *** Joins: mknod (~mknod@user/mknod)
[00:41:07] *** Quits: FIlystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[00:45:30] *** Joins: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net)
[00:45:35] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Quit: l4s8g)
[00:47:01] *** Quits: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[00:54:57] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[00:55:30] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[00:56:25] *** Joins: lotharn (~kvirc@2600:8800:280:d400:b8d1:c94a:1b73:23ad)
[00:57:20] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:57:50] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[00:59:10] <Tach> larryv so, idea ?
[00:59:52] <emanuele6> you can't make another program call a function that you defined in your script.
[01:00:23] *** Joins: A|an (~Alan@173.218.175.171)
[01:00:24] <emanuele6> either write a separate script and make screen run that
[01:00:38] <emanuele6> s/^either //
[01:03:58] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[01:06:04] <larryv> Tach: without knowing what your scripts actually do, i'm afraid not
[01:06:59] <larryv> the question itself is nonsensical. HTTP is completely orthogonal to subshells
[01:06:59] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:07:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:09:39] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[01:09:58] <Tach> larryv how do you mean ?
[01:10:10] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[01:10:15] <Tach> I think it sees a subshell as it's own session ?
[01:10:34] <larryv> what is "it"?
[01:12:06] <znf> # touch test; touch 1.f 2.f 3.f; [ -f test ] && rm test && for i in *.f; do echo Include "$i"; done
[01:12:08] <shbot> znf: Include 1.f
[01:12:08] <shbot> znf: Include 2.f
[01:12:08] <shbot> znf: Include 3.f
[01:12:23] <larryv> !wayttd > Tach
[01:12:24] <greybot> Tach: What Are You Trying To Do?
[01:13:07] <Tach> larryv create an http basic auth using another script which I run from my main script
[01:13:33] <znf> what do you mean by creating "basic auth"?
[01:13:34] <emanuele6> what is "http bsaic auth"?
[01:13:51] <larryv> and what tool(s) are you using for this?
[01:14:15] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[01:15:33] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[01:15:48] *** Joins: sinaowolabi (~SinaOwola@160.152.112.1)
[01:16:08] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[01:16:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:17:21] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 250 seconds)
[01:22:02] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[01:24:13] <BoBeR182> hello
[01:24:31] <ElPresidente> hi
[01:24:35] <BoBeR182> is there a simple oneliner to move all files.ext into individual folders called files
[01:25:38] <larryv> define "simple"
[01:25:41] <BoBeR182> eg, /home/movies/file1.avi file3.mp4 into /home/movies/file1/file1.avi and /movies/file3/file3.mp4
[01:28:03] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[01:28:24] <phy1729> for f in *; do mkdir -- "${f%.*}"; mv -- "$f" "${f%.*}"; done
[01:28:30] <emanuele6> for f in *.*; do noext=${f%.*}; mkdir -- "$noext"; mv -- "$f" "$noext"; done
[01:28:42] <emanuele6> yeah same thing basically
[01:28:47] <phy1729> ah yeah suppose I should have *.*
[01:30:02] <emanuele6> if you have GNU mv, you could use   mv -n -t "$noext" -- "$f", just in case
[01:30:02] *** Joins: arinov (~arinov@213.194.126.155)
[01:31:03] <BoBeR182> if there's already dirs in /movies/ this won't break it?
[01:31:28] <phy1729> we didn't check the exit status of mkdir for that reason
[01:31:40] <BoBeR182> awesome
[01:31:43] <phy1729> of course if you use set -e that won't work, but set -e sucks
[01:32:04] <BoBeR182> i'm gonna run it in a test folder then try on production
[01:32:07] <BoBeR182> =P
[01:32:40] <emanuele6> > i want a oneliner   > production grade code
[01:33:47] <BoBeR182> https://twitter.com/stahnma/status/634849376343429120
[01:36:55] <Earnestly> mknod: https://github.com/buganini/bsdconv
[01:37:14] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[01:37:44] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:39:04] <mknod> Earnestly, yeah? I use uconv for this kind of stuff.
[01:39:31] *** Joins: rcernin (~rcernin@124.190.132.36)
[01:39:33] <Earnestly> mknod: Yes I remember you being great champion for uconv, thought to give you another for the collection
[01:39:33] <twkm> i like recode.
[01:40:01] <mknod> Earnestly, that's nice thank you.
[01:40:18] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:40:29] <Earnestly> And of course twkm for recode, as just noted lol
[01:41:23] <BoBeR182> thank you both phy1729 and emanuele6
[01:44:22] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[01:44:43] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[01:45:48] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:46:11] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[01:48:28] *** Quits: bluedust_ (~bluedust@59.89.210.247) (Remote host closed the connection)
[01:50:13] *** Joins: jensen (~jensen@65.78.100.184)
[01:50:29] *** Joins: zebrag (~chris@user/zebrag)
[01:54:09] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au)
[01:57:22] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:58:19] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[01:58:19] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[01:59:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[02:00:29] *** Joins: ElPresid1 (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:00:52] *** Quits: ElPresid1 (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[02:01:06] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:02:17] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.4)
[02:02:26] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[02:03:02] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:06:15] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[02:09:02] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[02:09:25] *** Quits: karabaja4 (~karabaja4@dh207-92-143.xnet.hr) (Remote host closed the connection)
[02:12:48] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[02:13:57] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Ping timeout: 240 seconds)
[02:15:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[02:15:39] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[02:15:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:16:30] *** Quits: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Quit: leaving)
[02:16:31] *** Joins: andril (~andril@097-068-232-130.biz.spectrum.com)
[02:16:47] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[02:17:04] *** Quits: nyex (~Thunderbi@177.84.107.26) (Quit: nyex)
[02:17:07] *** Joins: dob1 (~dob1@user/dob1)
[02:17:32] *** Quits: filename (~kilitary@185.193.143.131) (Remote host closed the connection)
[02:18:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:18:23] *** Quits: Alternity (~Alternity@user/alternity) (Ping timeout: 256 seconds)
[02:19:37] *** Joins: volga629 (~volga629@72.139.93.26)
[02:21:12] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:21:28] *** Joins: seninha (~seninha@user/seninha)
[02:22:15] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[02:25:27] *** Quits: andril (~andril@097-068-232-130.biz.spectrum.com) (Quit: WeeChat 3.4)
[02:25:32] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[02:25:56] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[02:27:59] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[02:28:09] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:28:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:28:36] *** Joins: andril (~andril@097-068-232-130.biz.spectrum.com)
[02:28:59] *** Quits: jinsun (~quassel@user/jinsun) ()
[02:29:01] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[02:29:19] *** Joins: jinsun (~jinsun@user/jinsun)
[02:30:17] <wuseman> n
[02:31:53] *** Joins: filename (~kilitary@185.193.143.131)
[02:33:02] *** Joins: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de)
[02:33:22] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:33:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:33:36] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:35:32] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:35:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:36:15] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:42:00] *** Joins: karabaja4 (~igor@dh207-92-143.xnet.hr)
[02:43:08] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:43:47] *** Quits: filename (~kilitary@185.193.143.131) (Quit: joined libera)
[02:44:12] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:44:45] *** Quits: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:45:08] *** Quits: libsys (~libsys@186.105.132.6) (Remote host closed the connection)
[02:45:17] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[02:45:27] *** Joins: libsys (~libsys@186.105.132.6)
[02:45:45] *** Joins: horribleprogram (~user@user/horribleprogram)
[02:45:50] <horribleprogram>      The bracket syntax for word boundaries is incredibly ugly.
[02:46:08] <horribleprogram> yeah says u, u neckbeard
[02:46:25] <horribleprogram> anyways how do I use the * pattern thingy
[02:46:46] <horribleprogram> cat file.txt | grep "Foo*Bar" doesn't return anything
[02:47:01] <horribleprogram> more specifically ls -l | grep "Foo*Bar"
[02:47:24] *** Quits: death_ (uid539874@id-539874.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:48:10] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 272 seconds)
[02:48:20] *** Quits: karabaja4 (~igor@dh207-92-143.xnet.hr) (Quit: WeeChat 3.4)
[02:48:22] <horribleprogram> cthulchu: yo
[02:48:35] *** Joins: karabaja4 (~igor@dh207-92-143.xnet.hr)
[02:48:49] <horribleprogram> lopid: yo
[02:49:05] <horribleprogram> CrtxReavr: yo
[02:49:11] <horribleprogram> ljharb: yo
[02:49:33] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:57] <larryv> do you mean .*
[02:50:06] *** Joins: polardroid (~polardroi@user/polardroid)
[02:50:13] <larryv> or are you actually trying to match FooooooooooooBar
[02:50:15] <horribleprogram> OMFG yes
[02:50:20] <larryv> grep 'Foo.*Bar' file.txt
[02:50:20] <horribleprogram> kk so it uses the preceding word
[02:50:26] <horribleprogram> character
[02:50:30] <horribleprogram> which is.
[02:50:37] <horribleprogram> any single character
[02:50:43] <horribleprogram> so it is greedy
[02:50:59] <horribleprogram> what about piping to grep
[02:51:05] <horribleprogram> ls -l | grep 'Foo.*Bar'
[02:51:06] <CrtxReavr> horribleprogram, you tagging me by mistake?
[02:51:16] <horribleprogram> no i tagged a bunch of ppl i knew would know
[02:51:22] <horribleprogram> or that i recongized at the very least
[02:51:50] <horribleprogram> so technically
[02:51:53] <larryv> ls -dl Foo*Bar
[02:52:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:52:08] <horribleprogram> ahh
[02:52:15] <horribleprogram> i didn't know ls had a -d
[02:52:32] <horribleprogram> okay
[02:52:35] <horribleprogram> see how that syntax is different
[02:52:47] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[02:52:52] *** Joins: filename_ (~kilitary@185.193.143.131)
[02:53:06] <larryv> yes. globs are not regular expressions
[02:53:09] <horribleprogram> ahh
[02:53:10] <horribleprogram> kk
[02:53:24] <horribleprogram> wtf is the -d for then
[02:54:07] <horribleprogram> ty tho both works
[02:54:08] <larryv> to avoid some unwanted behavior
[02:54:09] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:54:18] <horribleprogram> i like the ls way better when I'm using ls
[02:54:40] <horribleprogram> larryv: ahh kk
[02:54:51] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[02:54:57] <horribleprogram> larryv: ty Larry
[02:55:20] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[02:55:55] <horribleprogram> also
[02:56:00] <horribleprogram> is that case sensitive
[02:56:09] <horribleprogram> ahh it's not
[02:56:16] <horribleprogram> how I make it case insensitive
[02:56:41] <horribleprogram> the matching of literals is case sensitive
[02:56:48] *** Quits: karabaja4 (~igor@dh207-92-143.xnet.hr) (Quit: WeeChat 3.4)
[02:57:01] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[02:57:06] *** Joins: karabaja4 (~igor@dh207-92-143.xnet.hr)
[02:57:06] <senoraraton> Why does this recursively call itself?  And how do I make it execute just one.  https://termbin.com/4xm
[02:57:22] <horribleprogram> lol 3 letters
[02:57:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:57:53] <larryv> senoraraton: that URL is broken
[02:58:08] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[02:59:18] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[02:59:40] *** Quits: Strykar_ (~wakka@signald/Strykar) (Quit: Leaving.)
[03:01:29] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933)
[03:02:20] *** Quits: filename_ (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[03:06:13] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Remote host closed the connection)
[03:06:45] *** Joins: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[03:07:36] *** Joins: euphoricallysane (~quatro@user/euphoricallysane)
[03:07:58] *** Quits: Hash (~Hash@hashsecurity.org) (Remote host closed the connection)
[03:08:16] *** Joins: moviuro_ (~moviuro@znc.popho.be)
[03:08:18] *** Joins: Hash (~Hash@hashsecurity.org)
[03:08:29] *** Quits: moviuro (~moviuro@znc.popho.be) (Ping timeout: 250 seconds)
[03:08:37] *** Joins: armands_ (~armands@46.109.8.165)
[03:08:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[03:08:49] *** Quits: armands (~armands@46.109.8.165) (Ping timeout: 256 seconds)
[03:09:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[03:09:18] *** Joins: filename (~kilitary@185.193.143.131)
[03:09:22] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:09:22] *** Quits: sdu (~sidu@185.44.146.61) (Ping timeout: 256 seconds)
[03:09:35] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Ping timeout: 250 seconds)
[03:09:52] <kurahaupo> senoraraton: you missed the last symbol off the URL
[03:10:01] *** Quits: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: amber[m] (~amberamba@2001:470:69fc:105::1:59c0) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: NRK (~nrkmatrix@2001:470:69fc:105::4e30) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: CarlFK (~carlfk@2001:470:69fc:105::5d8) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Ping timeout: 250 seconds)
[03:10:33] <senoraraton> >.<
[03:10:46] *** Joins: nunggu (~q@user/nunggu)
[03:10:49] <senoraraton> https://termbin.com/f4xm
[03:10:53] *** Joins: sdu (~sidu@185.44.146.61)
[03:10:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:11:44] <emanuele6> is that appending code to the running process?
[03:12:10] <kurahaupo> senoraraton: typo on line 7
[03:12:14] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:12:31] <senoraraton> Theoretically, my assumption was as such "The script executes" "You modify the script that is on the file system, but it doesn't effect the execution loop beacuse the original script got loaded.
[03:12:37] *** Quits: karabaja4 (~igor@dh207-92-143.xnet.hr) (Quit: WeeChat 3.4)
[03:12:40] <horribleprogram> no
[03:12:47] <horribleprogram> that's not the problem
[03:12:52] <horribleprogram> the process is already loaded
[03:13:10] <horribleprogram> it's reading and writing to the same file
[03:13:30] <emanuele6> horribleprogram: no, it is appending
[03:13:49] <horribleprogram> yes
[03:13:54] <horribleprogram> appending means to write
[03:13:54] <senoraraton> For the moment, although its supposed to update the count in line 2
[03:14:29] <senoraraton> The theory here is that the script edits itself to maintain a counter of the number of times it has been run.
[03:14:57] <emanuele6> horribleprogram: it is fine to do that, it is not the same thing as truncating a file that is being read.
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:02] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:15:06] <kurahaupo> senoraraton: (1) Shell scripts are read a bit at a time, so modifications can affect a running script. (2) sed will keep reading until End Of File, while at the same time it keeps writing and thus moving the end of file
[03:15:28] <senoraraton> So how should I do this?  Not use sed?
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:05] <tirnanog> (3) it's a bad idea anyway. write out a file to retain the applicable state instead.
[03:16:10] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 256 seconds)
[03:16:28] <senoraraton> Then its not self contained in a single file, and I have to track two seperate files one of which can/may/will not exist at some point.
[03:16:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[03:16:54] <kurahaupo> senoraraton: assume if the counter file does not exist, that the previous count was zero
[03:17:03] *** Joins: sinaowolabi_ (~SinaOwola@41.58.231.223)
[03:17:05] <horribleprogram> no I like his idea tho
[03:18:18] *** Joins: karabaja4 (~karabaja4@dh207-92-143.xnet.hr)
[03:18:44] <senoraraton> So the >> is the problem, and I really just want to modify line #2 so sed "shouldn't" need to read until the EOF if I explicity tell it "Replace line 2 with foo"?
[03:18:47] <kurahaupo> senoraraton: also, in the sed on the last line, $newline will be taken literally because its within single quotes. If you meant it to be expanded to the value set on the previous line, use double quotes instead
[03:19:00] *** Quits: jmew (~jmew___@user/jmew) (Ping timeout: 256 seconds)
[03:19:36] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[03:19:37] <kurahaupo> senoraraton: sed does not edit existing files; it reads and writes a stream.
[03:19:48] <kurahaupo> !sed-i
[03:19:48] <greybot> sed -i isn't portable; standard sed doesn't have it at all, GNU sed -i has an optional argument, and BSD sed -i has a mandatory argument. See !editing and <https://mywiki.wooledge.org/BashFAQ/021> for advice
[03:19:59] *** Joins: Strykar (~wakka@signald/Strykar)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:20] <emanuele6> or you could just use ed in this case
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5101:e86d:3ab2:4b8)
[03:21:14] <senoraraton> Thats pretty close to just copying the file to edit, which sort of defeats the constraint of doing it in a single file.
[03:21:17] <larryv> still only works if called from the directory the script is in
[03:21:38] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[03:21:38] <emanuele6> also not the the quoting final line is wrong, you are single quoting something that you want to expand
[03:21:42] <senoraraton> The idea here is not to use external memory structures, and modify the code in situ.
[03:21:48] <emanuele6> s/not the/note that/
[03:21:55] <kurahaupo> senoraraton: essentially, whenever you modify a text file, there are three options: 1. create a new file based on the original, and then rename it so that it replaces the old file. 2. create a new file (or hold the content in memory), and when finished, overwrite the whole of the original file. 3. If the modification does not change the length, use a tool such as dd to seek to the appropriate location and write just the bytes that need changing
[03:23:02] <senoraraton> So what your saying is to expand the #0 && #00 to #000 and use dd.  Time to figure that out...
[03:23:04] <larryv> also the third-to-last line doesn't do anything, unless you're calling the script with bash -e or something
[03:23:08] <kurahaupo> Note that option 2 results in a file that is temporarily inconsistent; option 1 results in a file that has owned by the person running the script, which may not be the same as the original owner
[03:23:59] <emanuele6> printf '%s\n' "2s/.*/$newline/" 'w' 'q' | ed -s plugininit.sh     would work
[03:24:03] <emanuele6> still not a good idea
[03:24:07] <kurahaupo> senoraraton: Option 3 is extremely brittle
[03:24:29] <kurahaupo> Using "ed" is essentially option 2.
[03:24:48] <senoraraton> I'm doing it the DD way, I still feel like using ed is equivalent to writing it to a file.
[03:25:07] <kurahaupo> using ed *does* write the whole file
[03:25:14] <emanuele6> you were appending before.
[03:25:25] <senoraraton> I want to replace though.
[03:25:28] <emanuele6> also you were not expanding $newline
[03:25:40] <senoraraton> I fixed that already, someone pointed it out way up there somewhere
[03:26:05] <kurahaupo> that was me :-)
[03:26:16] <emanuele6> well done :-)
[03:26:32] *** Joins: amber[m] (~amberamba@2001:470:69fc:105::1:59c0)
[03:26:43] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Remote host closed the connection)
[03:26:49] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[03:26:58] <kurahaupo> senoraraton: seriously, this is would be much better done by recording any persistent state in a separate file.
[03:27:02] *** Joins: euphoricallysane (~quatro@user/euphoricallysane)
[03:27:11] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[03:27:33] <senoraraton> "Better" is subjective. I have ZERO idea how to actually modify the bytes with DD, and didn't even know that was possible, and it meets all my critera, and its a fun show piece.  What more can you ask for?
[03:27:50] *** Joins: NRK (~nrkmatrix@2001:470:69fc:105::4e30)
[03:28:01] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[03:28:04] <kurahaupo> Oh, you want a shiny tech toy! Why didn't you say so. :-)
[03:28:18] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[03:28:47] *** Joins: CarlFK (~carlfk@2001:470:69fc:105::5d8)
[03:30:03] *** Quits: karabaja4 (~karabaja4@dh207-92-143.xnet.hr) (Quit: leaving)
[03:30:07] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:30:19] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:20] <kurahaupo> printf %-4d $((++counter)) | dd bs=1 skip=$((offset_calculation)) notrunc of="$0"
[03:30:44] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:21] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 276 seconds)
[03:31:37] *** Joins: volga629 (~volga629@72.139.93.26)
[03:31:43] <tirnanog> conv=notrunc
[03:31:49] *** Joins: blei (~blei@2601:280:c001:c2b0:3dfa:d8b:2346:5cd2)
[03:31:51] *** Joins: edk (edk@libera/staff/edk)
[03:35:07] *** Parts: blei (~blei@2601:280:c001:c2b0:3dfa:d8b:2346:5cd2) ()
[03:35:49] <kurahaupo> e.g. #!/bin/bash\ncounter=0 ###### spaces here\noffset=20\nprintf %-4d\   $((++counter)) | dd bs=1 skip=offset conv=nocreat conv=notrunc of="${BASH_SOURCE[0]:-$0}" 2>/dev/null || { echo >&2 "Can't update counter ; exit 62 ; }  # EX_OSFILE
[03:36:22] <kurahaupo> or maybe conv=nocreat,notrunc
[03:36:44] <senoraraton> So 6:05 < kurahaupo> e.g. #!/bin/bash\ncounter=0 ###### spaces here\noffset=20\nprintf %-4d\   $((++counter)) | dd bs=1 skip=offset conv=nocreat conv=notrunc of="${BASH_SOURCE[0]:-$0}" 2>/dev/null || { echo >&2 "Can't update counter ; exit 62 ; }  # EX_OSFILE
[03:37:08] <kurahaupo> also skip=$offset # missed the $
[03:37:36] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:38:02] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:38:05] <senoraraton> That will just run it from the file that executed it correct?  Assuming the second line of the file is the comment. Lets test it.
[03:39:40] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[03:40:06] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Quit: Leaving)
[03:41:21] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[03:42:59] <kurahaupo> senoraraton: How did your test go?
[03:43:17] <senoraraton> "Can't update counter"
[03:43:32] <senoraraton> There was a missing " in the echo statement.
[03:44:59] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[03:45:17] <kurahaupo> senoraraton: sorry, "seek" rather than "skip"
[03:45:18] <senoraraton> Well it ran that time without error
[03:46:00] <senoraraton> Ah ha, it overwrites the first comment block here..
[03:47:17] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:47:27] <kurahaupo> Turns out, dd doesn't return an error status if the 'skip' fails, or if after skipping there are 0 bytes of input left
[03:47:36] <senoraraton> It needs to modify the actual counter variable here though, no?
[03:47:41] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:48:06] <kurahaupo> senoraraton: that's what the ++ does
[03:48:20] <kurahaupo> senoraraton: change skip= to seek=
[03:48:36] <senoraraton> That doesn't persist though, the DD write needs to write to the actual counter variable
[03:48:39] <senoraraton> I did.
[03:48:40] <kurahaupo> #!/bin/bash
[03:48:40] <kurahaupo> counter=-1 ######
[03:48:40] <kurahaupo> offset=20 ; printf %d\   $((++counter)) | dd bs=1 seek=$offset conv=nocreat,notrunc of="${BASH_SOURCE[0]:-$0}"
[03:48:52] <kurahaupo> senoraraton: note "seek" rather than "skip"
[03:49:24] <senoraraton> This is my current test file https://termbin.com/d97h
[03:49:50] <senoraraton> I moved it down just to observe what is happening.  Counter is getting put at the head of the comment chain, and the variable is getting the old value/
[03:49:53] <senoraraton> ?
[03:50:05] <kurahaupo> You weren't supposed to put a comment before the counter= line
[03:50:19] <senoraraton> I added that as a test to see output
[03:50:48] <kurahaupo> senoraraton: also, you removed the «\  »
[03:51:05] <senoraraton> Remove it and run it, the output is not correct.
[03:51:14] <kurahaupo> that's *two* spaces, not just one
[03:52:07] <kurahaupo> Remove the «2>/dev/null» and observe the output; it should say «5 records written»
[03:52:17] <senoraraton> It works!
[03:53:16] <kurahaupo> If you prefer, you can write «printf '%-4d ' $((++counter))» rather than «printf %-4d\  $((++counter))»
[03:53:17] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (Ping timeout: 240 seconds)
[03:54:13] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[03:54:13] <senoraraton> How many bytes is each charachter?  I have to build two offsets to match the pattern in the main file
[03:54:33] <senoraraton> #Project #0 of #00 unfinished projects"
[03:54:45] <kurahaupo> senoraraton: if they're plain ASCII, just one
[03:55:46] *** Quits: jaysicks (~jaysicks@185-29-82-222.pool.digikabel.hu) (Remote host closed the connection)
[03:55:57] <kurahaupo> UTF-8 encodes characters with a varying number of bytes, increasing (logarithmically) as the code point number increases
[03:58:32] <kurahaupo> for code points below 128, it's just one byte; for code points between 128 and 2047 it's two bytes, between 2048 and 65535 it's 3 bytes, between 65536 and 2097151 it's 4 bytes
[03:59:22] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[03:59:24] <kurahaupo> senoraraton: another approach would be to just overwrite the whole of the start of the file, including the #!/bin/bash line; then you know that the offset is 0
[03:59:37] <kurahaupo> (which doesn't need to be specified)
[04:00:58] *** Quits: n4dir (~user@i59F77C2B.versanet.de) (Remote host closed the connection)
[04:01:34] <twkm> kurahaupo: sorry that took so long.  as an aside, the _-less nick should have been able to join.
[04:01:35] <kurahaupo> dd conv=nocreate,notrunc "of=${BASH_SOURCE[0]:-$0}" <<EndOfHeader\n#!$BASH\ncounter1=$((++counter1))\ncounter2=$((counter2+=counter1))\nEndOfHeader
[04:01:46] <kurahaupo> senoraraton: ^^^
[04:02:45] <kurahaupo> senoraraton: Make sure you leave a long row of ### on the 4th line of the script
[04:03:01] *** Joins: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[04:03:20] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 250 seconds)
[04:04:52] <kurahaupo> senoraraton: to aid maintainability, I would move the counter calculations outside the block (just put counter1=$((counter1)) counter2=$((counter2)) instead) and put that line block inside a function immediately after the header block, and then call it later after the counters have been updated
[04:05:07] *** Joins: ferdna (~ferdna@user/ferdna)
[04:05:20] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[04:14:32] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[04:14:51] *** Joins: igemnace (~ian@user/igemnace)
[04:16:49] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[04:17:17] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 240 seconds)
[04:18:15] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[04:18:31] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:19:08] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[04:21:15] *** Quits: jos1 (~jos3@dyndsl-091-096-038-094.ewe-ip-backbone.de) (Remote host closed the connection)
[04:22:45] *** Joins: Alternity (~Alternity@user/alternity)
[04:22:49] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[04:23:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[04:24:41] *** Joins: hentai (~hentai@user/hentai)
[04:26:17] *** Parts: hentai (~hentai@user/hentai) (Leaving)
[04:26:25] *** Joins: jos1 (~jos3@dyndsl-091-096-038-094.ewe-ip-backbone.de)
[04:26:25] *** Joins: hentai (~hentai@user/hentai)
[04:27:16] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:28:26] <hentai> Any bash linters known to the humankind?
[04:29:16] <tirnanog> !shellcheck
[04:29:17] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[04:29:24] *** Joins: luckiswithme (~luckiswit@149.167.138.19)
[04:32:04] <hentai> Under linting, I mean unminifying. Essentially a more context aware 's/;/;\n/'
[04:32:47] <hentai> ShellCheck afaik does not do that
[04:32:48] <phy1729> Who the hell minifies shell scripts?
[04:32:57] * hentai raises the hand
[04:32:59] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[04:33:05] <phy1729> Don't do that.
[04:33:06] <phy1729> !next
[04:33:06] <greybot> Another satisfied customer! Next please!
[04:33:09] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[04:33:28] <tirnanog> !pretty
[04:33:28] <greybot> bash --pretty-print yourfile (undocumented), or pretty() { printf 'pretty() { %s\n }; declare -f pretty' "$(cat)" | bash | sed '1d;2d;$d;s/^ //'; } ## Usage: pretty < myscript
[04:33:51] <hentai> tirnanog, Thanks
[04:35:11] <hentai> Would be nice to have a tool to unroll loops and expand some "constant" variables
[04:35:17] <hentai> But I wouldn't dare ask
[04:38:00] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 250 seconds)
[04:38:08] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[04:41:35] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[04:43:52] <OMGOMG> why would you want to unroll the nice loops
[04:45:27] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:46:51] *** Joins: karabaja4 (~karabaja4@dh207-92-143.xnet.hr)
[04:47:23] <phogg> pretty sure it should be called bash --ugly-print
[04:48:12] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[04:48:17] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[04:50:27] *** Joins: joo-_ (~joo-_@87-49-147-175-mobile.dk.customer.tdc.net)
[04:50:27] *** Quits: joo-_ (~joo-_@87-49-147-175-mobile.dk.customer.tdc.net) (Changing host)
[04:50:27] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[04:50:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:51:41] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 256 seconds)
[04:52:09] *** Joins: volga629 (~volga629@72.139.93.26)
[04:53:24] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:55:48] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[04:58:27] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[04:59:07] *** hentai is now known as Guest4056
[04:59:10] *** Joins: porn (~hentai@user/hentai)
[05:00:07] *** Joins: nunggu (~q@user/nunggu)
[05:01:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[05:02:01] <kurahaupo> okay, that's weird; bash --pretty-print moves redirections around, including moving the body of a heredoc to be as near as possible to the <<END token, which makes a mess of some formatting. And yet it preserves blank lines
[05:02:07] *** Joins: tccki (~tccki@box.webslate.co.nz)
[05:02:38] <kurahaupo> Also, which version of Bash added that? It's not in 4.3.48
[05:02:52] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[05:03:08] *** Quits: Guest4056 (~hentai@user/hentai) (Ping timeout: 250 seconds)
[05:03:14] <tirnanog> 5.0
[05:03:48] <kurahaupo> Yeah, it's not in 4.4.23p49 and is in 5.0.0beta
[05:04:09] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[05:05:30] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[05:06:13] *** Joins: foul_owl (~kerry@94.140.8.89)
[05:07:06] <phogg> hopefully it will get better over time. Seems weird that it does something quite different from what declare -f does
[05:09:19] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:b830:d829:9edc:9b1d)
[05:10:23] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:11:00] <kurahaupo> phogg: declare -fp is broken when you have a heredoc inside a function, because it indents the END tokens. At least, that's the case with 4.3.48
[05:11:05] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:11:19] <phogg> hmm...
[05:11:25] * phogg goes to check 5.x
[05:11:41] <kurahaupo> Still the case with 5.1.4p47
[05:11:48] *** Quits: karabaja4 (~karabaja4@dh207-92-143.xnet.hr) (Remote host closed the connection)
[05:12:01] <kurahaupo> I need to build some newer versions of Bash
[05:12:40] <phogg> got a test case? Looks okay from here (and I am not as new as that)
[05:13:56] <kurahaupo>  ( set -x; eval 'foo() { '"$( cat ~/tmp/bar )"$' \n }' && declare -fp foo )
[05:14:31] <kurahaupo> #!/bin/bash
[05:14:31] <kurahaupo> cat <<EoF1 3<<EoF2 | cat 4<EoF3
[05:14:31] <kurahaupo> heredoc1
[05:14:31] <kurahaupo> EoF1
[05:14:31] <kurahaupo> heredoc2
[05:14:31] <phogg> with what in ~/tmp/bar?
[05:14:32] <kurahaupo> EoF2
[05:14:32] <kurahaupo> heredoc3
[05:14:33] <kurahaupo> EoF3
[05:17:08] <phogg> my test was with only a single heredoc that looks like your EoF1 case. Looks like that works for you, too.
[05:18:53] *** Joins: help (~nick@191.187.169.210)
[05:19:53] *** Quits: help (~nick@191.187.169.210) (Remote host closed the connection)
[05:20:07] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[05:20:48] <kurahaupo> oh dang, I missed one <
[05:20:49] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:21:05] <kurahaupo> mea culpa
[05:21:17] * kurahaupo begs forgiveness from Chet
[05:21:26] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (Ping timeout: 272 seconds)
[05:21:43] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:22:24] <phogg> kurahaupo: I figured it out
[05:22:50] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:23:55] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[05:25:07] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 256 seconds)
[05:25:17] <tirnanog> $ ( eval 'foo() { '"$( cat bar )"$' \n }' && declare -fp foo )
[05:25:19] <tirnanog> bash: warning: here-document at line 62 delimited by end-of-file (wanted `EoF3')
[05:25:31] <tirnanog> if I change $' \n }' to $'\n }' then it's fine. seems suspect.
[05:25:38] <phogg> not sure it's functions as such, but it certainly does get confused in places
[05:25:49] <phogg> s/functions/here docs/
[05:27:20] <tirnanog> oh, it's because it adds a space after the heredoc identifier. never mind.
[05:27:25] *** Joins: ravan (~ravan@user/ravan)
[05:27:27] <kurahaupo> tirnanog: yeah that's what I get for random copy-pasting
[05:29:14] <kurahaupo> shell here-docs are very sensitive to exactly which bytes are used as whitespace, and where
[05:30:05] <texasmynsted> How do I use parameter expansion or some other mechanism to "replace the value of a parameter with '--stashed' when the parameter is 'true', ignoring case?
[05:30:15] <texasmynsted> Close
[05:30:16] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:18] <texasmynsted> des='True';echo ${des/true/--stashed}
[05:30:32] <texasmynsted> des='true';echo ${des/true/--stashed}
[05:30:47] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[05:30:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:31:16] <texasmynsted> if anything other than 'true', ignoring case, I want the $des parameter to be empty or undefined.
[05:32:18] <tirnanog> I wouldn't use parameter expansion to acheve it. it's too sloppy.
[05:32:44] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 256 seconds)
[05:33:06] <tirnanog> [[ $des == [Tt]rue ]] || des=
[05:33:19] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[05:34:41] <tirnanog> or, if the entire value should be compared in a case-insensitive fashion: [[ ${des,,} == true ]] || des=
[05:34:46] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 250 seconds)
[05:35:11] <kurahaupo> [[ ${des,, .... tirnanog beat me to it
[05:35:11] <phogg> # des=true; [[ ${des,,} == true ]] && des=--stashed || des=; declare -p des
[05:35:14] <shbot> phogg: declare -- des="--stashed"
[05:35:14] <phogg> # des=untrue; [[ ${des,,} == true ]] && des=--stashed || des=; declare -p des
[05:35:15] <shbot> phogg: declare -- des=""
[05:35:33] <kurahaupo> !&&||
[05:35:33] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[05:35:47] <phogg> smells like it wants an array of args to git
[05:36:33] <kurahaupo> [[ ${des,,} != true ]] ; des=$? ; .... if ((des)) ; then ...
[05:36:41] <senoraraton> My new shiny toy is amazing.
[05:36:57] <kurahaupo> senoraraton: I'm still concerned at how fragile it is
[05:37:08] <tirnanog> you only have yourself to blame :p
[05:37:25] *** Joins: vysn (~vysn@user/vysn)
[05:37:30] <tirnanog> granted, piddling wround with dd, in and as of itself, is interesting.
[05:37:44] <phogg> what's this toy? I like toys... especially shiny toys
[05:37:46] <tirnanog> in the broader context, it's just ridiculous though.
[05:37:56] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[05:38:22] <kurahaupo> !paste
[05:38:23] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[05:38:23] <texasmynsted> wow
[05:38:25] <texasmynsted> :-)
[05:38:27] <texasmynsted> [[ ${des,,} == true ]] && des=--stashed || des=;
[05:38:40] <texasmynsted> That seems like exactly what I need
[05:38:52] <phogg> texasmynsted: note the caveat about && .. || above
[05:39:05] <kurahaupo> texasmynsted: if [[ ${des^^} = TRUE ]] ; then des=(--stashed) ; else des=() ; fi
[05:39:17] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:39:19] <phogg> texasmynsted: kurahaupo has what you probably really want
[05:39:32] <texasmynsted> oooh right
[05:39:48] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (Ping timeout: 272 seconds)
[05:39:52] *** Joins: bluedust (~bluedust@59.89.210.247)
[05:39:56] <kurahaupo> then "${des[@]}" will expand to either 0 or 1 arg, while still being properly quoted, so weird IFS or globbing can't break it
[05:40:01] <texasmynsted> That is also easier to read and understand. Convert to uppercase, compare with TRUE, then set the value else set empty
[05:40:09] <phogg> when it's args to a command use an array, because zero elements is zero args but an empty arg is still an empty arg
[05:40:34] <phogg> convert to *upper* case? In my unix?!
[05:41:11] <kurahaupo> phogg: mainly to highlight that it's doing weird things with lettercase
[05:41:30] <texasmynsted> well I guess I could to ,, in place of ^^ and compare with true
[05:41:37] <texasmynsted> Then no upper case
[05:41:40] <tirnanog> you "guess"?
[05:41:47] <kurahaupo> phogg: also, in most scripts upper-lower-upper is idempotent, while lower-upper-lower may not be
[05:41:47] <texasmynsted> hehe
[05:41:59] <phogg> kurahaupo: admit it, you just want it to look cute (^_^)
[05:42:00] *** Joins: filename (~kilitary@185.193.143.131)
[05:42:30] <kurahaupo> [[ ${des,} = t[Rr][Uu][Ee] ]]
[05:43:03] <phogg> go upper case, comparing smaller numbers is (if anything) more efficient
[05:43:21] <kurahaupo> des=${des,,} des=${des^} ; [[ $des = True ]]
[05:43:24] <tirnanog> I eagerly await the benchmarks!
[05:43:27] <tirnanog> (not really)
[05:43:59] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[05:44:16] <texasmynsted> I did not expect the array use
[05:44:38] *** Quits: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[05:44:57] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 240 seconds)
[05:46:28] <phogg> texasmynsted: oh?
[05:47:07] *** Joins: Dotz0cat (~Dotz0cat@173.186.192.244)
[05:50:07] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[05:53:37] *** Joins: tccki (~tccki@box.webslate.co.nz)
[05:55:09] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[05:57:47] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[05:58:58] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:00:20] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 250 seconds)
[06:03:38] *** Joins: dtux (~dtux@2601:646:8f00:3f2:1a1f:46b2:5516:9cd2)
[06:04:14] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 250 seconds)
[06:04:19] *** Joins: volga629 (~volga629@72.139.93.26)
[06:04:40] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[06:04:56] <kurahaupo> senoraraton: https://termbin.com/7wj1 <- avoid needing to figure out $offset
[06:05:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:05:41] *** Quits: volga629 (~volga629@72.139.93.26) (Client Quit)
[06:06:18] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[06:06:22] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:08:06] *** Quits: TomyLobo (~TomyLobo@p200300e80f006700cc6e9ab645bdad3a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[06:11:00] <texasmynsted> :-) Thanks again.
[06:12:56] *** Quits: e0 (ec@user/e0) (Remote host closed the connection)
[06:13:56] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:b587:2924:8edf:18b1)
[06:14:36] <texasmynsted> Here is the script that the bit above fits into. Would anybody look at this an provide suggestions for improvement?
[06:14:38] <texasmynsted> https://gist.github.com/mmynsted/e3c1eb54f1ff0e056efe15dd1733b338
[06:19:05] <texasmynsted> I went with moving to lower case. I expect that I would use lower case all the time anyway.
[06:19:42] *** Quits: xx (~xx@user/xx) (Ping timeout: 272 seconds)
[06:20:18] <kurahaupo> texasmynsted: all of c1, c2, c3 etc should be arrays
[06:20:30] <texasmynsted> okay
[06:21:04] <kurahaupo> texasmynsted: use EITHER function name { block; } OR name() { block; }, don't use both "function" and "()"
[06:21:23] <texasmynsted> :)
[06:21:31] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[06:21:53] <kurahaupo> (I take the view, why use weird Bash extensions unless you need the functionality, and that particular extension does not offer any benefit)
[06:22:24] <texasmynsted> which extension?
[06:22:31] <kurahaupo> texasmynsted: why are you setting those to "readonly".
[06:22:40] <larryv> !function() > texasmynsted
[06:22:41] <greybot> texasmynsted: "foo()" is posix, and is what we strongly recommend. "function foo" is allowed by ksh and bash; in bash it means the same as "foo()" but in ksh it is different. "function foo()" is bash only, not allowed in ksh or posix.
[06:22:45] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:22:52] <kurahaupo> texasmynsted: using both "function" and "()" together is non-POSIX
[06:23:19] <texasmynsted> So using myfunction() is better than function myfunction ?
[06:23:39] <kurahaupo> texasmynsted: as a default, yes.
[06:23:44] <texasmynsted> okay
[06:23:48] <phogg> less typing, too
[06:24:17] <kurahaupo> "function" has the minor benefit that it avoids collisions with aliases, but otherwise the fact that its behaviour differs between ksh and bash is a point against it
[06:24:23] <tirnanog> regarding c1, c2 and c3, what would be the point? it's clearly generating shellcode so it would just end up being something like ${c1[*]} ${c2[*]} ${c3[*]} with no change in the overall behaviour.
[06:24:24] <texasmynsted> I like to set variable to read only where possible to remind myself that they should not change
[06:24:37] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:b587:2924:8edf:18b1) (Ping timeout: 240 seconds)
[06:25:00] <kurahaupo> texasmynsted: Sure, they don't change in the 4 lines before they go out of scope and disappear
[06:25:18] <kurahaupo> texasmynsted: why use multiple variables there in the first place?
[06:25:26] <tirnanog> that's a better question.
[06:25:33] <tirnanog> and the declare -r stuff is a bit meme-worthy.
[06:25:33] <texasmynsted> Well yes, that is the better question.'
[06:25:55] <tirnanog> the readonly attribute is a bit weird in practice.
[06:26:55] <texasmynsted> I will begin by converting to an array
[06:27:42] <phogg> I struggle to understand the need for this much indirection
[06:28:00] * phogg normally loves layers
[06:28:11] <kurahaupo> texasmynsted: this looks suspiciously like it's the sort of script that would be run as « sudo myscript » but then you have an open "$@" that just runs whatever args are provided, so you can't easily lock down sudo on that command (it's possible, but you need to enumerate all the subcommands in sudoers)
[06:29:51] <texasmynsted> I only have -> NOPASSWD:/opt/local/bin/port
[06:29:55] <texasmynsted> in sudo
[06:29:56] <kurahaupo> texasmynsted: Also in that context, using « #!/usr/bin/env ... » is prying a security hole half way open. Don't trust the env vars that are passed in.
[06:30:29] <texasmynsted> hmm. okay
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:05] <larryv> why make "tasks" an associative array if you're just going to use numeric keys?
[06:31:30] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:39] * kurahaupo wishes that [[ ]] had not duplicated *everything* that [ ] had, especially avoiding the numeric stuff that can be done using (( ))
[06:32:33] *** Joins: vlm (~vlm@user/vlm)
[06:32:42] <phogg> might have been nice, but I think better to allow it all to make the easy rule "just change [ to [["
[06:33:22] * kurahaupo prefers « if (( $# == 0 )) » over « if [[ $# -eq 0 ]] »
[06:34:01] *** Quits: vlm (~vlm@user/vlm) (Client Quit)
[06:34:01] *** Quits: lemonsni- (~lemonsnic@86.4.248.115) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:15] <e36freak> or neither?
[06:34:33] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 250 seconds)
[06:35:06] <tirnanog> here's an example of why readonly is annoying.
[06:35:09] <tirnanog> # declare -r foo; f() { local foo; }; f
[06:35:11] <shbot> tirnanog: bash: local: foo: readonly variable
[06:35:19] <e36freak> readonly is generally dumb/pointless
[06:35:32] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 272 seconds)
[06:35:33] <e36freak> it's not like you have a compiler optimizing for you
[06:35:44] <e36freak> if you don't want to write to it, just... don't
[06:35:52] <phogg> larryv: likely because he was thinking like this: declare a=($(echo one two) $(echo three four)); declare -A b=([0]=$(echo one two) [1]=$(echo three four)); declare -p a b
[06:36:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:36:31] <larryv> hmm
[06:36:39] <phogg> stringy lists are brain cancer
[06:36:40] <kurahaupo> texasmynsted: the indexes on lines 46 & 47 are misleading (and wrong, on line 47)
[06:36:58] <kurahaupo> err, 47 & 48
[06:37:27] <texasmynsted> wrong?
[06:37:36] <kurahaupo> texasmynsted: starting from index 1 on line 48 may overwrite some of the elements set by line 47
[06:37:55] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:37:56] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[06:38:48] <kurahaupo> texasmynsted: Also, how are the parameters to «pueue enqueue» decoded? Which shell is used to invoke the resulting string?
[06:39:06] <texasmynsted> bash
[06:40:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5101:e86d:3ab2:4b8) (Quit: Leaving)
[06:40:51] *** Joins: zebrag (~chris@user/zebrag)
[06:43:30] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:43:53] *** Quits: jos1 (~jos3@dyndsl-091-096-038-094.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[06:44:07] <kurahaupo> texasmynsted: I was kinda hoping for more elaboration. The point is to verify the number of layers of dequoting and other intepretation
[06:45:14] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:45:45] <texasmynsted> I guess I do not know the number of layers.
[06:46:04] <texasmynsted> pueue says that the shell escapes the command queued up
[06:46:37] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 240 seconds)
[06:46:56] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:47:02] <texasmynsted> okay I revised
[06:47:44] <texasmynsted> hopefully I am using the arrays better. I updated the shebang, changed to mynfunction() style.
[06:47:57] <kurahaupo> texasmynsted: shouldn't there be a command separator between the outputs from getMacportsCmd and from getBrewCmd ?
[06:48:06] *** Joins: RealKiller (~RealKille@104.210.65.79)
[06:48:09] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:48:13] <kurahaupo> texasmynsted: such as  '&&' or ';' ?
[06:48:18] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:26] *** Joins: karabaja4 (~karabaja4@dh207-92-143.xnet.hr)
[06:49:01] <texasmynsted> what line?
[06:49:10] <texasmynsted> oooh
[06:49:12] <texasmynsted> I see
[06:49:19] <texasmynsted> let me check
[06:49:29] <texasmynsted> It _works_ but let me see how/why
[06:49:52] <RealKiller> hey, I am trying this with date,  end=`date -u -d "30 minutes" ` , bash says incorrect usage. What am i doing wrong here?
[06:50:12] <kurahaupo> texasmynsted: I'm trying to figure out whether pueue enqueue works like ssh in that it takes all the args and mashes them into one string, which is subsequently parsed by a new shell, or whether it runs each arg as a separate command, or something else
[06:50:36] <larryv> # date -u -d "30 minutes"
[06:50:37] <shbot> larryv: Mon Feb 14 03:50:37 UTC 2022
[06:50:50] <texasmynsted> no command separator is needed.
[06:50:57] *** Quits: sinaowolabi_ (~SinaOwola@41.58.231.223) (Ping timeout: 240 seconds)
[06:51:15] *** Quits: sinaowolabi (~SinaOwola@160.152.112.1) (Ping timeout: 256 seconds)
[06:51:21] <texasmynsted> What is produced is this 'pueue enqueue 7 8', where 7 and 8 are the command IDs supplied by pueue.
[06:51:22] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 272 seconds)
[06:51:33] <e36freak> RealKiller: what version of date?
[06:51:34] <RealKiller> larryv, i dont get it sorry
[06:51:35] <larryv> RealKiller: guess your date(1) doesn't support using -d like that
[06:51:40] <kurahaupo> texasmynsted: I don't have pueue on my system (and I doubt I could install it, this not being a Mac)
[06:51:50] <texasmynsted> it is not mac only
[06:52:00] <texasmynsted> I think it was written for linux
[06:52:15] <texasmynsted> another rust thing
[06:52:28] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:52:33] <RealKiller> yea, it works in linux, i tried
[06:52:41] <RealKiller> guess it is not for Mac
[06:52:51] <texasmynsted> https://github.com/nukesor/pueue
[06:52:57] <texasmynsted> I am running it on two macs
[06:54:25] <texasmynsted> The command thing.. Lines 49 and 50 are weird to me because they need to get the ids from where the commands were added in a stashed state so they can be move to a queued state to begin running.
[06:54:29] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[06:54:33] *** Quits: filename (~kilitary@185.193.143.131) (Remote host closed the connection)
[06:55:34] <texasmynsted> For what it is worth, I installed pueue last night. So far it has be useful for the long running macports updates and homebrew updates.
[06:56:16] *** Joins: jos1 (~jos3@dyndsl-091-248-048-089.ewe-ip-backbone.de)
[06:56:37] <texasmynsted> So how about the updated version of the script. Is this fine or do I need to make some more changes?
[06:56:52] <texasmynsted> This really helps me learn.
[06:57:11] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:57:11] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:57:46] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:58:18] <texasmynsted> kurahaupo: what is your system?
[06:58:21] *** Quits: RealKiller (~RealKille@104.210.65.79) (Quit: Client closed)
[06:58:29] *** Joins: vlm (~vlm@user/vlm)
[06:59:56] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[07:03:15] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[07:04:28] *** Quits: XV9 (~XV8@2601:5cb:c001:50:e0f2:76b6:d7e0:55b) (Quit: Textual IRC Client: www.textualapp.com)
[07:05:50] *** Joins: loganlee[gnu] (~loganleeg@user/loganlee)
[07:05:54] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[07:06:22] <loganlee[gnu]> Amy one know about JOIN() in jq?
[07:06:31] <loganlee[gnu]> Any
[07:11:53] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:36] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:13:06] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[07:13:07] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[07:13:08] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 250 seconds)
[07:16:35] <texasmynsted> loganlee[gnu]: I have _not_ used JOIN() in jq.
[07:16:56] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[07:21:19] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[07:22:52] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:07] <texasmynsted> loganlee[gnu]: it looks like it takes and array of entities and joins them to a single string value.
[07:24:15] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:24:17] <texasmynsted> Are you sure this is the right channel?
[07:24:23] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[07:24:24] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 250 seconds)
[07:24:37] <larryv> narrator: it isn't
[07:24:51] *** Joins: filename (~kilitary@185.193.143.131)
[07:27:03] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Quit: WeeChat 3.4)
[07:27:41] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[07:28:18] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:29:03] * texasmynsted thinks the narrator should be voice acted by Morgan Freeman.
[07:29:47] <larryv> loganlee[gnu]: have you tried #jq?
[07:30:34] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:31:17] *** Quits: foul_owl (~kerry@94.140.8.89) (Ping timeout: 240 seconds)
[07:31:40] *** Quits: loganlee[gnu] (~loganleeg@user/loganlee) (Quit: Quit)
[07:32:18] *** Joins: dirigible85 (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[07:32:21] <texasmynsted> heheh
[07:33:27] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:34:26] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[07:34:28] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[07:35:01] <kurahaupo> texasmynsted: Ubuntu 16.04LTS
[07:35:17] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 240 seconds)
[07:35:25] <texasmynsted> so linux. I think that pueue would work there
[07:35:39] * kurahaupo thinks the narrator should be Carrie Bradshaw
[07:36:05] <texasmynsted> okay, that works
[07:36:27] <kurahaupo> texasmynsted: apt-cache search pueue returns nothing
[07:36:45] <texasmynsted> install from rust
[07:36:53] <texasmynsted> using cargo
[07:36:54] <kurahaupo> Don't have rust on here
[07:36:56] <texasmynsted> oh
[07:37:02] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[07:37:25] <texasmynsted> nix?
[07:37:34] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[07:37:42] *** Parts: polardroid (~polardroi@user/polardroid) ()
[07:37:50] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Ping timeout: 250 seconds)
[07:37:59] <texasmynsted> Andie MacDowell
[07:38:10] <texasmynsted> for narrator
[07:40:00] <texasmynsted> how do I do a direct message here?
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:46] <larryv> ask the person if it's okay to message them, and then /msg nick
[07:40:59] <texasmynsted> okay
[07:41:03] <texasmynsted> ty
[07:42:02] *** Joins: xx (~xx@user/xx)
[07:42:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[07:42:38] <texasmynsted> oooo. Google style guide uses bash function myfunction() style functions. https://google.github.io/styleguide/shellguide.html#function-comments
[07:43:33] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[07:43:56] <larryv> https://google.github.io/styleguide/shellguide.html#s7.1-function-names
[07:44:38] <texasmynsted> lol
[07:45:01] <texasmynsted> Looks like they violated their own style guide, in the style guide. (facepalm)
[07:45:20] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[07:46:21] <texasmynsted> And the third to last line is "Use common sense and BE CONSISTENT."
[07:47:31] <kurahaupo> texasmynsted: that was among the things that I tried to fix when I worked there.
[07:47:49] <kurahaupo> Getting agreement to change a styleguide is REALLY HARD
[07:48:54] <texasmynsted> nod
[07:48:57] <larryv> texasmynsted: kurahaupo wanted that third to last line to say "embrace chaos and BE INCONSISTENT" but it was an uphill battle
[07:49:06] <texasmynsted> lolol
[07:49:34] *** Joins: foul_owl (~kerry@217.114.38.246)
[07:49:36] <texasmynsted> I just like that they put that at the bottom but functions used different styles IN THE STYLE DOCUMENT
[07:50:58] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[07:54:47] *** Joins: zro (~zro@user/zro)
[07:55:05] *** Quits: zro (~zro@user/zro) (Client Quit)
[07:59:03] *** Quits: rcernin_ (~rcernin@124.190.132.36) (Ping timeout: 250 seconds)
[07:59:06] <texasmynsted> Yes, I understand changing a style guide can be near impossible. I used to work for IBM.
[07:59:53] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[08:00:05] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[08:00:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Client Quit)
[08:01:52] *** Quits: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[08:03:13] <texasmynsted> kurahaupo: Do you have your own style guide now? I think that would be useful.
[08:07:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[08:11:24] <kurahaupo> texasmynsted: kindof. (a) avoid cosmetic adjustments to "make shell look like other languages", since that leads to false mental models. (b) lay out approximating bash --pretty-print, so that "diff" is informative. (c) name things for their purpose rather than their internal implementation. (d) use comments to explain my choices. Everything else flows from those.
[08:13:27] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[08:13:40] *** Joins: filename (~kilitary@185.193.143.131)
[08:13:41] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:16:26] <texasmynsted> nice
[08:16:28] <kurahaupo> (e) follow the Go advice about names: short names for tight scopes, long names for broad scopes, because compact code is easier to read than code that requires scrolling. (f) Don't be afraid to make an exception when it makes the code more robust and/or more readable.
[08:16:28] <kurahaupo> Among the things that comes out of (a) is NOT breaking the program into functions in the same way that would be done in other languages. For example, I don't usually have a "main" function, I just use inline code. I also don't tend to use functions that need to be used like new_foo=$( calculate "$old_foo" )
[08:16:39] <texasmynsted> how are you doing the --pretty-print ?
[08:16:58] <kurahaupo> texasmynsted: By now I've practiced enough that it's just in my head.
[08:17:07] <texasmynsted> oh
[08:17:08] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[08:17:26] <kurahaupo> Besides, I'm not aiming for exact replication, I want the code to be *more* readable than --pretty-print
[08:17:41] <texasmynsted> is there a bash pretty printer?
[08:17:48] <kurahaupo> !pretty
[08:17:48] <greybot> bash --pretty-print yourfile (undocumented), or pretty() { printf 'pretty() { %s\n }; declare -f pretty' "$(cat)" | bash | sed '1d;2d;$d;s/^ //'; } ## Usage: pretty < myscript
[08:18:05] <kurahaupo> bash --pretty-print only works with bash version >= 5.0.0
[08:18:32] *** Quits: filename (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[08:18:53] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[08:19:05] <texasmynsted> I have 5.1.16 but I did not see that in the man page
[08:19:29] <kurahaupo> The key word there is "undocumented"
[08:19:44] <texasmynsted> well yes. I see that now
[08:19:56] <tsujp> How does output redirection work with log rotation? Does it follow the rotated file or already recreate? I'm using `docker run ... >> /var/log/container.log` and if I rotate the log files docker continues to write to `container.log.1` instead of a new and empty `container.log` as one would expect
[08:19:59] <kurahaupo> I suspect it uses mostly the same code as declare -pf
[08:20:33] <kurahaupo> tsujp: a connected filedescriptor is always to the underlying file, not the filename
[08:21:19] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[08:21:38] <kurahaupo> tsujp: that's why logrotate.conf has a "delaycompress" option, to allow time for daemons to close their connections to the old log file and open new ones to the new file that has the old name
[08:21:40] <texasmynsted> ooh. It changed my brace style
[08:22:20] <tsujp> So when the initial command is given `... >> /var/log/container.log` bash finds the file descriptor for /var/log/container.log, let's say it's ABC in this case. When rsyslog comes along and changes the _name_ that doesn't actually change the file descriptor ABC and so even though the name is now container.log.1 bash is still redirecting output to
[08:22:20] <tsujp> file descriptor ABC?
[08:23:28] <kurahaupo> tsujp: "filedescriptor" is the small integer, 0 for stdin, 1 for stdout, 2 for stderr, 3+ for user-opened files
[08:23:44] <tsujp> Oh right derp
[08:24:06] <kurahaupo> tsujp: filedescriptors are per-process, but they're inherited from the parent process and (usually) kept through execve
[08:24:15] <tsujp> Hmm, I forgot to mention `2&>1` is tacked on the end there `... >> /var/log/container.log 2&>1`
[08:24:47] <tsujp> So the log rotate configuration has delaycompress but even after <very long time> (hours or days) it doesn't produce a new container.log, it always keeps writing to container.log.1
[08:24:49] <kurahaupo> tsujp: In that case, the two filedescriptors share one connection to the same file.
[08:25:11] *** Joins: Masterphi (~Masterphi@user/masterphi)
[08:25:40] <kurahaupo> tsujp: that's either a bug in the logrotate.conf, failing to notify the daemon that it needs to reopen its log files, or a bug in the daemon for failing to respond to that notification
[08:25:49] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[08:27:01] <tsujp> Do you know if it's possible to check that logrotate is correctly notifying the daemon?
[08:28:02] <kurahaupo> The method of notification varies, but if there's no postrotate line in logrotate.conf, then it's not doing anything.
[08:29:09] <tsujp> This is the logrotate configuration, it's pretty vanilla and has a postrotate and delaycompress https://pastebin.com/raw/XKpwi0hT
[08:29:23] <kurahaupo> It used to be common that « kill -HUP $pid » would cause the process $pid to close and reopen its files.
[08:29:51] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:29:57] <texasmynsted> yep hang-up (call back)
[08:30:06] *** Quits: foul_owl (~kerry@217.114.38.246) (Ping timeout: 256 seconds)
[08:30:06] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[08:30:32] <kurahaupo> I would read the man page for rsyslog-rotate to see what it's supposed to do. It's not likely to help with logs that are not under the control of systemd
[08:31:00] <kurahaupo> err, I mean rsyslog
[08:31:33] <kurahaupo> tsujp: Do you have rsyslog or syslog-ng or something else on your system?
[08:31:57] <tsujp> Right but this is where I just want to be sure of the domain of responsibility here: A systemd unit file, which runs a bash script, in which that bash script has `docker run ... >> /var/log/container.log >2&1` I assume the entirety of the logging is then handled by bash here and not systemd given the output redirection, right?
[08:32:06] <tsujp> It's rsyslog 99% sure
[08:32:18] <tsujp> Just double checked, rsyslog indeed
[08:32:27] <jensen> isn't it better to export LS_COLORS to .bash_profile instead of .bashrc so it runs just once instead of every new terminal/shell instance for performance?
[08:33:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[08:33:40] <tirnanog> tsujp: yes. you are directing stdout and stderr in a fashion that places it beyond the purview of systemd so it then becomes your responsibility.
[08:33:59] <tsujp> Yep I thought so but wanted to be sure
[08:36:23] <kurahaupo> tsujp: generally each package that writes directly to a log file should supply its own logrotate.conf file (e.g. as /etc/logrotate.d/myname.conf). It's unfortunate that because rsyslog provides one that covers all /var/log/*log, people assume they don't need to provide their own and/or that they write logs directly into that directory rather than their own subdirectory.
[08:37:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:38:27] <tirnanog> or just don't redirect the streams and let journald handle it. it does a fine enough job, and will still forward to another logging daemon in the event that it has been set up to do so.
[08:38:41] *** Joins: filename (~kilitary@185.193.143.131)
[08:39:18] <kurahaupo> tirnanog: For most programs that only log a small amount, that's fine. But there are efficiency gains in writing your own logs if you generate lots.
[08:40:31] <tsujp> tirnanog I wanted that approach and then using RainerScript in rsyslog to disseminate the syslog journal to their own appropriate files but we've gone with this approach
[08:40:45] <tsujp> Okay what I needed was `copytruncate` in the rsyslog configuration for this file
[08:40:45] <kurahaupo> And you might want to write different things into different places, in ways that depend on things that aren't in the log lines themselves. For example, a webserver writing a separate log per domain, and leaving out the domain in each log record (since it's implied).
[08:41:32] <tsujp> kurahaupo I am supplying my own config file for this log and it's in it's own subfolder not within `/var/log/*`, specifically `/var/log/container/123.log` I was being lazy when typing sorry
[08:41:38] <tirnanog> yeah yeah. but logrotate is such a hack job. seeing as we're discussing preferences, in systemd-less environments, I prefer writing dated logs, with a singular rotation script. logrotate can then go to hell in a handbasket.
[08:42:07] <tsujp> I would prefer no systemd too but... nope we're using Ubuntu with Systemd
[08:42:12] <tsujp> gotta work with what I got in this case
[08:42:24] <tsujp> looking for alpine with runc please :'(
[08:42:28] <kurahaupo> tirnanog: yeah, logs named for the date are cool. I'm planning to move mine that way but I haven't done so yet.
[08:42:38] <tirnanog> the idea that applications have to be told what to do at arbitrary intervals just for logs to continue functioning correctly is something I've always found appalling (and it sometimes fails in practice).
[08:42:45] <kurahaupo> tsujp: alpine is my favourite email client.
[08:42:50] <tsujp> lmfaooo
[08:43:00] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:43:06] <kurahaupo> (some bastards stole the name to use for a linux distro)
[08:44:02] *** Joins: foul_owl (~kerry@207.244.125.36)
[08:44:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[08:44:08] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 250 seconds)
[08:44:17] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:44:27] <tsujp> TIL alpine email client
[08:44:30] <tsujp> wikipedia says 2007
[08:44:33] <tsujp> alpine linux 2005
[08:44:40] <tsujp> Other way around regarding name stealing it looks like
[08:45:58] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[08:46:03] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[08:46:23] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:47:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:47:28] <tirnanog> kurahaupo: yeah. it's not even rotation at that point. I just compress and punt logs beyond a certain age to an "old" sub-directory to keep things tidy.
[08:49:23] <kurahaupo> tirnanog: I keep several levels of logs with different lifetimes. (a) just the essentials, for a year; (b) details, for a week; (c) debug, for a day; (d) manually identified WTF moments, forever
[08:50:29] <tirnanog> (d) is a good idea, for future reference. people are wont to forget the particulars else.
[08:52:42] <tsujp> tirnanog how do you do your logging in systemd-less environments? Just output redirection `>>`?
[08:53:22] <kurahaupo> tsujp: Most daemons open their own logfiles, or open /dev/syslog
[08:53:29] <tirnanog> tsujp: obviously, it's not so straightforward as it would be with systemd. in practice, it's a mixed bag. I mostly use openrc so I sometimes let supervise-daemon/start-stop-daemon handle stdout and stderr in particular.
[08:53:52] <tirnanog> tsujp: for other applications, I try to make them write to syslog wherever possible and wherever it is practical to do so.
[08:53:56] <tsujp> I'm thinking of proposing we ship everything through /dev/syslog (and yes skip journald too), any gotchas there I don't know about?
[08:54:26] <tirnanog> tsujp: a smaller number are allowed to handle logs by themselves.
[08:54:48] <kurahaupo> tsujp: more limited filtering than doing it yourself, but rsyslogd on the other side can do text matching so it's not too bad
[08:55:14] <tsujp> Oh yeah specifically rsyslogd here, RainerScript is pretty nice for filtering things out
[08:56:23] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:413f:5e23:7b3e:933) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:56:30] <tsujp> One of the guys on the team had the concern
[08:56:39] <tsujp> "host level processes shipping logs through /dev/syslog is a concern"
[08:56:42] <tsujp> i don't see why...
[08:58:24] *** Joins: ekathva (~ekathva@n3k05e951yzy0eo5x-1.v6.elisa-mobile.fi)
[08:58:25] <kurahaupo> tsujp: It does mean that one process can see everything that's logged, and has to be able to write to all the log files, so it's typically running as root. If each process writes its own logs directly, they can run as unprivileged users and own the directories containing their own logs
[08:59:27] *** Quits: ham5 (iamfive@user/ham5) (Remote host closed the connection)
[08:59:32] <tsujp> True
[08:59:34] <tsujp> Good point
[09:01:14] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[09:02:34] <tirnanog> it's true, but I still like using syslog daemons. some of them can do some very neat things.
[09:04:25] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[09:09:33] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Remote host closed the connection)
[09:15:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[09:18:01] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:21:46] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: w0ng (~w0ng@185.218.127.62) (*.net *.split)
[09:21:46] *** Quits: rcernin_ (~rcernin@124.190.132.36) (*.net *.split)
[09:21:46] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (*.net *.split)
[09:21:46] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[09:21:46] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[09:21:46] *** Quits: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (*.net *.split)
[09:21:46] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[09:21:46] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[09:21:46] *** Quits: unop (~unop@195.91.14.193) (*.net *.split)
[09:21:46] *** Quits: gschanuel21 (~gschanuel@user/gschanuel) (*.net *.split)
[09:21:46] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (*.net *.split)
[09:21:46] *** Quits: Tach (~Tach@user/tach) (*.net *.split)
[09:21:46] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[09:21:46] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (*.net *.split)
[09:21:46] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (*.net *.split)
[09:21:46] *** Quits: Bercik (~Redomen@user/bercik) (*.net *.split)
[09:21:46] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[09:21:46] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (*.net *.split)
[09:21:46] *** Quits: anderson (~ande@user/anderson) (*.net *.split)
[09:21:46] *** Quits: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca) (*.net *.split)
[09:21:46] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:21:46] *** Quits: lorimer (~lorimer@user/lorimer) (*.net *.split)
[09:21:46] *** Quits: tangy (~tangy@user/tangy) (*.net *.split)
[09:21:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:21:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[09:21:46] *** Quits: suffer (znc@mutant.penguin.fyi) (*.net *.split)
[09:21:46] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[09:21:46] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (*.net *.split)
[09:21:46] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (*.net *.split)
[09:21:46] *** Quits: cryptonector (~nico@24.28.108.183) (*.net *.split)
[09:21:46] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[09:21:46] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:21:46] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[09:21:46] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[09:21:46] *** Quits: Ionic (~ionic@home.ionic.de) (*.net *.split)
[09:21:46] *** Quits: muirrum (~muirrum@sourcehut/user/muirrum) (*.net *.split)
[09:21:46] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (*.net *.split)
[09:21:46] *** Quits: yac (~user@user/yac) (*.net *.split)
[09:21:46] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (*.net *.split)
[09:21:46] *** Quits: Lantizia (~Lantizia@195.62.201.126) (*.net *.split)
[09:21:46] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:21:46] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[09:21:46] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:21:46] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: Gerlo_ (~Gerlo@user/gerlo) (*.net *.split)
[09:21:46] *** Quits: Distemper (~harry@li1089-127.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (*.net *.split)
[09:21:46] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:21:46] *** Quits: dino- (~dino@user/din0) (*.net *.split)
[09:21:46] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[09:21:46] *** Quits: sixwheeledbeast (~zem@user/sixwheeledbeast) (*.net *.split)
[09:21:46] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:21:46] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[09:21:46] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:21:46] *** Quits: pooby (~pooby@167.99.100.8) (*.net *.split)
[09:21:46] *** Quits: compuguy (~ahall@user/compuguy) (*.net *.split)
[09:21:46] *** Quits: bertieb (~bertieb@217.155.39.147) (*.net *.split)
[09:21:46] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: sahilister (~sahiliste@user/sahilister) (*.net *.split)
[09:21:46] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[09:21:46] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:21:46] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:21:46] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[09:21:46] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[09:21:46] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:21:59] *** Joins: bluedust_ (~bluedust@86.106.136.218)
[09:22:04] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Remote host closed the connection)
[09:22:21] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[09:22:24] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[09:22:24] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[09:22:24] *** Joins: zaz\ (~zaz@poneybl.eu)
[09:22:24] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:22:24] *** Joins: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[09:22:24] *** Joins: Betal (~Betal@user/betal)
[09:22:24] *** Joins: beencubed (~beencubed@209.131.238.248)
[09:22:24] *** Joins: unop (~unop@195.91.14.193)
[09:22:24] *** Joins: gschanuel21 (~gschanuel@user/gschanuel)
[09:22:24] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[09:22:24] *** Joins: Tach (~Tach@user/tach)
[09:22:24] *** Joins: cim (~cim@205.185.117.110)
[09:22:24] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[09:22:24] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:22:24] *** Joins: Bercik (~Redomen@user/bercik)
[09:22:24] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[09:22:24] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[09:22:24] *** Joins: anderson (~ande@user/anderson)
[09:22:24] *** Joins: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca)
[09:22:24] *** Joins: uhu (~uhu@static.101.168.216.95.clients.your-server.de)
[09:22:24] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:22:24] *** Joins: lorimer (~lorimer@user/lorimer)
[09:22:24] *** Joins: tangy (~tangy@user/tangy)
[09:22:24] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:22:24] *** Joins: w0ng (~w0ng@185.218.127.62)
[09:22:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:22:24] *** Joins: suffer (znc@mutant.penguin.fyi)
[09:22:24] *** Joins: somlis (~somlis@user/somlis)
[09:22:24] *** Joins: Ionic (~ionic@home.ionic.de)
[09:22:24] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[09:22:24] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[09:22:24] *** Joins: cryptonector (~nico@24.28.108.183)
[09:22:24] *** Joins: millido (~millido@84.210.150.128)
[09:22:24] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:22:24] *** Joins: Hackerpcs (~user@user/hackerpcs)
[09:22:24] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[09:22:24] *** Joins: nickodd (~nickodd@user/nickodd)
[09:22:24] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[09:22:24] *** Joins: tinystoat (~squeek@user/tinystoat)
[09:22:24] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:22:24] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:22:24] *** Joins: koollman (~samson_t@user/koollman)
[09:22:24] *** Joins: sahilister (~sahiliste@user/sahilister)
[09:22:24] *** Joins: hubvu_ (sid495858@tinside.irccloud.com)
[09:22:24] *** Joins: bertieb (~bertieb@217.155.39.147)
[09:22:24] *** Joins: compuguy (~ahall@user/compuguy)
[09:22:24] *** Joins: pooby (~pooby@167.99.100.8)
[09:22:24] *** Joins: dlam (~dlam@dlam.me)
[09:22:24] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[09:22:24] *** Joins: setesat (~setesat@94.4.156.220)
[09:22:24] *** Joins: simplicity (~yti@user/simplicity)
[09:22:24] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[09:22:24] *** Joins: dino- (~dino@user/din0)
[09:22:24] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:22:24] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[09:22:24] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[09:22:24] *** Joins: Distemper (~harry@li1089-127.members.linode.com)
[09:22:24] *** Joins: Gerlo_ (~Gerlo@user/gerlo)
[09:22:24] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[09:22:24] *** Joins: overrider (~overrider@user/overrider)
[09:22:24] *** Joins: Philonous (~Philonous@user/philonous)
[09:22:24] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:22:24] *** Joins: Lantizia (~Lantizia@195.62.201.126)
[09:22:24] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[09:22:24] *** Joins: yac (~user@user/yac)
[09:22:24] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[09:22:24] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[09:22:24] *** Joins: muirrum (~muirrum@sourcehut/user/muirrum)
[09:22:44] *** Quits: kurahaupo (~martin@115.69.27.211) (Quit: Leaving.)
[09:22:55] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:23:51] *** Quits: cim (~cim@205.185.117.110) (Max SendQ exceeded)
[09:24:26] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[09:24:33] *** Joins: cim (~cim@205.185.117.110)
[09:24:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:25:03] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:25:03] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[09:25:03] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[09:25:03] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[09:25:03] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[09:25:03] *** Quits: voldial (~user@user/voldial) (*.net *.split)
[09:25:03] *** Quits: laris (undead@37.221.209.36) (*.net *.split)
[09:25:14] *** Joins: ops (~ops@user/echelon)
[09:25:18] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[09:25:24] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[09:25:48] *** Joins: voldial (~user@195.179.201.175)
[09:25:54] *** Quits: bluedust (~bluedust@59.89.210.247) (Ping timeout: 272 seconds)
[09:27:41] *** Joins: laris (undead@37.221.209.36)
[09:27:55] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[09:27:57] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:28:26] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 272 seconds)
[09:28:58] *** Quits: apos (~apos@gateway/tor-sasl/apos) (*.net *.split)
[09:28:58] *** Quits: nunggu (~q@user/nunggu) (*.net *.split)
[09:28:58] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (*.net *.split)
[09:28:58] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[09:28:58] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:28:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:28:58] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (*.net *.split)
[09:28:58] *** Quits: fatal (~0x00@user/fatal) (*.net *.split)
[09:28:58] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (*.net *.split)
[09:28:58] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (*.net *.split)
[09:28:58] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[09:28:58] *** Quits: saki (~saki@gateway/tor-sasl/saki) (*.net *.split)
[09:28:58] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[09:29:21] *** Joins: sinaowolabi (~SinaOwola@41.58.246.15)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:18] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:30:20] *** Joins: fatal (~0x00@user/fatal)
[09:30:21] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:30:21] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:30:33] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:30:39] *** Joins: nunggu (~q@user/nunggu)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:06] *** Joins: timj (~timj@user/timj)
[09:34:12] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:34:18] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[09:34:25] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:38:54] *** Joins: bluedust (~bluedust@59.89.210.247)
[09:39:16] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[09:41:49] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Read error: Connection reset by peer)
[09:42:21] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[09:43:00] *** Quits: bluedust_ (~bluedust@86.106.136.218) (Ping timeout: 272 seconds)
[09:43:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:44:37] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[09:45:25] *** Joins: sinaowolabi_ (~SinaOwola@160.152.112.1)
[09:47:49] *** Joins: Mo (~Mo@dynamic-077-003-246-085.77.3.pool.telefonica.de)
[09:51:52] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[10:00:08] *** Joins: k8yun (~k8yun@user/k8yun)
[10:05:43] *** Joins: igemnace (~ian@user/igemnace)
[10:06:19] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:11:06] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:14:09] *** Joins: fef (~thedawn@user/thedawn)
[10:14:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:15:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:16:55] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[10:22:52] *** Joins: jmew (~jmew___@user/jmew)
[10:26:57] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 240 seconds)
[10:28:36] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 272 seconds)
[10:31:29] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:32:40] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au)
[10:34:44] <texasmynsted> kurahaupo: Thank you for the feedback on the gist. I am going through it
[10:34:51] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 256 seconds)
[10:35:39] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[10:35:44] *** Joins: kristianpaul (~paul@user/kristianpaul)
[10:35:44] <texasmynsted> Why do you prefer local and readonly over declare (with options)? Is this style?
[10:36:12] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[10:38:43] <tirnanog> local actually behaves as declare does, in a function. one might argue that it's more apparent what is happening. readonly is just silly. several reasons have already been given. mine was that it makes it impossible to declare variables of the same name in a local scope.
[10:39:14] <tirnanog> besides, the use of readonly does not improve the quality of this script in any way.
[10:40:35] <tirnanog> some of the variables don't even have any purpose. that is, they are defined - and used - exactly once.
[10:41:13] *** Quits: dtux (~dtux@2601:646:8f00:3f2:1a1f:46b2:5516:9cd2) (Quit: dtux)
[10:43:57] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:44:19] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[10:44:58] <texasmynsted> okay
[10:45:32] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[10:46:42] *** Quits: Exterminador (sid116151@user/pegasus) ()
[10:49:22] <texasmynsted> One reason for so many functions is that I like to be able to call them if one of the commands fails.
[10:49:56] <texasmynsted> I can try again and only run the failing command...  myscript function1
[10:50:38] <texasmynsted> But it looks like I still have plenty of room to simplify and improve this. :-)
[10:52:45] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:54:07] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[10:54:59] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Client Quit)
[10:55:12] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[10:55:52] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[10:56:07] *** Joins: unop (~unop@195.91.14.193)
[10:58:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:59:47] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:00:32] *** Joins: JanC_ (~janc@user/janc)
[11:00:37] *** Quits: JanC (~janc@user/janc) (Killed (lead.libera.chat (Nickname regained by services)))
[11:00:37] *** JanC_ is now known as JanC
[11:01:01] *** Quits: bluedust (~bluedust@59.89.210.247) (Remote host closed the connection)
[11:01:10] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[11:01:46] *** Joins: bluedust (~bluedust@103.161.144.138)
[11:02:30] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[11:06:45] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:08:34] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:07] *** Joins: rendar (~rendar@user/rendar)
[11:11:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:13:02] *** Quits: luckiswithme (~luckiswit@149.167.138.19) (Remote host closed the connection)
[11:13:37] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:17:32] *** Joins: adac (~adac@213-47-252-7.cable.dynamic.surfer.at)
[11:18:24] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:e7e1:6127:52de) (Ping timeout: 250 seconds)
[11:20:33] *** Joins: tercaL (~tercaL@user/tercal)
[11:21:10] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[11:21:56] *** Quits: rcernin_ (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[11:25:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:36:17] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:b830:d829:9edc:9b1d) (Ping timeout: 240 seconds)
[11:43:34] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:44:18] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[11:46:12] *** Joins: vysn (~vysn@user/vysn)
[11:49:22] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[11:51:48] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[11:53:39] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[11:54:17] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:58:21] *** Joins: Tadgy_ (~tadgy@slackware.uk/founder/tadgy)
[11:59:28] *** Joins: gl (~x@pwn.lu)
[12:00:35] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[12:03:32] *** Joins: masber (~masber@2001:620:808:1200:8000::d)
[12:04:03] *** Quits: led_belly (~led_belly@37.120.197.46) (Ping timeout: 256 seconds)
[12:04:24] *** Joins: jaysicks (~jaysicks@185-29-82-222.pool.digikabel.hu)
[12:05:30] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[12:10:35] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[12:11:17] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:13:35] *** Joins: led_belly (~led_belly@37.120.197.45)
[12:13:44] *** Quits: sinaowolabi (~SinaOwola@41.58.246.15) (Ping timeout: 272 seconds)
[12:15:59] *** Joins: yustin (~yustin@user/yustin)
[12:16:09] *** Joins: Tadgy__ (~tadgy@slackware.uk/founder/tadgy)
[12:16:44] *** Quits: Tadgy__ (~tadgy@slackware.uk/founder/tadgy) (Client Quit)
[12:17:28] *** Quits: Tadgy_ (~tadgy@slackware.uk/founder/tadgy) (Quit: leaving)
[12:17:31] *** Joins: Fr0stBit (~theartist@77-69-104-168.dynamic.cyta.gr)
[12:17:35] <Fr0stBit> hello
[12:18:59] <Fr0stBit> I want to check if a script is called with 2 exact arguments
[12:19:09] <Fr0stBit> Is this: if [ "$1" = "wine" ] && [ "${@:2}" = "--version" ]; then ...
[12:19:11] <Fr0stBit> the right way?
[12:22:06] <geirha> no, when "${@:2}" expands to more than one argument, the [ command will complain
[12:22:15] <geirha> if (( $# == 2 )) && [[ $1 = wine && $2 = --version ]] ; then
[12:22:43] <geirha> if [[ $1 = wine && $2 = --version && ${3+set} != set ]] ; then
[12:23:06] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[12:23:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:24:14] <geirha> and since bash 5.1, you can also test if $3 is set with [[ -v 3 ]]
[12:24:27] *** Quits: StathisA (~StathisA@178-147-18-92.haap.nym.cosmote.net) (Ping timeout: 256 seconds)
[12:25:09] <Fr0stBit> thank you that is what I was trying to fix!
[12:25:24] *** Joins: StathisA (~StathisA@178-147-46-55.haap.nym.cosmote.net)
[12:26:22] *** Joins: UnnamedBeer (~UnnamedBe@75.red-79-159-0.dynamicip.rima-tde.net)
[12:28:20] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:29:12] *** Quits: Fr0stBit (~theartist@77-69-104-168.dynamic.cyta.gr) (Quit: WeeChat 3.4)
[12:29:54] *** Joins: Atque (~Atque@user/atque)
[12:31:25] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[12:35:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:35:48] *** Joins: Afroboy (~afroboy@105.106.143.99)
[12:36:28] *** Joins: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[12:36:32] *** Joins: shad (~shad@user/shad)
[12:37:22] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[12:43:27] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[12:46:36] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:48:36] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 240 seconds)
[12:50:14] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[12:52:02] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[12:54:21] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[12:57:45] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:58:57] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:59:06] *** Joins: nunggu_ (~q@user/nunggu)
[12:59:24] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[13:00:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 240 seconds)
[13:00:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[13:06:02] *** Joins: chronon (~chronon@user/chronon)
[13:06:03] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[13:06:32] *** Joins: alius (~alius@2001:861:4444:49c0:d4c1:b0ac:a0ba:10e2)
[13:07:45] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[13:08:14] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:12:48] *** Quits: andril (~andril@097-068-232-130.biz.spectrum.com) (Quit: WeeChat 3.4)
[13:13:09] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:13:17] *** Joins: l4s8g___ (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[13:13:23] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[13:14:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:17:07] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Quit: leaving)
[13:18:20] *** Quits: sinaowolabi_ (~SinaOwola@160.152.112.1) (Ping timeout: 272 seconds)
[13:20:33] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[13:22:25] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[13:23:03] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 252 seconds)
[13:25:37] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[13:27:24] *** Quits: jmew (~jmew___@user/jmew) (Ping timeout: 240 seconds)
[13:28:54] *** Quits: masber (~masber@2001:620:808:1200:8000::d) (Quit: Client closed)
[13:35:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[13:35:55] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[13:38:32] *** Joins: stevenm__ (~stevenm@195.62.218.30)
[13:40:57] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[13:41:14] *** Joins: situ (situ@nat-pool-brq-t.redhat.com)
[13:42:09] *** Joins: bluedust (~bluedust@103.161.144.138)
[13:42:21] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 256 seconds)
[13:42:28] *** Joins: xx (~xx@user/xx)
[13:42:51] *** Joins: malina (~malina@user/malina)
[13:43:59] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[13:45:34] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[13:45:34] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[13:45:34] *** Joins: Bercik (~Redomen@user/bercik)
[13:52:00] *** Joins: cdown (~cdown@163.114.131.1)
[13:52:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:53:16] *** Joins: sinaowolabi (~SinaOwola@41.58.245.167)
[13:53:41] *** Quits: uuidNuniq (~weechat@222.67.14.47) (Quit: WeeChat 3.4)
[13:55:26] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[13:55:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:57:34] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[13:57:48] *** Quits: stevenm__ (~stevenm@195.62.218.30) (Ping timeout: 240 seconds)
[13:58:52] *** Quits: sinaowolabi (~SinaOwola@41.58.245.167) (Ping timeout: 272 seconds)
[13:59:01] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Client Quit)
[14:02:37] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:03:51] *** Joins: sinaowolabi (~SinaOwola@102.134.114.6)
[14:04:51] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[14:04:58] *** Joins: bluedust (~bluedust@103.161.144.138)
[14:05:06] *** Joins: RhineDevil (~RhineDevi@gateway/tor-sasl/rhinedevil)
[14:06:02] <RhineDevil> Hi! I need to iterate over a multiline variabile in sh, how could I do that?
[14:06:16] <RhineDevil> (for each line, of course)
[14:06:29] <Soliton> why have the variable at all?
[14:06:32] <Soliton> !faq 1
[14:06:32] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[14:07:02] *** Joins: stevenm__ (~stevenm@195.62.218.30)
[14:07:19] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[14:08:33] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:08:49] *** Joins: bluedust (~bluedust@117.222.190.30)
[14:08:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:09:24] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 240 seconds)
[14:10:30] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.6)
[14:10:31] <RhineDevil> Soliton: the input about Bourne sh worked, thank you
[14:16:31] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[14:17:30] *** Joins: seninha (~seninha@user/seninha)
[14:17:49] *** Joins: bluedust (~bluedust@117.222.190.30)
[14:22:27] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[14:26:18] *** Quits: sinaowolabi (~SinaOwola@102.134.114.6) (Ping timeout: 252 seconds)
[14:26:51] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.6) (Ping timeout: 252 seconds)
[14:27:57] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 252 seconds)
[14:31:30] *** Joins: sinaowolabi (~SinaOwola@41.58.214.189)
[14:31:56] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:23] *** Quits: sinaowolabi (~SinaOwola@41.58.214.189) (Max SendQ exceeded)
[14:32:23] *** Joins: fef (~thedawn@user/thedawn)
[14:35:49] *** Joins: __monty__ (~toonn@user/toonn)
[14:39:40] *** Joins: sinaowolabi (~SinaOwola@102.134.114.6)
[14:41:50] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[14:42:57] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 240 seconds)
[14:43:45] *** Joins: jochum (~quassel@user/jochum)
[14:46:22] *** Quits: sinaowolabi (~SinaOwola@102.134.114.6) (Ping timeout: 272 seconds)
[14:46:48] *** Joins: sinaowolabi (~SinaOwola@102.134.114.6)
[14:47:06] *** Joins: tccki (~tccki@box.webslate.co.nz)
[14:47:59] *** Joins: blyat-73 (~hjgkjhgkj@46.235.97.89)
[14:48:28] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[14:49:38] *** Quits: stevenm__ (~stevenm@195.62.218.30) (Remote host closed the connection)
[14:50:00] *** Joins: stevenm__ (~stevenm@195.62.218.30)
[14:51:23] *** Quits: sinaowolabi (~SinaOwola@102.134.114.6) (Max SendQ exceeded)
[14:51:33] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[14:52:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.97.89) (Client Quit)
[14:52:36] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 240 seconds)
[14:53:00] *** tccki_ is now known as tccki
[14:55:11] *** Joins: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it)
[14:58:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:00:03] *** Joins: andril (~andril@097-068-232-130.biz.spectrum.com)
[15:00:59] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[15:01:16] *** Joins: shad (~shad@user/shad)
[15:03:00] *** Quits: stevenm__ (~stevenm@195.62.218.30) (Ping timeout: 240 seconds)
[15:03:18] *** Quits: RhineDevil (~RhineDevi@gateway/tor-sasl/rhinedevil) (Quit: Leaving)
[15:04:10] *** Joins: stevenm (~stevenm@195.62.218.30)
[15:04:45] <lesshaste> how can I grep for lines that start with a capital letter and only have letters in them ?
[15:05:24] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:07:20] *** Joins: jsbach (~jsbach@dynamic-078-054-122-100.78.54.pool.telefonica.de)
[15:07:56] <izabera> ^[A-Z][a-zA-Z]*$
[15:09:59] <Soliton> ^[[:upper:]][[:alpha:]]*$
[15:10:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[15:10:36] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[15:10:39] <izabera> that's lame Soliton
[15:10:39] *** Joins: unop (~unop@195.91.14.193)
[15:10:51] <Soliton> !lame
[15:10:51] <greybot> for f in ./*.wav; do lame -h "$f" "${f%.wav}.mp3"; done
[15:11:15] *** Joins: sinaowolabi (~SinaOwola@102.134.114.6)
[15:11:17] <Soliton> depends if you care about your locale or not.
[15:11:51] <wwilliam> !pe
[15:11:51] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[15:12:20] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 272 seconds)
[15:12:21] *** tccki_ is now known as tccki
[15:12:36] *** Quits: situ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 240 seconds)
[15:12:58] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[15:12:59] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[15:13:01] *** Joins: et_ (~et@user/et)
[15:14:13] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[15:14:13] *** et_ is now known as et
[15:14:42] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:17:04] *** Joins: vishal (~vishal@fedora/vishal)
[15:17:11] *** Joins: Atque (~Atque@user/atque)
[15:17:47] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[15:20:16] <lesshaste> thanks Soliton  and izabera
[15:25:50] *** Joins: vysn (~vysn@user/vysn)
[15:27:27] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:27:42] <osse> no one ever cares about locale
[15:28:58] <Masklin_Gurder> I care about locale
[15:29:17] <Masklin_Gurder> Why won't my terminal auto-complete through a ":" character without escaping it?
[15:33:35] *** Joins: computerworm110 (~quassel@xpress4758.htc.net)
[15:34:07] *** Joins: nyex (~Thunderbi@177.84.107.26)
[15:34:12] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:37:20] <__monty__> I hope non bash-specific questions aren't frowned upon. I'm currently trying to replace the following pattern in a script `cd $src_dir && find . -name '*.defs' | cpio -pdm $dest_dir` because cpio seems particularly slow at copying for some reason. I was hoping to use `cp --parents` in a loop instead but I get a permission error: "cp: cannot create regular file /dest_dir/./atm/atm_types.defs", how might
[15:37:26] <__monty__> cpio be allowed to copy but not cp?
[15:37:29] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[15:37:44] *** Joins: unop (~unop@195.91.14.193)
[15:38:17] *** Joins: et (~et@user/et)
[15:38:25] *** Quits: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it) (Quit: Konversation terminated!)
[15:39:08] *** Joins: dhamla (~dp@2401:4900:1916:1020:9eb1:7ab2:f366:b79c)
[15:39:25] <Masklin_Gurder> Someone will ask you to paste all of the actual code
[15:40:13] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[15:42:42] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[15:44:00] *** Quits: Afroboy (~afroboy@105.106.143.99) (Ping timeout: 272 seconds)
[15:45:14] <Soliton> Masklin_Gurder: probably some badly written programmable completion.
[15:46:46] <emanuele6> no, bash's default completion works like that
[15:46:57] <emanuele6> it sees : as a path separator
[15:47:37] <Soliton> oh indeed. never noticed.
[15:47:58] <emanuele6> i actually noticed it two days ago, and i was also confused
[15:48:15] *** Quits: computerworm110 (~quassel@xpress4758.htc.net) (Ping timeout: 252 seconds)
[15:48:33] <emanuele6> after the : it doesn't auto complete until you enter another character
[15:48:47] <emanuele6> and if you enter a \ after the colon, it autocompletes another \
[15:48:50] <emanuele6> which is weird
[15:50:05] *** Joins: zeden (~zeden@user/zeden)
[15:50:08] <emanuele6> iirc the way i noticed was by doing:    my_command something:*   and then pressing ^X^C
[15:50:41] <emanuele6> which expanded to something:file1 file2 file3 ...
[15:50:42] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[15:51:58] *** Quits: dhamla (~dp@2401:4900:1916:1020:9eb1:7ab2:f366:b79c) (Quit: Leaving)
[15:52:27] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[15:53:33] *** Joins: zeden (~zeden@user/zeden)
[15:54:56] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 256 seconds)
[15:55:03] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:00:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:157b:b0a6:78b4:a5b2)
[16:00:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:157b:b0a6:78b4:a5b2) (Changing host)
[16:00:49] *** Joins: skapata (~Skapata@user/skapata)
[16:01:01] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:03:18] *** Joins: Afroboy (~afroboy@41.200.60.148)
[16:07:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[16:10:12] *** Quits: andril (~andril@097-068-232-130.biz.spectrum.com) (Ping timeout: 240 seconds)
[16:11:09] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[16:12:42] <Masklin_Gurder> Bash's marvels to perform
[16:13:05] *** Quits: Mo (~Mo@dynamic-077-003-246-085.77.3.pool.telefonica.de) (Ping timeout: 256 seconds)
[16:13:44] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:14:00] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[16:14:31] *** Joins: shad (~shad@user/shad)
[16:16:11] *** Joins: igemnace (~ian@user/igemnace)
[16:17:34] *** Quits: sinaowolabi (~SinaOwola@102.134.114.6) (Ping timeout: 272 seconds)
[16:20:48] *** Joins: fef (~thedawn@user/thedawn)
[16:24:59] <jsbach> hi, i have a question, can i execute parts of a script with sth like "unset -e" ? Problem: I have a script which sets the mode "set -e". And i want to be able to execute a part of it without -e
[16:25:46] <Soliton> set +e
[16:25:49] <Soliton> !-e
[16:25:49] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[16:26:02] <Soliton> probably best to completely remove it.
[16:26:12] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[16:26:17] <jsbach> Soliton, thanks i'll try.
[16:26:28] *** Joins: seninha (~seninha@user/seninha)
[16:26:42] <jsbach> Soliton, i bet that is. the history and the discussion potential is that which makes me want to leave it like that
[16:28:10] *** Joins: rcernin (~rcernin@124.190.132.36)
[16:32:59] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[16:35:52] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) ()
[16:38:19] <emanuele6> also note that   `! my_command'   makes `set -e' ignore that command.
[16:39:31] <emanuele6> and it also works in front of compound commands ( `if', `for', `while', `{ ... ;}', etc )
[16:40:22] <Soliton> cmd && :  does as well and keeps $?.
[16:41:00] *** Quits: adac (~adac@213-47-252-7.cable.dynamic.surfer.at) (Ping timeout: 272 seconds)
[16:41:19] *** Joins: sinaowolabi (~SinaOwola@169.159.117.49)
[16:41:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:43:37] <emanuele6> interesting, i thought `!' was special, commands that are not the rhs of a `&&'/`||' are also ignored.
[16:43:49] <emanuele6> s/,/, but/2
[16:45:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:46:50] <jelly> does it really ignore?
[16:47:07] <jelly> # set -e; ! true; echo this is still executed
[16:47:09] <shbot> jelly: this is still executed
[16:47:36] <jelly> TIL
[16:50:13] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[16:52:57] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[16:53:38] <geirha> # set -e ; ! (exit 123) ; echo "$?"
[16:53:39] <shbot> geirha: 0
[16:53:42] <geirha> # set -e ; ! ! (exit 123) ; echo "$?"
[16:53:43] <shbot> geirha: (shell exited with 123)
[16:53:49] <geirha> fun ...
[16:54:08] <geirha> # set -e ; ! { ! (exit 123) ; } ; echo "$?"
[16:54:10] <shbot> geirha: 1
[16:54:26] <emanuele6> d# set -e ; ! ! (exit 123) ; echo "$?"
[16:54:27] <shbot> emanuele6: dash: 1: Syntax error: "!" unexpected
[16:54:35] <emanuele6> `! !' is a bashism
[16:54:40] <emanuele6> i didn't know that
[16:55:36] <geirha> 3# set -e ; ! ! (exit 123) ; echo "$?"
[16:55:37] <shbot> geirha: bash: syntax error near unexpected token `!'
[16:59:04] *** Joins: bluedust (~bluedust@117.222.190.30)
[17:04:41] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[17:04:59] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[17:06:09] *** Joins: thiras (~thiras@user/thiras)
[17:10:16] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[17:10:56] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Read error: Connection reset by peer)
[17:11:44] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[17:19:21] *** Joins: glazed (~glazed@108.5.30.126)
[17:19:59] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca)
[17:20:37] *** Quits: N4buc0 (~N4buc0@177.16.170.138) (Ping timeout: 240 seconds)
[17:22:49] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[17:27:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:33:28] *** Joins: sinaowolabi_ (~SinaOwola@169.159.117.49)
[17:35:26] *** Joins: n4dir (~user@i577BC9E0.versanet.de)
[17:35:53] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[17:38:00] *** Quits: sinaowolabi_ (~SinaOwola@169.159.117.49) (Ping timeout: 272 seconds)
[17:39:21] *** Joins: luckiswithme (~luckiswit@149.167.138.19)
[17:39:32] *** armands_ is now known as armands
[17:40:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:41:03] *** Joins: seninha (~seninha@user/seninha)
[17:43:03] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[17:48:54] <__monty__> If I use a subshell for a for-loop `for f in $(cat); do something; done` does the body of the for-loop inherit the execution context of the subshell?
[17:49:19] *** Quits: glazed (~glazed@108.5.30.126) (Quit: Client closed)
[17:49:40] <Soliton> the loop body has nothing to do with the subshell.
[17:49:57] <Soliton> don't abuse word splitting and pathname expansion.
[17:50:01] <Soliton> !faq 1
[17:50:02] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[17:51:33] <__monty__> The file in this instance is stdin, piped in from find. Does the same advice apply?
[17:52:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[17:52:16] <__monty__> (Because cpio can take paths on stdin but cp does not, AFAICT.)
[17:53:53] <Soliton> so that will potentially break all filepaths with whitespace and glob characters in them.
[17:54:15] <osse> __monty__: the subshell $(cat) is run to completion before the loop starts running
[17:54:25] <Soliton> ideally you should use NUL delimited input since newline is a valid filename character as well.
[17:54:56] <osse> or is the entire loop in a subshell?
[17:54:58] <Soliton> or you could use find's -exec and not pipe at all.
[17:56:18] *** Joins: millido (~millido@84.210.150.128)
[17:56:33] *** Quits: user282069 (~user@li1512-248.members.linode.com) (Quit: WeeChat 2.3)
[17:57:00] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[17:58:21] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:58:46] *** Joins: seninha (~seninha@user/seninha)
[18:01:26] <jsbach> emanuele6, how do you mean '! my command` ?
[18:02:03] <jsbach> emanuele6, likewise: '! dpkg-source -b .` ?
[18:03:59] *** Quits: nyex (~Thunderbi@177.84.107.26) (Remote host closed the connection)
[18:04:07] *** Joins: Minvera (~Minvera@user/Minvera)
[18:04:15] <osse> jsbach: ! before a command will negate the exit status of that command
[18:04:35] <Soliton> the important part there is that it disables set -e.
[18:04:42] *** Joins: volga629 (~volga629@72.139.93.26)
[18:05:01] <Soliton> (that was the context earlier.)
[18:05:28] <jsbach> okay. thanks
[18:09:02] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:10:38] <jsbach> osse Soliton wondering if the syntax is correct? just a  ! dpkg-source ? or should i be using it as '! dpkg-source` ?
[18:11:07] <Soliton> can't tell the difference.
[18:11:07] <osse> jsbach: no quotes (except the ones already there, if any)
[18:11:18] <osse> jsbach: write it as a separate word before the rest of the command
[18:11:19] <Soliton> i would not suggest to use ! at all anyway.
[18:11:31] <osse> Agreed,  && : is less bad
[18:11:43] <jsbach> oh?
[18:11:48] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[18:11:51] *** Quits: Dotz0cat (~Dotz0cat@173.186.192.244) (Read error: Connection reset by peer)
[18:11:54] <jsbach> how would that look like?
[18:11:59] <Soliton> how did you read about ! but nothing else above?
[18:11:59] *** cdown_ is now known as cdown
[18:12:01] <twkm> ewww.
[18:12:14] <jsbach> Soliton, okay, lemme have a look above
[18:12:16] *** Quits: w0ng (~w0ng@185.218.127.62) (Ping timeout: 260 seconds)
[18:12:50] *** Quits: shad (~shad@user/shad) (Ping timeout: 272 seconds)
[18:13:04] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:14:24] *** Joins: shad (~shad@user/shad)
[18:15:18] *** Joins: travisghansen1 (~travisgha@192.74.130.86)
[18:15:20] *** Joins: The_Loko (~The_Loko@86.127.255.193)
[18:15:23] <geirha> just run   set +e
[18:15:42] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:16:37] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 240 seconds)
[18:16:37] *** travisghansen1 is now known as travisghansen
[18:16:43] <__monty__> Soliton, osse: Thank you for the advice.
[18:18:14] *** Joins: Dotz0cat (~Dotz0cat@98.19.251.149)
[18:20:12] *** Joins: luva5 (~luva@146.70.62.252)
[18:21:07] <Tach> if I run a command in an if so like if foocommand ; then ... will this be executed in a subshell ? I get the feeling it does
[18:21:39] <geirha> it will not
[18:23:04] *** Joins: callq (~callq@157.41.35.249)
[18:23:14] <Tach> strange as when I do a docker login with it and then a docker push it says I'm not logged in
[18:23:30] *** Quits: luva (~luva@37.120.197.38) (Ping timeout: 250 seconds)
[18:23:30] *** luva5 is now known as luva
[18:25:02] <geirha> docker login doesn't interface with the shell though, it just dumps your username and password in a config file so your next docker push knows how to authenticate
[18:26:23] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[18:26:23] <geirha> cat
[18:26:32] <geirha> cat ~/.docker/config.json
[18:26:59] <OMGOMG> tell me you use qwerty without telling me you use qwerty
[18:28:26] *** Joins: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it)
[18:28:41] <geirha> was that about my accidental enter?
[18:29:04] <OMGOMG> it was
[18:29:19] <NRK> that doesn't make much sense. neither space nor ~ are close to enter
[18:29:20] <geirha> but in us layout, the ~ symbol is next to 1
[18:29:35] <geirha> in norwegian layout, it happens to be right next to enter instead
[18:30:04] <OMGOMG> oh really
[18:30:15] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Read error: Connection reset by peer)
[18:31:24] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[18:32:35] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[18:33:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:35:36] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[18:37:06] <anddam> I have $mydir set to a path, how can I check if "$mydir/foo" and "foo" point to the same file?
[18:37:19] <anddam> I am specifically thinking about the case when mydir=.
[18:37:35] <geirha> if [[ $mydir/foo -ef foo ]] ; then
[18:37:35] <twkm> help test
[18:38:19] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[18:38:53] <Tach> geirha yes I read about that I will try to print that file to see what it makes
[18:39:59] <Tach> geirha I wonder if the bash script makes it actually because it's auths are empty
[18:40:12] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:40:24] <__monty__> Hmm, I'm trying to copy a directory hierarchy using cp, but I want to filter out certain files so I'm using `find | for ...; do cp --parents...`. However, the source doesn't have write permissions anywhere and cp copies the directories without write permission and if there's multiple files to copy to a directory the second cp runs into a permissions error. Is there some obvious solution I'm overlooking?
[18:40:30] <geirha> docker login will prompt you for username and password. If you don't input anything, it won't store anything
[18:41:13] <Soliton> find | for makes no sense.
[18:41:23] <selckin> __monty__: gonna guess rsync might make things easier
[18:41:47] <geirha> and there's certainly no point in running docker login every time. You do it once, and it's persisted for eternity in that file
[18:42:09] *** Joins: frostwork (~frostwork@user/frostwork)
[18:42:23] <__monty__> Soliton: That's why I have the $(cat).
[18:42:27] <geirha> anyway, better to take that to #docker
[18:42:48] <__monty__> selckin: Limited environment, so no rsync and I'm trying to avoid cpio because it seems so slow.
[18:43:27] *** Quits: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it) (Quit: Konversation terminated!)
[18:43:39] <Soliton> either  find ... -exec cp ...  or  find ... | while read; do ...
[18:43:40] <selckin> __monty__: last part sounds like 'umask' problem
[18:43:58] <geirha> You have an irrational fear against while loops, so everything has to be for loops, or ...?
[18:44:01] *** Quits: l4s8g___ (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:44:10] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:44:58] *** Joins: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[18:45:05] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:45:41] <anddam> geirha: ohhh    FILE1 -ef FILE2  True if file1 is a hard link to file2.
[18:46:05] <anddam> I thought that was -e and -f and couldn't understand why a two operands form was fine
[18:46:08] <anddam> nice
[18:46:10] <anddam> thx
[18:46:46] <geirha> yeah, -e and -f looks like options, but they're not; test has no options at all, they are all operators
[18:47:07] *** Joins: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[18:50:30] *** Joins: vysn (~vysn@user/vysn)
[18:51:24] <Tach> geirha teah true, but also... I have basic auth in front of it, testing out
[18:51:33] <Tach> http basic auth
[18:52:37] *** Quits: skered (~dereks@user/skered) (Ping timeout: 240 seconds)
[18:52:55] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca) (Remote host closed the connection)
[18:53:18] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca)
[18:53:28] <Soliton> __monty__: do you have any evidence that calling cp for every single file is going to be faster than cpio? perhaps figure out why cpio is slow first.
[18:53:49] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[18:54:41] <__monty__> Soliton: Well I can only measure once I figure out all these permission troubles.
[18:55:20] <Soliton> trivial to fix your dir permission for a test but ok.
[18:56:12] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 240 seconds)
[18:56:16] *** Joins: luva7 (~luva@185.168.9.232)
[18:56:21] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 252 seconds)
[18:58:26] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[18:58:27] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[18:58:27] *** Joins: Bercik (~Redomen@user/bercik)
[18:59:39] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 252 seconds)
[18:59:39] *** luva7 is now known as luva
[18:59:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:05] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[19:01:45] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[19:01:46] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Client Quit)
[19:02:14] *** Joins: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com)
[19:02:33] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[19:03:16] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[19:05:06] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Client Quit)
[19:07:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:08:12] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[19:09:22] *** Joins: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it)
[19:12:04] *** Joins: han-solo (~hanish@user/han-solo)
[19:14:55] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca) (Remote host closed the connection)
[19:14:59] *** Joins: ownddw (~slackjeff@191.177.181.139)
[19:15:00] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:15:18] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca)
[19:15:22] <ownddw> to know the total time it takes to execute a set of commands, does the time command work?
[19:15:23] <ownddw> example
[19:15:27] *** Joins: haniaF (~haniaF@83.24.223.148.ipv4.supernova.orange.pl)
[19:15:32] *** Parts: haniaF (~haniaF@83.24.223.148.ipv4.supernova.orange.pl) ()
[19:15:40] <ownddw> time cat /etc/passwd | grep "example_user"
[19:15:49] <ownddw> or need pass subshell for get all time
[19:15:49] <ownddw> ?
[19:16:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[19:17:08] *** Joins: iomari891 (~iomari891@102.89.3.240)
[19:17:11] *** Joins: masber (~masber@2001:620:808:1200:8000::d)
[19:17:16] *** Joins: revolve (~u0_a227@82-132-239-29.dab.02.net)
[19:17:40] <Soliton> you can pass time a pipeline though the cat is useless there.
[19:18:20] <Soliton> getent passwd example_user
[19:18:28] *** Joins: haniaF (~haniaF@83.24.223.148.ipv4.supernova.orange.pl)
[19:19:18] <ownddw> Soliton, its only example what I want to know is if using the team at the beginning of the cat it will get all the pipewire time
[19:19:25] <ownddw> time command1 | command2 | command3
[19:20:04] <Soliton> yes team can take a pipewire.
[19:21:12] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[19:22:04] *** Joins: andril (~andril@097-068-232-130.biz.spectrum.com)
[19:23:28] <__monty__> Soliton: On ~1GB of data cpio seems to take about twice as long as cp.
[19:24:54] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:24:56] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[19:26:09] <Soliton> one cp call or multiple?
[19:26:17] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[19:27:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:29:12] <__monty__> One for each file, but only a couple of files in the directory.
[19:29:58] *** Quits: gschanuel21 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[19:30:23] *** Quits: Afroboy (~afroboy@41.200.60.148) (Remote host closed the connection)
[19:32:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:30] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:34:29] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[19:34:36] *** Quits: iomari891 (~iomari891@102.89.3.240) (Read error: Connection reset by peer)
[19:34:49] *** Joins: N4buc0 (~N4buc0@177.42.101.69)
[19:35:20] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:1633:26ee:aba4:4bca) (Remote host closed the connection)
[19:36:15] <Soliton> so if you don't have many files just issue a single cp call instead.
[19:37:23] *** Quits: masber (~masber@2001:620:808:1200:8000::d) (Ping timeout: 256 seconds)
[19:37:29] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[19:38:35] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[19:39:23] *** Joins: lispy (~lispy@user/lispy)
[19:39:53] <Tach> geirha fixed :) thanks!
[19:39:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:40:19] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:40:32] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:40:54] <jelly> __monty__, I wonder, can your cpio set a different I/O block size?
[19:41:16] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[19:44:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:45:02] <jelly> something large enough, like 256KiB might give more reasonable performance if it's an old GNU tool
[19:47:13] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[19:47:28] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[19:49:54] *** Joins: bluedust (~bluedust@117.222.190.30)
[19:49:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[19:51:47] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[19:53:00] *** Quits: UnnamedBeer (~UnnamedBe@75.red-79-159-0.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[19:53:49] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[19:53:52] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:ed65:c9bc:ef9c:c767)
[19:54:09] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[19:54:41] *** Joins: tmm88 (~tmm88@user/tmm88)
[19:54:55] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[19:54:59] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[19:57:18] *** Quits: callq (~callq@157.41.35.249) (Quit: callq)
[19:57:24] *** Quits: stevenm (~stevenm@195.62.218.30) (Ping timeout: 240 seconds)
[20:02:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:02:16] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:03:38] <__monty__> Soliton: cp (and rsync) ~30 s, find -exec cp {}+ (Figured it might reduce the number of cp invocations) ~100 s, cpio ~70 s, cpio -B ~100 s, tar ~220 s.
[20:05:00] <Soliton> unless you have a lot of files find -exec cp should be a single cp call. how can that be slower than multiple cp calls?
[20:05:24] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[20:05:32] <__monty__> I suppose the archival tools might be concatenating blocks into a contiguous stream?
[20:06:21] <__monty__> I can't explain that. I would expect fewer cp invocations to be faster too.
[20:06:21] <Soliton> i'm just comparing cp and find -exec cp. makes no sense at all that the one with less calls is slower.
[20:06:37] <jelly>        -B     Set the I/O block size to 5120 bytes. # that's my cpio, and 5KiB is horribly small
[20:06:51] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (Ping timeout: 256 seconds)
[20:07:05] <__monty__> Maybe find interleaved with cp causes caching issues?
[20:07:23] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[20:07:30] <Soliton> where are the two interleaved?
[20:07:32] <jelly> it shouldn't, unless you're VERY contstrained with RAM
[20:07:38] <__monty__> jelly: I'll try with GNU cpio. Looks like BSD cpio doesn't even apply -B in -p mode.
[20:08:23] <jelly> GNU cpio here seems to have -C, --io-size=NUMBER (bytes)
[20:08:26] <__monty__> Soliton: Wouldn't find -exec execute cp as soon as it has a list of paths to pass? Oh, I guess that's not actually different from piping.
[20:09:18] <Soliton> well, since you're not saying anything to the contrary i assume find does a single cp call.
[20:09:45] <anddam> brace expansion is a bash feature, POSIX sh does not have it, right?
[20:09:47] <jelly> and if it's a small number of files, like thousands, that metadata will probably stay cached anyway
[20:09:48] <Soliton> find piped into a while read loop that does cp would run find and cp concurrently.
[20:10:10] <Soliton> anddam: yes.
[20:10:56] <anddam> thx
[20:11:16] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[20:11:49] *** Joins: et_ (~et@user/et)
[20:11:54] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:11:54] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:11:54] *** Joins: nortoh (~nortoh@user/nortoh)
[20:12:19] <__monty__> jelly: With a 1 MiB block-size cpio takes ~100 s.
[20:13:10] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[20:13:11] *** et_ is now known as et
[20:13:30] *** Joins: magla (~gelignite@55d42258.access.ecotel.net)
[20:13:54] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:14:26] *** Quits: Kyuzo68 (~Kyuzo@a-sa7-79.tin.it) (Quit: Konversation terminated!)
[20:14:51] *** Joins: shad (~shad@user/shad)
[20:15:47] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:16:03] *** Joins: bluedust (~bluedust@117.222.190.30)
[20:16:29] *** Quits: aakashhemadri (~aakashhem@2400:8904::f03c:93ff:fe84:57c9) (Quit: Tata)
[20:17:51] *** porn is now known as hentai
[20:18:26] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:19:01] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:19:14] <jelly> boo
[20:21:13] *** Joins: zebrag (~chris@user/zebrag)
[20:21:24] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[20:21:36] *** cdown_ is now known as cdown
[20:21:40] <emanuele6> moo
[20:22:03] <__monty__> I'm trying to replace the "+" with ";" so find will execute cp for every result but I'm getting "missing argument to -exec`, can anyone spot the problem? `time find ~/test_src/ -exec cp --parents -p -t dest_cp2 {} ;`
[20:22:18] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[20:22:21] <Soliton> \;
[20:22:43] *** Quits: TMan459 (~TMan459@068-113-235-150.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[20:23:11] <__monty__> >.< Thank you.
[20:23:14] <jelly> tell'em the solution instead of winking and frowning, lefty
[20:24:25] *** Joins: luva7 (~luva@146.70.62.252)
[20:25:27] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[20:25:31] <__monty__> That took ~100 s.
[20:26:00] <__monty__> So I guess the while loop solution's benefit is that cp gets to run concurrently?
[20:28:12] *** Quits: luva (~luva@185.168.9.232) (Ping timeout: 252 seconds)
[20:28:12] *** luva7 is now known as luva
[20:29:08] *** Quits: bullshark1 (~bullshark@cpe-70-123-216-149.satx.res.rr.com) (Quit: WeeChat 3.4)
[20:30:39] *** Joins: sinaowolabi_ (~SinaOwola@169.159.117.49)
[20:30:44] <yitz> When doing disk IO from magnatic disk, more processes can often mean contention and slower compared to serial ops
[20:31:02] <yitz> Concurrent IO isn't always faster IO
[20:32:26] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[20:32:48] *** Quits: luckiswithme (~luckiswit@149.167.138.19) (Remote host closed the connection)
[20:33:00] *** Joins: aakashhemadri (~aakashhem@2400:8904::f03c:93ff:fe84:57c9)
[20:33:36] *** Quits: revolve (~u0_a227@82-132-239-29.dab.02.net) (Read error: Connection reset by peer)
[20:34:02] *** Joins: lavaball (felix@31.204.155.215)
[20:35:29] *** Joins: revolve (~u0_a227@82-132-246-92.dab.02.net)
[20:35:54] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[20:36:09] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:37:53] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[20:41:04] *** Joins: seninha (~seninha@user/seninha)
[20:45:23] *** Quits: alius (~alius@2001:861:4444:49c0:d4c1:b0ac:a0ba:10e2) (Quit: Leaving)
[20:46:21] *** Quits: sinaowolabi_ (~SinaOwola@169.159.117.49) (Ping timeout: 252 seconds)
[20:46:32] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:46:45] *** Joins: knstn (~knstn@ppp-94-66-57-125.home.otenet.gr)
[20:47:26] *** Joins: pgas (~pgas@user/pgas)
[20:48:44] *** Quits: pgas (~pgas@user/pgas) (Client Quit)
[20:49:54] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[20:52:09] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[20:54:36] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:55:09] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[20:55:15] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 240 seconds)
[20:55:25] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.6)
[20:57:24] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[20:57:35] <Soliton> i suppose find waits for each command so that might be it, yeah.
[20:58:12] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:38] *** Joins: volga629 (~volga629@72.139.93.26)
[20:59:06] <Soliton> "Each invocation shall begin after the last pathname in the set is aggregated, and shall be completed before the find utility exits and before the first pathname in the next set (if any) is aggregated for this primary, but it is otherwise unspecified whether the invocation occurs before, during, or after the evaluations of other primaries."  sounds like it could run stuff in parallel as well though.
[21:00:10] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:00:36] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.6) (Ping timeout: 240 seconds)
[21:00:48] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:01:35] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[21:01:43] *** Joins: skered (~dereks@user/skered)
[21:01:53] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[21:03:34] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[21:04:30] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[21:04:51] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Quit: leaving)
[21:04:55] *** Joins: TMan459 (~TMan459@068-113-234-055.res.spectrum.com)
[21:05:36] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[21:05:48] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:06:29] *** Joins: masoudd (~masoudd@user/masoudd)
[21:06:38] *** Joins: mat001 (~mat001@72.28.108.216)
[21:06:42] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (Ping timeout: 252 seconds)
[21:06:59] *** Quits: ownddw (~slackjeff@191.177.181.139) (Quit: Leaving)
[21:07:18] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[21:08:57] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:18] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:10:02] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[21:10:04] *** Joins: johnjaye (~pi@173.209.64.74)
[21:10:12] <johnjaye> is there a way to tab complete previous tab completions?
[21:10:28] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:10:34] <johnjaye> like i previouly tab complete a file, a command, and another file. then just limit the tab completions to the last say 10 history entries?
[21:10:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372)
[21:12:01] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:12:45] *** Joins: thiras (~thiras@user/thiras)
[21:15:16] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[21:16:30] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 272 seconds)
[21:17:45] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.6)
[21:18:10] <apathor> johnjaye: there's yank-last-arg and yank-nth-arg. not tab completion but maybe what you want
[21:18:15] *** Quits: andril (~andril@097-068-232-130.biz.spectrum.com) (Ping timeout: 252 seconds)
[21:24:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:27:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:28:12] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.6) (Ping timeout: 240 seconds)
[21:29:10] *** Joins: adac (~adac@213-47-252-7.cable.dynamic.surfer.at)
[21:32:35] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Read error: Connection reset by peer)
[21:32:56] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:33:06] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:35:16] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0)
[21:35:53] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[21:36:18] *** Joins: Minvera (~Minvera@user/Minvera)
[21:39:11] *** cthulchu is now known as cth
[21:39:17] *** Quits: Sayona (~Sayona@user/sayona) (Quit: Bye :))
[21:40:50] *** Joins: Sayona (~Sayona@user/sayona)
[21:40:50] *** Quits: unop (~unop@195.91.14.193) (Read error: Connection reset by peer)
[21:41:23] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[21:41:35] *** Joins: unop (~unop@195.91.14.193)
[21:41:48] *** Joins: Minvera (~Minvera@user/Minvera)
[21:41:50] *** Joins: sinaowolabi_ (~SinaOwola@41.58.237.207)
[21:43:24] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:43:54] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:45:29] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:45:48] *** Joins: dreamon (~dreamon@p54b14153.dip0.t-ipconnect.de)
[21:45:48] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:46:01] *** Quits: dreamon (~dreamon@p54b14153.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:48:13] *** Quits: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com) (Quit: WeeChat 3.4)
[21:51:46] *** Quits: Sayona (~Sayona@user/sayona) (Quit: Bye :))
[21:52:16] *** Joins: greycat (~greg@209.142.155.49)
[21:53:15] *** Joins: Sayona (~Sayona@user/sayona)
[21:53:19] *** Joins: crashrep (~crashrep@user/crashrep)
[21:55:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:247c:2205:328f:87d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:57:52] <haniaF> hi, I'm trying to create a wrapper script redirecting stdin to another script and logging stdout with tee. so far i came up with this (exec push-webhook.sh < &0) 2>&1 | tee -a "$(date +'post-receive_%Y-%m-%d').log" but it yields a syntax error
[21:58:40] *** Quits: revolve (~u0_a227@82-132-246-92.dab.02.net) (Read error: Connection reset by peer)
[21:58:48] <greycat> <&0 would be a no-op even if you didn't type it wrong
[21:59:25] *** Joins: rgrinberg (~textual@187.194.14.9)
[21:59:33] <greycat> also, wrapping a program in a subshell and putting exec in front of it... is just silly
[21:59:50] <greycat> push-webhook.sh 2>&1 | tee -a "$(date +thing)"
[22:00:06] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:00:31] <haniaF> yeah, but runner will provide some input via stdin. does it going to make its way to push-webhook.sh like that?
[22:00:37] <greycat> yes
[22:00:47] <haniaF> oh
[22:01:11] <haniaF> i thought it needs some sort of trick, like using "$@" for args
[22:01:59] <jelly> what is that supposed to do anyway, (exec ...) ?  argv0 hiding?
[22:02:38] <greycat> I suspect they were just throwing random syntax elements at it, hoping to undo the error they made when they broke apart <&0
[22:02:49] <Soliton> file descriptors are inherited by child processes. the standard ones are no exception.
[22:03:11] <jelly> where did my shell get them from?!?
[22:03:18] <Friithian> well that was interesting, I go tWarning: Program '/bin/bash' crashed. playing around with exec
[22:03:24] <jelly> xterm, I guess
[22:03:24] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:04:04] <haniaF> can't find it anymore, some SO answer provided similiar solution for args-forwarding wrapper
[22:04:18] <greycat> !so
[22:04:18] <greybot> Like virtually every other web site you find via Google, StackOverflow is chock full of wrong answers. Verify everything you read there before using it.
[22:04:26] <Soliton> sure, arguments work differently.
[22:05:04] <haniaF> therefore, would 'exec' be needed if that that was for the sake of arguments?
[22:05:16] <greycat> no
[22:05:16] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Ping timeout: 272 seconds)
[22:05:19] <Soliton> exec does nothing in your example.
[22:05:44] <Soliton> in bash anyway. perhaps in some other shell.
[22:07:37] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:07:53] *** Joins: luva3 (~luva@185.168.9.231)
[22:08:52] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:a2ec:d550:c4fb)
[22:09:36] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:1d61:6202:da16:ab6d)
[22:10:51] *** Joins: aidalgol_ (~aidalgol@user/aidalgol)
[22:11:31] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 256 seconds)
[22:12:14] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 272 seconds)
[22:12:15] *** luva3 is now known as luva
[22:13:17] *** aidalgol_ is now known as aidalgol
[22:17:51] <johnjaye> apathor: ah ok thanks
[22:20:24] *** Quits: sinaowolabi_ (~SinaOwola@41.58.237.207) (Ping timeout: 252 seconds)
[22:21:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[22:27:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:28:18] <welder> how to process data in batches of 10 lines?
[22:28:50] <welder> a program that outputs multiple random results in 10 lines each sample
[22:29:38] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[22:29:50] <Soliton> you could call read 10 times.
[22:29:56] <greycat> In awk, use a filter with something like (NR % 10 == 0) in it.  In bash, a counter variable and a similar check.
[22:30:10] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.6)
[22:30:18] <Soliton> looks like mapfile could work as well.
[22:30:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[22:30:40] <emanuele6> or you could use:   while mapfile -n 10; (( ${#MAPFILE[@]} ))); do ... ; done
[22:30:57] <emanuele6> probably with -t
[22:31:20] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[22:31:55] <mattf> how do i store as a command that can contains pipes or redirects like > /dev/null
[22:31:59] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[22:32:16] <Soliton> don't put code in variables.
[22:32:18] <greycat> !faq complex
[22:32:18] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[22:32:22] <mattf> because if i do that and then call it with `$command` it doesn't seem to know about the '>'
[22:32:23] <Soliton> wrie a function instead.
[22:32:24] <llua> foo() { bar > /dev/null; }
[22:32:41] <mattf> but i want the user to be able to set this easilly
[22:32:58] <Soliton> !eval
[22:32:58] <greybot> 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
[22:32:59] <llua> creating functions is pretty easy
[22:33:03] <mattf> ah
[22:33:09] <mattf> not enough easy
[22:33:15] <mattf> eval is good
[22:33:29] <greycat> "I want my user to be able to give me commands that I will blindly execute".  Sounds super safe.  Nothing could possibly go wrong.
[22:33:37] <mattf> yeah it is on his machine
[22:33:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[22:33:59] *** Joins: mat001 (~mat001@72.28.108.216)
[22:34:19] <Soliton> easier to shoot yourself in the foot. with a function declaration bash would tell you mistakes too early.
[22:34:26] <llua> !b6
[22:34:27] <greybot> When given a choice of solutions, the newbie will always choose the wrong one.
[22:34:35] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 240 seconds)
[22:35:20] *** Joins: jmew (~jmew___@host-78-147-81-209.as13285.net)
[22:35:20] *** Quits: jmew (~jmew___@host-78-147-81-209.as13285.net) (Changing host)
[22:35:20] *** Joins: jmew (~jmew___@user/jmew)
[22:35:35] *** Joins: fatal (~0x00@user/fatal)
[22:36:35] <Soliton> probably a bad interface design to begin with where the user needs to provide code.
[22:37:08] <OMGOMG> !wayattd
[22:37:11] <llua> yet isn't smart enough be able to define a function
[22:37:14] <OMGOMG> !wayrttd
[22:37:14] <greybot> What are you /REALLY/ trying to do!?
[22:38:28] <Soliton> yes, here the user must be more proficient then the script author since they don't get to write plain shell code they need to also put it correctly in an argument.
[22:39:56] <Soliton> easy was probably meant for the script author come to think of it.
[22:40:27] <greycat> except the author didn't even know how to write eval "$x"
[22:40:44] <greycat> "Nothing could possibly go wrong."
[22:40:54] <Soliton> don't have to design a good interface just slap eval on it and let the user deal with it.
[22:40:55] *** Quits: mat001 (~mat001@72.28.108.216) (Remote host closed the connection)
[22:41:40] *** Joins: mat001 (~mat001@72.28.108.216)
[22:45:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:46:10] <johnjaye> greycat: is it < &0 and <&0 are not equivalent?
[22:46:34] <johnjaye> i guess bash cares about whitespace. a lot. so that makes sense they wouldn't be
[22:46:37] <greycat> # echo <&0
[22:46:39] <shbot> greycat: no output
[22:46:40] <greycat> # echo < &0
[22:46:42] <shbot> greycat: bash: syntax error near unexpected token `&'
[22:46:51] <greycat> Boy that was so fucking hard to test.
[22:47:01] <johnjaye> i didn't know how to use the bot
[22:47:05] <johnjaye> # echo "hello chat"
[22:47:06] <shbot> johnjaye: hello chat
[22:47:08] <greycat> then open a god damned terminal
[22:47:15] <johnjaye> # echo -n "hello chat"
[22:47:17] <shbot> johnjaye: hello chat
[22:47:28] <johnjaye> i'm typing in a terminal right now inf act
[22:47:38] <greycat> then you can test it right there in your terminal
[22:47:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:49:15] <johnjaye> yes
[22:49:16] <Soliton> you can have spaces between <& and 0.
[22:49:35] <johnjaye> Soliton: my terminal agrees
[22:50:29] *** Joins: volga629 (~volga629@72.139.93.26)
[22:52:45] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:58:34] *** Joins: puer-robustus (~alexander@81.6.34.22)
[23:01:10] <emanuele6> <&0 is pointless
[23:02:44] <haniaF> greycat the idea behind using exec was to remove wrapper from the process tree once the child script started
[23:03:01] <emanuele6> it's so pointless that `strace bash -c 'echo hi <&0'' shows that bash just ignores it
[23:05:19] <Soliton> haniaF: can't have a pipeline then.
[23:06:43] <johnjaye> emanuele6: i mean it has to process it as an argument i assume at laest
[23:06:45] <johnjaye> but yeah
[23:07:25] <Soliton> you can try exec > >(tee ...) and then exec wrapper. who knows if tee will ever die then.
[23:08:48] <puer-robustus> hi all
[23:08:48] <puer-robustus> I am trying to write a bash script which will replace special characters in filenames
[23:08:48] <puer-robustus> since I'd like the script to run through directories recursively, I was thinking of using find + awk
[23:08:48] <puer-robustus> now, I'd also like to specify the special characters and their replacements in a dictionary so that the script is easily customizable
[23:08:48] <puer-robustus> however, I cannot come up with a way of properly referencing the special character and its replacement variable in my loop
[23:09:11] <Soliton> !faq rename
[23:09:11] <greybot> https://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
[23:09:14] <johnjaye> is awk the most portable language other than sh?
[23:09:51] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[23:10:13] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:10:31] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:10:32] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[23:10:46] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:11:13] <phy1729> awk is also specified by POSIX (as are C, sed, bc, m4, lex, yacc)
[23:11:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:12:04] <puer-robustus> I was thinking of using rename ... but I also did not manage to make my key-value map idea fly there
[23:12:23] <puer-robustus> thing is, I don't want to enumerate all replacements in another rename call
[23:12:38] <johnjaye> wait lex and yacc are in posxi?
[23:12:42] <johnjaye> didn't know that
[23:12:47] <johnjaye> i thought it was more minimal than that
[23:13:37] <puer-robustus> say
[23:13:37] <puer-robustus> rename -n 's/@/-at-/' *
[23:13:37] <puer-robustus> rename -n 's/ /_/' *
[23:13:37] <puer-robustus> not ideal imho
[23:18:03] <emanuele6> !rename
[23:18:04] <greybot> rename(1) could be one of three or four different programs -- or you might not have it on your system. A loop or find expression that uses mv is safer. See also !faq rename
[23:20:35] <jelly> perl rename is nice when you have it
[23:21:46] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:22:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:22:43] *** Quits: rgrinberg (~textual@187.194.14.9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:18] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[23:27:34] <greycat> # touch 'a+b c&d^e!f'; for f in *; do mv -- "$f" "${f//[![:alnum:]]/_}"; done; ls
[23:27:36] <shbot> greycat: a_b_c_d_e_f
[23:28:11] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:29:33] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[23:29:59] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:30:36] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 240 seconds)
[23:31:18] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:31:27] <puer-robustus> greycat: thanks
[23:32:33] <puer-robustus> came up with this in the meanwhile
[23:32:33] <puer-robustus> for key in "${!keymap[@]}"; do
[23:32:33] <puer-robustus>     echo ${keymap[$key]}
[23:32:33] <puer-robustus>     find . -type f -name "*$key*" -exec rename "s/$key/${keymap[$key]}/" * {} +
[23:32:33] <puer-robustus> done
[23:33:12] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[23:33:26] <greycat> if you *know* your system has a particular implementation of rename that you can live with, then just do find ... -exec rename '...' {} + amd be done with it
[23:33:46] <greycat> (your find command is badly broken)
[23:34:21] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Quit: l4s8g)
[23:34:22] <greycat> (the fact that you call it more than once is also quite abhorrent -- build ONE mapping and pass that)
[23:34:47] *** Joins: rcernin (~rcernin@124.190.132.36)
[23:36:56] <puer-robustus> bear with me, I am not particularly shell literate
[23:36:57] <puer-robustus> is there a smart mapping for German umlaut characters? I liked your conversion from non alphanumeric characters, but that is not gonna cut if for ä, ü, ö, ß etc.
[23:37:07] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[23:37:20] *** Joins: kill (~killown@user/killown)
[23:38:03] *** Quits: aakashhemadri (~aakashhem@2400:8904::f03c:93ff:fe84:57c9) (Quit: Tata)
[23:38:20] <Soliton> if you want ascii transliteration then iconv can do that, i think.
[23:38:30] <emanuele6> puer-robustus: use [a-zA-Z0-9] in bash those will be limited to ascii
[23:38:31] *** Joins: mat001 (~mat001@72.28.108.216)
[23:38:32] <grawity> perl Text::Unidecode
[23:38:38] <greycat> The first thing you need to do is read the manual for your rename.  Which I suspect is the minimalist perl wrapper, so what you really need to do is LEARN PERL.  Learn how to do all the mappings in ONE call to rename, not 72 calls.
[23:38:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:38:58] <emanuele6> i mean [!a-zA-Z0-9] of course
[23:39:22] <greycat> # rename --version
[23:39:24] <shbot> greycat: bash: rename: command not found
[23:39:32] <greycat> bot ain't got one, so we'll have to do this locally
[23:39:43] <jelly> # prename --version
[23:39:44] <shbot> jelly: bash: prename: command not found
[23:39:48] <jelly> curses
[23:39:53] <puer-robustus> it is the perl wrapper indeed
[23:41:03] <jelly> I've been using "prename" explicitely to avoid getting surprised by a different rename.  Perhaps the bot could gain that.  But then you also need to put a whole perl inside.
[23:41:39] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:42:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb)
[23:42:33] <geirha> I can always make a rename command for it, but since it's not a standard command, it might not do exactly what you expect
[23:42:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[23:42:54] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.6) (Ping timeout: 252 seconds)
[23:43:09] * greycat looks at "perldoc -f tr" and then tries rename 'tr/.../../' and does not get the expected result
[23:43:37] <grawity> prename doesn't enable UTF-8 mode it seems
[23:43:47] <greycat> unicorn:/tmp$ touch 'äbác'; ls *b*c; rename 'tr/äá/aa/' *b*c; ls *b*c
[23:43:47] <greycat> äbác
[23:43:47] <greycat> aabaac
[23:43:52] <jelly> also, you can't s/ß/ss/ with tr///
[23:43:56] <grawity> so the expression ends up handling filenames as raw bytes instead of utf8 characters
[23:44:20] <jelly> need to tell perl stdin is UTF-8
[23:44:33] <Soliton> iconv -t ascii//translit <<< ß
[23:44:47] <grawity> try perl -CSDA `which prename`
[23:45:18] <grawity> perl -CSDA /usr/bin/prename -n 'use Text::Unidecode; s{[^/]+$}{unidecode($&)}e' ./*
[23:45:19] <Soliton> should decide if this is automatic ascii transliteration or generic renaming.
[23:45:53] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372) (Ping timeout: 250 seconds)
[23:45:58] <grawity> ...ughh Unidecode translates „AB“ to ,,AB"
[23:46:06] *** Joins: bluedust (~bluedust@117.222.190.30)
[23:46:32] <greycat> what I'm hearing is (p)rename sucks ass
[23:46:53] <puer-robustus> Soliton: ascii transliteration would be fine for me
[23:46:57] <grawity> more generally, perl's handling of utf8 sucks ass
[23:47:01] <grawity> it's literally worse than python
[23:47:21] <geirha> It's a bit like sed. You're okay as long as you stick with simple s/../../ stuff
[23:47:27] <Soliton> then no need to take any translation table. use a tool that has this already implemented.
[23:47:35] <grawity> extremely fun things happen when you concatenate a "utf-8" string and a "byte" string in perl
[23:47:41] <puer-robustus> looking into it, thanks for the suggestion
[23:47:53] <puer-robustus> wasn't aware of it
[23:48:18] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.6)
[23:48:24] <Soliton> # iconv -f utf-8 -t ascii//translit <<< ß
[23:48:25] <shbot> Soliton: ss
[23:48:28] <jelly> touch 'äbác'; ls *b*c; perl -CSDA =prename 'tr/äá/aa/' *b*c; ls *b*c # does the right(?) translit'y thing
[23:48:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:49:06] <Soliton> you may be able to use [[=a=]]
[23:49:12] *** Joins: bomb-on_ (~bomb-on@194.144.47.113)
[23:49:30] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 252 seconds)
[23:49:34] <greycat> you'll need a separate
[23:49:48] <greycat> you'll need a separate -e 's/ß/ss/g' argument
[23:50:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:50:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:50:48] <jelly> the Text::Unidecode thing does it on its own, however: rename(./äbácß, ./abacss)
[23:51:09] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[23:51:44] *** Joins: yustin (~yustin@user/yustin)
[23:51:47] *** Joins: aakashhemadri (~aakashhem@2400:8904::f03c:93ff:fe84:57c9)
[23:51:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:52:00] * jelly reads about -C in perlrun(1)
[23:53:34] <johnjaye> wait things in posix are actually perl wrappers
[23:53:41] <johnjaye> or just being provided by perl wrappers
[23:53:58] <larryv> rename is not POSIX
[23:54:08] <grawity> -CD is like 'use open qw(:encoding(UTF-8));' at the top of the script, -CSD extends it to 'use open qw(:std :encoding(UTF-8));' and -CA can be achieved using, hmm, 'utf8::decode($_) for @ARGV;' maybe?
[23:54:24] <grawity> so they could be *in* the script instead of requiring a weird perl invocation
[23:54:44] <grawity> but I guess prename wants to stick to that unix "filenames are made of bytes" story...
[23:54:55] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[23:55:02] *** Quits: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[23:55:11] *** Joins: unop (~unop@195.91.14.193)
[23:55:17] <greycat> well, that's true if you're the kernel
[23:55:23] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057)
[23:55:27] <grawity> fortunately, perl is not (yet) the kernel
[23:55:44] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[23:55:49] * grawity was tempted to enable the "reject non-UTF8 filenames" ext4 option when enabling casefolding support...
[23:56:44] *** Joins: zoe (~zoe@fsf/member/zoe)
[23:57:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:58:42] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:89c:f82b:eb69:d057) (Client Quit)
