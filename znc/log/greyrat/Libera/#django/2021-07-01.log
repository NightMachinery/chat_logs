[00:01:32] <koperfild> dodo buying
[00:03:12] *** Quits: bambanxx (~bambanx@181-163-41-56.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:24:38] <fleabag> koperfild: what's the project? I've got those in production at $work
[00:25:05] <fleabag> (feel free to dm me)
[00:31:03] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[00:40:38] *** Quits: serghei (~egrep@user/serghei) (Quit: serghei)
[00:44:17] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[00:44:31] *** Joins: Skyz (~Skyz@user/skyz)
[00:52:56] *** Joins: eldar_ (~eldar@83.242.179.145)
[00:53:12] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[00:53:49] *** Joins: eldar_72 (~eldar_@83.242.179.145)
[00:54:53] *** Quits: eldar_ (~eldar@83.242.179.145) (Quit: Leaving)
[00:56:54] *** Quits: eldar_72 (~eldar_@83.242.179.145) (Client Quit)
[00:58:25] *** Quits: Skyz (~Skyz@user/skyz) (Ping timeout: 246 seconds)
[01:00:28] *** Joins: Skyz (~Skyz@user/skyz)
[01:07:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:07:04] *** ChanServ sets mode: +v EvilDMP
[01:13:22] *** Quits: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net) (Quit: zzzz)
[01:14:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:15:31] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[01:16:15] *** Quits: doc (~doc@user/doc) (Ping timeout: 256 seconds)
[01:17:51] *** Joins: doc (~doc@user/doc)
[01:18:22] *** Quits: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[01:18:46] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Remote host closed the connection)
[01:19:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:19:55] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[01:20:37] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:45:47] *** Joins: serghei (~egrep@user/serghei)
[01:59:00] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:06:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:07:21] *** ChanServ sets mode: +v EvilDMP
[02:07:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:08:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:08:09] *** ChanServ sets mode: +v EvilDMP
[02:08:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:08:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:08:55] *** ChanServ sets mode: +v EvilDMP
[02:09:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:09:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:09:21] *** Joins: bambanxx (~bambanx@181.163.41.56)
[02:09:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:09:42] *** ChanServ sets mode: +v EvilDMP
[02:10:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:10:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:10:30] *** ChanServ sets mode: +v EvilDMP
[02:10:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:11:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:11:17] *** ChanServ sets mode: +v EvilDMP
[02:11:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:12:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:12:04] *** ChanServ sets mode: +v EvilDMP
[02:12:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:12:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:12:52] *** ChanServ sets mode: +v EvilDMP
[02:13:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:13:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:13:39] *** ChanServ sets mode: +v EvilDMP
[02:14:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:15:58] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[02:18:56] *** Quits: bambanxx (~bambanx@181.163.41.56) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:23:23] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:24:35] *** Joins: audiocat (~audio@2603-8081-1800-eb5b-1318-d982-9fef-6b65.res6.spectrum.com)
[02:28:48] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:29:04] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:30:53] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Read error: Connection reset by peer)
[02:36:13] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[02:38:22] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Read error: Connection reset by peer)
[02:38:24] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[02:38:25] *** Quits: mattcen[mx][m] (~mattcen@2001:470:69fc:105::5d1) (Write error: Connection reset by peer)
[02:38:27] *** Quits: theorangeone (~theorange@2001:470:69fc:105::4eb8) (Remote host closed the connection)
[02:38:34] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Remote host closed the connection)
[02:38:34] *** Quits: mambang[m] (~mambang@user/mambang) (Write error: Connection reset by peer)
[02:38:59] *** Quits: koperfild (~koperfild@147.161.12.46) (Quit: Client closed)
[02:39:19] *** Joins: mattcen[mx][m] (~mattcen@2001:470:69fc:105::5d1)
[02:42:13] *** Joins: theorangeone (~theorange@2001:470:69fc:105::4eb8)
[02:42:13] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[02:42:13] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[02:42:13] *** Joins: mambang[m] (~mambang@user/mambang)
[02:42:26] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[02:58:09] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:02:01] *** Joins: koperfild (~koperfild@147.161.12.46)
[03:02:09] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:19] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[03:05:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 256 seconds)
[03:06:29] *** Quits: himcesjf (uid409730@id-409730.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:11:16] *** Joins: bambanxx (~bambanx@181.163.41.56)
[03:17:23] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:17:32] *** Joins: Safa_[A_Boy] (~Safa@88.201.84.249)
[03:17:42] <Safa_[A_Boy]> Hi all. a question about cursor pagination in DRF.
[03:17:53] <Safa_[A_Boy]>  If I'm calling the first call (without any params), and it doesn't have a prev, and then later I wanted to go back (new items are added), what should I do?
[03:21:47] *** vinleod is now known as vdamewood
[03:22:53] *** Quits: najtsirk (~kristjan@2a00:23c8:9609:e01:1ae9:f0eb:6e4f:f03e) (Quit: WeeChat 3.0.1)
[03:26:08] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 258 seconds)
[03:26:43] *** Joins: Trieste (T@user/pilgrim)
[03:31:22] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:31:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 265 seconds)
[03:31:42] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:33:24] *** Quits: onorbumbum (~onorbumbu@2600:6c52:7800:3131:e931:a71b:cbb8:2558) (Ping timeout: 256 seconds)
[03:44:54] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[03:52:21] *** kostkon__ is now known as kostkon
[04:07:25] <bparker> Safa_[A_Boy]: afaik a 'no params' call will just always show the first page no matter what has been added
[04:07:36] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 272 seconds)
[04:08:45] <Safa_[A_Boy]> bparker, yes I know, I mean when I start, I have no links yet, so I start by calling without any. Later, new items has been added, so how can I get them if the first page didn't give me a prev link?
[04:29:51] *** Quits: bambanxx (~bambanx@181.163.41.56) (Ping timeout: 265 seconds)
[04:41:58] <schinckel> Reloading the first page will always show the "newest" items (or whatever the default ordering is).
[04:43:20] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[04:48:21] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:52:20] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Read error: Connection reset by peer)
[04:52:42] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:52:52] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[04:54:49] *** Joins: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl)
[04:54:58] *** Quits: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl) (Client Quit)
[04:55:43] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:01:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:12:31] <Safa_[A_Boy]> schinckel, I don't want that
[05:13:04] <Safa_[A_Boy]> Supposed that since I last fetched, 2 new pages where added. I'll lose the page in the middle if I reload the first page just like that
[05:13:18] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:19:38] <schinckel> Hmm. If you have your objects, you should be able to build a "previous" link based on the first element in the list?
[05:20:02] <schinckel> I don't know how the DRF keyset pagination stuff works - I built my own for use in normal django though.
[05:37:02] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:38:02] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[05:40:47] <Safa_[A_Boy]> schinckel, That is actually a good solution
[05:40:49] <Safa_[A_Boy]> Thanks!
[05:47:24] *** Joins: cliluw (~cliluw@ec2-52-211-17-48.eu-west-1.compute.amazonaws.com)
[05:51:05] *** Joins: himcesjf (uid409730@id-409730.tinside.irccloud.com)
[05:56:19] *** Quits: Lauxley (~lauxley@2a01:e34:ec55:2700:2c02:4e7:1485:f7ea) (Ping timeout: 268 seconds)
[06:01:56] *** Quits: fgau (~fgau@mail.berliner-termindienst.de) (Ping timeout: 252 seconds)
[06:02:08] *** Joins: fgau (~fgau@mail.berliner-termindienst.de)
[06:02:47] *** Quits: ktosiek (~ktosiek@li1810-126.members.linode.com) (Ping timeout: 268 seconds)
[06:02:55] *** Quits: koperfild (~koperfild@147.161.12.46) (Ping timeout: 246 seconds)
[06:13:52] *** Joins: Skyz (~Skyz@user/skyz)
[06:16:18] *** Joins: mitnk (~mitnk@103.29.141.146)
[06:29:07] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[06:31:33] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[06:34:51] *** Quits: Safa_[A_Boy] (~Safa@88.201.84.249) (Quit: Leaving)
[06:49:47] *** Quits: normic (~normic@p4fc3009e.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:50:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:05:23] *** Quits: cliluw (~cliluw@ec2-52-211-17-48.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:22:37] *** Joins: mihael (~mihael@2001:4454:2a8:9f00:c5b0:6b32:cbfe:292e)
[07:52:22] *** Joins: djapo (~archangel@user/djapo)
[07:55:14] *** Quits: mitnk (~mitnk@103.29.141.146) (Ping timeout: 258 seconds)
[07:56:24] *** Quits: mihael (~mihael@2001:4454:2a8:9f00:c5b0:6b32:cbfe:292e) (Quit: Client closed)
[08:01:31] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:06:33] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:07:28] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[08:07:29] *** Quits: justache (~justache@user/justache) (Quit: Ping timeout (120 seconds))
[08:08:23] *** Joins: justache (~justache@user/justache)
[08:24:06] *** Quits: anas (~anas@196.235.97.18) (Ping timeout: 272 seconds)
[08:58:30] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 252 seconds)
[09:20:24] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[09:21:00] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[09:26:46] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[09:29:56] <serafeim> hello friends
[09:33:20] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[09:38:18] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[09:42:57] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 258 seconds)
[09:54:50] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[10:06:34] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:08:00] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[10:09:14] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 272 seconds)
[10:14:22] <PaulWay[w]> Silly question, but is there any real difference between os.getenv and os.environ.get ?
[10:20:18] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[10:20:40] *** kostkon__ is now known as kostkon
[10:21:14] <Kim^J> PaulWay[w]: .getenv is a function, .environ behaves like a dictionary.
[10:21:17] <schinckel> I don't think so (I've never used getenv), but I assume that the real difference is that getenv has no mechanism to _set_ one?
[10:21:32] <PaulWay[w]> So no os.setenv?
[10:21:32] <Kim^J> So, you can do .environ['HOME'] rather than .getenv('HOME')
[10:21:38] <PaulWay[w]> Kim^J: that makes sense.
[10:21:50] <Kim^J> https://docs.python.org/3/library/os.html#os.environ
[10:21:56] <Kim^J> https://docs.python.org/3/library/os.html#os.putenv
[10:22:30] <Kim^J> Per docs, use os.environ
[10:24:07] <Kim^J> PaulWay[w]: Also, not a silly question, made me question what I use and why xD
[10:24:44] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 258 seconds)
[10:25:58] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[10:35:06] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[10:35:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:35:59] *** ChanServ sets mode: +v EvilDMP
[10:38:07] *** Joins: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de)
[10:42:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:36] *** Quits: znpy (~znpy@user/znpy) (Ping timeout: 268 seconds)
[10:44:48] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[10:45:20] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:46:46] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[10:49:00] *** Quits: serghei (~egrep@user/serghei) (Quit: serghei)
[10:51:21] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[10:57:12] *** Joins: anas (~anas@196.235.97.18)
[10:58:52] *** Joins: serghei (~egrep@user/serghei)
[10:59:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[11:01:37] *** Quits: audiocat (~audio@2603-8081-1800-eb5b-1318-d982-9fef-6b65.res6.spectrum.com) (Ping timeout: 256 seconds)
[11:01:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:01:42] *** ChanServ sets mode: +v EvilDMP
[11:02:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:13:48] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 252 seconds)
[11:14:05] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 256 seconds)
[11:26:46] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[11:32:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:37:57] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 258 seconds)
[12:17:10] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 272 seconds)
[12:18:40] <wallbroken> ok, the javascript hack is not a good way
[12:18:48] <wallbroken> because nobody wants to help me in those channel
[12:19:06] <wallbroken> so, there is somebody here who can help me with the checkox form?
[12:20:53] *** ChanServ changes topic to 'Welcome to #django || Please provide code and __full__ traceback in a pastebin || Pastebin at: http://dpaste.de/ -- do not use pastebin.com! || Django CoC applies: https://www.djangoproject.com/conduct/ || Django security releases issued: 3.2.5 and 3.1.13 https://www.djangoproject.com/weblog/2021/jul/01/security-releases/'
[12:22:26] <Kim^J> wallbroken: Hire a contractor/consultant.
[12:23:14] *** Joins: synack (~synack@user/synack)
[12:24:50] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[12:25:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:25:00] *** ChanServ sets mode: +v EvilDMP
[12:25:05] <wallbroken> Kim^J: it's not a bad idea
[12:25:13] <wallbroken> i haven't found any of this
[12:25:43] <wallbroken> i asked here but nobody wants to help me even if under payment
[12:33:31] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[12:38:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:19] *** Joins: doev (~doev@82.115.100.62)
[12:53:42] *** Joins: znpy (~znpy@user/znpy)
[12:56:08] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[12:57:01] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:04:06] *** Joins: Rikem (~mike@user/rikem)
[13:11:26] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:13:12] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:16:38] *** Joins: slav0nic (slav0nic@python.su)
[13:36:06] <doev> When I display a complex model (form) with the admin panel, can I give it a structure Maybe using some seperators/sections?
[13:37:59] <moldy> doev: yes, check the documentation for fieldsets
[13:43:34] <doev> moldy, I guess you mean this one: https://docs.djangoproject.com/en/3.2/intro/tutorial07/
[13:44:26] <moldy> doev: that's also good, yes
[13:44:34] <moldy> doev: the main documentation is here: https://docs.djangoproject.com/en/3.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets
[13:45:28] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:47:18] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[13:50:05] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:54:36] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[13:55:00] *** Quits: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de) (Quit: Client closed)
[14:05:57] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Ping timeout: 268 seconds)
[14:06:11] *** Joins: pycode (~pycode@2001:b07:5d28:551:f09a:788d:45dd:8036)
[14:06:12] <pycode> hello
[14:06:31] <pycode> it is very hard to find error in templates, is there a verbose mode or something ?
[14:06:33] <pycode> i get
[14:06:34] <pycode> Reverse for 'subscription' not found. 'subscription' is not a valid view function or pattern name.
[14:06:48] <pycode> without any mention of which .html
[14:06:49] <pycode> nothing
[14:06:51] <pycode> very hard
[14:07:00] <pycode> i end up with a global find on the project
[14:07:03] <pycode> but it is weird
[14:07:13] <hemebond> The template with "subscription" in it 😊 but if you have debugging enabled you can see the full traceback.
[14:07:40] <pycode> hemebond, sure i am on localhost with debug = true
[14:07:44] <pycode> but no mention
[14:07:50] <pycode> for example i am looking at the dashboard.html
[14:07:55] <hemebond> Can you paste the output somewhere?
[14:07:59] <pycode> but there is no subscription there
[14:08:07] <pycode> so i suppose some include
[14:08:10] <pycode> sure
[14:08:11] <pycode> one moment
[14:09:14] <pycode> https://bpa.st/SMYA
[14:09:21] <pycode> no info at all!
[14:10:47] <pycode> i wonder why it is very difficult to find an error in django (sometimes)
[14:11:54] <hemebond> Hmm, that's not helpful 🤷
[14:12:35] <hemebond> Are you saying it's not your app that requires that URL?
[14:14:01] <pycode> yes it is my app
[14:14:02] <pycode> somehwere
[14:14:04] <pycode> where
[14:14:16] <hemebond> Well, do you have a subscription URL?
[14:15:17] <tm007> wallbroken: we want to help you
[14:15:23] <pycode> hemebond, i mean...i know what that error means... it should be trader:subscription instead of just "subscription"
[14:15:52] <pycode> so now i am finding all the "subscription" strings in my project :(
[14:16:26] <hemebond> pycode: I think the same issue occurs in Jinja2-based projects.
[14:16:42] <hemebond> Your output looks a bit odd to me though.
[14:16:48] <hemebond> Like it's missing a whole lot.
[14:16:58] <pycode> i am using the default emplate system
[14:17:01] <pycode> *template
[14:17:18] <hemebond> Yes, I was just saying that it happens in other templating systems.
[14:17:45] <hemebond> I supposed I was thinking aloud about whether there is an issue in templating systems that prevents showing the filename.
[14:18:01] <hemebond> Maybe because all the templates get merged together before being parsed.
[14:20:32] <pycode> but i never had such problems in other framework like laravel etc..
[14:20:38] <pycode> idk maybe i need to enable something in config
[14:20:40] <pycode> idk
[14:20:48] <pycode> in settings i meant
[14:20:49] <hemebond> Can you share a screenshot of the output instead?
[14:22:45] <pycode> same there are the same info as the paste
[14:22:50] <pycode> now i found it and i fixed
[14:22:57] <pycode> but yes there is no mention of my files
[14:23:03] <pycode> just django files
[14:23:04] <hemebond> Yes, but I wanted to see what it looked like in the browser.
[14:23:20] <pycode> wait...i de-fix it :D
[14:23:25] <pycode> un-fix
[14:23:26] <pycode> :D
[14:23:28] <hemebond> 😆
[14:26:56] <rtpg> Yeah normally those errors, when you look at the render output in the browser it will give something nice. This doesn't solve use cases like if you're using the renderer for something that isn't "hitting a web browser" but it's been pretty good. I like the idea of these exceptions having the context built in though
[14:27:40] <hemebond> That's why I'm curious about what the output looks like because, from memory, I thought there was some context.
[14:27:56] <hemebond> But I see there's some debug toolbar app installed.
[14:28:30] <pycode> hemebond, https://i.ibb.co/2YCqZR5/error-1.png    https://i.ibb.co/M2Fc1zJ/error-2.png
[14:29:37] <hemebond> Okay that is just the normal output. Nothing helpful in those "Local vars" bits?
[14:31:57] <pycode> nothing that helps
[14:35:44] *** Joins: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de)
[14:35:58] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[14:35:58] <hemebond> To be honest I don't think I've had much trouble tracking down template issues.
[14:37:45] <hemebond> In your case every instance of subscription needs to be fixed.
[14:38:05] <hemebond> But I have seen people talk about this issue before.
[14:38:32] <wallbroken> tm007: so, where is the help?
[14:39:14] <tm007> Here I am signore
[14:39:18] <tm007> How may I help?
[14:39:28] <tm007> wallbroken:
[14:39:31] <hemebond> wallbroken: I suggested yesterday that you create simplified pages showing what you wanted to do. The code you shared didn't even seem to be valid HTML. Have you created the simplified example
[14:40:20] <wallbroken> hemebond: i want to create a form with a checkbox that selects my current user in an m2m field
[14:40:26] <wallbroken> is possible to do that?
[14:40:41] <tm007> Why not?
[14:40:44] <hemebond> Probably.
[14:41:07] <tm007> So you want to a checkbox of a list of all the users in your database?
[14:41:51] <tm007> M2M with user and what other model?
[14:42:52] <wallbroken> tm007: i have a list of items
[14:42:57] <wallbroken> each item has a checkbox
[14:43:15] <tm007> So far so good
[14:43:28] <wallbroken> this checkbox, when flagged, should select the current user in a list of user in the m2m field
[14:43:54] <tm007> What is the list of items?
[14:44:21] <wallbroken> https://www.dropbox.com/s/mxwu9ixlg7emqlg/Untitled.png?dl=0
[14:44:24] <wallbroken> you see here?
[14:44:29] <wallbroken> i have a list for each item
[14:44:47] <wallbroken> i want that the checkbox, selects the current logged user from the list when i flag the checkbox
[14:45:01] <tm007> Wait let me check
[14:46:46] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:10] <tm007> What is this admin, ccc object?
[14:48:16] <tm007> Is it from another model?
[14:49:35] <tm007> Django admin has such a use case.
[14:49:58] <tm007> auth_user and auth_permissions are two separate models
[14:50:20] <tm007> then there is auth_user_permissions
[14:50:31] <tm007> auth_user_permissions is M2M
[14:50:52] <tm007> wallbroken:
[14:54:04] *** Joins: lucascastro (~lucascast@177-185-133-236.dynamic.isotelco.net.br)
[14:54:27] <wallbroken> tm007: https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/models.py#L136
[14:56:38] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[15:09:30] <wallbroken> tm007: still ehre?
[15:17:08] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[15:21:03] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Quit: Client closed)
[15:23:56] <Kim^J> wallbroken: Why checkbox? The select list you have already works.
[15:31:23] <wallbroken> Kim^J: well, each user doesn't need to see the other user in the list
[15:31:36] <wallbroken> and also, is more useful to see a checkbox instead a list where to select
[15:33:24] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[15:38:22] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:48:46] <wallbroken> by default, django will use a mutli-select widget for rendering a M2M field on a ModelForm. so i'm trying to switching it out for checkboxes
[15:49:24] <wallbroken> i found a library
[15:49:25] <wallbroken> CheckboxSelectMultiple
[15:49:52] <wallbroken> self.fields["terminated_user"].widget = CheckboxSelectMultiple()
[15:49:55] <wallbroken> this is an idea
[15:50:03] <wallbroken> is tehre somebody who can confirm this?
[15:50:14] <wallbroken> i'm taking so much effort in doing this
[15:50:44] <wallbroken> checkboxselectmultiple can be found in django.forms.widgets
[15:52:49] *** Joins: thiras (~thiras@user/thiras)
[16:07:01] *** Quits: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[16:10:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Read error: Connection reset by peer)
[16:17:27] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[16:31:45] *** Quits: pycode (~pycode@2001:b07:5d28:551:f09a:788d:45dd:8036) (Remote host closed the connection)
[16:32:02] *** Joins: pycode (~pycode@2001:b07:5d28:551:a95e:6273:9827:1bfe)
[16:32:18] *** Quits: anas (~anas@196.235.97.18) (Ping timeout: 240 seconds)
[16:53:55] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[16:55:06] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 240 seconds)
[16:56:33] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:05:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:05:27] *** ChanServ sets mode: +v EvilDMP
[17:07:08] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Ping timeout: 256 seconds)
[17:11:18] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[17:14:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[17:14:43] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[17:18:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:25:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:25:12] *** ChanServ sets mode: +v EvilDMP
[17:33:22] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:35:15] *** Joins: ktosiek (~ktosiek@li1810-126.members.linode.com)
[17:48:29] <deniska> forms.CheckboxSelectMultiple is like built-in in django
[17:52:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:54:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:54:04] *** ChanServ sets mode: +v EvilDMP
[17:57:58] *** Joins: jpic (~jpic@82.142.17.14)
[18:00:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:02:47] *** ChanServ sets mode: +v EvilDMP
[18:09:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 268 seconds)
[18:14:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:14:20] *** ChanServ sets mode: +v EvilDMP
[18:24:45] *** Quits: pycode (~pycode@2001:b07:5d28:551:a95e:6273:9827:1bfe) (Ping timeout: 256 seconds)
[18:25:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[18:33:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:33:58] *** ChanServ sets mode: +v EvilDMP
[18:44:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:45:02] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:48:06] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[18:53:55] *** wez is now known as wyoung
[18:55:23] *** Joins: anas (~anas@196.235.97.18)
[18:58:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:58:49] *** ChanServ sets mode: +v EvilDMP
[19:17:22] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[19:18:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:21:34] *** Joins: michelem (~Adium@51.154.167.11)
[19:21:40] <michelem> Hi folks!
[19:23:57] <michelem> Question question on DB transactions. I have a "make_invoice_number()" function which generates a human-readable BigInt in the form YYYYMMDDxxx, where xxx is a sequential number intra-day. That's called when PayPal sends payments information, and rarely results in races since 2 requests come contemporarily, producing the same "next invoice number", which then results in a UNIQUE constraint violation on the DB.
[19:25:24] <michelem> I'm wondering if transactions would help at all there. I generate the number by SELECTing the latest existing number, and adding +1. I suppose that – even with db transactions, that SELECT would go through in parallel, resulting in the same new invoice number. Correct?
[19:27:00] <michelem> an alternative could be to generate a random number, INSERT the record, then UPDATE it with the final invoice number generated based on the generated ID. Any thought?
[19:27:47] <hemebond> michelem: This is what auto-increment fields are for.
[19:27:54] <GinFuyou> How do you generate and save number now?
[19:31:04] <rtpg> There isn't great Django tooling for it, but Postgres' advisory locks would do the trick for you. You'd need to make some raw queries, but the idea is you would "lock" the number before actually doing the creation
[19:34:49] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[19:34:51] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:35:04] *** Joins: michelem (~Adium@51.154.167.11)
[19:35:06] *** Quits: michelem (~Adium@51.154.167.11) (Client Quit)
[19:35:18] *** Joins: michelem (~Adium@51.154.167.11)
[19:36:07] <michelem> hemebond: the problem with auto-increment is that they only increment. I need to keep that format, which "jumps" across days, months and years
[19:36:55] <michelem> GinFuyou: like so https://dpaste.org/5w6S
[19:38:25] <michelem> rtpg: I didn't know about that. However, it sounds like an overkill, and it locks me onto postgres – as good as it is, I don't like the lock-in. In that case, I think I'll go for the dirty trick of storing a random number out of range first, and then updating the record based on the ID
[19:40:18] <michelem> there's some residual risk of a race, but it's multiples lower. The logic is: write ID out of range. Then Check the first ID for today, get its ID => FIRST_ID, and set my invoice number increment to that ID + the difference between my ID and FIRST_ID
[19:46:18] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 240 seconds)
[19:47:30] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:48:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:50:57] *** Joins: P4ddyF (~PaddyF@user/yogoyo)
[20:01:52] *** Quits: doev (~doev@82.115.100.62) (Ping timeout: 246 seconds)
[20:02:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:02:29] *** ChanServ sets mode: +v EvilDMP
[20:08:52] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[20:10:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:15:10] <wallbroken> GinFuyou: when you can. could you tell me how to implement the checkbox in my form?
[20:15:14] <wallbroken> do you remember?
[20:15:19] <wallbroken> it's yesterday's problem
[20:21:23] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[20:22:09] <wyoung> wallbroken: Did you give it a go yourself?
[20:22:27] <wyoung> a proper go though, not a wallbroken ask someone in an IRC channel go and take a nap
[20:26:40] *** Joins: easyme (~easyme@user/easyme)
[20:27:28] <easyme> Hello, is django for new programmers who know only python basics?
[20:29:40] <b-rex> that's too subjective. but if you _feel_ django is too much for you, try python flask
[20:29:52] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:30:39] <dodo> easyme: i didn't know any python when i started
[20:31:03] <dodo> but i knew a few other languages, so..
[20:31:15] <b-rex> which is also subjective. django comes with a lot of built-in things like authentication, ORM, permissions, views, admin, etc. so you don't have to do all of those things from scratch, like you would need to in flask.
[20:32:25] <b-rex> that was worded so badly lol
[20:33:57] *** Quits: mbryant (~mbryantms@1612740-v109.1116-static.plfdilaa.metronetinc.net) (Quit: Leaving)
[20:34:13] <b-rex> i think django needs a moderate level of python knowledge compared to something like flask.
[20:35:05] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 256 seconds)
[20:35:45] <wallbroken> easyme no
[20:35:49] <wallbroken> absolutely not
[20:36:12] <wallbroken> in django you need to built the entire page from zero
[20:44:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:48:46] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:53:30] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:57:50] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:20] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[21:05:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:05:54] *** Parts: easyme (~easyme@user/easyme) ()
[21:13:17] *** Joins: Skyz (~Skyz@user/skyz)
[21:19:51] *** Joins: jess (~jess@libera/staff/jess)
[21:29:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:35:51] <ChrisWarrick> wallbroken: uh, what?
[21:44:29] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:48:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:48:41] *** ChanServ sets mode: +v EvilDMP
[21:58:27] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[22:02:06] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:11:59] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 258 seconds)
[22:23:20] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[22:33:06] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:34:04] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Skyz)
[22:34:24] *** Joins: Skyz (~Skyz@user/skyz)
[22:37:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:43:20] *** Quits: P4ddyF (~PaddyF@user/yogoyo) (Quit: WeeChat 3.0.1)
[22:47:27] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[22:50:17] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[22:50:42] *** Joins: michelem (~Adium@51.154.167.11)
[22:52:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:05:48] *** Joins: serghei (~egrep@user/serghei)
[23:06:46] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[23:16:44] *** Quits: serghei (~egrep@user/serghei) (Remote host closed the connection)
[23:17:00] *** Joins: serghei (~egrep@user/serghei)
[23:25:30] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[23:27:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:27:49] *** ChanServ sets mode: +v EvilDMP
[23:32:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:48:48] *** Joins: clawh (~clawh@185.244.214.60)
[23:56:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
