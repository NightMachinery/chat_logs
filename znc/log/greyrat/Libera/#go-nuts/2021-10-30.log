[00:01:10] *** Joins: c10l (~c10l@user/c10l)
[00:06:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:08:42] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[00:08:50] *** Quits: strubbl891941988 (~strubbl@ipbcc0b2d1.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[00:13:01] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 268 seconds)
[00:13:56] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: o7)
[00:22:39] *** Joins: c10l (~c10l@user/c10l)
[00:24:11] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[00:45:34] *** Joins: volt (~volt@67.197.6.215)
[00:47:51] *** Joins: jla (~jordi@64.225.79.195)
[00:50:48] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[00:51:28] *** Parts: gl___ (~x@pwn.lu) ()
[00:51:33] *** Joins: gl (~x@pwn.lu)
[01:01:57] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:03:50] *** Quits: stealth[] (~stealth]@2001:9e8:36f7:3b00:f1ab:72b9:58ea:9295) (Read error: Connection reset by peer)
[01:05:20] *** feuerrot_ is now known as feuerrot
[01:05:37] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[01:05:44] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 258 seconds)
[01:06:21] *** Joins: Guest83 (~textual@2603-7081-0800-4824-b553-8aa8-1ad8-92ab.res6.spectrum.com)
[01:06:30] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 258 seconds)
[01:06:38] *** Quits: Guest83 (~textual@2603-7081-0800-4824-b553-8aa8-1ad8-92ab.res6.spectrum.com) (Client Quit)
[01:09:52] *** Joins: holgersson (~quassel@user/holgersson)
[01:10:23] *** Joins: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net)
[01:10:41] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:17:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:18:50] *** Quits: DanielW (~quassel@2a00:23c5:ac06:1401:a229:dc80:d6e7:8532) (Ping timeout: 260 seconds)
[01:22:21] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:24:23] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[01:24:55] *** Joins: jla (~jordi@64.225.79.195)
[01:25:30] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:31:01] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:31:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:32:11] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 264 seconds)
[01:35:10] *** Quits: martinkennelly_ (~martinken@84.203.20.92) (Ping timeout: 260 seconds)
[01:45:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[01:47:48] *** Joins: fikran (~fikran@user/fikran)
[01:54:05] *** Joins: jespada (~jespada@181.28.253.200)
[02:02:28] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[02:05:22] *** Quits: jespada (~jespada@181.28.253.200) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:08:00] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Quit: Leaving)
[02:17:30] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161)
[02:19:17] *** Quits: cyrus_mc (~cyrus_mc@45.62.180.58) (Quit: Connection closed)
[02:21:19] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:55b5:142d:ab2a:cf76) (Ping timeout: 260 seconds)
[02:21:20] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[02:21:55] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161) (Read error: Connection reset by peer)
[02:21:58] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[02:22:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161)
[02:23:38] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[02:24:07] *** Quits: adip (~adip@dhx221.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:25:40] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[02:26:14] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[02:27:23] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[02:39:55] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161) (Read error: Connection reset by peer)
[02:40:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161)
[02:57:16] *** Joins: X-Scale` (~ARM@83.223.251.139)
[02:57:40] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 268 seconds)
[02:57:52] *** gggpkm__ is now known as gggpkm
[02:58:56] *** X-Scale` is now known as X-Scale
[03:01:09] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net) (Quit: WeeChat 3.2)
[03:08:55] *** Quits: normen (~normen@p200300d71721dd00cd38911aba42a514.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:15:17] *** Joins: fef (~thedawn@user/thedawn)
[03:18:30] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161)
[03:19:01] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:19:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:21:43] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161) (Ping timeout: 268 seconds)
[03:22:37] <dostoyevsky2> Once I import the reflect package, can go still complain that a import is unused?
[03:22:42] *** Joins: gggpkm_ (~gggpkm@60.10.23.170)
[03:24:09] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:3085:be24:42f8:559c)
[03:24:47] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:4176:778d:39e6:161) (Ping timeout: 260 seconds)
[03:25:00] <fizzie> Pretty sure it both can and will. You'll need to `import _ "something"` if you want "something" to be included in the build even if there seems to be no reason for it.
[03:26:02] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[03:26:08] <fizzie> Whether importing "reflect" will cause the compiler's dead-code removal logic to change, I don't know. I think some things around reflection do do that.
[03:26:23] <fizzie> Well, the linker's, rather.
[03:27:35] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[03:27:49] <fizzie> https://github.com/golang/go/issues/25081 "With large codebases with many vendored libraries, it's hard to avoid including something which calls reflect.Value.Call(), e.g. anything that uses text/template." That's probably what I was vaguely recalling.
[03:28:05] <fizzie> Er, I missed the actual interesting part of the quote: "The link-time optimisation to prune unused methods is disabled when reflect.Value.Call() is used anywhere within a program."
[03:28:36] <fizzie> But the compile-time warning about "statically" unused imports is unrelated to that.
[03:30:03] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:3085:be24:42f8:559c) (*.net *.split)
[03:30:03] *** Quits: fikran (~fikran@user/fikran) (*.net *.split)
[03:30:03] *** Quits: c10l (~c10l@user/c10l) (*.net *.split)
[03:30:03] *** Quits: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net) (*.net *.split)
[03:30:03] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[03:30:03] *** Quits: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it) (*.net *.split)
[03:30:03] *** Quits: danderson (~dave@tailscale/danderson) (*.net *.split)
[03:30:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (*.net *.split)
[03:30:03] *** Quits: _xor (~xor@72.49.199.147) (*.net *.split)
[03:30:03] *** Quits: prime (~prime@user/prime) (*.net *.split)
[03:30:03] *** Quits: flam (flam@clairlair.xyz) (*.net *.split)
[03:30:03] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (*.net *.split)
[03:30:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[03:30:03] *** Quits: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325) (*.net *.split)
[03:30:03] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:f556:e34e:c758:9b91) (*.net *.split)
[03:30:03] *** Quits: snits_ (~quassel@ip98-179-76-75.ph.ph.cox.net) (*.net *.split)
[03:30:03] *** Quits: kcrk_ (~kcrk@user/kcrk) (*.net *.split)
[03:30:03] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[03:30:03] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[03:30:03] *** Quits: Wessie- (~Wessie@static.226.41.47.78.clients.your-server.de) (*.net *.split)
[03:30:03] *** Quits: redquasar (~redquasar@redquasar.xyz) (*.net *.split)
[03:30:03] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[03:30:03] *** Quits: qaisjp (sid26374@user/qaisjp) (*.net *.split)
[03:30:03] *** Quits: mmk2410_ (~mmk2410@mmk2410.org) (*.net *.split)
[03:30:03] *** Quits: notepad (~notepad@129.159.46.243) (*.net *.split)
[03:30:03] *** Quits: misuto (~misuto@h-37-123-159-52.A192.priv.bahnhof.se) (*.net *.split)
[03:30:03] *** Quits: slowtype- (~slowtyper@2a02:214c:8630:300:654c:f501:742f:b8e4) (*.net *.split)
[03:30:03] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (*.net *.split)
[03:30:03] *** Quits: gsora (~gsora@140.238.174.213) (*.net *.split)
[03:30:03] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (*.net *.split)
[03:30:03] *** Quits: samf_ (~root@159.65.228.88) (*.net *.split)
[03:30:03] *** Quits: effprime (~effprime@user/effprime) (*.net *.split)
[03:30:03] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (*.net *.split)
[03:30:03] *** Quits: purpleidea (~james@user/purpleidea) (*.net *.split)
[03:30:03] *** Quits: albertito (~nil@37.228.204.251) (*.net *.split)
[03:30:03] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (*.net *.split)
[03:30:03] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[03:30:03] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[03:30:03] *** Quits: jay_wild (~very@138.68.15.221) (*.net *.split)
[03:30:03] *** Quits: ztx (~ztx@user/ztx) (*.net *.split)
[03:30:03] *** Quits: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d) (*.net *.split)
[03:30:03] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (*.net *.split)
[03:30:03] *** Quits: dan- (~d@ircdocs/dan-) (*.net *.split)
[03:30:03] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[03:30:03] *** Quits: telemachus (sid2004@helmsley.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: bugtrial (bugtrial@gateway/vpn/protonvpn/bugtrial) (*.net *.split)
[03:30:03] *** Quits: 074AAB04Z (Rhys@help.lux.melted.me) (*.net *.split)
[03:30:03] *** Quits: justicefries (sid26447@tinside.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: sa (sid1055@tinside.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: hdm (sid500490@aha/hacker/hdm) (*.net *.split)
[03:30:03] *** Quits: baakeydow (~baake@2001:bc8:65c:2601::1) (*.net *.split)
[03:30:03] *** Quits: frebib (~frebibcha@nerdhouse.io) (*.net *.split)
[03:30:03] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[03:30:03] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[03:30:03] *** Quits: acohn (acohn@wikipedia/alex-cohn) (*.net *.split)
[03:30:03] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[03:30:03] *** Quits: eric_hill (sid323132@tinside.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: Freman (~Freman@185.83.217.144) (*.net *.split)
[03:30:03] *** Quits: miquella[m] (~miquellam@2001:470:69fc:105::1:980) (*.net *.split)
[03:30:03] *** Quits: sudden (~cat@user/sudden) (*.net *.split)
[03:30:03] *** Quits: hauxlauxween (~null@yo.haux.haus) (*.net *.split)
[03:30:03] *** Quits: PedroG1 (~android@45.77.216.181) (*.net *.split)
[03:30:04] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[03:30:04] *** Quits: Kaivo (~quassel@user/kaivo) (*.net *.split)
[03:30:04] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[03:30:12] *** Joins: flam (~flam@clairlair.xyz)
[03:30:16] *** Joins: PedroG1 (~android@45.77.216.181)
[03:30:17] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[03:30:17] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[03:30:18] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[03:30:19] *** Joins: Artea (~Lufia@artea.com.pt)
[03:30:20] *** Joins: frebib (~frebibcha@nerdhouse.io)
[03:30:21] *** Joins: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net)
[03:30:24] *** Joins: Rhvs (~Rhys@help.lux.melted.me)
[03:30:24] *** Joins: mmk2410 (~mmk2410@mmk2410.org)
[03:30:26] *** Joins: misuto (~misuto@h-37-123-159-52.A192.priv.bahnhof.se)
[03:30:26] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[03:30:28] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[03:30:31] *** Joins: c10l (~c10l@user/c10l)
[03:30:31] *** Joins: computerquip (sid423484@user/computerquip)
[03:30:31] *** Joins: hdm (sid500490@aha/hacker/hdm)
[03:30:33] *** Joins: qaisjp (sid26374@id-26374.lymington.irccloud.com)
[03:30:37] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[03:30:37] *** Joins: justicefries (sid26447@id-26447.tinside.irccloud.com)
[03:30:39] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[03:30:40] *** Joins: telemachus (sid2004@id-2004.helmsley.irccloud.com)
[03:30:40] *** Joins: Kaivo (~quassel@user/kaivo)
[03:30:41] *** Joins: danderson (~dave@63.81.90.235)
[03:30:41] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[03:30:41] *** Joins: ztx (~ztx@89.232.195.187)
[03:30:41] *** Joins: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d)
[03:30:42] *** Joins: fikran (~fikran@pool-108-51-73-102.washdc.fios.verizon.net)
[03:30:43] *** sudden is now known as Guest4382
[03:30:44] *** Joins: AndrewYu (~andrew@andrewyu.org)
[03:30:44] *** Joins: kcrk (~kcrk@user/kcrk)
[03:30:45] *** Quits: mmk2410 (~mmk2410@mmk2410.org) (Changing host)
[03:30:45] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[03:30:49] *** Joins: slowtyper (~slowtyper@2a02:214c:8630:300:225:64ff:feb7:4668)
[03:30:59] *** Joins: neurocyte0132889 (~neurocyte@46.243.81.22)
[03:31:00] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[03:31:03] *** Quits: qaisjp (sid26374@id-26374.lymington.irccloud.com) (Changing host)
[03:31:03] *** Joins: qaisjp (sid26374@user/qaisjp)
[03:31:04] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[03:31:07] *** Joins: baakeydow (~baake@163.172.145.178)
[03:31:12] *** Joins: mikeputnam (~mikeputna@cpe-72-135-124-220.new.res.rr.com)
[03:31:13] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[03:31:14] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[03:31:22] *** Quits: AndrewYu (~andrew@andrewyu.org) (Changing host)
[03:31:22] *** Joins: AndrewYu (~andrew@user/andrewyu)
[03:31:26] *** Quits: slowtyper (~slowtyper@2a02:214c:8630:300:225:64ff:feb7:4668) (Changing host)
[03:31:26] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[03:31:35] *** Joins: _xor (~xor@72.49.199.147)
[03:31:37] *** Quits: neurocyte0132889 (~neurocyte@46.243.81.22) (Changing host)
[03:31:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[03:31:53] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[03:32:01] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[03:32:01] *** Joins: deepy (deepy@user/deepy)
[03:32:03] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[03:32:05] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[03:32:06] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Signing in (Seirdy))
[03:32:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:32:08] *** Joins: dan- (~d@ircdocs/dan-)
[03:32:18] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Client Quit)
[03:32:21] *** Joins: Teckla (~Teckla@user/teckla)
[03:32:21] *** Joins: effprime (~effprime@user/effprime)
[03:32:23] *** Joins: Alina-malina (~Alina-mal@37.252.82.237)
[03:32:26] *** Quits: Alina-malina (~Alina-mal@37.252.82.237) (Changing host)
[03:32:26] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[03:32:31] *** Joins: redquasar (~redquasar@redquasar.xyz)
[03:32:34] *** Joins: sudoforge (~sudoforge@c-73-243-238-132.hsd1.co.comcast.net)
[03:32:34] *** Joins: zaz\ (~zaz@poneybl.eu)
[03:32:34] *** Joins: Freman (~Freman@185.83.217.144)
[03:32:41] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:3d65:8833:4853:5bbe)
[03:32:41] *** Joins: gsora (~gsora@140.238.174.213)
[03:32:44] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[03:32:47] *** Joins: prime (~prime@user/prime)
[03:33:11] *** Joins: freakazoid333 (~matt@35.136.210.185)
[03:33:13] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[03:33:49] <dostoyevsky2> also: grep '_ "' /t/allGo.go | wc -l -> 179 <- I was wondering how they could avoid having unused imports, turns out they usually just suppress the check
[03:33:53] *** Joins: samf_ (~root@159.65.228.88)
[03:34:03] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:34:24] <dostoyevsky2> (in the compiler code)
[03:34:34] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:3085:be24:42f8:559c)
[03:34:45] *** Quits: gggpkm_ (~gggpkm@60.10.23.170) (Ping timeout: 260 seconds)
[03:34:58] *** Joins: miquella[m] (~miquellam@2001:470:69fc:105::1:980)
[03:35:01] *** Joins: sdfgsdfg (sdfgsdfg@user/sdfgsdfg)
[03:35:16] *** Joins: albertito (~nil@37.228.204.251)
[03:35:21] *** Joins: jay_wild (~very@138.68.15.221)
[03:35:24] *** Joins: purpleidea (~james@user/purpleidea)
[03:35:54] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Ping timeout: 268 seconds)
[03:36:06] <Tv_> dostoyevsky2: importing reflect doesn't change anything about an identifier that wasn't referred to in the source code
[03:36:13] *** Joins: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de)
[03:38:22] *** Quits: freakazoid333 (~matt@35.136.210.185) (Ping timeout: 268 seconds)
[03:38:23] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[03:39:22] <dostoyevsky2> Tv_: I couldn't use the package via: reflect.ValueOf(F).Call()?
[03:39:32] <Tv_> dostoyevsky2: that don't change a thing about the source file
[03:40:49] <Tv_> the program may call such a function, and walk the data structures it finds via F, but that's a runtime concern
[03:41:06] <Tv_> unused variables/imports are a compile time concern
[03:41:37] <Tv_> if you manage to write a program that never imports package xyzzy, there will be no route to package xyzzy from anything you might pass to reflect.ValueOf
[03:41:42] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[03:42:03] <Tv_> but on the other hand, *other files* might import xyzzy, and define a route to reflect your way into it
[03:42:40] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[03:42:48] <Tv_> but that still has nothing to do with compiling a source file with unused imports/variables
[03:42:48] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[03:44:05] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 260 seconds)
[03:45:09] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 268 seconds)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:49:28] *** Joins: guniberas (~guniberas@42.191.188.121)
[03:56:35] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[04:13:03] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[04:16:35] *** launchd is now known as l
[04:22:59] <b0nn> join loggedchannel
[04:23:02] <b0nn> er
[04:23:19] *** Quits: krux02 (~krux02@p200300e817076e0049c4423bd7cf064e.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[04:33:02] *** Parts: junon (~junon@user/junon) ()
[04:35:26] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:37:49] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:34c6:52b6:1034:d94) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:39:14] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[04:40:31] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[04:43:54] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:44:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[04:45:21] *** Quits: _xor (~xor@72.49.199.147) (Quit: WeeChat 3.3)
[04:45:32] *** Joins: _xor (~xor@72.49.199.147)
[04:46:23] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:50:01] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:51:43] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Client Quit)
[04:51:59] *** Quits: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[04:52:48] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:52:54] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1007)
[04:54:15] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4)
[04:58:05] *** Joins: zys_ (~zys@116.22.160.205)
[04:58:08] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:3085:be24:42f8:559c) (Ping timeout: 268 seconds)
[05:01:59] *** Quits: zys_ (~zys@116.22.160.205) (Quit: Konversation terminated!)
[05:02:13] *** Joins: zys_ (~zys@116.22.160.205)
[05:05:23] *** Joins: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de)
[05:11:11] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[05:11:53] *** Joins: kiril (~kiril@85.91.153.163)
[05:18:32] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1007) (Quit: ZNC 1.8.2 - https://znc.in)
[05:25:28] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4)
[05:28:07] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4) (Ping timeout: 252 seconds)
[05:30:13] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[05:38:15] *** Quits: fikran (~fikran@pool-108-51-73-102.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[05:40:02] *** Joins: fikran (~fikran@user/fikran)
[05:42:42] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[05:43:27] *** Joins: thing (~thing@user/thing)
[05:58:33] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4)
[05:59:05] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4) (Read error: Connection reset by peer)
[05:59:53] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4)
[06:01:07] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4) (Ping timeout: 252 seconds)
[06:08:12] <fef> hello
[06:08:49] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:14:11] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:14:16] *** Quits: hunian (~hunian@130.61.201.239) (Ping timeout: 245 seconds)
[06:23:15] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:24:45] *** Quits: wim (~wim@42.be) (Remote host closed the connection)
[06:29:51] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[06:31:38] *** Joins: dmh (~dmh@loves.pizza)
[06:31:41] *** Quits: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[06:37:44] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:47:48] *** Joins: wim (~wim@42.be)
[06:50:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 246 seconds)
[06:51:33] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[06:56:53] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[07:05:33] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:12:43] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:fd49:75f3:d817:5024)
[07:16:26] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:58b5:b6ac:22d7:48a4) (Ping timeout: 265 seconds)
[07:18:47] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:89c3:6d57:2071:cd88)
[07:21:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:fd49:75f3:d817:5024) (Ping timeout: 246 seconds)
[07:28:46] *** Joins: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de)
[07:32:19] *** Quits: burakcank (burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 252 seconds)
[07:33:38] *** Joins: zkanda (~zkanda@box.makean.art)
[07:34:07] *** Quits: Liexei (Liexei@user/liexei) (Ping timeout: 240 seconds)
[07:35:28] *** Parts: dmh (~dmh@loves.pizza) ()
[07:37:14] *** Quits: sudoforge (~sudoforge@c-73-243-238-132.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[07:40:55] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:89c3:6d57:2071:cd88)
[07:43:58] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:89c3:6d57:2071:cd88) (Ping timeout: 252 seconds)
[07:44:10] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[07:44:47] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[07:47:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[07:47:47] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[07:49:43] *** Joins: fikran (~fikran@user/fikran)
[07:50:42] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[07:53:51] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Ping timeout: 245 seconds)
[07:56:40] *** Joins: gggpkm__ (~gggpkm@221.219.79.236)
[07:59:41] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 245 seconds)
[08:12:08] *** Joins: jpw (~jpw@user/jpw)
[08:22:59] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.119)
[08:29:55] *** Joins: jackneillll (~jackneill@20014C4E1807A6000AE645002870B9ED.dsl.pool.telekom.hu)
[08:32:47] *** Quits: jackneilll (~jackneill@20014C4E18151A001586E6013B740504.dsl.pool.telekom.hu) (Ping timeout: 260 seconds)
[08:39:05] *** Quits: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[08:50:46] *** Joins: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de)
[08:52:35] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[08:54:36] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[08:59:53] *** Joins: darkapex_ (~darkapex@user/darkapex)
[09:02:07] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[09:15:35] *** Joins: dngray[m]1 (~dngraymat@2001:470:69fc:105::793b)
[09:19:09] *** Joins: pranjal (~pranjal@user/pranjal)
[09:19:36] *** Joins: henry404082 (~henry4040@112-104-114-79.adsl.dynamic.seed.net.tw)
[09:20:20] *** Joins: cobaltX4 (~cobaltX1@173.216.99.232)
[09:20:47] *** Quits: henry40408 (~henry4040@112-104-128-34.adsl.dynamic.seed.net.tw) (Ping timeout: 264 seconds)
[09:20:47] *** henry404082 is now known as henry40408
[09:25:08] *** Joins: dngray (~unknown@user/dngray)
[09:25:36] <dngray> how do you specify multiple conditions in a text/template
[09:25:38] <dngray> eg {{ if (or (eq .chezmoi.hostname "hostname1") (eq .chezmoi.hostname "hostname2") and (ne .chezmoi.osRelease.id "arch")) }}
[09:25:55] <dngray> it's got something to do with the parenthesis
[09:35:26] *** Quits: zys_ (~zys@116.22.160.205) (Ping timeout: 246 seconds)
[09:43:33] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.119) (Read error: Connection reset by peer)
[09:45:27] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[09:46:19] *** Joins: henry404081 (~henry4040@112-104-89-217.adsl.dynamic.seed.net.tw)
[09:46:20] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:46:54] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[09:46:58] *** Joins: mickey8 (~user@user/mickey)
[09:47:05] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[09:48:01] *** Quits: henry40408 (~henry4040@112-104-114-79.adsl.dynamic.seed.net.tw) (Ping timeout: 245 seconds)
[09:48:01] *** henry404081 is now known as henry40408
[09:48:47] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[09:49:15] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[09:52:46] *** Joins: henry404086 (~henry4040@112-104-129-195.adsl.dynamic.seed.net.tw)
[09:54:16] *** Quits: henry40408 (~henry4040@112-104-89-217.adsl.dynamic.seed.net.tw) (Ping timeout: 245 seconds)
[09:54:16] *** henry404086 is now known as henry40408
[09:57:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[09:59:04] *** Joins: fikran (~fikran@user/fikran)
[10:04:16] *** Quits: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[10:21:25] *** Joins: bugtrial (bugtrial@gateway/vpn/protonvpn/bugtrial)
[10:29:16] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 245 seconds)
[10:33:15] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[10:34:13] *** Joins: petoem (~petoem@user/petoem)
[10:35:23] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a160:b0e1:4e2c:762a)
[10:38:52] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:89c3:6d57:2071:cd88) (Ping timeout: 252 seconds)
[10:44:28] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[10:45:36] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[10:46:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:56:42] *** Joins: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de)
[10:56:53] *** Quits: cobaltX4 (~cobaltX1@173.216.99.232) (Quit: cobaltX4)
[10:57:45] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[11:02:29] <b0nn> Passing data across boundaries: If I create a dedicated type, I have ownership issues and a hard dependency (which may be good because it's a compile time issue when a field is changed, or removed
[11:03:14] <b0nn> JSON - I tried this, you're really passing a []byte across the boundary, so lose the ability to check that what you intend is what's received
[11:03:31] <b0nn> map[string]interface, you're forced to use reflect
[11:04:04] <b0nn> map[string]string is my current favourite, but, of course, not everything can be stringified in a meaningful way
[11:11:46] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[11:11:47] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:13:42] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:14:40] *** Joins: jla (~jordi@64.225.79.195)
[11:15:50] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[11:24:23] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[11:26:04] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:26:11] <j416> define and document the contract (API) between the boundaries?
[11:26:44] <j416> as needed, be defensive and verify that data received is ok
[11:28:58] <j416> even with a dedicated type, there is still the risk that the data it holds is in a bad state. Set up clear expectations.
[11:35:20] *** gggpkm__ is now known as gggpkm
[11:37:29] *** Quits: dngray (~unknown@user/dngray) (Remote host closed the connection)
[11:40:48] *** Parts: jla (~jordi@64.225.79.195) ()
[11:45:26] *** Joins: zys_ (~zys@116.22.160.119)
[11:47:09] *** Joins: mrig (~AdiIRC@user/mrig)
[11:48:02] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[11:53:18] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[11:55:52] *** Joins: stealth[] (~stealth]@2001:9e8:36de:3300:44a5:d54a:38b3:ba4)
[11:57:12] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[11:59:56] *** Quits: zys_ (~zys@116.22.160.119) (Quit: Konversation terminated!)
[12:00:41] *** Quits: gggpkm (~gggpkm@221.219.79.236) (Ping timeout: 264 seconds)
[12:02:25] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[12:06:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[12:08:25] *** Joins: fikran (~fikran@user/fikran)
[12:10:03] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:10:41] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[12:14:07] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 268 seconds)
[12:14:15] *** Joins: martinkennelly_ (~martinken@84.203.20.92)
[12:16:22] *** Joins: casionaut (~casionaut@user/casionaut)
[12:18:11] *** Joins: jla (~jordi@64.225.79.195)
[12:18:15] *** Parts: jla (~jordi@64.225.79.195) ()
[12:18:30] *** gggpkm__ is now known as gggpkm
[12:27:01] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a160:b0e1:4e2c:762a) (Read error: Connection reset by peer)
[12:41:54] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[12:42:05] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[12:44:43] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[12:44:51] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[12:46:31] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[12:52:57] *** Joins: craekz (~craekz@user/craekz)
[12:53:42] *** Joins: gggpkm_ (~gggpkm@60.10.23.170)
[12:56:46] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 245 seconds)
[12:58:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:59:47] *** Quits: craekz (~craekz@user/craekz) (Ping timeout: 264 seconds)
[13:01:27] *** Joins: craekz (~craekz@user/craekz)
[13:27:17] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: o7)
[13:29:42] *** Joins: darkapex (~darkapex@user/darkapex)
[13:29:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:29:56] *** Quits: darkapex_ (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[13:31:23] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[13:32:22] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Quit: Leaving)
[13:32:40] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:34:26] *** Quits: gggpkm_ (~gggpkm@60.10.23.170) (Remote host closed the connection)
[13:34:50] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[13:34:56] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Remote host closed the connection)
[13:35:20] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[13:35:52] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[13:36:03] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Client Quit)
[13:36:19] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:36:32] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[13:37:42] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:38:21] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Client Quit)
[13:38:36] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:39:18] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[13:39:22] *** Joins: jmanner (~jmanner@user/mrmanner)
[13:39:54] *** Parts: pranjal (~pranjal@user/pranjal) (WeeChat 3.3)
[13:40:16] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Client Quit)
[13:40:33] *** Quits: jmanner (~jmanner@user/mrmanner) (Client Quit)
[13:40:34] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:40:35] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[13:40:52] *** Joins: jmanner (~jmanner@user/mrmanner)
[13:42:06] *** jmanner is now known as mrmanner
[13:47:38] *** Joins: noxim (~noxim@user/noxim)
[13:49:59] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:a5d1:df99:7445:eeb7)
[13:57:25] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 252 seconds)
[13:57:46] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[14:05:27] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:10:19] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[14:15:19] *** Joins: guniberas (~guniberas@42.191.188.121)
[14:16:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:17:46] *** Joins: fikran (~fikran@user/fikran)
[14:19:48] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[14:22:52] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:34:03] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:34:26] *** Joins: Atque (~Atque@user/atque)
[14:35:26] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:37:16] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[14:45:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:47:49] *** Joins: zer0bitz_ (~zer0bitz@2a0b:dbc1:2:81c1:dd79:459d:8214:30ba)
[14:50:45] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 268 seconds)
[14:52:00] *** Joins: zer0bitz (~zer0bitz@2a0b:dbc1:2:81c1:55ef:5d0:c1e8:90b)
[14:53:06] *** Joins: Liexei (~Liexei@user/liexei)
[14:55:17] *** Quits: zer0bitz_ (~zer0bitz@2a0b:dbc1:2:81c1:dd79:459d:8214:30ba) (Ping timeout: 264 seconds)
[15:00:46] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:2281:6748:766d:ae06:6724:cf09)
[15:04:15] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:07:03] <Sam> Has anyone used cview (fork of the tview UI library that's more idiomatic Go, is actually tested, has a concurrency story, etc.)? At first glance it looks strictly superior, but I haven't interacted with the author or anything and am curious if it holds up or has other issues I'm not aware of yet.
[15:09:02] *** Joins: zer0bitz_ (~zer0bitz@2a0b:dbc1:2:81c1:30bc:a359:39b5:99ae)
[15:11:43] *** Quits: zer0bitz (~zer0bitz@2a0b:dbc1:2:81c1:55ef:5d0:c1e8:90b) (Ping timeout: 268 seconds)
[15:12:43] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[15:12:59] *** Joins: novns (~novns@user/novns)
[15:15:20] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[15:15:23] *** Joins: zer0bitz (~zer0bitz@2a0b:dbc1:2:81c1:d418:453f:8e01:9edf)
[15:18:05] *** Quits: zer0bitz_ (~zer0bitz@2a0b:dbc1:2:81c1:30bc:a359:39b5:99ae) (Ping timeout: 246 seconds)
[15:30:22] *** Quits: mrmanner (~jmanner@user/mrmanner) (Ping timeout: 252 seconds)
[15:41:08] *** Quits: zer0bitz (~zer0bitz@2a0b:dbc1:2:81c1:d418:453f:8e01:9edf) (Read error: Connection reset by peer)
[15:41:08] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:48:00] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[15:56:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:04:51] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:2281:6748:766d:ae06:6724:cf09) (Quit: Leaving)
[16:07:00] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[16:07:49] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[16:12:23] *** Quits: zwr (~zwr@2804:d45:b966:fb00:9c18:5252:f406:3ebf) (Ping timeout: 264 seconds)
[16:12:42] *** Joins: zwr (~zwr@2804:d45:b966:fb00:89e0:7784:2ef:7ccd)
[16:25:05] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:25:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[16:27:07] *** Joins: fikran (~fikran@user/fikran)
[16:29:22] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:34:05] *** Quits: asm (~alexander@burner.asm89.io) (Changing host)
[16:34:05] *** Joins: asm (~alexander@user/asm)
[16:36:50] <leitz> Trying to declare a map[string][]string in a struct. If I use map[string][]{} it says the {} is unexpected, but without {} it's a nil map and panics. What am I missing?
[16:39:56] <fizzie> Do you want to create a new map of type `map[string][]string` with some contents? That'd be `map[string][]string{ "foo": { "bar", "baz" } }`.
[16:40:17] <fizzie> `map[string][]{}` is invalid because `map[string][]` doesn't name a type.
[16:41:05] <fizzie> Oh, or are you trying to declare a struct variable with a map type, and trying to give it a default value that's a new, empty map? That's just not a thing.
[16:42:09] <leitz> So, you can't use an empty map[string][]string in a struct?
[16:42:29] <fizzie> Of course you can, you just have to initialize it when making a value of that struct.
[16:43:17] <fizzie> Just like how you can't have a `struct { foo int }` type and somehow tell the foo member must be initialized to 123, you can't have a `struct { foo map[string][]string }` type and tell it foo must automatically become a new empty map. If you don't set it when creating a value of that struct, it'll have the zero value, which for maps is nil.
[16:43:42] <leitz> How do you declare it, since adding the {} gives an error and leaving it off makes a nil map and it panics?
[16:45:46] <fizzie> Here's an example: https://play.golang.org/p/VviCH8lydJn
[16:46:05] <fizzie> But you need to make the map yourself when making a value of that struct, for the reasons above.
[16:46:19] <fizzie> Just like you'd have to set any other field you want to have a non-zero value.
[16:46:57] <fizzie> (A typical thing for structures like that is to provide a function called `New` that takes care of setting one up.)
[16:47:07] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd)
[16:47:08] * leitz goes to try the code.
[16:48:19] *** Joins: jespada (~jespada@181.28.253.200)
[16:48:31] *** Quits: jespada (~jespada@181.28.253.200) (Client Quit)
[16:52:08] <leitz> fizzie, thanks! I think I understand, but I'll spend some more time studying it.
[16:52:17] <leitz> I was wondering why a nil map was a thing.
[16:53:06] <fizzie> A nil map is a thing for the same reasons why a nil slice is a thing, I imagine. Namely, to make sure that the zero value of *any* type has a runtime representation that's all-bits-zero.
[16:53:28] *** Joins: fly (~fly@netbsd/developer/fly)
[16:53:52] <fly> gdb seems awfully confused by the Go library I am trying to debug. How do other people debug cgo stuff?
[16:54:30] <fizzie> You can also to some degree *use* a nil map, just like you can a nil slice: it acts as an empty map if you try to read from it, returning the zero value of the map's value type.
[16:54:48] <fizzie> Such as in https://play.golang.org/p/UCeRt0iHNoF
[16:55:33] <fizzie> It's just that there's no `append`-style construction for writing into a map, so an empty map is not as interchangeable with a nil map as an empty slice is with a nil slice.
[16:56:40] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[17:03:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:05:35] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 268 seconds)
[17:06:59] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 264 seconds)
[17:09:45] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[17:14:40] *** Quits: nehsou^ (~nehsou@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[17:15:34] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:15:55] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[17:22:32] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd) (Ping timeout: 265 seconds)
[17:24:27] *** Joins: llorllale (~llorllale@97.108.193.189)
[17:30:22] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:34:02] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:38:15] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 260 seconds)
[17:50:56] *** Quits: fly (~fly@netbsd/developer/fly) (Ping timeout: 245 seconds)
[17:52:03] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[18:04:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:05:06] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net)
[18:05:48] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[18:19:14] *** Joins: thing (~thing@user/thing)
[18:23:50] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[18:24:07] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:25:47] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[18:28:35] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[18:31:52] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[18:33:23] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[18:34:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[18:36:28] *** Joins: fikran (~fikran@user/fikran)
[18:37:31] *** Joins: mrmanner (~jmanner@user/mrmanner)
[18:38:58] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[18:39:06] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[18:39:36] *** Joins: neurocyte0132889 (~neurocyte@185.117.69.128)
[18:39:36] *** Quits: neurocyte0132889 (~neurocyte@185.117.69.128) (Changing host)
[18:39:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:41:46] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 252 seconds)
[18:43:42] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-21d8-f508-23f8-99f8.inf6.spectrum.com)
[18:54:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:55:07] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[18:55:07] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[18:55:07] *** Joins: tane (~tane@user/tane)
[18:59:40] *** Joins: crm (~crm@70.120.0.94)
[19:03:02] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[19:03:06] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 260 seconds)
[19:08:48] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:13:41] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:15:11] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[19:15:31] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[19:16:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[19:22:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:22:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Ping timeout: 246 seconds)
[19:37:47] *** Quits: mrmanner (~jmanner@user/mrmanner) (Ping timeout: 246 seconds)
[19:41:02] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[19:47:13] *** Quits: ztx (~ztx@89.232.195.187) (Quit: ztx)
[19:52:10] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:52:35] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[19:52:52] *** Joins: casionaut (~casionaut@user/casionaut)
[19:54:18] *** Quits: chameleon (~chameleon@62.ip-51-89-164.eu) (Quit: ZNC - https://znc.in)
[19:55:00] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[19:55:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:01:00] *** Joins: chameleon (~chameleon@62.ip-51-89-164.eu)
[20:01:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 264 seconds)
[20:04:14] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[20:07:43] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:09:06] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[20:16:01] *** Joins: sagax (~sagax_nb@user/sagax)
[20:19:19] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Remote host closed the connection)
[20:24:22] *** Quits: normen (~normen@p200300d71721dd00ccd2c884888898cb.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:24:34] *** Joins: normen (~normen@p200300d71721dd00e85fdb7a7a6a5cc3.dip0.t-ipconnect.de)
[20:25:33] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:21d8:f508:23f8:99f8)
[20:28:28] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-21d8-f508-23f8-99f8.inf6.spectrum.com) (Ping timeout: 268 seconds)
[20:31:00] *** Joins: ztx (~ztx@user/ztx)
[20:42:40] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[20:44:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[20:45:21] *** Joins: jla (~jordi@64.225.79.195)
[20:45:45] *** Parts: jla (~jordi@64.225.79.195) ()
[20:45:49] *** Joins: fikran (~fikran@user/fikran)
[20:46:50] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[20:50:10] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Quit: menace)
[20:58:22] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[21:02:33] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[21:06:15] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Quit: Konversation terminated!)
[21:06:40] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[21:22:12] *** Joins: noarb (~noarb@user/noarb)
[21:23:30] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[21:37:58] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:44:09] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[21:47:45] *** Joins: noarb- (~noarb@user/noarb)
[21:48:59] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 264 seconds)
[21:59:32] *** Joins: dntreou (~yakiza@host-87-2-222-6.retail.telecomitalia.it)
[22:08:59] *** Quits: dntreou (~yakiza@host-87-2-222-6.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[22:09:32] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:16:47] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[22:24:48] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[22:26:54] *** Joins: dntreou (~yakiza@host-87-2-222-6.retail.telecomitalia.it)
[22:33:36] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:37:18] *** Quits: dntreou (~yakiza@host-87-2-222-6.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[22:48:14] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) ()
[22:50:53] <braxas> Can I somehow make a json.Unmarshaler with context dependent behaviour?
[22:53:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:55:10] *** Joins: fikran (~fikran@user/fikran)
[23:02:20] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[23:06:40] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[23:08:18] *** Quits: stealth[] (~stealth]@2001:9e8:36de:3300:44a5:d54a:38b3:ba4) (Read error: Connection reset by peer)
[23:09:52] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[23:12:17] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[23:12:59] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[23:19:21] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: Ping timeout (120 seconds))
[23:19:30] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 268 seconds)
[23:19:39] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[23:20:50] *** Quits: cross_ (~cross@spitfire.i.gajendra.net) (Remote host closed the connection)
[23:21:55] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Client Quit)
[23:22:15] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[23:29:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:32:19] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: o7)
[23:33:53] *** Joins: goldfish (~goldfish@user/goldfish)
[23:39:56] *** Joins: keyjoo (~keyjoo@62.176.30.155)
[23:43:03] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:45:11] <seebs> braxas: what do you mean by "context dependent"?
[23:45:25] *** Joins: tebruno994 (~tebruno99@user/tebruno99)
[23:45:32] <seebs> like, context-within-the-json? not easily, but if everything happening is going through your unmarshals, you can have shared state between them potentially.
[23:45:41] *** Joins: ap9 (~ap@68.162.127.208)
[23:45:47] <braxas> like I have a Secret type, and in some context, I want it to marshall to the actual secret value, and in others I want it to marshall to something like "*******"
[23:47:41] <seebs> that seems tricky, but people have attempted things like this before.
[23:47:42] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 260 seconds)
[23:47:42] *** tebruno994 is now known as tebruno99
[23:48:42] <braxas> but I'm not really sure where to put the context awareness, I guess the best place is somehow in json.Marshall, or something that wraps around it
[23:51:41] *** Joins: mrmanner (~jmanner@user/mrmanner)
[23:55:57] *** Joins: tebruno994 (~tebruno99@user/tebruno99)
[23:57:57] *** Quits: ap9 (~ap@68.162.127.208) (Quit: Leaving)
[23:57:59] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 264 seconds)
[23:57:59] *** tebruno994 is now known as tebruno99
[23:58:08] <foobaz> braxas: how about a second type, like "type ConcealedSecret Secret", with its own Marshall method
[23:58:32] <braxas> yeah, that is the best I could come up with also
[23:58:50] <braxas> I don't see many other options, would be nice if I could dynamically create new types like python or something
[23:59:04] <braxas> but it is what it is, pretty weird thing to do anyway
[23:59:24] <braxas> probably less insane and stupid to have seperate types
