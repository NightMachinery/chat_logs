[00:00:46] <Dean> https://paste.debian.net/1234187/
[00:01:00] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[00:02:21] <caze> Dean: Yes, max_value could have either the value 42 or 52.
[00:02:37] <Dean> caze: so what i understand, is that they are saying, they don't know what is called first, f or g. Due to interleaving.?
[00:02:52] <caze> Dean: Interleaving is a separate issue.
[00:03:26] <caze> Dean: It even says, "f and g do not interleave".
[00:03:27] *** Quits: nexus_ (~nexus@fibhost-67-47-34.fibernet.hu) (Ping timeout: 268 seconds)
[00:03:34] <Dean> yeah i just read that. sorry.
[00:03:44] <Dean> let me reread it before i ask more potato questions.
[00:04:01] <caze> Dean: What this example illustrates is sequence of operations, or the lack thereof in this case.
[00:04:39] *** Quits: andai (~andai@86.32.36.28) (Quit: Client closed)
[00:05:01] *** Joins: nexus_ (~nexus@84-236-1-101.pool.digikabel.hu)
[00:07:58] <Dean> caze: oh. i thought it meant it will either call f or g and run whichever is called first to completion. so it won't process part of f and then go to g.
[00:08:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[00:10:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[00:12:02] <Dean> caze: f and g use 'sequencing' so f will be called first and then g will be called? only with unsequenced operations do you get interleaving?
[00:13:55] <Dean> caze: like this is unsequenced printf("%d\n", ++i + ++j * --k); but order of operations still occur.
[00:13:57] <caze> Dean: Well, function calls are a special case.
[00:14:19] <caze> > caze: oh. i thought it meant it will either call f or g and run whichever is called first to completion. so it won't process part of f and then go to g.
[00:14:22] <caze> That is correct.
[00:14:40] <caze> > caze: f and g use 'sequencing' so f will be called first and then g will be called? only with unsequenced operations do you get interleaving?
[00:14:43] <caze> That is not correct.
[00:14:53] <Dean> thank you caze
[00:16:11] <Dean> caze: i think i understand. interleaving is an 'attempt' at efficiency, but it is not always faster (perhaps coincidentally so). it's just another way of implementing a compiler.
[00:17:10] <caze> Dean: There is a subtle difference between "implementing a compiler", and "prescribing the behavior that a compiler must follow".
[00:18:03] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[00:18:19] <Dean> caze: hm. i am still faded? so interleaving must be implemented in a compiler to make it compliant?
[00:20:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:20:48] <nitrix> I don't want to discourage you from asking questions, but I'm baffled how even with the correct context and deliberately precise answers, you manage to ask questions that shows a misunderstanding.
[00:21:39] <nitrix> I wonder whether you're battling to undo previous misconceptions or moving too fast while jumping to conclusions too quickly.
[00:22:45] <nitrix> Something in your learning process/methodology is amiss and I can't pinpoint it yet.
[00:22:49] <Dean> nitrix: i think i just have a low iq. i am slow. because i was always too shy to ask questions. english is not my best language either. so i think a mix of both.
[00:23:52] <nitrix> That's perfectly understandable if that's a language barrier :) I have a harder time believing the low iq problem.
[00:24:03] <Dean> thanks
[00:26:40] *** Joins: Viewday1153 (~Viewday@user/viewday)
[00:28:30] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[00:28:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[00:28:32] *** Viewday1153 is now known as Viewday115
[00:28:33] <Dean> interleaving refers to the way data is slapped together. like you said nitrix  { 9, 8, 7 } { x, y, z }. 9xy87z
[00:32:37] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-171.cspire.com) (Read error: Connection reset by peer)
[00:32:49] <Dean> i think my vocabulary is not big enough to express my thoughts correctly.
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:34:37] *** Quits: hashfuncf39 (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[00:41:42] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:43:53] *** Quits: magla (~gelignite@55d4c150.access.ecotel.net) (Quit: Stay safe!)
[00:46:32] <Dean> nitrix: i don't want to bother you but i just want to clarify that i understood your previous messages. you spoke about mergings two 'sets' in various ways. these sets are operations? like the zipper explanation. just as long as they keep their order it is interleaved correctly. i said 'stream' earlier, but i think i meant 'thread'.
[00:49:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[00:51:01] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:53:31] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[00:54:26] *** Joins: Akuli (~Akuli@82-203-167-85.bb.dnainternet.fi)
[00:55:38] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[00:56:03] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:57:35] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[00:59:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:00:14] <caze> Dean: I didn't mean that specifically in the context of interleaving. I meant that generally, the C language specification document prescribes behaviors. It does not prescribe *how* to produce those behaviors.
[01:00:39] <caze> In other words, it tells *what* to implement. It doesn't say *how* to implement.
[01:01:02] *** Quits: ncrowl (~ncrowl@31-208-86-61.cust.bredband2.com) (Ping timeout: 240 seconds)
[01:01:24] *** Quits: ekathva_ (~ekathva@n16izluvk39q3lx3y-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[01:01:42] *** Joins: ekathva_ (~ekathva@n16j0a7g3xklok7dy-1.v6.elisa-mobile.fi)
[01:03:09] *** Joins: ncrowl (~ncrowl@31-208-86-120.cust.bredband2.com)
[01:03:17] <caze> Dean: Is there any other context where the book mentions interleaving?
[01:03:44] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:8036:392e:550f:f6cb) (Quit: Leaving)
[01:06:02] <caze> Dean: https://ideone.com/k7UCQ5 None of the bar outputs may appear in between the foo outputs, and none of the foo outputs may appear in between the bar outputs.
[01:06:06] <Dean> caze: it only has 6 mentions of the word. there was no glossary with an explanation. but i found some reading material and a video. i appreciate all the exlanations.
[01:07:06] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Remote host closed the connection)
[01:07:22] <caze> Dean: To do so would be interleaving, which is prohibited by the spec.
[01:07:54] <Dean> caze: ok thank you. i appreciate it.
[01:08:13] <caze> Dean: This requirement is specific to functions though.
[01:08:29] <caze> Dean: My earlier example (a = b) + (c = d) does not have this requirement.
[01:09:13] <Dean> thank you caze
[01:10:44] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 272 seconds)
[01:12:11] <caze> Dean: But as I said, the "no interleaving of function calls" is a "what" requirement. In other words, as long as the external behavior is the same, the specification does not care *how* it is done.
[01:12:56] <caze> Dean: So in fact, a compiler *could* interleave the two function calls, as long as the output is such that they do not appear to be interleaved.
[01:14:02] <caze> Dean: For instance a compiler could produce identical translations for https://ideone.com/k7UCQ5 and https://ideone.com/zoMNut but interleave the calls for the latter.
[01:14:19] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Lost terminal)
[01:14:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:15:52] <oldlaptop> The same kind of thing can even happen below the compiler's level. Modern CPUs reserve the right to pick a different order to execute your instructions in, or even to execute some of them in parallel, so long as you can't actually tell that it's doing such things.
[01:16:03] <Dean> thank you caze
[01:17:23] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[01:17:51] <Dean> thank you oldlaptop.
[01:20:14] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea)
[01:20:25] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea) (Remote host closed the connection)
[01:23:44] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[01:26:07] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[01:28:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[01:34:38] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Read error: Connection reset by peer)
[01:37:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[01:38:43] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:41:41] <nitrix> Having a set of things and merging them in different ways is all very abstract. You can choose the things to be anything and the merge can be more involved that just thinking in terms of sets or elements.
[01:43:12] <nitrix> Once you understanding it, you can reason what interleaving instructions would imply, or interleaving writes to stdout, or interleaving network packets.
[01:43:57] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[01:44:23] <nitrix> Interleaving threads when knitting a sock, interleaving documents in a pile on your desk. At some point the words have to gain a semantic meaning that you can generalize.
[01:45:40] *** Joins: ferdna (~ferdna@user/ferdna)
[01:45:48] <nitrix> Which also means the focus should probably shift to the context in which its used, because that's where the author is going from something that should be known and transposing your existing knowledge into something that they want you to learn. Building up.
[01:46:17] <nitrix> It's the essence of linguistics, of communication, of understanding and of learning.
[01:49:34] *** Quits: ekathva_ (~ekathva@n16j0a7g3xklok7dy-1.v6.elisa-mobile.fi) (Quit: Leaving)
[01:50:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:52:41] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[01:59:43] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[02:00:57] *** Joins: seninha (~chatzilla@user/seninha)
[02:04:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:04:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[02:05:00] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (Ping timeout: 240 seconds)
[02:08:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:5952:c394:d6fd:fe62)
[02:11:39] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:11:55] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[02:12:11] <orbisvicis> is it possible to use free and malloc from dlopen/dlsym ?
[02:12:45] <orbisvicis> https://bpa.st/ZXPQ
[02:13:24] *** Quits: mahmutov_ (~mahmutov@37.155.16.84) (Ping timeout: 240 seconds)
[02:13:38] <BtbN> why tho
[02:14:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:15:30] <orbisvicis> trying to narrow down a cygwin/python/ctypes segfault
[02:16:15] <orbisvicis> does that run without a segfault on linux?
[02:17:11] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) ()
[02:19:13] *** Joins: diiirt (~diiirt@user/diiirt)
[02:19:14] <orbisvicis> hmm I actually have no idea why this python library is loading free like this, doesn't appear to be used
[02:19:54] <nitrix> `&test` can become `test`, `(*ld_malloc)` can become `ld_malloc` and `(*testp)` can become `testp`.
[02:19:58] *** Parts: diiirt (~diiirt@user/diiirt) ()
[02:20:00] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0034-44e7-d0a8-40e0.res6.spectrum.com)
[02:21:48] <nitrix> Function pointers have to obtuse property that (de)referencing them just gives you more function pointers.
[02:25:23] <orbisvicis> I understand
[02:28:36] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[02:28:52] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[02:32:28] *** Quits: reset (~reset@user/reset) (Quit: reset)
[02:33:20] <constxd> orbisvicis: what's the library
[02:33:48] *** Joins: pizdets_ (~pizdets@183.182.110.208)
[02:34:24] *** Quits: pizdets (~pizdets@183.182.110.171) (Ping timeout: 265 seconds)
[02:35:13] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[02:35:57] *** Quits: nexus_ (~nexus@84-236-1-101.pool.digikabel.hu) (Ping timeout: 256 seconds)
[02:36:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:40] *** Joins: nexus_ (~nexus@80-95-70-217.pool.digikabel.hu)
[02:40:07] *** Quits: Akuli (~Akuli@82-203-167-85.bb.dnainternet.fi) (Quit: Akuli)
[02:40:53] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[02:41:08] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea)
[02:43:45] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[02:44:02] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[02:45:18] *** Joins: rgrinberg (~textual@177.244.18.30)
[02:49:58] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 260 seconds)
[02:51:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:53:18] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[02:53:50] *** Quits: Narrat (~omnius@p200300df5f4c41b706ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:55:23] <fowl> How do people use tagged ptrs with boehm gc? How do you tell the gc how to handle the tag
[02:56:54] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[02:58:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:04:17] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:04:42] *** Quits: alch (~alch@151.68.223.250) (Ping timeout: 252 seconds)
[03:05:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[03:06:45] *** Joins: alch (~alch@151.68.135.248)
[03:07:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:10:23] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:11:01] *** Quits: hub (~hub@user/hub) (Quit: -)
[03:11:21] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:11:29] *** Joins: hub (~hub@user/hub)
[03:11:29] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[03:14:46] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:16:01] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[03:19:55] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[03:22:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:24:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea) (Quit: Quit)
[03:24:56] *** Joins: KevinX (~KevinX@user/KevinX)
[03:26:28] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:28:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:5952:c394:d6fd:fe62) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[03:30:04] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[03:30:57] *** Joins: eddof13 (~eddof13@192.154.196.154)
[03:31:52] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8f5:448b:f0f1:4571)
[03:31:52] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8f5:448b:f0f1:4571) (Changing host)
[03:31:52] *** Joins: skapata (~Skapata@user/skapata)
[03:33:00] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 240 seconds)
[03:33:12] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Remote host closed the connection)
[03:36:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:38:31] *** Joins: Wulf (~Wulf@user/wulf)
[03:41:20] *** Joins: rgrinberg (~textual@177.244.18.30)
[03:42:02] *** Quits: zwr (~zwr@2804:d45:b966:fb00:53dd:b5a5:6b8e:e94d) (Ping timeout: 240 seconds)
[03:42:42] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:43:11] *** Joins: zwr (~zwr@2804:d45:b966:fb00:628f:1ad6:16aa:dc6f)
[03:43:11] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Read error: Connection reset by peer)
[03:43:48] <orbisvicis> constxd: https://github.com/shapely/shapely/search?q=free
[03:44:33] <orbisvicis> but this code is auto-generated: https://bpa.st/CNIQ
[03:45:53] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 256 seconds)
[03:50:44] <constxd> orbisvicis: and where does it segfault
[03:53:11] *** Joins: DSee (~DSee@198.147.22.212)
[03:53:32] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[03:55:57] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[03:56:39] <orbisvicis> the initial error was actually a sigabrt but cygwin-specific, and I think I fixed that
[03:57:32] <orbisvicis> so now its just a ValueError on line 42 of the auto-generated python, and my C version which segfaults
[03:59:10] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:03:13] *** Quits: eddof13 (~eddof13@192.154.196.154) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:03:31] <constxd> orbisvicis: you mean that dlsym malloc/free example from earlier?
[04:03:38] <constxd> it segfaults under cygwin?
[04:03:41] <orbisvicis> yes
[04:03:51] <constxd> i don't think it should
[04:04:13] <orbisvicis> lines 16 & 24
[04:04:15] <orbisvicis> hmm
[04:04:46] <constxd> wait what if you check the return value of dlsym
[04:06:34] *** Joins: Karyon_ (~Karyon@user/karyon)
[04:06:39] *** Joins: cust_ (amaama@blackbox.amaama.org)
[04:07:02] *** Quits: cust (amaama@2607:f2c0:f00f:2500::3) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: Karyon (~Karyon@user/karyon) (Ping timeout: 240 seconds)
[04:07:32] *** Quits: avesatanas[m] (~avesatana@2001:470:69fc:105::1:d083) (Ping timeout: 240 seconds)
[04:07:32] *** Quits: oalvarez (quassel@2600:3c01::f03c:91ff:fee5:6d8d) (Ping timeout: 240 seconds)
[04:07:56] *** Joins: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d)
[04:08:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[04:08:59] *** Joins: Torr (~Torr@user/torr)
[04:09:04] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[04:09:33] <orbisvicis> that makes sense; they're null
[04:10:48] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[04:13:39] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[04:15:19] <constxd> orbisvicis: if you drop the dlopen and just RTLD_DEFAULT for the first arg to dlsym does it work?
[04:15:25] <constxd> s/just/just use/
[04:19:55] <orbisvicis> constxd: yes it does
[04:20:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:20:50] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[04:20:57] *** Joins: jinsun_ (~jinsun@user/jinsun)
[04:21:02] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:21:03] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[04:21:46] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:22:14] *** Joins: malloy (~jimery@120.235.172.192)
[04:22:48] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 252 seconds)
[04:24:49] *** Joins: avesatanas[m] (~avesatana@2001:470:69fc:105::1:d083)
[04:29:00] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:29:55] *** pony is now known as fusspot
[04:30:46] *** Joins: Everything (~Everythin@37.115.210.35)
[04:31:14] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:32:13] *** Quits: oriba (~oriba@dynamic-089-014-251-097.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:35:36] *** fusspot is now known as pony
[04:35:48] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[04:35:48] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:36:39] *** Quits: jess (~jess@libera/staff/cat/jess) ()
[04:36:51] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:43:07] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[04:43:19] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[04:45:16] *** Quits: nexus_ (~nexus@80-95-70-217.pool.digikabel.hu) (Ping timeout: 250 seconds)
[04:46:21] *** Quits: slimbo (~slim@user/slimbo) (Quit: WeeChat 3.4)
[04:46:54] *** Joins: nexus_ (~nexus@84-236-60-119.pool.digikabel.hu)
[04:49:30] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[04:49:36] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 250 seconds)
[04:50:38] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:51:54] <tusko> ok, simple question. usually we see ~ int main(int argc, char** argv) { ... no? is it int main(int argc, char* argv[]) better?
[04:55:30] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0034-44e7-d0a8-40e0.res6.spectrum.com) (Remote host closed the connection)
[04:55:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[04:56:27] *** Joins: ymwm (~yingmanwu@110.85.123.161)
[04:57:11] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:59:31] <tusko> should argv be a char* array? I guess that makes sense
[04:59:33] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[05:00:41] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[05:00:50] <fizzie> The two declarations are equivalent to the compiler. I feel like I actually see `char *argv[]` more.
[05:00:50] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[05:01:58] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[05:03:54] *** Quits: moog (~moog@98.97.86.136) (Ping timeout: 250 seconds)
[05:04:52] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[05:05:30] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[05:07:30] <tusko> TIL
[05:08:28] <fizzie> `char *argv[]` is what the standard uses (C11 5.1.2.2.1p1), so it's arguably got some sort of official stamp of approval, but it mentions `char **argv` as an alternative (footnote 10).
[05:08:54] <fizzie> (They're equivalent specifically as function parameter declarations, not anywhere else.)
[05:08:56] <ski> `char *argv' would be wrong
[05:09:33] <orbisvicis> heh the library upstream was completely rewritten and no longer has the issue
[05:09:58] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 250 seconds)
[05:10:45] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[05:10:45] *** Quits: con3 (~con3@143.198.53.32) (Quit: ZNC 1.8.2 - https://znc.in)
[05:11:01] *** Joins: con3_ (~con3@2604:a880:4:1d0::be:d000)
[05:11:10] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:12:01] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Ping timeout (120 seconds))
[05:12:07] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:12:40] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (Ping timeout: 272 seconds)
[05:12:51] *** Quits: taru9 (~realTaru9@user/taru9) (Ping timeout: 245 seconds)
[05:13:28] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:13:37] *** Quits: koisoke (xef4@epilogue.org) (Ping timeout: 250 seconds)
[05:13:52] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[05:14:02] *** Joins: koisoke (xef4@epilogue.org)
[05:14:10] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (Ping timeout: 260 seconds)
[05:14:27] <fizzie> `LPSTR lpCmdLine`, on the other hand... ;)
[05:14:32] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:14:35] *** Quits: wand (~user@gateway/tor-sasl/wand) (Ping timeout: 240 seconds)
[05:15:14] *** Joins: wand (~user@gateway/tor-sasl/wand)
[05:15:52] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[05:15:55] *** Joins: sandman13 (sandman13@jujube.ircnow.org)
[05:15:56] *** Quits: DCTWD (~dc@uz.utmappro.com) (Quit: ...)
[05:16:11] *** Quits: mattroelle (~Matt_Roel@funbox.mattroelle.com) (Ping timeout: 245 seconds)
[05:16:15] *** Joins: DCTWD (~dc@uz.utmappro.com)
[05:16:32] *** Joins: taru9 (~realTaru9@user/taru9)
[05:17:01] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[05:17:05] *** Joins: mattroelle (~Matt_Roel@funbox.mattroelle.com)
[05:18:06] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:18:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:18:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:18:20] *** Joins: wroathe (~wroathe@user/wroathe)
[05:19:23] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[05:20:00] *** Quits: mcf (~mforney@netbsd/developer/mcf) (Ping timeout: 252 seconds)
[05:20:18] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:20:27] *** Joins: Rynn (~rynn@216.30.158.198)
[05:20:49] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[05:26:42] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[05:28:14] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[05:31:10] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[05:31:32] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[05:32:10] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[05:33:33] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[05:34:41] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[05:43:26] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[05:44:51] *** Joins: frost (~frost@user/frost)
[05:46:19] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[05:46:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com)
[05:48:18] *** Quits: frost (~frost@user/frost) (Client Quit)
[05:50:05] *** Joins: duds- (~duds-@user/duds)
[05:50:33] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 256 seconds)
[05:52:33] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[05:53:05] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:53:46] *** Joins: Rynn (~rynn@216.30.158.198)
[05:56:13] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[05:59:02] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[05:59:02] *** Joins: archdark (~quassel@2804:14d:4280:513::1000)
[06:00:10] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[06:00:39] *** Quits: malloy (~jimery@120.235.172.192) (Read error: Connection reset by peer)
[06:01:11] *** Joins: malloy (~jimery@120.235.172.192)
[06:02:29] *** Quits: archdark (~quassel@2804:14d:4280:513::1000) (Remote host closed the connection)
[06:02:53] *** Joins: archdark (~quassel@2804:14d:4280:513::1000)
[06:02:57] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 240 seconds)
[06:04:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[06:04:50] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:05:39] *** Joins: gco (~gco@2601:647:4c00:50e0:f05c:e15f:e0a1:bacf)
[06:07:35] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:09:12] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[06:11:58] *** Joins: Inline__ (~Inline@p200300cd470cd6007b9a329b320e25d9.dip0.t-ipconnect.de)
[06:12:48] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 250 seconds)
[06:13:23] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[06:14:09] *** Joins: andro (~andro@user/andro)
[06:14:32] *** Quits: Inline (~Inline@p200300cd47082500eff0453775466c26.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:15:03] *** Joins: Rynn (~rynn@216.30.158.198)
[06:16:16] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 250 seconds)
[06:17:48] *** Quits: Rynn (~rynn@216.30.158.198) (Client Quit)
[06:20:27] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[06:21:09] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[06:26:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:28:04] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:30:20] *** Joins: rgrinberg (~textual@177.244.18.30)
[06:30:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:31:21] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[06:31:29] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[06:33:02] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:34:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:34:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:34:43] *** Joins: wroathe (~wroathe@user/wroathe)
[06:39:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:40:01] *** Joins: zer0x (~zer0x@1.55.211.113)
[06:40:08] *** Quits: zer0x (~zer0x@1.55.211.113) (Remote host closed the connection)
[06:40:32] *** Joins: zer0x (~zer0x@1.55.211.113)
[06:48:37] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[06:50:37] *** Quits: malloy (~jimery@120.235.172.192) (Read error: Connection reset by peer)
[06:53:32] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:50] *** Quits: gco (~gco@2601:647:4c00:50e0:f05c:e15f:e0a1:bacf) (Quit: gco)
[06:54:58] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:56:17] *** Quits: nexus_ (~nexus@84-236-60-119.pool.digikabel.hu) (Ping timeout: 256 seconds)
[06:56:20] *** Joins: malloy (~jimery@120.235.172.192)
[06:57:59] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[06:58:07] *** Joins: nexus_ (~nexus@178-164-188-12.pool.digikabel.hu)
[06:58:19] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[07:02:54] *** Joins: rgrinberg (~textual@177.244.18.30)
[07:05:14] *** Quits: alch (~alch@151.68.135.248) (Ping timeout: 250 seconds)
[07:07:01] *** Joins: alch (~alch@151.68.211.208)
[07:08:12] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[07:10:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:13:10] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:14:35] *** Joins: rgrinberg (~textual@177.244.18.30)
[07:14:50] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[07:16:33] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b95f:ec50:9584:336a)
[07:16:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:17:47] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[07:17:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:18:04] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:18:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:18:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:19:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:19:53] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:27:09] *** Joins: frost (~frost@user/frost)
[07:29:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:38:20] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-8902-68c6-ecc8-5f4e.inf6.spectrum.com)
[07:39:41] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-7da2-d52d-7c03-c4c8.inf6.spectrum.com) (Ping timeout: 256 seconds)
[07:44:14] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[07:48:29] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[07:48:35] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-585f-140b-6646-4b30.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:50:02] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:54:38] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a4f7:3458:36c4:ffd7) (Ping timeout: 250 seconds)
[07:54:51] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[07:55:06] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:32] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:e51b:ac6b:af96:5d6c)
[07:59:32] <while> I'm looking for a possible solution for a problem such as that defined here: https://stackoverflow.com/questions/1719784/c-programming-forward-variable-argument-list
[08:00:42] *** Quits: unlink_ (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:02:01] *** Quits: noonien (~noonien@user/noonien) (Quit: Ping timeout (120 seconds))
[08:02:03] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Remote host closed the connection)
[08:02:11] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[08:02:13] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[08:02:28] <Maxdamantus> while: and why is the existing answer not sufficient?
[08:02:36] *** Joins: noonien (~noonien@user/noonien)
[08:03:33] <while> wait, wrong one: https://stackoverflow.com/questions/150543/forward-an-invocation-of-a-variadic-function-in-c
[08:05:00] <Maxdamantus> That one also has a sufficient answer.
[08:05:13] <while> I'm trying to intercept linux syscalls
[08:05:25] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[08:05:42] <Maxdamantus> Do you know about ptrace or strace?
[08:05:59] <Maxdamantus> Or do you mean libc library calls?
[08:06:55] <while> I know about strace and ptrace, they don't work on NFS, and I don't think it works on other kernel threads
[08:07:16] <while> I'm talking about calls documented in the `man 2` section
[08:08:01] <while> last time I intercepted linux syscalls, I never did successfully intercept `man 2 fcntl` without issue
[08:08:51] <Maxdamantus> Well, if you want to introspect what the kernel itself is doing, you need to debug the kernel. Can't be done by intercepting some call in userspace.
[08:09:33] <Maxdamantus> There's some way to attach gdb to Linux, and there might be various ad-hoc debugging interfaces exposed through sysfs or something.
[08:09:43] <while> no, I would be changing the memory permissions on the kernel memory portion reserved for kernel space system calls, intended to be invoked by userspace programs
[08:09:58] <while> and the scribbling over them, I've done it before with non-variable-argument syscalls
[08:10:31] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:10:39] <while> <Maxdamantus> I did speak for a while in #linux about using gdb and strace to look into NFS server, but the consensus was that it was impossible with NFS Server as written because it is a kernel thread
[08:10:40] <Maxdamantus> How do you think the question in the stackoverflow helps with your goal?
[08:10:48] <while> it talks about var arg interception
[08:11:05] <while> which is my *real* issue I'm having
[08:11:22] <while> the forwarding of variable arguments to non-vararg variable argument calls, such as fcntl
[08:11:23] <dave0> maw
[08:11:31] <Maxdamantus> Are you trying to write code that is run in userspace or in kernel space?
[08:11:57] <while> kernel space, once the userspace program begins waiting for the kernel space thread processing the syscall completes
[08:12:20] <while> it will be a kernel module, plenty is written on how to intercept non-vararg syscalls
[08:12:26] <while> that part is easy on linux
[08:13:12] <while> my program will be immune to `kill -s 9` when I want it to be, like those evil sadistic NFS Server devs made their little project
[08:13:35] <while> well, they thought they were so powerful and elite, but soon they'll see that I can do that too
[08:15:00] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[08:15:12] <while> http://c-faq.com/varargs/handoff.html
[08:16:22] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[08:16:34] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[08:17:31] <while> I might do something like that ^^ hope I don't get kernel panics
[08:17:39] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[08:19:26] *** Joins: ekathva (~ekathva@n16j1oo707h05v16j-1.v6.elisa-mobile.fi)
[08:20:44] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[08:21:07] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[08:22:02] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:24:48] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[08:25:47] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[08:26:07] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[08:27:26] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 245 seconds)
[08:27:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:27:53] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 268 seconds)
[08:30:00] *** Quits: archdark (~quassel@2804:14d:4280:513::1000) (Remote host closed the connection)
[08:30:05] *** Joins: Betal (~Betal@user/betal)
[08:30:10] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[08:33:13] *** Quits: Giovanni (~Giovanni@176.55.166.222) (Remote host closed the connection)
[08:34:12] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[08:34:35] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Ping timeout: 240 seconds)
[08:34:55] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[08:36:32] *** Quits: divine (~divine@2001:470:8247:1::31) (Read error: Connection reset by peer)
[08:37:34] *** Joins: divine (~divine@2001:470:8247:1::31)
[08:38:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:38:35] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[08:41:09] *** Joins: audio (~audio@user/audio)
[08:48:27] *** Quits: malloy (~jimery@120.235.172.192) (Read error: Connection reset by peer)
[08:51:13] *** Joins: kaph_ (~kaph@151.43.120.248)
[08:52:27] *** Quits: nexus_ (~nexus@178-164-188-12.pool.digikabel.hu) (Ping timeout: 256 seconds)
[08:52:57] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[08:53:11] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[08:54:08] *** Joins: nexus_ (~nexus@80-95-85-52.pool.digikabel.hu)
[08:54:38] *** Joins: malloy (~jimery@120.235.172.192)
[09:03:33] *** Quits: kaph_ (~kaph@151.43.120.248) (Read error: Connection reset by peer)
[09:04:26] *** Joins: kaph (~kaph@151.43.120.248)
[09:05:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:06:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[09:09:31] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[09:11:11] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:11:57] *** Joins: Kerr (~Kerr@2601:602:ce80:df10::b76e)
[09:18:08] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 252 seconds)
[09:18:24] *** Joins: savolla (~quassel@84.44.28.28)
[09:19:53] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[09:21:21] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:27:55] *** Quits: kaph (~kaph@151.43.120.248) (Read error: Connection reset by peer)
[09:33:30] <while> do variadic functions not really know how many arguments were passed to them?
[09:34:18] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[09:34:44] <dave0> while: correct
[09:35:15] <while> can you make an accurate guess by looking at memory allocated on the stack and the address of the first argument?
[09:35:25] <dave0> nope
[09:35:47] <dave0> you have to use some method to tell it
[09:36:02] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:a95b:3633:19a2:8630)
[09:36:32] <dave0> you could pass a number to the function.. you could make the last argument be NULL or -1 or some special value
[09:36:43] <dave0> printf finds out through it's format string
[09:36:57] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[09:37:14] <dave0> posix open() has the O_CREATE flag which tells it there's an extra mode argument
[09:37:34] <dave0> don'tknow how ioctl works... can't remember any more varargs functions
[09:38:03] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:38:11] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[09:38:26] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[09:39:10] *** Joins: kdc (~kdc@196.211.197.133)
[09:39:36] *** Quits: kdc (~kdc@196.211.197.133) (Max SendQ exceeded)
[09:39:42] *** Joins: rgrinberg (~textual@177.244.18.30)
[09:40:05] *** Joins: kdc (~kdc@196.211.197.133)
[09:41:00] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 240 seconds)
[09:41:14] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[09:41:35] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[09:43:24] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.206)
[09:44:42] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.206) (Max SendQ exceeded)
[09:45:11] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.254)
[09:47:00] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[09:48:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[09:50:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[09:51:14] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[09:51:18] *** Joins: Enitin (~Enitin@82.180.145.226)
[09:51:38] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[09:53:54] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[09:56:49] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[09:57:07] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[09:58:11] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[09:59:31] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:00:44] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.254) (Ping timeout: 250 seconds)
[10:01:34] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[10:03:37] *** Joins: seninha (~chatzilla@user/seninha)
[10:05:53] <rcf> ioctl just assumes you're passing the correct sort of argument for the given operation.
[10:09:11] *** Joins: gco (~gco@2601:647:4c00:50e0:e8da:d4c3:461a:bb03)
[10:10:55] *** Joins: Thedarkb1 (~Thedarkb@82.3.80.190)
[10:11:27] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Read error: Connection reset by peer)
[10:18:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:23:44] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[10:24:07] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[10:25:45] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[10:26:51] *** Quits: zer0x (~zer0x@1.55.211.113) (Ping timeout: 256 seconds)
[10:28:00] *** Quits: joev (~joev@user/joev) (Ping timeout: 252 seconds)
[10:33:09] *** Joins: joev (~joev@user/joev)
[10:35:41] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[10:37:08] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 250 seconds)
[10:38:26] *** Joins: rgrinberg (~textual@177.244.18.30)
[10:39:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[10:39:19] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[10:39:37] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[10:42:42] *** Joins: ekathva_ (~ekathva@86.114.187.171)
[10:44:49] *** Quits: ekathva_ (~ekathva@86.114.187.171) (Read error: Connection reset by peer)
[10:45:22] *** Quits: ekathva (~ekathva@n16j1oo707h05v16j-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[10:46:07] *** Joins: ekathva_ (~ekathva@n16iyde4bmj9ireof-1.v6.elisa-mobile.fi)
[10:47:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[10:48:50] *** Quits: davidlowryduda (~davidlowr@2601:197:600:1210:adfa:97b2:16e:b6e4) (Ping timeout: 250 seconds)
[10:50:37] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:50:52] *** Joins: davidlowryduda (~davidlowr@73.61.8.192)
[10:52:19] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:53:41] *** Quits: malloy (~jimery@120.235.172.192) (Read error: Connection reset by peer)
[10:57:13] *** Joins: ekathva__ (~ekathva@mobile-access-5672d1-126.dhcp.inet.fi)
[10:57:34] *** Quits: gco (~gco@2601:647:4c00:50e0:e8da:d4c3:461a:bb03) (Quit: ZZZzzzâ€¦)
[10:58:42] *** Joins: malloy (~jimery@120.235.172.192)
[10:59:40] *** Quits: ekathva_ (~ekathva@n16iyde4bmj9ireof-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[11:01:39] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:02:21] *** Quits: alch (~alch@151.68.211.208) (Read error: Connection reset by peer)
[11:02:24] *** Joins: rgrinberg (~textual@177.244.18.30)
[11:07:21] *** Joins: alch (~alch@151.34.155.55)
[11:07:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[11:08:07] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:08:27] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 256 seconds)
[11:09:20] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:11:14] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[11:11:37] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[11:13:39] *** Quits: nexus_ (~nexus@80-95-85-52.pool.digikabel.hu) (Ping timeout: 252 seconds)
[11:14:50] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[11:15:32] *** Joins: nexus_ (~nexus@84-236-55-113.pool.digikabel.hu)
[11:16:49] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[11:17:08] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[11:19:15] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[11:19:23] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[11:19:29] *** Joins: wlemuel_ (~wlemuel@210.22.124.110)
[11:19:44] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:20:52] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:21:48] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[11:22:14] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[11:22:36] *** Quits: ekathva__ (~ekathva@mobile-access-5672d1-126.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:22:37] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[11:24:05] *** Joins: ekathva__ (~ekathva@n16j14urzyjc7uwzq-1.v6.elisa-mobile.fi)
[11:27:16] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[11:27:38] *** Joins: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com)
[11:31:04] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:31:57] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[11:35:13] *** Joins: jjido (~Denis@94.4.149.217)
[11:36:29] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:38:26] *** rkta_ is now known as rkta
[11:41:01] *** Joins: aradesh (~aradesh@user/aradesh)
[11:43:28] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[11:43:46] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Quit: rkta)
[11:43:49] *** Quits: while (~gh555222@cpe-69-133-36-135.cinci.res.rr.com) (Remote host closed the connection)
[11:44:29] *** Quits: chris1 (~chris@ip-103-85-39-170.syd.xi.com.au) (Ping timeout: 256 seconds)
[11:45:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:45:19] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[11:45:23] *** rkta_ is now known as rkta
[11:45:35] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:48:19] *** Joins: Rounin (~david@84.212.130.215)
[11:49:36] *** Joins: chris1 (~chris@ip-103-85-37-55.syd.xi.com.au)
[11:49:58] *** Joins: CaCode (~CaCode@user/cacode)
[11:57:19] *** Joins: zmt01 (~zmt00@user/zmt00)
[11:58:12] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[12:03:22] *** Joins: audio (~audio@user/audio)
[12:05:07] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[12:05:42] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[12:08:44] *** Joins: rgrinberg (~textual@177.244.18.30)
[12:11:29] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:11:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[12:12:54] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 250 seconds)
[12:13:03] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[12:13:21] *** Joins: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl)
[12:13:28] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[12:14:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:14:30] *** Joins: meator (~meator@user/meator)
[12:15:15] *** Quits: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 252 seconds)
[12:15:23] *** Joins: rgrinberg (~textual@177.244.18.30)
[12:15:28] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[12:15:39] *** Joins: arinov (~arinov@213.194.126.155)
[12:15:41] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:15:48] <Dean> hello!
[12:17:06] *** Joins: bindu (~bindu@user/bindu)
[12:19:16] <Bou> Good morning
[12:19:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:20:32] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[12:20:54] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:21:17] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 240 seconds)
[12:22:27] <greeter> "how do i know what's causing the segmentation fau oh shoot, i know exactly what's causing it" me just now -_-
[12:24:34] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:28:40] <greeter> well, fixed that only to find another one. read it several times and still can't figure it out. is there anything horribly wrong with this? https://bpa.st/3IMQ
[12:33:11] *** Joins: adip (~adip@aeiv69.neoplus.adsl.tpnet.pl)
[12:33:33] *** Joins: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[12:34:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:35:23] <dave0> greeter: line 10 looks suspicious
[12:35:32] <dave0> greeter: line 14 looks worse
[12:36:15] <dave0> greeter: you could move line 14 to line 21Â½
[12:36:35] <greeter> line 14 i did copy from elsewhere. i'll try moving it and see what happens
[12:36:37] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[12:37:02] <dave0> greeter: or change your strtok/while loop to a for loop ...   for(token = strtok(description, " "); token != NULL; token = strtok(NULL, " ")) { ...
[12:37:43] <greeter> wow, moving that line got rid of the segfault and gave me a really cool looking terminal lol
[12:38:11] <dave0> greeter: there should probably be a strcpy(to_print, " "); on line 17Â½
[12:38:28] <greeter> it almost looks like abstract art lol. though i might be able to work it from here. why did that like cause a segfault on line 14?
[12:39:01] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[12:39:01] *** Quits: mra90 (~mra@192.55.55.57) (Remote host closed the connection)
[12:39:18] <dave0> greeter: line 14 was no segfault, it just sets `token` to NULL and then strlen segfaulted
[12:39:33] <Bou> you print to_print when it's longer than screen width, but it's never really cleared?
[12:40:01] <Bou> Seems like you keep strcatting to it, overflowing the 180 bytes.
[12:40:06] <dave0> greeter: you check token != NULL on line 13 which is correct, but you then call strtok on line 14, which will return NULL at the end of the string
[12:40:20] <greeter> ah i see, that makes sense, thank you dave0. also good catch Bou, i noticed that too when i was able to get past the segfault
[12:40:30] <dave0> yeah put a strcpy on line 17Â½
[12:40:31] *** Joins: zer0x (~zer0x@1.55.211.113)
[12:40:39] <dave0> is printw a curses thing?
[12:40:58] <dave0> line 10 looks suspicious
[12:40:59] <greeter> yes. i'm trying to write a text adventure game as part of the 100 days of code challenge
[12:41:02] <dave0> unless it's a macro
[12:41:32] <dave0> greeter: i don't think line 10 getmaxyx() can change max_y and max_x
[12:41:36] <dave0> unless it's a macro
[12:41:48] <greeter> the documentation says that group of functions may be implemented as macros
[12:41:58] <dave0> ah okay
[12:42:15] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[12:42:18] <greeter> ooh my code now avoids splitting words across multiple lines :-D i've spent two days on this problem. thank you
[12:43:21] <dave0> that's incredibly poor style to use a macro like that
[12:43:39] <greeter> it is?
[12:43:44] <dave0> i read somewhere that curses is not high quality code
[12:44:07] <dave0> greeter: it is far more common to use a function and pass the address of max_y and max_x
[12:44:23] <greeter> ah, that could be. i'm not sure about that. honestly, i want to eventually move on from this and implement a card game
[12:44:26] <dave0> it's a poor api
[12:44:31] <ski> do you really want to compare with `max_y', rather than `max_x' ?
[12:44:37] <dave0> yeah you don't have to worry about it
[12:44:49] <ski> (presumably `max_x' is width and `max_y' is height ?)
[12:45:00] <greeter> in this case yes. curses has the y and x coords flipped from what one might expect
[12:45:38] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:45:49] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 240 seconds)
[12:47:14] <dave0> greeter: there's nothing wrong with your while loops, but i think for is cleaner here:   for(token = strtok(description, " "); token != NULL; token = strtok(NULL, " ")) { ...
[12:47:52] <greeter> i normally prefer to use for loops wherever i can. part of that is i'm less proficient with them. i have while loops working here so i don't think i'm ready to change them, yet (that's probably coming)
[12:48:14] <ski> "[..] the [..] getmaxyx macro[..] store the current [..] size of the specified window." <https://invisible-island.net/ncurses/man/curs_getyx.3x.html>
[12:48:51] <dave0> greeter: while is fine, if it aint broke dont fix it :-)
[12:49:14] *** Joins: nishant (~Nishant@49.37.242.151)
[12:49:27] <greeter> pretty much. especially where i break things all the time :-P
[12:49:27] *** Quits: nishant (~Nishant@49.37.242.151) (Remote host closed the connection)
[12:49:58] *** Joins: nishant (~Nishant@49.37.242.151)
[12:50:00] <constxd> kings
[12:50:19] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[12:50:45] <ski> greeter : oh, and instead of `if (player.location-> here == true) { ... } if (player.location->here == false) { ... }', i think it'd look nicer to do `if (player.location->here) { ... } else { ... }'
[12:51:15] <greeter> i'll give that a try. i've had issues before using else so i tend to write all that stuff out
[12:51:41] <ski> (maybe `here' could be renamed to something more suggestive, though, not sure)
[12:52:19] <greeter> i probably should have called it been_here or similar, since it's used to decide to output the long description if it's new to the player, or the short description otherwise
[12:52:47] <ski> (an alternative, i guess, would be to do `switch (player.location-> here) { case true: ... break; case false: ... break; }' ..)
[12:53:34] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:54:07] *** Joins: hinata (~hinata@2405:204:9191:6c24:797f:94af:f344:dffb)
[12:54:37] <greeter> i did try that originally. i can't remember why i switched though. i've been working on this a couple of weeks on and off, give or take
[12:54:39] <Bou> maybe I'm being dumb but I'm not even sure how this can work, doesn't `if (strlen(to_print) > max_y)` mean your string is already too long?
[12:54:57] <Bou> `length` is never used
[12:55:26] <pony> where's the code we're looking at?
[12:55:49] <greeter> yes, but the string isn't concatenated until after that part of the code is executed, so it never wraps around to the next line
[12:55:50] <Bou> I'd expect something like "if current string + the new token is wider than the screen, print current string"
[12:56:31] <greeter> pony: i triggered the discussion when i couldn't figure out why this code was segfaulting on me: https://bpa.st/3IMQ
[12:57:44] <ski> greeter : yes, that `if' should presumably refer to `length'
[12:59:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:59:39] *** Joins: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[13:00:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:00:39] <greeter> well, it seems to work for me, does what i want it to. surprised i got that to work. couldn't have done it without all your help though :-) thank you
[13:00:43] <ski> you also need the value of `strlen(token)' included in the next `length', in case you wrap around
[13:01:00] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[13:01:08] *** Joins: plastico (~plastico@neomutt/plastico)
[13:01:14] <greeter> ah yes that's what i was missing. thank you ski :-D
[13:01:17] <ski> probably you also want a final `printw' call at the end, after the loop, to print out the final, non-overflowing, line ?
[13:01:59] <greeter> something else i forgot, though i noticed the final string looked funny at least
[13:02:15] <ski> (also, i'm not completely sure where you're currently inserting spaces in what you're outputting .. you may have to adjust `length' appropriately to account for those spaces)
[13:03:20] <ski> (i'd also expect you to not want any trailing space on any line you output .. and presumably also no initial space ?)
[13:04:06] <greeter> ah, there is a leading space, i hadn't noticed that. hmm i'm gonna try to fix that one myself though
[13:04:25] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[13:04:54] *** Joins: apple75 (~joe@210.1.130.117)
[13:04:59] <ski> (re "you also need the value of `strlen(token)' included in the next `length', in case you wrap around" -- i guess i'd put `strlen(token)' in a local variable, not adding that to `length' immediately (but including it in the `if' condition), only adding it when you're actually appending to `to_print')
[13:06:27] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:06:37] <greeter> https://bpa.st/EKRQ i think this one looks a lot better. i don't like those array sizes, but i figure i can adjust those once everything else is working ok
[13:08:32] *** Joins: eddybilley (~freddieti@217.119.232.174)
[13:09:26] <apple75> How do I declare a string without knowing its initial length? All the tutorials I've seen that deal with string inputs define an arbitrarily large size for the string.
[13:09:28] <ski> (and please don't say `== true' (or `== false', for that matter. use `!', or possibly another way to express the inverted condition, in such cases))
[13:09:35] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[13:09:41] <ski> apple75 : which language ?
[13:09:45] <apple75> C
[13:10:02] <greeter> thank you ski. i'll give that a try
[13:10:02] <apple75> just c, not c++ or c#
[13:10:26] <constxd> greeter: it seems like both branches do almost the exact same thing
[13:11:12] <constxd> you can take everything outside of the conditional except for the copying of the long/short description into `description`
[13:11:19] <greeter> hmm that's a good point constxd. the only difference i think is which text they point to in order to copy things to the description array. i could definitely trim this down. i think i'm about coded out for the day though
[13:11:45] <constxd> based
[13:11:53] <constxd> nice work king
[13:11:55] <constxd> ncurses chad
[13:11:57] <dave0> apple75: are you talking about malloc'ing some space for a string?
[13:12:20] <ski> apple75 : well, you could use Variable-Length Arrays (VLAs), if you're using C99, or if your C compiler implements them. so `double nums[n]', where `n' is an integer, possibly a function parameter, or a previously declared local variable, say
[13:12:32] <ski> apple75 : or, you could use `malloc' (or `alloca')
[13:12:38] <dave0> apple75: char *str = malloc(length + 1); if(str == 0) perror("malloc error"); strcpy(str, "something");
[13:13:29] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:13:31] <ski> apple75 : where does the string come from ? is it written as a string literal in the source code ? or is it only passed to the code, say as a parameter, at run-time ?
[13:13:32] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 252 seconds)
[13:13:42] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:13:46] <apple75> These are all nice suggestions, I'm leaning towards the VLA implementation since the string is an input from the user
[13:13:59] <dave0> apple75: if you want to build a string, you can use ,{asprintf}
[13:13:59] <candide> apple75: asprintf is char *ASPrintF(const char *format, ...) { va_list ap; va_start(ap, format); int size = vsnprintf(0, 0, format, ap) + 1; va_end(ap); /* count string */ char *string = 0; if(size > 0) string = malloc(size); /* allocate string */ va_start(ap, format); if(string != 0) vsnprintf(string, size, format, ap); va_end(ap); /* print string */ return string; }
[13:14:18] <dave0> apple75: if you are recieving a string from the user or a file, it is more complicated
[13:15:03] <ski> apple75 : for the VLA, i guess you should be assured that `n' isn't gigantic
[13:15:13] <dave0> asprintf is already complicated... it works by making 2 passes over the formatted string... first to get it's length, then to actually write the characters
[13:15:47] <dave0> recieving an arbitrarily long string from the user or a file requires realloc
[13:16:09] <ski> apple75 : how long does the string need to live ? longer than the function call in which you're considering declaring the VLA ? if so, you can't use a VLA (or at least you'd need to copy it to another storage, before returning from the function)
[13:16:51] <apple75> ski: The string only needs to live as long as the function call
[13:16:56] <ski> ok
[13:17:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[13:18:09] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:30bd:98:114c:b965)
[13:18:24] <apple75> Ill read about all these suggestions and report back soon. Thanks
[13:18:50] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:20:06] <dave0> ,cc int n = -1; char str[n];
[13:20:08] <candide> dave0:  runtime error: variable length array bound evaluates to non-positive value -1 illegal backslash escape sequence in string, at character offset 33 (before "\\\x{fffd}\\\x{fffd}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 116.   [Exit 25]
[13:20:42] <ski> greeter : oh, and in your latest paste above, you're still not checking `length' (or `strlen(token)') in your `if (... > max_y)'
[13:21:21] <dave0> ,cc int len = snprintf(0, 0, "%s,%s", "hello", "world") + 1; char str[len]; snprintf(str, len, "%s,%s", "hello", "world"); puts(str);
[13:21:23] <candide> dave0: hello,world
[13:21:31] <dave0> how repetitive
[13:21:34] <dave0> but it would work
[13:21:50] <ski> ,cc int n = 0; char str[n]; printf("%zu\n",sizeof str);
[13:21:52] <candide> ski:  runtime error: variable length array bound evaluates to non-positive value 0  0
[13:22:03] <dave0> vla's are a bug
[13:22:45] <greeter> thank you ski. i'll try to remember that when i come back to this tonight :-)
[13:24:33] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:30bd:98:114c:b965) (Ping timeout: 252 seconds)
[13:25:13] <greeter> actually i just saw what you meant. way easier than what i thought :-S sorry, it's like 7 in the morning and i was up all night at work so a bit fried now i guess lol
[13:25:16] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[13:26:43] <greeter> just like that, most lines get an extra word and no words get wrapped to the next line :-D
[13:27:09] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:27:41] <ski> greeter : oh, and i should also add that that paste does add a trailing space to each line. if you swap the two `strcat' calls, it'd instead add an initial space to each line. to only add spaces inbetween the tokens, you'd either have to add a conditional that only adds the space if you're not at the start/end, or you'd have to unwind one round of the loop, treating the first token of each line specially (and only
[13:27:47] <ski> add a space if you're not overflowing)
[13:29:24] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:29:52] <ski> (downside of the conditional is that it runs every round, but most times it'd chose the one space alternative. downside of the unwinding is that you're repeating code)
[13:30:19] <greeter> ah i didn't even think of that. i guess i should have tried a printing character instead of a space at some point
[13:31:01] *** Quits: nexus_ (~nexus@84-236-55-113.pool.digikabel.hu) (Ping timeout: 240 seconds)
[13:31:29] <ski> (hm, i guess you could `goto' into the loop, just after adding a space, at the beginning (and at each line wrap-around) .. that would solve both the inefficiency and the repetition issue .. but it'd look uglier (be harder to comprehend), due to the `goto' ..)
[13:32:13] <greeter> ah yes, i'd rather have nicer looking code even if it's a bit more inefficient
[13:32:54] *** Joins: nexus_ (~nexus@178-164-207-227.pool.digikabel.hu)
[13:32:57] <ski> well, in some sense, avoiding repetition is still nicer (than not avoiding it), even if `goto' is not that nice
[13:33:29] <dave0> char *space = ""; for(token = strtok(string, " "); token != 0; token = strtok(0, " ")) { printf("%s%s", space, token); space = " "; }
[13:33:39] <dave0> no if in that
[13:34:11] <ski> point
[13:34:25] <greeter> i definitely have no doubts now that i can code a game with this yet :-D
[13:34:47] <dave0> ,cc char string[] = "this is a test"; printf("<"); char *space = ""; for(char *token = strtok(string, " "); token != 0; token = strtok(0, " ")) { printf("%s%s", space, token); space = "-"; } printf(">");
[13:34:49] <candide> dave0: <this-is-a-test>
[13:36:14] <greeter> this is quickly starting to get over my head unfortunately. i have to get some sleep now. everyone's been hugely helpful though :-D thank you
[13:37:06] <ski> greeter : btw, are you sure `player.location->short_desc' and `player.location->long_desc' are strings of length at most `799' ? otherwise, you might want to use `strncpy'
[13:37:48] <greeter> ah good idea. i did temporarily make them bigger to test this out, but i think i need the longer strings now
[13:40:43] * ski would probably also pass `player', and perhaps also `stdscr', as parameter to `display'
[13:41:21] *** Quits: pizdets_ (~pizdets@183.182.110.208) (Quit: pizdets)
[13:41:34] <greeter> that's a good idea. this uses the standard screen for now, but i do plan to switch it out for a specific window at some point
[13:42:02] *** Joins: pizdets (~pizdets@183.182.110.208)
[13:42:27] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:42:32] <greeter> anyhow, i'm off to get some much needed rest. thank you again everyone :-D
[13:42:37] <ski> yw
[13:44:53] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[13:46:30] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:48:03] *** Joins: joe_ (~joe@210.1.130.117)
[13:49:56] *** Quits: apple75 (~joe@210.1.130.117) (Ping timeout: 245 seconds)
[13:52:49] *** Joins: unknow (~i.am@user/marlboro)
[13:53:05] *** joe_ is now known as apple75
[13:58:11] <apple75> I'm trying to receive a string from the user, so asprintf does not work. I wont know the length ahead of time, and I want to avoid VLAs if I can. So from what I can see, I need to malloc or realloc. Would if be fine to malloc to some predefined size, and then realloc if the input turns out to be larger than the allocated size?
[13:59:06] <dave0> apple75: that's correct
[13:59:20] <apple75> Thanks! Thats probably what ill end up doing
[13:59:25] <dave0> apple75: but there is also getline() which does it for you.. i believe it's in posix, but posix is on topic for c
[14:00:36] <dave0> yeah it's getline .. it has a stupid interface, but it will read an arbitrarily long line
[14:02:31] *** Joins: cation21 (cation@user/cation)
[14:03:51] <edk> i think getline is a pretty reasonable interface
[14:04:09] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[14:05:01] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:05:23] <dave0> it should be   char *line = getline(stdin);
[14:05:55] *** cation21 is now known as cation
[14:05:56] <dave0> and the name is too generic, it breaks k&r
[14:05:59] <dave0> the book
[14:06:10] <markand> quick question, there is a rule that {0} in initializer will set all fields to 0 but looks like when using !0 it only applies to the first element: https://ideone.com/OcFZQH
[14:06:19] <edk> loads of names break k&r
[14:06:36] <dave0> edk: then those names are a bug too
[14:06:42] <markand> if dealing with an array of pointers, will {NULL} set all elements to NULL or I should use {0} as well? (e.g. const char *tab[5] = {NULL})
[14:06:47] <edk> dave0: i don't think so
[14:06:58] <k> loads of nicks break on &
[14:07:04] <dave0> markand: use   ={0}   it always works
[14:07:16] <twkm> {0} only explicitly initializes the first element, the rest are implicitly initialized (to zero).
[14:07:29] <dave0> markand: if you initialize any, the rest are automatically initialized too (to 0)
[14:07:31] <twkm> similarly {1} only explicitly initializes the first element, the rest are implicitly initialized (to zero).
[14:07:40] <dave0> hey twkm :-)
[14:07:40] <edk> {NULL} *will* set all elements to NULL but not for the reason you think
[14:07:51] <markand> oh okay I get it
[14:07:54] <twkm> hmm, NULL.
[14:08:04] <markand> it's similar to designated initializers where missing fields are zero'ed
[14:08:10] <edk> yes
[14:08:32] <markand> I just remember that a few years ago that the compiler emitted some warnings like "missing initializers for ..."
[14:08:46] <dave0> you know what they say about warnings...
[14:08:58] <edk> most compilers special-case {0} for those warnings as they know it's used as a universal initializer
[14:09:14] <markand> hopefully now C23 has a dedicated = {} thingy
[14:09:31] <dave0> well it saves a single character... i guess it's good
[14:09:34] <markand> :P
[14:09:34] <edk> to be honest i don't mind {0}
[14:10:03] *** Quits: useretail (~useretail@185.132.19.151) (Quit: Leaving)
[14:10:06] *** Parts: v4mp (~v4mp@user/v4mp) ()
[14:10:15] <markand> I think the suckless guys prefer using 0 rather than NULL btw (to save some #include I think)
[14:10:17] *** Joins: useretail (~useretail@185.132.19.151)
[14:10:35] <dave0> 0 works everywhere NULL works but not vice-versa
[14:12:25] *** Joins: lleo (~leo@89-200-4-50.mobile.kpn.net)
[14:12:56] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:14:11] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[14:16:55] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[14:17:04] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: Lost terminal)
[14:19:56] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[14:21:23] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:21:31] *** Joins: seninha (~chatzilla@user/seninha)
[14:22:21] <NRK> they also don't use <stdbool.h>
[14:23:17] *** Joins: lle (~lle@2001:ac8:24:78::3d)
[14:23:42] *** Parts: apple75 (~joe@210.1.130.117) (Leaving)
[14:24:45] <dave0> bool is just bad
[14:25:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[14:25:47] <NRK> it's more descriptive tho. `bool fun(void)` clearly says it returns 0/1 compared to `int fun(void)`
[14:26:53] <dave0> int isfun(void);
[14:27:06] <dave0> if(isfun()) printf("\o/");
[14:27:35] <NRK> ah yes, the classic `is` prefix
[14:28:14] <NRK> honestly i don't think i'd mind namespaces in C, `mem::cpy(d, s, 0);`
[14:29:30] <lle> i keep forgetting which header even defines bool so i just use int
[14:33:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[14:34:02] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[14:34:36] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:36:07] *** Joins: Klinda (~superleag@user/klinda)
[14:36:09] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[14:36:41] <twkm> NRK: if you'd like to expand on that, it also invades reserved naming.
[14:40:11] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:41:03] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[14:43:19] *** Joins: rendar (~rendar@user/rendar)
[14:43:25] <rendar> if my library exports a function, an executable needs an header for that function, what is the best solution used nowadays for this? let the executable import all the library headers, or have separate headers? what is the best practice?
[14:44:25] *** Joins: Enitin (~Enitin@82.180.145.226)
[14:45:13] <constxd> dave0: why is bool bad
[14:45:19] <constxd> bool is based
[14:46:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:46:47] <constxd> ,cc void f(void) { static _Bool init; if (!init++) puts("Initializing..."); } f(); f(); f(); f();
[14:46:49] <candide> constxd: [In function 'f':  warning: increment of a boolean expression [-Wbool-operation]] Initializing...
[14:46:52] <dave0> constxd: it re-introduces trap values into the language, you can do arithmetic on it, you can never use it for type checking in if() while() for() etc. because of backwards compatibility
[14:47:41] <constxd> arithmetic on _Bool is useful imo
[14:47:45] <constxd> decrement is based
[14:48:01] <dave0> it makes no sense, true and false are not numbers
[14:48:20] <constxd> how does it not make sense?
[14:48:36] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[14:49:05] <constxd> pointers aren't numbers either should we disallow ++ and -- on pointers?
[14:49:31] <dave0> you mean pointer arithmetic? eh if you want to
[14:51:02] <dave0> besides, arithmetic is also limited on pointers.. char *a,*b,*c=a+b;
[14:51:19] <dave0> you could argue to use bool in a hash function
[14:53:00] <dave0> it's as unintuitive as   int a,b,c,d; a = b + (c && d);
[14:54:45] <rendar> anyone?
[14:55:21] <constxd> rendar: depends
[14:55:24] *** Quits: lle (~lle@2001:ac8:24:78::3d) (Quit: Textual IRC Client: www.textualapp.com)
[14:56:03] <rendar> on what?
[14:56:27] <constxd> how much you want to expose to consumers of the library
[14:57:09] <rendar> if i don't care, i can expose all the lib headers, right? but is this the common approach?
[14:57:29] <constxd> right
[14:57:51] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 245 seconds)
[14:57:56] *** Joins: X-Scale` (~ARM@83.223.232.29)
[14:58:08] <constxd> it's fairly common yeah, look at some of the library headers on your system for examples
[14:58:18] <rendar> constxd, i see
[14:58:26] <constxd> but
[14:58:55] <rendar> but?
[14:58:55] <constxd> if some type's representation is apt to change, you should let users know that they shoulnd't depend on it
[14:59:03] <dave0> rendar: i think it's the same judgement on how to divide up your .c files ... group similar functions together, don't let the files get too large
[14:59:18] <constxd> you should make it clear what users of the library can and cannot expect to remain stable
[14:59:34] <rendar> i see
[14:59:46] <rendar> let's say i want to hide some headers
[15:00:05] <rendar> i need another header to redeclare functions?
[15:00:13] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[15:00:13] *** X-Scale` is now known as X-Scale
[15:00:20] <constxd> yeah you could do that
[15:00:39] <rendar> but isn't that very cumbersome and error prone having 2 headers of the same function?!
[15:01:04] <constxd> well you could have function declarations in header A, and concrete type definitions in header B
[15:01:04] <dave0> rendar: usually you have a public.h and a private.h where the private.h #include's the public.h
[15:01:11] <constxd> when compiling the library you include A and B
[15:01:17] <constxd> but you provide only A to the users
[15:02:27] <rendar> in my old code i used this: an MY_EXPORT macro that if i was compiling the library it exported the function, if it was compiling an executable, it imported the function, but ..i don't know, is this method common?
[15:04:06] *** Quits: yggdrasil (~yggdrasil@75-161-21-164.albq.qwest.net) (Ping timeout: 252 seconds)
[15:04:27] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:05:01] *** Quits: alch (~alch@151.34.155.55) (Ping timeout: 268 seconds)
[15:05:12] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 252 seconds)
[15:05:40] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:05:44] *** Joins: yggdrasil (~yggdrasil@67-0-40-200.albq.qwest.net)
[15:06:40] *** Joins: alch (~alch@ca-18-223-252.service.infuturo.it)
[15:07:38] *** Joins: strajder (~strajder@user/strajder)
[15:11:33] *** Joins: seninha (~chatzilla@user/seninha)
[15:12:18] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:14:08] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:16:36] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[15:19:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[15:21:53] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:23:24] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[15:26:10] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 250 seconds)
[15:27:57] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:28:32] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:29:12] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:29:25] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[15:33:36] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:37:27] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:46:26] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[15:47:06] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:47:37] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[15:49:24] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[15:49:31] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[15:52:47] *** Quits: meandrain (~meandrain@2a02:2f0e:f70f:6e00:705a:a9d3:274:ebee) (Remote host closed the connection)
[15:53:07] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 268 seconds)
[15:53:49] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:57:17] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 240 seconds)
[15:57:30] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[16:01:45] *** Joins: a0_12 (~a0_12_2@87.116.164.185)
[16:03:15] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[16:03:45] *** Quits: a0_12 (~a0_12_2@87.116.164.185) (Quit: Leaving)
[16:04:36] *** Quits: nexus_ (~nexus@178-164-207-227.pool.digikabel.hu) (Ping timeout: 252 seconds)
[16:05:10] *** Quits: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl) (Ping timeout: 250 seconds)
[16:06:33] *** Joins: nexus_ (~nexus@84-236-60-110.pool.digikabel.hu)
[16:08:01] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:08:08] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:15:03] *** Joins: zmt00 (~zmt00@user/zmt00)
[16:15:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:17:54] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:c74:a093:6a89:9890)
[16:22:09] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 256 seconds)
[16:24:32] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[16:25:12] *** Joins: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl)
[16:25:35] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[16:32:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4998:5f5e:9ad1:1206)
[16:32:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4998:5f5e:9ad1:1206) (Changing host)
[16:32:00] *** Joins: skapata (~Skapata@user/skapata)
[16:33:11] *** Quits: hinata (~hinata@2405:204:9191:6c24:797f:94af:f344:dffb) (Ping timeout: 252 seconds)
[16:34:43] *** Joins: ekathva_ (~ekathva@193.210.171.118)
[16:34:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:35:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:36:36] *** Joins: polyrob_ (~rob@user/polyrob)
[16:36:36] <LeoNerd> Bah. It seems that macro expansion doesn't properly understand inner arrays somehow?   MACRO(3, (int []){10, 20, 30})  confuses it
[16:36:37] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[16:36:44] <LeoNerd> It sees 4 args, not 2
[16:36:59] *** Quits: ekathva__ (~ekathva@n16j14urzyjc7uwzq-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[16:37:54] <NRK> it's not about "inner array"
[16:38:13] <NRK> it's just seeing the comma and interpreting that as arg
[16:38:27] <LeoNerd> Yeah
[16:38:38] <LeoNerd> I guess I'll have to extract that as a named variable :/
[16:38:58] *** Quits: ymwm (~yingmanwu@110.85.123.161) (Ping timeout: 250 seconds)
[16:39:02] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[16:39:02] *** polyrob_ is now known as polyrob
[16:39:14] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[16:39:25] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[16:39:32] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[16:39:33] *** Joins: azed (~azed@197.23.130.142)
[16:39:51] *** Quits: ekathva_ (~ekathva@193.210.171.118) (Read error: Connection reset by peer)
[16:39:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:40:19] <dave0> try putting more ()'s
[16:40:32] <dave0> MACRO(3, ((int[]){10,20,30}))
[16:41:06] *** Joins: ekathva_ (~ekathva@n16j1b0fzs8z4jskb-1.v6.elisa-mobile.fi)
[16:41:13] <LeoNerd> Oh more parens might help
[16:41:32] <LeoNerd> Ahyes :)
[16:41:37] <dave0> hope so, it's just a guess
[16:42:06] <LeoNerd> That works fine, thanks
[16:42:37] <LeoNerd> If in doubt, add more parens. Unless it's Lisp
[16:42:59] *** Joins: audio (~audio@user/audio)
[16:43:00] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[16:45:43] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[16:47:06] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[16:48:06] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[16:48:09] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[16:48:59] <fizzie> Yeah, the argument-splitting for function-like macros understands only ()s, not other delimiters like {}s or []s.
[16:49:03] <fizzie> ,c11 6.10.3p11
[16:49:05] <candide> http://www.iso-9899.info/n1570.html#6.10.3p11 [Macro replacement] The sequence of preprocessing tokens bounded by the outside-most matching parentheses forms the list of arguments for the function-like macro. The individual arguments within the list are separated by comma preprocessing tokens, but comma preprocessing tokens between matching inner parentheses do not separate arguments. If there are sequenc... <truncated; https://0x0.st/oZ0H.txt>
[16:50:20] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:58:38] *** Quits: malloy (~jimery@120.235.172.192) (Read error: Connection reset by peer)
[17:04:05] *** Quits: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Quit: Leaving)
[17:04:19] *** Joins: malloy (~jimery@120.235.172.192)
[17:05:13] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Remote host closed the connection)
[17:05:41] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[17:06:16] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Max SendQ exceeded)
[17:06:43] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[17:07:24] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[17:09:27] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[17:10:19] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[17:12:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:13:36] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[17:13:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:14:08] *** Joins: Rynn (~rynn@216.30.158.198)
[17:15:33] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[17:16:38] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[17:17:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:18:13] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[17:23:05] *** Joins: Enitin (~Enitin@82.180.145.226)
[17:24:47] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[17:26:27] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[17:26:41] *** Joins: guest29032 (~guest2903@223.179.139.248)
[17:27:17] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[17:27:46] *** Joins: Trot (~Trot@107.147.149.155)
[17:30:23] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[17:31:10] *** Joins: alex11 (~alex11@user/alex11)
[17:31:25] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Remote host closed the connection)
[17:32:19] *** Quits: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl) (Quit: gerwand)
[17:33:29] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:c74:a093:6a89:9890) (Quit: This computer has gone to sleep)
[17:34:28] *** Joins: mikess (~sam@user/mikess)
[17:35:30] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:35:37] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[17:36:39] *** Joins: lilibyte (~lilibyte@89.187.180.40)
[17:37:11] *** Quits: davidlowryduda (~davidlowr@73.61.8.192) (Ping timeout: 256 seconds)
[17:37:32] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 252 seconds)
[17:38:23] *** Joins: FluffyMask (~masque@user/fluffymask)
[17:39:18] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:b19d:d8f1:1756:fb98)
[17:42:43] *** Joins: ekathva__ (~ekathva@mobile-access-5672f9-202.dhcp.inet.fi)
[17:45:16] *** Quits: ekathva_ (~ekathva@n16j1b0fzs8z4jskb-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[17:45:53] *** Joins: plastico (~plastico@neomutt/plastico)
[17:51:20] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[17:54:57] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:57:13] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[18:01:33] *** Quits: ekathva__ (~ekathva@mobile-access-5672f9-202.dhcp.inet.fi) (Ping timeout: 256 seconds)
[18:03:37] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 240 seconds)
[18:05:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:07:14] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:07:48] *** Joins: meandrain (~meandrain@2a02:2f0e:f70f:6e00:4ce0:6366:566f:39a0)
[18:10:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:12:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:14:29] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[18:14:56] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[18:15:30] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Ping timeout: 252 seconds)
[18:16:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[18:18:05] *** Joins: vekay (~vekay@user/vekay)
[18:18:48] *** Quits: guest29032 (~guest2903@223.179.139.248) (Quit: Client closed)
[18:19:04] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 250 seconds)
[18:19:54] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:a95b:3633:19a2:8630) (Quit: Leaving)
[18:27:05] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[18:29:29] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[18:29:36] *** Joins: libremind (~andrea@gateway/tor-sasl/libremind)
[18:29:54] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[18:30:15] *** Joins: Enitin (~Enitin@82.180.145.226)
[18:31:31] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[18:35:46] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[18:36:40] *** Quits: libremind (~andrea@gateway/tor-sasl/libremind) (Quit: "Happy Hacking")
[18:37:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[18:39:37] *** Quits: mikess (~sam@user/mikess) (Ping timeout: 240 seconds)
[18:42:48] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[18:43:13] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:45:53] *** Joins: cruncher (~cruncher@user/cruncher)
[18:49:50] *** Joins: rgrinberg (~textual@177.244.18.30)
[18:53:17] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[18:53:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:55:47] *** Joins: e36freak (~e36freak@user/e36freak)
[18:56:44] *** Joins: mikess (~sam@user/mikess)
[18:59:17] *** Joins: mra90 (~mra@192.55.54.37)
[19:01:46] *** Joins: kts (~kts@103.73.237.12)
[19:05:00] *** Quits: alch (~alch@ca-18-223-252.service.infuturo.it) (Ping timeout: 240 seconds)
[19:05:21] *** Joins: eddof13 (~eddof13@192.154.196.149)
[19:05:47] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[19:06:24] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[19:06:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:07:00] *** Joins: alch (~alch@ca-18-214-251.service.infuturo.it)
[19:08:50] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[19:09:02] *** Quits: nexus_ (~nexus@84-236-60-110.pool.digikabel.hu) (Ping timeout: 260 seconds)
[19:09:44] *** Joins: pulse (~pulse@user/pulse)
[19:10:18] *** Joins: azed (~azed@197.23.130.142)
[19:11:16] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[19:12:17] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 240 seconds)
[19:12:20] *** Quits: treble1 (~treble@user/treble) (Quit: WeeChat 3.4)
[19:12:32] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[19:12:53] <dan01[m]> Hey guys
[19:13:11] <dan01[m]> If you subtract a signed from an unsigned you get an unsigned
[19:13:11] <dan01[m]> Why?
[19:13:29] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[19:14:10] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 260 seconds)
[19:14:35] <clarity> because the spec says so
[19:16:04] *** Joins: nexus_ (~nexus@80-95-86-2.pool.digikabel.hu)
[19:16:34] <caze> ,c11 6.3.1.8p1
[19:16:36] <candide> http://www.iso-9899.info/n1570.html#6.3.1.8p1 [Usual arithmetic conversions] Many operators that expect operands of arithmetic type cause conversions and yield result types in a similar way. The purpose is to determine a common real type for the operands and result. For the specified operands, each operand is converted, without change of type domain, to a type whose corresponding real type is the common r... <truncated; https://0x0.st/oZGB.txt>
[19:16:42] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 250 seconds)
[19:17:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:17:21] <NRK> dan01: integer promotion rules
[19:17:36] <dan01[m]> sure ok
[19:17:46] <dan01[m]> but does it have a logic to it?
[19:18:06] <dan01[m]> Something I can remember other than the standard says so
[19:18:44] <caze> "... if the operand that has unsigned integer type has rank greater or equal to the rank of the type of the other operand, then the operand with signed integer type is converted to the type of the operand with unsigned integer type."
[19:18:47] *** Joins: e36freak (~e36freak@user/e36freak)
[19:19:44] <NRK> dan01: you'll have to remember the "ranks"
[19:20:00] <NRK> weather it's "logical" or not, idk.
[19:20:01] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[19:22:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:24:03] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 256 seconds)
[19:24:08] <caze> dan01[m]: What exactly are you wondering about?
[19:25:10] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[19:25:54] *** Quits: jack_rabbit (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[19:27:02] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Read error: Connection reset by peer)
[19:28:52] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[19:31:19] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[19:32:33] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[19:33:57] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[19:34:55] *** Joins: treble (~treble@user/treble)
[19:35:09] <clarity> conversions, I guess
[19:36:23] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 250 seconds)
[19:39:48] *** Joins: audio (~audio@user/audio)
[19:40:36] <SaltHilStroller_> Is it not possible to nest x-macros like this? https://onlinegdb.com/B_IN2l4Cj, not sure what's wrong
[19:41:09] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Read error: Connection reset by peer)
[19:41:17] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[19:43:35] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[19:43:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:46:14] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[19:49:02] <caze> SaltHilStroller_: Like what?
[19:52:21] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:52:51] *** Quits: zer0x (~zer0x@1.55.211.113) (Ping timeout: 250 seconds)
[19:53:01] <SaltHilStroller_> caze: As in the example I provided with the link
[19:54:02] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.132)
[19:55:36] *** Joins: mahmutov_ (~mahmutov@5.176.28.231)
[19:58:17] *** Quits: Trot (~Trot@107.147.149.155) (Quit: The Lounge - https://thelounge.chat)
[19:58:34] *** Joins: Trot (~Trot@107.147.149.155)
[19:59:01] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[20:00:53] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.132) (Ping timeout: 256 seconds)
[20:03:28] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-5492-1c86-9393-f318.fixed6.kpn.net)
[20:06:51] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[20:08:16] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-5492-1c86-9393-f318.fixed6.kpn.net) (Ping timeout: 250 seconds)
[20:11:18] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 250 seconds)
[20:11:39] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[20:11:57] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[20:12:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:12:42] *** Joins: raym (~raym@user/raym)
[20:12:47] *** Joins: savolla (~quassel@95.10.203.10)
[20:13:13] *** Quits: nexus_ (~nexus@80-95-86-2.pool.digikabel.hu) (Ping timeout: 250 seconds)
[20:15:09] *** Joins: nexus_ (~nexus@80-95-86-2.pool.digikabel.hu)
[20:15:17] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[20:16:15] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[20:16:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[20:18:15] *** Joins: Enitin (~Enitin@82.180.145.223)
[20:18:48] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[20:19:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:21:49] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[20:22:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a021:f576:2141:1ac3)
[20:24:51] *** Joins: KevinX (~KevinX@user/KevinX)
[20:26:41] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b95f:ec50:9584:336a) (Quit: fe23)
[20:27:58] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[20:28:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[20:28:46] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:29:48] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 240 seconds)
[20:30:59] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[20:31:54] *** Quits: supakeen (~supakeen@python/site-packages/supakeen) (Quit: Bridge terminating on SIGTERM)
[20:33:04] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[20:34:06] *** Joins: supakeen (~supakeen@python/site-packages/supakeen)
[20:34:55] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[20:39:02] *** Joins: magla (~gelignite@d536591f.access.ecotel.net)
[20:40:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[20:40:20] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[20:40:36] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[20:41:07] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[20:41:39] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[20:42:36] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Read error: Connection reset by peer)
[20:42:51] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.132)
[20:44:57] *** Joins: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779)
[20:45:40] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[20:47:35] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[20:50:07] *** Joins: Torr (~Torr@user/torr)
[20:51:13] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Remote host closed the connection)
[20:51:26] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.206)
[20:51:38] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[20:52:51] <fizzie> SaltHilStroller_: What's wrong in your example is that the preprocessing token `EVENT` is only replaced when it appears directly in the body ("replacement list") of the `#define LIST(EVENT) ...`. When it's inside the expansion of a different macro (like FOO), that's too late: the rescanning for further replacement only happens *after* parameters have been gone and done with.
[20:55:14] *** Joins: slimbo (~slim@user/slimbo)
[20:56:33] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[20:56:35] *** Quits: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[20:58:17] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 250 seconds)
[20:58:26] *** Joins: Betal (~Betal@user/betal)
[20:58:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:58:58] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[21:00:13] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[21:00:40] *** Joins: cadmio (~cadmio@151.47.204.133)
[21:00:54] <cadmio> is the control unit the same thing as the execution unit?
[21:02:47] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:03:47] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[21:04:14] <dragonmaster> cadmio: any chance you can provide some context for your question?  I can make a guess following a naive google search, but your question is not clear (to me)
[21:05:04] <pragma-> dragonmaster: he does this all the time. we just ignore him now.
[21:05:05] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:05:39] <pragma-> ,vampire
[21:05:39] <candide> The Help Vampire: A Spotter's Guide http://slash7.com/2006/12/22/vampires/
[21:05:56] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[21:05:59] *** Quits: Jmtrix (~qed@user/jmtrix) (Ping timeout: 252 seconds)
[21:06:13] <cadmio> generally the CPU is divided in 3 parts: CU,ALU and registers
[21:06:25] <cadmio> there's no execution unit mentioned
[21:06:53] *** Joins: Jmtrix (~qed@2604:180:2:72d::497d)
[21:06:53] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[21:06:53] *** Joins: Jmtrix (~qed@user/jmtrix)
[21:07:17] *** Quits: greeter (fresh@2604:180:2:117:cafe:babe:dead:beef) (Ping timeout: 240 seconds)
[21:07:44] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 272 seconds)
[21:07:48] *** Joins: greeter (fresh@2604:180:2:117:cafe:babe:dead:beef)
[21:08:45] *** Quits: raym (~raym@user/raym) (Ping timeout: 252 seconds)
[21:09:02] *** Joins: bleb (~cm@user/bleb)
[21:11:29] *** Joins: raym (~raym@user/raym)
[21:11:44] <gnoo> all those 3 are in execution unit(eu), there's also bus interface unit(biu). see https://www.notesforengineering.com/wp-content/uploads/2021/05/1-1.png
[21:12:29] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:15:23] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:15:49] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.132) (Ping timeout: 240 seconds)
[21:17:51] <cadmio> so when it says "The CU then issues necessary signals to the execution unit to perform the desired operation and routes the results to the specified destination."
[21:18:09] <cadmio> it means sends signals to the ALU and registers?
[21:19:02] *** Quits: eddof13 (~eddof13@192.154.196.149) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:20:42] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[21:21:06] <gnoo> yes, i think (could be wrong)
[21:21:23] *** Joins: lle (~lle@2001:ac8:24:76::1d)
[21:23:00] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:24:36] *** Joins: tiotags (~tiotags@user/tiotags)
[21:27:11] <cadmio> I've found also this https://imgur.com/RkRyKQO.png
[21:27:38] *** Quits: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779) (Remote host closed the connection)
[21:28:10] *** Joins: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779)
[21:31:44] *** Quits: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779) (Read error: Connection reset by peer)
[21:31:58] *** Joins: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779)
[21:32:12] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[21:32:24] *** Quits: cadmio (~cadmio@151.47.204.133) (Quit: WeeChat 3.0)
[21:34:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[21:35:03] <dan01[m]> caze: How to remember int promotions
[21:36:13] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[21:38:53] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[21:39:24] *** Joins: meator (~meator@user/meator)
[21:39:59] *** Joins: cadmio (~cadmio@151.35.149.3)
[21:40:30] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:40:35] *** Quits: lle (~lle@2001:ac8:24:76::1d) (Quit: Textual IRC Client: www.textualapp.com)
[21:41:01] *** Joins: lle (~lle@2001:ac8:24:76::1d)
[21:48:16] <clarity> dan01[m]: The same way you remember anything, just memorise it and voila
[21:48:33] <clarity> (Or encounter it enough times and you'll just do)
[21:48:42] *** Parts: cadmio (~cadmio@151.35.149.3) (WeeChat 3.0)
[21:50:43] *** Joins: Sooty_boy (~Ghostbur@68.179.154.138)
[21:50:54] *** Parts: Sooty_boy (~Ghostbur@68.179.154.138) ()
[21:52:19] <dragonmaster>    I was going to suggest, flippantly, that if you always use long long you don't need to remember anything, but that's almost certainly false.
[21:53:01] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:53:07] <Bou> When in doubt, cast. When still in doubt, add more parentheses
[21:54:30] <twkm> casts, ewww.
[21:54:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[21:55:03] *** Joins: immibis (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779)
[21:55:13] *** Quits: immibis_ (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779) (Read error: Connection reset by peer)
[21:55:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:56:29] *** Quits: kts (~kts@103.73.237.12) (Quit: Konversation terminated!)
[21:58:42] <NRK> dan01: it's not THAT difficult to memorize
[21:59:17] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 240 seconds)
[21:59:33] <NRK> things get promoted to the highest rank
[21:59:49] <NRK> long + int -> int gets promoted to long.
[21:59:52] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Quit: The Lounge - https://thelounge.chat)
[22:00:14] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[22:00:20] *** Joins: kts (~kts@103.73.237.12)
[22:00:49] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[22:01:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:01:50] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[22:03:40] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:04:51] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 252 seconds)
[22:05:04] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[22:05:39] <fizzie> Well, it's a *little* more complicated than that, when signed and unsigned types get involved. For example, in the relatively common case where `long` and `long long` are both 64-bit types, `unsigned long` + `long long` promotes to `unsigned long long`, even though that isn't even one of the "input" types.
[22:05:59] *** Quits: Matt|home (~matt@adsl-74-233-58-80.mia.bellsouth.net) (Read error: No route to host)
[22:06:16] *** Joins: poprocks (~logan@user/poprocks)
[22:06:57] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Quit: The Lounge - https://thelounge.chat)
[22:06:57] <fizzie> But on (also common) architectures where long is 32 bits and long long is 64, the established common type is (signed) `long long` instead.
[22:07:15] <fizzie> ,cc __typeof__(0ul + 0ll) x; ptype(x);
[22:07:16] <candide> fizzie:  x = unsigned long long
[22:07:18] <fizzie> ,cc -m32 __typeof__(0ul + 0ll) x; ptype(x);
[22:07:21] <candide> fizzie:  x = long long
[22:07:47] <NRK> yeah, i left in the middle of typing, was about to post how all the "short ints" gets promoted to int.
[22:07:51] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[22:08:13] <pony> is ptype() C? or a candide thing?
[22:08:33] <NRK> ,cc signed char a, b; int n; a = b = CHAR_MAX; n = a + b; printf("%d", n);
[22:08:35] <candide> NRK: illegal backslash escape sequence in string, at character offset 19 (before "\\\x{7f}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 118.   [Exit 25]
[22:08:52] <NRK> pragma-: fix her
[22:08:56] <NRK> :c
[22:09:22] <pony> :O
[22:09:51] *** Joins: Guest7359 (~Guest@host242.190-139-77.telecom.net.ar)
[22:10:00] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:10:54] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[22:11:29] <pragma-> pony: it's a gdb thing.
[22:11:53] <pragma-> pony: the bot runs the program via gdb
[22:11:55] <pragma-> NRK: weird.
[22:11:56] <pony> ahh ok
[22:12:08] *** Parts: dan01[m] (~dan01@2001:470:69fc:105::1:2640) ()
[22:13:42] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[22:14:09] *** Joins: Akiva (~Akiva@user/Akiva)
[22:16:33] *** Quits: savolla (~quassel@95.10.203.10) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:17:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:30] *** Quits: nexus_ (~nexus@80-95-86-2.pool.digikabel.hu) (Ping timeout: 252 seconds)
[22:17:33] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[22:18:15] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 256 seconds)
[22:18:24] <fizzie> That 0ul + 0ll example is also one of the cases gdb gets wrong on its own, requiring the typeof.
[22:18:34] *** Joins: Enitin (~Enitin@82.180.145.223)
[22:18:37] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.206) (Ping timeout: 240 seconds)
[22:18:47] <fizzie> ,cc ptype(0ul + 0ll); __typeof__(0ul + 0ll) x; ptype(x);
[22:18:49] <candide> fizzie:  0ul + 0ll = unsigned long   x = unsigned long long
[22:19:16] *** Joins: nexus_ (~nexus@178-164-207-111.pool.digikabel.hu)
[22:20:17] *** Joins: epicout (~epicout@user/epicout)
[22:22:59] *** Quits: immibis (~hexchat@2a02:3032:a:4f76:b82c:396f:6558:3779) (Quit: HexChat)
[22:24:06] *** Quits: lleo (~leo@89-200-4-50.mobile.kpn.net) (Ping timeout: 252 seconds)
[22:25:10] <pragma-> smh
[22:25:14] <pragma-> gdb is so annoying
[22:25:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:27:17] <twkm> switch to lldb -- i'm sure that will be fun!
[22:28:36] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:29:14] <NRK> sooo, did u fix it?
[22:29:15] <NRK> ,cc signed char a, b; int n; a = b = CHAR_MAX; n = a + b; printf("%d", n);
[22:29:17] <candide> NRK: illegal backslash escape sequence in string, at character offset 19 (before "\\\x{7f}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 118.   [Exit 25]
[22:29:27] <NRK> Noooooooooo
[22:29:31] <pragma-> NRK: don't rush me!
[22:29:53] <pragma-> it's a high-priority ticket
[22:29:58] <pragma-> top of my list
[22:30:05] <pragma-> numbero uno
[22:30:43] <fizzie> P minus one on the usual scale from P0 to P4.
[22:31:08] *** Quits: Enitin (~Enitin@82.180.145.223) (Read error: Connection reset by peer)
[22:31:18] *** Quits: wlemuel_ (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:31:36] *** Joins: Enitin (~Enitin@82.180.145.223)
[22:31:36] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:31:42] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[22:32:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:34:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:35:17] *** Quits: kts (~kts@103.73.237.12) (Quit: Konversation terminated!)
[22:35:57] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[22:36:37] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:37:57] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[22:39:15] *** Joins: Enitin (~Enitin@82.180.145.227)
[22:39:27] *** Joins: Akuli (~Akuli@213.216.211.90)
[22:40:28] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:40:44] *** Quits: slidercrank (~slidercra@user/slidercrank) (Remote host closed the connection)
[22:41:02] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:41:59] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:42:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[22:43:40] *** Joins: sant (~sant@170.81.141.210)
[22:44:19] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[22:44:22] *** Quits: sant (~sant@170.81.141.210) (Client Quit)
[22:44:47] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[22:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:22] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:14] *** Joins: somlis (~somlis@user/somlis)
[22:48:46] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[22:48:46] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[22:48:46] *** Joins: Teukka (~teukka@user/Teukka)
[22:49:08] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:50:28] *** Quits: kdc (~kdc@196.211.197.133) (Quit: Leaving)
[22:57:02] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:57:49] *** Joins: terminalpusher (~terminalp@2a01:586:abfb:1:761a:f918:599d:37cc)
[22:57:56] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:58:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:58:46] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[23:00:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[23:02:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[23:02:53] *** Quits: terminalpusher (~terminalp@2a01:586:abfb:1:761a:f918:599d:37cc) (Remote host closed the connection)
[23:03:35] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 256 seconds)
[23:04:08] *** Joins: Enitin (~Enitin@82.180.145.225)
[23:04:19] *** Quits: lle (~lle@2001:ac8:24:76::1d) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:05:25] *** Quits: alch (~alch@ca-18-214-251.service.infuturo.it) (Ping timeout: 240 seconds)
[23:05:34] *** Joins: alch_ (~alch@151.82.146.96)
[23:05:36] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[23:05:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[23:06:39] *** Quits: cruncher (~cruncher@user/cruncher) (Quit: Leaving)
[23:07:33] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[23:09:46] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[23:10:07] *** Joins: shivesh (~shivesh@user/shivesh)
[23:10:10] *** Joins: namkeleser (~namkelese@101.175.155.55)
[23:10:22] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:26] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[23:12:39] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:18:11] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:21:15] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[23:25:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:26:14] *** Joins: Atque (~Atque@user/atque)
[23:29:28] *** Joins: lle (~lle@2001:ac8:24:77::2d)
[23:29:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:29:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:29:31] *** Joins: wroathe (~wroathe@user/wroathe)
[23:31:37] *** Quits: lle (~lle@2001:ac8:24:77::2d) (Client Quit)
[23:31:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:31:52] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:32:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[23:33:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:38:34] *** Joins: wirehead (~wirehead@121.223.152.47)
[23:40:48] *** Joins: strajder (~strajder@user/strajder)
[23:41:45] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:43:19] *** Quits: Kerr (~Kerr@2601:602:ce80:df10::b76e) (Quit: Client closed)
[23:45:07] *** Joins: pulse (~pulse@user/pulse)
[23:47:42] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[23:47:45] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:51:10] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.132)
[23:52:19] <pragma-> NRK: ,cc signed char a, b; int n; a = b = CHAR_MAX; n = a + b; printf("%d", n);
[23:52:21] <candide> NRK: 254
[23:52:29] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:52:32] * pragma- shakes fist at gdb.
[23:53:57] <greeter> hmm?
[23:54:21] <pragma-> ,cc signed char a, b; int n; a = b = CHAR_MAX; n = a + b; // just curious how it prints 0x127 literally
[23:54:23] <candide> pragma-: no output: a = 127 ''; b = 127 ''; n = 254
[23:54:41] <pragma-> er, not 0x127
[23:54:44] <pragma-> just 127.
[23:54:46] <pragma-> 0x7f
[23:54:50] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[23:55:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:55:23] <pragma-> hmm.
[23:55:35] <pragma-> DEL innit
[23:55:59] *** Quits: rgrinberg (~textual@177.244.18.30) (Read error: Connection reset by peer)
[23:56:54] *** Joins: rgrinberg (~textual@177.244.18.30)
