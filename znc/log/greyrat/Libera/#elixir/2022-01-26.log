[00:05:37] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:15:30] *** _w1ntermute_ is now known as _w1ntermute
[00:15:31] *** Quits: phaleth (~user@user/phaleth) (Quit: phaleth)
[00:16:59] <_w1ntermute> hoppity: all number are either floats or integers in elixir
[00:17:30] <benwilson512> _w1ntermute: he is probably using the Decimal library
[00:17:36] <hoppity> indeed I am
[00:18:06] <benwilson512> hoppity: are you using operations beyond addition / subtraction?
[00:18:18] <hoppity> benwilson512: yes, I am multiplying and dividing
[00:18:52] <benwilson512> one option is to simply use integers and use integer division
[00:19:00] <benwilson512> and have all of the integers be 100x bigger than the desired end value
[00:20:24] <hoppity> I see, so there is no way to simply set the decimal precision limit to 2?
[00:20:40] <hoppity> I don't understand the point of the Decimal library then
[00:21:05] <_w1ntermute> so what happens if you set the context to 2?
[00:21:09] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[00:21:32] <_w1ntermute> never used the decimal library to be honest quite funny that there is a todo for rounding errors in the documentation
[00:22:17] <KettleMan> I know i'm joining the middle, because I just got back to my computer, but Float has ceil/2, floor/2, and round/2 where the second argument is precision of decimal places.
[00:22:35] <hoppity> _w1ntermute: if you set the precision to 2 in the context you are just allowed numbers of two digits, regardless of whether these are decimals or the integer side of the number
[00:23:07] <benwilson512> hoppity: the purpose of Decimal is that you don't lose precision like floats do
[00:23:32] <benwilson512> Floats are not a safe data type for money
[00:23:59] <hoppity> benwilson512: but I am caught between a rock and a hardplace now.. I either show my users numbers like 9.9090909091 or reduce the precision to 3 to show numbers like 9.91 but then all my calculations are wrong.
[00:24:19] <benwilson512> hoppity: you can truncate after every operation right?
[00:24:25] <KettleMan> I only suggeted Float because the orinigal question stated "kinda like money" which implies it may not be money. But if accuracy of data is important, then yeah, don't use Floats.
[00:24:37] <hoppity> benwilson512: I havent found how to truncate decimals, not in the docs
[00:24:40] <benwilson512> er also https://hexdocs.pm/decimal/readme.html#precision-and-rounding
[00:25:40] <benwilson512> hoppity: https://hexdocs.pm/decimal/Decimal.html#round/3
[00:26:30] <hoppity> benwilson512: thank you, but cannot truncate in the strict sense of the word correct?
[00:26:40] <hoppity> because that would be super useful
[00:26:52] <benwilson512> :floor rounding strategy
[00:27:03] <hoppity> I see, thanks, I will try that
[00:27:07] <benwilson512> https://hexdocs.pm/decimal/Decimal.Context.html#module-rounding-algorithms
[00:27:22] <benwilson512> actually I think a simple :down is the actual truncate option
[00:27:34] <benwilson512> there is a great table beneath that doc section
[00:27:37] <hoppity> sounds good, I will give it a shot and report back
[00:27:42] <hoppity> thank you so much
[00:27:47] <benwilson512> no problem!
[00:27:55] <benwilson512> and yeah make sure to round after every operation
[00:29:54] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 250 seconds)
[00:30:27] <hoppity> benwilson512: indeed it seems like Decimal.round is exactly what I was looking for! :)
[00:32:56] *** Quits: mahmutov (~mahmutov@37.155.74.145) (Ping timeout: 250 seconds)
[00:44:44] *** ozoned is now known as odoood
[00:52:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:57:01] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[01:02:50] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[01:03:46] *** Joins: jushur (~human@user/jushur)
[01:22:42] *** Quits: beise (~beise@85.17.52.17) (Read error: Connection reset by peer)
[01:25:14] *** Joins: beise (~beise@85.17.52.17)
[01:26:15] *** Quits: _w1ntermute (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[01:26:41] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[01:28:48] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Quit: leaving)
[01:29:07] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[01:35:33] *** Joins: notapenguin (~ryu@187.3.254.107)
[01:51:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[01:52:13] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[01:57:14] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[02:09:13] <hoppity> I have some loops in one of my templates that display some numbers.. Is there a way to somehow add these numbers into a single total in the template itself?
[02:10:03] <hoppity> Like, during the for loop, append to a sort of global variable kinda like doing ++ 
[02:10:25] *** Quits: notapenguin (~ryu@187.3.254.107) (Quit: WeeChat 3.4)
[02:20:32] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 240 seconds)
[02:26:31] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:44] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[02:29:59] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Client Quit)
[02:34:32] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[03:01:01] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 256 seconds)
[03:01:35] *** Quits: trafficjam (~qubes@1.145.227.213) (Ping timeout: 256 seconds)
[03:16:06] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[03:50:57] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[04:13:19] <Poeticode> I'm trying to mock an API response in my tests, and elixir maps not keeping their original ordering upon creation is causing a lot of issues. How can I have them keep their ordering, or is there something else I should do to rectify this?
[04:14:43] <Ankhers> Poeticode: Elixir maps are not ordered. What are you trying to do with the ordered map?
[04:15:20] <rawtaz> yeah why does it need to be ordered, sounds like a broken consumer :)
[04:15:43] <Poeticode> basically I'm trying to pattern match on the API's response, and it's upset that the keys aren't in the same order
[04:16:31] <Poeticode> For some reason Jason.decode() keeps the ordering, but my mock API's "json" response doesn't
[04:17:43] <Ankhers> Would you mind showing some code?
[04:21:19] <Poeticode> ... Actually I may have solved it somehow? The actual JSON response doesn't care if the function head's key values are in the right order (while the map it creates from decoding is in the expected order that erlang/elixir would create)
[04:21:40] <rawtaz> hmm, i didnt think pattern matching a map needed the keys to be in a certain order
[04:22:48] <Poeticode> yeah, first time I've encountered this :/
[04:23:06] <hoppity> rawtaz: you are correct
[04:23:38] <hoppity> Poeticode: Maybe I am misunderstanding but it sounds like you need to convert from JSON to Map and then pattern match on the map.
[04:23:40] <Ankhers> It shouldn't, which is why I was hoping to see the code and associated error.
[04:23:42] <rawtaz> if anyone knows it's hoppity because theyve been writing elixir code for five months straight now :P
[04:23:55] <hoppity> lol no kidding
[04:25:21] <Ankhers> five good months hopefully?
[04:26:03] <rawtaz> at least five social months :->
[04:26:47] <Ankhers> I would count that as a win given the current state of things.
[04:35:04] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Quit: leaving)
[04:37:26] <rawtaz> i meant in here though
[04:37:34] <rawtaz> theyve been in here almost every day :)
[04:37:50] <Ankhers> I'm aware. I still count that as a good thing.
[04:38:04] <rawtaz> sigh i misread, yeah..
[04:44:27] <Poeticode> dangit, think the map in my mock API was just flat out wrong. It does seem like pattern matching doesn't care about the map's ordering
[04:44:40] <Poeticode> it was working at some point which made me think the ordering was the issue
[04:45:09] <Ankhers> Poeticode: Do you have it working?
[04:45:33] <Poeticode> Yep, and tried switching the ordering on the pattern match and it doesn't blow up
[04:45:44] <Ankhers> Glad to hear it!
[04:46:13] <rawtaz> good to know elixir didnt change over night :-)
[05:03:04] *** Joins: lispy (~lispy4@84.69.59.93)
[05:11:21] *** Joins: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[05:13:04] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[05:24:49] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[05:27:33] <Poeticode> lol I never would have known/cared if elixir maps were ordering agnostic if I didn't run into this unrelated error
[05:29:13] *** Parts: manicennui (uid349235@id-349235.tinside.irccloud.com) ()
[05:29:13] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[05:29:50] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Client Quit)
[05:30:10] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[05:31:04] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[05:36:33] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[05:52:01] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[05:57:52] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[06:03:56] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Quit: leaving)
[06:04:14] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[06:04:14] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Client Quit)
[06:05:53] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[06:13:32] *** Quits: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[06:44:20] <hoppity> Ankhers: definitely good months, Phoenix/Elixir have helped me build apps that would take a whole team otherwise. Quite liking it.
[06:51:30] *** Quits: hoppity (~hoppity@user/hoppity) ()
[07:12:01] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:02] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:31:07] *** Joins: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[07:35:17] *** Quits: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[07:48:22] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Quit: Leaving)
[07:56:28] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[08:19:54] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Remote host closed the connection)
[09:01:10] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:05:40] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[09:10:57] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[10:05:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[10:10:53] *** Joins: phaleth (~user@user/phaleth)
[10:14:07] *** Quits: phaleth (~user@user/phaleth) (Client Quit)
[10:31:03] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[10:38:18] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 268 seconds)
[11:06:45] <serafeim> hello friends
[11:08:37] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:23:59] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:29:13] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:14:37] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[12:25:25] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Ping timeout: 256 seconds)
[12:27:18] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[12:42:02] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[12:42:20] *** Joins: fwg (~fwg@user/fwg)
[12:46:32] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 240 seconds)
[12:50:15] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:50:47] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:51:10] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[13:17:26] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Quit: Leaving)
[13:54:30] *** Joins: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[13:58:37] *** Quits: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:03:49] <trafficjam> is it possible to use a with statement to pipe together a query?
[14:04:06] <trafficjam> specifically for only variables that are given
[14:04:51] <trafficjam> e.g. say you have variables a, b and c, all of which are used in an ecto query somehow. Is it possible to use a with statement to pipe the non-null variables and their respective query?
[14:06:06] <trafficjam> pseudocode: query = a ? query |> where(...) : pass; query = b ? query |> where(...) : query; query = c ? query |> where(...) : query;
[14:09:46] <serafeim> trafficjam: see this snippet: https://github.com/spapas/phxcrd/blob/master/lib/phxcrd_web/query_filter_ex.ex#L31-L46
[14:10:03] <serafeim> i explain how it works here: https://spapas.github.io/2019/07/25/declarative-ecto-query-filters/
[14:26:31] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[14:26:32] *** Joins: Guest97 (~Guest97@80.208.66.43)
[14:30:37] <Guest97> Hello, I am just trying to learn Phoenix/Elixir, and when I was building my first application I noticed there is an "app.html.heex" getting rendered and I don't understand this behavior.
[14:30:38] <Guest97> I defined a root template in my pipeline with: plug :put_root_layout, {ExampleWeb.LayoutView, :session}
[14:30:38] <Guest97> and I have the  <%= @inner_content %>, but app.html.heex is rendered in between breaking the CSS with the main.container tag (I know I can just change the file, but I want to understand why).
[14:30:39] <Guest97> Could someone help me to understand?
[14:30:39] <Guest97> Thx in advance.
[14:32:46] <serafeim> Guest97: is this helping you: https://github.com/phoenixframework/phoenix/issues/4535
[14:34:37] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[14:40:14] *** Quits: Guest97 (~Guest97@80.208.66.43) (Quit: Client closed)
[14:40:17] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[14:43:36] <serafeim> trafficjam: was that helpful ?
[14:45:50] <trafficjam> serafeim: yeah relatively, but is there a more concise "native" method?
[14:46:34] <serafeim> native? what do you mean ?
[14:46:40] <serafeim> that's the way to do it
[14:46:49] <serafeim> you need to construct the query by hand using reduce
[14:47:07] <serafeim> or if you don't want to use reduce you need to do these operations one by one
[14:47:52] <serafeim> i.e `query = if a, do: where(query, a==^a), else: query`... and then the same for b, c etc
[15:02:55] <trafficjam> serafeim: hmm yeah seems that way, i'm trying to get it working with a `with` statement, but no luck yet
[15:03:56] <serafeim> hmmm it should also work with with but i'm not sure if it's working
[15:04:16] <serafeim> for me the best is to create a list of conditions and use reduce (like i did in the code i sent you)
[15:04:47] <serafeim> also you may want to take a look at my query_ex thingie
[15:05:07] <serafeim> i use it to all my controllers
[15:09:34] <serafeim> it's a single module
[15:30:57] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[15:38:01] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:41:17] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[15:41:41] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Client Quit)
[15:45:42] *** Joins: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[15:50:41] *** Joins: Guest97 (~Guest97@80.208.66.43)
[15:54:38] *** Quits: Guest97 (~Guest97@80.208.66.43) (Client Quit)
[16:04:39] *** Quits: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:12:10] *** Joins: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[16:16:37] *** Quits: yauhsien (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:30:20] <sepow> trafficjam you might find ectos dynamic queries interesting. Here's a blogpost I once read about it https://bartoszgorka.com/dynamic-queries-in-ecto
[16:31:13] <sepow> or docs https://hexdocs.pm/ecto/dynamic-queries.html
[16:31:19] <serafeim> i had researche these dynamic queries before some years but found out they are not very useful for this requirement
[16:49:48] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:54:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[17:21:00] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[17:31:21] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:40:00] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:43:22] *** Joins: czard (~czard@host-78-150-125-181.as13285.net)
[17:44:20] *** Joins: czard_ (~Srain@host-78-150-125-181.as13285.net)
[17:52:58] *** Joins: czard6 (~czard@host-78-150-125-181.as13285.net)
[17:56:36] *** Parts: czard6 (~czard@host-78-150-125-181.as13285.net) (Bye bye :wave:)
[17:56:47] *** Joins: czard6 (~czard@host-78-150-125-181.as13285.net)
[17:57:49] *** Quits: czard6 (~czard@host-78-150-125-181.as13285.net) (Quit: Bye bye :wave:)
[17:59:35] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Quit: Lost terminal)
[17:59:35] *** czard_ is now known as czard
[18:05:33] *** Joins: czard1 (~czard@host-78-150-125-181.as13285.net)
[18:05:53] *** Quits: czard (~Srain@host-78-150-125-181.as13285.net) (Remote host closed the connection)
[18:05:53] *** czard1 is now known as czard
[18:12:47] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Ping timeout: 268 seconds)
[18:19:40] *** Joins: notapenguin (~ryu@187.3.254.107)
[18:32:37] *** Joins: phaleth (~user@user/phaleth)
[18:45:12] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[18:49:48] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:58:44] *** Joins: Common-Lisp (~common_li@12.2.190.242)
[19:18:58] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Client limit exceeded: 20000)
[19:22:09] *** Joins: mizi (~mizi@user/mizi)
[19:24:31] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[19:30:44] *** Quits: Common-Lisp (~common_li@12.2.190.242) (Remote host closed the connection)
[19:40:13] *** Quits: kpanic (~kpanic@user/kpanic) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:50:29] *** Joins: yauhsien_ (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[19:53:38] *** Joins: kpanic (~kpanic@2a02:e00:ffec:6cd::a)
[19:53:38] *** Quits: kpanic (~kpanic@2a02:e00:ffec:6cd::a) (Changing host)
[19:53:38] *** Joins: kpanic (~kpanic@user/kpanic)
[19:54:53] *** Quits: yauhsien_ (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[20:00:28] *** Joins: Sanks[m] (~sanksnitr@2001:470:69fc:105::1:77b1)
[20:01:48] *** Joins: 077AAE8MJ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de)
[20:05:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[20:07:27] *** Joins: Guest2495 (~Guest2495@37.99.40.62)
[20:08:15] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[20:08:58] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:09:32] *** Quits: Guest2495 (~Guest2495@37.99.40.62) (Client Quit)
[20:13:59] *** Joins: sanks (~sanks@37.99.40.62)
[20:14:12] *** Joins: Guest2496 (~Guest2496@37.99.40.62)
[20:14:22] *** Quits: sanks (~sanks@37.99.40.62) (Client Quit)
[20:15:02] *** Joins: yauhsien_ (~yauhsien@61-231-17-3.dynamic-ip.hinet.net)
[20:16:21] *** Quits: Guest2496 (~Guest2496@37.99.40.62) (Client Quit)
[20:17:31] *** Joins: mahmutov (~mahmutov@37.155.23.91)
[20:19:22] *** Quits: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net) (Quit: leaving)
[20:19:49] *** Quits: o (~niko@libera/staff/niko) (Ping timeout: 633 seconds)
[20:19:50] *** Quits: yauhsien_ (~yauhsien@61-231-17-3.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[20:26:56] <rawtaz> i guess noone missed https://www.bleepingcomputer.com/news/security/linux-system-service-bug-gives-root-on-all-major-distros-exploit-released/
[20:26:57] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[20:29:48] *** Joins: KettleMan (~kttl_crn@96-19-96-19-170-253.cpe.sparklight.net)
[20:45:06] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:18] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[20:49:03] *** Joins: Perry (~perry@coffee-break.at)
[20:49:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[21:28:44] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[21:30:43] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:11] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:35:21] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[21:37:45] *** Joins: mouseghost (~draco@user/mouseghost)
[21:41:39] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[21:49:18] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Quit: The Lounge - https://thelounge.chat)
[21:49:59] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[22:03:57] *** Joins: grundrausch3n (~grundraus@p4ff43c5b.dip0.t-ipconnect.de)
[22:10:29] *** Joins: neceve (~quassel@2.26.93.228)
[22:31:48] *** Quits: notapenguin (~ryu@187.3.254.107) (Quit: WeeChat 3.4)
[22:31:55] *** Joins: lispy (~lispy4@84.69.59.93)
[22:34:10] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 250 seconds)
[22:34:23] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[22:47:59] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[22:48:39] *** Quits: mahmutov (~mahmutov@37.155.23.91) (Ping timeout: 250 seconds)
[22:53:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[22:54:10] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:00:22] *** Joins: notapenguin (~ryu@187.3.254.107)
[23:03:16] *** Joins: mahmutov (~mahmutov@5.176.46.201)
[23:03:31] *** Joins: mouseghost (~draco@user/mouseghost)
[23:13:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:57] *** Quits: 077AAE8MJ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[23:28:18] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:31:33] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[23:33:03] *** Quits: jstoker (~jstoker@user/jstoker) (Remote host closed the connection)
[23:36:57] *** Joins: jstoker (jstoker@user/jstoker)
