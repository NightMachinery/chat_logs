[00:06:48] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:10:44] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[00:11:51] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[00:13:20] *** Quits: paul424 (~tom@ip-5-172-237-104.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:14:01] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[00:24:54] *** Joins: badone (~badone@209.132.189.136)
[00:27:21] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:33:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:34:55] <imMute> "Node" ?
[00:39:06] *** Quits: proller (~p@2a02:6b8:b081:8019::1:0) (Ping timeout: 245 seconds)
[00:44:40] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:47:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:50:07] *** Quits: AmR (~AmREiSa@102.47.62.197) (Quit: Konversation terminated!)
[00:51:41] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:b412:3d19:27cf:5d37)
[00:52:09] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[00:55:12] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:5cca:96d9:7234:6761) (Ping timeout: 265 seconds)
[00:57:04] *** Joins: proller (~p@2a02:6b8:b081:8832::1:1b)
[01:01:02] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:01:40] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[01:04:06] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[01:04:12] <very_sneaky> CarloWood: terminus? stop? stage?
[01:04:20] <kalven> landfill?
[01:16:12] <ville> frank
[01:17:06] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:18:02] <LordKalma> PJBoy, ping
[01:18:10] <PJBoy> poo
[01:18:18] <LordKalma> are you in the include slack?
[01:18:29] <PJBoy> nah
[01:19:54] *** Quits: letto2 (~letto@86.120.85.133) (Quit: Konversation terminated!)
[01:19:55] <PJBoy> starting to feel like I'm missing out now though :p
[01:20:00] <LordKalma> nah
[01:20:27] <LordKalma> it's just a dumb fucker who thinks that "int x;" being implementation defined is on the same level as UB/IF-NDR
[01:20:39] *** Joins: letto (~letto@86.120.85.133)
[01:21:03] <PJBoy> ah
[01:21:11] <johnny> they have a slack and a discord?
[01:21:16] <johnny> or is that something different?
[01:21:19] <LordKalma> different things
[01:21:21] <PJBoy> that's all well defined AFAIK :/
[01:21:23] <LordKalma> different communities
[01:21:34] <PJBoy> what happened to the rumors of the slack being super rude and stuff
[01:21:52] <Alipha> `int x;` is well-defined until you try to access x without assigning it a value first
[01:22:01] <LordKalma> PJBoy, even last week a prominent member left
[01:22:05] <LordKalma> for those reasons
[01:22:12] <PJBoy> ah ok
[01:22:21] <LordKalma> which I don't understand why/how
[01:22:35] <LordKalma> that's why you don't hang around in the off-topic channels haha
[01:22:49] <LordKalma> the general channels and the channels I'm not are pretty legit
[01:26:16] <PJBoy> the include discord on the other hand is a place of rainbows and friendships
[01:26:33] <LordKalma> from the dicussion I just had it's also the place of dumb fucks
[01:26:43] <PJBoy> oh shit there you are ahahaha
[01:27:42] <LordKalma> the regulars on the slack are a small bunch
[01:27:46] <LordKalma> kinda like here
[01:27:54] <LordKalma> discord is clearly more all over the place
[01:27:59] <LordKalma> and I'm not going back there
[01:28:29] <TinoDidriksen> ... #C++-social
[01:28:41] <LordKalma> sorry :)
[01:28:44] <LordKalma> but not going there either :p
[01:32:27] *** Quits: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu) (Quit: leaving)
[01:32:44] *** Joins: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu)
[01:33:43] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:37:35] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:38:15] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[01:38:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:38:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:38:37] *** ChanServ sets mode: +v npaperbot
[01:39:48] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[01:43:28] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[01:43:40] *** Quits: magla (~gelignite@55d416db.access.ecotel.net) (Quit: Stay safe!)
[01:43:44] *** Quits: Simplar (~quassel@188.163.92.225) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:46:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[01:48:49] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8929:d77f:9cd3:1ca7)
[01:51:55] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[01:53:14] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[01:58:45] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:11:21] <TheGuestMovie> has anyone here used codementor.io? thoughts?
[02:11:42] <TheGuestMovie> basically you pay like 10-15 bucks per hour for a senior mentor
[02:11:44] <ville> if it's something web based it's crap
[02:11:45] <TheGuestMovie> allegedly
[02:12:11] <TheGuestMovie> ville: I'm using a web browser right now to talk to you
[02:12:34] <TheGuestMovie> in 2021 information is often exchanged using websites, yes
[02:12:54] <TheGuestMovie> oh sorry it's $1 per minute
[02:12:57] <TinoDidriksen> Are you the kind of person that learns best from mentors? Then it may be useful. It'd be worthless for most.
[02:13:07] <TinoDidriksen> $1 per minute? Ouch
[02:13:50] <TinoDidriksen> I'd say it's better to not spend any money and use the many free resources available.
[02:14:19] <TheGuestMovie> I'm not interested in it to learn programming, it's for more advanced stuff like software architecture, design plans, etc
[02:14:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:14:31] <TinoDidriksen> My point stands.
[02:14:51] <kalven> How many hours would you pay for?
[02:15:02] <TheGuestMovie> kalven: like 2-3?
[02:15:28] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Remote host closed the connection)
[02:15:31] <kalven> How much of the "advanced stuff" can you realistically learn in that time from some rando?
[02:15:36] <TheGuestMovie> unless the guy's a stutterer, I'm in and out. Work on a shared example that I'll have prepared, get to the point, see his approach.
[02:15:59] <TheGuestMovie> In my experience guided mentorship is like 10x faster than studying on your own
[02:16:22] <TinoDidriksen> Mentoring is great when you need constant feedback, such as language learning. But for IT stuff...eh.
[02:16:22] <TheGuestMovie> it's why we still have classrooms in 2021
[02:17:05] <kalven> Is it some code that the mentor has prior knowledge of?
[02:18:14] <TheGuestMovie> kalven: no. It would be a simplified version of the sort of apps I work on, and where I'd like the opinion of someone familiar with a certain architecture.
[02:19:29] <kalven> TheGuestMovie: okay. I suppose it'll largely depend on how quickly the mentor can get into the thing you present and make meaningful improvements to it
[02:19:42] <kalven> (and how well that maps back to your actual application)
[02:21:22] <TheGuestMovie> yeah we'll see
[02:27:16] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:28:06] <johnny> TinoDidriksen, i'd be willing to pay some money for answers to questions you don't know how to ask :(
[02:28:31] <johnny> or somebody to verify you aren't barking up the wrong tree completely
[02:30:09] <johnny> like if this wasn't for a FOSS project, i'd be willin to pay some money to ask if this approach for transparent ui with clickthrough is the appropriate approach I should use to be compatible with both windows and wine.
[02:30:31] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[02:33:23] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[02:33:33] *** Joins: Atlas667_ (~Atlas667@94.198.42.94)
[02:41:40] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[02:42:55] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:44:08] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[02:46:05] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[02:47:12] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[02:47:24] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[02:51:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:cd02:5ed5:f7c5:1e43)
[02:52:27] <yolo> one on one paid mentor is such a non-scalable business, if I am smart enough, I will mentor for free
[02:53:06] <kalven> people do it here all the time
[02:53:15] *** Quits: jkaye (~jkaye@c-71-205-220-154.hsd1.co.comcast.net) (Ping timeout: 264 seconds)
[02:54:06] <yolo> this channel is indeed super helpful :)
[02:55:03] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:b412:3d19:27cf:5d37) (Ping timeout: 264 seconds)
[02:55:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:58:04] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:01:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:08:49] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:17:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:22:12] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:22:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:24:22] *** Joins: chozorho (~chozorho@2601:146:300:c30::8489)
[03:31:38] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[03:34:38] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[03:45:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8929:d77f:9cd3:1ca7) (Remote host closed the connection)
[03:49:12] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[03:51:10] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
[03:51:11] *** Joins: malloy (~jimery@116.30.222.115)
[03:58:16] <MaddHatter> the problem with a service like that is you're committing payment up front without knowing the person on the other side can actually help you. Whether it's IT support or even here, I often find the thing I most want to know isn't known by the one(s) I'm trying to ask
[04:09:32] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[04:12:22] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[04:13:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[04:13:42] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:4d91:ed0e:b294:29d3)
[04:15:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:21:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:21:58] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[04:23:55] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:26:57] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:41:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:47:06] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:09:49] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:11:00] *** Joins: Guest37__ (~textual@124.168.255.30)
[05:11:44] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[05:13:09] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Remote host closed the connection)
[05:14:06] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[05:14:10] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:19:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:32:20] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[05:34:35] *** Joins: malloy (~jimery@116.30.222.115)
[05:38:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:38:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:38:37] *** ChanServ sets mode: +v npaperbot
[05:42:45] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:46:18] <johnny> MaddHatter, indeed that's the case, because boy is this stuff complicated :(
[05:46:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:47:53] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[05:49:20] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:4d91:ed0e:b294:29d3) (Quit: Leaving)
[05:55:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[05:55:58] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:56:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:00:21] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 245 seconds)
[06:01:44] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[06:03:09] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:04:14] *** vinleod is now known as vdamewood
[06:04:38] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[06:07:26] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:14:24] *** Joins: frost (~frost@user/frost)
[06:17:16] *** Joins: AmR (~AmREiSa@102.47.62.197)
[06:30:01] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[06:30:05] *** Joins: gehn (~gehn@user/gehn)
[06:30:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:33:48] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[06:35:40] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:40:51] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:46:50] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:51:44] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[06:53:23] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:53:46] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[06:56:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[07:15:29] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[07:16:52] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[07:20:32] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:39:43] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 256 seconds)
[07:41:56] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[07:44:02] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[07:47:45] *** Joins: Guest37__ (~textual@124.168.255.30)
[07:54:26] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:3017:c1dd:5d13:2be1)
[07:57:51] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:cd02:5ed5:f7c5:1e43) (Ping timeout: 245 seconds)
[07:58:54] *** Joins: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu)
[07:59:42] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:59:53] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 265 seconds)
[08:06:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:17:35] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:22:54] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:23:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:24:14] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:25:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[08:31:23] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[08:31:44] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[08:32:11] *** Quits: chozorho (~chozorho@2601:146:300:c30::8489) (Ping timeout: 268 seconds)
[08:32:39] *** Joins: chozorho (~chozorho@2601:146:300:c30::7d)
[08:34:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:34:38] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[08:39:49] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:40:22] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:43:35] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:48:40] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[09:01:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:cb:bef4:82f4:b2d6)
[09:01:42] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:03:49] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:04:47] *** Joins: reumeth (~reumeth@user/reumeth)
[09:04:59] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:05:15] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:3017:c1dd:5d13:2be1) (Ping timeout: 250 seconds)
[09:11:11] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 245 seconds)
[09:16:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[09:16:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[09:18:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:21:45] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[09:23:06] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[09:23:42] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[09:24:13] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[09:26:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:27:04] *** Joins: CoderCharmander (~CoderChar@254C26FA.nat.pool.telekom.hu)
[09:38:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:38:38] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:38:38] *** ChanServ sets mode: +v npaperbot
[09:40:11] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[09:42:49] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:44:44] *** Joins: Guest37__ (~textual@124.168.255.30)
[09:46:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[09:56:11] *** Quits: CoderCharmander (~CoderChar@254C26FA.nat.pool.telekom.hu) (Ping timeout: 245 seconds)
[09:57:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:59:25] *** Joins: CoderCharmander (~CoderChar@2A0011100205F46B00000050F8E79E01.mobile.pool.telekom.hu)
[09:59:30] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[09:59:50] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[10:11:57] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[10:14:30] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[10:20:37] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:4de4:2055:b8c4:f1e)
[10:23:47] *** Quits: chozorho (~chozorho@2601:146:300:c30::7d) (Quit: WeeChat 3.0)
[10:24:27] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:cb:bef4:82f4:b2d6) (Ping timeout: 264 seconds)
[10:26:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:29:51] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 264 seconds)
[10:32:44] *** Joins: Guest37__ (~textual@124.168.255.30)
[11:01:47] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[11:02:15] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:03:36] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[11:07:08] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Remote host closed the connection)
[11:08:17] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6a36)
[11:12:53] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dcc8:899d:3e3c:92f9)
[11:18:32] *** Joins: Guest37__ (~textual@124.168.255.30)
[11:33:30] *** Quits: Guest37__ (~textual@124.168.255.30) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:33:42] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:34:59] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Ping timeout: 250 seconds)
[11:35:18] *** Joins: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[11:35:25] *** Quits: prime (~prime@user/prime) (Ping timeout: 250 seconds)
[11:35:47] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (Ping timeout: 264 seconds)
[11:35:47] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 264 seconds)
[11:35:51] *** Quits: InPhase (~InPhase@openscad/inphase) (Ping timeout: 250 seconds)
[11:35:54] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:36:23] *** Quits: Ara (~Ara@user/ara) (Ping timeout: 264 seconds)
[11:36:38] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:37:46] *** Joins: Ara (~Ara@user/ara)
[11:37:49] *** Joins: InPhase (~InPhase@openscad/inphase)
[11:39:44] *** Joins: prime (~prime@user/prime)
[11:45:12] *** Quits: CoderCharmander (~CoderChar@2A0011100205F46B00000050F8E79E01.mobile.pool.telekom.hu) (Ping timeout: 268 seconds)
[11:46:05] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[11:46:29] *** Joins: CoderCharmander (~CoderChar@2A0011100229C52E0000005903EFEA01.mobile.pool.telekom.hu)
[11:47:02] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[11:48:23] *** Joins: jiffe (~jiffe@mail.nsab.us)
[11:51:18] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:51:36] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[11:51:44] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[11:52:15] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[11:52:19] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[11:54:23] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[11:54:24] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:54:29] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:55:03] *** Quits: Atlas667_ (~Atlas667@94.198.42.94) (Ping timeout: 264 seconds)
[12:00:30] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:08:10] *** Joins: Guest37_ (~textual@124.168.255.30)
[12:08:31] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:12:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:13:23] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: The Lounge - https://thelounge.chat)
[12:16:43] *** Joins: andreasbuhr (~quassel@p549db7f4.dip0.t-ipconnect.de)
[12:16:54] *** Quits: andreasbuhr (~quassel@p549db7f4.dip0.t-ipconnect.de) (Client Quit)
[12:21:47] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dcc8:899d:3e3c:92f9) (Quit: Leaving)
[12:25:02] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:25:39] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:25:45] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:26:24] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:27:58] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[12:32:22] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[12:33:09] *** Joins: robod34 (Username@79.113.195.239)
[12:34:33] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[12:35:45] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[12:36:11] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:36:36] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:41:54] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 260 seconds)
[12:41:54] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[12:44:14] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[12:45:39] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:52:31] <smallville7123> does anyone know how to fix this? https://gist.github.com/mgood7123/9321f351f69cd99e94b6114c106bd755
[12:52:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:54:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[13:00:01] <DSpider> it says right there "Undefined symbols for architecture x86_64"
[13:00:07] <DSpider> what do you think that means?
[13:00:19] <DSpider> "symbol(s) not found for architecture x86_64"
[13:01:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[13:03:29] <DSpider> it means your project is 64 bit and the lib is compiled as 32 bit
[13:03:55] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[13:04:10] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:06:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:13:32] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:13:39] <LordKalma> kids, write your code properly
[13:13:57] <LordKalma> I have some python code for work to control some equipnents that are concrete classes with the VISA implementation inside
[13:14:00] <LordKalma> guess what?
[13:14:09] <LordKalma> now I have a different bus to communicate with them
[13:14:11] <LordKalma> URGH
[13:14:25] <LordKalma> gotta put everything out to implementation classes
[13:15:08] <LordKalma> "depend on abstractions, not concrete classes"
[13:15:17] <LordKalma> why don't I write python how I write c++?
[13:15:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[13:15:24] <LordKalma> I feel like python invites bodging too much
[13:16:55] <PJBoy> python is my language of choice for "just get shit done"
[13:17:12] <LordKalma> the problem is now I have to get the same shit done
[13:17:17] <LordKalma> *facepalm*
[13:17:22] <PJBoy> which lends to me rationalising crappy hacks to save time in the short term
[13:17:49] <PJBoy> I also blame the lack of types and declarations
[13:17:56] <PJBoy> classes are a lot harder to manage in python IMO
[13:19:01] *** Joins: Mocp (~Mocp@2409:8970:a80:149f:d0e3:f74c:17e6:fd37)
[13:20:43] <LordKalma> I do agree
[13:21:00] <LordKalma> I very oftem find myself wishing for clearer reference semantics or types
[13:21:01] <ville> or you can use c++ in scripting mode to get shit done
[13:21:18] <LordKalma> oh man, c++ "scripts"
[13:21:31] <LordKalma> at work there are some people that say they "know" C++
[13:21:34] <LordKalma> and what C++ that is?
[13:21:40] <LordKalma> a single file with 1000 lines
[13:21:44] <LordKalma> full of copy-pasting the same lines
[13:21:49] <ville> that's fine
[13:26:44] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[13:27:36] <LordKalma> honestly, one of them was using FFFTW on Visual Studio. I'm even surprised he managed to manage the include paths hahaha
[13:28:41] *** Joins: Gaboradon_ (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[13:29:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:31:45] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[13:31:50] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Ping timeout: 260 seconds)
[13:32:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[13:33:54] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[13:38:31] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:38:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:38:39] *** ChanServ sets mode: +v npaperbot
[13:38:50] <Haohmaru> !fact
[13:38:51] <nolyc> Haohmaru: A wide-character literal has type wchar_t.
[13:39:10] <LordKalma> sounds legit
[13:39:13] <LordKalma> !rq
[13:39:14] <nolyc> LordKalma: <LordKalma> Yeah, Herb daddy of course
[13:39:18] <LordKalma> hahahahaha
[13:40:03] <Haohmaru> LordKalma remember: no presents for the naughty kids
[13:41:11] *** Quits: givemeyourpies (givemeyour@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:45:18] *** Quits: Gaboradon_ (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[13:46:51] *** Joins: canxiu (uid524910@id-524910.helmsley.irccloud.com)
[13:51:59] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[13:56:43] *** Joins: gargus (~user@124.171.34.222)
[13:59:21] <PJBoy> 1000 lines doesn't sound too excessive to me
[13:59:54] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:00:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:00:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:00:52] *** Joins: paul424 (~tom@ip-37-248-158-143.multi.internet.cyfrowypolsat.pl)
[14:03:07] <Haohmaru> my silly CLI tool's main .cpp is 4.5k lines
[14:03:19] *** Quits: Mocp (~Mocp@2409:8970:a80:149f:d0e3:f74c:17e6:fd37) (Read error: Connection reset by peer)
[14:03:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:12:53] <ville> loc is a silly metric for lot of things. which is unfortunate because it's a really easy thing to measure
[14:13:11] <Haohmaru> yeah
[14:14:01] <Haohmaru> i think my IDE here can fit like.. what was it.. 170-ish lines of code on one screen
[14:14:04] <Haohmaru> so i'm fine
[14:14:06] <PJBoy> what you really want is ratio of total file size of all C++ files vs total file size of all build system files
[14:14:46] <Haohmaru> 168 actually, just checked
[14:15:13] <Haohmaru> PJBoy yeah, 40% C++, 60% CMake
[14:15:17] <Haohmaru> x_x
[14:15:49] <Haohmaru> (no, not mine, i don't use cmake)
[14:16:17] <Haohmaru> soon you'll need cmake debuggers
[14:16:36] <Haohmaru> or whatever build-system you're using
[14:17:10] <PJBoy> maybe one day
[14:17:18] <Haohmaru> <soon.jpg>
[14:17:36] <PJBoy> VS Code has some intellisense for cmake
[14:17:43] <PJBoy> I haven't used it, but that's something
[14:32:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[14:35:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:36:25] <ville> Haohmaru: perhaps you haven't been reading but that's my claim: you want a debugger for your build system
[14:37:01] <ville> unfortunately build system authors seem to be more focused on making the hello world-level examples look great
[14:41:42] *** Joins: Simplar (~quassel@188.163.92.225)
[14:43:30] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:47:50] *** Joins: cart_man (~rynot@109-170-197-185.xdsl.murphx.net)
[14:48:31] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:49:25] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[14:53:52] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[14:54:14] *** Joins: Cienisty (Cienisty@user/cienisty)
[15:03:40] <very_sneaky> LordKalma: do you use c++ at work?
[15:05:03] <LordKalma> no
[15:06:09] <cart_man> pulse: Yo
[15:08:31] <very_sneaky> i just remembered that you were an academic
[15:08:56] <very_sneaky> was going to ask if you were using conan at work or just for fun, but i guess just fun :P
[15:09:18] <PJBoy> if all goes well, we might start using conan at work
[15:09:20] <PJBoy> maybe next year
[15:11:48] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[15:13:09] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:13:49] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[15:15:24] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of pixelated gnomes at https://indiedevs.net/)
[15:15:27] *** Quits: proller (~p@2a02:6b8:b081:8832::1:1b) (Ping timeout: 264 seconds)
[15:15:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[15:16:30] <very_sneaky> oh awesome. will be keen to hear how your rollout goes
[15:16:44] <very_sneaky> we're just in the process of onboarding a contractor to help us do it
[15:22:26] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[15:26:19] <cart_man> So I have a DEQUE that is 200 large. I have two threads that each work with the same DEQUEs elements from 0 - 99 and from 100 - 199 respectively. They will never be growing or deleting any of the elements. NOW in my main Thread I Resize this DEQUE while these two threads are busy. Do I have to MUTEX it on Resize or will the impact not be noted by the lements the two threads are using?
[15:26:25] *** Quits: paul424 (~tom@ip-37-248-158-143.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:26:54] <smallvil_> sounds a bit like a writer/reader
[15:27:16] <cart_man> Sorry I forgot to mention that the resize will always be larger and never smaller
[15:27:20] <ashafq> https://github.com/vineetjohn/daily-coding-problem note to self to not to post Hackerrank/Leetcode challenges on Github
[15:27:21] <cart_man> smallvil_: a reader?
[15:27:42] <ashafq> But if that's the code I wrote, shouldn't I own it?
[15:27:47] <PJBoy> wtf
[15:27:48] <smallvil_> cart_man: it depends on HOW/IF the resize modifies any existing data
[15:27:55] <PJBoy> yeah that doesn't make any sense
[15:28:35] <ashafq> PJBoy: He had a lot of coding problem challenges solved with really good explanations and I was using that as a guide.
[15:28:40] <PJBoy> > The Question published on this URL is a property of HackerRank
[15:28:46] <smallvil_> IF a resize causes references to deque elements to become invalid then it would also cause the threads to work with invalid data
[15:29:19] <ashafq> PJBoy: Perhaps if he just posted the answers and linked the questions, that would've worked.
[15:29:29] <PJBoy> mm
[15:29:39] <smallvil_> otherwise, assuming the resize does not invalidate, and is only extending the data, then you should not need a mutex since the data itself does not get touched by the resize
[15:30:03] <smallvil_> (or rather the elements do not get touched)
[15:30:25] <PJBoy> it's still scummy as fuck
[15:31:29] <PJBoy> cart_man, I reckon you need a mutex, yeah
[15:32:03] <ashafq> PJBoy: Copyright laws across countries is scummy in general
[15:32:11] <PJBoy> the vector embedded in the deque might need reallocating
[15:32:12] <smallvil_> but it depends on the container and it's specific's, i think for some a resize will cause references and iterators to become invalid
[15:32:57] <smallvil_> (for example to resize a container might simply allocate new memory, move all data to that new memory, and then delete the old memory)
[15:33:04] <PJBoy> deque resize invalidates all iterators
[15:33:41] <PJBoy> (and but all references are still valid)
[15:38:19] *** Quits: r-g (~r-g@51.158.144.32) (Read error: Connection reset by peer)
[15:38:49] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:38:51] *** Quits: CoderCharmander (~CoderChar@2A0011100229C52E0000005903EFEA01.mobile.pool.telekom.hu) (Ping timeout: 264 seconds)
[15:39:55] <TinoDidriksen> geordi --version
[15:39:58] <geordi> GCC 12.0.0 20211109 (experimental)
[15:43:14] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 268 seconds)
[15:45:08] *** Joins: meicceli (meicceli@kapsi.fi)
[15:47:32] <PJBoy> { constexpr string s("constant expression"); }
[15:47:33] <geordi> error: the type 'const string' {aka 'const string'} of 'constexpr' variable 's' is not literal
[15:47:53] <PJBoy> wow cppreference is a liar
[15:51:51] <PJBoy> { constexpr vector<int> x{1, 4, 9, 88}; }
[15:51:51] <geordi> error: the type 'const vector<int>' of 'constexpr' variable 'x' is not literal
[15:52:26] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 245 seconds)
[15:52:26] <PJBoy> { constexpr vector<int> x; }
[15:52:27] <geordi> Same error.
[15:52:34] <PJBoy> that example actually does work on godbolt
[15:52:55] <PJBoy> https://gcc.godbolt.org/z/b8vex7GoP
[15:55:28] *** Joins: meicceli (meicceli@kapsi.fi)
[15:56:30] *** Quits: canxiu (uid524910@id-524910.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:01:48] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[16:03:59] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[16:04:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9c8e:a51b:7850:c853)
[16:04:57] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9c8e:a51b:7850:c853) (Changing host)
[16:04:57] *** Joins: skapata (~Skapata@user/skapata)
[16:05:07] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:09] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:08:21] *** Joins: proller (~p@93.158.190.191)
[16:12:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:14:20] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Remote host closed the connection)
[16:15:27] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 264 seconds)
[16:18:07] <cart_man> PJBoy: But why? If the elemnts will just grow and some of then meta of the DEQUE might change?
[16:18:37] <PJBoy> deque is a vector of pointers to data blocks
[16:19:05] <PJBoy> and if that vector resize invalidates vector iterators, causing deque iterators to be invalidated
[16:19:12] <PJBoy> -if
[16:19:50] <PJBoy> so if you didn't require a new data block to be made and for the vector to be resized, then it *might* work without a mutex
[16:20:00] <PJBoy> but formally deque resize invalidates all iterators unconditionally
[16:28:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:31:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:33:40] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:34:03] <LordKalma> never trust on "if"s
[16:34:14] <LordKalma> and "maybe"s of course
[16:39:04] <TinoDidriksen> geordi --version
[16:39:06] <geordi> GCC 12.0.0 20211124 (experimental)
[16:39:44] <Haohmaru> << "i'm still hot from the oven";
[16:39:45] <geordi> i'm still hot from the oven
[16:46:23] *** Quits: cart_man (~rynot@109-170-197-185.xdsl.murphx.net) (Quit: Konversation terminated!)
[16:51:16] <LordKalma> { constexpr string s("constant expression"); }
[16:51:16] <geordi> error: 'string(((const char*)"constant expression"), allocator<char>())' is not a constant expression because it refers to a result of 'operator new'
[16:51:27] <LordKalma> different error...
[16:51:28] <LordKalma> interesting
[16:51:42] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[16:51:48] <LordKalma> PJBoy, you figure that out
[16:54:17] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[16:54:53] *** Quits: gargus (~user@124.171.34.222) (Quit: Leaving)
[17:08:22] *** Quits: Simplar (~quassel@188.163.92.225) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:17:54] *** Quits: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (Quit: ZNC 1.8.2 - https://znc.in)
[17:18:05] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[17:35:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[17:38:31] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:38:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:38:39] *** ChanServ sets mode: +v npaperbot
[17:41:47] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[17:44:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[17:44:31] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[17:49:21] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:56:25] *** Joins: CoderCharmander (~CoderChar@2A0011100204FBC8000000144A2C8301.mobile.pool.telekom.hu)
[17:59:10] *** Joins: reumeth (~reumeth@user/reumeth)
[18:00:04] <Haohmaru> ville i haven't been reading.. my brain glitches on *make* conversations
[18:02:16] *** Joins: Atlas667 (~Atlas667@94.198.42.62)
[18:04:10] *** Joins: jkaye (~jkaye@2601:281:8300:7530:1d7b:c50:11c3:7017)
[18:12:04] <Haohmaru> but i've been seeing too much *make* related issues being troubleshooted here
[18:12:23] <Haohmaru> !cmake
[18:12:24] <nolyc> Haohmaru: Error: "cmake" is not a valid command.
[18:13:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:14:42] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[18:15:33] <LordKalma> what? you mean that `readme.cc.example : % : %.o ${ARCHIVE_LIB} ${CXX} ${CXXFLAGS} ${LDFLAGS} $^ -o $@ ${LIBS}` is unreadable gibberish?
[18:16:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[18:16:31] <mort> make is much more readable than cmake imo
[18:16:33] <mort> well
[18:16:39] <mort> cmake's generated make is unreadable
[18:16:47] <mort> make generated by a human is very readable
[18:16:54] <LordKalma> you're not supposed to read cmake's generated make anyway
[18:17:16] <mort> sure
[18:19:16] * Haohmaru glitches
[18:19:52] <Haohmaru> !rq
[18:19:53] <nolyc> Haohmaru: <LordKalma> maybe you wanted to say "don't mind me in your asshole"
[18:21:01] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[18:23:35] *** Quits: CoderCharmander (~CoderChar@2A0011100204FBC8000000144A2C8301.mobile.pool.telekom.hu) (Ping timeout: 268 seconds)
[18:42:10] *** Quits: syrius (~syrius@titan.stormtek.net) (Ping timeout: 256 seconds)
[18:43:19] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[18:43:27] *** Joins: magla (~gelignite@55d4df7d.access.ecotel.net)
[18:45:49] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:11a:590c:243f:8c20)
[18:46:49] <ashafq> !rq
[18:46:50] <nolyc> ashafq: <PJBoy> aka 0DR violatio :D
[18:47:17] <ashafq> interesting bot
[18:49:48] <LordKalma> it's things we said
[18:50:21] <Haohmaru> !fact
[18:50:23] <nolyc> Haohmaru: Both recursive and non-recursive mutexes are supplied.
[18:50:36] <LordKalma> whats a recursive mutex?
[18:50:55] <Haohmaru> a mutexexexexexexexexexex
[18:50:58] <ashafq> A mutex that calls itself?
[18:50:59] <CarloWood> A mutex that the same thread may lock recursively
[18:51:32] <LordKalma> https://en.cppreference.com/w/cpp/thread/recursive_mutex
[18:51:37] <LordKalma> fun1(); // recursive lock becomes useful here
[18:51:47] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:52:16] <CarloWood> If thread A locks std::mutex, and then B tries to lock it, B blocks.  But if A tries to lock the same mutex again while already having it locked - the behavior is UB.
[18:52:41] <CarloWood> If you use a recursive lock then A can do lock lock lock unlock unlock unlock now B can lock it
[18:53:02] <LordKalma> interesting
[18:53:16] <Haohmaru> <fascinating.gif>
[18:53:33] <rpav> recursive mutexes are more useful than not ime
[18:53:52] <Haohmaru> basically like a mutex which allows nested usage
[18:54:20] <LordKalma> yea it does sound useful
[18:54:20] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[18:54:31] <ashafq> I don't recall if I have asked this before. Is there a tree/graph visualizer on the terminal?
[18:54:32] <rpav> yeah imagine utilA() { /* needs to lock X */ .. utilB(); .. }  utilB() { /* needs to lock X too */ ... }
[18:54:32] <LordKalma> and makes you wonder if that shouldn't have been the default behaviour
[18:54:44] <CarloWood> They are slightly slower, so I wouldn't use them when not necessary.
[18:54:53] <rpav> i think they're slightly slower but i haven't measured
[18:55:19] <Haohmaru> well the normal mutex probably uses a bool thing, while the recursive one smells like a whole counter
[18:55:53] <rpav> you need to check if the current thread is the current lockholder
[18:56:13] <CarloWood> rpav: I use my threadsafe library for that: create an accessor object (the creation of which gives you access but also locks the mutex), and then pass that accessor to utilA and utilB.
[18:57:07] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[18:57:08] <rpav> CarloWood: that's one approach but it sounds like a tossup between headache and not a general solution
[18:57:20] <CarloWood> https://github.com/CarloWood/ai-threadsafe#readme
[18:57:27] <CarloWood> I can't live without it anymore.
[18:58:21] <Haohmaru> mmm, AI
[19:00:17] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Quit: WeeChat 3.3)
[19:02:42] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Ping timeout: 265 seconds)
[19:03:34] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[19:03:49] *** Joins: syrius (syrius@titan.stormtek.net)
[19:15:49] *** Joins: chozorho (~chozorho@2601:146:300:c30::7991)
[19:21:41] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[19:23:43] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[19:35:47] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[19:35:56] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[19:38:41] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 245 seconds)
[19:39:11] <PJBoy> LordKalma, presumably the update allowed more of constexpr string to work
[19:39:29] <PJBoy> and now it fails because it calls operator new instead of std::allocator<T>::allocate
[19:39:51] <PJBoy> which is uh
[19:39:55] <PJBoy> non-conforming >_>
[19:40:15] <PJBoy> but I guess works out by the as-if rule
[19:40:32] <PJBoy> ...prior to C++20
[19:45:08] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[19:50:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:11a:590c:243f:8c20) (Read error: Connection reset by peer)
[19:59:21] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:03:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[20:03:59] *** Quits: magla (~gelignite@55d4df7d.access.ecotel.net) (Quit: Stay safe!)
[20:04:43] *** Joins: great_taste (~great_tas@190.32.235.20)
[20:09:17] <yolo> not a CS major, but why golang syntax is so different? everything reversed, for easier parsing? it's like i need swap my left brain with right brain
[20:10:21] * yolo checked aithread and realize it has nothing to do with ai
[20:11:15] <mort> my understanding is that it's easier to parse when the type is on the right rather than the left yes
[20:11:42] <CarloWood> yolo: unless you know that Aleric Inglewood is secretly an A.I.
[20:11:44] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[20:12:14] <PJBoy> because the golang people are insane hipsters
[20:12:19] <rpav> yolo: a lot of languages are a lot different; don't assume C++ is "normal"
[20:12:28] <rpav> learn enough you recognize them all
[20:12:35] <mort> C++ has the type all around the name, that's very weird I think
[20:12:51] <PJBoy> reversing the order of stuff obviously doesn't help parsing
[20:12:59] <mort> it can
[20:13:12] <PJBoy> if it did then you'd just do a pass of reversing the order of things
[20:13:16] <PJBoy> and it'd be equivalent
[20:13:17] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[20:13:53] <rpav> PJBoy: don't be so sure; that's not exactly how parsing works anyway
[20:14:03] <PJBoy> it's incredibly obvious to me
[20:14:06] <mort> the name is one token, the type is unbounded, starting with the one identifier token and then reading an unbounded number is easier than reading an unbounded number of tokens and then somehow figuring out when you're looking at the last token of the declaration
[20:14:36] <rpav> PJBoy: it's part of MVP, so your "incredibly obvious" is not particularly correct ;)
[20:14:45] <PJBoy> what's part of MVP?
[20:14:53] <Svitkona> minimum viable product?
[20:14:53] <rpav> left-hand type
[20:14:59] <Svitkona> :)
[20:15:04] <PJBoy> and yeah what's MVP?
[20:15:17] <PJBoy> most vertical primate >_>
[20:15:17] <rpav> e.g. with user-defined types, something can't be parsed without context; with right-hand types it can
[20:15:24] <rpav> err this is #c++-something right
[20:15:33] <rpav> https://en.wikipedia.org/wiki/Most_vexing_parse
[20:15:42] <PJBoy> oh that
[20:15:47] <PJBoy> that's irrelevant
[20:15:47] <mort> I'm sure you could come up with grammars for left-handed types which are easy to parse but starting with the bounded thing is usually easier than starting with the unbounded thing
[20:15:54] <rpav> it is definitely not
[20:15:56] <PJBoy> that's just C++ allowing function declarations in block scope
[20:16:00] <PJBoy> which is dumb
[20:16:22] <PJBoy> you could allow function declarations in local scope in golang and it would be just as dumb
[20:16:23] <rpav> e.g. `var x = T();` would never be ambiguous vs `T x();` being any number of things
[20:16:49] <rpav> this is _parsing_ ambiguity, e.g. a context-free parser can't parse C++ because of this
[20:17:05] <PJBoy> `var x = T();` could be assigning a function declaration to x
[20:17:09] <PJBoy> it wouldn't compile, but it would parse
[20:17:14] <rpav> you cannot tokenize and determine without context what each token is
[20:17:19] <yolo> the parser should work for brain not the computer IMO
[20:17:21] <mort> C++ is hard to parse for lots of stupid reasons, most of which don't have to do with types being on the left side; but yes, deciding what's a type and what's an identifier is a special problem for C++ (and C)
[20:17:35] <yolo> that's the key, we put the noun at the last, so should be the parser
[20:17:53] <PJBoy> I dunno about that
[20:18:00] <rpav> PJBoy: it would not, as a function declaration is unlikely to be a first-class object :p
[20:18:01] <PJBoy> natural language has all sorts of random orders
[20:18:13] <yolo> programming language should be designed for human brain(the way we used to talk and write), the parser converted them to machine lang
[20:18:14] <mort> you honestly get used to go's right-handed types very quickly
[20:18:23] <PJBoy> yeah I'm sure
[20:18:32] <PJBoy> but it sure does seem like they do everything different just to be different
[20:18:52] <mort> I'm still not used to C/C++'s types and I've been programming in those languages as my main languages for a decade
[20:18:57] <rpav> "it's different and therefore bad and thus they're just being contrarians!"
[20:19:06] <PJBoy> I'm not saying C++ is a model example of grammer
[20:19:11] <PJBoy> but C# is pretty sensible
[20:19:26] <PJBoy> and it sure doesn't take any noticeable amount of time to compile
[20:19:35] <rpav> maybe learn/use more non-algol-family languages heh
[20:19:37] <mort> *foo[5], is that an array of pointers or a pointer to an array
[20:20:00] <PJBoy> it's an expression that dereferences element 5 of foo
[20:20:18] <Haohmaru> Modern Vaccination Program
[20:21:17] <mort> not if it's preceded with an identifier which happens to refer to a type, then it's a variable declaration
[20:21:19] <PJBoy> if you had a `T *foo[5];`, then decltype(foo) would be a type such that `*foo[5]` results in a T
[20:21:57] <PJBoy> the rules aren't great, but that's a neat property IMO
[20:22:03] <mort> that doesn't help in this case, does it dereference first or index first
[20:22:12] <PJBoy> indexes first
[20:22:20] <mort> it's a rhetorical question
[20:22:24] <PJBoy> suffix operators take precedence over prefix operators in any sane grammar
[20:22:42] <mort> the syntax doesn't make it clear is my point
[20:22:53] <PJBoy> I think it's clear
[20:22:59] <PJBoy> based on the reason I just gave
[20:23:12] <mort> ok
[20:23:26] *** Joins: markong (~kvirc@213.146.188.203)
[20:24:02] <rpav> x = a + - b; # `(a+) - b`
[20:24:08] <mort> but you acknowledge that there are no visual cues which tell you whether it's a pointer to array or array of pointer, you just have to know arbitrary rules
[20:24:30] <PJBoy> sure
[20:24:42] <InPhase> mort: There's a list though, which is required familiarity.  https://en.cppreference.com/w/cpp/language/operator_precedence
[20:24:50] *** Joins: TheSchaf (~TheSchaf@pd95f12cf.dip0.t-ipconnect.de)
[20:25:00] <PJBoy> and there are cases of C++ having very unintuitive operators
[20:25:03] <InPhase> mort: One can usually throw in gratuitous parentheses to make it clearer.
[20:25:04] <PJBoy> like member access
[20:25:24] <PJBoy> and bitwise operations being below comparison
[20:25:28] <PJBoy> that shit is garbage
[20:25:59] <InPhase> Just as long as the gratuitous parentheses don't also go around the *...  Then things get weird.
[20:26:12] <InPhase> But, thanks C.
[20:26:17] <rpav> everything should be left-to-right
[20:26:21] <PJBoy> that said I am extremely used to C++, so it's hard to imagine finding it difficult to read
[20:26:56] <rpav> `a OP (expr ...)` for every binary operator
[20:26:59] <InPhase> PJBoy: I'm pretty used to it, but I'll stipulate that's quite a lot of symbolic rules to remember.
[20:27:07] <LordKalma> we should make a programming language that uses exclusively reverse Polish
[20:27:10] <LordKalma> and bam, no problems ever
[20:27:26] <rpav> LordKalma: man stack languages are hell to read ;/
[20:27:26] <PJBoy> I'm still not sure what problem reverse polish solves
[20:27:30] <LordKalma> rpav, for sure
[20:27:31] <LordKalma> hahha
[20:27:37] <rpav> PJBoy: typing things in
[20:27:39] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:27:42] <LordKalma> PJBoy, it requires no parenthesis
[20:27:55] <LordKalma> and if you were an accountant it would be great to help you
[20:27:58] <LordKalma> for example
[20:28:02] <PJBoy> you could just define infix notation as not having operator precedence
[20:28:04] <rpav> it's really easy to do fairly complex multi-step calculations with RPN without thinking hard about precedence or parens
[20:28:05] <PJBoy> and it would be the same
[20:28:11] <rpav> but reading stack code is hard
[20:28:19] <LordKalma> (/*complicated expression */)/(/*complicated expression */) is super easy on a stack calculator
[20:28:24] <rpav> ^
[20:28:25] <LordKalma> because you can just do both calculations
[20:28:27] <LordKalma> and press / in the end
[20:28:50] <LordKalma> you dont need to save the intermediate value, as you're need on a regular calculator
[20:29:01] <rpav> your brain is sortof stack-oriented in terms of tasks, so if it's like (1 + (some thing) + (some other stuff)) it's easy to type 1, stuf...., stuff..., + +
[20:29:03] <InPhase> rpav: The disassociation of related entities grows quite intense with RPN.
[20:29:08] <Haohmaru> LordKalma i split that sorta stuff into variables then i just a/b
[20:29:20] <LordKalma> Haohmaru, we're talking about real calculators
[20:29:26] <PJBoy> I don't see how reverse polish helps there
[20:29:29] <Haohmaru> who even uses them
[20:29:33] <Haohmaru> ;P~
[20:29:36] <LordKalma> accountants
[20:29:38] <PJBoy> surely you do need to memorise one of those complicated expressions
[20:29:45] <LordKalma> https://www.science20.com/view_from_the_north/blog/nothing_like_the_hp_rpn_calculators-155485
[20:29:48] <rpav> PJBoy: brain less, test more
[20:30:08] <LordKalma> "For such simple calculations the number of key presses is the same as for any other calculator, but for more complex calculations is is very logical and much simpler. "
[20:30:22] <PJBoy> :/
[20:30:25] *** Joins: paule32_ (~paule32@user/paule32)
[20:30:52] <LordKalma> computerphile has an amazing video on Reverse Polish
[20:31:00] <LordKalma> by that amazingl story teller old professor
[20:31:00] <rpav> plus if it's like, "hey let's ad 1 2 3 57 92" you can just type "1 2 3 57 92", see you got all the things, then mash + ;)
[20:31:04] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:cc05:21b:7372:bbf5)
[20:31:05] <rpav> lots of practical little things really
[20:31:07] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:cc05:21b:7372:bbf5) (Client Quit)
[20:31:18] <PJBoy> so you actually have to memorise a lot more than infix calculation
[20:31:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:cc05:21b:7372:bbf5)
[20:31:25] <rpav> you don't memorize anything
[20:31:31] <rpav> the stack is your "memory"
[20:31:33] <PJBoy> you need to memorise all those numbers
[20:31:40] <rpav> err no
[20:31:41] <PJBoy> "you" being the calculator
[20:31:46] <rpav> you type them linearly
[20:31:47] <LordKalma> yes
[20:32:02] <LordKalma> but the point is the example (/*complicated expression */)/(/*complicated expression */)
[20:32:13] <InPhase> T *foo[] to RPN...?   foo [] * ...?    or T * [] foo assign  ?
[20:32:16] <rpav> you only ever need be concerned with the top of the stack really, but you can always review it as necessary
[20:32:17] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:32:30] <InPhase> I don't know how you'd even do type declarations like that with RPN cleanly.
[20:32:46] <LordKalma> (/*complicated expression */)/(/*complicated expression */)  // YOu'd need to store the numerator and the denominator in a regular calculator
[20:32:54] <LordKalma> while a stack calculator you can just start typing
[20:33:04] <LordKalma> and in the end you'd have numerator and denominator in the stack
[20:33:16] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 245 seconds)
[20:33:17] <LordKalma> it's the type of stuff stack calculators are reat
[20:33:30] <PJBoy> `T* foo[]` is equivalent to `add_array_t<add_pointer_t<T>>` right?
[20:33:43] <PJBoy> so RPN version would be `T add_pointer_t add_array_t;`
[20:33:48] <rpav> InPhase: well RPN is simplified, RPL is like "full language," but .. really seriously, avoid stack _programming_ languages
[20:33:50] <PJBoy> possibly with some gluing tokens
[20:34:12] <Haohmaru> gluokens
[20:34:17] <LordKalma> yeah don't program with a stack programming language
[20:34:22] <LordKalma> it's just useful for accountants
[20:34:25] <LordKalma> that's all we're saying
[20:34:31] <rpav> well, maybe try out forth and postscript
[20:34:31] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[20:34:43] <rpav> i've written a fair chunk of actual PS by hand, it was useful for a thing, but
[20:34:44] <rpav> eugh
[20:34:50] <LordKalma> I'm not programming a printer
[20:34:51] <LordKalma> hjahah
[20:34:59] <PJBoy> idk man
[20:35:03] <LordKalma> my supervisor has done PS programming to program integrated circuits
[20:35:09] <LordKalma> you'd draw them in PS directly
[20:35:15] <PJBoy> I feel like accountants would benefit a lot more from having a python repl open :p
[20:35:21] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[20:35:26] <PJBoy> named variables > nameless stack
[20:35:39] <LordKalma> PJBoy, well, we're talking about old calculators hahaha
[20:36:20] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[20:36:43] *** Joins: Neal__ (~nshire@47.146.41.156)
[20:36:51] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[20:36:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:36:58] *** Joins: gehn1 (~gehn@user/gehn)
[20:37:13] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:37:25] *** Joins: RandomRead3r (~RandomRea@user/randomreader)
[20:37:39] *** Joins: Tokamak_ (~Tokamak@172.58.191.55)
[20:38:24] *** Joins: wille5 (~wille@static.140.85.76.144.clients.your-server.de)
[20:38:30] *** Joins: flynn6 (~mcbloch@user/flynn)
[20:38:56] <PJBoy> [17:05]	PJBoy	yeah maybe there was an era of time where that was the optimal method
[20:39:01] <PJBoy> I can accept that
[20:39:01] *** Quits: Tokamak_ (~Tokamak@172.58.191.55) (Read error: Connection reset by peer)
[20:39:14] *** Joins: X-Scale` (~ARM@92.250.97.112)
[20:39:14] <LordKalma> good
[20:39:18] *** Joins: kapil_ (~kapil@2a01:4f9:c010:c9c3::1)
[20:39:47] *** Joins: AmR| (~AmREiSa@102.47.62.197)
[20:40:09] <Haohmaru> <dinosaur_epoch.jpg>
[20:40:28] *** Joins: mvo (~kvirc@213.146.188.203)
[20:40:35] *** Joins: Tokamak_ (~Tokamak@172.58.191.55)
[20:41:05] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:41:12] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:41:16] *** Joins: zagura__ (~zagura@user/zagura)
[20:41:23] *** Joins: baltazaar (~baltazar@91-82-172-24.pool.digikabel.hu)
[20:41:30] *** Joins: naur___ (naur@user/naur)
[20:41:38] *** Joins: syrius_ (syrius@titan.stormtek.net)
[20:41:45] *** Joins: pepperon1 (~pepperoni@gateway/vpn/pia/pepperoni)
[20:42:03] *** Joins: ville_ (~ville@178-75-128-81.bb.dnainternet.fi)
[20:42:06] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[20:42:07] *** Joins: hfsoulz_ (~hfsoulz@user/hfsoulz)
[20:42:10] *** Joins: imMute^ (~immute@user/immute)
[20:42:14] *** Joins: prime- (~prime@user/prime)
[20:42:19] <InPhase> PJBoy: Right, so the second one then.  I don't like the assign part of T pointer array foo assign, but T pointer array in RPN for this example is actually a lot easier to read naturally than T *foo[].  So I guess I'll give RPN one credit for type declarations.
[20:43:08] <InPhase> Probably there are other examples where it becomes a disaster.
[20:43:12] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:43:15] <PJBoy> I think C++ syntax for pointers and arrays is insane
[20:43:29] *** Quits: imMute (~immute@user/immute) (Killed (NickServ (GHOST command used by imMute^)))
[20:43:30] <PJBoy> but not to the point where I agree with polish notation
[20:43:33] *** imMute^ is now known as imMute
[20:44:24] <PJBoy> `array of pointer of T` or `array<pointer<T>>` work for me
[20:44:58] <rpav> C should have never used ->
[20:45:16] <PJBoy> golang would have me write `T of which pointer of which array` or something
[20:45:16] <TinoDidriksen> What else should it have been?
[20:45:20] <rpav> .
[20:45:30] <TinoDidriksen> But . has other meaning.
[20:45:31] <rpav> it is never ambiguous in C whether something is a dereference or value
[20:45:54] <rpav> _likely_ it was for simplified/naive parsing, but
[20:46:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:46:43] *** Quits: markong (~kvirc@213.146.188.203) (*.net *.split)
[20:46:43] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (*.net *.split)
[20:46:43] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[20:46:43] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[20:46:43] *** Quits: vinleod (~vdamewood@fedora/vdamewood) (*.net *.split)
[20:46:43] *** Quits: jkaye (~jkaye@2601:281:8300:7530:1d7b:c50:11c3:7017) (*.net *.split)
[20:46:43] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[20:46:43] *** Quits: prime (~prime@user/prime) (*.net *.split)
[20:46:43] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:4de4:2055:b8c4:f1e) (*.net *.split)
[20:46:43] *** Quits: gehn (~gehn@user/gehn) (*.net *.split)
[20:46:44] *** Quits: AmR (~AmREiSa@102.47.62.197) (*.net *.split)
[20:46:44] *** Quits: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu) (*.net *.split)
[20:46:44] *** Quits: Tokamak (~Tokamak@172.58.191.55) (*.net *.split)
[20:46:44] *** Quits: X-Scale (~ARM@92.250.97.112) (*.net *.split)
[20:46:44] *** Quits: ville (~ville@178-75-128-81.bb.dnainternet.fi) (*.net *.split)
[20:46:44] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[20:46:44] *** Quits: rnsanchez (~rnsanchez@179.233.246.221) (*.net *.split)
[20:46:44] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[20:46:44] *** Quits: nshire_ (~nshire@47.146.41.156) (*.net *.split)
[20:46:44] *** Quits: RandomReader (~RandomRea@user/randomreader) (*.net *.split)
[20:46:44] *** Quits: kapil (~kapil@o-k.website) (*.net *.split)
[20:46:44] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: cq-work (~Z_Lund@user/cq-work) (*.net *.split)
[20:46:44] *** Quits: zagura (~zagura@user/zagura) (*.net *.split)
[20:46:44] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (*.net *.split)
[20:46:44] *** Quits: pepperoni (~pepperoni@gateway/vpn/pia/pepperoni) (*.net *.split)
[20:46:44] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[20:46:44] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[20:46:45] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (*.net *.split)
[20:46:45] *** Quits: HvszrStykp (~X@81.171.62.87) (*.net *.split)
[20:46:45] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[20:46:45] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[20:46:45] *** Quits: naur (naur@user/naur) (*.net *.split)
[20:46:45] <rpav> it's never necessary (_in_ _C_) to have a separate token for doing a struct value lookup vs struct value dereference
[20:46:45] *** baltazaar is now known as baltazar
[20:46:45] *** wille5 is now known as wille
[20:46:45] *** flynn6 is now known as flynn
[20:46:45] *** RandomRead3r is now known as RandomReader
[20:46:58] *** X-Scale` is now known as X-Scale
[20:47:19] <rpav> but now we're stuck with it in C++ .. another example i think of textual parsing biasing language evolution
[20:47:37] <PJBoy> but then operator-> and operator. being different makes sense in C++
[20:47:46] <PJBoy> and operator.* and operator->*
[20:48:24] *** zagura__ is now known as zagura
[20:48:41] <PJBoy> in C though, you're making me wonder
[20:48:47] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[20:49:13] <PJBoy> it gives you some safety
[20:49:26] <rpav> it only makes sense assuming things are the way they are
[20:49:33] <PJBoy> that you expect this value you're operating on to be a pointer rather than a struct
[20:49:45] <rpav> which is circular .. it doesn't actually make sense, you're just saying "i understand the way things are"
[20:50:01] <PJBoy> nah it does make sense in C++
[20:50:18] <PJBoy> unique_ptr().get() and unique_ptr()->get() do different things
[20:50:31] <PJBoy> and it makes sense that they do different things
[20:50:41] <rpav> C++ _could_ have allowed overriding operator., and provided another syntax for method calling
[20:50:58] <PJBoy> being able to overload operator. would just make smart pointers awkward
[20:51:10] <rpav> or some other mechanism that's as-good or better, that would "make sense" just as much (or likely more)
[20:51:29] <PJBoy> you need some mechanism to allow for calling what we currently call unique_ptr().get()
[20:51:45] <rpav> yes if you _retrospectively assume_ things are otherwise equivalent and nothing else would have been different, it would be weird :p
[20:52:21] <PJBoy> what things are equivalent?
[20:52:26] *** Joins: rnsanchez (~rnsanchez@179.233.246.221)
[20:52:26] <rpav> but with some perspective, one can see a better possible model
[20:52:35] *** Joins: jiffe (~jiffe@mail.nsab.us)
[20:52:55] *** Joins: HvszrStykp (~X@81.171.62.87)
[20:52:55] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:52:55] *** Joins: jkaye (~jkaye@2601:281:8300:7530:1d7b:c50:11c3:7017)
[20:52:55] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:4de4:2055:b8c4:f1e)
[20:52:55] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[20:52:55] *** Joins: bjs (sid190364@user/bjs)
[20:52:55] *** Joins: navidr (uid112413@id-112413.uxbridge.irccloud.com)
[20:52:55] *** Joins: jessicara (~shirogits@user/jessicara)
[20:53:00] <PJBoy> if you magic away the problems of . and -> being the same operator, then yeah there's no problem
[20:53:14] <PJBoy> but there are problems with that, and I pointed out one
[20:53:19] <PJBoy> what's your idea for overcoming that?
[20:53:20] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[20:54:10] <PJBoy> could rely on unique_ptr not having any member functions and using exclusively friend functions
[20:54:29] <rpav> like i said for `X x;` there _could still be_ some "specific-object-call" syntax that looks up the member/method on `X` rather than what `X::operator.()` would provide
[20:54:52] <PJBoy> so you'd have a "member access operator"
[20:55:04] <rpav> instead of forcing _all_ access through ->, you could force specific-case access through a lesser-used operator, and we could have nicer toys
[20:56:25] <PJBoy> so you'd have an operator that does overloadable member access, doing dereference if needed in the non overloaded case
[20:56:26] <kalven> call that operator <-
[20:56:34] <rpav> but i mean a lot of better decisions _could_ have been made
[20:56:37] <PJBoy> and an operator that can't be overloaded that does plain member access
[20:56:49] <rpav> my point is more, don't assume the way things are "make sense" more than other possibilities could have
[20:57:08] <PJBoy> yeah I'll agree to that
[20:57:11] <PJBoy> for sure
[20:58:49] <rpav> though tangentially, can one _not_ implement properties using -> .. is the object -> returns lifetime-extended to the statement at least
[21:00:31] *** Joins: xkuru (~xkuru@user/xkuru)
[21:01:39] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[21:03:40] *** Quits: hfsoulz_ (~hfsoulz@user/hfsoulz) (Quit: leaving)
[21:06:55] <PJBoy> also looks like I was mistaken on that constexpr string/vector stuff
[21:07:39] <PJBoy> { constexpr char c = string("123")[0]; }
[21:07:40] <geordi>  
[21:07:42] <PJBoy> is the intended use case
[21:07:51] <PJBoy> { constexpr int x = vector{1, 2, 3}[0]; }
[21:07:51] <geordi> error: call to non-'constexpr' function 'vector<_Tp, _Allocator>::reference vector<_Tp, _Allocator>::operator[](vector<_Tp, _Allocator>::size_type) [with _Tp = int; _Allocator = allocator<int>; vector<_Tp, _Allocator>::reference = int&; vector<_Tp, _Allocator>::size_type = long unsigned int]'
[21:08:00] <PJBoy> pretty sure that one's supposed to work too
[21:08:32] <PJBoy> it does on godbolt
[21:09:06] <PJBoy> I know that geordi uses a non conforming vector though
[21:09:24] <PJBoy> 'cause it doesn't double in size per realloc
[21:09:41] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[21:11:31] <Alipha> As long as the size increases as some factor > 1, then it's amortized O(1) insert
[21:11:49] <PJBoy> it doesn't increase exponentially at all
[21:12:09] <Alipha> Oh
[21:12:15] <Alipha> What does it do?
[21:12:35] <PJBoy> increases the minimum amount needed every time
[21:13:47] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:13:49] <PJBoy> { vector<int> v; for (unsigned i(4); i; --i) v.push_back(i), cout, v.capacity(); }
[21:13:50] <geordi> , 1, 2, 3, 4
[21:14:30] <PJBoy> O(n) push_back every time
[21:14:39] <Alipha> Interesting. I wonder if that's the -D_GLIBCXX_DEBUG behavior
[21:16:06] *** Quits: X-Scale (~ARM@92.250.97.112) (Ping timeout: 265 seconds)
[21:17:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:cc05:21b:7372:bbf5) (Quit: Leaving)
[21:17:32] *** X-Scale` is now known as X-Scale
[21:18:26] *** Joins: magla (~gelignite@55d4df7d.access.ecotel.net)
[21:19:36] *** Quits: proller (~p@93.158.190.191) (Ping timeout: 260 seconds)
[21:25:46] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[21:28:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:29:43] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[21:33:01] *** Quits: mvo (~kvirc@213.146.188.203) (Ping timeout: 265 seconds)
[21:36:20] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:38:32] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:38:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:38:41] *** ChanServ sets mode: +v npaperbot
[21:43:10] *** paule32_ is now known as paule32
[21:43:57] *** Joins: Colt (~Colt@user/colt)
[21:53:09] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Ping timeout (120 seconds))
[21:53:10] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[21:56:46] *** Quits: Tokamak_ (~Tokamak@172.58.191.55) (Read error: Connection reset by peer)
[21:56:58] *** Joins: pac1 (~pac1@pool-72-74-61-158.bstnma.fios.verizon.net)
[21:57:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:58:03] *** Quits: jkaye (~jkaye@2601:281:8300:7530:1d7b:c50:11c3:7017) (Ping timeout: 264 seconds)
[22:02:00] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[22:04:20] *** Quits: gehn1 (~gehn@user/gehn) (Ping timeout: 268 seconds)
[22:05:20] *** Joins: great_taste (~great_tas@190.32.235.20)
[22:07:17] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[22:09:27] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[22:13:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:13:59] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[22:14:25] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[22:15:13] *** Quits: Atlas667 (~Atlas667@94.198.42.62) (Ping timeout: 256 seconds)
[22:16:32] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[22:16:52] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[22:17:17] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[22:23:30] *** Joins: proller (~p@80.240.216.69)
[22:26:36] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[22:26:54] *** syrius_ is now known as syrius
[22:27:10] *** Joins: X-Scale` (~ARM@31.22.167.95)
[22:27:41] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[22:29:15] *** X-Scale` is now known as X-Scale
[22:30:27] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[22:33:29] *** Joins: Colt1 (~Colt@user/colt)
[22:33:42] *** Quits: Colt1 (~Colt@user/colt) (Remote host closed the connection)
[22:39:43] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[22:39:54] *** ville_ is now known as ville
[22:58:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:00:07] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:00:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:01:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:03:09] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:08:31] <yolo> https://www.backblaze.com/blog/10-rules-for-how-to-write-cross-platform-code/
[23:09:07] <yolo> looks like I don't need go/rust's one build for all platforms after all, this gives me confidence to just use c/c++ for cross-platform
[23:11:20] <SuperNintendoSUX> C++ only. not C
[23:12:02] <yolo> thought macos/windows/linux can also do posix c just fine? maybe it's just ansi-c
[23:12:35] <comrad> windows does not posix, at least not without mingw
[23:12:56] <SuperNintendoSUX> isn't the new windows with a "linux layer" ?
[23:13:15] <yolo> good question, never played with WSL myself yet
[23:13:20] <comrad> yeah, but programming-wise not
[23:13:31] <yolo> looks like a docker container running linux side for windows to invoke to me
[23:14:14] <yolo> but you have many are still using windows7/8, WSL is only win10/11
[23:15:09] <hnOsmium0001[m]> nobody stops you from writing a linux version and claims to have windows support through WSL, just like nobody stops you from writing a windows version and claims to have linux support through wine: it's not a good idea
[23:15:17] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[23:15:26] <hnOsmium0001[m]> *most likely
[23:16:43] <yolo> while on the start of writing a cross-platform c++, I can install macos to virtualbox but I could not find a free windows 10/11 for virtualbox, so I can test win/macos in parallel, my machines are all on linux(for years)
[23:17:15] <yolo> maybe I can buy those $10 license of windows10 from ebay, never tried that, should be fine
[23:17:44] <comrad> we defined some set of operating system functions which we abstracted for each plattform
[23:18:01] <TinoDidriksen> Microsoft provides virtual machine images for development and testing.
[23:18:26] <yolo> TinoDidriksen: they expire, plus they're really gigantic(around 20-30GB?)
[23:18:50] <TinoDidriksen> Indeed
[23:19:47] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:20:10] <sonOfRa> Hard drive space is cheap! (probably cheaper than a windows license :P)
[23:20:23] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:21:00] <yolo> junkie food is cheap does not mean getting-fat is good :)
[23:22:44] *** Joins: plastico (~plastico@neomutt/plastico)
[23:22:57] *** Joins: luizfrds (~Luiz@152.250.243.147)
[23:23:42] <hnOsmium0001[m]> does win10 no longer work without activation?
[23:24:02] <yolo> i believe the answer is no, free lunch is over
[23:24:19] <yolo> i might be wrong though, as I don't really use it
[23:24:24] <hnOsmium0001[m]> I used to have a win10 VM that's not activated, and the only thing I can't do is "Personalization" aka set desktop wallpaper
[23:24:31] <hnOsmium0001[m]> and it just has a watermark, everything else works fine
[23:24:48] <yolo> trying to buy a mac for macos dev, mac-proc starting from $6000?
[23:25:10] <hnOsmium0001[m]> you usually want a mac mini
[23:25:30] <hnOsmium0001[m]> mac pros are designed more for creative profressionals, for the PCIe expansion capability
[23:25:41] <LordKalma> the m1 is a cool machine for on the go development
[23:25:47] <LordKalma> and you get Mac AND ARM for testing :D
[23:25:59] <yolo> i c, mac-mini has 8GB 'unified memory', what a pity, android build requires 16GB minimum
[23:26:23] <yolo> can I replace mac-mini's ddr and hard-drive, or is apple locking everything down, which will not surprise anyone
[23:26:47] <hnOsmium0001[m]> you can't
[23:27:21] <PJBoy> I'd advise mac in cloud before buying a mac mini
[23:27:39] <PJBoy> https://www.macincloud.com
[23:27:43] <PJBoy> or one of its competitors
[23:27:50] <yolo> aws does have mac instances, does it have gui, let me check
[23:27:51] <Alipha> yolo: swap space doesn't work?
[23:28:19] <LordKalma> even github's free CI has mac
[23:28:30] <LordKalma> it's nice at least for building and packaging
[23:28:33] <LordKalma> without the machine
[23:28:47] *** Joins: proller (~p@80.240.216.69)
[23:29:04] <yolo> wow macclould looks great, thanks!
[23:29:16] <hnOsmium0001[m]> I wasn't able to find any news that win10 no longer works without activiation, yolo maybe you were thinking of win11
[23:29:19] <yolo> all  I need is an ide + build tool while I develop on linux
[23:29:31] <yolo> is there such windows-cloud as macincloud?
[23:29:44] <LordKalma> there are a lot of windows KVM vm services
[23:31:24] <LordKalma> and with windows you can always use windows's on remote control GUI thingy
[23:32:29] <LordKalma> all major cloud vendors have windows
[23:32:34] <LordKalma> Hetzner where I have my VPS has it
[23:32:36] <LordKalma> etc etc
[23:32:39] <LordKalma> Windows is easy honestly
[23:33:07] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[23:34:35] *** Joins: paul424 (~tom@ip-37-248-155-99.multi.internet.cyfrowypolsat.pl)
[23:38:15] <yolo> windows 365 is for office use not development, macincloud is really good, much cheaper than macstadium too
[23:38:32] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[23:38:34] <LordKalma> you're confusing with office 365?
[23:38:54] *** Joins: xShad0w (~shad0w@user/xshadow)
[23:39:06] <LordKalma> I'm talking about installing a literal windows VM on any cloud server that has it
[23:39:32] <LordKalma> and use "Remote Desktop Connection"
[23:40:05] <yolo> i want it like macincloud, so I don't need re-spin it each time I need it(it takes a while, e.g. digitalocean's droplet), macincloud seems is for immediate use
[23:40:13] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:40:13] <yolo> anyway I will explore how github works for the build
[23:40:16] <LordKalma> https://i.gyazo.com/7d7cfa41d1ae52a6b7e3e41c6ce8c1a4.png
[23:40:18] <LordKalma> this thing
[23:40:27] <LordKalma> with github CI you can even save/download the artifact
[23:40:35] <yolo> though I do need some debugging IDE when things break, so cloud macos/windows with IDE loaded will work the best
[23:40:38] <LordKalma> or just add "copy to my FTP server"
[23:40:57] <LordKalma> vscode remote via SSH works wonders
[23:41:01] <LordKalma> PJBoy can vouch for it
[23:43:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[23:43:44] <PJBoy> VS Code as an interface over SSH to VS Code
[23:43:48] <PJBoy> it actually wonderful
[23:44:07] <PJBoy> *is
[23:44:13] <LordKalma> hhahaha the power of electron is that it's already naturally a server/client setup
[23:44:27] <LordKalma> extending it to actual server/client is "trivial"
[23:45:31] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[23:48:16] <PJBoy> well VS Code managed to find a way to not be a completely laggy pile of crap
[23:48:35] <LordKalma> it's honestly magic
[23:48:36] <PJBoy> so its use of electron is just about acceptable
[23:49:04] <yolo> not every one can achieve that
[23:49:11] <PJBoy> would like if it had autohiding windows though
[23:49:19] <PJBoy> and window management in general
[23:49:21] <LordKalma> I would like if it had MULTIPLE windows :D
[23:49:27] <yolo> the rest electron apps are very heavy
[23:49:32] <PJBoy> godbolt can do window management, so it's definitely not a limitation
[23:49:38] <LordKalma> yeah
[23:49:45] <LordKalma> and godbolt lifts the vscode engine
[23:51:57] *** Joins: proller (~p@2a02:6b8:b081:8832::1:f)
[23:55:51] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
