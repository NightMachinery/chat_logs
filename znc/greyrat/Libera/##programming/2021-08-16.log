[00:00:08] *** Quits: xff0x (~xff0x@2001:1a81:52ed:2b00:c854:bd3b:6fb8:2f1e) (Ping timeout: 252 seconds)
[00:00:38] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[00:00:40] *** Joins: xff0x (~xff0x@2001:1a81:52ed:2b00:dae0:b3ed:9593:292a)
[00:01:33] <webnet4> and you needed net admin capability to use it
[00:01:40] <webnet4> much simpler times it was
[00:02:50] <[itchyjunk]> hmm
[00:02:58] <[itchyjunk]> i don't understand math it seems
[00:03:04] *** Quits: elnavigator (~elnavigat@105.196.225.184) (Ping timeout: 272 seconds)
[00:03:08] <[itchyjunk]> Math.random() returns a value between 0 and 1
[00:03:23] <webnet4> 0.0 -> 1.0 ?
[00:03:23] <[itchyjunk]> if i want an int between x and y
[00:03:32] <[itchyjunk]> idk what you just asked :s
[00:03:38] <webnet4> an integer?
[00:03:56] <[itchyjunk]> i guess a float or somesuch?
[00:03:58] * [itchyjunk] checks
[00:04:15] <pyzozord> gah doing sets or even array comparisons is so annyoing
[00:04:19] <kzootech> (x-y)*Math.random() + y
[00:04:22] <[itchyjunk]> "This method returns a pseudorandom double greater than or equal to 0.0 and less than 1.0.
[00:04:22] <[itchyjunk]> "
[00:04:24] <kzootech> where y >= x
[00:04:30] <pyzozord> why can't you be more like python, javascript?
[00:04:35] *** Joins: gamara (~gamara@66-203-186-167.ded.execulink.com)
[00:05:30] <[itchyjunk]> so x = 3, y = 5 so (3-5) * (value between 0 and 1) + 5
[00:05:50] <GeDaMo> 5-3
[00:06:01] <[itchyjunk]> oh
[00:06:03] <kzootech> |x-y|Math.random()+y
[00:06:22] <[itchyjunk]> so if random generates 0,  i get a 5
[00:06:28] <kzootech> 5-3*Math.random() + 3
[00:06:48] <[itchyjunk]> and if it generates close to 1, i get 7 ?
[00:06:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[00:07:12] <kzootech> well for a number between 5 and 3 you have a distance of 2
[00:07:20] <[itchyjunk]> is it 5-(3* math.random) ?
[00:07:31] <webnet4> the thing i'd be worried about with that float approach, is how much does rounding bias the results
[00:07:46] <[itchyjunk]> oh it does work
[00:07:46] <kzootech> (5-3)*Math.random() + 3
[00:08:02] <kzootech> if thats a concern javascript has ways to get cryptographically secure random numbers
[00:08:28] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[00:08:30] <[itchyjunk]> hmm works out, wonder why it doesn't mentally make senes that this would be the solution
[00:08:33] <kzootech> id have to go hunt down some old code where i did that
[00:08:33] *** Quits: Enitin (~Enitin@82.102.22.84) (Remote host closed the connection)
[00:08:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:08:53] <kzootech> but the javascript crypto api can help you
[00:09:03] <[itchyjunk]> well i am using java :s
[00:09:22] *** Quits: Enitin (~Enitin@82.102.22.84) (Read error: Connection reset by peer)
[00:09:26] *** Joins: cube1 (~cube1@89-160-183-39.du.xdsl.is)
[00:09:40] <kzootech> oh
[00:09:44] <cube1> Can 75hz monitors be configured to run at 60hz?
[00:09:55] <cube1> I kinda need a 60hz one
[00:10:16] <kzootech> val = new Random().nextinto(x-y + 1) + y; /* would be better */
[00:10:32] <[itchyjunk]> hmm what is that one?
[00:10:32] <kzootech> nextInt(
[00:10:38] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:10:44] <[itchyjunk]> I am only fimiliar with Math.random() thing that comes inbuilt
[00:10:44] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Ping timeout: 272 seconds)
[00:10:51] *** Joins: webnet4 (~0x100@32.211.211.39)
[00:10:58] <[itchyjunk]> ah some Random class?
[00:11:02] <[itchyjunk]> something i have to import?
[00:11:06] <[itchyjunk]> i dont need anything secure
[00:11:10] <kzootech> https://docs.oracle.com/javase/8/docs/api/java/util/Random.html
[00:11:11] <bayaz> Title: Random (Java Platform SE 8 ) 
[00:11:13] <[itchyjunk]> just trying to make a HighLow game
[00:11:47] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:12:32] <cis> [itchyjunk]: typically most random functions return a float value between 0 and 1
[00:13:00] <webnet4> i've never seen that before
[00:13:15] <[itchyjunk]> cis, ahh
[00:13:33] <[itchyjunk]> guess i never learned to go from decimal value to some range of numbers
[00:13:54] <[itchyjunk]> i am doing `int number = Math.random() * 10` and hoping this gives me a number between 1 to 10
[00:14:00] <[itchyjunk]> hmm 0 to 9 maybe
[00:14:09] <cis> [itchyjunk]: that would give a float between 0 and 10
[00:14:10] <[itchyjunk]> yeah 0 to 9
[00:14:23] <cis> assuming 1 is a possible value of Math.random()
[00:14:32] <kzootech> 1.0
[00:14:33] <[itchyjunk]> not 10 right? since Math.random() is 0 <= x < 1
[00:14:36] <cis> err sorry, yeah the int would cast it
[00:14:38] <[itchyjunk]> yeah 1 is not i think
[00:14:53] <[itchyjunk]> oh right, 1 and 1.0 is different
[00:14:55] <[itchyjunk]> argh!
[00:14:59] *** Joins: elnavigator (~elnavigat@105.196.225.184)
[00:15:24] <[itchyjunk]> i guess i just need to cast user input into the x.0 format before comparing
[00:15:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:15:57] <kzootech> https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#random-- less than 1.0
[00:15:57] <bayaz> Title: Math (Java Platform SE 8 ) 
[00:16:12] <kzootech> so 10 is not an achievable value 
[00:17:11] <[itchyjunk]> 0 to 9 is fine (for now)
[00:17:18] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (Ping timeout: 252 seconds)
[00:17:33] <kzootech> you should think about how to make it do 0 to 10 :)
[00:18:34] *** Joins: dan01 (~dan01@2a02:2f09:3418:7e00:8c9e:9e55:1d4:b670)
[00:18:39] <[itchyjunk]> number = (Math.random() * 10) + 1 ?
[00:18:44] <[itchyjunk]> oops, ; at the end
[00:19:05] <[itchyjunk]> oh
[00:19:09] <[itchyjunk]> i would never get 0 then
[00:19:13] <kzootech> that will get you 1 to 10
[00:19:17] <[itchyjunk]> right heh
[00:19:38] <Donitz> what is a formula for bringing x within or closer than y to z from either direction
[00:19:38] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[00:19:44] <[itchyjunk]> number = (Math.random()*10) + (Math.random());
[00:20:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:20:43] <Izem> Donitz: floor/ceil ?
[00:20:47] <Donitz> not quite
[00:20:51] <Donitz> imagine you have a position x 10
[00:21:20] <kzootech> [itchyjunk]: what do you think that does?
[00:21:21] <Donitz> now I want to bring the variable y which is between 0 to 20 to within 1 of x
[00:21:30] <Donitz> ie, to 9-11
[00:21:36] <Donitz> depending on where y is
[00:22:07] <Donitz> can you do that without conditions?
[00:22:20] <kzootech> [itchyjunk]: i would recommend you write a function "int randomBetween(int a, int b) { /* ... */ }"
[00:22:28] <cis> it sounds like you both are looking for a function that maps one range of numbers to another range...
[00:22:49] <Donitz> 7 = 9, 9.5 = 9.5, 13 = 11
[00:22:55] <Donitz> it doesn't map a range as much as clamp
[00:23:56] <kzootech> (as a hint, the first thing i would do in a function like that is check that a <= b and if not swap values of a and b before proceeding to your algorithm)
[00:24:12] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:24:20] <[itchyjunk]> The method nextline() is undefined for the type Scanner
[00:24:20] <[itchyjunk]> 	Cannot make a static reference to the non-static field number
[00:24:22] <cis> Donitz: so it doesn't map [0,20] to [0,1] and then add it to x in either direction?
[00:24:29] <[itchyjunk]> https://www.w3schools.com/java/java_user_input.asp
[00:24:29] <bayaz> Title: Java User Input (Scanner class) 
[00:24:38] <Donitz> clamp(y, x - 1, x + 1)
[00:24:40] <[itchyjunk]> But here, they use .nextline() ?
[00:24:41] <Donitz> umm... I guess that should do
[00:24:42] <Donitz> maybe
[00:25:02] * [itchyjunk] not sure why .nextline() is giving me erros
[00:25:39] <Izem> cis: how do you map this? division?
[00:26:21] <kzootech> [itchyjunk]: impossible to say without seeing your code
[00:26:30] <Donitz> giving you errors because you didn't capitalize l
[00:27:04] <cis> Izem: yeah https://stackoverflow.com/a/5732390
[00:27:05] <bayaz> Title: Mapping a numeric range onto another 
[00:27:08] <[itchyjunk]> here is my code
[00:27:09] <[itchyjunk]> https://bpa.st/2AJQ
[00:27:10] <bayaz> Title: View paste 2AJQ 
[00:27:25] *** Joins: zaher (~zaher@37.48.153.109)
[00:28:06] <cis> [itchyjunk]: capital L in nextLine?
[00:28:12] <kzootech> [itchyjunk]: you need to make the case of the method name
[00:28:23] <[itchyjunk]> ohhhh
[00:28:27] <[itchyjunk]> lol
[00:28:31] <Izem> waitaminute
[00:28:48] <Izem> I remember scanning being a lot easier in Java
[00:28:53] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[00:29:07] <[itchyjunk]> Cannot make a static reference to the non-static field number
[00:29:07] <kzootech> [itchyjunk]: this isnt going to work well though
[00:29:16] <Izem> should be an integer parse function
[00:29:21] <kzootech> yes
[00:29:23] <kzootech> ^
[00:29:36] <[itchyjunk]> you mean user entering non int stuff and screwing me over?
[00:29:42] <[itchyjunk]> i can deal with that later though, no?
[00:29:56] <kzootech> no, it has to do with types
[00:29:58] <[itchyjunk]> or can i scan for int directly? hmm
[00:30:14] <kzootech> a string isnt going to == an int
[00:30:20] <kzootech> String i mean
[00:30:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:30:29] <[itchyjunk]> oh even if they enter 4.0, it would be a string?
[00:30:50] *** Joins: jinsun (~quassel@user/jinsun)
[00:30:54] <Izem> yeah
[00:31:12] <kzootech> first off, https://docs.oracle.com/javase/8/docs/api/index.html bookmark this
[00:31:13] <bayaz> Title: Java Platform SE 8 
[00:31:21] <kzootech> or whatver version your are using
[00:31:26] <kzootech> it wont matter for this method
[00:31:28] <pulse> Donitz, if it's for geometry maybe this will help https://pastebin.ubuntu.com/p/pjR6CYG6Nm/
[00:31:30] <bayaz> Title: Ubuntu Pastebin 
[00:31:38] <[itchyjunk]> what if i do something like int guess = input.nextLine(); ?
[00:31:51] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:54] <Donitz> using atan2 or sin for any kind of basic math is a huge waste
[00:31:56] <pulse> step 1 get distance between A and B; step 2 move point A towards B with (distance-delta)
[00:32:09] <pulse> depends how often it's used
[00:32:14] <Stefan26> why is it waste?
[00:32:19] <Donitz> because it's expensive
[00:32:29] <pulse> Stefan26, because it's not cheap to do this every cycle
[00:32:36] <Stefan26> oh
[00:32:37] <pulse> but if you just precompute it or something then it's fine
[00:32:39] <kzootech> [itchyjunk]: https://docs.oracle.com/javase/8/docs/api/index.html what does nextLine return?
[00:32:40] <bayaz> Title: Java Platform SE 8 
[00:32:47] <Izem> [itchyjunk]: https://docs.oracle.com/javase/tutorial/essential/io/scanning.html
[00:32:47] <pulse> or if it happens once in a while
[00:32:47] <bayaz> Title: Scanning (The Java™ Tutorials > Essential Java Classes > Basic I/O) 
[00:33:19] <Stefan26> that only applies if you have task where computational expensiveness is relevant
[00:33:21] <kzootech> also i would just stay away from w3schools, maybe its just me but ive always loathed it
[00:33:37] <Izem> hasNext, hasNextDouble look like functions you need/want
[00:33:40] <pulse> kzootech, it's gotten considerably better
[00:33:42] <kzootech> the official documetnation and tutorials are much better 
[00:33:55] <Izem> oh and nextDouble
[00:34:20] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:35:27] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[00:35:28] <kzootech> nextInt for a number guessing game
[00:35:38] <kzootech> its going to be a very hard game with nextDouble
[00:35:51] <Izem> yeah
[00:36:35] <gamara> Hey so I made a dockerfile for my C++ development environment, anyways I would like googletest to be inside my project folder ToJSON so I can easily add it in CMAKE, but I can't get anything to work here is the dockerfile https://github.com/istareatscreens/ToJSON/blob/master/.devcontainer/Dockerfile
[00:36:36] <bayaz> Title: ToJSON/Dockerfile at master · istareatscreens/ToJSON 
[00:37:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[00:37:07] <Izem> if a programming language didn't use types with similar ranges to the registers, does that mean you would need multiple registers to hold a value?
[00:37:12] <gamara> I am not sure this is the correct place to ask though, if not I apologize 
[00:37:27] <[itchyjunk]> https://bpa.st/UQMQ still getting these weird static refrence error
[00:37:28] <bayaz> Title: View paste UQMQ 
[00:37:53] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:38:58] <Izem> ok so
[00:39:26] <Izem> main is a static method, but your other members and methods are non static, so they cannot be used together
[00:40:13] <[itchyjunk]> hmmmm
[00:40:15] <Izem> you will probably have to make a game object to do it the java oop way, or make everything static
[00:40:36] <gamara> I tried using CMD ["/bin/mv", "/workspaces/googletest/", "/workspaces/ToJSON/"] but no luck and I can't specify ToJSON because it is on my local machine
[00:42:18] <Izem> huh, I guess it makes sense that main is static?
[00:42:23] <Izem> never thought about it
[00:42:37] <Izem> but yeah this will become annoying in the future lol
[00:43:21] <gamara> Static is compile, non-static is runtime, Thus you can reference static from non-static methods and static to other static methods, but not runtime methods from static methods
[00:43:27] *** Quits: cube1 (~cube1@89-160-183-39.du.xdsl.is) (Quit: Leaving)
[00:43:38] <gamara> because static methods have no concept of what is happening during runtime
[00:43:43] <gamara> maybe I am wrong lol
[00:43:51] <gamara> but that is how I think about it
[00:44:03] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[00:44:38] <[itchyjunk]> question, what is the type of my start method?
[00:44:39] <[itchyjunk]> https://bpa.st/JF6Q
[00:44:39] <Izem> this is java*
[00:44:40] <bayaz> Title: View paste JF6Q 
[00:44:51] <gamara> compile time*
[00:44:57] <[itchyjunk]> i need to tell what type it is right?
[00:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:08] <[itchyjunk]> but its not `return` ing anything
[00:45:14] <[itchyjunk]> so what is the type based on?
[00:45:17] <Izem> void
[00:45:21] <[itchyjunk]> ahhhhhhhh
[00:45:22] <bjs> [itchyjunk]: void?  Just like main
[00:45:29] *** Quits: jamea (~jamea@177.239.87.4) (Ping timeout: 248 seconds)
[00:45:52] <Izem> seeing unit in ocaml makes me think this is a much better approach
[00:45:53] <gamara> I would recommend memorizing method signatures
[00:46:04] <gamara> [itchyjunk]
[00:46:15] <gamara> If it returns nothing it is void
[00:46:26] <gamara> you can still use a return though like this: return;
[00:46:32] <gamara> that will just end the function
[00:46:36] <gamara> which is sometimes useful
[00:47:20] <gamara> It is good practice to have changes in state be conducted in void functions also I have heard
[00:47:26] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:40] <gamara> for instance changes to member variables
[00:48:12] <kzootech> i like to still use return; at the end of void functions too
[00:48:12] <[itchyjunk]> oh no
[00:48:16] <kzootech> even those its not required
[00:48:24] <Izem> would you say a modifier in a programming language is like an adjective?
[00:48:33] <kzootech> i get paid by the line of code though
[00:48:34] <[itchyjunk]> gamara, i see
[00:48:42] <[itchyjunk]> so 1.0 is a double i suppose
[00:48:44] <gamara> I mean they use grammar rules to parse programming languages so maybe lol
[00:48:47] <Izem> yeah
[00:48:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[00:48:59] <[itchyjunk]> and i need an int for scanner method nextInt
[00:49:23] <[itchyjunk]> oh there must be a way to take double to int
[00:49:24] <kzootech> [itchyjunk]: for a number guessing game you want ints only
[00:49:25] * [itchyjunk] googles
[00:49:27] <Izem> yeah, iirc doubles will get parsed by the int parse methods
[00:49:35] <kzootech> the only place you are going to be messing with a double is with the rng 
[00:49:37] <gamara> [itchyjunk] it is helpful to know what literals are converted to by default
[00:49:39] <[itchyjunk]> kzootech, the double is coming from Math.random
[00:49:53] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:50:03] <kzootech> which is why i recommend you make a function int randomBetween(int a, int b) { /* floating point code here */ }
[00:50:08] <[itchyjunk]> Type mismatch: cannot convert from double to int
[00:50:16] <kzootech> ^ because that
[00:50:17] <gamara> for instance if you try to pass the literal 3.3 to a function that takes a float as a parameter you will get a type error, you have to write 3.3f
[00:50:23] <Izem> there are other rand methods for integers
[00:50:25] <[itchyjunk]> kzootech, that will be a future project :P
[00:50:33] <kzootech> no, that should be a now project
[00:50:39] <[itchyjunk]> !
[00:50:45] <gamara> Anyone know where I can get help with docker containers?
[00:50:51] <gamara> if there is a good channel?
[00:51:10] <kzootech> gamara: maybe there is a docker channel? idk about docker myself
[00:51:26] <gamara> there isn't
[00:51:28] <Izem> [itchyjunk]: https://docs.oracle.com/javase/8/docs/api/java/util/Random.html#nextInt-int-
[00:51:29] <bayaz> Title: Random (Java Platform SE 8 ) 
[00:51:30] <[itchyjunk]> ha fixed it
[00:51:35] <[itchyjunk]> i can cast it using (int)
[00:51:42] <Izem> yeah that works too
[00:51:43] <[itchyjunk]> number = (int) Math.random()
[00:51:44] <[itchyjunk]> doom!
[00:51:46] <[itchyjunk]> oops
[00:51:48] <[itchyjunk]> boom!
[00:51:59] <kzootech> number == 0
[00:52:19] <[itchyjunk]> Great my games works
[00:52:27] <[itchyjunk]> but it doesn't say if the guess is high or low yet
[00:52:27] <kzootech> guess 0
[00:52:32] <[itchyjunk]> future project!
[00:52:36] <kzootech> go for it
[00:52:38] <kzootech> guess 0
[00:52:50] <[itchyjunk]> 0
[00:52:50] <[itchyjunk]> You guessed the correct number 0
[00:52:54] <kzootech> omg
[00:52:57] <kzootech> try again!
[00:53:09] <kzootech> guess 0 again
[00:53:13] <Izem> lol
[00:53:25] <[itchyjunk]> oh
[00:53:30] <[itchyjunk]> it always says correct for 0?
[00:53:49] <kzootech> idk, we would have to do a statistical study with at least 30 samples so we could check it out against the normal distriubtion
[00:54:12] <gamara> honestly my biggest problem is  I need the equivalent of add_subdirectory but for a relative directory in CMAKE
[00:54:15] <[itchyjunk]> i guess my random is not doing what i want it to
[00:54:15] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[00:54:33] <kzootech> [itchyjunk]: this is why you show write that randomBetween() method first
[00:54:46] <[itchyjunk]> i dont get paid enough to write those!
[00:54:59] <Izem> might be the cast if that is verbatim
[00:55:03] *** Joins: roent (~roent@user/roent)
[00:55:18] <kzootech> Izem: yes, thats whats going on exactly
[00:55:20] <Izem> a number < 1 will be cast to 0
[00:55:26] <[itchyjunk]> https://bpa.st/2XUQ
[00:55:27] <bayaz> Title: View paste 2XUQ 
[00:55:41] <[itchyjunk]> oh i see
[00:55:47] <kzootech> maybe if you multiply by 1000000000
[00:55:54] <Izem> brackets around the multiply
[00:55:56] <[itchyjunk]> i need to normalize things to 1 to 10
[00:56:13] <kzootech> [itchyjunk]: with is 99% of the randomBetween() method
[00:56:13] <Izem> oh wait nvm
[00:56:26] <[itchyjunk]> brackets
[00:56:29] <[itchyjunk]> that fixed it
[00:56:34] <[itchyjunk]> it was casting Math.random()
[00:56:42] <[itchyjunk]> and not (Math.random() * 10) !!!
[00:57:23] <[itchyjunk]> 0 isn't the answer always anymore
[00:57:24] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: leaving)
[00:57:25] <[itchyjunk]> !
[00:57:34] <kzootech> its generally best to get one thing correct before you start implementing the next thing imo
[00:57:50] <[itchyjunk]> yes but this is correct no ? :P
[00:57:53] <kzootech> because you will just start getting compounding problems show up that might be harder to track down
[00:57:54] <[itchyjunk]> i was just missing () 
[00:58:15] <kzootech> i still think you should write a randomBetween method
[00:58:28] <kzootech> because in this game you will want to be able to choose your difficulty 
[00:58:30] <[itchyjunk]> in near and/or far future i'll try that
[00:58:38] <[itchyjunk]> ah true
[00:59:18] <kzootech> you dont want to architect in things that you are going to change in the future 
[01:00:12] <kzootech> you could also go from the simpler randMax(int max) method
[01:00:27] <kzootech> if you wont be having people choose between 50 and 150, for isntance
[01:00:33] <kzootech> but always 0 to 100
[01:01:52] <kzootech> but the game becomes more difficult for the user if you are always doing 0 to N because it is going to make them do a little bit more math as to what the perfect next guess is
[01:02:00] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[01:02:01] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 248 seconds)
[01:02:47] <kzootech> pick a number between 65436 and 65536 is much harder than between 0 and 100 for a human, but its actually the same problem
[01:03:25] <kzootech> i think if i were making this game, each time you win, that would increase the starting number by 1
[01:03:48] <kzootech> so you start with 0 to 100, you win, now you play 1 to 101, then 2 to 102, etc
[01:04:27] *** Quits: magla (~gelignite@55d454e5.access.ecotel.net) (Quit: Stay safe!)
[01:06:26] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[01:06:45] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[01:06:53] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:07:05] *** Joins: webnet4 (~0x100@32.211.211.39)
[01:10:29] *** Joins: mven (~mven@072-179-001-159.res.spectrum.com)
[01:12:34] *** Joins: Samian (~Sami@174.27.107.153)
[01:16:37] *** Joins: vysn (~vysn@user/vysn)
[01:22:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[01:23:01] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:26:45] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[01:27:28] *** Joins: jamea (~jamea@177.239.85.103)
[01:28:37] *** Joins: vysn (~vysn@user/vysn)
[01:29:59] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[01:30:23] *** Joins: vysn (~vysn@user/vysn)
[01:32:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[01:33:09] <pulse> which wakes you up faster, 3 cups of coffee one after another, jumping into ice cold water, or suddenly noticing there's an adult bear in your living room
[01:34:01] <webnet4> ice water
[01:34:25] <webnet4> wait you mean like yogi bear, or a grizzly?
[01:34:32] *** Quits: LiftLeft (~LiftLeft@154.21.28.123) (Ping timeout: 256 seconds)
[01:34:35] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[01:34:50] <pulse> whiever is the scariest
[01:34:53] <pulse> whichever*
[01:34:57] <pyzozord> pulse: pretty sure all three can give you a heart attack
[01:35:07] <pyzozord> at least can give me a heart attack
[01:35:12] *** Joins: vysn (~vysn@user/vysn)
[01:35:14] <pulse> :p
[01:35:28] <pulse> there's a fourth
[01:36:05] <Donitz> https://www.youtube.com/watch?v=Z_gB3tBOCx4
[01:36:06] <bayaz> Title: Man Chases Away Bear With a Broom || ViralHog 
[01:36:08] <pulse> living in australia with acrachnophobia
[01:36:09] <Donitz> bears are harmless
[01:36:12] <pulse> i had to google that word
[01:36:56] <webnet4> standard black bears are pretty harmless to adult humans
[01:36:58] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 268 seconds)
[01:37:01] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[01:37:26] <pyzozord> Learning and practicing algorithms sucks. But knowing algorithms is quite cool
[01:37:34] <Donitz> it doesn't suck
[01:37:42] <Donitz> elegant algorithms are fun
[01:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[01:37:51] <CyberTailor> google "bison v.string" @ find women's underwear
[01:38:01] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:38:14] *** Joins: webnet4 (~0x100@32.211.211.39)
[01:40:11] *** Quits: dan01 (~dan01@2a02:2f09:3418:7e00:8c9e:9e55:1d4:b670) (Read error: Connection reset by peer)
[01:40:47] *** Quits: elnavigator (~elnavigat@105.196.225.184) (Ping timeout: 252 seconds)
[01:41:18] *** Quits: zaher (~zaher@37.48.153.109) (Ping timeout: 268 seconds)
[01:42:03] <pulse> what kind of an evil person buys this, anyway https://www.ebay.com/itm/234129370318
[01:42:04] <bayaz> Title: Spider in a Box Prank - Scare Box Toy - Trick Scary 2021AU Party HOT Props T2J8 | eBay 
[01:42:10] <pulse> brrr
[01:42:24] *** Joins: zaher (~zaher@37.48.154.104)
[01:43:13] <pulse> that description though. "- After removing the protective cover, jump into the wooden box."
[01:43:15] <pulse> umm. ok
[01:43:35] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:46:24] <edgar-rft> a bear that can behave like an adult doesn't sound terribly scary to me
[01:46:55] <pulse> well it's not like he has a monocle and asks you for a cup of tea
[01:47:01] <pulse> although that would be delightful in a way
[01:47:16] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[01:48:06] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[01:48:30] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:48:42] *** Quits: One39Dev (LordShiva@user/one39dev) (Ping timeout: 268 seconds)
[01:48:43] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[01:49:50] *** Joins: elnavigator (~elnavigat@105.196.225.184)
[01:50:33] <Codaraxis_> In Graphviz, does anyone know if it's possible to either use different engines to lay out the contents of individual subgraph clusters or, if using DOT, it is possible to unflatten the contents of specific subgraph clusters?
[01:51:20] *** Joins: Guest13 (~Guest13@2a02:a03f:895e:2300:711e:e4b8:dadf:43ad)
[01:51:34] <arahael> Codaraxis_: yes, you can just try out different engines although you may need to tweek them a bit to make them look ok.
[01:51:45] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[01:54:33] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[01:54:39] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[01:54:51] *** DasBrain_ is now known as DasBrain
[01:55:11] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:57:17] *** Quits: roent (~roent@user/roent) (Read error: Connection reset by peer)
[01:57:23] <Codaraxis_> arahael, Well, what I mean is, right now I'm interpreting the .gv with <engine> -Tpdf src.gv -o out.pdf . I know I can run with different engines, but can I use different engines for the different subgraphs?
[01:57:25] <Codaraxis_> For example, if I have digraph { subgraph cluster_1 {...} subgraph cluster_2 {... } ...} and I want the nodes in cluster_1 to be laid out by DOT and the nodes in cluster_2 to be laid out by fdp, is that possible?
[01:57:47] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (K-Lined)
[01:58:38] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[02:00:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:00:37] *** Quits: Guest13 (~Guest13@2a02:a03f:895e:2300:711e:e4b8:dadf:43ad) (Quit: Client closed)
[02:01:10] *** Joins: One39Dev (~LordShiva@user/one39dev)
[02:01:40] <arahael> Codaraxis_: Give it a go! Maybe, maybe not.
[02:02:39] *** Quits: Julius_ (~Julius76@2a02:810b:c640:514:64e8:2a3d:aa18:bae0) (Quit: Quit)
[02:03:30] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[02:05:29] *** Quits: elnavigator (~elnavigat@105.196.225.184) (Ping timeout: 248 seconds)
[02:09:49] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[02:09:58] *** Joins: vysn (~vysn@user/vysn)
[02:10:28] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[02:10:41] *** Joins: rtypo (~alex@user/rtypo)
[02:10:53] <Codaraxis_> arahael, Not entirely sure how to give it a go since I can't find any examples of this being done
[02:11:27] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 258 seconds)
[02:11:29] <arahael> Codaraxis_: You literally type the name of the engine where you have '<engine>'.
[02:11:39] *** Joins: anon16 (~anon16@user/anon16)
[02:12:27] <Codaraxis_> Yes, but it runs on an entire .gv file with its internal digraph. How or where would I specify <engine> G.cluster_1, <engine> G.cluster_2 ?
[02:12:58] <arahael> Ah, that i'm not entirely sure about.
[02:13:29] <paulo> would you it's unethical to take interviews for jobs you don't intend to take?
[02:13:36] <paulo> basically just using them for practice
[02:13:53] <arahael> paulo: A bit.
[02:14:12] *** Joins: Shiva (LordShiva@user/one39dev)
[02:14:40] *** Quits: gamara (~gamara@66-203-186-167.ded.execulink.com) (Ping timeout: 246 seconds)
[02:14:40] <arahael> paulo: You probably want to discuss interviews at a job market or career advice thing or something.
[02:14:41] <Codaraxis_> paulo, if you were selling something on Craigslist and someone called you to practice negotiating/haggling with no actual intention to buy what you were selling, how would you feel?
[02:15:11] <Izem> it's part of the game imo
[02:15:23] <[itchyjunk]> Izem, not sure if you saw my last message
[02:15:29] <[itchyjunk]> but it was the (), that fixed it
[02:16:07] <[itchyjunk]> paulo, if it's via recruters, it's fine
[02:16:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:16:41] *** Quits: One39Dev (~LordShiva@user/one39dev) (Ping timeout: 248 seconds)
[02:17:41] <[itchyjunk]> oh btw
[02:18:22] <[itchyjunk]> i had tried a loop exercise in lisp
[02:18:27] <Izem> [itchyjunk]: no I missed it
[02:18:32] <[itchyjunk]> where i could "pop" one element out of array
[02:18:42] <[itchyjunk]> Izem, ah the (int) (Math.random() * 10) fixed it
[02:18:55] <[itchyjunk]> it was probably (int) ing just the Math.random() to 0 first
[02:19:04] <[itchyjunk]> then applying * 10 giving me 0 as the answer always
[02:19:05] <Izem> oh I might have caught that
[02:19:23] <[itchyjunk]> but in java, i can't seem to pop an element out of an array?
[02:19:27] <Izem> yeah cast probably has higher precedence, the syntax is from C that is why it's weird
[02:19:36] <Izem> define "pop
[02:19:49] <[itchyjunk]> so i can't do recursive solutions where i take one element out of array do stuff, the ncall the same function on the rest of it?
[02:20:09] *** Quits: moose (~moose@user/moose) (Ping timeout: 268 seconds)
[02:20:32] <[itchyjunk]> pop as in take an array of n length and get an array of n-1 length
[02:20:34] <Izem> code? I can't tell what you mean
[02:20:50] *** Joins: bluebird (~bluebird@user/bluebird)
[02:20:53] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:21:05] <[itchyjunk]> well, i dont have a code for it
[02:21:19] <Izem> ok, describe the algorithm again
[02:21:20] <[itchyjunk]> but its just calling a function recursively on an array
[02:21:39] <[itchyjunk]> take array of length n, take one element out do stuff call the same function on the array of n-1 length
[02:21:50] <[itchyjunk]> and it will iterate over all the elements
[02:22:05] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:23:13] *** Joins: nekodesu (~nano@user/nekobit)
[02:23:20] <Izem> sure that will work, however you will have to operate on an index
[02:23:27] <[itchyjunk]> say define recursive_addition ( array) { first_element, remaining_array = pop(array); recursive_addition(remaining_array) }
[02:23:33] <[itchyjunk]> i need to add something in there somewhere
[02:23:56] <[itchyjunk]> well then i'll be passing an integer index
[02:23:59] <[itchyjunk]> and not an array
[02:24:08] <[itchyjunk]> but for resursion, the function would want an array
[02:24:15] <[itchyjunk]> hmm
[02:24:20] *** Quits: nekodesu (~nano@user/nekobit) (Client Quit)
[02:24:24] *** Joins: moose (~moose@user/moose)
[02:24:57] <Izem> if java had slices this would be easier using arrays, but it does not
[02:25:07] <Izem> java does have lists though
[02:25:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[02:26:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[02:26:36] <[itchyjunk]> ah
[02:26:36] *** Joins: nekodesu (~nekodesu@user/nekobit)
[02:26:40] <[itchyjunk]> i'll check lists
[02:26:56] *** Quits: nekodesu (~nekodesu@user/nekobit) (Client Quit)
[02:27:10] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[02:27:44] <Izem> LinkedList in the collections class
[02:28:44] <Izem> btw the method can still take an array argument when you do recursion with an index
[02:28:46] *** Joins: nekobit_ (~nekodesu@24.49.27.54)
[02:33:09] <Izem> what is google workspace? anyone heard of that?
[02:33:18] *** Quits: nekobit_ (~nekodesu@24.49.27.54) (Ping timeout: 258 seconds)
[02:34:11] *** Joins: nekobit_ (~nano@2600:1003:b851:78f3:e1bb:5ad5:316b:308d)
[02:35:44] *** Quits: nekobit_ (~nano@2600:1003:b851:78f3:e1bb:5ad5:316b:308d) (Remote host closed the connection)
[02:36:37] *** Joins: nekobit_ (~nano@user/nekobit)
[02:37:32] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[02:37:46] *** Joins: hexfive (~eric@50.35.83.177)
[02:37:49] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[02:38:02] *** Quits: inky (~inky__@46.36.117.137) (Ping timeout: 268 seconds)
[02:38:52] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 272 seconds)
[02:39:01] *** Quits: nekobit_ (~nano@user/nekobit) (Client Quit)
[02:39:15] *** Joins: nekodesu (~nano@user/nekobit)
[02:40:22] *** Joins: anon16 (~anon16@user/anon16)
[02:44:03] *** Quits: Inari (~Pinkishu@p4fd95809.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:44:15] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 245 seconds)
[02:46:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:49:09] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[02:50:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[02:53:16] <edgar-rft> Izem: that sounds like Google is working in space now
[02:53:29] <Izem> probably
[02:54:09] *** Quits: Akuli (~Akuli@82-203-165-39.bb.dnainternet.fi) (Quit: Leaving)
[02:54:54] <kzootech> oh i get it
[02:55:27] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:55:55] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:58:59] *** Joins: JavaBean (~JavaBean@user/javabean)
[03:02:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:08:47] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[03:09:09] *** Joins: inky (~inky__@46.36.119.19)
[03:09:23] <quartz> I'm doing a coding exercise where I am writing a method that takes in two strings and determins if they are anagrams. I wrote this code: https://bpa.st/PJUA   but it is not working. It returns the wrong results. I'm not sure why.
[03:09:25] <bayaz> Title: View paste PJUA 
[03:10:11] <cis> quartz: there's no need for nested loops...
[03:10:25] <quartz> omg
[03:10:33] <Izem> maybe case counts
[03:10:35] <quartz> cis: Thanks
[03:10:44] <quartz> Izem: Good point.
[03:10:45] <Izem> or that
[03:10:51] <cis> quartz: and if they're not the same length, you know it's false
[03:11:02] <quartz> cis: Yeah good point
[03:12:08] <quartz> Does anyone do hard leetcode problems in here and find them easy?
[03:12:38] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[03:13:04] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Ping timeout: 272 seconds)
[03:13:59] <cis> I don't know about hard problems on leetcode, but in general they get easier the more days in a row I've spent on practicing them
[03:15:28] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[03:16:13] <Izem> no, I think leetcode is dumb
[03:17:07] <quartz> cis: I still don't get why my code does not work. I understand why nested for loops are not necessary here, but why does it not work?
[03:17:15] <cis> quartz: show your new code
[03:17:29] <cis> quartz: oh, or you mean why did the nested loops not work?
[03:17:29] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[03:17:39] <quartz> cis: Yeah
[03:17:47] <quartz> My new code does not work either haha
[03:18:14] <quartz> Oh nevermind
[03:18:42] <quartz> New code: https://bpa.st/ZY7A
[03:18:44] <bayaz> Title: View paste ZY7A 
[03:20:17] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[03:20:32] *** Joins: flynn (~mcbloch@user/flynn)
[03:20:38] <oldlaptop> quartz: The nested loops cause you to compare each character in the first string with *all* the characters in the second string.
[03:20:48] <cis> quartz: because you're iterating the second string against each character of the first. So if you have two strings like 'abc' then it will break the loop when comparing the first 'a', but then it will compare 'b' from string1, and 'a' from string 2, and return false
[03:21:17] *** Joins: NEYi (~NEYi@109.251.216.38)
[03:22:10] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:23:05] <quartz> I see. Thanks.
[03:23:27] <karstensrage> quartz also you have to normalize those strings
[03:23:34] <karstensrage> strip the spaces, lowercase them
[03:24:05] <karstensrage> if you do that you can just Arrays.equal them 
[03:24:30] <quartz> karstensrage: Haha! 
[03:24:34] <karstensrage> "New York Times".replaceAll(" ", "").toLowerCase().toCharArray()
[03:24:46] <karstensrage> "monkeys write".replaceAll(" ", "").toLowerCase().toCharArray()
[03:24:48] <quartz> I feel like I'm cheating in leetcode when I use java methods.
[03:25:06] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[03:25:16] <oldlaptop> karstensrage: whether that's desirable depends on the problem definition, I would think
[03:25:31] <karstensrage> anagram is the problem ?
[03:25:32] <quartz> Yeah they don't use caps or spaces
[03:25:39] <quartz> karstensrage: Yes
[03:25:48] <cis> it also depends on sorting the array, which isn't the most time-optimal solution
[03:25:49] <oldlaptop> One could define it to be sensitive to capitalization and whitespaces
[03:25:51] <karstensrage> then i think you have to normalize them
[03:26:21] <karstensrage> optiztn s th rt f ll evl
[03:26:25] <oldlaptop> (but obviously if one doesn't, then normalization it is)
[03:27:57] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:27:57] <karstensrage> i dont know your pastes looked like java to me
[03:28:14] <quartz> Yes I like Java.
[03:28:35] <cis> the island? the beverage?
[03:28:46] <karstensrage> ok well i think in terms of anagram you would have to strip internal spaces and normalize them to caps or lowercase
[03:29:02] <karstensrage> dont worry about sorting for two strings
[03:29:17] <quartz> Haha, my runtime is faster than 94% of total submissions.
[03:29:27] <karstensrage> and then Arrays.equals or just manually check  
[03:30:16] <karstensrage> for all intents and purposes Arrays.equals probably does it very close to how you were doing it manually anyway
[03:30:58] *** Quits: jamesatjaminit (~jamesatja@user/jamesatjaminit) (Read error: Connection reset by peer)
[03:31:12] <karstensrage> http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/be44bff34df4/src/share/classes/java/util/Arrays.java#l2570
[03:31:17] <bayaz> Title: jdk8u/jdk8u/jdk: be44bff34df4 src/share/classes/java/util/Arrays.java 
[03:31:40] *** Joins: jamesatjaminit (~jamesatja@user/jamesatjaminit)
[03:31:41] <karstensrage> http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/be44bff34df4/src/share/classes/java/util/Arrays.java#l2657
[03:31:43] <bayaz> Title: jdk8u/jdk8u/jdk: be44bff34df4 src/share/classes/java/util/Arrays.java 
[03:32:07] <karstensrage> so its exactly the same
[03:33:34] <PlanckWalk> Sorting could be O(n) when the range of array elements is bounded, but Java's won't be.
[03:34:02] <PlanckWalk> Though for short strings it won't matter
[03:34:39] <karstensrage> iirc leetcode doesnt have edge case inputs where things like that matter
[03:35:04] <karstensrage> only interviews ime have those kinds of edge case requirements
[03:35:56] <droid3> hey guys stupid question more of a wikipedia question
[03:36:10] <PlanckWalk> The space requirements go from O(n) to O(log n)
[03:36:14] <PlanckWalk> (If you use a histogram)
[03:36:26] <droid3> I add java code sample to this wikipedia page 
[03:36:27] <droid3> https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm
[03:36:27] <bayaz> Title: Pollard's rho algorithm - Wikipedia 
[03:36:40] <Mangy_Dog> https://i.imgur.com/idvdwfY.mp4  nearing the end of this perticular never ending nightmare!
[03:36:41] <bayaz> Type: video/mp4 Size: 10.9 MB 
[03:37:13] <droid3> But i not sure how the other guys who edited this wiki made the color i like to colorize it to stay with in the same look/feel as there code samples for this wiki page
[03:37:46] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[03:37:46] <droid3> Anybody know much about this its been awhile sense i edit wiki pages with the mediawiki stuff i installed
[03:38:27] <droid3> Now i am actually adding it to the main wiki pages of wikipedia because it could benifit everybody by having the ability if interested to use it.
[03:38:32] <karstensrage> http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/be44bff34df4/src/share/classes/java/util/Arrays.java#l253
[03:38:34] <bayaz> Title: jdk8u/jdk8u/jdk: be44bff34df4 src/share/classes/java/util/Arrays.java 
[03:38:39] <karstensrage> PlanckWalk, there is the code and the discussion
[03:39:30] <droid3> Any how all leave it as is and hope somebody will come along and touch up the coloring of text and any other little touch ups to make it visual appealing
[03:41:03] <karstensrage> i find in general Java has done the work of evaluting things to hit 99% of the use cases well
[03:41:45] <karstensrage> i doubt very much i am going to be able to sort anything better than Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch.
[03:44:40] *** Quits: MDP87900 (~MDP87900@189.34.140.159) (Remote host closed the connection)
[03:48:38] *** Quits: jaysicks (~jaysicks@91-83-5-150.pool.digikabel.hu) (Remote host closed the connection)
[03:53:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[03:54:12] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[03:59:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:01:33] *** Joins: inky_ (~inky@46.36.119.19)
[04:02:49] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 248 seconds)
[04:05:25] *** Joins: zaher_ (~zaher@37.48.152.182)
[04:05:34] <PlanckWalk> karstensrage: That's a general sort, this is a special case.
[04:05:56] <PlanckWalk> So yes, *for this case* you can sort better.
[04:06:33] *** Quits: zaher (~zaher@37.48.154.104) (Ping timeout: 248 seconds)
[04:09:58] <PlanckWalk> (Also, there are still cases where that algorithm is O(n^2))
[04:11:15] <karstensrage> maybe you can, i cant be bothered
[04:11:30] <PlanckWalk> I guess they had their reasons, but I wouldn't make a worst case O(n^2) algorithm the standard in any language
[04:12:05] <PlanckWalk> It's just asking for an adversarial DoS on user-supplied input.
[04:12:32] <Izem> time for a patch
[04:13:36] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[04:14:01] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:14:12] *** Joins: gamara (~gamara@66-203-186-167.ded.execulink.com)
[04:14:39] <gamara> Hey for some reason I cant access a private member variable even though the classes are declared as friend https://pastebin.com/DM66k0TB
[04:14:41] <bayaz> Title: class ToJSON; class ToArray; class To //Note this class is declare - Pastebin.com 
[04:15:40] *** Joins: Julius_ (~Julius76@2a02:810b:c640:514:414:4862:40cd:eb0f)
[04:16:07] <gamara> why is friend class <name of class> not allowing access to the private variables
[04:17:59] <Julius_> Because it has to be the other way around?
[04:18:44] *** Joins: Jacobis9100 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[04:18:47] <Julius_> The class with the private variables has to name your class as a friend. Otherwise everyone could simply write "friend" and access any private variables
[04:19:17] <Jacobis9100> hi guys, excuse me for complaining about python yesterday, I was tired and grumpy, and I haven't coded anything in python for ages and ages and decided to do a python coding challenge
[04:20:18] <Jacobis9100> and I had been messing around with C and was in C-thought-mode
[04:21:31] <gamara> Julius_ you are wrong
[04:21:40] <gamara> https://www.geeksforgeeks.org/friend-class-function-cpp/
[04:21:41] <bayaz> Type: text/plain; charset=utf-8 Size: 452 B 
[04:22:24] <gamara> Also I tried the other way around same result
[04:22:44] <gamara> I am trying to access the private variable in the Null class
[04:22:53] <gamara> from To, ToJSON and ToArray
[04:22:54] <Julius_> gamara, I am almost never wrong
[04:23:01] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[04:24:15] <gamara> Yeah well in this case you are
[04:24:59] <Julius_> gamara, the examle in your link shows exactly what I said
[04:25:09] <gamara> did you look at my problem
[04:25:14] <Julius_> Seems you are the one who is wrong
[04:25:26] <Julius_> Or you should read your own links better
[04:25:49] <gamara> I wasn't even trying to be rude
[04:26:12] <gamara> but look at my problem Null is class A, B is ToArray, ToJSON, and To
[04:26:20] <Julius_> Me neither. I was just correct
[04:26:33] <gamara> you are a troll
[04:26:37] <Julius_> ?
[04:27:13] <Caffeinated> Julius_: have you been arguing and baiting people in here all day?  why?
[04:27:19] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:27:19] <Julius_> You didnt even provide me a link to your problem
[04:27:29] <gamara> Dude get a life
[04:27:31] <Julius_> Caffeinated, not my fault he's wrong
[04:27:34] <PlanckWalk> Julius_: It was 60 seconds before you joined
[04:27:47] <Caffeinated> wow
[04:27:57] <gamara> Hey for some reason I cant access a private member variable even though the classes are declared as friend https://pastebin.com/DM66k0TB
[04:27:58] <bayaz> Title: class ToJSON; class ToArray; class To //Note this class is declare - Pastebin.com 
[04:28:04] <Julius_> PlanckWalk, yes, probably. So why is he insulting me that I dont look at his problem if I dont even have the chance to?
[04:28:11] <gamara> I never insulted you
[04:28:15] <gamara> I simply said you are wrong
[04:28:28] <gamara> I am just going to block you now
[04:28:33] <Julius_> What a moron
[04:28:46] <Julius_> Cant even read his own links that say the same as I do, and then claims I am wrong
[04:28:57] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 248 seconds)
[04:29:07] <Caffeinated> the ad-hom insults aren't necessary
[04:29:21] <Julius_> I didnt started it
[04:29:26] <gamara> That is true
[04:29:39] <Guest80> When you use %x%x%x to crawl the stack inside a printf in C and it spills a bunch of garbage back in hex on a little endian machine, how do I convert that back to ascii? Do I just loop over the entire character array in groups of 4 or 8 (for 32 vs 64 bit) and then reverse / print each group as I go? 
[04:30:03] <gamara> But he didn't even see the problem and he was making assumptions about things so obvious troll imo
[04:30:27] <Caffeinated> gamara: just /ignore them
[04:30:30] <gamara> I did
[04:30:42] <Caffeinated> \o/
[04:30:51] <gamara> but you are right next time I wont engage
[04:30:54] <Julius_> Why are there always such idiots that cant even read their own links and then insult others? And why do they never learn?
[04:30:55] <gamara> sorry about that
[04:31:07] *** ChanServ sets mode: +o InPhase
[04:31:11] *** InPhase sets mode: +q *!*@2a02:810b:c640:514:*
[04:31:14] *** InPhase sets mode: -o InPhase
[04:31:24] <Caffeinated> thank you
[04:31:28] *** Parts: Julius_ (~Julius76@2a02:810b:c640:514:414:4862:40cd:eb0f) ()
[04:32:04] <gamara> anyways still no idea why things aren't working
[04:32:07] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:32:14] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[04:32:14] <gamara> maybe I should just give up on friend classes lol
[04:32:35] <quartz> Hey all, I'm trying to complete this leetcode problem: https://leetcode.com/problems/merge-two-sorted-lists/  I don't see the class "ListNode" in the Java api, so does this mean it's something that leetcode made up?
[04:32:35] <bayaz> Title: 
[04:32:58] <gamara> yeah ListNode is a leetcode object
[04:33:06] <InPhase> gamara: I do find friend classes better avoided if you can.  There are times you need them, but it's always at least a little bit of a mess.
[04:33:25] <gamara> I just want to hide the member variable from the outside
[04:33:28] <gamara> to be cleaner
[04:33:45] <gamara> I guess I could use inheritance 
[04:33:50] <Izem> quartz: yeah you probably have to use their stuff
[04:34:32] <quartz> Izem: But there are not methods... like how am I suppose to iterate through their singly-lined list?
[04:34:34] <InPhase> gamara: Did you explain the problem above?  Your last pastebin is a tiny fragment.
[04:34:56] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:35:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:35:43] <gamara> I have 3 classes, ToJSON, ToArray. They all inherit the method format_value(Null input) from To, where I want to access the member variable of Null.
[04:36:09] <gamara> so I declared those 3 classes as friends in Null so  I could access the member variable in format_value(Null imput)
[04:36:21] <gamara> but it isn't working its giving me the error at the bottom of the pastebin
[04:36:34] <gamara> format_value is a static const function
[04:36:58] <Izem> quartz: such is leetcode 
[04:37:26] <quartz> Izem: Can you give me a hint on how to do this? I'm totally lost, haha.
[04:37:32] <gamara> You call next on it
[04:37:48] <gamara> node->next
[04:37:55] <gamara> will give you the reference to the next node
[04:38:21] <gamara> the node simply contains two member variables, a reference to the next node, and a value that is contained in the node
[04:38:49] <quartz> gamara: OK
[04:38:50] <gamara> I would recommend looking at linked list data structures on youtube. If you already know what linked lists are I wasn't trying to be rude just helpful.
[04:39:06] <quartz> Na you're fine. I'm trying to learn them now :) 
[04:39:38] <gamara> There are some great youtube videos on them honestly
[04:39:47] <gamara> you could benefit from coding the structures
[04:40:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[04:40:34] <gamara> that is how I got more comfortable with them
[04:41:11] <quartz> OK
[04:42:18] *** Joins: wildbill (wildbill@gateway/vpn/protonvpn/wildbill)
[04:42:39] <gamara> There are some good textbooks and youtube videos on the subject. Learn double linked lists, single linked lists,  circular lists
[04:43:30] <gamara> learning how to code the insert, remove functions will really give you a strong grasp on how they work
[04:43:31] *** Jacobis9100 is now known as Jacobis9000
[04:44:36] <Izem> is there an ai for resumes yet?
[04:44:42] <gamara> yes tons
[04:44:51] <gamara> search /r/webdev
[04:44:56] <gamara> on reddit
[04:45:05] <gamara> I have seen tons of posts of online ones
[04:45:22] <Izem> why would be it on webdev?
[04:45:35] <Izem> not /r/ai or something :P
[04:45:35] <gamara> everything that is made natively is made on the web lol
[04:46:10] <gamara> also easier to just go on a website to use such a utility than to download software
[04:47:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:47:52] <Izem> is it really? I'm downloading it anyways
[04:49:37] <Izem> it's too bad graphics was an after thought in unix
[04:50:59] <gamara> I meant install rather than download
[04:52:00] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Remote host closed the connection)
[04:52:50] *** Joins: pavonia (~user@user/siracusa)
[04:52:55] <Izem> yeah, I did find it sad how little people sign their stuff for installing
[04:53:08] <Izem> and I do remember installing some stuff on windows being cursed
[04:53:12] <Izem> like adobe products
[04:54:28] <Guest80> hello. how do i convert raw binary data from debugger (that exists on stack) to human readable form. can i loop through each. chunk of data and flip bytes or is.there way to unpsck it automatically and handle little endian. issue
[04:54:56] <Guest80> example I have a program where I store say "hello world" in a variable in a function and i dump the stack in raw hex to a file and i want to parse it
[04:55:23] <InPhase> Guest80: Step 1 is to figure out what data you're working with.  Everything is raw binary data.
[04:55:26] <Guest80> and get "hello world" back from hex regardless of machine
[04:55:52] <Izem> print
[04:55:57] <Izem> at least in gdb
[04:59:36] <Guest80> ok actually think is dumb question if its just a char array i dont have to worry i guess.
[04:59:44] <Guest80> thanks
[05:00:14] <gamara> Izem autoruns provided by microsoft is pretty good at dealing with adobe products since you can kill their startup scripts/apps
[05:01:12] <Guest80> guess for array of struct if I just have sequence of raw bytes then itd be more complicated? 
[05:01:36] <Guest80> to get back actual values from raw bytes in memory
[05:01:53] *** Quits: nekodesu (~nano@user/nekobit) (Killed (NickServ (GHOST command used by nekobit!~desu@user/nekobit)))
[05:01:57] <gamara> I am pretty sure structs are just stored contiguously in memory
[05:02:25] <gamara> so if you know the types you can just parse them based on size
[05:02:38] <Izem> whatever you want I'm pretty sure you can display it with print
[05:02:54] <gamara> I guess it depends on the language though
[05:03:05] <gamara> I was speaking more from assembly
[05:03:24] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:04:32] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[05:05:40] *** Quits: beencubed (~beencubed@209.131.238.248) (Remote host closed the connection)
[05:07:35] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[05:07:35] *** Joins: nekodesu (~bit@user/nekobit)
[05:08:20] <Guest80> i guess I need to do more understanding of how something like b'\x11\x21' becomes a decimal value 
[05:08:27] <Guest80> my intuition is off 
[05:08:55] <Guest80> I could get it by converting to binary first then decimal but is easier way to just 'read' it off?
[05:08:56] <Izem> not clear what you are attempting
[05:09:35] *** Quits: nekodesu (~bit@user/nekobit) (Client Quit)
[05:09:54] *** Joins: nekodesu (~bit@user/nekobit)
[05:10:55] <Guest80> Izem im trying understand how data is stored in memory in real program. when I do int x = 11; example
[05:11:47] <Izem> dump the source file
[05:12:22] <gamara> Guest80 I recommend learning assembly
[05:12:46] <gamara> Assembly_Language_for_x86_Processors is a pretty good book
[05:12:59] <gamara> I have heard MASM is still widely used
[05:13:05] <gamara> but NASM is good too
[05:14:05] <Guest80> i learned some before then forgot it all
[05:14:06] <gamara> If you learn assembly, which is just machine instructions, you will learn how modern programming languages work
[05:14:43] <gamara> loops are essentially goto statements
[05:14:50] <Guest80> no book really explains it well
[05:14:55] <Guest80> in actual detail 
[05:14:59] <gamara> yeah I took a course in it in university
[05:15:14] <Izem> yeah they do
[05:15:15] <gamara> learning it by yourself is difficult
[05:15:26] <gamara> that textbook I linked is really good
[05:15:31] <gamara> if you can get through the first few chapters
[05:15:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:16:09] <vdamewood> Hi, people etc.
[05:16:36] <gamara> You can definitely find notes and assembly courses from universities online
[05:16:38] <gamara> and problems
[05:16:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[05:17:21] *** Quits: gamara (~gamara@66-203-186-167.ded.execulink.com) (Quit: Client closed)
[05:17:56] <vdamewood> Kernel programming is like children's toyw... some assembly required.
[05:18:04] <vdamewood> s/toyw/toys/
[05:19:05] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 248 seconds)
[05:19:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:19:38] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:21:19] <Izem> Guest80: try objdump if on linux
[05:21:31] * arahael twacks vdamewood with a trout.
[05:21:37] *** Joins: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[05:21:37] *** Quits: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[05:21:37] *** Joins: BenLand100 (~bland@user/benland100)
[05:21:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[05:21:42] <Izem> lol
[05:21:56] * vdamewood grabs the trout, cooks it, and eats it.
[05:23:33] *** Joins: lunarkitty (uid501895@user/pyra)
[05:24:23] *** Joins: webnet4 (~0x100@32.211.211.39)
[05:25:05] <Izem> has anyone every seen a big open source project change their build system?
[05:25:53] <webnet4> the hot new thing going on is people switching to meson
[05:26:06] <webnet4> mesa for example
[05:26:12] <webnet4> probably xorg by now too
[05:27:37] <d3x0r> kde moved to cmake at some point
[05:28:24] <Izem> yeah good example
[05:29:58] <vdamewood> I don't remember if the change happened in XFree86 or in Xorg, but at some point the codebase used imake for its build system, which was bespoke to X11.
[05:30:40] <vdamewood> I personally wouldn't switch to meson for one simple reasion, meson itself has dependencies.
[05:31:22] <vdamewood> (And to me, a build system generator should have no hard requirements that don't come with the OS.)
[05:31:54] <vdamewood> d3x0r: I forget, what was KDE on before the switch, Autotools?
[05:32:32] <d3x0r> probably - i was never a fan of KDE; just saw it happen from the cmake side
[05:32:38] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:32:50] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:32:51] *** Joins: webnet4 (~0x100@32.211.211.39)
[05:33:12] <d3x0r> there were quite a few patches they submitted to make cmake better (and support themselves)
[05:39:27] <vdamewood> When was this in terms of cmake versions?
[05:45:27] *** Joins: lil_isaac (~lil_isaac@159.48.55.95)
[05:46:20] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 245 seconds)
[05:48:32] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:51:32] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[05:53:08] <vdamewood> Well, damn. CMake's documentation doesn't specify release dates so it's hard to compare release dates with KDE's transition timeline. But it looks like it was well before CMake 2.8.12.
[05:54:55] <d3x0r> around there...
[05:58:33] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[06:02:13] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 258 seconds)
[06:02:46] *** Quits: wildbill (wildbill@gateway/vpn/protonvpn/wildbill) (Ping timeout: 268 seconds)
[06:03:28] *** Quits: pulse (~pulse@user/pulse) (Quit: brlbrlbrbl)
[06:03:44] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[06:05:50] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:07:30] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:07:58] <vdamewood> I was wondering if KDE was the catalyst for 'Ne CMake'.
[06:08:06] <vdamewood> New*
[06:09:02] *** Quits: Samian (~Sami@174.27.107.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:02] <d3x0r> it's one-command per line, and eerything is a function - they might as well have done it with lexpressions instead.... (if blah) vs if( blah ) 
[06:10:22] <d3x0r> (makes it an annoying language to use)  and I use ';' to end lines too much which is a fatal parse error
[06:11:35] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:12:22] *** Quits: death916 (~death916@user/death916) (Ping timeout: 272 seconds)
[06:13:13] *** Quits: lil_isaac (~lil_isaac@159.48.55.95) (Quit: Konversation terminated!)
[06:14:38] *** Quits: ixil_ (~ixil@net-2001-067c-10ec-574f-8000-0000-0000-008d.v6.ethz.ch) (Remote host closed the connection)
[06:15:11] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:15:35] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:15:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[06:18:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 248 seconds)
[06:19:36] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:19:42] *** Quits: xff0x (~xff0x@2001:1a81:52ed:2b00:dae0:b3ed:9593:292a) (Ping timeout: 245 seconds)
[06:21:51] *** Joins: xff0x (~xff0x@2001:1a81:5326:b600:845d:acc9:3c7f:1b89)
[06:31:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:32:30] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[06:32:31] *** brabrax_ is now known as brabrax
[06:36:59] *** Joins: Samian (~Sami@2600:380:4b7e:ecd3:1c1f:71e5:e905:19cb)
[06:41:13] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 248 seconds)
[06:42:08] *** Quits: Samian (~Sami@2600:380:4b7e:ecd3:1c1f:71e5:e905:19cb) (Ping timeout: 272 seconds)
[06:48:02] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 245 seconds)
[06:52:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:53:16] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[06:54:01] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[06:55:23] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9) (Remote host closed the connection)
[06:55:53] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9)
[06:57:38] *** Quits: zaher_ (~zaher@37.48.152.182) (Ping timeout: 268 seconds)
[06:57:45] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 248 seconds)
[06:58:37] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:58:43] *** Joins: gggp__ (~gggp@114.245.111.117)
[07:08:32] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 258 seconds)
[07:08:52] <lockywolf_> is there something like a "wait socket" for ssh?
[07:09:21] <lockywolf_> i.e., suppose you want to connect to a server by ssh, that will start "at some point later"
[07:09:56] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:10:00] <lockywolf_> the first connect will fail, so we need to be retrying until it succeeds
[07:10:21] *** Joins: webnet4 (~0x100@32.211.211.39)
[07:11:03] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[07:12:14] *** Quits: nekodesu (~bit@user/nekobit) (Quit: free(neko);)
[07:12:34] *** Joins: gggp_ (~gggp@114.243.61.163)
[07:14:26] <Guest80> i feel like a complete hack now cause I dont know assembly language 
[07:15:49] *** Quits: gggp__ (~gggp@114.245.111.117) (Ping timeout: 258 seconds)
[07:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:18:27] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 245 seconds)
[07:22:34] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[07:25:23] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[07:25:58] <lockywolf_> vdamewood, KDE used it's own thing called unsermake
[07:26:41] <lockywolf_> imake is also used by CDE
[07:26:54] <lockywolf_> they are moving towards autotools though
[07:28:58] <arahael> lockywolf_: Why are they moving towards autotools?
[07:29:03] *** Quits: anton (anton@tloks.com) (Quit: anton)
[07:29:12] *** Joins: anton (anton@tloks.com)
[07:30:13] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:31:45] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[07:31:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:35:23] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[07:35:25] *** Joins: gravypod (~gravypod@user/gravypod)
[07:35:31] <gravypod> Has anyone implemented a fuse file system? Do inodes need to be persistent for a specific file path? so /foobar.txt always maps to 2 on each remount or is it ok to return a new inode id across sessions?
[07:36:29] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 268 seconds)
[07:39:34] *** Joins: esran (~esran@cb.conical-effort.net)
[07:39:59] <arahael> Does anyone know of a utility that lets you convert between .tar formats?
[07:40:05] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[07:40:34] <Izem> what do you mean?
[07:40:48] <arahael> Eg, I want to convert a .tar.gz (that is a Pax tar format that is gzip compressed) file to a GNU Tar format that is also gzip comppressed.
[07:41:19] <Izem> oh
[07:41:26] <Izem> no clue
[07:41:55] <Izem> maybe there is something made based on libarchive
[07:41:58] <arahael> I'll probably just hack it: uncompress, recompress.
[07:42:25] <arahael> Ah, well, I suspect libarchive itself will handle the original pax format just fine.  What I should do is move my application to use libarchive instead.
[07:42:42] <Izem> great
[07:43:02] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[07:43:36] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:48:07] <arahael> Yep - just haven't just yet.
[07:51:52] <jamea> c# any advice?, https://bpa.st/OVWA  when press f5 not take effect, not see the lCountEmpacadoras on radPanel2 any advicec why?
[07:51:53] <bayaz> Title: View paste OVWA 
[07:52:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[07:52:33] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[07:53:51] <arahael> jamea: f5 isn't f2 nor is it f3.
[07:54:13] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[07:58:29] <Izem> would you say most compilers are large and not simple to build?
[07:59:45] <jamea> sorry i changed to f3
[07:59:48] <jamea> new code
[07:59:48] <jamea> radPanel2.
[07:59:55] <jamea> https://bpa.st/FMGQ
[07:59:56] <bayaz> Title: View paste FMGQ 
[08:00:40] *** Joins: Julius_ (~Julius76@2a02:810b:c640:514:4930:61c3:f0be:4b4f)
[08:03:40] <jamea> see: https://pasteboard.co/Kg5TKPv.png
[08:03:43] <bayaz> Title: Pasteboard - Uploaded Image 
[08:04:02] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[08:05:32] <arahael> jamea: Well, does the f2 work?  have you tried adding logging or setting breakpoints?  Does your keyboard require an 'fn' key to be hit first?
[08:05:51] <arahael> Izem: Depends on how you define "most" - but I would say, probably yes.
[08:06:56] <jamea> f2 worked fine
[08:10:17] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 248 seconds)
[08:12:42] <jamea> arahael any advice
[08:15:16] <newpy> do you know if anyone has had success with docker on WSL?
[08:15:24] <arahael> jamea: perhaps add logging then, help you figure out what went wrong.
[08:15:25] <newpy> oops
[08:15:43] <arahael> newpy: i would probably just use regular windows docker.
[08:16:07] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[08:17:41] <CyberTailor> what if i like simple filesystem structures but sqlite is faster and has relations (yum)...
[08:19:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:22:17] <newpy> arahael, you mean docker desktop with "enable wsl2" checked?
[08:25:53] <arahael> newpy: Oh, they have that checkbox now? But yes, I mean docker desktop.
[08:29:28] <jamea> arahael how ot? logg?
[08:30:03] *** Quits: zwr (~zwr@2804:d45:b966:fb00:26a:9b67:c1dc:9ceb) (Remote host closed the connection)
[08:31:22] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[08:32:34] <arahael> jamea: All it means is to print a message when something happens. But perhaps just set a breakpoint, if you don't have that setup.
[08:35:55] *** Quits: pizdets_ (~pizdets@183.182.111.17) (Ping timeout: 245 seconds)
[08:36:18] *** Joins: pizdets (~pizdets@183.182.115.82)
[08:39:19] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:40:26] <jamea> understand but not see the effect
[08:43:42] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[08:43:56] *** Joins: Geronimo (~Geronimo@user/geronimo)
[08:47:31] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[08:49:21] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[08:49:25] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[08:49:54] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[08:53:04] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[08:56:01] *** Joins: mei (~mei@user/mei)
[08:57:27] *** Joins: ji (uid72176@user/raj)
[08:57:36] <arahael> What do you mean? The effect is you can look at how the code is behaving?  f2 is clearly working, so there must be a bug with how you're implementing the handler for f3.
[08:58:27] *** ji is now known as raj
[08:59:38] <jamea> but lCountEmpacadoras actually is on rPanelCaptura
[08:59:49] <jamea> i need move to. radPanel2
[09:01:03] *** Quits: raj (uid72176@user/raj) (Client Quit)
[09:12:38] *** Quits: esran (~esran@cb.conical-effort.net) (*.net *.split)
[09:12:38] *** Quits: xff0x (~xff0x@2001:1a81:5326:b600:845d:acc9:3c7f:1b89) (*.net *.split)
[09:12:38] *** Quits: pavonia (~user@user/siracusa) (*.net *.split)
[09:12:38] *** Quits: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7) (*.net *.split)
[09:12:38] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:12:38] *** Quits: moose (~moose@user/moose) (*.net *.split)
[09:12:38] *** Quits: bluebird (~bluebird@user/bluebird) (*.net *.split)
[09:12:38] *** Quits: jamea (~jamea@177.239.85.103) (*.net *.split)
[09:12:38] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (*.net *.split)
[09:12:38] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (*.net *.split)
[09:12:38] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (*.net *.split)
[09:12:38] *** Quits: SmokenatorZ (~Smokenato@189.78.241.69) (*.net *.split)
[09:12:38] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[09:12:38] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[09:12:38] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (*.net *.split)
[09:12:38] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[09:12:38] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[09:12:38] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:12:38] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[09:12:38] *** Quits: ell (~ellie@user/ellie) (*.net *.split)
[09:12:38] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[09:12:38] *** Quits: mwbrown (~mwbrown@user/mwbrown) (*.net *.split)
[09:12:38] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (*.net *.split)
[09:12:38] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (*.net *.split)
[09:12:38] *** Quits: orbatos[m] (~orbatos@user/orbatos) (*.net *.split)
[09:12:39] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[09:12:39] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:12:39] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[09:12:39] *** Quits: MrMobius (~MrMobius@208.58.206.154) (*.net *.split)
[09:12:39] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (*.net *.split)
[09:12:39] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[09:12:39] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[09:12:39] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[09:12:39] *** Quits: anderson (~ande@134.209.221.71) (*.net *.split)
[09:12:39] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[09:12:39] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:12:39] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[09:12:39] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[09:12:39] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[09:12:39] *** Quits: mercenary (~mercenary@user/mercenary) (*.net *.split)
[09:12:39] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:12:39] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[09:12:39] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:12:39] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:12:39] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[09:12:39] *** Quits: interru (~interru@fs.host.decodem.io) (*.net *.split)
[09:12:39] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[09:12:39] *** Quits: les (znc@user/les) (*.net *.split)
[09:13:12] *** Joins: esran (~esran@cb.conical-effort.net)
[09:13:12] *** Joins: xff0x (~xff0x@2001:1a81:5326:b600:845d:acc9:3c7f:1b89)
[09:13:12] *** Joins: pavonia (~user@user/siracusa)
[09:13:12] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[09:13:12] *** Joins: flynn (~mcbloch@user/flynn)
[09:13:12] *** Joins: moose (~moose@user/moose)
[09:13:12] *** Joins: bluebird (~bluebird@user/bluebird)
[09:13:12] *** Joins: jamea (~jamea@177.239.85.103)
[09:13:12] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:13:12] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[09:13:12] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com)
[09:13:12] *** Joins: SmokenatorZ (~Smokenato@189.78.241.69)
[09:13:12] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[09:13:12] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[09:13:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com)
[09:13:12] *** Joins: mhmd (~mhmd@37.48.90.208)
[09:13:12] *** Joins: gry (~quassel@botters/gry)
[09:13:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:13:12] *** Joins: Teckla (~Teckla@user/teckla)
[09:13:12] *** Joins: ell (~ellie@user/ellie)
[09:13:12] *** Joins: mwbrown (~mwbrown@user/mwbrown)
[09:13:12] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[09:13:12] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[09:13:12] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[09:13:12] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[09:13:12] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:13:12] *** Joins: jess (~jess@libera/staff/jess)
[09:13:12] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[09:13:12] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[09:13:12] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[09:13:12] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[09:13:12] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[09:13:12] *** Joins: anderson (~ande@134.209.221.71)
[09:13:12] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[09:13:12] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:13:12] *** Joins: ds (~dshoreman@user/ds)
[09:13:12] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[09:13:12] *** Joins: mercenary (~mercenary@user/mercenary)
[09:13:12] *** Joins: matiss (~matiss@almalinux/web/matiss)
[09:13:12] *** Joins: deniska (~denis@user/deniska)
[09:13:12] *** Joins: Pajus (~Pajus@user/pajus)
[09:13:12] *** Joins: Henry151 (~bishop@user/henry151)
[09:13:12] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:13:12] *** Joins: jontxu (~jon@user/jontxu)
[09:13:12] *** Joins: interru (~interru@fs.host.decodem.io)
[09:13:12] *** Joins: les (znc@user/les)
[09:13:12] *** Joins: barlas (~aqeel@user/barlas)
[09:14:52] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[09:14:54] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9) (*.net *.split)
[09:14:54] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (*.net *.split)
[09:14:54] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa) (*.net *.split)
[09:14:54] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (*.net *.split)
[09:14:54] *** Quits: rifl (~user@user/rifl) (*.net *.split)
[09:14:54] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (*.net *.split)
[09:14:54] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[09:14:55] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:14:55] *** Quits: krin (sid500722@user/krin) (*.net *.split)
[09:14:55] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Puyo (sid500577@user/puyo) (*.net *.split)
[09:14:55] *** Quits: QuartzXtal (sid507167@id-507167.tooting.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: znemo (sid500529@id-500529.highgate.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: nf (~n@monade.li) (*.net *.split)
[09:14:55] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[09:14:55] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[09:14:55] *** Quits: c705 (c705@alpine/contributor/c705) (*.net *.split)
[09:14:55] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[09:14:55] *** Quits: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a) (*.net *.split)
[09:14:55] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (*.net *.split)
[09:14:55] *** Quits: cis (cis@user/cis) (*.net *.split)
[09:14:55] *** Quits: knielsen (~knielsen@mail.knielsen-hq.org) (*.net *.split)
[09:14:55] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[09:14:55] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[09:14:55] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[09:14:55] *** Quits: xsperry (~as@user/xsperry) (*.net *.split)
[09:14:55] *** Quits: sandman13 (sandman13@user/sandman13) (*.net *.split)
[09:14:56] *** Quits: segnior (~segnior@user/segnior) (*.net *.split)
[09:14:56] *** Quits: Notiche (~quassel@irk.rojekti.fi) (*.net *.split)
[09:14:56] *** Quits: fingercomp (~fingercom@fomalhaut.me) (*.net *.split)
[09:14:56] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[09:14:56] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[09:14:56] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (*.net *.split)
[09:14:56] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:14:56] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[09:14:56] *** Quits: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050) (*.net *.split)
[09:14:56] *** Quits: johan (~johan@user/johan) (*.net *.split)
[09:14:56] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:14:56] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:14:56] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[09:14:56] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[09:15:15] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9)
[09:15:15] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[09:15:15] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa)
[09:15:15] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[09:15:15] *** Joins: rifl (~user@user/rifl)
[09:15:15] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[09:15:15] *** Joins: V (~v@anomalous.eu)
[09:15:15] *** Joins: cis (cis@user/cis)
[09:15:15] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[09:15:15] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:15:15] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:15:15] *** Joins: bjs (sid190364@user/bjs)
[09:15:15] *** Joins: krin (sid500722@user/krin)
[09:15:15] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[09:15:15] *** Joins: Puyo (sid500577@user/puyo)
[09:15:15] *** Joins: QuartzXtal (sid507167@id-507167.tooting.irccloud.com)
[09:15:15] *** Joins: znemo (sid500529@id-500529.highgate.irccloud.com)
[09:15:15] *** Joins: nf (~n@monade.li)
[09:15:15] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[09:15:15] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:15:15] *** Joins: c705 (c705@alpine/contributor/c705)
[09:15:15] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[09:15:15] *** Joins: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a)
[09:15:15] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[09:15:15] *** Joins: knielsen (~knielsen@mail.knielsen-hq.org)
[09:15:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:15:15] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:15:15] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[09:15:15] *** Joins: xsperry (~as@user/xsperry)
[09:15:15] *** Joins: sandman13 (sandman13@user/sandman13)
[09:15:15] *** Joins: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050)
[09:15:15] *** Joins: segnior (~segnior@user/segnior)
[09:15:15] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[09:15:15] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[09:15:15] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[09:15:15] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[09:15:15] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[09:15:15] *** Joins: strudl (~strudl@user/strudl)
[09:15:15] *** Joins: akselmo (~akselmo@user/akselmo)
[09:15:15] *** Joins: johan (~johan@user/johan)
[09:15:15] *** Joins: baloona (~baloona@mail.baloona.de)
[09:15:15] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[09:15:15] *** Joins: pavelow (~pavelow@opticalchimp.com)
[09:15:15] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[09:15:24] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Max SendQ exceeded)
[09:15:24] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Max SendQ exceeded)
[09:16:10] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Ping timeout: 240 seconds)
[09:16:10] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Ping timeout: 240 seconds)
[09:16:10] *** Quits: Helmholtz (~leibnizma@user/helmholtz) (Ping timeout: 240 seconds)
[09:16:34] *** Quits: lockna (~lockna@2001:470:69fc:105::d697) (Ping timeout: 240 seconds)
[09:16:34] *** Quits: Guest3880 (~kamui-ren@2001:470:69fc:105::f74) (Ping timeout: 240 seconds)
[09:16:37] *** Quits: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a) (Ping timeout: 268 seconds)
[09:16:37] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Ping timeout: 268 seconds)
[09:16:40] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Ping timeout: 272 seconds)
[09:16:47] *** Quits: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d) (Ping timeout: 245 seconds)
[09:16:50] *** Quits: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8) (Ping timeout: 252 seconds)
[09:16:51] *** Quits: Alpha3031 (~alpha3031@wikipedia/alpha3031) (Ping timeout: 252 seconds)
[09:16:51] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[09:16:56] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Ping timeout: 256 seconds)
[09:16:58] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Ping timeout: 240 seconds)
[09:17:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:17:14] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Ping timeout: 272 seconds)
[09:17:14] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Ping timeout: 272 seconds)
[09:17:14] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Ping timeout: 268 seconds)
[09:17:14] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 268 seconds)
[09:17:39] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Ping timeout: 276 seconds)
[09:17:46] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:17:52] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 272 seconds)
[09:18:04] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[09:18:04] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[09:18:04] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:18:04] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[09:18:04] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[09:18:04] *** Quits: joj_ (~joj@jojeee.xyz) (*.net *.split)
[09:18:04] *** Quits: piou (~piou@user/piou) (*.net *.split)
[09:18:04] *** Quits: sweetfish (~sweetfish@user/sweetfish) (*.net *.split)
[09:18:04] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[09:18:04] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[09:18:04] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: psb (sid500598@user/psb) (*.net *.split)
[09:18:04] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[09:18:04] *** Quits: mjbatty (uid512825@id-512825.charlton.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: greyblue9 (sid500829@id-500829.charlton.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[09:18:04] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:18:04] *** Quits: elliewhatever (uid512890@id-512890.brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: znedw (~znedw@home.znedw.com) (*.net *.split)
[09:18:04] *** Quits: TwiZted (~TwiZted@user/twizted) (*.net *.split)
[09:18:04] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[09:18:04] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:10f5:2116:164:18ef) (*.net *.split)
[09:18:04] *** Quits: DrMax (~DrMax@node-1w7jra94757g16a2gga78pfnk.ipv6.telus.net) (*.net *.split)
[09:18:04] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[09:18:04] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:18:04] *** Quits: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de) (*.net *.split)
[09:18:04] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[09:18:04] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[09:18:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[09:18:04] *** Quits: tkob (tkob@user/thekingofbandit) (*.net *.split)
[09:18:04] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:18:04] *** Quits: Guest9019 (jaskal@user/jaskal) (*.net *.split)
[09:18:04] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[09:18:04] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:18:04] *** Quits: Buggys (~Buggys@2a01:4f8:150:91ed::2) (*.net *.split)
[09:18:05] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9) (*.net *.split)
[09:18:05] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa) (*.net *.split)
[09:18:05] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (*.net *.split)
[09:18:05] *** Quits: rifl (~user@user/rifl) (*.net *.split)
[09:18:05] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (*.net *.split)
[09:18:05] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[09:18:05] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:18:05] *** Quits: krin (sid500722@user/krin) (*.net *.split)
[09:18:05] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: Puyo (sid500577@user/puyo) (*.net *.split)
[09:18:05] *** Quits: QuartzXtal (sid507167@id-507167.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: znemo (sid500529@id-500529.highgate.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: nf (~n@monade.li) (*.net *.split)
[09:18:05] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[09:18:05] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[09:18:05] *** Quits: c705 (c705@alpine/contributor/c705) (*.net *.split)
[09:18:05] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[09:18:05] *** Quits: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a) (*.net *.split)
[09:18:05] *** Quits: cis (cis@user/cis) (*.net *.split)
[09:18:05] *** Quits: knielsen (~knielsen@mail.knielsen-hq.org) (*.net *.split)
[09:18:05] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[09:18:05] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[09:18:05] *** Quits: xsperry (~as@user/xsperry) (*.net *.split)
[09:18:05] *** Quits: sandman13 (sandman13@user/sandman13) (*.net *.split)
[09:18:05] *** Quits: segnior (~segnior@user/segnior) (*.net *.split)
[09:18:05] *** Quits: Notiche (~quassel@irk.rojekti.fi) (*.net *.split)
[09:18:05] *** Quits: fingercomp (~fingercom@fomalhaut.me) (*.net *.split)
[09:18:05] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[09:18:05] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:18:05] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[09:18:05] *** Quits: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050) (*.net *.split)
[09:18:05] *** Quits: johan (~johan@user/johan) (*.net *.split)
[09:18:05] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:18:05] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:18:05] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[09:18:05] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[09:18:05] *** Quits: esran (~esran@cb.conical-effort.net) (*.net *.split)
[09:18:05] *** Quits: xff0x (~xff0x@2001:1a81:5326:b600:845d:acc9:3c7f:1b89) (*.net *.split)
[09:18:05] *** Quits: pavonia (~user@user/siracusa) (*.net *.split)
[09:18:05] *** Quits: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7) (*.net *.split)
[09:18:05] *** Quits: moose (~moose@user/moose) (*.net *.split)
[09:18:05] *** Quits: bluebird (~bluebird@user/bluebird) (*.net *.split)
[09:18:05] *** Quits: jamea (~jamea@177.239.85.103) (*.net *.split)
[09:18:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (*.net *.split)
[09:18:05] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (*.net *.split)
[09:18:05] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: SmokenatorZ (~Smokenato@189.78.241.69) (*.net *.split)
[09:18:05] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[09:18:05] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[09:18:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[09:18:05] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[09:18:05] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:18:05] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[09:18:05] *** Quits: ell (~ellie@user/ellie) (*.net *.split)
[09:18:05] *** Quits: mwbrown (~mwbrown@user/mwbrown) (*.net *.split)
[09:18:05] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (*.net *.split)
[09:18:05] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[09:18:05] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:18:05] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[09:18:06] *** Quits: MrMobius (~MrMobius@208.58.206.154) (*.net *.split)
[09:18:06] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (*.net *.split)
[09:18:06] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[09:18:06] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[09:18:06] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[09:18:06] *** Quits: anderson (~ande@134.209.221.71) (*.net *.split)
[09:18:06] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[09:18:06] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:18:06] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[09:18:06] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[09:18:06] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[09:18:06] *** Quits: mercenary (~mercenary@user/mercenary) (*.net *.split)
[09:18:06] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:18:06] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[09:18:06] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:18:06] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:18:06] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[09:18:06] *** Quits: interru (~interru@fs.host.decodem.io) (*.net *.split)
[09:18:06] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[09:18:06] *** Quits: les (znc@user/les) (*.net *.split)
[09:18:06] *** Quits: mei (~mei@user/mei) (*.net *.split)
[09:18:06] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (*.net *.split)
[09:18:06] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (*.net *.split)
[09:18:06] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[09:18:06] *** Quits: BenLand100 (~bland@user/benland100) (*.net *.split)
[09:18:06] *** Quits: Crescendo (~Crescendo@user/crescendo) (*.net *.split)
[09:18:06] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (*.net *.split)
[09:18:06] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (*.net *.split)
[09:18:06] *** Quits: JavaBean (~JavaBean@user/javabean) (*.net *.split)
[09:18:06] *** Quits: anon16 (~anon16@user/anon16) (*.net *.split)
[09:18:06] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (*.net *.split)
[09:18:06] *** Quits: DasBrain (~DasBrain@user/dasbrain) (*.net *.split)
[09:18:06] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[09:18:06] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[09:18:06] *** Quits: erica (~erica@user/erica) (*.net *.split)
[09:18:06] *** Quits: Neverloads (NeverLoad@freakshells.net) (*.net *.split)
[09:18:06] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[09:18:06] *** Quits: lockywolf_ (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (*.net *.split)
[09:18:06] *** Quits: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[09:18:06] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[09:18:06] *** Quits: srikavin (~srikavin@user/srikavin) (*.net *.split)
[09:18:06] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[09:18:06] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (*.net *.split)
[09:18:06] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[09:18:06] *** Quits: deathrat (sid14886@charlton.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: kwilczynski (sid379192@user/kwilczynski) (*.net *.split)
[09:18:06] *** Quits: df_data (sid466269@charlton.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: FoodMan_ (~glucose@194.110.13.12) (*.net *.split)
[09:18:06] *** Quits: reddit89_ (~user@user/reddit89) (*.net *.split)
[09:18:06] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[09:18:06] *** Quits: kmh_ (~kmh@p5dcc649e.dip0.t-ipconnect.de) (*.net *.split)
[09:18:06] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) (*.net *.split)
[09:18:06] *** Quits: shan (shan@cyblog/maintainer/shan) (*.net *.split)
[09:18:06] *** Quits: cache (~cache@user/cacheyourdreams) (*.net *.split)
[09:18:06] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (*.net *.split)
[09:18:06] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[09:18:06] *** Quits: cation (cation@user/cation) (*.net *.split)
[09:18:06] *** Quits: D-04 (~D-04@185.104.184.103) (*.net *.split)
[09:18:06] *** Quits: bin4ry (~bin4ry@128.199.135.148) (*.net *.split)
[09:18:06] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[09:18:06] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[09:18:06] *** Quits: arahael (~arahael@124.170.238.106) (*.net *.split)
[09:18:06] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (*.net *.split)
[09:18:06] *** Quits: causative (~halberd@user/causative) (*.net *.split)
[09:18:06] *** Quits: kaivai (~kaivai@user/kaivai) (*.net *.split)
[09:18:06] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[09:18:06] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) (*.net *.split)
[09:18:06] *** Quits: rwb (~augh@theguntretort.com) (*.net *.split)
[09:18:06] *** Quits: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net) (*.net *.split)
[09:18:06] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[09:18:06] *** Quits: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com) (*.net *.split)
[09:18:06] *** Quits: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[09:18:07] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (*.net *.split)
[09:18:07] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[09:18:07] *** Quits: nanowire (rob@user/nanowire) (*.net *.split)
[09:18:07] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[09:18:07] *** Quits: falx (~falx@user/falx) (*.net *.split)
[09:18:07] *** Quits: Batzy (~Batzy@user/batzy) (*.net *.split)
[09:18:07] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (*.net *.split)
[09:18:07] *** Quits: inee (~ine@wolowolo.com) (*.net *.split)
[09:18:07] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[09:18:07] *** Quits: APic (apic@apic.name) (*.net *.split)
[09:18:07] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[09:18:07] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[09:18:07] *** Quits: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:18:07] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[09:18:07] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[09:18:07] *** Quits: d10n (~d10n@user/d10n) (*.net *.split)
[09:18:07] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[09:18:07] *** Quits: kinduff4 (~kinduff@user/kinduff) (*.net *.split)
[09:18:07] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[09:18:07] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:18:07] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[09:18:07] *** Quits: askie (~askie@81.171.100.212) (*.net *.split)
[09:18:07] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (*.net *.split)
[09:18:07] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (*.net *.split)
[09:18:07] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[09:18:07] *** Quits: rany (~rany@user/rany) (*.net *.split)
[09:18:07] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (*.net *.split)
[09:18:07] *** Quits: Quietwalker (~X@24.162.16.145) (*.net *.split)
[09:18:07] *** Quits: smlckz (~smlckmatr@user/smlckz) (*.net *.split)
[09:18:07] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (*.net *.split)
[09:18:07] *** Quits: vin (~vin@user/crash) (*.net *.split)
[09:18:07] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[09:18:07] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:18:07] *** Quits: Gozrad (~Gozrad@46.232.210.50) (*.net *.split)
[09:18:07] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[09:18:07] *** Quits: paruh (~paruh@92.60.39.18) (*.net *.split)
[09:18:07] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:18:07] *** Quits: pyzozord (pyzozord@user/pyzozord) (*.net *.split)
[09:18:07] *** Quits: fspy (~fspy@user/fspy) (*.net *.split)
[09:18:07] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:07] *** Quits: skreech (~skreech@user/skreech) (*.net *.split)
[09:18:07] *** Quits: p0g0__ (~p0g0@216.211.147.11) (*.net *.split)
[09:18:07] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[09:18:07] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[09:18:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:18:08] *** Quits: geonic (~geonic@user/geonic) (*.net *.split)
[09:18:08] *** Quits: immibis_ (~hexchat@62.156.144.218) (*.net *.split)
[09:18:08] *** Quits: km2m (~km2m@1.116.81.184) (*.net *.split)
[09:18:08] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[09:18:08] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (*.net *.split)
[09:18:08] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[09:18:08] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[09:18:08] *** Quits: ishanjain (~ishan@li2028-175.members.linode.com) (*.net *.split)
[09:18:08] *** Quits: WarauSalesman (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net) (*.net *.split)
[09:18:08] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[09:18:08] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (*.net *.split)
[09:18:08] *** Quits: ghostbuster (~admin@user/ghostbuster) (*.net *.split)
[09:18:08] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[09:18:08] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[09:18:08] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[09:18:08] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[09:18:08] *** Quits: avery (sid501608@id-501608.highgate.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[09:18:08] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[09:18:08] *** Quits: pizdets (~pizdets@183.182.115.82) (*.net *.split)
[09:18:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (*.net *.split)
[09:18:08] *** Quits: gravypod (~gravypod@user/gravypod) (*.net *.split)
[09:18:08] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (*.net *.split)
[09:18:08] *** Quits: gggp_ (~gggp@114.243.61.163) (*.net *.split)
[09:18:08] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (*.net *.split)
[09:18:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[09:18:08] *** Quits: inky (~inky__@46.36.119.19) (*.net *.split)
[09:18:08] *** Quits: Shiva (LordShiva@user/one39dev) (*.net *.split)
[09:18:08] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:18:08] *** Quits: soapsudsxx (~soapsudsx@141.193.188.144) (*.net *.split)
[09:18:08] *** Quits: Doffi (~doffi@91.132.197.188) (*.net *.split)
[09:18:08] *** Quits: hard-drive (~hard-driv@cpe-24-163-84-4.nc.res.rr.com) (*.net *.split)
[09:18:08] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[09:18:08] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[09:18:08] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (*.net *.split)
[09:18:08] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[09:18:08] *** Quits: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net) (*.net *.split)
[09:18:08] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[09:18:08] *** Quits: liam (sid7517@brockwell.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: hsiktas (sid224847@tooting.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: humky (~humky@user/humky) (*.net *.split)
[09:18:08] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (*.net *.split)
[09:18:08] *** Quits: shredder (~user@user/shredder) (*.net *.split)
[09:18:08] *** Quits: Lyn (~Lyn@user/law) (*.net *.split)
[09:18:08] *** Quits: xa0s (~xa0s@mab.sdf.org) (*.net *.split)
[09:18:08] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[09:18:08] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:18:08] *** Quits: KeziahMason (~mnrmnaugh@68.162.206.56) (*.net *.split)
[09:18:08] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[09:18:08] *** Quits: nvmd (~nvmd@user/nvmd) (*.net *.split)
[09:18:08] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[09:18:08] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[09:18:08] *** Quits: ghost64 (~ghost64@user/ghost64) (*.net *.split)
[09:18:08] *** Quits: BrkThruCopyWritr (~ttt@107-190-27-93.cpe.teksavvy.com) (*.net *.split)
[09:18:08] *** Quits: novns (~novns@user/novns) (*.net *.split)
[09:18:08] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[09:18:08] *** Quits: caramel_ (~caramel@user/caramel) (*.net *.split)
[09:18:08] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) (*.net *.split)
[09:18:08] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[09:18:08] *** Quits: em (~em@li247-180.members.linode.com) (*.net *.split)
[09:18:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[09:18:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (*.net *.split)
[09:18:08] *** Quits: addc1820643 (~addc182@host86-131-45-199.range86-131.btcentralplus.com) (*.net *.split)
[09:18:09] *** Quits: gdarko (~me@dg.mk) (*.net *.split)
[09:18:09] *** Quits: xeno (~xeno@user/xeno) (*.net *.split)
[09:18:09] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[09:18:09] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (*.net *.split)
[09:18:09] *** Quits: launchd (examknow@bitbot/launchd) (*.net *.split)
[09:18:09] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:18:09] *** Quits: mannu_ (mannu@wodanaz.se) (*.net *.split)
[09:18:09] *** Quits: matrael_ (matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[09:18:09] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[09:18:09] *** Quits: nulleip_ (~luiz@189.34.167.234) (*.net *.split)
[09:18:09] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (*.net *.split)
[09:18:09] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[09:18:09] *** Quits: u4ia (~u4ia@88-159-0-88.fixed.kpn.net) (*.net *.split)
[09:18:09] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (*.net *.split)
[09:18:09] *** Quits: Julius_ (~Julius76@2a02:810b:c640:514:4930:61c3:f0be:4b4f) (*.net *.split)
[09:18:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[09:18:09] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[09:18:09] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (*.net *.split)
[09:18:09] *** Quits: inky_ (~inky@46.36.119.19) (*.net *.split)
[09:18:09] *** Quits: jamesatjaminit (~jamesatja@user/jamesatjaminit) (*.net *.split)
[09:18:09] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[09:18:09] *** Quits: gambl0re (~gambl0re@104.247.245.205) (*.net *.split)
[09:18:09] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (*.net *.split)
[09:18:09] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (*.net *.split)
[09:18:09] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[09:18:09] *** Quits: inom (~inom@176.59.116.194) (*.net *.split)
[09:18:09] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (*.net *.split)
[09:18:09] *** Quits: menace (~someone@user/menace) (*.net *.split)
[09:18:09] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:e5d0:36e1:dc57:f933) (*.net *.split)
[09:18:09] *** Quits: NChief (~nchief@irc.nortv.net) (*.net *.split)
[09:18:09] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:91bb:bd77:ba3e:76cd) (*.net *.split)
[09:18:09] *** Quits: ugjka (~ugjka@ugjka.net) (*.net *.split)
[09:18:09] *** Quits: buffet (~buffet@buffet.sh) (*.net *.split)
[09:18:09] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (*.net *.split)
[09:18:09] *** Quits: mcspud (~mcspud@66.55.76.204) (*.net *.split)
[09:18:09] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[09:18:09] *** Quits: Thedarkb (~Thedarkb@85.255.232.58) (*.net *.split)
[09:18:09] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (*.net *.split)
[09:18:09] *** Quits: Suchiman (sid3778@about/csharp/suchiman) (*.net *.split)
[09:18:09] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: Liothen (sid23291@id-23291.brockwell.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (*.net *.split)
[09:18:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (*.net *.split)
[09:18:09] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (*.net *.split)
[09:18:09] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[09:18:09] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:18:09] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[09:18:09] *** Quits: tofran (~tofran@37.189.158.134) (*.net *.split)
[09:18:09] *** Quits: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4) (*.net *.split)
[09:18:09] *** Quits: utunbu_ (~utunbu@user/utunbu) (*.net *.split)
[09:18:09] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[09:18:09] *** Quits: YHVH (~yhvh@2601:982:8300:8090:4d87:c05e:6cd6:94a1) (*.net *.split)
[09:18:09] *** Quits: swinnenb (~swinnenb@user/swinnenb) (*.net *.split)
[09:18:09] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[09:18:09] *** Quits: Cyp (~cyp@192038129116.mbb.telenor.dk) (*.net *.split)
[09:18:09] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (*.net *.split)
[09:18:09] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[09:18:09] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[09:18:09] *** Quits: bioparco (~bioparco@user/bioparco) (*.net *.split)
[09:18:09] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:18:09] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: glguy (x@libera/staff/glguy) (*.net *.split)
[09:18:09] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[09:18:09] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[09:18:09] *** Quits: russjr086 (~russjr08@fw.internal.russ.network) (*.net *.split)
[09:18:09] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[09:18:09] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[09:18:09] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[09:18:09] *** Quits: MeatNit (NeatNit@powered.by.jay2k1.com) (*.net *.split)
[09:18:09] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[09:18:09] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (*.net *.split)
[09:18:10] *** Quits: mawk (mawk@wireguard/contributor/mawk) (*.net *.split)
[09:18:10] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[09:18:10] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[09:18:10] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (*.net *.split)
[09:18:10] *** Quits: bocaneri (~bismilah@about/linux/staff/sauvin) (*.net *.split)
[09:18:10] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:18:10] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[09:18:10] *** Quits: stoneware (~stoneware@user/stoneware) (*.net *.split)
[09:18:10] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[09:18:10] *** Quits: derpy (~quassel@dslb-002-203-230-167.002.203.pools.vodafone-ip.de) (*.net *.split)
[09:18:10] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (*.net *.split)
[09:18:10] *** Quits: micrex22 (~quassel@user/micrex22) (*.net *.split)
[09:18:10] *** Quits: Davros_ (~dalek@pathweb.org) (*.net *.split)
[09:18:10] *** Quits: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:18:10] *** Quits: cisco87 (~quassel@lnxg33k.com) (*.net *.split)
[09:18:10] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (*.net *.split)
[09:18:10] *** Quits: jcarpenter2 (rofl@2603:3016:1e01:b9c0:20b3:fc15:12c5:30d8) (*.net *.split)
[09:18:10] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) (*.net *.split)
[09:18:10] *** Quits: Ruxnor (kevin@user/kddlb) (*.net *.split)
[09:18:10] *** Quits: shenanigans (~shenaniga@51.15.76.217) (*.net *.split)
[09:18:10] *** Quits: RedNifre__ (~michael@dslb-002-201-038-051.002.201.pools.vodafone-ip.de) (*.net *.split)
[09:18:10] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:18:10] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[09:18:10] *** Quits: cronos (~cronos@user/cronos) (*.net *.split)
[09:18:10] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (*.net *.split)
[09:18:10] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[09:18:10] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:18:10] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (*.net *.split)
[09:18:10] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[09:18:10] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[09:18:10] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[09:18:10] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[09:18:10] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[09:18:10] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[09:18:10] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[09:18:10] *** Quits: picooz (~picooz@user/picooz) (*.net *.split)
[09:18:10] *** Quits: umimaso (~umimaso@188.166.147.131) (*.net *.split)
[09:18:10] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[09:18:10] *** Quits: snep (craftxbox@2001:bc8:654:1c02::1) (*.net *.split)
[09:18:10] *** Quits: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com) (*.net *.split)
[09:18:10] *** Quits: raczka (~raczka@dedicated-aid6.rev.nazwa.pl) (*.net *.split)
[09:18:10] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[09:18:10] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[09:18:10] *** Quits: KillerWasp_ (~KillerWas@96.126.121.103) (*.net *.split)
[09:18:10] *** Quits: cornduk (~cornduck@li1755-129.members.linode.com) (*.net *.split)
[09:18:10] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:18:10] *** Quits: spike_spiegel5 (~spike_spi@static.200.4.251.148.clients.your-server.de) (*.net *.split)
[09:18:10] *** Quits: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt) (*.net *.split)
[09:18:10] *** Quits: luiserebii (~luiserebi@li1568-23.members.linode.com) (*.net *.split)
[09:18:10] *** Quits: oldlaptop (~quassel@45.63.78.126) (*.net *.split)
[09:18:10] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (*.net *.split)
[09:18:10] *** Quits: thebob (~thebob@user/thebob) (*.net *.split)
[09:18:10] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (*.net *.split)
[09:18:10] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[09:18:10] *** Quits: BGL (~twenty@75-149-171-58-Washington.hfc.comcastbusiness.net) (*.net *.split)
[09:18:10] *** Quits: Telvana (capo@user/telvana) (*.net *.split)
[09:18:10] *** Quits: dmu (~darkmusic@user/darkmusic) (*.net *.split)
[09:18:10] *** Quits: LjL (~ljl@user/ljl) (*.net *.split)
[09:18:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (*.net *.split)
[09:18:10] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[09:18:10] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[09:18:10] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (*.net *.split)
[09:18:10] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (*.net *.split)
[09:18:10] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[09:18:10] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[09:18:10] *** Quits: Tom1 (~tom@user/ghostdragon) (*.net *.split)
[09:18:10] *** Quits: Endust (leggt@iceland.sdf.org) (*.net *.split)
[09:18:10] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[09:18:10] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[09:18:10] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[09:18:10] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[09:18:11] *** Quits: tanto (~tanto@178.62.223.32) (*.net *.split)
[09:18:11] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (*.net *.split)
[09:18:11] *** Quits: |smlckz| (smlckz@user/smlckz) (*.net *.split)
[09:18:11] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[09:18:11] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:11] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:18:11] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:18:11] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[09:18:11] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[09:18:11] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[09:18:11] *** Quits: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp) (*.net *.split)
[09:18:11] *** Quits: Bigcheese_ (~quassel@107.182.234.200) (*.net *.split)
[09:18:11] *** Quits: davve_ (davve@bsd.douchedata.com) (*.net *.split)
[09:18:11] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[09:18:11] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (*.net *.split)
[09:18:11] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (*.net *.split)
[09:18:11] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (*.net *.split)
[09:18:11] *** Quits: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net) (*.net *.split)
[09:18:11] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[09:18:11] *** Quits: justache (~justache@user/justache) (*.net *.split)
[09:18:11] *** Quits: Square (~a@178.62.91.8) (*.net *.split)
[09:18:11] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:18:11] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[09:18:11] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[09:18:11] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:18:11] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (*.net *.split)
[09:18:11] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[09:18:11] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[09:18:11] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (*.net *.split)
[09:18:11] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:18:11] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:18:11] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:18:11] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (*.net *.split)
[09:18:11] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[09:18:11] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:18:11] *** Quits: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:18:11] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[09:18:11] *** Quits: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com) (*.net *.split)
[09:18:11] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:18:11] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:18:11] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[09:18:11] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[09:18:11] *** Quits: glider_ (~glider@user/glider) (*.net *.split)
[09:18:11] *** Quits: echoreply1 (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (*.net *.split)
[09:18:11] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[09:18:11] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[09:18:11] *** Quits: ShockTohp (~kevin@155.138.224.160) (*.net *.split)
[09:18:11] *** Quits: brandon_ (~brandon@user/brandon) (*.net *.split)
[09:18:11] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:18:11] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:18:11] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (*.net *.split)
[09:18:11] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[09:18:11] *** Quits: myon98 (~myon98@user/myon98) (*.net *.split)
[09:18:11] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[09:18:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (*.net *.split)
[09:18:11] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (*.net *.split)
[09:18:11] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[09:18:11] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:18:11] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:18:11] *** Quits: w0ng (~w0ng@103.1.212.148) (*.net *.split)
[09:18:11] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[09:18:11] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (*.net *.split)
[09:18:12] *** Quits: ^[ (~user@user//x-8473491) (*.net *.split)
[09:18:12] *** Quits: Valware (~val@Valeyard/Developer/Valware) (*.net *.split)
[09:18:12] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[09:18:12] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:18:12] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[09:18:12] *** Quits: biberao (~Unknown@user/biberao) (*.net *.split)
[09:18:12] *** Quits: Guest282 (ianmacd@faust.caliban.org) (*.net *.split)
[09:18:12] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[09:18:12] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:18:12] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (*.net *.split)
[09:18:12] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[09:18:12] *** Quits: lf94 (~lf94@2604:a880:cad:d0::cd6:8001) (*.net *.split)
[09:18:12] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[09:18:12] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (*.net *.split)
[09:18:12] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:18:12] *** Quits: backslash (~backslash@user/backslash) (*.net *.split)
[09:18:12] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[09:18:12] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[09:18:12] *** Quits: edenist (edenist@rdns.robotprofessor.net) (*.net *.split)
[09:18:12] *** Quits: pierrepaul (sid504261@id-504261.highgate.irccloud.com) (*.net *.split)
[09:18:12] *** Quits: t^ (~thomas@2001:41d0:2:a84:1::6) (*.net *.split)
[09:18:12] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[09:18:12] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[09:18:12] *** Quits: boycott (~boycott@user/boycott) (*.net *.split)
[09:18:36] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:18:36] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[09:18:36] *** Joins: pavelow (~pavelow@opticalchimp.com)
[09:18:36] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[09:18:36] *** Joins: baloona (~baloona@mail.baloona.de)
[09:18:36] *** Joins: johan (~johan@user/johan)
[09:18:36] *** Joins: akselmo (~akselmo@user/akselmo)
[09:18:36] *** Joins: strudl (~strudl@user/strudl)
[09:18:36] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[09:18:36] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[09:18:36] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[09:18:36] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[09:18:36] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[09:18:36] *** Joins: segnior (~segnior@user/segnior)
[09:18:36] *** Joins: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050)
[09:18:36] *** Joins: sandman13 (sandman13@user/sandman13)
[09:18:36] *** Joins: xsperry (~as@user/xsperry)
[09:18:36] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[09:18:36] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:18:36] *** Joins: knielsen (~knielsen@mail.knielsen-hq.org)
[09:18:36] *** Joins: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a)
[09:18:36] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[09:18:36] *** Joins: c705 (c705@alpine/contributor/c705)
[09:18:36] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:18:36] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[09:18:36] *** Joins: nf (~n@monade.li)
[09:18:36] *** Joins: znemo (sid500529@id-500529.highgate.irccloud.com)
[09:18:36] *** Joins: QuartzXtal (sid507167@id-507167.tooting.irccloud.com)
[09:18:36] *** Joins: Puyo (sid500577@user/puyo)
[09:18:36] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[09:18:36] *** Joins: krin (sid500722@user/krin)
[09:18:36] *** Joins: bjs (sid190364@user/bjs)
[09:18:36] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:18:36] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[09:18:36] *** Joins: cis (cis@user/cis)
[09:18:36] *** Joins: V (~v@anomalous.eu)
[09:18:36] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[09:18:36] *** Joins: rifl (~user@user/rifl)
[09:18:36] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[09:18:36] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa)
[09:18:36] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[09:18:36] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9)
[09:18:36] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[09:18:36] *** Joins: barlas (~aqeel@user/barlas)
[09:18:36] *** Joins: les (znc@user/les)
[09:18:36] *** Joins: interru (~interru@fs.host.decodem.io)
[09:18:36] *** Joins: jontxu (~jon@user/jontxu)
[09:18:36] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:18:36] *** Joins: Henry151 (~bishop@user/henry151)
[09:18:36] *** Joins: Pajus (~Pajus@user/pajus)
[09:18:36] *** Joins: deniska (~denis@user/deniska)
[09:18:36] *** Joins: matiss (~matiss@almalinux/web/matiss)
[09:18:36] *** Joins: mercenary (~mercenary@user/mercenary)
[09:18:36] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[09:18:36] *** Joins: ds (~dshoreman@user/ds)
[09:18:36] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:18:36] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[09:18:36] *** Joins: anderson (~ande@134.209.221.71)
[09:18:36] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[09:18:36] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[09:18:36] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[09:18:36] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[09:18:36] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[09:18:36] *** Joins: jess (~jess@libera/staff/jess)
[09:18:36] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:18:36] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[09:18:36] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[09:18:36] *** Joins: mwbrown (~mwbrown@user/mwbrown)
[09:18:36] *** Joins: ell (~ellie@user/ellie)
[09:18:36] *** Joins: Teckla (~Teckla@user/teckla)
[09:18:36] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:18:36] *** Joins: gry (~quassel@botters/gry)
[09:18:36] *** Joins: mhmd (~mhmd@37.48.90.208)
[09:18:36] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com)
[09:18:36] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[09:18:36] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[09:18:36] *** Joins: SmokenatorZ (~Smokenato@189.78.241.69)
[09:18:36] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com)
[09:18:36] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[09:18:36] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:18:36] *** Joins: jamea (~jamea@177.239.85.103)
[09:18:36] *** Joins: bluebird (~bluebird@user/bluebird)
[09:18:36] *** Joins: moose (~moose@user/moose)
[09:18:36] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[09:18:36] *** Joins: pavonia (~user@user/siracusa)
[09:18:36] *** Joins: xff0x (~xff0x@2001:1a81:5326:b600:845d:acc9:3c7f:1b89)
[09:18:36] *** Joins: esran (~esran@cb.conical-effort.net)
[09:18:36] *** Joins: mei (~mei@user/mei)
[09:18:36] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:18:36] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[09:18:36] *** Joins: Geronimo (~Geronimo@user/geronimo)
[09:18:36] *** Joins: pizdets (~pizdets@183.182.115.82)
[09:18:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:18:36] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[09:18:36] *** Joins: Julius_ (~Julius76@2a02:810b:c640:514:4930:61c3:f0be:4b4f)
[09:18:36] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[09:18:36] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[09:18:36] *** Joins: gravypod (~gravypod@user/gravypod)
[09:18:36] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:18:36] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[09:18:36] *** Joins: gggp_ (~gggp@114.243.61.163)
[09:18:36] *** Joins: brabrax (~brabrax@user/brabrax)
[09:18:36] *** Joins: beencubed (~beencubed@209.131.238.248)
[09:18:36] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[09:18:36] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[09:18:36] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[09:18:36] *** Joins: BenLand100 (~bland@user/benland100)
[09:18:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[09:18:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[09:18:36] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[09:18:36] *** Joins: inky_ (~inky@46.36.119.19)
[09:18:36] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[09:18:36] *** Joins: jamesatjaminit (~jamesatja@user/jamesatjaminit)
[09:18:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[09:18:36] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:18:36] *** Joins: inky (~inky__@46.36.119.19)
[09:18:36] *** Joins: JavaBean (~JavaBean@user/javabean)
[09:18:36] *** Joins: anon16 (~anon16@user/anon16)
[09:18:36] *** Joins: Shiva (LordShiva@user/one39dev)
[09:18:36] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:18:36] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[09:18:36] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[09:18:36] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[09:18:36] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:18:36] *** Joins: jinsun (~quassel@user/jinsun)
[09:18:36] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[09:18:36] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[09:18:36] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:18:36] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[09:18:36] *** Joins: erica (~erica@user/erica)
[09:18:36] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:18:36] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[09:18:36] *** Joins: inom (~inom@176.59.116.194)
[09:18:36] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[09:18:36] *** Joins: Neverloads (NeverLoad@freakshells.net)
[09:18:36] *** Joins: menace (~someone@user/menace)
[09:18:36] *** Joins: soapsudsxx (~soapsudsx@141.193.188.144)
[09:18:36] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[09:18:36] *** Joins: rany (~rany@user/rany)
[09:18:36] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[09:18:36] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:e5d0:36e1:dc57:f933)
[09:18:36] *** Joins: Doffi (~doffi@91.132.197.188)
[09:18:36] *** Joins: NChief (~nchief@irc.nortv.net)
[09:18:36] *** Joins: lockywolf_ (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:18:36] *** Joins: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca)
[09:18:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:18:36] *** Joins: hard-drive (~hard-driv@cpe-24-163-84-4.nc.res.rr.com)
[09:18:36] *** Joins: jelly (jelly@user/jelly)
[09:18:36] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:91bb:bd77:ba3e:76cd)
[09:18:36] *** Joins: ugjka (~ugjka@ugjka.net)
[09:18:36] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:18:36] *** Joins: causative (~halberd@user/causative)
[09:18:36] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[09:18:36] *** Joins: buffet (~buffet@buffet.sh)
[09:18:36] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:18:36] *** Joins: mcspud (~mcspud@66.55.76.204)
[09:18:36] *** Joins: kuku (~kuku@user/kuku)
[09:18:36] *** Joins: Thedarkb (~Thedarkb@85.255.232.58)
[09:18:36] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[09:18:36] *** Joins: ghostbuster (~admin@user/ghostbuster)
[09:18:36] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[09:18:36] *** Joins: srikavin (~srikavin@user/srikavin)
[09:18:36] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:18:36] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[09:18:36] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[09:18:36] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[09:18:36] *** Joins: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net)
[09:18:36] *** Joins: Suchiman (sid3778@about/csharp/suchiman)
[09:18:36] *** Joins: morgabra (sid500580@user/morgabra)
[09:18:36] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[09:18:36] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:18:36] *** Joins: Liothen (sid23291@id-23291.brockwell.irccloud.com)
[09:18:36] *** Joins: psb (sid500598@user/psb)
[09:18:36] *** Joins: ikiryo (sid109660@user/ikiryo)
[09:18:36] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[09:18:36] *** Joins: TallonRain (sid214799@user/tallonrain)
[09:18:36] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[09:18:36] *** Joins: mjbatty (uid512825@id-512825.charlton.irccloud.com)
[09:18:36] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[09:18:36] *** Joins: liam (sid7517@brockwell.irccloud.com)
[09:18:36] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[09:18:36] *** Joins: vito (sid1962@user/vito)
[09:18:36] *** Joins: bw (sid2730@user/betawaffle)
[09:18:36] *** Joins: BlueShark (sid10311@user/blueshark)
[09:18:36] *** iridium.libera.chat sets mode: +o bayaz
[09:18:36] *** Joins: deathrat (sid14886@charlton.irccloud.com)
[09:18:36] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[09:18:36] *** Joins: df_data (sid466269@charlton.irccloud.com)
[09:18:36] *** Joins: elliewhatever (uid512890@id-512890.brockwell.irccloud.com)
[09:18:36] *** Joins: FoodMan_ (~glucose@194.110.13.12)
[09:18:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:18:36] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[09:18:36] *** Joins: Quietwalker (~X@24.162.16.145)
[09:18:36] *** Joins: humky (~humky@user/humky)
[09:18:36] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[09:18:36] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[09:18:36] *** Joins: reddit89_ (~user@user/reddit89)
[09:18:36] *** Joins: mickey (~user@user/mickey)
[09:18:36] *** Joins: shredder (~user@user/shredder)
[09:18:36] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:18:36] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:18:36] *** Joins: Pixi (~Pixi@user/pixi)
[09:18:36] *** Joins: Lyn (~Lyn@user/law)
[09:18:36] *** Joins: xa0s (~xa0s@mab.sdf.org)
[09:18:36] *** Joins: birkoff (birkoff@user/birkoff)
[09:18:36] *** Joins: kmh_ (~kmh@p5dcc649e.dip0.t-ipconnect.de)
[09:18:36] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[09:18:36] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[09:18:36] *** Joins: KeziahMason (~mnrmnaugh@68.162.206.56)
[09:18:36] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[09:18:36] *** Joins: shan (shan@cyblog/maintainer/shan)
[09:18:36] *** Joins: cache (~cache@user/cacheyourdreams)
[09:18:36] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[09:18:36] *** Joins: tofran (~tofran@37.189.158.134)
[09:18:36] *** Joins: SoF (~skius@user/skius)
[09:18:36] *** Joins: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4)
[09:18:36] *** Joins: znedw (~znedw@home.znedw.com)
[09:18:36] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[09:18:36] *** Joins: jiffe (~jiffe@mail.nsab.us)
[09:18:36] *** Joins: utunbu_ (~utunbu@user/utunbu)
[09:18:36] *** Joins: nvmd (~nvmd@user/nvmd)
[09:18:36] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[09:18:36] *** Joins: cation (cation@user/cation)
[09:18:36] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:18:36] *** Joins: D-04 (~D-04@185.104.184.103)
[09:18:36] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[09:18:36] *** Joins: TwiZted (~TwiZted@user/twizted)
[09:18:36] *** Joins: DefiantN (~DefiantN@user/defiantn)
[09:18:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:18:36] *** Joins: ghost64 (~ghost64@user/ghost64)
[09:18:36] *** Joins: mz` (~mz`@user/mz/x-8532539)
[09:18:36] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:18:36] *** Joins: arahael (~arahael@124.170.238.106)
[09:18:36] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[09:18:36] *** Joins: BrkThruCopyWritr (~ttt@107-190-27-93.cpe.teksavvy.com)
[09:18:36] *** Joins: novns (~novns@user/novns)
[09:18:36] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[09:18:36] *** Joins: digilink (~digilink@user/digilink)
[09:18:36] *** Joins: caramel_ (~caramel@user/caramel)
[09:18:36] *** Joins: smlckz (~smlckmatr@user/smlckz)
[09:18:36] *** Joins: kaivai (~kaivai@user/kaivai)
[09:18:36] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:18:36] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[09:18:36] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[09:18:36] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[09:18:36] *** Joins: em (~em@li247-180.members.linode.com)
[09:18:36] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[09:18:36] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:18:36] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[09:18:36] *** Joins: rwb (~augh@theguntretort.com)
[09:18:36] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[09:18:36] *** Joins: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net)
[09:18:36] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:10f5:2116:164:18ef)
[09:18:36] *** Joins: DrMax (~DrMax@node-1w7jra94757g16a2gga78pfnk.ipv6.telus.net)
[09:18:36] *** Joins: addc1820643 (~addc182@host86-131-45-199.range86-131.btcentralplus.com)
[09:18:36] *** Joins: w0ng (~w0ng@103.1.212.148)
[09:18:36] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:18:36] *** Joins: YHVH (~yhvh@2601:982:8300:8090:4d87:c05e:6cd6:94a1)
[09:18:36] *** Joins: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com)
[09:18:36] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[09:18:36] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:18:36] *** Joins: sebbu (~sebbu@user/sebbu)
[09:18:36] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[09:18:36] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:18:36] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:18:36] *** Joins: vin (~vin@user/crash)
[09:18:36] *** Joins: Duckle (~Duckle@user/duckle)
[09:18:36] *** Joins: gdarko (~me@dg.mk)
[09:18:36] *** Joins: xeno (~xeno@user/xeno)
[09:18:36] *** Joins: biberu (~biberu@user/biberu)
[09:18:36] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:18:36] *** Joins: Cyp (~cyp@192038129116.mbb.telenor.dk)
[09:18:36] *** Joins: nanowire (rob@user/nanowire)
[09:18:36] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[09:18:36] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[09:18:36] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[09:18:36] *** Joins: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[09:18:36] *** Joins: launchd (examknow@bitbot/launchd)
[09:18:36] *** Joins: Exa (exa@irc.moe)
[09:18:36] *** Joins: sweetfish (~sweetfish@user/sweetfish)
[09:18:36] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:18:36] *** Joins: piou (~piou@user/piou)
[09:18:36] *** Joins: joj_ (~joj@jojeee.xyz)
[09:18:36] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[09:18:36] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[09:18:36] *** Joins: Sadale (~Sadale@user/sadale)
[09:18:36] *** Joins: extor (~xtor@192.99.217.240)
[09:18:36] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[09:18:36] *** Joins: dfg (dfg@user/dfg)
[09:18:36] *** Joins: Buggys (~Buggys@2a01:4f8:150:91ed::2)
[09:18:36] *** Joins: jkl (~jkl@user/jkl)
[09:18:36] *** Joins: cncr04s (~cncr04s@afxr.net)
[09:18:36] *** Joins: Guest9019 (jaskal@user/jaskal)
[09:18:36] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:18:36] *** Joins: tkob (tkob@user/thekingofbandit)
[09:18:36] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:18:36] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[09:18:36] *** Joins: yitz (~yitz@exercism/yitz)
[09:18:36] *** Joins: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de)
[09:18:36] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[09:18:36] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:18:36] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:18:36] *** Joins: blackop (~ocloud@user/blackop)
[09:18:36] *** Joins: francis (francis@user/francis)
[09:18:36] *** Joins: mannu_ (mannu@wodanaz.se)
[09:18:36] *** Joins: matrael_ (matrael@PLEASEJUSTLETME.BE)
[09:18:36] *** Joins: falx (~falx@user/falx)
[09:18:36] *** Joins: Batzy (~Batzy@user/batzy)
[09:18:36] *** Joins: Gozrad (~Gozrad@46.232.210.50)
[09:18:36] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[09:18:36] *** Joins: blinky42 (~quassel@user/blinky42)
[09:18:36] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[09:18:36] *** Joins: bioparco (~bioparco@user/bioparco)
[09:18:36] *** Joins: Rayke (rayke@user/rayke)
[09:18:36] *** Joins: paruh (~paruh@92.60.39.18)
[09:18:36] *** Joins: nulleip_ (~luiz@189.34.167.234)
[09:18:36] *** Joins: karstensrage (~karstensr@user/karstensrage)
[09:18:36] *** Joins: inee (~ine@wolowolo.com)
[09:18:36] *** Joins: sevengraff (~admin@li891-34.members.linode.com)
[09:18:36] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[09:18:36] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[09:18:36] *** Joins: u4ia (~u4ia@88-159-0-88.fixed.kpn.net)
[09:18:36] *** Joins: edk (edk@libera/staff/edk)
[09:18:36] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:18:36] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[09:18:36] *** Joins: APic (apic@apic.name)
[09:18:36] *** Joins: haliucinas (~haliucina@5.20.153.21)
[09:18:36] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:18:36] *** Joins: glguy (x@libera/staff/glguy)
[09:18:36] *** Joins: pyzozord (pyzozord@user/pyzozord)
[09:18:36] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[09:18:36] *** Joins: webstrand (~webstrand@user/webstrand)
[09:18:36] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[09:18:36] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[09:18:36] *** Joins: Ara (~Ara@user/ara)
[09:18:36] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[09:18:36] *** Joins: picooz (~picooz@user/picooz)
[09:18:36] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:18:36] *** Joins: ra4king (~ra4king@roiatalla.com)
[09:18:36] *** Joins: jeaye (~jeaye@user/jeaye)
[09:18:36] *** Joins: Karyon (~Karyon@user/karyon)
[09:18:36] *** Joins: d10n (~d10n@user/d10n)
[09:18:36] *** Joins: jootoi (~jootoi@130.61.158.197)
[09:18:36] *** Joins: umimaso (~umimaso@188.166.147.131)
[09:18:36] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[09:18:36] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[09:18:36] *** Joins: snep (craftxbox@2001:bc8:654:1c02::1)
[09:18:36] *** Joins: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com)
[09:18:36] *** Joins: raczka (~raczka@dedicated-aid6.rev.nazwa.pl)
[09:18:36] *** Joins: kinduff4 (~kinduff@user/kinduff)
[09:18:36] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[09:18:36] *** Joins: KillerWasp_ (~KillerWas@96.126.121.103)
[09:18:36] *** Joins: carbolymer (~carbolyme@dropacid.net)
[09:18:36] *** Joins: theglass (~glass@user/theglass)
[09:18:36] *** Joins: cornduk (~cornduck@li1755-129.members.linode.com)
[09:18:36] *** Joins: edr (~edr@user/edr)
[09:18:36] *** Joins: pnill_ (~pnill@ip170.ip-54-39-37.net)
[09:18:36] *** Joins: void09 (~void@revinin5minute.com)
[09:18:36] *** Joins: spike_spiegel5 (~spike_spi@static.200.4.251.148.clients.your-server.de)
[09:18:36] *** Joins: mteo (francis@user/francis)
[09:18:36] *** Joins: askie (~askie@81.171.100.212)
[09:18:36] *** Joins: Fleck (~fleck@user/fleck)
[09:18:36] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:18:36] *** Joins: phenom (~primus@user/phenom)
[09:18:36] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[09:18:36] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[09:18:36] *** Joins: Dijky (~Dijky@user/dijky)
[09:18:36] *** Joins: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt)
[09:18:36] *** Joins: zopsi (~zopsi@irc.dir.ac)
[09:18:36] *** Joins: adrian17 (~adrian17@thehyper.space)
[09:18:36] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[09:18:36] *** Joins: russjr086 (~russjr08@fw.internal.russ.network)
[09:18:36] *** Joins: Khoyo (~khoyo@user/khoyo)
[09:18:36] *** Joins: kzootech (~awalm@kzoo.tech)
[09:18:36] *** Joins: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp)
[09:18:36] *** Joins: MeatNit (NeatNit@powered.by.jay2k1.com)
[09:18:36] *** Joins: davve_ (davve@bsd.douchedata.com)
[09:18:36] *** Joins: Bigcheese_ (~quassel@107.182.234.200)
[09:18:36] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[09:18:36] *** Joins: Teacup (~teacup@user/teacup)
[09:18:36] *** Joins: p0g0__ (~p0g0@216.211.147.11)
[09:18:36] *** Joins: skreech (~skreech@user/skreech)
[09:18:36] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:18:36] *** Joins: fspy (~fspy@user/fspy)
[09:18:36] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[09:18:36] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[09:18:36] *** Joins: Trieste (T@user/pilgrim)
[09:18:36] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[09:18:36] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[09:18:36] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[09:18:36] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[09:18:36] *** Joins: geonic (~geonic@user/geonic)
[09:18:36] *** Joins: immibis_ (~hexchat@62.156.144.218)
[09:18:36] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[09:18:36] *** Joins: [Kalisto] (~nico@user/kalisto/x-8968079)
[09:18:36] *** Joins: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com)
[09:18:36] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[09:18:36] *** Joins: bocaneri (~bismilah@about/linux/staff/sauvin)
[09:18:36] *** Joins: ario (~ario@159.65.220.102)
[09:18:36] *** Joins: luiserebii (~luiserebi@li1568-23.members.linode.com)
[09:18:36] *** Joins: oldlaptop (~quassel@45.63.78.126)
[09:18:36] *** Joins: calcmandan (~quassel@user/calcmandan)
[09:18:36] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[09:18:36] *** Joins: a1paca_ (~a1paca@user/a1paca)
[09:18:36] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[09:18:36] *** Joins: scjosh (~scjosh@206.189.79.69)
[09:18:36] *** Joins: stoneware (~stoneware@user/stoneware)
[09:18:36] *** Joins: neunon (~neunon@user/neunon)
[09:18:36] *** Joins: derpy (~quassel@dslb-002-203-230-167.002.203.pools.vodafone-ip.de)
[09:18:36] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[09:18:36] *** Joins: micrex22 (~quassel@user/micrex22)
[09:18:36] *** Joins: thebob (~thebob@user/thebob)
[09:18:36] *** Joins: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net)
[09:18:36] *** Joins: Davros_ (~dalek@pathweb.org)
[09:18:36] *** Joins: ^[ (~user@user//x-8473491)
[09:18:36] *** Joins: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com)
[09:18:36] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[09:18:36] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[09:18:36] *** Joins: cisco87 (~quassel@lnxg33k.com)
[09:18:36] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[09:18:36] *** Joins: jcarpenter2 (rofl@2603:3016:1e01:b9c0:20b3:fc15:12c5:30d8)
[09:18:36] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[09:18:36] *** Joins: Ruxnor (kevin@user/kddlb)
[09:18:36] *** Joins: shenanigans (~shenaniga@51.15.76.217)
[09:18:36] *** Joins: Trashlord (~trash@user/trashlord)
[09:18:36] *** Joins: RedNifre__ (~michael@dslb-002-201-038-051.002.201.pools.vodafone-ip.de)
[09:18:36] *** Joins: [R] (~rs@genoce.org)
[09:18:36] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[09:18:36] *** Joins: cronos (~cronos@user/cronos)
[09:18:36] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[09:18:36] *** Joins: BGL (~twenty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[09:18:36] *** Joins: AMG (ghebo@user/amg)
[09:18:36] *** Joins: Telvana (capo@user/telvana)
[09:18:36] *** Joins: km2m (~km2m@1.116.81.184)
[09:18:36] *** Joins: swistak (~swistak@185.21.216.141)
[09:18:36] *** Joins: dmu (~darkmusic@user/darkmusic)
[09:18:36] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[09:18:36] *** Joins: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[09:18:36] *** Joins: livestradamus (~quassel@user/livestradamus)
[09:18:36] *** Joins: LjL (~ljl@user/ljl)
[09:18:36] *** Joins: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[09:18:36] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[09:18:36] *** Joins: justache (~justache@user/justache)
[09:18:36] *** Joins: nisstyre (~wes@user/nisstyre)
[09:18:36] *** Joins: Square (~a@178.62.91.8)
[09:18:36] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[09:18:36] *** Joins: glider_ (~glider@user/glider)
[09:18:36] *** Joins: echoreply1 (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d)
[09:18:36] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[09:18:36] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[09:18:36] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[09:18:36] *** Joins: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz)
[09:18:36] *** Joins: nitrix (~nitrix@user/nitrix)
[09:18:36] *** Joins: jstoker (~jstoker@user/jstoker)
[09:18:36] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[09:18:36] *** Joins: Kays (Kays@user/kays)
[09:18:36] *** Joins: AkechiShiro (~licht@user/akechishiro)
[09:18:36] *** Joins: biberao (~Unknown@user/biberao)
[09:18:36] *** Joins: Guest282 (ianmacd@faust.caliban.org)
[09:18:36] *** Joins: Vesryn (~vesryn@user/vesryn)
[09:18:36] *** Joins: ishanjain (~ishan@li2028-175.members.linode.com)
[09:18:36] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[09:18:36] *** Joins: DaPinkOne (~Dap@user/dap)
[09:18:36] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[09:18:36] *** Joins: koolazer (~koo@user/koolazer)
[09:18:36] *** Joins: micronn (~micronn@user/micronn)
[09:18:36] *** Joins: con3 (~con3@2604:a880:4:1d0::be:d000)
[09:18:36] *** Joins: ebb (ebb@user/ebb)
[09:18:36] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[09:18:36] *** Joins: pizza (~pizzaiolo@user/pizzaiolo)
[09:18:36] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[09:18:36] *** Joins: ShockTohp (~kevin@155.138.224.160)
[09:18:36] *** Joins: ChanServ (ChanServ@services.libera.chat)
[09:18:36] *** Joins: myon98 (~myon98@user/myon98)
[09:18:36] *** Joins: lf94 (~lf94@2604:a880:cad:d0::cd6:8001)
[09:18:36] *** Joins: brandon_ (~brandon@user/brandon)
[09:18:36] *** Joins: Retr0id (~Retr0id@user/retr0id)
[09:18:36] *** Joins: WarauSalesman (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net)
[09:18:36] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[09:18:36] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[09:18:36] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[09:18:36] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[09:18:36] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[09:18:36] *** Joins: obrut (~obrut@user/obrut)
[09:18:36] *** Joins: computerquip (sid423484@user/computerquip)
[09:18:36] *** Joins: feliix42_ (~felix@gibbs.uberspace.de)
[09:18:36] *** Joins: avery (sid501608@id-501608.highgate.irccloud.com)
[09:18:36] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:18:36] *** Joins: backslash (~backslash@user/backslash)
[09:18:36] *** Joins: ross (sid305269@user/ross)
[09:18:36] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[09:18:36] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[09:18:36] *** Joins: Tom1 (~tom@user/ghostdragon)
[09:18:36] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[09:18:36] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[09:18:36] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[09:18:36] *** Joins: Endust (leggt@iceland.sdf.org)
[09:18:36] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:18:36] *** Joins: cfjk (~cfjk@user/cfjk)
[09:18:36] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:18:36] *** Joins: remedan (~remedan@balak.me)
[09:18:36] *** Joins: orkim (~orkim@user/orkim)
[09:18:36] *** Joins: tanto (~tanto@178.62.223.32)
[09:18:36] *** Joins: InPhase (~InPhase@openscad/inphase)
[09:18:36] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[09:18:36] *** Joins: |smlckz| (smlckz@user/smlckz)
[09:18:36] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[09:18:36] *** iridium.libera.chat sets mode: +o ChanServ
[09:18:36] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[09:18:36] *** Joins: pierrepaul (sid504261@id-504261.highgate.irccloud.com)
[09:18:36] *** Joins: t^ (~thomas@2001:41d0:2:a84:1::6)
[09:18:36] *** Joins: bertiger (~bertiger@user/bertiger)
[09:18:36] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[09:18:36] *** Joins: boycott (~boycott@user/boycott)
[09:18:36] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[09:19:12] *** Quits: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a) (Ping timeout: 256 seconds)
[09:20:20] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: psb (sid500598@user/psb) (*.net *.split)
[09:20:20] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[09:20:20] *** Quits: mjbatty (uid512825@id-512825.charlton.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: greyblue9 (sid500829@id-500829.charlton.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[09:20:20] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:20:20] *** Quits: elliewhatever (uid512890@id-512890.brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: znedw (~znedw@home.znedw.com) (*.net *.split)
[09:20:20] *** Quits: TwiZted (~TwiZted@user/twizted) (*.net *.split)
[09:20:21] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[09:20:21] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:10f5:2116:164:18ef) (*.net *.split)
[09:20:21] *** Quits: DrMax (~DrMax@node-1w7jra94757g16a2gga78pfnk.ipv6.telus.net) (*.net *.split)
[09:20:21] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:20:21] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[09:20:21] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:20:21] *** Quits: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de) (*.net *.split)
[09:20:21] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[09:20:21] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[09:20:21] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[09:20:21] *** Quits: tkob (tkob@user/thekingofbandit) (*.net *.split)
[09:20:21] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:20:21] *** Quits: Guest9019 (jaskal@user/jaskal) (*.net *.split)
[09:20:21] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[09:20:21] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:20:21] *** Quits: Buggys (~Buggys@2a01:4f8:150:91ed::2) (*.net *.split)
[09:20:39] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[09:20:39] *** Joins: psb (sid500598@user/psb)
[09:20:39] *** Joins: ikiryo (sid109660@user/ikiryo)
[09:20:39] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[09:20:39] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[09:20:39] *** Joins: mjbatty (uid512825@id-512825.charlton.irccloud.com)
[09:20:39] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[09:20:39] *** Joins: vito (sid1962@user/vito)
[09:20:39] *** Joins: BlueShark (sid10311@user/blueshark)
[09:20:39] *** Joins: elliewhatever (uid512890@id-512890.brockwell.irccloud.com)
[09:20:39] *** Joins: znedw (~znedw@home.znedw.com)
[09:20:39] *** Joins: TwiZted (~TwiZted@user/twizted)
[09:20:39] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[09:20:39] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:10f5:2116:164:18ef)
[09:20:39] *** Joins: DrMax (~DrMax@node-1w7jra94757g16a2gga78pfnk.ipv6.telus.net)
[09:20:39] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:20:39] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:20:39] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[09:20:39] *** Joins: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de)
[09:20:39] *** Joins: yitz (~yitz@exercism/yitz)
[09:20:39] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[09:20:39] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:20:39] *** Joins: tkob (tkob@user/thekingofbandit)
[09:20:39] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:20:39] *** Joins: Guest9019 (jaskal@user/jaskal)
[09:20:39] *** Joins: cncr04s (~cncr04s@afxr.net)
[09:20:39] *** Joins: jkl (~jkl@user/jkl)
[09:20:39] *** Joins: Buggys (~Buggys@2a01:4f8:150:91ed::2)
[09:20:47] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Max SendQ exceeded)
[09:21:06] *** Quits: smlckz (~smlckmatr@user/smlckz) (Ping timeout: 272 seconds)
[09:21:06] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Ping timeout: 272 seconds)
[09:21:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:22:42] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[09:22:42] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[09:22:42] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:22:42] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[09:22:42] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[09:22:42] *** Quits: joj_ (~joj@jojeee.xyz) (*.net *.split)
[09:22:42] *** Quits: piou (~piou@user/piou) (*.net *.split)
[09:22:42] *** Quits: sweetfish (~sweetfish@user/sweetfish) (*.net *.split)
[09:22:42] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[09:22:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[09:22:52] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[09:22:55] *** Joins: joj (~joj@jojeee.xyz)
[09:22:56] *** Joins: Exagone313 (exa@irc.moe)
[09:23:02] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 245 seconds)
[09:23:04] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[09:23:13] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[09:23:15] *** Joins: sweetfish (~sweetfish@user/sweetfish)
[09:23:27] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:23:27] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[09:24:11] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[09:24:11] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (*.net *.split)
[09:24:11] *** Quits: ^[ (~user@user//x-8473491) (*.net *.split)
[09:24:11] *** Quits: Valware (~val@Valeyard/Developer/Valware) (*.net *.split)
[09:24:11] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[09:24:11] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:24:11] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[09:24:11] *** Quits: biberao (~Unknown@user/biberao) (*.net *.split)
[09:24:11] *** Quits: Guest282 (ianmacd@faust.caliban.org) (*.net *.split)
[09:24:11] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[09:24:11] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:24:11] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (*.net *.split)
[09:24:11] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[09:24:11] *** Quits: lf94 (~lf94@2604:a880:cad:d0::cd6:8001) (*.net *.split)
[09:24:11] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[09:24:11] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (*.net *.split)
[09:24:11] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:24:11] *** Quits: backslash (~backslash@user/backslash) (*.net *.split)
[09:24:11] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[09:24:11] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[09:24:11] *** Quits: edenist (edenist@rdns.robotprofessor.net) (*.net *.split)
[09:24:11] *** Quits: pierrepaul (sid504261@id-504261.highgate.irccloud.com) (*.net *.split)
[09:24:11] *** Quits: t^ (~thomas@2001:41d0:2:a84:1::6) (*.net *.split)
[09:24:11] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[09:24:11] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[09:24:11] *** Quits: boycott (~boycott@user/boycott) (*.net *.split)
[09:24:17] *** Joins: biberao_ (~Unknown@static.14.82.9.5.clients.your-server.de)
[09:24:17] *** Joins: Scarecr0w_ (internot@2607:5300:60:21b::1)
[09:24:18] *** Joins: ianmacd (ianmacd@faust.caliban.org)
[09:24:19] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[09:24:19] *** Joins: Valware_ (~val@2001:41d0:800:2e90:2304:86cf:d60c:1)
[09:24:19] *** Valware_ is now known as Valware
[09:24:19] *** Joins: extor (~xtor@192.99.217.240)
[09:24:21] *** Joins: livestradamus (~quassel@user/livestradamus)
[09:24:21] *** Joins: schraegstrich (~backslash@user/backslash)
[09:24:25] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[09:24:25] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[09:24:29] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[09:24:31] *** Joins: flynn (~mcbloch@user/flynn)
[09:24:31] *** Joins: t^ (~thomas@2001:41d0:2:a84:1::6)
[09:24:41] *** Joins: bertiger_ (~bertiger@user/bertiger)
[09:24:42] *** Joins: nisstyre (~wes@li798-187.members.linode.com)
[09:24:43] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[09:24:45] *** ianmacd is now known as Guest6847
[09:24:46] *** Joins: pierrepaul (sid504261@id-504261.highgate.irccloud.com)
[09:24:55] *** Joins: boycott (~boycott@166.ip-149-56-46.net)
[09:24:58] *** Exagone313 is now known as Exa
[09:24:59] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[09:25:10] *** Joins: ross (sid305269@2001:67c:2f08:5::4:a875)
[09:25:19] *** Quits: ross (sid305269@2001:67c:2f08:5::4:a875) (Changing host)
[09:25:19] *** Joins: ross (sid305269@user/ross)
[09:25:20] *** Joins: computerquip (sid423484@2001:67c:2f08:4::6:763c)
[09:25:21] *** Joins: lf94 (~lf94@178.128.239.88)
[09:25:23] *** Quits: computerquip (sid423484@2001:67c:2f08:4::6:763c) (Changing host)
[09:25:23] *** Joins: computerquip (sid423484@user/computerquip)
[09:25:32] *** Joins: itok (sid418430@2001:67c:2f08:3::6:627e)
[09:25:33] *** Quits: boycott (~boycott@166.ip-149-56-46.net) (Changing host)
[09:25:33] *** Joins: boycott (~boycott@user/boycott)
[09:25:34] *** Joins: Vesryn (~vesryn@user/vesryn)
[09:25:36] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:25:38] *** Quits: Shiva (LordShiva@user/one39dev) (Ping timeout: 268 seconds)
[09:25:39] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[09:25:41] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[09:25:46] *** Joins: Trieste (T@user/pilgrim)
[09:26:13] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Lost terminal)
[09:26:26] *** Joins: Sadale (~Sadale@user/sadale)
[09:26:58] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[09:27:01] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[09:27:11] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:34:07] <pikapika> The human brain is unsuitable for certain things
[09:35:21] *** Joins: Shiva (~LordShiva@user/one39dev)
[09:36:09] <micrex22> pikapika: and some human frontal lobes simply lack talent/creativity and will never reach a peak that some individuals have.
[09:36:18] *** Quits: Quietwalker (~X@24.162.16.145) (Ping timeout: 272 seconds)
[09:36:19] *** Quits: Julius_ (~Julius76@2a02:810b:c640:514:4930:61c3:f0be:4b4f) (Quit: Quit)
[09:36:27] *** Quits: Shiva (~LordShiva@user/one39dev) (Remote host closed the connection)
[09:36:32] <pikapika> No amount of creativity will help it either
[09:36:39] <pikapika> Some things simply are hard for human brains
[09:36:41] <micrex22> (I've also come to respect a lot of 'situational knowledge' I've acquired over the years, too)
[09:36:50] *** Joins: Shiva (~LordShiva@user/one39dev)
[09:37:22] <pikapika> Humans keep attempting to write concurrent code, yet its always hard
[09:37:37] <micrex22> pikapika: well there are some who fall under being a legitimate genius, but obviously they're rare and few and far between
[09:37:46] <micrex22> (which is why a lot of businesses snap those people up instantly)
[09:37:55] <pikapika> Genius would help a bit but won't cut it either
[09:39:06] <Belxjander> pikapika: the only way I have worked out to do that is to "pre-allocate resources" in a main thread... then deal with each "concurrent" thread as its own independent logic... and deal with it that way ( ignore that any concurrency is happening at all... treat all threads as individual entities that work alone on their own mini-problem... and then produce a result)
[09:39:39] *** Joins: Quietwalker (~X@24.162.16.145)
[09:39:46] <pikapika> But thats the easiest type of problem
[09:40:00] <pikapika> The real problems start when there are complex data dependencies
[09:40:20] <pikapika> The purest kind of parallelism requires no "critical section"
[09:40:30] <pikapika> For example a recursive sorting
[09:40:34] <Belxjander> pikapika: any way to sync-lock or deal with smaller parts of those problems and work backwards to having a solver against the larger problem?
[09:40:37] <pikapika> But those are the most trivial kinds of problems
[09:41:03] <pikapika> Belxjander, no idea. I just start getting headaches once these kinds of dependencies have to be dealt with
[09:42:14] <Belxjander> pikapika: I only ever focus on whats in front of me and then try to make a tree of what the dependencies are...
[09:42:30] <Belxjander> then start dealing with the leaves and work backwards to the trunk of it all
[09:42:59] <pikapika> The thing with a general programming is, a tree may not suffice. Because one statement may be again reached by a loop or function call.
[09:43:12] <pikapika> In a normal dependency graph, once a node is finished, its finished
[09:43:50] *** Quits: jamea (~jamea@177.239.85.103) (Ping timeout: 272 seconds)
[09:44:20] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:45:19] <Belxjander> ahhh
[09:45:53] <Belxjander> well I can't really comment there as I haven't really had any "proper teacher" for programming... mostly having picked things up for myself
[09:46:54] *** Quits: Quietwalker (~X@24.162.16.145) (Ping timeout: 276 seconds)
[09:47:21] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 248 seconds)
[09:47:32] *** Joins: gggp__ (~gggp@60.10.23.162)
[09:48:03] *** Joins: Quietwalker (~X@24.162.16.145)
[09:48:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:48:32] *** Joins: lockna (~lockna@2001:470:69fc:105::d697)
[09:49:15] <pikapika> Formal education is important but there is much value in actually having to do shit by yourself without a books
[09:49:41] <pikapika> It should be completed by a more formal book education later if possible of course, but yeah
[09:49:55] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:50:56] *** Quits: gggp_ (~gggp@114.243.61.163) (Ping timeout: 268 seconds)
[09:51:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:53:55] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:54:00] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[09:55:34] *** Joins: gggp_ (~gggp@123.113.184.163)
[09:56:13] <smallville7123> pavonia: is this correct for resizing? Position resizeBy(const Position & value) const { return { x + value.x, y + value.y, width - (value.x + value.width), height - (value.y + value.height) }; }
[09:56:36] <smallville7123> eg resize it left by 4 and then resize it right by 4
[09:56:49] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[09:57:14] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:58:23] *** Joins: gggp (~gggp@114.245.109.30)
[09:58:33] *** Quits: gggp__ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[09:59:09] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:59:12] <pavonia> smallville7123: Explain what this function is supposed to do
[10:00:11] <smallville7123> it is meant to resize the rectangle by x amount
[10:00:56] <pavonia> What is "x amount"?
[10:01:08] *** Quits: gggp_ (~gggp@123.113.184.163) (Ping timeout: 256 seconds)
[10:01:31] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:01:52] <cis> is the x amount added to the total, or to each side?
[10:02:20] <smallville7123> x is a rectangle to add to the total
[10:03:11] <smallville7123> using `return { x + value.x, y + value.y, width - value.width, height - value.height };` seems to work
[10:03:39] *** Joins: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d)
[10:06:05] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[10:06:14] *** Joins: usr123 (~usr123@124.253.1.241)
[10:06:19] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[10:07:43] *** Quits: mteo (francis@user/francis) (Quit: rb)
[10:09:12] <pavonia> smallville7123: Given a rectangle { 100, 100, 200, 200 }. What should resizeBy({ 10, 20, 0, 0 }), resizeBy({ 0, 0, -30, -40 }) and resizeBy({ -10, -20, 30, 40 }) result in?
[10:10:16] *** Joins: mteo (francis@user/francis)
[10:10:24] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[10:10:55] *** Quits: francis (francis@user/francis) (Quit: rb)
[10:11:28] *** Joins: elnavigator (~elnavigat@105.196.251.169)
[10:11:54] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 256 seconds)
[10:12:03] *** Joins: francis (francis@user/francis)
[10:12:26] *** Joins: Guest42 (~Guest42@64.225.14.201)
[10:12:32] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) ()
[10:13:11] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[10:13:39] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[10:14:03] <smallville7123> hmm for some reason my absolute position of my children is correct, but somehow it is drawing the children with padding applied
[10:15:06] <smallville7123> or something else
[10:17:24] *** Joins: Guest424 (~Guest42@103.5.134.18)
[10:18:10] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 240 seconds)
[10:18:43] *** Quits: Guest42 (~Guest42@64.225.14.201) (Ping timeout: 246 seconds)
[10:22:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[10:26:47] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[10:27:20] *** Quits: Guest424 (~Guest42@103.5.134.18) (Quit: Client closed)
[10:33:55] *** Joins: psydroid (~psydroid@user/psydroid)
[10:33:58] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[10:35:09] <cis> seems like it's really a moveAndResize function...
[10:37:40] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[10:40:03] *** Joins: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8)
[10:45:42] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:48:50] *** Quits: soapsudsxx (~soapsudsx@141.193.188.144) (Remote host closed the connection)
[10:50:52] *** Joins: vysn (~vysn@user/vysn)
[10:54:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[10:54:50] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[10:55:26] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[10:57:27] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[11:04:30] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[11:06:15] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[11:06:23] *** Joins: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b)
[11:08:35] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (Quit: jarthur)
[11:10:20] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[11:15:53] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[11:16:24] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[11:17:12] *** Quits: elnavigator (~elnavigat@105.196.251.169) (Ping timeout: 245 seconds)
[11:18:04] *** Joins: gggp_ (~gggp@60.10.23.162)
[11:20:10] *** Quits: usr123 (~usr123@124.253.1.241) (Read error: Connection reset by peer)
[11:20:34] *** Joins: usr123 (~usr123@49.156.121.100)
[11:20:41] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[11:21:48] *** Quits: gggp (~gggp@114.245.109.30) (Ping timeout: 276 seconds)
[11:23:14] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[11:23:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[11:24:06] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[11:25:38] *** Joins: mrig (~mrig@user/mrig)
[11:26:01] *** Quits: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[11:26:59] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[11:28:00] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[11:29:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:32:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:32:56] *** Quits: c705 (c705@alpine/contributor/c705) (Ping timeout: 256 seconds)
[11:33:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[11:33:48] *** Lord_of_Life_ is now known as Lord_of_Life
[11:35:17] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:36:41] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[11:36:55] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[11:37:42] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:39:55] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[11:40:06] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[11:40:16] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[11:42:00] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[11:42:00] *** Joins: piou (~piou@user/piou)
[11:42:59] *** Joins: mjbatty_ (~mjbatty@213.205.194.89)
[11:45:44] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[11:45:45] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[11:46:00] *** Joins: jaysicks (~jaysicks@91-83-5-150.pool.digikabel.hu)
[11:46:04] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (Ping timeout: 272 seconds)
[11:46:25] *** Joins: aradesh (~aradesh@user/aradesh)
[11:47:26] *** Joins: smlckz (~smlckmatr@2001:470:69fc:105::c885)
[11:47:30] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-6895-e31f-1b1e-ae38.res6.spectrum.com)
[11:47:50] *** smlckz is now known as Guest9978
[11:53:29] *** Joins: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a)
[11:53:38] *** Joins: gggp__ (~gggp@114.245.111.182)
[11:53:45] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[11:53:49] *** Quits: gggp__ (~gggp@114.245.111.182) (Remote host closed the connection)
[11:54:11] *** Joins: gggp__ (~gggp@123.113.185.125)
[11:54:35] *** Quits: cthulchu (~Cthulchu@194.44.110.194) (Ping timeout: 252 seconds)
[11:55:11] *** Joins: newpy_ (~newpy@2601:280:4381:1390:3118:d264:d603:ccef)
[11:56:38] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[11:56:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:58:10] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-6895-e31f-1b1e-ae38.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:59:08] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[11:59:26] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Ping timeout: 272 seconds)
[11:59:28] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:59:31] *** Joins: gggp_ (~gggp@60.10.23.162)
[11:59:41] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Read error: Connection reset by peer)
[12:02:28] *** Joins: gggp (~gggp@123.113.180.255)
[12:02:58] *** Quits: gggp__ (~gggp@123.113.185.125) (Ping timeout: 256 seconds)
[12:04:42] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 245 seconds)
[12:06:20] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:11:17] *** Quits: RenAdjest2 (~RenAdjest@user/renadjest) (Quit: Leaving)
[12:13:55] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[12:13:55] *** Joins: death916 (~death916@user/death916)
[12:14:34] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[12:15:45] *** Joins: lunarkitty (uid501895@user/pyra)
[12:21:29] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[12:21:45] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-4149-2f35-df80-c24c.fixed6.kpn.net)
[12:22:23] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[12:22:40] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 240 seconds)
[12:23:05] *** Joins: Hax0r (~Hax0r@2001:16a2:c040:253a:7a8a:7af9:77fb:3f86)
[12:23:44] *** Joins: elnavigator (~elnavigat@105.196.246.45)
[12:23:55] *** Quits: newpy_ (~newpy@2601:280:4381:1390:3118:d264:d603:ccef) (Quit: Leaving)
[12:26:23] *** Joins: dsrt^ (~cuolin@12.202.131.133)
[12:32:15] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[12:34:16] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[12:35:30] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[12:38:18] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:40:10] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 240 seconds)
[12:40:39] *** Joins: rany (~rany@user/rany)
[12:42:06] *** Quits: Guest9978 (~smlckmatr@2001:470:69fc:105::c885) (Changing host)
[12:42:06] *** Joins: Guest9978 (~smlckmatr@user/smlckz)
[12:42:22] *** Guest9978 is now known as smlck
[12:43:05] *** Joins: Atque (~Atque@user/atque)
[12:45:12] *** Quits: mjbatty_ (~mjbatty@213.205.194.89) (Read error: Connection reset by peer)
[12:46:33] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:47:19] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[12:48:28] <mrig> Hi, does anyone know how to add the start of line character within the initial square brackets of this expression? '<,'>s/[ \t]\([a-z]\)/ elem\u\1/g
[12:49:14] <mrig> [^ ] makes it a negation and \^ does not work.
[12:50:12] <dre> mrig, what are you trying to do? '<,'>s/^[ \t]\([a-z]\)/
[12:50:25] <dre> put it outside of the [], it's not optional
[12:51:01] <mrig> I have a string of elements and would like to rename them so that they begin with elem and the first char of the actual element is upper case.
[12:51:34] <mrig> sometimes the element may not have a space nor a tab in front, if it is at the start of the line.
[12:51:48] <dre> that's redundant.
[12:51:54] <dre> there's always a start of a line.
[12:51:57] <mrig> so I'm trying to add it to the expression.
[12:52:06] <mrig> but it does not get selected in that case
[12:52:47] <mrig> s/[ \t]\([a-z]\)/ elem\u\1/g does not select the word if if does not have either a space or a tag leading.
[12:53:05] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:53:09] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[12:53:19] <mrig> I have tried s/[^ \t]\([a-z]\)/ elem\u\1/g which makes it a negation
[12:53:27] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[12:53:34] <dre>  '<,'>s/.*\b\([a-z]\)[a-z]*\b/ elem\u\1/g
[12:53:44] <dre> err
[12:53:47] <mrig> and s/[\^ \t]\([a-z]\)/ elem\u\1/g which doesn't work.
[12:54:15] <dre>  '<,'>s/.*\([a-z]\)/ elem\u\1/g
[12:55:06] <mrig> .* replaces the entire line, I need it to not be greedy and act upon each space separated word.
[12:55:31] <mrig> well it is a comma and space separated line of data
[12:55:56] <mrig> oh I did not put the \b in, sorry let me try that again.
[12:56:01] *** Joins: rty (~rty@212.102.39.158)
[12:56:17] <dre> the \b is word boundaries 
[12:56:28] <mrig> Right
[12:56:35] <dre>  '<,'>s/.*\b\([a-z]\)\([a-z]*\)\b/ elem\u\1\2/g would probably work? 
[12:57:15] <dre> idk i gotta cook dinner, but practise on like regex101.com or something, soz, I'd use a macro for this sort of thing
[12:57:32] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 245 seconds)
[12:57:34] <mrig> That's not finding anything.
[12:58:14] <mrig> oh no biggie, I was just curious as to whether it was possible to include the ^ within the square brackets.
[12:58:45] <mrig> I can also indent by one easily enough before running the command.
[12:58:52] <mrig> Thanks though.
[12:59:13] <pavonia> Do you want the actual '^' character or "begin of match"?
[12:59:13] <dre> you shouldn't have to, the [] are like an "eiter or" but ^ would always be there. it'd perhaps be more like ^[ \t]+ 
[12:59:30] <dre> or ^[ \t]*
[13:00:32] <pavonia> That would never match anything if there were already matched characters before
[13:00:50] <mrig> pavonia: in the case that there is a word at the start of the line, to match that also.
[13:01:23] <mrig> it currently misses that case by selects all the other words in the comma separated list.
[13:01:50] *** Joins: guy_frm_yogaland (~gourab@2409:4062:4e93:b6d:d697:262d:fcb6:2c7f)
[13:01:55] <mrig> oh that's an idea dre, I'll try that.
[13:03:16] <mrig> dre: nice, using the * works.
[13:03:25] <mrig> Yes different logic needed.
[13:03:56] <pavonia> Is that a multi-line match? I don't get it otherwise
[13:04:21] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:06:06] <mrig> oh no it didn't work, doing that only selected the first word :(
[13:06:29] <mrig> pavonia: this is in vim using s replace on a multiline selection.
[13:07:03] <dre> mrig, ^ is beginning of line, it would only ever work on the first word.
[13:08:36] <piou> mrig: can you share an excerpt of what your lines actually look like?
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:49] <piou> And what you want them to look like?
[13:09:08] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[13:09:18] *** Joins: Samian (~Sami@2620:10d:c091:480::1:e746)
[13:09:24] <mrig> dre this is why I am trying to put it into square brackets, so that it is an optional clause and not a rule for all.
[13:10:04] <dre> mrig, try this: :let @q="w~ielem^["  - and instead of ^[ press "Ctrl-V" then esc.
[13:10:14] <dre> then just type @q and it will do this for you
[13:10:22] <piou> square brackets don't mean optionnal, they mean "either this character or this" and the begining of the line isn't a character
[13:10:25] <dre> in the vim command line 
[13:10:49] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:10:55] *** Quits: Shiva (~LordShiva@user/one39dev) (Read error: Connection reset by peer)
[13:11:05] <dre> so like let @q="w~ielem<Ctrl-V><Esc>"
[13:11:57] <piou> Yeah, I'd love a sample because I'm not sure I understand this correctly
[13:12:02] *** Joins: One39Dev (LordShiva@user/one39dev)
[13:12:55] <mrig> sure thing, this is the actual code, the bottom line needs the action https://termbin.com/o0tu
[13:12:58] <bayaz> Type: text/plain; charset=utf-8 
[13:13:06] <dre> whoops I got my macro wrong 
[13:13:23] <dre> mrig, try what I said: let @q="w~hielem<Ctrl-V><Esc>"
[13:13:27] <dre> then press @q 
[13:13:35] <dre> before the word 
[13:14:45] <piou> mrig: that one would be a simple "s/\s\(\w\+\)/ elem\1/g"
[13:14:45] <dre> otherwise that just looks to be "s/\b\([a-z]\"
[13:14:49] <mrig> piou, yes either, that is what I meant.
[13:14:55] <piou> mrig: is that teh case that's giving you issue?
[13:15:14] <mrig> just the start of line case.
[13:15:28] <piou> So same thing but without an initial space?
[13:15:29] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[13:15:45] <mrig> I need to select for whitespace too.
[13:15:57] <mrig> currently it works for all but the first word
[13:15:59] <piou> mrig: "s/\s*\(\w\+\)/ elem\1/g"
[13:17:28] <mrig> thank you piou, that has got it :)
[13:17:46] <piou> mrig: if you want optional then \? and * are your best friends
[13:18:08] <mrig> just trying to read your expression, to get the logic.
[13:18:51] <piou> The only thing I added is a * after the \s (ie: "whitespace character such as space or tab") to mean "0 or any". \? would mean "0 or 1"
[13:19:14] <mrig> what is the \s I was not using that before?
[13:19:26] <piou> \s is roughly [ \t]
[13:19:34] <mrig> ah it is for space
[13:19:46] <mrig> but includes the start of the line?
[13:19:56] <piou> No, because the start of the line isn't a character
[13:20:12] *** Quits: usr123 (~usr123@49.156.121.100) (Read error: Connection reset by peer)
[13:20:29] <piou> The "trick" is to work on actual characters: you don't want to specify whether you're at the beginning of the line or not, you want to work on actual characters: so it becomes "do I have *something* before my word or not" and in your case that something would be a space
[13:20:35] *** Joins: usr123 (~usr123@124.253.5.247)
[13:20:52] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[13:20:58] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[13:21:09] <piou> Replace \s by [ \t] if you want, I used \s out of habit
[13:21:12] *** Quits: elnavigator (~elnavigat@105.196.246.45) (Ping timeout: 268 seconds)
[13:21:21] <mrig> so how is it selecting the first word which does not have any space before it?
[13:21:45] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Ping timeout: 248 seconds)
[13:22:07] <piou> Because of * (which you must absolutely learn, it's a regex fundamental). A * means "0 or many of the previous character". So "a*b" would match ab, aaaaab or b.
[13:22:22] <mrig> I'd tried using the star before but it was only getting the first instance then.
[13:22:35] <mrig> greedily selecting the entire line if memory serves.
[13:22:47] <piou> Note the g at the end of the expression: that's the part that means "global" which repeats the substitution over the line.
[13:22:48] <mrig> I think it is the \w that is doing it in the next part of the expression.
[13:22:58] <mrig> making it stop
[13:22:58] <piou> If you don't put the g at the end you'll only replace the first instance
[13:23:07] <mrig> yes I'm ok with that and *
[13:23:34] <mrig> I think it is the use of w where as I was only selecting the first character previously.
[13:23:36] <piou> Oh, sorry, \w roughly means "word characters", you can use [a-zA-Z] in your case
[13:24:05] <piou> I'll rewrite it in a clearer way:    s/[ \t]*\([a-zA-Z]\+\)/ elem\1/g
[13:24:10] <mrig> Thing is I was only looking at the first one and did not have a \+ afterwards.
[13:24:29] <mrig> so only the fist char was contained within \1
[13:24:42] <mrig> right, that seems to be the defining difference.
[13:24:54] <mrig> great I think I'm on the same page now!
[13:25:02] <mrig> Thank you for your help.
[13:25:30] <piou> You can do pretty much everything in regex knowing only    \+, *, \?, [], (), ^ and $     so I strongly advise to be very familiar with all of these without exception
[13:26:03] <mrig> Yes cool, when I make that modification to the original expression, it works :)
[13:26:30] <piou> doing something like   [^a-z]\([a-z]\+\)[^a-z]   is very common practice
[13:26:30] <mrig> I need to look at the greedy not greedy thing a little more closely, seems to be that which I'd not been considering.
[13:26:47] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[13:27:04] <mrig> oh negating the first char and effecting the rest of the word?
[13:27:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:27:17] <mrig> It is really useful stuff.
[13:28:06] <mrig> Thanks dre too, keeping it to regexp where I can, need to master this before adding extra foo
[13:28:20] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[13:28:45] <piou> Working with separators. For example in CSV if you want the 3 column you could write:    s/^([^,]\+,)\{2\}([^,]\+,)/\3/     (assuming nice CSV without quoting etc... regex aren't a very good fit in that case)
[13:29:54] <piou> Err... Rather:    s/^([^,]\+,)\{2\}([^,]\+),.*$/\3/
[13:29:56] <piou> This means "From the beginning, you'll see things that aren't commas, then a comma, you'll see that two times, then you'll see things that aren't comma, then a comma, and I want this.
[13:30:21] <piou> Simply having this separator technique down solves a tremendous number of issues
[13:30:40] *** Quits: jaysicks (~jaysicks@91-83-5-150.pool.digikabel.hu) (Ping timeout: 240 seconds)
[13:31:29] *** Joins: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu)
[13:31:32] <piou> (my edit was to ignore the end of the line and not capture the trailing comma after the 3rd column
[13:31:35] <piou> )
[13:32:25] <mrig> Right yes, the \(n) place holders are amazing.
[13:33:29] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Quit: Leaving)
[13:33:45] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[13:34:03] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 244 seconds)
[13:37:16] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:38:46] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[13:40:25] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[13:41:42] <Cyp> s/(..)(..)/\2\1/g
[13:42:06] <Cyp> No regex bot in this channel, I guess.
[13:43:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 248 seconds)
[13:43:57] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[13:45:53] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[13:50:36] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:52:28] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[13:53:46] <Akronymus> If you ever get offered a job involving progress/ABL/OpenEdge: RUN
[13:57:55] <beaky> what is progress ablo penedge
[13:58:00] <beaky> sounds enterprise-grade which i like
[13:58:11] <Akronymus> 4th gen language.
[13:58:14] <Akronymus> For UI stuff
[13:58:19] <Akronymus> It does DB too.
[13:58:25] <Akronymus> But only row based.
[13:58:33] <Akronymus> So no set based functionality.
[14:00:04] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[14:02:29] <rty> 4th gen language, I am excited
[14:02:40] <rty> which gen are we in now btw?
[14:02:50] <beaky> gen 5 with ai
[14:06:13] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:08:34] <GeDaMo> "The Fifth Generation Computer Systems  (FGCS) was an initiative by Japan's Ministry of International Trade and Industry (MITI), begun in 1982, to create computers using massively parallel computing and logic programming." https://en.wikipedia.org/wiki/Fifth_generation_computer
[14:08:35] <bayaz> Title: Fifth generation computer - Wikipedia 
[14:12:47] <beaky> yes gen 5 was a lost generation of computing
[14:12:57] <beaky> much like the lisp machines that came before it 
[14:14:46] <Akronymus> And it practically forces you to write DB accesses locally rather than having it structured anywhere
[14:16:08] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[14:17:06] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[14:17:10] <beaky> are local db accesses are cache friendly
[14:17:22] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[14:17:28] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[14:17:36] <Akronymus> I meant that you write every db access per file.
[14:17:47] <Akronymus> Or hell, mutliple times within a file.
[14:19:09] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[14:24:00] *** Joins: Guest64 (~Guest64@185.133.181.17)
[14:25:22] *** Joins: jinsun (~quassel@user/jinsun)
[14:28:41] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:30:31] *** Joins: loganlee (~Thunderbi@user/loganlee)
[14:30:35] *** Quits: Neverloads (NeverLoad@freakshells.net) (Quit: FREAKSHELLS - https://www.freakshells.net)
[14:31:06] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:32:37] *** Joins: Neverloads (NeverLoad@freakshells.net)
[14:33:46] *** Joins: Twipply (~Twipply@user/twipply)
[14:36:50] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[14:37:09] *** Joins: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com)
[14:37:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 258 seconds)
[14:38:04] *** Quits: Guest64 (~Guest64@185.133.181.17) (Ping timeout: 246 seconds)
[14:38:55] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 268 seconds)
[14:39:56] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[14:41:44] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[14:42:09] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[14:42:11] <varaindemian> how can I translate this https://pastebin.com/SPp9yCNW ? It looks like an sql i stuff
[14:42:14] <bayaz> Title: POST /login/administrator/components/com_comprofiler/components/com_artlinks//"f - Pastebin.com 
[14:42:29] <varaindemian> is there an online interpreter for this?
[14:42:37] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 268 seconds)
[14:43:25] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[14:44:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:45:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:27] *** Joins: pulse (~pulse@user/pulse)
[14:45:51] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[14:45:53] *** Joins: euouae (~euouae@user/euouae)
[14:46:20] *** Joins: entuland (~entuland@user/entuland)
[14:46:30] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[14:46:32] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[14:46:34] <euouae> Hello
[14:46:56] <euouae> does anyone know how to enable key 2FA on gmail? Is it even possible
[14:47:01] *** Quits: w0ng (~w0ng@103.1.212.148) (Ping timeout: 256 seconds)
[14:47:05] <hans> why is mp4 called an "open format"? it's not open, it's proprietary, if you want to see the actual specification, you have to BUY the specification, ISO charge 100USD for it
[14:47:16] <hans> doesn't sound open to me, sounds proprietary 
[14:47:22] <hans> if it was open, just put it on github or something
[14:47:37] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 248 seconds)
[14:47:44] <euouae> buying spec is typical
[14:47:57] <euouae> is there no draft online from the committee ?
[14:48:34] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[14:48:34] <hans> so if beta-versions are open for everyone to view, you can still call the final specification "open" even though people have to pay to access it?
[14:48:58] <hans> the drafts are basically beta versions, aren't they?
[14:50:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:51:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:18] <piou> varaindemian: Oh, a joomla attack
[14:51:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:51:51] <euouae> Hans km not sure what definition of open they use 
[14:52:06] <euouae> But C language has the same model, nobody thinks C proprietary 
[14:52:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:53:04] <varaindemian> piou: any idea about an online interpreter?
[14:53:55] <piou> varaindemian: the "/login/administrator/..." path is a path that is typical of a vulnerability in old joomla configurations. The char part is just ascii codes, what I did is simply change a few things to transform it into valid python that prints the corresponding text https://paste.devys.org/niagiojeypa/raw -> "!~!ABC145ZQ62DWQAFPOIYCFD!~!". Interestingly that string was used a long time ago to
[14:53:56] <bayaz> Type: text/plain; charset=UTF8 Size: 287 B 
[14:54:01] <piou> mark vulnerable coldfusion configurations so that you would know that something was vulnerable. I think it's been adapted to mark vulnerable joomla instead.
[14:54:12] <euouae> Hans and as far as I know an actual open video format was purposefully attacked to hinder it
[14:54:25] <euouae> So it’s an industry thing my guess it
[14:54:26] <euouae> is
[14:54:26] <hans> euouae, like Matroska/mkv?
[14:54:40] <euouae> I was thinking h264
[14:54:45] <varaindemian> piou: beautiful print ahah
[14:54:46] <varaindemian> clean
[14:56:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:56:18] <hans> euouae, different thing, mp4 and mkv are media container, and h264 is a compression 
[14:56:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:02] <piou> varaindemian: long story short, if the url in the POST doesn't exist on your system or you don't use joomla then you can just ignore this, it's just an attacker fishing for vulnerabilities but you're probably not specifically targetted.
[14:57:17] <hans> blah
[14:57:42] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[14:58:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:58:38] <Akronymus> ISO specs are close to extortion at times.
[14:58:48] <sjmulder> time to get them free to access
[14:58:50] <Akronymus> You need em to comply.
[14:58:51] <varaindemian> piou: good to know!
[14:58:58] <Akronymus> But they can get EXPENSIVE
[14:59:02] <varaindemian> piou: thanks a lot :)
[14:59:38] <sjmulder> why do people say Racket is not lisp?
[15:00:10] <GeDaMo> Because it's Scheme? :P
[15:00:12] <piou> because saying "Common Lisp" is long?
[15:00:22] <Akronymus> clisp?
[15:00:29] <sjmulder> oh it's about not being common lisp. that makes sense
[15:00:47] <sjmulder> because it's definitely an (extended) scheme right
[15:00:54] <piou> yep
[15:01:11] <edgar-rft> mp4 is open for money making, what's so difficult to understand? :-) I think it's called "open" because it allows you to add or integrate your own audio/video encoders and decoders, the word "open" does not automatically mean that it's Free Software.
[15:01:12] <sjmulder> cool, clear
[15:04:02] <death916> usually does mean you can use the code on your own tho
[15:04:03] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:04:19] <death916> at least in most peoples eyes
[15:04:32] <euouae> Hans thanks I didn’t know :p
[15:04:36] <euouae> but my point stands
[15:04:38] <euouae> about it
[15:04:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:06:03] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:06:15] *** Joins: federico_it (~textual@151.95.116.125)
[15:07:01] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:07:02] <hans> edgar-rft, well if it's not "free software", is it proprietary? kinda looks that way to me "it's open to anyone willing to pay for it" 
[15:07:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:08:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:39] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Quit: Leaving)
[15:09:24] <edgar-rft> hans: The mp4 format can easily be reverse-engineered from lots of documents that can be viewed via the internet for absolutely no-cost. You don't *need* to buy the ISO documents.
[15:09:34] <mercenary> There are levels of 'open'. Can download, can download in exchange for email address, can download in exchange for some money, ... all the way to 'can't get it unless under NDA, in exchange for substantial money, and we'll come after you for patents if you actually use it'
[15:11:49] <sjmulder> I think it's against the principles of 'free software' (free to use for any purpose, share, modify, etc) if the software is patent encumbered
[15:12:29] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[15:12:39] *** Quits: Jacobis9000 (~josephash@host86-189-244-245.range86-189.btcentralplus.com) (Quit: Lost terminal)
[15:13:40] <piou> edgar-rft: what's that's always a possibility you can't have any guarantee that you are indeed implenting the standard that way. Maybe the documents you based your development on didn't cover specific points and exceptions that didn't apply to their use case.
[15:16:16] <edgar-rft> piou: in the software world it's very likely that your code won't run anymore next year, totally independent of any specification. It's waste of money to pay for that.
[15:16:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[15:16:29] <smallville7123> yay i think i got it working correctly now :)
[15:16:58] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[15:17:35] <piou> edgar-rft: it's fine if that's working for you, but I don't think this vision reflects as much of the programming world as you think :)
[15:18:40] <pikapika> Only hardware is real, everything else is a lie
[15:18:52] <edgar-rft> seriously, what do you promise yourself from buying a specification?
[15:18:53] <pulse> kinda wrong pikapika 
[15:19:07] <pulse> hardware without software is completely useless
[15:19:10] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 240 seconds)
[15:19:16] <pulse> software without hardware you can still at least study :p
[15:19:28] <GeDaMo> Nonsense! You can always use hardware as a hammer :P
[15:19:32] <edgar-rft> my hammer works fine without any software
[15:19:54] <mercenary> edgar-rft: the right to point fingers. "We fully comply with the spec, any interoperability problems are $other_vendor's problem"
[15:20:00] *** Joins: netbsduser (~netbsduse@user/netbsduser)
[15:20:11] *** Quits: usr123 (~usr123@124.253.5.247) (Read error: Connection reset by peer)
[15:20:23] <pikapika> pulse, and asm is the closest you get to directly drive hardware in normal situations
[15:20:34] *** Joins: usr123 (~usr123@124.253.244.103)
[15:20:35] <pulse> maybe in 1980s
[15:21:15] <pikapika> What exists that is lower than asm in 2021, and is easily programmable?
[15:21:24] <GeDaMo> FPGA?
[15:21:30] <pulse> hardware is so detached from an average modern programmer it's not even a consideration in most cases
[15:21:32] <pikapika> Thats a possibility
[15:21:38] <edgar-rft> machine code
[15:21:43] <pikapika> pulse, one can never forget hardware
[15:21:50] <pulse> the only times you consider hardware is either you're working with some kind of I/O, or you need performance
[15:21:56] <pikapika> edgar-rft, one could say "microcodes" but microcodes are transparent to normal usage
[15:21:57] <pikapika> etc
[15:21:59] <mercenary> pikapika: people are happily prodding hardware via JTAG
[15:22:00] <merijn> GeDaMo: No sane person with FPGA experience calls them "easily programmable", lol :p
[15:22:17] <GeDaMo> I'm sure some people feel that way about software :P
[15:22:22] <vdamewood> pikapika: I think you mean opaque
[15:22:37] <pyzozord> Some people feel this way about javascript
[15:22:50] <pikapika> The usage of "transparent" I have heard implies the internals can be changed and have zero change to the outer layers
[15:22:56] <edgar-rft> pikapika: you could learn howto program with a soldering iron
[15:23:26] <pulse> you know there's a lot of programmers who can't even build a PC
[15:23:28] <netbsduser> good morning. does anyone know of any research on the effect of code column limits on ease of reading of code, productivity, etc?
[15:23:32] <pulse> think about that for a moment :D
[15:23:34] <vdamewood> pikapika: That's not quite what transparent means. It means that such changes are visible to the outer layers.
[15:23:45] <GeDaMo> There's quite a few programmers who can't program either :P
[15:23:59] *** Joins: w0ng (~w0ng@185.218.127.67)
[15:23:59] <mercenary> edgar-rft: like https://nitter.cattube.org/CablePorn_/status/1427163216627515394#m ?
[15:24:03] <pulse> GeDaMo, hear hear ;)
[15:24:15] *** Joins: Palgorithm (~Palgorith@188.146.0.185.nat.umts.dynamic.t-mobile.pl)
[15:24:15] *** Quits: Palgorithm (~Palgorith@188.146.0.185.nat.umts.dynamic.t-mobile.pl) (Changing host)
[15:24:15] *** Joins: Palgorithm (~Palgorith@user/palgorithm)
[15:24:39] <pikapika> "Any change in a computing system, such as a new feature or new component, is transparent if the system after change adheres to previous external interface as much as possible while changing its internal behaviour."
[15:24:40] <netbsduser> there are a whole lot of culture warriors arguing against the 80-column limit because it's old-fashioned, but i wonder whether scientific experiment backs up their claims that we should have 100 or even 120+ column limits (or none at all)
[15:24:46] <pikapika> https://en.wikipedia.org/wiki/Transparency_(human%E2%80%93computer_interaction)
[15:24:46] <bayaz> Title: Transparency (human–computer interaction) - Wikipedia 
[15:24:55] <edgar-rft> netbsduser: on a smartphone lines longer than 10 characters seriously harm productivity :-)
[15:24:59] <pikapika> netbsduser, horizontal neck craning
[15:25:18] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[15:25:20] <GeDaMo> The other 'standard' width in the old days was 132
[15:25:21] *** Quits: Palgorithm (~Palgorith@user/palgorithm) (Client Quit)
[15:26:04] <pulse> netbsduser, it's an artifact from the days where monitors were small
[15:26:06] <mrig> netbsduser: I took a look at a book the other day, published by a webdev in pdf, the text was not right justified, I then began reading a paper written in the 50's with nice type setting, the difference between the two is as clear as night and day.
[15:26:19] <edgar-rft> I worked on lots of machimes where 80 character lines were totally unreadable because the were way too long.
[15:26:28] <Akronymus> There is a async request that just hangs.
[15:26:31] <vdamewood> pikapika: "Because of this misleading and counter-intuitive definition, modern computer literature tends to prefer use of "agnostic" over "transparent"."
[15:26:32] <Akronymus> Can't debug it.
[15:26:36] <pulse> artificial column limit makes no sense to me
[15:26:44] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[15:26:49] <pulse> it doesnt' make the code any more readable
[15:26:51] <Akronymus> and no error either.
[15:26:51] <pikapika> Yeah I think "transparent" is counter intuitive for those hearing it the first time
[15:26:52] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 258 seconds)
[15:26:54] <pulse> in fact in many cases it turns it less readable
[15:26:58] <vdamewood> pikapika: Also: definition 2d here: https://www.merriam-webster.com/dictionary/transparent
[15:26:59] <bayaz> Title: Definition of TRANSPARENT 
[15:27:14] <Akronymus> Sometimes I think I am going crazy.
[15:27:17] <mrig> reading speed increases dramatically with shorter text width.
[15:27:27] <pikapika> Ok
[15:27:34] <pyzozord> I have a question: why do people think exceptions are bad? I think I kind of like them, they seem convenient
[15:27:36] <pikapika> mrig, too short becomes annoying again
[15:27:43] <Akronymus> mrig you can easily reach 300wpm+ reading speed if you just flash the words.
[15:27:43] <GeDaMo> http://www.righto.com/2019/01/accounting-machines-ibm-1403-and-why.html
[15:27:44] <bayaz> Title: Accounting machines, the IBM 1403, and why printers standardized on 132 columns 
[15:27:46] <sjmulder> also makes working with multiple files side by side easier
[15:27:47] <netbsduser> pulse: before you have the right to make that claim, there needs to be a scientific basis for making it
[15:27:51] <mrig> pikapika: yes, needs to be well balanced, nicely set.
[15:27:58] <pikapika> pyzozord, I think the reasons cited are because stack unrolling does funny things to object states
[15:28:01] <mrig> Akronymus: I cant
[15:28:07] <pulse> netbsduser, lol, no it doesn't
[15:28:14] <edgar-rft> mrig:
[15:28:14] <edgar-rft> r
[15:28:14] <edgar-rft> i
[15:28:14] <edgar-rft> g
[15:28:14] <edgar-rft> h
[15:28:15] <edgar-rft> t
[15:28:16] <pikapika> *unwinding
[15:28:19] <edgar-rft> !
[15:28:19] *** Joins: node1 (~node1@user/node1)
[15:28:26] <pulse> netbsduser, do you need a scientific paper to tell you that water is good for you
[15:28:31] <euouae> Pyzozord, hard to design a proper exception sustem
[15:28:32] <mrig> Akronymus: I like to understand what I am reading and as such tend to be running on several threads whilst reading.
[15:28:33] <pulse> edgar-rft, please don't flood the channel
[15:28:43] <Akronymus> https://www.spreeder.com/app.php?intro=1 mrig
[15:29:02] <euouae> Requires a lot of forethough 
[15:29:05] <pyzozord> euouae: not sure I understand
[15:29:16] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[15:29:22] <netbsduser> pulse: that's uncontroversial. column limits are very controversial and argumentation is largely subjective stuff. i am asking whether there have been any experiments conducted comparing various metrics of readability, productivity, etc between code at various column limits
[15:29:26] <euouae> I’m talking about throwing your own exceptions 
[15:29:33] <vdamewood> pyzozord: In some languages, such as Objective C, exception handlying leaves the program in an unreliable state, and is meant to give the programmer a way to log an error message and kill the program.
[15:29:38] <pulse> netbsduser, idk of any such research
[15:29:40] <euouae> What are you going to name them, what information they carry, rtc
[15:29:43] <euouae> etc
[15:29:47] <edgar-rft> pulse: it was said that shorter lines increase readybility
[15:29:47] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[15:29:49] <Akronymus> netbsduser I think column limits should be suggestions.
[15:29:57] <Akronymus> But I'd set it around 100-120 
[15:30:05] <Akronymus> On modern systems
[15:30:12] <Akronymus> (1080p +)
[15:30:12] <pulse> i have serious doubts that artificial column limit increases productivity in any measurable way
[15:30:13] <vdamewood> pyzozord: In other languages, like Python and C++ exception handling is a well-defined behavior, and a lot of the concerns about exceptions don't apply.
[15:30:19] <euouae> Exceptions triple documentation as well 
[15:30:29] <mrig> netbsduser: better comparing code longevity than any speed metric no?
[15:30:42] <mrig> code relevance after n years
[15:31:11] <mrig> anyone can rub one out in not time at all, but what did your offspring produce? :P
[15:31:12] <pyzozord> vdamewood: can you help me understand what does it mean when a language leaves program in unreliable state after an exception? How does it happen and why?
[15:31:13] <pulse> if you're dealing with particularly verbose names, you might start writing conditionals in a really weird way if you have to adhere to some 80-column limit. it ends up looking weird
[15:31:15] <euouae> But I agree they are the best — but they’re hard 
[15:31:25] <mrig> a mess or a new lineage?
[15:31:29] <merijn> netbsduser: There have been experiments that show large jumps (from end of line) back to start are uncomfortable. Which is why newspapers and TeX limit text width to roughly 76 characters
[15:31:30] <dodo> just format your code automatically, don't waste time thinking about it..
[15:31:41] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[15:31:47] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:31:55] <piou> code formatting vehiculates lots of information, it's worth taking the time to get it right
[15:32:01] <merijn> netbsduser: Realistically this actually means you don't want a "static" max width, but a "max width compared to the start of previous/next line"
[15:32:01] <pikapika> Newspapers have multiple columns
[15:32:08] <Akronymus> pulse what is wrong with CloneAttributeTestNotificationFilterWorker?
[15:32:12] <mrig> if you cant name things well, the 80 char will be hard.
[15:32:12] <netbsduser> something that we do know: low column limits (50-75 characters) improve readability of prose. this has been backed up in numerous psychophysical studies using various measures, both subjective and objective
[15:32:13] <Akronymus> https://projects.haykranen.nl/java/
[15:32:15] <bayaz> Title: 
[15:32:18] <pikapika> Its a nice name Akronymus 
[15:32:20] <mrig> thats the point though
[15:32:20] <vdamewood> pyzozord: Well, for example, a destructor might not be called when an object goes out of scope.
[15:32:22] <merijn> pikapika: Right, they do that because reading one column wider than ~76 characters is uncomfortable
[15:32:31] <netbsduser> the question must be whether these findings are applicable to code as well as prose
[15:32:32] <pulse> code isn't prose though
[15:32:36] <merijn> pikapika: Also, the same applies to big screens, just keep multiple columns of code
[15:32:43] <pikapika> merijn, I am saying, multi columns for code on a computer screen is hard to read
[15:32:50] <pulse> code is not read, or written linearly, like prose is
[15:32:55] <mrig> comments are and literate programming is.
[15:32:56] <pikapika> Multiple files can be laid side by side
[15:33:04] <pikapika> But a single file split into multiple columns would be hard to read
[15:33:05] <mrig> ^
[15:33:07] <mrig> ++
[15:33:08] <pikapika> ie the code
[15:33:08] <merijn> pikapika: I disagree. I generally have 3-4 terminal columns with either shell or files
[15:33:09] <netbsduser> merijn: that's my suspicion as well - i reckon the total length of the line excluding preceding whietspace is an impotrant predictor of readability
[15:33:17] <pyzozord> vdamewood: I see, thanks
[15:33:21] <piou> +1 for netbsduser, although the exact limit choosen can be debated it should be on the basis of what's readable for better understanding, not screen size
[15:33:22] <pikapika> merijn, how does that scroll
[15:33:30] <merijn> pikapika: Not for one file
[15:33:30] <Akronymus> I personally adhere to 120 characters should be the most.
[15:33:37] <Akronymus> But it really depends.
[15:33:45] <pikapika> merijn, ...thats exactly what I was saying
[15:33:48] <dodo> every developer has a different style.. you should probably add a comment if you think styling your code conveys information
[15:33:52] <pyzozord> so there are no criticisms about exceptions in regards to how they affect the architecture/readability of the code? There are only technical criticisms about specific implementations of exceptions?
[15:33:52] <pikapika> Multiple "columns" should be multiple files
[15:33:56] <merijn> pikapika: I'm not arguing you should have multi columns of 1 file. I'm saying narrower limits on files make sideways stacking easier
[15:34:00] <pikapika> ie just a bunch of windows tiled
[15:34:15] <merijn> And, indeed, code isn't usually read linearly, so you often want multiple files open
[15:34:21] <Akronymus> If there are a lot of parameters, I just write them underneath each other, if I care about them.
[15:34:32] <merijn> Which is another argument for *some* limit to line-width
[15:34:35] <Akronymus> If I don't, I just, well, ignore them going off the screen.
[15:34:35] <pikapika> Two files side by side is a very common and useful usecase
[15:34:40] <pikapika> My monitor probably does not permit more
[15:34:52] <netbsduser> if there's any academics in here, a study on the readability of code depending on column count, that could be a nice little paper which i suspect would get a lot of attention
[15:34:58] <mrig> what would be a good name for a bitvector object with a module called set?
[15:35:09] <pulse> eh those studies would have no effect
[15:35:15] <pikapika> mrig, ie for set::bitvector?
[15:35:18] <Akronymus> mrig what is its use?
[15:35:20] <pulse> there's a study that says light mode is more readable :p
[15:35:20] <mrig> I'm thinking BitVector, but perhaps there is better?
[15:35:23] <pulse> still most people prefer darkmode
[15:35:24] <merijn> pikapika: At work we couldn't get laptop docks that (reliably) supported double screen for linux, mac, and windows. So now we just have single 32 inch curved screens for everyone :)
[15:35:31] <pikapika> what do you mean by "module"
[15:35:33] <Akronymus> pulse I choose to ignore that.
[15:35:37] <arahael> merijn: How terrible. :)
[15:35:38] <pulse> see ;)
[15:35:39] <Akronymus> Light mode is evil
[15:35:40] <mrig> Akronymus: it is a set basically, but foundation is integers values.
[15:35:45] <merijn> arahael: They're really nice, tbh
[15:35:45] <pulse> i prefer lightmode
[15:35:48] <pikapika> Curved is an interesting concept
[15:35:51] <pulse> darkmode makes my eyes hurt
[15:35:52] <piou> As someone that reads a lot of foreign code and doesn't have any preexisting familiarity with the code base I hate long lines so much, especially when it's because it doesn't seem important for the person writting it
[15:35:58] <pikapika> in theory it should reduce neck craning a bit and also maintain constant radius
[15:36:00] <merijn> arahael: integrated power supply and networking
[15:36:03] * vdamewood gouges pulse's eyes out
[15:36:08] <pikapika> or at least reduce radius variations
[15:36:09] <pikapika> rather
[15:36:10] <arahael> merijn: Yeah, I'm *really* happy with mine.
[15:36:10] <merijn> arahael: Just plug in one USB-C cable and everything works
[15:36:20] <netbsduser> pulse: i try my best to abide by the best evidence around, even if it contradicts my preferences
[15:36:22] <arahael> merijn: Indeed. Mine doesn't do ethernet, but it does do charging.
[15:36:31] <pikapika> Akronymus, java naming conventions are quite pleasant
[15:36:36] <Akronymus> piou for such cases, I paste it in notepad++ and let a plugin reformat it.
[15:36:37] <pulse> netbsduser, why do you need science to tell you authoritatively how you should behave? seems unwise to me
[15:36:44] <pulse> just go by intuition
[15:36:51] <mrig> The original code was IntSet but that makes set.IntSet{} which is not that nice.
[15:37:00] <pulse> if you want you can easily do 80 limit
[15:37:06] <vdamewood> pulse: reality can be counterintuitive.
[15:37:12] <piou> Akronymus: yeah, not doing that over codebases that have millions of lines. Not only would be be a pain but I don't want to lose the information that formatting brings
[15:37:13] <pulse> vdamewood, placebo is a thing too
[15:37:33] <pulse> you can totally convince yourself that something is good because science says so, and then 20 years down the line science starts saying the opposite :p
[15:37:36] <pulse> and then what do you end up with
[15:37:43] <pulse> you have to make your own decisions
[15:37:51] <pikapika> Human beings are interesting creatures
[15:37:57] <netbsduser> pulse: i work in a particular field where not keeping up with and implementing the recommendations of research is a first-class ticket to unemployment
[15:37:58] <Akronymus> pulse most of my code fits comfortably in the 80 columns. Just functions with lots of parameters tend to go outside it. (Specifically function definition)
[15:38:13] <pulse> most of my code fits into 120 probably
[15:38:20] <dodo> imo the team should decide on the code style, so that it's at least consistent
[15:38:21] <Akronymus> Function calls with lots of parameters, I arange in a column/multiple columns of parameters downwards.
[15:38:26] <pulse> but i don't mind if one line is 150
[15:38:28] <piou> Akronymus: Formatting can hide subtle errors and mistakes or be a red flag by itself, it's important.
[15:38:43] <Akronymus> Fair enough.
[15:38:51] <pulse> netbsduser, that seems important for stuff that matters. line length doesn't really matter to anyone that doesn't directly deal with code
[15:38:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:38:56] *** Joins: Atque (~Atque@user/atque)
[15:39:03] <pikapika> Akronymus, the matrix format is quite nice
[15:39:04] <netbsduser> i don't let science dictate what i do, but i try to be informed by evidence on matters like this which are mired in subjectivity. i don't want to impose my personal preference if it's objectively inferior
[15:39:07] <pulse> and from my direct experience, very few people care about code, even those intimately involved with a project
[15:39:15] <pikapika> I use it too, but yeah its usually in mathematical code
[15:39:15] <pulse> people tend to care about results
[15:39:26] <pikapika> I meant matrix foramt as in laying out rows of function calls
[15:39:31] <pulse> netbsduser, in this particular case, it's trivial. whatever science says, it doesnt' matter
[15:39:50] <piou> we lack studies on basic things, such as the effect of readability on productivity
[15:39:54] <pulse> we have wide monitors now, line limits are a thing from medieval times
[15:40:00] <mrig> Perhaps IntVector, as that is really what it is.
[15:40:03] <pikapika> pulse, wide monitors hurt my neck
[15:40:20] <pulse> i mean if you go down that route, you need a research to tell you which font to use. a research to tell you which OS to use. a research to tell you which framework to use. and so on
[15:40:33] <pulse> pikapika, yeah i meant standard 16:9, not ultrawide lool
[15:40:34] <Akronymus> pulse it somewhat makes sense when opening multiple files side by side
[15:40:43] <pulse> i probably wouldn't enjoy ultrawide myuself
[15:40:49] <netbsduser> pulse: like piou notes, we simply don't know how much it matters. there doesn't seem to be any research on it. and yet people swear down that their personal preference makes them much more productive. so it sounds like it could be important
[15:40:52] <pulse> Akronymus, i do that all the time and i use no artificial limit
[15:41:00] <pulse> editors can scroll left and right
[15:41:00] <Akronymus> Altough, I sometimes end up at 3x3 editor windows at the same time.
[15:41:09] <Akronymus> Some 120 wide, some just 40 wide
[15:41:09] <mrig> pulse: some people have not commons sense and few intact senses with which to devlop any, best that they use some method to gauge which food will kill them
[15:41:15] <pulse> netbsduser, it matters about as much as the font you use
[15:41:17] <pikapika> Akronymus, do you have magnifying glasses to your eyes
[15:41:17] <Akronymus> depending on the importance of the file atm
[15:41:23] <mrig> They are generally not very good at this though.
[15:41:30] <piou> I see no reason at all why line length should be decided by screen width
[15:41:31] <mrig> just look at the health status quo
[15:41:32] <dodo> "readable on my monitor"
[15:41:33] <Akronymus> And I often adjust the size on the fly
[15:42:11] <netbsduser> pulse: believe it or not, a goodly amount of studies went into designing ergonomic fonts
[15:42:14] <piou> Even excluding other parameters, screen width fall into the immediate issue that not everybody has the same screen, and those that do don't necessarily prefer using all of it just for one line
[15:42:19] <edgar-rft> short-sighted people like me *do* have builtin magnifieres in their eyes
[15:42:22] <pulse> line limits *could* be defined in your project's style guide, in which case i'd say it's best to adhere to them
[15:42:32] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[15:42:33] <mrig> long lines are great for regexp, but I think structural regular expressions will trump that.
[15:42:38] <pulse> netbsduser, i know, but that doesn't mean i can't pick the one i like myself without any studies telling me which is th ebest
[15:42:44] <Akronymus> edgar-rft I am so short sighted, I couldn't read the screen without glasses.
[15:42:57] <Akronymus> 5 and 5.5 dioptren
[15:43:14] <dodo> mrig: eh, especially for long regex i find verbose ones that include whitespace, newlines and comments far better
[15:43:18] <merijn> The problem with the "light mode is more readable than darkmode" research is that it compares equal fonts/font size just different colours. I won't disagree that dark mode usually has lower contrast (which lowers readability)
[15:43:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:43:26] <edgar-rft> okay, you won, I'm only 3.75 :-)
[15:43:27] <merijn> But there's an easy fix for that: Just increase your freaking font size
[15:43:45] <merijn> Programmers who insist on coding in 10/11pt Courier New are insane to me
[15:43:51] <pulse> merijn, i think that particular research claims that it strains your eyes less
[15:43:53] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:43:55] <Akronymus> merijn high contrast for a long time tends to make my eyes hrut
[15:44:02] *** Joins: gggp_ (~gggp@123.113.180.255)
[15:44:05] <merijn> pulse: It strains eyes less due to better contrast for light mode
[15:44:18] <merijn> pulse: "high contrast" = less eye stress
[15:44:27] <merijn> But high brightness can *also* stress your eyes
[15:44:31] <pulse> i'm biased because i can't stand dark mode for long
[15:44:31] <mrig> much of the drivel that comes out of academia is laughable.
[15:44:35] <pulse> i can stand grayish mode
[15:44:41] <pulse> but most of the time i prefer light mode
[15:44:49] <merijn> Personally I use 14-15pt with a very thick font in darkmode
[15:44:50] <pulse> because then my eyes don't constantly squint
[15:45:02] <pulse> also i've heard people who have astigmatism naturally prefer whitemode
[15:45:04] <pulse> so that could be it
[15:45:05] <merijn> pulse: Squinting eyes sounds like bad contrast :p
[15:45:16] <mrig> pulse: I have astigmatism and prefer dark mode.
[15:45:19] <netbsduser> pulse: it's a tricky thing. i was convinced to switch a project styleguide to request tabs instead of spaces after a legally-blind contributor made a good argument to me
[15:45:28] <pulse> mrig, yeah i think we had this discussion before
[15:45:33] <mrig> find lightmode has far to higher contrast.
[15:45:37] *** Joins: gggp__ (~gggp@60.10.194.45)
[15:45:44] <pulse> netbsduser, what was the argument
[15:45:46] <pyzozord> pulse: I think I have astigmatism but I prefer dark mode by far
[15:45:51] <pulse> also props for using tabs
[15:45:52] <mrig> it is the contrast that does it, black ink on paper is great.
[15:45:55] <edgar-rft> I've heard that blind people prefer braiile readers
[15:46:10] <piou> mrig: I think most of the drivel that comes out of academia is badly used: these researches are important and useful, but someone saying "in this very specific situation, doing this very specific task, comparing between these two specific configurations, we note that configuration A is better than configuration B" isn't the same as saying "Configuration A is better than configuration B"
[15:46:11] <Akronymus> netbsduser I really like tabs for identing BECAUSE you can adjust it locally.
[15:46:18] <mrig> edgar-rft: do you have an funny jokes to go with your dry commentary?
[15:46:20] <mrig> :P
[15:46:27] <Akronymus> tabs for ident space for align
[15:46:30] <merijn> pulse: My terminal font/colour: http://files.inconsistent.nl/irc-quotes.png
[15:46:30] <bayaz> Type: image/png Size: 115.6 kB 
[15:46:38] <smallville7123> how do i compute the absolute size in relation to the parent absolute size and relative size?
[15:46:52] <pulse> merijn, yeah see i couldn't look at that for long
[15:46:54] <edgar-rft> mrig: that's no jokes, I repair stuff for handicapped people
[15:46:57] <Akronymus> smallville7123 what does the relative size refer to?
[15:46:59] <mrig> piou: oh yes i agree that research is very important.
[15:47:00] <pulse> it just hurts my eyes immediately
[15:47:01] <netbsduser> i forgot the exact details, but it went something like "the merit of spaces is that 'it looks the same on other peoples computers' but it doesn't really beacuse fonts differ; and secondly, that is a demerit for me because i need to have very wide indentation to be able to read"
[15:47:02] <Akronymus> % of parent size?
[15:47:10] <mrig> seems to go through phases though.
[15:47:12] <Akronymus> Delta from parent size?
[15:47:19] <smallville7123> the size of the rectangle itself
[15:47:22] *** Quits: gggp (~gggp@123.113.180.255) (Ping timeout: 268 seconds)
[15:47:35] <edgar-rft> another one: on a braille reader line limits are bad because there is only one line
[15:47:42] <Akronymus> But it is relative apparently
[15:47:46] <merijn> netbsduser: The problem is that "programmers who like tab" *claim* that it's just a replacement for a fixed amount of spaces, but historically (and thus most software) doesn't treat it that way
[15:47:50] <Akronymus> So, how does it relate to the parent size?
[15:47:54] *** Joins: Guest50 (~Guest50@31.223.156.200)
[15:47:57] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[15:47:58] <mrig> piou and published experimentation is there to give founding for counter publications.
[15:47:59] <Guest50> Hello
[15:48:08] <Akronymus> hey there, Guest50
[15:48:38] <Guest50> I have fast question: how to decrypt text in PHP?
[15:48:55] <merijn> netbsduser: Tabstop of 8 doesn't mean "tab is 8 spaces" it means "tab is equal to however many spaces it takes to get to the nearest multiple of 8 characters". Also the fact that lots of people indiscriminately mix tabs and space
[15:48:56] <mrig> if the scholar has some incentive to do so, such as being more interested by understanding reality than they are by money.
[15:48:57] <piou> Guest50: what text, encrypted how?
[15:49:05] <bjs> merijn: the real problem is there are also programmers who like tabs because it's -not- a replacement for a fixed number of spaces but because it represents an indent abstractly
[15:49:10] <mobidrop> base64_decode($text) hehehe
[15:49:20] <netbsduser> Akronymus: that's the exact merit that i was persuaded by
[15:49:23] <bjs> so you can use spaces for alignment but tabs for indentation
[15:49:24] <Akronymus> merijn if you mix them then you are on my (s)hitlist
[15:49:31] <piou> Guest50: quick questions often have a quick answer but not a very useful one, take the time to explain your context and what you're trying to do and you'll get much better results
[15:49:37] <Akronymus> Tabs go first, for ident.
[15:49:44] <Akronymus> Spaces go after for align
[15:49:45] <pavonia> str_rot13($text)
[15:49:50] *** Quits: gggp_ (~gggp@123.113.180.255) (Ping timeout: 268 seconds)
[15:49:57] <Guest50> Thanks!
[15:50:09] <Akronymus> piou XY problems can really suck
[15:50:23] <Guest50> Otherwise I am back-end web developer.
[15:50:31] <Akronymus> https://knowledgebase.progress.com/articles/Article/DotNetOpenClientApplicationHangsWhenSocketConnectionBroken
[15:50:33] <bayaz> Title: Progress KB - .NET Open Client Application Hangs When Socket Connection Broken 
[15:50:35] <Akronymus> Well, that explains that
[15:51:07] * Akronymus flips my table, my bosses table, my bosses bosses table, my cows table, your table, and every other table in the vicinity.
[15:51:26] <netbsduser> merijn: a convincing argument might be made that the tabstop ought to be undefined by the project
[15:51:33] <piou> Guest50: go on?
[15:51:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:52:03] <Guest50> piou what go on?
[15:52:10] <netbsduser> then you abrogate the entire problem. this, of course, means a rethink is necessary on column limitations
[15:52:18] <piou> Guest50: well, what text do you need to decrypt, encrypted how?
[15:52:26] * edgar-rft didn't know that the size of his parents is related to his text editing capabilities
[15:52:38] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:52:47] <Guest50> with double base64 encryption
[15:53:06] <mrig> It amazes me that the question of the validity of the argument is even raised.
[15:53:11] <smallville7123> if the absolute size of rect A is {45, 25, 95, 75}, and the relative size of rect A->B is {0, 0, 50, 50} then what would my absolute size of rect A->B be?
[15:53:16] <piou> Guest50: ok, that's not encryption that's encoding, and in that cade you'll need to double base64_decode indeed
[15:53:18] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:53:36] <mrig> Seems that it is preferable to give kids amphetamines than it is to keep reading as distraction free as possible.
[15:53:36] <Akronymus> just use base64_decode twice? Guest50
[15:53:44] <Guest50> yes
[15:53:49] <Guest50> good bye
[15:53:52] *** Parts: Guest50 (~Guest50@31.223.156.200) ()
[15:53:59] *** Joins: euouae (~euouae@user/euouae)
[15:54:03] <Akronymus> smallville7123 is relative adding, subtracting, etc?
[15:54:11] <Akronymus> wow, not even a thanks....
[15:54:15] <mrig> Which is utterly insane, of course this narrative is pushed by the aggressive types that find linear tasks simple
[15:54:29] *** Joins: Stefan123 (~Stefan123@31.223.156.200)
[15:54:29] <mrig> more linear minded folk.
[15:54:43] <smallville7123> Akronymus: what do you mean?
[15:54:47] <piou> Akronymus: he did thank 5 minutes earlier, one of the troll answers hit true
[15:54:49] <Akronymus> https://lmgtfy.app/?q=php+decrypt+base64 I shouldve posted this link
[15:54:50] <bayaz> Title: LMGTFY - Let Me Google That For You 
[15:54:57] <mrig> But I gave up looking for sane practices quite some time ago ;)
[15:55:05] <Stefan123> hello everyone 
[15:55:06] <Akronymus> piou oh didn't see it
[15:55:23] <Akronymus> smallville7123 what does relative size encode? How is it relative?
[15:55:31] <Stefan123> Question: Can I "install" CSS in PyCharm community?
[15:55:47] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:55:55] <Akronymus> sounds like something a plugin would do
[15:55:56] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[15:56:03] <merijn> The combination of "decrypt" and base64 suggest some *very* big misunderstandings of what base64 is
[15:56:04] <Akronymus> I assume you mean syntax highlighting and such
[15:56:06] <mobidrop> I knew it was base64, I know PHP programmers
[15:56:11] <Akronymus> merijn yeah
[15:56:19] <mobidrop> scroll up, I was the first to answer base64_decode hahaha
[15:56:24] <Stefan123>  Akronymus yes
[15:56:29] <Akronymus> mobidrop yeah, sorry, I didn't see it.
[15:56:55] <Akronymus> "pycharm css plugin" Stefan123 this search string should work with most search engines
[15:56:55] <smallville7123> if the absolute size of rect A is {45, 25, 95, 75}, and the relative size of rect A->B->C is {0, 0, 25, 25} then what would my absolute size of rect A->B->C be?  *
[15:57:15] <mobidrop> not shitting on PHP programmers though, I'm one myself :)
[15:57:27] <Akronymus> just sum each field? smallville7123
[15:57:58] <Akronymus> So, 45 +0, 25+0,95+25,75+25
[15:58:01] *** Joins: gggp_ (~gggp@123.113.180.255)
[15:58:13] <Akronymus> Or subtract?
[15:58:38] <smallville7123> the relative position is relative to the absolute position of the parent with {0, 0, 0, 0} being parent top left with a size of 0 inside the parent
[15:58:58] <Akronymus> Or, if it is a percentage thing, then multiply with (1-(value/100))?
[15:58:59] <Stefan123> Best editor for C++ ?
[15:59:19] <euouae> Emacs 
[15:59:30] <Akronymus> So, it is basically a offset for the top left and bottom right edges?
[15:59:33] <smallville7123> all values are in pixels
[15:59:38] <Akronymus> corners*
[15:59:38] <smallville7123> yes
[15:59:39] <merijn> Stefan123: vim, obv
[15:59:44] <Akronymus> Ok, that helps
[16:00:01] <Akronymus> Is it how far in from the edge of the parent it is?
[16:00:15] <Akronymus> smallville7123
[16:00:18] <euouae> merijn: :<
[16:00:34] *** Joins: salvatore (~Username@5.170.16.91)
[16:00:43] <Akronymus> Or is it a offset how much further down/left the corner is?
[16:00:48] <merijn> euouae: Not even joking >.>
[16:00:52] <Akronymus> s/left/right
[16:00:53] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:01:06] <pulse> Stefan123, visual studio. second best visual studio code
[16:01:13] <smallville7123> for example a child with {0, 0, 5, 0}, inside of a parent of {0, 0, 10, 0}, will have an absolute position of {0, 0, 5, 0}, and its parent will have an absolute position of {0, 0, 10, 0}
[16:01:15] <mrig> Perhaps I'll just wrap it and return a non exportable type with .New()
[16:01:17] *** Quits: gggp__ (~gggp@60.10.194.45) (Ping timeout: 245 seconds)
[16:01:23] <Akronymus> pulse rider is pretty damn good.
[16:01:28] *** Joins: nekodesu (~bit@user/nekobit)
[16:01:32] <Akronymus> Ok, so it is how far in it is.
[16:01:42] <smallville7123> yes
[16:01:47] <Stefan123> yes
[16:01:53] <mobidrop> nice
[16:02:04] <pulse> smallville7123, sketch it out on a piece of paper and the answer will be obvious
[16:02:08] <Akronymus> So sum the first two values, subtract the child relative from the parent absolute for the last two smallville7123
[16:02:20] <Stefan123> So sum the first two values, subtract the child relative from the parent absolute for the last two smallville7123
[16:02:45] <Akronymus> (a1+r1,a2+r2,a3-r3,a4-r4) smallville7123 where a = absolute parent, r = relative child
[16:02:50] <smallville7123> Stefan123: stop repeating stuff lol
[16:02:52] <Stefan123> (a1+r1,a2+r2,a3-r3,a4-r4) smallville7123 where a = absolute parent, r = relative child
[16:03:02] <Stefan123> stop repeating stuff lol
[16:03:06] <smallville7123> -_-
[16:03:13] <Akronymus> smallville7123 just /ignore 
[16:03:14] <Stefan123> -_-
[16:03:18] <Stefan123>  just /ignore 
[16:03:40] <Akronymus> Did it work for you? smallville7123?
[16:03:47] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[16:05:03] <Stefan123> using System;
[16:05:03] <Stefan123> namespace CODING {
[16:05:04] <Stefan123> 	class Program {
[16:05:04] <Stefan123> 		public stasic void Main(string[] args) {
[16:05:05] <Stefan123> 			Console.WriteLine("Stupid")
[16:05:05] <Stefan123> 		}	
[16:05:06] <Stefan123> 	}
[16:05:06] <Stefan123> }
[16:05:17] <Stefan123> import socket
[16:05:21] <Stefan123> import random
[16:05:25] <Stefan123> import threading
[16:05:33] <Stefan123> from os import system
[16:05:38] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:05:41] <Stefan123> system("ping google.com")
[16:05:46] *** Quits: salvatore (~Username@5.170.16.91) (Remote host closed the connection)
[16:06:02] <Stefan123> if 5 < 10: print("hahahaha")
[16:06:29] <Stefan123> server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
[16:06:40] <Stefan123> server.bind((192.168.1.1, 80)
[16:06:43] <Stefan123> server.listen()
[16:06:46] <Stefan123> while True:
[16:07:16] <Stefan123> Are you alive?
[16:07:23] <pavonia> Stefan123: Don't paste multiple lines of code into the channel, use a pastebin
[16:07:32] <Akronymus> Oh he is still doing that?
[16:07:43] <Stefan123> No
[16:07:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[16:07:58] <piou> pavonia: he's here to annoy, a pastebin would defeat the purpose
[16:08:10] <Stefan123> Ok 
[16:08:11] <Stefan123> an error occurred 
[16:08:27] *** Joins: salvatore (~Username@5.170.16.91)
[16:09:00] <Akronymus> oof, smallvile lost connection :(
[16:09:00] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[16:09:36] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[16:09:41] <Akronymus> piou the longer I am in irc, the faster I pull out the /ignore it seems
[16:11:29] *** Quits: salvatore (~Username@5.170.16.91) (Client Quit)
[16:11:41] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[16:11:44] <pavonia> I've been on IRC for 12 years or so and haven't used /ignore a single time, as far as I remember :p
[16:12:11] <euouae> Made of steel 
[16:12:26] <Akronymus> I used it for two people in here.
[16:12:30] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:12:31] <Stefan123> import requests
[16:12:31] <Stefan123> import bs4
[16:12:32] <Stefan123> from os import system
[16:12:32] <Stefan123> system("cls")
[16:12:33] <Stefan123> host = input("Domain for check: ")
[16:12:33] <Stefan123> r = requests.get("https://" + host)
[16:12:34] <Stefan123> data = r.text
[16:12:34] <Stefan123> result = bs4.BeautifulSoup(data, features = "html.parser")
[16:12:35] <Stefan123> while True:
[16:12:35] <arahael> Stefan123: The /topic specifically mentions using a pastebin, please don't paste la
[16:12:35] <Stefan123> 	for link in result.find_all("a"):
[16:12:36] <Stefan123> 		print(link.get("href"))
[16:12:38] <Stefan123> It is my Dos tool
[16:12:38] <arahael> !q Stefan123 
[16:12:39] *** bayaz sets mode: +q *!*@31.223.156.200
[16:12:50] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[16:13:06] <Akronymus> Altough, I only do it for 24 hrs at a time (or at least try to.
[16:13:07] <arahael> Stefan123: The /topic specifically mentions using a pastebin, please don't paste large code samples here, use a website and provide the URL instead.
[16:13:14] <arahael> !uq Stefan123 
[16:13:14] *** bayaz sets mode: -q *!*@31.223.156.200
[16:13:16] <Akronymus> ) can't leave open braces
[16:13:25] <euouae> Hmm does anyone have trouble setting up 2FA?
[16:13:28] <arahael> Stefan123: I had to quiet you for a bit to prevent more pastes.
[16:13:32] <Stefan123> ok
[16:13:41] <Akronymus> arahael i bet he is gonna do it agian
[16:13:43] <euouae> Both Google and Facebook give me errors when I try 
[16:13:53] <arahael> Akronymus: If he does, he'll be !q'ed again!
[16:14:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:15:06] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[16:15:10] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Read error: Connection reset by peer)
[16:15:20] <Akronymus> Oh, you are a mod here, but only get assigned the role for commands?
[16:15:22] <Stefan123> Here you can see my scripts for DoD/DDoS attacks: https://bit.ly/2Xw7LVX
[16:15:23] <bayaz> Title: Hi Okay 
[16:15:41] <arahael> Akronymus: Only mods can apply those commands.
[16:15:54] <Akronymus> arahael yeah, but you don't have the "+"
[16:16:01] <Akronymus> Which confused me
[16:16:02] *** RenAdjest2 is now known as RenAdjest
[16:16:03] <Stefan123> arahael are you admin
[16:16:03] <arahael> Stefan123: That's a... Youtube?
[16:16:19] <Stefan123> arahael invalid URL, sorry
[16:16:19] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[16:16:26] <arahael> Stefan123: I'm one of them for this channel, yes.
[16:16:33] <pulse> Stefan123, if you don't stop trolling you're gonna get banned
[16:16:38] <pulse> this is pretty much your last warning
[16:16:43] *** Joins: death916_lap (~Death916@user/death916)
[16:16:43] <arahael> Agreed.
[16:16:43] <Akronymus> pulse you a mod too?
[16:16:44] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:16:54] <pulse> Akronymus, yes
[16:16:59] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:17:02] <Stefan123> OK, I gonna stop trolling
[16:17:05] *** Joins: death916_lap (~Death916@user/death916)
[16:17:06] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:17:10] <pulse> see, that wasn't so hard
[16:17:18] *** Joins: jinsun (~quassel@user/jinsun)
[16:17:23] <Stefan123> Yes
[16:17:27] *** Joins: death916_lap (~Death916@user/death916)
[16:17:27] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:17:48] *** Joins: death916_lap (~Death916@user/death916)
[16:17:49] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:18:01] <Akronymus> oof, seems someone has connection problems.
[16:18:12] <euouae> I’m encountering issues registering my security key with gmail and Facebook, does anyone have similar issues?
[16:18:28] <arahael> Akronymus: I have to admit I hide quits/joins.  Your client might have the same feature.
[16:18:31] <Akronymus> euouae security key in what sense?
[16:18:36] <pulse> by security key you mean password?
[16:18:39] *** Joins: src (~src@user/src)
[16:18:43] <mobidrop> euaouoei?
[16:18:46] <euouae> Hardware security key like yubikey 
[16:19:05] <arahael> euouae: I find it works well, but browser support is inconsistent.
[16:19:24] <euouae> Arahael I get 404 on Facebook!
[16:19:25] <smallvil_> ill just give the data i have instead cus it is difficult to explain
[16:19:28] <Akronymus> arahael fair enough. I kinda like being able to see peoples join/leave for when I talk to them and they suddenly cease replying.
[16:19:31] <smallvil_> Akronymus: 
[16:19:35] <euouae> arahael do you have a Facebook?
[16:19:38] <mobidrop> wow that's a word!
[16:19:39] <Akronymus> Wb  smallvil_
[16:20:01] <Stefan123> How to download file with Python?
[16:20:03] <arahael> Akronymus: Yeah, my client will mention the quit/join if it was within say, 5 minutes of them saying something. (Or was it 5 seconds?  I think seconds.)
[16:20:10] <Stefan123> Txt File
[16:20:12] <arahael> euouae: And yes, I do.
[16:20:16] <Akronymus> arahael sounds useful.
[16:20:30] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[16:20:50] <euouae> Arahael, https://m.facebook.com/security/2fac/setup/intro/metadata/?source=1
[16:20:51] <bayaz> Type: application/xhtml+xml; charset=utf-8 
[16:20:52] <Akronymus> smallvil_ I don't see any data.
[16:20:54] <smallvil_> https://gist.github.com/mgood7123/1c882ada7e6e54c247be1e7d451695bc
[16:20:54] <bayaz> Title: ViewGroup.cpp 
[16:20:56] <Akronymus> Nvm
[16:21:01] <smallvil_> :)
[16:21:08] <euouae> arahael, does the third option give you a 404!
[16:21:10] <pulse> Stefan123, if you google that exact questions you will get many ways to do it, for example https://betterprogramming.pub/3-simple-ways-to-download-files-with-python-569cb91acae6
[16:21:12] <euouae> ?
[16:21:13] <bayaz> Title: 3 Simple Ways to Download Files With Python 
[16:21:51] <arahael> euouae: What's the third option again?
[16:21:59] <Stefan123> What are they used for: lambda, StringVar() in Python?
[16:22:15] <Akronymus> smallvil_ for absolutes it seems to define the position of the top left and bottom right corners, for relative it seems to define how far in they are from the parent.
[16:22:19] <euouae> Arahael, “security key”
[16:22:36] <Stefan123>  are you programmer
[16:22:40] <Akronymus> For child relatives*
[16:22:46] <smallvil_> yea
[16:22:50] <rty> euouae: what exactly is the error and what are you doing? there are different 2FA implementations. does it not accept your OTP result?
[16:22:52] <Akronymus> Dunno about the child absolutes
[16:23:16] <smallvil_> the child absolute is the child's absolute position
[16:23:20] <euouae> rty, the error is “content not found” when I click the link, never mind ever using the key
[16:23:21] *** Joins: snake (~snake@user/snake)
[16:23:29] *** Quits: src (~src@user/src) (Client Quit)
[16:23:41] *** Joins: src (~src@user/src)
[16:23:45] <rty> I see. cannot help, sorry
[16:23:48] <smallvil_> eg its absolute position relative to the root view
[16:24:10] <arahael> euouae: Ah, well, I remember it worked fine for me, but maybe they broke it.
[16:24:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:24:40] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[16:24:54] *** Quits: src (~src@user/src) (Client Quit)
[16:25:01] <euouae> Arahael, I mean does it work now if you click it?
[16:25:05] *** Joins: src (~src@user/src)
[16:25:32] <Stefan123> I have problem! Description of problem: WW91IGFyZSBzdHVwaWQhISEh
[16:25:39] <Stefan123> WW91IGFyZSBzdHVwaWQhISEh decode it
[16:25:42] <arahael> euouae: I'd have to actually get my key.  
[16:25:43] <Stefan123> Base 64
[16:25:50] <Stefan123> good bye
[16:25:52] *** Parts: Stefan123 (~Stefan123@31.223.156.200) ()
[16:26:03] <euouae> Arahael, you just have to click the link and see if it gives 404 or not
[16:26:10] <euouae> Oh
[16:26:14] <smallvil_> Akronymus: the absolute position is calculated from the parent's absolute position, and the child's relative position
[16:26:18] <euouae> you mean you need your key to log into Facebook?
[16:26:35] <smallvil_> Akronymus: the child absolute position is calculated from the parent's absolute position, and the child's relative position *
[16:26:44] <arahael> euouae: If you set up a security key, yes, but only the first time, therafter it's cached.
[16:27:17] <euouae> Well then why don’t you just check the link?
[16:27:17] <smallvil_> wait...
[16:27:37] <euouae> It doesn’t require you to actually use a key, I get 404 
[16:27:46] <arahael> euouae: The link isn't a 404 for me, no.
[16:27:49] <smallvil_> wouldnt i just do child_absolute_width = parent_absolute_x + child_relative_width ?
[16:27:59] <euouae> Ah okay thank you for checking. Huh
[16:28:08] <smallvil_> Akronymus: 
[16:28:20] <arahael> euouae: Oh, just realised you're using the mobile page.  Try the desktop page.
[16:28:40] <euouae> On mobile? Is it possible?
[16:29:08] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[16:29:15] <arahael> euouae: I don't think the key works on mobile?
[16:29:29] <euouae> Yubikey 5 works via nfc 
[16:29:47] <euouae> but also via lightning if you have the 5i model
[16:29:50] <arahael> Yeah, but I still do it via OTP on the mobile.
[16:30:03] <arahael> TOTP, rather, I think.
[16:30:07] <euouae> Ok but the link is the problem, not the method
[16:30:31] <arahael> Yeah.  Anyway, you've caught me at a bad time. 10pm here - I must get ready for bed.
[16:30:40] <euouae> Hmm no worries
[16:30:40] <arahael> (Which is why I'm a bit distracted right now!)
[16:30:43] <euouae> Thank you
[16:30:45] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[16:30:46] <arahael> yw.
[16:30:49] *** Quits: Scarecr0w_ (internot@2607:5300:60:21b::1) (Changing host)
[16:30:49] *** Joins: Scarecr0w_ (internot@user/scarecr0w)
[16:31:11] *** Scarecr0w_ is now known as Scarecr0w
[16:31:38] <rty> can you request a desktop version in your browser?
[16:31:45] <rty> desktop version of the website
[16:32:02] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[16:32:16] <rty> try different browser. try different hardware device. try different network?
[16:32:22] *** Quits: hard-drive (~hard-driv@cpe-24-163-84-4.nc.res.rr.com) (Ping timeout: 268 seconds)
[16:32:41] <smallvil_> eg, 
[16:32:47] <smallvil_> a.x = p.x + c.x
[16:32:52] <smallvil_> a.y = p.y + c.y
[16:32:59] <smallvil_> p.w = p.x + c.w
[16:33:06] <smallvil_> p.h = p.y + c.h
[16:33:19] <smallvil_> a.w =      *
[16:33:22] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 245 seconds)
[16:33:24] <smallvil_> a.h =        *
[16:33:35] <smallvil_> Akronymus: would it be that?
[16:33:57] <pyzozord> smallvil_: please paste more than three lines in a paste been. See /topic for details
[16:34:34] *** Joins: ixil (~ixil@82.197.178.137)
[16:34:38] <BrkThruCopyWritr> Did you guys find the use of Dexedrine, Adderrall, etc aided in programming?
[16:34:50] <smallvil_> a.x = p.x + c.x; a.y = p.y + c.y; a.w = p.x + c.w; a.h = p.y + c.h
[16:35:12] <smallvil_> a.x = p.x + c.x;         a.y = p.y + c.y;         a.w = p.x + c.w;            a.h = p.y + c.h    *
[16:35:14] <BrkThruCopyWritr> From what I understand, those meds give the user an 'illusion' that  they got much more done
[16:35:16] <smallvil_> Akronymus: 
[16:35:18] <BrkThruCopyWritr> and then rely on it
[16:36:23] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:36:23] *** Quits: guy_frm_yogaland (~gourab@2409:4062:4e93:b6d:d697:262d:fcb6:2c7f) (Quit: Konversation terminated!)
[16:36:31] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[16:36:43] <smallvil_> Akronymus: https://gist.github.com/mgood7123/acff5a3b471d7e9fbe354895ab68df49
[16:36:44] <bayaz> Title: gist:acff5a3b471d7e9fbe354895ab68df49 
[16:36:58] <smallvil_> would that be right?
[16:37:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:37:34] <Akronymus> Sorry, had a meeting
[16:37:52] <Akronymus> But no, I'd assume the latter 2 to be - rather than +
[16:37:59] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[16:38:09] <smallvil_> oh yea
[16:38:12] <InPhase> pyzozord: Your typo inspires a marketing idea.  pastebean.com is not yet registered.
[16:38:16] *** Joins: dan01 (~dan01@2a02:2f09:381b:db00:646a:e3c2:e636:c3e8)
[16:38:26] <smallvil_> wait why?
[16:38:27] <Akronymus> InPhase does it sell bean paste?
[16:38:37] <Akronymus> Because margin = moving inwards
[16:38:44] <pyzozord> InPhase: oh damn! I keep making phonetic typos like that!
[16:38:44] <InPhase> Akronymus: AND accepts small chunks of text.  Twice the profit.
[16:38:57] <Akronymus> And on the bottom right corner, inwards means subtracting in terms of coordinates.
[16:39:05] <smallvil_> Akronymus: https://gist.github.com/mgood7123/acff5a3b471d7e9fbe354895ab68df49 this?
[16:39:06] <bayaz> Title: gist:acff5a3b471d7e9fbe354895ab68df49 
[16:39:44] <pyzozord> For slaic people ee and i sounds are easy to confuse
[16:39:50] <pyzozord> *slavic
[16:39:51] <Akronymus> Why are you setting the parent?
[16:40:05] <InPhase> pyzozord: I find myself doing that all the time as well.  :)  Although I catch a good fraction now before I hit enter.
[16:40:06] <smallvil_> im not
[16:40:22] <Akronymus> Oh I am dum
[16:40:30] <pyzozord> InPhase: fair point
[16:40:50] <Akronymus>  parentPosition.width - (parentPosition.width - childInfo->childRelativePosition.width)
[16:41:06] <Akronymus> This is the same as childinf->childrelativeposition.width
[16:41:16] <Akronymus> parentpositions cancel out
[16:41:26] <Akronymus> parentPosition.width  - childInfo->childRelativePosition.width
[16:41:32] <Akronymus> I think it should be like that
[16:41:51] <smallvil_> no
[16:41:58] <smallvil_> refresh the paste
[16:42:06] <smallvil_> parentPosition.x + childInfo->childRelativePosition.x + childInfo->childRelativePosition.width
[16:42:19] *** Joins: euouae (~euouae@user/euouae)
[16:42:25] <Akronymus> Oh, had the wrong gist open
[16:42:34] <smallvil_> :)
[16:42:38] <euouae> Omg I can’t believe GitHub won’t allow you to register your security key as 2FA
[16:42:42] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[16:42:48] <Akronymus> Yeah that seems right.
[16:42:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:52] <euouae> only as “secondary option to SMS” lmao what the heck
[16:42:55] <smallvil_> yay
[16:43:09] <euouae> rty, what is that?!
[16:43:18] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-4149-2f35-df80-c24c.fixed6.kpn.net) (Remote host closed the connection)
[16:44:38] <rty> euouae: what is what?
[16:44:40] <arahael> euouae: It does let you register it as TOTP, though.
[16:45:03] <euouae> It’s a secondary method arahael it adds no securiry
[16:45:12] <euouae> Over the primary method
[16:45:40] <arahael> euouae: Yeah - weakest link and all that.
[16:45:51] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[16:45:52] *** Joins: Shiva (~LordShiva@user/one39dev)
[16:45:57] <euouae> So… wtf ?
[16:47:13] <rty> tbh I don't use 2fa anymore. it's more of an annoyance than usefulness
[16:47:20] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:47:21] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:47:30] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[16:47:39] <arahael> euouae: In my country, our national identity website, banks, health, and all that, use - at best, SMS as 2fa. (Which is crap, but it gets worse).
[16:47:53] *** Joins: sevla (~platen@user/sevla)
[16:48:04] <arahael> euouae: If you go overseas ,they recommend *disabling* SMS auth, even though it's precisely the scenario where you're even more likely to be needing the security.
[16:48:09] *** Quits: One39Dev (LordShiva@user/one39dev) (Ping timeout: 248 seconds)
[16:48:10] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:48:37] <euouae> SMS sucks and they suck
[16:48:57] <rty> have my phone stolen? better have those backup codes saved, otherwise goodbye account. stored where? with the rest of the passwords in the password database. because storing it elsewhere is too much effort. so, there is really no point, just jumping through more hoops to complicate life for no reason
[16:49:07] <arahael> rty: i backup mine.
[16:50:08] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:985c:31ee:fd40:ed3)
[16:50:18] <rty> also iirc on github you can choose whether you want totp or sms
[16:50:27] <rty> as is on many other websites
[16:50:36] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:51c9:dd9a:ebbf:de9b)
[16:50:49] <smallvil_> Akronymus: so this would be more or less correct? https://gist.github.com/mgood7123/dc7e0ad697400ac939b6311b3c4902ef
[16:50:50] <bayaz> Title: ViewGroup.cpp 
[16:51:05] <rty> I'm more concerned with websites billing me for that sms they send through half the planet
[16:51:23] <piou> rty: I'd backup that not with the rest of the passwords but on a physical sheet of paper in a personnal safe. Now, admitedly not everyone has a physical safe, but just printing it moves the situation from "it's a useless hassle" to "I had to find my printer once but now it is significantly harder for an attacker to get the back codes than getting the passwords"
[16:51:41] <piou> rty: I mean, nobody's forcing you to make it into a pointless loop
[16:51:48] <Akronymus> smallvil_ sorry don't really have the time to look through that whole code.
[16:52:25] <smallvil_> thats ok
[16:52:31] *** Joins: silasfox (~silasfox@cgn-89-1-212-5.nc.de)
[16:52:42] *** Parts: euouae (~euouae@user/euouae) ()
[16:52:56] *** Joins: euouae (~euouae@user/euouae)
[16:54:10] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[16:56:44] <Akronymus> Also, I am not a c++ dev.
[16:57:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:57:33] <beaky> what is it like being a c++ dev
[16:57:38] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[16:58:02] <Akronymus> beaky I wouldn't know
[16:58:11] *** pizzaiolo is now known as pizza
[16:59:53] *** Joins: Lyn (~Lyn@user/law)
[17:00:02] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[17:01:10] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 240 seconds)
[17:01:32] *** Quits: Hax0r (~Hax0r@2001:16a2:c040:253a:7a8a:7af9:77fb:3f86) (Quit: Leaving)
[17:01:52] <edgar-rft> that means you would deviate from c++
[17:02:23] *** Joins: gggp__ (~gggp@60.10.194.45)
[17:02:45] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:51c9:dd9a:ebbf:de9b) (Quit: Leaving)
[17:03:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[17:03:20] <pyzozord> beaky: probably hating on the fact that the language still allows c syntax especially raw pointers
[17:03:29] <pyzozord> probably because there is a lot of legacy
[17:03:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:04:36] <pulse> beaky, it's like piloting the starship out of klingon warspace
[17:04:40] <pyzozord> btw good time to continue the discussion from earlier: why do people hate on exceptions? They seem so convenient!
[17:05:04] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[17:05:21] <pulse> pyzozord, many reasons
[17:05:28] <edgar-rft> that's because because most people are average
[17:05:41] *** Quits: gggp_ (~gggp@123.113.180.255) (Ping timeout: 268 seconds)
[17:05:45] <pulse> read https://google.github.io/styleguide/cppguide.html#Exceptions for some common reasons
[17:05:46] <bayaz> Title: Google C++ Style Guide 
[17:06:06] <pulse> basically they're problematic at scale
[17:06:19] <pyzozord> I feel lik there is some general attitude towards exceptions similiar to that of goto, but I'm not sure
[17:06:46] <Akronymus> >exceptions
[17:06:47] *** Joins: tolot (~tolot@dynamic-093-131-135-142.93.131.pool.telefonica.de)
[17:06:49] <beaky> exceptions are hated not because they are bad in themselves but because they are abused for control flow, used in place of other more composeable constructs such as error conditions, performance concerns or correctness issues, etc.
[17:06:51] <Akronymus> Oh how I hate them
[17:07:07] <pulse> yes, never do control flow with exceptions
[17:07:07] <Akronymus> beaky exactly
[17:07:38] <pulse> i prefer error codes conceptually too
[17:07:40] <Akronymus> Basically anything exceptions are good for, ADT's do better
[17:07:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 258 seconds)
[17:07:42] <pulse> it's easier to reason about
[17:07:43] <pyzozord> I think there is kind of anti-exception attitude similar to ani-oop
[17:07:54] <Akronymus> pulse ADT's >>>>>>>>>> error codes
[17:08:01] <beaky> yes even if they aren't abused for control flow, the control flow of exceptions in themselves can be nontrivial to follow compared to just following a trail of error condition result handlers
[17:08:39] <pyzozord> I kind of subscribe to the ani-oop, but I like exceptions. Maybe I didn't have enough practice with exceptions? I use them all the time but it's superficial use. Usually two-max three levels of try nesting at any point in the application
[17:08:47] <Akronymus> Exceptions should only be thrown for "We can't trust this system anymore" cases. IMO
[17:09:37] *** Quits: gggp__ (~gggp@60.10.194.45) (Ping timeout: 245 seconds)
[17:09:38] <pyzozord> Akronymus: I think that's more or less what go does, but I'd need to check. Actually I need to check go's stance on exception in general. I feel like the ani-exception attitude is coming from those circles
[17:09:53] <pyzozord> Which I kind of consider myself a friend of
[17:09:58] <Akronymus> I use f# personally.
[17:10:09] <Akronymus> In there, I just return a result or option
[17:10:12] *** Joins: archie (~archie@host-82-59-191-203.retail.telecomitalia.it)
[17:10:19] <pyzozord> Which means I should not like exceptions either, but I do like them. So I'm confused. I feel like I am not understanding something that is bad about exceptions
[17:10:23] <Akronymus> Oh, this is invalid data? Return a option.none
[17:10:29] *** Parts: euouae (~euouae@user/euouae) ()
[17:10:45] <archie> hello
[17:11:02] <Akronymus> Also: exceptions obfuscate what can happen.
[17:11:23] <Akronymus> If I see a result as a return value, I know it can "fail"
[17:11:29] <archie> https://bpa.st/M6CA what does the line 5 do? Looks like the empty constructor is already available, so is that line redundant?
[17:11:30] <bayaz> Title: View paste M6CA 
[17:11:46] <Akronymus> Where with exceptions I need to inspect it to see which ones it can throw
[17:13:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[17:16:27] <Akronymus> Why does teams ask me each and every single time for the call quality?
[17:17:58] <rty> archie: https://stackoverflow.com/questions/13576055/how-is-default-different-from-for-default-constructor-and-destructor
[17:17:59] <bayaz> Title: How is "=default" different from "{}" for default constructor and destructor? 
[17:18:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:19:06] <archie> rty I would just omit that line, not use {}
[17:20:18] *** Quits: usr123 (~usr123@124.253.244.103) (Read error: Connection reset by peer)
[17:20:32] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:20:41] *** Joins: usr123 (~usr123@124.253.110.45)
[17:20:56] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:21:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:23:15] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[17:24:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:26:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:27:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:29:36] <Akronymus> We have a horror scenario on our hands.
[17:29:49] <Akronymus> We ran out of coffee.
[17:31:47] *** Joins: silasfox70 (~silasfox@xdsl-78-35-71-64.nc.de)
[17:32:26] <mercenary> Better run out for some more coffee then
[17:32:41] *** Quits: archie (~archie@host-82-59-191-203.retail.telecomitalia.it) (Quit: Client closed)
[17:33:26] *** Quits: launchd (examknow@bitbot/launchd) (Read error: Connection reset by peer)
[17:33:28] *** Joins: jamea (~jamea@187.185.190.209)
[17:33:38] <Akronymus> mercenary "/quit" 
[17:33:41] <Akronymus> Here's the door
[17:33:42] *** Joins: VideoGameEnjoyer (~davidv7@BSN-143-120-84.dynamic.siol.net)
[17:33:48] <Akronymus> That pun was bad
[17:34:10] *** Quits: silasfox (~silasfox@cgn-89-1-212-5.nc.de) (Ping timeout: 240 seconds)
[17:34:51] <mobidrop> /quit
[17:35:24] <mobidrop> lack of coffee is good for sleep at least
[17:35:36] <Akronymus> But I am already on 8 cups today
[17:35:46] <rty> archie: in general yes, implicitly declared and implicitly defined or defaulted default ctor would be the same in practice, however in your case the point is 'explicit', which makes the ctor non-convertible: https://godbolt.org/z/1z5To4xnY . this may be useful if e.g. you have an operator= that does something very specific, and b2 = {}; would leave the Bar object in some unspecified state.
[17:35:47] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[17:35:47] <pyzozord> good mother coffee
[17:36:00] <Akronymus> I wonder why we ran out
[17:36:18] <rty> he left :(
[17:37:30] <Akronymus> Happens.
[17:38:29] <pyzozord> Akronymus: https://www.youtube.com/watch?v=BNBbSloDhi4
[17:38:30] <bayaz> Title: Philip J. Fry de Futurama (Sweet Dreams) 
[17:38:36] <Akronymus> I know
[17:39:00] <pyzozord> I like the sweet dreams version better
[17:39:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:41:50] <Akronymus> I GOT IT TO WORK!
[17:42:05] <pyzozord> That's that 8th cup, I'm sure
[17:42:10] *** Joins: rtypo (~alex@user/rtypo)
[17:43:19] *** Joins: scabootssca__ (~scabby@user/scabootssca)
[17:43:42] <edgar-rft> it's always good to get others to work as long as oneself is not affected
[17:44:49] *** Joins: DSync (~ds@user/deepspace-link)
[17:45:48] *** Joins: salitos (~salitos@197.156.190.179)
[17:46:47] <Akronymus> nvm
[17:46:54] <Akronymus> It doesn't work after all
[17:47:43] <mrig> coffee, did someone say coffee? [a chain reaction is started across the worlds, as irc readers upon all continents simultaneously feel the urge to brew]
[17:48:01] <Akronymus> https://www.youtube.com/watch?v=TCUPeAlpDVE pyzozord i prefer this version
[17:48:02] <bayaz> Title: But if you close your eyes 
[17:48:45] *** Joins: vysn (~vysn@user/vysn)
[17:49:33] <smallville7123> yay i got it working
[17:50:16] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[17:51:19] <beaky> what is it like to get it working
[17:53:10] *** Quits: silasfox70 (~silasfox@xdsl-78-35-71-64.nc.de) (Quit: Connection closed)
[17:54:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 248 seconds)
[17:55:20] <pyzozord> Akronymus: lol did you just rickrolled me
[17:55:54] <Akronymus> pyzozord the oppurtunity presented itself
[17:56:08] *** Joins: silasfox (~sbv@2001-4dd6-a194-0-6e8a-d9bc-7d25-2e68.ipv6dyn.netcologne.de)
[17:56:13] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[17:56:38] <Akronymus> https://news.ycombinator.com/item?id=28182181
[17:56:42] <Akronymus> Huh.
[17:58:51] *** Quits: VideoGameEnjoyer (~davidv7@BSN-143-120-84.dynamic.siol.net) (Remote host closed the connection)
[17:59:06] <pyzozord> well it's nerds, it's just you are trying to sell sausages to a bunch of sausage makers. We know how the sausage is made. Can't gaslight us into buying your subpar sausage
[17:59:12] *** Joins: VideoGameEnjoyer (~davidv7@BSN-143-120-84.dynamic.siol.net)
[17:59:15] <pyzozord> s/it's/it's not/
[18:00:03] <mrig> oh it is an erry sensation when you look at the screen a press a number then k and vim jumps to the correct line, by muscle memory alone :|
[18:00:20] <mrig> counting without counting
[18:00:35] <pyzozord> yup :) it's everywhere though even on 9gag and youtube
[18:03:59] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[18:06:07] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[18:07:00] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-64ef-166-67f7-1fc7.fixed6.kpn.net)
[18:08:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[18:09:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:10:03] *** Joins: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2)
[18:10:31] *** Joins: magla (~gelignite@55d429d0.access.ecotel.net)
[18:13:37] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 258 seconds)
[18:14:23] *** Joins: cthulchu (~Cthulchu@213.174.21.101)
[18:14:28] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:16:14] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[18:17:24] <GeDaMo> https://freakonomics.com/podcast/advertising-part-2/ "Does Advertising Actually Work? (Part 2: Digital)"
[18:17:25] <bayaz> Title: Does Advertising Actually Work? (Part 2: Digital) (Ep. 441) - Freakonomics 
[18:18:14] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[18:18:42] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[18:18:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[18:19:07] *** Joins: fakuve (~fakuve@192.210.243.250)
[18:19:12] *** Joins: NChief (~nchief@irc.nortv.net)
[18:19:41] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:20:37] <fakuve> hi there , sorry how did you call an String that spans more than one line break of code, that the breaks are been interpreted as actual new `echo ""` statements or linebreaks?
[18:20:46] <fakuve> I forgot the name of it
[18:21:24] *** Joins: Citillara (~userid@user/citillara)
[18:21:42] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:21:45] *** Joins: contagious_meow (~salitos@102.166.135.69)
[18:22:59] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[18:23:02] *** Joins: Pickchea (~private@user/pickchea)
[18:24:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[18:24:40] *** Quits: salitos (~salitos@197.156.190.179) (Ping timeout: 240 seconds)
[18:24:43] *** Joins: loliko (~loliko@c-73-193-36-183.hsd1.wa.comcast.net)
[18:25:42] *** Joins: Julius_ (~Julius76@2a02:810b:c640:514:6cd5:1386:fd52:22a0)
[18:26:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[18:28:24] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[18:30:36] <jinsun> multi-line strings?
[18:31:34] *** Quits: VideoGameEnjoyer (~davidv7@BSN-143-120-84.dynamic.siol.net) (Remote host closed the connection)
[18:31:59] <biberu> fakuve: heredocs?
[18:32:43] <fakuve> mmm neither of them
[18:32:57] *** Quits: loliko (~loliko@c-73-193-36-183.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[18:33:12] <fakuve> I know they were implemented in the last revision of JS , ECMA 5 or sth (I'm not really versed at programming)
[18:33:19] *** Joins: ^[ (~user@user//x-8473491)
[18:33:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:33:58] <biberu> in js perhaps you're talking about template literals?
[18:34:35] <fakuve> yep thoseones
[18:34:38] <fakuve> thanks biberu !
[18:34:47] <biberu> np
[18:38:01] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[18:40:16] *** Joins: loliko (~loliko@c-73-193-36-183.hsd1.wa.comcast.net)
[18:40:40] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 240 seconds)
[18:44:51] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:46:15] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[18:46:38] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[18:47:22] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[18:47:25] *** Joins: Hercules (~Hercules@user/hercules)
[18:48:11] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[18:55:41] *** Joins: rsx (~dummy@ppp-188-174-149-206.dynamic.mnet-online.de)
[18:55:51] <mrig> The SVG standard very clearly has a graph structure, is there anyway to import this?
[18:56:24] <Akronymus> Import into what?
[18:56:25] *** Joins: arcatech (~arcatech@user/arcatech)
[18:56:39] <mrig> I'm doing this manually at the moment, considering writing a web scraper to automate the task, was wondering if any such thing exists.
[18:58:04] <mrig> Akronymus: I suppose, though I am loathed to say it, that JSON is the most commonly used lexical device for this sort of thing.
[18:58:31] <mrig> it does not really matter what it is, could be a comma separated table.
[18:59:08] <mrig> I am putting it into a bitvector data type.
[18:59:12] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[18:59:22] <mrig> for sets of what goes with what.
[18:59:31] * Akronymus shrugs
[18:59:43] <Akronymus> I am out of knowledge here
[19:00:18] <mrig> That said, JSON would not be able to specify the rules that exist in some cases.
[19:07:44] <GeDaMo> mrig: given that SVG is XML maybe there are XML tools that would help?
[19:08:09] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:08:54] *** Joins: pulse (~pulse@user/pulse)
[19:10:23] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[19:10:31] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[19:11:01] <mrig> GeDaMo: oh that is an idea, I'll take a look.
[19:13:12] *** Quits: nisstyre (~wes@li798-187.members.linode.com) (Changing host)
[19:13:12] *** Joins: nisstyre (~wes@user/nisstyre)
[19:13:13] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[19:13:23] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[19:13:44] <mrig> I'm not exactly sure what it is that I'm looking at, I suppose it is the fine grained grammar of SVG. That I would need to extrapolate the fine grained rules from documents somehow.
[19:14:03] <mrig> XML schema analysis or something like that.
[19:14:32] <mrig> I'm surprised its not available with the specification really.
[19:18:25] *** Joins: gaurav_ (~usr123@124.253.0.161)
[19:20:02] *** Quits: Ruxnor (kevin@user/kddlb) (Quit: The Lounge - https://thelounge.chat)
[19:20:17] *** Joins: ZenixOwler (~whatever@118.69.128.37)
[19:20:26] *** Quits: usr123 (~usr123@124.253.110.45) (Read error: Connection reset by peer)
[19:20:44] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[19:21:10] <mrig> Oh well, wax on wax off, will have shiny svg eventually :)
[19:21:39] *** Joins: zwr (~zwr@191.47.94.157)
[19:21:47] *** Joins: yamz (~salitos@154.123.46.33)
[19:21:47] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Remote host closed the connection)
[19:21:56] *** Quits: contagious_meow (~salitos@102.166.135.69) (Read error: Connection reset by peer)
[19:22:57] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 245 seconds)
[19:24:18] <pyzozord> I am getting only 42%, any idea what I'm doing wrong? My solution: https://ideone.com/EIdNIZ, problem: https://app.codility.com/programmers/lessons/12-euclidean_algorithm/common_prime_divisors/
[19:24:20] <bayaz> Title: CommonPrimeDivisors coding task - Learn to Code - Codility 
[19:24:40] *** Joins: elnavigator (~elnavigat@105.196.227.126)
[19:25:00] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[19:25:00] <pyzozord> It failes for case "[6059, 551], [442307, 303601]". 2 is expected by my solution returns 0
[19:26:51] <mrig> oh seems that I am after the XML schema for SVG, if one exists.
[19:29:14] <GeDaMo> https://www.w3.org/TR/SVG11/svgdtd.html
[19:29:15] <bayaz> Title: Document Type Definition – SVG 1.1 (Second Edition) 
[19:29:17] *** Joins: anon16__ (~anon16@user/anon16)
[19:29:44] <mrig> I just found this one too https://www.w3.org/TR/2002/WD-SVG11-20020108/SVG.xsd
[19:32:25] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 248 seconds)
[19:33:49] <jinsun> pyzozord: it is pairing up 0th items  and 1th item from each list, 6059 and 442307 have same prime factors (73 and 83), 551 and 303601 also have same prime factors (19 and 29), so that is how it is getting 2 I guess
[19:33:54] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:35:37] *** Quits: yamz (~salitos@154.123.46.33) (Read error: Connection reset by peer)
[19:35:59] *** Joins: yamz (~salitos@154.123.46.33)
[19:36:45] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:41:06] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:41:10] <[itchyjunk]> hi
[19:41:22] <[itchyjunk]> Nesting if's has any major performance loss?
[19:41:26] <[itchyjunk]> how deep can i go?
[19:42:05] <GeDaMo> Depends on the compiler
[19:43:29] <[itchyjunk]> oh..
[19:43:37] <[itchyjunk]> not the language but the compiler?
[19:43:47] <[itchyjunk]> can one compiler compile more than one language?
[19:44:29] <GeDaMo> Big compilers are often split into front end (language specific) and band end (target machine specific)
[19:44:41] <edgar-rft> in interpreted languages probably the interpreter, and yes, there are multi-language compilers 
[19:45:05] <pulse> generally speaking, no
[19:45:09] *** Joins: Bot1 (~Bot1@31.223.156.200)
[19:45:13] <Bot1> Hello
[19:45:16] <[itchyjunk]> ahh well i find nesting if's makes logical sense at times
[19:45:18] <Bot1> You have more skills
[19:45:19] <[itchyjunk]> i am doing it for java
[19:45:22] <pulse> conditional branching is CPU level, it's faster than most other ops
[19:45:29] <Bot1> Prgramming
[19:45:33] *** Joins: manin (~x@185.242.190.95)
[19:45:37] <[itchyjunk]> oh, i have to close `Scanner` object?
[19:45:39] <Bot1> I have question!
[19:45:49] <Bot1> Python
[19:45:55] <[itchyjunk]> 'Resource leak: Input is never closed'
[19:45:59] <Bot1> Cyber Security
[19:46:09] <Bot1> Cyber Security
[19:46:10] *** Quits: elnavigator (~elnavigat@105.196.227.126) (Ping timeout: 240 seconds)
[19:46:19] <Bot1> Cyber Security
[19:46:21] <[itchyjunk]> input is my object, Scanner input = new Scanner(System.in);
[19:46:27] <pulse> Bot1, ask your question if you have one, and stop spamming please
[19:46:30] <Bot1> Cyber Security
[19:46:40] <Bot1> I have question!
[19:46:47] *** Joins: launchd (~examknow@bitbot/launchd)
[19:46:50] <pulse> my patience is running thin Bot1 
[19:46:50] <Bot1> a
[19:46:51] <[itchyjunk]> Maybe literal bot
[19:47:00] <Bot1> a
[19:47:04] <pulse> !q Bot1 
[19:47:05] *** bayaz sets mode: +q *!*@31.223.156.200
[19:47:19] <edgar-rft> Bot1's question is howto get kicked as fast as possible.
[19:47:53] <[itchyjunk]> I am looking at a tutorial
[19:48:01] <[itchyjunk]> and they don't close the Scanner object
[19:48:11] <[itchyjunk]> but Eclipse gives that `data leak` warning
[19:48:12] <edgar-rft> a tutorial howto get kicked? :-)
[19:48:26] <[itchyjunk]> no, i don't need a tutorial on that one
[19:48:39] *** Parts: Bot1 (~Bot1@31.223.156.200) ()
[19:48:51] *** Quits: dsrt^ (~cuolin@12.202.131.133) (Remote host closed the connection)
[19:49:03] *** Joins: RougeR (~rougex250@user/rouger)
[19:49:22] <[itchyjunk]> ah
[19:49:36] <[itchyjunk]> stackoverflow says object.close(); can be used
[19:49:41] * edgar-rft awards [itchyjunk] a Phd in IRC knowledge
[19:49:52] <[itchyjunk]> wonder why the top 3 tutorials on google doesn't mention it when searching for scanner
[19:50:01] <RougeR> ambiguous single item arrays are the work of beelzebub himself
[19:50:08] <RougeR> https://developer.webex.com/docs/api/v1/people/get-person-details
[19:50:22] *** Joins: SmokenatorZ2 (~Smokenato@177.45.201.143)
[19:50:26] <RougeR> emails - array - The email addresses of the person
[19:50:54] <RougeR> I cannot find a single instance of a user having multiple email addresses nor can i find a way of setting multiple emaill addresses (at least not in the UI)
[19:50:55] <ZenixOwler> question, usually how do chatting applications store the messages of their clients ? like relational database or some sort of specific data structure ?
[19:51:16] <pulse> for IRC the tradition is plaintext log files
[19:51:16] *** Joins: Bot3 (~Bot3@31.223.156.200)
[19:51:21] <RougeR> so why on earth is email addresses allowed to be an array and why is there no primary_email_address at the very least
[19:51:39] <ZenixOwler> well yea, IRC is texts all the time, but how about things like messenger or discord or etc.
[19:51:43] *** Quits: Bot3 (~Bot3@31.223.156.200) (Client Quit)
[19:51:52] <RougeR> ZenixOwler, it can often be a combination
[19:51:55] *** Joins: Bot4 (~Bot4@31.223.156.200)
[19:51:55] <pulse> if i had to guess, those are XML under the hood
[19:52:00] <pulse> i don't know for sure though
[19:52:11] <karstensrage> [itchyjunk], whats the argument to Scanner?
[19:52:13] *** Parts: Bot4 (~Bot4@31.223.156.200) ()
[19:52:26] <[itchyjunk]> the System.in ?
[19:52:27] <ZenixOwler> RougeR: combination of database and data structure you mean ? or you mean another kind of combination
[19:52:28] *** Quits: SmokenatorZ (~Smokenato@189.78.241.69) (Ping timeout: 272 seconds)
[19:52:28] *** SmokenatorZ2 is now known as SmokenatorZ
[19:52:29] <[itchyjunk]> idk what it does
[19:52:34] <[itchyjunk]> it was used in a tutorial lol
[19:52:45] *** Joins: Hello54 (~Hello54@31.223.156.200)
[19:52:56] <[itchyjunk]> i did a try { my code} finally { input.close();}
[19:53:07] <karstensrage> for System.in you dont need to close() for some object on the stack its not a bad idea
[19:53:13] *** Quits: Hello54 (~Hello54@31.223.156.200) (Client Quit)
[19:53:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[19:53:23] <karstensrage> but still not entirely necessary
[19:53:26] <[itchyjunk]> the close is for Scanner itself it seems
[19:53:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:53:27] <RougeR> ZenixOwler, a combination of a faster in memory store and a slower older messages store 
[19:53:31] <[itchyjunk]> yeah my code runs without the close
[19:53:35] <jinsun> [itchyjunk]: if your program ends soon after using the Scanner then the os will close it anyway, so some people take shortcuts and don't close it, but for long running programs you should defnitely close it
[19:53:38] <RougeR> so redis + elasticsearch might be an example
[19:53:40] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 240 seconds)
[19:53:40] <[itchyjunk]> was curious about the little warning eclipse gave
[19:53:47] <RougeR> documentdb and mongodb ive seen used as well
[19:53:48] <karstensrage> When a Scanner is closed, it will close its input source if the source implements the Closeable interface.
[19:53:59] <karstensrage> docs are your friend
[19:54:17] <ZenixOwler> RougeR: ok let's me see how those work
[19:54:25] <ZenixOwler> i know about mongodb tho, but the rest is still new
[19:54:36] <RougeR> https://stackoverflow.com/questions/31573918/why-use-redis-in-a-chat-application
[19:54:37] <bayaz> Title: Why use redis in a chat application? 
[19:54:40] <RougeR> ZenixOwler, ^
[19:54:47] <karstensrage> i am strongly opposed to using IDE's as a newbie
[19:54:49] <ZenixOwler> ok thk
[19:54:52] <karstensrage> so ... 
[19:55:04] <RougeR> ZenixOwler, not my area of expertise tbh, but id looked at it once
[19:55:20] <RougeR> karstensrage, nah use an IDE...but dont be reliant on it
[19:55:23] <ZenixOwler> well i am even worse, i never wrote any chat application before, so this could be a good start
[19:55:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:55:35] <karstensrage> RougeR, as a newbie how are you supposed to know 
[19:55:36] <ZenixOwler> i mean i did write one but i don't know what was the best way to store data
[19:55:40] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 240 seconds)
[19:55:50] <RougeR> karstensrage, by listening to those who have experience
[19:55:51] *** Joins: elnavigator (~elnavigat@105.196.211.228)
[19:55:54] <karstensrage> pfft
[19:56:02] <RougeR> depends what you use the ide for as well
[19:56:14] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-59c0-909a-8de4-2805.inf6.spectrum.com)
[19:56:24] <RougeR> im not a fan of relying on your IDE for git and not knowing how to use it from the cli
[19:56:58] <RougeR> but an ide is very helpful to use git all the same
[19:57:10] <karstensrage> learn without barriers FIRST
[19:57:17] <karstensrage> then if you want an IDE go for it
[19:57:32] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 272 seconds)
[19:57:33] <RougeR> yeah...depends on the language and how heavy the IDE is
[19:57:41] <karstensrage> otherwise ime 90% of your issues are IDE related, not language related
[19:57:42] *** Quits: paulo (paulo@paulo.jujube.ircnow.org) (Remote host closed the connection)
[19:57:43] *** Quits: sandman13 (sandman13@user/sandman13) (Remote host closed the connection)
[19:58:00] <RougeR> using atom with a few plugins for learning python/ruby over using a dumb editor is pretty handy 
[19:58:07] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Quit: Leaving)
[19:59:17] <karstensrage> well ok ill agree with that, this is Java and Eclipse though
[19:59:17] <RougeR> learning something like c# or java wihtout any IDE will be a bit painful 
[19:59:17] <karstensrage> Eclipser and IDEA and IntelliJ are very heavy weight
[19:59:17] <RougeR> i mean i know you can go crazy with java side
[19:59:18] <RougeR> yeah i agree
[19:59:18] *** Quits: kodah (~kodah@user/kodah) (Read error: Connection reset by peer)
[19:59:18] <RougeR> but a lightweight ide for java is fine to learn with
[19:59:18] <karstensrage> atom and sublime are pretty lightweight
[19:59:18] <RougeR> i agree about not using something heavy
[19:59:18] <RougeR> aye
[19:59:18] * karstensrage uses emacs, heavyweight and lightweight
[19:59:18] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9) (Read error: Connection reset by peer)
[19:59:18] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:59:20] <RougeR> tbh im hard down the M$ hole
[19:59:25] <RougeR> i use vscode for everything
[19:59:26] <karstensrage> oh
[19:59:29] <karstensrage> yeah of course
[19:59:31] <karstensrage> when in Rome
[19:59:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[19:59:37] *** Joins: bpmedley_ (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[19:59:39] <RougeR> mostly write python, ruby and a little c#
[19:59:41] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9)
[19:59:46] <RougeR> js when i have to....
[19:59:50] *** Quits: Shiva (~LordShiva@user/one39dev) (Remote host closed the connection)
[19:59:59] <karstensrage> i get annoyed with M$ how hard it is to find things and how long it takes to get them but otherwise its good, fast, well documented
[20:00:06] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:192a:1eb2:f711:9efa) (Ping timeout: 256 seconds)
[20:00:12] <RougeR> im really impressed with vscode tbh...it has its issues
[20:00:14] *** Joins: Shiva (~LordShiva@user/one39dev)
[20:00:28] <RougeR> but its great for just "working" with relatively little setup with any language i throw at it
[20:00:53] <[itchyjunk]> vs code is still alive?
[20:00:55] <RougeR> but yeah...you shouldn't need an ide to code at all
[20:01:01] <RougeR> vscode is very much thriving
[20:01:10] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 240 seconds)
[20:01:15] *** Parts: ZenixOwler (~whatever@118.69.128.37) (Leaving)
[20:01:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:01:16] <RougeR> "In the Stack Overflow 2021 Developer Survey, Visual Studio Code was ranked the most popular developer environment tool, with 71.06% of 82,277 respondents reporting that they use it.
[20:01:17] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:26] <[itchyjunk]> @_@
[20:01:45] <RougeR> i run linux as my only OS and am not a microsoft fan
[20:01:51] <RougeR> but vscode is honestly pretty incredible
[20:01:55] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:01:57] <RougeR> and the plugin ecosystem is huge
[20:02:36] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Ping timeout: 272 seconds)
[20:03:05] <RougeR> im regularly switching between HCL, python, ruby, c#, js, typescript. Then also JSON, YAML, TOML....and a host of DSLs
[20:03:09] <karstensrage> just confirmed, Java doesnt complain about Scanner close 
[20:03:10] *** Quits: silasfox (~sbv@2001-4dd6-a194-0-6e8a-d9bc-7d25-2e68.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[20:03:13] <RougeR> vscode handles them all without me having to switch IDEs
[20:03:16] <karstensrage> thats Eclipse "helping" you
[20:03:25] <[itchyjunk]> ah
[20:03:35] <RougeR> c# is probably better with full visual studio but eh...im on linux and i think vs is heavy
[20:03:39] <[itchyjunk]> probably a good habit
[20:03:48] <[itchyjunk]> to close sockets i open
[20:03:52] <[itchyjunk]> i assume i open sockets
[20:04:03] <karstensrage> Scanner is not a socket
[20:04:07] <karstensrage> and 
[20:04:26] *** Joins: nekodesu (~bit@user/nekobit)
[20:04:27] <karstensrage> maybe read about the Closable interface and let me know if you have questions
[20:04:40] <karstensrage> or read up on try/catch with resources
[20:04:55] <[itchyjunk]> oh..
[20:05:09] <[itchyjunk]> i used try/finally
[20:05:15] <[itchyjunk]> but i didn't read up on it lol
[20:05:24] <karstensrage> since Java 7, try with resources is the way to go for "sockets"
[20:05:37] <karstensrage> try finally is the old way
[20:06:00] *** Joins: NChief (~nchief@irc.nortv.net)
[20:06:07] <karstensrage> https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html
[20:06:07] <bayaz> Title: The try-with-resources Statement (The Java™ Tutorials > Essential Java Classes > Exceptions) 
[20:07:01] <RougeR> anyway catchya later
[20:07:07] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[20:08:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Changing host)
[20:08:42] *** Joins: betelgeuse (~john2gb@user/john2gb)
[20:08:46] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Quit: Client closed)
[20:10:07] *** Joins: silasfox (~sbv@2001-4dd6-a194-0-6e8a-d9bc-7d25-2e68.ipv6dyn.netcologne.de)
[20:11:56] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:985c:31ee:fd40:ed3) (Quit: Textual IRC Client: www.textualapp.com)
[20:14:27] *** Joins: paulo (paulo@paulo.jujube.ircnow.org)
[20:15:16] *** Joins: sandman13 (sandman13@user/sandman13)
[20:15:34] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[20:15:54] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:16:46] *** Quits: anton (anton@tloks.com) (Quit: Rebooting for system upgrade)
[20:17:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:17:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:17:45] *** Quits: DSync (~ds@user/deepspace-link) ()
[20:17:50] *** Joins: hexology (~hexology@user/hexology)
[20:18:25] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 245 seconds)
[20:18:42] *** Joins: anton (anton@tloks.com)
[20:20:52] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[20:21:48] *** Joins: Rashad (~textual@37.202.99.134)
[20:22:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[20:22:27] *** Joins: contagious_meow (~salitos@102.166.27.20)
[20:23:07] *** Joins: Guest89 (~Guest89@31.223.156.200)
[20:23:19] *** Parts: Guest89 (~Guest89@31.223.156.200) ()
[20:23:26] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Ping timeout: 252 seconds)
[20:23:54] *** Joins: HelloWorld (~HelloWorl@31.223.156.200)
[20:24:11] *** Quits: HelloWorld (~HelloWorl@31.223.156.200) (Client Quit)
[20:24:40] *** Quits: yamz (~salitos@154.123.46.33) (Ping timeout: 240 seconds)
[20:25:40] *** Quits: silasfox (~sbv@2001-4dd6-a194-0-6e8a-d9bc-7d25-2e68.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[20:25:57] <Rashad> https://www.youtube.com/watch?v=DYiKnATpJi8
[20:25:58] <bayaz> Title: Horowitz Chopin Waltz op 64 n°2 
[20:27:43] *** Joins: silasfox (~sbv@2a0a-a540-533f-0-bad8-6c2f-3a71-f612.ipv6dyn.netcologne.de)
[20:28:38] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[20:29:28] *** Joins: DSync (~ds@user/deepspace-link)
[20:29:43] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[20:30:10] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 240 seconds)
[20:30:18] *** Quits: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net) (Quit: Leaving)
[20:30:24] <[itchyjunk]> to try catch and finally?
[20:30:34] <[itchyjunk]> putting the input.close() inside finally made sense
[20:30:41] <[itchyjunk]> but with try/catch, where would this go?
[20:31:36] *** Joins: jamea (~jamea@189.237.219.153)
[20:31:41] <[itchyjunk]> yeah try catch finally
[20:32:00] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 258 seconds)
[20:32:01] <Rashad> [itchyjunk] who are you talking to??
[20:32:08] <[itchyjunk]> voices in my head
[20:32:28] <Mangy_Dog> https://imgur.com/gallery/D6oOYrk nearly done with UIs... one more after this before i do the EMRG sequince. And still got some more code refinement and some controls like volume... Tiny worried. I only have 20k of program space left.!
[20:32:28] <bayaz> Title: Subspace nearly done! 
[20:32:32] *** Quits: elnavigator (~elnavigat@105.196.211.228) (Ping timeout: 245 seconds)
[20:32:34] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 240 seconds)
[20:32:40] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 240 seconds)
[20:32:46] *** Joins: flynn (~mcbloch@user/flynn)
[20:32:53] *** Joins: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net)
[20:33:12] <[itchyjunk]> what is that?
[20:33:22] <[itchyjunk]> some rasp pi powered screen or something?
[20:35:16] <[itchyjunk]> I wonder how easy making GUI is with java
[20:35:27] <[itchyjunk]> since people said UI had good use case for learning OOP
[20:35:32] <Mangy_Dog> tricorder prop im making
[20:35:35] <Mangy_Dog> its not pi no
[20:35:37] <Mangy_Dog> its stm32
[20:35:41] <Mangy_Dog> and a graphcis chip
[20:35:46] <[itchyjunk]> ah, dunno what those are
[20:35:50] <[itchyjunk]> what do you have to code it in?
[20:35:55] <Mangy_Dog> c++
[20:35:57] <[itchyjunk]> ah
[20:36:16] *** Joins: jamea97 (~jamea@189.237.219.153)
[20:36:34] <GeDaMo> stm32 is ARM based
[20:36:41] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[20:38:18] <[itchyjunk]> ah ARM
[20:38:19] *** Joins: elnavigator (~elnavigat@105.196.211.228)
[20:38:27] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[20:38:28] <[itchyjunk]> I hear ARM is becomming big now
[20:38:48] <beaky> nice i like arm
[20:39:02] *** Quits: jamea (~jamea@189.237.219.153) (Ping timeout: 268 seconds)
[20:39:24] <[itchyjunk]> what about feet?
[20:40:35] <GeDaMo> ARM has been big for more than 20 years :P
[20:41:17] <[itchyjunk]> ah
[20:41:22] <[itchyjunk]> i thought intel was big before
[20:41:32] <[itchyjunk]> then AMD was getting big
[20:41:40] <[itchyjunk]> but ARM would get big in near future
[20:41:43] <GeDaMo> Most phones have used ARM since the 90s
[20:41:45] <[itchyjunk]> i think i am done with this project
[20:41:46] <[itchyjunk]> https://bpa.st/LNXA
[20:41:47] <Mangy_Dog> youre thinking CPUs
[20:41:47] <bayaz> Title: View paste LNXA 
[20:41:52] <Mangy_Dog> this is embedded
[20:41:53] <[itchyjunk]> I guess i should say for computers
[20:42:00] <[itchyjunk]> ah CPU
[20:42:01] <Mangy_Dog> arms been pretty much top dog for embedded for a long long time
[20:42:03] <[itchyjunk]> oh i see
[20:42:21] <[itchyjunk]> phone is embeded but laptop is not embeded?
[20:42:22] <Mangy_Dog> but they are starting to enroach desktop space
[20:42:27] <Mangy_Dog> yeah
[20:42:31] <[itchyjunk]> weird
[20:42:34] <Mangy_Dog> as phones use socs (usuallt)
[20:42:37] <Mangy_Dog> usually
[20:42:46] <Mangy_Dog> and laptops use systems on motherboards... usually
[20:42:47] <[itchyjunk]> oh system on a chip
[20:42:50] <Mangy_Dog> but some laptops are using socs too
[20:42:55] <[itchyjunk]> ahh
[20:42:58] <Mangy_Dog> its a bit more mixed these days
[20:43:00] <[itchyjunk]> complicated
[20:43:28] <[itchyjunk]> jeaye, what do you think of https://bpa.st/LNXA ? complete enough ?
[20:43:29] <bayaz> Title: View paste LNXA 
[20:43:39] *** Joins: NChief (~nchief@irc.nortv.net)
[20:43:46] *** Quits: nekodesu (~bit@user/nekobit) (Quit: free(neko);)
[20:43:49] <[itchyjunk]> Will have to find another project to do :P
[20:44:11] *** Joins: nekodesu (~bit@user/nekobit)
[20:44:19] <GeDaMo> [itchyjunk]: read in some text and print a histogram of letter frequencies
[20:44:28] <[itchyjunk]> :O
[20:44:40] <[itchyjunk]> hmmmmmmmm
[20:45:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:46:08] *** Quits: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4) (Quit: WeeChat 3.0)
[20:46:23] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:8491:b60f:e59c:40e2)
[20:46:47] *** davidlowryduda is now known as dld
[20:48:16] <mrig> Print a png of the Mandelbrot set is a nice one.
[20:48:58] <mrig> Great for exploring floating point numbers :)
[20:50:10] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 240 seconds)
[20:52:40] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[20:52:42] *** Joins: EnterAPX (~user@host-81-161-204-185.oxylion.net.pl)
[20:52:47] <[itchyjunk]> even if i open a file and read it char by char, i would have to count the number of each char occuring right?
[20:53:11] <GeDaMo> Yes
[20:53:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:53:33] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:53:34] *** Quits: EnterAPX (~user@host-81-161-204-185.oxylion.net.pl) (Client Quit)
[20:53:39] <[itchyjunk]> if r = 'a' { a++; } else if ( r = 'b') { b++;} this would go on and on and on
[20:53:54] <GeDaMo> You might want to use a dictionary
[20:54:13] <GeDaMo> I'm not sure what Java has for that
[20:55:42] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[20:56:08] <[itchyjunk]> oh i see
[20:56:10] <[itchyjunk]> i use dictionary
[20:56:16] <[itchyjunk]> check if key 'a' exists
[20:56:26] <[itchyjunk]> if it does change it's value by 1
[20:56:34] <GeDaMo> Yeah
[20:56:35] <[itchyjunk]> if not add key 'a' and set value to 1
[20:56:39] <[itchyjunk]> complex
[20:56:46] <GeDaMo> HashMap, maybe
[20:57:40] *** Quits: silasfox (~sbv@2a0a-a540-533f-0-bad8-6c2f-3a71-f612.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[20:58:21] <Rashad> ladies and gentlemen, I have found the mark of the civilized man -- "cooperation without understanding"
[20:58:47] <Rashad> https://www.youtube.com/watch?v=_eO93XNvdy0
[20:58:48] <bayaz> Title: the council The Matrix Reloaded 2003 21 
[20:59:32] *** Joins: silasfox (~sbv@xdsl-78-35-71-64.nc.de)
[20:59:48] *** Quits: gaurav_ (~usr123@124.253.0.161) (Read error: Connection reset by peer)
[21:00:12] *** Joins: gaurav_ (~usr123@49.156.66.113)
[21:03:38] *** Quits: Twipply (~Twipply@user/twipply) (Remote host closed the connection)
[21:03:56] *** Joins: Twipply (~Twipply@user/twipply)
[21:05:08] *** Quits: dan01 (~dan01@2a02:2f09:381b:db00:646a:e3c2:e636:c3e8) (Read error: Connection reset by peer)
[21:06:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:07:52] <GeDaMo> [itchyjunk]: Java's HashMap has a getOrDefault method
[21:08:00] *** Joins: NChief (~nchief@irc.nortv.net)
[21:09:13] <[itchyjunk]> oh i was looking at the dictionary
[21:09:16] <[itchyjunk]> hashmap is better?
[21:09:28] <[itchyjunk]> although it said hashmap extends dictionary
[21:09:34] *** Quits: rsx (~dummy@ppp-188-174-149-206.dynamic.mnet-online.de) (Quit: rsx)
[21:09:59] <GeDaMo> I think Dictionary is an abstract interface, not an implementation
[21:11:01] <karstensrage> Dictionary is deprecated
[21:11:09] <karstensrage> always code to interfaces if you can
[21:11:23] <karstensrage> Map<K, V> map = new HashMap<>();
[21:12:08] <karstensrage> what said hashmap extends dictionary
[21:12:09] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:13:09] <karstensrage> HashMap extends AbstractMap
[21:14:20] <[itchyjunk]> https://docs.oracle.com/javase/8/docs/api/java/util/Dictionary.html
[21:14:21] <bayaz> Title: Dictionary (Java Platform SE 8 ) 
[21:14:23] <[itchyjunk]> this did
[21:14:43] <karstensrage> hmmm
[21:14:49] <GeDaMo> "NOTE: This class is obsolete.  New implementations should  implement the Map interface, rather than extending this class."
[21:14:50] <karstensrage> that says Hashtable which is no longer used
[21:14:56] <karstensrage> not HashMap
[21:15:49] <[itchyjunk]> wiat it doesn't
[21:15:54] <[itchyjunk]> oh hashtable
[21:15:57] <[itchyjunk]> yeah
[21:16:01] <[itchyjunk]> it doesn't say hashmap
[21:16:04] <[itchyjunk]> lol
[21:16:10] <[itchyjunk]> okay hashtable is not used anymore
[21:16:10] *** Quits: elnavigator (~elnavigat@105.196.211.228) (Ping timeout: 240 seconds)
[21:16:14] <karstensrage> As of the Java 2 platform v1.2, this class was retrofitted to implement the Map interface, making it a member of the Java Collections Framework. Unlike the new collection implementations, Hashtable is synchronized. If a thread-safe implementation is not needed, it is recommended to use HashMap in place of Hashtable. If a thread-safe highly-concurrent implementation is desired, then it is recommended to use ConcurrentHashMap in place of Ha
[21:16:14] <karstensrage> shtable.
[21:16:30] <karstensrage> as of java 2
[21:16:31] *** Joins: elnavigator (~elnavigat@105.196.211.228)
[21:16:35] <karstensrage> basically the infancy of Java
[21:16:44] * karstensrage started with 1.4
[21:17:22] <[itchyjunk]> wish they would put the old stuff in large red page or something
[21:17:28] <[itchyjunk]> okay to i want to look at hashmap
[21:17:37] <[itchyjunk]> so i want to*
[21:17:48] <karstensrage> right but code to the interface, Ma
[21:17:50] <karstensrage> Map
[21:17:51] *** Joins: scabby_ (~scabby@user/scabootssca)
[21:18:00] <karstensrage> always code to interfaces
[21:18:10] *** mmlj4 is now known as RC1
[21:18:17] *** RC1 is now known as mmlj4
[21:18:18] * karstensrage thinks if there are any cases to code to concrete classes
[21:20:56] <karstensrage> it can get you into trouble with dependency injection for sure, so off the top of my head with java.util.collections, i guess always code to the interface
[21:20:58] *** Quits: scabootssca__ (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[21:21:49] *** Joins: yamz (~salitos@102.167.202.153)
[21:22:03] *** Quits: contagious_meow (~salitos@102.166.27.20) (Read error: Connection reset by peer)
[21:22:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[21:22:31] <[itchyjunk]> hmm
[21:22:56] <[itchyjunk]> code to interface mean implemet the interface provided by map?
[21:23:02] <[itchyjunk]> for hashmap i guess?
[21:23:07] <karstensrage> no
[21:23:32] <karstensrage> it means use the interface, not the concrete class
[21:23:36] <karstensrage> so INSTEAD OF
[21:23:53] <karstensrage> HashMap<K, V> hashMap = new HashMap<>();
[21:23:56] <karstensrage> you use 
[21:24:07] <karstensrage> Map<K, V> map = new HashMap<>();
[21:24:33] <karstensrage> and your code uses `map`
[21:24:36] <[itchyjunk]> hmmm
[21:24:48] <karstensrage> map.put(k, v)
[21:24:54] <karstensrage> map.get(k)
[21:25:10] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[21:25:19] <[itchyjunk]> i don't understand that syntax, ` Map<K, V> map = new HashMap<>();`
[21:25:31] <[itchyjunk]> i thought it was Class object_name = new Class();
[21:26:00] <karstensrage> oh you havent seen generics before?
[21:26:06] <[itchyjunk]> no
[21:26:08] <karstensrage> ok
[21:26:11] <karstensrage> umm
[21:26:13] <bjs> [itchyjunk]: there is a lot to learn in Java
[21:26:14] <GeDaMo> Map is a generic class where you specify the types of the keys and value (K and V)
[21:26:41] *** Joins: derpadmin (~derpadmin@cloudbase2.200013.net)
[21:26:44] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[21:27:00] <[itchyjunk]> in my case, i want char K and int V ?
[21:27:17] <karstensrage> umm probably Character
[21:27:19] <karstensrage> not char
[21:27:22] <[itchyjunk]> since i want each char to be associated with the number of time it appears
[21:27:25] <[itchyjunk]> oh
[21:27:42] <karstensrage> i dont think primitives work as keys
[21:28:27] <karstensrage> yeah key's subclass is Object
[21:28:30] <karstensrage> so Character
[21:28:33] <karstensrage> not char
[21:28:39] <karstensrage> which boxes char 
[21:28:47] *** Quits: Citillara (~userid@user/citillara) (Ping timeout: 245 seconds)
[21:29:07] <karstensrage> java is strongly typed, you cant change the type of object dynamically like you can in python and javascript
[21:29:30] <karstensrage> so Generics are hints as to the types you will be using in your collections
[21:29:33] <karstensrage> or w/e
[21:29:50] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[21:30:01] <karstensrage> they are compile time enforced, not runtime
[21:30:15] <karstensrage> as they are erased at compile time
[21:31:19] <karstensrage> so Map<Character, Integer> is probably what you want
[21:31:26] <[itchyjunk]> everything is compile time enforced in java right?
[21:31:32] <karstensrage> well
[21:31:40] <[itchyjunk]> yeah i might have to read up on maps more before i can make one
[21:32:08] <karstensrage> https://docs.oracle.com/javase/tutorial/collections/interfaces/map.html
[21:32:09] <bayaz> Title: The Map Interface (The Java™ Tutorials > Collections > Interfaces) 
[21:33:09] <karstensrage> by the way for your use -case a 26 element array is probably much faster and better than trying to do this with map
[21:33:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:33:54] <[itchyjunk]> i might have other characters too though, right?
[21:34:04] <[itchyjunk]> i want to catch everything like , ; etc
[21:34:21] <GeDaMo> You oculd have one entry for punctuation
[21:34:36] <pulse> java is strongly typed, but javascript is strangely typed :-)
[21:35:44] <[itchyjunk]> Oh map like map in math
[21:35:45] <[itchyjunk]> heh
[21:35:52] *** Joins: Inari (~Pinkishu@p508ef06c.dip0.t-ipconnect.de)
[21:36:23] <GeDaMo> On the other hand, you're doing this to learn about Java and here you are learning about collections and generics :P
[21:36:26] <[itchyjunk]> since my value is integer, i should be able to change it without causing issues right?
[21:36:41] <karstensrage> define "causing issues"
[21:37:02] *** Joins: sevla (~platen@user/sevla)
[21:37:11] <[itchyjunk]> like, is changing values okay? arrays were immutable or somesuch so i couldn't delete one element out of it and such
[21:37:29] <[itchyjunk]> so i am wondering such type of immutability issue might prevent me from changing values once i set them
[21:37:52] <karstensrage> hmmm
[21:38:15] <karstensrage> changing values should be fine, not sure what immutability means in your statement
[21:38:41] *** Quits: sevla (~platen@user/sevla) (Client Quit)
[21:38:52] <droid3> hey guys curious if integer factorization of a number in any class of complexity different then prime factorization of a number?
[21:39:21] <karstensrage> a very common thing to do for indexing characters is that in C-based languages (Java is C-based) is that the value of 'a' is actually 97
[21:39:25] <droid3> I am curious if finding a factor or finding a prime factor has any difference in major complexity
[21:39:29] *** Joins: sevla (~platen@user/sevla)
[21:39:36] <bjs> droid3: surely it depends on the factor
[21:39:39] <karstensrage> so something like `Character.codePointAt("abc", 0) - 'a';` returns 0
[21:39:48] <karstensrage> so something like `Character.codePointAt("abc", 1) - 'a';` returns 1
[21:40:06] <karstensrage> and thats because it resolves to 
[21:40:09] <[itchyjunk]> what's the difference between integer factorization and prime factorization?
[21:40:13] <karstensrage> 97-97
[21:40:16] <karstensrage> 98-97
[21:40:27] <bjs> droid3: "Prime factorization" is pretty clear what it means, but just "integer factorization" it's not even obvious what the algorithm/problem is you're trying to compare to
[21:40:29] <[itchyjunk]> oh right 
[21:40:32] <[itchyjunk]> ascii code and such
[21:40:34] <bjs> numbers don't have unique "integer factorizations"
[21:40:35] *** Joins: Rounin (~david@84.212.130.215)
[21:40:35] <karstensrage> yeah
[21:40:39] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:40:40] <droid3> ya bjs so getting a factor of a number that is itself composite may take a while to find its prime factors
[21:40:53] <bjs> droid3: you still mean prime factorization?
[21:40:55] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:41:13] <bjs> droid3: oh, prime factorization is not "factorization of a prime number".
[21:41:28] <[itchyjunk]> 16 = 4 x 4 would be an integer factorization
[21:41:37] <[itchyjunk]> well if it's a prime, it's factors are itself and 1
[21:41:40] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[21:41:42] <jinsun> integer factorization is easy, return (1, x)
[21:41:50] <[itchyjunk]> lol
[21:42:13] <droid3> ya being able find a factor fast does not imply you be finding prime factors
[21:42:21] <bjs> droid3: what does it mean to "find a factor"
[21:42:40] <[itchyjunk]> you could find the first number that divides it with remainder 0
[21:42:43] <droid3> So i was just wondering if there is a difference of complexity between finding prime factor vs finding a composite factor
[21:42:59] <[itchyjunk]> and pass back that and the remainder back, and would be "integer factor" for some definition
[21:43:16] <[itchyjunk]> droid3, 1 and itself is always a composit factor
[21:43:24] <droid3> bjs find a factor means N%f = 0 but f doesnt need to be prime factor
[21:43:25] <[itchyjunk]> prime factorization is unique up to reodreding
[21:43:27] <bjs> droid3: I think you're confusing ideas here, what do you mean by "finding a composite factor"? All numbers have a trivial factorisation of 1 * itself
[21:43:30] <[itchyjunk]> composite factoring is not
[21:43:42] <[itchyjunk]> so different composit factor might have different complexity
[21:43:44] <droid3> ok excluding 1 and the number itself
[21:43:59] <[itchyjunk]> you can find the first number that divides given number
[21:44:06] <bjs> droid3: well you have to check 2 and itself/2,  and 3 and itself/3 etc
[21:44:08] <[itchyjunk]> and if you restrict the first number to a prime
[21:44:15] <[itchyjunk]> you're doing step 1 of prime factorization
[21:44:18] <bjs> droid3: so you get O(n) to just check all the primes
[21:44:26] <[itchyjunk]> so it's still not well defined
[21:44:55] <[itchyjunk]> as 2 divides 18 so you get 2 * 9 and 3 divides 18 and you get 3*6
[21:45:04] <droid3> but if one has a way find a general factor aka weather its composite or prime does he also have a good algorithm to finding prime factors fast as well???
[21:45:20] <[itchyjunk]> no
[21:45:31] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[21:45:35] <[itchyjunk]> to check if something is composit, you just need some other prime dividing it
[21:45:37] <[itchyjunk]> you can stop then
[21:45:49] <[itchyjunk]> for prime factorization, you find all primes that divide given integer
[21:45:54] <bjs> droid3: what do you mean by "general factor"?  but no I can't see why if knowing if something is composite helps. If it's composite all you know is that there exists a factor that isn't 1 and itself
[21:45:56] <Izem> just keep a list of primes :)
[21:46:04] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[21:46:12] * [itchyjunk] has a list of all primes from few 100 years ago
[21:46:21] <[itchyjunk]> i think it was still a 100+ long list right?
[21:46:22] <[itchyjunk]> heh
[21:46:28] <Rounin> Even without a prime that divides a composite number, though, you can often find out whether it's composite quite quickly, without ever finding a single factor
[21:46:32] <droid3> i meant if you can find that composite factor 
[21:46:32] <Rounin> Which is why RSA still works
[21:46:38] <alycidyne> Hello, has there ever been a REPL for assembly?
[21:46:47] <[itchyjunk]> Rounin, what method is that?
[21:46:48] <droid3> can you also find a prime factor easily at that point???
[21:46:56] <[itchyjunk]> no
[21:47:01] <[itchyjunk]> prime factorization is a hard problem
[21:47:05] <[itchyjunk]> hence cryptography
[21:47:08] <Rounin> [itchyjunk]: I was just asking myself the same thing... There's a primality test called Miller-Karp-Rabin or something like that, I think
[21:47:18] <ullbeking> 17:59 <karstensrage> "java is strongly typed,"  Does anybody feel that Java's strong typing is one of its strongest attributes?
[21:47:21] <bjs> droid3: well if you have a factor that itself is composite, then you know *its* factors are factors of the original number
[21:47:23] *** Joins: DarkCthulhu (~DarkCthul@96.74.77.193)
[21:47:24] <[itchyjunk]> well sure there are tests
[21:47:27] <droid3> so is integer factorization in the same complexity class as prime factorization
[21:47:40] <bjs> droid3: you haven't even defined what "integer factorization" *is*
[21:47:42] <[itchyjunk]> "interger factorizatoin" isn't well defined
[21:47:45] <[itchyjunk]> step 1) define it
[21:47:46] <bjs> so we can't tell you what complexity it would be
[21:47:54] <Rounin> [itchyjunk]: https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test ... Just one example of such a test
[21:47:55] <bayaz> Title: Miller–Rabin primality test - Wikipedia 
[21:48:20] <[itchyjunk]> Rounin, sure but it's probabilistic
[21:48:27] <[itchyjunk]> like fermats test
[21:48:28] *** Quits: DarkCthulhu (~DarkCthul@96.74.77.193) (Client Quit)
[21:48:32] <[itchyjunk]> you can't really be sure
[21:48:45] <droid3> 16=4x4 integer factorization , 16=2^4 prime factorization
[21:48:45] *** Joins: DarkCthulhu (~DarkCthul@96.74.77.193)
[21:48:47] <[itchyjunk]> if you want a sure fire way of knowing composit or not, you're stuck factoring
[21:48:58] <bjs> droid3: okay but there are many integer factorizations possibly
[21:49:03] <[itchyjunk]> droid3, prime factorization is unique up to reordering
[21:49:11] <[itchyjunk]> since it's unique, it's well defined
[21:49:12] <bjs> droid3: what actually is the problem you're trying to solve?  To find one? to find a particular one? To find all of them?
[21:49:15] <droid3> can we go from 4x4 to 2^4 easily for any number
[21:49:17] *** Quits: DarkCthulhu (~DarkCthul@96.74.77.193) (Client Quit)
[21:49:20] <[itchyjunk]> 16 = 4x4 is not
[21:49:27] <[itchyjunk]> 8x2 = 16 as well
[21:49:33] <[itchyjunk]> which one do you mean when you say int factorization?
[21:50:02] <droid3> ya but if we have a nontrival integer factorization is there an efficient way to get to its prime factorization
[21:50:12] <[itchyjunk]> no
[21:50:15] *** biberao_ is now known as biberao
[21:50:24] *** Quits: biberao (~Unknown@static.14.82.9.5.clients.your-server.de) (Changing host)
[21:50:24] *** Joins: biberao (~Unknown@user/biberao)
[21:50:28] <bjs> well
[21:50:30] <droid3> Ok that all i was curious about didnt think so.
[21:50:35] <[itchyjunk]> you start with the non trivial factors and do the same factorization stuff for each
[21:50:52] <[itchyjunk]> it doesn't speed it up beyond the fact that some steps have been carried out
[21:50:53] <bjs> droid3: if you know k = a*b then you know the prime factors of k are the prime factors of a and b
[21:51:21] <droid3> Because recursively acting your algorithm on each composite factor is as hard as the prime factorization of that composite factor which vary drastically...  didnt know if something clever had been discovered
[21:51:41] <[itchyjunk]> there are lots of probabilistic tests
[21:51:44] <bjs> droid3: if you just give me a big number and a factorisation I can find prime factors easier perhaps as I can start from smaller numbers
[21:51:44] <[itchyjunk]> as pointed out
[21:51:45] <droid3> its still NP intersect co-NP then.
[21:51:54] <[itchyjunk]> there are some generic algos that find certain types of prime
[21:51:55] <bjs> droid3: but finding that factorisation in the first place is not free.
[21:52:07] *** Quits: Julius_ (~Julius76@2a02:810b:c640:514:6cd5:1386:fd52:22a0) (Ping timeout: 245 seconds)
[21:53:01] <[itchyjunk]> take mersene primes for example
[21:53:07] <[itchyjunk]> http://allthingsuniverse.com/prime/type.html
[21:53:18] <[itchyjunk]> if you're just trying to find primes, you'ed use something else
[21:53:40] <[itchyjunk]> if you're just testing if given list of natural numbers are composit or not, you'ed start of probabilistically
[21:53:42] <[itchyjunk]> etc etc
[21:55:41] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[21:56:03] <[itchyjunk]> so I want to `implement` the Map class
[21:56:09] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[21:56:10] <[itchyjunk]> so MyMap implements Map { }
[21:56:15] <[itchyjunk]> and have 2 constructors inside there?
[21:56:59] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8ce1:69c1:b612:d4f0) (Quit: Textual IRC Client: www.textualapp.com)
[21:57:13] <GeDaMo> You don't need to implement the Map class yourself
[21:57:49] <Izem> [itchyjunk]: for practice? this is in collections libary already
[21:58:19] <[itchyjunk]> hmm
[21:58:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:00:09] <karstensrage> ullbeking, well it sure is something i miss in languages that dont have it, i admit im very biased towards strongly typed languages though
[22:00:12] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[22:00:56] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 258 seconds)
[22:02:13] <[itchyjunk]> hmm
[22:02:42] <[itchyjunk]> i want to import java.util.* right and not just java.util.HashMap since i want to use the generic Map
[22:03:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:03:39] <[itchyjunk]> droid3, https://en.wikipedia.org/wiki/Special_number_field_sieve
[22:03:40] <bayaz> Title: Special number field sieve - Wikipedia 
[22:03:44] <bjs> [itchyjunk]: but you don't want to make *your own Map class*
[22:03:48] <[itchyjunk]> if your number if of that form, there is special algo
[22:03:59] <[itchyjunk]> right i dont want ot make my own map class
[22:04:10] <[itchyjunk]> still figuring out what "code to interface" means :P
[22:04:25] <[itchyjunk]> oh right, i need to look up generics
[22:04:36] <bjs> [itchyjunk]: it means you write methods that accept Map<K, V> arguments and have variables of types Map<K, V>
[22:04:37] <GeDaMo> It means you make your variable of type Map but you assign it to a HashMap
[22:04:37] *** Quits: jamea97 (~jamea@189.237.219.153) (Ping timeout: 245 seconds)
[22:04:56] <bjs> [itchyjunk]: but you actually use e.g. HashMap underneath. The code uses a hashmap but doesn't rely on the fact it's a hashmap and not some other kind of map
[22:05:10] <GeDaMo> Thay way, you can swap out the HashMap for any other class with implements Map
[22:06:42] <[itchyjunk]> ah
[22:06:46] <[itchyjunk]> the concept makes sense
[22:07:22] <[itchyjunk]> so if HashMap gets depricated and gets replaces by HashMap2.0 but Map remains the same, my code would still work ?
[22:13:22] *** Quits: silasfox (~sbv@xdsl-78-35-71-64.nc.de) (Ping timeout: 245 seconds)
[22:13:57] <bjs> [itchyjunk]: anything that talks about Map will still work yeah
[22:14:17] <[itchyjunk]> Map<Character, integer> map = new HashMap<>(); isn't this syntax correct?
[22:14:34] <Izem> yeah
[22:14:35] <GeDaMo> Integer starts with a capital
[22:14:41] <[itchyjunk]> oops!
[22:15:21] <Izem> I wonder what type is map if you use var map = ...
[22:15:25] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[22:15:29] *** Joins: webnet4 (~0x100@32.211.211.39)
[22:15:40] <Izem> I guess it would be HashMap<Character, Integer>
[22:15:51] <[itchyjunk]> Getting these "cannot be resolved to a type" errors
[22:15:51] <[itchyjunk]> https://bpa.st/PUOQ
[22:15:52] <bayaz> Title: View paste PUOQ 
[22:16:05] <[itchyjunk]> oh
[22:16:29] <[itchyjunk]> HashMap should also be given the <Character, Integer> parameter?
[22:16:43] <Izem> no, did you import it?
[22:16:45] <GeDaMo> I don't think that's necessary
[22:17:06] <[itchyjunk]> fuuuuuuuuuu
[22:17:10] <GeDaMo> Yeah, what did you import?
[22:17:10] <[itchyjunk]> forgot to import it
[22:17:55] <[itchyjunk]> nice, it works now lol
[22:18:48] <[itchyjunk]> Huh, is //TODO a special tag in eclipse?
[22:18:56] <mawk> "special" yes
[22:18:59] <[itchyjunk]> its giving a todo list type thing but idk how to use it
[22:19:02] <mawk> yes
[22:19:05] <mawk> well just like that
[22:19:11] <[itchyjunk]> can i add things to the todo list?
[22:19:13] <mawk> add // TODO or // FIXME in the code
[22:19:15] <[itchyjunk]> that i can tick off and such?
[22:19:20] <mawk> and they show up in the list
[22:19:23] *** Joins: dcand (~dcand@user/dcand)
[22:19:33] <mawk> add them yourself in the source code as comments
[22:19:35] <GeDaMo> I assume you tick it off by deleting the comment :P
[22:19:39] <mawk> yeah
[22:19:47] <[itchyjunk]> ah yes you have to delete the comment
[22:20:01] <[itchyjunk]> i thought it was a full fledged todo list
[22:20:07] <[itchyjunk]> implemented within eclipse
[22:20:13] <[itchyjunk]> its only a dirty little tease
[22:20:30] <[itchyjunk]> mawk, are you a java programmer?
[22:20:36] <[itchyjunk]> thought you were a pythoneer
[22:20:41] <dcand> is there a better manpage reader; one that has hyperlinks between sections and other pages
[22:21:09] <rty> dcand: no. but there is man7 website
[22:21:17] <edgar-rft> let's write all our code during eclipse, so nobody will be able to see what we're doing
[22:21:45] <mawk> eclipse isn't just for java [itchyjunk] 
[22:21:46] *** Joins: contagious_meow (~salitos@197.156.137.151)
[22:21:47] <mawk> I use it for C
[22:21:48] <GeDaMo> dcand: there's info
[22:21:54] <beaky> yes hyperlinks is one of the features of the info pages 
[22:22:00] <dcand> rty: if only i had internet connection all the time
[22:22:07] <mawk> info is a light version of emacs
[22:22:14] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cfb:411f:8f95:89f9) (Read error: Connection reset by peer)
[22:22:26] <beaky> nice wish emacs could be more lightweight 
[22:23:01] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[22:23:22] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:25:13] *** Quits: yamz (~salitos@102.167.202.153) (Ping timeout: 248 seconds)
[22:25:37] *** KeziahMason is now known as awk
[22:26:57] *** Quits: Rashad (~textual@37.202.99.134) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:32] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[22:27:33] <pulse> you can always use vim :p
[22:28:38] <pulse> ahh. perfect for coding https://www.youtube.com/watch?v=Nep1qytq9JM
[22:28:40] <bayaz> Title: 🌴 Ocean Ambience on a Tropical Island (Maldives) with Soothing Waves & Paradise View for Relaxation. 
[22:28:43] <pulse> you can thank me later
[22:29:38] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[22:29:57] <dcand> GeDaMo: how do i even go back to the previous manpage
[22:30:41] <Izem> kde has khelper
[22:30:44] *** Joins: Akuli (~Akuli@82-203-163-212.bb.dnainternet.fi)
[22:30:46] <Izem> great tool
[22:31:06] <Izem> I suspect it's made with webkit
[22:31:16] <GeDaMo> dcand: ? displays help
[22:31:48] <webnet4> they had a browser called konquerer way back when
[22:32:01] <Izem> it's still in active development
[22:32:06] *** Joins: dan01 (~dan01@2a02:2f09:381b:db00:bdb3:77fa:59c6:95f4)
[22:32:07] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[22:32:11] *** Joins: silasfox (~sbv@2a0a-a540-533f-0-bad8-6c2f-3a71-f612.ipv6dyn.netcologne.de)
[22:32:46] <rty> Izem: you mean khelpcenter
[22:33:08] <Izem> yeah
[22:33:38] <dcand> GeDaMo: it is launching "Regexp search backward:"
[22:33:54] <dcand> and those are info pages
[22:34:45] <GeDaMo> l (lower case L) should go back to the previously viewed node
[22:36:31] <dcand> got it; H and h provides help texts
[22:36:32] <GeDaMo> There's also xman but it's ... really old :P
[22:38:31] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[22:39:06] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[22:39:11] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:3c39:bebf:197d:59a5)
[22:40:36] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[22:41:32] <dcand> is there a way i can force is to read manpages; instead of info page
[22:42:29] <GeDaMo> I doubt it
[22:43:41] <beaky> if its emacs then there's woman mode https://www.gnu.org/software/emacs/manual/html_mono/woman.html
[22:44:42] <mawk> reminds me of boobs
[22:44:45] <mawk> or whatever it was
[22:46:04] <beaky> but i like the man mode its much faster
[22:46:26] <beaky> i always gotta go screaming-fast
[22:47:22] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:2d19:2773:7216:50da)
[22:49:49] *** Joins: inky_ (~inky@46.36.119.19)
[22:49:52] *** awk is now known as mnrmnaugh
[22:50:43] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8590:a7d4:8fbd:995e)
[22:53:07] <pulse> man mode, does that mean getting drunk and acting erratic
[22:53:10] *** Joins: kariosfox (~kariosfox@89.229.175.101)
[22:53:39] <mawk> I'm a man and I don't drink
[22:53:59] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:3c39:bebf:197d:59a5) (Quit: Textual IRC Client: www.textualapp.com)
[22:54:20] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[22:54:36] <pulse> me too but that's the standard neanderthal behavior
[22:56:43] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[23:00:04] *** Quits: gaurav_ (~usr123@49.156.66.113) (Read error: Connection reset by peer)
[23:00:28] *** Joins: gaurav_ (~usr123@49.156.64.79)
[23:00:56] <Izem> finally doing prolog, maybe I should've started out this way 
[23:01:12] <pulse> ugh, prolog
[23:01:17] *** Joins: jamea (~jamea@189.231.118.46)
[23:04:30] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:04:43] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:05:21] *** Joins: poww0wmu11c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[23:07:02] <beaky> hello what is automatic differentiation and why is it different from numerical methods of computing derivatice
[23:07:04] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[23:07:10] *** Joins: kawics11 (~ta@catv-80-99-37-156.catv.broadband.hu)
[23:07:38] <beaky> and why does every deep learning framework do it by adding mutable state to the formula
[23:07:39] *** Joins: salitos (~salitos@102.167.221.174)
[23:08:35] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Ping timeout: 244 seconds)
[23:08:57] *** Quits: contagious_meow (~salitos@197.156.137.151) (Ping timeout: 248 seconds)
[23:09:42] <webnet4> hi yes it is a method of differentiating automatically, and it differs from other methods that aren't so automatic!???!!????!?
[23:10:10] <beaky> nice thanks
[23:10:24] <poww0wmu11c> gpt-3 spotted
[23:12:21] *** Joins: absc (~absc@access03.colt-engine.it)
[23:12:24] *** Joins: michalek0514 (~michalek0@89.230.114.136)
[23:14:22] <beaky> and how can monoids help make automatic differentiation less mutable-stateful http://conal.net/papers/essence-of-ad/essence-of-ad-icfp.pdf
[23:14:24] <bayaz> Type: application/pdf Size: 567.6 kB 
[23:15:58] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:16:10] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:16:26] *** Joins: c705 (c705@alpine/contributor/c705)
[23:17:17] <webnet4> if pi is an infinite non-repeating number, can i compress my whole hard drive down to some position of pi ?
[23:17:42] <Izem> explain
[23:17:42] <GeDaMo> Yes
[23:18:47] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 245 seconds)
[23:18:58] *** Quits: michalek0514 (~michalek0@89.230.114.136) (Quit: Leaving)
[23:19:00] <beaky> yes with the caveat that encoding to an index of the sequence of decimal digits of pi won't necessarily be compression you might have an output size bigger than your input
[23:19:04] <deniska> webnet4: yes, but chances are the number encoding the position will have a similar amount of bits as the information you're trying to encode
[23:19:28] <c705> sqrt(2) is much more interesting than pi
[23:19:49] <webnet4> deniska, ouch good point
[23:20:06] <mawk> why c705 
[23:20:13] <mawk> what about sqrt(4)
[23:20:19] <mawk> even more interesting right?
[23:20:20] <mawk> since 4 > 2
[23:20:27] <c705> sqrt(4) is just 2
[23:20:28] <glguy> not repeating doesn't imply that it contains all possible subsequences, though
[23:20:32] <c705> not interesting at all
[23:20:47] <mawk> why is sqrt(4) not interesting but sqrt(2) is
[23:20:53] <mawk> what about sqrt(3.9999)
[23:21:06] <dld> webnet4: simply being infinite and non-repeating isn't enough --- you also need (essentially) every possible finite combination of digits to occur.
[23:21:13] <mawk> what about φ = (1+sqrt(5))/2 that one is extra interesting among mysticists
[23:21:27] <poww0wmu11c> 2+2 == 2*2 though
[23:21:28] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:21:40] <mawk> webnet4: we still haven't proved that every number is present in π
[23:21:42] <mawk> we suspect it
[23:21:45] <mawk> but we don't know
[23:22:07] *** Quits: snake (~snake@user/snake) (Ping timeout: 245 seconds)
[23:22:53] <mawk> yes poww0wmu11c mn = m+n has unique solution (2, 2) when both m and n are greater than 1
[23:24:52] *** Quits: dcand (~dcand@user/dcand) (Quit: dcand)
[23:24:57] <mawk> mn = m+n => (m-1)(n-1) = 1 => m = 2, n = 2
[23:28:18] <Stefan26> Champernowne's constant has that property though
[23:28:51] <beaky> nice so lets code that compression algorithm to it
[23:29:08] <beaky> in rust
[23:30:58] <beaky> vec[u8] -> BigInt where BigInt is the index on that constnat 
[23:33:05] <mawk> it's the simplest universe number
[23:33:19] <mawk> hmm the index
[23:33:43] <mawk> let's say the number n is at index f(n)
[23:34:33] *** Quits: loliko (~loliko@c-73-193-36-183.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[23:35:28] <beaky> yes the compression ratio will be the size of that index divided by the size of the data 
[23:35:35] <mawk> f(n) is equal to f(n-1) + 1 + floor(log10(n-1))
[23:36:33] <mawk> = n + \sum_k=1^{n-1} floor(log10(k))
[23:37:05] <mawk> so, you see than f(n) is at least n
[23:37:22] <beaky> see thats a great compression ratio
[23:37:33] <mawk> lol
[23:38:10] *** Quits: absc (~absc@access03.colt-engine.it) (Ping timeout: 240 seconds)
[23:38:40] <mawk> the compression would be better just giving the data directly
[23:39:06] <mawk> depending on what the data is
[23:39:21] *** nekodesu is now known as katkot
[23:39:28] *** Joins: loliko (~loliko@c-73-193-36-183.hsd1.wa.comcast.net)
[23:41:10] *** katkot is now known as nekodesu
[23:41:14] *** Quits: sevla (~platen@user/sevla) (Quit: WeeChat 2.8)
[23:41:22] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[23:41:37] *** Joins: zaher (~zaher@37.48.153.161)
[23:41:53] *** Joins: manin (~x@185.242.190.95)
[23:43:45] <webnet4> unless you can compress the key somehow, given the concatonation pattern maybe theres a shortcut
[23:43:52] *** Joins: Auron (~Auron956@user/auron)
[23:46:58] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[23:47:12] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:47:54] <mawk> if you compress the key that's akin to doing a wholly different compression algorith
[23:47:55] <mawk> m
[23:48:35] <twomoon> what key?
[23:48:55] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:48:58] <mawk> the index the universe number
[23:48:58] <beaky> the key to the champernowne constant
[23:49:03] <mawk> yes
[23:49:09] <mawk> the decimal position at which your data is
[23:49:45] <mawk> the constant is 0.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100...
[23:49:47] <twomoon> i'm lost
[23:50:10] *** Quits: DSync (~ds@user/deepspace-link) ()
[23:50:11] <[itchyjunk]> mawk, oh i didn't know eclipse did other shit too
[23:50:12] <mawk> ^ that's the champernowne constant
[23:50:23] <mawk> [itchyjunk]: we use it for embedded programming at company
[23:50:29] <[itchyjunk]> oh fancy
[23:50:33] <[itchyjunk]> like arduino?
[23:50:34] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 258 seconds)
[23:50:35] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Client Quit)
[23:50:53] <mawk> not arduino itself but yeah
[23:50:54] <mawk> stm32
[23:50:57] <mawk> and esp32
[23:51:02] <beaky> nice i like arduino
[23:51:07] <mawk> no not nice
[23:51:10] <mawk> arduino = :thumbsdown:
[23:51:15] <mawk> stm32 = :thumbsup:
[23:51:17] <beaky> especially its weird top header gap thing
[23:51:18] <[itchyjunk]> oh stm32
[23:51:22] <[itchyjunk]> someone else was using it today
[23:51:23] <mawk> 👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍
[23:51:25] <[itchyjunk]> for their proect
[23:51:34] <twomoon> what does eclipse do?
[23:51:38] <mawk> it's an IDE
[23:51:38] <[itchyjunk]> idk
[23:51:38] <beaky> nice emojis work in my terminal
[23:51:41] <mawk> in which you code
[23:51:42] <[itchyjunk]> i use it as an editor
[23:51:46] <[itchyjunk]> and compiler i guess
[23:51:47] <twomoon> what are you referring to itchyjunk? what other stuff?
[23:51:49] <mawk> yes beaky you just need unicode support and the right font
[23:51:57] <twomoon> i used eclipse for programming atmel 8 bit before btw
[23:52:00] <mawk> other languages
[23:52:08] <[itchyjunk]> twomoon, i thought eclipse was a thing for java
[23:52:19] <twomoon> haha i thought it was for C
[23:52:20] <[itchyjunk]> apparently it's a generitc text ediotor ++
[23:52:25] <mawk> it's an IDE
[23:52:30] <mawk> not (just) a text editor
[23:52:33] <[itchyjunk]> idk what exactly an ide is
[23:52:37] <twomoon> oh interesting. my friend in florida just told me to use eclipse for atmel programming
[23:52:42] <[itchyjunk]> i think of Visual studios when i think of C
[23:52:44] <twomoon> so i didn't realize it was for anything
[23:52:57] <mawk> editor with code completion, compiling, debugging, flashing, code organization stuff, "code intelligence", etc
[23:52:59] <mawk> not just an editor
[23:53:05] <mawk> visual studio is more like C++
[23:53:18] <[itchyjunk]> thats why i said text editor ++
[23:53:30] <[itchyjunk]> its editor plus other things no one really knows about
[23:53:32] <mawk> w r o n g
[23:53:36] <mawk> www rrr ooo nnn ggg
[23:53:50] <mawk> it's a lot of things no one really knows about and maybe an editor with it
[23:53:55] <twomoon> damn eclipse is interesting
[23:54:00] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:54:02] <twomoon> i wonder if i can use it instead of pycharm
[23:54:14] <[itchyjunk]> eclipse is probably bloated if it does a lot of things
[23:54:23] <[itchyjunk]> does it do python?
[23:54:30] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-5755-430d-d5c4-6501.res6.spectrum.com)
[23:54:38] <mawk> no twomoon use pycharm
[23:54:46] <mawk> eclipse is "interesting" but heavy and ugly
[23:54:47] <jinsun> mawk: visual studio does C also, if you give .c file it will assume C code and C++ if you give .cpp I think
[23:54:52] <mawk> yes jinsun 
[23:55:16] <twomoon> pycharm is magical in the way it kinda understands how python needs to be setup with virtual envs or conda
[23:55:26] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:55:30] <twomoon> it's like they've tried to really understand how py programmers operate
[23:55:36] <mawk> yeah just use pycharm for python
[23:55:37] <[itchyjunk]> yeah i dont understand virtual envs or conda either
[23:55:38] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:55:42] <mawk> lol
[23:55:42] *** Quits: salitos (~salitos@102.167.221.174) (Quit: Leaving)
[23:55:55] <twomoon> neither do i itchyjunk. i just take orders from ppl in #python or other channels
[23:56:07] <[itchyjunk]> yeah i ran commands people told too
[23:56:10] <[itchyjunk]> to set up some env
[23:56:17] <[itchyjunk]> that i rarely used  i think
[23:56:20] <[itchyjunk]> maybe never
[23:56:37] <twomoon> i realized a couple years back that most ppl should stop trying to understand everything really well and just focus on completing real projects
[23:56:55] <twomoon> and just get help from ppl when they need it and don't waste too much time trying to understand everything at a deep level
[23:57:00] <mawk> /nick `{\[itchyjunk\]}`
[23:57:06] <mawk> to make it even more obnoxious to type
[23:57:15] <twomoon> fake it until you make it. that worked for me with physics in college
[23:57:27] <twomoon> i just did things in a rote way and didn't understand anything well
[23:57:43] <twomoon> but then after a while of doing things in a rote manner you *may* start to get a deeper understanding of things
[23:57:45] <mawk> impossible for me to do that
[23:57:52] <mawk> if something is interesting I can't not research it
[23:58:11] <beaky> yes i must understand everything down to the raw basics
[23:58:11] <twomoon> I wish i was positioned farther along the autism spectrum
[23:58:17] <twomoon> then i'd delve into the details more probably
[23:58:31] *** [itchyjunk] is now known as `{\[itchyjunk\]}
[23:58:48] <beaky> like why does python even need virtualenv it is because the cargo solution is not pythonic enough
[23:58:49] <twomoon> i can't memorize a lot of linux commands tbh
[23:58:58] <twomoon> my brain just cannot memorize complicated syntax
[23:59:03] *** Quits: Quietwalker (~X@24.162.16.145) (Ping timeout: 276 seconds)
[23:59:13] <twomoon> cargo solution?
[23:59:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:59:20] <`{\[itchyjunk\]}> yeah too much to learn out there
[23:59:25] <`{\[itchyjunk\]}> too few neurons
[23:59:26] <beaky> yes i dont memorize any commands ever i just always hit control+r and search for the same command
[23:59:26] <jinsun> mawk: but actually when you create a new project there is only option of C++ project, to make a C project you have to start C++ project and rename .cpp to .c
[23:59:33] <mawk> what's the cargo solution beaky 
[23:59:43] <mawk> ah nice jinsun lol
[23:59:51] <mawk> anyway C is included in C++ mostly
[23:59:53] <beaky> yes cargo is the rust programming language's approach to all platform dependency management and builds
[23:59:59] <mawk> apart from a few caveats like void * and stuff
[23:59:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
