[00:04:10] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:04:38] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:05:17] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[00:06:48] *** Joins: codebam (~codebam@user/codebam)
[00:08:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:11:18] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[00:13:27] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:17:20] *** Quits: swn (~sweeney@user/swn) (Remote host closed the connection)
[00:19:34] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[00:19:54] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:22:13] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[00:23:41] *** Joins: tester12 (~tester12@5.120.77.247)
[00:27:44] *** Joins: lmat (~lawsa@c-68-58-60-231.hsd1.in.comcast.net)
[00:28:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[00:28:49] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:28:59] <lmat> I have a  const blob = await (await fetch('whatever')).blob();  const reader = new FileReader(); reader.readAsDataURL(blob);     it fails with "Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'."
[00:29:01] *** Joins: mickey (~user@user/mickey)
[00:29:08] <lmat> I'm running in node.js with node-fetch.
[00:29:17] <lmat> (so that fetch is     import fetch from 'node-fetch';  !)
[00:29:58] <lmat> I added   console.log("blob is ", blob); and the log says   blob is Blob { [Symbol(type)]: 'image/jpeg', [Symbol(buffer)]; <Buffer ff d8 .....> }
[00:30:15] <GreenJello> how would you have both node-fetch and FileReader?
[00:30:25] <GreenJello> where is the code running?
[00:30:40] <lmat> GreenJello: It's running on a server (not a browser). Does that answer the question?
[00:30:59] <GreenJello> where does FileReader come from?
[00:31:03] <lmat> GreenJello: Is FileReader not supposed to work on node? :-D
[00:31:18] <GreenJello> yep
[00:31:19] <sheetjs> n> process.env.version
[00:31:20] <jellobot> (okay) undefined
[00:31:22] <sheetjs> n> process.env.versions
[00:31:23] <jellobot> (okay) undefined
[00:31:27] <sheetjs> n> process.env
[00:31:28] <jellobot> (okay) { PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', HOSTNAME: '9514b1a5f003', JSEVAL_MODE: 'n', JSEVAL_ENV: 'node-cjs', JSEVAL_TIMEOUT: '5000', NODE_ICU_DATA: '/run/node_modules/full-icu', HOME: '/home/node' }
[00:31:28] <GreenJello> process.version
[00:31:36] <sheetjs> n> process.version
[00:31:37] <jellobot> (okay) 'v16.5.0'
[00:31:42] <sheetjs> n> FileReader
[00:31:43] <jellobot> (fail) ReferenceError: FileReader is not defined
[00:31:52] <lmat> dunno...just works. Maybe   import 'global-jsdom/register';  or    import fs from 'fs'; .... dunno
[00:31:56] <sheetjs> ^^ lmat how are you importing it?
[00:32:01] <lmat> sheetjs: not.
[00:32:03] *** Joins: onosendi (~onosendi@user/onosendi)
[00:32:17] *** Quits: mattil (~mattilinn@87-92-137-191.rev.dnainternet.fi) (Read error: Connection reset by peer)
[00:32:19] <GreenJello> lmat, yep, so you have two libraries independently defining a fake Blob class
[00:32:25] <GreenJello> there are two Blob
[00:32:27] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[00:32:28] <lmat> GreenJello: :-o
[00:32:38] *** Joins: Deide (~Deide@217.155.19.23)
[00:32:38] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[00:32:38] *** Joins: Deide (~Deide@user/deide)
[00:32:59] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:33:22] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:33:41] <sheetjs> what's the end goal?
[00:33:46] <lmat> Here's my package.json https://paste.rs/0Qa The project is running in docker FROM node:16
[00:34:00] *** Joins: codebam (~codebam@user/codebam)
[00:34:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[00:34:47] <sheetjs> if you just want a base64 string you can go arrayBuffer -> Buffer -> base64
[00:34:49] <lmat> sheetjs: The end goal is to render an animated map in webgl. The preliminary goal in this step is to download an image from the web and create a webgl texture with it.
[00:35:07] <lmat> sheetjs: That sounds great!
[00:35:15] <lmat> sheetjs: What is the codez?
[00:35:17] *** Gustavo6046_ is now known as Gustavo6046
[00:35:48] <sheetjs> const ab = await (await fetch('whatever')).arrayBuffer(); const b64 = Buffer.from(ab).toString("base64")
[00:35:56] <sheetjs> something like that
[00:36:00] <lmat> sheetjs: I looked for a while about how to get data from a URL as base64-encoded, and this is the way! Is your way good for in-browser, too?
[00:36:29] <stenno> why the double await
[00:36:47] <sheetjs> fetch returns a promise
[00:36:51] <stenno> await fetch(...).then(resp => resp.arrayBuffer)
[00:36:53] <stenno> i know
[00:36:57] <sheetjs> and the getters also return promises
[00:37:09] <sheetjs> blob / arrayBuffer / text
[00:37:16] <stenno> but sometimes mixing await and .then makes the code better
[00:37:22] <stenno> instead of nesting await
[00:37:32] <lmat> const result = await fetch('whatever');  const ab = await result.arrayBuffer(); const b64 = ...
[00:37:36] <sheetjs> or just two awaits
[00:37:56] <lmat> Now I'm really curious where my FileReader is coming from :-o
[00:38:40] <sheetjs> if you want something that works everywhere
[00:38:46] <lmat> sheetjs: I do :-D
[00:38:47] <sheetjs> in nodeJS you can do the buffer stuff
[00:38:55] <lmat> Oh wait, I guess I don't car.
[00:38:58] <sheetjs> and in browser you can slice and convert
[00:39:12] <lmat> Because I have one entrypoint that does this in node.js and a completely different thing that runs in the browser.
[00:39:42] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[00:39:44] <lmat> So, almost all of the code runs in the browser and node.js, but this little bit about getting an image online doesn't run in the common code base.
[00:39:58] *** Joins: skillbot (~skillbot@user/skillbot)
[00:39:58] *** ChanServ sets mode: +v skillbot
[00:40:28] <sheetjs> a good Buffer shim should have base64 encoding
[00:40:40] <lmat> sheetjs: sweet.
[00:41:05] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[00:41:22] *** Joins: skillbot (~skillbot@user/skillbot)
[00:41:22] *** ChanServ sets mode: +v skillbot
[00:45:04] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:47:23] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:50:49] *** Quits: Guest966 (~Guest9@43.242.116.41) (Quit: Connection closed)
[00:55:37] *** Quits: electr0n (~electr0n@hunt.revrse.sh) (Ping timeout: 268 seconds)
[00:56:05] *** Joins: electr0n (~electr0n@hunt.revrse.sh)
[00:57:22] *** Joins: silly_ (~silly@user/silly)
[01:00:42] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[01:07:40] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[01:11:39] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 276 seconds)
[01:12:31] *** Joins: codebam (~codebam@user/codebam)
[01:13:31] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:16:24] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:16:41] <anddam> stenno: I see
[01:16:51] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[01:19:01] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:7b14:7132:e90a:21fd:f0ed) (Remote host closed the connection)
[01:19:14] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:7b14:5f22:e686:aa2a:223)
[01:20:48] <anddam> what do I need to programmatically send a mouseup like it was triggered by an event bubbling up from a descendant?
[01:21:08] *** Quits: gehn (~gehn@user/gehn) (Ping timeout: 258 seconds)
[01:21:26] <anddam> I figure some  .dispatchEvent() and an instance of Event() that has bubbles: true, but does that even instance also need target and currentTarget?
[01:22:50] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[01:25:16] <entuland> target is set automatically by the element you dispatchEvent() to
[01:25:40] <entuland> currentTarget is automatically set to the element that the event listener is attached to
[01:25:53] <entuland> so you shouldn't need to specify either (well, you specify the first)
[01:26:21] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:26:46] <entuland> but as above, you specify it indirectly (not in the event itself) with the action of calling dispatchEvent() on such an element
[01:27:46] *** Quits: teut (~teut@106.214.44.24) (Quit: Connection closed)
[01:28:09] *** Joins: summersault (~summersau@179.221.251.16)
[01:28:17] <anddam> entuland: ok, in my case I have a DOM element A having children B, C and D, A is handling mouseup as bubbling event, so it needs to check who the "initial" target was. I'd like to mimick this programmatically
[01:30:09] <entuland> https://jsfiddle.net/entuland/qagwrn10/
[01:31:43] *** Joins: l__q (~modinfo@user/modinfo)
[01:31:53] <anddam> you beated me, I was typing the same dispatchEvent
[01:31:58] <anddam> ok so that should work
[01:32:39] <entuland> B)
[01:32:47] <anddam> oh and that's attached to document itself
[01:32:51] <entuland> yep
[01:32:52] <anddam> so _definitely_ a parent
[01:32:55] <anddam> up high
[01:33:08] <anddam> I still find it odd there's no API to manipulate added listeners
[01:33:20] <anddam> I mean those objects have to be referenced someplace
[01:33:33] *** Quits: eXistenZ (~biskit@bzq-79-182-123-73.red.bezeqint.net) (Quit: Leaving)
[01:34:10] <entuland> uhm... I think there are ways to get such listeners
[01:34:17] <entuland> but you _shouldn't_ need to
[01:34:20] *** Quits: amahl (~amahl@84.251.202.64) (Remote host closed the connection)
[01:35:01] <entuland> if you have to, it's sign of doing something suboptimal with your code (as you should know which ones you have added) or you're trying to mess with stuff you don't "own"
[01:37:28] <anddam> entuland: not my code
[01:37:43] <entuland> guessed as much - are you sure you need to mess with it?
[01:37:48] <anddam> entuland: I was trying to mimick the Gmail click on the "hangout" button, that has become open by default
[01:38:22] <entuland> well, you don't have to mess with the existing listeners, you just have to dispatch the click to that element
[01:38:24] <anddam> entuland: it's a minor thing for sure, but it bugs me that I cannot trivially tell the browser "click this button on page load" and have it hide the section like I did it
[01:38:38] <entuland> you _can_ do that for sure
[01:38:43] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[01:38:45] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[01:38:54] <entuland> the only issue you may have is that you may be trying to dispatch the event before the listener gets attached
[01:39:06] <entuland> there is plenty of stuff that gets deferred
[01:39:19] <anddam> entuland: if you have like 10 seconds and a Gmail account can you check   document.querySelector(".aj2").dispatchEvent(new Event("mouseup", {bubbles: true}))
[01:39:28] <anddam> entuland: I am doing it manually in console, after loading the page
[01:39:36] <entuland> you're dispatching mouseup
[01:39:37] <anddam> it has been loaded for… say many minutes
[01:39:39] <entuland> not click
[01:39:44] <entuland> those are two different things
[01:40:20] <anddam> I tried them both
[01:40:38] <entuland> and are you 100% sure that .aj2 is _that_ element you need to trigger?
[01:42:08] <anddam> I tried that, that is an empty div with no listeners, its parent that is a div with only blur, focus, key{up,down,press} event listeners attached
[01:42:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:42:20] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:42:39] <anddam> then the parent of the latter, that has the mouse* events (but not 'click')
[01:42:47] <anddam> as you can see by my dedication this things really bugs me
[01:42:54] <anddam> s/things/thing
[01:43:32] <entuland> I just tried with the + sign near hangouts in my gmail, it worked
[01:43:42] <entuland> so I guess you're just triggering it on the wrong element maybe
[01:43:44] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[01:43:59] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:46:42] <anddam> mmm I don't even see a + sign near hangouts, are you possibly signed in?
[01:47:09] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[01:48:09] <entuland> uhm... ignore that, it worked but it's a different thing
[01:48:14] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 265 seconds)
[01:48:18] <entuland> in your case, I think they're doing one of those sketchy things
[01:48:41] <entuland> if you pay attention to the parents of that DIV when you hover it, you'll see various ancestors get their classes altered
[01:48:55] <anddam> so classes are not a good attribute selector
[01:49:08] <anddam> the thing has an id=":6h"
[01:49:29] *** Quits: Guest65 (~Guest65@ip-37-201-153-7.hsi13.unitymediagroup.de) (Quit: Client closed)
[01:52:31] <entuland> no idea, they must be doing something weird with that thing
[01:53:14] <anddam> I get    Uncaught DOMException: Document.querySelector: '#:6i' is not a valid selector
[01:53:40] <entuland> yeah, that's part of the sketchy things
[01:53:42] <anddam> I am using document.querySelector("#\:6i")  tried with single quotes as well in case escaping is different
[01:54:32] <entuland> document.querySelector("[id=':ba']");
[01:54:52] <entuland> but it's not going to make any difference
[01:55:15] <entuland> I mean, you'll be able to select that element, but the click event will not work there
[01:56:30] <anddam> how comes?
[01:56:55] <entuland> no idea, they may be actively peeking into how the event has been triggered to detect automation and ignore it
[01:57:36] <entuland> that click event we're generating is easily told apart from a real one, probably peeking into the mouse coords or similar trickeries
[01:58:04] <anddam> what if I add a listener to the inner event (the one without listeners) to log the event, then create a new event with the exact same properties?
[01:58:18] <entuland> TIAS :P
[01:59:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:59:10] <anddam> doing already
[02:00:49] *** Joins: summersault (~summersau@179.221.251.16)
[02:03:27] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 268 seconds)
[02:03:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[02:05:03] <entuland> if they're checking .isTrusted you're out of luck
[02:05:13] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[02:06:43] *** Joins: Trieste (T@user/pilgrim)
[02:07:48] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[02:08:15] <anddam> side question, when logging the event created by mouse interaction and the program-made one I see the former has a considerably shorter first line in console
[02:08:37] <anddam> i.e. https://i.ibb.co/4PzymHx/2021-07-27-233528-1124x1328-scrot.png seems to have less attribute in the inline { … } description, yet it has more in the vertical list
[02:08:39] <anddam> why is this?
[02:09:21] <entuland> that I can't tell
[02:10:01] <entuland> I see in the sources that there is at least one spot where they're checking .isTrusted on something
[02:10:17] <entuland> and that may very well be a proxy that handles many events
[02:12:12] <entuland> there are settings to control some of that chat / hangouts stuff though
[02:12:16] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[02:12:17] <nomic> <GomJabbar> whoa whao whoa nomic
[02:12:17] <nomic> <GomJabbar> whats with the javascript hate
[02:12:18] <nomic> <nomic> i dn't hate it
[02:12:18] <nomic> <nomic> i just dismiss it vs python
[02:12:26] <nomic> oopss
[02:12:28] <entuland> since I never use it, I just checked and hidden it altogether
[02:12:28] <nomic> wrog channel
[02:12:41] <entuland> eheheh
[02:12:46] <anddam> entuland: I think the difference in logging is because the mouse generated one is MouseEvent rather than Event
[02:12:49] *** Joins: Trieste (T@user/pilgrim)
[02:12:57] <anddam> in fact dispatching a MouseEvent has a similar representation
[02:13:12] <entuland> well, try and generate a MouseEvent
[02:13:33] <entuland> but as above, if they're checking isTrusted, you're out of any chances
[02:14:25] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 258 seconds)
[02:17:44] *** Joins: Naan (~naan@user/naan)
[02:18:30] *** Joins: eqw (~eqw@31.134.178.99)
[02:21:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:23:02] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[02:23:37] <paule32> hello
[02:24:06] <paule32> give it a possibility to call a php script from javascript ?
[02:24:11] <paule32> ajac ?
[02:25:25] <silly_> !fetch @paule32
[02:25:25] <jellobot> paule32, window.fetch - a standard way to make HTTP requests, say bye to XHR and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
[02:26:08] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 255 seconds)
[02:27:50] <paule32> thx
[02:29:14] *** Joins: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642)
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:22] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:56] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[02:32:43] *** Joins: summersault (~summersau@179.221.251.16)
[02:35:08] <ljharb> !server data @ paulcarroty
[02:35:08] <jellobot> paulcarroty, There's 3 options to properly get data from the server to the client: 1) fetch request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type="application/json"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly. See also !fetch
[02:35:13] <ljharb> !server data @ paule32
[02:35:13] <jellobot> paule32, There's 3 options to properly get data from the server to the client: 1) fetch request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type="application/json"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly. See also !fetch
[02:35:18] <ljharb> sorry carrot paul
[02:35:23] *** Joins: sillyslux__ (~silly@user/silly)
[02:36:40] <paule32> can i "auto submit" form data ?
[02:36:45] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 268 seconds)
[02:37:04] <sillyslux__> yes, make a fetch request any time
[02:38:21] *** Joins: clf59 (~clf59@user/clf59)
[02:38:57] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 258 seconds)
[02:40:22] <DPA> Don't do <script type="application/json"></script>. {"a":"</script>"}
[02:41:01] <anddam> entuland: yep, seems that's it
[02:41:29] <anddam> I reduced the difference in event to isTrusted, layerX, layerY, offsetX, offsetY
[02:41:36] <anddam> so that's is the likely culprit
[02:42:08] <entuland> ok
[02:43:09] <clf59> hhhtth4ihtgjd
[02:43:15] <clf59> oops
[02:44:08] *** Joins: gehn (~gehn@user/gehn)
[02:46:03] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:46:51] <anddam> this has been tiring and frustrating
[02:47:05] <anddam> great way of passing time, thanks all for the info
[02:47:07] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.1)
[02:47:18] <ljharb> DPA: why not?
[02:47:30] <ljharb> DPA: it's a perfectly fine technique depending on whether the data is cacheable or not
[02:47:46] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 258 seconds)
[02:47:53] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:8884:196f:af4a:1df:f80b) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:58] <ljharb> DPA: the `</script>` thing is a problem, but you'd obviously use one of the thousands of tools out there that handle that escaping for you
[02:49:44] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[02:50:04] *** Quits: clf59 (~clf59@user/clf59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:33] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[02:52:49] *** Joins: clf59 (~clf59@user/clf59)
[02:53:34] *** Quits: mexen (uid495612@user/mexen) ()
[03:02:27] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:04:27] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:04:45] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[03:05:07] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[03:05:54] *** Joins: summersault (~summersau@179.221.251.16)
[03:06:06] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:08:24] <Atum_> n> class Sample { constructor(a) { this.a = a; } get a() { return this.a; } } const inst = new Sample('test')
[03:08:25] <jellobot> (fail) TypeError: Cannot set property a of #<Sample> which has only a getter
[03:08:30] <Atum_> why, lol
[03:09:12] <GreenJello> a property is either a getter/setter or a value property
[03:09:21] <GreenJello> not both
[03:09:54] <Atum_> so, if I want it as a value property, I should remove the get a()?
[03:09:59] <GreenJello> yes
[03:10:08] <Atum_> Ok, got it, thanks green
[03:10:24] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[03:14:41] *** Joins: peterhil (~peterhil@mobile-access-b04815-181.dhcp.inet.fi)
[03:17:52] *** Quits: tester12 (~tester12@5.120.77.247) (Quit: Client closed)
[03:18:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[03:19:49] <paule32> so
[03:19:57] <paule32> i have fetch html data
[03:20:18] <paule32> how can i clear the current dom, and set the new with fetch data
[03:20:19] <paule32> ?
[03:21:12] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:18] <GreenJello> set some element's innerHTML?
[03:22:29] *** Joins: summersault (~summersau@179.221.251.16)
[03:23:46] *** Quits: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (Quit: leaving)
[03:24:00] <paule32> its a complete file
[03:24:59] <GreenJello> then something with your situation needs to change, but it's not clear why you're in this situation
[03:25:35] <GreenJello> or what the situation is, really
[03:26:30] <GreenJello> loading a new html page is done by navigating to a new url. It can't be generally done otherwise
[03:27:02] <paule32> i give parameters with fetch to a php file
[03:27:21] <paule32> the response is the html file (also the parsed php file)
[03:27:33] <paule32> and this file, i would like to display
[03:27:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[03:27:56] <robertmaxrees> paule32 show us what the response looks like in a paste?
[03:28:18] <robertmaxrees> it sounds like you're trying to replace the contents of a container with the response from your endpoint.
[03:28:28] *** Joins: silly_ (~silly@user/silly)
[03:28:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:29:22] *** Quits: IceMichael (~IceMichae@dynamic-046-114-155-075.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[03:30:04] <paule32> https://dpaste.com/DJD6PBU4B
[03:30:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:30:49] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[03:30:50] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[03:31:18] <paule32> but it comes over me, that this file is not need any more
[03:31:20] *** Joins: silly_ (~silly@user/silly)
[03:31:29] <robertmaxrees> wat
[03:31:34] <paule32> its a artifact of prev. programming
[03:31:51] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 258 seconds)
[03:31:53] <paule32> i have a other logic that calls other files
[03:32:01] *** Joins: IceMichael (~IceMichae@dynamic-046-114-155-102.46.114.pool.telefonica.de)
[03:32:20] <paule32> ok, forget it
[03:34:18] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:36:22] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[03:36:25] *** Joins: Atum__ (~IRC@user/atum/x-2392232)
[03:37:54] *** Joins: Atum___ (~IRC@user/atum/x-2392232)
[03:39:42] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Ping timeout: 245 seconds)
[03:40:19] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[03:41:29] *** Quits: Atum__ (~IRC@user/atum/x-2392232) (Ping timeout: 252 seconds)
[03:42:13] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[03:45:45] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[03:46:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[03:47:03] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 268 seconds)
[03:49:50] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 255 seconds)
[04:08:35] *** Joins: mexen (uid495612@user/mexen)
[04:12:29] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:16:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:17:52] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Client Quit)
[04:18:31] *** Joins: summersault (~summersau@179.221.251.16)
[04:22:35] *** Joins: bobdobbs (~user@2406:5a00:f001:c600:f168:5b77:9f1c:6c14)
[04:22:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:23:29] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a1dd:19e7:946f:4f6f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:28:59] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[04:29:11] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:30:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:33:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:34:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:34:25] *** Joins: clf59_ (~clf59@user/clf59)
[04:34:27] *** Quits: clf59_ (~clf59@user/clf59) (Client Quit)
[04:36:56] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 252 seconds)
[04:52:12] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:52:14] *** Quits: federico_it (~textual@176.206.80.238) (Quit: Textual IRC Client: www.textualapp.com)
[04:52:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[04:54:57] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:57:07] *** Joins: ferdna (~ferdna@user/ferdna)
[04:58:36] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:58:39] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:01:45] *** Joins: pizdets (~pizdets@183.182.115.135)
[05:04:13] *** Joins: summersault (~summersau@179.221.251.16)
[05:08:49] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[05:18:18] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 240 seconds)
[05:18:30] *** Quits: Atum___ (~IRC@user/atum/x-2392232) (Read error: Connection reset by peer)
[05:18:38] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[05:21:01] *** Joins: summersault (~summersau@179.221.251.16)
[05:21:25] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:24:52] *** Joins: sillyslux__ (~silly@user/silly)
[05:25:57] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[05:33:12] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[05:33:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[05:34:40] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:36:41] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:68a0:f76f:c20a:17b7) (Quit: Textual IRC Client: www.textualapp.com)
[05:38:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:41:46] *** Joins: EgonX (~EgonX@2601:2c6:47f:8884:d5d4:e8ff:5c31:2711)
[05:47:44] *** Quits: peterhil (~peterhil@mobile-access-b04815-181.dhcp.inet.fi) (Ping timeout: 255 seconds)
[05:53:45] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 276 seconds)
[06:00:15] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:05:57] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Ping timeout: 245 seconds)
[06:06:00] *** Joins: summersault (~summersau@179.221.251.16)
[06:06:08] *** Joins: thekingofbandit (tkob@user/thekingofbandit)
[06:06:36] *** Joins: Success (~Announcem@172.58.102.142)
[06:08:24] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:08:39] *** Joins: mickey (~user@user/mickey)
[06:08:41] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:10:32] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[06:14:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:15:04] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:16:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[06:17:04] *** Quits: Success (~Announcem@172.58.102.142) (Ping timeout: 258 seconds)
[06:18:35] <bambanxx> hi
[06:18:49] <wintersky> hiya
[06:19:07] <bambanxx> i have this function   $("#pagar-carrito").animate({paddingTop: "+=100px"});   which change the padding of a button, how i can do this function back the padding to 0 in 2 seconds?
[06:19:30] <bambanxx> usiso when someone click the padding change and after 2secs back to normal
[06:19:34] <bambanxx> hey wintersky
[06:21:39] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:22:13] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:26:04] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Quit: The Lounge - https://thelounge.chat)
[06:26:38] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[06:28:00] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[06:28:41] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[06:29:18] <dodobrain> is there a separate channel for d3js ? or is this the place to ask questions related to it ?
[06:29:49] <GreenJello> dodobrain, /msg alis list d3
[06:29:52] *** Joins: zakame (~zakame@user/zakame)
[06:29:59] <GreenJello> (i don't know, but that'll tell you)
[06:30:23] *** Joins: codebam (~codebam@user/codebam)
[06:31:41] <dodobrain> GreenJello, my apologies for beating a dead horse here.. did the reactjs channel move elsewhere? i see the member count on that channel on libera is quite low compared to what it was on the previous dead network
[06:32:07] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:33:50] <GreenJello> it's still #reactjs. It probably has few users because it took a while to migrate from freenode
[06:36:39] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 276 seconds)
[06:36:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[06:39:31] *** Joins: summersault (~summersau@179.221.251.16)
[06:42:59] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:43:02] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[06:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:44:36] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[06:44:40] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[06:45:13] *** Joins: Rockwood (~Rocky@user/rocky)
[06:46:16] *** Joins: codebam (~codebam@user/codebam)
[06:48:20] <sheetjs> also there are active communities on slack and discord
[06:51:40] <dodobrain> des anyone kno whow i can add tooltips to d3 axis ticks ?
[06:53:33] <dodobrain> and i specifically mean for an implementation such as this: d3.select(foo).call(d3.axisTop(scale).ticks(d3.timeDay.every(1)).tickFormat(timeFormat))
[06:54:01] <dodobrain> i.e. drawing a tick for every day, but i want some other data that may be available on the day to be shown on the tick tooltip
[06:54:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:56:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[06:57:36] *** Joins: codebam (~codebam@user/codebam)
[06:58:13] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[07:00:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:04:58] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[07:17:22] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[07:19:07] *** Joins: codebam (~codebam@user/codebam)
[07:27:15] *** Joins: summersault (~summersau@179.221.251.16)
[07:29:40] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 268 seconds)
[07:33:20] *** Quits: IceMichael (~IceMichae@dynamic-046-114-155-102.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:34:11] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:34:23] *** Joins: summersault (~summersau@179.221.251.16)
[07:35:54] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[07:41:40] *** Joins: IceMichael (~IceMichae@dynamic-046-114-153-200.46.114.pool.telefonica.de)
[07:44:09] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[07:45:06] *** Joins: l__q (~modinfo@user/modinfo)
[07:46:42] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Client Quit)
[07:50:59] *** Quits: IceMichael (~IceMichae@dynamic-046-114-153-200.46.114.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:52:23] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:53:42] *** Joins: IceMichael (~IceMichae@dynamic-046-114-153-200.46.114.pool.telefonica.de)
[07:54:57] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 268 seconds)
[07:57:13] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:00:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:02:40] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:02:40] *** __jmcantrell__ is now known as jmcantrell
[08:06:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[08:08:41] <Rockwood> http://jsfiddle.net/t42am0fq/2/ button not disabling
[08:08:58] <Rockwood> at end of scrolling
[08:13:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[08:14:10] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:18:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:18:41] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[08:19:15] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[08:20:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:21:08] *** Joins: l__q (~modinfo@user/modinfo)
[08:24:18] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 252 seconds)
[08:27:06] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[08:29:47] *** Joins: summersault (~summersau@179.221.251.16)
[08:31:37] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 258 seconds)
[08:33:54] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[08:37:02] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[08:37:51] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[08:38:30] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Client Quit)
[08:40:16] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[08:40:59] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 250 seconds)
[08:46:13] *** Joins: summersault (~summersau@179.221.251.16)
[08:54:57] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:04:12] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[09:04:35] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[09:18:13] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:19:13] *** Joins: summersault (~summersau@179.221.251.16)
[09:20:03] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 268 seconds)
[09:24:13] <theskillwithin> never get trapped in the thinking the ends justify the means
[09:25:13] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[09:26:00] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[09:27:35] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[09:30:11] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f)
[09:33:52] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[09:34:00] *** Quits: kmh (~kmh@p200300df5f3d23000955d7f071ccacf7.dip0.t-ipconnect.de) (Quit: Leaving)
[09:34:18] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[09:36:14] *** Joins: stenno (~stenno@user/stenno)
[09:39:13] *** Joins: deide[m] (~deidematr@2001:470:69fc:105::c883)
[09:42:13] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:47:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[09:50:28] <ashnur> that sounds good, but sadly, it's ironic
[09:50:35] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[09:52:09] *** Joins: codebam (~codebam@user/codebam)
[09:52:30] <paulcarroty> ljharb, lol, it was useful
[09:53:09] <wroathe> theskillwithin: What if I justify the means ahead of time?
[09:55:59] <ljharb> paulcarroty: what was
[09:56:45] <theskillwithin> wroathe thats totally fine.  but im not sure im happy with how u phrased that
[09:57:40] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[09:57:57] <wroathe> theskillwithin: Oh?
[09:58:56] *** Joins: codebam (~codebam@user/codebam)
[10:00:40] <paulcarroty> ljharb, server data
[10:01:17] <ljharb> paulcarroty: ok? server data is fine, just only with one of those three methods
[10:02:00] *** Joins: stenno (~stenno@user/stenno)
[10:06:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[10:10:57] *** Joins: stenno (~stenno@user/stenno)
[10:11:09] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Quit: Let us prepare to grapple with the ineffable itself, and see if we may not eff it after all.)
[10:11:12] <b-rex> n> 'computer'.split('').map(c=>(c.charCodeAt()-96)*6).reduce((t,c)=>t+c)
[10:11:13] <jellobot> (okay) 666
[10:11:28] <ljharb> that tracks
[10:13:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[10:15:33] <theskillwithin> ljharb well u can award 0-5 gold stars.  how do you rank it?
[10:15:52] <ljharb> rank what
[10:16:54] <theskillwithin> that means 0 gold stars
[10:18:30] <theskillwithin> b-rex better luck next time
[10:18:56] <b-rex> theskillwithin: can we compress that code further?
[10:19:07] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 265 seconds)
[10:19:13] *** LSD is now known as acidsys
[10:19:40] *** Joins: guy_frm_yogaland (~gourab@117.228.75.49)
[10:21:41] <theskillwithin> perhaps the folly was in trying to compress it.  but im not the judge so i cannot say
[10:22:24] *** Joins: peterhil (~peterhil@mobile-access-b04815-181.dhcp.inet.fi)
[10:24:42] <ljharb> n> [].reduce.call('computer', (s,c)=>s+(c.charCodeAt()-96)*6, 0) @ b-rex
[10:24:43] <jellobot> b-rex, 666
[10:25:06] <b-rex> ljharb: nice :)
[10:28:28] <ljharb> n> [].reduce.call('computer', (s,x) => s+(+x||83.25),0) @ b-rex
[10:28:29] <jellobot> b-rex, 666
[10:28:51] <ljharb> n> 'computer'.length*83.25 @ b-rex
[10:28:52] <jellobot> b-rex, 666
[10:28:53] <ljharb> what do i win
[10:29:11] <theskillwithin> ljharb nothing, your not allowed to put in submissions as a judge
[10:29:31] <ljharb> as a judge, i overrule you
[10:29:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:29:41] <ljharb> consider yourself lawyered
[10:32:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[10:34:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[10:35:25] <theskillwithin> ljharb just got a call from my lawyer and well
[10:35:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:35:42] <theskillwithin> ⭐️⭐️⭐️⭐️
[10:36:52] <ljharb> gul madred says, there are five stars
[10:37:19] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[10:37:44] *** Quits: guy_frm_yogaland (~gourab@117.228.75.49) (Ping timeout: 258 seconds)
[10:38:23] <theskillwithin> ljharb 5th star there must have to be a consensus
[10:38:48] <ljharb> if you don't get the reference you've lost credibility
[10:40:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[10:43:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:44:31] <theskillwithin> ljharb there was no rule you could not award urself the 5th star
[10:45:07] <ljharb> there was no rule
[10:45:09] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[10:46:32] *** Joins: codebam (~codebam@user/codebam)
[10:54:43] *** Joins: kmh (~kmh@p200300df5f3d23001c5f9d03d7f68d9b.dip0.t-ipconnect.de)
[10:57:26] <theskillwithin>  https://youtu.be/_UgSDcHPgCc
[10:57:27] <skillbot> YouTube Title: Get This Potato In The Golf Hole Without Touching The Green - FULL TASK
[11:01:26] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:01:58] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[11:03:32] *** Joins: codebam (~codebam@user/codebam)
[11:03:33] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[11:04:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[11:09:38] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:7292:3644:6cff:f5d6)
[11:12:39] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 250 seconds)
[11:13:05] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[11:13:47] <theskillwithin> ljharb when i googled it, quite odd.  the site didn't ask my age but if i was a virgin.  i said yes and allowed me in
[11:14:09] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[11:14:42] <ljharb> you had to google a Star Trek reference? For shame
[11:20:54] *** Quits: crazyhorse (~crazyhors@220-244-196-30.tpgi.com.au) (Remote host closed the connection)
[11:22:11] <sillyslux__> crivens
[11:24:27] <theskillwithin> shhh the original lessons are shit, its just star trek wokness now
[11:25:38] <undefined_bob1> star trek or star wars?
[11:26:33] <theskillwithin> for me neither
[11:26:54] *** undefined_bob1 is now known as undefined_bob
[11:27:02] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:27:09] <undefined_bob> I dont like them too
[11:27:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:28:40] <sillyslux__> just stargate
[11:28:54] <theskillwithin> not that i don't value fiction but meh
[11:29:26] <undefined_bob> sillyslux__: but only the old classical one. most of the newer versions of it are meh
[11:29:32] <theskillwithin> maybe animal farm is a better read
[11:30:16] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:30:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[11:30:52] <theskillwithin> 1984
[11:31:11] <undefined_bob> animal crossing for the switch :3
[11:31:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:33:43] <theskillwithin> well sometimes truth is stranger than fiction
[11:35:07] <undefined_bob> I like to watch videos on TikTok
[11:35:09] *** Joins: guy_frm_yogaland (~gourab@117.228.54.213)
[11:35:34] <theskillwithin> we have all the dystopian shit said in that book, now in usa
[11:36:25] <undefined_bob> I like the USA
[11:36:49] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[11:38:25] *** Joins: justicefries (~justicefr@2603-7081-7001-866e-d121-fbb5-3a3b-98b1.res6.spectrum.com)
[11:39:50] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[11:42:45] *** Joins: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi)
[11:47:45] *** Joins: stenno (~stenno@user/stenno)
[11:54:04] <paulcarroty> last stargate called universe was great
[11:55:12] <undefined_bob> but the actors all changed
[11:55:16] <undefined_bob> I dont like that
[12:01:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:01:12] *** Joins: gggp__ (~gggp@60.10.194.43)
[12:01:31] *** gggp__ is now known as gggp
[12:08:46] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:09:51] *** Joins: entuland (~entuland@user/entuland)
[12:12:24] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[12:12:24] *** Joins: vysn (~vysn@user/vysn)
[12:13:48] *** Joins: codebam (~codebam@user/codebam)
[12:14:16] *** Joins: l__q (~modinfo@user/modinfo)
[12:16:59] <l__q> wow, fly.io is rly cool for nodejs backend, you have own ipv4 and ipv6 adress, but how do it fly.io, that for free each user become own ipv4?
[12:17:54] <l__q> many other hostings are not so free with ipv4
[12:20:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b5cf:1562:fef5:34ea)
[12:20:47] <paulcarroty> credit-card-locked
[12:21:01] *** Quits: deide[m] (~deidematr@2001:470:69fc:105::c883) (Quit: Reconnecting)
[12:21:15] *** Joins: deide[m] (~deide@user/deide)
[12:21:37] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:21:58] *** deide[m] is now known as Deide
[12:27:45] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:34:52] *** Joins: silly_ (~silly@user/silly)
[12:38:42] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 276 seconds)
[12:40:27] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[12:41:44] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 255 seconds)
[12:42:47] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:42:47] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:42:47] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:45:51] *** Quits: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi) (Ping timeout: 276 seconds)
[12:49:46] *** Joins: keypushe- (keypusher@user/keypusher)
[12:49:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[12:52:46] *** keypushe- is now known as keypusher
[12:52:49] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[12:53:07] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[12:56:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:58:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[12:59:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:01:14] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:02:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:02:29] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[13:03:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:03:40] *** Joins: codebam (~codebam@user/codebam)
[13:04:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:07:03] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[13:07:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[13:07:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[13:10:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:10:51] *** Quits: peterhil (~peterhil@mobile-access-b04815-181.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:11:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:19:15] *** Joins: gggp_ (~gggp@60.10.194.43)
[13:19:30] *** Joins: GuiToris (~GuiToris@user/guitoris)
[13:21:08] *** Joins: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi)
[13:21:18] <GuiToris> hello, what am I doing wrong here? https://bpa.st/7MXA
[13:22:18] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[13:23:16] *** Joins: gggp__ (~gggp@111.63.14.119)
[13:23:40] <theskillwithin> GuiToris line one
[13:23:46] <theskillwithin> class=mystyle
[13:24:06] <GuiToris> what's wrong with that?
[13:24:46] <theskillwithin> well ud think it would be something like class="mystyle"
[13:25:04] *** Joins: Naan (~naan@user/naan)
[13:25:10] <GuiToris> I must have copied it from an unreliable site
[13:25:49] <stenno> wat
[13:25:49] <GuiToris> theskillwithin, this is the current one: https://bpa.st/YU2A
[13:25:58] <stenno> class=mystyle is valid
[13:26:15] <stenno> the problem is that you are trying to change an immutable data type
[13:26:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[13:26:36] <stenno> you need to assign the return value of the .replace call to innerHTML
[13:26:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[13:27:36] <stenno> const tags = document.querySelector('#tags'); tags.innerHTML = tags.innerHTML.replace('tagged', 'test');
[13:27:46] <stenno> strings are immutable in JS
[13:27:49] <theskillwithin> for example https://jsfiddle.net/theskillwithin/w4drtehv/
[13:28:36] *** Joins: codebam (~codebam@user/codebam)
[13:30:32] *** Quits: guy_frm_yogaland (~gourab@117.228.54.213) (Ping timeout: 245 seconds)
[13:32:09] <GuiToris> there's no button, I just copied the method from w3schools. Do I still need function myfunction () {} myFunction(); even if I don't have any buttons?
[13:32:52] <stenno> what?
[13:32:53] <stenno> to do what
[13:33:13] <stenno> you need to call the function somehow if you want to execute it
[13:33:25] <theskillwithin> stenno fun fact strings are also primatives
[13:33:42] <stenno> did i say something different?
[13:33:49] <theskillwithin> nope
[13:33:55] <stenno> ok
[13:34:13] <theskillwithin> wait did i spell that right
[13:34:21] <theskillwithin> ya
[13:34:21] <stenno> primitive
[13:34:26] <GuiToris> theskillwithin, your script works but it rewrites everything to 'test', doesn't it?
[13:34:33] <theskillwithin> stenno oh ty
[13:34:37] <GuiToris> theskillwithin, I'd like to replace 2 words
[13:34:54] <stenno> GuiToris: have you tried my two-liner instead
[13:35:10] <stenno> which actually does what you want
[13:35:19] <GuiToris> stenno, I tried but I couldn't interpret it, and didn't work, I'll give it another go
[13:36:21] <GuiToris> I'm taking it back
[13:36:26] <GuiToris> it works
[13:36:27] <GuiToris> thank you
[13:36:45] <stenno> nice
[13:36:48] <GuiToris> I didn't remember I had to call the function at the end
[13:37:01] <stenno> ah!
[13:37:22] <theskillwithin> yep gotta do that
[13:38:24] <GuiToris> so I basically have 2 words that I'd like to replace. Should I just insert the whole line from 'const tags to );' twice?
[13:38:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:38:43] <stenno> GuiToris: .replace can also take a regexp
[13:38:50] <stenno> do you want to replace it with the same word?
[13:39:01] <theskillwithin> btw if u examined my jsfiddle u woulda got that u needed to call it
[13:39:14] <stenno> n> 'foo bar baz'.replace(/foo|bar/g, 'test')
[13:39:15] <jellobot> (okay) 'test test baz'
[13:39:15] <GuiToris> no, AmE -> American English, BrE -> British English
[13:39:30] <stenno> ah yeah, calling twice seems like a better idea then
[13:40:19] <GuiToris> theskillwithin, I actually examined, and changed it but I got confused by how it worked
[13:40:34] <GuiToris> I use javascript twice a year and I keep forgetting it
[13:40:38] <GuiToris> thank you for all of your help :)
[13:41:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[13:41:53] <theskillwithin> may the JS be with you
[13:44:28] *** Joins: jess (~jess@libera/staff/jess)
[13:47:40] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[13:47:45] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:49:00] *** Joins: codebam (~codebam@user/codebam)
[13:50:05] *** Joins: sillyslux__ (~silly@user/silly)
[13:51:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:52:46] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:f946:fafb:963c:74e)
[13:53:06] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[13:54:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[13:54:29] *** Joins: chao (~stenno@user/stenno)
[13:58:46] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:59:29] *** chao is now known as stenno
[14:00:06] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:00:07] <GuiToris> stenno, I'm kind of dumb, if I insert the line twice it won't work :S
[14:00:10] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[14:00:16] *** Joins: gggp_ (~gggp@111.63.14.119)
[14:00:30] <GuiToris> I guess it's pretty straightforward, I just can't figure out how you meant it
[14:01:01] <entuland> GuiToris, can you put your code in jsfiddle.net?
[14:02:11] <GuiToris> I've already uploaded it here, I don't know if it's okay with you: https://bpa.st/EAWA
[14:02:37] <GuiToris> I think I'm declaring the variable again
[14:02:41] <GuiToris> but it's just a guess
[14:02:49] <entuland> you are, and that's wrong
[14:02:59] <entuland> you should check the console to see the errors
[14:03:14] <GuiToris> it's not an actual webpage but a program
[14:03:42] <entuland> well, it''s running on HTML, you should be able to debug in your running program anyways
[14:04:08] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[14:05:13] <GuiToris> you might incorrectly think I know what I'm doing
[14:05:29] <GuiToris> I merely copied the script that you gave me
[14:05:53] <GuiToris> even if I knew how to debug, I wouldn't understand a thing
[14:06:20] <entuland> that was someone else, I didn't give you any script - but I'm going to, now: https://jsfiddle.net/entuland/g0js4mxb/
[14:06:24] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[14:06:43] <entuland> you definitely should try and catch the basics of what you're dealing with: https://developer.mozilla.org/en-US/docs/Web
[14:06:44] <GuiToris> (I meant 'you' plural)
[14:06:48] <entuland> okay
[14:07:20] <entuland> in the code I shared, the main point is that replace() returns a string, so you can invoke two replace() in a row on the same line
[14:07:46] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[14:07:58] <entuland> you normally don't want to mess with innerHTML, that's going to cause troubles in some scenarios
[14:09:24] *** Joins: codebam (~codebam@user/codebam)
[14:09:45] <GuiToris> I don't know how efficient it is, but I created two separate functions and it works that way
[14:10:02] <entuland> in this context doesn't really make any difference since it's a one off
[14:10:46] <entuland> but understanding what the code does and why it failed in your first version wouldn't really hurt
[14:11:11] <GuiToris> got it, thanks for helping :)
[14:11:15] <entuland> yw
[14:11:53] *** Joins: gggp__ (~gggp@60.10.194.43)
[14:14:10] <GuiToris> I'm leaving now, see you later :)
[14:14:13] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[14:15:05] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[14:17:02] *** Joins: l__q (~modinfo@user/modinfo)
[14:17:21] *** Joins: lebster (sid17131@id-17131.stonehaven.irccloud.com)
[14:19:27] *** Quits: cantelope (~cantelope@173-27-116-255.client.mchsi.com) (Read error: Connection reset by peer)
[14:19:43] *** Joins: cantelope (~cantelope@173-27-116-255.client.mchsi.com)
[14:23:31] *** Quits: justicefries (~justicefr@2603-7081-7001-866e-d121-fbb5-3a3b-98b1.res6.spectrum.com) (Quit: Client closed)
[14:25:03] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[14:26:27] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:26:27] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:26:27] *** Joins: Heraes (~Heraes@user/romarain)
[14:29:14] *** Joins: pulse (~pulse@user/pulse)
[14:29:50] *** Joins: keypusher (keypusher@user/keypusher)
[14:36:54] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:f426:2423:b305:d90d) (Quit: WeeChat 3.2)
[14:36:56] <shan> https://regex101.com/r/H5nJhx/1 ok so i'm trying to use this regex with a lookbehind to match things that look like *test* but not \*test*. It seems to work on regexr and regex101 but it doesn't when i try the same thing in JavaScript?
[14:40:19] *** Quits: jmft2 (~JMFT@82.3.54.26) (Killed (NickServ (GHOST command used by jmft236!~jmft2@81.149.115.87.dyn.plus.net)))
[14:40:42] *** Joins: jmft2_ (~JMFT@82.3.54.26)
[14:41:24] <stenno> shan: JS doesn't support lookbehind to my knowledge
[14:41:30] <shan> oh crap
[14:41:32] <stenno> strangely enough
[14:41:40] <stenno> https://v8.dev/blog/regexp-lookbehind-assertions
[14:41:50] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[14:42:12] <stenno> https://github.com/tc39/proposal-regexp-lookbehind hmm stage 4
[14:42:24] <stenno> so it should be in the language now
[14:42:27] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:42:30] <stenno> /
[14:42:36] <shan> but why doesn't it work ;_;
[14:42:44] *** Joins: mickey (~user@user/mickey)
[14:42:56] <stenno> ’
[14:43:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:44:38] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:195c:4692:dcd8:dcc6)
[14:45:01] <stenno> n> '\\test\\'.match(/\w*(?<!\\)\*(.+)(?<!\\)\*/)
[14:45:02] <jellobot> (okay) null
[14:45:12] <stenno> shan: how does it not work?
[14:45:26] <stenno> n> '\\*test\\*'.match(/\w*(?<!\\)\*(.+)(?<!\\)\*/)
[14:45:27] <jellobot> (okay) null
[14:45:30] <shan> oh wait
[14:45:33] <shan> \\
[14:45:43] <stenno> n> '*test*'.match(/\w*(?<!\\)\*(.+)(?<!\\)\*/)
[14:45:44] <jellobot> (okay) [ '*test*', 'test', index: 0, input: '*test*', groups: undefined ]
[14:45:46] <shan> i have to escape the backslash :0
[14:45:49] <stenno> yes
[14:45:54] <shan> Fuck.
[14:45:59] <shan> thanks a bunch stenno
[14:45:59] <stenno> well
[14:46:03] <shan> damn that was silly
[14:46:05] <stenno> in a literal, you ahve
[14:46:55] <stenno> n> ['\*'.length, '\\*'.length]
[14:46:56] <jellobot> (okay) [ 1, 2 ]
[14:47:51] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[14:49:03] *** Joins: codebam (~codebam@user/codebam)
[14:51:17] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[14:51:30] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:52:23] *** Joins: keypusher (keypusher@user/keypusher)
[14:58:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[15:06:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[15:07:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[15:08:20] *** Joins: codebam (~codebam@user/codebam)
[15:11:37] *** Joins: stenno (~stenno@user/stenno)
[15:14:10] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[15:16:24] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (Ping timeout: 256 seconds)
[15:17:27] *** Joins: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi)
[15:22:07] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:23:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:23:26] *** Joins: Deide[m] (~deidehalo@2001:470:69fc:105::c89a)
[15:27:40] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:28:52] <hassoon> 'morning
[15:28:56] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[15:29:13] *** Joins: Guest83 (~Guest83@217.155.19.23)
[15:32:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[15:33:16] *** Joins: codebam (~codebam@user/codebam)
[15:37:33] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:37:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[15:39:11] *** Joins: cyberbanjo (~user@24.96.77.145)
[15:39:20] *** Joins: keypusher (keypusher@user/keypusher)
[15:42:24] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:43:29] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[15:43:48] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: You have been idle for 30+ days)
[15:45:12] *** Parts: Deide[m] (~deidehalo@2001:470:69fc:105::c89a) ()
[15:47:30] *** Joins: Deide[m] (~deidehalo@2001:470:69fc:105::c89a)
[15:56:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[15:58:27] *** Joins: federico_it (~textual@176.206.80.238)
[15:58:29] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[16:02:33] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[16:03:36] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[16:05:38] *** Joins: Deneb (~johnch@37.111.189.80.dyn.plus.net)
[16:08:13] <Deneb> I need a little help with a project I am collaborating on. Its an emulator that uses a canvas for a "display" screen. The text appears to be being rendered on the canvas - I don't see a separate text box overlay. The problem is that all text is rendered lower case, even when Caps Lock is on. It is easy enough to capture the state of capslock in keydown or keyup, but how does one change the case of the next characters being typed on the
[16:08:13] <Deneb> canvas?
[16:08:54] <Deneb> have just spent maybe 3 hours trying to find a solution but so far nothing has worked.
[16:09:37] <entuland> check the code that is actually rendering the text on the canvas
[16:10:15] <entuland> if you need more help try and put in a jsfiddle only the relevant parts to repro the issue
[16:12:32] <Deneb> entuland: that's the weird thing. I did and couln't find any.....
[16:13:19] <entuland> not sure I follow
[16:13:24] <entuland> what is it that you didn't find?
[16:13:26] <Deneb> at least nothing obvious that I could understand
[16:13:38] <entuland> https://jsfiddle.net/entuland/2dp4yacr/
[16:13:48] <Deneb> no obvious code that renders the text
[16:13:57] <entuland> you can follow the path of the string data
[16:14:00] <Deneb> so not sure how it is done
[16:14:10] <Deneb> there is no string data
[16:14:30] <entuland> you're typing the text somewhere
[16:14:41] <entuland> that text must go into the code somehow
[16:14:50] <Deneb> seems to be no textbox or sting or anything like that that I could use .toUpperCase() on
[16:15:11] <entuland> can't tell, without seeing the code or more details, hard to help
[16:15:46] <entuland> as a wild guess, there may be some listener checking the keys that are being pressed
[16:15:50] <Deneb> I agree it must. Tyoing it on the keyboard and it does appear in the designated "screen" in the browser so that must be happening somehow. There is a keyboard event handler.
[16:16:02] <entuland> that code may be naively only checking the key and not the shift / capslock state
[16:16:23] <entuland> can you share the keyboard event handler?
[16:17:50] <Deneb> indeed. It seems to be checking the keyCode on the keydown and keyup event. It does have a couple of lines that check the state of left and right shift keys and sets somthing called hw.KBD_SHIFT_0
[16:18:18] <Deneb> it does something similar with caps lock but seems to treat is as a shift so it behaves like one instead of sticking
[16:18:25] <Deneb> will share the code in a moment
[16:18:28] <entuland> ok
[16:19:04] <Deneb> https://dpaste.org/q6dv
[16:20:03] <entuland> wow
[16:20:11] <Deneb> and my attempted modification: https://dpaste.org/urMC
[16:20:14] <entuland> there are better ways to handle keyboard input
[16:21:01] <Deneb> no doubt. Not my code, I just started collaborating on the project and would like to fix a couple of user interface problems.
[16:21:02] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[16:21:32] <entuland> I would first try and find the exit point of that code
[16:22:21] <entuland> so that you know where to send the data for the canvas to render
[16:23:03] <entuland> then I would trash all of that keyboard handling and do it again with modern facilities, there is no need to mess with char codes like that
[16:23:24] <entuland> https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent
[16:23:45] <entuland> maybe also take the chance to replace those "on*" properties with addEventListener()
[16:23:45] <Deneb> the only reference to it I can see is: <script src="TekKeyboard.js"    language="JavaScript"></script>
[16:23:56] <entuland> that's just the line that includes the script
[16:25:27] <entuland> okay, the exit point seems to be that #screen element in the DOM
[16:25:54] <entuland> as all of that code messes with that element in the end
[16:26:33] <entuland> find out what that element is and check if there is any other JS running anywhere
[16:26:52] <Deneb> yes. The name of the keyboard handler function exists only in that .js file. The only link I could find was: window.onkeydown = handleEvent; Which calls handleEvent(e) in the same js which in turn calls the handler: return HandleKeyboardEvent(e.keyCode, e.type=='keydown', e ); Where it return to I don't know, but I assume back to the window that triggered the event?
[16:27:05] <entuland> I explained it above
[16:27:17] <entuland> all of that code simply ends up altering that #screen element
[16:27:18] <Deneb> yes, thanks, posts crossed
[16:27:23] <entuland> it's okay
[16:27:57] <entuland> you should actually open the dev tools, add a breakpoint somewhere there at the beginning of that handler, then hit a key and follow the path of the JS execution step by step
[16:28:11] <Deneb> looking at that link to KeyboardEvent you posted. Thanks for that as well
[16:28:29] <entuland> yw - a simple breakpoint inside handleEvent(e) should do
[16:31:23] <entuland> also try and find out what that "hw" is
[16:31:54] <entuland> cause there seems to be more than one exit point / side effect there - one is altering that #screen element, another is triggering keyboardData on hw
[16:32:40] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e)
[16:33:22] <freeman_h> How can I turn <p> hello world hahahaha <a href="www.example.com">visit</a> oh oh oh </p> to <p> hello world</p>
[16:33:44] <entuland> freeman_h, provide more context
[16:33:51] <entuland> as it seems like you want to clean user input
[16:34:00] <entuland> and you shouldn't be doing it on the client side at all
[16:34:11] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[16:34:31] <freeman_h> entuland, basically need to change that because i dont have access to a theme file to do so however i can add custom js on my site
[16:35:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[16:35:12] <entuland> so you don't have full control of your website
[16:36:42] *** Joins: stenno (~stenno@user/stenno)
[16:36:47] <entuland> I have so many guesses about that - such as that maybe you're using wordpress and a theme that has a link to somewhere just because the author of the theme wants so and they may want you to pay something to get rid of that link or the alike
[16:36:50] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[16:37:09] <entuland> either way, you should first get full control of your website
[16:44:57] <freeman_h> done it :)
[16:45:02] <freeman_h> cheers entuland
[16:45:06] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[16:45:41] <entuland> good
[16:46:46] <Deneb> hmm, yes, did wonder about hw. It is being passed into TekKeyboard. It is being called from another .js file: var keyboard = new TekKeyboard(this, window);. Evidently it refers to 'this' but not sure what 'this' is in this context. Probably a self-reference to the TekKeyboard object.... It will take me a while to work it out. Thanks for the pointer.
[16:46:56] *** Joins: codebam (~codebam@user/codebam)
[16:48:06] *** Joins: Northwoods (~Northwood@223.130.30.69)
[16:48:12] <entuland> Deneb, just console.log(this) to find out, or check during the stepping through
[16:49:51] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:07] <Naan> when you npm unlink something does that not remove the package from your global npm packages
[16:50:48] <entuland> unlink seems just to remove a symlink
[16:50:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[16:51:16] <entuland> you may want npm uninstall
[16:51:17] <Naan> I just ran npm list -g and I did not expect those to be there.. welp
[16:51:35] <Naan> I didn't think npm link would install them globally unless I've done something silly and forgotten about it
[16:52:23] *** Quits: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642) (Ping timeout: 255 seconds)
[16:52:28] <entuland> can't tell: https://docs.npmjs.com/cli/v7/commands/npm-link
[16:53:15] <entuland> "npm link", from that page, is commented as "creates global link"
[16:53:21] *** Joins: thiras (~thiras@user/thiras)
[16:56:23] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[16:57:54] *** Quits: seabass (~seabassfo@user/seabass) (Quit: seabass)
[16:58:10] *** Joins: seabass (~seabassfo@2001:470:69fc:105::187)
[17:01:22] *** Quits: seabass (~seabassfo@2001:470:69fc:105::187) (Client Quit)
[17:01:37] *** Joins: seabass1 (~seabassfo@2001:470:69fc:105::187)
[17:01:52] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:06:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:16:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[17:17:07] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[17:18:21] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 252 seconds)
[17:21:03] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:7292:3644:6cff:f5d6) (Ping timeout: 268 seconds)
[17:22:39] *** Joins: mattilinnanvuori (~mattilinn@84-253-226-88.bb.dnainternet.fi)
[17:24:19] <paulcarroty> npm v7 is interesting
[17:25:25] *** Quits: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi) (Ping timeout: 265 seconds)
[17:29:31] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[17:29:52] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[17:30:50] *** Joins: summersault (~summersau@179.221.251.16)
[17:34:14] *** Joins: thiras (~thiras@user/thiras)
[17:34:44] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:35:04] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[17:35:17] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:40:22] *** Joins: silly_ (~silly@user/silly)
[17:41:57] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[17:44:31] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[17:47:10] *** Quits: Deide[m] (~deidehalo@2001:470:69fc:105::c89a) (Quit: issued !quit command)
[17:47:38] *** Quits: gggp__ (~gggp@60.10.194.43) (Read error: Connection reset by peer)
[17:47:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e) (Ping timeout: 252 seconds)
[17:48:45] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[17:49:17] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[17:49:30] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[17:49:59] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[17:54:54] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[17:55:02] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[17:56:04] *** Joins: codebam (~codebam@user/codebam)
[17:56:08] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:58:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 255 seconds)
[17:59:34] *** Joins: BUSY (~BUSY@user/busy)
[18:01:47] *** Quits: cyberbanjo (~user@24.96.77.145) (Ping timeout: 245 seconds)
[18:02:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[18:02:53] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[18:03:23] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[18:04:00] *** Joins: codebam (~codebam@user/codebam)
[18:05:06] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 252 seconds)
[18:05:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[18:05:26] *** Joins: gggpkm_ (~gggpkm@123.113.186.218)
[18:08:09] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 258 seconds)
[18:08:10] *** Joins: r1ch (~r1ch@user/r1ch)
[18:08:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:10:29] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[18:11:57] *** Joins: codebam (~codebam@user/codebam)
[18:12:51] *** Quits: mattilinnanvuori (~mattilinn@84-253-226-88.bb.dnainternet.fi) (Remote host closed the connection)
[18:14:47] *** Joins: Jck_true3 (~jcktrue@188.228.89.240)
[18:15:08] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[18:15:08] *** Jck_true3 is now known as Jck_true
[18:16:38] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Quit: Leaving)
[18:16:53] *** Joins: sillyslux__ (~silly@user/silly)
[18:18:37] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[18:22:02] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[18:26:56] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 258 seconds)
[18:28:06] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[18:28:22] *** Joins: silly_ (~silly@user/silly)
[18:28:30] *** Joins: mearp (~mearp@154.13.1.132)
[18:28:38] *** Joins: summersault (~summersau@179.221.251.16)
[18:31:55] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 258 seconds)
[18:33:11] *** Joins: sillyslux__ (~silly@user/silly)
[18:35:51] *** Joins: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691)
[18:36:18] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:7969:171a:ce93:2df8)
[18:36:57] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[18:40:51] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:43:13] *** Joins: Stx (stx@libera/staff/stx)
[18:45:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:50:58] *** Quits: r1ch (~r1ch@user/r1ch) (Read error: Connection reset by peer)
[18:52:56] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[18:53:52] *** Joins: codebam (~codebam@user/codebam)
[18:53:55] *** Joins: teut (~teut@106.214.44.24)
[18:55:08] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 256 seconds)
[19:00:21] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[19:01:05] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 250 seconds)
[19:07:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:09:11] *** Joins: Northwoods (~Northwood@223.130.30.69)
[19:09:50] *** gggpkm_ is now known as gggpkm
[19:12:57] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[19:13:53] *** Quits: Ducki (~ducki@user/ducki) (Remote host closed the connection)
[19:18:56] *** Quits: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691) (Ping timeout: 256 seconds)
[19:19:16] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[19:20:30] *** Quits: stenno (~stenno@user/stenno) (Remote host closed the connection)
[19:21:07] *** Joins: stenno (~stenno@user/stenno)
[19:21:42] *** Quits: gggpkm (~gggpkm@123.113.186.218) (Ping timeout: 276 seconds)
[19:21:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:25:00] *** Joins: qMLMYyIyQMc (~qMLMYyIyQ@37.73.103.102)
[19:25:00] *** Quits: qMLMYyIyQMc (~qMLMYyIyQ@37.73.103.102) (Client Quit)
[19:25:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[19:25:09] *** Quits: Guest83 (~Guest83@217.155.19.23) (Quit: Client closed)
[19:28:12] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[19:28:16] *** Joins: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d)
[19:28:17] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[19:30:02] *** Joins: fef (~thedawn@user/thedawn)
[19:30:07] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 250 seconds)
[19:32:59] *** Quits: federico_it (~textual@176.206.80.238) (Quit: Textual IRC Client: www.textualapp.com)
[19:34:38] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Remote host closed the connection)
[19:38:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[19:39:22] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[19:40:42] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:814d:5581:64a4:a9d1)
[19:42:07] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[19:42:10] <tsujp> Anyone know how I can have a curried function foo()()() where the number of calls is enforced based on the first curried-functions argument? i.e. foo(bar)() might only take a single extra parameter given bar is passed as the first, but if you do foo(hi)()() it requires two additional parameters. How can I enforce this?
[19:43:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:45:45] *** Joins: Guest924 (~Guest9@43.241.144.38)
[19:45:52] <entuland> looks quite a weird thing
[19:46:51] *** Quits: teut (~teut@106.214.44.24) (Quit: Connection closed)
[19:46:53] <entuland> are you sure you really need such a thing? you can check what has been passed and act accordingly - say, error out at the execution of the third function if there is no appropriate param
[19:47:34] *** Joins: ferdna (~ferdna@user/ferdna)
[19:47:47] *** Joins: Ducki (~ducki@user/ducki)
[19:47:47] <entuland> it sounds just like passing state from one function to the other (and that's easy since it's functions returning functions they create) but still, it may be an XY problem, tsujp
[19:48:34] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 240 seconds)
[19:48:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[19:48:35] <entuland> so you may want to explain what's the end goal you're trying to achieve
[19:49:53] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[19:50:01] <tsujp> so my thing is I have some RPC calls to make, and each RPC call has 0 - 4 arguments. I've got a curry function called `call` which already curries the socket these RPC connections are going over, and I already have it set so the first argument to this curry is the RPC request to make, e.g. `call(doIt)` will make the `doIt` request over the socket set by the curry. If I have RPC methods with variable (but known) arity I want to enforce use say with `t
[19:50:09] <tsujp> entuland ^
[19:50:19] *** Joins: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca)
[19:50:20] <tsujp> I just wanted to use currying tbh, I could make them all seperate functions I guess...
[19:50:22] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:50:23] *** Parts: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca) ()
[19:50:48] <entuland> using a feature just for the sake of it may be a bad idea if it's adding complexity that you don't really "need"
[19:51:15] <tsujp> I'm really new to currying, in this case is this a dumb use of it?
[19:51:26] *** Joins: summersault (~summersau@179.221.251.16)
[19:51:35] <tsujp> entuland: ^
[19:51:43] <entuland> not an expert, honestly, so I can't tell if it's a good usecase or not
[19:52:18] <entuland> it surely would look cleaner if you only curry once there
[19:52:41] <entuland> foo(bar)(amount of params required by the bar call)
[19:52:46] <banana_> is there a git channel on libera?
[19:52:51] <entuland> foo(hi)(amount of params required by the hi call)
[19:53:02] <entuland> banana_, there is a search feature
[19:53:08] <banana_> aww
[19:53:10] <banana_> www
[19:53:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:53:37] <tsujp> ill curry once then
[19:53:39] <banana_> btw yeah there is
[19:53:44] <tsujp> didn't think of that but it's so obvious when explained
[19:57:29] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:57:54] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[19:57:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:59:37] <wroathe> tsujp: So there's the generic version of currying, and "manual" currying. A naive implementation of generic currying might look like this: https://gist.github.com/JustinChristensen/2bd1bf02cf98b9b3065ab8643ce158e6#file-composefetch-js-L1-L4
[19:59:41] <wroathe> tsujp: For example
[20:01:02] <wroathe> tsujp: But currying something without a reason to do so is a code smell. Typically it's used in the context of providing an API that works well with composition.
[20:01:22] *** Joins: prometh (uid425119@id-425119.charlton.irccloud.com)
[20:03:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[20:03:02] <entuland> in the context they have, they'd have to write something like curry(foo, bar, param1) and curry(foo, hi, param1, param2) correct?
[20:04:20] <wroathe> entuland: Keying the number of arguments off of the type of the first param isn't "currying" per se. It's just dynamically choosing the function's arity based on the type of the first argument
[20:04:28] <wroathe> entuland: This function doesn't support his use case
[20:04:37] <entuland> okay
[20:04:37] *** Joins: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[20:04:53] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[20:05:23] <wroathe> entuland: currying is that you have a function, const foo = (x, y, z) => {}  that can be called as foo(x)(y)(z), foo(x, y)(z), foo(x)(y, z), and foo(x, y, z)
[20:05:35] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Remote host closed the connection)
[20:05:54] <entuland> assuming foo does something else other than checking / choosing the arity, if foo takes one param, bar takes one, hi takes two, following the logic of that generic curry function, it should work
[20:06:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[20:06:57] <entuland> yep I remember discussing with someone here that currying is not exactly supported by JS or something like that
[20:07:12] <entuland> was just thinking in the context of the original scenario and the curry() function you mentioned
[20:07:27] <wroathe> entuland: It's supported in the sense that you need to implement it in terms of higher order functions and closures
[20:07:43] *** Joins: Deide1 (~Deide@217.155.19.23)
[20:07:55] <wroathe> entuland: In languages with first class support for currying all functions implicitly behave that way
[20:08:54] <entuland> yep, that's what I meant - you need to provide code to handle all of those variations counting params and whatnot, in JS
[20:08:57] *** Joins: stenno (~stenno@user/stenno)
[20:10:02] <entuland> oh I see where that curry() function would fail
[20:10:41] <entuland> it would first check the amount of params of foo, and since it would be less than the amount of remaining params, it would immediately call it without re-currying it
[20:11:45] <wroathe> entuland: Huh? You mean for his use case?
[20:11:50] <entuland> yep
[20:12:03] <entuland> but I refer to the way _I_ used it
[20:12:04] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[20:12:35] <wroathe> entuland: Yeah. The function you feed into this needs to have the correct arity.
[20:16:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:17:50] *** Joins: onosendi (~onosendi@user/onosendi)
[20:19:25] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[20:19:58] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[20:21:35] *** Quits: hax (~hax@user/hax) (Quit: Leaving)
[20:23:29] *** Quits: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d) (Remote host closed the connection)
[20:23:33] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Remote host closed the connection)
[20:24:44] *** Quits: Guest924 (~Guest9@43.241.144.38) (Ping timeout: 265 seconds)
[20:25:26] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[20:27:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[20:31:26] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:33:47] *** Quits: jaawerth (~jaawerth@104.131.115.202) (Ping timeout: 255 seconds)
[20:34:02] *** Quits: TheFireSwamp (~root@159.65.182.108) (Ping timeout: 252 seconds)
[20:34:12] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 258 seconds)
[20:34:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:36:28] *** Joins: dskullz (~dskull@user/dskull)
[20:36:43] <hassoon> ffs so annoying
[20:36:59] <hassoon> why don't they just leave me type my git username/password
[20:37:11] <hassoon> new token policy interrupting me out of nowhere
[20:37:35] <systemfault> ?
[20:37:42] <systemfault> Don't you use SSH keys?
[20:38:02] <hassoon> ssh keys? nah i just use my github account's username/password
[20:38:05] *** dskullz is now known as dskull
[20:38:22] <stenno> wot
[20:38:29] <GreenJello> if you like typing a password, you can add one to your ssh key
[20:38:32] <stenno> first person i know who does that
[20:38:39] <stenno> nice one GreenJello
[20:38:58] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[20:39:11] <systemfault> We have a SSH passphrase requirement at work... but even then, you can use a ssh-agent
[20:39:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:39:29] <hassoon> GreenJello: this has nothing to do with ssh
[20:39:55] <hassoon> sickdyd: i'm talkign about github, not an intranet git system
[20:40:02] <hassoon> systemfault: *
[20:41:01] <ljharb> ssh passphrase requirements make things less secure
[20:41:22] <GreenJello> curious to hear this argument
[20:41:35] <systemfault> How? Worst case scenario, it's the same as no passphrase.
[20:41:38] <systemfault> No?
[20:41:56] <onosendi> ljharb: explain?
[20:41:58] <ljharb> let me find an article
[20:42:32] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[20:42:41] <ljharb> maybe "less secure" isn't accurate. they don't make things significantly more secure, tho
[20:43:23] <hassoon> damn it github
[20:43:37] *** Joins: tkazi (~tkazi@user/tkazi)
[20:43:40] * hassoon keeps doing thing locally
[20:43:41] <ljharb> but if someone has physical access to your machine it becomes trivial to brute force your ssh passphrase
[20:43:42] *** Quits: Deneb (~johnch@37.111.189.80.dyn.plus.net) (Quit: Leaving)
[20:43:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[20:43:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[20:43:59] <ljharb> (depending on the cipher used, ofc)
[20:44:25] <systemfault> Or I could just use a baseball bat... and threaten the dev
[20:44:29] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Quit: leaving)
[20:44:34] <ljharb> lol yes, "xkcd wrench"
[20:45:21] <systemfault> hassoon: But seriously, having to enter your username/password all the time is just annoying...
[20:45:48] *** Joins: TheFireSwamp (~root@159.65.182.108)
[20:47:29] *** Joins: Betal (~Beta@user/betal)
[20:49:07] <sillyslux__> if it's for git, you can set user/password and pwd caching timeout in your config
[20:49:38] <sillyslux__> https://git-scm.com/docs/git-credential-cache
[20:49:43] *** Joins: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi)
[20:50:09] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:53:00] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:54:01] *** Joins: impliednude (~impliednu@104.232.118.176)
[20:54:58] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[20:54:58] *** Joins: gehn (~gehn@user/gehn)
[20:57:48] <onosendi> hassoon: https://dpaste.org/8KFm :)
[21:00:45] <onosendi> https://dpaste.org/mt8U is safer in case you already have a config.
[21:01:27] <cantelope> https://words.whitehotrobot.com/post/2w6t
[21:03:21] <sillyslux__> cantelope, strikes back!!! yay
[21:03:36] <cantelope> can't we all just get along :)
[21:03:39] <cantelope> <3
[21:03:55] <sillyslux__> not a demo.... :/
[21:04:17] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[21:04:22] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 265 seconds)
[21:04:42] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[21:04:43] <systemfault> cantelope: It's not politically convenient.
[21:04:51] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 265 seconds)
[21:05:31] <cantelope> sillyslux__, sorry - here's a good demo then https://messaging.whitehotrobot.com (register first - free/anon)
[21:05:57] <cantelope> also, link is on topic, being vuejs
[21:05:59] <cantelope> (js)
[21:07:32] <sillyslux__> with post/2w6t i disagree though :/
[21:07:45] <cantelope> you're free to disagree
[21:07:58] <cantelope> i may not agree with what you say, but i'll defend to the death your right to say it
[21:08:28] <systemfault> cantelope: Be careful, thinking that makes you a alt-right right-wing extremist in 2021
[21:08:55] <cantelope> labels will hurt you
[21:09:03] <cantelope> sometimes things are between things
[21:09:08] <cantelope> most things, actually
[21:09:09] <cantelope> <3
[21:09:42] <sillyslux__> yeah it's the little things
[21:09:51] <cantelope> the best things in life aren't things
[21:09:53] <sillyslux__> ... between the longs things
[21:09:58] <cantelope> how's that for being not alt-right?
[21:10:44] <cantelope> i borrow gems from every side
[21:10:44] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:10:52] <systemfault> I read... germs
[21:10:53] <cantelope> if applicable, sensible
[21:11:24] *** Joins: fef (~thedawn@user/thedawn)
[21:12:31] <wroathe> systemfault: Well, if you take that attitude to it's logical conclusion you're proposing that neo-nazi propaganda somehow falls under freedom of speech
[21:12:43] <wroathe> systemfault: The devil, as they say, is in the details
[21:13:25] <cantelope> yes, so only burn the nazi books?
[21:13:47] <cantelope> wait, book burning was their thing
[21:13:50] <Lewix> a = 0; var a; console.log(a); // what does console log show and why
[21:14:10] <sillyslux__> n> a = 0; var a; console.log(a); // what does console log show and why
[21:14:10] <jellobot> (okay) 0
[21:14:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:14:18] <cantelope> n> Math.acos(-1)
[21:14:19] <jellobot> (okay) 3.141592653589793
[21:14:20] <sillyslux__> n> var a = 0; var a; console.log(a); // what does console log show and why
[21:14:20] <jellobot> (okay) 0
[21:14:35] <Lewix> it is weird to me that we can do var a = 1; var a = 4;
[21:14:57] <sillyslux__> use const and let then
[21:15:19] <cantelope> n> [32,440,821,801,1244,821,808,772,439,32].map(v=>String.fromCharCode(v)).join('').repeat(3)
[21:15:20] <jellobot> (okay) ' Ƹ̵̡Ӝ̵̨̄Ʒ  Ƹ̵̡Ӝ̵̨̄Ʒ  Ƹ̵̡Ӝ̵̨̄Ʒ '
[21:15:22] <Lewix> what is happening there with var? (in my previous example)
[21:15:31] <Lewix> sillyslux__: i do use them
[21:15:33] <sillyslux__> from mdn "Duplicate variable declarations using var will not trigger an error, even in strict mode, and the variable will not lose its value, unless another assignment is performed. "
[21:15:52] <systemfault> wroathe: What I'm seeing the last few years is that people always deal in extremes... especially in the US where the crazies are put on pedestals.
[21:17:03] <gehn> Lewix, shadowing
[21:17:10] <gehn> Lewix, and yes, you can but... don't
[21:17:25] <sillyslux__> shadowing? what does that mean?
[21:17:34] <gehn> most languages you can do things that you shouldn't
[21:17:52] <hassoon> systemfault: no we have the git credentials thing that stores them for you
[21:18:38] <hassoon> onosendi: will give that a try, thanks
[21:28:54] *** Joins: pulse (~pulse@user/pulse)
[21:31:46] *** Quits: Anthaas (~Anthaas@user/anthaas) (Quit: Client closed)
[21:33:38] <onosendi> hassoon: take a look at ~/.ssh/config afterwards, because I made the assumption of your github username.
[21:34:57] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:814d:5581:64a4:a9d1) (Ping timeout: 276 seconds)
[21:38:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f) (Quit: Textual IRC Client: www.textualapp.com)
[21:39:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:39:57] <hassoon> onosendi: i don't know if relying on this ssh keys will satisfy their new token-based authentication policy
[21:40:06] <hassoon> anwyay
[21:44:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:44:16] *** Joins: Guest9 (~Guest9@43.241.144.38)
[21:44:44] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:44:55] *** Joins: fakuve (~fakuve@158.223.165.127)
[21:48:45] <onosendi> hassoon: I'm unfamiliar with this new policy, but this is how I'm currently authenticating.
[21:54:00] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:54:33] *** Quits: fakuve (~fakuve@158.223.165.127) (Quit: Connection closed)
[21:55:22] *** Joins: stenno (~stenno@user/stenno)
[21:58:22] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[21:59:40] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Excess Flood)
[22:00:03] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[22:01:08] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:2156:9256:3142:e1b4:2627)
[22:03:02] *** Joins: silly_ (~silly@user/silly)
[22:03:16] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:7b14:5f22:e686:aa2a:223) (Ping timeout: 256 seconds)
[22:04:11] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[22:04:44] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[22:06:14] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 265 seconds)
[22:06:59] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[22:08:43] <eqw> I want to use nodejs for unit testing but my code sometimes uses window and document objects. Do some mock window and document libraries exist ?
[22:10:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:11:01] <GreenJello> eqw, yes, jsdom
[22:11:20] <GreenJello> if you use jest as your test runner, it sets all that up by default
[22:12:10] *** Quits: impliednude (~impliednu@104.232.118.176) ()
[22:13:02] *** Joins: incognito (~relativit@user/incognito)
[22:15:29] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:20:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:20:55] *** Joins: summersault (~summersau@179.221.251.16)
[22:22:40] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[22:23:06] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:2156:9256:3142:e1b4:2627) (Ping timeout: 256 seconds)
[22:24:40] *** Joins: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[22:29:29] *** Joins: physikoi (~physikoi@user/physikoi)
[22:30:20] <fef> why there is no good data structure out of the box for JS? eg BST, Tree , SegTree
[22:30:20] <fef> Heap too
[22:31:02] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[22:32:06] <wroathe> fef: There are plenty. What's your use case?
[22:32:38] <GreenJello> there's a pretty high bar for inclusion in the language, and collection types tend to require features JS doesn't really have
[22:33:32] <fef> There are plenty? where
[22:33:32] <fef> have lot of use case for each in different projects
[22:33:47] <GreenJello> like you can't really have a BST because there isn't really a mechanism for sorting arbitrary values, and it's unclear what you do with values of different types
[22:34:22] <GreenJello> a library can define its own convention for that with less rigor than would be required for a language inclusion
[22:34:49] <wroathe> GreenJello: A BST would just require that a user supply a key comparator function
[22:35:03] <wroathe> fef: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
[22:36:07] <fef> ??
[22:36:46] <wroathe> fef: Map, Array, Set, etc. AFAIK none of those are represented as trees though. JS tends to prefer hash tables.
[22:37:14] <wroathe> fef: So it really depends on your use case. In general you probably don't want a tree anyway, because hash tables tend to have better asymptotics
[22:37:16] <fef> hash tables are the worst , i prefer tree over hashtable
[22:37:36] <wroathe> fef: Well, JS won't help you there. You'll need to implement your own.
[22:37:40] <wroathe> (or use a library)
[22:37:43] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:38:07] <wroathe> GreenJello: For example: https://github.com/JustinChristensen/parser_gen/blob/master/libs/base/rbtree.c#L201-L206
[22:38:15] <fef> yes i now have lib of my own.
[22:39:19] *** Quits: jellobot (~jellobot@104.248.16.142) (Remote host closed the connection)
[22:39:28] *** Joins: jellobot (~jellobot@104.248.16.142)
[22:39:28] *** ChanServ sets mode: +v jellobot
[22:40:10] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f)
[22:40:23] <GreenJello> wroathe, good enough for C, but what happens if I return a random number?
[22:40:45] <GreenJello> there's probably a way to make it safe, but it generally isn't
[22:43:16] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[22:44:25] <wroathe> GreenJello: You as the user, you mean?
[22:44:28] <fef> hashtable dont have better asympotic, if you go for worst case.
[22:44:29] <wroathe> GreenJello: That would be out of scope for the language
[22:44:45] <wroathe> GreenJello: It's up to the user to implement a correct comparator for the objects being stored
[22:45:16] <GreenJello> so you would have unspecified behavior for an imperfect comparison function?
[22:45:25] <wroathe> fef: What worst case? You're talking about the case where you need to resize the table on insert?
[22:45:39] <wroathe> GreenJello: Yes. If the comparator isn't correct, all bets are off.
[22:46:47] <wroathe> GreenJello: Much like the comparator to Array.prototype.sort
[22:46:48] <GreenJello> that's the kind of shortcut a library could take, but would be inappropriate for the language
[22:47:12] *** Joins: zebrag (~chris@user/zebrag)
[22:47:19] <fef> yes wroathe
[22:47:20] <wroathe> GreenJello: It's already part of the language. See Array.prototype.sort.
[22:47:52] <GreenJello> sort at worst produces an incorrectly ordered array
[22:48:09] <wroathe> fef: That's why it's referred to as "amortized" constant time insert. In the aggregate, insert takes constant time, because for large enough N the amount of extra time spread out between the preceding constant time inserts amounts to being nearly 0
[22:48:17] <GreenJello> asking if a key exists in a tree, or trying to read the value for a key has different expectations
[22:48:30] <GreenJello> and that being inconsistent across browsers seems really dangerous
[22:48:43] <wroathe> GreenJello: And an incorrect comparator for a tree results in a poorly structured tree
[22:48:49] <fef> if you have built a hashtable you might know why you choose prime number for resize
[22:48:52] <wroathe> GreenJello: How would it be inconsistent across browsers?
[22:49:25] <wroathe> fef: I have built a hash table, but I can't say that I'm a mathematician. In general though, the mathematicians all commonly hold that a hash table is a better choice.
[22:49:41] <wroathe> Here's my hash table: https://github.com/JustinChristensen/parser_gen/blob/master/libs/base/hash_table.c It's not perfect, but it's mine.
[22:49:51] <GreenJello> wroathe, if you don't fully specify the logic, then it's up to the implementations
[22:50:10] <wroathe> GreenJello: The logic is the same as the comparator to sort.
[22:50:38] <wroathe> GreenJello: If the compartor is wrong, then the tree will think B comes before A, and you'll end up with a malformed tree.
[22:50:53] *** Joins: mexen (uid495612@user/mexen)
[22:52:30] <GreenJello> could you end up with a lookup returning the wrong item?
[22:52:38] *** Quits: Deide1 (~Deide@217.155.19.23) (Ping timeout: 265 seconds)
[22:52:57] <wroathe> GreenJello: If the comparator is deterministic, no.
[22:53:29] <wroathe> GreenJello: If the comparator uses Math.random(), yes.
[22:53:43] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:54:48] <GreenJello> maybe this could work, then
[22:55:07] <fef> prefer BST over hash for the worst case
[22:55:28] *** Joins: Deide1 (~Deide@217.155.19.23)
[22:55:52] <Slade> whats the design style thats minimalistic with heayvy text, very light graphics
[22:55:55] <Slade> theres a word for this
[22:56:13] <Slade> not ascii graphics ;p
[22:57:18] <entuland> but you mean using special characters to fake an UI or something?
[22:57:31] <entuland> or something else?
[22:58:08] *** Joins: pavonia (~user@user/siracusa)
[22:58:09] <wroathe> fef: So my hash table, for example, resizes by a factor of ~1.618 every time, rounded to the nearest prime number. That means that towards the upper end of the spectrum you end up with, for example, 1471195772 truly constant time inserts before you need _1_ single resize operation.
[22:58:25] <wroathe> fef: The "worst case", for a hash table, doesn't really matter
[22:59:06] <fef> doesnt matter for you
[22:59:17] <wroathe> And I'm sure the hash table implementations for V8 are significantly better than my toy implementation
[23:00:24] <Slade> entuland, no i mean relying on typeography and whitespace and lines to make a UI..
[23:00:24] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[23:00:26] <wroathe> fef: Whereas each of those 1471195772 inserts into a BST would require worst case log(N) time, so 1471195772 * log(N) compared to 1471195772 * 1
[23:00:55] <fef> lol yes with the cost of huge memory :)
[23:01:03] <fef> resize :P
[23:01:11] <wroathe> fef: Each of your tree nodes requires two extra pointers
[23:01:18] <entuland> I see, I don't know if there is a specific term for that, Slade
[23:01:22] <wroathe> fef: On a 64 bit system that's 16 bytes per node
[23:01:29] <fef> fine
[23:01:53] <entuland> you could try asking in ##design, there is only a handful of people there but still, worth trying
[23:02:28] <entuland> I remember there was knowledgeable peeps there back on freenode
[23:02:42] *** Quits: mattil (~mattilinn@84-253-226-88.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[23:02:54] <Slade> entuland, usually its used in retro console looking designs
[23:03:25] <wroathe> fef: I'm not making this up :P This is all trivially verifiable in pretty much every algorithms book. "amortized" constant time is a very desirable property.
[23:03:51] <fef> yes i know but not for hash table.
[23:03:53] *** Joins: summersault (~summersau@179.221.251.16)
[23:04:06] <wroathe> fef: :/ That's not what the algo books say
[23:04:08] <systemfault> I know there are exceptions... this rarely matters in a JS context...
[23:04:18] <entuland> Slade, if you happen to find any image that conveys the idea it may be worth sharing, maybe someone knows there
[23:04:28] <fef> have solved some of algorithmic challenges on amortized before
[23:04:47] <systemfault> What about actual products?
[23:05:00] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 272 seconds)
[23:05:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[23:06:16] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 272 seconds)
[23:06:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[23:06:34] *** Joins: eqw (~eqw@31.134.178.99)
[23:06:35] <Slade> entuland, as soon as i want an example, all the ones i find are ugly ;(  https://image.slidesharecdn.com/windowsphone7-metro-100413135217-phpapp02/95/metro-and-windows-phone-7-39-728.jpg?cb=1271202553
[23:08:10] <entuland> the only thing that comes to mind is "naked", but that's a specific term used when a website drops all the CSS on purpose and doesn't really fit your description
[23:08:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:08:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:09:14] *** Joins: birkoff (birkoff@user/birkoff)
[23:09:34] <Slade> yea. but its very different look without the fontsizes and colors and spacing
[23:09:36] <prometh> i just wrote an employment assessment on isolated sets of graph nodes and i cannot visualize that kinda shit.... not hapyy
[23:10:00] <entuland> yep
[23:10:10] <entuland> well, I asked in ##design to see if anyone has any idea
[23:10:58] <prometh> entuland: there's a name for it?
[23:11:32] <prometh> is it, like, the periodic table?
[23:11:57] <entuland> that's what Slade is after, prometh (not the naked thing, I mean the minimalist design that mainly relies on fontfaces, fontsizes, colors, spacing and little if nothing else)
[23:12:20] <entuland> assuming I understood Slade's query properly
[23:13:02] <prometh> i often don't know what things are called
[23:13:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[23:13:10] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 268 seconds)
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:13:52] <wroathe> fef: Actually, if the tree stores parent pointers it'll be 24 bytes per node that a probing hash table wouldn't have. For a hash table that has 2451992897 entries, that amounts to being nearly 60 GB worth of pointer data.
[23:13:53] <birkoff> what options do I have for saving a UI option in a web application (written in vanilla JS) with persistency when following links inside it, and modifying it from anywhere will update its state ?
[23:14:20] *** Joins: justache (~justache@user/justache)
[23:14:43] <wroathe> fef: Meaning that the majority of the data in the data structure will just be pointers between nodes.
[23:15:23] <systemfault> wroathe: For JS engines, it becomes so crazy that they have to optimize that :)
[23:15:34] <wroathe> systemfault: Indeed
[23:16:11] <fef> why tree has to store parent pointers?
[23:16:49] <GreenJello> birkoff, either localStorage (which other tabs can subscribe to), or storing it on your server (where you're responsible for distributing it, but can be associated with a user, instead of a specific device+browser)
[23:17:17] <wroathe> fef: Some operations depend on them. For example, node deletion in a balanced tree. There are others too, but I'm too lazy to dig up my CLRS
[23:17:35] <fef> what :!
[23:17:38] <wroathe> fef: You can avoid parent pointers by temporarily allocating a stack while performing the operation in question
[23:18:11] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:18:45] <birkoff> GreenJello: what if I dont want it to persist across tabs but only for a specific route/request
[23:18:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:22] <GreenJello> not sure I understand
[23:19:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:19:25] <birkoff> i.e. one request mini-"session"
[23:20:08] <rg> cookie with path=/the/route
[23:20:11] <GreenJello> can you explain the actual situation?
[23:20:43] <wroathe> fef: Note the use of ->parent here: https://en.wikipedia.org/wiki/Red%E2%80%93black_tree#Removal_of_a_black_non-root_leaf
[23:20:46] <wroathe> fef: For an example
[23:23:51] <prometh> birkoff: you could empty the localStorage when the app initializes and onbeforeunload
[23:24:29] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[23:24:52] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:25:14] <birkoff> i.e. a search engine where the user can select at the main search page whether to display the results in the style of rows or in thumbnails. he can also change the setting and the search term when he is already inside a search result page. the setting should persist across further searches that follow from the first page AND page navigations inside the same search but when he gets back to the
[23:25:15] <birkoff> main page it can be whatever (defaulted to something or persist).
[23:25:46] <birkoff> follow from the first search result*
[23:25:51] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:26:02] <prometh> future searches within th same view? store it in component/view state
[23:26:02] <GreenJello> ah, I'd use query params for that
[23:26:28] <prometh> or, maybe query params for linking
[23:26:31] <birkoff> I already use query params to pass styling settings. but I need them to persist even from inside navigation
[23:26:56] *** Joins: silly (~silly@user/silly)
[23:26:58] <birkoff> i.e. the first link, even to the same page will not pass the settings
[23:27:20] <birkoff> I can probably write javascript that will pass them but it's cumbersome and there are better options I think?
[23:27:44] <birkoff> i.e. google.com/search?q=term&style=thumbnails
[23:27:49] <prometh> people sometimes share search results
[23:28:17] <GreenJello> you would need to propagate them if you don't want it shared between tabs
[23:28:31] *** Joins: Ducki_ (~ducki@user/ducki)
[23:28:55] <birkoff> write that javascript that will modify all links to include the current setting state?
[23:29:00] <birkoff> s/that/the/
[23:29:16] <GreenJello> yeah
[23:29:16] <DPA> Put the whole page in a form, use <input type="submit" formtarget="location"/>, format inputs to look like a link.
[23:29:17] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 245 seconds)
[23:29:26] <entuland> you normally don't have many links to deal with that - pretty much just the pagination
[23:29:47] <birkoff> or I can switch to localStorage settings?
[23:29:51] <birkoff> i.e. entirely
[23:29:59] <birkoff> but that will persist across tabs
[23:30:00] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 276 seconds)
[23:30:01] <entuland> depends on the behavior you want
[23:30:05] <birkoff> and I dont' want that
[23:30:09] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[23:30:26] *** Quits: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi) (Ping timeout: 268 seconds)
[23:30:28] <entuland> query string looks just okay for that imo
[23:30:32] <birkoff> I mean, the situation where a user changes his view setting in one tab should not affect the view in another tab. thus allowing several views
[23:30:49] <birkoff> for different search terms
[23:31:03] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[23:32:43] <DPA> You could manually load the pages or the content with fetch, check onclick events for event.target.closest("a"), and use history pushstate / popstate for navigation.
[23:32:55] *** Quits: jess (~jess@libera/staff/jess) ()
[23:34:12] <DPA> You'd keep the whole JS context.
[23:34:15] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[23:34:22] <rg> the simple fix is disregarded for the complicated
[23:34:51] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[23:36:18] <birkoff> how would I rewrite all "inside" links to append my setting query ? i already have an event bind that updates the query in the URL on state change
[23:36:55] <entuland> editing existing links is trivial - just matter of querying them and altering their href
[23:37:34] <entuland> I like the query string option _exactly_ because it lets reproduce the entire state of the page by just sharing / copypasting the entire address
[23:37:48] <entuland> regardless of any past interaction
[23:37:49] <birkoff> how would I test them to be site-local ?
[23:37:52] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:38:01] <cthulchu_> my folks! I'm trying to use match. for the first time. To pull the value of a custom query param. And I'm failing. Here: document.location.href.match(new RegExp("(\\?|&)"+"query"+"(=$|&)"))[0] I'm planning to have a variable instead of the "query" there, hence the concatenation. Testing it against this url: /hc/en-us/search?utf8=✓&query=testetst&qwe=1]
[23:38:04] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[23:38:14] <entuland> birkoff, the origin shouldn't make any difference
[23:38:27] <GreenJello> birkoff, probably put a data-attribute on them to opt-in
[23:38:29] <entuland> working on example.com/whatever or localhost/whatever doesn't change anything
[23:38:34] <birkoff> i don't need links to some other domains appending page setting
[23:38:38] *** Joins: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi)
[23:38:44] <entuland> and your hrefs should _not_ contain the origin in any case
[23:38:52] <birkoff> they do not, still I'm asking how to do it
[23:39:33] <birkoff> i should filter out links to external websites
[23:39:50] <birkoff> i can probably give internal links a css class of their own
[23:39:56] <entuland> you can simply use classes to tell them apart, eys
[23:39:58] <birkoff> but then is there another method ?
[23:40:16] <entuland> it works, it's simple, it's easy to implement, not sure why you're looking for anything else
[23:41:04] <entuland> <a class="pagination" href="/your-endpoint?page=2&count=10&style=thumbs">2</a>
[23:41:13] <wintersky> i dream about jewish girls
[23:41:38] <wintersky> i met quite a few, they were faantstic
[23:41:57] <wintersky> but i'm just a bum adddict
[23:42:53] *** Joins: physikoi (~physikoi@user/physikoi)
[23:42:56] *** Quits: physikoi (~physikoi@user/physikoi) (Client Quit)
[23:42:57] <wintersky> also, i don't really convert to judsidm
[23:44:40] <wintersky> don't really want to convert*
[23:44:57] <entuland> you don't even need to directly add a class to the anchors either - you could simply rebuild the pagination links from scratch when you know you have to alter them, or target them by parent - say, document.querySelectorAll(".pagination a") assuming you give them a parent with class "pagination"
[23:45:40] <wintersky> if one of them would see my apt she would run away straight up
[23:45:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[23:46:37] <DPA> cthulchu_: I'd use location.search instead: Object.defineProperty(location, 'query', {get(){ return Object.fromEntries((location.search||'').substr(1).split('&').map(x=>x.split('=').map(x=>decodeURIComponent(x)))); }})
[23:46:37] <DPA> location.query.something
[23:47:01] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[23:47:14] <cthulchu_> match is more elegant.
[23:47:19] <cthulchu_> I figured it though
[23:47:37] <GreenJello> birkoff, something like this: https://ject.dev/?saved=xhD5tXUXQtzMb&rtab=console
[23:48:04] *** Quits: lmat (~lawsa@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[23:48:18] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[23:48:47] <DPA> Is it? I like to just split things, when I need to split things.
[23:48:58] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[23:49:13] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[23:50:08] *** Joins: ckdcreation (~ckdCreati@147.55.133.137)
[23:51:08] * wintersky drowns in sorrow
[23:51:25] <wintersky> i'm a failure
[23:51:35] <GreenJello> cthulchu_, I'd recommend URL/URLSearchParams
[23:51:45] *** Joins: pulse (~pulse@user/pulse)
[23:52:03] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[23:53:05] <GreenJello> cthulchu_, new URL(location).searchParams.get('query')
[23:53:55] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[23:54:17] <DPA> Oh, cool. Has that always been there?
[23:54:21] *** Joins: Northwoods_ (~Northwood@223.130.30.69)
[23:54:35] <GreenJello> added some years ago
[23:54:38] <wintersky> i had too many beers today
[23:54:49] <wintersky> gonna lay down
[23:54:53] <DPA> I keep missing these nice additions...
[23:55:51] *** Joins: silly (~silly@user/silly)
[23:56:57] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 268 seconds)
[23:56:59] <wintersky> yeah i neeed to lay down
[23:57:00] <wintersky> bye
