[00:32:04] <headius> I believe I have the autoload regression fixed in https://github.com/jruby/jruby/pull/6749
[00:32:16] <headius> the main issue was not unwrapping singletons, so a top-level autoload would go in the wrong place
[00:32:48] <headius> however I had to add a second version of `getRealClass` called `getRealModule` because `rb_class_real` works on both modules and classes and they use that here
[00:33:21] <headius> I tried to life realClass logic from RubyClass into RubyModule but it gets messy with all the constructors. We will want to revisit caching the real module so it doesn't do this walk every time, and try to unify the two impls, but it is fine for this case
[13:45:54] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[13:46:39] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[17:53:08] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Remote host closed the connection)
[17:53:33] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[20:38:25] *** Quits: DrBob (~drbobbeat@c-24-14-127-107.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:12:42] <headius> enebo: I am baffled by this behavior in Kernel.autoload
[22:13:08] * headius  < https://libera.ems.host/_matrix/media/r0/download/libera.chat/2f7c55732191e6c64d0c7908b8f8849f1b6aeee0/message.txt >
[22:13:25] <headius> both of those should print "time" because the autoload gets defined on that anonymous class
[22:13:42] <headius> but as far as I can tell autoload is using cref, which should be Object because this is a block at toplevel
[22:14:08] <headius> in fact, if you try to access the `Time` constant inside that method, it **will** get you the top-level ::Time class
[22:14:22] <headius> but the autoload goes on the anon class's constant table somehow
[22:15:08] <enebo[m]> I am just about to start to eat lunch but this reminds me of people doing module cloning for some reason
[22:15:28] <headius> I was wondering if we are supposed to be forcing that class to be the cref class (in the StaticScope) but if I changed it then the Time constant would not see Object like it should
[22:15:37] <headius> it is like this is not possible to support but I am clearly missing something
[22:16:09] <enebo[m]> yeah after I finish eating I will look up what I am trying to remember
[22:16:13] <headius> ok
[22:16:33] <enebo[m]> it has something to do with Module.new and behaving like a cref when it isn't...I think we have some excludes/tags on something like that
[22:16:51] <headius> this is a regression spec that started failing when I started using cref class only for Kernel.autoload
[22:16:59] <headius> but MRI uses cref only
[22:17:10] <headius> I will keep looking around
[23:36:03] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[23:41:05] <enebo[m]> headius: I cannot find what I was looking for but 
[23:41:06] <enebo[m]> jruby -v ../snippets/clone1.rb 
[23:41:06] <enebo[m]> jruby 9.3.0.0-SNAPSHOT (2.6.5) 2021-07-06 bf7bbf324e OpenJDK 64-Bit Server VM 25.242-b08 on 1.8.0_242-b08 +jit [linux-x86_64]
[23:41:06] <enebo[m]> "time"
[23:41:06] <enebo[m]> "time"
[23:41:26] <enebo[m]> ignore the name this is the snippet you are using above
