[00:01:04] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[00:02:05] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[00:02:12] *** Joins: Moyst_ (~moyst@user/moyst)
[00:02:26] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[00:04:02] *** Joins: noord (~noord@user/noord)
[00:04:20] *** Joins: portalrat (~portalrat@user/portalrat)
[00:04:53] *** Quits: CyDefect (~troll@213.55.226.140) (Remote host closed the connection)
[00:05:51] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[00:06:09] *** Quits: portalrat_ (~portalrat@user/portalrat) (Ping timeout: 250 seconds)
[00:06:40] *** Quits: vats (~vats@103.158.91.123) (Ping timeout: 260 seconds)
[00:06:44] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[00:06:52] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:8dc1:3a5d:747d:63fc)
[00:09:56] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 245 seconds)
[00:10:02] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:10:21] *** Joins: Nine_BAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[00:10:23] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:10:28] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[00:10:34] <leitz> Can you pass a string format ["{} {} {}".format(year, source, course)] to a method? like: def my_thing(x, y, format_thing):
[00:11:47] <parv> Yes, why not?
[00:11:53] *** Joins: sharperguy (~sharpergu@89.244.127.84)
[00:11:56] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[00:12:12] <parv> From your example that would be '{} {} {}'
[00:12:22] *** Joins: Auron (~Auron956@user/auron)
[00:12:31] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:12:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[00:12:41] *** Quits: Nine_BAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Client Quit)
[00:13:08] <parv> leitz, What do yo want to do?
[00:13:27] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:14:40] *** Joins: kosh_000__ (~kosh@user/kosh)
[00:14:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[00:14:52] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:14:58] <leitz> parv, pass in a string format to a method, so that the method doesn't have to know about the string it gets, it just fills out the format.
[00:16:00] <nedbat> leitz: def my_thing(x, y, format_thing): return format_thing.format(a, b, c)
[00:16:28] * leitz is working on it now, he just types slow...
[00:17:20] *** Joins: lucasb (uid333435@id-333435.hampstead.irccloud.com)
[00:17:23] *** Joins: asa22 (~asa22@84.125.126.192.dyn.user.ono.com)
[00:17:51] *** Quits: kosh_ (~kosh@user/kosh) (Ping timeout: 245 seconds)
[00:17:51] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[00:18:20] <asa22> what are the most successful ways (apps, websites, whatever) for python devs to find actual real companies that want to hire devs
[00:18:42] <SnoopJ> asa22, well, theres python.org/jobs
[00:18:54] <parv> .. or even just past the format function: def fx( maker, *val ): print( maker( *val ) ) ; fx( '{} {}'.format, 'a', 'b' )
[00:18:57] <leitz> Dice.com, indeed.com
[00:19:03] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[00:20:18] *** Quits: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5) (Quit: Leaving)
[00:20:21] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:21:12] *** kosh_000__ is now known as kosh
[00:21:33] <parv> s/past/pass/
[00:22:13] <nedbat> i'm trying to reproduce a bug reported against coverage.py involving starlette, but want to avoid starlette.  What is it that connects async functions to greenlets? (If anything... i don't know what I'm talking about)
[00:22:21] <kosh> most jobs come through personal contacts
[00:23:15] <asa22> kosh yea well I dont have those hehe
[00:23:21] *** Joins: Naan (~Naan@user/naan)
[00:24:21] <kosh> it is one of the reason that professional societies, universities, and various other groups are so useful
[00:24:30] <kosh> even just being active on github on a project can really help
[00:24:55] <asa22> yea im making myself a github rn, hosting my own was a bad idea
[00:25:20] *** Quits: ham5urg (~ham5urg@p200300d1673fa300186b888cea5915f4.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:26:14] <leitz> nedbat, parv, thanks! That works, though I need to hash my idea out a bit more.
[00:26:45] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:26:48] <SnoopJ> nedbat, is that #1082? I don't think starlette itself is aware of greenlets'
[00:27:26] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:28:53] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:29:31] <ablegreen> looking for examples of large python projects on github that isn't a framework, tool, library, etc. any ideas? preferably popular ones. just looking for ideas on how to structure code, design, etc.
[00:29:49] <kosh> what is a tool?
[00:29:52] <nedbat> SnoopJ: it is 1082.  the example has starlette, but maybe it's not important?
[00:30:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331)
[00:30:22] <nedbat> ablegreen: instead of what you don't want, can you tell us what kind of projects you do want?
[00:30:23] <SnoopJ> nedbat, I think the extent to which it's important is that the handler is running somewhere else (a thread in that case)
[00:30:35] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:30:52] <kosh> I have a program on github, it will never be very popular because not many people need it but it is used for research and some very large companies
[00:30:52] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:30:58] <ablegreen> nedbat: web applications
[00:31:12] <kosh> oh I don't do web
[00:31:17] <SnoopJ> nedbat, although I may be misunderstanding the report there, since it looks like the entrance and await do execute...
[00:31:19] <ablegreen> kosh: nice, what is it
[00:31:21] * kosh stabs the web and sets it on fire
[00:31:35] <kosh> ablegreen, parameter estimation and error modeling system for chromatography simulations
[00:31:45] *** Quits: Echoz_ (~chris@user/echoz) (Quit: WeeChat 3.3)
[00:32:10] <nedbat> SnoopJ: i'm just looking for a program that combines threads and one of gevent, greenlet, eventlet, that demonstrates the problem.
[00:32:23] * leitz guesses why kosh's program isn't wildly popular...
[00:32:54] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[00:32:56] <kosh> leitz, because only people that do that need that kind of program
[00:33:30] <leitz> kosh, sorry. I just chuckled because I'd have to look up chromatography.
[00:33:41] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[00:33:44] *** Joins: greedom (~greedom@x59cc99a6.dyn.telefonica.de)
[00:33:50] <SnoopJ> nedbat, but you want to avoid starlette? Any particular reason, or just trying to simplify the reproduction?
[00:33:58] *** Joins: Echoz (~chris@user/echoz)
[00:34:09] <nedbat> SnoopJ: simplify the reproduction. This will become a test in the test suite
[00:34:19] <SnoopJ> ahh
[00:34:48] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Ping timeout: 268 seconds)
[00:34:56] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Ping timeout: 245 seconds)
[00:35:07] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[00:35:12] *** Quits: ianliu (~ianliu@200-232-249-142.dsl.telesp.net.br) (Quit: WeeChat 3.3)
[00:35:34] *** Joins: BillyZane2 (~BillyZane@91.196.220.172)
[00:36:27] *** Joins: blei (~blei@209.201.38.106)
[00:36:50] *** Quits: BillyZane (~BillyZane@152.89.204.151) (Ping timeout: 260 seconds)
[00:37:40] <SnoopJ> nedbat, I think you can probably mimic the concurrency that ends up running an endpoint handler in `run_in_threadpool()`, starting here for HTTPEndpoint: https://github.com/encode/starlette/blob/master/starlette/endpoints.py#L24-L33
[00:38:06] <SnoopJ> run_in_threadpool() itself is pretty straightforward and I think the only part that's really related to your bug, if I grok the report: https://github.com/encode/starlette/blob/881af38cc2e038de1f02e4fba7b7dab2df79b38a/starlette/concurrency.py#L27-L39
[00:39:18] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:40:06] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[00:40:24] <ttys000> Hi i'm trying to use fastAPI and pydantic and defining the payload my API expects to receive, and in this scenario the payload is defined by the sender and i do not have any say in how it is, one of the parameters is literally the word "from" and python is unhappy about me using this there as it is a reserved word, how do i get around this?
[00:40:34] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 260 seconds)
[00:40:42] <ttys000> https://bpa.st/EF2Q
[00:40:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[00:42:04] <nedbat> ttys000: idk for sure, but try "from_"
[00:42:16] <SnoopJ> ttys000, define the field with another name and alias it to "from" https://pydantic-docs.helpmanual.io/usage/models/#reserved-names
[00:42:39] <SnoopJ> `from_ : str = Field(alias="from")`
[00:43:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:43:43] *** Joins: shad (~shad@user/shad)
[00:43:57] <SnoopJ> you'll still get syntax errors if you try to do `request.from` though, so you'll want to use the sanitized name in your application code
[00:44:22] <ttys000> ok thanks. this was helpful.
[00:44:49] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 256 seconds)
[00:48:19] *** Joins: moog (~moog@107.77.244.73)
[00:48:47] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[00:49:28] *** Joins: arinov (~arinov@213.194.126.155)
[00:49:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[00:51:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[00:51:35] *** Joins: Naan` (~Naan@user/naan)
[00:52:28] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[00:52:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:53:06] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[00:53:27] *** Quits: XV8 (~XV8@199.192.138.251) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:55:07] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[00:56:40] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[00:57:51] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[00:58:57] *** Quits: asa22 (~asa22@84.125.126.192.dyn.user.ono.com) (Quit: Client closed)
[00:59:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[01:01:54] *** Joins: Moyst_ (~moyst@user/moyst)
[01:02:28] *** Quits: cosimone (~user@93-47-230-47.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:04:03] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[01:04:15] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[01:04:43] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:cdf3:eec1:2823:7459)
[01:04:48] *** Joins: audiobirb (~audio@user/audio)
[01:05:21] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[01:06:19] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:07:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:07:22] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:07:32] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:07:38] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:07:52] *** Joins: ethrl (~morty@user/doforlove33)
[01:08:14] *** Joins: Pilate (~pilate@pilate.io)
[01:08:19] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:09:12] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[01:10:42] *** Quits: greedom (~greedom@x59cc99a6.dyn.telefonica.de) (Remote host closed the connection)
[01:11:29] *** Quits: ethrl (~morty@user/doforlove33) (Client Quit)
[01:11:29] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Remote host closed the connection)
[01:11:47] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e)
[01:12:01] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[01:12:04] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[01:12:08] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Client Quit)
[01:12:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:13:53] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:14:33] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[01:15:29] *** Joins: ArtfulDodger (~ArtfulDod@10.116.205.77.rev.sfr.net)
[01:17:51] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e) (Ping timeout: 245 seconds)
[01:18:13] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:18:15] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[01:20:15] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:22:51] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[01:23:26] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[01:23:29] <mathe8787> https://pastebin.com/Tv9kKb9k
[01:23:41] <mathe8787> If I say dmw = DesignerMainWindow()
[01:24:13] <mathe8787> isn't it weird dmw can be accessed within the class?
[01:24:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:25:17] <SnoopJ> mathe8787, it isn't clear which of the two classes you mean, but I don't think it's weird in either case, no.
[01:25:24] <mathe8787> The confusion I have is, say for ia = ImageAnalyzer() and ia.gui = dmw, how can ia.gui be called within the class of the thing it is calling? I don't see how that is possible.
[01:26:07] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[01:26:25] <SnoopJ> mathe8787, like I said earlier, __init__ gets the instance that you are initializing as its first argument. The instance exists before you enter that method.
[01:26:33] <SnoopJ> (and then you initialize it)
[01:26:43] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Client Quit)
[01:27:00] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:27:05] <whatsupdoc> is a deque implemented as a linked list in python?
[01:27:20] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 256 seconds)
[01:27:21] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Read error: Connection reset by peer)
[01:27:24] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[01:27:31] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:27:44] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[01:28:09] <bpalmer> whatsupdoc: a deque can be implemented in multiple ways in python. If you mean the standard collections.deque, you can see the requirements at https://docs.python.org/3/library/collections.html#collections.deque
[01:28:15] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[01:28:29] *** Quits: Jong (~Jong@2620:10d:c090:400::5:ddb6) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:06] <bpalmer> the constraints it gives on performance suggest a doubly linked list option is a natural implementation, but it's not documented as a guarantee; you can also just look at the source if you're curious about how it happens to be implemented.
[01:29:17] <demsh> and implementation is https://github.com/python/cpython/blob/main/Modules/_collectionsmodule.c
[01:29:25] *** Quits: magla (~gelignite@55d4df7d.access.ecotel.net) (Quit: Stay safe!)
[01:29:25] <SnoopJ> https://github.com/python/cpython/blob/main/Modules/_collectionsmodule.c#L16-L25 more specifically
[01:29:36] *** Joins: ham5urg (~ham5urg@p200300d1673fa300dff8431d317936f1.dip0.t-ipconnect.de)
[01:29:44] *** Quits: nicode (~nic@2607:f2c0:94da:7400:7eb9:a04:ec68:ca1a) (Ping timeout: 260 seconds)
[01:30:03] <SnoopJ> I guess much of that file is deque heh
[01:30:12] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[01:30:18] <SnoopJ> anyway, CPython uses a doubly-linked list of blocks
[01:30:28] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[01:31:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:31:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[01:32:22] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:32:32] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 240 seconds)
[01:32:56] *** Joins: fikran (~fikran@user/fikran)
[01:33:16] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[01:34:42] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:35:46] *** Quits: mallkrampus (~mallkramp@148.72.164.202) (Ping timeout: 245 seconds)
[01:36:10] <mathe8787> method = ImageAnalyzer here?
[01:36:38] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:36:47] <SnoopJ> mathe8787, when you create an instance of a class in Python, first an instance is created, and then __init__() on that instance is called with the instance as the first argument.
[01:36:49] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[01:37:13] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:37:24] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:37:31] *** LabMonkey is now known as Mechanismus
[01:37:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331) (Ping timeout: 250 seconds)
[01:38:04] <mathe8787> ah ok. The self in the init() always stands for the instance?
[01:38:21] <SnoopJ> mathe8787, whatever the first argument is named. `self` is very common but it can be any name.
[01:38:33] <bjs> whatsupdoc: it's a little more complex than "just" a linked list, but yes
[01:38:43] <bpalmer> mathe8787: And assuming you're using the language as intended.
[01:38:46] <mathe8787> " The instance exists before you enter that method." What method?
[01:38:50] <whatsupdoc> cool thanks
[01:38:52] <SnoopJ> mathe8787, __init__
[01:38:59] <Peng> mathe8787: __init_ is special; init is not
[01:39:45] <mathe8787> Ah yes. Ok. That makes sense now.
[01:39:47] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[01:39:56] <bjs> whatsupdoc: why do you ask?
[01:40:00] <SnoopJ> mathe8787, the object is created first, then its initializer is called. You can get your hands on the creation part, but you rarely need to do this.
[01:40:07] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:40:14] <whatsupdoc> bjs: just curious
[01:40:33] <mathe8787> Thnaks SnoopJ I appreciate the clarification
[01:40:47] <whatsupdoc> i use it from time to time, it's good to know how it works behind the scenes
[01:41:03] <SnoopJ> whatsupdoc, often you just need to read the source code for whatever implementation you're using
[01:41:16] <whatsupdoc> meh takes too long
[01:41:32] <mathe8787> btw is this group not meant for longer issues/questions?
[01:41:41] <SnoopJ> mathe8787, "Anything Python is on-topic"
[01:42:02] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:42:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:42:33] <Sheilong> I have a python project with the main directory named src. In this dir and in every dir that resides in the src directory there is an empty __init__.py file. I have also dir1 and dir2 with files a.py and b.py. In file a.py I try to import something from b.py as 'from .dir1.a import something. However when I try to run it I get the following error: ModuleNotFoundError: No module named dir1.
[01:42:45] <mathe8787> I posted this earlier but no one responded: https://pastebin.com/N2TQpb6t
[01:42:52] <mathe8787> Not sure if this is too complex to ask for help
[01:43:46] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[01:44:05] <SnoopJ> mathe8787, usually it's best to frame things in terms of a specific question
[01:45:27] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[01:47:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:48:06] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:48:07] <mathe8787> Usually with signals and threads, does one need to close out a thread once the gui is closed i.e. the program is closed?
[01:51:10] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[01:54:28] *** Joins: mallkrampus (~mallkramp@207.45.82.184)
[01:59:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[01:59:10] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:59:22] *** Quits: mallkrampus (~mallkramp@207.45.82.184) (Ping timeout: 260 seconds)
[01:59:59] *** Joins: jim (~jim@about/linux/staff/jim)
[02:00:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[02:00:35] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:00:45] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[02:01:26] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:01:42] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[02:01:44] <SnoopJ> mathe8787, I think so, but I'm not entirely sure I understand your question
[02:01:47] *** Joins: Moyst_ (~moyst@user/moyst)
[02:02:08] <mathe8787> I'm just having Qthread.started.connect issues
[02:02:15] <Sheilong> Any help. I have no idea what I am doing wrong.
[02:02:27] <mathe8787> and I'm speculating that it has something to do with not closing out threads
[02:02:51] <mathe8787> the only way I can really explain it well is in the pastebin
[02:03:14] <bjs> Sheilong: can you share exactly what you are doing? it's hard to debug these without e.g. seeing the exact directory structure and what you did/what python said
[02:03:18] <mathe8787> my program works, but then after 1-3 times of working, it doesnt work anymore
[02:03:22] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[02:03:23] <mathe8787> and I find that really odd
[02:03:34] <mathe8787> why would it work one time and the next time not?
[02:03:38] *** Joins: Pickchea (~private@user/pickchea)
[02:03:40] *** Quits: l4yer (~l4yer@195.181.170.210) (Read error: Connection reset by peer)
[02:03:42] <altendky> mathe8787: you just want a thing running in a thread?  and that thing isn't qt-aware at all?
[02:04:08] <mathe8787> what do you mean qt-aware?
[02:04:28] <mathe8787> the thing IS running in a thread from Qthread.started.connect
[02:04:34] <altendky> mathe8787: does the thing you want to run in the thread know that qt exists?  is it coding to specifical be aware of a qt event loop?
[02:04:43] <altendky> *is it coded to
[02:05:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:28] <mathe8787> i would say yes to the first part
[02:05:50] <mathe8787> its being threaded so it can run parallel to the gui
[02:05:53] <altendky> mathe8787: what is `watchdog_search`?
[02:06:07] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[02:06:11] <mathe8787> watchdog_search is the code below that
[02:06:19] <mathe8787> it searches for new files in a folder
[02:06:58] <mathe8787> and if a hdf5 file is put into the folder, the program send the file to the main program file
[02:07:03] <altendky> usually QThreads aren't really useful because either the stuff in the thread is async and could be in the main thread or it isn't async and thus the thread can't really do anything more than a regular thread.
[02:07:48] <altendky> looks like the latter case here, at first glance.  you've got a `while True` that will just run forever and never give the thread's event loop a chance to process events.  i think?
[02:08:27] <SnoopJ> that sounds like a plausible mechanism for causing the issue they're seeing
[02:08:39] <mathe8787> it does process events
[02:08:58] <mathe8787> the program works flawlessly when I run it 1-3 times
[02:09:08] <altendky> once the thread starts running `Worker.work`, how does the event loop in that thread ever get to run?
[02:09:28] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e84c:31fa:24ac:a92f) (Quit: smeeagle)
[02:09:45] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[02:09:55] <mathe8787> from thread.start()
[02:10:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 250 seconds)
[02:10:25] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[02:10:33] <mathe8787> and also in the class Worker() I have new_file = pyqtSignal(str,str)
[02:10:34] <altendky> that's what makes `Worker.work` run.  but after that you just have `Worker.work` running without giving the event loop in the thread any time.
[02:10:51] <altendky> and emitting a signal doesn't leverage the event loop in the sending thread, only the receiving thread.
[02:11:06] <mathe8787> it should always be running
[02:11:10] *** Quits: ArtfulDodger (~ArtfulDod@10.116.205.77.rev.sfr.net) (Quit: Leaving)
[02:11:19] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[02:11:28] <mathe8787> the files come in at random times
[02:11:37] <altendky> if i'm reading this right, the end result is that there's no point in it being a QThread and you can just great a regular thread and have it run the function and then not deal with the start signal
[02:11:40] <SnoopJ> mathe8787, I think what altendky means is that your busy loop is blocking the Qt event loop, which blocks signals
[02:11:42] <altendky> or inheriting from qobject
[02:11:42] *** Quits: sazawal (~sazawal@122.161.81.235) (Quit: Leaving)
[02:11:43] <mathe8787> and the program should be used for days, weeks with never cclosing
[02:11:53] <altendky> blocks further incoming signals, yeah
[02:12:35] <mathe8787> how do you use a regular signal and would i need to still use new_file = pyqtSignal(str,str)?
[02:12:37] *** Joins: mallkrampus (~mallkramp@148.72.164.122)
[02:12:42] <altendky> basically, none of the qt-ness of `QThread` is being leveraged.  the basic feature of a `QThread` over a `threading.Thread` is the event loop starting.  but since the event loop is blocked forever, that's not really useful.
[02:13:04] <SnoopJ> mathe8787, are you following this description of what may be going wrong?
[02:13:10] <SnoopJ> If not, ask some clarifying questions
[02:13:41] <Sheilong> bjs: https://bpa.st/2UNA
[02:13:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[02:13:51] <mathe8787> of altendky description? absolutely im following it...it makes sense im just not that savy in qthread hence why i tried using it
[02:14:27] <bjs> Sheilong: oh okay, you said you had `from .dir1.a import something` so i was confused, here you don't have the dot
[02:14:32] <leitz> nedbat, bjs, thanks. Here's what I've been working on:  https://github.com/LeamHall/resume_writer/blob/master/resume_writer.py
[02:14:52] <altendky> mathe8787: it's the norm that people use it then don't leverage it.  `:]`
[02:15:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:15:10] <leitz> parv, you too.  :)
[02:15:24] <altendky> even with `threading.Thread`, yeah, you can still emit a signal to be handled in another thread that does have a not-blocked event loop, like the main gui thread
[02:15:35] <leitz> Still needs a lot of work.
[02:15:40] <mathe8787> altendky so can i keep everything the same and just use Thread?
[02:15:46] <parv> leitz, Wait .. what did I do?
[02:15:50] *** Joins: arinov (~arinov@5.24.122.101)
[02:15:55] <bjs> Sheilong: the problem is that Python's import system is a little convoluted.  When you `import foo` (or `from foo import bar`) it looks for foo.py (or foo/__init__.py) in a particular set of directories, it doesn't start looking around the file or the current working directory or anything like that (usually)
[02:16:13] <leitz> parv, you gave me some good advice that got me going in the right direction.
[02:16:13] <altendky> mathe8787: of sorts, yeah
[02:16:25] <altendky> mathe8787: might be more simplification that can be done.
[02:16:36] <SnoopJ> mathe8787, it sounds like maybe you want a different mechanism for coordinating the different parts of your program
[02:16:45] <bjs> Sheilong: do you want both of these dir1 and dir2 things to be importable in Python? They should have __init__.py's.  Is the top-level directory also supposed to be importable? It should have an __init__.py too if so, otherwise not
[02:16:46] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:16:48] <altendky> mathe8787: but, if your original issue is that sometimes the start signal isn't working, then yeah, you end up getting rid of that.
[02:16:53] <parv> leitz, (Oh, about the format string) You're welcome
[02:17:11] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 256 seconds)
[02:17:15] <altendky> mathe8787: and we can then be lazy and not figure out the details of why it might not work sometimes.  `:]`  been awhile since i thought that through.
[02:17:37] <mathe8787> altendky i would rather do the simple way haha
[02:18:06] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[02:18:10] <altendky> mathe8787: in the other direction...  you could trade your sleeps for a cyclic timer caller a rework of your work function and have the event loop be live.
[02:18:42] <altendky> then you could receive incoming signals into that thread as well.  but...  that may not be needed.
[02:18:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:18:57] <mathe8787> hmmm
[02:19:02] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:19:23] <mathe8787> not sure if that is needed also
[02:19:37] <Sheilong> bjs: I have done it before, but was having the same issue. I have read some articles in the past, even the Python documentation, however I always get stuck with the import system.
[02:19:44] <altendky> mathe8787: though in general i would personally (albeit with a bit of bias...) use https://qtrio.readthedocs.io/en/stable/ and keep everything in coroutines and just kick the individual blocking calls into threads via trio.  that's a whole big jump of direction though.
[02:19:54] <bjs> Sheilong: the import system is one of the more awkward parts of the language
[02:20:06] <altendky> mathe8787: something to be aware of though, maybe for someday later
[02:20:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[02:20:13] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[02:20:35] <bjs> Sheilong: I find the easiest way to make things work is to never run files *inside* a package directly and to run Python using -m,  that usually helps enforce the imports to work consistently
[02:21:02] <mathe8787> Thanks ill look into that
[02:21:06] <mathe8787> but for Thread
[02:21:06] <altendky> sometimes you have pytest fixtures that you want configurable by the test.  you can use markers to do this, but i've only heard about this once outside of the docs.  https://docs.pytest.org/en/6.2.x/fixture.html#using-markers-to-pass-data-to-fixtures  which makes we wonder if it's really a great idea.  it's a bit indirect just to avoid a fixture that yields a callable that you use as a context manager, or such.  any opinions?
[02:21:17] <mathe8787> altendky do you just import threading?
[02:21:28] <SnoopJ> Sheilong, there is a lot of half-true/incomplete information out there about how importing works and how to get around the common gotchas. This is a great source of official (i.e. trustworthy) info on how searching works: https://docs.python.org/3/reference/import.html#searching
[02:21:45] <altendky> mathe8787: yep.  then `thread = threading.Thread(run=my_worker_function_or_method)`
[02:21:49] <SnoopJ> but I agree with what bjs said: ideally you avoid the jankier parts of importing altogether
[02:21:51] <bjs> Sheilong: e.g. here if you were in . then you could go `python3 -m dir2.b` and b.py could `import dir1.a` and it'll work.  Probably the most robust way to do this is to make everything a real package and import it with `pip` locally so that you know python can always find it.
[02:22:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[02:22:20] <SnoopJ> bjs, you mean install it, right? :)
[02:22:27] <bjs> Uh yes
[02:22:32] <bjs> install it with pip so you can always import it
[02:22:39] <SnoopJ> +1
[02:22:43] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:23:23] <whatsupdoc> How do you reference an element in a deque? In C/C++, you can use pointers, how is this accomplished in python?
[02:23:26] <mathe8787> altendky so no need for moveTothread or connect?
[02:23:28] <Sheilong> Even doing  "python3 -m dir2.b" I end up getting the same error
[02:23:37] <bjs> whatsupdoc: what do you mean "reference" ?  Python doesn't really have pointers/references
[02:23:39] <altendky> mathe8787: not on the starting side of things, nope
[02:23:48] <parv> leitz, Would you please use a consistent indentation style? There seems to be a mix of tabs & spaces at the link posted.
[02:23:57] <mathe8787> just         thread = threading.Threadd((worker.work)
[02:23:57] <mathe8787> ?
[02:23:59] <whatsupdoc> let's say i have a linked list of 1->2->4->6->3
[02:24:02] <KirkMcDonald> whatsupdoc: You can index a deque.
[02:24:11] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:24:15] <whatsupdoc> but you don't know what the index is because it changes
[02:24:28] <whatsupdoc> let's say you want to keep track of 4 (ie index 2)
[02:24:30] <altendky> mathe8787: i would be curious though if swapping the order of your `moveToThread` and the `started.connect` fixes your intermittent issue.
[02:24:38] <whatsupdoc> but you are constantly modifying that linked list
[02:24:53] <KirkMcDonald> If it is a linked list, then you can retain a reference to a specific node.
[02:25:00] <whatsupdoc> In C/C++, you can simply save a pointer to 4, and grab the address of it and modify it in any way you'd like
[02:25:04] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th)
[02:25:08] <altendky> mathe8787: sorry, it's `target=the_function_to_run_in_the_thread`, not `run=` as i wrote above
[02:25:08] <mathe8787> altendky trying it now
[02:25:20] *** Joins: lowfi (~lowfi@user/lowfi)
[02:25:26] <whatsupdoc> KirkMcDonald: how?
[02:25:26] <SnoopJ> whatsupdoc, `bound_name_for_that_element = yourdeque[idx]` ... ?
[02:25:56] <bjs> whatsupdoc: Python doesn't have a "reference" like that
[02:25:56] <KirkMcDonald> whatsupdoc: That depends on the particular sort of linked list you're talking about. But *presumably* there is an object that represents the node.
[02:26:14] <mathe8787> altendky no didnt work unfortunately
[02:26:14] <whatsupdoc> I'd have to make it by myself?
[02:26:20] <bjs> Sheilong: hmm? https://bpa.st/RLAQ
[02:26:25] <whatsupdoc> Because I guess I can create an object and reference it
[02:26:30] <whatsupdoc> but what about indices
[02:26:32] <altendky> mathe8787: basically, once the object is "moved to" the other thread (just a qt concept, python objects don't belong to any particular thread) you kinda shouldn't be touching it.  but this is definitely a nuanced startup scenario here and it's been awhile since i thought it through.
[02:26:34] <KirkMcDonald> whatsupdoc: Well, there isn't a linked list type in the standard library, but presumably there are third-party ones.
[02:26:35] <whatsupdoc> integers i mean
[02:26:39] <altendky> mathe8787: ah well, thanks for checking.
[02:26:54] <Sheilong> bjs: sorry I was mistaken, it did work. However, what does -m stands for?
[02:27:04] <KirkMcDonald> whatsupdoc: An integer is not a linked list node.
[02:27:14] *** Joins: freeman_h (~freeman_h@94.0.217.120)
[02:27:24] <bjs> whatsupdoc: what are you trying to do? You can't make "a reference to the i'th element of a collections.deque"
[02:27:33] <whatsupdoc> thanks
[02:27:41] <whatsupdoc> sucks
[02:27:43] <SnoopJ> whatsupdoc, names are the standard way to hold a reference to objects in Python, deque or not. If you want to index at a particular offset into the deque, do that.
[02:27:56] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:27:59] <bjs> whatsupdoc: it does?
[02:28:01] <SnoopJ> If you want to do neither of those things, perhaps clarify your task.
[02:28:05] <KirkMcDonald> whatsupdoc: The thing with Python is that everything is pointers already, if you want to look at it that way.
[02:28:05] *** Quits: p-i- (~Ohmu@223.206.149.105) (Ping timeout: 250 seconds)
[02:28:18] <freeman_h> hi guys using flask template can i do a ternary operator if and else statement with this? <td>{{ad['active']}}</td> I want to do if ad['active'] id 1 then "Yes" else "No"
[02:28:22] <bjs> Sheilong: well what it stands for doesn't really help much (I think it's "module" ?)
[02:28:24] <SnoopJ> yea, it's all basically PyObject* under the hood in CPython
[02:28:35] <bjs> Sheilong: but it's the "run file from library/package as a script" flag
[02:28:43] <tris> freeman_h, yes, just do it -- <td>{{ "Yes" if ad['active'] else "No" }}</td>
[02:28:45] <mathe8787> altendky what im confused about is how would i transform this https://pastebin.com/3ag8Aijt from Qthread to just threading? There are a lot of parts there
[02:28:49] <bjs> Sheilong: python3 --help gives `-m mod : run library module as a script (terminates option list)`
[02:29:02] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:29:14] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[02:29:26] <tris> (same syntax as in regular python)
[02:29:35] <freeman_h> tris, thanks
[02:29:52] <SnoopJ> and the BLOCK stored by deque in particular holds an array of pointers for the objects in that block: https://github.com/python/cpython/blob/main/Modules/_collectionsmodule.c#L80
[02:30:04] <Sheilong> bjs: Suppose I wanted to import some of those files in a jupyter notebook , I 'd have to install that module using pip?
[02:30:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:30:34] <SnoopJ> Sheilong, you don't _have_ to, but it's a good way to do it
[02:30:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:47] <altendky> mathe8787: https://bpa.st/QCXA might cut it
[02:31:14] <altendky> mathe8787: make sure you have a way to stop the thread (i didn't review your code for that).  the thread has to be checking for something and decide itself to stop.
[02:31:18] <bjs> Sheilong: probably that would be the easiest way yeah,  I'd make some virtualenv (venv) that had everything you needed in it;  jupyter will almost certainly have some way you can point the kernel/whatever at the venv's Python
[02:31:38] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:38] <Sheilong> SnoopJ: I don't see an alternative since  trying to import it raises "ModuleNotFoundError".
[02:31:48] <mathe8787> altendky thank you Im trying it now. What happens if I dont have something to stop it?
[02:31:54] <SnoopJ> Sheilong, the alternatives are described in mind-numbing detail in the link I gave earlier
[02:32:17] <SnoopJ> bjs, technically a kernel is already pointing at a particular Python, but yea, you can have a kernel that uses "that venv over there"
[02:32:20] <bjs> whatsupdoc: Python works very differently than C/C++ here,  in C/C++ all your variables are basically little bits of memory that you can get a reference to.  That's not how Python works, in Python *objects* are little bits of memory you can get a reference to.
[02:32:32] <SnoopJ> in CPython, that is
[02:32:40] <whatsupdoc> yea, i get the difference
[02:32:54] <bjs> SnoopJ: and in any other implementation they have to move heaven and earth to make it look like it does in CPython :P
[02:33:12] <SnoopJ> bjs, what's heaven got to do with PL implementations? ;)
[02:33:33] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[02:33:39] *** Quits: Dotz0cat (~Dotz0cat@h95.88.187.173.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[02:33:51] <freeman_h> tris, I have something a little more complex <td>{{ad['msg']}}</td> something like this https://kopy.io/msFm6 please pay attention to "../blah) Trading..." how can I break anything after ) into a new line?
[02:33:55] <bjs> whatsupdoc: so if deque has an array of pointers to other Python objects inside it (for e.g.) then you can't get a pointer to the pointer (because it's internal).
[02:34:30] <Sheilong> This is the original project structure I  am using. I was doing some testing trying to do those imports.  There are some notebooks that are beyond the top level package in which I'd need to do imports from src directory.
[02:34:43] <tris> freeman_h, not sure what exactly you are asking -- you can insert a newline in your template or message directly and it should just work
[02:35:24] <freeman_h> tris, am getting it from the database and then sending it to the html just need to beautify the presentation
[02:35:29] <altendky> mathe8787: your program can't quit because even when the main thread terminates, the worker thread won't
[02:36:07] <whatsupdoc> is deque.remove() an O(1) operation?
[02:36:29] <Jonno_FTW> whatsupdoc: there's a python wiki page for all this stuff
[02:36:42] <whatsupdoc> https://docs.python.org/3/library/collections.html#collections.deque
[02:36:49] <SnoopJ> whatsupdoc, no, it's O(n) https://wiki.python.org/moin/TimeComplexity
[02:36:51] <Jonno_FTW> whatsupdoc: https://wiki.python.org/moin/TimeComplexity
[02:37:10] <bjs> whatsupdoc: no,  after all we said it was a linked list earlier inside
[02:37:11] <Sheilong> https://bpa.st/CBGQ
[02:37:24] <whatsupdoc> bjs: could be a doubly linked list
[02:37:24] <mathe8787> altendky im using this to close it https://bpa.st/KZBA
[02:37:32] <whatsupdoc> bjs:
[02:37:33] <SnoopJ> yea, O(n) is basically the floor set by the implementation because you have to do a linear scan
[02:37:35] <bjs> whatsupdoc: it's still O(n) to remove because you have to find it
[02:37:37] *** Joins: Dotz0cat (~Dotz0cat@h236.193.186.173.dynamic.ip.windstream.net)
[02:37:45] <SnoopJ> whatsupdoc, it *is* a doubly-linked list and that does not change this lower bound.
[02:37:46] <whatsupdoc> but if you have a reference to it
[02:37:48] <Jonno_FTW> why can't the collection just store a reference to the last node?
[02:37:58] <whatsupdoc> that was a point of having a reference
[02:37:59] <bjs> Jonno_FTW: it does, it's a double-ended queue afterall
[02:38:05] <whatsupdoc> so you can delete it in O(1)
[02:38:12] <SnoopJ> whatsupdoc, how do you know where the first occurrence is?
[02:38:21] <whatsupdoc> you have a reference to the node
[02:38:29] <bjs> whatsupdoc: sure, and deque could have exposed Python objects for each "node" of a deque to let you do that
[02:38:39] <bjs> but it's a trade-off, because those Python objects would have more overhead
[02:38:51] <Jonno_FTW> you can always right your own deque if you're really that concerned
[02:38:54] <Jonno_FTW> write*
[02:39:05] <SnoopJ> whatsupdoc, you never have a reference to the node from the Python user's standpoint. The node is not a Python object.
[02:39:06] *** Joins: zeden (~zeden@user/zeden)
[02:39:14] <bjs> (also a deque is not a pure linked-list and those references/objects would be confusing)
[02:39:29] <whatsupdoc> yes, that's what I think i'd have to do, write my own
[02:39:45] <whatsupdoc> but it's always better to use a standard library if possible
[02:39:50] <mathe8787> altendky wow....the good news is that it works not fluidly...the bad news is i dont know how to close the thread and like you said the program just stay open! hahaha
[02:40:05] <mathe8787> altendky it works fluidly with your code****
[02:40:47] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:41:26] <bjs> whatsupdoc: there's also good design reasons to not expose these references, as they can very easily lead to unsafe situations
[02:41:27] <mathe8787> altendky so how does one kill the thread?
[02:41:54] <bjs> whatsupdoc: perhaps you should consider if a deque is the appropriate structure, there are lots of data structures out there
[02:41:54] <demsh> killing thread is bad idea, you should ask thread to exit
[02:42:01] <SnoopJ> bjs, since they want deque.remove() to be O(1) I suspect what they want is not actually a deque
[02:42:06] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:42:15] <mathe8787> demsh how/where should i exit the thread?
[02:42:21] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[02:42:24] <mathe8787> demsh for example if i close the gui, the thread should stop
[02:42:26] <SnoopJ> I can't see how you'd do better than O(N) with any implementation of deque that isn't effectively [some other structure]
[02:42:49] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[02:42:57] <SnoopJ> (but then, maybe my imagination is deficient)
[02:43:02] <whatsupdoc> O(1) if you had a reference to the node
[02:43:10] *** Joins: NyB (~archon@2a02:169:1d9::1:0:0)
[02:43:32] <bjs> whatsupdoc: like I said this is a dangerous structure to build and if you were to ask me, I would definitely advise against it
[02:43:32] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 240 seconds)
[02:43:32] <SnoopJ> whatsupdoc, are you sure you know what deque.remove() does? It takes a value whose first occurrence will be removed.
[02:43:38] <altendky> mathe8787: https://docs.python.org/3/library/threading.html#threading.Event
[02:43:53] <bjs> it's far too easy to get this wrong and get broken code (and if Python were to expose the objects, probably just a broken Python...)
[02:43:56] *** Joins: chuck_ (~chuck@181.191.143.126)
[02:44:00] <whatsupdoc> SnoopJ: I understand what remove() does and it's not what I want
[02:44:01] <demsh> mathe8787: you have to signal to it, the best way in most situations is threading.Event
[02:44:08] <altendky> mathe8787: have one of those, set it when you want the thread to quit.  have the thread monitor the event and if set then the thread should return.  well, your function you asked to be run in the thread.
[02:44:08] <SnoopJ> whatsupdoc, then perhaps you should ask about what you actually want.
[02:44:20] <whatsupdoc> SnoopJ: custom implementation
[02:44:25] <SnoopJ> whatsupdoc, okay, good luck
[02:44:39] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[02:44:48] <mathe8787> ok im confused
[02:44:52] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 260 seconds)
[02:44:57] <mathe8787> i need an event to then run to close it?
[02:44:58] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:45:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:45:06] <bjs> whatsupdoc: say I have a deque 1->2->3->4 and I take a ref to 3, then I delete 2, then i delete my ref to 3.   If you do implement this yourself,  just make sure this edge case works properly ;)
[02:45:18] <mathe8787> why cant there just be a: if gui close, then close thread?
[02:45:36] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[02:45:43] <altendky> mathe8787: you can do it many ways.  i would make this thing kinda independent of the gui though.
[02:45:46] <demsh> create gui_closed Event and pass it as argument to the thread
[02:45:57] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:45:59] <demsh> and add check "if gui_close: return"
[02:46:17] <altendky> mathe8787: the event can be an attribute on your worker instance.  the main thread can set it.  the worker thread can monitor it.
[02:46:35] <demsh> killing thread is bad idea because if thread suddenly dies it'll leave locks in locked state, so they will never unlock, this is a guaranteed way to get deadlocks
[02:46:43] <mathe8787> yea but this code is in the __init__() of a class
[02:46:58] <altendky> mathe8787: which code?  and ...  don't do that.  `:]`
[02:47:05] *** Quits: lucasb (uid333435@id-333435.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:47:06] <demsh> why is it in __init__?
[02:47:12] <altendky> mathe8787: init should create a class instance.  it shouldn't do a bunch of work
[02:47:28] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:47:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[02:48:39] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[02:48:42] <mathe8787> ok so should i do self.thread_open = Thread_open()? or something like that?
[02:49:25] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[02:49:37] <mathe8787> this code is __init__()
[02:49:38] <mathe8787> https://bpa.st/QCXA
[02:50:27] *** Joins: Klinda (~superleag@user/klinda)
[02:50:55] *** Joins: Fiji (~Fiji@user/fiji)
[02:51:08] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[02:51:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:51:57] <mathe8787> ok just fixed it :)
[02:52:02] <mathe8787> made a method in the class
[02:52:31] *** Parts: NyB (~archon@2a02:169:1d9::1:0:0) (WeeChat 3.0)
[02:52:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:b659:bf1e:33ce:c2ee) (Ping timeout: 245 seconds)
[02:55:21] <mathe8787> the thing is, the gui delegates the program. So if I close the gui, I want to make sure everything in the program closes.
[02:55:38] <demsh> worker.work functions has to accept Event and check it to exit cleanly
[02:56:03] <mathe8787> what event?
[02:56:21] <demsh> https://docs.python.org/3/library/threading.html#threading.Event
[02:56:37] <demsh> Thread allows to pass arguments via args parameter
[02:56:51] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:57:24] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[02:58:47] <mathe8787> hm
[02:58:57] <mathe8787> should that be in the same method as the other code?
[02:58:58] <altendky> either pass it in or make it an attribute on the class
[02:58:59] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:59:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:26] <altendky> mathe8787: but i'm not sure what the `Thread_open` you refer to is.  and no, i wouldn't be creating and starting a thread in a `.__init__()`
[02:59:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:00:03] <altendky> mathe8787: and sure, you can have your workers on your jobsite watch for the boss to leave and then the workers leave.  or you can have the boss tell the workers when to leave.
[03:00:11] <mathe8787> https://bpa.st/YNVA
[03:00:29] <mathe8787> that is what i changed it to -- it is now in a method in a class. Before it was in __init__()
[03:00:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:00:46] <demsh> so Thread_open created thread and then drops any reference to it
[03:00:58] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[03:00:58] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[03:01:18] <freeman_h> any indentation plugin for pycharm?
[03:01:22] <demsh> so __init__ still calls Thread_open?
[03:01:30] *** Joins: nicode (~nic@2607:f2c0:94e0:ba00:6878:56fe:bb8f:5f9f)
[03:01:37] <mathe8787> no dmv = DesignerMainWindow
[03:01:45] <mathe8787> dmv.Thread_open()
[03:02:19] <mathe8787> dmv = DesignerMainWindow()****
[03:02:20] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:02:45] *** Joins: Moyst_ (~moyst@user/moyst)
[03:03:29] <mathe8787> altendky yes im still trying to wrap my head around threads and signals, and where to put this code to close the thread. I just dont see how the gui can tell the thread to stop since the gui already closes the whole program
[03:04:13] <mathe8787> right now what I am doing is CTRL+z to just suspend the code, so that the thread stops
[03:04:14] <demsh> you can for example pass Event as argument to Thread_open so it passes it to worker.work like that https://bpa.st/B3MQ
[03:04:32] <demsh> so then code which manages dmv object can set event to True when it wishes to stop the thread
[03:04:35] *** Quits: henistein (~henistein@2001:8a0:fc9f:bc01:659f:ce4c:1d7:99b8) (Quit: Client closed)
[03:05:28] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:05:42] <demsh> thread is independent flow of execution, so to influence it you need some shared variable, but regular variables are not safe to be shared by multiple threads simalteneosly, that is why threading.Event exists, it's thread-safe
[03:05:59] <demsh> and is used as thread-safe Bool
[03:07:07] <mathe8787> i would have never guessed how to do that without that code
[03:07:19] <mathe8787> https://bpa.st/V33A
[03:07:33] <grym> freeman_h: you can make pycharm run any number of autoformatters; which one(s) are personal taste
[03:07:35] <demsh> https://docs.python.org/3/library/threading.html#threading.Thread
[03:07:49] <mathe8787> ^^^if I put this event before sys.exit(app.exec_()), would that close the thread?
[03:07:58] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:07:59] <grym> freeman_h: but the stock editingi experience certainly helps with indenting things all the tim
[03:08:19] <freeman_h> grym, new to python and the indentation is annoying me just want it to do be do without me having to always ensure i do it
[03:08:24] <freeman_h> manually
[03:08:24] *** Quits: arinov (~arinov@5.24.122.101) (Read error: Connection reset by peer)
[03:08:34] <mathe8787> so dmv.Thread_open(True) then it would stop the threading?
[03:08:53] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[03:08:56] <mathe8787> ok let me explain it better
[03:09:07] <altendky> mathe8787: fyi, ctrl+z just suspends the whole program, it doesn't stop the thread.
[03:09:33] <mathe8787> altendky yea i know but when do the threads stop
[03:09:48] <altendky> mathe8787: same as the main thread.  when their code decides to or they are killed by the os.
[03:10:01] <altendky> mathe8787: just return from the function that's being run in the thread when it wants to not run anymore
[03:10:08] <demsh> mathe8787: smth like that https://bpa.st/EIZA
[03:10:24] <grym> freeman_h: https://black.rtfd.org/  is the tool for you; then you'll never care again
[03:10:40] <grym> freeman_h: but if you're manually typing lots of spaces, in any editor, you're doing something wrong
[03:11:08] <demsh> mathe8787: now only worker.work has to check the event during it's event loop iteration and return from it when it's is_set
[03:11:10] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:11:36] *** Quits: dcaro_away (~dcaro@user/dcaro) (Ping timeout: 256 seconds)
[03:12:43] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[03:13:42] *** Joins: dcaro (~dcaro@user/dcaro)
[03:14:05] <demsh> mathe8787: like that, i
[03:14:14] <demsh> i'm assuming that it has infinite loop https://bpa.st/A7GA
[03:14:32] *** Joins: arinov (~arinov@213.194.126.155)
[03:14:42] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:15:04] <demsh> so after the is_set() should be useful work that the thread is doing
[03:15:06] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:15:53] <mathe8787> if signal_exit.is_set():
[03:15:53] <mathe8787>            return
[03:16:00] <mathe8787> what does this do?
[03:16:15] *** Joins: Jong (~Jong@174.27.0.61)
[03:16:41] <mathe8787> ah wait
[03:16:44] <demsh> calls is_set method on signal_exit
[03:16:51] <demsh> if it returns True it returns
[03:16:54] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:18:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:18:14] *** Joins: andyduckworth (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net)
[03:18:16] *** andyduckworth is now known as m0nk3yc0wb0y
[03:18:49] <mathe8787> sorry im really not seeing how that helps
[03:19:04] <demsh> what is worker.work code?
[03:19:45] *** Quits: Common (~Common@user/common) (Quit: Leaving)
[03:19:50] <mathe8787> demsh thats the code that 1. checks for new hdf5 files and 2. makes sure the file is done writing. Once the file is done writing, the file gets emitted to the main program to be sent to the gui
[03:19:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:19:55] <demsh> ah, that is https://bpa.st/RRFQ
[03:20:10] <mathe8787> yes
[03:20:31] *** Joins: djapo (~archangel@user/djapo)
[03:21:16] *** Joins: iflema (~ian@user/iflema)
[03:21:29] <demsh> i would change it like that https://bpa.st/LC2A
[03:21:34] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Read error: Connection reset by peer)
[03:21:52] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:21:54] <demsh> but i don't really know the behaviour of this object, it might be more appropriate to check it in inner infinite loop
[03:22:09] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[03:22:19] *** Joins: Common (~Common@user/common)
[03:22:29] <demsh> essentially you should check it when thread releases all locks and resources
[03:22:41] <demsh> or thread has to release them on it's way out before calling the return
[03:23:58] <mathe8787> demsh i tried it that way but the thread doesnt close
[03:24:04] <mathe8787> let me try it in the other loop
[03:24:44] <mathe8787> also didnt work there
[03:24:50] *** Parts: bpalmer (~user@user/bpalmer) (ERC (IRC client for Emacs 27.2))
[03:25:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b)
[03:25:24] <demsh> how do you test? signal_exit.set() runs only if if "app" in globals() and not reuseapp:
[03:25:27] <mathe8787> demsh the thread wont ever release all locks and resources
[03:25:29] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd) (Ping timeout: 250 seconds)
[03:25:46] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[03:26:14] <demsh> hm, yeah, it's unreachable code, nothing executes after sys.exit
[03:26:21] <mathe8787>  <demsh> how do you test I just started the program and the gui opened, and I just closed the gui to see if the thread stops
[03:26:58] <mathe8787> demsh yea thats what i was thinking the whole time and i cant figure out how to do this event/signal thing
[03:27:13] <demsh> yeah, need to swap them https://bpa.st/JCSA
[03:27:13] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[03:27:24] *** Quits: delvian (~delvian@41.13.192.102) (Quit: Leaving)
[03:27:32] <demsh> thats my mistake
[03:28:02] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:28:13] <mathe8787> i should have caught that
[03:28:27] <mathe8787> but its still not working :/
[03:28:33] <demsh> hm, or not, looks like it's worng
[03:29:18] *** Quits: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b) (Client Quit)
[03:29:20] <demsh> it should be like that https://bpa.st/7RIA
[03:29:21] <mathe8787> so let me just show you all the necessary code I have, i think im making a mistake somewhere
[03:29:38] <demsh> but if it doesn't work then probably some other thread is the reason?
[03:29:43] *** Quits: demsh (i04yyf87t5@hermod.demsh.org) (Quit: nyaa~)
[03:30:08] *** Joins: demsh (safdyts89g@hermod.demsh.org)
[03:30:15] <mathe8787> this is the only thread in the DesignerMainWindow()
[03:30:21] *** Quits: demsh (safdyts89g@hermod.demsh.org) (Client Quit)
[03:30:40] *** Joins: demsh (swoz8jwwqe@hermod.demsh.org)
[03:30:56] <mathe8787> so I start the program with start.py. start.py: https://bpa.st/F6FQ
[03:31:51] <demsh> in this paste you never set the event
[03:33:01] <demsh> should be like that https://bpa.st/URMA
[03:33:15] *** Joins: jyu_s (~f0fz@122.11.212.225)
[03:33:24] <demsh> I assume that app.exec_() blocks and returns when GUI is closed
[03:33:28] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:33:38] <mathe8787> then goes to main.py: https://bpa.st/USMQ
[03:34:15] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[03:35:04] <mathe8787> then goes to watchdog_search: https://bpa.st/FFGA
[03:35:26] <mathe8787> demsh ok i chnaged that thank you but the thread is still not closing
[03:35:51] <demsh> need qtgui documentation
[03:36:24] *** Quits: moog (~moog@107.77.244.73) (Remote host closed the connection)
[03:36:26] <mathe8787> demsh why?
[03:36:27] *** Joins: delvian (~delvian@41.13.192.102)
[03:36:29] <Sheilong> SnoopJ: So I read the entire page you pointed me out. They even say there that the things I was trying are valid, however I still don't understand why I am getting module not found when running it without the flag 'm'.
[03:37:36] *** Quits: grimvar (~grimvar@i5C75F5D4.versanet.de) (Ping timeout: 260 seconds)
[03:37:38] <demsh> mathe8787: to know how to use it
[03:37:43] <bjs> Sheilong: well the -m flag isn't doing much other than importing it
[03:37:44] <SnoopJ> Sheilong, at a guess: the search path isn't what you think it is
[03:37:59] <demsh> i don't know when app.exec_() returns
[03:38:08] <mathe8787> when or what?
[03:38:11] <demsh> when
[03:38:15] <bjs> Sheilong: `python3 -m dir1.a` is roughly the same as `python3 -c "import dir1.a"`
[03:38:46] <demsh> so far I only found this =\ https://doc.qt.io/qtforpython/PySide6/QtCore/index.html#module-PySide6.QtCore
[03:38:47] <bjs> Sheilong: the problem is that when you run a script Python begins it's search from that script's location (and then through all the other libraries and other directories) for installed modules
[03:38:59] *** Joins: grimvar (~grimvar@i5C75F51B.versanet.de)
[03:39:13] <bjs> (infact I personally would be happy if it just didn't include the scripts directory at all, i think this "helpful" feature actually makes it far more fragile and confusing...)
[03:39:21] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[03:39:35] <SnoopJ> agreed, reasoning about the bit of state causes far more problems than the feature's existence solves...
[03:39:38] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Read error: Connection reset by peer)
[03:39:56] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:40:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:40:49] <mathe8787> demsh hm yea that code was done by someone else 7 years ago unfortunately :/
[03:41:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668)
[03:41:26] <mathe8787> so not sure what/how he did exactly
[03:41:28] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:41:33] <demsh> it looks like proper code for qt, matches their examples, but can't find detailed info on behaviour of methods, so the only way is to read source
[03:41:46] <mathe8787> shit -_-
[03:41:54] *** Joins: d00gy (~d00gy@user/d00gy)
[03:42:16] <bjs> Sheilong: -m doesn't do anything magical, it just helps you not get it wrong because if `-m foo.bar.baz` works then you know `import foo` and `from foo import bar` etc all will work,  the problem is when the program runs... and then breaks once it starts importing stuff.
[03:42:18] *** Joins: fikran (~fikran@user/fikran)
[03:42:28] <mathe8787> youve been a lot of help, my apologies if I asked for too much help...even the stuff you did help me with I want to spend some time going through it so i understand what was done
[03:42:44] <altendky> where are we at?  still some issue?
[03:42:52] <SnoopJ> no need to apologize, we're here for pretty much exactly this reason
[03:43:31] <mathe8787> altendky demsh was a great help but the current status is that the thread doesnt close
[03:44:05] <mathe8787> just to restate:
[03:44:08] <mathe8787>  so I start the program with start.py. start.py: https://bpa.st/F6FQ
[03:44:09] *** Quits: TJ- (~root@about/linux/staff/tj-) (Quit: Ooops, that broke it!)
[03:44:13] <mathe8787>  then goes to main.py: https://bpa.st/USMQ
[03:44:19] <Sheilong> bjs: I just wanted to know how to get my python project working properly.
[03:44:20] <altendky> mathe8787: you can put multiple files in one bpaste
[03:44:20] <mathe8787>  then goes to watchdog_search: https://bpa.st/FFGA
[03:44:34] <altendky> including file names
[03:44:38] <demsh> looks like this is https://doc.qt.io/Qt-5/qapplication.html#exec
[03:44:38] <mathe8787> ah ok
[03:44:39] *** Joins: nomic (~nomic@185.217.117.51)
[03:44:46] <altendky> but, looking
[03:45:05] <SnoopJ> Sheilong, and as we've said multiple times, making an installable package is usually the way that has the least number of headaches
[03:45:06] <Sheilong> I really hates this import system because I can't understand how I should proceed to make my project work and to be reproducible.
[03:45:13] <demsh> "We recommend that you connect clean-up code to the aboutToQuit() signal,"
[03:45:41] <Sheilong> SnoopJ: How I'd do that if the package doesn't even runs.
[03:45:44] <demsh> so that is correct place to set threading.Event to True
[03:45:53] <SnoopJ> Sheilong, https://packaging.python.org/tutorials/packaging-projects/
[03:46:01] <altendky> mathe8787: you only set the 'signal' (it is an event, not a signal) if you run the main file directly
[03:46:01] *** Joins: iflema (~ian@user/iflema)
[03:46:04] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:46:08] *** Quits: qwert (~qwert@208.78.214.5) (Quit: Client closed)
[03:46:14] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Read error: Connection reset by peer)
[03:46:14] <altendky> mathe8787: not if you run start
[03:46:27] <demsh> mathe8787: this is proper way for qt https://doc.qt.io/Qt-5/qcoreapplication.html#aboutToQuit
[03:46:33] <mathe8787> here is everything together: https://bpa.st/D7QA
[03:46:42] <altendky> mathe8787: but creating it at such a high level doesn't seem quite right.
[03:46:47] <demsh> not only to find out how exactly this looks from python perspective since it's c++ docs
[03:47:26] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 245 seconds)
[03:47:34] <mathe8787> altendky ok how would you solve it?
[03:48:08] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:48:21] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[03:48:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[03:48:32] <demsh> mathe8787: something like this https://stackoverflow.com/questions/27240018/pyqt-qapplication-abouttoquit
[03:48:40] <altendky> mathe8787: qtrio and a context manager `:]`  but here, yeah, i guess the `aboutToQuit` signal as demsh mentions.  i would likely make the event an attribute of the worker class, in so much as i would have a worker class.
[03:49:00] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:49:09] <demsh> yeah, it makes more sense than passing it as argument
[03:49:20] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[03:49:34] *** lukedashjr is now known as luke-jr
[03:49:47] <altendky> if you are going to have a class
[03:49:51] <mathe8787> here is the code that I started with: https://bpa.st/5PFQ
[03:51:16] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:1173:f37b:b763:51ea)
[03:51:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:51:40] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:51:45] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b8d6:1d89:9c85:28ca)
[03:52:11] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[03:53:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:53:27] <mathe8787> altendky so no event being sent into Thread_open()?
[03:53:27] <Sheilong> SnoopJ: that's kind of cumbersome if in every project I'd need to do that just to be able to importing stuff.
[03:53:37] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:53:41] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[03:54:13] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:54:15] <altendky> mathe8787: it needs to be accessible.  if you are going to have a worker class with a do-the-work method than having the event as an attribute of the worker class instance seems reasonable.  but, that is a bit unrelated to making sure you set the event.
[03:54:45] *** Joins: Moyst_ (~moyst@user/moyst)
[03:54:48] <SnoopJ> Sheilong, I assure you that is is substantially less cumbersome than the way you have been trying to do it, but I don't think you're very open to alternatives here.
[03:55:26] <SnoopJ> Bear in mind that when you do find the answer you want, you will have to communicate it to the end-users who want to reproduce your work, because they will have to know about it too.
[03:55:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:55:52] <mathe8787> altendky so it should be a class attribute?
[03:56:11] <altendky> mathe8787: an instance attribute on the class makes sense to me.
[03:56:23] <altendky> mathe8787: but, that won't affect it working.
[03:57:12] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[03:57:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[03:58:10] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4)
[03:58:52] <nedbat> Sheilong: if you don't mind me asking, how many projects are you envisioning, and how large are they?
[03:59:01] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:59:10] *** Joins: audiobirb (~audio@user/audio)
[03:59:44] <mathe8787> altendky so the purpose of the event is what exactly?
[03:59:53] <Sheilong> nedbat: Two projects for while. They aren't that large.
[04:00:05] <nedbat> Sheilong: and who are you distributing them to?
[04:00:15] <altendky> mathe8787: so the main thread can tell the worker thread that it should stop
[04:00:22] <nedbat> Sheilong: are they public online if we wanted to take a look at the source?
[04:00:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[04:00:56] <Sheilong> SnoopJ: I am open to any alternative. I will read the last link you sent to me, however, I am quite confused with so much information at once lol.
[04:00:58] <mathe8787> altendky and this main thread comes from the program exiting?
[04:01:00] <altendky> mathe8787: in some way they both need access to the event object.  the main thread will `.set()` the event when it wants the thread to stop.  the worker thread will check `.is_set()` and then stop itself when the event is set.
[04:01:09] *** Quits: m0nk3yc0wb0y (~andyduckw@c-76-28-161-181.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[04:01:20] <altendky> mathe8787: the main thread is just where all the code that you don't ask to be run in another thread is being run
[04:01:26] <altendky> mathe8787: where all your gui stuff is
[04:01:40] <Sheilong> nedbat: I intend to make it for public. The project will be put in
[04:01:47] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:01:49] <mathe8787> altendky ok but there is no other thread in DesignerMainWindow()
[04:02:10] <mathe8787> the main thread is just implicit?
[04:02:23] <demsh> with multithreaded programs every time you decide that you program has to start a new thread you have to know when this thread stops, as creation of thread is explicit so must be explicit thread exit
[04:02:56] <altendky> mathe8787: code runs in a thread.  when your program launches a thread is created and your code is run in it.  you may or may not then to create other threads as well.
[04:03:01] <demsh> main thread is implicit yes, thread, which executes "if __name__ == '__main__'" is main thread
[04:03:07] <altendky> mathe8787: the main thread is implicit, sure.
[04:03:25] <altendky> well, it's unrelated to `__name__`, but ...
[04:03:52] <Sheilong> production. For now, I just created a standard project directory with Cookiecutter. But I have to tell you I really don't know how to make a real python project since I always avoided creating a one because I find it too complicated to get import stuff working.
[04:04:10] <mathe8787> altendky demsh so I need to first set the event in the main thread
[04:04:26] <altendky> mathe8787: you set it when you want the worker thread to terminate
[04:04:34] <demsh> event is essentially a bool which can be shared among several threads safely
[04:04:46] <demsh> when you need to set the bool depends on what you want to signal with this bool
[04:04:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:04:58] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 260 seconds)
[04:05:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:05:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:05:47] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[04:06:25] <SnoopJ> Sheilong, and we are telling you that you have chosen the overwhelmingly-more-complicated solution to your original problem.
[04:06:30] *** Lord_of_Life_ is now known as Lord_of_Life
[04:06:36] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 245 seconds)
[04:06:54] *** Joins: Wulf (~Wulf@user/wulf)
[04:06:55] <SnoopJ> Packaging can be a bit of a big bite at first, but it saves you a lot of headaches in the long picture.
[04:07:28] <SnoopJ> And for projects written in strictly Python, it's pretty straightforward
[04:07:32] <Sheilong> SnoopJ: I agree. I just don't see how is it correct to package a project that can't import.
[04:07:45] <mathe8787> ok so here: https://bpa.st/LBQQ
[04:07:54] <SnoopJ> Sheilong, I don't understand what the premise is based on since you *haven't* packaged your project.
[04:08:23] <mathe8787> altendky demsh then setting it in if __name__ == "__main__": is correct?
[04:09:02] <SnoopJ> Sheilong, the point of installable packages is to put the relevant modules in the right place so that they *are* importable when running the interpreter that installed them.
[04:09:51] <Sheilong> SnoopJ: A single update on one of those files would have to do a pip upgrade, right?
[04:09:56] <demsh> considering aboutToQuit() Qt signal i'd wrap Event.set() in a function and submit it to Qt like here https://stackoverflow.com/questions/27240018/pyqt-qapplication-abouttoquit
[04:09:58] <SnoopJ> Sheilong, not if you use an editable install
[04:12:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:12:18] *** Joins: zebrag (~chris@user/zebrag)
[04:12:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:15:20] *** Quits: vukky (~vukky@wikipedia/vukky) (Read error: Connection reset by peer)
[04:15:32] <altendky> mathe8787: as mentioned, your `if __name__` (that i mostly avoid having anyways) is only run if you run your `main.py` file directly, not if you run `start.py`
[04:15:53] <nedbat> Sheilong: i think you are saying, "my code can't be imported, why would I bother to package it?"
[04:16:04] <nedbat> Sheilong: we are saying, the way to make it importable is to package it.
[04:16:09] *** Joins: zebrag (~chris@user/zebrag)
[04:16:09] <SnoopJ> +1
[04:16:18] <mathe8787> altendky ah ok, then it's useless.
[04:16:27] <nedbat> Sheilong: can you give us a link to the code?
[04:17:21] <mathe8787> demsh
[04:18:18] <mathe8787> altendky so if I just do this: https://bpa.st/URMA
[04:18:31] <mathe8787> this sets the event
[04:18:49] <altendky> mathe8787: that looks better in the sense that it's in a place that sounds like it will run.
[04:18:59] <altendky> mathe8787: you should also `.join()` the thread
[04:19:08] <altendky> after setting the event you wait for the thread to end.
[04:19:39] <altendky> which plays into this event being created at an oddly high level
[04:20:05] <mathe8787> altendky but that code sets the event, right?
[04:20:14] <mathe8787> also correctly?
[04:20:22] <mathe8787> or do you recommend it somewhere else?
[04:20:23] <altendky> mathe8787: yes, it looks like it could be functional
[04:20:40] <demsh> or like that, make Qt to call it https://bpa.st/RJJQ
[04:20:44] <mathe8787> altendky .join as from what i read is what closes the thread right?
[04:20:53] <demsh> but it's not that different
[04:20:53] <altendky> mathe8787: it waits for the thread to close
[04:21:09] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:21:11] <demsh> t.join() blocks until thread t dies
[04:21:27] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:21:29] <demsh> it's a way for threads to wait for each other
[04:21:32] <mathe8787> altendky but what closes the thread? thats the whole issue here right
[04:21:40] <demsh> only thread can kill itself
[04:21:54] <demsh> if thread doesn't do that then nothing closes the thread
[04:22:04] <altendky> mathe8787: the thread terminates either when it decides to stop running (return from the function you passed to `target=`) or the os kills it
[04:22:29] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b8d6:1d89:9c85:28ca) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[04:22:30] <altendky> mathe8787: so you generally notify the thread that it should close using whatever mechanism the code running in the thread provides for that, then you should confirm that it really has closed.
[04:23:00] <altendky> mathe8787: given this is a gui perhaps you should https://docs.python.org/3/library/threading.html#threading.Thread.is_alive in some periodic async manner instead of https://docs.python.org/3/library/threading.html#threading.Thread.join
[04:23:35] <altendky> mathe8787: in this case we are suggesting that the code in the thread monitor the `Event`, as you have coded it to
[04:23:44] <altendky> for the 'notify the thread' bit
[04:23:54] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[04:24:11] <mathe8787> ok i need to spend some time reading more up on how to do this
[04:24:18] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:24:20] <altendky> mathe8787: i think you have it.  does it not work?
[04:24:29] <mathe8787> no it doesnt
[04:24:32] <altendky> i mean, the design isn't quite what i would do, but i think you have the pieces there.
[04:24:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:35] *** Leonarbro_ is now known as Leonarbro
[04:24:44] <altendky> mathe8787: can you share the full code and what happens?
[04:24:50] <altendky> and how you run it and full output and so on...
[04:25:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:25:12] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[04:27:26] *** Quits: mallkrampus (~mallkramp@148.72.164.122) (Ping timeout: 245 seconds)
[04:27:35] *** Quits: freeman_h (~freeman_h@94.0.217.120) (Read error: Connection reset by peer)
[04:27:50] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[04:29:31] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[04:30:04] *** Joins: xardas (~xardas@149.233.51.127)
[04:30:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[04:31:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:53] *** Joins: brabrax (~brabrax@user/brabrax)
[04:33:21] <mathe8787> altendky here it is: https://bpa.st/QTSA
[04:33:31] <mathe8787> a gui pops up as well
[04:34:19] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:34:59] <altendky> mathe8787: `run_app()` doesn't actually run the app, right?
[04:35:08] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[04:35:57] <altendky> but it does start the worker thread
[04:36:05] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:36:45] <altendky> mathe8787: i'm not clear what all the 'reuse app' stuff is about
[04:37:48] <altendky> mathe8787: i guess add some prints in start.py so we can see what runs when.  and also in the cleanup()
[04:37:49] <mathe8787> altendky i think app in run_app runs the app
[04:38:12] <mathe8787> altendky i also dont understand what reuse app does /why its there
[04:38:43] <altendky> mathe8787: app.exec_() runs the app
[04:39:01] <altendky> mathe8787: so you started with some existing code?
[04:39:14] <mathe8787> yes
[04:39:19] <altendky> huh, just realized it actually was intended for py2 at some point...
[04:39:30] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[04:39:34] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:39:39] <altendky> uhm, and `from .tools.qt import QtCore`...  huh
[04:39:54] <mathe8787> yea that was one of my tasks was to make it py3 compatible
[04:40:01] <altendky> mm
[04:40:45] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[04:41:00] <demsh> I'm defintely missing something basic but I don't understand why workers don't stop after the queues get empty here  https://bpa.st/DUYA I don't use multiprocessing.Pool because I want to write work result as it's ready not after all workers are finished
[04:41:44] <bjs> demsh: why do you expect ValueError
[04:41:45] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 250 seconds)
[04:41:48] <demsh> and I run it on python 3.9.8 so multiprocessing.Queue has to throw ValueError if it's closed https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue.get
[04:41:53] <bjs> ah
[04:42:07] <demsh> if I use timeout in get then it works but timeout is hacky
[04:42:07] *** Joins: mallkrampus (~mallkramp@148.72.164.119)
[04:42:16] <demsh> although practical if I put like 60 timeout
[04:42:25] <demsh> and multiprocessing is used because work is CPU intensive
[04:42:46] <demsh> but I don't understand why it deadlocks in the end
[04:43:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[04:44:47] <demsh> oops, this is correct code for reproduction https://bpa.st/2A7A
[04:45:06] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 260 seconds)
[04:45:25] <bjs> demsh: you close on one side but not the other
[04:45:42] <demsh> oh, it has to be closed from both sides?
[04:45:57] <bjs> demsh: normally you wouldn't really need to close it at all
[04:46:20] <bjs> demsh: the usual way to communicate is to send some kind of message (e.g. sending None) to signify end, so it can clean up itself
[04:46:28] <demsh> so I have to use multiprocessing.Event then
[04:46:36] <demsh> hm, or none
[04:46:53] <bjs> demsh: well a Queue really represents a channel of communication, on which you are sending messages
[04:47:00] <bjs> so just send a "I'm done now" message of some kind :)
[04:47:10] <demsh> yeah, I had wrong assumption that closing it from one side closes it for other one
[04:47:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:47:38] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:48:35] <mathe8787> altendky here is the prints: https://bpa.st/WZBQ
[04:49:07] <mathe8787> altendky the last to lines "signal_exit.set()  None" happen after i close out the gui
[04:49:11] <mathe8787> two*
[04:49:36] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[04:49:39] *** Joins: fikran (~fikran@user/fikran)
[04:50:04] <altendky> mathe8787: best to share the full code every time.  note that you can click repaste on an existing paste to avoid having to create and name all the files each time.
[04:50:51] <altendky> mathe8787: main.run_app(signal_exit) can't be running for the code in https://bpa.st/QTSA since `run_app` doesn't accept a parameter.
[04:50:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[04:51:17] *** Quits: y1n (~y1n@178.115.43.136.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[04:51:21] <altendky> mathe8787: and you seem to have some directory structure.
[04:53:07] <mathe8787> altendky ok here it is : https://bpa.st/P3YQ
[04:53:11] <mathe8787> thanks btw for the tips
[04:53:27] <demsh> bjs: hm, behaviour remained the same https://bpa.st/HR6Q
[04:53:38] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:54:31] <demsh> probably better to use multiprocessing.Event for this
[04:54:48] <altendky> mathe8787: you might be stuck in the inner `while True:` in the `work()` method
[04:56:03] <mathe8787> altendky i tried the code             if signal_exit.is_set():
[04:56:03] <mathe8787>                 return there too but the thread still doesnt close
[04:56:14] <altendky> mathe8787: add prints and figure out where it is
[04:56:32] <mathe8787> altendky figure what where is
[04:57:56] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:58:14] <altendky> mathe8787: the code is running.  figure out which bit
[04:58:21] <altendky> mathe8787: put prints all over and see which ones you get
[04:59:56] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[05:00:35] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[05:00:40] *** Joins: naranja (~orange@user/orangeboxcutter)
[05:01:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[05:01:41] <mathe8787>  altendky wait it cannot be in the second while loop because no files have been added
[05:01:50] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:01:51] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[05:02:08] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:02:31] <altendky> mathe8787: is it waiting on the `self._q.get()`?
[05:02:38] <altendky> anyways, add prints
[05:02:50] <mathe8787> altendky yes it is
[05:02:52] <Sheilong> nedbat: I haven't uploaded it yet. I have two python's file only. I am using the Cookiecutter structure for my project.
[05:02:59] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Quit: stewie925)
[05:03:00] *** Joins: Moyst_ (~moyst@user/moyst)
[05:03:00] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:03:38] <altendky> mathe8787: welp, blocking calls are....  no fun.  let's go with that.
[05:04:10] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[05:04:24] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Read error: Connection reset by peer)
[05:04:26] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:04:39] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[05:04:45] <nedbat> Sheilong: put it on GitHub or someplace, and people can help
[05:04:57] <mathe8787> altendky what i dont understand is that there should be a loop of test1 test1 test1... since its in the first while loop
[05:05:07] <demsh> so first one deadlocks after queues get empty and second one correctly finishes after queues get empty for 10 seconds https://bpa.st/X3SA
[05:05:10] <mathe8787> ah wait
[05:05:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:05:23] <altendky> mathe8787: not if it is waiting on `self._q.get()`
[05:05:33] <altendky> (more prints `:]`)
[05:05:38] *** Quits: gopar_ (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:07:48] <mathe8787> https://bpa.st/HUIQ
[05:07:55] <meejah> print() is the best debugging tool
[05:08:14] <mathe8787> altendky youre right the test2 doesnt even get touched as its waiting for self_q.get()
[05:08:30] <demsh> i could abuse Pool.map() by crafting a sequence of (work, outq, work, outq, work, outq...) but it's weird to resort to thing like that
[05:08:56] *** Joins: jyu_s (~f0fz@122.11.212.225)
[05:09:00] <demsh> or apply_async
[05:09:31] <altendky> mathe8787: thankfully there's a timeout and then you can loop if you got nothing.  https://docs.python.org/3/library/queue.html#queue.Queue.get
[05:09:57] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[05:10:03] <altendky> at the end of the day, when you try to do multiple things in sync code you just end up writing (many of) your own event loop(s)
[05:10:21] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[05:11:14] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[05:11:55] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[05:13:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:13:32] <mathe8787> altendky doesnt blocking block the event loop?
[05:13:47] <mathe8787> doesnt queue block*
[05:13:51] <demsh> yeah, this code is much simpler and behaves as I expect https://bpa.st/BAKA but still I don't quite get how to correctly use multiprocess.Queue
[05:13:52] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[05:14:05] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[05:14:06] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[05:14:07] *** Quits: flokuehn_ (~flokuehn@87.123.247.67) (Ping timeout: 265 seconds)
[05:14:30] <demsh> i'll just convert to Pool then
[05:15:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Client Quit)
[05:15:39] <mathe8787> altendky what do you mean if i got nothing
[05:15:40] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[05:15:41] *** Joins: flokuehn (~flokuehn@87.123.247.93)
[05:16:05] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:18:19] *** Joins: Fiji_ (~Fiji@user/fiji)
[05:18:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Client Quit)
[05:18:42] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[05:18:47] *** Joins: jyu_s (~f0fz@122.11.212.225)
[05:19:57] <altendky> mathe8787: you're in the thread there
[05:20:01] <altendky> *other thread
[05:20:06] <altendky> there's no event loop in that thread
[05:20:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:20:33] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[05:20:39] <altendky> mathe8787: but, you are waiting until something enters the queue.  no other code will run until there's something to get out of the queue.  including detecting that you are supposed to return from that function to end that thread.
[05:20:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:21:16] <mathe8787> altendky ah gotcha
[05:21:28] <altendky> mathe8787: so, you need to pass a timeout to the queue get method and then check if you got anything.  then check if the exit event is set.  if so, exit.  if not, and you didn't get anything from the queue, then check the queue again.
[05:21:34] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[05:23:23] *** Joins: JAA (~JAA@user/jaa)
[05:24:32] <mathe8787> should that go in the while loop?
[05:24:36] <mathe8787> altendky
[05:24:50] <mathe8787> ah wait sorry
[05:25:02] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:25:15] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:25:31] <altendky> mathe8787: the `self._q.get()` needs to be replaced with a set of code that will occasionally check if it should stop
[05:25:46] <mathe8787>  event = self._q.get(timeout = 1)
[05:25:48] <altendky> where 'occasionally' might be...  every 100ms or something
[05:25:49] <mathe8787> I tried that
[05:26:40] <altendky> you probably end up with an exception because either the timeout induces one or you get `None` out of the get call or something.
[05:26:43] <altendky> it takes more than just the timeout
[05:26:57] <mathe8787> yes thats what i got :D
[05:27:02] <altendky> you have to know if it was a timeout or not and then decide what to do
[05:27:14] <Sheilong> SnoopJ: Do you know any simple tutorial that teaches from creating a basic python project up to packaging it?
[05:27:25] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[05:27:53] <mathe8787> how to figure out if it was a timeout?
[05:28:25] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[05:28:30] <altendky> mathe8787: https://docs.python.org/3/library/queue.html#queue.Queue.get "If timeout is a positive number, it blocks at most timeout seconds and raises the Empty exception if no item was available within that time."
[05:28:50] <mathe8787> ah ok i can maybe to a try
[05:28:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:29:07] <mathe8787> do*
[05:30:12] <mathe8787> so another while true and a try/except?  thats what im thinking
[05:30:16] <mathe8787> altendky
[05:30:55] <altendky> mathe8787: that's the most explicit option, yep.  could also optionally reuse the outer `while True:` via a `continue`.
[05:31:00] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:31:26] *** Joins: Viewday11 (~Viewday@user/viewday)
[05:32:19] <SnoopJ> Sheilong, https://packaging.python.org/tutorials/packaging-projects/ is the official one and it's good. Maybe a little more detail than strictly necessary, but if you read the whole thing, you will have a really good foundation for packaging.
[05:32:42] <mathe8787> altendky swap whileTrue for continue?
[05:33:01] <altendky> mathe8787: just write another while loop to start
[05:33:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:33:56] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[05:34:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[05:34:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:34:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:35:13] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:35:34] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Read error: Connection reset by peer)
[05:35:35] <mathe8787> https://bpa.st/R4RA
[05:35:59] <mathe8787> altendky this is obviously wrong but i added a while loop and a continue
[05:36:10] <altendky> mathe8787: forget the continue for now
[05:36:11] *** Quits: sharperguy (~sharpergu@89.244.127.84) (Ping timeout: 245 seconds)
[05:36:39] <mathe8787> ok
[05:37:21] *** Joins: vlm (~vlm@user/vlm)
[05:37:59] *** Joins: sharperguy (~sharpergu@88.130.217.96)
[05:38:02] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[05:38:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Client Quit)
[05:38:30] <JAA> Hi, I have an question about environment markers in requirements.txt. I'm trying to pin a package to different versions depending on the Python version. Specifically, I need pytest==4.6.11 for Python 2, pytest==6.1.2 for Python 3.5, and pytest==6.2.5 (current version) for Python 3.6+. I found a working solution for this, but my question is why this doesn't work:
[05:38:35] <JAA> https://transfer.archivete.am/inline/N0h7G/requirements.txt  This works fine on Python 3.5+ but fails on Python 2.7 with: ERROR: Double requirement given: pytest==6.1.2 (from -r tests/requirements.txt (line 4)) (already in pytest==4.6.11 (from -r tests/requirements.txt (line 3)), name='pytest')
[05:39:11] *** Joins: jyu_s (~f0fz@122.11.212.225)
[05:39:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:40:12] *** Quits: Elzington (~Elzington@68.235.43.172) (Remote host closed the connection)
[05:40:47] <altendky> JAA: what is the form that works?
[05:40:50] <JAA> To be more precise, that error is what I'm getting as tox runs inside GitHub Actions. I haven't had Python 2 installed on any of my machines in a while.
[05:41:06] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[05:41:47] <JAA> altendky: pytest==6.1.2; python_version == '3.5'  as the second line. I don't actually care about 3.0 to 3.4, so that's fine in this particular case for now.
[05:43:10] <altendky> JAA: i don't know.  might be an old version of pip in the 2.7 virtualenv.  either doesn't support that or had a bug or such, perhaps.
[05:43:13] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7000:25c5:974b:70b0)
[05:43:23] *** Joins: zebrag (~chris@user/zebrag)
[05:43:27] *** Joins: jyu_s (~f0fz@122.11.212.225)
[05:43:33] <altendky> JAA: i know i had some issues getting tox to update pip properly but that was with tox 3.  i haven't done much with tox 4 yet
[05:44:07] <JAA> Yeah, since this is inside GitHub Actions, I'm not entirely sure about the env details. They list pip 20.0.2 in some place though.
[05:44:30] <JAA> And there is a warning about Python 2 support being dropped in 21.0, so it should be fairly recent.
[05:44:36] <altendky> JAA: use the working form and then within the tox environment commands do `pip --version`
[05:45:09] <altendky> but also expect pain dealing with py2 at this point
[05:45:16] *** Joins: jrr (~jam@2001:19f0:5801:9ee:5400:2ff:fec7:76b9)
[05:45:24] <altendky> it is only the py2 env that fails?
[05:46:07] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[05:47:28] <JAA> Yeah, I've been trying to get the maintainer of this package to drop Py2 support altogether, but he wants to release one final compatibility version, and for that, I'm trying to fix the test suite which is horribly broken as it stands. :-|
[05:47:46] <JAA> Yes, only the 2.7 env fails, 3.5 through 3.10 are fine.
[05:48:16] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 245 seconds)
[05:48:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[05:50:18] *** moose` is now known as moose
[05:52:21] <JAA> altendky: pip 20.3.4
[05:52:29] <mathe8787> altendky what should this whileloop do?
[05:52:29] <JAA> Good to know that GitHub's own docs are useless on that.
[05:52:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[05:52:44] <mathe8787> getting the same error of course
[05:56:20] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[05:59:11] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 268 seconds)
[05:59:14] <altendky> mathe8787: i suggested checking in the tox-created env.  that doesn't necessarily have anything to do with what github provides
[05:59:42] <altendky> err, JAA ^
[06:00:02] *** Joins: Elzington (~Elzington@68.235.43.172)
[06:00:02] <altendky> mathe8787: can you explain in english what we're trying to change about this get call?
[06:00:21] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[06:00:51] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Ping timeout: 250 seconds)
[06:01:12] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:01:43] *** Joins: qpdb (~qpdb@user/qpdb)
[06:01:57] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[06:02:26] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:02:34] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:02:47] <JAA> altendky: Oh yeah, I missed that this config is using actions/setup-python for the test env setup, so I guess that might be where the newer pip comes from.
[06:02:51] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:02:56] *** brabrax_ is now known as brabrax
[06:03:03] *** Joins: Moyst_ (~moyst@user/moyst)
[06:03:19] <altendky> JAA: if you are using tox and this is what tox is installing in the env it creates then even actions/setup-python doesn't necessarily relate
[06:03:40] <altendky> JAA: at that point, what is in the virtualenv is whatever tox put there or updated it to
[06:05:34] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:05:39] <JAA> Would tox silently install a different version of pip? Because pip is used to install tox in the first place, and I don't see anything in the log on the tox invocation about an installation of pip.
[06:05:42] *** Joins: guenhael1 (~Thunderbi@2a01cb008c3d5800b5470f91b5c939c2.ipv6.abo.wanadoo.fr)
[06:05:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[06:06:06] <altendky> JAA: tox generally creates a virtualenv.  something has to put tox in that env.
[06:06:07] *** Quits: Elzington (~Elzington@68.235.43.172) (Remote host closed the connection)
[06:06:24] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Read error: Connection reset by peer)
[06:06:24] *** guenhael1 is now known as guenhael
[06:06:29] <JAA> Hmm, right.
[06:06:30] *** Joins: Elzington (~Elzington@68.235.43.172)
[06:06:33] <altendky> what it puts in need not have any relationship to what is outside
[06:06:42] <JAA> Yeah, makes sense.
[06:06:57] <altendky> historically, virtualenv generally updated by default on creation
[06:07:27] <altendky> been awhile since i was careful about the details though and the last time i was i ran into the nuanced issues in tox3 relating to controlling some of these versions
[06:08:34] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[06:10:02] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[06:11:31] <JAA> Just tested the same syntax in a Python 3.6 environment with pip 20.3.4 and 21.3.1 (python_version adjusted accordingly, of course), works fine there.
[06:12:05] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[06:12:06] <JAA> I.e. it ignored the second line as it should:  Ignoring pytest: markers 'python_version >= "3.8" and python_version < "3.10"' don't match your environment
[06:12:59] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[06:13:16] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 245 seconds)
[06:14:53] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[06:15:38] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[06:16:09] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: dtg01100)
[06:17:45] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Ping timeout: 250 seconds)
[06:18:05] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[06:19:05] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) ()
[06:21:17] *** Quits: klu (~klu@user/klu) (Quit: .)
[06:21:25] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[06:21:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:22:15] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[06:25:57] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:26:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:26:33] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:27:02] *** Quits: millido_ (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:30] *** Joins: djapo (~archangel@user/djapo)
[06:27:52] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:30:06] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[06:32:32] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:33:28] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[06:35:37] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:36:07] *** Joins: stewie925 (~stewie925@76-216-148-100.lightspeed.sntcca.sbcglobal.net)
[06:36:25] *** Quits: stewie925 (~stewie925@76-216-148-100.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[06:36:35] *** Joins: Elzington (~Elzington@68.235.43.172)
[06:38:01] *** Quits: emf (~emf@2620:10d:c090:400::5:2b81) (Ping timeout: 268 seconds)
[06:38:15] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[06:38:56] *** Joins: millido (~millido@84.210.150.128)
[06:39:08] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[06:39:41] *** Joins: stdout (~stdout@50.115.240.121)
[06:39:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[06:40:42] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Client Quit)
[06:41:18] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 260 seconds)
[06:43:34] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:46:47] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:49:44] *** Joins: stpz (~stpz@240e:341:22ea:3100:4cd6:3377:b929:42ae)
[06:51:11] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:52:32] *** Quits: flokuehn (~flokuehn@87.123.247.93) (Ping timeout: 240 seconds)
[06:53:04] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:53:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:54:20] *** Joins: flokuehn (~flokuehn@87.123.247.61)
[06:55:51] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:56:30] *** Joins: pycurious (~Adium@user/pycurious)
[06:57:01] <pycurious> poetry: - scipy requires Python >=3.7,<3.11, so it will not be satisfied for Python >=3.11,<4.0.0 (my project just requires >= 3.8.0) - am i doing something wrong?
[06:57:01] *** Quits: NeoCore (~neocore@160.238.38.31) (Quit: Leaving)
[06:57:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:57:09] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:58:59] *** Joins: fikran (~fikran@user/fikran)
[06:59:03] *** Quits: stpz (~stpz@240e:341:22ea:3100:4cd6:3377:b929:42ae) (Quit: Client closed)
[06:59:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:00:21] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[07:00:21] *** Quits: mallkrampus (~mallkramp@148.72.164.119) (Ping timeout: 245 seconds)
[07:00:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:00:54] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[07:01:06] *** Quits: onichomp (~onichomp@2806:264:4404:8039:13c:1f90:3fd4:3639) (Read error: Connection reset by peer)
[07:01:45] *** Joins: onichomp (~onichomp@2806:264:4404:8039:13c:1f90:3fd4:3639)
[07:02:03] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[07:02:49] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[07:03:08] *** Joins: Moyst_ (~moyst@user/moyst)
[07:03:17] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[07:03:50] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[07:03:55] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[07:05:02] <JAA> altendky: Turns out I simply fucked up my git commit. Rumour has it that doing git add, then further editing a file, then committing (without -a) doesn't commit those further edits... *facepalm* The syntax works perfectly fine, as one would expect. I had only `pytest==6.1.2; python_version < '3.6'` on the second line by mistake, so the error was entirely correct. :-)
[07:05:38] <altendky> JAA: `:]`  glad you got it explained.  and that you can do it how you want.
[07:06:55] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:c531:2987:8b9a:7586) (Ping timeout: 250 seconds)
[07:07:00] *** Quits: stdout (~stdout@50.115.240.121) (Ping timeout: 268 seconds)
[07:07:09] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800b5470f91b5c939c2.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[07:07:58] *** Joins: stdout (~stdout@50.115.240.121)
[07:08:31] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:08:41] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[07:08:45] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[07:10:36] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[07:10:47] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:12:42] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[07:13:02] *** Joins: Elzington (~Elzington@68.235.43.172)
[07:13:10] *** Quits: stdout (~stdout@50.115.240.121) (Ping timeout: 268 seconds)
[07:14:35] *** Joins: mallkrampus (~mallkramp@148.72.164.122)
[07:15:08] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:15:13] *** Joins: stdout (~stdout@50.115.240.121)
[07:17:29] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[07:18:37] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:18:39] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:18:41] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 245 seconds)
[07:18:51] *** Joins: pycurious (~Adium@user/pycurious)
[07:18:57] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[07:19:30] *** Quits: dre (~dre@2001:8003:c932:c301:5609:7507:d2a0:8e2b) (Ping timeout: 260 seconds)
[07:19:39] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[07:20:00] *** Joins: kevr (~kevr@user/kevr)
[07:20:58] *** Quits: stdout (~stdout@50.115.240.121) (Ping timeout: 260 seconds)
[07:22:01] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:22:04] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:24:42] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[07:25:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:25:32] *** Joins: willow (~willow@bay.systems)
[07:26:02] <willow> i'm trying to do something like this:  if os.path.isdir(Path.home()/.vim)
[07:26:10] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:26:35] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 256 seconds)
[07:26:42] <FunkyBob> willow: surely / '.vim'  ?
[07:26:45] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[07:26:57] *** Joins: Vonter (~Vonter@user/vonter)
[07:27:06] *** Quits: yossarian (~yossarian@user/yossarian) (Quit: And then he took off.)
[07:29:10] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[07:29:12] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[07:30:43] <willow> FunkyBob: dank1
[07:30:46] <willow> !
[07:31:11] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Client Quit)
[07:31:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[07:33:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[07:34:44] <willow> is there a way to condense this code: if os.path.isdir(Path.home()/'.vim') :  searchpaths.append(os.path.isdir(Path.home()/'.vim')     ?
[07:35:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:35:28] <Repiphany> Walrus
[07:35:38] <willow> ah ok
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:34] <Repiphany> Not sure why you want to append a bool to searchpaths though
[07:39:01] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[07:39:20] <willow> eiks yes
[07:40:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[07:41:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[07:42:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:43:06] <willow> can this be walrused?  if os.path.isdir(Path.home()/'.vim') :  searchpaths.append(Path.home()/'.vim')     ?
[07:43:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[07:43:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[07:43:56] <KirkMcDonald> willow: if os.path.isdir(d := Path.home()/'.vim'): searchpaths.append(d)
[07:45:31] *** Joins: Elzington (~Elzington@68.235.43.172)
[07:46:38] *** Joins: mihael (~mihael@49.145.40.69)
[07:46:43] <altendky> `Path.home().joinpath(".vim").is_dir()`?
[07:47:18] <KirkMcDonald> True, probably more sensible to just use pathlib across the board.
[07:47:20] <altendky> well, not for the dedupe part, but for the `os.path` and `pathlib` part
[07:47:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[07:48:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[07:48:16] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[07:48:22] <KirkMcDonald> if (d := Path.home().joinpath(".vim")).is_dir(): searchpaths.append(d)
[07:48:23] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:48:54] <willow> cool thank you!
[07:49:14] <altendky> i think an extra line for that is fine as well `:]`
[07:49:50] <altendky> at that point you are only "rewriting" `d` but you can avoid a `:`, `(`, and `)`
[07:50:23] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 256 seconds)
[07:51:00] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[07:51:36] <willow> yes i prefer the original actually
[07:52:32] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[07:53:06] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[07:53:26] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 246 seconds)
[07:53:34] *** Joins: Elzington (~Elzington@68.235.43.172)
[07:54:30] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Ping timeout: 260 seconds)
[07:55:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[07:56:13] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[07:56:17] <altendky> willow: well, assign to a variable first, then just reference the variable in both the `if` and the conditional `.append()`
[07:56:57] *** Quits: Jong (~Jong@174.27.0.61) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:57:01] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[07:57:11] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[07:57:51] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 250 seconds)
[07:58:35] *** Parts: mihael (~mihael@49.145.40.69) ()
[07:59:47] *** Quits: sreve (~quassel@p4ff44a93.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:00:09] *** Joins: sreve (~quassel@p4ff44a43.dip0.t-ipconnect.de)
[08:00:22] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:01:07] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[08:01:09] *** Joins: lethu (~lethu@user/lethu)
[08:02:17] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[08:03:16] *** Joins: Moyst_ (~moyst@user/moyst)
[08:03:25] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[08:03:34] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[08:03:46] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[08:04:42] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:04:49] <willow> if vimhomepath :  searchpaths.append(vimhomepath)      Can that be walrused?
[08:05:30] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[08:05:36] *** Quits: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58) (Ping timeout: 268 seconds)
[08:05:56] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0)
[08:06:10] *** Joins: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[08:09:13] *** Joins: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com)
[08:10:21] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[08:11:58] <willow> ah found this https://stackoverflow.com/a/59780160/4692952
[08:12:29] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[08:12:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:353d:d741:9dee:63e0) (Quit: Client closed)
[08:13:47] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[08:14:11] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[08:14:53] *** Joins: fstd (~fstd@xdsl-87-79-98-69.nc.de)
[08:15:22] <altendky> willow: why are you trying to 'walrus' it?  what's the bigger context?
[08:16:00] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[08:16:17] *** Joins: djapo (~archangel@user/djapo)
[08:16:48] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[08:17:44] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:17:50] *** Joins: sgn (~sgn@user/sgn)
[08:17:50] *** Quits: jrr (~jam@2001:19f0:5801:9ee:5400:2ff:fec7:76b9) (Quit: WeeChat 3.3)
[08:18:46] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[08:19:18] *** Quits: mallkrampus (~mallkramp@148.72.164.122) (Ping timeout: 260 seconds)
[08:19:44] <willow> ah i got it with 2 lines:  vimUD = Path.home().joinpath('.vim')   if tmp := vimUD: searchpaths.append(tmp)
[08:19:52] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[08:20:03] <willow> you are right walrusing it doesn't really make it that much more succinct
[08:20:31] <willow> if vimUD : searchpaths.append(vimUD)    is a little more clear than the second line above
[08:20:57] *** Quits: slowButP1esent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:21:36] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[08:23:03] *** Quits: DaNeenja1 (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[08:23:28] <willow> define - test - assign
[08:24:00] *** Joins: l4yer (~l4yer@2a07-a880-3101-1051-649b-e893-926b-2a0e.pool6.ovpn.com)
[08:24:17] <altendky> willow: way clearer, the walrus just provided a second name with more complicated syntax
[08:25:41] <altendky> at least with the provided code
[08:25:50] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 260 seconds)
[08:27:43] *** coc0nut_ is now known as coc0nut
[08:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:38] *** Joins: mallkrampus (~mallkramp@148.72.164.127)
[08:32:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[08:35:59] *** foxbox is now known as hhhh
[08:39:56] *** Quits: l4yer (~l4yer@2a07-a880-3101-1051-649b-e893-926b-2a0e.pool6.ovpn.com) (Ping timeout: 245 seconds)
[08:41:24] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[08:42:01] *** Joins: djapo (~archangel@user/djapo)
[08:43:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:44:04] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:45:00] *** Joins: pycurious (~Adium@user/pycurious)
[08:45:46] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 245 seconds)
[08:46:44] *** Joins: jim (~jim@about/linux/staff/jim)
[08:51:40] <altendky> Can we hint that exactly one of two attributes of a class is `None`?  I imagine it being kind of like function overloads, sort of.  I think mandating immutability makes it more plausible.  https://github.com/Chia-Network/clvm/blob/main/clvm/SExp.py#L128-L132
[08:52:08] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[08:52:22] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:53:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:54:59] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[08:56:47] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[08:56:53] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[08:56:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:57:40] <phy1729> Exactly one or at least one?
[08:57:44] *** Joins: diamondbond (~diamondbo@175.157.188.250)
[08:58:28] <phy1729> Either way kinda sounds like you should have one parameter and pick it apart with isinstance instead of two parameters
[08:58:40] <phy1729> er attributes not parameters
[08:58:50] <altendky> Exactly one
[08:59:13] *** Quits: diamondbond (~diamondbo@175.157.188.250) (Client Quit)
[08:59:17] <phy1729> So it's a union type
[08:59:47] <altendky> Mm, or two attributes but one defines whether the other is an atom or pair
[09:00:14] <altendky> I did start coding up a union yeah, but the actual class doesn't satisfy the union of two protocols
[09:00:57] <altendky> But, I'm pretty unlikely to change the attribute meanings at this point
[09:01:34] <phy1729> You could also have two subclasses of SExp
[09:01:48] <altendky> So I'll probably just have to union all the actual classes that satisfy this interface and give up on a protocol
[09:01:50] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:8dc1:3a5d:747d:63fc) (Quit: Leaving)
[09:02:11] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 250 seconds)
[09:02:21] <altendky> Yeah, two subclasses seem similarly intrusive probably
[09:02:50] *** Joins: bonestormii_ (~bonestorm@139.60.220.3)
[09:03:06] *** Joins: Moyst_ (~moyst@user/moyst)
[09:04:06] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[09:04:11] *** Joins: rpkilby_ (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[09:06:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:06:28] *** Joins: kdc (~kdc@196.211.197.159)
[09:08:18] <bonestormii_> anyone ever send messages to rsyslog over TCP socket from python with success?
[09:08:19] *** Joins: fikran (~fikran@user/fikran)
[09:08:20] <altendky> I guess I should call it a win just that mypy does now support recursive hints.  Otherwise all would be lost here entirely.
[09:08:52] *** Joins: TuckerBrandy1997 (~TuckerBra@209.161.248.138)
[09:09:55] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:10:36] <TuckerBrandy1997> is it possible to search a dict value in a list ?
[09:11:42] <bonestormii_> TuckerBrandy1997: The list is like [{'some_key': 'some_value'}, {'some_other_key': 'some_other_value'}]?
[09:11:59] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[09:12:08] <TuckerBrandy1997> yes
[09:12:44] <bonestormii_> only by iterating over the list and checking the key
[09:12:48] *** Joins: Skyfire (~pyon@user/pyon)
[09:12:51] <TuckerBrandy1997> https://cpy.pt/UspW9gsX
[09:12:53] <TuckerBrandy1997> right here
[09:13:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[09:13:33] *** Joins: pycurious (~Adium@user/pycurious)
[09:13:38] <bonestormii_> you fundamentally have to iterate over the list and check the key if that is the structure.
[09:13:43] <bonestormii_> Can't check the link right now
[09:13:49] <altendky> TuckerBrandy1997: searching by what and wanting what result?
[09:13:55] <TuckerBrandy1997> how would I use something like alist["id"] in <collection>?
[09:14:06] <TuckerBrandy1997> I want to search for the ID field
[09:14:10] <TuckerBrandy1997> and check if there are duplicate
[09:14:16] <TuckerBrandy1997> if there are dup, do not insert_one
[09:14:35] <TuckerBrandy1997> both data are converted to list from mongodb collection
[09:14:44] <altendky> Existing duplicates? Or just if one you are considering inserting is already there?
[09:14:47] <TuckerBrandy1997> sorry i meant one of the data is mongodb collection
[09:15:16] <TuckerBrandy1997> if i am considering inserting
[09:15:29] <TuckerBrandy1997> i show u my code
[09:15:30] <altendky> And do you just want to check presence, or get the value if there?
[09:15:50] *** Joins: abraham (~abraham@143.244.185.86)
[09:16:14] <TuckerBrandy1997> https://dpaste.org/8RWD
[09:16:19] <TuckerBrandy1997> check presence
[09:16:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[09:16:34] <TuckerBrandy1997> like if <i found a dup id in existing list>: do not insert
[09:16:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:17:18] <TuckerBrandy1997> Myfiends is a collection extracted from mongodb
[09:17:43] <altendky> `any(entry.get("id") == id_to_search_for for entry in the_list)`
[09:18:56] *** Joins: l4yer (~l4yer@195.181.170.210)
[09:19:59] <TuckerBrandy1997> trying to understand that line
[09:20:24] <TuckerBrandy1997> so in my case it would be Mydata.get("id") == myFriends.get("id")?
[09:20:32] *** Quits: bonestormii_ (~bonestorm@139.60.220.3) (Quit: Client closed)
[09:21:54] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[09:22:25] *** Joins: nac (~nac@user/nac)
[09:22:32] *** Quits: nac (~nac@user/nac) (Client Quit)
[09:23:08] *** Joins: nac (~nac@user/nac)
[09:24:22] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[09:24:26] <altendky> TuckerBrandy1997: sorry, I'm not clear what's what in your code
[09:26:13] *** Joins: jyu_s (~f0fz@122.11.212.225)
[09:27:40] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[09:27:57] *** dalan62367 is now known as dalan
[09:28:04] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[09:28:18] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[09:28:29] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[09:28:34] *** Joins: jyu_s (~f0fz@122.11.212.225)
[09:29:30] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:35] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[09:30:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[09:32:42] <altendky> TuckerBrandy1997: I hate to do this but it's waayyy past bed time...  If nobody else can get you going feel free to ping me in 8 hours or whatever.
[09:32:43] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[09:34:57] *** Joins: rvalue (~rvalue@user/rvalue)
[09:36:29] <TuckerBrandy1997> sure thanks
[09:38:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:40:30] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:44:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:45:06] *** Joins: Enitin (~Enitin@82.102.22.85)
[09:46:48] *** Joins: yeirr (~yeirr@user/yeirr)
[09:48:28] *** Quits: Moyst_ (~moyst@user/moyst) (Remote host closed the connection)
[09:50:36] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:a378:d036:467f:3986)
[09:54:53] *** Joins: Moyst (~moyst@user/moyst)
[09:55:52] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7000:25c5:974b:70b0) (Read error: Connection reset by peer)
[09:56:13] *** Quits: rpkilby_ (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[09:57:16] *** Quits: ubh (~ubh@user/ubh) (Quit: ZNC 1.8.2 - https://znc.in)
[09:59:57] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:01:33] *** Joins: jyu_s (~f0fz@122.11.212.225)
[10:01:36] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[10:02:13] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 250 seconds)
[10:03:37] *** Joins: Moyst (~moyst@user/moyst)
[10:06:36] *** Joins: han-solo (~hanish@user/han-solo)
[10:07:13] *** Joins: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr)
[10:09:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:09:48] *** Joins: jyu_s (~f0fz@122.11.212.225)
[10:11:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[10:11:28] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:12:44] *** Joins: pycurious (~Adium@user/pycurious)
[10:13:39] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:14:54] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 256 seconds)
[10:16:03] *** Joins: dvx (~dvx@5.181.92.64)
[10:16:31] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[10:17:10] *** Joins: applejuice56 (~applejuic@201-004-143-136.dynamic.caiway.nl)
[10:17:21] <applejuice56> hi all
[10:17:52] <rindolf> applejuice56: hey
[10:18:25] * rindolf drinks applejuice56 
[10:19:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:19:24] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[10:20:53] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[10:22:06] <applejuice56> I am building an application with python. I am looking to show some charts and tables to the users (e.g. about a 100 users). I am looking for some SAAS solution that gives the user a "dashboard" with these charts, tables,etc. Then I can use the already existing python script to bang on the API door to fill it with data. Grafana is not really an
[10:22:06] <applejuice56> option. The software is not really meant to load the whole dashboard in with an iframe for example. Besides, having a lot of users is very expensive. What other SAAS dashboard generating software out there can do this task? (For clarity, assume the user is non-technical, solutions like redash require queries which is not what the users need to do.
[10:22:07] <applejuice56> Just login and see the dashboard I created.).
[10:22:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:22:31] <applejuice56> three sentence with "I am", my apologies hahahaha
[10:23:24] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668) (Quit: Leaving)
[10:23:26] *** Quits: TuckerBrandy1997 (~TuckerBra@209.161.248.138) ()
[10:24:48] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.203)
[10:25:26] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:f867:24e8:4d46:7059)
[10:25:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:25:55] *** Joins: upsala (~zcb@185.213.155.232)
[10:26:09] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[10:27:21] *** Joins: spithash (~spithash@user/spithash)
[10:28:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:28:19] *** Joins: roped (~lonely_@user/roped)
[10:28:59] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[10:29:04] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[10:29:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:30:04] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:30:04] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Remote host closed the connection)
[10:30:24] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:30:28] *** Joins: tobybl (~tobybl@213.31.134.21)
[10:30:54] <roped> I have a module foo.py and a file with tests test_foo.py in the root of the project that does `import foo`. I'm refactoring by moving foo.py to src/foo.py and test_foo.py to tests/test_foo.py, but now pytest fails because test_foo.py doesn't find foo.py anymore. How do I need to change the import in tests/test_foo.py so pytest works from both tests/ and the root of the project?
[10:31:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:32:22] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[10:34:55] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 250 seconds)
[10:36:36] <jinsun> roped: the src layout is good for the case when you install the package (maybe with tox) and run the tests after that
[10:37:36] <jinsun> so install the package before running your tests, or if you want to run the test on the code in your source repository then don't switch to src layout
[10:37:53] <roped> jinsun, indeed, I am following https://packaging.python.org/tutorials/packaging-projects/ trying to make a single module personal project packaging friendly
[10:38:20] *** Quits: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com) (Quit: Leaving)
[10:38:21] <roped> so in this scenario, I just can't run the tests in the source repo? this confuses me
[10:38:41] *** Quits: flyback (~flyback@2601:540:8201:1e60::43a) (Ping timeout: 245 seconds)
[10:39:02] <roped> pytest is advertised as being smart at discovering the tests, there must be a way :D
[10:39:20] <jinsun> roped: have you gone through https://docs.pytest.org/en/6.2.x/goodpractices.html#choosing-a-test-layout-import-rules
[10:39:49] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[10:40:06] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[10:40:13] <roped> going to read that now
[10:40:42] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:41:25] <jinsun> and you can run in the source repo but you still have to install the package, just do it in editable mode
[10:42:09] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[10:43:20] *** Joins: dre (~dre@2001:8003:c932:c301:f6ef:19a8:e979:ddc)
[10:43:29] * roped sighs
[10:43:33] <roped> python used to be simpler
[10:43:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:44:10] <BrenBarn> I'm always irritated by the need to use stuff like editable installs to get paths working right
[10:44:55] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:45:04] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[10:45:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[10:45:13] <jinsun> well you can just add your src folder to PYTHONPATH too I guess if you want to avoid pip, but playig with sys.path too much can cause weird pains later if you are not careful
[10:45:50] <roped> jinsun, can I do this in context of running pytest only?
[10:46:24] <roped> like, does pytest have a magic switch to add a directory to PYTHONPATH just during its invocation?
[10:46:47] <roped> or I can just do it directly via env variable prefix?
[10:46:51] *** Quits: lowfi (~lowfi@user/lowfi) (Read error: Connection reset by peer)
[10:47:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:28] <roped> actually, I can!
[10:47:47] <roped> PYTHONPATH='src/:$PYTHONPATH' pytest
[10:47:47] *** Joins: ammarsalmi (~ammarsalm@154.121.15.86)
[10:47:58] <roped> this works, at least from the root of my project
[10:47:59] <jinsun> yeahyou can just do it with bash something like `alias pytestwithsrc = PYTHONPATH=src && pytest`
[10:48:13] *** Joins: rendar (~rendar@user/rendar)
[10:48:21] <roped> tests are picked and I can just have a wrapper script for running the test
[10:48:28] *** Joins: jyu_s (~f0fz@122.11.212.225)
[10:48:37] <roped> tyvm
[10:49:32] <jinsun> you could just not switch to src layout also, that is even more simpler
[10:51:20] <roped> I am just following the howto that I referenced at the beginning
[10:51:28] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[10:51:41] <roped> if it helps making install easier, I'm ok with this minor itch
[10:52:18] *** Joins: flyback (~flyback@2601:540:8201:1e60::9a75)
[10:54:09] *** Joins: gusto (~Augustus@109.255.100.54)
[10:55:43] *** Joins: manti7 (~manti7@176.10.104.94)
[10:57:14] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[10:57:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:58:23] *** Joins: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se)
[10:59:30] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:00:20] *** Joins: seednode (~seednode@user/seednode)
[11:00:48] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:01:14] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[11:02:50] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[11:03:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:03:47] *** Joins: jyu_s (~f0fz@122.11.212.225)
[11:04:50] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[11:06:15] *** Joins: szymon (~ugh@37.120.156.164)
[11:09:25] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[11:09:42] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[11:09:42] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[11:10:10] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:10:29] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:11:04] *** Joins: naranja (~orange@user/orangeboxcutter)
[11:11:27] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Read error: Connection reset by peer)
[11:11:35] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[11:11:51] <squid_game> is it possible to write this snipper more efficiently https://bpa.st/YKXQ like in C, I'd do if(++delay_plotting % 5 == 0) instead of the first two lines in the pates lines?
[11:11:51] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:12:37] *** Quits: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr) (Quit: leaving)
[11:13:03] *** Joins: Pickchea (~private@user/pickchea)
[11:13:41] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 245 seconds)
[11:13:44] <grawity> I guess it could be shortened to `delay_plotting = (delay_plotting + 1) % 5; if delay_plotting == 0: # do something`
[11:14:35] <grawity> Python doesn't have pre/post increment in expression context though
[11:14:36] *** Joins: jyu_s (~f0fz@122.11.212.225)
[11:14:36] *** Quits: mixfix41 (~homefame@user/mixfix41) (Read error: Connection reset by peer)
[11:14:49] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[11:14:54] <squid_game> grawith, a lot better than I did. Thank you very much
[11:15:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[11:16:06] <jinsun> can shorten that to one line with walrus too I think
[11:16:46] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:16:48] <grawity> hmm yeah that's technically valid, but then it just looks ugly
[11:16:57] *** Joins: jyu_s (~f0fz@122.11.212.225)
[11:17:40] *** Joins: fikran (~fikran@user/fikran)
[11:18:29] <jinsun> and take advantage of 0 being falsey, `if not (delay_plotting := (delay_plotting + 1) % 5): do_something()`
[11:18:32] *** Joins: greedom (~greedom@x59cc9a8c.dyn.telefonica.de)
[11:19:43] <jinsun> oh well == 0 takes the same space, so that not doesn't help much
[11:20:35] <squid_game> jinsun, thank you
[11:20:56] <supakeen> One can of course take advantage of the fact that you don't really need to set delay_plotting back to 0.
[11:21:03] <supakeen> Unless there's more code dependent on it.
[11:21:17] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[11:21:52] *** Joins: relight (~relight@user/relight)
[11:22:08] <squid_game> supakeen, I just needed it initialize it to 0 from the beginning. Do you mean to not assign a value and the modulus operation would set it to 0 at a point?
[11:22:20] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[11:23:50] <squid_game> ah sorry, I understood it now. I thought if I assign to zero, then maybe the byte code would use a small datatype, something like uint8_t in C instead of a free running counter
[11:24:11] <supakeen> That's a wrong assumption and numbers need to get very big before it starts mattering at all :)
[11:24:13] <squid_game> would it be the case here?
[11:25:31] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[11:25:35] <squid_game> it makes sense for a single variable for sure :)
[11:26:10] <supakeen> I normally write something akin to `for x in itertools.count(): if not x % 5: ...` so I get rid of the entire `+ 1 / reset`.
[11:26:12] *** Joins: jyu_s (~f0fz@122.11.212.225)
[11:27:08] <supakeen> But it's all a matter of style/preference.
[11:27:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:27:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[11:28:20] <squid_game> thanks a lot, I learnt couple of new thinking and ways :)
[11:28:33] *** Joins: Lorthirk (~lorthirk@51.154.69.139)
[11:28:35] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[11:28:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:29:16] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[11:29:23] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[11:30:08] *** Joins: jyu_s (~f0fz@122.11.212.225)
[11:31:34] *** Quits: applejuice56 (~applejuic@201-004-143-136.dynamic.caiway.nl) (Quit: Client closed)
[11:31:56] *** Joins: kosh (~kosh@user/kosh)
[11:32:11] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:32:52] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:33:28] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:34:50] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 260 seconds)
[11:37:20] *** Joins: palasso (~palasso@user/palasso)
[11:37:39] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:37:41] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[11:38:30] *** Joins: edocod (~edocod@user/edocod)
[11:39:18] *** Joins: frost (~frost@user/frost)
[11:40:29] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:41:06] *** Joins: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com)
[11:45:42] <Lorthirk> quit
[11:45:42] *** Quits: Lorthirk (~lorthirk@51.154.69.139) (Quit: WeeChat 3.3)
[11:46:06] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[11:48:47] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[11:48:55] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[11:50:58] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[11:51:07] *** Joins: chele (~chele@user/chele)
[11:51:43] *** Joins: spithash (~spithash@user/spithash)
[11:52:09] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-105.dynamic.3bb.co.th) (Remote host closed the connection)
[11:52:46] *** Joins: p-i- (~Ohmu@223.206.149.105)
[11:53:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[11:54:35] *** Joins: OPK (~OPK@user/opk)
[11:54:58] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[11:55:50] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c47fcea0e0e7221c.ipv6.abo.wanadoo.fr)
[11:57:57] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:58:07] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[11:58:41] *** Joins: Blackegg (~thomas@user/blackegg)
[11:58:51] *** Quits: Blackegg (~thomas@user/blackegg) (Client Quit)
[11:59:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:59:56] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c47fcea0e0e7221c.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[12:01:11] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[12:01:39] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:01:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[12:02:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:03:01] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[12:04:37] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[12:04:40] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[12:05:39] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[12:08:48] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:10:32] *** Quits: dre (~dre@2001:8003:c932:c301:f6ef:19a8:e979:ddc) (Ping timeout: 240 seconds)
[12:11:29] *** Quits: greedom (~greedom@x59cc9a8c.dyn.telefonica.de) (Remote host closed the connection)
[12:12:10] *** Quits: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se) (Remote host closed the connection)
[12:12:58] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[12:13:31] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[12:14:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[12:15:08] *** Joins: weedmic (~weedmic@188.120.139.53)
[12:15:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:15:31] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--48a.oracle-ocna.com)
[12:15:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:39] *** Joins: jyu_s (~f0fz@122.11.212.225)
[12:17:03] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[12:18:08] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:20:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[12:21:36] *** Quits: mallkrampus (~mallkramp@148.72.164.127) (Ping timeout: 245 seconds)
[12:22:24] *** Quits: gitly (~gitly@85.255.232.171) (Ping timeout: 256 seconds)
[12:22:30] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:22:36] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:23:54] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[12:24:06] *** Joins: gitly (~gitly@185.69.144.38)
[12:27:20] *** Joins: shad (~shad@user/shad)
[12:27:21] *** Joins: rany (~rany@user/rany)
[12:27:52] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[12:28:44] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:29:25] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:30:17] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c47fcea0e0e7221c.ipv6.abo.wanadoo.fr)
[12:30:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:31:30] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:31:47] *** Joins: jyu_s (~f0fz@122.11.212.225)
[12:32:59] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[12:33:15] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:33:52] *** Joins: mallkrampus (~mallkramp@148.72.164.120)
[12:34:09] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[12:34:18] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[12:35:04] *** Quits: gitly (~gitly@185.69.144.38) (Ping timeout: 268 seconds)
[12:35:41] <zitter> Good morning! Is it possible to run a py script/daemon in a time range, for example from 10am to 12am?
[12:36:22] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[12:36:25] *** Joins: gitly (~gitly@148.252.133.95)
[12:37:40] <rindolf> zitter: hi
[12:37:53] <zitter> rindolf, buongiorno
[12:38:01] *** Joins: vukky (~vukky@wikipedia/vukky)
[12:38:14] <rindolf> zitter: use an async/events framework
[12:39:11] <zitter> any suggestion?
[12:39:13] <rindolf> https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#how-can-i-handle-several-different-tasks--events-eg-replying-networking-requests-at-the-same-time
[12:39:37] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:39:44] <rindolf> zitter: see the link
[12:39:52] <zitter> thanks a lot
[12:40:21] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:58] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[12:41:04] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[12:41:08] <zitter> rindolf, you have also music raccomandations :)
[12:41:12] *** Joins: naranja (~orange@user/orangeboxcutter)
[12:41:38] <rindolf> zitter: you're welcome
[12:42:19] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:42:42] *** Joins: RiFo (~RiFo@user/rifo)
[12:43:11] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:44:21] *** Joins: ihristov (~ihristov@85.187.46.226)
[12:44:56] *** Quits: gadius (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[12:45:55] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[12:47:25] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c47fcea0e0e7221c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[12:47:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:58] *** Joins: Jong (~Jong@174.27.0.61)
[12:48:52] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:50:49] *** Joins: jyu_s (~f0fz@122.11.212.225)
[12:51:34] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[12:52:15] *** Joins: guenhael (~Thunderbi@193.52.208.30)
[12:52:44] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[12:53:39] <bjs> demsh: it's probably a bit late but the reason was you put 1 None but you had 1000 workers
[12:53:43] <bjs> you had to put 1000 Nones
[12:54:38] *** Joins: shad (~shad@user/shad)
[12:54:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:55:10] *** Joins: thevishy (~thevishy@2405:201:f005:c007:5098:b179:18b6:5a33)
[12:56:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[12:56:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:58:07] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:58:57] *** Joins: Naan (~Naan@user/naan)
[13:00:14] <thevishy> Are there any alternatives to Jupyter?
[13:00:21] *** Quits: ammarsalmi (~ammarsalm@154.121.15.86) (Ping timeout: 245 seconds)
[13:00:44] *** Joins: ammarsalmi (~ammarsalm@154.121.15.86)
[13:00:49] <thevishy> I am trying to get a python repl with some more gui + interaction possibilities
[13:01:14] <thevishy> For example render a table, explore an object
[13:02:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[13:03:02] <jinsun> so why not Jupyter?
[13:03:11] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[13:03:35] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[13:03:57] *** Joins: shad (~shad@user/shad)
[13:04:42] <thevishy> I am just exploring the options ...
[13:04:59] <supakeen> thevishy: You can take a look at ipython and bpython which are both repls that are 'a bit prettier'.
[13:05:11] <supakeen> ipython is the one that does magical things, bpython tries to stay as close to the normal repl as possible.
[13:05:14] <thevishy> thanks supakeen
[13:05:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[13:05:36] <thevishy> ipython == jupyter project no?
[13:05:41] <supakeen> yes
[13:05:51] <thevishy> ah right
[13:06:02] <supakeen> jupyer notebooks came from ipython as far as i know because it was a nice format to share things
[13:06:06] *** Joins: jyu_s (~f0fz@122.11.212.225)
[13:06:14] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 260 seconds)
[13:06:19] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:06:24] *** Quits: edocod (~edocod@user/edocod) (Remote host closed the connection)
[13:06:26] <supakeen> but i'm jaded since i work on bpython ;)
[13:06:31] <thevishy> yeah that's what I read
[13:06:55] *** Joins: edocod (~edocod@user/edocod)
[13:06:57] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[13:07:34] <thevishy> i'll try ipython itself:-)  bpython = terminal ... for terminal I am already happy with normal python interpreter
[13:07:34] *** Quits: rdvn (~rdvn@user/rdvn) (Remote host closed the connection)
[13:07:45] *** Quits: guenhael1 (~Thunderbi@193.52.208.97) (Ping timeout: 268 seconds)
[13:07:48] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:08:04] <supakeen> oki
[13:09:47] *** Quits: gizmo_ (~gizmo@45.91.125.2) (Read error: Connection reset by peer)
[13:12:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:12:50] *** Quits: edocod (~edocod@user/edocod) (Ping timeout: 256 seconds)
[13:12:53] *** Joins: edocod_ (~edocod@user/edocod)
[13:13:17] *** Joins: e2m4n (~ezman@user/e2m4n)
[13:13:35] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[13:16:02] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[13:16:23] <sadara> what is the correct way to import QWebEngine? (python 3.7)
[13:16:31] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[13:16:38] <sadara> assuming you spell it correctly
[13:16:44] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[13:16:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:17:15] *** Joins: jyu_s (~f0fz@122.11.212.225)
[13:17:22] *** Quits: ammarsalmi (~ammarsalm@154.121.15.86) (Ping timeout: 256 seconds)
[13:18:30] *** Quits: edocod_ (~edocod@user/edocod) (Ping timeout: 256 seconds)
[13:19:28] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Ping timeout: 268 seconds)
[13:20:00] *** Joins: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126)
[13:20:05] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 268 seconds)
[13:20:41] *** Joins: mrwick (~mrwick@user/mrwick)
[13:21:27] *** Joins: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126)
[13:22:28] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[13:23:48] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:f867:24e8:4d46:7059) (Quit: smeeagle)
[13:25:33] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[13:25:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[13:25:59] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.203) (Quit: Leaving)
[13:26:21] <pystardust> if I am using sqlite to store a student table and looking up with a where clause say student = 'bob', what is the time complexity of this? I am thinking its O(n), if so is there a way to make it O(1)?
[13:26:39] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.203)
[13:26:53] <pystardust> like a python dictionary but hashing with more than just the primary key
[13:27:02] *** Joins: fikran (~fikran@user/fikran)
[13:27:16] *** Joins: kevr (~kevr@user/kevr)
[13:27:55] <dv^_^> an index?
[13:27:57] <deniska> pystardust: create an index
[13:27:58] *** Joins: lethu (~lethu@user/lethu)
[13:28:08] <deniska> pystardust: (indexes are an sql thing)
[13:28:09] <pystardust> oh, thanks. Ill read up on that
[13:29:35] *** Joins: freeman_h (~freeman_h@94.0.217.120)
[13:29:37] *** Quits: onichomp (~onichomp@2806:264:4404:8039:13c:1f90:3fd4:3639) (Read error: Connection reset by peer)
[13:29:38] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[13:29:41] *** Joins: ubert (~Thunderbi@p200300ecdf0ba227e6b318fffe838f33.dip0.t-ipconnect.de)
[13:30:14] *** Joins: onichomp (~onichomp@2806:264:4404:8039:b4b1:16f9:6515:cfa8)
[13:31:09] *** Joins: jyu_s (~f0fz@122.11.212.225)
[13:31:12] <pystardust> thats exactly what I wanted, nice
[13:31:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:32:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:32:31] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[13:32:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[13:32:52] *** Joins: dre (~dre@2001:8003:c932:c301:ac3b:d7f7:11b7:7cb4)
[13:32:55] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[13:32:56] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[13:33:14] *** Joins: TJ- (~root@about/linux/staff/tj-)
[13:33:19] *** Quits: Jong (~Jong@174.27.0.61) (Quit: Textual IRC Client: www.textualapp.com)
[13:33:55] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[13:34:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:35:31] *** Quits: onichomp (~onichomp@2806:264:4404:8039:b4b1:16f9:6515:cfa8) (Ping timeout: 268 seconds)
[13:36:13] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[13:37:19] <demsh> bjs: oh thanks, that was a brainfart %)
[13:37:33] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[13:39:12] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[13:40:57] <dre> please, again, I beg of you
[13:41:00] *** Quits: jay-m126_ (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 260 seconds)
[13:41:10] *** Quits: jay-m126 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 256 seconds)
[13:41:24] <dre> if i use "-s" within py.test, it will correctly bring in the debugger with `breakpoint()`
[13:41:54] <dre> is there a way that I can just "ignore" the `breakpoint()`
[13:42:09] <dre> if I think I've fixed the bug and I don't want to go through and delete all my breakpoints, only to re-make them again.
[13:42:12] <dre> I beg of you
[13:42:30] *** Joins: jay-m126 (~jay-m@129.0.76.209)
[13:43:02] <bjs> dre: I'm not sure what your question is
[13:43:04] *** Joins: jay-m126_ (~jay-m@129.0.76.209)
[13:43:09] <bjs> you have some explicit calls to breakpoint() in places?
[13:43:19] <dre> yes, is there a way I can ignore them
[13:43:25] <dre> ? * (sorry I wasn't clear)
[13:43:39] <dre> I don't know how to make "implicit" calls to breakpoint()
[13:43:55] <bjs> dre: you can't, I'm not sure what you mean
[13:44:09] <bjs> breakpoint() is a debugging tool, when you have a bug you insert it to see and then remove it again
[13:44:13] <dre> I dunno, you said explicit
[13:44:18] <dre> yeah ok
[13:44:55] <dre> but bjs, is there a way that I can run my code to see that it works, without typing "continue<RET>continue<RET>c<RET>c<RET>"
[13:45:14] <dre> ie "skip all breakpoints" or continue all breakpoints, either way
[13:45:14] <bjs> dre: you can change what breakpoint() does https://docs.python.org/3/library/sys.html#sys.breakpointhook
[13:45:45] <dre> AH hacky but smart. that's a good idea! they even say it in the docs!
[13:45:46] <dre> thanks
[13:45:48] <bjs> but this isn't the way you're supposed to use breakpoint really
[13:46:03] *** Joins: jyu_s (~f0fz@122.11.212.225)
[13:46:11] <bjs> you have lots of breakpoints?
[13:46:28] <dre> big code
[13:46:41] <dre> lots of things to look at to see that it's operating correctly.
[13:47:06] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[13:47:31] <dre> I want to fix-a-little, and then re-run the whole thing to see if it's changed.
[13:47:44] <dre> I'd love if there was a way to "breakpoint() from raised exception"
[13:48:41] *** Quits: jay-m126_ (~jay-m@129.0.76.209) (Ping timeout: 245 seconds)
[13:49:05] *** Quits: jay-m126 (~jay-m@129.0.76.209) (Ping timeout: 268 seconds)
[13:49:39] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[13:49:44] <dre> bjs, you are my saviour
[13:49:48] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:50:09] * dre gives bjs an unwarranted kiss on the cheek *
[13:50:34] <bjs> dre: pytest --pdb should do that automatically no?
[13:51:06] <bjs> (well that'll be on an *uncaught* exception, you definitely don't want a breakpoint at every exception...)
[13:52:05] *** Joins: arinov (~arinov@77.67.129.200)
[13:52:06] <dre> ye that would work, but i meant in /the code/ not in the /pytest/ code, (sorry, It was a spur of the moment thought, not related to what I'm doing currently)
[13:52:22] *** Joins: jyu_s (~f0fz@122.11.212.225)
[13:52:52] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[13:55:03] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[13:55:05] *** Joins: p-i-_ (~Ohmu@223.206.149.105)
[13:55:07] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[13:55:22] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[13:55:37] *** Joins: weedmic (~weedmic@188.120.139.53)
[13:57:17] <bjs> dre: I'm not sure what you mean by "the code"
[13:57:21] <bjs> vs the "pytest code"
[13:57:27] <dre> sorry,
[13:57:34] <dre> tests vs domain?
[13:57:45] <bjs> dre: I still don't understand,  what's wrong with pytest --pdb ?
[13:57:49] <dre> nvm don't worry.
[13:57:56] <dre> well we don't run production code with pytest :P
[13:58:02] *** Quits: p-i- (~Ohmu@223.206.149.105) (Ping timeout: 240 seconds)
[13:58:03] <bjs> dre: you have breakpoints in production?
[13:58:19] <dre> no, lol. seperate issue, don't worry.
[13:58:23] <bjs> what
[13:58:49] *** Joins: Naan` (~Naan@user/naan)
[13:59:07] <dre> I meant. if production code has an exception, it'd be great if I could just "--pdb" it, and run the production code on my machine, so when it raises an error, I get that "auto-breakpoint" sort of thing.
[13:59:26] <dre> don't make me take back my kiss, it'll be just as unwarranted as the last one.
[13:59:51] <bjs> dre: I see
[14:00:01] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:00:54] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:01:20] <bjs> dre: pytest --pdb will mean any uncaught exceptions when you run your tests will add a breakpoint at the exception.  For random exceptions in production I wouldn't recommend randomly dropping into a debugger (who is there to debug it?) but you can do that by setting a breakpoint in https://docs.python.org/3/library/sys.html#sys.excepthook I guess
[14:01:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:01:55] <dre> :o now that's interesting
[14:02:34] <dre> although I suppose it's pointless. I have the code on my machine, I know where the error is, I may aswel go put the breakpoint there myself.
[14:02:39] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[14:02:46] <dre> thanks for the hacking tips bjs
[14:02:57] <bjs> I'm not sure it's a very useful thing to do, no idea whether you even end up in the right place for the excepthook to be a breakpoint (idk how pytest manages it)
[14:03:00] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:03:03] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:03:05] <bjs> dre: I'd make a test for that case, and then run pytest --pdb
[14:03:15] <bjs> after all, you'd want to turn it into a regression anyway :)
[14:03:23] <dre> yeah :P
[14:03:24] <bjs> regression test
[14:03:32] <dre> sometimes. the test comes after you've figured out wtf happened
[14:03:44] <bjs> dre: but maybe you should consider writing the test before y ou figure out what happened
[14:03:56] <bjs> as the testing tools are there to help you with that too :)
[14:04:31] <bjs> write a test, then ask pytest to run that one test with coverage and --pdb and all the other fancy things and you get a lot of data out that can help you figure out what happened
[14:04:47] <dre> yeah it's a good point and a little easier to say than do sometimes. if you have no idea how to replicate the issue...
[14:05:05] <dre> that's... interesting bjs
[14:05:09] <bjs> dre: well that's a separate issue to figuring out what happened and fixing it :)
[14:05:18] <dre> run it with coverage
[14:05:22] <dre> yeah I suppose it is :P
[14:05:27] *** Joins: blei (~blei@209.201.38.106)
[14:05:43] *** Joins: maromau (~mauro@151.62.232.173)
[14:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:32] <bjs> dre: I'm not saying there's a magic bullet here,  just that we've lots of testing infrastructure. Coverage isn't _just_ there to draw pretty pictures ;)
[14:06:40] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Ping timeout: 256 seconds)
[14:07:07] <dre> yeah I should get into it
[14:07:34] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 268 seconds)
[14:07:41] <bjs> dre: also see `python -m trace` and other tracing tools (settrace)
[14:07:45] <blei> they could just be pretending not to make sense because they were intending to do a whack job on themselves later, though
[14:07:56] *** Quits: maromau (~mauro@151.62.232.173) (Client Quit)
[14:10:19] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[14:13:12] <mathe8787> I'm still having troubles setting up the event in the while loop. How can I make sure that the event to close the thread goes throw when _q blocks the signal? The entire code is shown here: https://bpa.st/R4RA
[14:14:22] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:15:39] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:16:49] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 268 seconds)
[14:19:09] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[14:20:09] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[14:23:03] *** Joins: driib25 (~driib@185.195.233.168)
[14:23:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[14:23:37] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[14:24:48] *** Quits: sharperguy (~sharpergu@88.130.217.96) (Ping timeout: 256 seconds)
[14:24:54] *** Quits: thevishy (~thevishy@2405:201:f005:c007:5098:b179:18b6:5a33) (Quit: Client closed)
[14:25:10] *** Quits: driib2 (~driib@185.65.135.232) (Ping timeout: 260 seconds)
[14:25:10] *** driib25 is now known as driib2
[14:25:23] *** Joins: thevishy (~Nishant@2405:201:f005:c007:5098:b179:18b6:5a33)
[14:26:35] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[14:27:08] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[14:28:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:28:52] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:29:42] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Remote host closed the connection)
[14:30:12] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[14:31:36] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 245 seconds)
[14:32:07] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:33:38] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[14:34:17] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:34:37] *** Joins: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de)
[14:36:14] *** Quits: daniel2 (daniel@user/daniel2) (Read error: Connection reset by peer)
[14:36:23] *** Joins: daniel2 (daniel@user/daniel2)
[14:37:43] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:38:15] *** Quits: p-i-_ (~Ohmu@223.206.149.105) (Read error: Connection reset by peer)
[14:39:36] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:39:49] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[14:39:57] *** Quits: jyu_s (~f0fz@122.11.212.225) (Remote host closed the connection)
[14:40:09] *** Joins: kdc (~kdc@196.211.197.159)
[14:40:11] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:40:21] *** Joins: p-i- (~Ohmu@223.206.149.59)
[14:40:27] *** Joins: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk)
[14:41:23] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:41:27] *** Quits: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:41:57] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[14:41:57] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Read error: Connection reset by peer)
[14:42:20] *** Joins: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de)
[14:42:54] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[14:43:13] *** Quits: gitly (~gitly@148.252.133.95) (Ping timeout: 250 seconds)
[14:43:19] *** Joins: dez (uid92154@user/dez)
[14:43:30] *** Quits: mallkrampus (~mallkramp@148.72.164.120) (Ping timeout: 256 seconds)
[14:45:26] *** Joins: gitly (~gitly@85.255.235.189)
[14:45:45] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[14:45:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:46:03] *** Joins: jyu_s (~f0fz@122.11.212.225)
[14:46:22] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[14:47:02] *** Quits: jpic_ (~jpic@82.142.20.182) (Ping timeout: 268 seconds)
[14:48:14] *** Quits: jyu_s (~f0fz@122.11.212.225) (Read error: Connection reset by peer)
[14:48:42] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[14:49:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:52:31] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:53:26] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:53:55] *** Joins: jimm (~jim@about/linux/staff/jim)
[14:56:31] *** Joins: mallkrampus (~mallkramp@148.72.164.119)
[14:58:15] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[14:58:28] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[14:58:38] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[14:58:51] *** Joins: han-solo (~hanish@user/han-solo)
[14:59:57] *** Joins: legola (~legola@46.235.101.181)
[15:03:02] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Read error: Connection reset by peer)
[15:03:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[15:03:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[15:03:41] *** Quits: jimm (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[15:03:55] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[15:05:08] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:06:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:06:44] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[15:06:54] <summonner> make the thread daemon so you don't need to worry about closing the thread
[15:07:02] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:08:10] *** Joins: bandit_za (~bandit@102-65-138-35.dsl.web.africa)
[15:08:12] <summonner> mathe8787, see "Daemon vs. Non-Daemon Threads" https://pymotw.com/3/threading/index.html   maybe that's what you're looking for
[15:08:21] *** Quits: p-i- (~Ohmu@223.206.149.59) (Remote host closed the connection)
[15:08:57] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th)
[15:09:18] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[15:13:38] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[15:14:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[15:14:44] *** Joins: y1n (~y1n@178.115.43.136.wireless.dyn.drei.com)
[15:14:49] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:15:24] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:15:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:16:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:49] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:17:11] <mathe8787> summonner oh. my. god. that worked! i have been trying to solve this problem for the last two weeks and it was just making it a daemon. Thank you so much.
[15:17:36] <mathe8787> And thank you to demsh and altendky as well. They helped me a lot yesterday.
[15:17:51] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[15:18:27] <mathe8787> This community is really great here. The best I have been a part of.
[15:19:06] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:19:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:19:46] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:19:49] <ThePhilgrim> mathe8787: Join ##learnpython as well, we always discuss Python problems like these there (evenings CET usually)
[15:20:58] <mathe8787> Will do. Just curious, why are you people so friendly and helpful and how do you have the time to help? I obviously want to give back once I am really good at python but that will take some time.
[15:21:08] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:21:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:22:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:22:05] <ThePhilgrim> mathe8787: I'm like you, asking questions way more than I can help. But I guess the people helping now were the people asking for help 2-10 years ago
[15:22:16] <ThePhilgrim> I guess it's about giving back to the community
[15:22:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:20] <ThePhilgrim> Each one teach one, as they say
[15:22:44] <mathe8787> nice saying
[15:23:05] <ThePhilgrim> :)
[15:23:09] <mathe8787> yea this is seriously the best community...definitely want to stay a part of it
[15:23:37] *** Joins: shad (~shad@user/shad)
[15:23:50] <mathe8787> ive asked questions in forums for c++ and python over the years and people are just rude and unfriendly for no reason.
[15:24:05] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[15:25:06] *** Joins: somlis (~somlis@user/somlis)
[15:27:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:27:42] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:28:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:50] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:31:42] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Read error: Connection reset by peer)
[15:33:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:33:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:33:54] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 268 seconds)
[15:34:13] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[15:34:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:35:15] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:35:32] <Naan`> wholesome
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:16] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[15:36:22] *** Joins: fikran (~fikran@user/fikran)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:34] <Shapeshifter> If i have a folder x and it contains a bunch of python files, how can I programmatically list all the modules in x? Like, I want to do import x; and then find out what modules are in there. I don't want to do from x import *
[15:38:38] <Shapeshifter> I tried getmembers(x) but it doesn't actually list the modules inside.
[15:39:04] <supakeen> I think you're confusing a few things here. If you do `import x` you import either the module called x.py or the package called x, in the latter case it imports the __init__.py in that folder.
[15:39:35] <supakeen> There's no good way to do what you want, one could use pathlib and importlib to import all the modules in a package recursively but that seems weird.
[15:39:43] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:40:19] <supakeen> But I am curious as to why you want to do this :)
[15:40:31] <rindolf> supakeen++
[15:42:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:43:21] <mathe8787> How does app.exec() start the program when it is in the sys.exit? Doesnt sys.exit only run when the program was closed? https://bpa.st/TIIA
[15:43:44] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[15:43:47] <supakeen> It executes app.exec and uses its return value as the argument for sys.exit.
[15:44:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:44:34] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:44:36] <mathe8787> where does it execute app.exec?
[15:44:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:45:36] <rindolf> mathe8787: in the runtime
[15:45:58] <mathe8787> where is the runtime?
[15:46:08] <rindolf> cpython3 or wheereever
[15:46:10] <supakeen> mathe8787: It does `sys.exit(app.exec_())` that means it executes app.exec_() first then uses its return value as the first argument to sys.exit()
[15:46:41] <supakeen> You could write it as `exit = app.exec_(); sys.exit(exit)`.
[15:46:44] <supakeen> If that's more clear?
[15:46:50] *** Joins: binary01 (~binary01@192.110.171.216)
[15:47:00] <mathe8787> supakeen ah ok so app.exec() returns something only when its thread is closed
[15:47:09] <Shapeshifter> supakeen: well, I'm kinda abusing python code to write exam questions. So every file represents a kind of multiple choice question. And I want to serialize them now. But it's ok. I'll just explicitely import each file.
[15:47:12] <mathe8787> otherwise it stays open
[15:47:24] <han-solo> `if "app" in globals()` seems weird, and unnecessary though
[15:47:28] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--48a.oracle-ocna.com) (Ping timeout: 268 seconds)
[15:47:37] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:47:46] <han-solo> you are getting the `app` a line above that anyway
[15:47:56] <supakeen> Shapeshifter: Explicit is usually better even if a bit more verbose.
[15:48:04] <supakeen> It's not impossible what you want, just uncommon.
[15:48:13] *** Joins: cruncher (~cruncher@90.68.118.49)
[15:48:25] <mathe8787> han-solo yea im also not sure why there is this if statement. You think I can just remove it? Not sure why there is a reuseapp
[15:49:03] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[15:49:27] <greyrat> Is there an IRC channel for scientific computing in Python (numpy, JAX, scipy, etc)?
[15:50:02] <jinsun> you can ask here
[15:50:19] <han-solo> `reuseapp` seems to denote some state, with which the author decides to run the app or not, but just the  `"app" in globals()` part seems unnecessary, not sure if i'm missing something though
[15:50:46] <supakeen> Nah, it's weird.
[15:51:10] <han-solo> mm yeah, they seems to set an `app` in both cases
[15:51:29] <mathe8787> i didnt write this code btw, just now have to go through it and filter out all the weirdness
[15:51:39] <supakeen> Aside from that the entire `run_app` function is broken.
[15:51:53] <supakeen> e.g. there's an except: pass statement but variables defined in the try part are then used
[15:51:58] <supakeen> which are not guaranteed to exist, etc
[15:52:33] <han-solo> yeah
[15:52:50] <Chemical-X> greyrat: there is #pydata if that can help, but just ask here. Why not?
[15:53:07] <mathe8787> wouldnt it be better to have run_app like this: https://bpa.st/FU6A
[15:53:25] <greyrat> I want to do some character-level deep learning; but I can't figure out how to convert my byte-encoded strings to an array of float32. I have tried `np.frombuffer(b'hi', dtype=np.float32)`, but it says: `ValueError: buffer size must be a multiple of element size`.
[15:53:44] <mathe8787> the second on in the link
[15:53:48] <mathe8787> one*
[15:54:01] <supakeen> I don't know what they mean by `reuseapp` or what the difference is between a QApplication with or without.
[15:54:44] <mathe8787> supakeen reuseapp seems to not be used anywhere else
[15:54:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:54:57] <supakeen> mathe8787: It gets used here: https://bpa.st/FU6A#3L5
[15:55:07] <freeman_h> https://kopy.io/gaPar in jquery doing this $.post("/admin/save", {"data": values}) however getting a 500 error am i missing something?
[15:55:09] <supakeen> aka, if it's 'true' the entire application doesn't start or something
[15:55:25] <mathe8787> supakeen yea right but that just seems superfluous
[15:55:35] <supakeen> Correct, a lot of it seems to be :)
[15:55:49] <greyrat> Nevermind, `np.frombuffer(b'hi', dtype=np.uint8)` works.
[15:56:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:56:34] *** Joins: sunarch (uid526836@user/sunarch)
[15:56:35] <mathe8787> ok i will try to simplify it :) thank you but my question last time: app_exec runs and only returns something to sys.exit() when the program is closed right?
[15:57:27] *** Joins: bloody (~bloody@user/bloody)
[15:57:44] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[15:58:00] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[15:58:01] <supakeen> When app_exec returns execution continues to sys.exit which exits the program
[15:58:23] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:58:35] <mathe8787> ok but otherwise it doesnt return anything to sys.exit right?
[15:58:57] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:59:18] <mathe8787> so essentially sys.exit() is like an open thread and waits for a return from app_exec
[15:59:41] *** Quits: Chemical-X (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[15:59:59] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:00:01] <kek_> hi
[16:00:10] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d92:8a5b:47b4:5d14)
[16:00:15] <supakeen> Hello.
[16:00:15] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:00:19] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[16:00:26] <han-solo> `(lambda x: x or 'something was happening for 5 seconds...now i can continue')(time.sleep(5))`
[16:01:00] <supakeen> What.
[16:01:27] <mathe8787> han-solo ah is that what sys.exit() does?
[16:01:34] <han-solo> was trying to explain when the sys.exit gets to run ':), badly i guess
[16:01:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:02:20] <han-solo> mathe8787: sys.exit() doesn't get to run until the thing inside that which in this case `app.exec_` is completed, i think
[16:02:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:03:00] <supakeen> I always found the stack analogy easier but in this case it's just that until app.exec_ returns sys.exit isn't called yet (we don't know its arguments anyways)
[16:03:05] <mathe8787> han-solo ok that makes sense but then my question still stands: app_exec() stays open and then returns something to sys.exit() when the progrm is closed
[16:03:08] <han-solo> it doesn't open any threads...it's just waiting to execute
[16:03:10] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 260 seconds)
[16:03:53] <mathe8787> I just find it odd that the function sys.exit() is being used by its argument but sys.exit() isnt being run until the argument is finished
[16:03:53] *** Joins: skipper (~whatsupbo@user/scobydoo)
[16:03:57] <kek_> How do python people be certain that a function they passed something to will keep the reference intact?
[16:04:03] <mathe8787> usually a function has to run and call the argment first
[16:04:06] *** Joins: arinov (~arinov@77.67.129.200)
[16:04:15] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[16:04:21] *** Joins: weedmic (~weedmic@188.120.139.53)
[16:04:41] <jinsun> mathe8787: no sys.exit is not being used by app.exec_
[16:05:07] <jinsun> it is just waiting for app.exec_ to finish just like normal fucntion call
[16:05:30] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[16:05:49] *** Joins: Deknos (~someone@user/menace)
[16:05:57] <mathe8787> ah yes that makes sense
[16:06:44] <mathe8787> thank you everyone :)
[16:07:09] <han-solo> kek_: don't mutate it ? or give a copy ?
[16:07:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:08:18] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[16:08:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:10:25] *** Joins: darksun (~darksun@user/darksun)
[16:10:30] <kek_> han-solo, I don't see how I have control over it. If you use a library, how do you know what's going on. You just pass stuff and call functions. How do you know that the reference will survive?
[16:10:57] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[16:11:14] <nedbat> kek_: why does the caller need to know that the reference survived?
[16:11:25] <marduk> kek_: usually if the function has side effects like that it's documented as such. And if it's not we take the person who wrote it, slap their hands and send them to their rooms without dinner.
[16:11:58] *** Joins: nicholaus04 (~nicholaus@172.58.75.57)
[16:13:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[16:13:26] <kek_> nedbat, I think it's just me being very unused to python.  marduk ah, good to know proper measures are taken. So basically I should have faith and trust the code.
[16:13:27] <ham5urg> Is a module commonly used to print out messages to stdout while in --verbose mode?
[16:13:31] <kek_> I don't know, python scares me.
[16:13:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:13:58] <nedbat> kek_: it's ok to be unused to python. let's talk about your concern
[16:14:10] <jinsun> this would be a problem in any language that allows mutable values really
[16:14:11] <nedbat> kek_: what are you afraid might happen?
[16:14:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:14:28] *** Quits: dre (~dre@2001:8003:c932:c301:ac3b:d7f7:11b7:7cb4) (Quit: Leaving)
[16:14:41] <ham5urg> Any module to handle such? if self.verbose then print("my verbose message")
[16:15:14] <han-solo> logging ?
[16:15:20] <jinsun> logging with different logging levels depending on verbosity probably
[16:15:29] <ham5urg> ok, thanks
[16:16:04] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:16:36] *** Joins: shad (~shad@user/shad)
[16:17:08] <raek> hello! when filling in trove classifiers for a project (using setuptools here), is there any recommendations for how specific I should be? for instance, should I add only "Programming Language :: Python :: 3.6" if the project requires python 3.6, or should I also list newer versions? what are Python :: 3 and Python :: 3 :: Only used for?
[16:17:44] <nedbat> raek: the classifiers aren't as important as the python_requires settings
[16:18:04] <kek_> nedbat, ah nothign in particular ofc - it's mostly being unused to python. So far I mostly used it to plot stuff or do very very simple tasks. So I didn't concern myself with the details. I think I'm gonna read some book or manual or whatever over christmas.
[16:18:04] <raek> ok, that I have already filled in...
[16:18:08] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 256 seconds)
[16:18:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[16:18:19] <nedbat> raek: generally I list the specific values. 3.6 3.7 3.8, etc ,in the classifiers
[16:18:21] *** Joins: CrypticS_ (~CrypticS_@user/crypticsquared)
[16:18:43] <raek> also, what are valid values for the "platforms" metadata?
[16:19:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:19:29] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[16:19:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:20:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:20:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:20:44] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[16:21:04] <nedbat> raek: i'm not sure what that is
[16:22:05] <freeman_h> https://kopy.io/gaPar%20in%20jquery%20doing%20this%20$.post(%22/admin/save%22,%20%7B%22data%22:%20values%7D)%20however%20getting%20a%20500%20error%20am%20i%20missing%20something?
[16:22:10] <raek> https://packaging.python.org/specifications/core-metadata/#platform-multiple-use
[16:22:16] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:22:40] *** Joins: shad (~shad@user/shad)
[16:23:09] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:23:10] <raek> nedbat: I saw "Platform: UNKNOWN" when I looked at the wheel file I built from my package... I looked through the METADATA to check if I missed something important
[16:24:48] <nedbat> raek: i never checked before: the coverage.py wheels have Platform: UNKNOWN also ¯\_(ツ)_/¯
[16:25:12] <freeman_h> https://kopy.io/gaPar in jquery doing this $.post("/admin/save", {"data": values}) however getting a 500 error am i missing something?
[16:26:49] <grawity> try printing the entire 'request.form' first
[16:27:19] <grawity> and, does flask print the actual exception to terminal?
[16:27:35] <grawity> or not flask, whatever
[16:27:51] * grawity is reminded of flask's habit of hiding KeyError...
[16:28:40] <raek> nedbat: ok, then I'll ignore it... :-)
[16:28:52] <nedbat> raek: or, let me know what I should do!
[16:32:39] <thevishy> https://pyodide.org/en/stable/console.html
[16:32:49] *** Quits: Proxysna_ (~Proxysna@62.119.254.142) (Remote host closed the connection)
[16:33:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[16:33:13] <thevishy> Is this CPython compiled into WebAssembly?
[16:33:30] <deniska> yes
[16:33:31] <thevishy> Does anyone know?
[16:33:42] <thevishy> thanks
[16:34:11] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:34:31] <rindolf> thevishy: https://github.com/emscripten-core/emscripten/wiki/Porting-Examples-and-Demos
[16:34:57] <thevishy> Thanks rindolf :-)
[16:35:00] *** Joins: Hackerpcs (~user@user/hackerpcs)
[16:35:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:35:25] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[16:35:35] *** Joins: sazawal (~sazawal@122.161.81.235)
[16:35:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:36:19] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:36:43] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[16:36:52] *** dcaro is now known as dcaro_lunch
[16:37:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:37:49] *** Joins: withered_wolf (~withered_@174.25.131.17)
[16:38:33] <freeman_h> grawity, Hi i have tried print it but getting an error https://kopy.io/wSYbP
[16:39:08] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[16:40:08] <han-solo> freeman_h: the endpoint needs to send a valid response. Try `jsonify({"msg": "hello world"})` or something
[16:40:13] <rindolf> thevishy: you're welcome
[16:40:14] *** Quits: delvian (~delvian@41.13.192.102) (Ping timeout: 256 seconds)
[16:40:25] <han-solo> `from flask import jsonify`
[16:40:28] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:42] *** Joins: xardas (~xardas@149.233.51.127)
[16:40:45] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[16:40:46] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:41:01] <raxor2k> ok so i know use "loop.run_in_executor(None, connect_to_Db)", and it now connect to the without the server hanging, which is good! Now how can i use this same approach in a specifil cases and not just in coroutines? https://bpa.st/6MYA
[16:41:04] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:41:34] *** Joins: delvian (~delvian@41.13.200.174)
[16:41:49] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[16:41:58] *** Joins: nomic (~nomic@185.217.117.51)
[16:42:53] <xheimlich> wow. I have maybe ten bits of stackoverflow pasted code that are neatly named in more_itertools.
[16:43:08] <freeman_h> han-solo, thank you
[16:43:11] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[16:43:13] <xheimlich> "collapse" (I think Hy calls it "flatten") def should be in standard itertools
[16:43:26] <hexnewbie> I've often wanted more_collections
[16:43:26] *** Joins: withered_wolf (~withered_@174.25.131.17)
[16:44:12] <han-solo> `collapse` is kinda like `itertools.chain.from_iterable` me think ?
[16:44:26] <hexnewbie> Though I do have three reimplementations more_itertools.peekable()
[16:44:26] <han-solo> hrm, without the levels and stuff
[16:45:15] *** Joins: SteveR (~SteveR@103.215.168.1)
[16:45:22] <xheimlich> I was using "functools.reduce(operator.iconcat, lst, [])". But it only works for two levels.
[16:45:37] <SteveR> even if i comment the L11, it still works
[16:45:38] <SteveR> https://dpaste.org/s2Ya
[16:45:48] <xheimlich> I forget why I switched from concat to iconcat.
[16:46:01] <SteveR> i thought i will have to use the classmethod decorator
[16:46:44] <han-solo> class attributes can be access using the instance object as well
[16:46:44] <nedbat> SteveR: without line 11, it's just a regular method
[16:46:55] <han-solo> accessed*
[16:46:59] <grym> "flatten until you get a string or bytes-like thingie" is always slightly annoying
[16:47:03] <SteveR> would i be not getting error?
[16:47:31] <hexnewbie> xheimlich: I can't read that. Is iconcat calling += just like iadd? += will be significantly faster - amortized O(n) - than a regular +, which will be O(n**2)
[16:47:35] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:47:37] <SteveR> even if i say Computer.brand - this is working
[16:48:26] *** Joins: olejonny (~olejonny@185.3.5.194)
[16:48:44] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[16:48:48] <hexnewbie> Well, more like O(n*m), where m is the number of lists, and n is the total elements of a lists, which is O(m**2 * avglstsize)
[16:49:02] <SteveR> ok if i do Computer.getbrand - it doesnt work. i will have to use the @classmethod decorator
[16:49:35] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:49:39] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:50:13] <xheimlich> hexnewbie: yeah, I think someone told me to do that for performance.
[16:50:29] *** Joins: legola (~legola@46.235.101.181)
[16:50:51] <xheimlich> n^2 catches up with you quadratically.
[16:50:51] *** Quits: legola (~legola@46.235.101.181) (Read error: Connection reset by peer)
[16:51:03] <xheimlich> 10 items was find, 1000 items kills you.
[16:51:23] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[16:51:30] *** Joins: legola (~legola@46.235.101.181)
[16:52:04] <hexnewbie> xheimlich: Yeah, the issue is that ‘mainlist = mainlist + Ln’ copies mainlist, whereas ‘mainlist += Ln’ modifies the original list in-place, without copying it, so it only iterates over the items. There's a hidden realloc() every time the list doubles, so it might be O(n log n), not O(n), but that's still good enough
[16:53:39] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[16:53:40] <olejonny> Any PySide experts that could help me with a bug? When I add a resource file to my ui and try to load it using loadUiType I get this error: ModuleNotFoundError: No module named 'resources_rc'
[16:53:41] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Ping timeout: 245 seconds)
[16:54:45] <olejonny> The filename is resources.qrc
[16:54:58] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[16:56:33] <rindolf> olejonny: hi
[16:56:52] *** Joins: sadstephen (~sadstephe@115.114.115.250)
[16:56:54] <olejonny> @rindolf hi
[16:57:24] <rindolf> olejonny: see https://github.com/shlomif/how-to-share-code-online
[16:58:01] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[16:58:16] *** Quits: sadstephen (~sadstephe@115.114.115.250) (Client Quit)
[17:00:24] <olejonny> Code that produces the error: https://paste.debian.net/1220774/
[17:01:09] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[17:02:03] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[17:03:00] <rindolf> olejonny: it references some  external files: http://sscce.org/
[17:03:18] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:04:00] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[17:04:20] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[17:05:30] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:05:38] *** Quits: sideeffex5613 (~sideeffex@user/sideeffex) (Quit: The Lounge - https://thelounge.chat)
[17:05:58] *** Joins: sideeffex5613 (~sideeffex@user/sideeffex)
[17:06:57] *** Joins: Shanx (~Guest16@162.129.118.78.rev.sfr.net)
[17:07:02] <Shanx> Hello
[17:07:22] <rindolf> Shanx: hey
[17:07:41] <Shanx> I'd like to parse a duration string following this format: [[DD-]HH:]MM:SS[.MS]
[17:07:51] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:07:52] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob)
[17:07:56] <raek> does anyone know if the bumps in major versions in Sphinx in the last two years (2 -> 3 -> 4) come with any major incompatibilities?
[17:07:59] <Shanx> For now I have this: re.compile(r"(\d+-)?(\d+:)?(\d+):(\d+)(.\d+)?")
[17:08:47] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4)
[17:08:49] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi)
[17:09:09] <Shanx> Which almost works as intended: r.search("1-12:11:11.10").groups() returns ('1-', '12:', '11', '11', '.10')
[17:09:38] <Shanx> But I don't find how I can exclude "-", ":" and "." from the captures
[17:09:43] <rindolf> Shanx: a dot should be escaped too in regex
[17:09:55] <Shanx> True
[17:10:00] <grawity> use a non-capture group, like (?:(\d+)-)?
[17:10:04] <rindolf> Shanx: use (?:...)
[17:10:27] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:10:46] <grawity> maybe in combination with named groups, like (?:(?<days>\d+)-)?
[17:12:21] <Shanx> Now it seems so obvious, thanks!
[17:12:35] <Shanx> grawity yes that's my next step
[17:13:22] <raxor2k> bjs: https://bpa.st/6MYA
[17:13:24] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:14:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:14:46] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[17:14:55] <Shanx> r = re.compile(r"(?:(?P<d>\d+)-)?(?:(?P<h>\d+):)?(?P<m>\d+):(?P<s>\d+)(?:\.(?P<ms>\d+))?")
[17:14:59] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:15:03] <Shanx> Seems perfect, thanks!
[17:15:54] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:16:15] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:16:53] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:17:15] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:17:18] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:17:24] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:17:52] *** Joins: Elodin (~weechat@user/elodin)
[17:18:07] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:18:20] <Shanx> Just to understand: I tried with [] to not capture everything but it doesn't work, why?
[17:18:50] <Shanx> Like this: re.compile(r"[\(\d+\)-]?[\(\d+\):]?(\d+):(\d+)(.\d+)?")
[17:18:54] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:18:54] <bjs> Shanx: what do you mean "tried with [] to not capture"
[17:19:03] <bjs> Shanx: why do you say [] will stop it capturing?
[17:19:07] <Shanx> (also without escaping the parenthesis)
[17:19:17] <Shanx> I thought capturing was with () ?
[17:19:31] <Shanx> And [] was to declare a set of characters
[17:19:42] <bjs> Shanx: https://docs.python.org/3/library/re.html  [] is for sets of characters
[17:19:57] <bjs> Shanx: if you don't want to capture just don't put in parens or use (?:...)
[17:20:29] <Shanx> So for me "[\(\d+\)-]? was describing "1-" and saying I only want to capture "1"
[17:20:38] *** Quits: Jefren1 (~Jefren@206.253.157.209) (Ping timeout: 260 seconds)
[17:20:51] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--231.oracle-ocna.com)
[17:20:54] <bjs> Shanx: [\d+] means matches any digit or the "+" symbol
[17:21:02] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:21:35] <bjs> and [\(\d+\)] matches any digit, the "+" symbol, the "(" symbol and the ")" symbol
[17:21:41] <bjs> or*
[17:21:47] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:22:13] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:22:29] *** Joins: Jefren1 (~Jefren@208.104.190.26)
[17:23:47] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[17:24:32] <The-Compiler> no need for the parentheses inside brackets, no?
[17:24:38] <The-Compiler> err
[17:24:39] *** Joins: nyah (~nyah@94.6.71.219)
[17:24:46] <The-Compiler> for the backslashes before the parentheses I mean
[17:24:54] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:24:55] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[17:25:24] *** Parts: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk) ()
[17:26:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:26:57] <fuz> beep
[17:27:18] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:27:55] <leitz> bop
[17:28:12] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Read error: Connection reset by peer)
[17:30:26] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[17:30:27] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:56] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[17:31:01] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[17:31:42] *** Joins: Pickchea (~private@user/pickchea)
[17:32:15] <nedbat> The-Compiler: right
[17:32:17] *** dcaro_lunch is now known as dcaro
[17:32:42] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e83a:ac:3e7a:ae8d)
[17:32:54] * The-Compiler beeps
[17:33:05] <zen_coder> I want to execute a python script directly, without "python3 myscript.py" just "myscript.py"
[17:33:08] <zen_coder> I have zshell
[17:33:10] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[17:33:15] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[17:33:20] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[17:33:31] <zen_coder> I added "#!/usr/bin/python3" as first line in the script
[17:33:39] *** Quits: olejonny (~olejonny@185.3.5.194) (Remote host closed the connection)
[17:33:45] <zen_coder> when I execute I get: "import-im6.q16: not authorized `utils' @ error/constitute.c/WriteImage/1037."
[17:34:05] <nedbat> zen_coder: better would "#!/usr/bin/env python3"
[17:34:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:34:14] <nedbat> *would be
[17:34:22] <grawity> does your text editor add a UTF-8 BOM (does `file myscript.py` report it having one)?
[17:34:58] <nedbat> zen_coder: the program works if you run it as "python3 myscript.py" ?
[17:36:01] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[17:36:43] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Client Quit)
[17:36:53] <zen_coder>  yes the script is working fine when executing it the normal way
[17:36:59] <zen_coder> how can I add the UTF8 boom?
[17:37:07] <zen_coder> I get also this error: from: can't read /var/mail/yaml.loader
[17:37:09] <grawity> you don't want to add it, you want to remove it if it's there
[17:37:15] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[17:37:46] <han-solo> `sed -n l myscript.py | head -2` # and see if there's something there
[17:39:00] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[17:39:39] <zen_coder> this is my output: https://paste.ee/p/7AGzB
[17:40:02] <grawity> no BOM, but your #! isn't the first line, it's the second
[17:40:29] <han-solo> #! has to be first 2 bytes
[17:40:37] <han-solo> no newline
[17:41:10] *** Joins: remolej2 (~kenoba@user/kenoba)
[17:41:37] <zen_coder> now its working
[17:41:39] <zen_coder> thanks
[17:42:00] *** Quits: Jefren1 (~Jefren@208.104.190.26) (Ping timeout: 256 seconds)
[17:42:59] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 264 seconds)
[17:42:59] *** remolej2 is now known as remolej
[17:43:03] <zen_coder> is using "#!/usr/bin/env python3" the most working solution to get working cross different linux machines?
[17:43:16] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Ping timeout: 245 seconds)
[17:43:16] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 245 seconds)
[17:43:26] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[17:43:51] *** Joins: Jefren1 (~Jefren@70.35.66.223)
[17:43:54] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:44:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:44:53] *** Quits: delvian (~delvian@41.13.200.174) (Quit: Leaving)
[17:45:44] *** Joins: fikran (~fikran@user/fikran)
[17:45:50] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:46:24] <randall> zen_coder: It will work for Debian/Ubuntu and derivatives, but IIRC RHEL and friends have py3 as /usr/bin/python, and don't have /usr/bin/python3. Can someone on RHEL confirm this?
[17:46:36] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Read error: Connection reset by peer)
[17:47:41] *** Joins: legola (~legola@46.235.101.181)
[17:48:04] <FFY00> hey, can someone share the output of python -m sysconfig on macos?
[17:48:38] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[17:48:50] *** Joins: esv (~esv@216.237.228.11)
[17:49:01] *** Joins: noord (~noord@user/noord)
[17:50:23] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[17:50:26] *** BillyZane2 is now known as BillyZane
[17:50:30] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[17:50:35] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[17:53:39] <zen_coder> how can I parse an required path argument via argparse which has no flag?
[17:54:16] <zen_coder> my_prog --image="bla" /some/path
[17:54:23] <zen_coder> it is basically "/some/path" which I want
[17:54:24] <grawity> parser.add_argument("--image"); parser.add_argument("path")
[17:54:51] <FFY00> https://docs.python.org/3/library/argparse.html#usage
[17:54:59] <FFY00> you want a positional argument
[17:55:29] *** Joins: ttys000 (~ttys000@user/ttys000)
[17:55:33] <han-solo> randall: i don't have rhel, but since 8 they say there won't be any /usr/bin/python by default ? # https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/8.0_release_notes/index#web-servers-databases-dynamic-languages
[17:55:43] <freeman_h> can someone help me with this. I am getting the error when trying to update some fields https://kopy.io/t7Ejy
[17:55:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[17:56:05] <han-solo> not sure about older ones, but i'd assume no /usr/bin/python pointed to python3, unless explicitly configured
[17:56:50] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[17:57:07] *** Joins: sgn (~sgn@user/sgn)
[17:57:23] *** Joins: p-i-_ (~Ohmu@223.206.149.59)
[17:57:47] *** Quits: Linux77 (~Linux_77@186.233.179.193) (Ping timeout: 265 seconds)
[17:58:26] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Ping timeout: 256 seconds)
[17:58:49] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Remote host closed the connection)
[17:58:55] <freeman_h> grawity, terminal. I have printed out each of the request and can see them on
[17:59:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 245 seconds)
[17:59:32] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Ping timeout: 260 seconds)
[17:59:53] <freeman_h> han-solo, what do you mean not sure about older ones?
[18:00:12] <zen_coder> grawity: parser.add_argument("path", type=str, help="The path to the recipe.") it helps, but the help is not printed
[18:00:14] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th) (Ping timeout: 260 seconds)
[18:00:31] *** Quits: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:00:47] <han-solo> freeman_h: um, i'm not sure if rhel < 8's /usr/bin/python pointed to python3
[18:00:49] *** Joins: Haxxa (~Haxxa@202-63-76-96.ip4.superloop.com)
[18:01:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:01:17] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[18:01:20] *** Joins: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de)
[18:01:52] <Ninpo> it did not
[18:02:30] <Ninpo> 2.7.5
[18:02:41] <marduk> freeman_h: one shouldn't use string interpolation in SQL. It's error prone and not secure. Instead use parametrized queries: https://stackoverflow.com/questions/775296/mysql-parameterized-queries#775399
[18:03:01] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[18:04:14] <han-solo> freeman_h: also, don't interpolate sql query strings. Could you try https://bpa.st/HPSA
[18:04:15] *** Joins: rvalue (~rvalue@user/rvalue)
[18:05:10] <randall> Ah, little bobby tables!
[18:05:32] *** Quits: y1n (~y1n@178.115.43.136.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[18:06:24] <han-solo> i guess, obligatory xkcd is in order https://xkcd.com/327/
[18:06:26] *** Joins: Atlas667 (~Atlas667@193.27.12.10)
[18:08:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[18:08:51] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[18:09:46] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[18:10:38] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[18:11:12] <freeman_h> han-solo, thanks again
[18:11:24] *** Joins: rvalue (~rvalue@user/rvalue)
[18:11:54] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:13:48] <zen_coder> grawity: when I execute my script "foo.py bar"
[18:13:56] <zen_coder> I get "error: unrecognized arguments: bar"
[18:14:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:14:27] *** Joins: magla (~gelignite@55d4b9e2.access.ecotel.net)
[18:16:22] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Quit: Lost terminal)
[18:18:52] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:19:07] *** Quits: cruncher (~cruncher@90.68.118.49) (Quit: Leaving)
[18:19:16] *** Joins: y1n (~y1n@178.165.192.199.wireless.dyn.drei.com)
[18:19:46] *** Joins: dmr (~rdumitru@user/dmr)
[18:20:29] *** Joins: akk (~akk@75.161.146.115)
[18:24:21] *** Joins: yeirr (~yeirr@user/yeirr)
[18:25:03] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[18:25:28] <bjs> zen_coder: with the add_argument you had before?
[18:28:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:28:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:28:28] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[18:29:22] <zen_coder> bjs: yes
[18:29:51] <bjs> zen_coder: but why do you get the error if you add the "path" argument?
[18:31:15] <zen_coder> ahh I added somehow two time the call args = parser.parse_args()
[18:31:28] <zen_coder> in between "parser.add_argument" calls
[18:32:33] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[18:34:14] <raek> is there any tool like "pip download" that can also download wheels for other python versions/platforms?
[18:34:20] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[18:34:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[18:34:57] <raek> I basically want to download all the dependencies of a project, but be sure that they can be installed on any OS and python version
[18:35:19] <raek> I could just download the sdists, but not requiring a compiler on windows would be nice
[18:37:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:37:56] <p-i-_> https://bpa.st/LPTA <-- Can anyone see how to write this pandas code (not mine) properly?  I'm trying to set the first row of a dataframe to all zeros.  Overwriting the _existing_ first row would be fine.
[18:38:09] <han-solo> aren't wheels OS and python version specific ?
[18:38:27] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e83a:ac:3e7a:ae8d) (Remote host closed the connection)
[18:39:03] <raek> han-solo: then can be. but some can also have the tag "py2.py3-none-any", which means they work for any version
[18:39:40] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Quit: guenhael)
[18:39:50] <raek> I have a situation where one of my dependencies (MarkupSafe) has C code in it, so it has different wheels for all the different python versions and platforms
[18:39:55] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[18:39:58] <han-solo> universal wheels should be fine, i guess
[18:40:10] <raek> but all other dependencies are universal
[18:40:15] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:40:43] <jinsun> you can give --python-version and --platform to pip download
[18:41:18] <raek> hmm. then I would need to know all values for those
[18:41:41] <raek> right now I'm considering just downloading all the files listed here for 2.0.1: https://pypi.org/simple/markupsafe/
[18:41:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Ping timeout: 260 seconds)
[18:41:55] *** Quits: gitly (~gitly@85.255.235.189) (Quit: WeeChat 3.3)
[18:43:25] *** Quits: capnyesterday (uid528258@id-528258.lymington.irccloud.com) ()
[18:43:33] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::56df) (Quit: Leaving)
[18:44:08] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[18:44:34] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[18:44:51] <p-i-_> `df_kline.at[0, 'O'] = 0` ... this sets the 'O' col to 0. But how to set ALL cols to 0 for the first (0th) row?
[18:45:57] <han-solo> `df.iloc[0] = 0` # ?
[18:46:35] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[18:46:40] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 260 seconds)
[18:46:44] *** Joins: guenhael1 (~Thunderbi@193.52.208.30)
[18:47:10] <p-i-_> han-solo: tx
[18:47:20] *** Joins: rsx (~dummy@ppp-188-174-135-237.dynamic.mnet-online.de)
[18:47:22] <p-i-_> actually I need to preserve the first col, and set the OTHERS to 0
[18:47:29] <freeman_h> unicord code for bell is U0001F514 what is the code for whale?
[18:48:19] <han-solo> `df.iloc[1:] = 0` # ?
[18:48:24] <raek> this seems to do what I want... will try it. https://pypi.org/project/pip-downloader/
[18:48:26] <han-solo> oh, first col
[18:49:04] <p-i-_> freeman_h: bytes('🐳', encoding='utf-8')
[18:49:55] <p-i-_> Why do I have to use iloc?  If it was a numpy array I could do df[0, 1:] = 0
[18:50:16] <han-solo> `df.iloc[0][cols_without_first_col] = 0` # ?
[18:50:16] *** Joins: AsenMx (~AsenMx@user/asenmx)
[18:51:00] <han-solo> maybe there's a better way
[18:51:05] *** Quits: guenhael1 (~Thunderbi@193.52.208.30) (Ping timeout: 250 seconds)
[18:51:12] <p-i-_> ah df_kline.iloc[0, 1:] = 0 works
[18:51:26] <freeman_h> p-i-_, need the unicode for it
[18:51:27] *** Tashtari` is now known as Tashtari
[18:51:29] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[18:51:30] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[18:51:42] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:54:06] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:54:59] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[18:56:37] *** Joins: Socra (~Socra@206.217.216.27)
[18:56:45] *** Joins: jay-m126_ (~jay-m@154.72.150.133)
[18:56:55] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[18:57:10] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Ping timeout: 250 seconds)
[18:57:45] <han-solo> `'🐳'.encode('unicode_escape')`
[18:58:01] *** Joins: jay-m126 (~jay-m@154.72.150.133)
[19:00:50] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[19:02:24] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[19:03:29] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[19:04:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[19:06:25] <jinsun> that is 'SPOUTING WHALE' apparently
[19:06:54] <jinsun> for whale `"\N{WHALE}".encode("unicode_escape")`
[19:07:06] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:09:17] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 250 seconds)
[19:09:18] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[19:09:22] *** Joins: gitly (~gitly@85.255.235.189)
[19:09:57] <han-solo> yeah
[19:11:02] *** Joins: cheater (~Username@user/cheater)
[19:11:14] *** Quits: Shanx (~Guest16@162.129.118.78.rev.sfr.net) (Quit: Client closed)
[19:11:31] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6450:3e1f:fbe5:993b)
[19:12:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:12:27] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[19:12:54] *** Joins: thiras (~thiras@user/thiras)
[19:13:02] *** Quits: rsx (~dummy@ppp-188-174-135-237.dynamic.mnet-online.de) (Quit: rsx)
[19:14:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:16:02] *** Joins: lina (~lina@user/lina)
[19:17:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:20:38] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:21:07] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:21:15] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[19:21:23] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[19:22:51] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:23:25] <ChkDigit> Does it normally get used after an eggplant?
[19:24:17] <powftw> I have a function which takes an argument. I have a variable inside the function which I need to access inside another function or outside of the function. Ik I could make it global variable and call the function responsible for global variable and call the  variable inside any other function.. but as I said.. it takes an argument which I can't give in unless some computation.
[19:24:23] *** Joins: Klinda (~superleag@user/klinda)
[19:24:50] <powftw> Basically,I wanna know whether I can access a global variable outside the function without calling the function responsible for the variable
[19:25:05] <ChkDigit> Put it inside a class?
[19:25:42] <powftw> I don't wanna involve class in here. The thing is designed without class concept in mind😒
[19:26:08] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[19:27:38] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Quit: guenhael)
[19:27:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[19:27:53] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[19:28:07] <jinsun> you can access global variables from multiple functions yes, it would just look ugly and hard to reason about if you start assigning to it
[19:29:28] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:29:33] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[19:30:07] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[19:31:07] *** Joins: Betal (~Betal@user/betal)
[19:31:14] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[19:32:14] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 260 seconds)
[19:32:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:32:38] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[19:32:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:a378:d036:467f:3986) (Ping timeout: 245 seconds)
[19:34:44] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[19:35:29] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:35:42] <ChkDigit> You can use a variable assigned to a function like:
[19:35:42] <ChkDigit> https://www.kite.com/python/answers/how-to-declare-a-static-variable-in-a-function-in-python
[19:36:30] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[19:36:34] *** Joins: luigibu (~luigi@80.30.201.209)
[19:37:14] *** Joins: prs (~Priyanshu@2409:4043:221e:b7de::1177:8a5)
[19:37:41] *** Quits: y1n (~y1n@178.165.192.199.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[19:38:20] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[19:39:01] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[19:39:17] <jinsun> yeah you can set attributes on functions and avoid having to write global to assign
[19:40:23] <jinsun> but better to turn that function into a class at that point
[19:42:46] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[19:42:53] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[19:43:22] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[19:44:01] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[19:44:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 245 seconds)
[19:44:58] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Quit: Leaving)
[19:45:45] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[19:46:03] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.0)
[19:46:17] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[19:46:49] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:e0ac:7e42:249b:81ae)
[19:48:22] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.203) (Ping timeout: 256 seconds)
[19:49:21] *** Joins: xardas (~xardas@149.233.51.127)
[19:49:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[19:49:26] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[19:52:08] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:53:20] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[19:53:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:54:30] *** Joins: arinov (~arinov@77.67.129.200)
[19:55:04] *** Joins: fikran (~fikran@user/fikran)
[19:55:06] *** Joins: luigibu (~luigi@80.30.201.209)
[19:56:07] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:56:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:56:36] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:56:53] *** Joins: blei (~blei@209.201.38.106)
[19:57:24] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:57:50] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:58:02] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--231.oracle-ocna.com) (Ping timeout: 240 seconds)
[19:58:31] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[19:59:50] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:01:24] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[20:02:42] *** Quits: lina (~lina@user/lina) (Ping timeout: 276 seconds)
[20:04:06] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 245 seconds)
[20:04:19] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:1f61:a421:ebea:97db:c38a)
[20:04:19] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[20:05:34] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:1f61:a421:ebea:97db:c38a) (Client Quit)
[20:05:44] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:07:42] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 268 seconds)
[20:08:47] *** Joins: Betal (~Betal@user/betal)
[20:11:13] *** Joins: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[20:11:14] *** Joins: abip20 (~abdullah@user/abip20)
[20:11:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:12:58] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[20:13:10] *** Quits: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Remote host closed the connection)
[20:13:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:14:06] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 245 seconds)
[20:14:29] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 268 seconds)
[20:15:34] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[20:16:24] *** Joins: gdd (~gdd@129.199.146.230)
[20:16:25] *** Joins: Betal (~Betal@user/betal)
[20:16:56] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:17:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:17:02] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:17:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[20:17:59] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[20:18:07] <raxor2k> bjs: did you look at that paste ?
[20:18:09] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:18:19] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:18:52] *** Quits: BlueSky (~BlueSky@user/bluesky) (Client Quit)
[20:19:10] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:20:02] *** Quits: bandit_za (~bandit@102-65-138-35.dsl.web.africa) (Ping timeout: 240 seconds)
[20:20:02] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 268 seconds)
[20:20:20] *** Joins: AsenMx (~AsenMx@user/asenmx)
[20:20:58] *** Joins: bandit_za (~bandit@102-65-138-35.dsl.web.africa)
[20:22:31] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:22:46] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:23:44] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d92:8a5b:47b4:5d14) (Ping timeout: 260 seconds)
[20:24:30] *** Quits: dmr (~rdumitru@user/dmr) (Ping timeout: 260 seconds)
[20:25:31] *** Quits: prs (~Priyanshu@2409:4043:221e:b7de::1177:8a5) (Remote host closed the connection)
[20:25:46] *** Joins: km (znc@user/km)
[20:28:04] *** Parts: blei (~blei@209.201.38.106) ()
[20:28:12] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[20:29:24] *** dcaro is now known as dcaro_away
[20:30:42] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[20:32:17] *** hhhh is now known as gaybread
[20:32:26] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 260 seconds)
[20:32:39] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:35:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[20:36:31] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[20:38:15] *** Joins: jimm (~jim@about/linux/staff/jim)
[20:38:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[20:38:33] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 250 seconds)
[20:41:05] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:42] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[20:43:12] *** jimm is now known as jim
[20:43:32] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[20:43:36] *** Quits: magla (~gelignite@55d4b9e2.access.ecotel.net) (Quit: Stay safe!)
[20:44:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:10] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[20:46:19] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[20:46:47] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi)
[20:48:22] <sveinse> When will the predicate callable be called in asyncio.Condition().wait_for()? The docs is a bit unclear on that. Each time .notify() or .notify_all() is called?
[20:48:53] *** Joins: l4yer (~l4yer@2001:ac8:31:6e:1011:aaea:946c:9a98)
[20:49:54] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[20:50:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:50:40] <bjs> raxor2k: you don't have to ping me, you can ask the channel.  What paste?
[20:51:29] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[20:51:47] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[20:52:38] *** Joins: luigibu (~luigi@80.30.201.209)
[20:52:51] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[20:53:20] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[20:53:44] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[20:53:58] *** Quits: bandit_za (~bandit@102-65-138-35.dsl.web.africa) (Ping timeout: 268 seconds)
[20:54:17] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[20:55:48] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 268 seconds)
[20:56:06] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi) (Quit: WeeChat 2.8)
[20:56:07] <jinsun> sveinse: it just awaits self.wait() in a loop so yes, it also checks one time before the loop, https://github.com/python/cpython/blob/3.10/Lib/asyncio/locks.py#L286
[20:57:33] <sveinse> jinsun: perfect, thank you
[20:57:53] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:59:08] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:59:24] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr)
[21:01:04] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[21:01:16] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) The birds kept calling his name, thought Caw)
[21:01:36] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 245 seconds)
[21:02:29] <raxor2k> bjs: i sent you paste earlier
[21:03:05] *** Joins: testusr (~testusr@user/testusr)
[21:03:09] <raxor2k> is it possible to use "loop.run_in_exector" here to prevent other tasks and loops from hanging? https://bpa.st/Z4KA
[21:03:24] <raxor2k> not in a coroutine, but in a specific case
[21:03:28] *** Joins: chilversc (~chilversc@user/chilversc)
[21:03:44] *** Joins: nawcom (~nawcom@bulldadachat.com)
[21:03:49] <bjs> raxor2k: yes
[21:04:43] <han-solo> wouldn't it be possible to `await crucd.check_if_registered_user(...)` ?
[21:05:02] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 260 seconds)
[21:05:21] <raxor2k> if i make that function async def so
[21:05:24] <bjs> depends what crud is
[21:05:54] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:05:57] <raxor2k> i keep all my crud functions there
[21:06:11] <raxor2k> crud.py
[21:06:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:06:17] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 268 seconds)
[21:06:26] <ali1234> create read update delete or crud as in junk? lol
[21:06:40] <CrtxReavr> QA people know all about CRUD.
[21:06:56] <ali1234> from the context it really could be either
[21:07:02] *** Joins: luigibu (~luigi@80.30.201.209)
[21:07:10] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:07:17] <bjs> raxor2k: can you not make `check_if_registered_user` an async def?  What is it doing that "hangs" the others?
[21:07:23] <bjs> makes the others hang I should say
[21:07:45] *** Joins: jpic (~jpic@82.142.20.182)
[21:07:49] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:08:02] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[21:08:06] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[21:08:54] *** Joins: tobybl (~tobybl@213.31.134.21)
[21:09:00] <han-solo> raxor2k: are you following the fastapi tutorial  ?
[21:09:07] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[21:10:03] <raxor2k> bjs: the connection to the db makes it hang
[21:10:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:11:01] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[21:11:12] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[21:11:36] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[21:12:09] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 250 seconds)
[21:12:48] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[21:13:25] <raxor2k> han-solo: yes, but this is not an fastapi issue
[21:13:26] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.0) (Ping timeout: 260 seconds)
[21:13:29] <raxor2k> its an asyncio issue
[21:14:34] *** Joins: arinov (~arinov@77.67.129.200)
[21:14:43] <han-solo> yeah, was asking to see if the db client you are using is async friendly
[21:14:56] *** Quits: gyrow (~gyrow@d54C03E98.access.telenet.be) (Ping timeout: 245 seconds)
[21:15:21] <han-solo> which db is it ?
[21:16:55] *** Joins: gyrow (~gyrow@d54c03e98.access.telenet.be)
[21:17:09] *** Joins: kdc_ (~kdc@196.211.197.159)
[21:18:25] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:18:28] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 256 seconds)
[21:18:55] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[21:19:36] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 256 seconds)
[21:20:59] <raxor2k> han-solo: sqlalchemy
[21:21:05] <Evolver> Is there a pypi package to reproducibly convert a string to a friendly name for identification purposes?
[21:21:06] <raxor2k> question is if i need an async DB here?
[21:21:22] *** Joins: magla (~gelignite@55d4b9e2.access.ecotel.net)
[21:22:03] *** Quits: nawcom (~nawcom@bulldadachat.com) (Quit: bye)
[21:22:13] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[21:22:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:23:39] <freeman_h> print(f'\U0001F1F7') according to https://flagpedia.net/emoji this should be the code for the turkey flag but am getting a R
[21:25:23] <supakeen> It's two separate codepoints, not one.
[21:25:27] <supakeen> Also that pages lists "U+1F1F9 U+1F1F7"
[21:25:33] <CrtxReavr> Turkey flag?
[21:25:39] <CrtxReavr> Oh, you mean the flag of Turkey?
[21:25:50] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[21:26:18] <CrtxReavr> freeman_h, does your terminal using a font that includes the Turkish flag?
[21:26:30] <supakeen> It's two codepoints because it's the codepoint for a flag (U+1F1F9) and the modifier for turkey (U+1F1F7)
[21:26:34] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[21:26:58] <supakeen> And U+0001F1F7 = U+1F1F7 REGIONAL INDICATOR SYMBOL LETTER R
[21:27:05] <tdsmith> i thought the interpretation of the codepoints was something like "flag-t flag-r"
[21:27:14] *** Joins: nawcom (~nawcom@bulldadachat.com)
[21:27:28] <supakeen> tdsmith: Ah, could be :)
[21:27:30] <grym> bear + snowflake == polar_bear, too
[21:27:32] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[21:27:35] <grym> unicode math is great
[21:28:00] *** Quits: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:28:22] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[21:28:56] <OMGOMG> how do you write a bear next to a snowflake
[21:29:11] *** Joins: cheater (~Username@user/cheater)
[21:29:30] <han-solo> raxor2k: yes
[21:29:31] <grym> 🐻❄️
[21:29:37] <grym> thusly
[21:29:48] <mefistofeles> grym: what about bear + electromagnetic dipole ?
[21:29:57] <mefistofeles> or a water molecule
[21:30:13] <han-solo> raxor2k: sqlalchemy now have async support
[21:30:39] <grym> mefistofeles: pikachu is more like a mouse really?
[21:30:41] <grym> https://andysalerno.com/posts/weird-emojis/
[21:30:56] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:31:18] <CrtxReavr> Fun Fact: Polar bears and Grizzly bears are the same species.
[21:32:07] <mefistofeles> CrtxReavr: that's not true, though
[21:32:14] <CrtxReavr> It absolutely is.
[21:32:21] <CrtxReavr> https://www.livescience.com/pizzly-bear-hybrids-created-by-climate-crisis.html
[21:32:26] <raxor2k> han-solo: im not fan of async sqlalchemy, but if thats the only solution here, then ..
[21:32:32] <mefistofeles> Ursus arctos is not Ursus maritimus (polar bear)
[21:32:47] <tdsmith> this shows the polar bear glyph composition in terms of three unicode codepoints -- bear face, a "zero width joiner" character, and the snowflake https://usercontent.irccloud-cdn.com/file/PcQrlgvV/image.png
[21:32:53] <CrtxReavr> The naming doesn't trump the biological reality. .
[21:33:18] <tdsmith> are you saying they're observed to interbreed or something else
[21:33:33] <mefistofeles> CrtxReavr: interspecies breeding is different, they are still different species
[21:33:37] <CrtxReavr> The definition of whether or not two creatures are of the same species is if they can mate and have offspring that are also capable of reproducing.
[21:33:41] <mefistofeles> but I get what you mean
[21:33:56] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[21:34:11] <CrtxReavr> Lots of similar species can mate, but have infertile offspring.
[21:34:23] <CrtxReavr> Not so with polar & grizzley bears.
[21:34:46] <mefistofeles> CrtxReavr: infertile offspring is common, but it's not always the case
[21:34:56] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[21:35:31] <han-solo> raxor2k: i don't know if that's the *only* solution, but i guess it is one
[21:35:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[21:35:45] *** Quits: jay-m126 (~jay-m@154.72.150.133) (Ping timeout: 250 seconds)
[21:35:49] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:36:56] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[21:37:37] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1da2:f9da:5bbb:bb23)
[21:37:52] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[21:38:18] *** Quits: jay-m126_ (~jay-m@154.72.150.133) (Ping timeout: 256 seconds)
[21:39:41] *** Joins: nomic (~nomic@185.217.117.51)
[21:39:54] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[21:42:45] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[21:44:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[21:44:55] *** Joins: y1n (~y1n@77.119.202.111.wireless.dyn.drei.com)
[21:45:12] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[21:47:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:50:31] *** Joins: shad (~shad@user/shad)
[21:51:07] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:52:03] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[21:52:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[21:53:03] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[21:53:45] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[21:54:00] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[21:55:35] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:56:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:56:09] *** Joins: Narrat (~omnius@p200300df5f0df16c06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:56:45] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[21:56:59] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 250 seconds)
[21:57:13] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[21:58:01] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[21:58:58] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[21:59:38] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[22:00:32] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 240 seconds)
[22:01:37] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[22:02:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:04:25] *** Joins: fikran (~fikran@user/fikran)
[22:08:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:08:15] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[22:08:21] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[22:09:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[22:10:19] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[22:11:10] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[22:11:15] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Quit: Leaving)
[22:11:44] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Ping timeout: 256 seconds)
[22:11:52] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:12:18] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Ping timeout: 256 seconds)
[22:13:30] *** Joins: jay-m126 (~jay-m@154.72.150.157)
[22:13:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:14:03] *** Joins: jay-m126_ (~jay-m@154.72.150.157)
[22:14:39] <raxor2k> what library do i need to install to be able to use "from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine" ?
[22:15:23] <han-solo> `pip install sqlalchemy[asyncio]`
[22:15:32] *** Quits: ham5urg (~ham5urg@p200300d1673fa300dff8431d317936f1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:16:00] <raxor2k> already have it
[22:16:23] *** Joins: cyphase (~cyphase@user/cyphase)
[22:16:29] *** Joins: ham5urg (~ham5urg@p5ddfcdb8.dip0.t-ipconnect.de)
[22:16:32] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 240 seconds)
[22:18:19] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[22:18:40] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[22:19:12] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[22:19:12] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[22:19:27] *** Joins: ham5urg_ (~ham5urg@p2e54d8bb.dip0.t-ipconnect.de)
[22:19:31] <han-solo> should be able to import then
[22:21:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:21:22] *** Quits: ham5urg (~ham5urg@p5ddfcdb8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:21:55] *** Quits: jay-m126 (~jay-m@154.72.150.157) (Ping timeout: 250 seconds)
[22:22:02] *** Quits: jay-m126_ (~jay-m@154.72.150.157) (Ping timeout: 240 seconds)
[22:22:08] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[22:22:08] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[22:22:11] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[22:22:13] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Remote host closed the connection)
[22:22:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:23:14] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:1173:f37b:b763:51ea) (Quit: Textual IRC Client: www.textualapp.com)
[22:23:50] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--83.oracle-ocna.com)
[22:23:55] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[22:24:12] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[22:24:38] *** Joins: atom951 (~atom951@2a02:c7f:1f58:500:f9db:a744:2a14:dabe)
[22:26:01] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[22:26:04] <atom951> Hi, I just found out that the built-in hash functions silently changes any -1 values returned from  a .__hash__ method into -2, because -1 is used to signify an exception in C. However, I am now wondering: how does a dictionary distinguish between the keys -1 and -2 then? For  example,
[22:26:04] <atom951> https://bpa.st/Z2QQ
[22:26:05] <atom951> We see that despite -1 and -2 having the same hash value, they are still able to reference difference values in the dict. I tried searching for some implementation details for how exactly dict is implemented, but I couldn't find anything.
[22:26:11] *** Quits: sunarch (uid526836@user/sunarch) (Quit: Connection closed for inactivity)
[22:27:10] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:cdd3:b179:217e:d3fa)
[22:27:19] <InPhase> atom951: The hash does not guarantee uniqueness, it just determines bucket placement.  Equality checks are done for uniqueness.
[22:28:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:28:43] <atom951> InPhase ah of course, I suppose there is always a small chance of collision. So it just checks for which bucket the key is in, then just iteratively checks every key in that hash-bucket for equality?
[22:28:54] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:29:02] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[22:29:10] <InPhase> atom951: Correct.
[22:29:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:29:22] <atom951> Ok makes sense, thanks!
[22:29:38] *** Joins: Helenah (~s98259@user/helenah)
[22:29:50] <Helenah> I have a problem with one of my exceptions not giving me line numbers.
[22:30:02] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[22:30:11] <InPhase> Helenah: Code + traceback to https://bpa.st?
[22:31:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[22:32:23] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[22:33:07] <Helenah> InPhase: https://bpa.st/UXDQ
[22:33:19] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[22:33:27] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:33:39] *** Joins: tobybl (~tobybl@213.31.134.21)
[22:34:15] *** Joins: Atque (~Atque@user/atque)
[22:36:13] <InPhase> Helenah: There are no exceptions here.
[22:36:42] <InPhase> Helenah: connection_list is called, and it prints out what you see.
[22:36:48] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:36:52] <InPhase> connection_lost I mean
[22:37:03] <Helenah> So how do I find the "List index out of range" problem?
[22:37:22] <InPhase> Look at what you're doing before that happens and do it differently.
[22:37:23] <Helenah> It's in code further up but can't figure out where unless I'm given some more information.
[22:37:27] <Helenah> Okies
[22:37:32] <Helenah> Thanks
[22:37:40] <InPhase> Well one way is to modify connection_lost and throw an exception instead of printing.
[22:37:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:37:46] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:38:18] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[22:38:22] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 256 seconds)
[22:38:24] <InPhase> If you really want an exception, raise one.  :)  It can at your discretion be temporary, inserted for debugging, and then removed when you figure it out.
[22:38:42] <Helenah> Sure. :)
[22:38:44] <Helenah> Thanks
[22:39:38] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[22:40:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:41:36] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:41:39] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:41:59] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:42:13] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:42:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:43:25] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[22:43:45] <sgt_chuckles> what's the point of using `if name=='main':` in a python file?
[22:44:05] <sgt_chuckles> when you can just start the script at the end of the line w. a function.
[22:44:06] <Wulf> sgt_chuckles: did you eat the dunders?
[22:44:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:44:26] <sgt_chuckles> Wulf: no, haven't had dinner yet
[22:44:38] <sgt_chuckles> happy thanksgiving btw
[22:44:45] <Wulf> sgt_chuckles: some people think it's a good idea that you can both import a module and run a module.
[22:45:34] <sgt_chuckles> can you explain what the line does exactly?
[22:45:41] <sgt_chuckles> like, under the hood.
[22:45:51] <sgt_chuckles> how does the interpreter respond
[22:45:56] <sgt_chuckles> to that line
[22:46:42] <Wulf> sgt_chuckles: iff you execute "python3 foo.py" on your shell, the __name__ attribute of the foo module is set to "__main__".
[22:47:01] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:47:36] *** Joins: arinov (~arinov@213.194.126.155)
[22:47:53] <Wulf> or maybe it's not
[22:48:06] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[22:48:14] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:48:33] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 250 seconds)
[22:48:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:49:19] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:49:41] <Wulf> ok, that's interesting.  foo.py has `import bar'.  bar.py has `import foo'.  Executing `python3 foo.py' causes foo.py to run twice.
[22:49:43] *** Quits: krisd_ (krisd@s0.mydevil.net) (Ping timeout: 265 seconds)
[22:50:04] <ham5urg_> Is it possible in wxpython to get the default background-colour of an input-widget back, after it changed it's color to eg. red?
[22:50:23] *** Joins: Bakunin (~Lindis@user/lindis)
[22:50:24] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[22:50:36] <jinsun> Wulf: it gives you a warning about that too hopefully
[22:51:52] <jinsun> and the part inside `if __name__ == "__main__"` block is run only once
[22:52:29] <jinsun> the other time it runs with a different `__name__`
[22:52:30] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[22:52:39] <leitz> sgt_chuckles, one use case for importable modules it tesiting them.   https://gist.github.com/LeamHall/39d36a06269f7b385f024e151fc6bac0
[22:56:15] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[22:57:01] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:57:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:57:18] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--83.oracle-ocna.com) (Ping timeout: 268 seconds)
[22:57:39] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[22:58:08] *** Joins: krisd (krisd@s0.mydevil.net)
[22:58:08] *** Joins: chuck_ (~chuck@181.191.143.126)
[22:58:12] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Ping timeout: 256 seconds)
[22:58:12] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Ping timeout: 256 seconds)
[22:58:48] *** Quits: slackcals (~slackcals@user/slackcals) (Quit: leaving)
[22:58:59] *** Quits: thevishy (~Nishant@2405:201:f005:c007:5098:b179:18b6:5a33) (Quit: Leaving)
[22:59:04] *** Joins: jethro_ (~jethro_@cpc147188-rdng25-2-0-cust423.15-3.cable.virginm.net)
[22:59:21] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[23:00:43] *** Quits: nuala2 (~nuala@user/nuala) (Quit: ()
[23:00:50] *** Quits: chuck_ (~chuck@181.191.143.126) (Client Quit)
[23:01:18] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[23:01:39] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:01:40] *** Quits: atom951 (~atom951@2a02:c7f:1f58:500:f9db:a744:2a14:dabe) (Quit: Client closed)
[23:03:34] *** Joins: Betal (~Betal@user/betal)
[23:03:48] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7)
[23:05:57] <leitz> sgt_chuckles, if the module is imported, __name__ isn't __main__. If you open up the python interpreter in the same directory as a module like that, you can "import person".
[23:06:01] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[23:06:23] <leitz> It does not show "__name__ is __main__".
[23:06:29] <sgt_chuckles> aaaah
[23:06:31] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[23:06:31] <sgt_chuckles> got it
[23:07:08] <leitz> if, in the interpreter, you   print(__name__), it will give you __main__, because the *interpreter* is __main__, not the imported module.
[23:07:09] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[23:07:32] <leitz> Hopefully that makes sense, I've been out for a while.
[23:07:38] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:08:53] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[23:09:38] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[23:10:00] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:10:11] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[23:10:15] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[23:10:16] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:10:37] <raxor2k> aaaand another reason why i hate following documentations, i get this error when deploying code: https://bpa.st/ZNSA
[23:10:47] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[23:13:19] *** Joins: jay-m126 (~jay-m@129.0.76.242)
[23:13:36] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[23:14:24] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[23:14:37] <nedbat> raxor2k: there is no way this is the fault of the docs. :)
[23:14:38] *** Joins: jay-m126_ (~jay-m@129.0.76.242)
[23:14:55] <raxor2k> nedbat: i was just following this doc: https://fastapi.tiangolo.com/advanced/async-sql-databases/
[23:15:45] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:52] <nedbat> raxor2k: do you think that everyone who follows that doc gets that specific error?
[23:15:58] *** Joins: nyuszika7h_ (nyuszika7h@lykos/dev/nyuszika7h)
[23:16:09] *** Quits: freeman_h (~freeman_h@94.0.217.120) (Read error: Connection reset by peer)
[23:16:29] <raxor2k> jep i do
[23:17:05] <nedbat> raxor2k: why do you think so?
[23:17:27] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[23:18:21] <hogarius> raxor2k: what line do you think is causing the error?
[23:18:33] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[23:18:36] <raxor2k> line 36
[23:18:39] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[23:18:47] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b5c3:77c:d51f:bd2a)
[23:19:29] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:20:14] <hogarius> raxor2k: why did you give a keyword argument on that line?
[23:21:53] <raxor2k> the docs said so :)
[23:22:25] *** Joins: nuala (~nuala@user/nuala)
[23:22:46] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[23:23:23] <nedbat> raxor2k: check_same_thread seems to be only for SQLite
[23:24:02] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:cdd3:b179:217e:d3fa) (Quit: Textual IRC Client: www.textualapp.com)
[23:24:33] <raxor2k> so in other word, i just remove that line then
[23:24:43] <raxor2k> but that is an example of a bad documentation, they should mention it then
[23:24:46] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[23:26:21] <jinsun> it says "In this example, we'll use SQLite ..." at the top though
[23:26:44] <raxor2k> but still , they should have an example for mysql etc etc
[23:29:05] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[23:29:13] <leitz> I find improving documentation helps me contribute back to the community.
[23:29:13] <hogarius> raxor2k: maybe they expect the programmer to adapt each line to that programmer's particular situation.
[23:29:16] *** Quits: km (znc@user/km) (Remote host closed the connection)
[23:29:22] *** Joins: BinaryWave (~BinaryWav@ip68-2-121-39.ph.ph.cox.net)
[23:29:32] *** Joins: as (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[23:29:46] *** Joins: freeman_h (~freeman_h@94.0.217.120)
[23:30:23] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Ping timeout: 250 seconds)
[23:30:24] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[23:30:41] *** Joins: km (znc@user/km)
[23:31:25] <jinsun> it would be better if it gave examples for all cases yes, but maybe that would increase the size of the page too much
[23:31:59] <jinsun> but since it supports only 3 maybe it is still possible to add, someone will have to try contributing and see
[23:32:10] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[23:32:31] <raxor2k> hogarius: thanks for the help to
[23:32:32] <raxor2k> tho
[23:32:35] <raxor2k> it works nowe
[23:32:36] <raxor2k> now
[23:33:10] *** Quits: nyuszika7h_ (nyuszika7h@lykos/dev/nyuszika7h) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:34:51] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7)
[23:36:03] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[23:36:17] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:36:20] <leitz> sgt_chuckles, a shorter, and hopefully still clear example:   https://gist.github.com/LeamHall/39d36a06269f7b385f024e151fc6bac0
[23:36:53] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[23:37:08] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[23:37:44] *** Joins: eron (~eron@186.192.87.8)
[23:37:56] *** Joins: grooverman (~grooverma@177.102.117.95)
[23:38:36] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[23:38:47] *** Joins: Ha-Jo (~Ha-Jo@2a01:c22:8c99:900:b58e:362e:34bc:16b3)
[23:39:27] *** Quits: kdc_ (~kdc@196.211.197.159) (Quit: Leaving)
[23:40:03] *** Quits: eron (~eron@186.192.87.8) (Client Quit)
[23:40:04] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:41:14] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[23:41:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[23:41:16] *** ayusta is now known as ayustae
[23:41:58] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:42:26] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:43:17] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[23:45:01] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[23:46:17] *** Quits: jethro_ (~jethro_@cpc147188-rdng25-2-0-cust423.15-3.cable.virginm.net) (Quit: Leaving)
[23:47:11] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[23:48:13] <willow> i decode the stdout from a subprocess.run() command and it looks like a normal string.  but then when i run split() on it the strings contain a bunch of stuff like this:  ?1049h\x1b[22;0;0t\x1b[>4;2m\x1
[23:48:50] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 260 seconds)
[23:49:05] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[23:50:10] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[23:51:16] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[23:51:18] <Ha-Jo> willow: you may check with the type() function, wether it is really a string or not.
[23:52:25] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[23:52:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:52:30] <vlt> willow: I think it is indeed a string but contains terminal formatting characters.
[23:52:42] <willow> Ha-Jo: yes I already checked.  the result of stdout.decode() is Str
[23:53:12] *** Joins: Echoz (~chris@user/echoz)
[23:53:33] <willow> stdout.decode() is type:  <class 'str'>
[23:53:51] *** Joins: nrg (~NRG@user/nrg)
[23:54:43] <The-Compiler> willow: how do you view the original string? did you try repr() instead?
[23:55:15] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[23:55:19] *** Joins: remedan (~remedan@balak.me)
[23:56:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:56:14] *** Quits: remedan (~remedan@balak.me) (Client Quit)
[23:56:32] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[23:56:55] <willow> here you can see the difference between stdout.decode() and stdout.decode().split(',')   http://paste.debian.net/1220838/
[23:56:58] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[23:57:45] *** Joins: fikran (~fikran@user/fikran)
[23:58:42] <Ha-Jo> willow: your example looks slightly like utf8. Maybe stdout.decode().decode('utf8') does the trick...
[23:59:04] *** Joins: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de)
[23:59:09] <willow> Ha-Jo: i tried with and without utf8.  also tried ascii
[23:59:10] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[23:59:17] *** Joins: remedan (~remedan@balak.me)
[23:59:56] *** Quits: BinaryWave (~BinaryWav@ip68-2-121-39.ph.ph.cox.net) (Quit: BinaryWave)
