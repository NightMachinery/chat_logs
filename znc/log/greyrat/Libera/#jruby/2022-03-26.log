[00:00:16] <byteit101[m]> zulu  17 is ""17.0.2+8-LTS"" what's 18's string?
[00:00:42] <enebo[m]> java -version
[00:00:42] <enebo[m]> openjdk version "18" 2022-03-22
[00:00:42] <enebo[m]> OpenJDK Runtime Environment Zulu18.28+13-CA (build 18+37)
[00:00:42] <enebo[m]> OpenJDK 64-Bit Server VM Zulu18.28+13-CA (build 18+37, mixed mode, sharing)
[00:01:05] <enebo[m]> but the java.runtime.version is "18+37"
[00:01:11] <byteit101[m]> ew, ok
[00:01:29] <byteit101[m]> jruby 9.3 is java 8+ right?
[00:01:37] <enebo[m]> so I think bullet-proofing this would be to say if you cannot parse this then assume it will just be >9
[00:01:45] <enebo[m]> It is
[00:02:23] <byteit101[m]> cmomitting che.. .angholdon
[00:02:38] <byteit101[m]> good lord i think my keybaord is screwy
[00:02:46] <enebo[m]> I wonder if we could look for something which indicates it uses modules as a property value and not do this version checking
[00:02:48] <byteit101[m]> mean to say: "committing change... hold on"
[00:05:59] <byteit101[m]> pushed, give it a pull and reinstall
[00:06:39] <enebo[m]> jruby -e 'begin; java.lang.module.ModuleFinder; rescue NameError; puts "NO MODULES"; end'
[00:07:09] <byteit101[m]> still works on zulu 17 and openjdk 8, but I dropped java 7 support, so jre is no more
[00:09:53] <byteit101[m]> enebo: let me know if the changes I just pushed to master work for zulu 18
[00:12:23] <enebo[m]> byteit101: works on zulu18
[00:12:23] <byteit101[m]> yay!
[00:12:59] <enebo[m]> Good thing you got me to try this.  Also I guess it is fine to remove java 7 support :)
[00:13:25] <byteit101[m]> yes indeed!
[00:13:39] <byteit101[m]> do all the samples/contrib run for you?
[00:13:52] <enebo[m]> heh
[00:14:17] <enebo[m]> what is your other gem?
[00:14:27] <enebo[m]> NameError: uninitialized constant FXCollections
[00:14:42] <byteit101[m]> I'm most curious about contrib/fxmltableview as it uses the ivar support added in 9.3.4, the table should have one column centered
[00:15:03] <byteit101[m]> there is no other jrubyfx-fxmlloader gem anymore in 2.0 :-)
[00:15:25] <enebo[m]> ~/work/jruby-9.3/bin/jruby samples/contrib/collections_demo.rb 
[00:15:25] <enebo[m]> NameError: uninitialized constant FXCollections
[00:15:55] <byteit101[m]> oh, is it found in imports.rb?
[00:17:32] <byteit101[m]> oh I see the problem
[00:18:02] <enebo[m]> https://gist.github.com/enebo/b4dbd9c2084fe64d7e591a0e09482f89
[00:19:45] <byteit101[m]> I must complain about that error, which I've seen before. "no method X, did you mean X"
[00:19:53] <enebo[m]> https://gist.github.com/enebo/223cfdef4be0940827a3d92669c09ff8
[00:21:01] <enebo[m]> Ruby decided to bundle did_you_mean gem and so we do also but there might be a way to turn it off when jrubyfx starts 
[00:21:36] <byteit101[m]> sorry, "no method Y, did you mean X" is helpful, but when X==Y, something is wrong
[00:21:49] <byteit101[m]> what os are you on? linux or mac?
[00:22:02] <enebo[m]> fedora core linux
[00:22:29] <byteit101[m]> ok, I think I'll have to investigate that later, as that sample works fine for me
[00:22:45] <enebo[m]> everything else did run
[00:22:49] <byteit101[m]> oh good!
[00:22:58] <enebo[m]> the binding examples do not exit but that might be as expected
[00:23:53] <byteit101[m]> correct
[00:24:17] <enebo[m]> analog_clock works
[00:24:27] <byteit101[m]> well, maybe the release will be saturday instead of today, as service and tableview both work for me
[00:25:11] <enebo[m]> tree_view.rb has the same issue for me with no updateItem super class method
[00:25:30] <byteit101[m]> did the arity change in 18?
[00:25:44] <enebo[m]> of what in particular?
[00:25:50] <byteit101[m]> updateItem
[00:26:11] <byteit101[m]> I seem to recall the X not found, did you mean X being an arity error
[00:26:12] <enebo[m]> isn't this all about version of fx itself or is fx also 18
[00:26:19] <byteit101[m]> latter
[00:28:42] <byteit101[m]> updateItem is protected
[00:29:20] <byteit101[m]> will have to look in more detail after work
[00:31:23] <enebo[m]> ok
[03:15:48] <byteit101[m]> huh
[03:15:59] <byteit101[m]> so jfx 18 must have changed stuff
[03:25:21] <byteit101[m]> got the same errors when I use jfx18
[03:46:45] <byteit101[m]> Oh, this error is interesting, may be a jruby bug. Does jruby look up the entire class chain for protected methods?
[03:47:19] <headius> For normal Java integration we only bind public methods generally
[03:50:26] <byteit101[m]> then how did this work before?
[03:52:11] <byteit101[m]> just trying to call a protected method from a ruby class extending a java class
[03:57:04] <headius> Have you been running this on a Java 9+ VM?
[13:30:12] *** Quits: johnblood[m] (~johnblood@2001:470:69fc:105::b3b) (Quit: You have been kicked for being idle)
