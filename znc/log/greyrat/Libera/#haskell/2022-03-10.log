[00:01:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8) (Remote host closed the connection)
[00:02:31] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8)
[00:03:03] *** Batzy_ is now known as Batzy
[00:05:37] *** Quits: infandum (~user@205.189.58.89) (Ping timeout: 240 seconds)
[00:07:08] *** Joins: infandum (~user@205.189.58.89)
[00:08:20] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:08:35] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:11:09] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.176)
[00:11:53] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[00:13:04] *** Joins: InstX1_ (~Liam@2601:6c4:4080:3f80:a199:abec:3f6a:f180)
[00:13:56] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[00:15:00] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:2cb5:4e42:6ff9:8715) (Ping timeout: 240 seconds)
[00:15:54] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.176) (Ping timeout: 256 seconds)
[00:17:35] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[00:19:55] <jackdk> you could probably get away without but FPCo recommends checking the generated file into VC regardless: https://www.fpcomplete.com/blog/storing-generated-cabal-files/
[00:21:01] <jackdk> Personally, I would avoid hpack since the cabal file format got a lot of new features since hpack first came out (e.g., common stanzas, and the cabal-fmt tool can maintain lists of modules), and yaml is not a good format
[00:24:27] <shapr> at SimSpace we switched to cabal files first, even though we use stack, but I don't know exactly why!
[00:27:13] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[00:30:07] *** Joins: acidjnk (~acidjnk@p200300d0c7049f95a8560519e34e318b.dip0.t-ipconnect.de)
[00:32:32] *** Quits: InstX1_ (~Liam@2601:6c4:4080:3f80:a199:abec:3f6a:f180) (Ping timeout: 240 seconds)
[00:33:21] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:33:24] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 240 seconds)
[00:35:54] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[00:36:04] *** Joins: xkuru (~xkuru@user/xkuru)
[00:41:34] *** Quits: jinsun (~jinsun@user/jinsun) ()
[00:45:00] *** Joins: jinsun (~jinsun@user/jinsun)
[00:45:29] *** Joins: ArshiaAghaei[m] (~arshiaagh@2001:470:69fc:105::1:c382)
[00:46:44] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[00:46:50] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:48:27] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:48:38] *** Joins: unyu (~pyon@user/pyon)
[00:49:04] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[00:51:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[00:52:31] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:52:46] *** Joins: jushur (~human@user/jushur)
[00:55:15] *** Quits: nuh^ (~nuh@50.232.121.75) (Remote host closed the connection)
[00:55:24] *** Joins: Pickchea (~private@user/pickchea)
[00:55:58] <dpratt> wasn't aware of cabal-fmt, thanks jackdk 
[00:56:57] <jackdk> dpratt: There are certain magic comments you can add to your cabal file to tell cabal-fmt to build module lists, like `-- cabal-fmt: expand src/`
[00:57:09] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[00:57:15] <dpratt> I guess I'm just confused as to why cabal2nix directly supports dealing with package.yaml files if it is necessary to keep a .cabal file around and in sync anyway
[00:57:57] <shapr> me too
[00:58:30] <geekosaur> it's not absolutely necessary unless you want to use one of the many things cabal files support but package.yamldoesn't
[00:58:50] <jackdk> I think because some people don't [keep the generated files in vc]. Perhaps the recommendation changed at some point. This is another reason why I avoid hpack - more moving parts for not that much benefit
[00:58:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[01:01:04] <dpratt> jackdk: (re: magic comments) that's pretty cool
[01:01:37] *** Quits: ub (~Thunderbi@p200300ecdf3be98f4574cf7817efb211.dip0.t-ipconnect.de) (Quit: ub)
[01:03:32] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:05:32] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[01:06:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8) (Remote host closed the connection)
[01:08:31] *** Quits: Topsi (~Tobias@dyndsl-095-033-023-104.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[01:11:04] *** Joins: son0p (~ff@181.136.122.143)
[01:11:07] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[01:11:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:12:02] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[01:12:56] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[01:14:04] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:17:05] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:17:51] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8)
[01:18:08] <janus> is there a way to avoid listing all the modules in the cabal file? i think that is the major advantage of package.yaml
[01:18:29] <janus> for executables, i don't understand why it is important to list the modules
[01:19:15] <sclv> discussion on it here https://github.com/haskell/cabal/issues/5343
[01:22:00] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[01:22:12] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[01:22:25] <dpratt> are computations involving the CReal data type (from the numbers package) precise? mostly for fun, I'm trying to calculate pi according to a prescribed method involving a summation of a series of fractions -- my value of pi diverges from the "official" value after ~40 digits
[01:22:42] <sclv> the entire point of creal is that it is arbitrary precise
[01:22:51] *** Joins: romesrf (~romes@198.177.63.94.rev.vodafone.pt)
[01:22:55] <sclv> i'm not sure why it would diverge, hrm
[01:23:21] <dpratt> sclv: it likely just means my code is bad :)
[01:23:37] <dpratt> just surprising to me I get as far as 40 correct digits
[01:24:06] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[01:24:39] <liz_> could the divergence be due to the slow convergence of the sum? or is it actually deviating from the value?
[01:24:40] <dpratt> at some point I may be willing to suffer the embarrassment of sharing my code, but I'm trying to avoid that fate for now
[01:25:09] <dpratt> liz_: if I understand you correctly, it could well be that
[01:25:23] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[01:25:34] <liz_> what formula are you using?
[01:25:53] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[01:26:47] *** Joins: xkuru (~xkuru@user/xkuru)
[01:27:37] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 240 seconds)
[01:29:34] *** Quits: ishutin (~ishutin@fibhost-67-47-53.fibernet.hu) (Ping timeout: 256 seconds)
[01:30:25] *** Joins: infandum` (~user@bras-base-toroon0637w-grc-17-76-64-95-29.dsl.bell.ca)
[01:30:58] *** Joins: ishutin (~ishutin@79-120-162-190.pool.digikabel.hu)
[01:31:05] <dpratt> dumb question first: I assume there is a Haskell function to count combinations?
[01:31:40] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[01:32:32] <sclv> dpratt: not in base. there's combinatorics libs, but also the formula is simple enough that people tend to just code something up like that by hand
[01:32:32] *** Quits: infandum (~user@205.189.58.89) (Ping timeout: 272 seconds)
[01:32:41] <monochrom> Not in the standard library. Though, the standard library has functions for enumerating all sublists and permutations.
[01:32:53] <monochrom> I don't know what's on Hackage for this.
[01:33:14] <sclv> https://hackage.haskell.org/package/exact-combinatorics-0.2.0.11/docs/Math-Combinatorics-Exact-Binomial.html
[01:33:21] <monochrom> Ah that's nice.
[01:34:17] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[01:35:00] <dpratt> shoot, have to step away for a bit :9
[01:35:04] <dpratt> :(
[01:35:37] *** Joins: hololeap (~hololeap@user/hololeap)
[01:35:52] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8) (Remote host closed the connection)
[01:36:37] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:40:00] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[01:42:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:49:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[01:50:47] *** Quits: infandum` (~user@bras-base-toroon0637w-grc-17-76-64-95-29.dsl.bell.ca) (Remote host closed the connection)
[01:52:59] <janus> sclv: i see the code-generators were merged. would that work with cabal-fmt, such that cabal would effectively regenerate the exposed-moduled like hpack would with stack?
[01:55:08] <sclv> the code-generators pr? that's only for doctest like stuff
[01:55:13] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:ecfc:ebe1:b77a:f914)
[01:55:13] <sclv> unrelated
[01:55:43] <sclv> there's a desire for a cabal-fmt type command for regenerating exposed modules, but no such thing exists
[01:56:02] <sclv> one blocker is a solid exactprint, which is a ticket that's moving very slowly, sadly
[01:56:15] <janus> ah bummer
[02:00:09] *** Joins: fendor (~fendor@91.141.34.180.wireless.dyn.drei.com)
[02:01:10] *** Joins: xkuru (~xkuru@user/xkuru)
[02:04:51] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:06:50] *** Quits: c1utt4r (~c1utt4r@vmi275462.contaboserver.net) (Ping timeout: 250 seconds)
[02:06:58] *** Quits: worldhelloworld2 (~quassel@vmi275462.contaboserver.net) (Ping timeout: 256 seconds)
[02:08:47] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:09:47] <janus> but code-generators sound great! is this why cabal-doctest was deprecated?
[02:11:03] *** Quits: michalz (~michalz@185.246.204.72) (Remote host closed the connection)
[02:11:08] <sclv> unrelated ish. but in general the existing solutions all became super flaky under v2 so this is a stab at stabilizing things
[02:12:12] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:12:26] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:13:00] <janus> sclv: do you know the disadvantages of 'cabal repl --with-ghc=doctest' ? i havn't seen anybody using it, except myself
[02:13:48] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[02:13:48] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:ecfc:ebe1:b77a:f914) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:15:04] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[02:17:25] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[02:18:18] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[02:18:32] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:19:47] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:20:31] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[02:26:19] <sclv> nope, if it works it works
[02:26:33] <sclv> i guess it just can't work from `cabal test` which bothers some people, understandably
[02:29:54] *** Joins: Lycurgus (~juan@98.4.112.204)
[02:31:27] *** Quits: romesrf (~romes@198.177.63.94.rev.vodafone.pt) (Quit: WeeChat 3.4)
[02:32:06] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8)
[02:32:16] *** Joins: tfeb (~tfb@88.98.95.237)
[02:44:54] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[02:45:14] *** EvanR_ is now known as EvanR
[02:45:32] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[02:45:35] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:46:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:47:57] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 240 seconds)
[02:48:04] *** Joins: mud (~mud@user/kadoban)
[02:49:19] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[02:50:17] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[02:56:02] *** Quits: fendor (~fendor@91.141.34.180.wireless.dyn.drei.com) (Remote host closed the connection)
[03:07:50] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8) (Remote host closed the connection)
[03:08:04] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[03:08:12] *** Joins: alp (~alp@user/alp)
[03:09:03] <dpratt> liz_: if you're still around, the answer to your question is: it's a summation where each term is computed by "(3 * choose (2 * n) n) / (16 ^n * (2 * n + 1))"
[03:10:17] <dpratt> that is not how I am constructing the computation, mind you, it's just what the computation is supposed to be doing
[03:17:49] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8)
[03:18:56] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[03:19:11] <liz_> dpratt: is that a summation from 1 to infinity? i've not seen that before :o
[03:20:14] <dpratt> liz_: neither have I; came to me via a "math guy"
[03:21:57] *** Quits: spider__ (~spider@vps-951ce37a.vps.ovh.ca) (Ping timeout: 240 seconds)
[03:22:52] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[03:24:11] <monochrom> I hate combinatorics. :)
[03:24:12] *** Quits: acidjnk (~acidjnk@p200300d0c7049f95a8560519e34e318b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:27:05] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:28:37] <liz_> dpratt: i come from a maths world and i've never seen that before, it's so interesting
[03:30:56] <sclv> i wonder if one can interpret it sort of like the "dartboard" approximation
[03:31:25] <sclv> like you're choosing points in or out of successive approximations to the circle
[03:32:09] <liz_> sclv: that's a monte carlo method, which are super cool
[03:32:54] <liz_> i'm consulting my maths friend (who likes combinatorics) if they've ever seen it before
[03:33:28] <sclv> i also wonder if you expand out the factorials and rearrange if it looks like another more familiar sequence
[03:33:46] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[03:35:37] *** Quits: ishutin (~ishutin@79-120-162-190.pool.digikabel.hu) (Ping timeout: 240 seconds)
[03:37:09] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:37:29] *** Joins: ishutin (~ishutin@fibhost-67-47-41.fibernet.hu)
[03:37:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:39:46] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[03:44:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:45:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[03:46:13] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[03:47:09] *** Joins: cheater (~Username@user/cheater)
[03:48:12] *** Joins: joo-_ (~joo-_@87-49-44-190-mobile.dk.customer.tdc.net)
[03:48:12] *** Quits: joo-_ (~joo-_@87-49-44-190-mobile.dk.customer.tdc.net) (Changing host)
[03:48:12] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[03:48:31] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[03:48:31] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[03:48:31] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Write error: Connection reset by peer)
[03:48:31] *** Quits: hololeap (~hololeap@user/hololeap) (Write error: Connection reset by peer)
[03:48:31] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Read error: Connection reset by peer)
[03:48:31] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Read error: Connection reset by peer)
[03:48:31] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Read error: Connection reset by peer)
[03:48:31] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Write error: Connection reset by peer)
[03:48:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Write error: Connection reset by peer)
[03:48:31] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Write error: Connection reset by peer)
[03:48:31] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Write error: Connection reset by peer)
[03:48:31] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Write error: Connection reset by peer)
[03:48:31] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Write error: Connection reset by peer)
[03:49:20] <dpratt> welp, I got to that point https://paste.tomsmeding.com/5p9Z62eR
[03:49:27] *** Joins: hololeap (~hololeap@user/hololeap)
[03:49:49] <dpratt> works great, if you only need 40 correct digits computed fairly slowly
[03:50:35] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[03:50:52] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[03:50:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:50:53] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:50:54] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:50:58] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[03:50:59] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[03:51:00] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:51:00] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:51:06] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[03:51:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:51:44] *** liz_ is now known as liz
[03:51:59] <liz> dpratt: how long does it take you to compute 40 digits?
[03:53:10] <dpratt> "piDigits 1000" takes about a second to compute 40 correct digits followed by (1000 - 40) incorrect digits
[03:53:18] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:53:23] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[03:54:06] <dpratt> maybe an assumption in how I'm trying to limit the computation is not valid
[03:54:09] *** Joins: unyu (~pyon@user/pyon)
[03:55:37] <dpratt> like I'm assuming each successive term is smaller, is that possibly not the case?
[03:56:47] *** Joins: da39a3ee5e6b4b0d (~textual@171.5.29.46)
[04:00:32] <liz> dpratt: when i ran your code, there was a few errors in digits before 40 as well
[04:00:46] <liz> there seems to be a rounding error in where you're cutting the series off
[04:01:36] <liz> for example, on my machine, at 11 digits the function returned "3.14159265359" but the actual pi at that point is "3.14159265358"
[04:01:58] <liz> to solve that at least you could compute one more digit than is needed and do the rounding yorself
[04:02:59] <liz> i'm not sure about beyond 40 though, it does deviate irreparably for some reason...
[04:03:41] <int-e> dpratt: the Ord instance only uses 40 digits
[04:03:54] <dpratt> whaaa?
[04:04:03] <liz> oh wow lol
[04:04:10] <dpratt> int-e: if that is so, you are a lifesaver
[04:04:12] <int-e> https://hackage.haskell.org/package/numbers-3000.2.0.2/docs/src/Data.Number.CReal.html#line-25 ...digits is defined further down to be 40.
[04:04:20] <liz> what's the solution then? would it be a newtype followed by a custom Ord instance?
[04:05:20] <liz> oh, this code was written by someone at the university of manchester, i was going to do my phd there :o
[04:05:22] <dpratt> I guess I can manually specify how many terms :(
[04:05:41] <int-e> Well, nms and dns are integers so you can compare 10^d * dn to nm...
[04:06:00] <int-e> (and use fromInteger to convert to CReal)
[04:07:40] <int-e> Or this silly idea: takeWhile (\x -> x * 10^d > 1) terms
[04:09:37] <dpratt> int-e: thanks for the suggestions
[04:10:34] *** Joins: farmfrmjakestate (~farmfromj@ganymede.mines.edu)
[04:11:46] <hololeap> what does `ghc-pkg hide` actually do?
[04:12:17] *** Quits: farmfrmjakestate (~farmfromj@ganymede.mines.edu) (Client Quit)
[04:12:50] <int-e> hololeap: hide the package from ghci
[04:13:30] <int-e> for example, `ghc` is hidden by default so you need `ghci -package ghc` to import the `GHC` module from there.
[04:14:04] <int-e> But hiding packages doesn't affect Cabal or cabal-install.
[04:14:14] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 250 seconds)
[04:15:08] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[04:15:12] <hololeap> I just don't see any change in the global package.conf.d/
[04:15:21] *** Joins: xkuru (~xkuru@user/xkuru)
[04:16:05] *** Joins: joo-_ (~joo-_@80-62-117-227-mobile.dk.customer.tdc.net)
[04:16:05] *** Quits: joo-_ (~joo-_@80-62-117-227-mobile.dk.customer.tdc.net) (Changing host)
[04:16:05] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[04:16:48] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[04:21:13] *** Joins: theproffesor (~theproffe@2601:282:847f:8010::7f59)
[04:21:20] <int-e> hololeap: it'll be inside the conf files, non-hidden packages have a field 'exposed: True'; hidden ones lack that
[04:22:08] *** Parts: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa) (Leaving)
[04:22:11] <hololeap> oh, I see
[04:22:33] *** Joins: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa)
[04:22:50] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[04:23:35] <int-e> omitting the field seems needlessly obscure
[04:24:22] <int-e> (I knew I was looking for a flag so I looked at ghc-$VERSION.conf and didn't find it... sigh.)
[04:24:57] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[04:25:14] <int-e> I guess you could say it was well hidden.
[04:25:21] <hololeap> ha
[04:25:42] <hololeap> the docs even say that it sets the 'exposed' flag to 'False'
[04:26:06] *** Quits: da39a3ee5e6b4b0d (~textual@171.5.29.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:26:41] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[04:27:19] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4)
[04:28:46] *** Quits: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa) (Quit: Leaving)
[04:29:41] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4) (Client Quit)
[04:33:59] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4)
[04:37:46] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[04:38:04] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[04:38:10] *** Joins: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa)
[04:39:19] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Quit: Textual IRC Client: www.textualapp.com)
[04:39:48] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[04:40:19] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[04:40:23] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[04:40:37] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[04:40:43] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[04:40:54] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:45:21] *** Joins: agumonke` (~user@37.169.12.236)
[04:45:37] *** Quits: agumonke` (~user@37.169.12.236) (Read error: Connection reset by peer)
[04:47:00] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:02] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:47:48] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 240 seconds)
[04:48:00] *** Joins: agumonke` (~user@88.163.231.79)
[04:55:23] <dpratt> interestingly, if I use Integer (vs CReal) for e.g. computing the numerators/denominators, it computes dramatically faster
[04:56:11] <dpratt> I mean computing the numerators and denominators separately, to be clear
[04:56:22] <int-e> dpratt: makes sense to me
[04:57:02] <int-e> (AIUI, CReal doesn't have any special treatment for integers or other numbers that are represented exactly.)
[04:57:11] <dpratt> also, I now have 1K correct digits, thanks int-e et al
[04:57:24] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 240 seconds)
[04:58:42] *** Joins: strawburr (~user@172.56.40.24)
[05:01:20] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:06:39] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[05:08:24] <dpratt> ok, real stupid noob question: if I have e.g. "src/Main.hs" and "src/Foo.hs" what should the .cabal project look like? -- I tried "other-modules: Foo" which seemed like it was working until I tried to build
[05:09:45] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[05:09:59] <int-e> other-modules: should be fine, hs-source-dirs: is relevant too
[05:10:29] <int-e> an actual cabal file and error message would probably help
[05:10:32] <int-e> @where paste
[05:10:32] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[05:12:50] <dpratt> int-e: https://paste.tomsmeding.com/i9y9LQZk -- the build failure appears due to "Setup: can't find source for Pi in src, dist/build/bms-pi/autogen,..."
[05:14:22] *** Joins: pavonia (~user@user/siracusa)
[05:15:00] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[05:15:27] <int-e> dpratt: hmm. It really should pick up src/Pi.hs if that exists.
[05:15:45] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[05:16:12] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[05:16:50] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-1c52-7a09-75d4-5be2.res6.spectrum.com) (Remote host closed the connection)
[05:18:43] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:18:49] <dpratt> int-e: it does; I've got a setup involving nix, which is cool and all but there is some magic that I don't understand enough yet
[05:22:46] <dpratt> got it to build another way; gotta figure out a bit more about this magic
[05:24:49] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4)
[05:33:05] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[05:37:12] *** Joins: slack1256 (~slack1256@186.11.20.61)
[05:37:34] <slack1256> Can I use wreq to connect to an http/2 server?
[05:37:44] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[05:37:46] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[05:39:52] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[05:40:36] *** Quits: ishutin (~ishutin@fibhost-67-47-41.fibernet.hu) (Ping timeout: 256 seconds)
[05:41:12] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[05:41:29] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[05:42:02] *** Joins: ishutin (~ishutin@94-21-55-38.pool.digikabel.hu)
[05:42:42] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[05:43:07] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[05:45:57] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 256 seconds)
[05:48:33] *** Quits: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa) (Remote host closed the connection)
[05:48:57] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:50:41] *** Joins: kimjetwav (~user@2607:fea8:2363:8f00:2ab8:d312:3da3:ad33)
[05:51:21] <Axman6> hmm,unless things have changed, I don't think we have http/2 client support, but I could be completely wrong, Kazu is pretty amazing
[05:52:11] <Axman6> though, https://hackage.haskell.org/package/http2-3.0.3/docs/Network-HTTP2-Client.html exists, so there may be hope?
[05:57:44] *** Quits: tinwood (~tinwood@canonical/tinwood) (Remote host closed the connection)
[06:00:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[06:00:47] *** Joins: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io)
[06:00:47] *** Quits: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) (Changing host)
[06:00:47] *** Joins: tinwood (~tinwood@canonical/tinwood)
[06:02:22] <slack1256> Yeah, kazu is GOAT . I had not seen that module.
[06:03:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[06:04:32] *** Quits: kimjetwav (~user@2607:fea8:2363:8f00:2ab8:d312:3da3:ad33) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[06:07:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[06:07:08] <slack1256> There is also http2-client. The master branch has bound to older versions of kazu's http2. But there is a branch from avieth with updated ones.
[06:09:42] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:15:59] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[06:16:05] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[06:17:41] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:20:20] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 250 seconds)
[06:22:44] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[06:22:57] *** Joins: ubert1 (~Thunderbi@p200300ecdf3be919fa34792f1e548220.dip0.t-ipconnect.de)
[06:23:49] *** Quits: ubert (~Thunderbi@p200300ecdf3be98fb257cc52479c2a5c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:23:49] *** ubert1 is now known as ubert
[06:24:30] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 272 seconds)
[06:26:00] *** Joins: cyphase (~cyphase@user/cyphase)
[06:26:21] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:29:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[06:30:48] *** Quits: lechner (~lechner@debian/lechner) (Quit: WeeChat 3.0)
[06:32:17] *** Joins: kimjetwav (~user@2607:fea8:2363:8f00:511f:1836:9cbf:948e)
[06:32:19] *** Joins: lechner (~lechner@debian/lechner)
[06:33:00] *** [_] is now known as [itchyjunk]
[06:33:55] *** Joins: unyu (~pyon@user/pyon)
[06:34:17] *** Quits: kimjetwav (~user@2607:fea8:2363:8f00:511f:1836:9cbf:948e) (Client Quit)
[06:37:24] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[06:43:22] *** Joins: cyphase (~cyphase@user/cyphase)
[06:44:05] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:52:19] *** Quits: slack1256 (~slack1256@186.11.20.61) (Remote host closed the connection)
[06:53:15] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Quit: Leaving)
[07:01:34] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[07:03:12] *** Joins: kimjetwav (~user@2607:fea8:2363:8f00:511f:1836:9cbf:948e)
[07:10:16] *** Joins: aeka` (~aeka@2606:6080:1001:16:3492:5f11:f1fb:66ae)
[07:10:48] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[07:11:22] *** Quits: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net) (Ping timeout: 272 seconds)
[07:16:17] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[07:16:33] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[07:21:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:21:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:21:06] *** Joins: wroathe (~wroathe@user/wroathe)
[07:31:00] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[07:31:58] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:32:33] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:35:38] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[07:45:09] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[07:45:42] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[07:46:58] *** Quits: ishutin (~ishutin@94-21-55-38.pool.digikabel.hu) (Ping timeout: 256 seconds)
[07:48:39] *** Joins: ishutin (~ishutin@87-97-88-248.pool.digikabel.hu)
[07:49:28] *** Joins: img (~img@user/img)
[07:55:04] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:56:10] *** Joins: Batzy (~quassel@user/batzy)
[08:00:35] *** Joins: mbuf (~Shakthi@171.61.198.187)
[08:07:21] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[08:07:57] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[08:15:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:19:37] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[08:20:38] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:26:17] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[08:26:26] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:29:03] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-170.cust.tzulo.com)
[08:30:21] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.121)
[08:30:46] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:34:49] *** Joins: img (~img@user/img)
[08:46:06] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[08:47:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:49:17] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 240 seconds)
[08:49:39] *** Quits: lambdap (~lambdap@static.167.190.119.168.clients.your-server.de) (Quit: lambdap)
[08:55:11] *** Quits: incertia (~incertia@207.98.163.88) (Read error: Connection reset by peer)
[08:56:02] *** Joins: incertia (~incertia@207.98.163.88)
[08:59:48] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[09:00:15] *** Joins: notzmv (~zmv@user/notzmv)
[09:07:12] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-170.cust.tzulo.com) (Quit: Leaving)
[09:08:23] *** Quits: ubert (~Thunderbi@p200300ecdf3be919fa34792f1e548220.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:09:31] *** Joins: ubert (~Thunderbi@p200300ecdf3be919a5031f04def6f440.dip0.t-ipconnect.de)
[09:10:57] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[09:10:57] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[09:18:15] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[09:20:12] *** Quits: monochrom (trebla@216.138.220.146) (Quit: NO CARRIER)
[09:20:22] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Quit: No Ping reply in 180 seconds.)
[09:20:34] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4)
[09:21:11] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[09:21:54] *** Quits: strawburr (~user@172.56.40.24) (Remote host closed the connection)
[09:26:44] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[09:29:16] *** Joins: mcglk (~mcglk@131.191.49.120)
[09:29:32] *** Joins: monochrom (trebla@216.138.220.146)
[09:45:23] *** Quits: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (Quit: WeeChat 2.8)
[09:45:52] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[09:46:17] *** Joins: echoreply (~echoreply@45.32.163.16)
[09:46:27] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:50:35] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[09:51:17] *** Quits: ishutin (~ishutin@87-97-88-248.pool.digikabel.hu) (Ping timeout: 240 seconds)
[09:51:32] *** Joins: LuciferGoku (~LuciferGo@103.199.126.179)
[09:51:37] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:52:23] *** Joins: vglfr (~vglfr@88.155.117.136)
[09:53:10] *** Joins: ishutin (~ishutin@178-164-208-88.pool.digikabel.hu)
[09:53:53] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4)
[09:55:39] *** Joins: drdo (~drdo@roach0.drdo.eu)
[10:07:31] *** alMalsamo is now known as lumberjack123
[10:08:40] *** Joins: coot (~coot@213.134.190.95)
[10:09:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:09:31] *** Quits: LuciferGoku (~LuciferGo@103.199.126.179) (Quit: Client closed)
[10:09:35] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[10:12:17] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[10:13:46] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[10:16:25] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[10:25:00] *** Joins: xkuru (~xkuru@user/xkuru)
[10:30:11] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[10:32:28] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[10:32:33] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[10:36:44] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[10:38:04] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:46:36] *** Quits: xff0x (~xff0x@dslb-094-222-029-254.094.222.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:50:49] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:50:58] *** Joins: xff0x (~xff0x@dslb-094-222-029-254.094.222.pools.vodafone-ip.de)
[10:59:55] *** Joins: namkeleser (~namkelese@101.175.104.107)
[11:03:17] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:07:11] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:d276:2c1f:c812:6eec)
[11:08:36] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:d276:2c1f:c812:6eec) (Client Quit)
[11:12:10] *** Joins: acidjnk (~acidjnk@p200300d0c7049f80798dfd3afc1483bd.dip0.t-ipconnect.de)
[11:12:36] *** Quits: ph88^ (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de) (Quit: Leaving)
[11:13:34] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:636b:fa09:9d13:5d9c)
[11:15:26] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[11:17:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:17:44] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[11:17:44] *** Joins: neurocyte0917090 (~neurocyte@IP-212232093045.dynamic.medianet-world.de)
[11:17:44] *** Quits: neurocyte0917090 (~neurocyte@IP-212232093045.dynamic.medianet-world.de) (Changing host)
[11:17:44] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[11:19:25] *** Joins: briandaed (~root@109.95.142.93)
[11:19:47] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-189.mrsn.at)
[11:22:03] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:f0a7:d746:8a92:8ad4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:25:03] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:26:32] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:e1b2:838c:ba67:c714) (Remote host closed the connection)
[11:26:35] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:26:54] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[11:26:56] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[11:27:17] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:27:39] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Ping timeout: 256 seconds)
[11:27:48] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-189.mrsn.at) (Ping timeout: 240 seconds)
[11:33:20] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:41:10] *** Joins: alp (~alp@user/alp)
[11:44:23] *** Joins: michalz (~michalz@185.246.204.87)
[11:45:38] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[11:46:08] *** Joins: chele (~chele@user/chele)
[11:47:36] *** Joins: Akiva (~Akiva@user/Akiva)
[11:48:37] *** Joins: fendor (~fendor@91.141.34.180.wireless.dyn.drei.com)
[11:50:42] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[11:50:55] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[11:52:54] *** Quits: ishutin (~ishutin@178-164-208-88.pool.digikabel.hu) (Ping timeout: 256 seconds)
[11:53:08] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:54:41] *** Joins: ishutin (~ishutin@84-236-60-122.pool.digikabel.hu)
[11:56:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[11:56:15] *** Joins: ahr (~rah@108-87-170-122.lightspeed.jcvlfl.sbcglobal.net)
[11:56:21] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.121) (Quit: ZNC 1.8.2 - https://znc.in)
[11:56:45] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.121)
[12:00:27] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[12:08:12] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.121) (Ping timeout: 240 seconds)
[12:08:51] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[12:09:21] *** Quits: michalz (~michalz@185.246.204.87) (Ping timeout: 256 seconds)
[12:10:05] *** Joins: michalz (~michalz@185.246.204.93)
[12:13:21] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[12:14:48] *** Joins: gensyst (gensyst@user/gensyst)
[12:15:18] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[12:15:24] <gensyst> Currently I find myself going to hackage.org to search docs. How to do this directly from within vscode/HLS?
[12:17:42] <dminuoso> There is a hls-haddock-comments-plugin
[12:19:36] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:20:07] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:fc46:f60:614b:bd)
[12:30:15] *** Quits: oberblastmeister (~oberblast@2001:470:69fc:105::3a60) (Quit: You have been kicked for being idle)
[12:31:27] *** Quits: michalz (~michalz@185.246.204.93) (Read error: No route to host)
[12:33:08] *** Quits: vglfr (~vglfr@88.155.117.136) (Ping timeout: 256 seconds)
[12:34:39] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[12:35:38] *** Joins: vglfr (~vglfr@88.155.27.97)
[12:36:08] *** Joins: cosimone (~user@93.55.99.69)
[12:37:55] *** Joins: jackhill_ (~jackhill@kalessin.dragonsnail.net)
[12:37:59] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (Remote host closed the connection)
[12:42:53] *** Joins: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr)
[12:44:48] <gensyst> dminuoso, are you using it? Do you mean "Haskell Spotlight" extension?
[12:44:55] <gensyst> (that one seems to require online access?)
[12:45:25] <dminuoso> No I dont
[12:46:16] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:46:34] <merijn> So, cabal can/should build offline docs for all your dependencies, but as of v2-build the location on disk can be kinda hard to discover...
[12:46:52] <merijn> Hoogle can also build a database of documentation you can query (with various editor plugins)
[12:47:52] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[12:51:12] *** Joins: ccntrq (~Thunderbi@2a01:c22:8913:e100:e3f1:8fd3:71d8:a24e)
[12:52:29] *** Quits: edwtjo (~edwtjo@user/edwtjo) (Ping timeout: 250 seconds)
[12:52:56] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[12:53:00] *** Quits: rtsn (~nstr@user/rtsn) (Remote host closed the connection)
[12:53:03] *** Joins: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[12:53:03] *** Quits: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[12:53:03] *** Joins: some02 (~cat@user/sudden)
[12:53:13] *** Joins: rtsn (~nstr@h-98-128-229-174.NA.cust.bahnhof.se)
[12:54:13] *** Quits: sudden (~cat@user/sudden) (Ping timeout: 240 seconds)
[12:55:07] <gensyst> Ok, but how to get this hls-haddock-comments-plugin working in vscode?
[12:55:20] <gensyst> I already have Haskell extension.
[12:57:51] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[13:00:04] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:03:02] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[13:03:07] *** Joins: ccntrq1 (~Thunderbi@2a01:c22:910f:ac00:6522:c4f4:7004:500a)
[13:03:49] *** Joins: michalz (~michalz@185.246.204.72)
[13:04:20] *** Joins: edwtjo (~edwtjo@h-109-228-137-133.A213.priv.bahnhof.se)
[13:04:21] *** Quits: edwtjo (~edwtjo@h-109-228-137-133.A213.priv.bahnhof.se) (Changing host)
[13:04:21] *** Joins: edwtjo (~edwtjo@user/edwtjo)
[13:04:41] *** Quits: ahr (~rah@108-87-170-122.lightspeed.jcvlfl.sbcglobal.net) (Quit: leaving)
[13:04:42] *** Quits: ccntrq (~Thunderbi@2a01:c22:8913:e100:e3f1:8fd3:71d8:a24e) (Ping timeout: 252 seconds)
[13:04:42] *** ccntrq1 is now known as ccntrq
[13:06:55] *** Quits: michalz (~michalz@185.246.204.72) (Remote host closed the connection)
[13:12:57] *** Quits: vglfr (~vglfr@88.155.27.97) (Ping timeout: 252 seconds)
[13:13:09] *** Joins: michalz (~michalz@185.246.204.93)
[13:13:16] *** Joins: vglfr (~vglfr@88.155.27.97)
[13:13:38] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:13:41] *** Quits: michalz (~michalz@185.246.204.93) (Remote host closed the connection)
[13:14:36] *** Quits: acidjnk (~acidjnk@p200300d0c7049f80798dfd3afc1483bd.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:16:00] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[13:21:14] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[13:26:11] *** Joins: notzmv (~zmv@user/notzmv)
[13:27:00] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[13:27:43] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:32:38] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 272 seconds)
[13:34:36] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:34:55] *** Joins: c1utt4r (~c1utt4r@vmi275462.contaboserver.net)
[13:37:52] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[13:38:03] <gensyst> dminuoso, "cabal install --lib hls-haddock-comments-plugin" ran through, but i have no idea where it installed this lib and how to activate it in vscode (where I see no differences).
[13:38:51] *** Joins: worldhelloworld2 (~quassel@vmi275462.contaboserver.net)
[13:39:48] <dminuoso> HLS is like latex to me. I have absolutely no clue how to set it up, but somehow I have this bunch of bizarre nix, hie-bios and emacs configuration that I glued together with ducktape, and it works.
[13:39:56] <dminuoso> Dont ask me how or why
[13:40:28] <gensyst> heh
[13:41:05] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8852:a14c:a420:3fd8) (Remote host closed the connection)
[13:41:22] *** Joins: michalz (~michalz@185.246.204.69)
[13:44:51] *** Joins: acidjnk (~acidjnk@p200300d0c7049f80798dfd3afc1483bd.dip0.t-ipconnect.de)
[13:47:13] <gensyst> well, thanks anyway
[13:47:18] *** Quits: gensyst (gensyst@user/gensyst) (Quit: Leaving)
[13:49:58] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:52:15] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[13:56:37] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:02:35] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[14:02:51] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[14:03:49] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:05:42] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[14:07:27] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[14:16:23] <kuribas> dminuoso: you got HLS working for emacs?
[14:16:33] <kuribas> I gave up long time ago.
[14:16:50] *** Quits: ishutin (~ishutin@84-236-60-122.pool.digikabel.hu) (Ping timeout: 256 seconds)
[14:16:52] <kuribas> I couldn't even make it work with my project on vscode.
[14:17:19] <dminuoso> Yes
[14:17:38] <dminuoso> It's really not that complex
[14:18:13] <dminuoso> It's mostly just `(require 'lsp)` and `(add-hook 'haskell-mode-hook #'lsp)`
[14:18:32] *** Joins: ishutin (~ishutin@176-241-45-184.pool.digikabel.hu)
[14:18:34] <dminuoso> I also load lsp-ui after lsp-mode with use-package since I use lsp-ui
[14:19:22] *** Joins: coot (~coot@213.134.190.95)
[14:19:22] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:fc46:f60:614b:bd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:20:20] *** Quits: Erutuon (~Erutuon@user/erutuon) (Quit: WeeChat 2.8)
[14:22:32] <kuribas> It kind of worked, but was very clumsy.
[14:22:42] <kuribas> not user friendly at all.
[14:23:54] *** Quits: worldhelloworld2 (~quassel@vmi275462.contaboserver.net) (Ping timeout: 252 seconds)
[14:23:54] *** Quits: c1utt4r (~c1utt4r@vmi275462.contaboserver.net) (Ping timeout: 252 seconds)
[14:28:11] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:29:05] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[14:29:28] <kuribas> in vscode it's ok, when it works.
[14:29:56] *** Joins: Ram-Z (Ram-Z@2a01:7e01::f03c:91ff:fe57:d2df)
[14:31:30] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[14:31:34] *** Joins: benin (~benin@183.82.26.94)
[14:32:18] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:32] *** Quits: acidjnk (~acidjnk@p200300d0c7049f80798dfd3afc1483bd.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:32:58] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:34:23] *** Joins: euprogramista (~euprogram@103.1.212.126)
[14:36:37] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Remote host closed the connection)
[14:36:40] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[14:37:41] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[14:37:45] *** Joins: acidjnk (~acidjnk@p200300d0c7049f808d4c6b0efdbaed72.dip0.t-ipconnect.de)
[14:38:14] *** Joins: Guest61 (~Guest61@103.142.31.135)
[14:38:42] *** Joins: acidjnk_new (~acidjnk@p200300d0c7049f8064dc8bad685a624a.dip0.t-ipconnect.de)
[14:38:50] *** Joins: zaquest (~notzaques@5.130.79.72)
[14:39:45] *** Quits: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr) (Ping timeout: 256 seconds)
[14:40:18] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f80d87dada801c796f3.dip0.t-ipconnect.de)
[14:41:29] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[14:42:02] *** Quits: acidjnk (~acidjnk@p200300d0c7049f808d4c6b0efdbaed72.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:43:02] *** Quits: acidjnk_new (~acidjnk@p200300d0c7049f8064dc8bad685a624a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:44:53] *** Joins: fockerized (~nut@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[14:45:34] *** Quits: fockerized (~nut@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Client Quit)
[14:46:15] *** Quits: jushur (~human@user/jushur) (Quit:  ¯\_(ツ)_/¯)
[14:46:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Ping timeout: 240 seconds)
[14:48:18] *** Joins: fendor_ (~fendor@91.141.79.203.wireless.dyn.drei.com)
[14:48:54] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[14:49:26] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:49:40] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.121)
[14:50:36] *** Quits: fendor (~fendor@91.141.34.180.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[14:50:51] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[14:52:31] *** Joins: coot (~coot@213.134.190.95)
[14:54:14] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.121) (Ping timeout: 256 seconds)
[14:59:54] *** Quits: vglfr (~vglfr@88.155.27.97) (Ping timeout: 256 seconds)
[15:03:58] *** Joins: unyu (~pyon@user/pyon)
[15:08:08] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:09:24] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Client Quit)
[15:10:48] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:10:57] *** Joins: ccntrq1 (~Thunderbi@2a01:c22:8c55:dd00:e44d:d37e:6b3c:c758)
[15:11:55] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[15:12:18] *** Quits: ccntrq (~Thunderbi@2a01:c22:910f:ac00:6522:c4f4:7004:500a) (Ping timeout: 252 seconds)
[15:12:18] *** ccntrq1 is now known as ccntrq
[15:13:33] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[15:13:48] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[15:14:27] *** Joins: jakalx (~jakalx@base.jakalx.net)
[15:15:25] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:16:25] *** Quits: benin (~benin@183.82.26.94) (Remote host closed the connection)
[15:18:21] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[15:21:52] *** Joins: kuribas` (~user@ip-188-118-57-242.reverse.destiny.be)
[15:22:36] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[15:25:32] *** Joins: bahamas (~lucian@84.232.140.52)
[15:26:00] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Ping timeout: 272 seconds)
[15:28:03] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:36:43] *** Quits: rando25892 (~atler@user/rando25892) (Read error: Connection reset by peer)
[15:42:52] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:43:17] *** Quits: cosimone (~user@93.55.99.69) (Ping timeout: 240 seconds)
[15:46:46] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[15:46:48] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[15:46:51] *** allbery_b is now known as geekosaur
[15:50:21] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[15:56:33] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[15:58:42] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.121)
[15:59:56] *** Joins: romesrf (~romes@198.177.63.94.rev.vodafone.pt)
[16:01:09] <romesrf> o/
[16:01:28] <geekosaur> ohai
[16:02:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[16:02:44] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7049f80d87dada801c796f3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:03:21] <romesrf> おはよ :D
[16:04:54] *** Joins: thevishy (~Nishant@49.37.242.151)
[16:08:39] *** Joins: ph88 (~ph88@tmo-117-197.customers.d1-online.com)
[16:09:16] *** Joins: strawburr (~user@172.56.40.24)
[16:09:48] *** Quits: euprogramista (~euprogram@103.1.212.126) (Ping timeout: 240 seconds)
[16:09:55] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Quit: mikoto-chan)
[16:16:50] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:20c1:bc94:2efb:4ac0)
[16:18:34] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 272 seconds)
[16:21:44] *** Quits: ishutin (~ishutin@176-241-45-184.pool.digikabel.hu) (Ping timeout: 272 seconds)
[16:23:04] *** Joins: ishutin (~ishutin@92-249-141-140.pool.digikabel.hu)
[16:25:17] *** Joins: vpan (~0@212.117.1.172)
[16:32:22] *** Joins: bahamas (~lucian@84.232.140.52)
[16:39:09] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[16:39:28] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[16:44:37] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[16:44:44] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 256 seconds)
[16:46:55] *** Joins: bahamas (~lucian@84.232.140.52)
[16:47:04] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f80ada9268fe0a5343e.dip0.t-ipconnect.de)
[16:48:41] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Ping timeout: 245 seconds)
[16:49:02] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-171.mrsn.at)
[16:52:08] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[16:53:23] *** Joins: euprogramista (~euprogram@103.1.212.126)
[16:57:54] *** Quits: euprogramista (~euprogram@103.1.212.126) (Ping timeout: 252 seconds)
[17:00:21] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[17:05:57] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 256 seconds)
[17:06:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:07:10] *** Joins: texasmynsted (~texasmyns@99.96.221.112)
[17:09:20] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[17:12:12] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-171.mrsn.at) (Ping timeout: 252 seconds)
[17:13:17] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[17:15:26] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[17:15:26] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[17:16:50] *** Joins: Hash (~Hash@irc.websecurity.group)
[17:20:38] *** Quits: ph88 (~ph88@tmo-117-197.customers.d1-online.com) (Ping timeout: 272 seconds)
[17:21:23] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:24:17] <kuribas`> How do I return a strict int?
[17:24:20] <kuribas`> or unboxed int?
[17:24:27] <kuribas`> I don't want an extra boxing...
[17:25:06] <geekosaur> turn on MagicHash, then a value like 1# is an unboxed Int
[17:25:12] <geekosaur> @src Int
[17:25:12] <lambdabot> data Int = I# Int#
[17:25:20] <geekosaur> :t 1#
[17:25:20] <merijn> kuribas`: You just return it? :)
[17:25:21] <lambdabot> GHC.Prim.Int#
[17:25:29] <kuribas`> Can I add them?
[17:25:42] <geekosaur> >< 1# +# 2+
[17:25:47] <geekosaur> > 1# +# 2+
[17:25:48] <merijn> kuribas`: Note that you run into trouble, because unboxed ints can't unify with arbitrary type variables
[17:25:48] <lambdabot>  <hint>:1:9: error:
[17:25:48] <lambdabot>      parse error (possibly incorrect indentation or mismatched brackets)
[17:26:00] <geekosaur> > 1# +# 2#
[17:26:00] <merijn> % :seti -XMagicHash
[17:26:01] <yahb> merijn: 
[17:26:01] <lambdabot>  error:
[17:26:01] <lambdabot>      • Variable not in scope:
[17:26:01] <lambdabot>          (+#) :: GHC.Prim.Int# -> GHC.Prim.Int# -> t
[17:26:10] <merijn> % 1# +# 2#
[17:26:10] <yahb> merijn: ; <interactive>:41:1: error:; * Couldn't match a lifted type with an unlifted type; When matching types; a0 :: *; Int# :: TYPE 'GHC.Exts.IntRep; * In the first argument of `print', namely `it'; In a stmt of an interactive GHCi command: print it
[17:26:39] <ski> % I# (1# +# 2#)
[17:26:39] <merijn> % I# (1# +# 2#)
[17:26:39] <yahb> ski: 3
[17:26:39] <yahb> merijn: 3
[17:26:47] *** Joins: bahamas (~lucian@84.232.140.52)
[17:27:25] <merijn> I probably wouldn't manually unpack Int, very annoying to work with
[17:27:29] <geekosaur> all this said, it's usually better to let ghc do the unboxing, helping it along woth strictness annotations as needed
[17:27:36] <merijn> probably better of with appropriate strictness/UNBOX pragma
[17:27:46] <kuribas`> Can I tag an output as strict?
[17:27:59] <kuribas`> like "idx :: Proxy a -> !Int" ?
[17:28:16] <merijn> kuribas`: No, but that also seems pointless
[17:28:26] <kuribas`> Just to avoid the indirection...
[17:28:28] <merijn> kuribas`: Since idx would only be evaluated when the Int is gonna be used
[17:28:54] <kuribas`> My idea is that it would be inlined, then can be evaluated to a constant.
[17:29:11] <kuribas`> But the lazy boxing is preventing the constant.
[17:29:38] <geekosaur> ghc doesn't do constant folding, sadly
[17:30:00] <kuribas`> right.
[17:30:08] <kuribas`> I could resort to Template Haskell.
[17:30:15] <kuribas`> It would be more ugly, but feasible.
[17:30:26] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:63d2:5fb6:bfcf:e59)
[17:31:01] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7049f80ada9268fe0a5343e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:31:27] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[17:33:28] *** Joins: euprogramista (~euprogram@103.1.212.125)
[17:34:09] <kuribas`> weird it doesn't do such an obvious optimization.
[17:35:51] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:63d2:5fb6:bfcf:e59) (Ping timeout: 252 seconds)
[17:36:13] <geekosaur> I think constant folding is complicated by the fact that it can't "see through" Num instances to tell when it can get away with being strict
[17:36:46] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:78a9:fa63:bc23:f21d)
[17:38:03] *** Quits: euprogramista (~euprogram@103.1.212.125) (Ping timeout: 252 seconds)
[17:38:14] *** Joins: rando25892 (~homefame@user/rando25892)
[17:42:51] *** Quits: strawburr (~user@172.56.40.24) (Read error: Connection reset by peer)
[17:44:42] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[17:44:42] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[17:46:55] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[17:47:40] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[17:48:12] *** Joins: agumonke` (~user@88.163.231.79)
[17:49:54] *** Joins: c1utt4r (~c1utt4r@vmi275462.contaboserver.net)
[17:53:14] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[17:54:00] *** Quits: ccntrq (~Thunderbi@2a01:c22:8c55:dd00:e44d:d37e:6b3c:c758) (Ping timeout: 252 seconds)
[17:54:01] *** Joins: worldhelloworld2 (~quassel@vmi275462.contaboserver.net)
[17:54:48] *** Joins: bahamas (~lucian@84.232.140.52)
[17:55:05] <dpratt> one general problem I'm having using Nix for Haskell dev is that it is neither Haskell nor Nix and therefore I often don't know where to go with my questions
[17:58:00] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 272 seconds)
[17:58:29] *** Joins: unyu (~pyon@user/pyon)
[18:03:04] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[18:04:56] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:78a9:fa63:bc23:f21d) (Ping timeout: 250 seconds)
[18:05:59] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[18:05:59] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[18:06:00] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[18:06:24] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:07:34] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:07:44] <o1lo0lol1o[m]> If I have a handfull of .cabal files that I cannot change, and one that I can change,  is there any `cabal-plan` magic I can do to see the shortest diff to getting working bounds for the whole set?
[18:08:09] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[18:11:50] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Client Quit)
[18:19:41] *** Joins: euprogramista (~euprogram@103.1.212.126)
[18:21:57] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:22:32] *** Joins: _2E0RLZ (~x@user/rawles)
[18:24:00] *** Quits: euprogramista (~euprogram@103.1.212.126) (Ping timeout: 250 seconds)
[18:25:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[18:26:25] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[18:29:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:29:54] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[18:30:05] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[18:30:18] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:32:10] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[18:32:33] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:33:28] *** Quits: ishutin (~ishutin@92-249-141-140.pool.digikabel.hu) (Ping timeout: 272 seconds)
[18:34:36] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:34:46] *** Joins: ishutin (~ishutin@94-21-157-170.pool.digikabel.hu)
[18:35:08] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:9474:382a:5c78:161d)
[18:35:40] *** Quits: byorgey (~byorgey@155.138.238.211) (Quit: leaving)
[18:36:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[18:36:53] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[18:43:23] <kuribas`> geekosaur: I am fine with Ints...
[18:43:39] *** Joins: bahamas (~lucian@84.232.140.52)
[18:46:02] <dminuoso> dpratt: You generally go to ~/git/github/nixpkgs with all your nix problems.
[18:46:35] <dminuoso> If you feel a bit alone, emacs will keep you company
[18:47:05] <exarkun> M-x doctor
[18:48:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:49:32] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:9474:382a:5c78:161d) (Ping timeout: 252 seconds)
[18:52:22] *** Joins: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com)
[18:53:18] <Henson> is there a way to replay a particular test in QuickCheck?  I notice there's a "replay" record in the args type which takes a Maybe that contains the random generator and a size, but there doesn't appear to be any way to construct the random generator.
[18:55:04] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:55:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[19:02:24] <dpratt> dminuoso: gtk, thanks :D
[19:04:23] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[19:04:46] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:06:00] <Henson> ok, I figured it out.  The replay record takes a type of Maybe (QCGen, Int), and QCGen has a show and read instance.  So all I have to do is copy the text "SMGen 1260792181133215248 208396700724833247" from the failing case's usedSeed value, and then use the read function to turn that into the appropriate QCGen to replay the failing test, as well as provide the proper usedSize value.
[19:06:38] * Henson high-fives himself
[19:09:25] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[19:09:32] *** Quits: Ferdirand (~somebody@2001:4c78:2012:5000::2) (Ping timeout: 240 seconds)
[19:17:12] *** Joins: frosch03 (~user@2a02:c98:1003:8000:bf30:b607:4d78:5e32)
[19:18:36] *** Quits: worldhelloworld2 (~quassel@vmi275462.contaboserver.net) (Ping timeout: 240 seconds)
[19:18:47] *** Joins: Inst (~Liam@2601:6c4:4080:3f80:f98b:9b8a:cd5f:e38f)
[19:19:15] *** Quits: c1utt4r (~c1utt4r@vmi275462.contaboserver.net) (Ping timeout: 252 seconds)
[19:19:20] <dpratt> Henson: are you doing this directly from code? looks like you could just construct the SMGen value with e.g. "seedSMGen 1260792181133215248 208396700724833247"
[19:20:56] *** Joins: jmorris (~jmorris@98.221.165.173)
[19:21:27] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:21:28] <jmorris> hi
[19:21:47] *** Quits: mbuf (~Shakthi@171.61.198.187) (Quit: Leaving)
[19:22:35] <Henson> dpratt: yes, you're right.  I thought I looked last night for SMGen and couldn't find it, but I see that it's in the System.Random.SplitMix library.  But the replay needs a QCGen, and I don't see a way of converting the SMGen into a QCGen.
[19:22:37] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:22:46] <Henson> jmorris: hi!
[19:25:13] *** Joins: infandum (~user@205.189.58.94)
[19:25:14] <jmorris> Henson do you think learning Haskell by writing a program is a reasonable way to learn it? I was thinking of building a Kubernetes YAML linter in Haskell. I use Kubernetes daily and want to learn Haskell. Seems like a good way to learn. But maybe that's too ambitious of me..
[19:26:01] <infandum> I think too many file handles are being opened with "mapM readFile xs", what is the appropriate way to prevent this issue? I see online to use unsafeInterleaveIO, but I want to avoid anything unsafe.
[19:27:22] *** Quits: romesrf (~romes@198.177.63.94.rev.vodafone.pt) (Ping timeout: 256 seconds)
[19:28:48] <Henson> jmorris: that's a good question.  Because Haskell is very different than more common imperative languages, I found the learning curve to be pretty steep.  Trying to tackle a big project first might be frustrating and discouraging.  You could certainly give it a shot, but I would suggest that if you start feeling frustrated or lost to take a step back and focus on understanding the smaller...
[19:29:52] <Henson> jmorris: segments of your larger project, like JSON and then YAML parsing (in Haskell the YAML parser is based on the Aeson JSON parser), and then Text handling, and other things, which could be tackled and made into small projects in isolation.  Then once you've figured out the "Haskell Way" of doing those sub components, piece it together to tackle the big project.
[19:30:06] *** Quits: Las[m] (~lasmatrix@2001:470:69fc:105::74e) (Quit: You have been kicked for being idle)
[19:30:36] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[19:31:07] <geekosaur> infandum, note that unless you are using strict BytString version of readFile, it's using unsafeInterleaveIO
[19:32:26] <infandum> geekosaur: Looks like Data.ByteString.Lazy.Char8
[19:32:54] <infandum> which is fed to streaming cassava
[19:32:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[19:33:04] <geekosaur> so it will be chunk-lazy but iirc that's still unsafeInterleaveIO
[19:33:11] <infandum> (Data.Csv.Streaming)
[19:33:53] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[19:33:57] <infandum> So mapM would not result in all opened handles before closing? They would only open and close one at a time?
[19:34:36] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:35:19] <jmorris> Henson: this is a very good suggestion. Thank you. Especially the call out w.r.t. the Aeson JSON parser. I'll try learning the sub-components as smaller individual components as you suggested. Might be my best bet. Coming from a Go background, this should be interesting (:
[19:37:20] <Henson> jmorris: I found "Learn You A Haskell For Great Good" to be very helpful in getting started.  "Real World Haskell" by O'Reilly is also good, but somewhat dated now.  It contains some examples of JSON parsing as well as details on Monad Transformers that aren't covered in "Learn You A Haskell"
[19:39:28] <Henson> jmorris: Haskell is pretty much a functional-only language, so if you're coming from an imperative background you'll need to develop or sharpen your skills of being able to understand how to solve problems with recusive functions and the map/filter/fold list processing tools.
[19:39:29] *** Quits: Guest61 (~Guest61@103.142.31.135) (Quit: Client closed)
[19:39:32] <geekosaur> infandum, no, it opens all and only closes them when the apparent ByteString is gc-d
[19:39:51] <geekosaur> it's not as deterministic as explicitly closing a file
[19:40:28] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:636b:fa09:9d13:5d9c) (Quit: WeeChat 2.8)
[19:40:37] <geekosaur> (with unsafeInterleaveIO the "ByteString" returned is secretly lazily reading the file as needed to extend itself)
[19:40:49] <infandum> geekosaur: Ah, so I should be doing one at a time then. The solution I was thinking was just using something like Control.Foldl, is it that simple?
[19:41:50] <infandum> like, the parser returns a list of lines, so Fold.foldM (Fold.premapM parseFile (Fold.generalize Fold.mconcat)) xs
[19:42:20] *** Joins: bahamas (~lucian@86.120.77.115)
[19:42:20] <infandum> Or would that not deeply evaluate, so every handle will still be open at once
[19:42:32] <geekosaur> you may need to do some forcing to ensure things are performed and gc-d in a timely manner
[19:42:52] <infandum> what is the canonical way to do that?
[19:43:08] <infandum> "try"? Bang patterns?
[19:43:22] <geekosaur> bang patterns. or switch to strict ByteStrings
[19:44:00] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[19:44:18] <infandum> Unfortunately CSV streaming uses lazy, so I don't think I can do the latter
[19:45:16] <infandum> So basically, contents <- lazy reading; !rows <- streaming csv parsing; return rows ?
[19:45:25] <geekosaur> something likethat, yes
[19:45:58] <infandum> and the bang pattern wouldn't be like spine strict or anything like that, but actually have the entire list of strings?
[19:46:23] <infandum> Ugh, it's actually a map, not list of strings
[19:46:40] <infandum> a strict map, which I believe means strict in spine
[19:46:52] <geekosaur> maps are always spine strict
[19:47:27] <geekosaur> strict map should be value strict… but note that there's only one Map type, it's the *operations* that are strict vs. lazy
[19:47:59] *** Joins: ph88 (~ph88@tmo-100-30.customers.d1-online.com)
[19:48:10] <geekosaur> (Maps have to be spine strict, it has to compare keys to know where to insert elements into the Map)
[19:49:18] <infandum> Ah, then I bet cassava is using lazy map
[19:49:22] <infandum> operations
[19:49:34] <maerwald> you should use tapioca
[19:50:54] *** Joins: Ferdirand (~somebody@2001:4c78:2012:5000::2)
[19:54:55] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[19:55:30] *** Quits: ph88 (~ph88@tmo-100-30.customers.d1-online.com) (Ping timeout: 260 seconds)
[19:59:31] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[20:00:10] *** Joins: mncheck (~mncheck@193.224.205.254)
[20:00:51] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:20c1:bc94:2efb:4ac0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:01:06] *** Quits: alp (~alp@user/alp) (Ping timeout: 260 seconds)
[20:01:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:04:53] *** Joins: euprogramista (~euprogram@103.1.212.125)
[20:09:18] *** Quits: euprogramista (~euprogram@103.1.212.125) (Ping timeout: 256 seconds)
[20:11:05] *** Joins: toulene (~toulene@user/toulene)
[20:14:51] *** Joins: off^ (~off@50.232.121.75)
[20:15:41] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f800083b30852f1c45e.dip0.t-ipconnect.de)
[20:17:32] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 252 seconds)
[20:18:14] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::45ee)
[20:18:39] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 252 seconds)
[20:20:59] *** Joins: k8yun (~k8yun@user/k8yun)
[20:28:12] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: Lost terminal)
[20:28:55] *** Joins: joo-_ (~joo-_@80-62-117-227-mobile.dk.customer.tdc.net)
[20:28:55] *** Quits: joo-_ (~joo-_@80-62-117-227-mobile.dk.customer.tdc.net) (Changing host)
[20:28:55] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[20:32:01] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[20:32:23] *** Quits: ishutin (~ishutin@94-21-157-170.pool.digikabel.hu) (Ping timeout: 252 seconds)
[20:33:53] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:33:55] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 256 seconds)
[20:34:13] *** Joins: ishutin (~ishutin@94-21-131-108.pool.digikabel.hu)
[20:37:33] *** Quits: kuribas` (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[20:37:50] *** Joins: liz_ (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa)
[20:42:02] *** Quits: kimjetwav (~user@2607:fea8:2363:8f00:511f:1836:9cbf:948e) (Remote host closed the connection)
[20:42:25] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[20:42:59] *** Quits: frosch03 (~user@2a02:c98:1003:8000:bf30:b607:4d78:5e32) (Remote host closed the connection)
[20:46:27] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[20:49:10] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 260 seconds)
[20:49:35] *** Joins: mncheck (~mncheck@193.224.205.254)
[20:53:06] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[20:53:22] *** Joins: ph88 (~ph88@2a01:598:9091:a56c:50c9:fb0:7045:1b0a)
[20:54:33] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[20:56:46] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:8314:75b7:5450:7049)
[20:57:42] *** Quits: ph88 (~ph88@2a01:598:9091:a56c:50c9:fb0:7045:1b0a) (Ping timeout: 252 seconds)
[21:03:13] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
[21:03:33] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[21:04:59] *** Joins: jbox (~jbox@user/jbox)
[21:06:03] <feetwind> hi all. is there a way to tell ghci what package name a local module/hs file is from? basically, i have two packages with two modules called "Orphans". rather than rename them. i develop just with good old 'ghci -ipkg1/src -ipkg2/src' which works great except in this case where there are two modules with the same name, as from ghci's perspective they're basically in the same pkg
[21:06:14] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[21:07:03] <feetwind> basically hoping to be able to do like, :set -packagename=foo; :load foo/src/Foo.hs; :set -packagename=bar; :load bar/src/Bar.hs
[21:07:48] <feetwind> hmmmm that doesnt really make sense actually, loading bar will just reload foo lol
[21:08:16] <feetwind> anyway, curious about suggestions, for now just gonna rename em
[21:08:34] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[21:09:02] *** Quits: vpan (~0@212.117.1.172) (Quit: Leaving.)
[21:09:07] <geekosaur> renaming is almost certainly best
[21:09:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[21:09:43] <geekosaur> I don't know if ghci's import supports the PackageNames extension but you'd still have to rename them (using `as`) even then
[21:10:27] <geekosaur> import "packageA" Orphans; import qualified "packageB" Orphans as OtherOrphans
[21:10:32] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 240 seconds)
[21:11:50] *** Joins: romesrf (~romes@2001:8a0:6d13:9700:68ff:3f36:9684:1f6c)
[21:12:12] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:13:12] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[21:16:39] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:552b:2cea:2a97:23a4)
[21:17:04] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:18:12] *** Quits: Inst (~Liam@2601:6c4:4080:3f80:f98b:9b8a:cd5f:e38f) (Ping timeout: 250 seconds)
[21:18:39] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[21:19:23] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[21:20:02] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:20:02] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Ping timeout: 272 seconds)
[21:20:20] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[21:20:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[21:22:41] *** Joins: mncheck (~mncheck@193.224.205.254)
[21:23:47] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[21:24:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[21:24:54] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[21:26:52] *** Joins: Akiva (~Akiva@user/Akiva)
[21:31:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:32:34] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:32:38] *** Joins: zebrag (~chris@user/zebrag)
[21:32:42] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:34:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:37:40] *** Joins: alp (~alp@user/alp)
[21:38:06] *** Parts: _2E0RLZ (~x@user/rawles) ()
[21:38:57] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[21:39:05] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[21:39:13] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[21:40:03] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[21:42:23] *** Joins: haskelln00b (~haskelln0@94.177.118.72)
[21:43:56] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[21:44:51] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:45:13] <haskelln00b> :t 4 . 4
[21:45:14] <haskelln00b> 4 . 4 :: (Num (b -> c), Num (a -> b)) => a -> c
[21:45:14] <lambdabot> (Num (b -> c), Num (a -> b)) => a -> c
[21:45:14] <haskelln00b> confused...
[21:49:19] <pavonia> :t 4
[21:49:20] <lambdabot> Num p => p
[21:49:20] <dpratt> haskelln00b: the "." operator composes two functions, but you've supplied two numeric values
[21:49:37] <haskelln00b> yeah - I expected that to be an error
[21:49:45] <haskelln00b> but it has a result which is a function?
[21:49:57] <dpratt> haskelln00b: Haskell is optimistic that you will be able to come up with a type that is both a function and also is numeric
[21:50:13] <liz_> haskelln00b: notice how 4 can be interpreted as any instance of Num
[21:50:40] <liz_> like what dpratt said, haskell can compose 4 with 4, so long as 4 can be interpreted as some Num instance of a function
[21:50:48] *** Joins: econo (uid147250@user/econo)
[21:51:28] <haskelln00b> hmm - but, the result isn't a Num instance, for example; isn't that surprising?
[21:52:03] <liz_> it's interesting that a -> c is not a Num instance in itself, but it fits with the definition of 4
[21:52:09] <liz_> since 4 is just Num a => a
[21:52:32] <liz_> i've never thought about 4 . 4 before, it's interesting :o
[21:52:39] <liz_> :t 3.2 . 4.5
[21:52:40] <lambdabot> (Fractional (b -> c), Fractional (a -> b)) => a -> c
[21:52:51] <liz_> you can do similar stuff with other "literals" like that too it seems
[21:53:18] <geekosaur> there's a Num instance for functions somewhere, it lets you write things like sin^2 + cos^2
[21:53:19] <haskelln00b> yeah, similarly surprising to me...
[21:53:22] <pavonia> :t "foo" . "bar"
[21:53:23] <lambdabot> error:
[21:53:23] <lambdabot>     • Couldn't match expected type ‘b0 -> c’ with actual type ‘[Char]’
[21:53:23] <lambdabot>     • In the first argument of ‘(.)’, namely ‘"foo"’
[21:53:31] *** Joins: vysn (~vysn@user/vysn)
[21:53:36] <liz_> :t "foo"
[21:53:37] <lambdabot> [Char]
[21:53:49] <geekosaur> @let {-# LANGUAGE OverloadedStrings #-}
[21:53:50] <lambdabot>  Defined.
[21:53:54] <geekosaur> :t"foo"
[21:53:58] <geekosaur> :t "foo"
[21:53:59] <lambdabot> [Char]
[21:54:14] <geekosaur> hm
[21:54:15] <liz_> lambdabot is very cool :)
[21:54:56] <geekosaur> % :t "foo"
[21:54:56] <yahb> geekosaur: IsString p => p
[21:55:07] <geekosaur> not sure why it doesn't work in lambdabot
[21:55:22] <geekosaur> % :t "foo" . "bar"
[21:55:23] <yahb> geekosaur: (IsString (b -> c), IsString (a -> b)) => a -> c
[21:56:13] <haskelln00b> :t (\x->4)
[21:56:14] <lambdabot> Num p1 => p2 -> p1
[21:56:27] <haskelln00b> :t 4.(\x->4)
[21:56:28] <lambdabot> (Num b, Num (b -> c)) => a -> c
[21:56:35] <haskelln00b> :t (\x->4).4
[21:56:36] <lambdabot> (Num c, Num (a -> b)) => a -> c
[21:57:07] <haskelln00b> :t (\x->4).(\x->4)
[21:57:08] <lambdabot> Num c => a -> c
[21:59:25] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:59:57] <dpratt> is there anything interesting the new bot on the block can do that lambdabot cannot?
[21:59:59] <geekosaur> @let instance Num a => Num (b -> a) where (+) = liftA2 (+); (-) = liftA2 (-); (*) = liftA2 (*); negate = fmap negate; abs = fmap abs; signum = fmap signum; fromInteger = pure . fromInteger
[22:00:00] <lambdabot>  Defined.
[22:00:08] *** Joins: vglfr (~vglfr@88.155.27.97)
[22:00:14] <geekosaur> yahb is actual ghci in a sandbox; lambdabot only does expressions
[22:00:30] <dpratt> oh, that's interesting
[22:00:35] <geekosaur> also yahb is ghc 9.0, lambdabot is 8.10.7 iirc
[22:00:50] <geekosaur> :t sin^2 + cos^2
[22:00:51] <lambdabot> Floating a => a -> a
[22:00:57] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:8314:75b7:5450:7049) (Ping timeout: 252 seconds)
[22:01:14] <geekosaur> there's your Num instance for functions
[22:01:30] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[22:01:32] *** Joins: fockerized (~nut@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[22:01:41] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[22:01:58] <fockerized> are typefamily and GADT similar and solve similar problems? 
[22:02:04] <geekosaur> > (4 . 4) 1
[22:02:04] <dpratt> I feel like I've seen this sort of trick before in something to do with derivatives
[22:02:06] <lambdabot>  4
[22:02:31] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[22:02:40] <haskelln00b> geekosaur thanks that will take me some time to unpack ... :)
[22:02:44] <liz_> > (sin^2 + cos^2) 3
[22:02:45] <lambdabot>  0.9999999999999999
[22:02:54] <liz_> well that's not correct >:o
[22:03:36] *** Quits: raym (~raym@user/raym) (Quit: brb)
[22:04:03] *** Joins: euprogramista (~euprogram@103.1.212.124)
[22:04:08] <geekosaur> yahb also has a larger set of packages available, although it's still limited
[22:04:28] <pavonia> > succ^10 $ 0
[22:04:30] <lambdabot>  1
[22:05:11] *** Joins: td_ (~td@94.134.91.38)
[22:05:31] <liz_> > succ . succ $ 0
[22:05:32] <lambdabot>  2
[22:05:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:06:01] <geekosaur> > succ^10 $ 1
[22:06:03] <lambdabot>  1024
[22:06:17] <liz_> oh it's (^10) . succ
[22:06:39] <liz_> i thought it was succ . succ . ... . succ
[22:06:52] *** Joins: jakalx (~jakalx@base.jakalx.net)
[22:07:38] *** Joins: raym (~raym@user/raym)
[22:07:44] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:08:17] *** Quits: euprogramista (~euprogram@103.1.212.124) (Ping timeout: 240 seconds)
[22:08:34] <pavonia> Yeah, I've never noticed that sin^2 is ambiguous
[22:09:02] *** Quits: romesrf (~romes@2001:8a0:6d13:9700:68ff:3f36:9684:1f6c) (Ping timeout: 240 seconds)
[22:09:17] <liz_> noob question, is there a function in base that allows one to apply a function n times?
[22:09:38] <pavonia> :t iterate
[22:09:39] <lambdabot> (a -> a) -> a -> [a]
[22:09:44] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:09:47] <liz_> ah thank you
[22:09:47] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[22:09:59] <pavonia> That's not it
[22:11:32] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:11:40] <liz_> > last . (take 5) . (iterate succ) 0
[22:11:41] <pavonia> Hhm, it seems that's still the closest one
[22:11:41] <lambdabot>  error:
[22:11:41] <lambdabot>      • Couldn't match expected type ‘a -> [c]’ with actual type ‘[a0]’
[22:11:41] <lambdabot>      • Possible cause: ‘iterate’ is applied to too many arguments
[22:11:49] <liz_> oh whoops
[22:11:49] <geekosaur> fockerized, I would say no. type families are type level functions; GADTs are just a different way to write ADTs, with some helpful features
[22:11:57] <liz_> > last . (take 5) . (iterate succ) $ 0
[22:11:59] <lambdabot>  4
[22:12:25] <liz_> > (!!5) . (iterate succ) $ 0
[22:12:27] <lambdabot>  5
[22:12:28] <liz_> ah there we go
[22:14:32] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:15:18] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:15:21] *** Joins: mncheck (~mncheck@193.224.205.254)
[22:15:40] *** Quits: ishutin (~ishutin@94-21-131-108.pool.digikabel.hu) (Ping timeout: 256 seconds)
[22:15:44] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[22:17:20] *** Joins: mncheckm (~mncheck@193.224.205.254)
[22:17:25] *** Joins: ishutin (~ishutin@92-249-182-23.pool.digikabel.hu)
[22:21:56] <pavonia> % let f ^. n = (!! n) . iterate f
[22:21:57] <yahb> pavonia: 
[22:22:30] <pavonia> > (sin^.2 + cos^.2) 3
[22:22:31] <lambdabot>  4
[22:23:39] <pavonia> :t (^.)
[22:23:40] <lambdabot> s -> Getting a s a -> a
[22:23:54] <geekosaur> % :t (^.)
[22:23:54] <yahb> geekosaur: (c -> c) -> Int -> c -> c
[22:24:04] <pavonia> Oh, bot confusion
[22:24:12] <geekosaur> I keep doing that too
[22:24:21] <monochrom> You may like iterate' instead of iterate for some use cases.
[22:24:31] <liz_> :t iterate'
[22:24:32] <lambdabot> (a -> a) -> a -> [a]
[22:24:58] <liz_> oh it's just iterate but strict?
[22:25:00] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:2fc2:81e0:5305:9797)
[22:25:09] <monochrom> Yes, it is less lazy in the elements.
[22:26:11] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[22:27:15] *** Joins: bahamas (~lucian@84.232.140.52)
[22:30:42] *** Joins: byorgey (~byorgey@155.138.238.211)
[22:38:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[22:44:13] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:2fc2:81e0:5305:9797) (Ping timeout: 240 seconds)
[22:46:31] <fockerized> geekosaur: i see
[22:54:24] *** Quits: martin02 (~silas@141.84.69.76) (Ping timeout: 272 seconds)
[22:59:59] *** Joins: InstX1_ (~Liam@2600:1006:b05b:3c62:d192:9b6a:699a:8ed7)
[22:59:59] <haskelln00b> :t abs
[23:00:00] <lambdabot> Num a => a -> a
[23:00:03] <haskelln00b> :t abs + abs
[23:00:05] <lambdabot> Num a => a -> a
[23:00:16] <haskelln00b> (abs + abs) 2
[23:00:34] <geekosaur> > (abs + abs) 2
[23:00:36] <lambdabot>  4
[23:01:15] *** Quits: vglfr (~vglfr@88.155.27.97) (Ping timeout: 256 seconds)
[23:01:30] <haskelln00b> x = abs + abs
[23:01:39] <haskelln00b> x 2
[23:01:41] <haskelln00b> > x 2
[23:01:42] <lambdabot>  error:
[23:01:43] <lambdabot>      • Couldn't match expected type ‘t0 -> t’ with actual type ‘Expr’
[23:01:43] <lambdabot>      • The function ‘x’ is applied to one argument,
[23:01:49] <haskelln00b> > x = abs + abs
[23:01:51] <lambdabot>  <hint>:1:3: error: parse error on input ‘=’
[23:02:10] <geekosaur> lambdabot can't do assignments that way
[23:02:29] <geekosaur> and assigning single letter names will break simple-reflect, so is not recommended
[23:02:51] <geekosaur> % instance Num a => Num (b -> a) where (+) = liftA2 (+); (-) = liftA2 (-); (*) = liftA2 (*); negate = fmap negate; abs = fmap abs; signum = fmap signum; fromInteger = pure . fromInteger
[23:02:52] <yahb> geekosaur: 
[23:03:01] <geekosaur> % x = abs + abs
[23:03:01] <yahb> geekosaur: 
[23:03:07] <geekosaur> % x 2
[23:03:08] <yahb> geekosaur: 4
[23:03:21] <tomsmeding> I'm reading the Trees that Grow paper from 2017, and I'm wondering why they use Void instead of () as a type for fields where they don't want to store any data (throughout the paper, but first on page 6). Was there a good reason? (paper link: https://www.microsoft.com/en-us/research/uploads/prod/2016/11/trees-that-grow.pdf )
[23:03:22] <geekosaur> % :t x
[23:03:23] <yahb> geekosaur: Num a => a -> a
[23:03:37] <haskelln00b> ic thx
[23:03:37] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:552b:2cea:2a97:23a4) (Ping timeout: 240 seconds)
[23:06:59] *** Joins: martin02 (~silas@141.84.69.76)
[23:10:50] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:14:05] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[23:14:17] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[23:14:17] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[23:16:40] *** Quits: InstX1_ (~Liam@2600:1006:b05b:3c62:d192:9b6a:699a:8ed7) (Read error: Network is unreachable)
[23:16:50] *** Joins: InstX1_ (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[23:20:23] <geekosaur> % :q
[23:20:23] <yahb> geekosaur: 
[23:20:26] <geekosaur> @undef
[23:20:26] <lambdabot> Undefined.
[23:24:41] <hololeap> hm, Void -> a should be isomorphic to (), no? a^0
[23:25:53] <hololeap> ∃ a
[23:27:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:28:06] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[23:28:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:29:56] *** Lord_of_Life_ is now known as Lord_of_Life
[23:31:36] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[23:32:31] *** Joins: tito (tito@tilde.team)
[23:33:26] *** Joins: haskelln00b89 (~haskelln0@94.177.118.126)
[23:33:27] *** Quits: haskelln00b89 (~haskelln0@94.177.118.126) (Client Quit)
[23:33:37] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:33:38] *** Joins: haskelln00b2 (~haskelln0@94.177.118.126)
[23:34:18] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[23:34:37] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[23:34:41] *** Quits: haskelln00b (~haskelln0@94.177.118.72) (Ping timeout: 256 seconds)
[23:36:06] *** Joins: xkuru (~xkuru@user/xkuru)
[23:39:03] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[23:40:23] <liz_> Void is a type that explicitly has no values; () is a type with precisely one value, the unit ()
[23:40:55] * hololeap nods
[23:42:57] <liz_> Void -> a is a function that one can't call, because you can't provide it with the Void value it requires; () acts as the trivial monoid in effect
[23:43:02] <liz_> i think anyway, i'm not 100% sure
[23:45:28] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[23:45:28] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[23:46:05] <hololeap> I'm vague on the terminology, but there's something about functions relating to exponentials, such that (Bool -> Int) could be represented as a lookup table with (Int ^ Bool) number of possibilities
[23:47:06] <hololeap> and since Void is an empty set, (Void -> a) would become (a ^ 0) -- which solves to 1 or the singleton set ()
[23:48:28] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:50:47] <tomsmeding> hololeap: A -> B can be seen as B^A indeed, and indeed there's precisely one function Void -> a, namely the empty function \x -> case x of {}
[23:52:01] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:52:18] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[23:52:28] <tomsmeding> thing is, in the paper they have this idea that they define a data type like 'data Exp x = Lam (XLam x) Name (Exp x) | Var (XVar x) Name | App (XApp x) (Exp x) (Exp x)', with type families XLam, XVar and XApp that you can instantiate for various tag types to extend your expression tree with extra fields for different parts in a compiler pipeline
[23:53:00] <tomsmeding> and if you want the non-augmented expression type, what they do is 'type instance XLam NonAugmented = Void'
[23:53:28] <tomsmeding> but that makes no sense to me, because then the only thing you can put in that extension field is a bottom, which to me would signal that you're not supposed to use this constructor at all
[23:53:48] <tomsmeding> if they would instead use (), then that would signal "it's fine, nothing here, move along"
[23:54:05] *** Joins: off^ (~off@50.232.121.75)
[23:54:19] <tomsmeding> bottoms are not supposed to be an expected occurrence in expression tree data types
[23:54:54] <liz_> hololeap: i think i'm approaching this from the classical abstract algebra perspective too much, but i think the non-existence of multiplication for Void wouldn't allow it to make a monoid from (a ^ 0)
[23:55:30] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[23:56:07] <tomsmeding> liz_: Void has zero elements, () has one element, 'Void -> a' has one element (namely \x -> case x of {}) and is hence in bijection with ()
[23:56:37] <liz_> oh, i see what you mean now! that's interesting...
[23:57:05] <tomsmeding> if #T is the number of elements in a type T, then #(A -> B) = #B ^ #A
[23:57:19] <tomsmeding> (assuming all relevant types are finite)
[23:57:59] *** liz_ is now known as liz
[23:58:17] <tomsmeding> exponentials (A -> B) fit nicely with products (A,B) and sums (Either A B)
[23:58:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[23:59:18] <tomsmeding> and of course there is also negation (A -> Void), but unfortunately 'Either A (A -> Void)' is isomorphic to A, not to Void :p
[23:59:44] <tomsmeding> um, well, if A is nonempty, that is
