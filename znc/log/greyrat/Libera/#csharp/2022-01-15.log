[00:00:35] <lz_> 3d printers are cool but i can't wait for 4d ones
[00:00:48] <MatthiasVance> I think it used filament faster, and definitely move around faster nasp
[00:01:26] <Nasp> But as fast as in that video
[00:01:37] <Nasp> lz_:  To what, print a tardis?
[00:02:10] <lz_> Nasp: a swing to play with your other selves in the multiverse
[00:08:14] <MatthiasVance> Nasp: all I know is the dial goes from at least 100 to 999
[00:08:21] <MatthiasVance> And I set it from 100 to 999
[00:08:31] <MatthiasVance> And it was done wayyyy faster
[00:08:42] <MatthiasVance> Also this was a tiny print
[00:10:09] <MatthiasVance> It's definitely not 1000mm/s though nasp
[00:10:17] <MatthiasVance> This is a percentage of the original print speed
[00:10:26] <MatthiasVance> So 10x faster but I have no clue what that is
[00:14:00] <brianonymous> hey db goobers, is this bad? i dunno what im doing
[00:14:01] <brianonymous> dbContext.Fragments.AsNoTracking().Where(frag => frag.ProgramClock >= startTime && frag.FragmentId > lastFragId).OrderBy(frag => frag.BlockId).ThenBy(frag => frag.FragmentName))
[00:14:29] <brianonymous> can i make that better/faster/slicker
[00:14:38] <khanred_> delete it
[00:14:46] <brianonymous> that would be faster
[00:14:54] * khanred_  taps temple
[00:22:11] <Suchiman> brianonymous: well the issue is that you're having range predicates on two columns, it can only seek on one of those two columns, the other predicate has to be scanned
[00:22:56] <brianonymous> would it be better to build the list off one sort and c# sort the other bits
[00:23:59] <Suchiman> sorting in C# is always preferrable when the sorting isn't necessary for Skip / Take kind of stuff (e.g. whenever you're retrieving all rows applicable to the predicate to the client side)
[00:24:37] <brianonymous> lemme reframe my question a bit... what i really want to do is walk rows until i hit a sum of one of the columns at a certain point.. but i need to walk it orderly
[00:26:55] <brianonymous> is there a way to do that that isnt dumb and lame..
[00:27:13] <brianonymous> i feel like i should probably do it by a raw query or some such nonsense
[00:27:34] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:34d2:dd4e:ea50:3bed) (Read error: Connection reset by peer)
[00:27:34] <Suchiman> brianonymous: ah yeah the issue here is that the order by causes a blocking operation in the query plan so the database needs to evaluate all data for the predicate and then do an in memory sort of the resulting rows and once it's all sorted, it starts returning them. In order to use a streaming sort so that rows can be returned to the client as they're found, the sorted columns need to be in an index that has the predicate as leading columns
[00:27:34] <Suchiman> and they must be equality compared
[00:28:56] <brianonymous> that sounds horrible
[00:29:21] * brianonymous throws the db against the wall
[00:29:42] <brianonymous> one of those i did make an index
[00:29:48] <brianonymous> the progclock one
[00:31:10] <brianonymous> someone needs to write Sqlite LinkedList Edition
[00:31:32] <Suchiman> brianonymous: basically, the query would need to look something like this dbContext.Fragments.AsNoTracking().Where(frag => frag.FragmentId == lastFragId + 1).OrderBy(frag => frag.BlockId).ThenBy(frag => frag.FragmentName)) and it needs an index such as CREATE INDEX IX_Test ON Fragments (FragmentId, BlockId, FragmentName)
[00:31:34] <Nasp> MatthiasVance:  YEah im pretty sure it can't hgandle 1000
[00:31:47] <Nasp> But i think it's best to find the speed ratio where the print quality is also good
[00:32:06] <brianonymous> Suchiman: thank you! put in notepad, gonna study it
[00:32:24] <bomb> make your printer go out of its comfort zone, go for 100,000!
[00:32:29] <brianonymous> so i should expand muh indices
[00:32:45] <MatthiasVance> Nasp: Yeah
[00:33:01] <MatthiasVance> This was my first print and wanted it to be fast regardless of quality
[00:33:05] <MatthiasVance> I am happy
[00:33:25] <Nasp> Well show pics
[00:33:29] <Nasp> Also benchy time
[00:33:31] <brianonymous> Suchiman: one issue is, those FragmentIds are not sequenctial. thats what blow and makes me soooo mad. i have no reliable steady sequence number
[00:33:57] <brianonymous> well, i should say i do for only about 25% of my data
[00:34:04] <brianonymous> but that other 75%, nada
[00:35:14] <Suchiman> brianonymous: ah, is this SQL Server?
[00:35:20] <Suchiman> and EF Core?
[00:35:42] <Nasp> I see MS now has a guide to upgrade from EF6 to Core
[00:35:46] <Nasp> It kinda says "Just do it"
[00:35:54] <Suchiman> Nasp: lol, link?
[00:36:17] <brianonymous> Suchiman: sqlite
[00:36:32] <Suchiman> ah
[00:37:07] <Nasp> Suchiman:  let me see if i can find it
[00:37:09] <brianonymous> i have my phase 1 sqlite mod on qa, and i definitely see its a ... heavier load
[00:37:22] <Nasp> They are also calling EFCore 7, EF7 now
[00:37:27] <Nasp> Which is not confusing at all
[00:37:29] <brianonymous> wastin all my sweet net5 upgrade gains
[00:37:40] <Nasp> I'm still in progress with .NET 5
[00:37:42] <Nasp> Have taken a few months now
[00:37:48] <brianonymous> controllers?
[00:37:51] <Nasp> yes
[00:37:57] <Nasp> well no controllers yet
[00:38:12] <Nasp> Only a single controller have been moved so far
[00:38:21] <brianonymous> this last upgrade was a controller heavish one.. i mean, for what we do.. i feel you..
[00:38:25] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[00:38:50] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[00:39:06] <Nasp> Then try having 200
[00:39:36] <brianonymous> i just counted, its a WHOLE BUNCH!... 21!
[00:39:42] <brianonymous> XD
[00:39:44] <Nasp> Yeah that's nothing
[00:39:51] <Nasp> Also it's auth stuff and such that takes teim
[00:40:00] <brianonymous> THAT is what fucked me the hardest
[00:40:04] <brianonymous> i had to literally rewrite the auth
[00:40:08] <Nasp> Same here
[00:40:15] <Nasp> I was also told if i could not just cfopy the old one
[00:40:21] <Nasp> And some parts i probably could
[00:40:27] <Nasp> But then we would have the same spaghetti auth code as now
[00:40:54] <Nasp> Suchiman:  https://docs.microsoft.com/en-us/ef/efcore-and-ef6/porting/
[00:41:01] <brianonymous> yeah, it was one of those things i didnt want to do, but it was a benefit in the long run
[00:41:34] <Nasp> Only issue is i have a feeling we wont be done with this for the next year
[00:41:39] <Nasp> We are missing so many people now
[00:41:50] <bomb> they're dead?
[00:41:53] <Nasp> So the people who should have helped with the conversions is now otherwise booked indefinitely
[00:42:04] <brianonymous> i got more than i can handle/utilize right now. wanna borrow a few
[00:42:14] <Nasp> Then your dev team is 8 mean short you can just feel the pressure on people
[00:42:36] <Nasp> For some reason we have always been slow hiring
[00:42:41] <Nasp> And it's not a money question but a mangement one
[00:42:57] <brianonymous> hiring has been hard over here too
[00:43:21] <Suchiman> brianonymous: https://welp.dev/notepad%2B%2B_2022-01-14_22-13-13.png
[00:43:26] <Suchiman> ugh
[00:43:39] <brianonymous> you have failed me
[00:43:57] <Suchiman> brianonymous: https://welp.dev/notepad_2022-01-14_22-13-13.png
[00:44:45] <brianonymous> oh sweet, you made me a diagram. you really do love me
[00:45:00] <Suchiman> xD i'm very dedicated :P
[00:45:18] <Suchiman> what i've drawn up is basically how the data is stored on disk for the previously suggested index
[00:45:39] <Suchiman> and what i've drawn over it is how the query works with the equality predicate and why it doesn't work with a range predicate
[00:45:44] <brianonymous> ahh, that actually really drives it home for me
[00:46:24] <brianonymous> is it that blockid 1 that triggers the stop
[00:46:52] <Suchiman> "triggers the stop"?
[00:46:52] <brianonymous> so im thinking i should only do the db order for progclock.. and then once i got my range, c# sort my others
[00:49:54] *** Parts: devslash (~devslash@46.232.211.210) (Leaving)
[00:54:02] <Suchiman> brianonymous: https://welp.dev/2022-01-14_22-21-27.png https://welp.dev/2022-01-14_22-23-59.png
[00:56:44] <brianonymous> you need to make a book with just these diagrams in there. its the first time it makes sense in under 4 seconds for me
[00:58:07] <Suchiman> hehe
[00:58:41] <brianonymous> thank you for that, that really helped me understand what i am writing out
[00:59:38] <Suchiman> cool, you're welcome :>
[01:01:07] <Nasp> Just do like us and call .ToList and do all sorting in memory
[01:01:10] <Nasp> Much faster right
[01:01:28] <Suchiman> Nasp: assuming there's a .Where before that ToList :|
[01:01:38] <jonp> Nasp: faster so long as it's not a gigantic result set
[01:01:39] <Nasp> Only one filtering for that users data
[01:01:45] <Nasp> Ohh and joking
[01:01:47] <Nasp> but we still do it
[01:02:21] <Nasp> And yeah as long as the user has managable data it's actually fine
[01:02:29] <Nasp> Then when somebody hits 100k records or so it breaks
[01:03:25] <brianonymous> Nasp: thats what im starting to think.. sorty bits in mem
[01:03:46] <brianonymous> the good part is that these lists wont be more than like 10-20 rows
[01:04:35] <Nasp> Yeah then it doesn't really matter :D
[01:04:44] <Nasp> 100k records being pulled every minute :D
[01:06:45] <brianonymous> serious question tho - is there a such thing as a linked list db like sqlite
[01:07:01] <bomb> yeah, Kyoto Cabinet / Tokyo Cabinet
[01:07:22] <brianonymous> never heard of those.. googlin''
[01:08:01] <brianonymous> i need the storage on disk, but man, i feel like im using the wrong tool
[01:12:00] <brianonymous> i mean.. if my insert code was fancy enough, i suppose i could emulate such a thing
[01:12:31] <bomb> what was wrong with LevelDB and such?
[01:12:53] <brianonymous> i dunno what leveldb is
[01:13:26] <bomb> geez, which rock you've been living under?
[01:14:04] <Slade> brianonymous, leveldb is a google value/key db built into browsers..   high perf stuff usually uses RocksDb tho
[01:14:16] <Slade> which is roughly compatible, but more concurrent
[01:14:23] <brianonymous> i live under the rock where there are no dbs
[01:15:35] <bomb> heh, you fopen() XML files?
[01:16:23] <Slade> <brianonymous> serious question tho - is there a such thing as a linked list db like sqlite  <-- what the use case here.
[01:17:43] <brianonymous> walking rows that come in out of order, but without having to sort on 35k rows first
[01:18:01] <brianonymous> and also being on disk
[01:18:03] <Slade> do you care about the order?
[01:18:10] <brianonymous> its the most important thing
[01:18:33] <bomb> SQLite takes care of all those details for you
[01:18:48] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[01:18:52] <Slade> where is sqlite failing you?
[01:18:55] <brianonymous> it does.. but its just a bit pokey.. this started out as optimization questions
[01:19:21] <brianonymous> it just feels clunky for what i really have to do, so i was just wondering if there was an actual thing that does what i truly want
[01:19:37] * Pokey was summoned by brianonymous 
[01:19:53] <brianonymous> orly
[01:20:27] <Slade> so, rocksdb i super fast and low level, it might meet your needs assuming you dont mind wrapping kv.. sqlite is going to be more performant if you mess around with when you call the fsyncs
[01:21:17] <brianonymous> Slade: yeah, thats what it comes down to now. just making sure im doing the right things, etc etc.. im double whammied in the fact that ive never used EF or sqlite before, so im slurpin up best practice
[01:21:20] <Slade> rocksdb is a db, but is also used often as the databackend for other databases (like mysql/mongo/etc)
[01:21:35] <Slade> oh. EF is going to give you way less control
[01:21:58] <brianonymous> but i also have a very simple situation, at least in terms of data. one table, one entity
[01:22:08] <Slade> does all your data serialize nicely to json/someblob?
[01:22:17] <brianonymous> it is a direct serialization from json
[01:23:06] <Slade> do you need lots of indexes/search things?
[01:23:16] <Slade> or is it scanning
[01:23:18] <brianonymous> for the way its stored i do
[01:23:52] <brianonymous> i need to walk rows, but there is no linear sequence id i can follow
[01:24:03] <brianonymous> i actually have to work in time
[01:25:29] <brianonymous> whats worse is that there could be gaps in that time, so i cant specify some kind of end time
[01:25:33] <brianonymous> i have to accumulate durations
[01:26:14] <Slade> brianonymous, so you can make your primary key the time?
[01:26:18] <brianonymous> i did
[01:26:37] <brianonymous> .HasIndex(u => new { u.ProgramClock })
[01:26:44] <brianonymous> oh, i guess thats not the primary key
[01:26:52] <brianonymous> i made an id field for that, cuz stackoverflow said so
[01:27:02] <Slade> yea. thats fine as well. but it could be
[01:27:54] <Slade> in situations similar to this i make an int64 primarykey thats got the timebuilt in thats designed to survive up lots of things happening the same millisecond
[01:27:55] <brianonymous> my reading case is just a starting clock and a duration
[01:27:56] <bomb> brianonymous whatcha think about my little demo? https://vocaroo.com/1nbJayTTWSyA
[01:28:32] <brianonymous> bomb: very clean sounding
[01:28:43] <bomb> almost DI right
[01:29:03] <brianonymous> the second enrty raises suspicions
[01:29:28] <bomb> hmm?
[01:29:29] <Slade> brianonymous, sounds suitable for both sqlite and rocksdb
[01:29:45] <brianonymous> my brain says guitarkeys
[01:30:15] <Slade> brianonymous, if performance is a concern and fast seeking just on time is what you need then use rocks
[01:30:17] <bomb> all keyboard yes
[01:30:36] <brianonymous> sweet
[01:31:01] <Slade> key =  snowflake entry (time+counter)   value=jsonblob
[01:31:02] <bomb> MIDI skilz B-)
[01:31:03] <brianonymous> it was legit hard to tell for the first 10secs
[01:31:19] <brianonymous> snowflake! these are words on my radar
[01:31:25] <bomb> the lead guitar is unconvincing?
[01:31:41] <brianonymous> bomb: thats the part where i knew it was keys
[01:31:51] <brianonymous> ill find the exact spot
[01:32:00] <brianonymous> 22
[01:32:28] <brianonymous> thats when you turned back into a keyboard player again
[01:32:41] <bomb> I knew it. yeah, scale run done too much
[01:32:48] <Suchiman> brianonymous: btw. while it's ugly you could also do dbContext.Fragments.AsNoTracking().Where(frag => frag.FragmentId == dbContext.Fragments.Where(x => x.FragmentId > lastFragId).OrderBy(x => x.FragmentId).FirstOrDefault()).OrderBy(frag => frag.BlockId).ThenBy(frag => frag.FragmentName))
[01:33:03] <bomb> brianonymous thanks for the feedback!
[01:33:04] <Suchiman> brianonymous: basically you first figure out what's the next id is and then get all of those
[01:33:06] <brianonymous> Suchiman: oh my
[01:33:17] <brianonymous> notepadding that one
[01:33:36] <brianonymous> Suchiman: oh i see. like a nested select?
[01:33:36] <Suchiman> brianonymous: the advantage is that it works with the index i've previously suggested
[01:33:38] <Slade> brianonymous, convert this from sql to c# for your snowflakes.   SELECT (        (((floor(extract(epoch from $timestamp) * 1000)::bigint) - 1514764800000) << 23) | ($producerid << 10) ) | $sequence
[01:33:40] <Suchiman> brianonymous: yeah
[01:34:04] <Slade> Suchiman, his case is s simple he should just be dappering it up :P
[01:34:25] <Nasp> Lol
[01:34:25] <Suchiman> Slade: SQLite not having SELECT TOP WITH TIES is a pain
[01:34:26] <Nasp> Why
[01:34:35] <brianonymous> DevJohnC wasnt too far off from suggesting i could just file dump my own thing
[01:34:35] <Nasp> What is it with people and this Dapper fetish
[01:35:20] <DevJohnC> you typoed diaper fetish, weirdo
[01:35:21] <brianonymous> bomb: sure! and i hope i didnt offend.. not my intent
[01:35:40] <Slade> brianonymous,    https://github.com/curiosity-ai/rocksdb-sharp   spend 1 hour and hook it up. bail if its not for you
[01:35:58] <bomb> brianonymous oh, not at all. it was 100% helpful feedback
[01:37:06] <Suchiman> Slade: how weird, facebook engineers forking a google project xD
[01:37:23] <Slade> Suchiman, indeed
[01:37:49] <Slade> Suchiman, which is in turn used by oracle. http://myrocks.io/
[01:38:03] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[01:38:08] <Suchiman> ._.
[01:38:11] <Slade> "use rocksdb behind mysql to gain better speeds and efficiencies"
[01:38:27] <Slade> mongo did the same. https://github.com/mongodb-partners/mongo-rocks
[01:38:34] <bomb> brianonymous can I get your honest opinion once more? https://vocaroo.com/1dfmeHwrMULX
[01:38:43] <Nasp> What is Rockdb and what advantages does it have?
[01:38:51] <Slade> Nasp, its just a high performance leveldb
[01:38:52] <Nasp> In general don't you want ot keep with known tech?
[01:39:33] <Slade> Nasp, thats sorta misleading. just because YOU dont know about it.
[01:39:47] <Nasp> Well do we need to make a poll?
[01:39:58] <Nasp> In general i think people prefer to stay with a bit tried and tested tools for storage
[01:40:16] <brianonymous> bomb: the acoustic guit is great
[01:40:31] <Slade> which is why Kafka uses RocksDb, and why mysql and mongodb have rocksdb backends
[01:40:53] <Slade> its lowerlevel, but it a solid key/value db thats fast
[01:41:17] <Slade> and is a port of the same leveldb you use in chrome
[01:41:54] <brianonymous> bomb: also the solo bits is more authentic guitar noodling.. i can hear the portamento/legato mode they got rollin
[01:42:42] <brianonymous> Slade: kafka is entering my work life.. and this snowflake thing i keep hearing about
[01:44:00] <Slade> brianonymous, then definitely look at the rocksdb
[01:44:01] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[01:44:11] <Slade> or just use ktables and ksql to grab your data
[01:44:15] <Slade> and keep it all in kafka
[01:44:17] <brianonymous> Slade: i wont have to interface with it
[01:44:22] <brianonymous> well, not directly.
[01:44:22] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 250 seconds)
[01:44:23] <Slade> ah ok
[01:44:30] <Slade> still worth knowing the tech
[01:44:37] <brianonymous> agreed
[01:44:58] <Slade> brianonymous, https://discord.com/developers/docs/reference#snowflakes
[01:45:00] <brianonymous> i think i have the general idea of the kafka stuff
[01:45:07] <Slade> now you know all you need to know about snowflakes
[01:45:35] <bomb> brianonymous thanks man. that was a confidence boost for me :)
[01:45:50] <brianonymous> bomb: no prob!
[01:46:33] <brianonymous> Slade: i dont get it. it just shits out ids?
[01:46:40] <Slade> brianonymous, a snowflake is an ID. yes
[01:46:50] <Slade> like uuid
[01:47:43] <Slade> 42 bits of MS time since a specific anchor, 10 bits to identify the process that created it, and 12 bits of increment, and
[01:47:47] <Slade> thats it ;P
[01:48:03] <brianonymous> couldnt i just shit out guids and stick them in something conventional?
[01:48:15] <Slade> guids arent sequential
[01:48:22] <brianonymous> oh
[01:48:22] *** Joins: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:d9dd:9ad1:7ea4:ebc0)
[01:48:28] <Suchiman> Slade: except when you're using SEQUELNTIALGUID
[01:48:34] <brianonymous> osnap
[01:48:36] <Slade> Suchiman, indeed
[01:49:11] <Slade> in your case you can say I want  snowflake ID starting at 10/10/2020 12:00 and ending 10/10/2020 12:45
[01:49:42] <brianonymous> wouldnt i still have the same essential walking problems?
[01:50:19] <brianonymous> the most ideal data type for my needs is your good ole linked list
[01:50:50] <brianonymous> with a sort on insert
[01:51:14] <Slade> whats the walking problem?     iter = SeekForPrev(MyStartingSnowflake); while(iter.key < MyEndSnowflake)  dosuh
[01:51:47] <brianonymous> thats essentually what im doing now, only my snowflake is a progclock
[01:51:54] <Slade> then whats the challenge
[01:51:58] <Slade> other than speed
[01:52:03] <brianonymous> thats the challenge
[01:52:17] <brianonymous> the load increase is rather significant
[01:52:29] <brianonymous> i was telling nasp it ended up eating all my net5 conversion gains and then some
[01:52:33] <Slade> then switch to rocksdb which is built for speed
[01:53:02] *** Quits: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:d9dd:9ad1:7ea4:ebc0) (Ping timeout: 250 seconds)
[01:53:16] <brianonymous> is rocksdb inproc?
[01:53:32] <Slade> yes
[01:53:32] <brianonymous> devops will get cranky if i add external dependencies
[01:54:18] <Slade> i'd assumed that was the requirement, which is why i suggested
[01:55:03] <brianonymous> first i will do battle with the sqlite stuff. since its my first go at it, im sure a) i fucked up best practices b) am running practically stock defaults and c) have some wiggle room to optimize at other levels too
[01:55:14] <Slade> anyhow, its lower level than typical databases, its just the k/v stuff and datastorage. usually you wrap a bigger db ontop of that, but you dont need any of that
[01:55:34] <brianonymous> yeah, from 30k feet, my needs are basic. just like me
[01:55:47] <Slade> well for sqlite, try using the primary key for your index, instead of the secondary index
[01:55:54] <brianonymous> ok
[01:56:07] <brianonymous> does it matter that its a datetime2?
[01:56:08] <Slade> remove other indexes unless they're critical, they slow down writes
[01:56:20] <brianonymous> i think i only have one
[01:56:29] <Suchiman> brianonymous: datetime2 is an MSSQL thing
[01:56:37] <brianonymous> i tried 3 at one time, but then i broke something, thought it was the indexes, was wrong, and never put them back
[01:56:45] <Slade> sqlite only has 2 datatypes. ints and strings
[01:56:55] <brianonymous> it has moar
[01:56:57] <Suchiman> Slade: and real
[01:57:05] <brianonymous> datetime2 gets realed
[01:57:12] <Suchiman> Slade: and binary :P
[01:57:34] <brianonymous> i needed those juicy milliseconds
[01:58:01] <Slade> lemme rephrase. when it comes to primary key. you have a choice of an integer primary key, or a primary key that'll take any datatype
[01:58:17] <brianonymous> k
[01:58:26] <Slade> they arent typechecked
[01:58:30] <brianonymous> im more than happy of nuking my Id field i never give a shit about
[01:58:34] <Suchiman> although SQLite always uses a uint64 rowid
[01:58:56] <Slade> Suchiman, unless you have an integer primary key, which is why i was suggesting brianonymous use snowflakes.. which are uint64s
[01:59:07] <Suchiman> and you can alias that to a named column by using PRIMARY KEY AUTOINCREMENT
[01:59:21] <brianonymous> i think my usecase is too dumb for snowflaking, tbh
[01:59:46] <Slade> brianonymous, just store number of milliseconds since a certain time or something
[02:00:01] <Slade> really all you need is that for your query
[02:00:01] <brianonymous> Slade: i have that too
[02:00:13] <brianonymous> thats how i walk.. duration accumulate
[02:00:20] <Slade> make that your primary key. unless there is a chance for collisions
[02:00:24] <brianonymous> start clock -> loop duration++
[02:00:43] <Slade> if there is collision chance, make snowflake, if not, milliseconds
[02:01:37] <brianonymous> if the clock collides, i got bigger problems
[02:01:41] <Slade> ok
[02:01:48] <Slade> (i dont know the data)
[02:01:51] <brianonymous> i kno
[02:02:15] <Slade> Suchiman, how does brianonymous turn on wal mode and configure the synchronous pragma in EF
[02:02:18] <brianonymous> im happy to take all the feedbacks \o/
[02:02:29] <brianonymous> i did turn on wal mode, bpmedly hooked me up
[02:02:38] <Slade> that help some?
[02:02:55] <brianonymous> its been there from the start
[02:03:01] <Slade> oh i ese
[02:03:03] <Slade> see
[02:03:07] <brianonymous> im not sure what load looks like without it
[02:03:23] <brianonymous> today was the first day i got it on a real qa stack
[02:04:14] <brianonymous> would it uhh.. make a difference if i said that there is 200 sqlite dbs in the app?
[02:04:17] <Slade> well unless EF is doing crazy queries, only other real super optimization is using your clock as the PK without other indexes
[02:04:50] <Slade> brianonymous, benchmarking your bottleneck is still the fsyncs right?
[02:05:17] <brianonymous> yeah, i havent even started the real benching.. at this point im just comparing grafana graphs on resource use
[02:05:29] <brianonymous> tuesday ima get my hands dirty
[02:05:41] *** Quits: diophantoz (~diophanto@user/diophantoz) (Remote host closed the connection)
[02:05:48] <brianonymous> ive only had 3hrs of sleep so im coded out
[02:05:52] <Slade> i'm reasonably confident thats what will be revealed, unless there is some EF crap
[02:06:02] *** Joins: diophantoz (~diophanto@user/diophantoz)
[02:07:02] <Slade> in which case you can drop to dapper
[02:07:04] *** Quits: diophantoz (~diophanto@user/diophantoz) (Read error: Connection reset by peer)
[02:07:25] <brianonymous> ill write my own db, call it FuckthisShitdb
[02:07:45] <brianonymous> it will be link listy and walkable with insert sorts
[02:07:57] <brianonymous> the logo will be a middle finger
[02:08:07] <Slade> brianonymous, try using rocksdb before you go down that path
[02:09:09] <brianonymous> i mean, i should also realistically expect the load increase too.  i just jacked up my IO load pretty significantly
[02:10:16] <brianonymous> i just think i can do a bit better than what ive done for phase 1
[02:11:22] <Slade> rocksdb is just an LSM tree implementation, theres not a lot ontop of it.  i'm guessing thats more suitable for you than a b-tree k/v store from the little you've said.  get your sqlite stuff out of the way first tho :P
[02:11:42] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[02:12:08] <brianonymous> yeah, i might not even have a problem yet
[02:12:48] <brianonymous> and i still dont know what the metrics look like under what would be a production load yet
[02:12:55] <brianonymous> it may be my concerns are entirely unfounded
[02:18:56] *** Joins: Fiji (~Fiji@user/fiji)
[02:19:01] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[02:20:59] <Slade> brianonymous, sqlite is a pretty solid db. hopefully fine.
[02:21:05] <brianonymous> ya
[02:30:50] <Nasp> Slade:  Have you used Kafka a lot?
[02:32:11] <brianonymous> its had been described to me as pubnub with a large weiner
[02:32:48] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[02:34:05] <Slade> Nasp, not a lot
[02:34:14] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Remote host closed the connection)
[02:34:29] <Nasp> We just started using it, after using some home brewed event sourcing that's never really worked correctly
[02:34:32] <bomb> Kafka, where you data turns into bugs kekeke
[02:35:09] <Nasp> brianonymous:  btw what was eatring your .NET 5 improvements?
[02:35:23] <Nasp> Also is yours a big bang migration?
[02:35:31] <brianonymous> my new fangled sqlite engine
[02:35:33] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[02:35:37] <brianonymous> a big wut
[02:35:59] <bomb> big bug. Gregor Samsa
[02:36:48] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[02:36:59] <Nasp> Watching a documentary about people being scanned by online sales
[02:37:08] <Nasp> "So i just sent my iphone to another countryt and never got the money back"
[02:37:14] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 250 seconds)
[02:37:25] <bomb> lol
[02:37:30] <Nasp> And send it to a not verified user
[02:37:40] <Nasp> Sooo yeah, people are stupid and there's nothing youic an do against this
[02:38:17] *** Quits: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Ping timeout: 256 seconds)
[02:39:08] <brianonymous> i just attached load and you know what? my cpu didnt change much
[02:39:17] <Nasp> brianonymous:  Big bang migration
[02:39:26] <Nasp> As in do you migrate all the code to .NET 5 or is it a gradualy migration
[02:39:45] <brianonymous> oh, all at once
[02:39:49] <Nasp> Like we are going to move a single controller at a time, and there for it will be hard to compare the performance improvement before we've moved more
[02:40:08] <brianonymous> almost all of it is controller light
[02:40:36] <JakeSays> MatthiasVance: yup. 5x as fast and 20x less quality
[02:40:50] * brianonymous looks all over for MatthiasVance 
[02:41:03] <Nasp> brianonymous:  This is controller heavy :D
[02:41:18] <Nasp> with base controllers doing waaay to much
[02:41:27] <brianonymous> Nasp: the only other thing besides controllers that gave us shit were the perfcounters
[02:41:27] <Nasp> And in the migration i would like to try and remove some of this complexity
[02:41:34] <JakeSays> Nasp: you shouldn't talk about your wife that way
[02:41:35] <Nasp> We have no perf counters
[02:44:23] <Nasp> brianonymous:  What issues did they give you btw?
[02:44:47] <Nasp> Also we have this stupid IRS integration we can't convert to core due to core haven't implemented these stupid old encryption schemes for good reasons
[02:45:13] <brianonymous> nasp: they ceased to exist. they have a new class for them
[02:45:19] <Nasp> Yeah i know
[02:45:22] <brianonymous> and of course, they ware all dif
[02:46:31] <brianonymous> so that system needed an entire rewrite
[02:47:05] <JakeSays> brianonymous: what are you doing with sqlite?
[02:47:11] <brianonymous> suffering
[02:47:13] *** Joins: alguien (~alguien@user/alguien)
[02:47:14] <brianonymous> jkjk
[02:47:18] <JakeSays> lol
[02:47:24] <Nasp> brianonymous:  Do you have custom perf counters?
[02:47:32] <JakeSays> sqlite is pretty handy
[02:47:35] <Nasp> And have you considered switching to some of the newer metrics
[02:47:37] <brianonymous> i need to store some objects that used to live in memory to a db, cuz i need the list to be waaaay fucking larger, and persistent between restarts
[02:48:09] <brianonymous> Nasp: yeah, we added some bonus ones to see what its all about
[02:48:15] <Nasp> Ahh ok
[02:48:21] <Nasp> Like i said we dont have metrics :D
[02:48:22] <JakeSays> brianonymous: is it working?
[02:48:28] <Nasp> I've been wanting it for a while but yeah no time
[02:48:30] <brianonymous> nasp: i was very much interested in the network stuff
[02:48:51] <brianonymous> JakeSays: yup! its on the qa stack as of today, i just threw about 1/4 prod load on it and its hanging in
[02:49:03] <JakeSays> cool
[02:49:12] <brianonymous> its actually about 200 sqlite dbs
[02:49:30] <Nasp> Damn
[02:49:33] <brianonymous> but a steady/slow flow of in/out at idle
[02:49:34] <JakeSays> one of the handy things about sqlite is you can build the db in memory then save it to disk
[02:50:01] <brianonymous> i needed the opposite, this app is a fuckin mem hog already
[02:50:12] <JakeSays> right
[02:50:22] <brianonymous> mem all the things
[02:50:50] <JakeSays> i use sqlite for storing historical trading data. it's much faster to build the db in memory
[02:51:12] <brianonymous> i almost considered using one big giate sqlite db, but then i did the math
[02:51:12] <bomb> your doofus lol
[02:51:18] <brianonymous> giant
[02:51:28] <bomb> cockroach db is better for trading data
[02:51:51] <Nasp> Would be nice to try some scalable db
[02:51:58] <Nasp> Instead of just keep throwing more and more memory at a single db :D
[02:52:10] <bomb> what about mmmmmooooonngooooooo
[02:52:15] <Nasp> How about no
[02:52:19] <JakeSays> bomb: it would be really hard to beat the way i use sqlite for storing trades
[02:52:33] <Nasp> What trading data are you handling=?
[02:52:43] <JakeSays> trades
[02:53:11] <xb0o2> Pokemon cards
[02:53:15] <JakeSays> yeah those
[02:53:17] <Nasp> Like stock trades?
[02:53:24] <JakeSays> futures
[02:53:26] <Nasp> ahh
[02:53:35] <Nasp> I've been kidna wanting to get some more real time stock data
[02:54:06] <bomb> how much a genuine Bulbasaur goes for these days?
[02:54:14] <xb0o2> tree fiddy
[02:54:23] <JakeSays> lol
[02:54:29] <Nasp> I never understood pokemonm
[02:54:41] <JakeSays> Nasp: i never tried to
[02:55:01] <xb0o2> They're monsters.
[02:55:24] <xb0o2> In a world with a serious number of animal rights concerns.
[02:55:35] <brianonymous> i only know that one is called squirtle, and i giggle like the 13yo i am
[02:55:40] <xb0o2> And child safety concerns.
[02:55:43] <xb0o2> And a lot of other concerns.
[02:56:18] <Nasp> Pikachu, which sounds like someone saying dick and then sneezing
[02:56:57] <bomb> dickachu
[02:57:16] <Nasp> Yes
[02:57:54] <bomb> there was jiggly puff
[02:59:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:59:46] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 250 seconds)
[03:00:15] <JakeSays> Nasp: LOL that's a first
[03:00:18] <xb0o2> And wigglytuff.
[03:00:30] <Nasp> JakeSays: Well pik means dick in danish
[03:00:41] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:00:43] <JakeSays> Nasp: LOL
[03:01:04] <Nasp> JakeSays:  I bought some ESP32'
[03:01:06] <Nasp> Or ordered them
[03:01:30] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[03:03:19] <JakeSays> Nasp: ah cool. they're a lot of fun
[03:04:04] <Nasp> I'm hoping so
[03:04:06] <JakeSays> Nasp: which model did you get?
[03:04:14] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[03:04:14] <Nasp> There's different models?
[03:04:20] <JakeSays> yes
[03:04:54] <Nasp> https://www.aliexpress.com/snapshot/0.html?orderId=8144716747751400&productId=1005001757645011 this one
[03:05:15] <JakeSays> it wants me to log in
[03:05:19] <Nasp> ohh
[03:05:21] <Nasp> To sec then
[03:06:10] <Nasp> https://www.aliexpress.com/item/1005001757645011.html this one
[03:06:22] <Nasp> I think the order one was a direct link to my order :D
[03:07:20] <JakeSays> Nasp: ah. i have three of those exact ones. expect zero help from the manufacturer
[03:07:38] <JakeSays> but they work well though
[03:07:43] <Nasp> I hope i'm not going to need help from the manufacturer? :D
[03:07:52] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[03:08:26] <Nasp> But man aliexpress has a horrible website
[03:08:32] <Nasp> Kinda strange consideringf how big they are
[03:08:37] <JakeSays> well, for things like mapping esp32 pin numbers to arduino pin numbers, etc.
[03:09:03] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[03:11:12] <Nasp> These new EU rules have made it so much easier to buy from aliexpress, i think some people expected people to buy less, but it's much easier now
[03:12:21] <JakeSays> i bought five of these: https://www.kickstarter.com/projects/udoo/udoo-key-the-4-ai-platform
[03:12:33] <JakeSays> odd device
[03:12:56] <Nasp> Is it both a raspberry pi and esp32?
[03:13:10] <JakeSays> pi rp2040
[03:13:13] <Nasp> Is it for computer vision or
[03:13:16] <Nasp> Video*
[03:13:50] <JakeSays> well, they're marketing it as an iot/ai device, but it's just literally an esp32+rp2040
[03:14:13] <JakeSays> the form factor is odd as hell
[03:14:21] <Nasp> Yeah
[03:14:41] <JakeSays> but my brain couldn't pass up $4/device
[03:16:30] <Nasp> Esps were 5 dollar a piece
[03:16:37] <Nasp> But i believe they've been down to even less
[03:16:41] <JakeSays> i ordered an LTE modem for the rp2040 that should mount to that board
[03:16:48] <Nasp> It's quite impressive for what it can do
[03:17:04] <JakeSays> yup
[03:17:42] <Nasp> And it can last quite a long while on battery if it goes in deepsleep
[03:19:40] <JakeSays> yup
[03:20:07] <JakeSays> it actually has a separate processor that runs in deep sleep mode
[03:21:01] <Nasp> yeah that wakes it on gpio input
[03:23:36] <JakeSays> Nasp: what are you going to do with them?
[03:23:50] <Nasp> Well i'm probably going to use one for that power meter
[03:24:10] <JakeSays> ah. they're perfect for that
[03:24:12] <Nasp> Since those raspberries are in backorder, and i think this fits better in size and can maybe even use the power pins there
[03:24:26] <Nasp> Then i've been wanting for a long time to buy some led strips and make something with them
[03:25:01] <JakeSays> heh. those are addicting
[03:25:13] <Nasp> At the prices youi just have to come up with ideas
[03:25:18] <Nasp> I have a lamp that could use an led strip
[03:25:21] <JakeSays> exactly
[03:25:32] <Nasp> And then i want to try and make my own maybe
[03:25:37] <Nasp> But i'm missing some place to do some of the work
[03:25:45] <JakeSays> the biggest thing is the damn wifi/bt - it's soo handy
[03:25:57] <JakeSays> Nasp: your own what?
[03:25:59] <Nasp> Yeah i was considering if i could use it for some indoor tracking as well
[03:26:06] <Nasp> Own lamps
[03:26:08] <JakeSays> ah
[03:26:10] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:26:15] <JakeSays> well, get that damn 3d printer working
[03:26:17] <Nasp> Like small lamps for cozy lighing
[03:26:24] <Nasp> Yeah well that's part of it as well
[03:26:40] <Nasp> O
[03:26:51] <Nasp> I've lined up a few projects here for springs with some home improv
[03:27:12] <brianonymous> what plastic do you use
[03:27:19] <Nasp> filamentum pla
[03:27:25] <brianonymous> my son is bitching at me to buy some but i dont think i want to go pla
[03:27:27] <JakeSays> i came up with an idea for a cool analog clock that i'm printing now
[03:27:36] <JakeSays> brianonymous: why?
[03:27:39] <JakeSays> pla is nice
[03:27:40] <Nasp> I dont like analog clocks
[03:27:44] <brianonymous> i lost 2 spools to moisture in the air
[03:27:46] <Nasp> Unless you have a noiseless motor
[03:27:46] <Suchiman> brianonymous: use chocolate
[03:27:51] <brianonymous> Suchiman: good idea
[03:27:57] <Nasp> brianonymous:  Just dry it?
[03:28:04] <JakeSays> brianonymous: ahh. yeah it's much better here in the desert
[03:28:05] <brianonymous> Nasp: i tried with one spool, didnt work
[03:28:13] <Nasp> Was it PLA?
[03:28:16] <JakeSays> brianonymous: try pla+
[03:28:16] <brianonymous> yeah
[03:28:21] <Nasp> I think PLA isn't that bad regarding humidity
[03:28:28] <brianonymous> pla+ might be the next attempt yeah
[03:28:29] <JakeSays> Nasp: it is
[03:28:34] <brianonymous> its fucking horrible
[03:28:45] <brianonymous> it got so brittle it would crack in my feeder tube and get jammed up
[03:28:46] <JakeSays> Nasp: this analog clock doesn't have a motor
[03:28:47] <Nasp> I never made one of those spool containers
[03:28:55] <Nasp> JakeSays:  Then how does it move?
[03:29:28] <JakeSays> Nasp: heh. you'll just have to wait for the video
[03:30:00] <brianonymous> i have my granddad's grandfather clock.. i rebuilt that fucker 3 times til it worked right. it was fun as shit
[03:30:15] <Suchiman> brianonymous: https://www.youtube.com/watch?v=8S-usumuaWo
[03:30:49] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[03:31:06] <brianonymous> Suchiman: oh neat
[03:31:21] <Suchiman> brianonymous: you thought i was joking, right???
[03:31:34] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:32:12] <brianonymous> i had heard of the concept, just never witnessed
[03:33:05] <JakeSays> Suchiman: me want one!
[03:41:19] <brianonymous> now THIS was a project: http://98.117.195.56:88/clock.png
[03:41:24] <brianonymous> i enjoyed the shit out of it
[03:42:36] <Nasp> That poor internet connection
[03:42:51] <brianonymous> im on gigabit fiber
[03:43:11] <Suchiman> brianonymous: ah, a kuckucksuhr
[03:43:18] <Nasp> https://usercontent.irccloud-cdn.com/file/eIfvMCbs/image.png
[03:43:20] <brianonymous> what a foul mouth you have
[03:44:06] <JakeSays> brianonymous: how many parts were left over after re-assembly?
[03:44:07] <brianonymous> Nasp: i blame europe
[03:44:19] <brianonymous> JakeSays: http://98.117.195.56:88/clock.mp4
[03:44:54] <JakeSays> brianonymous: that's cool
[03:45:02] <brianonymous> the answer is 0 :D
[03:45:11] <brianonymous> id like to thank laptop repairs for that skillset
[03:45:54] <JakeSays> not having parts remaining is all find and good, but the real talent is having parts remaining *and* shit still working. lol
[03:46:00] <brianonymous> lol
[03:46:11] <irwiss> brianonymous: is that clockworks desk clock project?
[03:46:19] <brianonymous> my trick is muffin pans and dip cups
[03:46:49] <irwiss> looks really similar :P
[03:47:16] <brianonymous> irwiss: it was my grandfather's grandfather clock.. or as suchi calls it, a coksucker or something
[03:47:45] <Nasp> I wonder why people use GC.SuppressFinalize(this) in dispose
[03:47:53] <brianonymous> it really cool, i found the original assembly manual and it has his notes in it
[03:47:53] <Nasp> And for some reason some analyzers complains if it's missing
[03:48:53] <Suchiman> Nasp: if you implement the full Dispose pattern, you add a finalizer like ~Class() { Dispose(false); } and public void Dispose() { Dispose(true); } public virtual void Dispose(bool disposing) { ... }
[03:49:09] <Nasp> There's no finalizer
[03:49:12] <Suchiman> Nasp: and that SuppressFinalize removes the ~Class() destructor from running
[03:49:17] <Nasp> Yeah i know
[03:50:14] <irwiss> brianonymous: https://youtu.be/dU7iKNmQBIs is what i thought of, probably the most chillaxing thing ever to watch on youtube (the full episodes, this is just 12 mins timelapse)
[03:50:19] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[03:50:33] <brianonymous> irwiss: oh cool!
[03:50:51] <brianonymous> i never thought id get into clocks, but somehow i have
[03:51:23] <Suchiman> i find it difficult to read analoge clocks so...
[03:51:24] <Suchiman> xD
[03:51:35] <brianonymous> you dang zoomers
[03:52:11] <irwiss> Suchiman: yeah but aesthetics and sounds of mechanical clocks are really nice
[03:52:15] <brianonymous> tho i gotta admit, its a geometric translation process for me too
[03:52:45] <brianonymous> yeah, and theres just something neat about a system that does all that running on gravity
[03:53:00] <Suchiman> now if the clock would have 24h on it... that would make it a bit better
[03:53:01] <brianonymous> strike/chime systems are like coding... with gears
[03:53:02] <Suchiman> but still ugh :P
[03:53:33] <brianonymous> so many clever tricks inside
[03:54:22] *** Quits: Diablo-D3 (foobar@exelion.net) (Ping timeout: 250 seconds)
[03:54:58] <irwiss> Suchiman: just watch the final product at end of the video and say you wouldn't want that on your desk :P there's probably at least 3 digital 24h clocks in line of sight at all times in most offices and homes anyway
[03:55:32] <Nasp> Suchiman:The analyzer is complaining about missing GC.Supress in a dispose
[03:55:34] <Nasp> With no finalizer
[03:56:04] <Nasp> https://gist.github.com/toftware/23c791cd6708f6d47cf7bd396af655ad
[03:56:53] <Suchiman> Nasp: your mistake is clearly not having a finalizer :P
[03:57:15] <Nasp> I try to avoid having dispose at all unless i open something that needs to be disposed
[03:59:39] <brianonymous> im so happy about the using var poop = new Butt(); syntax
[03:59:49] <Nasp> If i could only use it
[04:00:27] <irwiss> yeah no blocks is nice... may be we'll have file scoped classes too some day :P
[04:00:43] <Nasp> That would be really nice
[04:00:51] <brianonymous> or maybe make the garbage disposal smart enough to IDispose its own damn self
[04:01:06] <Nasp> Although it woudl look weird "namespace Blah.Blah; class Blah;
[04:01:10] <brianonymous> otherwise give me back my constructors/destructors
[04:02:21] <irwiss> imo it'd only look weird because it's new, not because it's bad
[04:02:39] <Nasp> Why even keep the namespace
[04:02:46] <Nasp> Just use the folder
[04:02:53] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[04:03:06] <irwiss> java IDE do that with packages and it sucks ass
[04:03:13] <irwiss> IDEs even
[04:03:23] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:03:47] <Nasp> You mean java do it
[04:03:54] <irwiss> you have already weirdass long af java package names affecting directory structure
[04:04:16] <irwiss> so you end up with .java file you're looking for 10 folders deep
[04:04:17] <Nasp> https://gist.github.com/toftware/fd5cb0a6fa7e235f410a65fd35e9f873 I think we have 3-4 layers of this shit on top of EF
[04:04:19] <Nasp> For no reason at all
[04:04:24] <Nasp> hmm use linq directly? nononono
[04:04:52] <irwiss> but what if you'll need to replace the dao layer?!!! what then?!!oneone /s
[04:05:00] <Nasp> Then you need even more work :D
[04:05:58] <xb0o2> Jesus Chrisdt Nasp...
[04:06:00] <xb0o2> Christ*
[04:06:03] <xb0o2> That's horrific
[04:06:06] <Nasp> That's just one
[04:06:09] <irwiss> nice, datetime.utcnow, so can't even inject ISystemClock :D
[04:06:24] <Nasp> I think EFContext so so abstracted away you only have save left
[04:06:29] <Nasp> So you can't even use SaveAsync :D
[04:07:16] <xb0o2> So many abstractions over data access fail. I'd rather see no abstraction whatsoever.
[04:07:48] <xb0o2> It's always just a leaky fucking mess.
[04:08:02] <Nasp> Hmm no 5 abstractions it seems
[04:11:22] <xb0o2> ... there's abstractions on top of that?
[04:11:26] <xb0o2> Or just others on top of EF?
[04:16:16] <Nasp> No on top of that as well
[04:16:20] <Nasp> Some are used on top on top on top
[04:16:25] <Nasp> Some are just only a single level
[04:16:26] <Nasp> Don't ask me why
[04:16:36] <xb0o2> ... but why?
[04:18:25] *** Joins: Diablo-D3 (foobar@exelion.net)
[04:18:45] <Nasp> https://www.youtube.com/watch?v=3Z9yK3sMDUU
[04:18:59] *** Joins: SlimeyNarcissist (~blank@136.37.25.140)
[04:19:16] <xb0o2> Was there a 'senior developer' with about 3 years of experience involved in this by  any chance?
[04:21:57] <Nasp> Nah just what i've heard the CEO refer to as "Rockstar developers"
[04:22:09] <Nasp> In the begining, who seemed to have no clue on how do make maintainable and scalable code
[04:22:37] *** Quits: Taddeusz (~Taddeusz@ip68-97-149-200.ok.ok.cox.net) (Ping timeout: 240 seconds)
[04:22:39] <xb0o2> s/senior/rockstar/
[04:22:44] <xb0o2> Rang the same bells for sure
[04:23:42] <xb0o2> A lot of 'layers' and 'abstractions' that only ever have one implementation and it's not even for testing purposes
[04:24:17] *** Parts: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[04:26:57] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[04:28:16] *** Joins: pazof (~Paul@70.90.62.94.rev.vodafone.pt)
[04:28:27] <Nasp> No senior
[04:28:45] *** Quits: pazof (~Paul@70.90.62.94.rev.vodafone.pt) (K-Lined)
[04:33:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[04:36:18] *** Joins: Taddeusz (~Taddeusz@ip68-97-149-200.ok.ok.cox.net)
[04:40:50] *** Joins: xsperry (~xs@user/xsperry)
[04:54:41] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[04:56:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:58:53] *** Joins: xsperry (~xs@user/xsperry)
[04:58:54] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:59:15] *** Quits: Telgareith (~Telgareit@user/telgareith) (Quit: Ping timeout (120 seconds))
[04:59:29] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[04:59:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[05:00:27] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[05:00:30] *** Joins: psb___ (sid500598@id-500598.ilkley.irccloud.com)
[05:01:38] *** Joins: yano1 (~yano@ircpuzzles/staff/yano)
[05:01:48] *** Joins: Jck_true6 (~jcktrue@user/jck-true/x-0200799)
[05:01:55] *** Joins: Telgareith4 (~Telgareit@user/telgareith)
[05:02:10] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[05:02:49] *** Joins: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:03:18] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[05:04:19] *** Telgareith4 is now known as Telgareith
[05:06:46] *** Joins: ki9d1 (~ckchatcar@2001:470:69fc:105::4897)
[05:09:05] *** Quits: psb__ (sid500598@id-500598.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 240 seconds)
[05:09:06] *** Jck_true6 is now known as Jck_true
[05:09:06] *** Quits: BSaboia[m] (~bsaboiama@2001:470:69fc:105::1:6247) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: ki9d (~ckchatcar@2001:470:69fc:105::4897) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Slide-O-Mix (~slide@user/slide-o-mix) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Ping timeout: 240 seconds)
[05:09:16] *** Quits: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Remote host closed the connection)
[05:10:13] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:10:28] *** yano1 is now known as yano
[05:10:41] <brianonymous> i just ordered some PETG. lets see how thisgoes
[05:11:21] *** Parts: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) ()
[05:15:46] *** Quits: xsperry (~xs@user/xsperry) ()
[05:16:38] *** Joins: xsperry (~xs@user/xsperry)
[05:17:24] *** Joins: Slide-O-Mix (~slide@user/slide-o-mix)
[05:19:09] *** Joins: BSaboia[m] (~bsaboiama@2001:470:69fc:105::1:6247)
[05:20:11] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[05:21:02] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[05:47:43] <JakeSays> brianonymous: i have a harder time with petg
[05:48:34] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:49:09] <JakeSays> i am a rockstar developer. drank so much rockstar that i became one
[05:55:31] *** Quits: ecool (~ecool@user/ecool) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[05:57:29] *** Joins: ecool (~ecool@ecool.dev)
[05:58:18] <JakeSays> now the worst part of 3d printing sets in.. waiting
[06:02:32] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[06:05:04] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:13:37] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[06:14:22] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:16:07] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:24:12] *** Quits: SlimeyNarcissist (~blank@136.37.25.140) (Quit: Going offline, see ya! (www.adiirc.com))
[06:36:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[06:43:39] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[07:06:50] <MizMahem> https://usercontent.irccloud-cdn.com/file/9ypLGkjX/20220114_205955.jpg
[07:07:03] <MizMahem> https://usercontent.irccloud-cdn.com/file/TQv3QHJD/20220114_212244.jpg
[07:07:12] <MizMahem> https://usercontent.irccloud-cdn.com/file/hgchkDqY/20220114_213345.jpg
[07:07:34] <MizMahem> 🦴 🍎 ☕
[07:09:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:09:21] *** redj_ is now known as redj
[07:10:03] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:11:06] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[07:14:43] <DevJohnC> fuck yeah chicken farm!
[07:14:53] <DevJohnC> chicken parm* stop censoring me Apple!
[07:41:13] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[08:00:25] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[08:00:43] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:33:25] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[08:35:51] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[08:51:12] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 250 seconds)
[09:31:12] *** Joins: ap5[w] (~mslot@85.184.161.18)
[09:33:49] *** Parts: ap5[w] (~mslot@85.184.161.18) ()
[09:48:16] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[09:50:01] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[09:58:47] <JakeSays> brianonymous: if you ever need something more than sqlite but less than a full on db firebird embedded works well
[10:22:38] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 250 seconds)
[10:35:52] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[10:48:34] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[10:53:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:16:33] *** Quits: pingec (~pingo@84-255-226-67.static.t-2.net) (Remote host closed the connection)
[11:16:53] *** Joins: pingo (~pingo@84-255-226-67.static.t-2.net)
[11:36:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[11:44:03] *** Joins: SlimeyNarcissist (~blank@136.37.25.140)
[11:44:33] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[12:18:30] *** SlimeyNarcissist is now known as Bobby
[12:20:16] *** Quits: Bobby (~blank@136.37.25.140) (Changing host)
[12:20:16] *** Joins: Bobby (~blank@user/slimmyjimmy)
[12:25:55] *** Joins: spinningCat (~spinningC@94.54.210.37)
[12:26:00] *** Quits: spinningCat (~spinningC@94.54.210.37) (Changing host)
[12:26:00] *** Joins: spinningCat (~spinningC@about/web/muscles)
[12:43:30] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:45:08] <MatthiasVance> JakeSays: Haha yes waiting. I just set the speed 10x higher but obviously you don't want that for serious prints
[12:45:19] <MatthiasVance> Not waiting 6 hours for a cat
[12:48:22] <MatthiasVance> *tiny cat
[12:51:43] <MatthiasVance> For some reason Start (and searching there) is terrible slow on my desktop W11 machine but snappy on my laptop
[12:54:49] <MichaelLong> you already have Windows 11 as a daily driver MatthiasVance?
[12:55:14] <MatthiasVance> Yes, ever since it was released
[12:55:18] <MatthiasVance> Or maybe even before
[12:57:48] <MichaelLong> but even with Windows 10 we've experienced a wide range of slowness "feel" / behavior at the company. e.g. A couple of years ago my boss had a Lenovo PC, i3-something 8 GB RAM, ordinary SATA SSD. This this was the fastest in terms of booting ever seen. BIOS/EFI-phase was < 1s, booting to the Windows-Login was like 2s.
[12:58:43] <MichaelLong> now his Thinkpad P53, 8C/8T NVME and everything is booting like 20s, and the thing feels sluggish as hell.
[12:59:46] <MichaelLong> the hardware makes the difference but I would not expect to such a degree
[12:59:47] <JakeSays> MatthiasVance: start what?
[13:00:35] <MichaelLong> I've assumed he means starting the system
[13:07:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:c9a0) (Ping timeout: 240 seconds)
[13:14:21] <MatthiasVance> The start menu in w11
[13:14:33] <JakeSays> ew
[13:15:12] <MatthiasVance> Yes would love to run macOS actually 😄 Pretty sure that's also ew in your book?
[13:15:19] <MatthiasVance> At least it's more consistent
[13:16:33] <JakeSays> no, that's ew^10
[13:25:07] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[13:28:42] <MichaelLong> MatthiasVance, what about the KDE plasma menu? :D
[13:29:26] <MatthiasVance> I could run Linux but I believe there were driver issues, not sure why I decided against..
[13:30:14] <JakeSays> MatthiasVance: it's because you can't HANDLE linux!
[13:30:25] <MatthiasVance> It usually has less support than other OS for desktop things so I'd have to virtualize as well
[13:30:41] <MatthiasVance> JakeSays: haha well, I want things to just work nowadays
[13:31:19] <MichaelLong> that's the typical low effort answer
[13:31:31] <JakeSays> MichaelLong: LOL indeed
[13:33:04] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[13:34:18] <JakeSays> well, i'd never install linux on someone else's machine that i had to support
[13:48:47] *** Quits: Bobby (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[13:49:56] <MatthiasVance> MichaelLong: You're damn right
[13:50:03] <MatthiasVance> I have a 3yo
[13:50:22] <JakeSays> don't blame it on the kid!
[13:50:24] <JakeSays> wimp
[13:50:32] <MatthiasVance> 😂
[13:51:02] <MatthiasVance> Also for once keeping my desktop stable while working
[13:56:52] *** Joins: alguien (~alguien@user/alguien)
[13:58:05] <shadowchaser> MatthiasVance "I want things to just work nowadays", this is exact reason I've said no to windows
[13:59:07] <MatthiasVance> shadowchaser: I was referring to macOS
[14:01:28] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 250 seconds)
[14:30:12] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:49:29] *** Joins: Klinda (~superleag@user/klinda)
[15:01:18] *** Joins: Bobby (~blank@136.37.25.140)
[15:05:37] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:09:01] *** Joins: zaher (~zaher@37.48.176.91)
[15:10:10] <zaher> hi, can i use c# to make a local website  (embed) for android? (webview + backend), and that backend i want to use it as backend for real website?
[15:10:35] <zaher> i meant is there a lib/framework ready for that?
[15:33:54] <JakeSays> zaher: you want to access the site from a browser on an android device, or are you going to write a native android app?
[15:34:36] <zaher> i want to make app in android, but i want to embed the backend of my site into my app
[15:35:09] <zaher> i want my backend work in my host of website, also as offline in my app on mobile
[15:35:28] <Suchiman> zaher: https://docs.microsoft.com/en-us/mobile-blazor-bindings/ comes to mind
[15:35:32] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[15:36:07] <JakeSays> zaher: so you use your website as a rest api to access from the android app, and then you have it also work as a standard website
[15:36:15] <JakeSays> Suchiman: blazor mobile? wtf
[15:36:25] <Suchiman> JakeSays: it's basically react native :D
[15:36:32] <JakeSays> it's basically gross
[15:36:58] <Suchiman> JakeSays: everything is gross to you, old man
[15:37:29] <zaher> yes rest api, i want to make same code for c# backend into offline app on android
[15:37:30] <JakeSays> people just keep inventing new ways to use javascript/html
[15:37:41] * Suchiman looking at the EF7 plans: Evolve System.Linq.Expression
[15:37:44] <Suchiman> fucking finally!
[15:37:59] <JakeSays> Suchiman: evolve it in to what? system.next.clusterfuck?
[15:38:20] <Suchiman> JakeSays: allowing new language features to be used in it and supporting their translation to SQL
[15:38:28] <MichaelLong> "evolve" sound quite vague
[15:38:34] <JakeSays> indeed
[15:38:41] *** Quits: sebbu (~sebbu@user/sebbu) (Quit: reboot)
[15:38:52] <JakeSays> to me it sounds like they're going to rewrite s.l.e
[15:38:58] <Suchiman> Plan for Entity Framework Core 7.0 | Microsoft Docs (https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/plan#evolve-systemlinqexpression)
[15:39:57] <JakeSays> ugh. reading that page - i can't tell you how not fun all of that sounds
[15:40:16] <Suchiman> lol wat
[15:40:33] <JakeSays> it just wreaks of enterprise
[15:41:26] <JakeSays> i just can no longer get excited over that shit
[15:41:34] <biberu> hm?
[15:42:05] <MichaelLong> me neither, but I cannot keep up anyways
[15:42:30] <JakeSays> very little in .net 6 excites me.
[15:42:57] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[15:43:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[15:43:37] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[15:44:01] <Suchiman> JakeSays: okay, non enterprise language
[15:44:04] <Suchiman> shit's faster, yo
[15:44:19] <JakeSays> Suchiman: which shit
[15:44:27] <Suchiman> all of it
[15:44:31] <Suchiman> some more, some less
[15:44:45] <JakeSays> lol define 'it'
[15:44:53] <MichaelLong> the thing is also, reading that paragraph about the "evolve" - without already interesting in the "outside tracked" stuff - I don't grasp what kind of problem it solves for me.
[15:44:59] <JakeSays> because ef being faster does absolutely nothing for me
[15:45:18] <Suchiman> API's
[15:45:53] <Suchiman> MichaelLong: huh? outside tracked?
[15:46:00] <JakeSays> c++ is even starting to bore me.
[15:46:12] <Suchiman> JakeSays: dang, you're programming in python next?
[15:46:13] <MichaelLong> Suchiman, last sentence
[15:46:28] <biberu> Suchiman: if you're bored by c++ you're definitely bored by python ^^
[15:46:36] <JakeSays> Suchiman: fuck. i'd go flip burgers beore i'd do that shit again
[15:46:42] <JakeSays> biberu: lol very true
[15:46:48] <Suchiman> biberu: ah yeah, right, C++ programmers turn to lua when they get bored
[15:46:58] <JakeSays> i'm hoping rust proves interesting
[15:48:33] <MichaelLong> definately interesting, have only created a couple of small tools for me, not confident to use it at work though
[15:48:48] <Suchiman> MichaelLong: ah yeah, well outside tracked means it's prolly tracked in the dotnet/roslyn repo (for adding the compiler abilities) and dotnet/runtime (for adding new SLE apis) and the kind of problem that it solves is prolly something like being able to say: context.Table.Select(x => x.Prop switch { "A" => 42, "B" => 21 }) and have it being translated to a CASE WHEN
[15:49:16] <Suchiman> right now that would say that switch expressions are not supported in SLE expressions
[15:49:26] <Suchiman> which means you'd have to resort to ? : ...
[15:50:00] <MichaelLong> Suchiman, why are not you writing those microsoft docs? :D
[15:50:08] <JakeSays> it'd be nice if all of c# could be expressed with s.l.e
[15:50:40] <biberu> isn't that doc just an outline of ideas to look at?
[15:50:58] <Suchiman> biberu: it's a bit stronger, what they currently plan to do
[15:51:02] <Suchiman> the roadmap for EF 7
[15:51:31] <biberu> ah
[15:51:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[15:51:50] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:04:21] <irwiss> just write js, it's a never fun zone with broken language features and constant dependency hell
[16:04:28] <irwiss> never ending*
[16:13:52] *** Joins: sebbu (~sebbu@user/sebbu)
[16:29:27] *** Quits: eto (~eto@S010690724005a172.vc.shawcable.net) (Quit: ZNC - http://znc.in)
[16:43:15] *** Joins: Guest2 (~Guest2@47.184.35.232)
[16:43:20] *** Guest2 is now known as _genuser_
[16:44:14] <_genuser_> hey people
[16:44:52] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:50:33] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 256 seconds)
[16:56:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[17:00:15] <Nasp> Suchiman:  EFCore7 :D
[17:00:18] <Nasp> It's a bit confusing
[17:02:38] *** Joins: zaher_ (~zaher@37.48.153.35)
[17:04:43] *** Quits: zaher (~zaher@37.48.176.91) (Ping timeout: 256 seconds)
[17:05:43] *** Joins: alguien (~alguien@user/alguien)
[17:17:35] *** Quits: Diablo-D3 (foobar@exelion.net) (Ping timeout: 256 seconds)
[17:17:53] <Nasp> Suchiman:  I hope they extend the global query filter support
[17:18:06] <Nasp> But yeah getting some of the newer expressions supported would be nice
[17:22:14] *** Joins: Diablo-D3 (foobar@exelion.net)
[17:30:38] *** Quits: SKull (~SKull@beast.darktemple.ch) (Quit: leaving)
[17:33:29] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[17:46:51] *** Joins: bomb (~bomb@user/bomb)
[17:52:25] <Bobby> !
[17:55:32] *** Quits: Roughy (~mdaw45ns@user/roughy) (Ping timeout: 240 seconds)
[18:33:32] *** Quits: Bobby (~blank@136.37.25.140) (Quit: Going offline, see ya! (www.adiirc.com))
[18:41:49] *** Joins: Roughy (~mdaw45ns@ti0090a400-4467.bb.online.no)
[18:41:51] *** Quits: Roughy (~mdaw45ns@ti0090a400-4467.bb.online.no) (Changing host)
[18:41:51] *** Joins: Roughy (~mdaw45ns@user/roughy)
[18:43:00] *** Joins: Bobby (~SlimmyJim@136.37.25.140)
[19:06:54] <lz_> is the internet broken?
[19:07:11] <lz_> can't load imgur.com
[19:07:42] <bomb> works here
[19:07:48] <lz_> I noticed a ton of missing pictures on other websites
[19:08:03] <bomb> maybe you're banned
[19:08:12] <lz_> :'(
[19:08:29] <lz_> ah it works now
[19:08:33] <lz_> maybe they unbanned me
[19:08:36] <bomb> https://imgur.com/gallery/MVYSOiz
[19:09:07] <lz_> bomb: me tryin to get a girl
[19:09:14] <bomb> lol
[19:10:09] <MatthiasVance> Nasp: I want to get a rbpi 4b with 2gb RAM, should be plenty right .. but people say you need additional cooling for that?
[19:11:42] <Nasp> It's plenty
[19:11:51] <Nasp> the reason people say you need cooling is if you run it at 100% it throttles
[19:11:53] <Nasp> Like any cpu really
[19:12:13] <Nasp> Also can you buy rbpi 4 2gb anywhere?
[19:17:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:18:08] <MatthiasVance> Yes it's EUR 50 for that model and EUR 60 for the 4GB
[19:18:22] <bomb> 40,95 EUR here
[19:18:31] <bomb> 49 even
[19:18:48] <MatthiasVance> But it seems stock is very limited indeed
[19:19:00] <bomb> global bitch crisis
[19:19:00] <MatthiasVance> Nasp: I am not sure i even need a pi 4?
[19:19:11] <Nasp> I'm using a pi 3
[19:19:18] <Nasp> But im planning to switch it out probably
[19:19:21] <MatthiasVance> Why?
[19:21:41] <Nasp> I want to try adn run it in docker
[19:21:54] <Nasp> And pi 3 is armv6
[19:21:59] <Nasp> Which is going out of support for most software
[19:24:14] *** Quits: Bobby (~SlimmyJim@136.37.25.140) (Quit: Going offline, see ya! (www.adiirc.com))
[19:25:27] <MatthiasVance> Ahh
[19:25:51] <MatthiasVance> I'll just buy the pi 4 with 2 GB RAM
[19:25:59] <MatthiasVance> And some Noctua fans
[19:26:24] <MatthiasVance> Nasp: Also have you thought about the fumes that come off the 3D printer?
[19:26:48] <Nasp> PLA shouldn't be so bad
[19:26:51] <Nasp> But yeah i have
[19:28:26] <MatthiasVance> Yeah PLA is not so bad indeed
[19:28:40] <MatthiasVance> Also, there seems to be only 1 type of Pi available of which you can order 1 per customer
[19:28:40] <MatthiasVance> :o
[19:28:43] <MatthiasVance> I better order that
[19:28:58] <MatthiasVance> Shipping is expensive compared to the price of the pi though =/
[19:29:21] <MatthiasVance> Nasp: Did you just 3D print a case for the pi or is it caseless?
[19:29:42] *** Parts: bomb (~bomb@user/bomb) (‎)
[19:30:19] <Nasp> My pi was from before i owned the printer so i had a bought case
[19:32:09] <MatthiasVance> ah
[19:35:59] <Nasp> But anyways consider armv6 is going out of fashio
[19:36:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[19:46:03] <MatthiasVance> Nasp: Yeah I ordered the pi 4 2GB quickly .. everything else is sold out
[19:46:13] <MatthiasVance> And this one is 1 per customer with low stock so .... yeah
[19:55:35] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[20:07:22] <Nasp> Yeah it's quite annoying
[20:07:29] <Nasp> I couldn't even order a pi 4 2gb
[20:07:35] <Nasp> Had to go with 8gb and 1 month delivery
[20:08:21] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[20:08:28] <MichaelLong> is the availability of a Compute Module 4 better?
[20:08:41] <Nasp> no
[20:08:45] <Nasp> And thenyou need a board for it
[20:08:47] <MatthiasVance> Hm the 8 GB version is twice as expensive
[20:08:53] <Nasp> yes
[20:09:04] <MatthiasVance> I was right, no other model is available lol
[20:09:10] <MatthiasVance> So this 2GB was my only chance
[20:09:36] <MichaelLong> one of my collegues at work is using those with this here: https://www.waveshare.com/product/raspberry-pi/boards-kits/compute-module-4-cat/cm4-io-base-b.htm
[20:10:31] <Nasp> Yeah then you could just as well buy a pi :D
[20:10:41] <MatthiasVance> Unless they are not available ;)
[20:10:46] <Nasp> If any you should buy those boards where you can fit 4-7 compute models
[20:11:09] <MichaelLong> but this thing has its benefits, e.g. M.2 (NVMe)
[20:12:39] *** Joins: \mSg (mSg@user/msg/x-0285936)
[20:13:34] <MichaelLong> I've a compute module 4 with a I/O board and one RPi4 with 8 GB, I'm constantly in the need to change mircoSD cards almost like floppy discs.
[20:13:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:15:05] <Nasp> Yeah they die quickly if you have lots of read write
[20:15:11] <Nasp> MichaelLong:  what are you running on those Pi's?
[20:15:35] <MichaelLong> different setups for different projects
[20:16:05] <Nasp> I've seen some that use them for clusters which is what i want to try, and there they should die quite faste due to heavy read write
[20:16:17] <MatthiasVance> LOL I now see that the SD card has an assembly video
[20:16:19] <Nasp> So i saw some started to just run it in memory and netboot the Pi's
[20:16:34] <MatthiasVance> They call it "operation video" but it would have been so useful!
[20:16:38] <MichaelLong> Nasp, also looking into that
[20:16:39] <MatthiasVance> I had to google for it
[20:16:48] <Nasp> MichaelLong: Could be quite nice
[20:16:49] <MichaelLong> but I need a NFS-server for windows
[20:17:03] <Nasp> Because why not just run the OS in memory
[20:17:20] <MichaelLong> I'm not sure if there's a build in one available for non-server editions of Windows
[20:18:03] <MichaelLong> Nasp, for me PXE/network boot is not about speed, it is about lower maintenance and increased stability
[20:18:11] <Nasp> Yeah
[20:18:19] <Nasp> Want to update the Pi, jsut reboot it :D
[20:18:22] <Nasp> Would be nice
[20:20:58] <MichaelLong> I also need to upgrade my I/O controll system from .NET Framework to .NET (core). so many stuff to do :/
[20:21:33] <MatthiasVance> Fuck software that changes language to your perceived country
[20:21:35] <Nasp> Can you run framework on those Pi's
[20:21:38] <Nasp> Or do you use mono for that
[20:21:44] <Nasp> MatthiasVance:  Yes
[20:21:51] <MichaelLong> Nasp, I use mono for that
[20:21:59] <Nasp> "Hmm you have set your Windows to english,. but your keybaord to something else, so i am going to set the language to your keyboard"
[20:22:00] <Nasp> WHY
[20:22:17] <MatthiasVance> Everything is set to English (US) here.. yet it showed me Dutch for some weird reason
[20:22:22] <MatthiasVance> Ah my country is probably set to Netherlands
[20:22:26] <Nasp> It's due to your keybaord being dutch
[20:22:33] <MatthiasVance> It's not though
[20:22:49] <Nasp> keyboard is US as well?
[20:22:53] <MatthiasVance> Yes
[20:23:17] <MatthiasVance> I switch between English (US) on US keyboard and Dutch on US International keyboard .. where English (US) is the preferred one
[20:23:28] <MatthiasVance> And only need the other for é etc..
[20:23:32] <MatthiasVance> Which I hardly ever type :D
[20:24:35] <Nasp> I just can't get used to the placements of brackets on US keyboard
[20:24:39] <Nasp> Even though they are easier to reach
[20:24:52] <Nasp> But yeah i need it for our 3 snowflake danish letters
[20:25:36] <lz_> half websites still randomly fail to open, is internet just broken for me?
[20:27:45] <lz_> one minute it times out and the next it works wtf
[20:30:41] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[20:34:40] *** Joins: Bobby (~SlimmyJim@136.37.25.140)
[20:37:00] <MatthiasVance> lz_: Do you use DNS from your ISP?
[20:37:04] <MatthiasVance> If so, check that first
[20:38:20] *** Joins: Kog (~Kog@about/csharp/kog)
[20:38:20] *** ChanServ sets mode: +v Kog
[20:38:29] <lz_> MatthiasVance: no i have a pihole, maybe i should restart it
[20:38:41] <MatthiasVance> Before you do tht
[20:38:44] <MatthiasVance> I'd investigate it
[20:38:54] <lz_> yep good idea
[20:40:22] <lz_> if I ever remember my password
[20:41:08] <lz_> lol i have like 3 attempts and then i get banned :D 1 left
[20:42:25] <lz_> I'm in lol
[20:43:27] <lz_> maybe it's a bit low on memory
[20:44:47] <lz_> nah i don't know
[20:52:58] <MichaelLong> I also had problems with my pi-hole yesterday, it was extremely slow to resolve. had to reboot the instance and it was gone. but that's the first time it acted up like that
[20:53:29] <MatthiasVance> lz_: Stop remembering password and use a password manager?
[20:53:34] <MatthiasVance> *passwords
[20:54:51] <lz_> MatthiasVance: i actually do use a pw mgr but for some reason i didn't have my pw in there (except the web login)
[20:54:58] <MatthiasVance> ah :D
[21:19:42] <_genuser_> yo longs and vances
[21:33:50] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[21:36:37] *** Joins: wroathe (~wroathe@user/wroathe)
[21:36:58] <wroathe> Does C# support destructuring parameters, and if so what's the syntax?
[21:37:15] <wroathe> I've got lines in my functions that look like var (Log, _) = context; and they're annoying me
[21:37:46] <wroathe> Also, C# doesn't happen to have language-level support for something like threading an environment argument through a set of function calls, does it (reader monad)?
[21:38:06] <wroathe> I know DI is the usual solution for that, but that comes with it's own set of hell
[21:40:46] <Suchiman> no
[21:51:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:53:15] <MatthiasVance> Hello _genuser_ !
[21:53:52] <MatthiasVance> wroathe: Since you mentioned reader monads, have you checked out F# / #fsharp yet?
[21:55:12] <Diablo-D3> man
[21:55:20] <Diablo-D3> its funny how Im in this channel and dont use c#
[21:56:14] <MatthiasVance> Diablo-D3: You are discussing C# developers though so it's totally fine ;p
[21:58:24] *** Quits: Bobby (~SlimmyJim@136.37.25.140) (Quit: Going offline, see ya! (www.adiirc.com))
[22:03:54] <MatthiasVance> Nasp: On Thingiverse I read "0% infill for this and 20% for that", however when loading it up in the slicer I can't seem to select that anywhere per part (skinned version of Cura), any clues? :D .. it seems as if there are no separate layers
[22:03:54] <Diablo-D3> well I tried to be on the c# hype train again
[22:03:58] <Diablo-D3> and I really like where its going
[22:04:00] <Diablo-D3> but it just aint fucking rust.
[22:04:07] <Diablo-D3> its never going to achieve that level of badassery
[22:06:10] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:11:07] <wroathe> MatthiasVance: Yes, I have, and if I had my druthers I'd use F#. Unfortunately the people that will pick this up after me will expect C#.
[22:11:19] <MatthiasVance> wroathe: Ah!
[22:11:33] <MatthiasVance> I hope you warmed up your fingers for lots and lots of typing? :D
[22:11:47] <wroathe> For now I've scrapped the context object idea and I'm just going to live with having a global context
[22:12:11] <wroathe> MatthiasVance: Well, they'll expect C#, but there's nothing saying I can't try to write it in a semi-functional way ;)
[22:12:19] <wroathe> I'm making heavy use of static classes full of static functions
[22:12:26] <MatthiasVance> Or LINQ
[22:12:32] <wroathe> Yup, that too
[22:13:01] <wroathe> And I've been leveraging the fact that C# supports closures too
[22:13:21] <MatthiasVance> You have to be careful with pushing it though .. unless being maliciously compliant
[22:13:29] <MatthiasVance> This might be unmaintanable?
[22:13:43] <wroathe> No, it'll be fine. I'm not going overboard.
[22:15:27] <wroathe> I needed a way to keep track of resources that these functions I've been defining are using, and so I'm making use of a "Resources" object that has an onCleanup method that looks something like this: public Action OnCleanup(Action handler) { _handlers += handler; return () => _handlers -= handler; }
[22:16:05] <wroathe> So I can return an unsubscribe function that has closed over the event property for the caller to use once they've successfully finished with the resource
[22:16:35] <Suchiman> https://en.wikipedia.org/wiki/Demosaicing fascinating
[22:16:57] <wroathe> var unsunscribe = resources.OnCleanup(() => { ...; process.Kill(); ...; });
[22:17:06] <wroathe> unsubscribe*
[22:17:34] <wroathe> I've got another abstraction I've been using that I've named Thunk that makes use of implicit conversions to defer execution of a routine that computes the value
[22:17:48] <wroathe> Thunk<T>
[22:22:23] <MatthiasVance> You can also just write F# and take the decompiled IL as C#? :D
[22:22:28] <MatthiasVance> THAT'LL TEACH 'M
[22:41:25] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[22:49:19] <wroathe> MatthiasVance: Problem solved.
[22:49:23] <wroathe> They'll never know the difference.
[22:51:41] <wroathe> In a fog this morning I spent two hours adding a context object parameter to all of my functions, hence the question about a reader monad, and then I realized that that would eventually lead to arguments about why I didn't just wrap all of the functions in a class and use a dependency injection container for the whole program
[22:51:58] <wroathe> in classes*
[23:00:51] <Nasp> MatthiasVance:  hmm no i dont know, i can
[23:01:08] <Nasp> Also i for some reason always forget to select or deselect support when needed
[23:02:50] *** Joins: zaher (~zaher@37.48.186.46)
[23:03:55] <Nasp> wroathe:  Who are you writing this program for
[23:04:02] <Nasp> BEcause sounds like you are making job guarantee :D
[23:05:07] *** Quits: zaher_ (~zaher@37.48.153.35) (Ping timeout: 256 seconds)
[23:12:09] <irwiss> https://i.redd.it/ou5i5ykzisb81.jpg
[23:18:44] <lz_> irwiss: in french they renamed "deku tree" into "mojo tree" because deku sounds like "des culs" (asses)
[23:20:12] <_genuser_> hey people.
[23:20:19] <_genuser_> cold day here.
[23:20:27] <_genuser_> having to do an interview assignment. not sure how I feel about it.
[23:20:31] <irwiss> lz_: weird :P
[23:29:04] *** Joins: Imk0tter (~Imk0tter@172.58.228.46)
[23:38:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:46:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:46:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:46:35] *** Joins: wroathe (~wroathe@user/wroathe)
[23:51:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:55:14] *** Joins: Bilz (~Billy@84.70.222.215)
