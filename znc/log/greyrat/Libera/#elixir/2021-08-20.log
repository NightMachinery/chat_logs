[00:01:28] <hoppity> Nicd: I don't think I've turned on TLS specifically but I have HTTPS working with a let's encrypt certificate no problem at all
[00:01:44] <hoppity> The app seems to work perfectly well except for that message that I sent
[00:02:03] <Nicd> So what is serving the certificate?
[00:03:05] <Nicd> HTTPS is HTTP + TLS :)
[00:03:07] <hoppity> My Phoenix app
[00:03:21] <hoppity> en yes I have HTTPS enabled
[00:03:25] <hoppity> then*
[00:03:41] <hoppity> following this: https://hexdocs.pm/phoenix/using_ssl.html
[00:04:56] *** Joins: dalla (~dalla@2001:b07:6456:d97f:84f1:a828:a713:29f7)
[00:05:18] <Nicd> So I guess it's a client that doesn't support a new enough TLS protocol. Many spammers / vulnerability scanners don't have support for new TLS stuff.
[00:05:33] <Nicd> I get these kind of messages constantly from nginx
[00:06:04] <hoppity> I see, thanks
[00:06:35] <Nicd> You can test with Qualys SSL test what clients can and cannot connect to your site
[00:07:13] <hoppity> thank you testing now
[00:08:31] <hoppity> I got an A grade so I imagine I am good
[00:16:30] *** Quits: hoppity (~user@user/hoppity) (Quit: ERC (IRC client for Emacs 26.3))
[00:16:53] *** Joins: hoppity (~user@user/hoppity)
[00:36:10] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 240 seconds)
[00:40:32] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[00:40:55] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[00:49:11] *** Joins: [deleted] (~livoreno@user/notzmv)
[00:51:17] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 245 seconds)
[01:05:11] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[01:06:11] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:24:51] <hoppity> So, why are IO.inspect messages and other debug info still printed when running a release? I imagine this slows down the system a little bit?
[01:26:29] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[01:33:50] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:37:48] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[01:45:16] *** Quits: dalla (~dalla@2001:b07:6456:d97f:84f1:a828:a713:29f7) (Remote host closed the connection)
[01:47:21] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 248 seconds)
[01:48:51] <josevalim> hoppity: yes, you want to use Logger for this stuff
[01:49:58] <hoppity> Is there a way to no run IO.inspect in production or do I have no option but go and remove them all?
[01:51:49] *** equi| is now known as equil
[01:52:54] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:57:10] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:57:38] <v0idpwn> hoppity: you use Logger instead of IO.inspect. Logger supports "logger levels", then you can run on the :debug level locally and a higher level on production
[01:58:19] <hoppity> void09:  thank you, damn I guess I will have to go and remove all my inspects lol
[01:59:37] <v0idpwn> IO.inspect is more used for debugging. The community endorsed static analyzer won't let you ship code with it :) 
[02:00:53] <azazel> hoppity: don't you came from a Python background where it's customnary to use the `logging` package?
[02:01:47] <hoppity> azazel: honestly I still use print statements on python. Old habbits die hard.
[02:02:12] <hoppity> And simply use frameworks like Django that ignore them during pruduction.
[02:02:22] <v0idpwn> josevalim: could you give me an answer for the thing I asked above? I'm not sure if elixir is open for such proposals. If its not I'd rather not spam the mailing list.
[02:02:32] <v0idpwn> weird decision from django lol
[02:03:02] <hoppity> void09: Why? I love that feature tbh
[02:03:05] <azazel> oh, they don't ignore them, I'm sure they are logged somewhere as they are written to stdout
[02:03:40] <hoppity> I have never detected a file where they go to
[02:03:58] <hoppity> and they definitely don't show on the console when debug=false 
[02:03:59] <josevalim> v0idpwn: big concern is ambiguity with <<1>>=<<1>>
[02:04:06] <josevalim> so unlikely >>= is ever an operator
[02:04:22] <josevalim> you will have to use one of the existing ones
[02:05:32] <v0idpwn> just tested and... <<1>>=<<1>> breaks. Nice catch, sorry for noise.
[02:16:01] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:18:25] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:21:11] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[02:22:10] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[02:36:02] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[02:36:17] *** Joins: livoreno (~livoreno@user/notzmv)
[02:36:54] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:38:58] *** Joins: batok (~batok@wimax-cpe-189-208-165-56.tijbcn.static.axtel.net)
[02:42:08] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[02:42:20] *** Joins: livoreno (~livoreno@user/notzmv)
[02:42:38] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[02:42:57] *** Joins: livoreno (~livoreno@user/notzmv)
[02:46:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[02:53:03] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[02:55:16] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Remote host closed the connection)
[02:55:41] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[02:56:00] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[02:57:18] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[02:58:10] *** Joins: [deleted] (~livoreno@user/notzmv)
[02:59:54] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[03:01:40] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[03:06:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:13:31] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Quit: WeeChat 3.1)
[03:26:50] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[03:30:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:31:48] *** Joins: flynn (~mcbloch@user/flynn)
[03:37:12] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[03:38:02] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[03:41:44] *** Joins: Guest5 (~Guest5@2a02:c7d:e006:1200:5ccf:a145:c1cc:f42c)
[03:53:45] *** Quits: mahmutov (~mahmutov@5.47.170.92) (Ping timeout: 248 seconds)
[04:03:38] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:08:10] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:17:01] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[04:33:03] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:39:48] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[05:11:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[05:15:53] *** Quits: tanger_ (~tanger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Ping timeout: 248 seconds)
[05:18:45] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:19:05] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 248 seconds)
[05:23:34] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:32:15] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[05:42:55] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[05:52:39] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[05:52:58] *** Joins: livoreno (~livoreno@user/notzmv)
[05:57:32] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[06:06:40] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[06:10:29] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:15:35] *** Quits: batok (~batok@wimax-cpe-189-208-165-56.tijbcn.static.axtel.net) (Remote host closed the connection)
[06:35:13] *** Quits: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Read error: Connection reset by peer)
[06:35:36] *** Joins: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[06:46:35] *** Joins: dalla (~dalla@2001:b07:6456:d97f:84f1:a828:a713:29f7)
[06:50:52] *** Quits: dalla (~dalla@2001:b07:6456:d97f:84f1:a828:a713:29f7) (Ping timeout: 250 seconds)
[07:11:05] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[07:36:10] *** Quits: humbertowoody (~humbertow@187.202.253.37) (Ping timeout: 240 seconds)
[07:39:15] *** Joins: ur5us (~ur5us@203.86.198.200)
[07:53:04] *** Quits: Guest5 (~Guest5@2a02:c7d:e006:1200:5ccf:a145:c1cc:f42c) (Ping timeout: 246 seconds)
[08:04:27] *** Joins: humbertowoody (~humbertow@2806:107e:f:5e47:2837:e8bf:d880:11fb)
[08:07:12] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:746b:9383:3a2f:5a)
[08:09:04] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e47:2837:e8bf:d880:11fb) (Ping timeout: 258 seconds)
[08:23:16] *** Quits: ur5us (~ur5us@203.86.198.200) (Quit: Leaving)
[08:25:04] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[08:31:41] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:746b:9383:3a2f:5a) (Ping timeout: 258 seconds)
[08:53:31] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:746b:9383:3a2f:5a)
[08:55:40] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:58:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:746b:9383:3a2f:5a) (Ping timeout: 240 seconds)
[08:59:47] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:13:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:14:27] *** Joins: flynn (~mcbloch@user/flynn)
[09:25:50] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[09:29:21] *** Joins: Rubyn (~Rubyn@user/rubyn)
[09:52:09] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 248 seconds)
[10:19:15] <serafeim> hello friends
[10:28:40] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[10:41:47] <Nicd> yes indeed
[10:42:10] <dzfranklin> Is there any equivalent to parse transforms in Elixir? I want to transform every function call (to built time-travel debugging in dev environments). I initially thought I could redefine `def`, but that requires importing my new `def` and excluding the kernel `def` at the top of each module. Ideally I want my users to need to enable this in one place, maybe even just by including the library, and then get to modify all their 
[10:42:10] <dzfranklin> code. If this isn't possible I guess I'd have to fork the compiler?
[10:42:54] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:f40b:e42d:c809:ee66)
[10:43:30] <Nicd> you could have a `use TimeMachine` that does the import/exclude transparently. of course it still requires that use line
[10:45:18] <dzfranklin> nicd: I'm hoping not to need that because it would be tedious and also cause hard-to-detect errors if left out from one module (since I will enable time-travel per process, a process can't call both non time-travel and time-travel functions or everything will blow up)
[10:46:14] <Nicd> guess you'd need a custom compiler then. I don't know if it needs to fork the entire Elixir compiler, there are smaller custom compilers like Phoenix used to have I think
[10:46:48] <dzfranklin> You mean for `.eex` or something transforming elixir code?
[10:48:03] <Nicd> I don't actually know what their compiler did 🤷 maybe I shouldn't comment further as I've never tried custom compilers. but Mix has a field for setting the compilers used in a project
[10:49:48] <dzfranklin> That might be exactly what I need. I wonder if I can provide mix with a custom "compiler" for elixir code that transforms it to elixir code and then runs the real elixir compiler on it?
[11:22:08] *** Joins: chgr (~ek@nat-91-137-26-20.net.encoline.de)
[11:32:05] *** Joins: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec)
[11:34:04] *** Joins: amk (~amk@109.255.169.126)
[12:05:31] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:20:28] *** Joins: LostKobrakai (~LostKobra@2001:16b8:2d74:5700:c08d:3149:9a73:2528)
[12:22:00] <mhmd> Hi, I'm using ecto without schemas and database to validate data in a map, after validation, I want to get data as a map, how can I convert the changeset back to a map?
[12:23:52] <chgr> mhmd: https://hexdocs.pm/ecto/Ecto.Changeset.html#apply_changes/1 might work
[12:24:30] <chgr> If there were no changes, you could also just read the `data` field. https://hexdocs.pm/ecto/Ecto.Changeset.html#module-the-ecto-changeset-struct
[12:28:31] <mhmd> so I'll check for changes, if there was any, I'll apply it, if there wasn't, I'll get the data field
[12:28:35] <mhmd> thanks
[12:29:28] <Nicd> or just use `apply_changes` anyway
[12:32:14] <mhmd> Nicd: apply_changes work even when there's no change to apply?
[12:32:24] <Nicd> I would expect it to
[12:35:36] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:43] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Quit: Leaving)
[12:38:03] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:07:51] *** LostKobrakai is now known as LostKobrakai[awa
[13:08:21] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d74:5700:c08d:3149:9a73:2528) (Quit: LostKobrakai[awa)
[13:17:08] *** Joins: LostKobrakai (~LostKobra@2001:16b8:2d74:5700:c08d:3149:9a73:2528)
[13:28:31] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:f40b:e42d:c809:ee66) (Quit: floriann)
[13:41:07] *** Joins: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net)
[14:04:26] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[15:19:23] *** Joins: sc_ (~sc@bl19-70-41.dsl.telepac.pt)
[15:29:25] *** Quits: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec) (Remote host closed the connection)
[15:35:45] *** Joins: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec)
[15:40:10] *** Quits: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec) (Ping timeout: 240 seconds)
[15:51:31] *** Quits: chgr (~ek@nat-91-137-26-20.net.encoline.de) (Quit: WeeChat 3.2)
[16:00:50] *** Joins: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec)
[16:09:26] *** Quits: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec) (Ping timeout: 250 seconds)
[16:33:25] *** Joins: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec)
[16:37:21] *** Joins: dalla_ (~dalla@2001:b07:6456:d97f:bc68:8940:37be:7453)
[16:40:20] *** Joins: dalla__ (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e)
[16:40:34] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:24b1:cf7d:64:580d)
[16:40:38] *** Quits: dalla (~dalla@2001:b07:6456:d97f:2538:d0c4:1d4a:d2ec) (Ping timeout: 250 seconds)
[16:42:48] *** Quits: dalla_ (~dalla@2001:b07:6456:d97f:bc68:8940:37be:7453) (Ping timeout: 250 seconds)
[16:44:36] *** Joins: natrys (~natrys@user/natrys)
[16:47:56] <m1dnight> Does anyone here have troublees with asdf+vscode +elixirls? 
[16:48:00] <m1dnight> I can't seem to get it to work anymore.
[16:48:06] <m1dnight> (https://exbin.call-cc.be/PrenotifiedSurplices the errors I see)
[16:48:46] <josevalim> m1dnight: does setting the elixir version helps?
[16:49:09] <m1dnight> Well, I'll be honest, I've been looking on how to do that :p
[16:49:34] <m1dnight> I've tried explicitly installing an elixir version, but that doesn't do the trick.
[16:50:57] <benwilson512> m1dnight: what doesn't work?
[16:51:03] <benwilson512> oh sorry I see you linked errors
[16:51:10] <m1dnight> Ah, I put something in .tool-versions and now it complains about erlang
[16:51:14] <Nicd> have you gone into the project folder and run `asdf install`?
[16:51:18] <m1dnight> oh.
[16:51:29] <benwilson512> well, that'll only set whatever is in `.tool-versions`
[16:51:30] <m1dnight> Okay sorry to look dumb :p
[16:52:55] <m1dnight> Oh that did the trick. Set elixir + erlang version in a .tool-versions 
[16:52:59] <Nicd> the `.tool-versions` says what versions you should have to use this project. but you must also install them
[16:53:27] <m1dnight> I thought it was something like RVM or so. You just told it to use this or that version .Never thought I would have to configure separate projects.
[16:53:56] <Nicd> the `.tool-versions` file is the way you tell it (and others that use your project)
[16:54:09] <Nicd> it doesn't automatically download and install the versions though
[16:54:15] <m1dnight> Gotcha. Thanks all :)
[16:54:46] <Nicd> there is also `asdf global <tool> <version>` that sets the version for any folder that doesn't have a `.tool-versions` in the directory hierarchy
[16:55:10] <Nicd> (vs `asdf local <tool> <version>` that stores it in the `.tool-versions` file in the working directory)
[17:03:47] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:25:10] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[17:34:48] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:39:08] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[17:51:01] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:55:21] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 248 seconds)
[17:57:06] *** Joins: [deleted] (~livoreno@user/notzmv)
[17:59:10] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[17:59:40] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[18:01:24] *** Joins: mexen (uid495612@user/mexen)
[18:03:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:07:14] *** Joins: phaleth (~phaleth@user/phaleth)
[18:14:59] <thinkofher> why is mix format adding parentheses to my functions
[18:15:20] <thinkofher> for examples: func :something, :somethign becomes fun(:something, :something)
[18:15:33] <thinkofher> is there some way to disable this behaviour?
[18:24:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:25:03] *** Joins: flynn (~mcbloch@user/flynn)
[18:30:03] <azazel> thinkofher: see https://hexdocs.pm/elixir/Code.html#format_string!/2 and https://github.com/elixir-lang/elixir/blob/v1.9.0/lib/mix/lib/mix/tasks/format.ex#L1, maybe the option `:locals_without_parens` does what you want
[18:36:59] <thinkofher> azazel that's what i've been looking for!
[18:37:02] <thinkofher> thank you :)
[18:37:28] <thinkofher> btw elixir compiler and tools code is sooo easly readable i really apprieciate that
[18:37:50] <thinkofher> i've just started writing elixir code but i can easly read source code of tools i'm using
[18:38:03] <thinkofher> it really helps to dig in
[18:39:53] <azazel> yes usually they're well written, I cannot say that I appreciate the "all the docs into the module" custom
[18:41:32] <mexen> in iex, is there any way I can use ctrl + l to clear
[18:41:45] <azazel> also, I miss the chance to document private functions... 
[18:43:09] *** Quits: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Quit: Leaving)
[18:50:21] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:04:40] <mexen> https://github.com/elixir-lang/elixir/issues/7310
[19:04:45] <mexen> Guess that answers that
[19:05:52] <mexen> I will try autokey
[19:05:53] <mexen> https://github.com/autokey/autokey/releases/
[19:06:38] <kpanic> mexen: try ctrl+\ in iex
[19:06:55] <mexen> that exists
[19:07:00] <mexen> I think
[19:07:08] <mexen> exits*
[19:07:14] <kpanic> yeah, maybe I missed your problem.
[19:07:14] <mexen> sorry typo
[19:07:15] <kpanic> ?
[19:07:24] <mexen> clear the screen
[19:07:35] <kpanic> ah gotcha. I thought also exiting
[19:08:00] <mexen> np, I am good with exiting... spoilt for choice actually haha. Cheers
[19:08:26] <kpanic> eheh
[19:10:38] *** Joins: hoppity (~user@user/hoppity)
[19:22:33] <azazel> kpanic: CTRL+l  is used to redraw the screen, hence *cleaning* it from possible log messages
[19:25:59] <kpanic> azazel: yeah I know. but the problem mentioned by mexen was that it does not clear the screen. you have to type `clear`. which is fine for me
[19:27:02] *** Quits: sc_ (~sc@bl19-70-41.dsl.telepac.pt) (Ping timeout: 250 seconds)
[19:27:49] <mexen> muscle memory, because I generally use `<ctrl> + l` in other repls, I tend to hit that shortcut in iex as well
[19:28:51] <rawtaz> i wish i had muscle. i only have a badly working memory :(
[19:31:05] *** Joins: ananthakumaran (~ananthaku@49.207.194.59)
[19:38:49] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[19:42:15] *** Quits: sweater (~sweater@206.81.18.26) (Quit: WeeChat 2.8)
[19:42:47] *** jeregrine_ is now known as jeregrine
[19:56:42] *** Quits: keathley (sid155969@id-155969.highgate.irccloud.com) (Ping timeout: 258 seconds)
[19:57:03] *** Quits: bcardarella (sid1539@id-1539.highgate.irccloud.com) (Read error: Connection reset by peer)
[19:57:06] *** Quits: nox (sid3872@highgate.irccloud.com) (Read error: Connection reset by peer)
[19:57:12] *** Quits: hmans (sid565@user/hmans) (Read error: Connection reset by peer)
[19:58:02] *** Quits: asonge (sid129041@id-129041.highgate.irccloud.com) (Ping timeout: 245 seconds)
[19:58:10] *** Quits: rjk (sid809@2001:67c:2f08:1::329) (Ping timeout: 240 seconds)
[19:58:27] *** Quits: triskite3 (uid414920@id-414920.highgate.irccloud.com) (Ping timeout: 245 seconds)
[19:58:33] *** Quits: ryanwinchester (sid147626@id-147626.highgate.irccloud.com) (Read error: Connection reset by peer)
[20:00:51] *** Joins: keathley (sid155969@highgate.irccloud.com)
[20:00:52] *** Joins: hmans (sid565@user/hmans)
[20:01:13] *** Joins: bcardarella (sid1539@id-1539.highgate.irccloud.com)
[20:01:16] *** Joins: ryanwinchester (sid147626@id-147626.highgate.irccloud.com)
[20:01:50] *** Joins: triskite3 (uid414920@highgate.irccloud.com)
[20:01:56] *** Joins: rjk (sid809@id-809.highgate.irccloud.com)
[20:02:23] *** Joins: nox (sid3872@id-3872.highgate.irccloud.com)
[20:03:23] *** Quits: ananthakumaran (~ananthaku@49.207.194.59) (Quit: leaving)
[20:03:36] *** Joins: asonge (sid129041@id-129041.highgate.irccloud.com)
[20:03:56] *** Joins: ananthakumaran (~ananthaku@49.207.194.59)
[20:08:56] *** Joins: notzmv (~zmv@user/notzmv)
[20:15:06] *** Joins: sweater (~sweater@206.81.18.26)
[20:18:18] *** Joins: jess (~jess@libera/staff/jess)
[20:20:05] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[20:22:44] *** Quits: dalla__ (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e) (Remote host closed the connection)
[20:22:48] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:24:06] *** Joins: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e)
[20:24:37] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[20:24:52] *** Joins: livoreno (~livoreno@user/notzmv)
[20:26:07] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:30:26] *** Quits: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e) (Ping timeout: 258 seconds)
[20:31:50] *** Joins: Guest5 (~Guest5@2a02:c7d:e006:1200:5ccf:a145:c1cc:f42c)
[20:42:59] *** Joins: batok (~batok@wimax-cpe-189-208-165-56.tijbcn.static.axtel.net)
[20:45:00] *** Joins: mahmutov (~mahmutov@176.30.184.41)
[20:48:30] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[20:54:14] *** Joins: notzmv (~zmv@user/notzmv)
[20:56:27] *** Quits: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net) (Quit: leaving)
[20:58:22] *** Joins: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e)
[21:02:48] *** Quits: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e) (Ping timeout: 250 seconds)
[21:05:01] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:05:10] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:05:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:16:25] *** Joins: mouseghost (~draco@user/mouseghost)
[21:20:59] *** Joins: [deleted] (~livoreno@user/notzmv)
[21:21:22] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[21:21:52] *** Joins: [deleted] (~livoreno@user/notzmv)
[21:23:36] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[21:28:39] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[21:39:16] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[21:49:54] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Quit: Leaving)
[21:51:28] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 268 seconds)
[21:55:53] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 248 seconds)
[22:01:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:01:51] *** Joins: livoreno (~livoreno@user/notzmv)
[22:02:37] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[22:02:56] *** Joins: livoreno (~livoreno@user/notzmv)
[22:04:05] *** Quits: ananthakumaran (~ananthaku@49.207.194.59) (Quit: leaving)
[22:05:12] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:09:58] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[22:22:43] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[22:29:18] *** Joins: [deleted] (~livoreno@user/notzmv)
[22:32:41] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 248 seconds)
[22:38:25] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[22:39:29] *** Joins: notzmv (~zmv@user/notzmv)
[22:44:23] *** Joins: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e)
[22:49:58] *** Quits: dalla (~dalla@2001:b07:6456:d97f:c5d9:3534:47ec:7a7e) (Ping timeout: 258 seconds)
[22:53:30] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:57:05] *** Joins: livoreno (~livoreno@user/notzmv)
[22:57:25] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[22:57:51] *** Joins: livoreno (~livoreno@user/notzmv)
[22:58:15] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[22:58:57] *** Joins: livoreno (~livoreno@user/notzmv)
[23:01:10] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[23:01:55] *** Joins: [deleted] (~livoreno@user/notzmv)
[23:03:25] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[23:04:18] *** Joins: livoreno (~livoreno@user/notzmv)
[23:04:36] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[23:04:56] *** Joins: livoreno (~livoreno@user/notzmv)
[23:06:18] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[23:06:33] *** Joins: [deleted] (~livoreno@user/notzmv)
[23:09:20] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[23:12:13] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[23:12:40] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[23:17:03] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[23:35:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 248 seconds)
[23:39:26] *** Joins: uniqueuid (~uniqueuid@2001:16b8:ad6f:b800:e94d:25aa:c3f4:472f)
[23:40:52] <uniqueuid> Hi! Is there a canonical way to do delayed restarting from supervisors? I.e. when a child crashes, wait x seconds and then restart? I could sleep on child startup but that's quite a hack.
[23:41:35] <hoppity> uniqueuid: I am curious as to why you desire a delay. Can you explain?
[23:42:06] <uniqueuid> (caveat: I
[23:42:33] <uniqueuid> I'm entirely new to Elixir). I have a worker that polls external resources which may go away e.g. from a lost network connection
[23:42:49] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[23:43:01] <uniqueuid> When the connection drops, the supervisor restarts x times (I guess it's 5) and then restarts itself, taking with it all children
[23:43:03] *** Joins: livoreno (~livoreno@user/notzmv)
[23:43:13] <uniqueuid> This is a DynamicSupervisor btw
[23:43:38] <uniqueuid> So I'd like to prevent the Supervisor from restarting if ony one or few of its children have temporary crashes
[23:45:34] *** Joins: [deleted] (~livoreno@user/notzmv)
[23:45:35] <uniqueuid> Of course I could try to anticipate some sort of pattern along which some children may crash, and then build separate supervisors for each of the "crash domains". But if there's a generic solution that would be nicer. 
[23:45:45] <benwilson512> uniqueuid: crashing is generally reserved for unexpected errors, to get back to a known good state
[23:46:24] <benwilson512> if it is expected that the network connection may fail, the best option I think is to handle that possibility within your code
[23:46:55] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[23:47:28] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[23:47:28] <uniqueuid> benwilson512: right! that was a quite interesting learning - to see how "let it crash" actually translates into "explicitly model your failures".
[23:47:50] <uniqueuid> many thanks
[23:51:13] *** Joins: sc_ (~sc@bl19-70-41.dsl.telepac.pt)
