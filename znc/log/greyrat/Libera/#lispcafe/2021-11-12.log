[00:01:51] * mfiano is feeling like a heretic by studying GTK+3 bindings to over the rough-around-the-edges McCLIM implementation
[00:02:02] <mfiano> -to
[00:02:45] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[00:03:44] <sham1> Sometimes you just need a bit of heresy to get stuff done
[00:04:23] <sham1> Although now that you mention it, I do wonder if there is any kind of a GObject Introspection thing for Common Lisp and also how up-to-date it'd be
[00:04:45] <mfiano> I don't know what that is
[00:05:56] <sham1> GObject Introspection basically allows one to generate bindings to libraries that use GObject as a basis, like GTK and related libraries
[00:06:12] <mfiano> Oh actually there is not afaik. The Nyxt developer tried hiring me to write one a few months ago, and I remember looking it up and firmly declining.
[00:06:59] <mfiano> they wanted me to write one for webkit-gtk
[00:07:02] <sham1> Hmm, a quick google search found *something* but I suppose that if this had to be done properly it'd have to be done by me :P
[00:07:04] <mfiano> or something
[00:07:34] <mfiano> Spoken like a true Lisper
[00:08:05] <sham1> There's one for Guile which also works for me
[00:09:08] <sham1> The problem with the ones offered isn't that they wouldn't work, it's more that they don't seem that ergonomic
[00:09:34] <sham1> One needs to go through an "invoke"-function and that just seems nasty
[00:10:20] <mfiano> This is the Lisp curse at work. It is much easier to roll something yourself than to mend an existing implementation, given that the language is flexible enough to encompass your own thought processes
[00:10:37] <mfiano> It is both a blessing and a curse though
[00:11:29] <hayley> Well spooked my prototypes
[00:14:35] *** Joins: Jacobis9100 (~jonaholuf@host213-123-6-146.range213-123.btcentralplus.com)
[00:14:51] <Jacobis9100> hello :)
[00:16:09] <Jacobis9100> quiet...
[00:17:02] <sham1> I've noticed that this sort of "Lisp curse/NIH" mentality really isn't all that uncommon. I for example also get it when working with C, where I will sometimes just do my own implementation of something just because I think that I can do it better
[00:20:40] <mfiano> It isn't that uncommon but it is ubiquitous in the Common Lisp ecosystem, because the language is so flexible and thus optimized for small teams (of usually 1). The amount of flexibility lets you mold the language to your own thought processes, which is very easy unlike say, trying to untangle the layers of macros of someone elses' brain.
[00:23:34] <mfiano> But, I sort of see this as a blessing more than a curse.
[00:25:30] <hayley> C-c M-e goes brrrr
[00:25:43] *** Quits: drbluefall (~drbluefal@pool-162-83-177-90.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:28:03] <pl> Also, I think it's overblown in CL ecosystem. As in, the hype about NIH is higher than reality 
[00:28:37] <Catie> I mean, if you really have to, it's not hard to wrap an existing library in abstractions that better fit your use case
[00:30:19] <pl> Yet the myth is that you can't cooperate because people will write custom languages in defmacro 
[00:30:38] <pl> I know maybe two really egregious cases and one of them could be mostly avoided 
[00:30:50] <Catie> The same goes for C/C++ in the preprocessor
[00:30:54] <pl> (Cells and dwim.hu stuff) 
[00:31:06] <pl> C++ doesn't need preprocessor 
[00:31:28] <Catie> How do you include a header?
[00:31:34] <pl> Also, apparently with Rust the question quickly becomes "which standard library" 
[00:32:00] <pl> Catie: I meant that the complexity and custom languages happen without #define macros 
[00:32:12] <Catie> pl: Ah! Okay yeah no, agree
[00:32:19] <sham1> How do you include a header? Well I'm not sure how much one can replace headers with C++20 modules, but if it goes far enough, you might not even need to include headers except for legacy stuff
[00:52:35] *** Quits: Catie (~user@user/catie) (Ping timeout: 264 seconds)
[00:55:12] *** Joins: Catie (~user@user/catie)
[01:07:50] <random-nick> sham1: there are actually two CL libraries for gobject introspection, one just binds libgirepository and wraps the invoke functions while the other reads .gir files (the XML files with extra info, as opposed to the binary .typelib files libgirepository uses)
[01:08:02] <random-nick> but yeah neither actually do binding generation
[01:09:09] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[01:09:10] <random-nick> I actually started working on such a library but I keep procrastinating on it, and even if I finish those it wouldn't be the best
[01:09:35] *** Joins: Catie (~user@user/catie)
[01:10:40] <random-nick> .typelib files throw away a lot of information including all documentation, which is not ideal
[01:12:02] <random-nick> there's also the issue of some things assuming you're using C, such as GDestroyNotify not getting a user data pointer like every other callback
[01:12:36] <random-nick> (which would mean I couldn't write a binding generator which would let you pass closures as GDestroyNotify callbacks)
[01:13:41] *** Joins: z147 (~z147@gateway/tor-sasl/z147)
[01:14:24] <random-nick> there are also general FFI woes like having to copy objects when functions return a part of some shared structure
[01:15:30] <random-nick> and also questionable things about the APIs themselves, like GTK+ assuming it's always running on the same thread
[01:18:42] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[01:23:04] <hayley> Cooperation because no one can do anything alone is better called "stagnation"
[01:31:16] *** Quits: z147 (~z147@gateway/tor-sasl/z147) (Quit: z147)
[01:41:55] <Jacobis9100> https://www.youtube.com/watch?v=H36v9eSbF3o&list=RDMMMV_3Dpw-BRY&index=4
[01:41:56] -ixelp- Motorcycle - As The Rush Comes (Metronome & Morten Granau Remix) - YouTube
[01:48:52] <hayley> https://www.youtube.com/watch?v=IEM8x4VFZB0
[01:48:53] -ixelp- The Aircrash Bureau - YouTube
[01:49:05] * hayley watches someone implement half a scripting language for configuring their web server, but it's ok cause rust
[01:52:10] <shka> that's how you get PHP
[01:55:19] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:57:34] <pl> random-nick: same thread can be worse with Cocoa
[01:57:53] <pl> Windows doesn't care so long as you stick to one thread handling the message pumps
[01:58:07] <pl> X11 doesn't care so long as you handle the protocol correctly
[01:58:35] <pl> Cocoa explodes if GUI isn't handled by initial thread
[01:59:17] <shka> eh
[01:59:21] <shka> fucking CSV 
[01:59:27] <shka> such a time sink
[02:01:03] <pl> shka: fun thing is that Excel, if you're using import data dialog, defaults to TAB as separator iirc...
[02:01:24] <shka> interesting, i thought it would ;
[02:01:49] <shka> but really, they could simply use control characters
[02:05:01] <random-nick> pl: well, that requirement probably transfers to GTK+ on macos
[02:05:44] <random-nick> though I don't know what apple would doing to make their gui framework only work on the main thread
[02:06:59] <random-nick> would be*
[02:08:11] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:08:38] <dave0> maw
[02:15:26] <shka> https://en.wikipedia.org/wiki/Neopalpa_donaldtrumpi
[02:18:46] <Catie> i just want to know peace
[02:22:46] <pl> random-nick: side effects of how it communicates with window server, afaik
[02:24:23] *** Quits: occ (~occ@user/occ) (Ping timeout: 264 seconds)
[02:28:58] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[02:31:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd)
[03:21:04] *** Quits: easye (~user@oxi.slack.net) (Remote host closed the connection)
[03:44:34] *** Quits: Jacobis9100 (~jonaholuf@host213-123-6-146.range213-123.btcentralplus.com) (Ping timeout: 260 seconds)
[03:57:03] *** Joins: occ (~occ@user/occ)
[04:18:59] * hayley runs out of space for PC-relative addressing, and decides to make the microcode loop do threaded code.
[04:40:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd) (Ping timeout: 250 seconds)
[04:52:33] *** Quits: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it) (Ping timeout: 256 seconds)
[05:06:38] *** Joins: Posterdati (~posterdat@host-82-63-88-92.business.telecomitalia.it)
[05:38:39] <hayley> I can run a few programs so far.
[05:45:54] *** Quits: random-nick (~random-ni@87.116.176.55) (Ping timeout: 260 seconds)
[06:31:09] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 256 seconds)
[06:31:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[06:43:27] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[06:50:54] <hayley> "Error (triangle.asm line 92): 'instruction' (256) is not expressible in 9 bits" One damn word off.
[06:51:33] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 256 seconds)
[07:03:12] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[07:26:11] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 264 seconds)
[07:41:02] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[07:50:14] *** Quits: Catie (~user@user/catie) (Quit: switching clients)
[07:51:15] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 268 seconds)
[07:52:53] *** Joins: Catie (~user@user/catie)
[08:13:51] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (*.net *.split)
[08:13:51] *** Quits: elflng (~elflng@5.28.137.182) (*.net *.split)
[08:18:25] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[08:18:25] *** Joins: elflng (~elflng@5.28.137.182)
[08:26:29] *** Joins: dec0d3r_ (~dec0d3r@2001:8004:1d82:1a0f:1d6f:e820:a0ed:ee97)
[08:27:38] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Ping timeout: 268 seconds)
[08:30:07] *** Quits: semz (~none@user/semz) (Ping timeout: 250 seconds)
[08:33:01] *** Joins: dec0d3r__ (~dec0d3r@101.181.78.107)
[08:34:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[08:35:19] *** Quits: dec0d3r_ (~dec0d3r@2001:8004:1d82:1a0f:1d6f:e820:a0ed:ee97) (Ping timeout: 250 seconds)
[08:42:48] *** Joins: semz (~none@user/semz)
[08:44:40] * hayley hacks the host VM to be able to print out info on the guest VM by hardcoding breakpoints and variable addresses.
[08:58:18] <hayley> Oops, I never installed the page in the page table after allocating it. So I lost the write.
[09:03:11] <moon-child> huh I assumed lc3 was like a really barebones kind of thing.  But it has pcrel and virtual memory?
[09:04:34] <hayley> It has pc-rel, and I added virtual memory so that I could fit a LC3 instance in another LC3 instance.
[09:08:00] *** Joins: eschaton (~eschaton@li541-49.members.linode.com)
[09:08:13] <hayley> Else, you run into problems trying to fit 64KW memory into another 64KW memory.
[09:18:05] <contrapunctus> shka: « https://en.wikipedia.org/wiki/Neopalpa_donaldtrumpi » rofl
[09:46:51] *** Quits: Catie (~user@user/catie) (Quit: rcirc on GNU Emacs 29.0.50)
[09:55:44] <hayley> I now get to the point in the 2048 program where it asks "Are you on an ANSI terminal (y/n)?" and then says "y is not a valid input."
[09:59:22] <moon-child> must be a problem with your terminal
[10:01:28] <White_Flame> in order to read the terminal selection, it must be able to select how to read the terminal
[10:04:34] <moon-child> 'keyboard not found.  Please press f12 to continue'
[10:05:02] <contrapunctus> lol moon-child 
[10:05:57] <contrapunctus> I'm trying to make a cross platform (Android and Linux at the very least) GUI application which involves an OSM renderer and router...so what's easier? 1. Using EQL5-Android and making bindings for a C/C++ renderer? 2. the same except writing my own renderer? 3. making a web app and calling a JS renderer via Parenscript? 🤔
[10:06:17] <moon-child> osm?  Openstreetmaps?
[10:06:23] <contrapunctus> Yeah
[10:06:36] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[10:17:21] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[10:22:00] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[10:42:42] *** Quits: dec0d3r__ (~dec0d3r@101.181.78.107) (Quit: Leaving)
[10:49:00] <contrapunctus> I've been told a well-optimized vector renderer would be a few years of work.
[11:01:26] <moon-child> hmm.  Best I can do is a shitty slug implementation in 50 lines of glsl
[11:10:12] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:19:33] <contrapunctus> Ah, well...the best way to beat analysis paralysis and win big?* Try all approaches. 🤔 (* in terms of learning and experience)
[11:22:06] *** Quits: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[11:53:09] *** Joins: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr)
[12:03:35] *** Joins: rogersm (~rogersm@90.166.177.48)
[12:10:55] <moon-child> contrapunctus: none of the existing vector renderers are at all optimized except for https://www.microsoft.com/en-us/research/wp-content/uploads/2005/01/p1000-loop.pdf https://jcgt.org/published/0006/02/02/paper.pdf
[12:11:13] <moon-child> try zooming in/out in your browser or pdf viewer.  There is a noticeable delay
[12:12:42] <moon-child> hmm, actually chrome is pretty fast.  But I think it is cheating by prerendering all of its curvy things
[12:12:59] * hayley watches the Python VM run a LC3 VM run a LC3 VM running her triangle number program.
[12:13:06] <hayley> Fun to see it chug on computing LDB.
[12:13:47] <hayley> That said, it's too damn slow to tell if it's working.
[12:13:54] <contrapunctus> moon-child: I meant * _OSM_ vector tile renderer
[12:15:10] <moon-child> and, hmm, mupdf seems to get slower the further you zoom in
[12:15:16] <moon-child> contrapunctus: sure, but won't that just be an svg or similar?
[12:15:51] * hayley runs in pypy to see if that's any faster.
[12:16:28] <moon-child> (and actually, isn't gilberth working on a nice svg renderer?)
[12:17:41] <hayley> PyPy3 is some 3x faster or so than CPython. But that's still not very fast.
[12:17:51] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:18:48] <contrapunctus> moon-child: hm...possibly 🤔
[12:19:32] <hayley> One layer of LC3-in-LC3 apparently makes the program 12.5x slower. Not bad given that I have to write LDB by testing each bit in a loop.
[12:21:00] <hayley> Thus, what, two layers is 156x slower? If it works of course.
[12:26:09] <moon-child> 12.5*12.5 ~ 156?
[12:26:46] <moon-child> oh I misread
[12:29:36] <hayley> Dammit, I seem to be decoding one register wrong.
[12:39:17] *** Quits: occ (~occ@user/occ) (Ping timeout: 250 seconds)
[12:46:59] <hayley> I have a thing where I constantly forget if an instruction implicitly sets flags or not.
[12:54:33] <hayley> Actually, this VM apparently executes 3,636 instructions while running a 10 instruction program. So I guess I'm waiting for 363^2 as long.
[12:58:37] <selwyn> hayley: can you recall the stat to the effect that most rust fans don't actually use it
[12:58:51] <hayley> It was in some StackOverflow survey?
[12:58:55] <hayley> Prolly the 2020 one.
[13:02:37] * hayley tries to get diff to compare traces of a VM and the VM running in a VM to no avail.
[13:04:00] <pjb> Chip shortage's cause has been found. It boils down to one company, says report <https://www.windowscentral.com/global-chip-shortage-cause-found-it-boils-down-one-company>
[13:04:01] -ixelp- The global chip shortage's cause has been found — it boils down to one company, says report | Windows Central
[13:04:34] <selwyn> yseterday considered that i have never had to replace the battery in my calculator
[13:07:22] <hayley> This interpreter in C++ runs at some 120 MIPS, and it doesn't terminate after 10 seconds, so something is definitely broken. Oh well.
[13:08:22] <selwyn> who buys calculators any more?
[13:09:05] <hayley> Huh, I got 2048 running in my LC3 VM running in a LC3 VM written in C++?
[13:22:15] <hayley> Okay, that 10 instruction program takes 1,461,991 with two layers of LC3-in-LC3 in between.
[13:46:57] <selwyn> shka: what do you use to make org mode look nicer?
[13:47:05] <shka> selwyn: nothing
[13:47:12] <selwyn> really
[13:47:18] <shka> really
[13:47:20] <shka> i don't care
[13:47:20] <selwyn> on the stream it looked different from mine
[13:47:35] <selwyn> ok
[13:47:39] <shka> ah
[13:47:47] <shka> those are defaults from the spacemacs
[13:47:50] <selwyn> oh
[13:47:52] <shka> i don't know the details
[13:48:02] <selwyn> right thanks
[13:50:01] <selwyn> sigh
[13:51:24] <selwyn> i want to get inline image previews working, but my emacs seems to be broken
[13:59:01] <hayley> https://github.com/no-defun-allowed/lc3-in-lc3
[13:59:01] -ixelp- GitHub - no-defun-allowed/lc3-in-lc3: A metacircular LC3 implementation
[14:09:38] <selwyn> melpa seems.. temperamental
[14:23:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[14:23:26] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[14:29:47] <hayley> If I run the C++ VM then three LC3-in-LC3 VMs, the fibonacci program prints at a rate of like 1 character/5 seconds.
[14:42:59] *** Joins: occ (~occ@user/occ)
[14:51:51] <hayley> gilberth: Here is some microcode: https://github.com/no-defun-allowed/lc3-in-lc3/blob/master/vm/instructions.lisp
[14:51:51] -ixelp- lc3-in-lc3/instructions.lisp at master · no-defun-allowed/lc3-in-lc3 · GitHub
[14:52:19] <hayley> IMO having to use this table blows out the idea that LC-3 is a RISC. Moreso a micro-op sequence like :r0 :pc-relative :load :load :register-address :update-flags too
[14:55:26] <hayley> The VM surprisingly only uses 2KW. I was expecting 4KW or so for some reason.
[15:23:17] <hayley> He is called Henry G. Baker but have you ever seen him make bread????
[15:26:39] *** Quits: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:37:18] *** Joins: random-nick (~random-ni@87.116.176.55)
[15:40:34] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: Arcsech (~arcsechma@2001:470:69fc:105::1:797) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (Quit: Bridge terminating on SIGTERM)
[15:40:36] *** Quits: sepanko (~sepanko@user/sepanko) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: hayley (~theemacss@user/hayley) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: sp (~sp@user/susam) (Quit: Bridge terminating on SIGTERM)
[15:50:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:55:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[15:56:50] *** Joins: sepanko (~sepanko@user/sepanko)
[15:59:56] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[15:59:56] *** Joins: sp (~sp@user/susam)
[15:59:56] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[16:20:49] *** Quits: sepanko (~sepanko@user/sepanko) (Quit: Client limit exceeded: 20000)
[16:21:22] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Client limit exceeded: 20000)
[16:22:58] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (Quit: Client limit exceeded: 20000)
[16:23:29] *** Quits: sp (~sp@user/susam) (Quit: Client limit exceeded: 20000)
[16:30:41] *** Joins: sunarch (uid526836@user/sunarch)
[16:47:58] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[17:11:32] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[17:29:18] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[17:29:20] <gilberth> Good morning #lispcafe!
[17:29:25] <selwyn> o/
[17:30:41] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[17:31:07] <shka> yeah, precisely at the dusk
[17:31:13] <shka> gilberth: hi
[17:34:50] <gilberth> Perl hackers around? I have a function in $f and an array in $a, now I want to apply $f to all elements of $a as arguments. I cannot find a way, but I suspect there must be an obvious way. Ideally, I want to use 'goto $f' for tail recursion.
[17:35:10] <shka> you are doing perl now?
[17:35:22] <gilberth> I am bored, still.
[17:36:11] <shka> perl programming levels of bored?
[17:36:15] <selwyn> lol
[17:36:37] <selwyn> problem with being bored is that you can end up with something to do
[17:36:40] <selwyn> and sometimes that is worse
[17:36:59] <shka> well, since i finally had some rest
[17:37:08] <shka> and my brain is functioning
[17:37:41] <gilberth> What I have is sub apply { my ($f,$a)=@_; @_=(); for my $i (0..$#$a) { push @_, $$a[$i]; } goto $f; } But this copies. The obvious @_=$a; goto $f; doesn't work.
[17:40:00] <shka> gilberth: i think that the main issue with my old parser was that my buffered range actually
[17:40:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7)
[17:42:18] <gilberth> Hmm, @_ = @$a; goto $f; seems to do. You just enumerate all possible prefixes of $, and @ and parens or no paresn, until it works.
[17:42:23] <gilberth> shka: Range?
[17:42:30] <shka> sorry
[17:42:34] <shka> i meant stream
[17:45:00] <gilberth> shka: What was the trouble?
[17:45:22] <shka> i had way to much overhead for each character
[17:45:48] <shka> while you simply had lexical variable 
[17:45:57] <gilberth> BTW, who says that Henry Baker does not bake bread? Even I do, without being called a baker.
[17:46:23] <gilberth> shka: Yes, that's the "trick".
[17:49:57] *** Joins: OlCe (~user@lfbn-nic-1-564-52.w90-118.abo.wanadoo.fr)
[17:49:58] <dave0> nite all
[17:50:21] <edgar-rft> -> https://onmilwaukee.com/articles/henrybaker
[17:50:22] <gilberth> Take care!
[17:50:31] <dave0> byes gilberth 
[17:52:14] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:55:32] *** Joins: easye (~user@oxi.slack.net)
[18:06:15] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[18:20:12] *** Joins: Nselm (~Nselm@p200300d56f3676456c837ffc3d1b71a9.dip0.t-ipconnect.de)
[19:24:24] <gilberth> Ah, Perl has special variables.
[19:47:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7) (Ping timeout: 264 seconds)
[20:00:55] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[20:03:00] *** Joins: domovod (~domovod@176.196.122.197)
[20:04:03] *** Quits: Nselm (~Nselm@p200300d56f3676456c837ffc3d1b71a9.dip0.t-ipconnect.de) (Quit: Client closed)
[20:06:20] *** Quits: domovod (~domovod@176.196.122.197) (Client Quit)
[20:11:03] *** Joins: Nselm (~Nselm@p200300d56f3676456c837ffc3d1b71a9.dip0.t-ipconnect.de)
[20:21:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[20:26:58] *** Joins: Catie (~user@user/catie)
[20:31:26] <selwyn> https://nitter.net/XHNews/status/1458810279203012609#m
[20:35:17] <phantomics> Was wondering if anyone's having the same problem I have with ECL - I've built it from source and anytime I try to load an ASDF system, I get a n error message saying "failed to map segment from shared object"
[20:56:05] *** Joins: notzmv (~zmv@user/notzmv)
[21:16:24] *** Quits: Nselm (~Nselm@p200300d56f3676456c837ffc3d1b71a9.dip0.t-ipconnect.de) (Quit: Client closed)
[21:29:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[21:31:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:32:24] <gilberth> It's a pity, that labels are not lexical with Perl, because otherwise I could compile my special forms directly to Perl. It even has special variables. And given those special variables I could implement CATCH/THROW in terms of TAGBODY/GO, if labels would be lexical. This way BLOCK/RETURN-FORM and TAGBODY/GO must be done in terms of CATCH/THROW, which must at run time search the tag thrown at.
[21:38:37] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[21:39:06] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[22:01:45] <gilberth> At times I wonder what a dish washer is for? My cousin loves to first leave dishes just in the sink and then rinse them for minutes. Instead of just putting them into the fine dish washer and be done. Unfortunately this kitchen is not mine.
[22:08:14] <pjb> gilberth: yeah, it seems people have a strange relationship with their dishwashers…
[22:08:21] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:09:18] <ck_> mine sings me songs of its people to help me sleep
[22:09:28] <selwyn> we don't have one
[22:09:36] <ck_> is this strange, pjb? If yes, should I change it. If yes, how do you propose to implement this change.
[22:09:44] <selwyn> we didn't have a toaster until i was 14
[22:10:03] <ck_> selwyn: you have two faucets per sink so I think that's plenty of machinery
[22:10:13] <pjb> ck_: dishwashers should be used unashamedly to wash dishes.
[22:10:36] <ck_> yes I believe this is a side effect of the noise it makes
[22:11:36] <pjb> That said, my experience with dishwashers was in the army with something like: https://www.youtube.com/watch?v=hu7Ue83WVVo
[22:11:37] -ixelp- COMENDA COMMERCIAL DISHWASHERS: INSTALLATION WITH CAROUSEL MACHINE - YouTube
[22:12:06] <selwyn> https://www.youtube.com/watch?v=HfHgUu_8KgA
[22:12:06] -ixelp- Why Britain Uses Separate Hot and Cold Taps - YouTube
[22:12:23] <pjb> Of course, the alternative is to put the dish in the sink and after a few months, order a new set from Amazon… 
[22:14:45] <ck_> a new sink/dish set you mean?
[22:14:59] <ck_> I wish I could order a new life
[22:15:08] <selwyn> this explainer rather suggests that hot water is drinkable in other countries
[22:15:09] <ck_> or no life, even better
[22:15:11] <selwyn> is that true?
[22:15:43] <ck_> selwyn: "it depends", mostly on the way the hot water is made hot
[22:15:46] <selwyn> well, in other countries people don't drink tap water full stop, right
[22:16:12] <ck_> excuse me while I translate "Durchlauferhitzer"
[22:16:36] <ck_> "Instantaneous water heater" very helpful, thanks internet
[22:17:01] <selwyn> they taught us how plugs are wired in physics at school
[22:17:30] <ck_> yours have a fuse in them, right
[22:17:31] <selwyn> it seems that this is a hangover from the old days: until 1992 companies were not required to supply plugs so consumers had to wire their own
[22:17:48] <ck_> wow, that's much more recent than I'd have guessed
[22:17:55] <selwyn> this place is so strange
[22:18:07] <ck_> which place, the island?
[22:18:12] <ck_> or the earth
[22:18:13] <selwyn> normal island
[22:18:48] <ck_> how about we all listen to some nice tunes https://www.youtube.com/watch?v=Uz559yOmCcY
[22:18:48] -ixelp- Gerry Mulligan - Night Lights (1963) (Full Album) - YouTube
[22:18:57] <selwyn> sometimes the water would come out coloured at university..
[22:19:41] <selwyn> 16th century building
[22:19:51] <ck_> what colour? blue?
[22:19:57] <selwyn> rust coloured iirc
[22:20:01] <ck_> oh.
[22:20:06] <selwyn> would just let it run for a few seconds and then drink it
[22:20:25] <ck_> Welcome to Iron Stomach
[22:20:56] <selwyn> the rest of the plumbing in that building was not great at all now i think about it
[22:21:37] <selwyn> but probably the most beautiful place i will ever have lived in
[22:22:19] <gilberth> Whe have pipes made of lead, still.
[22:23:22] <gilberth> We, rather. A pity, as I could need more iron in my blood, still a little low at times.
[22:24:18] <shka> absorption rate is crap  
[22:25:01] <shka> gilberth: change diet to incorporate more organ meat, especially liver 
[22:25:26] <selwyn> they say not more than once a week for liver but idk
[22:25:30] <selwyn> it can't be that bad right
[22:25:53] <shka> and obviously 
[22:25:56] <shka> the Grützwurst
[22:26:19] <shka> https://en.wikipedia.org/wiki/Kaszanka
[22:26:39] <shka> selwyn: depends on the liver
[22:27:34] <shka> anyway, the iron supply and absorption is the whole different story 
[22:27:54] <shka> and i would really gladly eat some kasznka right now 
[22:27:58] <shka> *sigh*
[22:28:38] <selwyn> i had this before actually
[22:28:42] <selwyn> didn't realise you could have it cold
[22:28:59] <selwyn> the casing split when i tried to cook it
[22:29:07] <gilberth> shka: I hate liver and all other organs meat.
[22:29:28] <shka> that's why your iron is low
[22:29:33] <selwyn> ah yes, i tried to prepare it like its relative https://en.wikipedia.org/wiki/Black_pudding
[22:29:37] <selwyn> and it was a big disaster
[22:30:11] <gilberth> shka: I don't believe that's the reason.
[22:30:39] <shka> well, most of the iron deficiency cases are diet related, really 
[22:31:05] <gilberth> Most, but not all.
[22:33:38] <selwyn> https://www.youtube.com/watch?v=lIFE7h3m40U
[22:33:38] -ixelp- The Art of the Bodge: How I Made The Emoji Keyboard - YouTube
[22:35:33] <sham1> Didn't even make a GNU+Linux version of it. 0/10, unusable
[22:37:03] <ck_> things only get worse https://www.msn.com/en-us/news/technology/vibrant-new-logitech-pop-keys-keyboard-is-both-retro-and-modern/ar-AAQv31c
[22:37:03] -ixelp- Vibrant new Logitech Pop Keys keyboard is both retro and modern
[22:49:41] <selwyn> pissed off but not surprised that discord won't support embeddable latex fragments
[22:51:41] <ck_> it's in the name
[22:51:49] <selwyn> good point lol
[22:53:32] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[22:56:48] <sham1> Can't sell LaTeX to gamers
[22:58:02] <selwyn> indeed, but some of my gamer friends are science people
[22:59:43] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[23:01:28] <sham1> I mean, there's always MathBot even though it's not a perfect solution
[23:03:42] <selwyn> bots compensating for defieciencies of the client
[23:06:02] <ck_> can't have everything, next thing you know people want microsoft excel previews and XLOOKUP competitions built in
[23:07:59] <ck_> https://www.youtube.com/watch?v=ICp2-EUKQAI#t=4m52s
[23:07:59] -ixelp- MAKRO | XLOOKUP: META BREAKER? | Microsoft Excel Stream Highlights 10/19 - YouTube
[23:08:54] <sham1> Sadly slack doesn't do LaTeX either I don't think
[23:09:46] <selwyn> i guess with slack it marketed itself as the 'solution' for large teams
[23:09:59] <selwyn> so it gets used regardless of how good it actually is
[23:10:06] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:10:51] <ck_> \stackrel{\circ \circ}{\bigcap}
[23:11:39] <sham1> That's not the DUNC logo
[23:11:48] <sham1> Disappoint
[23:12:22] <ck_> it was my reaction to the lack of latex integration in so many important main stream productivity electron internet applications
[23:12:34] <selwyn> ck: lol
[23:14:18] <sham1> I wish more software in general supported AsciiMath as well as LaTeX
[23:15:02] <ck_> there was an article recently about speed-input of math expressions, in emacs probably. do you remember what I mean
[23:15:17] <selwyn> no but would be interested
[23:15:49] <sham1> I don't think I've seen that article. The only thing I know is that Emacs has a TeX input mode which is pretty useful
[23:16:25] <ck_> bunch of macros or maybe auto-translations, but seemed well thought out. I'll see if I can find it
[23:16:54] <ck_> found it on the other machine
[23:17:13] <ck_> karthinks.com/software/latex-input-for-the-impatient-scholars
[23:17:34] <ck_> seems I made a typo there somewhere
[23:17:55] <ck_> no -the .. sorry. https://karthinks.com/software/latex-input-for-impatient-scholars/
[23:19:01] <ck_> selwyn: HTH. I expect your finished diss by monday
[23:19:49] <selwyn> damn this looks good
[23:21:28] <ck_> my thoughts too. I wish I had something like that 20 years ago
[23:22:03] <ck_> all I managed was a few dozen entries in a vim auto translate table. Better than nothing I guess
[23:22:37] <ck_> I'll go socially distance into my bed, have a good evening
[23:22:42] <selwyn> nn
[23:30:21] <pjb> ck_: I assume in the worst cases, a new sink would be in order too…
[23:41:14] <gilberth> Speaking of which. Sink is full with dishes again. Litter all over the place, nothing put where it belongs, everything lying around. The kitchen was is PERFECT order the other night.
[23:42:58] <gilberth> I wanted to prepare cabbage, for what I would need some space for.
[23:48:07] <gilberth> Perhaps I'll punt.
[23:50:29] <gilberth> I am open for suggestions on how to fix the situation.
[23:52:16] <pjb> gilberth: order some strong detergent, pour it in the sink with some hot water, wait a couple of hours, then use a brush to wash the dish.
[23:58:44] <gilberth> You believe the dishes would disintegrate?
