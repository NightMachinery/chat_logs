[00:31:29] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 256 seconds)
[01:19:59] *** Quits: mro (~mro@2002:5cc3:f03d:0:691a:7754:1d33:81e9) (Remote host closed the connection)
[01:20:35] *** Joins: mro (~mro@2002:5cc3:f03d:0:691a:7754:1d33:81e9)
[01:25:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[01:26:43] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[01:42:54] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[01:43:47] *** Quits: reynir (root@user/reynir) (Ping timeout: 268 seconds)
[01:57:17] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[02:02:37] *** Quits: spip (~bobo@37.164.214.120) (Ping timeout: 240 seconds)
[02:02:56] *** Joins: spip (~bobo@37.164.71.151)
[02:08:01] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[02:25:41] *** Joins: rgrinberg (~textual@187.223.218.43)
[02:30:03] *** Quits: rgrinberg (~textual@187.223.218.43) (Ping timeout: 250 seconds)
[02:41:29] *** Quits: mro (~mro@2002:5cc3:f03d:0:691a:7754:1d33:81e9) (Quit: Leaving...)
[02:51:57] *** Joins: rgrinberg (~textual@187.223.183.192)
[03:02:06] *** Quits: bartholin (~bartholin@2a01:cb11:1ef:d800:4fc6:aec1:8fb8:a2e1) (Quit: Leaving)
[03:39:06] *** Quits: Putonlalla (~sapekiis@it-cyan.it.jyu.fi) (Quit: Leaving.)
[03:44:54] *** Joins: Putonlalla (~sapekiis@it-cyan.it.jyu.fi)
[04:07:01] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 240 seconds)
[04:11:21] *** Joins: rgrinberg (~textual@187.223.183.192)
[04:19:17] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[04:39:04] *** Joins: Everything (~Everythin@37.115.210.35)
[04:49:11] *** Joins: biog (~user1@159.224.42.85)
[05:14:49] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[05:44:42] <d_bot> <darrenldl> > i feel like if a language is general purpose and doesn't cater to specific niches, it won't go anywhere.
[05:44:43] <d_bot> <darrenldl>
[05:44:44] <d_bot> <darrenldl> i am not confident go and rust target any specific niche
[05:45:46] <d_bot> <darrenldl> there are many langs that target some niche and never go anywhere
[05:49:37] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 250 seconds)
[05:49:44] <d_bot> <darrenldl> lang popularity boils down to timing, marketing and luck really, to suggest "good" lang is necessarily popular and vice versa ignores the fact that most only care about the tech being "good enough"
[05:50:12] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[05:51:42] *** Quits: chrisz (lbpjkgmx1q@55d4c283.access.ecotel.net) (Ping timeout: 268 seconds)
[05:51:59] <d_bot> <darrenldl> (as in they dont actively pursue a "better" choice all the time)
[05:52:37] *** Joins: mbuf (~Shakthi@122.178.240.169)
[05:52:42] <d_bot> <darrenldl> we see similar network effect from fb vs other platforms
[05:53:19] *** Joins: chrisz (rzi55r9x53@55d48e35.access.ecotel.net)
[06:13:59] *** Joins: hornhack (~hackingho@user/hackinghorn)
[06:14:05] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi) (Quit: Leaving.)
[06:29:25] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Ping timeout: 240 seconds)
[06:30:18] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[06:35:42] *** Joins: rgrinberg (~textual@177.246.216.2)
[06:37:01] <d_bot> <gabenpls> yes there's definitely a timing factor when it comes to the network effect
[06:37:18] <d_bot> <gabenpls> i feel like if ocaml had the features people need back when they needed it it would have been more popular
[06:39:12] <d_bot> <darrenldl> "better" lang necessarily comes with at least slightly higher learning curve, which is an initial cost that some people dont want to deal with
[06:40:21] <d_bot> <darrenldl> many just want to get things up and running, they dont care if it'll be barely holding together a few months down the road
[06:40:47] *** Quits: berberman_ (~berberman@user/berberman) (Quit: ZNC 1.8.2 - https://znc.in)
[06:41:07] *** Joins: berberman (~berberman@user/berberman)
[06:44:36] <d_bot> <gabenpls> maybe but usually how popular something gets comes down to timing and execution
[06:44:56] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[06:45:52] <d_bot> <gabenpls> anyways, like you said, popularity isn't always equated to quality
[06:46:12] <d_bot> <gabenpls> so ocaml not being popular isn't that big of a deal
[06:46:39] <d_bot> <gabenpls> but then the other factor is execution
[06:47:17] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[07:03:19] <d_bot> <darrenldl> the ecosystem has been sufficiently rich for my use cases so far, so not too big of a deal to me personally
[07:03:47] <d_bot> <gabenpls> whats your use cases
[07:05:28] <d_bot> <darrenldl> some degree of system automation (namely a linux installer), transpiler/compiler, occassional language parsing and analysis
[07:06:18] <d_bot> <darrenldl> time and schedule handling (well i made a package for this one)
[07:06:39] <d_bot> <darrenldl> occassional quality of life utilities
[07:07:19] <d_bot> <darrenldl> if im writing a server of sort id likely use ocaml as well
[07:09:11] <d_bot> <darrenldl> so...any problem that is kinda complex and can be captured by algebraic data type nicely
[07:10:52] <d_bot> <darrenldl> exception i have made so far would be python and numpy and other data science stuff, but that side of things is largely unparalleled, and no other lang has an equivalent solution with same momentum
[07:22:35] <d_bot> <gabenpls> i wonder if ocaml is suitable for posix userland services
[07:26:55] <d_bot> <mk-fg> Not sure if I'm weird in that, but using ocamlopt compiler and a small .ml.c bindings seem to make it quite nice for linux userland stuff
[07:28:03] <d_bot> <mk-fg> I.e. you get access to all the libs (as C ABI is the dominant interface there) without any restrictions or need to find third-party bindings with slightly warped interfaces in there
[07:34:19] <d_bot> <gabenpls> @mk-fgsounds neat i'll give it a shot. how does ocaml use C bindings? dynamic linking? ffi?
[07:34:44] <d_bot> <mk-fg> Just linking, yeah
[07:34:57] <d_bot> <gabenpls> ok, so long as it's not ffi lol
[07:35:03] <d_bot> <mk-fg> https://github.com/mk-fg/systemd-cgroup-nftables-policy-manager can probably be an example
[07:35:28] <d_bot> <mk-fg> With libsystemd and libnftables glue in https://github.com/mk-fg/systemd-cgroup-nftables-policy-manager/blob/master/scnpm.ml.c
[07:36:12] <d_bot> <gabenpls> hm reminds me a lot of ruby's c extension functionality
[07:37:17] <d_bot> <mk-fg> Also how python's cffi works, as yeah, ctypes/ffi tend to complicate and duplicate stuff a lot
[07:37:56] <d_bot> <gabenpls> hmm ffi works differently no?
[07:38:20] <d_bot> <mk-fg> I mean as in libffi which iirc what python's ctypes use too
[07:38:46] <d_bot> <mk-fg> "cffi" is a different thing there that uses gcc and similar C snippets
[07:39:01] <d_bot> <mk-fg> Which actually resolve all constants from headers and all that
[07:41:00] <d_bot> <mk-fg> Or constants and signatures and all that - proper compiler checks and linking instead of how ctypes work in python, which I thought was what you meant by "ffi" above
[07:46:32] <d_bot> <gabenpls> i see
[07:47:46] <d_bot> <gabenpls> to my understanding, libffi is for when a language doesn't have a C api that the user can use to call other libs
[07:48:05] <d_bot> <gabenpls> seems like ocaml does have a C api that one can use to write extensions
[07:48:09] <d_bot> <gabenpls> (similar to ruby)
[07:48:21] <d_bot> <gabenpls> C apis are preferably to ffi because more granular control
[07:48:39] <d_bot> <gabenpls> especially if the host lang is GC'd
[07:48:48] <rgrinberg> well libffi is a bit more powerful than that
[07:49:02] <rgrinberg> however, it's true that it isn't necessary to write bindings in OCaml
[07:50:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[07:55:09] <companion_cube> perf is hard sometimes :/
[07:55:30] <companion_cube> I guess I can't get my httpd to do more than 65k req/s… maybe not surprising since it uses threads
[07:56:17] <rgrinberg> @anurag is working on something that might be fast enough for you :)
[07:56:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[07:57:10] <companion_cube> domainslib might help a lot
[07:57:17] <companion_cube> but are you referring to something more fun? :)
[07:57:55] <companion_cube> I made a thread pool which helps a bit (compared to allocating new threads), but it's still not awesome
[07:58:05] <companion_cube> domains might be a significant improvement
[07:58:07] <rgrinberg> well threads are definitely the wrong way to go
[07:58:24] <companion_cube> yeah yeah, you know, I like direct style
[07:59:06] *** Joins: xiongxin (~Thunderbi@119.123.103.196)
[07:59:18] <companion_cube> I'm trying to optimize the wrong thing, this should be used for low concurrency embedded servers.
[07:59:59] <rgrinberg> how do you have the budget for threads at all then?
[08:00:27] <companion_cube> "embedded" as in, embedded in a larger application
[08:00:37] <companion_cube> it's always been the use case :D
[08:01:44] <rgrinberg> if you're embedded in a larger application, you should be very careful with threads for other reasons
[08:03:59] <companion_cube> sure, but you'd also have to be careful if you embed lwt in something that doesn't use it
[08:04:59] <rgrinberg> why's that?
[08:05:14] <companion_cube> cause it's assuming it's running as the main loop
[08:05:40] <companion_cube> I imagine you could have lwt in a separate thread, but that's kind of ironic :D
[08:09:26] <rgrinberg> that's a bit of a shame I suppose
[08:09:42] <rgrinberg> especially given that the underlying IO library fully supports driving the event loop manually
[08:10:02] <companion_cube> I mean, in applications that do _not_ have an event loop in the first place :)
[08:12:20] <rgrinberg> ok I give up, enjoy your threads :)
[08:15:24] <companion_cube> heh
[08:15:39] <companion_cube> don't worry, it's going to come back in fashion with domainslib
[08:15:42] <companion_cube> 🤞
[08:19:38] <companion_cube> I'm also having fun with Atomic
[08:19:47] <companion_cube> it's nice to have access to that in OCaml, at last
[09:08:12] <d_bot> <gabenpls> just a thought but would be nice for https://opam.ocaml.org/packages/ the package list to be paginated. everytime i open this, it slows my entire pc lmao
[09:11:14] <d_bot> <darrenldl> there is effort on overhauling the main site for a while, i presume package page will receive one some time later
[09:11:44] <d_bot> <darrenldl> but yeah, i think it didn't anticipate this amount of packages when it was first built maybe
[09:11:44] <companion_cube> the v3?
[09:11:49] <d_bot> <darrenldl> ye v3
[09:12:01] <d_bot> <darrenldl> i'm very uninformed on it though, so i might be saying nonsense
[09:12:29] <companion_cube> ahah shit, https://v3.ocaml.org/packages/search?q= lags a lot more
[09:12:36] <d_bot> <darrenldl> ono
[09:12:41] <companion_cube> well it's a big page
[09:13:09] <d_bot> <darrenldl> yeah pagination is a good idea
[09:13:12] <companion_cube> tons of divs…
[09:13:15] <companion_cube> at least it's using <li>
[09:13:27] <d_bot> <darrenldl> or just show a handful like crates.io
[09:13:58] <d_bot> <darrenldl> i like the v3 style though
[09:14:08] <companion_cube> yeah it looks good
[09:16:24] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[09:17:30] <d_bot> <darrenldl> this might be a good place to ask actually: there was a brief discussion of rust arc vs traditional gc architecture in terms of performance in a different server, wonder if anyone has concrete numbers on that front?
[09:18:07] <companion_cube> not particularly
[09:18:17] <companion_cube> however, note that rust does a lot less memory allocations that OCaml
[09:18:40] <companion_cube> people tend to have more flat values, and borrowing (with rust references) doesn't touch Arc refcounts at all
[09:18:55] <companion_cube> if it did (like Swift tends to do) it can have a certain overhead, although I don't have numbers
[09:20:11] <d_bot> <darrenldl> yeah true, vastly different memory usage profile
[09:20:46] <companion_cube> if you write rust with Arc<Mutex<…>> everywhere, the common view is that it'll be relatively slow :)
[09:20:58] <d_bot> <darrenldl> : D
[09:21:33] <companion_cube> (emphasis on "relatively")
[09:31:11] <d_bot> <gabenpls> i think we were talking about reasonml a couple days ago and someone mentioned about them lagging behind ocaml, but i just checked their repository and it seems like its compatible with 4.13 now..
[09:35:15] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[10:13:49] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[10:15:43] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[10:20:22] *** Quits: spip (~bobo@37.164.71.151) (Quit: Konversation terminated!)
[11:05:05] *** Joins: hexology (~hexology@user/hexology)
[11:17:33] *** Quits: rgrinberg (~textual@177.246.216.2) (Read error: Connection reset by peer)
[11:18:58] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb)
[11:34:39] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb) (Read error: Connection reset by peer)
[11:35:40] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb)
[11:46:24] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb) (Read error: Connection reset by peer)
[11:47:39] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb)
[12:39:26] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:8c5b:cca6:c832:befb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:06:44] *** Joins: bartholin (~bartholin@2a01:cb11:1ef:d800:4fc6:aec1:8fb8:a2e1)
[13:10:02] *** Quits: ns12 (~ns12@user/ns12) (Ping timeout: 240 seconds)
[13:56:13] *** Joins: ns12 (~ns12@user/ns12)
[14:12:19] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[14:18:58] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Remote host closed the connection)
[14:21:00] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[14:27:02] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi)
[14:36:54] *** Joins: biog (~user1@159.224.42.85)
[14:44:33] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Remote host closed the connection)
[15:33:12] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[15:46:10] *** Joins: biog (~user1@159.224.42.85)
[16:04:30] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[16:09:06] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Ping timeout: 260 seconds)
[16:14:10] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[16:17:55] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Remote host closed the connection)
[16:23:02] *** Joins: mro (~mro@port-92-195-150-105.dynamic.as20676.net)
[16:23:15] *** Quits: mro (~mro@port-92-195-150-105.dynamic.as20676.net) (Remote host closed the connection)
[16:42:54] *** Joins: jlrnick (~josephler@42.118.113.78.rev.sfr.net)
[16:47:15] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[16:55:13] *** Quits: xiongxin (~Thunderbi@119.123.103.196) (Quit: xiongxin)
[17:16:13] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Remote host closed the connection)
[17:18:25] *** Joins: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d)
[17:28:16] *** Quits: mro (~mro@2002:5cc3:9669:0:e5e3:229e:644:8c7d) (Remote host closed the connection)
[17:28:47] *** Joins: mro (~mro@port-92-195-150-105.dynamic.as20676.net)
[17:31:46] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[17:59:16] *** Quits: mro (~mro@port-92-195-150-105.dynamic.as20676.net) (Remote host closed the connection)
[18:24:19] *** Joins: spip (~bobo@37.171.166.97)
[18:30:38] *** Joins: biog (~user1@159.224.42.85)
[18:35:05] *** Joins: mro (~mro@port-92-195-150-105.dynamic.as20676.net)
[18:35:31] *** Quits: gravicappa (~gravicapp@178.214.248.83) (Ping timeout: 256 seconds)
[18:43:45] *** Quits: jlrnick (~josephler@42.118.113.78.rev.sfr.net) (Ping timeout: 268 seconds)
[19:00:03] *** Quits: mro (~mro@port-92-195-150-105.dynamic.as20676.net) (Remote host closed the connection)
[19:14:39] *** Joins: mro (~mro@port-92-195-150-105.dynamic.as20676.net)
[19:16:21] *** Quits: mro (~mro@port-92-195-150-105.dynamic.as20676.net) (Client Quit)
[19:40:50] *** Joins: gravicappa (~gravicapp@178.214.248.83)
[19:42:56] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:55:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[20:06:01] *** Quits: mbuf (~Shakthi@122.178.240.169) (Quit: Leaving)
[20:06:42] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[21:14:08] <d_bot> <minimario> what is the state of modular implicits in ocaml rn?
[21:18:19] <companion_cube> inexistent
[21:18:59] <d_bot> <minimario> why not 😮
[21:19:58] <d_bot> <undu> people are busy with multicore right now 🙂
[21:20:39] <d_bot> <minimario> the original paper was published in 2015 though 😛
[21:24:07] *** Joins: biog (~user1@159.224.42.85)
[21:26:12] <companion_cube> paper ≠ production ready typechecker
[21:44:08] <zozozo> about modular implicits: there is an ongoing work to prepare the terrain by first working on modular explicits, which is seen as a first step (see https://github.com/ocaml/ocaml/pull/9187 )
[21:45:52] <zozozo> apart from that, as far as I can recall, one thing that was still left to do for modular implicit was some theoretical work (around soundness and/or termination of the elabortation process, i can't quite recall), so not something that can be helped by just anyone sadly
[22:31:51] <d_bot> <Et7f3> The rescript backend is a fork of 4.06 and they embed a old reasonml converter.
[22:44:49] *** Joins: rgrinberg (~textual@187.223.75.25)
[23:06:29] *** Joins: reynir (root@user/reynir)
[23:09:56] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:17:36] *** Quits: rgrinberg (~textual@187.223.75.25) (Read error: Connection reset by peer)
[23:18:50] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:9825:bd3b:45be:5a0f)
[23:32:10] *** Joins: mro (~mro@port-92-195-150-105.dynamic.as20676.net)
[23:38:02] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:38:22] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[23:39:40] *** Joins: pieguy128_ (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[23:40:01] *** Joins: ns127 (~ns12@user/ns12)
[23:40:09] *** Joins: Geekingfrog_ (~geekingfr@li2156-64.members.linode.com)
[23:40:18] *** Joins: bobo_ (~bobo@37.171.166.97)
[23:40:45] *** Joins: kronicma1 (user76545@neotame.csclub.uwaterloo.ca)
[23:40:49] *** Joins: ralu9 (~ralu@static.211.245.203.116.clients.your-server.de)
[23:40:58] *** Joins: drewolson4 (~drewolson@user/drewolson)
[23:41:42] *** Joins: ansiwen_ (~sanders@vm1.a6n.de)
[23:42:07] *** Server sets mode: +CScnpt 
[23:42:40] *** Joins: kandu_ (~kandu@138.68.48.10)
[23:42:45] *** Joins: reynir1 (root@user/reynir)
[23:43:23] *** Joins: brettgilio0 (~brettgili@159.203.168.195)
[23:43:31] *** Quits: Geekingfrog_ (~geekingfr@li2156-64.members.linode.com) (Client Quit)
[23:43:43] *** Joins: hexology- (~hexology@user/hexology)
[23:43:53] *** Quits: gravicappa (~gravicapp@178.214.248.83) (*.net *.split)
[23:43:53] *** Quits: ns12 (~ns12@user/ns12) (*.net *.split)
[23:43:54] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[23:43:54] *** Quits: SquidDev (~SquidDev@autoclave.squiddev.cc) (*.net *.split)
[23:43:54] *** Quits: quernd (~quernd@boethin.uberspace.de) (*.net *.split)
[23:43:54] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[23:43:54] *** Quits: andreypopp (~andreypop@94.188.42.16) (*.net *.split)
[23:43:54] *** Quits: tristanC (~tristanC@163.172.94.116) (*.net *.split)
[23:43:55] *** Quits: kronicmage (user55138@neotame.csclub.uwaterloo.ca) (*.net *.split)
[23:44:02] *** Joins: Geekingfrog_ (geekingfro@2a01:7e01::f03c:92ff:fe48:8bdf)
[23:44:13] *** Joins: olle (~olle@p5784cb5f.dip0.t-ipconnect.de)
[23:44:43] *** Joins: remexre (~remexre@user/remexre)
[23:44:57] *** ns127 is now known as ns12
[23:45:02] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[23:45:10] *** Joins: lagash_ (lagash@lagash.shelltalk.net)
[23:45:35] *** Quits: jsoo_ (~znc@irc.refl.club) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: seeg (0bf4efab5c@2604:bf00:561:2000::2c7) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: andreypopp_ (~andreypop@94.188.42.16) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: biog (~user1@159.224.42.85) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: olle_ (~olle@p5784cb5f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: rak (~rak@debian/rak) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: omni (~user@shellbox.hack.org) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: rks` (~trefis@ns366843.ip-37-59-60.eu) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: quernd9 (~quernd@boethin.uberspace.de) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: landonf (landonf@mac68k.info) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: horninghack (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: aru_ (~aru@ip-86-49-27-241.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[23:45:52] *** Joins: dstein64- (~dstein64@dannyadam.com)
[23:45:53] *** Joins: aru_ (~aru@ip-86-49-27-241.net.upcbroadband.cz)
[23:46:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[23:46:23] *** Joins: leah2 (~leah@vuxu.org)
[23:46:28] *** Joins: brettgilio3 (~brettgili@159.203.168.195)
[23:46:40] *** dstein64- is now known as dstein64
[23:46:47] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[23:46:51] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[23:47:09] *** Joins: spoofer_ (~spoofer@64.185.111.205)
[23:47:14] *** Quits: mro (~mro@port-92-195-150-105.dynamic.as20676.net) (*.net *.split)
[23:47:14] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (*.net *.split)
[23:47:14] *** Quits: reynir (root@user/reynir) (*.net *.split)
[23:47:14] *** Quits: spip (~bobo@37.171.166.97) (*.net *.split)
[23:47:14] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[23:47:14] *** Quits: hornhack (~hackingho@user/hackinghorn) (*.net *.split)
[23:47:15] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[23:47:15] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (*.net *.split)
[23:47:15] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[23:47:15] *** Quits: arg_ (~arthur@ns3054037.ip-91-121-134.eu) (*.net *.split)
[23:47:15] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[23:47:16] *** Quits: Geekingfrog (~geekingfr@li2156-64.members.linode.com) (*.net *.split)
[23:47:16] *** Quits: nfc_ (nfc@tilde.institute) (*.net *.split)
[23:47:16] *** Quits: lobo (~lobo@user/lobo) (*.net *.split)
[23:47:16] *** Quits: ansiwen (~sanders@vm1.a6n.de) (*.net *.split)
[23:47:16] *** Quits: brettgilio (~brettgili@159.203.168.195) (*.net *.split)
[23:50:17] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:52:44] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:53:23] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Ping timeout: 250 seconds)
[23:53:33] *** Joins: lobo (~lobo@user/lobo)
[23:55:05] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:55:46] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[23:55:53] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[23:56:08] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:56:21] *** Server sets mode: +CScnpt 
[23:56:27] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[23:56:43] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:58:23] *** Quits: lobo (~lobo@user/lobo) (Ping timeout: 256 seconds)
[23:58:41] *** Joins: lobo (~lobo@user/lobo)
