[00:10:03] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[00:10:10] *** Quits: rgrinberg (~textual@187.223.78.219) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:13:45] *** Joins: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d)
[00:18:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[00:24:41] *** Quits: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d) (Read error: Connection reset by peer)
[00:25:47] *** Joins: rgrinberg (~textual@187.223.78.219)
[00:49:47] *** Quits: rgrinberg (~textual@187.223.78.219) (Read error: Connection reset by peer)
[00:50:24] *** Joins: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d)
[01:02:21] *** Quits: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:18:12] *** Joins: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d)
[01:22:52] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[01:28:17] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[01:40:24] *** Quits: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d) (Read error: Connection reset by peer)
[01:41:54] *** Joins: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d)
[01:46:37] *** Quits: mahmutov (~mahmutov@5.176.63.70) (Ping timeout: 240 seconds)
[02:04:17] *** Quits: rgrinberg (~textual@2806:101e:7:def:543e:6849:cc94:640d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:17] *** Quits: hmans (~hmans@user/hmans) (Read error: Connection reset by peer)
[02:18:32] *** Joins: hmans (~hmans@user/hmans)
[02:41:26] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[03:31:26] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Quit: Leaving)
[03:31:45] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[04:24:28] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[04:29:03] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[05:50:39] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[06:04:16] *** Joins: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785)
[06:14:54] *** Quits: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785) (Read error: Connection reset by peer)
[06:16:33] *** Joins: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785)
[06:21:07] *** Quits: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:26:05] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[06:30:12] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[06:47:09] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[06:47:42] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[06:49:17] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 240 seconds)
[06:57:31] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[07:01:51] *** Quits: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se) (Read error: Connection reset by peer)
[07:06:37] *** Joins: livoreno (~livoreno@user/notzmv)
[07:09:25] *** Joins: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se)
[07:30:45] *** Joins: yauhsien_ (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[07:30:46] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:41:25] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:10:50] *** Quits: yauhsien_ (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:12:24] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[08:16:57] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[09:01:56] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[09:21:13] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:22:03] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[09:27:07] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:39:48] *** Joins: rgrinberg (~textual@177.246.221.189)
[10:03:57] *** Joins: notzmv (~zmv@user/notzmv)
[10:25:10] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[10:40:03] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:56] *** Quits: rgrinberg (~textual@177.246.221.189) (Read error: Connection reset by peer)
[10:48:16] *** Joins: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785)
[11:16:30] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:17:16] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[11:18:30] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[11:20:31] *** Joins: _w1ntermute (~w1ntermut@p54af8409.dip0.t-ipconnect.de)
[11:22:09] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:37:36] *** Quits: _w1ntermute (~w1ntermut@p54af8409.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:44:15] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[12:05:32] *** Joins: mexen (uid495612@user/mexen)
[12:15:31] *** Quits: slothby (~JoshAshby@irc.isin.space) (Quit: brb ... maybe)
[12:38:01] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:3876:825a:b3fa:3d1a)
[12:54:32] *** Joins: mahmutov (~mahmutov@37.155.83.34)
[12:59:18] *** Quits: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785) (Read error: Connection reset by peer)
[13:01:01] *** Joins: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785)
[13:06:09] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[13:17:44] *** Quits: rgrinberg (~textual@2806:265:5401:9431:79ec:f6fd:d609:785) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:26:53] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:28:32] *** Joins: notzmv (~zmv@user/notzmv)
[14:03:46] *** Quits: esspapier (~esspapier@user/esspapier) (Quit: ZNC 1.8.2 - https://znc.in)
[14:04:56] *** Joins: esspapier (~esspapier@user/esspapier)
[15:18:57] *** Joins: neceve (~quassel@2.26.93.228)
[15:35:39] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[15:46:38] <fub> I have this LiveView controller: https://dpaste.com/FQ3EDKYAH -- it should load a huge list of hostnames (10k) and render it. I also have a simple "filter" input text box, which should allow to enter a filter and reload the list of hostnames. Because the list is huge, I'm using a temporary_assign here
[15:47:22] <fub> Two problems now: a) the list of hostnames is sent when the page is called and then again over websocket b) when using temporary_assigns, Im not able to "replace" the old list with a new one
[15:47:48] <fub> I read the answer with the unique id and a counter from josevalim here https://elixirforum.com/t/how-can-i-reset-contents-of-temporary-assigns-assigns/30553/5 but I cant get it running
[15:47:56] <fub> Does someone have a complete example for this scenario?
[15:50:31] <fub> This is the "counter" solution I tried: https://dpaste.com/48NTCYYEX -- I also added the id={"counter-#{@counter}"} and phx-update="append" in the template. When I do this, I can see all data on page, then it disappears
[15:56:01] *** Joins: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de)
[15:56:22] *** Quits: etehtsea_ (~kis@164.90.175.135) (Quit: WeeChat 3.2)
[15:58:25] *** Joins: phaleth (~phaleth@user/phaleth)
[16:31:17] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[16:35:17] *** Quits: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:41:58] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[16:56:57] <josevalim> fub: you want to search on the server or on the client?
[17:09:15] <mhmd> Hi, I'm using a phoenix pubsub in my program to be able to send/receive events in order to connect separate parts of the program together.
[17:09:27] <mhmd> I should mention that it's not a phoenix application, I'm just using Phoenix.PubSub without anything else from phoenix.
[17:09:43] <mhmd> I need some advice on how to manage parts of the code that send and receive events. I want to be able to see clearly how an event is emitted and what other events does it trigger. Currently it's everywhere, and I don't like this.
[17:09:57] <mhmd> Are there any best practices here? What would you recommend for keeping this part of the code understandable and easy to follow?
[17:13:00] <rawtaz> hmm, Semantic recompilation in elixir 1.13. i ponder if that would speed up my nimble_parsec application builds which can take a very long time to compile :)
[17:13:57] <mhmd> Currently, I have different parts of the system working, but they're not yet connected together
[17:17:50] <fub> josevalim: on the Server
[17:18:01] *** Quits: mahmutov (~mahmutov@37.155.83.34) (Ping timeout: 256 seconds)
[17:19:59] <josevalim> so why are you sending the whole 10k results? :)
[17:21:06] <josevalim> fub: or maybe you are not sending them but you do not want to keep them in memory?
[17:21:45] <josevalim> in any case, temporary assigns is for when you want some data to be on the client but you don't want to keep a copy on the server. i don't see why you want to send all 10k to the client so i think temporary assigns is not what you want
[17:22:19] <josevalim> my suggestion would be to load the list of host names when the app boots or something like that. you can have a task in your supevision tree
[17:22:49] *** Joins: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de)
[17:29:01] *** Quits: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:37:30] *** Joins: chenghiz_ (uid349735@id-349735.ilkley.irccloud.com)
[17:54:43] *** Quits: henry40408 (~henry4040@175.181.186.198) (Quit: Ping timeout (120 seconds))
[17:55:04] *** Joins: henry40408 (~henry4040@175.181.186.198)
[18:04:00] *** Joins: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de)
[18:10:46] <fub> josevalim: the list of Hostnames comes from the user and he can import it. It can be thousand of Hostnames. I want the user to be able to view them all and filter them
[18:11:17] <fub> Because the list can get huge, I don’t want to keep them I’m memory (every user can have his own list of thousands of hosts)
[18:12:02] *** Quits: _w1ntermute (~w1ntermut@p200300d70f301c06e7d4b9b11db4b3a6.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:12:06] <fub> That’s why I want to retrieve it in the LiveView controller, send it to the client to render, then clear it from memory so not every LiveView session will be huge in memory
[18:12:29] <fub> When the user entered a filter/search term, I want to retrieve it again from the database and render it
[18:15:49] <fub> I can also add a pagination, but I thought it’s nice to have them rendered all at once
[18:19:33] <fub> So the „easy“ way would be to render only like 100 entries and then ignore the temporary assigns?
[18:59:28] *** Joins: mahmutov (~mahmutov@37.155.83.34)
[19:17:50] *** Quits: mahmutov (~mahmutov@37.155.83.34) (Ping timeout: 252 seconds)
[19:28:00] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:ec3a:2574:2f9:e2db)
[20:14:01] <josevalim> if the whole list is on the client, then IMO you should implement the search on the client
[20:29:20] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[20:29:33] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[20:38:20] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:39:30] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[20:43:19] *** Joins: neceve (~quassel@2.26.93.228)
[20:44:12] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[21:01:09] *** Joins: nickjj (~nickjj@user/nickjj)
[21:02:30] <nickjj> hm does anyone know how to get liveview to not trigger a live reload debug message for certain asset types? every time i change a JS file with esbuild it emits ~50 lines of debug entries for every image/svg i copy into priv/static -- as seen here: https://gist.github.com/nickjj/dcfd1c3e099e61017c839f19cf8bb015
[21:02:34] <nickjj> *hi
[21:25:41] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[21:29:57] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[22:01:00] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:10:47] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:6043:aa58:f99b:e1b)
[22:12:40] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[22:12:43] <DNH> Is there a way to print potentially unusued modules (modules which are being defined but not actually being used in the code). I was thinking of just grepping all module names via a regex and then go one by one with a script but was wondering whether there is an existing solution
[22:21:18] *** Joins: lastgosu[m] (~lastgosum@2001:470:69fc:105::1:589f)
[22:21:38] *** Parts: lastgosu[m] (~lastgosum@2001:470:69fc:105::1:589f) ()
[22:24:27] *** Joins: trafficjam (~trafficja@2a03:1b20:a:f011::a04e)
[22:32:23] *** Quits: trafficjam (~trafficja@2a03:1b20:a:f011::a04e) (Ping timeout: 256 seconds)
[22:44:02] *** Joins: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net)
[22:48:23] *** Quits: yauhsien (~yauhsien@61-231-42-148.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:54:10] <Nicd> maybe xref has something for that?
[22:56:08] <Nicd> for functions: https://github.com/hauleth/mix_unused
[22:56:09] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[22:56:39] *** Joins: mouseghost (~draco@user/mouseghost)
[22:57:19] <Nicd> ➜  code-stats git:(wip/live-view) ✗ mix xref unreachable
[22:57:19] <Nicd> The unreachable check has been moved to the compiler and has no effect now
[22:57:21] <Nicd> hmm :/
[23:08:02] <fub> josevalim: okay, I think I will implement some pagination then
[23:08:49] <fub> so to prevent the data beeing sent on mount and then directly via websocket again, I guess I can add a check if the mount() method is called from websocket, right?
[23:09:05] <Nicd> you can check if the socket is in connected state
[23:09:13] <Nicd> the first mount is not connected
[23:10:06] <fub> nicd: what is the purpose of sending it twice?
[23:11:18] <Nicd> the first render is done in the HTTP request, it's for SEO, fallback for clients without JS/WS
[23:11:57] <Nicd> probably technical reasons why WS needs its own full mount
[23:12:06] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:6043:aa58:f99b:e1b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:17:25] <fub> so its not a good idea to prevent the data being sent twice?
[23:20:59] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:ec3a:2574:2f9:e2db) (Quit: Textual IRC Client: www.textualapp.com)
[23:29:45] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:6043:aa58:f99b:e1b)
[23:34:58] *** Joins: rgrinberg (~textual@2806:265:5401:9431:bc59:9b73:1cc3:bb38)
[23:35:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[23:47:59] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:6043:aa58:f99b:e1b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:54:05] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
