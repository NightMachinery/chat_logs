[00:11:52] *** Quits: bandnyquist (~Rheanna@218.78.67.149) (Remote host closed the connection)
[00:12:31] *** Joins: bandnyquist (~Rheanna@218.78.105.67)
[00:20:09] <luisherasme[m]> > <@kv4fv:gnuradio.org> luisherasme: look at https://wiki.gnuradio.org/index.php/Constellation_Receiver
[00:20:09] <luisherasme[m]> > https://wiki.gnuradio.org/index.php/Constellation_Object and
[00:20:09] <luisherasme[m]> > https://wiki.gnuradio.org/index.php/Guided_Tutorial_PSK_Demodulation
[00:20:09] <luisherasme[m]> Thanks Barry Duggan, but I want a little more detail about how that control loop works, they say that they use the difference from the received point to the nearest point to update the NCO, I would like to see the diagram of the control loop.
[00:21:51] *** Quits: jemius (~imperator@2001:16b8:2d48:5400:1a7e:552:ac94:488e) (Quit: Leaving)
[00:24:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:25:37] <willcode4[m]> luisherasme: Here is the code, in case that helps:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/db9ab3bec34a608e943904e8a784cc1aaa2a53a5)
[00:26:37] *** Quits: Acinonyx__ (~acinonyx@user/acinonyx) (Ping timeout: 250 seconds)
[00:27:02] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[00:27:19] <luisherasme[m]> > <@willcode4:gnuradio.org> luisherasme: Here is the code, in case that helps:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b595af2ccde564f47a1326b6d1004876e897606d)
[00:29:12] <willcode4[m]> You might end up being the one who creates it. If it's not on the wiki then we probably don't have one.
[01:01:54] *** Quits: bandnyquist (~Rheanna@218.78.105.67) (Remote host closed the connection)
[01:02:38] *** Joins: bandnyquist (~Rheanna@61.171.38.68)
[01:08:07] *** Joins: yesno (~yesno@109.98.151.179)
[01:09:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:26:44] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:2c0e:5916:cf25:b2d2) (Quit: uros)
[01:28:02] <BarryDuggan[m]> luisherasme: If you do create a diagram, I can help you incorporate it into the wiki ðŸ™‚
[01:30:34] <ve7it> greetings from the North... I am trying to use the QT LED indicator in grc. I would like it to light when the magnitude of a stream exceeds 1.0 (to indicate clipping or overload). I cant seem to find a combination of blocks to do this. The complex to mag block outputs a float stream, but the led expects a state????
[01:31:18] <ve7it> am I missing something?
[01:31:32] <muaddib[m]> rager[m]: I use Inspectrum occasionally but for offline analysis i use universal radio hacker. Itâ€™s a great tool for investigating signals. You can use that as a baseline to get pulse duration/samples per symbol and start incorporating the results into GNURadio for streaming detection.
[01:32:04] <luisherasme[m]> BarryDuggan[m]: Thanks Barry Duggan. But I am still reading. I'm new to GNURadio, and I'm trying to understand the control loop that they have. 
[01:32:13] <muaddib[m]> <rager[m]> "apologies for the combination of..." <- rager[m]: I use Inspectrum occasionally but for offline analysis i use universal radio hacker. Itâ€™s a great tool for investigating signals. You can use that as a baseline to get pulse duration/samples per symbol and start incorporating the results into GNURadio for streaming detection. 
[01:33:10] <merit> was really hoping to figure out what to put after the threshold block to get my actual bits
[01:33:42] <merit> am expecting that clock-recovery isn't gonna work very well because the signal is a non-manchester OOK
[01:33:47] <merit> so it's super gappy
[01:34:25] <merit> I'd try something like "keep 1 in N", but how do you get that phase-aligned, even?
[01:38:11] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:2c0e:5916:cf25:b2d2)
[01:39:42] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:2c0e:5916:cf25:b2d2) (Client Quit)
[01:48:10] <patchvonbraun[m]> ve7it: Must be a new widget post 3.8, 'cuz I don't see it.
[01:48:39] <willcode4[m]> An OOK burst usually starts with a clock train. Or it can be slow enough that you can oversample and pick an arbitrary sample point.
[01:49:27] <ve7it> yes... I thinks its new in 3.9. So far it looks like its only uses as an indicator light for gui controls like the toggle switch
[01:49:41] <ve7it> which already have color indicator options
[01:50:36] <ve7it> it would be nice to have the treshold block out a state that could connect to the led
[01:50:47] <ve7it> (sorry cant type today)
[01:50:49] <patchvonbraun[m]> ve7it: It takes a message it looks like.  
[01:51:39] <patchvonbraun[m]> So, I think you'd need a block that takes your threshold output and turns it into a properly-formatted message for the control.
[01:52:26] <patchvonbraun[m]> Or you could use a functio-probe to "top load" the state value.
[01:52:26] *** Quits: bandnyquist (~Rheanna@61.171.38.68) (Remote host closed the connection)
[01:52:42] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:54:38] <ve7it> ?? like a python function in the state entry ??  like ( amplitude < 1.0 )
[01:54:39] *** Joins: bandnyquist (~Rheanna@61.171.21.169)
[01:55:52] <ve7it> its all new to me
[01:56:47] <patchvonbraun[m]> Any block parameter that is underlined can be changed at runtime.  So, Have your threshold value go into a probe block, and then use a function probe to probe that block at let's say 50Hz, and the value of your state parameter would be the variable name of the function-probe block.  Although you might want to pass the thresholder output into some kind of hysteresis or "sticky" function first.  Just off the top of my head.
[01:57:29] <ve7it> I am working with the hackrf building a signal generator app and I thought it would be nice to indicate when the modulation is too high (indicator for over modulation)
[01:59:07] <patchvonbraun[m]> You can control the amplitude of all the sig-gen functions in Gnu Radio, and then maybe put a hard multiply-const right before it enters the HackRF sink, perhaps with a value of 0.85 or some such.
[01:59:29] <patchvonbraun[m]> That of course won't tell if the HackRF is clipping in other parts of itself.
[02:02:07] <ve7it> yes... I have signal paths all normalized to +-1, but the user has a modulation gain control that can amplify a wave file source and cause overmodulation
[02:03:19] <ve7it> not a critical feature... I do have the modulation graphed in time and freq graphs
[02:06:32] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[02:12:55] <ve7it> https://imgur.com/a/crw7Kvy   safe for nerds
[02:15:31] <DerekKozel[m]> Looking nice!
[02:16:05] <patchvonbraun[m]> ve7it: http://www.ccera.ca/files/fooey.grc   Gives you a rough idea
[02:18:50] * merit uploaded an image: (412KiB) < https://libera.ems.host/_matrix/media/r0/download/synapse.lickmy.app/jlqdPMzlcSplzKetdZlGOUJk/Screenshot%20from%202021-11-28%2014-47-25.png >
[02:18:51] <merit> it feels close
[02:19:46] <ve7it> patchvonbraun[m], thanks... I will see where it gets me.... always more to learn!
[02:20:40] <drmpeg> ve7it Check https://github.com/drmpeg/gr-iqlevels
[02:21:11] <patchvonbraun[m]> Ideally, you want some kind of hysteresis function that can detect when a clipped sample has floated by on the river of samples.  There's no way the UI can possibly be responsive enough at the level of single samples.
[02:21:20] <drmpeg> Might be useful.
[02:22:01] <ve7it> drmpeg, thanks
[02:22:23] <patchvonbraun[m]> drmpeg: Noyce
[02:41:49] * luisherasme[m] uploaded an image: (47KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/53046951789d0a739e8b59a5273855505ecb2d70/image.png >
[02:41:51] *** Quits: bandnyquist (~Rheanna@61.171.21.169) (Remote host closed the connection)
[02:42:23] <luisherasme[m]> Barry Duggan willcode4 
[02:42:30] <willcode4[m]> luisherasme: Cool!
[02:44:17] *** Joins: bandnyquist (~Rheanna@218.78.109.69)
[03:14:33] <Yamakaja[m]> luisherasme: Shouldn't that be NCO? :D
[03:15:13] <luisherasme[m]> Right, thanks!
[03:16:35] * luisherasme[m] posted a file: (386KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/9e8cc7127db09880047eb9fd71f66a8334db3168/Frame%201.pdf >
[03:25:43] <muaddib[m]> I'm trying to recreate a gnuradio python program as a GRC flowgraph. The python file has 2 variables outside of the classes (just below import). 
[03:25:43] <muaddib[m]> I'm using an 'after init' python snippet for the variables, but I also use an 'after start' snippet which can't access the after init. Is there a way in GRC to set variables accessible to all classes? 
[03:30:41] <willcode4[m]> Does `tb.varname` work?
[03:31:51] *** Quits: bandnyquist (~Rheanna@218.78.109.69) (Remote host closed the connection)
[03:33:24] *** Joins: bandnyquist (~Rheanna@218.78.53.13)
[03:35:34] <willcode4[m]> Ah, no, the snippet functions are top level. Need `global`.
[03:35:47] <muaddib[m]> right,  because it's outside of the top block
[03:37:19] <willcode4[m]> It turns out that snippets are explicitly passed `tb` as `self`, so you can access or create stuff in `tb` as `self.`.
[03:39:12] <muaddib[m]> here's the original code... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/c2f72479c80779436041af4fd3453520cacd0d57)
[03:39:12] <patchvonbraun[m]> willcode4: but but.  Data hiding and modularity and OO. /me clutches pearls. Sprinkles amethyst dust about the room.
[03:40:03] <muaddib[m]> and here's my grc generated code:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/cb7d4d91366c75f6f089a117396139cc4d3d65bc)
[03:40:14] <willcode4[m]> Snippets are an invasive species, but ornametal so we like them.
[03:40:32] <muaddib[m]>  * here's the original code (line 24,25,26)... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d74c346eba6aa0a3d52ba921da23a1538b5535a8)
[03:40:34] <willcode4[m]> `tb.app = Bottle()`
[03:41:06] <willcode4[m]> But be organized about the naming or you'll shoot yourself in the class member.
[03:42:00] <willcode4[m]> Actually, `self.app =` at that point.
[03:44:39] <muaddib[m]> thanks, yea i could see it passing snippet(tb), but in the function its def snippet(self)
[04:02:03] <muaddib[m]> willcode4: i'm getting this from the embedded block i created... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/4125255abd337147af6f615cd2fea8e6f7c34bf0)
[04:02:33] <muaddib[m]> connections is one of the variables i define at the top of the flowgraph. my embedded block calls self.connections. shouldn't that work?
[04:04:19] <willcode4[m]> The work functions are not passed the tb.
[04:05:36] <willcode4[m]> There, `self` refers to the gateway (wrapper) that the scheduler uses to call python code.
[04:06:10] <muaddib[m]> oh ok, so in the block params i could set connections=self.connections or tb.connections?
[04:06:33] <willcode4[m]> That might work.
[04:06:44] <willcode4[m]> See what it generates.
[04:09:22] <muaddib[m]> can't generate, the embedded block doesn't like that.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/20f881616830e0783ae7dff0361b7f93dc89042a)
[04:09:56] <muaddib[m]> self and tb don't work ```Can't interpret source code: name 'tb' is not defined```
[04:11:49] <willcode4[m]> Use a GRC variable, initialized to None.
[04:15:04] <muaddib[m]> so define a GRC variable 'connetions' set to None and put that in the variable 'connections' in the embedded block?
[04:15:41] <willcode4[m]> Make it a param of the embedded block, just like if it was samp_rate.
[04:16:08] <muaddib[m]> yea that's what i did
[04:17:13] <muaddib[m]> when i generate that the flowgraph has 
[04:17:13] <muaddib[m]> ```        self.connections = connections = None
[04:17:13] <muaddib[m]> ```
[04:17:25] <muaddib[m]> s///, s/= connections = None//
[04:17:37] <willcode4[m]> Then specify `connections` for that param, not `tb.connections` or `self.connections`.
[04:17:51] <willcode4[m]> Init the init.
[04:18:11] <muaddib[m]> right, and connections in GRC is set to None?
[04:18:56] <willcode4[m]> Refer to it in `work` as `self.connections`. I figured `None` just in case it tried to detect a type. You would be setting it in the init snippet anyway.
[04:20:12] <muaddib[m]> gr::log :ERROR: thread_body_wrapper - ERROR thread[thread-per-block[7]: <block plotter(10)>]: AttributeError: 'gnuradio.gr.gr_python.block_gateway' object has no attribute 'connections'
[04:20:32] <muaddib[m]> i must be missing something
[04:20:35] <willcode4[m]> GRC is hiding the snippet priority field and then complaining that it's not filled in, so I'm having trouble following along at home.
[04:22:00] * muaddib[m] posted a file: (1KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/4437f17420ee446596ea0034c6c623233f78ae79/waterfall_mockup.grc >
[04:29:16] * luisherasme[m] uploaded an image: (29KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/ea278c2d1bed9bd6935b66cbb9f9093c7d2460c8/image.png >
[04:29:22] <luisherasme[m]> Did the same for the AGC block 
[04:29:56] <willcode4[m]> GRC generates these lines:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/9f9b39d8bfe7269e3eb6d0ed9b3037f56ddb418e)
[04:31:29] <willcode4[m]> Other than that, it does work ðŸ˜€
[04:31:41] <muaddib[m]> hah, yea it does.
[04:32:35] <willcode4[m]> I hate to recommend using a global and bypassing GRC variables, block parameters, etc. here ... but ...
[04:33:33] <muaddib[m]> trying to make a simpler web display. This project i'm working from is really awesome, it's fast and not too CPU intensive. It obviously uses gnuradio. But unfortunately, like a lot of stuff, it looks like they started with generated python and 'added some stuff', which really hurts the portability.
[04:35:11] <muaddib[m]> willcode4[m]: so how do i make a global from GRC? The whole effort here is to recreate it in GRC. is it just a variable that's global(var)?
[04:35:18] <muaddib[m]> or a snippet?
[04:35:23] <willcode4[m]> Using GRC generated code exclusively is limiting, but not as much as it used to be. There's nothing wrong with using the generated tb and ignoring the main.
[04:35:49] <willcode4[m]> connections = blah
[04:36:07] <willcode4[m]> global connections
[04:36:08] <willcode4[m]> connections = blah
[04:37:08] <willcode4[m]> Where you use it in the block, just `global connections` then refer to it as `connections`. This is all really ugly, of course.
[04:38:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Read error: Connection reset by peer)
[04:38:17] <muaddib[m]> yea, i get that. the plan was:
[04:38:17] <muaddib[m]> -get it to work in GRC...period
[04:38:17] <muaddib[m]> -put the display server in to a block (or blocks)
[04:38:17] <muaddib[m]> -make a gr-webdisplay module to share with the community
[04:38:52] <muaddib[m]>  * yea, i get that. the plan was:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/cf83281c3bd8deb0c6d79cfe5c8ad302c8f5210c)
[04:39:26] <muaddib[m]> can't do that if it's just a generated python script. Not really GNURadio-ish. Then it's just a program that happens to use gnuradio
[04:39:40] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:40:08] <willcode4[m]> That doesn't work either. The block is a separate file.
[04:41:47] <willcode4[m]> A lot of OOTs come with applications. But you want to make it easy for the user to add the data source as a block.
[04:43:33] <willcode4[m]> I guess step 1 on your plan is done. On to step 2.
[04:44:12] <willcode4[m]> - get it to <del>work</del> break in GRC ...
[04:53:30] *** Quits: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne) (Ping timeout: 260 seconds)
[04:53:52] *** Joins: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne)
[04:54:17] * luisherasme[m] posted a file: (193KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/afcc7a5320d7ba77a46d9d81bddbbdcbe83f0db7/AGC.pdf >
[04:54:25] <luisherasme[m]> luisherasme[m]: Barry Duggan: you can add this too
[04:59:36] *** Joins: naicam| (~naicam|ne@wireguard/tunneler/naicamne)
[04:59:38] *** Quits: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne) (Ping timeout: 268 seconds)
[04:59:46] <muaddib[m]> <willcode4[m]> "- get it to <del>work</del..." <- i thought that was step 1
[05:01:29] <willcode4[m]> I don't think it's going to work with epy and snippets unless we're missing something. Might need to come up with a different approach for step 2. I can't think of it right now, but I'll put it on the insomnia list.
[05:11:09] <muaddib[m]> Thanks for the help. I'm thinking I could also move more of the snippet code into the epy block, i think that's the only place it would be needed. I'll try some stuff out. 
[05:11:51] *** Quits: bandnyquist (~Rheanna@218.78.53.13) (Remote host closed the connection)
[05:14:12] *** Joins: bandnyquist (~Rheanna@61.171.21.169)
[05:20:02] *** Quits: fredy330 (~fredy@athedsl-84323.home.otenet.gr) (Ping timeout: 240 seconds)
[05:30:11] <willcode4[m]> If you can init Bottle in the epy init, that might work. But you really only want one web server running so it want to be shared by all the possible data source blocks.
[05:31:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:36:16] <muaddib[m]> i don't think that's true
[05:36:20] <muaddib[m]> the sharing part
[05:36:56] <muaddib[m]> the display is it's a data sink, it just takes in FFT vectors and broadcasts them to the webserver
[05:37:44] <muaddib[m]> the data source and log pwr fft just supply the data/vectors
[05:40:08] <matt_mills[m]> if you're trying to make that web waterfall show more stuff, I'd start with building the existing code into a sink block that can take as many inputs as you want and drop them in different websockets
[05:40:45] <matt_mills[m]> I mean, a websocket sink is probably not a terrible block to have anyway
[05:42:28] <matt_mills[m]> (but I'm too lazy to read all the scrollbakc)
[05:42:47] <muaddib[m]> haha. yea, that's not what i'm doing. i'm just trying to create the websocket sink
[05:43:04] <matt_mills[m]> gotcha
[05:43:15] <muaddib[m]> it's a great find on your part. 
[05:43:29] <muaddib[m]> been messing with it a bunch and it's pretty full featured. 
[05:43:45] <muaddib[m]> it's just HORRIBLY documented
[05:44:00] <muaddib[m]> i used brute force to figure out the keypresses 
[05:44:14] <muaddib[m]> pressing 'm' puts a spectral mask
[05:44:33] <muaddib[m]> w/s moves the fft/waterfall bar up and down
[05:44:41] <muaddib[m]> it's similar to fosphor's controls
[05:44:49] <matt_mills[m]> https://github.com/jledet/waterfall/blob/master/spectrum.js#L356
[05:45:29] <muaddib[m]> pressing random keys is way more fun than reading dude
[05:45:38] <matt_mills[m]> lol
[05:45:45] <matt_mills[m]> just making sure you found them all :P
[05:46:08] <muaddib[m]> thanks! i was looking for the averaging!
[05:47:23] <muaddib[m]> this is a bit over my head, but i'm really motivated to do it. Notou released an updated GR3.9 version of bokehgui, which i got to work on my pybombs build, but bokeh itself is pretty slow. The jledet was really efficient 
[05:48:35] <muaddib[m]> I'm just frustrated with the process of moving over that project to GRC, seems like i'm one variable short. There's got to be a better way than the one i'm doing. Do you have any suggestions for how to approach the problem?
[05:51:40] <matt_mills[m]> is your current code visible somewhere?
[05:51:56] <muaddib[m]> scroll up, lol
[05:51:59] <muaddib[m]> hang on
[05:53:09] * muaddib[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/1d7022200ad331ed6e4ccf8806e999fdeaaaa76d
[05:54:06] <muaddib[m]>  * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/0f6a3bd7f914216a8dd6880ae85b80f46e81775a)
[05:56:32] <muaddib[m]> then the GRC generated python using snippets to get the websocket and server stood up is here:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/fd926429f7f7c771f8da8b5224161b8db11e9d29)
[05:58:51] <matt_mills[m]> why have all the websocket pieces built into the GRC rather than the sink block?
[05:59:54] <muaddib[m]> that's where i was going next
[06:00:03] <muaddib[m]> exactly my thought
[06:00:17] <muaddib[m]> initially, i wanted the generated python to look as close to the server.py as possible
[06:00:26] *** Joins: fredy330 (~fredy@athedsl-84323.home.otenet.gr)
[06:00:36] <matt_mills[m]> I'd also say you'd want the port and path configurable, especially if the sink block can have multiple inputs
[06:01:27] <muaddib[m]> yea, i'm exposing all the parameters. those were two i hadn't thought of though
[06:01:49] <muaddib[m]> i'm not so much concerned about the multiple ports just yet
[06:01:53] *** Quits: bandnyquist (~Rheanna@61.171.21.169) (Remote host closed the connection)
[06:01:56] <muaddib[m]> just want to get one working
[06:02:07] <matt_mills[m]> is that not working as is?
[06:03:09] <muaddib[m]> the original server.py works great
[06:03:55] <muaddib[m]> but no, doing it with python embedded block, the sink can't find one of the variables.
[06:03:59] <muaddib[m]> 'connections'
[06:04:14] *** Joins: bandnyquist (~Rheanna@61.171.21.169)
[06:05:18] <matt_mills[m]> ah yeah different self
[06:05:42] <muaddib[m]> right
[06:05:55] <muaddib[m]> but i think it could be solved by including it in the block
[06:05:59] <matt_mills[m]> you should be able to tweak it to pass it a reference to tb tho
[06:06:12] <muaddib[m]> couldn't figure out how
[06:06:17] <muaddib[m]> worked that through with wilcode
[06:06:25] <muaddib[m]> s/wilcode/willcode4 /
[06:06:45] <muaddib[m]> i think putting the server code in the sink block is the right move anyway
[06:07:11] <muaddib[m]> as long as the server gets initialized when the flowgraph funs
[06:07:13] <muaddib[m]> s/funs/runs/
[06:07:34] <matt_mills[m]> I mean I usually do it on the python side, by adding arguments to the initializer, but if you add a `self.tb = None` into `def __init__` on the embedded block and then add a function to set self.tb = the variable you pass and then call that function after you create tb but before you call start you should have access to it I think
[06:08:23] <matt_mills[m]> ie, ```def set_tb(the_tb):
[06:08:23] <matt_mills[m]>     self.tb = the_tb
[06:08:23] <matt_mills[m]> ```
[06:08:27] <matt_mills[m]> s///
[06:08:35] <matt_mills[m]>  * ie,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/63ebcea86a0d8f57284240525e9c958766c37515)
[06:08:41] <matt_mills[m]>  * ie,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/613a53e7908863d91790a1636317c4de175c3265)
[06:08:56] <matt_mills[m]> then change the self.connections to self.tb.connections
[06:09:22] <matt_mills[m]> unless the embedded python block has some special sandboxing or something
[06:09:52] <muaddib[m]> it's a separate file
[06:10:07] <matt_mills[m]> it's imported
[06:12:14] <muaddib[m]> in the embedded block, i import the_tb? 
[06:12:35] <matt_mills[m]> in the embedded block you create a self.variable to contain a reference to the TB
[06:12:39] <muaddib[m]> in this case my top_block is fft_receiver
[06:12:54] <muaddib[m]> so i do
[06:12:54] <muaddib[m]> def set_tb(fft_receiver)
[06:13:08] <matt_mills[m]> then in the tb you call a function in the embedded block to pass it a reference to tb from main
[06:13:37] <muaddib[m]> oh ok
[06:13:41] <matt_mills[m]> fft_receiver is your class, you don't want to pass that
[06:13:46] <muaddib[m]> so that would be a snippet then
[06:14:04] <matt_mills[m]> ` snippets_main_after_start` would be a fine place
[06:14:19] <muaddib[m]> fft_broadcast.set_tb(self) ?
[06:14:58] <matt_mills[m]> not self
[06:15:16] <matt_mills[m]> `tb = top_block_cls(frequency=`options.frequency)
[06:15:20] <matt_mills[m]> after that somewhere
[06:15:26] <muaddib[m]> oh tb
[06:15:27] <matt_mills[m]> it needs a reference to that instance of tb
[06:15:40] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:16:49] <matt_mills[m]> since your connections variable and all your other code is inside that top_block_cls
[06:20:16] <muaddib[m]> tying now
[06:28:20] *** Quits: comlord (~Thunderbi@121.227.116.10) (Quit: comlord)
[06:28:38] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:35:18] <muaddib[m]> still says ```AttributeError: 'NoneType' object has no attribute 'connections'```
[06:35:46] * muaddib[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/cbdea5a5c12ddc763e515fda8c593bfc98d03e6b
[06:36:28] <matt_mills[m]> and where are you calling set_tb from
[06:38:27] <muaddib[m]> python snippet Main - After Start
[06:38:27] <muaddib[m]> ```self.fft_broadcast.set_tb(self.tb)```
[06:39:01] <matt_mills[m]> if you want to use self.tb you'd need to be setting it on that side
[06:39:20] <matt_mills[m]> the variable is tb in main
[06:39:32] <matt_mills[m]> of you want it in the snippet func you need to pass tb into that function
[06:39:50] * muaddib[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/845965b34e59299f40077d97338f4758704665f7
[06:40:18] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 256 seconds)
[06:41:17] <matt_mills[m]> I mean, that self doesn't mean anything there since that function isn't in a class
[06:41:31] <matt_mills[m]> but if you change self.tb to self it will probably work
[06:41:54] <matt_mills[m]> (in other words, that's not really "self" you're passing in, it's just a variable named self that has whatever you passed in)
[06:42:19] <matt_mills[m]> `self.fft_broadcast.set_tb(self.tb)` replace with `self.fft_broadcast.set_tb(self)`
[06:43:18] *** Joins: comlord (~Thunderbi@121.227.116.10)
[06:43:18] <muaddib[m]> ugh, still doesn't work
[06:43:32] <matt_mills[m]> same None?
[06:43:50] <muaddib[m]> gr::log :ERROR: thread_body_wrapper - ERROR thread[thread-per-block[8]: <block plotter(9)>]: AttributeError: 'NoneType' object has no attribute 'connections'
[06:43:51] <muaddib[m]> At:
[06:43:51] <muaddib[m]>   /home/muaddib/webwaterfall/grwaterfall_mockup/fft_receiver_fft_broadcast.py(29): work
[06:43:51] <muaddib[m]>   /home/muaddib/prefix/newgr39/lib/python3.8/site-packages/gnuradio/gr/gateway.py(199): handle_general_work
[06:44:20] <muaddib[m]> set_tb isn't getting called
[06:44:42] <muaddib[m]> i put a print statement and it's not coming up
[06:44:52] <matt_mills[m]> is this a start vs run problem
[06:44:55] <matt_mills[m]> I never get those two right
[06:45:11] <muaddib[m]> idk
[06:45:43] <matt_mills[m]> can you post all your code into a github gist or something, pretty hard to read in here
[06:46:45] <muaddib[m]> yea, hang on
[06:47:21] <muaddib[m]> can i send you the flowgraph?
[06:47:30] <matt_mills[m]> uh yeah thats fine too
[06:48:31] * muaddib[m] posted a file: (1KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/4437f17420ee446596ea0034c6c623233f78ae79/waterfall_mockup.grc >
[06:48:58] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:49:32] <matt_mills[m]> doesn't include any of the python, which is the only part that matters
[06:52:55] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 265 seconds)
[06:52:55] *** Quits: bandnyquist (~Rheanna@61.171.21.169) (Remote host closed the connection)
[06:53:34] *** Joins: bandnyquist (~Rheanna@218.78.99.237)
[06:54:37] <muaddib[m]> hang on, trying to push to github
[06:55:17] *** Joins: Vonter (~Vonter@user/vonter)
[06:57:04] <muaddib[m]> https://github.com/muaddib1984/grwaterfall_mockup
[07:03:27] <muaddib[m]> my error changed to ```TypeError: set_tb() takes 1 positional argument but 2 were given```
[07:03:42] <muaddib[m]> so it's calling the function in the embedded block
[07:04:30] <matt_mills[m]> pass self twice
[07:04:44] <matt_mills[m]> it's because of the classed/classless shenanigans
[07:05:05] <matt_mills[m]> err
[07:05:10] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:05:42] <matt_mills[m]> `   def set_tb(ext_tb):` needs to be `   def set_tb(self, ext_tb):
[07:05:44] <matt_mills[m]> s/:/:`/
[07:05:49] <matt_mills[m]> since it IS a class member
[07:06:04] <muaddib[m]> ahhhh, right 
[07:07:06] <muaddib[m]> ok, no errors. no web display either, but that sort-of works i guess
[07:07:29] <matt_mills[m]> does the server show as listening in netstat?
[07:07:45] <matt_mills[m]> `netstat -nlp | grep 8080` or whatever port you have it on
[07:07:51] <muaddib[m]> yea
[07:08:16] <muaddib[m]> it's running
[07:08:50] <muaddib[m]>  * ```tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN      13507/python3 ```
[07:09:39] <muaddib[m]> ```File does not exist.```
[07:09:42] <muaddib[m]> in the browser
[07:09:54] <matt_mills[m]> oh do you have all the requisite html, js and css files in the same dir?
[07:09:54] <muaddib[m]> 404'ed
[07:10:14] <muaddib[m]> crap, no. 
[07:10:19] <muaddib[m]> need to copy those over
[07:11:39] <muaddib[m]> bro, you're legend!
[07:12:32] <matt_mills[m]> I dunno about that, I can beat object oriented code into functional submission though
[07:13:05] <matt_mills[m]> also doesn't hurt that my code does that all over the place, so I knew it was possible ;)
[07:13:27] <muaddib[m]> haha, nice
[07:13:31] <muaddib[m]> thank you!
[07:14:50] <matt_mills[m]> no prob
[07:15:08] <matt_mills[m]> I was actually working on my own code too, but it's mostly just tweak something, recompile, flash firmware, wait and see
[07:15:16] <matt_mills[m]> so plenty of time to do IRC in between
[07:15:24] <muaddib[m]> so do you think the ideal case here would be to include the server code in the block itself?
[07:15:44] <matt_mills[m]> I do, but mostly because someone may want to have multiple blocks that each run their own server on different ports
[07:15:52] <muaddib[m]> agreed
[07:15:57] <matt_mills[m]> AND because it'd be much easier to distribute that way
[07:16:06] <muaddib[m]> yea, totally
[07:16:29] <muaddib[m]> easy distribution to the community is the goal here
[07:17:43] <muaddib[m]> the original server.py has 3 functions, 2 classes and a main function 
[07:19:24] * muaddib[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/23855c63d5329f03a9a8373bcb6c26f968b37745
[07:24:32] <muaddib[m]> could all the server code go in init?
[07:24:53] <matt_mills[m]> a bunch of it could
[07:24:58] <matt_mills[m]> I'm not familiar with Bottle though
[07:25:41] <muaddib[m]> so, the flowgraph doesn't continue past the server = server(localhost,8000,....)
[07:25:57] <muaddib[m]> i think it needs to be put in a thread and started like the XMLRPC server
[07:26:09] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 256 seconds)
[07:26:39] <matt_mills[m]> hrm it should at least get to server.server_forever() I would think
[07:26:58] <muaddib[m]> it does
[07:27:28] <muaddib[m]> sorry, youre right
[07:27:31] <matt_mills[m]> so that is a blocking function
[07:27:37] <muaddib[m]> yea
[07:27:39] <matt_mills[m]> that handles the responses
[07:27:42] <matt_mills[m]> err requests
[07:27:56] <muaddib[m]> can a blocking call be put in a thread?
[07:28:03] <matt_mills[m]> since the flow graph is running at that point it shouldn't really matter unless you want to do other stuff
[07:28:18] <matt_mills[m]> well it can, but all the gnuradio stuff is in a different thread
[07:28:28] <matt_mills[m]> so you don't need to
[07:28:57] <muaddib[m]> the only different stuff would be, use an XMLRPC server handle changes in the variables
[07:29:28] <matt_mills[m]> well yeah then you'd need a separate thread
[07:29:45] <matt_mills[m]> python mostly protects you from threading issues but you can cause some funkiness and kind of need to be careful
[07:30:35] <muaddib[m]> if the xmlrpc server is in a separate thread does the server blocking stop that thread from being accessed?
[07:30:59] *** Quits: greenriot (~greenriot@user/gr33nr10t) (Ping timeout: 260 seconds)
[07:31:04] <matt_mills[m]> no
[07:31:13] <matt_mills[m]> but they're also not "real" threads
[07:31:24] <matt_mills[m]> but that's probably not important for what you're doing
[07:32:26] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[07:34:31] <muaddib[m]> XMLRPC control works!
[07:35:03] <muaddib[m]> i can have an XMLRPC server and the web server running at the same time
[07:39:41] <muaddib[m]> btw, flashing firmware is fun
[07:41:52] *** Quits: bandnyquist (~Rheanna@218.78.99.237) (Remote host closed the connection)
[07:43:14] *** Joins: bandnyquist (~Rheanna@218.78.94.61)
[07:43:28] <matt_mills[m]> flashing flashing firmware https://www.dropbox.com/s/dix55fpgmw8c4dc/PXL_20211129_041138774.TS.mp4?dl=0
[07:45:21] <muaddib[m]> that's really cool
[07:45:40] <muaddib[m]> is the LED board generating the light, or is it picking up the illumination ?
[07:45:47] <muaddib[m]> * the illumination and repeating it back?
[07:46:01] <matt_mills[m]> it's generating it
[07:46:09] <muaddib[m]> that's awesome
[07:46:18] <matt_mills[m]> there is an MCU board behind it
[07:46:46] <muaddib[m]> is the pattern random?
[07:47:15] <matt_mills[m]> the color is random, the pattern is just xya dimming value
[07:47:24] <muaddib[m]> nice
[07:47:26] <matt_mills[m]> s/the color is random, the pattern is just xya dimming value/the color is random, the pattern is just `x*y*a dimming value`/
[07:47:45] <matt_mills[m]> but now that it's working it's fairly easy to add patterns
[07:47:55] <matt_mills[m]> I need to get a font working next
[07:52:41] <muaddib[m]> hah, cool. i bet with that many LED's you could definitely do some cool fonts
[07:57:09] <muaddib[m]> so, putting the WSGI server into a thread doesn't work. looks like it will be a blocking call for now. i'm concerned about putting that into a block though cause if it inits the block and server before tb.start, that seems like it wont work right?
[08:07:05] *** Joins: Malvolio (~Malvolio@user/malvolio)
[08:13:26] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:20:29] <matt_mills[m]> yeah you'd want it after tb.start
[08:21:37] <matt_mills[m]> there also may be a non blocking call, but you'd probably need to go into a loop and repeatedly call it, as tb.wait is also blocking
[08:22:13] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[08:23:19] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[08:24:16] <muaddib[m]> ok, i'm gonna keep looking into how to do it.
[08:31:57] *** Quits: bandnyquist (~Rheanna@218.78.94.61) (Remote host closed the connection)
[08:33:07] *** Joins: bandnyquist (~Rheanna@218.78.67.149)
[08:41:15] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[09:32:02] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[09:32:02] *** Quits: vishwin (~brioux@pool-108-36-200-79.phlapa.fios.verizon.net) (*.net *.split)
[09:32:02] *** Quits: TD-Linux (~Thomas@user/td-linux) (*.net *.split)
[09:32:02] *** Quits: noc0lour (~noc0lour@tarazed.atrz.de) (*.net *.split)
[09:32:02] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[09:32:03] *** Quits: jacekowski (jacekowski@jacekowski.org) (*.net *.split)
[09:32:16] *** Joins: Alexer- (~alexer@85.17.122.98)
[09:32:19] *** Joins: noc0lour (~noc0lour@tarazed.atrz.de)
[09:32:20] *** Joins: jacekowski (jacekowski@jacekowski.org)
[09:32:30] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:33:34] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[09:33:42] *** Joins: TD-Linux (~Thomas@user/td-linux)
[09:36:24] *** Quits: joj (~joj@jojeee.xyz) (*.net *.split)
[09:36:24] *** Quits: meph (~mepholic@flux.hxx.in) (*.net *.split)
[09:36:24] *** Quits: itstexmex[m] (~itstexmex@2001:470:69fc:105::1:3891) (*.net *.split)
[09:36:24] *** Quits: Crofton[m] (~croftongn@2001:470:69fc:105::9a7) (*.net *.split)
[09:36:24] *** Quits: miek[m]1 (~miekgnura@2001:470:69fc:105::fe35) (*.net *.split)
[09:36:24] *** Quits: citizenrich[m] (~citizenri@2001:470:69fc:105::e76f) (*.net *.split)
[09:36:24] *** Quits: tikhonov[m] (~tikhonovg@2001:470:69fc:105::1:224a) (*.net *.split)
[09:36:24] *** Quits: ChrisKuethe[m] (~ckuethegn@2001:470:69fc:105::e770) (*.net *.split)
[09:36:24] *** Quits: devector[m] (~devectorg@2001:470:69fc:105::1:3514) (*.net *.split)
[09:36:24] *** Quits: locheltree[m] (~locheltre@2001:470:69fc:105::1:33e) (*.net *.split)
[09:36:24] *** Quits: JDemel[m] (~johannesd@2001:470:69fc:105::e15d) (*.net *.split)
[09:36:24] *** Quits: fredy[m] (~fredymatr@2001:470:69fc:105::2d41) (*.net *.split)
[09:36:24] *** Quits: Avamander[m] (~avamander@2001:470:69fc:105::1240) (*.net *.split)
[09:36:24] *** Quits: flash[m] (~flashgnur@2001:470:69fc:105::e302) (*.net *.split)
[09:36:25] *** Quits: atluxity (~atluxity@178.63.28.77) (*.net *.split)
[09:36:25] *** Quits: funkylab (~Funkylab@hostalia.de) (*.net *.split)
[09:36:25] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[09:36:25] *** Quits: SanShi (rene@vm-140-107.netclusive.cloud) (*.net *.split)
[09:36:35] *** Joins: Isthmusi (~Isthmus@user/isveni)
[09:36:40] *** Joins: joj (~joj@jojeee.xyz)
[09:36:56] *** Joins: atluxity (~atluxity@178.63.28.77)
[09:37:01] *** Joins: funkylab (~Funkylab@hostalia.de)
[09:37:03] *** Joins: meph (~mepholic@flux.hxx.in)
[09:38:35] *** Joins: SanShi (rene@vm-140-107.netclusive.cloud)
[09:38:44] *** Joins: itstexmex[m] (~itstexmex@2001:470:69fc:105::1:3891)
[09:38:51] *** Joins: Crofton[m] (~croftongn@2001:470:69fc:105::9a7)
[09:39:46] *** Joins: fredy[m] (~fredymatr@2001:470:69fc:105::2d41)
[09:40:30] *** Joins: citizenrich[m] (~citizenri@2001:470:69fc:105::e76f)
[09:40:47] *** Joins: JDemel[m] (~johannesd@2001:470:69fc:105::e15d)
[09:42:06] *** Joins: Avamander[m] (~avamander@2001:470:69fc:105::1240)
[09:42:09] *** Joins: devector[m] (~devectorg@2001:470:69fc:105::1:3514)
[09:42:10] *** Joins: miek[m]1 (~miekgnura@2001:470:69fc:105::fe35)
[09:42:11] *** Joins: tikhonov[m] (~tikhonovg@2001:470:69fc:105::1:224a)
[09:43:00] *** Joins: ChrisKuethe[m] (~ckuethegn@2001:470:69fc:105::e770)
[09:43:01] *** Joins: locheltree[m] (~locheltre@2001:470:69fc:105::1:33e)
[09:44:26] *** Joins: flash[m] (~flashgnur@2001:470:69fc:105::e302)
[10:12:15] *** Quits: bandnyquist (~Rheanna@218.78.67.149) (Remote host closed the connection)
[10:14:20] *** Joins: bandnyquist (~Rheanna@218.78.79.129)
[10:56:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:01:56] *** Quits: bandnyquist (~Rheanna@218.78.79.129) (Remote host closed the connection)
[11:01:57] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[11:02:17] *** Joins: spithash (~spithash@user/spithash)
[11:03:20] *** Joins: bandnyquist (~Rheanna@218.78.67.149)
[11:49:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:06:51] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[12:08:54] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:2c0e:5916:cf25:b2d2)
[12:19:18] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[12:29:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:30:06] *** Quits: joejoejoe[m] (~joemvicma@2001:470:69fc:105::1:18d8) (Quit: You have been kicked for being idle)
[12:41:52] *** Quits: bandnyquist (~Rheanna@218.78.67.149) (Remote host closed the connection)
[12:43:08] *** Joins: bandnyquist (~Rheanna@61.171.21.169)
[13:31:59] *** Quits: bandnyquist (~Rheanna@61.171.21.169) (Remote host closed the connection)
[13:34:28] *** Joins: bandnyquist (~Rheanna@218.78.109.69)
[14:14:58] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[14:21:55] *** Quits: bandnyquist (~Rheanna@218.78.109.69) (Remote host closed the connection)
[14:24:30] *** Joins: bandnyquist (~Rheanna@218.78.79.129)
[14:25:24] *** Joins: joejoejoe[m] (~joemvicma@2001:470:69fc:105::1:18d8)
[14:26:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:29:09] <joejoejoe[m]> Anyone here working with Ettus E310? Any idea what kind of plug/connector is being used for the internal GPIO port?
[14:29:21] *** Joins: Colt (~Colt@user/colt)
[14:29:25] <joejoejoe[m]> I couldn't seem to find it from google
[14:30:04] * joejoejoe[m] uploaded an image: (99KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/GYESrlvJoxLCFFKqNllvtUSY/Screenshot%20from%202021-11-22%2014-19-08.png >
[14:30:11] <joejoejoe[m]> This is how it looks
[14:42:37] <DerekKozel[m]> I think it's described on the Ettus KB page for the E310
[14:46:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:49:38] <joejoejoe[m]> Thanks, I think I just found an idea from the schematic... this looks might be it, DF20F-10DP-1V(56)
[14:49:41] <joejoejoe[m]> https://www.digikey.com/en/products/detail/hirose-electric-co-ltd/DF20F-10DP-1V-56/951498
[15:07:41] <BarryDuggan[m]> ve7it: as an alternate to the LED for level indication, you could use a https://wiki.gnuradio.org/index.php/QT_GUI_Level_Gauge
[15:07:41] <BarryDuggan[m]> it would act more like a VU meter. 
[15:07:41] <BarryDuggan[m]> BTW, that same group of QT GUIs are available in 3.8 by loading https://github.com/ghostop14/gr-guiextra (be sure to get the 3.8 branch)
[15:19:04] *** Joins: schwach4 (~schwach@154.6.28.164)
[15:20:21] *** Quits: schwach (~schwach@154.6.28.26) (Ping timeout: 245 seconds)
[15:20:21] *** schwach4 is now known as schwach
[16:01:09] *** Joins: z[m]1234 (~zgnuradio@2001:470:69fc:105::1:40e9)
[16:04:54] <jemius> If I have a WAV file source, data gets pulled out of it as fast as possible, aye? Therefore, If I want to build an AM sender / modulator, I have to throttle somehow, so that my audo file doesn't occupy the entire available bandwidth
[16:05:39] <funkylab[m]> no, you don't throttle
[16:06:00] <funkylab[m]> if you have transmitter, there's some DAC in there, with a defined rate
[16:06:10] <funkylab[m]> and that defines/is your sample rate
[16:06:18] <jemius> funkylab[m], I currently only want to simulate, without sending to a SDR
[16:06:31] <funkylab[m]> then you don't have to throttle at all?
[16:07:04] <jemius> Ultimately, I want to demodulate again and then feed the demodulated audio into an audio sink. The sink ultimately will be the throttle
[16:07:38] <funkylab[m]> exactly, in that case your audio sink is the DAC with a defined rate
[16:08:16] <jemius> Imagine the following: My audio is 16kHz wide. I want to move samp_rate up to i.e. 128k, so that there is enough space to shift the audio up to a carrier at, say 30kHz. If I just do that, then it seems samples get pulled out of the wav-source too quickly, causing it's spectrum to by far exceed 16kHz
[16:09:24] <willcode4[m]> Need an interpolator + freq translation.
[16:10:03] <jemius> willcode4[m], Freq Translation?
[16:10:32] <willcode4[m]> Frequency Xlating FIR Filter block.
[16:10:58] <jemius> Why would I need that? To get rid of Images?
[16:12:05] <willcode4[m]> This is what you described above. "move samp_rate up to i.e. 128k ... shift the audio up to a carrier at, say 30kHz"
[16:12:35] <jemius> I can just multiply with the carrier, can I not
[16:14:31] <willcode4[m]> As long as your sample rates match.
[16:15:19] <willcode4[m]> The freq translating filter essentially applies a filter then multiplies by a carrier.
[16:16:06] <willcode4[m]> Multiple ways you can do this, especially at the low rates you are talking about.
[16:29:56] <jemius> ok, I think I get the problem. Roughly.
[16:32:34] <jemius> Understanding the sample rate is probably the most challenging thing with GR
[16:51:09] <willcode4[m]> Rate changes and filters are one of the fun parts of DSP. Nothing specific to GR.
[16:51:59] <jemius> Real men just never change the rate. What do I have a 4GHz CPU for, if not for full speed 8-) /s
[16:51:59] *** Quits: bandnyquist (~Rheanna@218.78.79.129) (Remote host closed the connection)
[16:53:22] *** Joins: bandnyquist (~Rheanna@101.91.232.166)
[16:54:30] *** Joins: mepholic (~mepholic@flux.hxx.in)
[16:56:09] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (Read error: Connection reset by peer)
[16:56:19] *** Quits: meph (~mepholic@flux.hxx.in) (Read error: Connection reset by peer)
[16:57:17] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[17:12:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:42:07] *** Quits: bandnyquist (~Rheanna@101.91.232.166) (Remote host closed the connection)
[17:44:00] *** Joins: bandnyquist (~Rheanna@218.78.104.50)
[17:44:32] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:4042:a7af:5016:5937) (Read error: Connection reset by peer)
[17:52:40] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:56:32] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[17:57:32] <jemius> Any hint what driver / module I need to run a funcube-dongle with GR?
[17:59:43] <funkylab[m]> https://github.com/dl1ksv/gr-fcdproplus
[18:02:40] <jemius> funkylab[m], do I need external modules for all SDRs in GR?
[18:07:50] <DerekKozel[m]> USRPs and now IIO devices like the Pluto SDR are built in, everything else is done as an external module. 
[18:08:35] <DerekKozel[m]> Some of those modules are done as SOAPY drivers, which GNU Radio now includes support for, but you still need the driver for the exact radio
[18:09:33] <funkylab[m]> yep, FCDPro had very little benefit from being included upstream, even before we had soapy, so we dropped it from the tree
[18:10:23] <funkylab[m]> as Derek said, most devices these days can be talked to using Soapy, or they are UHD devices (mostly, Ettus/NI USRPs), or they are IIO devices (Pluto and fmcomms modules from ADI)
[18:10:37] <funkylab[m]> and all these things can be directly used with any OOTs
[18:12:14] <funkylab[m]> You can also use funcube dongles through soapy: https://github.com/pothosware/SoapyFCDPP
[18:21:23] <mait[m]> There's a new gr-funcube fork using pybind11.
[18:28:48] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[18:30:21] <mait[m]> https://github.com/dl1ksv/gr-funcube.git -- maybe he'll come back and see this.
[18:32:14] <patchvonbraun[m]> My general approach is that apps should be largely hardware agnostic. So gr-osmosdr or SoapySDR.
[18:59:54] *** Joins: mk[m]12 (~mkgnuradi@2001:470:69fc:105::1:4106)
[19:03:12] *** Quits: mallkrampus (~mallkramp@172.93.207.234) (Ping timeout: 256 seconds)
[19:16:30] *** Joins: mallkrampus (~mallkramp@172.93.207.236)
[19:19:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:23:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:24:23] <BarryDuggan[m]> jemius: look at https://wiki.gnuradio.org/index.php/Simulation_example:_AM_transmitter_and_receiver to simulate a carrier
[19:24:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:25:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:27:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:27:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:29:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:29:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:30:08] *** Quits: carlesfernandez[ (~carlesfer@2001:470:69fc:105::e75e) (Quit: You have been kicked for being idle)
[19:30:21] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 256 seconds)
[19:31:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:31:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:33:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:33:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:35:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:37:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:37:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:39:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:39:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:41:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:41:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:43:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:43:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:45:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:45:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:47:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:49:03] *** Quits: Acinonyx (~acinonyx@user/acinonyx) (Ping timeout: 256 seconds)
[19:49:12] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[19:49:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:49:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:51:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:51:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:53:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:53:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[19:55:10] <joa[m]> Hello,
[19:55:10] <joa[m]> Has someone used/installed gr-eventstream in GNURadio 3.8?
[19:55:10] <joa[m]> https://github.com/osh/gr-eventstream
[19:55:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:55:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:56:05] <willcode4[m]> I don't think it has been ported. A subset of it would be a good addition to modern versions.
[19:57:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:57:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:59:18] *** Joins: Malvolio (~Malvolio@user/malvolio)
[19:59:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:00:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:01:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:01:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:03:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:04:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:05:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:05:44] <courtarro[m]> I have a very basic failure attempting to transmit with a UHD Sink using a B200. I'm sending a file via File Source block, sent to the UHD Sink and the fosphor sink, and fosphor is able to show the contents as it "plays". However, the UHD only transmits a tiny blip when it first starts, then spits out a U (underrun) and transmits nothing else.
[20:06:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:06:31] <patchvonbraun[m]> What sample rate?
[20:06:51] <courtarro[m]> 10Msps. But lower rates don't really do any better. 
[20:07:23] <muaddib[m]> Do you have repeat in the file source set to â€˜yesâ€™
[20:07:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:07:39] <courtarro[m]> Yes.
[20:07:43] <patchvonbraun[m]> How many seconds worth of samples are in your file?
[20:08:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:08:25] <patchvonbraun[m]> Do you perhaps have a throttle block in your flow-graph?
[20:08:47] <courtarro[m]> About 10 seconds. But I was originally trying to use the UHD Source as the source and just doing a direct passthrough. That was also failing, thus my simpler experiment
[20:09:16] <courtarro[m]> There are only three blocks. No throttle. File Source -> UHD Sink and fosphor. (Tried with fosphor disabled also) 
[20:09:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:09:50] <patchvonbraun[m]> Is it operating over USB3 or USB2?
[20:10:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:10:22] <courtarro[m]> USB3. I see a tiny blip of transmit when I first hit play, then another single tiny blip, then silence
[20:10:37] <courtarro[m]> There isn't a tag I need to send is there?
[20:11:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:11:54] *** Quits: bandnyquist (~Rheanna@218.78.104.50) (Remote host closed the connection)
[20:11:55] <patchvonbraun[m]> What do you mean by "when I hit play"?
[20:12:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:12:11] <patchvonbraun[m]> You mean when you start the flow-graph in GRC?
[20:12:13] <courtarro[m]> Running the graph in GRC
[20:12:24] <courtarro[m]> This is GR 3.8.1.0 from Ubuntu
[20:12:56] <patchvonbraun[m]> What happens if you substitute a signal source for the file-source?  
[20:13:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:13:47] *** Joins: bandnyquist (~Rheanna@61.171.69.141)
[20:14:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:14:13] <Zero_Chaos> is this a known gr bug that 3.8.x breaks on newer codec2? https://bugs.gentoo.org/816453
[20:14:51] <courtarro[m]> Ah, that works
[20:15:11] <courtarro[m]> The signal source works. Hmm
[20:15:28] <patchvonbraun[m]> You file, is it actually complex-float32?  What size is it (in bytes)
[20:15:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[20:15:50] <courtarro[m]> I used a File Sink to create it. Output from UHD Source straight to the file.
[20:16:02] <patchvonbraun[m]> It should be 80Mbytes
[20:16:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:16:08] <patchvonbraun[m]> IF it's 10 seconds worth
[20:17:15] <courtarro[m]> Uniform noise source also works.
[20:18:29] <patchvonbraun[m]> Yeah, so it takes time to open a file, while the kernel is doing that the UHD sink will be starving for samples.  
[20:20:18] <courtarro[m]> Okay, I think I see what's happening. When we recorded the OTA signal it was just very weak and needed to be amplified in software before sending to the TX
[20:20:27] <courtarro[m]> So it wasn't actually a TX issue - it was just so quiet that it didn't show up
[20:21:24] <patchvonbraun[m]> Yeah, if you RX samples and then directly re-transmit, they won't be at the correct magnitude for TX, usually.  Remember the RX samples are proportional to the antenna voltage, which even for "loud" signals is still pretty small.
[20:22:30] <patchvonbraun[m]> You have a couple of degrees of freedom in how much power you're TXing--the baseband sample magnitude, and the TX gain setting.
[20:23:23] <patchvonbraun[m]> On the B200 there's nearly 90dB of TX gain control.  Which, TBH, is an absurd range, but that's what the hardware supports.  I generally think of only the top 20dB or so as being "useful".
[20:23:41] <courtarro[m]> Yeah, sorry about the false alarm!
[20:23:48] <courtarro[m]> But thanks for the great debugging tips
[20:24:02] *** Malvolio is now known as Guest8344
[20:24:02] *** Quits: Guest8344 (~Malvolio@user/malvolio) (Killed (osmium.libera.chat (Nickname regained by services)))
[20:24:24] <patchvonbraun[m]> courtarro: NO worries.  It is, literally, my job :)
[20:24:57] *** Joins: Malvolio (~Malvolio@user/malvolio)
[20:28:50] <mait[m]> Zero_Chaos: it's that the tagged codec2 version breaks most use cases. Which is why I dragged my feet and included the 'brown paper bag' commits that followed into Debian's codec2 1.0.1 packages.
[20:43:23] <Zero_Chaos> mait[m]: yikes, that's a lot of patches.  advice?  should I wait for the next release? take all your patches?
[20:48:11] <Zero_Chaos> mait[m]: I could also just use a git snapshot if you think that's sane
[21:00:48] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[21:01:58] *** Quits: bandnyquist (~Rheanna@61.171.69.141) (Remote host closed the connection)
[21:04:44] *** Joins: bandnyquist (~Rheanna@61.171.38.68)
[21:24:41] <mait[m]> I was hoping for a quick update. But I have not been in contact with codec2 folk.
[21:25:01] <Zero_Chaos> mait[m]: all those patches are in their git though?
[21:27:11] <mait[m]> All the leading 4 digit ones are via git format-patch v1.0.1
[21:28:58] <Zero_Chaos> cool, thanks
[21:33:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:37:02] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:ed37:6ac3:14e1:7117)
[21:46:17] *** Quits: Acinonyx (~acinonyx@user/acinonyx) (Ping timeout: 252 seconds)
[21:50:30] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[21:52:28] *** Quits: bandnyquist (~Rheanna@61.171.38.68) (Remote host closed the connection)
[21:54:34] *** Joins: bandnyquist (~Rheanna@101.89.150.168)
[21:56:34] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[21:57:37] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[22:00:48] *** Quits: schwach (~schwach@154.6.28.164) (Read error: Connection reset by peer)
[22:00:53] *** Joins: schwach0 (~schwach@154.6.28.164)
[22:04:29] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[22:12:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:14:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:16:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:43] *** Joins: Vonter (~Vonter@user/vonter)
[22:27:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[22:41:53] *** Quits: bandnyquist (~Rheanna@101.89.150.168) (Remote host closed the connection)
[22:44:02] *** Joins: bandnyquist (~Rheanna@218.78.67.149)
[23:04:10] *** Quits: Elzington (~Elzington@static-68-235-44-76.cust.tzulo.com) (Quit: Leaving)
[23:06:34] *** Joins: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr)
[23:19:21] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[23:24:25] *** Joins: sbodin (~Android@185.12.224.209)
[23:31:43] *** Joins: guerby_ (~guerby@ip165.tetaneutral.net)
[23:32:00] *** Quits: bandnyquist (~Rheanna@218.78.67.149) (Remote host closed the connection)
[23:32:56] *** Quits: locheltree[m] (~locheltre@2001:470:69fc:105::1:33e) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: instian[m] (~instiangn@2001:470:69fc:105::1:32fa) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: hfmoodmodulation (~hfmoodmod@2001:470:69fc:105::1:3354) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: lounge[m] (~loungegnu@2001:470:69fc:105::1:303d) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: sameerab[m] (~sameerabg@2001:470:69fc:105::1:3342) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: mfatih07[m] (~mfatih07g@2001:470:69fc:105::1:28b2) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: jsallay[m] (~jsallaygn@2001:470:69fc:105::e161) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: HkonVgsether[m] (~haakovgnu@2001:470:69fc:105::e14e) (Ping timeout: 265 seconds)
[23:32:57] *** Quits: {null}[m] (~nullkdeor@2001:470:69fc:105::3f37) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: mk[m]12 (~mkgnuradi@2001:470:69fc:105::1:4106) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: JDemel[m] (~johannesd@2001:470:69fc:105::e15d) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: Crofton[m] (~croftongn@2001:470:69fc:105::9a7) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: linge93[m] (~linge93gn@2001:470:69fc:105::eb07) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: res0 (0@user/res0) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: kristoff-on1arf[ (~krbonnegn@2001:470:69fc:105::eae9) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: helinox[m] (~helinoxgn@2001:470:69fc:105::ea67) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: ishan_khare[m] (~ishankhar@2001:470:69fc:105::1:3512) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: DaveCherkusN1AI[ (~dcherkusg@2001:470:69fc:105::fd17) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: JoshMorman[m] (~mormjgnur@2001:470:69fc:105::e17a) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: drmpeg[m] (~drmpeggnu@2001:470:69fc:105::e139) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: MarcLichtman[m] (~marcgnura@2001:470:69fc:105::e172) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: wiml[m] (~wimlmatri@2001:470:69fc:105::ec8b) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: frainz[m] (~frainzfai@2001:470:69fc:105::ea2e) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: guerby (~guerby@ip165.tetaneutral.net) (Ping timeout: 265 seconds)
[23:33:57] *** Joins: res0 (0@user/res0)
[23:34:35] *** Quits: superkuh (~superkuh@user/superkuh) (Ping timeout: 250 seconds)
[23:34:39] *** Joins: bandnyquist (~Rheanna@101.89.150.168)
[23:35:43] *** Joins: superkuh (~superkuh@user/superkuh)
[23:45:27] *** Joins: HkonVgsether[m] (~haakovgnu@2001:470:69fc:105::e14e)
[23:45:35] *** Joins: locheltree[m] (~locheltre@2001:470:69fc:105::1:33e)
[23:46:12] *** Joins: jsallay[m] (~jsallaygn@2001:470:69fc:105::e161)
[23:47:01] *** Joins: mfatih07[m] (~mfatih07g@2001:470:69fc:105::1:28b2)
[23:47:03] *** Joins: {null}[m] (~nullkdeor@2001:470:69fc:105::3f37)
[23:47:32] *** Joins: instian[m] (~instiangn@2001:470:69fc:105::1:32fa)
[23:47:55] *** Joins: hfmoodmodulation (~hfmoodmod@2001:470:69fc:105::1:3354)
[23:47:56] *** Joins: lounge[m] (~loungegnu@2001:470:69fc:105::1:303d)
[23:48:11] *** Joins: sameerab[m] (~sameerabg@2001:470:69fc:105::1:3342)
[23:48:59] *** Joins: JDemel[m] (~johannesd@2001:470:69fc:105::e15d)
[23:49:02] *** Joins: mk[m]12 (~mkgnuradi@2001:470:69fc:105::1:4106)
[23:49:07] *** Joins: Crofton[m] (~croftongn@2001:470:69fc:105::9a7)
[23:49:13] *** Joins: linge93[m] (~linge93gn@2001:470:69fc:105::eb07)
[23:49:40] *** Joins: helinox[m] (~helinoxgn@2001:470:69fc:105::ea67)
[23:50:11] *** Joins: DaveCherkusN1AI[ (~dcherkusg@2001:470:69fc:105::fd17)
[23:50:13] *** Joins: wiml[m] (~wimlmatri@2001:470:69fc:105::ec8b)
[23:50:31] *** Joins: frainz[m] (~frainzfai@2001:470:69fc:105::ea2e)
[23:50:41] *** Joins: drmpeg[m] (~drmpeggnu@2001:470:69fc:105::e139)
[23:50:57] *** Joins: kristoff-on1arf[ (~krbonnegn@2001:470:69fc:105::eae9)
[23:51:13] *** Joins: ishan_khare[m] (~ishankhar@2001:470:69fc:105::1:3512)
[23:51:16] *** Joins: MarcLichtman[m] (~marcgnura@2001:470:69fc:105::e172)
[23:51:50] *** Joins: JoshMorman[m] (~mormjgnur@2001:470:69fc:105::e17a)
[23:58:45] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[23:59:53] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
