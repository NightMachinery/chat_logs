[00:29:15] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[01:56:30] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:10:10] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[03:57:38] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[03:58:02] <sonny> Why ism Async.Ignore also take
[03:58:07] <sonny> oof
[03:58:36] <sonny> why doesn't Async.Ignore have a version that takes and returns a Task<'T>?
[04:20:35] <sonny> The result on line 8 is Aysnc<unit>, however the compiler says it is implicitly ignored. So that means I don't need the ignore on line 14. So what is the point of Async.Ignore? Would I use it on line 8?
[04:20:36] <sonny> https://bpa.st/32MQ
[04:38:13] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:46:04] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[04:53:10] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[04:53:33] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[05:21:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:26:32] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:49:02] <ggb> Is there a way to call a method on an object in a pipeline without having to define an anonymous function inline?
[07:50:18] <ggb> E.g. to do something like `Object.Method()`, but as `Object |> Method ()`, without having to do `Object |> fun x -> x.Method ()`
[07:51:07] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[07:57:48] <jinsun__> easier with dynamic languages like python where you can just getattr and call it (except that python doesn't really have pipelines), I don't think it is possible in F#
[08:03:35] <ggb> Yeah, that is my thought as well. It just feels clunky to always define an inline lambda.
[08:10:13] <jinsun__> oh looks like Scala has a nice shorthand for this _.Method, https://stackoverflow.com/questions/3821178/f-shorthand-to-call-method-on-object-in-lambda
[08:10:18] <jinsun__> but F# doesn't have that (at least underscore doesn't work)
[08:32:22] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[08:46:08] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Client closed)
[08:54:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[08:55:25] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) ()
[10:19:01] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[14:31:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:23] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:06:40] *** Joins: kuribas (~user@ptr-25vy0ia87vhm2ndaymv.18120a2.ip6.access.telenet.be)
[17:55:26] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Ping timeout (120 seconds))
[18:25:50] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[18:54:12] *** Quits: kuribas (~user@ptr-25vy0ia87vhm2ndaymv.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[19:58:33] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[20:14:21] *** Joins: cloudbender (~cloudbend@user/cloudbender)
