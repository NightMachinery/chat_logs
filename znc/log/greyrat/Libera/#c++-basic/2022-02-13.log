[00:09:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:09:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:11:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:11:23] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:14:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:17:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[00:17:29] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:33:16] <ik> Why is `typename` required in a typedef statement when using a member type of a template parameter? Isn't the order of the values enough to know that it's supposed to be the name of a type?
[00:40:01] *** Joins: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[01:02:03] *** Quits: drw (~drw@188.170.80.249) (Killed (copper.libera.chat (Nickname regained by services)))
[01:02:23] *** Joins: poweedlou (~drw@188.170.80.249)
[01:04:09] *** poweedlou is now known as drw
[01:12:47] *** Joins: AmR (~AmREiSa@41.46.119.250)
[01:14:27] *** Quits: AmR (~AmREiSa@41.46.119.250) (Client Quit)
[01:19:43] *** Joins: AmR (~AmREiSa@102.44.191.232)
[01:20:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:20:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:21:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:21:35] *** Joins: markong (~kvirc@213.146.188.203)
[01:25:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[01:35:19] *** Quits: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadt)
[02:07:07] <ik> Also, why is the `class` keyword necessary in the `template <class T>` notation?
[02:16:28] <Alipha> ik: for your second question, you can use `template<typename T>` instead. Also note that you can have non-type template parameters, such as `template<int N>`
[02:16:58] <Alipha> eg: std::array<double, 5> foo;
[02:19:57] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[02:21:00] <Alipha> In a simple typedef, eg, `typedef foo<T>::bar quux;` yes, it's obvious bar must be a type. However, there's many other situations (especially non-typedef situations) where it's not obvious that bar is a type in `foo<T>::bar`, and so instead of having a special exception for typedef, they just require the typename keyword in all usages of `foo<T>::bar`
[02:22:09] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[02:49:16] *** Joins: ivan_wagner (~ivan_wagn@193.138.218.217)
[02:57:19] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[02:57:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[03:05:52] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[03:07:59] <ik> Alipha: Thanks, that makes sense.
[03:09:03] <Alipha> ik: there have been some proposals to not require `typename` in places where the symbol must be a type. I'm not sure of the state of those proposals
[03:16:30] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:22:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:26:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:31:37] *** Joins: ivan_wagner_ml (~ivan_wagn@193.138.218.202)
[03:33:50] *** Quits: ivan_wagner (~ivan_wagn@193.138.218.217) (Ping timeout: 256 seconds)
[03:54:28] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[04:03:29] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[04:18:03] *** Quits: ivan_wagner_ml (~ivan_wagn@193.138.218.202) (Read error: Connection reset by peer)
[04:18:23] *** Joins: ivan_wagner (~ivan_wagn@193.138.218.202)
[04:18:28] *** Quits: ivan_wagner (~ivan_wagn@193.138.218.202) (Remote host closed the connection)
[04:20:00] *** Joins: ivan_wagner (~ivan_wagn@193.138.218.202)
[04:32:15] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:35:10] *** Quits: ivan_wagner (~ivan_wagn@193.138.218.202) (Quit: Leaving)
[04:35:19] *** Joins: ivan_wagner (~ivan_wagn@193.138.218.202)
[04:58:08] *** Quits: ivan_wagner (~ivan_wagn@193.138.218.202) (Quit: Leaving)
[05:01:26] *** Quits: minto (~mintograd@47.201.5.61) (Quit: Leaving)
[05:17:03] *** Quits: DSpider (~DSpider@82.79.237.53) (Quit: Leaving)
[05:22:06] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (Ping timeout: 276 seconds)
[05:23:14] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[06:11:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[06:12:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:42:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:11:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:12:17] *** Joins: seninha (~seninha@user/seninha)
[07:36:22] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[07:51:59] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[08:23:47] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[08:37:50] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[08:43:34] *** Quits: Zertrin (~zertrin@user/zertrin) (Quit: 0096 2251 2110 8105)
[08:45:58] *** Joins: Zertrin (~zertrin@user/zertrin)
[08:56:30] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 260 seconds)
[09:05:03] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[09:07:02] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[10:27:54] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[10:33:29] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[10:51:49] *** Joins: teut (~teut@122.161.83.81)
[10:52:36] <teut> https://godbolt.org/z/aK6oTTEhb   how to solve this error?
[10:55:51] <teut> this sorry    https://godbolt.org/z/3seGh4n97
[10:56:28] <teut> I didn't  change much, than the lmbdas
[11:00:59] <teut> I have these examples from when Alipha told https://wandbox.org/permlink/pn2AYwWAQphDWLg5  , https://wandbox.org/permlink/L971efCorUuQV211  but these are a bit tough
[11:02:03] <Svitkona> https://godbolt.org/z/qPbE77vhG
[11:02:47] <teut> it should have printed  5 4 3 2 1
[11:03:04] <teut> and then 1-20
[11:04:14] <teut> and void()  means what?
[11:04:32] <teut> Schedular<std::function<void()>> schedular;
[11:04:58] <teut> return type void  with no parameters?
[11:05:35] <Svitkona> yes
[11:05:54] <teut> ok , and what about the recursion
[11:05:58] <teut> why isnt that working?
[11:06:31] <teut> Count down:20    and how can this be printed?
[11:06:56] <Svitkona> https://godbolt.org/z/cMbPxbKW3
[11:07:16] <teut>   schedular.callSoon([]()                    { countup(20); });        oops mistake
[11:09:24] <teut> the following queue is a blocking one isnt it?
[11:09:45] <teut> so  it should print  all "downs" first
[11:12:06] <teut> afk , need to go to the market
[11:16:08] <Svitkona> try tracing the queue
[11:16:33] *** Quits: teut (~teut@122.161.83.81) (Ping timeout: 256 seconds)
[11:43:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[12:42:17] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[12:47:41] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 250 seconds)
[13:16:02] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[13:26:40] *** Joins: teut (~teut@122.161.83.81)
[13:36:42] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Remote host closed the connection)
[13:37:18] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[13:40:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:44:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:58:42] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6902)
[14:03:00] <teut> https://godbolt.org/z/rnob11hGh   Svitkona , why is there a const in line 23?
[14:21:58] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Quit: faa)
[14:22:15] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[14:22:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[14:46:29] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[15:43:36] *** Joins: markong (~kvirc@213.146.188.203)
[15:45:27] *** Joins: magla (~gelignite@d536720f.access.ecotel.net)
[15:46:17] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:50:04] *** Joins: Xardas (~Xardas@149.233.51.127)
[15:55:08] *** Cyp_ is now known as Cyp
[15:56:03] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:20:18] *** Joins: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[16:57:40] *** Quits: drw (~drw@188.170.80.249) (Quit: Quit)
[17:17:27] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:20:36] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:21:16] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:22:37] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:23:08] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[17:23:25] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:26:01] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:28:51] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:28:57] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:31:14] <teut> https://godbolt.org/z/rnob11hGh   Svitkona , why is  const required in line 23?
[17:33:08] <cbreak> teut: because you're not passing an lvalue
[17:33:22] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 272 seconds)
[17:33:26] <cbreak> non-const lvalue refs can only refer to lvalues
[17:33:30] *** Joins: dgcampea-2 (~dgc@user/dgcampea)
[17:33:30] *** Quits: dgcampea (~dgc@user/dgcampea) (Killed (NickServ (Forcing logout dgcampea -> dgcampea)))
[17:33:30] *** dgcampea-2 is now known as dgcampea
[17:33:58] <cbreak> accept it by value instead if you want.
[17:35:39] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:36:15] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:37:21] *** Quits: teut (~teut@122.161.83.81) (Ping timeout: 256 seconds)
[17:42:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:44:45] <rmd> struggling with valgrind here giving me a "pure virtual method called" - no idea how or where it's being raised and I'm not sure how to go about finding it ... any suggestions re where should I be looking?
[17:46:26] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:46:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:47:08] <rmd> oh I think I've found something now ... looks like I'm doing a placement-new on a previously constructed object
[17:49:12] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 272 seconds)
[17:51:54] *** Quits: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadt)
[18:00:27] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[18:03:59] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[18:05:02] *** Joins: teut (~teut@122.161.83.81)
[18:21:10] *** Joins: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[18:34:05] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[18:37:58] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Ping timeout: 272 seconds)
[18:39:07] <teut> https://godbolt.org/z/9j8dGcK6f   why does this code crash giving seg fault?
[18:41:52] <Alipha> rmd: typically, you get that if you're calling the pure virtual function during the base class's constructor or destructor
[18:42:50] <Alipha> Generally, calling a virtual function during construction or destruction is typically a bad idea
[18:43:02] <teut> it crashes after outputting  "  Count up:9   "
[18:43:23] <teut> on my vscode but it crashed earlier on godbolt
[18:46:19] <Alipha> teut: line 38 invalidates the reference on line 37, making line 39 UB.
[18:47:12] <teut> pop_front()  does what?
[18:47:24] <teut> if uses `delete`?
[18:47:57] <teut>         _Alloc_traits::destroy(_M_get_Tp_allocator(),       // it uses this
[18:48:10] <Alipha> Yes
[18:48:25] <teut> so it destroy's allocator
[18:49:10] <teut> then why do I get upto       "  Count up:9   "
[18:49:12] <teut> ?
[18:50:05] <teut> https://ibb.co/Pgp7cxZ
[18:50:34] *** Quits: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadt)
[18:51:25] <teut> quite weird, I don;t know what happened by this time it didn't crash
[18:53:12] <Alipha> teut: you can't have a reference to the front and then pop the front and then try to refer to that thing you just popped. It doesn't exist anymore.
[18:53:38] <teut> https://godbolt.org/z/G7MnaP7af   this worked perfectly but
[18:53:43] <teut> it's same
[18:53:56] <teut> weird things are happening
[18:54:55] <teut> https://godbolt.org/z/rrqv9qf7z    so I changed to this now , but I see no change in output
[18:54:58] <Alipha> teut: that's what happens when you cause Undefined Behavior. You often get inconsistent results.
[18:55:26] <teut> hmm
[18:55:54] *** Joins: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[18:56:23] <teut> why isn't it working now in godbolt?
[18:56:47] <teut> I swapped the order of calling and pooping
[18:56:50] <teut> poping*
[18:57:41] <Alipha> Your program is taking too long to run. godbolt kills your program after so much time
[18:58:07] <teut> ya there are  "sleeps" in it
[18:59:33] <Alipha> Well, the sleeps are rather pointless for running on godbolt, since godbolt waits for the program to end before displaying any of the output
[19:00:11] <teut> oh yes , it just puts the html from the shell output
[19:00:24] <teut> thats how these things work
[19:01:21] <teut> Schedular<std::function<void()>> schedular;                how to remove dependency of std::function?
[19:03:12] <teut> initial value of reference to non-const must be an lvalueC/C++(461)
[19:03:13] <teut>   and why is this a problem?
[19:05:40] <teut> https://godbolt.org/z/rYs5acYb3     gcc gives this error to me instead of what I get on godbolt when both are gcc
[19:12:22] <rmd> Alipha: is there a way of figuring out what function is being called though? As it's without any context re thread ID, parent function, anything.
[19:12:39] <rmd> (sorry, going back to 15:11)
[19:16:34] <Alipha> rmd: you could go through and change TEMPORARILY all your pure virtual functions to have a body which throws an exception or something instead
[19:18:22] <rmd> Ok great thanks. Sadly I think it's a 3rd party library that must be throwing it as I haven't composed any virtual functions in this project, so will need to do a little more digging.
[19:22:03] *** Quits: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadt)
[19:24:30] <cbreak> shouldn't that be automatic?
[19:26:16] <teut> https://godbolt.org/z/TbeaEqqcf  this is my current code, can someone tell if it has errors or not?
[19:27:02] <teut> https://ibb.co/RC3YM3t  it compiles and runs but still vscode is showing errors
[19:27:13] <cbreak> hmm, no, it's not automatic
[19:27:37] <cbreak> teut: it has problems
[19:27:40] <cbreak> why do you use &&?
[19:27:58] <teut> because lambda is rvalue
[19:27:58] <cbreak> instead of passing by value as I suggested?
[19:28:06] <cbreak> you're not using it as rvalue
[19:28:15] <teut> how can you say that?
[19:28:32] <cbreak> it's true
[19:28:36] <teut> and why is the compiler saying it to make make const?
[19:29:06] <cbreak> because you're not using it as rvalue
[19:29:07] <teut> const means don't modify but I am pushing it to the vector , calling and popping it
[19:29:19] <cbreak> you're copying it into the vector
[19:29:34] <teut> and you dont copy rvalue to vector?
[19:29:38] <cbreak> no.
[19:29:51] <cbreak> might as well pass-by-value, that's more convenient
[19:29:59] <teut> oh wait, I didnt move it
[19:30:19] <cbreak> also, it's called "Scheduler", with an 'e' at the second-to-last position
[19:30:23] <cbreak> exactly
[19:30:29] <cbreak> you're not using it as rvalue
[19:30:59] <cbreak> also, you're not using the lambda directly anyway, you're using a std::function
[19:31:11] <cbreak> so the lambda gets copied into that std::function before your code even gets to see it
[19:31:34] <cbreak> you include time.h without needing it
[19:31:39] <teut> ya I will correct the spelling , thanks for telling
[19:32:43] <teut> I needed time.h but my actual code didn't work so I took a step back and wrote simpler version of it
[19:33:14] <cbreak> also, you don't get concurrenty like this
[19:33:24] <teut>     void callSoon(const T &func)
[19:33:25] <teut>  I did this but still the error is there
[19:33:33] <cbreak> or rather, you get "concurrency", like the original Mac OS 7 had it, via cooperative multitasking
[19:33:43] <cbreak> each of your "threads" can block the whole execution
[19:33:54] <cbreak> and many seem to do, via sleeping
[19:33:59] <teut> yes thats what I am making
[19:34:13] <teut> I will make that async queue
[19:34:14] <cbreak> so while one of them sleeps, all others get blocked too
[19:34:22] <teut> just let me make this blocking one
[19:34:42] <cbreak> a much better way to do this would be to offer a function like "callInXSecs" or similar
[19:34:47] <cbreak> then there would be no need to sleep
[19:34:53] <teut> ya I know that all
[19:35:08] <teut> David Beazely has done it in steps and wrote 4 programs
[19:35:14] <teut> I am doing similarly
[19:35:16] <cbreak> never heard of that one
[19:35:31] <teut> it's one from the python community
[19:35:34] <cbreak> you can easily use std::priority_queue instead of deque, to get time semantics into it
[19:35:37] <cbreak> hahahaha
[19:35:38] <cbreak> python
[19:35:47] <teut> but he's into c
[19:35:52] <cbreak> yeah, that sounds like something they would do
[19:36:02] <cbreak> I think they still have that global lock
[19:36:06] <teut> yes
[19:36:15] <cbreak> ah well, not like they can remove it without breaking things. So maybe in 4...
[19:36:33] <teut> lol, they may be able to do it in 4
[19:36:49] <teut> larry hastings was on it , but guess he failed
[19:37:00] <cbreak> I could remove it
[19:37:03] <cbreak> but it would break things
[19:37:04] <teut> they said it made python 4 times slower
[19:37:11] <teut> if they removed it
[19:37:28] <cbreak> probably because he tried to keep it from breaking instead :D
[19:37:57] <cbreak> there are several ways to preserve performance without a global lock
[19:38:09] <teut> breaking means breaking backwards compatibility?
[19:38:17] <cbreak> but they'd require changing the language to have different threading semantics (like erlang or what ever)
[19:38:19] <cbreak> yes
[19:38:39] <cbreak> or it'd require making users do the locking themselves, like C++ requires
[19:38:41] <teut> why is that a problem? They can say it as a new programming language
[19:38:54] <cbreak> yeah, you know how well that worked for python 2.7
[19:39:03] <cbreak> and that's basically the same as python 3.
[19:39:14] <cbreak> ... And I still have to deal with users that want to use my stuff on that old thing
[19:39:19] <teut> I started using python with 3.6
[19:39:43] <teut> can you just help fix my code?
[19:39:52] <teut> I need to finish it fast
[19:40:29] <teut> https://godbolt.org/z/WxY6ba1sP
[19:40:58] <teut> what else can I do to fix the errors?  I am not asking on improving the algo, that part I know
[19:44:10] <cbreak> any particular error you care about?
[19:44:20] <teut> this lvalue one only
[19:44:39] <teut> what does the compiler get if I set it as const?
[19:44:50] <teut> and still I get red squigles in vscode
[19:46:00] <teut> const means I wont modify the type
[19:46:10] <cbreak> teut: void call(Func func) { ... queue.push_back(std::move(func)); }
[19:46:26] <cbreak> that way you're not limited to passing just rvalues or just lvalues
[19:46:31] <cbreak> and you still get move optimization
[19:46:49] <teut> oh std::move could be used in push_back? I didnt know
[19:49:04] <cbreak> https://en.cppreference.com/w/cpp/container/vector/push_back, there are rvalue overloads for those
[19:49:08] <teut> I still get the red squiggles
[19:50:42] <teut> void push_back( const T& value );    oh so I need to see these, I never did that but often thought about what to put here
[19:51:29] <teut> https://godbolt.org/z/3oKW63M37
[20:02:50] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:9950:c5c9:85ae:4671)
[20:02:50] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:9950:c5c9:85ae:4671) (Changing host)
[20:02:50] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:03:20] <teut> https://godbolt.org/z/M8MWTqEnv  I think I used move correctly this time
[20:03:25] <teut> plz confirm
[20:03:39] *** Joins: ferdna (~ferdna@user/ferdna)
[20:03:42] <cbreak> teut: no
[20:03:51] <teut> =(
[20:03:54] <cbreak> you do not need move when passing an rvalue, like when you call the function
[20:04:04] <teut> let me see cppconf
[20:04:38] <cbreak> just like I showed you in my example, you need to use it inside the function where you have a named parameter, and push into the container. and just as I also showed you: Stop using rvalue refs. Use values.
[20:04:46] <cbreak> really, you basically have to read my example
[20:05:41] <teut> void call(Func func) { ... queue.push_back(std::move(func)); }   this right?
[20:08:53] <teut> https://godbolt.org/z/7PKGPW19v
[20:09:05] <teut> ok now I did exactly what you said
[20:10:07] <teut> so if I understand it correctly , the lambda is first passed as value into the callsoon, then that lvalue is moved to to the container through push_back
[20:10:12] <teut> correct?
[20:10:27] <cbreak> not exactly
[20:10:35] <cbreak> the lambda is passed into the constructor of a std::function
[20:10:48] <cbreak> that function is then passed as value into call
[20:10:57] <cbreak> and there you move it into the push_back
[20:11:02] <cbreak> which in turn will move it into the container
[20:12:21] <teut> yes, I didnt speak of the std::function because it s a complicated thing in itself
[20:12:27] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:6111:c808:a47f:41)
[20:12:37] <teut> but anyways, still I m getting the squigly
[20:13:09] <teut> non-const lvalue reference to type 'std::function<void ()>' cannot bind to a temporary of type '(lambda at C:\Users\mangl\Desktop\c++ async\asynco.cpp:48:28)'
[20:16:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:8fa:f917:3ddb:7b76) (Ping timeout: 245 seconds)
[20:17:47] *** Joins: markong (~kvirc@213.146.188.203)
[20:29:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[20:42:47] <teut> https://ibb.co/GcXQ7HF
[20:42:58] <teut> what is the compiler saying now?
[20:43:55] <teut> oh ok , I know this , sorry
[20:44:25] <teut> compile time environment is too difficult to work in
[20:48:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:51:28] *** Joins: jsbach (~jsbach@2a01:c22:35d8:1b00:e0ca:1ff3:45d4:9de4)
[20:53:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[21:00:22] <Alipha> teut: did you include <utility> for std::pair?
[21:00:38] <teut> that wasnt the issue
[21:00:44] <teut> I had included it
[21:01:07] <teut> I needed to change the type
[21:01:19] <teut> how to get time as milliseconds in a float?
[21:02:02] <teut> actually I dont need that but    auto now  = now_time + 6 milliseconds
[21:02:15] <teut> how to do it?
[21:02:27] <teut> https://stackoverflow.com/questions/9089842/c-chrono-system-time-in-milliseconds-time-operations I saw this
[21:15:03] <teut> https://dpaste.org/RyHO  I am never able to remember whether this is for sorting in increasing or decreasing order
[21:15:11] <teut> how do you remember it?
[21:15:45] <teut> if  true is swaps, I read in the docs
[21:15:57] <teut> but I always get confused in it
[21:19:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:20:03] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 256 seconds)
[21:23:31] <Alipha> teut: you're specifying that the left side is less than the right side, so that's how it's going to be arranged in your container. That is, x[0] < x[1] < x[2] < x[3], ie, increasing order
[21:24:21] <teut> ohhh, thats now something that I can get from an experienced user only which definitely you are
[21:24:33] <teut> the proff says just learn it for such things
[21:25:44] <teut> thanks
[21:33:31] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[21:40:59] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Read error: Connection reset by peer)
[21:42:36] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[21:58:06] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 272 seconds)
[22:00:53] <teut> https://godbolt.org/z/cG4fW8Gjv      a and b not declared in scope?
[22:07:00] <teut> '=(    so much of < > {} ()  makes it so much confusing
[22:12:40] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[22:16:51] <teut>   what problem does the constructor has?  https://godbolt.org/z/E5rzvoW56
[22:39:11] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[22:55:34] <Raziel> teut, there's a lot of problems there
[22:57:30] <teut> https://godbolt.org/z/xKaP3MhPf
[22:57:36] <teut> I fixed a few syntax ones
[22:58:40] <teut> decltype is a problem since that's a template
[22:58:46] <teut> how to fix that?
[23:00:35] <Raziel> decltype(&cmp<T>)> should work
[23:03:13] <teut> how did that work?
[23:03:20] <teut> it's a template
[23:03:48] <teut> you passed a reference to a template?
[23:04:15] <Raziel> yeahkinda
[23:04:37] <teut> what can I read on you understand it?
[23:04:43] <teut> to understand*
[23:05:11] <Raziel> decltype needs a pointer to the function basically
[23:05:25] <Raziel> the template resolution happens before that, I think
[23:05:26] <teut> oh ok
[23:05:38] <teut> and also the callLater
[23:05:46] <teut> what's wrong with that?
[23:06:09] <Raziel> you're mixing durations and time points in ways that it can't handle, mostly
[23:06:42] <teut> I removed that task.first
[23:06:56] <teut> I initially had put it as a pair
[23:07:10] <teut> I use  duration_cast
[23:07:13] <teut> used*
[23:07:46] <Raziel> you're trying to delay execution by a certain number of seconds so you should use a future timepoint, not a duration for that
[23:07:54] <teut> I had forgotten a bracket
[23:09:14] <teut> https://en.cppreference.com/w/cpp/chrono/time_point
[23:09:24] <teut> I used this
[23:09:31] <teut> and SO
[23:09:56] *** Joins: cadabra (~cadabra@2600:8803:c007:f600:68c6:84b6:8be7:2972)
[23:10:49] <teut> https://godbolt.org/z/8oPqGv6KG
[23:12:03] <teut> oh ok , the chrono::seconds is wrong
[23:12:14] <teut> I don't know why vscode doesn't show me that
[23:12:52] *** Quits: cadabra (~cadabra@2600:8803:c007:f600:68c6:84b6:8be7:2972) (Quit: Leaving)
[23:13:33] <teut> https://en.cppreference.com/w/cpp/chrono/duration#Helper_types
[23:13:42] <teut> it's here , that's very strange
[23:14:37] <teut> ok, there was a repetition
[23:20:32] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:20:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:23:50] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[23:35:07] <teut> thanks , I could solve a lot of errors due to you Alipha and Raziel
[23:35:55] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[23:47:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[23:47:57] *** Quits: shailangsa (~shailangs@host109-159-108-227.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[23:48:56] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 272 seconds)
[23:50:32] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[23:51:10] *** Joins: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
