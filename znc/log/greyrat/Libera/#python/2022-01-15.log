[00:00:49] *** Joins: mud (~mud@user/kadoban)
[00:01:11] *** Joins: pycurious1 (~Adium@3.sub-174-241-184.myvzw.com)
[00:01:11] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:02:23] *** Joins: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net)
[00:02:58] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[00:03:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[00:03:33] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:04:46] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[00:05:02] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[00:06:59] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:06:59] *** Quits: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net) (Ping timeout: 256 seconds)
[00:07:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:07:16] *** Quits: ewwegweg (~Saulooo@user/ewwegweg) (Remote host closed the connection)
[00:07:44] *** Joins: ryu_ (~ryusaku@c6A334BC1.dhcp.as2116.net)
[00:07:44] *** Quits: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[00:08:11] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[00:08:33] *** Joins: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net)
[00:08:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:09:03] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[00:09:46] *** Joins: deadmund (~ed@155.68.60.155)
[00:09:54] <deadmund> How can I save something I drew with turtle directly to a "regular" image file format (png, gif, jpg, etc.) ??
[00:11:08] *** Joins: fikran (~fikran@user/fikran)
[00:11:19] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[00:11:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:11:54] *** Joins: cheater (~Username@user/cheater)
[00:11:57] *** Quits: ryu_ (~ryusaku@c6A334BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[00:12:13] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:13:01] <grym> deadmund: apparently, turtle.getscreen().getcanvas().postscript(...) and then convert the eps
[00:14:43] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:15:40] <SnoopJ> I think it just renders plain old postscript actually, but yea, Tk's canvas seems to be the best way to do it
[00:16:34] <SnoopJ> nope, I'm wrong: "The Postscript is created in Encapsulated Postscript form using version 3.0 of the Document Structuring Conventions"
[00:17:34] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[00:17:44] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[00:19:35] *** Joins: bluedust (~bluedust@117.207.236.117)
[00:19:45] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[00:20:07] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:20:19] <deadmund> grym: no way to go to png or something directly from turtle?
[00:20:49] *** Quits: Macuser (~Macuser@2600:1003:b44b:8b77:119a:bf86:f49e:93cf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:21:02] <deadmund> SnoopJ: hi again from yesterday.  I have to use some secondary program to convert from eps to png?
[00:21:21] <grym> d that's as far as i got in looking.
[00:21:45] <grym> deadmund: you could use PIL or something to flip eps -> png
[00:21:54] <grym> er, Pillow
[00:23:20] *** Quits: bluedust_ (~bluedust@37.120.198.153) (Ping timeout: 250 seconds)
[00:23:28] <SnoopJ> I think Pillow depends on having ghostscript available
[00:23:54] *** Quits: heldwin (~heldwin@user/asmodee) (Remote host closed the connection)
[00:24:09] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[00:24:16] *** Joins: heldwin (~heldwin@user/asmodee)
[00:25:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:25:38] <grym> maybe.  i can't say i've tried, but it would save you the trouble of doing it manually with the gimp, or something
[00:25:42] *** Joins: stonkey (~stonkey@user/stonkey)
[00:26:02] <SnoopJ> well, I just tried loading a .ps with Pillow and it complained about not being able to find `gs`
[00:26:08] <SnoopJ> (because I don't have ghostscript on this system)
[00:27:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:27:51] *** Joins: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net)
[00:28:06] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[00:29:04] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[00:29:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:30:25] *** Joins: bluedust_ (~bluedust@194.37.96.121)
[00:31:10] *** Joins: frmlof (~frmlof@70.243.238.191)
[00:31:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: Lost terminal)
[00:31:26] *** Quits: bluedust (~bluedust@117.207.236.117) (Read error: Connection reset by peer)
[00:31:56] *** Joins: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net)
[00:32:00] *** Joins: bluedust (~bluedust@117.207.236.117)
[00:32:09] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:32:17] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[00:32:20] *** Quits: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[00:32:45] *** Joins: mickey88 (~user@user/mickey)
[00:33:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f88f-2373-82c9-cc32.res6.spectrum.com)
[00:33:47] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Read error: Connection reset by peer)
[00:35:21] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:35:23] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[00:35:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:35:45] *** mickey88 is now known as mickey8
[00:35:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:35:54] *** Quits: bluedust_ (~bluedust@194.37.96.121) (Ping timeout: 250 seconds)
[00:36:17] *** Quits: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[00:37:00] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[00:37:53] *** Quits: deadmund (~ed@155.68.60.155) (Quit: Konversation terminated!)
[00:38:02] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[00:38:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[00:39:41] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:40:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:40:40] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[00:40:56] *** Quits: Narrat (~omnius@p200300df5f129c6c06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:41:37] *** Quits: effprime (~effprime@user/effprime) (Ping timeout: 240 seconds)
[00:41:43] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0)
[00:41:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:41:58] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-16-71.w82-124.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[00:42:18] *** Joins: effprime (~effprime@user/effprime)
[00:44:41] *** Joins: ice9 (~ice9@user/ice9)
[00:45:27] <novns> you shall install the ghostscript on every system you see
[00:45:31] *** Quits: delvian (~delvian@41.13.198.210) (Ping timeout: 256 seconds)
[00:45:44] <novns> you can uninstall everything else
[00:45:59] *** Joins: delvian (~delvian@41.13.198.210)
[00:46:18] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:4551:f02c:656d:a647) (Ping timeout: 250 seconds)
[00:46:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:46:46] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:15] *** Joins: mharig (~mharig@181.115.131.232)
[00:47:55] *** Joins: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net)
[00:48:40] *** Joins: noarb (~noarb@user/noarb)
[00:50:17] *** Joins: lntl (~joey@24.136.23.254)
[00:50:37] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[00:51:15] <grym> ... except texlive
[00:52:25] <lntl> I have a pickle which contains many things. One of those things has type(thing) = np.array. Do I need to import numpy for this or can I convert it to list(list()) or something like that?
[00:52:43] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[00:52:43] *** Quits: PointThink (~PointThin@acbh87.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[00:53:03] <grym> you can use numpy to convert that to a list of lists
[00:53:19] <lntl> Can I do that without importing numpy?
[00:53:23] <grym> i don't think so
[00:53:48] <lntl> It's the only thing that uses numpy so I am trying to avoid the import if i can
[00:53:57] *** Joins: kn07_ (~kn07_@86.121.166.134)
[00:53:57] <SnoopJ> lntl, numpy provides .tolist() on ndarrays if you can convert it to a list before pickling it
[00:53:57] <grym> i don't think yo ucan
[00:54:10] <SnoopJ> ...and numpy also provides really nice serialization that isn't pickle, heh.
[00:54:47] <SnoopJ> you'll need numpy for an object of that type, though, because numpy is what defines the type
[00:54:47] <lntl> Another team is making the pickles which I am working with so I don't really have control over that
[00:55:14] *** Quits: randall (~randall@user/randall) (Remote host closed the connection)
[00:55:15] <SnoopJ> would they be completely unable/unwilling to change how it's pickled?
[00:56:07] <lntl> I am sure they could/would and I'd rather import numpy than call in a favor ;)
[00:56:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d)
[00:56:25] <lntl> This channel is great btw
[00:56:25] <SnoopJ> mm. it's not that bad of an import, if it's available
[00:56:39] *** Joins: kosh (~kosh@user/kosh)
[00:56:49] <lntl> Thanks all for your help whenever I come in here
[00:56:57] <grym> lntl: you're welcome!
[00:57:06] <SnoopJ> you could conceivably write some Cython that has just enough awareness of numpy's API to unpack it, but yea, just having numpy do this is going to be better
[00:57:42] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:58:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:00:25] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0) (Quit: Esteri Libera)
[01:00:39] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0)
[01:02:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:02:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[01:03:22] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:04:13] *** Joins: frmlof (~frmlof@70.243.238.191)
[01:07:12] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:08:10] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[01:08:45] *** Quits: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[01:08:58] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[01:09:05] *** Quits: delvian (~delvian@41.13.198.210) (Read error: Connection reset by peer)
[01:10:08] *** Quits: mat001 (~mat001@69.4.234.90) (Ping timeout: 250 seconds)
[01:10:51] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[01:11:13] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:13:56] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:14:02] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[01:14:12] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:14:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:15:02] *** Quits: ubert (~Thunderbi@p200300ecdf0994cfb11256a527c2b165.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:15:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[01:17:06] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:17:39] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[01:18:01] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:18:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[01:19:17] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[01:19:52] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[01:20:17] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-104.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:20:20] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Quit: Leaving...)
[01:21:47] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:25:05] *** Joins: driib2 (~driib@185.195.233.151)
[01:25:31] *** Joins: mat001 (~mat001@69.4.234.90)
[01:25:47] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[01:25:54] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:27:38] <jinsun> SnoopJ: okay python.org got it finally https://www.python.org/downloads/release/python-3102/
[01:27:40] *** Quits: bluedust (~bluedust@117.207.236.117) (Remote host closed the connection)
[01:28:20] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[01:28:29] <jinsun> seems like installers not readly yet though
[01:28:44] *** arjun is now known as ccldarjun
[01:29:43] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[01:31:11] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[01:31:46] <HiccupJul> i'm using the requests library to stream a HTTP download and hash it "on the fly", but i'd also like to count how many bytes were downloaded
[01:31:59] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[01:32:00] <HiccupJul> how can i do this?
[01:32:11] <HiccupJul>         for chunk in response.iter_content(chunk_size=65536):
[01:32:11] <HiccupJul>             crc32_my = crc32(chunk, crc32_obj)
[01:32:11] <HiccupJul>             md5_my.update(chunk)
[01:32:11] <HiccupJul>             sha1_my.update(chunk)
[01:32:11] <HiccupJul>             sha256_my.update(chunk)
[01:32:19] <HiccupJul> maybe too many lines to paste, sorry
[01:32:34] *** Joins: Syzygy__ (~Syzygy@dynamic-2l4rd5zh3jbrwrpr2p-pd01.res.v6.highway.a1.net)
[01:33:01] <HiccupJul> https://bpa.st/XMVA
[01:33:22] <ryan-c> any reason you can't just stick a `total_bytes = 0` right before the loop and `total_bytes += len(chunk)` inside?
[01:33:44] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0) (Quit: Esteri Libera)
[01:33:52] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:33:52] <HiccupJul> that would work fine actually
[01:33:55] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0)
[01:34:10] *** Quits: Syzygy_ (~Syzygy@178-190-59-186.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[01:34:22] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:34:28] <HiccupJul> somehow i thought chunk would always return 65536 bytes, causing the file size to be off, but that makes no sense
[01:34:41] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Quit: Leaving)
[01:36:02] *** Quits: paul424 (~tom@ip-5-172-234-134.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:36:14] <ryan-c> nope, it's up to the specified size
[01:36:16] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:37:58] <SnoopJ> it works like .read(chunk_size) basically
[01:38:03] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[01:38:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f88f-2373-82c9-cc32.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:38:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:38:40] <HiccupJul> ah
[01:38:56] <SnoopJ> (it's a little more complicated than that, but it's the right analogy)
[01:39:18] <HiccupJul> although i wonder if there's any point in me counting the bytes, requests may stop downloading once it gets the number of bytes specified in the HTTP Content-Length header
[01:39:28] *** Joins: Pickchea (~private@user/pickchea)
[01:39:55] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:40:12] <HiccupJul> i mean of course you would expect the Content-Length header and the actual content provided by the server to match, but...
[01:40:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:41:06] <SnoopJ> I don't think it's particularly expensive to just call len() on the result
[01:41:43] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[01:41:58] <HiccupJul> yeah
[01:42:00] *** Joins: gustik (~gustik@2a01:c844:2436:6920:9e9:f97c:41d1:634c)
[01:42:31] <HiccupJul> i was just wondering if i should compare the content length with the actual length as a precaution. but maybe requests does that.
[01:43:23] *** Quits: gustik (~gustik@2a01:c844:2436:6920:9e9:f97c:41d1:634c) (Remote host closed the connection)
[01:43:39] *** Joins: zebrag (~chris@user/zebrag)
[01:44:52] *** Joins: audiobirb (~audio@user/audio)
[01:46:32] <SnoopJ> I don't think requests does that kind of validation, but I'm also not sure why you would need to compare the two, is the length of the response alone not enough information?
[01:47:08] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[01:47:17] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[01:47:48] <HiccupJul> i mean, if there is a mismatch, then that would indicate a server error
[01:47:59] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:85e7:4c79:1315:9ef2)
[01:48:03] <SnoopJ> that isn't necessarily true, Content-Length describes the length of the compressed payload if compression is being used
[01:48:07] <SnoopJ> e.g. https://github.com/psf/requests/issues/6007
[01:48:08] <HiccupJul> ah
[01:48:32] <SnoopJ> so that brings me back to my question: is the length of the response alone not enough information to figure out if the response is well-formed?
[01:48:39] *** Quits: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de) ()
[01:48:46] <HiccupJul> i think your are probably right
[01:48:56] <SnoopJ> in the application layer sense. you don't need to double-check the network stack below you. if you're going to do that, you might as well write your own, really
[01:49:01] <HiccupJul> yeah
[01:49:12] <HiccupJul> i do also wonder if i should be making a "downloader" like this
[01:49:14] *** Joins: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de)
[01:49:18] <HiccupJul> or if i should use wget or something similar
[01:49:28] <HiccupJul> but wget doesn't have the ability to hash a file as its downloading, afaik
[01:49:53] <HiccupJul> i mean i was using something with unix pipes, but that was a pain
[01:50:21] <HiccupJul> but i guess requests is designed somewhat for arbitrary downloads like this
[01:50:28] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[01:51:57] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 240 seconds)
[01:53:22] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:53:25] <Evolver> Which are the best packages for convenient GPU programming with Python? I mean with Nvidia CUDA GPUs.
[01:53:38] <SnoopJ> numba and pycuda come immediately to mind
[01:53:59] <Evolver> I had numerous errors with Numba and don't want to spend a single more minute on it, but I'll look into pycuda
[01:54:19] <SnoopJ> Are there any other libraries on the "no not that one" grudge list?
[01:54:38] <Evolver> well I recently really liked pybind11
[01:54:39] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Ping timeout: 256 seconds)
[01:54:43] *** Joins: fstd_ (~fstd@xdsl-78-35-189-100.nc.de)
[01:54:44] <Evolver> it worked so well and so cleanly and easily
[01:54:52] <Evolver> so I'm not Mr. Grudge
[01:55:07] <SnoopJ> pybind11 doesn't do anything related to CUDA on its own
[01:55:13] <Evolver> true
[01:55:40] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[01:55:47] *** Joins: jwodder (~jwodder@2601:89:c600:f150:7177:9938:dade:ed83)
[01:56:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[01:56:00] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:56:00] *** finn_elija is now known as FinnElija
[01:56:29] *** Quits: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:56:58] <jwodder> The Python docs say that Queue.get(block=True, timeout=None) can't be interrupted by Ctrl-C on Windows.  Is the same true of SimpleQueue?
[01:57:11] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[01:57:15] *** Joins: KvL (~KvL@user/KvL)
[01:57:28] <SnoopJ> Nvidia has also become the last organization to join the party of orgs providing software to link Python and CUDA. cuda-python doesn't seem to be particularly active, though https://github.com/NVIDIA/cuda-python
[01:57:43] <SnoopJ> and I have heard good things about cupy as well
[01:57:51] *** Joins: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de)
[01:58:05] <SnoopJ> which is AIUI has a numpy-alike interface
[01:58:12] * SnoopJ squints at his own sentence
[01:59:19] <Evolver> cupy and rapids.ai are ok not all code is easily vectorizable
[01:59:26] <Evolver> *but not all code is easily vectorizable
[01:59:45] <SnoopJ> sure, and no library exists that makes all code easily vectorizable
[01:59:49] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[02:00:07] *** Joins: Celeo (~Celeo@user/celeo)
[02:00:29] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:00:44] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:00:58] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[02:01:12] *** Joins: Joss (~joss@user/Joss)
[02:01:27] *** Quits: fstd_ (~fstd@xdsl-78-35-189-100.nc.de) (Ping timeout: 256 seconds)
[02:02:26] *** Joins: p-i- (Ohmu@gateway/vpn/protonvpn/ohmu)
[02:02:50] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:03:18] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[02:04:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:04:31] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[02:05:03] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[02:05:16] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[02:05:25] *** Quits: p-i-_ (Ohmu@gateway/vpn/protonvpn/ohmu) (Ping timeout: 256 seconds)
[02:05:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:05:43] *** Quits: pycurious1 (~Adium@3.sub-174-241-184.myvzw.com) (Quit: Leaving.)
[02:05:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:06:33] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[02:07:33] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:07:55] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[02:08:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:08:18] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[02:08:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:09:15] *** Joins: pycurious (~Adium@user/pycurious)
[02:09:22] <TML> SnoopJ: I know internally they have a bunch of python tools the engineering teams want to release but they've been shut down by legal for some reason
[02:09:32] *** Joins: fstd (~fstd@xdsl-87-79-46-57.nc.de)
[02:09:42] <sn_fk_n> If I serialise an object is there some standard way to indicate "this is deserialisable" in the string?
[02:09:45] <HiccupJul> interesting
[02:09:55] *** Joins: stonkey (~stonkey@user/stonkey)
[02:10:04] *** Joins: panella32 (~panella32@134.202.32.60)
[02:10:06] <SnoopJ> TML, the graphics industry sounds like a very 🔥interesting🔥 place to work
[02:10:10] *** Quits: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:10:22] <nedbat> sn_fk_n: no, the string will be specific to your serialization technique
[02:10:44] *** Joins: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de)
[02:10:48] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[02:10:53] <sn_fk_n> yeah I was just wondering if maybe there was something somewhere that was like 'add a prefix' or something /shrug
[02:11:02] <SnoopJ> I really wish I'd saved it, but years ago I remember reading a forum posting from an engineer describing the various evil that went into drivers to support newly released games.
[02:11:06] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:11:18] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[02:11:46] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[02:11:51] *** Joins: retrosenator (~retrosena@207.sub-174-203-208.myvzw.com)
[02:11:55] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[02:12:37] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:13:55] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[02:13:57] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[02:14:47] *** Quits: magla (~gelignite@55d475f4.access.ecotel.net) (Quit: Stay safe!)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:37] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:15:40] *** Quits: greedom (~greedom@p200300de670671001ca662212b142704.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:15:48] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:26] *** Quits: panella32 (~panella32@134.202.32.60) (Ping timeout: 250 seconds)
[02:16:40] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Remote host closed the connection)
[02:17:42] *** Joins: mat001_ (~mat001@69.4.234.69)
[02:17:51] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[02:18:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:18:24] *** Joins: Staunch (~Staunch@150.73.100.34.bc.googleusercontent.com)
[02:18:35] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:18:56] *** Joins: Fiji (~Fiji@user/fiji)
[02:19:01] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[02:19:37] *** Quits: mat001 (~mat001@69.4.234.90) (Ping timeout: 240 seconds)
[02:20:29] *** Joins: fikran (~fikran@user/fikran)
[02:21:07] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Ping timeout: 256 seconds)
[02:21:52] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[02:23:22] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Ping timeout: 250 seconds)
[02:23:48] *** Quits: ouestbillie (~gallup@142.169.82.16) (Ping timeout: 250 seconds)
[02:24:39] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:24:39] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[02:25:23] <bancroft> if in sqlalchemy I do query(..).filter(something, something_else) is it and by default? like both those things must be true?
[02:25:30] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[02:26:18] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:55] <catern> hey #python I don't need any help but I'm just sharing something evil I'm going to do
[02:26:55] <theseb> anyone have a simple explanation how NoSQL data can be queried with SQL?  I think at least for JSON you can create metadata.  Reason this came up is AWS Glue generates metadata for this i think?
[02:27:09] <catern> which is, I'm going to use init_subclass to restrict who's allowed to subclass my class
[02:27:13] *** Joins: pycurious (~Adium@user/pycurious)
[02:27:15] <catern> by throwing in it
[02:27:17] <catern> muahahaha
[02:27:26] *** Joins: randall (~randall@user/randall)
[02:29:05] <bancroft> seems to work, coolio
[02:29:16] <bancroft> catern: lol
[02:29:46] <catern> actually, alternatively: is there any decent (evil) way to force subclasses to call super().__init__? I want an exception at object construction time if they don't do that
[02:30:09] <catern> (I'm sure they can work around it, but something to remind them...)
[02:31:22] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[02:33:45] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[02:34:14] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Remote host closed the connection)
[02:34:51] *** Quits: julia (~quassel@user/julia) (Quit: No Ping reply in 180 seconds.)
[02:35:12] <dre> set a flag; raise if not set.
[02:35:21] <dre> I think there's a __post_init__ func ?
[02:35:33] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[02:35:54] <dre> hm, only dataclasses.. hmm....
[02:36:10] *** Joins: julia (~quassel@user/julia)
[02:36:24] *** Joins: panella32 (~panella32@45.130.83.59)
[02:38:11] <dre> or override __getattr__ to look for the flag?
[02:38:34] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[02:39:06] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:39:53] <dre> alternatively check here? https://docs.python.org/3/reference/datamodel.html#object.__init_subclass__
[02:40:54] *** Joins: stonkey (~stonkey@user/stonkey)
[02:43:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:43:57] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:44:18] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[02:44:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:44:55] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:44:57] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:46:03] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Ping timeout: 256 seconds)
[02:46:18] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:46:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:46:51] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49)
[02:47:31] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[02:47:33] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:48:03] *** Quits: txhc4lif- (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[02:48:08] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49) (Client Quit)
[02:48:18] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49)
[02:49:21] *** Quits: mharig (~mharig@181.115.131.232) (Quit: WeeChat 3.4)
[02:50:14] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[02:51:37] *** Joins: ld_ (~a0z1@194.37.96.188)
[02:52:53] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[02:52:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:53:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[02:53:14] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49) (Read error: Connection reset by peer)
[02:54:21] <sveinse> Are there any ways to declare a dataclass half frozen? Fails on attr sets like `data.nonexisting = 1` but allows attr sets on the well known fields? What I want to protect against is setting of undeclared attrs.
[02:54:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:54:33] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:55:13] <jwodder> sveinse: I think using slots will get you that.
[02:55:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:55:30] <sveinse> jwodder: ah, yeah. Thanks
[02:55:30] *** Quits: hightower2 (~hightower@212.15.178.1) (Read error: Connection reset by peer)
[02:55:35] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49)
[02:56:04] *** Quits: cosimone (~user@93-44-186-159.ip98.fastwebnet.it) (Remote host closed the connection)
[02:56:52] <SnoopJ> I think you can also do Field(on_setattr=attr.setters.frozen) ?
[02:56:53] *** Joins: davis (~davis@70-130-78-202.lightspeed.rlghnc.sbcglobal.net)
[02:57:08] <SnoopJ> err, in attrs. I doubt dataclasses has that
[02:57:11] <davis> anyone know how to configure atom to use a pyenv environment?
[02:57:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:57:48] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[02:58:03] <SnoopJ> and it's called attrib() in attrs, not Field. I got my wires crossed bigtime there...
[02:58:10] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[02:58:18] *** Quits: george91 (~george91@103.137.204.24) (Remote host closed the connection)
[02:58:40] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:f1ee:19e:5cce:3c49) (Client Quit)
[02:58:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:00:41] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:01:08] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:01:30] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[03:02:48] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[03:03:30] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[03:03:33] *** Joins: george91 (~george91@103.137.204.24)
[03:03:58] *** Joins: goldcrest (~goldcrest@217.131.81.12)
[03:04:48] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[03:05:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:07:28] <aphysically> jinsun: not unreasonable honestly: https://github.com/microsoft/pyright/issues/2860
[03:08:00] *** Quits: george91 (~george91@103.137.204.24) (Ping timeout: 250 seconds)
[03:08:51] *** Quits: jwodder (~jwodder@2601:89:c600:f150:7177:9938:dade:ed83) (Quit: My work here is done.)
[03:09:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:10:07] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[03:12:16] <jinsun> aphysically: yeah kinda expected, I would have been surprised if he actually implemented big int support
[03:12:24] <jinsun> might be worth putting in the docs still, but maybe not since it is not a "real" problem
[03:14:02] *** Joins: akinode (~akinode@2a02:908:1394:cce0:495e:1c40:e2a7:59aa)
[03:14:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:15:50] *** Quits: kts (~kts@103.73.237.198) (Quit: Konversation terminated!)
[03:16:34] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[03:16:37] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[03:16:37] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:16:45] <lntl> Another one for you all: I have an iterable of many functions to apply to a list of many elements. My initial reaction is to reach for mp.Process and mp.Pip. Is that crazy?
[03:16:49] <akinode> hello, I have an algorithmic problem here where I want to determine the nearest neighbour in a two dimensional grid by using multi level grids with different resolutions. Is anyone here who is good coming up with good solutions to those types of problems?
[03:16:50] <akinode> https://stackoverflow.com/questions/70705629/calculating-the-nearest-neighbour-of-a-dot-in-a-2d-grid-by-using-a-multilevel-gr
[03:16:54] <lntl> *not sane
[03:17:01] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[03:17:23] <jinsun> SnoopJ: attrs has field too now and actually recommened in the new docs over attrib https://www.attrs.org/en/stable/names.html
[03:17:31] *** Joins: frmlof (~frmlof@70.243.238.191)
[03:19:26] *** jcass4 is now known as jcass4_
[03:21:48] *** jcass4_ is now known as jcass4__
[03:21:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[03:21:54] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:23:35] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:23:46] *** jcass4__ is now known as jcass4
[03:23:49] <lntl> akinode: s = np.sqrt((x-xo)**2 + (y-yo)**2)
[03:24:46] *** Joins: jazzy (~jaziz@user/jaziz)
[03:24:57] <lntl> map displacement so to point and select the min?
[03:25:06] <lntl> *to each
[03:25:49] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[03:28:26] *** Joins: bluedust (~bluedust@117.207.236.117)
[03:30:15] *** Joins: Pandadub (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[03:30:36] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:30:58] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Ping timeout: 250 seconds)
[03:31:34] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:32:24] *** Joins: summersault (~summersau@179.221.251.36)
[03:33:39] *** Quits: bluedust (~bluedust@117.207.236.117) (Ping timeout: 256 seconds)
[03:33:40] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[03:34:40] *** Joins: dez (uid92154@user/dez)
[03:35:09] *** Joins: Guest13 (~Guest13@91.187.96.195)
[03:35:23] *** Quits: Guest13 (~Guest13@91.187.96.195) (Client Quit)
[03:35:29] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:35:55] *** Joins: ano (~ano@user/ano)
[03:36:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[03:37:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:38:01] *** Joins: pycurious (~Adium@user/pycurious)
[03:38:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:39:14] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:39:38] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[03:40:50] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:edf5:da40:98ab:ea5e)
[03:42:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[03:43:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:43:47] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[03:44:07] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[03:44:11] *** Joins: pycurious (~Adium@user/pycurious)
[03:44:50] *** Quits: goldcrest (~goldcrest@217.131.81.12) (Quit: Leaving)
[03:45:06] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:45:07] *** Joins: goldcrest (~goldcrest@217.131.81.12)
[03:45:25] *** Quits: goldcrest (~goldcrest@217.131.81.12) (Remote host closed the connection)
[03:46:26] <SnoopJ> jinsun, ah, it's lowercase
[03:46:30] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[03:46:41] <SnoopJ> that's nice, one cutesy name to remember
[03:47:34] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[03:48:38] <SnoopJ> one less*
[03:49:25] *** Quits: marcello42 (~mp@2001:1a81:1398:8000:801:e062:2deb:7c8c) (Ping timeout: 240 seconds)
[03:50:17] <jinsun> the old naming was one of the reasons I liked dataclasses over attrs, .s and .ib just felt weird always, these new ones fix that
[03:50:22] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:51:29] *** Joins: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f)
[03:51:37] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[03:51:55] <Payam> Now I have a problem. How do I increase a outside variable in a innerfunction? https://bpa.st/EDDA
[03:52:00] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[03:52:14] <Payam> nonlocals?
[03:53:09] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:53:14] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0) (Quit: Esteri Libera)
[03:53:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:53:31] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0)
[03:53:38] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:1819:9698:2493:c0c0) (Client Quit)
[03:54:28] <coc0nut_> anyone knows how to find height with known sides in a triangle in python ? :p
[03:54:31] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[03:55:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:55:43] <retrosenator> yes
[03:55:46] <retrosenator> i know how
[03:56:16] <coc0nut_> would you love or at least like to share it ? :p
[03:56:33] <retrosenator> well it's a basic trig problem
[03:56:45] <retrosenator> you have the 3 sides of the triangle but dont know the height
[03:56:55] <retrosenator> there are really 3 answers depending on which side is the base
[03:57:00] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:57:07] <llanhmod> triangle have 3 sides?
[03:57:14] *** Joins: Wulf (~Wulf@user/wulf)
[03:57:36] <coc0nut_> hehe searching google for finding height of a triangle gives alot of find area by base and height
[03:57:37] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d) (Remote host closed the connection)
[03:57:46] <sveinse> coc0nut_: School task?
[03:58:20] <retrosenator> no you have 3 sides
[03:58:34] <coc0nut_> yup, im training for school course starting 31 january
[03:58:48] <retrosenator> you know the length of all 3 sides use law of cosine get teh angle then you just use the sin of that timest the side to get the height
[03:58:53] <retrosenator> problem is you dont know which side is the base
[03:58:58] <retrosenator> so as i said before there are 3 answer
[03:59:32] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3) (Quit: Leaving)
[03:59:57] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[04:00:51] <coc0nut_> hehe a = 3cm b = 10 cm c = 10.44030650891055 cm
[04:01:06] <coc0nut_> base is c
[04:01:12] <coc0nut_> now i need to find height
[04:01:42] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:45] <jinsun> you can get the area without trig with https://en.wikipedia.org/wiki/Heron's_formula
[04:01:58] <jinsun> then multiply by 2 and divide by base
[04:02:32] <retrosenator> nice
[04:02:53] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[04:03:05] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[04:03:23] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:03:24] *** Joins: KvL (~KvL@user/KvL)
[04:04:10] <aphysically> jinsun: https://github.com/microsoft/pyright/commit/98afe7110ea50cacb26b9ed8ea01f9e23660594c
[04:04:56] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[04:04:58] <aphysically> that's pretty reasonable, and it will prevent pyright from slowing down your IDE just because you tried to add a couple large mode strings
[04:05:04] <jinsun> aphysically: ah so it was not dealing with it earlier
[04:05:07] <coc0nut_> https://www.javatpoint.com/python-area-of-triangle guess i just did a jailbreak :D
[04:05:49] <aphysically> jinsun: new version was just published too, so we can play with it if you use the commandline version
[04:05:51] *** Quits: KvL (~KvL@user/KvL) (Client Quit)
[04:05:59] <aphysically> pylance does its own releases though ofc
[04:06:09] *** Joins: KvL (~KvL@user/KvL)
[04:06:20] <jinsun> and you got another one of your functions in the test cases for pyright :D
[04:06:30] *** Quits: retrosenator (~retrosena@207.sub-174-203-208.myvzw.com) (Quit: leaving)
[04:06:49] <aphysically> I think I have quite a lot in pyright test cases now actually (5 or 6?)
[04:06:56] <aphysically> maybe more
[04:07:01] *** Quits: grimvar (~grimvar@i5C75FEEC.versanet.de) (Ping timeout: 245 seconds)
[04:07:11] <jinsun> so it is capping at 64 combinations max, otherwise falling back to "normal" non-literal type
[04:07:49] <aphysically> and note it's 64 when starting, so you can do just a+b for example
[04:08:07] <aphysically> the problem is actually worse than I made it seem because I was aiming to give examples that resulted in sets with over 10^12 objects
[04:08:14] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 250 seconds)
[04:08:31] <aphysically> you can actually easily get over ~100k in ways that could plausibly be reached by accident or in some odd code
[04:08:43] *** Quits: KvL (~KvL@user/KvL) (Client Quit)
[04:08:47] *** Joins: grimvar (~grimvar@i5C75F583.versanet.de)
[04:09:19] <aphysically> which is obviously intractable already when you're doing math on the whole thing
[04:09:32] <aphysically> (intractable for a responsive IDE, I mean)
[04:10:11] *** Joins: summersault (~summersau@179.221.251.36)
[04:10:17] <jinsun> ah the new release has this fix
[04:10:25] *** Joins: Macuser (~Macuser@2600:1003:b46e:3be4:40c7:cbaf:893:5d51)
[04:10:51] <jinsun> I thought maybe there is a release before this fix that would be fun to play around with
[04:10:53] <nedbat> 3.11.0a4 is out :)
[04:11:03] *** Joins: KvL (~KvL@user/KvL)
[04:11:09] <aphysically> yes unfortunately we can't crash everyone's CI systems with literal math :(
[04:11:12] <aphysically> I mean :)
[04:11:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:11:17] *** Quits: mat001_ (~mat001@69.4.234.69) (Remote host closed the connection)
[04:11:33] <jinsun> nedbat: hah, you got it again in pyenv :)
[04:11:42] <nedbat> jinsun: first!
[04:11:59] <jinsun> 3.10.2 is also out
[04:12:46] <aphysically> jinsun: try my code here but only a*b and not the rest https://github.com/python/mypy/issues/11990#issuecomment-1012921819
[04:13:20] <aphysically> it won't bail since LHS and RHS are still <64 so you get a nice result
[04:13:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[04:13:54] <jinsun> ah nice, huge Union
[04:14:02] <jinsun> and it was fast enough
[04:14:37] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[04:14:40] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:14:44] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:14:46] <aphysically> yes it shouldn't be slow, just nice and big
[04:14:57] *** Quits: ld_ (~a0z1@194.37.96.188) (Ping timeout: 240 seconds)
[04:14:59] <aphysically> not sorted which could be improved I guess, but do we care?
[04:15:03] <aphysically> mmmmaybe
[04:15:10] *** Joins: mdemo (~mdemo@user/mdemo22)
[04:15:20] <aphysically> not sorting makes sense when you're respecting the original literal order, I don't know if it makes as much since when you're doing math on it
[04:15:43] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[04:16:29] *** Quits: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606) (Quit: ZNC - https://znc.in)
[04:16:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[04:16:58] *** Joins: summersault (~summersau@179.221.251.36)
[04:17:03] <jinsun> looks sorted here?
[04:17:08] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:17:10] <aphysically> hmmm
[04:17:22] <jinsun> you did a * b right? or something else
[04:17:30] <aphysically> a*b
[04:17:52] <aphysically> one sec
[04:18:09] <aphysically> I think maybe the CLI sorts but not the API
[04:18:24] <aphysically> yeah
[04:18:33] <aphysically> the LSP API I mean
[04:19:00] <jinsun> ah no, not sorted
[04:19:10] <jinsun> even in CLI
[04:19:28] <aphysically> oh wait, yes I see
[04:19:30] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:19:57] <jinsun> still generally increasing order and one digit numbers are in the beginning and 5 digits ones in the end
[04:20:10] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[04:20:12] <jinsun> but there are some case of 4xxx being after 5xxx
[04:20:55] *** Joins: mud (~mud@user/kadoban)
[04:21:25] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[04:21:27] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[04:22:24] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[04:22:27] <jinsun> basically after n * 229 it jumps to (n + 1) * (n+1)
[04:22:47] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:22:59] <jinsun> then it goes up to (n + 1) * 229 and so on
[04:23:18] <jinsun> which is kinda the expected order
[04:24:19] *** Parts: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[04:24:50] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (WeeChat 3.2)
[04:25:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:27:03] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[04:27:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[04:27:53] <aphysically> ya
[04:28:20] <akinode> lntl: what is xo and yo in your formula?
[04:29:50] *** Joins: fikran (~fikran@user/fikran)
[04:29:57] *** Joins: rje (~textual@50.35.241.164)
[04:33:43] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Ping timeout: 256 seconds)
[04:33:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:34:00] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[04:34:06] <aphysically> there are other ways to create the same explosion but he solved it the correct way so it shouldn't be possible now
[04:35:41] *** Joins: esv_ (~esv@74.124.178.154)
[04:36:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:37:28] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[04:37:59] <SnoopJ> jinsun, https://github.com/pyenv/pyenv/pull/2218
[04:38:08] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 250 seconds)
[04:38:34] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:38:35] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:39:24] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:40:15] <jinsun> SnoopJ: yay!
[04:44:30] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[04:46:13] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:edf5:da40:98ab:ea5e) (Ping timeout: 240 seconds)
[04:47:40] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[04:47:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[04:48:03] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:49:14] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:50:22] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:51:08] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 250 seconds)
[04:51:38] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:55:15] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Remote host closed the connection)
[04:57:00] *** Joins: summersault (~summersau@179.221.251.36)
[04:57:12] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:57:54] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[04:57:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:59:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[04:59:32] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[04:59:43] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[05:00:23] *** Joins: mrproper_ (sid382572@id-382572.uxbridge.irccloud.com)
[05:00:24] *** Joins: nem_ (sid113421@user/nem)
[05:00:24] *** Joins: matthewwilkes_ (sid500242@id-500242.uxbridge.irccloud.com)
[05:00:24] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[05:00:25] *** Joins: rburton_ (rburton@user/rburton)
[05:00:25] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[05:00:25] *** Joins: LyndsySimon_ (sid34452@id-34452.lymington.irccloud.com)
[05:00:27] *** Joins: mustache_ride_ (sid451683@user/mustache-ride/x-6533344)
[05:00:28] *** Joins: MrNaz_ (sid133418@id-133418.uxbridge.irccloud.com)
[05:00:28] *** Joins: frodl_ (sid527064@user/frodl)
[05:00:30] *** Joins: dunc_ (sid16@id-16.uxbridge.irccloud.com)
[05:00:31] *** Joins: graingert_ (sid128301@id-128301.tinside.irccloud.com)
[05:00:32] *** Joins: greyblue9_ (sid500829@id-500829.ilkley.irccloud.com)
[05:00:35] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[05:00:36] *** Joins: jesse-s_ (sid98646@id-98646.hampstead.irccloud.com)
[05:00:56] *** Joins: pavelow_ (~pavelow@opticalchimp.com)
[05:00:58] *** Joins: pycurious (~Adium@user/pycurious)
[05:01:01] *** Joins: daniel3 (daniel@user/daniel2)
[05:01:36] *** Joins: yano1 (~yano@ircpuzzles/staff/yano)
[05:01:37] *** Joins: taeaad_ (~taeaad@user/taeaad)
[05:01:42] *** Joins: amaenli2 (~amaenli@aries.uberspace.de)
[05:01:47] *** Joins: shodan45_ (~quassel@107.161.22.155)
[05:01:49] *** Joins: harleypig9 (thelounge@harleypig.com)
[05:01:51] *** Joins: gizmo1 (~gizmo@45.91.125.2)
[05:01:52] *** Joins: znpy5 (~znpy@user/znpy)
[05:02:03] *** Joins: erica1 (~erica@user/erica)
[05:02:10] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[05:02:19] *** Joins: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de)
[05:02:33] *** Joins: [dpk] (~dpk@xn--issum-vva.nonceword.org)
[05:02:39] *** Joins: MrWu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[05:02:44] *** Joins: TechSmurf (~tech@user/techsmurf)
[05:02:46] *** Joins: cmk (~cole@user/cole)
[05:02:46] *** Joins: lorenzosu_ (~lorenzosu@user/lorenzosu)
[05:02:47] *** Joins: Ennea_ (~Ennea@user/ennea)
[05:02:47] *** Joins: nyany (~nyany@dronebl/admin/cat)
[05:02:47] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[05:02:47] *** Joins: MJ94_ (mj94@user/mj94)
[05:02:48] *** Joins: lidless_ (lidless@2600:3c02::f03c:92ff:fe1d:6a82)
[05:02:48] *** Joins: Koffa_ (~jkohvakk@user/koffa)
[05:02:49] *** Joins: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:02:50] *** Joins: Balzy_ (~Balzy@host-80-116-10-150.retail.telecomitalia.it)
[05:02:58] *** Joins: drincruz- (drincruz@2607:5300:203:3f52::19)
[05:02:59] *** Joins: giesen (~ggiesen@ego.giesen.me)
[05:03:08] *** Joins: catbread (~noise@user/catbeard)
[05:03:21] *** Joins: truth2 (~truth@user/truth)
[05:03:23] *** Joins: or4n_ (~or4n@gerbera.qkka.org)
[05:03:35] *** Joins: phillhoc1ing (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com)
[05:03:35] *** Joins: dale_ (dale@user/dale)
[05:03:36] *** Joins: bid0uille (~user_name@trois.potager.org)
[05:03:53] *** Joins: greaser|q (greaser@antihype.space)
[05:03:54] *** Joins: sy (~sy@zm.is)
[05:03:56] *** Joins: mepholic (~mepholic@flux.hxx.in)
[05:04:04] *** Joins: Spiney_ (~Spiney@2604:a880:400:d0::1d82:b001)
[05:04:07] *** Joins: waveform_ (~quassel@waveform.plus.com)
[05:04:08] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[05:04:10] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[05:04:20] *** Joins: dTal_ (quassel@dragonbox/wizzard/dtal)
[05:04:22] *** Joins: vegii_ (~quassel@2001:470:1f18:3aa:30f::5439)
[05:04:23] *** Joins: Henryx_ (~ebianchi@2a01:4f8:1c0c:76ad::1)
[05:04:24] *** Joins: grandfso_ (~quassel@199.232.237.35.bc.googleusercontent.com)
[05:04:44] *** Joins: skeels_ (21030cf582@2604:bf00:561:2000::237)
[05:04:51] *** Joins: tomaw_ (tom@libera/staff/tomaw)
[05:04:51] *** Joins: Cheaterm1n (~Cheaterma@user/cheaterman)
[05:04:52] *** Joins: _janus- (~janus@blotter.ld-linux.so)
[05:04:53] *** Joins: adamchai1z (~adamj@51.15.34.126)
[05:04:53] *** Joins: madduck_ (~madduck@user/madduck)
[05:05:05] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[05:05:12] *** Joins: vodkra (~vodkra@user/vodkra)
[05:05:22] *** Joins: TML_ (~tml@user/tml)
[05:05:24] *** Joins: kronicma1 (user73386@neotame.csclub.uwaterloo.ca)
[05:05:31] *** Joins: byzandula1 (~byzandula@beerbq.net)
[05:05:32] *** Joins: B33F_1338 (~b33f1337@host.b33f1337.com)
[05:05:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[05:05:37] *** Joins: toine (~antoine@2001:41d0:e:41f::1)
[05:06:38] *** Joins: pycurious (~Adium@user/pycurious)
[05:07:44] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:07:49] *** Joins: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6)
[05:08:20] *** Quits: Macuser (~Macuser@2600:1003:b46e:3be4:40c7:cbaf:893:5d51) (Quit: Textual IRC Client: www.textualapp.com)
[05:08:32] *** Joins: Ninpo_ (~Ninpo@leviathan.qap.la)
[05:08:37] *** Joins: n1000_ (~n1000@user/n1000)
[05:08:52] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[05:09:04] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: nem (sid113421@user/nem) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** jesse-s_ is now known as jesse-s
[05:09:04] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 240 seconds)
[05:09:04] *** matthewwilkes_ is now known as matthewwilkes
[05:09:04] *** Quits: Ennea (~Ennea@user/ennea) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** nem_ is now known as nem
[05:09:05] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Ping timeout: 240 seconds)
[05:09:05] *** LyndsySimon_ is now known as LyndsySimon
[05:09:05] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: pavelow (~pavelow@opticalchimp.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: Koffa (jkohvakk@user/koffa) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: mrproper (sid382572@id-382572.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: truth1 (~truth@user/truth) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: giesen_ (~ggiesen@ego.giesen.me) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: catbeard (~noise@user/catbeard) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: RackSmurf (~tech@user/techsmurf) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: phlixi (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[05:09:05] *** Ennea_ is now known as Ennea
[05:09:05] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: dale (dale@user/dale) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: drincruz (drincruz@2607:5300:203:3f52::19) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: MJ94 (mj94@user/mj94) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: Chex (~Chex@user/chex) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: Balzy (~Balzy@host-80-116-10-150.pool80116.interbusiness.it) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: phillhocking (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: or4n (~or4n@gerbera.qkka.org) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (Ping timeout: 240 seconds)
[05:09:05] *** Koffa_ is now known as Koffa
[05:09:05] *** decartes_ is now known as decartes
[05:09:06] *** Quits: TML (~tml@user/tml) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: tpr1 (~tpr@user/tpr) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: vodkra_ (~vodkra@user/vodkra) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: daniel2 (daniel@user/daniel2) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Ping timeout: 240 seconds)
[05:09:06] *** mustache_ride_ is now known as mustache_ride
[05:09:06] *** rburton_ is now known as rburton
[05:09:06] *** greyblue9_ is now known as greyblue9
[05:09:06] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Ping timeout: 240 seconds)
[05:09:06] *** dale_ is now known as dale
[05:09:06] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: The-Compiler (~compiler@the-compiler.org) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: peanuter (~peanuter@static.190.220.201.138.clients.your-server.de) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: gizmo_ (~gizmo@45.91.125.2) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: adamchainz (~adamj@51.15.34.126) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: leosilva (~leosilva@canonical/leosilva) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: znpy (~znpy@user/znpy) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: taeaad (~taeaad@user/taeaad) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: kronicmage (user75299@neotame.csclub.uwaterloo.ca) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: ixjlyons__ (kenny@2600:3c01::f03c:91ff:fe80:22c6) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: arti_ (~arti@2001:bb8:4008:2020::f) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Forsaken87_ (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: syx (~sy@zm.is) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Duck (~nyany@dronebl/admin/cat) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: meph (~mepholic@flux.hxx.in) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: _janus (~janus@89.238.83.207) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: erica (~erica@user/erica) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: skeels (21030cf582@2604:bf00:561:2000::237) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: B33F_1337 (~b33f1337@host.b33f1337.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: amaenli (~amaenli@user/amaenli) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: toine42 (~antoine@2001:41d0:e:41f::1) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: byzandula (~byzandula@beerbq.net) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Ninpo (~Ninpo@user/ninpo) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: cole (~cole@user/cole) (Ping timeout: 240 seconds)
[05:09:07] *** cmk is now known as cole
[05:09:07] *** amaenli2 is now known as amaenli
[05:09:07] *** MrNaz_ is now known as MrNaz
[05:09:07] *** dunc_ is now known as dunc
[05:09:07] *** znpy5 is now known as znpy
[05:09:07] *** MJ94_ is now known as MJ94
[05:09:07] *** frodl_ is now known as frodl
[05:09:07] *** graingert_ is now known as graingert
[05:09:07] *** nyany is now known as Duck
[05:09:08] *** skeels_ is now known as skeels
[05:09:09] *** harleypig9 is now known as harleypig
[05:09:14] *** madduck_ is now known as madduck
[05:09:16] *** Quits: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Remote host closed the connection)
[05:09:32] *** Quits: tomaw (tom@libera/staff/tomaw) (Ping timeout: 600 seconds)
[05:09:32] *** tomaw_ is now known as tomaw
[05:09:35] *** erica1 is now known as erica
[05:10:06] *** Joins: epony (~epony@user/epony)
[05:10:13] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:10:28] *** yano1 is now known as yano
[05:11:07] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[05:11:41] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[05:11:49] *** Parts: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) ()
[05:12:52] *** Joins: pycurious (~Adium@user/pycurious)
[05:13:50] *** Joins: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[05:14:04] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:14:22] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[05:15:20] *** Quits: Pandadub (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[05:15:38] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[05:15:49] *** Joins: tpr1 (~tpr@user/tpr)
[05:16:05] *** catbread is now known as catbeard
[05:16:11] *** Joins: The-Compiler (~compiler@the-compiler.org)
[05:16:11] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[05:16:26] *** Joins: SuperLag (~akulbe@user/superlag)
[05:16:36] *** Joins: leosilva (~leosilva@canonical/leosilva)
[05:17:24] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[05:17:31] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:19:13] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[05:19:15] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[05:19:16] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[05:19:51] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[05:19:54] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[05:20:11] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[05:20:41] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[05:21:11] *** Quits: Pddy (~Pddy@user/SmplyPddy) (Ping timeout: 245 seconds)
[05:22:26] *** Quits: panella32 (~panella32@45.130.83.59) (Quit: Textual IRC Client: www.textualapp.com)
[05:23:21] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[05:24:20] *** Joins: monkeycoder (~monkey@2001:d08:1b83:205d:1692:d3f7:29c4:6825)
[05:26:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:27:46] <JayDoubleu> anyone knows how should I go about using python as a wrapper for another program while keeping all stdin, stdout and return code ?
[05:28:02] <nedbat> JayDoubleu: you want to use the subprocess module
[05:28:33] <JayDoubleu> will it work with things like piping to it and exiting with the same return code as the program ?
[05:29:09] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:29:24] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[05:29:33] *** Joins: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:41fe:af59:d519:f152)
[05:30:33] *** Quits: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:41fe:af59:d519:f152) (Read error: Connection reset by peer)
[05:31:29] <JayDoubleu> And then, should it be call, run Popen ?
[05:32:37] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:85aa:273d:57aa:813d) (Ping timeout: 240 seconds)
[05:33:44] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[05:33:55] *** Joins: arinov (~arinov@213.194.126.155)
[05:35:50] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[05:36:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:38:18] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[05:39:20] *** Joins: califax- (~califax@user/califx)
[05:40:06] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[05:41:03] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:41:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[05:42:04] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:42:16] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:42:28] *** brabrax_ is now known as brabrax
[05:42:36] *** Joins: esther (~esther@2607:fb90:5fe4:9a72:66de:6d00:5c91:174c)
[05:42:50] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:43:00] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:43:00] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:43:01] *** califax- is now known as califax
[05:43:09] <nedbat> JayDoubleu: you can definitely connect things to the stdin/stdout, and you will get the status code at the end, and can do what you want with it, including exiting your own program with it.
[05:43:21] *** Joins: ano (~ano@user/ano)
[05:43:23] <SnoopJ> yea, the tools are pretty rich in terms of what they make possible
[05:43:59] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:44:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[05:44:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:44:18] *** Joins: califax (~califax@user/califx)
[05:44:29] <SnoopJ> Popen is probably what you want for more-than-simple tasks
[05:45:41] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 256 seconds)
[05:46:06] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[05:46:39] <nedbat> JayDoubleu: subprocess.run will do what you need.
[05:47:16] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:47:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[05:48:00] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[05:49:03] <JayDoubleu> thanks. I'll have a look, was looking now at subprocess.call and it seems to work ok and directly returns the exit code of spawned command which i can return with exit but doesnt seem to work with piping to it etc.
[05:50:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:51:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:51:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:51:55] *** Quits: Ashburry (~Ashburry@184.69.89.188) (Ping timeout: 256 seconds)
[05:54:05] *** Joins: parv (~quass@user/parv)
[05:55:31] *** Quits: ecool (~ecool@user/ecool) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[05:56:08] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 252 seconds)
[05:57:29] *** Joins: ecool (~ecool@ecool.dev)
[05:57:51] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-44a9-d05e-caa7-62ef.res6.spectrum.com) (Read error: Connection reset by peer)
[05:58:26] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[05:58:32] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[05:59:30] *** Joins: seednode99 (~seednode@user/seednode)
[05:59:34] *** Joins: karlnashville (~karl@c-69-180-215-84.hsd1.ky.comcast.net)
[05:59:47] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:02:38] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[06:02:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:04:20] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:04:20] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[06:04:37] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 240 seconds)
[06:05:04] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[06:05:06] *** Joins: ano (~ano@user/ano)
[06:06:13] *** Quits: kn07_ (~kn07_@86.121.166.134) (Quit: Leaving)
[06:07:10] *** Joins: OPK (~OPK@user/opk)
[06:07:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:07:48] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[06:10:16] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[06:10:52] *** Joins: frost (~frost@user/frost)
[06:13:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:15:55] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[06:15:55] *** Joins: greaser|q (greaser@user/greasemonkey)
[06:16:58] *** greaser|q is now known as GreaseMonkey
[06:17:37] *** Quits: esther (~esther@2607:fb90:5fe4:9a72:66de:6d00:5c91:174c) (Ping timeout: 240 seconds)
[06:18:09] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[06:19:56] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[06:20:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:22:50] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:24:33] *** Joins: p-i-_ (Ohmu@gateway/vpn/protonvpn/ohmu)
[06:24:57] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[06:25:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:27:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:27:47] *** Quits: p-i- (Ohmu@gateway/vpn/protonvpn/ohmu) (Ping timeout: 256 seconds)
[06:28:11] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:28:25] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[06:28:30] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[06:29:24] <spawnmc> can someone help me understand why I'm getting errors on line 2 and line 7? https://bpa.st/SALA
[06:29:50] <spawnmc> I figure line 2 probably has to do with type, but not sure how I should fix that. and the error on line 7 is confusing me
[06:30:12] <moonmoon> input() returns a str
[06:30:37] *** Quits: Xano (~Xano@host86-151-110-89.range86-151.btcentralplus.com) (Ping timeout: 256 seconds)
[06:30:41] <spawnmc> hmm, okay so i think i can specify that as an int or a float
[06:31:03] *** strungout is now known as suffer
[06:31:13] <JayDoubleu> `val = int(input("Enter temperature: "))`
[06:31:16] <moonmoon> indeed. val = float(input("Enter temperature: "))
[06:31:40] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Ping timeout: 250 seconds)
[06:31:40] *** debayer948 is now known as debayer94
[06:32:23] <spawnmc> oh cool
[06:32:33] <spawnmc> yeah that fixed it, there was no error in line 7
[06:32:37] <spawnmc> thx
[06:32:43] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:33:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:34:56] *** Joins: norbinaa (~be3uykpy@2a00:a040:19a:b060:b441:7875:2785:6006)
[06:36:39] *** Joins: rolo (~rolo@2a02:8108:8d80:7aa4:b905:8a27:e316:18ec)
[06:37:02] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[06:37:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[06:37:51] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:b441:7875:2785:6006) (Ping timeout: 245 seconds)
[06:38:57] <braxas> as far as I understand function calls are quite expensive in python, is there some way to do this more optimally: https://github.com/RDFLib/rdflib/blob/8bb9dbdbea34490373253466533fff2cef5279d7/rdflib/compat.py#L102-L120
[06:39:11] *** Joins: fikran (~fikran@user/fikran)
[06:40:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:40:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:40:49] *** Quits: rolo (~rolo@2a02:8108:8d80:7aa4:b905:8a27:e316:18ec) (Client Quit)
[06:42:02] *** Joins: ano (~ano@user/ano)
[06:42:27] <KirkMcDonald> braxas: Not sure I see the point in calling str.translate here, when you could just look the thing up in the dict directly.
[06:42:55] <braxas> mainly for speed, I think it is slightly faster
[06:43:06] *** Quits: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f) (Quit: WeeChat 3.4)
[06:43:19] <braxas> but to be fair I think most of the cost is in calling the function
[06:43:41] <KirkMcDonald> Probably.
[06:43:58] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:44:05] *** Quits: julia (~quassel@user/julia) (Quit: No Ping reply in 180 seconds.)
[06:44:27] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[06:44:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:45:13] <KirkMcDonald> Not sure you can sensibly avoid it, at least not without avoiding re.sub() in the first place, and that's pretty likely to be slower anyway.
[06:46:18] *** Quits: lntl (~joey@24.136.23.254) (Remote host closed the connection)
[06:46:30] <KirkMcDonald> I'm dubious about str.translate being faster. It's still a dict lookup.
[06:47:03] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[06:47:13] <braxas> but what is the point of maketrans otherwise
[06:47:44] *** Joins: millido (~millido@84.210.150.128)
[06:47:46] <KirkMcDonald> Well, in this case you're guaranteed that the call is performing exactly one replacement.
[06:48:18] <KirkMcDonald> translate makes a *little* more sense when you're performing multiple replacements at once.
[06:49:03] <braxas> I will re-test the performance, maybe you are right
[06:49:19] <KirkMcDonald> It also makes a little more sense in its bytes.translate (or Python 2's str.translate) incarnation, where it's an array lookup rather than a dict lookup.
[06:49:45] <braxas> I actually espected it would be that, but
[06:50:09] <braxas> but I guess it can't really be
[06:50:10] <KirkMcDonald> The move to Unicode strings means you can't just make an array with an entry for each code point.
[06:50:23] <KirkMcDonald> So: A dict.
[06:51:29] <braxas> thanks for the feedback KirkMcDonald, good to know and think about, will test tomorrow and let you know
[06:51:34] <spawnmc> how hard would it be to create a simple android  mobile app that converts fahreheint to celsius using python?
[06:51:57] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:35b:d559:ff3f:530f)
[06:52:28] <spawnmc> or vice versa
[06:52:49] <spawnmc> the ui would be a drop down to select fahreheint or celsius, and a field to input a number
[06:52:59] <braxas> as hard as a string is long
[06:53:12] <JayDoubleu> is anyone aware of any functioning python pty code which would handle automatically resizing terminal when gtk window is resized?
[06:53:22] <KirkMcDonald> What if the UI were just two fields, one for F and one for C, and entering a number into one updates the number in the other?
[06:53:27] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[06:53:29] *** Quits: karlnashville (~karl@c-69-180-215-84.hsd1.ky.comcast.net) (Quit: Konversation terminated!)
[06:53:45] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:53:51] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[06:54:04] <spawnmc> something like that would work too yeah
[06:54:13] *** Joins: Chex (~Chex@user/chex)
[06:54:18] *** Joins: triffid (~triffid@gateway/tor-sasl/triffid)
[06:54:22] <spawnmc> any tips on what i should be looking at?
[06:54:36] <KirkMcDonald> I've never done Python on Android, sorry.
[06:55:58] *** Quits: akinode (~akinode@2a02:908:1394:cce0:495e:1c40:e2a7:59aa) (Ping timeout: 256 seconds)
[06:56:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[06:58:13] *** Quits: linux-phaedrus (~linux-sis@104.36.253.60) (Quit: Leaving)
[06:58:31] *** Quits: parv (~quass@user/parv) (Quit: parv)
[06:59:06] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[06:59:43] *** Joins: julia (~quassel@user/julia)
[07:01:12] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:02:53] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[07:03:43] <spawnmc> does anyone actually use dir() to find stuff?
[07:05:11] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:06:19] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[07:09:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:09:21] *** redj_ is now known as redj
[07:10:03] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:11:06] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[07:11:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[07:13:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:13:30] *** Joins: Wulf (~Wulf@user/wulf)
[07:14:24] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[07:14:50] *** Joins: spawnmc (~spawnmc@12.26.0.2)
[07:14:56] *** Quits: spawnmc (~spawnmc@12.26.0.2) (Changing host)
[07:14:56] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[07:17:16] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[07:18:09] *** Joins: adeliktas5 (~adeliktas@i59F4D467.versanet.de)
[07:18:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:19:23] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Quit: Leaving...)
[07:19:55] *** Quits: adeliktas (~adeliktas@i59F5F0DE.versanet.de) (Ping timeout: 256 seconds)
[07:19:55] *** adeliktas5 is now known as adeliktas
[07:20:47] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-5139-4b89-ae8e-7237.res6.spectrum.com)
[07:21:17] *** Quits: MrFantastik (~f@2607:f598:bbda:4f0:ab71:50b:1d77:f144) (Ping timeout: 240 seconds)
[07:21:59] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[07:22:29] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b926-4a69-3dcb-b94a.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:23:00] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[07:23:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[07:23:21] *** Joins: spawnmc (~spawnmc@12.26.0.2)
[07:24:45] *** Joins: Wulf (~Wulf@user/wulf)
[07:25:54] *** Joins: mud (~mud@user/kadoban)
[07:27:16] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[07:27:42] *** Quits: spawnmc (~spawnmc@12.26.0.2) (Ping timeout: 256 seconds)
[07:28:36] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[07:28:37] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[07:30:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:30:45] *** Joins: bluedust (~bluedust@117.207.236.117)
[07:31:24] *** Joins: esv (~esv@74.124.178.154)
[07:31:48] *** Quits: esv_ (~esv@74.124.178.154) (Quit: Leaving)
[07:31:53] <phy1729> How do I union a list of dictionaries? I want to {**x.foo() for x in xs} but that's not valid syntax
[07:33:17] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[07:34:51] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[07:35:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:35:22] *** Quits: bluedust (~bluedust@117.207.236.117) (Ping timeout: 250 seconds)
[07:35:33] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-5139-4b89-ae8e-7237.res6.spectrum.com) (Quit: jarthur_)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:04] <Repiphany> phy1729: Would `{k:v for x in xs for k, v in x.foo().items()}` work
[07:37:09] *** Joins: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf)
[07:37:32] <phy1729> It's not as pretty, but working beats pretty
[07:39:42] <phy1729> Thanks
[07:39:53] <esv> have you tried the merge operator? mergedDict = dict1 | dict2
[07:40:50] <esv> www.linuxscrew.com/python-merge-dictionaries
[07:41:04] <phy1729> It's a list not just 2
[07:41:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:41:28] <esv> k
[07:41:42] <very_sneaky> !paste
[07:41:54] <phy1729> very_sneaky: it's in the topic
[07:42:04] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[07:42:37] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:42:52] <Repiphany> `functools.reduce(operator.or_, list_of_dicts)` uglier than the comprehension though
[07:43:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[07:43:35] <phy1729> Yeah also found ChainMap, but that seems like severe overkill
[07:43:39] <very_sneaky> i was trying to get infobob to say something - but it's not here?
[07:44:02] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[07:44:36] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[07:46:23] *** Quits: sreve (~quassel@p4ff44df5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:46:28] *** Joins: sreve_ (~quassel@p54a71bc6.dip0.t-ipconnect.de)
[07:46:45] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[07:46:57] *** Joins: spawnmc (~spawnmc@047-036-115-142.res.spectrum.com)
[07:50:07] *** Joins: fling (~fling@user/fling)
[07:51:24] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[07:54:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:54:34] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[07:54:49] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[07:55:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:55:46] *** Joins: humberto1 (~humbertow@189.236.30.209)
[07:56:10] *** Quits: humbertowoody (~humbertow@189.132.111.57) (Ping timeout: 250 seconds)
[07:58:28] *** Joins: Guest68 (~Guest68@2001:ee0:545a:8420:e2bf:7193:3bf6:33c0)
[08:00:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:34] *** Quits: Guest68 (~Guest68@2001:ee0:545a:8420:e2bf:7193:3bf6:33c0) (Client Quit)
[08:03:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[08:04:18] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[08:05:03] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[08:06:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:07:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:08:25] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Remote host closed the connection)
[08:10:47] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:13:13] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[08:13:44] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[08:13:45] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:15:07] *** Joins: p-i- (Ohmu@gateway/vpn/protonvpn/ohmu)
[08:16:04] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[08:16:26] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[08:16:26] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[08:16:26] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:18:17] *** Joins: bluedust (~bluedust@117.207.236.117)
[08:18:41] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[08:18:42] *** Quits: p-i-_ (Ohmu@gateway/vpn/protonvpn/ohmu) (Ping timeout: 250 seconds)
[08:18:48] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[08:22:32] *** Quits: bluedust (~bluedust@117.207.236.117) (Ping timeout: 240 seconds)
[08:27:11] *** Joins: stblaha (~stblaha@user/stblaha)
[08:28:23] *** Quits: k2ro (~k2ro@195.158.249.12) (Quit: k2ro)
[08:36:37] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:37:09] *** Quits: davef (~davef@user/davef) (Quit: Quit)
[08:37:22] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[08:38:10] *** Quits: triffid (~triffid@gateway/tor-sasl/triffid) (Remote host closed the connection)
[08:38:31] *** Joins: triffid (~triffid@gateway/tor-sasl/triffid)
[08:41:52] <aphysically> jinsun: https://github.com/microsoft/pyright/commit/207c583a8e55d9b8a18eb68f209a4f25a40e910c
[08:43:47] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 256 seconds)
[08:43:53] *** Joins: davef (~davef@user/davef)
[08:44:14] *** Joins: c4017w (~c4017@209.52.68.8)
[08:44:29] *** Joins: AlanMD_ (~AlanMD@5-12-13-215.residential.rdsnet.ro)
[08:44:54] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:45:33] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[08:45:47] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[08:46:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[08:48:06] *** Quits: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net) (Read error: Connection reset by peer)
[08:48:09] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[08:48:32] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:48:32] *** Joins: fikran (~fikran@user/fikran)
[08:49:02] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 250 seconds)
[08:49:08] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[08:49:14] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[08:49:52] *** Joins: mickey87 (~user@user/mickey)
[08:50:34] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:50:48] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[08:50:51] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[08:50:51] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[08:50:52] *** mickey87 is now known as mickey8
[08:51:15] *** Joins: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net)
[08:52:33] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[08:53:26] <aphysically> im on my 8th interview with a company 🙏
[08:54:38] *** Quits: triffid (~triffid@gateway/tor-sasl/triffid) (Quit: triffid)
[08:55:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:58:27] *** Joins: c4017w (~c4017@209.52.68.8)
[08:58:36] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:2a76:905a:db73:1bc5:db75)
[08:59:40] *** Quits: spawnmc (~spawnmc@047-036-115-142.res.spectrum.com) (Quit: Client closed)
[09:01:02] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:01:04] *** Joins: han-solo (~han-solo@user/han-solo)
[09:01:07] *** Joins: swistak (~swistak@185.21.216.141)
[09:02:28] *** Quits: p-i- (Ohmu@gateway/vpn/protonvpn/ohmu) (Ping timeout: 250 seconds)
[09:06:27] *** coc0nut_ is now known as coc0nut
[09:06:34] *** Joins: matsaman (~matsaman@user/matsaman)
[09:09:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[09:10:16] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[09:13:00] *** Joins: cheater (~Username@user/cheater)
[09:15:58] *** Joins: fef (~thedawn@user/thedawn)
[09:17:17] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[09:18:54] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[09:20:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:24:04] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[09:24:23] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:25:00] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[09:27:11] *** Joins: hams (~hams@user/hams)
[09:28:49] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:29:29] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[09:29:42] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:32:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:32:27] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:33:17] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:33:39] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 256 seconds)
[09:33:43] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[09:35:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:35:12] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:35:31] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:35:43] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:3834:ff6b:a72a:81e2)
[09:38:09] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Max SendQ exceeded)
[09:38:38] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:40:00] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:3834:ff6b:a72a:81e2) (Client Quit)
[09:41:06] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Max SendQ exceeded)
[09:42:17] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:42:22] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:42:43] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:43:04] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:44:14] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Client Quit)
[09:45:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:46:00] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:46:30] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:50:01] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[09:51:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:54:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:2a76:903f:6c67:fa60:aa68)
[09:54:22] *** Joins: humberto1 (~humbertow@189.236.30.209)
[09:55:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:57:30] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[09:57:36] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[09:57:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:2a76:905a:db73:1bc5:db75) (Ping timeout: 240 seconds)
[09:58:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:00:21] *** Joins: Terexen (~terexen@user/terexen)
[10:01:39] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de)
[10:01:59] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:05:19] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:08:14] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:09:03] *** Joins: uxemacs (~timothy@2607:fb90:7da3:6c4b::164)
[10:09:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[10:09:38] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[10:18:02] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[10:18:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:21:00] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:21:41] *** Joins: humberto1 (~humbertow@189.236.30.209)
[10:22:23] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:22:48] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[10:23:49] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Ping timeout: 240 seconds)
[10:26:21] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[10:30:32] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[10:30:32] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:31:14] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b219:7bdc:e576:c799)
[10:32:39] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[10:32:39] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-16-71.w82-124.abo.wanadoo.fr)
[10:32:43] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b219:7bdc:e576:c799) (Remote host closed the connection)
[10:34:25] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7e95:9d65:a7de:195b)
[10:34:33] *** Joins: aniketgm (~aniketgm@49.36.57.63)
[10:35:36] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:35:49] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[10:36:47] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[10:38:11] *** Joins: someuser (~user@197.54.99.203)
[10:39:58] *** Joins: crashrep (~crashrep@user/crashrep)
[10:42:47] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[10:43:38] *** Quits: uxemacs (~timothy@2607:fb90:7da3:6c4b::164) (Quit: Konversation terminated!)
[10:44:55] *** Joins: humberto1 (~humbertow@189.236.30.209)
[10:45:16] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Remote host closed the connection)
[10:45:35] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[10:47:25] *** Joins: bencd_ (~bencd@142.59.168.97)
[10:47:26] *** Quits: bencd (~bencd@142.59.168.97) (Read error: Connection reset by peer)
[10:47:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:49:05] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[10:49:24] *** Joins: raym (~raym@user/raym)
[10:49:57] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[10:50:40] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[10:50:56] *** Joins: anotheruser (~user@45.130.86.11)
[10:51:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:51:40] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[10:52:04] *** Joins: mat001 (~mat001@69.4.234.57)
[10:52:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:54:16] *** Quits: someuser (~user@197.54.99.203) (Ping timeout: 250 seconds)
[10:55:07] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[10:55:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:55:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:56:11] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[10:56:17] *** Quits: mat001 (~mat001@69.4.234.57) (Ping timeout: 240 seconds)
[10:56:50] *** Joins: Oddity (~Oddity@user/oddity)
[10:57:53] *** Joins: fikran (~fikran@user/fikran)
[10:58:43] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:59:00] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:13] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[10:59:25] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[10:59:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:45] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[11:00:10] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[11:01:41] *** Joins: k2ro (~k2ro@195.158.249.25)
[11:02:53] *** Quits: jimklo (~jimklo@2600:6c52:6f00:ae5f:85e7:4c79:1315:9ef2) (Quit: Leaving...)
[11:03:46] *** Joins: mthipparthi (~mthippart@124.170.161.78)
[11:05:24] *** Quits: mthipparthi (~mthippart@124.170.161.78) (Client Quit)
[11:08:31] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (Remote host closed the connection)
[11:09:21] *** Joins: none (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[11:09:25] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Ping timeout: 256 seconds)
[11:09:37] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[11:09:40] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Read error: Connection reset by peer)
[11:10:02] <dba> is this https://bpa.st/ZZ6A something doable in python. trying to call a function by a variable where the name of the funciotn = the variable?
[11:10:40] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[11:10:51] *** Joins: justm33_ (~Username@82-171-85-246.fixed.kpn.net)
[11:10:55] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:11:02] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:11:08] <The-Compiler> dba: ideally you'd just store the function object instead of a string with its name, i.e. foo and not 'foo'
[11:11:24] <han-solo> dba: `vars()[n]()`
[11:11:37] <The-Compiler> han-solo: yes but... why
[11:12:10] <han-solo> uh...yeah...i kinda wondered if they get the names of the function from somewhere
[11:12:18] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:12:30] <han-solo> but yeah usually people just store the function object if possible
[11:12:43] *** Joins: rendar (~rendar@user/rendar)
[11:12:53] <ssbr> dba: normally you'd keep a reference to the function itself rather than its name, like The-Compiler suggests. If it's a runtime lookup of functions based on string lookup, you'd have a dictionary mapping names to functions -- e.g. {"foo": foo}
[11:13:11] *** Joins: seednode99 (~seednode@user/seednode)
[11:13:12] <The-Compiler> there's probably still a much better solution if that's the case (e.g. having a module of exported functions and getattr, or even a dict registering them, maybe via a decorator)
[11:13:19] <ssbr> vars() is a quick hacky way of building such a dict, but it will also include other functions, so it's fragile and risky. Do not recommend.
[11:13:23] *** Quits: justm33 (~Username@82-171-85-246.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:13:30] <ssbr> (also interacts poorly with automated tooling, which will think foo is unused)
[11:13:31] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca)
[11:13:49] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[11:14:13] *** Cyp_ is now known as Cyp
[11:16:01] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[11:16:37] *** Quits: none (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Ping timeout: 240 seconds)
[11:17:38] <dba> Thanks for the feedbacks. My use case is that I have a bunch of functions [func1(), func2(), func3(), func4(), func5()] and a bunch of keywords ['func1', func2', 'func3', 'func4', 'func5'] I am looking through the keyword list and if the keyword=func1 I am supposed to call func(). with a large number of keywords and function I will end up with a large number of if..elif...
[11:18:28] <Repiphany> `funcs = {'func1':func1, ...}; if keyword in funcs: ...`
[11:19:09] <The-Compiler> So I have a "coordinator" which runs a custom runner subprocess (involving Docker and such) for some 120 items. Right now it's just a for loop doing so in sequence. What's the easiest way to spawn one such process per CPU core in parallel? A concurrent.futures.ThreadPoolExecutor with every thread then calling subprocess.run?
[11:19:49] *** Joins: manti7 (~manti7@176.10.104.94)
[11:20:09] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:21:08] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[11:21:24] <dba> Repiphany: Thanks for the hint
[11:21:26] <KirkMcDonald> The-Compiler: I am not above doing this the brutish way: subprocess.Popen() and os.waitpid()
[11:21:47] <KirkMcDonald> Or just os.wait(), I suppose.
[11:21:55] <The-Compiler> KirkMcDonald: yeah, but that would then run 120 processes in parallel unless I start implementing my own pool
[11:22:16] <KirkMcDonald> The-Compiler: I'm saying: Implement your own pool. It's not hard, even.
[11:22:37] <KirkMcDonald> Start N processes, then each time one comes back, start another.
[11:22:45] <KirkMcDonald> Until done.
[11:23:07] <The-Compiler> ...oh
[11:23:20] <The-Compiler> that does indeed sound easier than I imagined it
[11:25:14] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:25:45] *** Joins: halabund (~halabund@192.55.244.3)
[11:26:10] <halabund> Is there a standard function that returns the permutation that will sort a list?
[11:26:25] *** [dpk] is now known as dpk
[11:26:38] <KirkMcDonald> halabund: You can get at this with the right key function.
[11:27:13] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:27:29] <KirkMcDonald> halabund: Er, persuming I understand what you're asking.
[11:27:30] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[11:27:32] <KirkMcDonald> presuming*
[11:27:42] <halabund> KirkMcDonald: I'm looking at the docs of sort(), but I don't see how, other than zip()ing the indexes to the list elements
[11:28:05] <KirkMcDonald> halabund: To be clear: You want the list of list indexes which would be in the sorted order of the values?
[11:28:12] <halabund> Correct
[11:28:39] <KirkMcDonald> halabund: Easy-peasy: https://bpa.st/2BIA
[11:29:29] <halabund> Thanks! I wasn't thinking of having the list assigned to a variable first. :-)
[11:29:54] <Repiphany> If you're already using numpy, numpy.argsort
[11:30:18] <Wulf> halabund: sorted(enumerate(a), key=lambda i: i[1])
[11:30:59] <KirkMcDonald> Which gives a different result.
[11:31:04] <Wulf> does it?
[11:31:05] <KirkMcDonald> A list of tuples, rather than just the indexes.
[11:31:35] <KirkMcDonald> It's a matter of what is wanted.
[11:31:41] <Wulf> KirkMcDonald: yup.
[11:31:50] *** Joins: jmd (~user@de.cellform.com)
[11:31:51] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[11:34:34] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 250 seconds)
[11:34:38] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[11:35:16] *** Joins: kosh (~kosh@user/kosh)
[11:35:57] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:36:40] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[11:36:43] *** Quits: epony (~epony@user/epony) (Quit: QUIT)
[11:38:21] *** Joins: epony (epony@user/epony)
[11:38:31] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:38:37] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[11:38:53] <NeilRG> does anyone use multiple inheritance
[11:38:55] <NeilRG> ?
[11:38:57] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:39:01] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[11:39:19] <The-Compiler> NeilRG: I'm sure there are people who do! I try to avoid it.
[11:39:29] <NeilRG> seems like everyone avoidds it
[11:40:23] <The-Compiler> for a good reason, there is usually a better and less confusing solution
[11:41:56] *** Joins: nomic (~nomic@185.198.243.163)
[11:43:15] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[11:43:45] <The-Compiler> KirkMcDonald: ended up trying ThreadPoolExecutor anyways and like the result, didn't require many changes: https://paste.the-compiler.org/view/78cf92ae
[11:44:33] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:45:50] *** Joins: upsala (~zcb@185.209.196.170)
[11:47:59] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[11:50:41] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:53:28] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[11:53:53] *** Joins: crashrep (~crashrep@user/crashrep)
[11:54:49] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[11:59:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:59:21] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:59:42] *** Joins: dntreou (~yakiza@105-209-130-246.access.mtnbusiness.co.za)
[12:00:06] *** Joins: lmmx (~louis@host-92-0-176-231.as13285.net)
[12:00:13] <Wulf> NeilRG: Sure. But you should try to avoid diamond inheritance: B(A), C(A), D(B, C)
[12:00:34] <NeilRG> Wulf: just curious, why do you feel that way?
[12:00:43] <KirkMcDonald> I mean mostly I'd recommend avoiding *inheritance*, generally.
[12:01:11] <Wulf> NeilRG: it's confusing
[12:01:33] <Repiphany> ~method resolution order~
[12:01:34] <han-solo> isn't the mro pretty well defined ?
[12:01:47] <NeilRG> Wulf: I think it's perfectly fine if A is an  interface
[12:01:49] <KirkMcDonald> "Well-defined" is not incompatiable with being confusing.
[12:01:58] <han-solo> mm
[12:02:41] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 256 seconds)
[12:04:43] <NeilRG> KirkMcDonald: right, but I don't think multiple interface inheritance is confusing
[12:05:17] <KirkMcDonald> I never say the point of interface inheritance in a dynamically-typed language.
[12:05:20] <KirkMcDonald> saw*
[12:06:36] <NeilRG> I don't see the connection
[12:07:07] <NeilRG> inheriting from an interface makes type annotations, and instance type checks work
[12:07:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:07:34] <NeilRG> it also serves as a promise, and it allows errors to be raised for undefined abstract methods
[12:08:24] <KirkMcDonald> I'm mostly just salty about trying to yank such static language features into Python.
[12:09:10] <KirkMcDonald> If I wanted this sort of bookkeeping, I'd use a language where it's actually baked in.
[12:09:39] <KirkMcDonald> I don't object to such languages. It's just not what I look to Python for.
[12:11:39] *** Joins: arcticblue (~AdminUser@KD121109002017.ppp-oct.au-hikari.ne.jp)
[12:12:33] *** Joins: vanessa (~annada@103.160.128.7)
[12:13:30] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[12:13:36] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[12:14:36] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7e95:9d65:a7de:195b) (Quit: pvergain)
[12:17:32] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:20:20] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[12:20:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:20:46] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[12:21:39] *** Quits: p-i- (~Ohmu@2403:6200:8978:2a76:903f:6c67:fa60:aa68) (Quit: Leaving...)
[12:23:55] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[12:24:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:24:50] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[12:24:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:25:25] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Read error: Connection reset by peer)
[12:26:34] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[12:26:44] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[12:27:08] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:28:01] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:28:15] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[12:28:41] *** Joins: none (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[12:28:51] *** Quits: none (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Remote host closed the connection)
[12:28:58] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:29:30] *** Joins: newdimension (~newdimnes@user/newdimension)
[12:29:36] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 250 seconds)
[12:30:09] *** Joins: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[12:31:26] *** Parts: k2ro (~k2ro@195.158.249.25) ()
[12:31:29] *** Joins: Guest30 (~Guest30@ec2-16-162-92-242.ap-east-1.compute.amazonaws.com)
[12:31:45] *** Joins: ouestbillie (~gallup@80.194.85.249)
[12:31:45] *** Quits: ouestbillie (~gallup@80.194.85.249) (Client Quit)
[12:31:46] *** Quits: NeoCore (~neocore@37.120.204.54) (Quit: Leaving)
[12:32:22] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[12:32:23] *** Quits: Guest30 (~Guest30@ec2-16-162-92-242.ap-east-1.compute.amazonaws.com) (Client Quit)
[12:32:52] *** Quits: newdimension (~newdimnes@user/newdimension) (Client Quit)
[12:33:12] *** Joins: newdimension (~newdimnes@user/newdimension)
[12:33:24] *** Joins: ouestbillie (~gallup@80.194.85.249)
[12:34:26] *** Joins: louis_ (~louis@host-92-0-176-231.as13285.net)
[12:34:34] *** Quits: newdimension (~newdimnes@user/newdimension) (Remote host closed the connection)
[12:35:33] *** Quits: lmmx (~louis@host-92-0-176-231.as13285.net) (Ping timeout: 256 seconds)
[12:36:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:36:56] *** Joins: newdimension (~newdimnes@user/newdimension)
[12:37:43] *** Joins: ice9 (~ice9@user/ice9)
[12:41:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:41:54] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:42:04] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:42:10] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[12:42:41] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[12:43:07] *** Joins: Pddy (~Pddy@user/SmplyPddy)
[12:44:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:44:51] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[12:45:02] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca) (Ping timeout: 240 seconds)
[12:45:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[12:46:10] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[12:46:21] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[12:46:24] *** Joins: Abrax (~Abrax@user/abrax)
[12:48:12] *** Joins: arinov (~arinov@213.194.126.155)
[12:50:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:52:05] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[12:52:41] *** Joins: tobybl (~tobybl@251.64.200.146.dyn.plus.net)
[12:57:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca)
[12:59:51] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[13:01:06] *** Joins: rsx (~dummy@ppp-188-174-150-199.dynamic.mnet-online.de)
[13:01:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:01:40] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[13:02:56] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:03:30] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:04:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:05:00] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:05:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:05:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:06:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[13:07:13] *** Joins: fikran (~fikran@user/fikran)
[13:07:27] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca)
[13:07:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:c9a0) (Ping timeout: 240 seconds)
[13:07:41] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Max SendQ exceeded)
[13:08:25] *** Quits: emad (~emad@102.42.146.250) (Ping timeout: 256 seconds)
[13:09:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:10:07] *** Quits: AlanMD_ (~AlanMD@5-12-13-215.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[13:10:49] <VaniaPy> Hello,i have a csv le'ts say with 5000 entries and i need to grab the first 1000
[13:10:51] *** Joins: sandb0y (~pirate@user/sandb0y)
[13:10:59] <VaniaPy> and split them to 2 csv files
[13:11:17] <VaniaPy> how could i modify this function? https://bpa.st/RSCA
[13:11:21] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:11:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:11:28] <VaniaPy> in order to achieve that
[13:12:57] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[13:12:59] *** Joins: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de)
[13:13:27] *** Quits: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:14:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:14:14] *** Joins: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de)
[13:14:24] *** Joins: han-solo (~han-solo@103.82.184.200)
[13:16:40] <Lvl4Sword> Bumping into an interesting issue. Receiving the following: .. Expected type 'Purpose', got '_ASN1Object' instead .. from ssl.create_default_context(purpose=ssl.Purpose.SERVER_AUTH) .. and I don't see anything about this in the docs: https://docs.python.org/3/library/ssl.html .. am I missing something here?
[13:17:15] <The-Compiler> Lvl4Sword: can you show the full error?
[13:17:29] <The-Compiler> (using a pastebin like https://bpa.st/+python )
[13:17:30] <Lvl4Sword> The-Compiler, That's all. It's what PyCharm's giving me
[13:18:01] <The-Compiler> then that might just be an issue with PyCharm
[13:18:19] <Lvl4Sword> I figured as much, but wanted to double-check if there was a change that wasn't documented
[13:19:24] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:20:12] <The-Compiler> interesting, ssl.Purpose inherits from both namedtuple (via _ASN1Object) and Enum...
[13:20:37] <Lvl4Sword> That would explain the weird error
[13:20:49] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[13:21:32] *** Joins: LimeOn (~user@user/limeon)
[13:24:12] *** Quits: louis_ (~louis@host-92-0-176-231.as13285.net) (Ping timeout: 250 seconds)
[13:25:25] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:25:32] *** Quits: han-solo (~han-solo@103.82.184.200) (Ping timeout: 240 seconds)
[13:26:06] *** Joins: kts (~kts@103.73.237.12)
[13:26:48] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:27:31] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:28:16] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:28:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:29:29] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:31:38] *** Quits: aniketgm (~aniketgm@49.36.57.63) (Quit: Lost terminal)
[13:32:13] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:32:14] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[13:32:47] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[13:33:09] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[13:34:33] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:35:14] *** Quits: slackcals (~slackcals@user/slackcals) (Read error: Connection reset by peer)
[13:35:23] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[13:35:42] *** Joins: bizolos (~bizolos@176-179-18-127.abo.bbox.fr)
[13:36:47] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:37:09] <bizolos> Hi there. I added "logging.debug("Some error happened")" in a script. If I add in my script "logging.basicConfig(level=logging.DEBUG)", the error is printed. I thought using "python script.py --log DEBUG" would achieve the same result, but no output. What am I doing wrong?
[13:38:44] *** Joins: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro)
[13:39:41] <bizolos> Oh okay, it seems it's not automatic. I have to pass it to the basicConfig method, right? https://docs.python.org/3/howto/logging.html#logging-to-a-file
[13:41:17] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[13:41:25] *** Joins: nottorp (~nhy@89.39.71.114)
[13:42:30] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[13:43:38] <The-Compiler> bizolos: yes, if you want your script to have a --log argument, you need to get that argument and handle it
[13:43:50] <bizolos> Ok I misread the documentation. Thanks The-Compiler :)
[13:44:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:46:09] *** Joins: aniketgm (~aniketgm@49.36.57.63)
[13:46:32] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[13:46:47] <NeilRG> how do I make proposals to the array API standards? https://data-apis.org/array-api/latest/index.html
[13:47:05] *** Quits: kts (~kts@103.73.237.12) (Quit: Konversation terminated!)
[13:47:41] <NeilRG> is it here? https://github.com/data-apis/array-api/issues
[13:48:09] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[13:48:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:49:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[13:50:04] *** Quits: nottorp (~nhy@89.39.71.114) (Quit: Leaving)
[13:50:33] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[13:50:38] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[13:51:30] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[13:51:37] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:52:37] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:53:31] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[13:55:18] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[13:57:31] *** Joins: lovelace (~lovelace@222.212.239.150)
[13:57:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:02] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[13:58:42] *** Joins: lispy (~lispy4@84.69.59.93)
[13:58:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:00:09] *** Quits: lispy (~lispy4@84.69.59.93) (Client Quit)
[14:00:45] *** Joins: lispy (~lispy4@84.69.59.93)
[14:00:54] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:01:06] *** Parts: lovelace (~lovelace@222.212.239.150) ()
[14:01:30] *** Joins: lovelace (~lovelace@222.212.239.150)
[14:01:41] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[14:01:45] *** Quits: lovelace (~lovelace@222.212.239.150) (Client Quit)
[14:05:48] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:09:03] *** Quits: dntreou (~yakiza@105-209-130-246.access.mtnbusiness.co.za) (Remote host closed the connection)
[14:09:32] *** Quits: ouestbillie (~gallup@80.194.85.249) (Ping timeout: 240 seconds)
[14:10:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:11:12] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:12:59] *** Joins: Esteri (Esteri@gateway/vpn/protonvpn/esteri)
[14:13:08] *** Joins: moto (~moto@user/moto)
[14:13:32] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:13:51] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:14:10] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:17:45] *** Henryx_ is now known as Henryx
[14:18:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:21:20] *** Joins: Xano (~Xano@2a00:23c4:4204:700:8375:6a59:424f:4eb3)
[14:21:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:22:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:22:50] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:24:00] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[14:25:01] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[14:25:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:25:50] *** Quits: tobybl (~tobybl@251.64.200.146.dyn.plus.net) (Remote host closed the connection)
[14:27:08] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[14:27:27] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[14:28:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:29:38] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[14:30:15] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:30:44] *** Joins: js0e0 (~ledneys@185.6.149.202)
[14:30:52] *** Parts: js0e0 (~ledneys@185.6.149.202) ()
[14:31:11] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[14:31:59] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[14:32:32] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:33:52] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:33:59] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[14:34:30] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:34:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[14:34:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:35:49] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:36:03] *** LordKalma_ is now known as LordKalma
[14:36:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:36:34] *** Joins: jaggz (~jaggz@user/jaggz)
[14:36:46] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:36:50] <jaggz> darnit.. how do I get the non-option args with argparse?
[14:37:00] <jaggz> foo -a -b 1 file.txt file2.txt
[14:38:04] <aniketgm> I use click
[14:38:45] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:38:48] <aniketgm> and I recommend that to people, argparse sucks
[14:39:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:39:08] <The-Compiler> jaggz: "th non-option args"?
[14:39:50] <The-Compiler> *the
[14:40:24] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[14:41:26] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[14:41:31] <jaggz> yeah..
[14:41:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:41:35] *** Joins: cosimone (~user@93-44-186-112.ip98.fastwebnet.it)
[14:41:43] <jaggz> I think it's ("name", nargs=1) to get one of them
[14:41:52] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:42:00] <jaggz> ie. no - (dash) on the start of "name"
[14:42:03] <The-Compiler> jaggz: I don't understand what you're asking exactly - you might be looking for nargs="*" maybe?
[14:42:06] *** pmb_ is now known as pmb
[14:42:25] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[14:42:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[14:42:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[14:43:55] <jaggz> The-Compiler, could be!
[14:47:53] *** Joins: toastloop (~toastloop@user/toastloop)
[14:49:29] *** Joins: Klinda (~superleag@user/klinda)
[14:58:21] *** Joins: emad (~emad@156.214.182.157)
[14:58:25] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[14:58:31] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:58:31] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[14:59:53] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:00:17] *** debian_ is now known as Guest5953
[15:00:23] *** Joins: debian__ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:00:33] *** Quits: debian__ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[15:00:36] *** Quits: Guest5953 (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[15:00:36] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[15:00:53] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:01:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[15:01:45] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:02:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:02:51] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[15:03:26] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[15:03:26] *** Quits: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro) (Ping timeout: 250 seconds)
[15:05:37] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[15:05:46] *** Joins: hwdyki (~hwdyki@user/hwdyki)
[15:06:21] *** Joins: Xano_ (~Xano@193.29.60.217)
[15:07:34] <hwdyki> trying to build python 3.10.2 from source and i'm getting the following error https://bpa.st/PQDQ
[15:07:40] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Remote host closed the connection)
[15:08:02] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[15:08:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:08:32] *** Quits: Xano (~Xano@2a00:23c4:4204:700:8375:6a59:424f:4eb3) (Ping timeout: 240 seconds)
[15:08:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:09:17] *** Quits: halabund (~halabund@192.55.244.3) (Remote host closed the connection)
[15:09:24] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[15:10:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:10:45] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[15:10:54] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[15:11:12] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[15:11:13] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[15:12:27] *** Joins: toastloop (~toastloop@user/toastloop)
[15:12:28] *** Quits: toastloop (~toastloop@user/toastloop) (Excess Flood)
[15:12:56] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[15:12:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:14:02] *** Joins: goldcrest (~goldcrest@217.131.85.211)
[15:14:13] *** Quits: Socra (~Socra@206.217.216.21) (Ping timeout: 256 seconds)
[15:14:18] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:14:22] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:273:8614:9fc9:d782)
[15:14:32] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 240 seconds)
[15:14:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[15:15:21] *** Joins: KvL (~KvL@user/KvL)
[15:15:33] *** Joins: Socra (~Socra@206.217.216.21)
[15:15:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:16:32] *** Quits: Xano_ (~Xano@193.29.60.217) (Ping timeout: 240 seconds)
[15:16:34] *** Joins: fikran (~fikran@user/fikran)
[15:16:47] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[15:17:24] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:18:56] <aniketgm> hwdyki: share you config options
[15:19:44] <hwdyki> --enable-shared --disable-loadable-sqlite-extensions \
[15:19:44] <hwdyki>   --enable-optimizations --enable-ipv6 --disable-test-modules \
[15:19:45] <hwdyki>   --with-system-expat --with-system-ffi --with-dbmliborder=gdbm \
[15:19:45] <hwdyki>   --with-pymalloc --without-dtrace --with-ensurepip=no
[15:20:12] *** Quits: Syzygy__ (~Syzygy@dynamic-2l4rd5zh3jbrwrpr2p-pd01.res.v6.highway.a1.net) (Remote host closed the connection)
[15:22:34] <nedbat> hwdyki: can you share the full terminal session? How did you configure?
[15:23:04] <hwdyki> it's gone
[15:23:23] <nedbat> hwdyki: do it again I guess, or maybe you don't have to build from source?
[15:23:56] *** Joins: louis_ (~louis@host-92-0-176-231.as13285.net)
[15:23:57] <hwdyki> when i remove the currently installed site-extensions dir, it builds properly. but otherwise i get that error.
[15:24:30] *** Joins: stpepper (~stpepper@99-48-65-21.lightspeed.bltnin.sbcglobal.net)
[15:24:59] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 256 seconds)
[15:25:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:58] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 250 seconds)
[15:28:41] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 252 seconds)
[15:28:44] <nedbat> hwdyki: i'm not sure what the site-extensions dir is for.
[15:28:52] *** Joins: bluedust (~bluedust@185.248.85.41)
[15:29:13] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[15:29:15] <hwdyki> i mean site-packages
[15:29:52] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:31:21] <aniketgm> hwdyki: there seems to be an issue with this already. maybe you could find a solution there: https://bugs.python.org/issue14216
[15:31:56] *** Quits: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:32:21] *** Joins: Guest82 (~Guest82@2606:54c0:76e0:11e8::e:186)
[15:33:46] *** dTal_ is now known as dTal
[15:34:46] <hwdyki> i'm using --prefix=/usr when configuring.
[15:35:07] *** Quits: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[15:35:48] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:20] *** Quits: Guest82 (~Guest82@2606:54c0:76e0:11e8::e:186) (Quit: Client closed)
[15:37:56] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[15:38:15] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:39:36] *** Quits: Pddy (~Pddy@user/SmplyPddy) (Quit: bye)
[15:40:40] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[15:42:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:43:27] *** Joins: walterwhip (~www@user/walterwhip)
[15:44:23] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[15:45:24] *** Joins: ice9 (~ice9@user/ice9)
[15:45:32] *** Quits: monkeycoder (~monkey@2001:d08:1b83:205d:1692:d3f7:29c4:6825) (Ping timeout: 240 seconds)
[15:47:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:48:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:49:01] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[15:52:34] *** Joins: hightower2 (~hightower@95.168.116.13)
[15:52:47] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[15:52:57] *** Joins: bluedust_ (~bluedust@59.98.50.19)
[15:53:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:54:02] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:55:02] *** Quits: bizolos (~bizolos@176-179-18-127.abo.bbox.fr) (Ping timeout: 240 seconds)
[15:55:32] *** Joins: arinov (~arinov@213.194.126.155)
[15:56:02] *** Quits: bluedust (~bluedust@185.248.85.41) (Ping timeout: 240 seconds)
[15:57:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:58:59] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[15:59:02] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:59:20] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[15:59:27] *** Joins: rememberYou (~someone@user/rememberyou)
[16:01:03] *** Joins: cdown (~cdown@163.114.131.1)
[16:01:30] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[16:01:44] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[16:01:59] *** Joins: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de)
[16:03:03] *** Joins: stonkey (~stonkey@user/stonkey)
[16:03:40] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[16:03:40] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[16:04:32] <nedbat> hwdyki: you wanted this Python to become /usr/bin/python?
[16:05:05] <hwdyki> yes. i'm building a distro of sorts.
[16:08:02] <nedbat> hwdyki: sorry, i don't know why it would be failing
[16:08:16] <jazzy> is there some way to do find all combinations of 6 in a list of 5000 in a way that doesn't take a thousand years
[16:08:40] *** Joins: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se)
[16:08:48] <skeemer> hello all i have a frozen dataclass called Node
[16:08:50] <jazzy> 5000 choose 6 is apparently about 10 ^ 19
[16:08:57] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[16:08:57] <jazzy> which is not the most ideal
[16:09:09] <skeemer> and a data structure containing a list of these Node(s)
[16:09:17] <skeemer> how can i serialize to JSON this list?
[16:09:58] *** Joins: ethrl (~ethereal@user/doforlove33)
[16:11:29] <nedbat> jazzy: you want to do 10 ^ 19 things, but quickly? That doesn't seem possible.
[16:11:37] <jazzy> mm right
[16:11:42] *** Joins: bizolos (~bizolos@176-179-18-127.abo.bbox.fr)
[16:11:55] *** Joins: george91 (~george91@103.137.204.24)
[16:12:03] <nedbat> jazzy: whatever you are searching for, maybe there's a smarter way than brute-force?
[16:12:14] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Remote host closed the connection)
[16:12:14] <jazzy> yeah possibly
[16:12:18] <jazzy> what I want to do is
[16:12:43] <jazzy> find the set of 6 5-letter words that contains every letter in the alphabet
[16:12:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[16:13:05] <The-Compiler> jazzy: smells like wordle :D
[16:13:09] <jazzy> hahaha
[16:13:11] *** Joins: george91_ (~george91@103.137.204.24)
[16:13:17] *** Quits: bizolos (~bizolos@176-179-18-127.abo.bbox.fr) (Client Quit)
[16:13:17] *** Quits: george91 (~george91@103.137.204.24) (Read error: Connection reset by peer)
[16:13:21] <nedbat> jazzy: you are searching for pangrams?
[16:13:25] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[16:13:25] *** Joins: george91 (~george91@103.137.204.24)
[16:13:35] <nedbat> (I thought IRC was the one wordle-free zone remaining, but I guess not...)
[16:13:35] <jazzy> The-Compiler, yeah, my brother made me play a game and I thought I'd give this a try
[16:13:38] <Robin_Jadoul> jazzy: sounds like it's some form of set cover, so while it's NP-complete, there might be fast-ish heuristics for it
[16:14:08] <nedbat> skeemer: looks like you either amend the encoder yourself (https://www.bruceeckel.com/2018/09/16/json-encoding-python-dataclasses/), or use a library (https://github.com/lidatong/dataclasses-json)
[16:14:59] <The-Compiler> skeemer: depends on what there is in a node - you could perhaps use dataclasses.todict (and ** to recreate it) for very simple cases
[16:15:45] <jazzy> nedbat, had no idea it was that popular
[16:15:49] <nedbat> jazzy: where did the 5000 come from?
[16:16:09] <jazzy> 4,955 5-letter words in the oxford dictionary apparently
[16:16:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:16:21] <nedbat> that doesn't sound like enough
[16:16:27] *** Joins: plastico (~plastico@neomutt/plastico)
[16:16:32] <jazzy> I dunno, just downloaded this txt
[16:16:36] <jazzy> https://github.com/sujithps/Dictionary/blob/master/Oxford%20English%20Dictionary.txt
[16:17:16] <jazzy> 2014, so I guess we've got some new words since then
[16:17:25] <The-Compiler> I have 7600 such words in my /usr/share/dict/words
[16:17:32] *** Quits: george91_ (~george91@103.137.204.24) (Ping timeout: 240 seconds)
[16:17:42] <nedbat> jazzy: https://www.keithv.com/software/wlist/ says there are 8704 5-letter words that appear in 9 references
[16:17:45] <The-Compiler> oh, to be fair that includes apostrophes ahd such though
[16:17:48] <The-Compiler> and*
[16:18:12] <jazzy> nedbat, hm I see
[16:18:18] <jazzy> well either way the problem is impossible
[16:18:27] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:18:30] <nedbat> jazzy: but if this is for wordle, then you don't want 6 words covering the alphabet anyway
[16:18:35] <jazzy> right
[16:18:36] *** Joins: acresearch (~acresearc@user/acresearch)
[16:18:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:18:54] <jazzy> 5 5-letter words covering all but one letter would be best
[16:19:24] <jazzy> would be able to figure out the last one based on missing letter
[16:19:29] *** Joins: nomic (~nomic@185.198.243.163)
[16:19:34] <nedbat> jazzy: you still have the problem that a word could be duplicated in the answer.
[16:19:38] <nedbat> *a letter
[16:19:57] <Robin_Jadoul> and knowing all letters is only conclusive up to anagrams
[16:20:03] <jazzy> oh true
[16:20:13] <jazzy> would be good for most cases I guess
[16:20:18] <jazzy> the brain would take it from there
[16:20:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[16:20:43] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:21:01] <acresearch> people, i am trying to generate images using VQGAN+CLIP on jupyter notebook using a GPU, i am running out of RAM. I am thinking of registering for AWS to get a GPU and more RAM. is it possible to setup an AWS instance with a GPU and high RAM and connect a jupyter notebook to it?
[16:21:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:21:11] <jazzy> hm
[16:21:30] <jazzy> I wonder how long it'd take AWS to do 10 ^ 16
[16:22:23] <jazzy> probably very long
[16:22:42] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:23:02] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 240 seconds)
[16:24:33] <ChrisWarrick> jazzy: well, what’s your budget?
[16:24:45] <jazzy> assume unlimited
[16:25:24] <jazzy> or just enough to buy the most expensive thing aws has to offer
[16:26:12] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[16:26:30] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[16:27:57] <ChrisWarrick> you could buy 10^16 servers for one minute and send one task to each
[16:28:44] <jazzy> right haha, thought the proposed solution would be something along those lines
[16:28:50] <jazzy> which is why I revised it
[16:29:32] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:30:58] *** Parts: stpepper (~stpepper@99-48-65-21.lightspeed.bltnin.sbcglobal.net) ()
[16:31:14] <jazzy> wow this game really is everywhere
[16:31:51] <jazzy> I should've expected as much, knowing the person that sent it to me
[16:32:53] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Quit: Leaving)
[16:32:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:33:04] <ChrisWarrick> your task seems trivial to parallelize, so why limit yourself to the 448 vCPUs of their largest offering?
[16:33:08] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[16:33:17] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[16:34:28] <jazzy> budget cuts
[16:35:19] *** Joins: guilherme_ (~guilherme@186.223.115.171)
[16:36:24] *** Quits: xizhendu_ (~xizhendu@115.171.233.172) (Remote host closed the connection)
[16:36:50] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[16:37:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:37:40] *** Joins: xx (~xx@user/xx)
[16:38:55] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:40:03] *** Joins: han-solo (~han-solo@user/han-solo)
[16:40:10] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[16:40:25] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[16:40:27] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[16:40:29] <xheimlich> so hear me out.
[16:40:59] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:41:01] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[16:41:03] <xheimlich> I'd like to make a kind of configuration format like ini/toml but that's actually python. and read from python and eval'ed etc.
[16:41:17] *** Joins: jay-m1262 (~jay-m@41.205.30.141)
[16:41:17] <xheimlich> but I want to impose numerous restrictions on what it can be. So it's not a straight import.
[16:42:04] <Helle> if it is Turing complete, you can't guarantee a lot of things, so you need a lot of restrictions, so what is the goal
[16:42:07] <xheimlich> Mostly I want a one key=value per line + #comments,  but I want to allow one-line lambdas and python range constructs.
[16:42:17] <xheimlich> so. I want to write something of a checker.
[16:42:27] <Helle> you can't if you allow that
[16:42:32] <Helle> the lambdas that is
[16:42:36] <xheimlich> I think I won't be able to use the "import" construct.
[16:42:54] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[16:43:01] <xheimlich> but if I write functonality that reads a text file, checks that only allowed constructs are there xor raises error.
[16:43:06] *** Quits: louis_ (~louis@host-92-0-176-231.as13285.net) (Ping timeout: 250 seconds)
[16:43:23] <bjs> xheimlich: you can make Python's `import` do pretty much whatever you want
[16:43:32] <xheimlich> then eval what's left if it passes an "import-time checker" (but again this is not an import necessarily)
[16:43:32] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:43:41] <bjs> you can make it so you can `import file` where you have a file.ini if you wanted  (but maybe, dont)
[16:44:03] <xheimlich> I don't know much about parsers so I want to run this idea by someone else before I start diving into it.
[16:44:21] <Helle> xheimlich: the problem is testing the lambdas so that they don't do anything you aren't intending
[16:44:36] <Helle> you can't because they can be turing complete, with some hackery
[16:44:43] <bjs> xheimlich: what kind of restrictions are you looking for on those lambdas?
[16:44:44] <nedbat> xheimlich: how important is it to fully guard against things? are you concerned about malicious inputs?
[16:44:52] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:44:53] <bjs> xheimlich: in normal Python, lambdas can do *anything*
[16:44:55] <xheimlich> Helle: a problem with lambdas is that they can reference outer scope variables.
[16:44:55] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[16:45:07] <xheimlich> but maybe I can do some munging on lambdas before evaling.
[16:45:15] <Helle> xheimlich: no, because Turing
[16:45:18] <xheimlich> Like only allowing a select few variable names.
[16:45:19] <nedbat> xheimlich: why do you care if they reference other settings in the file?
[16:45:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:45:29] <bjs> Helle: Turing completeness is fairly irrelevant to scoping here
[16:45:33] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[16:45:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[16:45:43] <xheimlich> nedbat: I don't. I just don't want to allow lamdba x: x+y  and y is not from the config file.
[16:45:50] <lidless_> why is turing being passed around like a term that really matters? :-X
[16:45:51] <bjs> you can happily make a little parser that means lambdas can't read from the outer scopes
[16:45:55] <xheimlich> or really from that lambda expression itself.
[16:46:08] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:46:13] <xheimlich> like all variables have to be declared in the lambda ___ :
[16:46:15] <Helle> lidless_: for config files, having it just leads to so many additional problems, especially if they are untrusted config files
[16:46:27] <Helle> lidless_: (similar for protocols)
[16:46:39] <Helle> so avoiding it in the first place is advisable
[16:46:48] <bjs> xheimlich: I'm not really following, why not just let it be Python?  what are you trying to protect against by restricting
[16:46:58] <lidless_> I'm super lost.
[16:47:02] <lidless_> but that's okay
[16:47:07] <Helle> exactly what bjs said ^^
[16:47:14] <Helle> you may not gain anything by restricting it
[16:47:18] <Helle> so why even try
[16:47:20] <xheimlich> They're semi-trusted. Said config files or config strings might be pushed by an external service. Like a program specification.
[16:47:27] <bjs> I'm not saying anything about Turing completeness,  Turing completeness seems irrelevant here
[16:47:33] <xheimlich> Imagine something machine learning-ish.
[16:48:01] <xheimlich> I have a program that can be specified by a few knobs. So ok, let's expose an API interface to those knobs using fastapi or whatever.
[16:48:12] <bjs> xheimlich: okay, where do the restrictions come in?
[16:48:18] <xheimlich> (pydantic, I mean. serializes to json in some organized way)
[16:48:33] <lidless_> I have never seen a definition of "Turing complete" that impacted me for better or for worse
[16:48:56] <lidless_> I'm still like "what the fuck IS that?"
[16:49:11] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[16:49:13] <xheimlich> currently I allow various choices of -- make this "activation functions" in NN context; it's not that at all but the domain is weird. they're currently specified by a string, and I have a dict that matches those strings to functions.
[16:49:22] <vanessa> JJJKKHj
[16:49:42] *** Joins: delvian (~delvian@41.13.224.165)
[16:49:51] <xheimlich> vanessa: that's what my 9-m.o said the other day, but on #emacs
[16:50:12] <xheimlich> baby Gilles gets his hands on the laptop and bam bam bam.
[16:50:28] <bjs> lidless_: I think Helle was trying to say "I think a config file format that is a powerful general-purpose programming language is a bad idea, from prior experience". Security/safety restrictions on languages are unrelated to Turing completeness
[16:50:57] <xheimlich> but getting back, I'd like the remote user to be able to specify an arbitrary "activation function". Maybe lambda x: max(x**3,0)
[16:51:16] <xheimlich> that's a single variable function that changes the whole behavior of the system.
[16:51:25] <bjs> xheimlich: I guess the bigger question is,  what kind of activation function do you want to forbid and why
[16:51:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:51:32] <bjs> and why not let people write activation functions as "def"s ?
[16:52:08] <bjs> xheimlich: I mean so far what you say sounds perfectly plausibly do-able, but I can't really see why you would do it.
[16:52:35] <xheimlich> bjs: because I have no idea how to parse that. Also, activation functions should really be differentiable-by-segments function from R to (0,1)
[16:52:41] <lidless_> bjs: Thank you!
[16:52:45] *** Joins: kosh (~kosh@user/kosh)
[16:53:15] <bjs> xheimlich: okay so you want to write your own parser like using pyparsing or whatever?
[16:53:23] <xheimlich> so. maybe "risk aversion function" is a closer approximation.
[16:53:35] <lidless_> pretty sure sendmail.cf could launch nukes, but I digress
[16:53:59] <bjs> xheimlich: I'm still unsure why you would want to impose restrictions rather than just letting it be any .py file,  but yes you could impose these syntactic restrictions and make things work on import
[16:53:59] *** Quits: hightower2 (~hightower@95.168.116.13) (Read error: Connection reset by peer)
[16:54:02] <xheimlich> users have every right to specify their risk aversion function. Ultimately these choices would be restricted at the web front-end but I'd like back-end developers to have some flexibility on this without bothering me.
[16:54:22] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:54:40] <bjs> xheimlich: you can hitch onto the `import` machinery with sys.meta_path and then you can run your own pyparsing (for example) parser on the file to read the config and then produce a Python Module object from it
[16:54:45] <jazzy> weird, should memory usage be going up even though I'm resetting data structures every loop?
[16:55:00] <bjs> jazzy: depends on what else you're doing and how you're doing it
[16:55:07] <xheimlich> basically I want to write a very small scripting language for my code that other people at my org are able to use.
[16:55:31] <xheimlich> I think I started things wrong by asking around how I was planning on doing this.
[16:55:39] <jazzy> bjs, not much, just some counting on stuff in the dict and arithmetic
[16:56:01] <jazzy> but a lotta loops
[16:56:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:56:04] <bjs> jazzy: if you can be specific (e.g. show us the code and tell us what you see) we might be able to help
[16:56:08] <xheimlich> other people at my org that don't know Python, just typescript.
[16:56:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[16:56:53] <jazzy> bjs, this is it: https://i.snipboard.io/Tg0cQH.jpg
[16:56:53] <bjs> jazzy: typically once you stop using an object it will get garbage collected, and either the memory re-used for later or free'd
[16:56:58] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:57:03] <bjs> typically long-running programs collect virtual memory but it has no effect on actual memory usage
[16:57:21] <hexnewbie> xheimlich: Not really what you're looking for, but last two times I needed some like that, I resorted to YAML with my own expression parser for the values of certain keys. In the latter case, it was simply a function call (name, followed by comma-separated stuff that can be evaluated with a minimal parser + ast.literal_eval())
[16:57:22] *** Quits: delvian (~delvian@41.13.224.165) (Quit: Leaving)
[16:57:47] <jazzy> according to task manager I've jumped from 92% memory usage to 98%
[16:57:50] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[16:57:51] <jazzy> while running the program
[16:57:59] <lidless_> xheimlich: Disney did this a long time ago and named it "TEA". I wonder if that source is online anywhere
[16:58:06] *** Quits: hwdyki (~hwdyki@user/hwdyki) (Quit: Client closed)
[16:58:27] <bjs> xheimlich: everything you describe is plausible and you can do it,  but you'll have to write down exactly what things are valid or invalid in your scripting language at some point and you may find it hard to describe that
[16:58:29] <xheimlich> I considered that. But I once wrote a "very small scripting language" that really was about specifying a DAG of questionnaires so it can be "solved"/topo-sorted. And YAML had a bunch of opinions on what "Yes" means.
[16:58:41] *** Joins: Veri (~yourname@60.9.115.127)
[16:58:53] *** Joins: louis_ (~louis@host-92-0-176-231.as13285.net)
[16:58:54] *** Quits: Veri (~yourname@60.9.115.127) (Client Quit)
[16:59:10] <jazzy> fluctuating by as much as 600 MB
[16:59:24] <bjs> jazzy: I mean I'm not sure how I can give any input, do the values in `combos` get larger and larger as you go through?  how much memory this code uses clearly depends on the inputs
[16:59:25] *** Joins: hightower2 (~hightower@212.15.178.16)
[16:59:35] <hexnewbie> My full-blown expression parser that evaluates arbitrary expressions is 350 lines of lrparsing code
[16:59:35] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[16:59:36] <xheimlich> I was hoping to avoid (1) having to read a DSL book and at the same time (2) finish up my core functionality code and never be bothered about it again. Can't have it both ways, I guess.
[17:00:13] <jazzy> bjs, combos is a big list, about 200 million sets of 3 5-letter words
[17:00:19] <lidless_> lol this guy was a contractor: https://github.com/jorgefranconunes/tea
[17:00:46] <lidless_> ^ The whole purpose of Tea was to limit what developers could do and reduce collateral damage
[17:00:48] <jazzy> wow, has fluctuated by as much as 1 GB at this point
[17:00:56] <jazzy> is it all just garbage collection?
[17:01:26] <bjs> jazzy: quite likely
[17:01:35] <bjs> I mean what metric exactly are you measuring?
[17:01:47] <jazzy> I'm just looking at the memory taken up by the process
[17:02:04] <jazzy> via task manager in windows
[17:02:20] <bjs> jazzy: "memory taken up by the process" is a hard thing to measure and there's often 2 very different numbers associated with it
[17:02:53] <jazzy> I see, I'm not very sophisticated on this front
[17:02:58] <xheimlich> I wish there was something somewhat like YAML (clean hierarchical bullet list of key-value pairs, possibly with [1,2,3] array support) but without strong opinions on the contents itself.
[17:03:01] <han-solo> jazzy: not much to do with your issue, but a suggestion, line 3 can be just `dict.fromkeys(string.ascii_lowercase , 0)`
[17:03:21] <xheimlich> like just a standard format for tiny scripting languages.
[17:03:25] <jazzy> han-solo, wow thanks
[17:03:35] <jazzy> I thought I was so cool for using dict(zip())
[17:03:48] <jazzy> how long has that stuff been around?
[17:03:57] <lidless_> xheimlich: Is TOML better for that?
[17:04:02] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Ping timeout: 240 seconds)
[17:04:10] <deniska> dict.fromkeys is quite old I think
[17:04:16] <xheimlich> TOML is mighty weird for hierarchical contet.
[17:04:21] <jazzy> guess I'm just lame
[17:04:26] <lidless_> I was never a fan of YAML because it came when Ruby on Rails was the new hotness and every month introduced some new idea that people blindly adopted
[17:05:03] <bjs> jazzy: how big is a single `combo`? does it vary?
[17:05:04] <xheimlich> The problem I had with YAML was that it thinks: "Dry cough: Yes" is a boolean.
[17:05:28] <xheimlich> "Last word in James Joyce's Ulysses: True" == False
[17:05:42] <jazzy> bjs, no variance, total of 15 characters distributed amongst 3 lists
[17:07:08] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:07:16] *** Joins: delvian (~delvian@41.13.224.165)
[17:07:22] <jazzy> man I should've known the alphabet was stored as a constant
[17:07:29] <jazzy> been doing it like this for yeeeeeeaaars
[17:07:42] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[17:08:06] <jazzy> I should just assume the language has me covered if I ever find myself repeating a particular thing a bunch
[17:08:48] <xheimlich> This was an actual problem: the YAML specified pieces of content that depended on pieces of content so it could be toposorted (or pruned until DAG, if close enough) and presented. Translation of Yes to true went all the way down to the presentation layer.
[17:08:57] *** Joins: darksun (~darksun@user/darksun)
[17:09:15] <lidless_> xheimlich: I would start by prefixing the value in your config with something like "@lambda" or w/e and at least be able to recognize what needs to be eval'd
[17:09:19] <jazzy> also I just stopped 20 minutes of computing just to realize I wasn't updating max_length
[17:09:20] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[17:09:26] <xheimlich> it's not like laparoscopy software freezing while you're cuttig someone's gut through their rear end, but it wasn't a good look.
[17:09:41] *** Joins: darksun (~darksun@user/darksun)
[17:09:52] <lidless_> xheimlich: that you know that is terrifying
[17:10:00] <bjs> jazzy: tbh I'm not surprised you get quite a bit of fluctuation in the reported memory usage. You can try add `count = counts = None` at the bottom of the loop to make it so that only 1 has to be in memory at once not two
[17:10:08] <han-solo> jazzy: deniska: "fromkeys() is a class method that returns a new dictionary. value defaults to None. New in version 2.3."
[17:10:18] *** Quits: dfch (~dfch@user/dfch) (Quit: bye)
[17:10:22] <han-solo> so yeah...pretty old
[17:10:23] <xheimlich> imagine if civil structural engineering had the reliability levels that software engineering has.
[17:10:24] <bjs> jazzy: but it's not surprising, Python makes new objects and it just puts them wherever in memory
[17:10:26] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[17:10:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:10:42] *** Joins: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29)
[17:10:53] <xheimlich> Buildings would collapse because someone put accidentally $constuction_putty_type_3 instead of $construction_putty_type_7
[17:10:59] <The-Compiler> xheimlich: FWIW there is https://github.com/crdoconnor/strictyaml - but yeah, hardly a standard
[17:11:18] <lidless_> xheimlich: I mean... that has happened colloquially
[17:11:19] <jazzy> bjs, I see
[17:11:30] <xheimlich> not like have the bit where the wrong putty was put.
[17:11:38] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[17:11:39] *** Joins: Guest38 (~Guest38@43.247.159.138)
[17:11:52] <xheimlich> the whole building would just core dump.
[17:12:08] <lidless_> oh strict-yaml looks neat
[17:12:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:12:16] <xheimlich> there's nestedtext too.
[17:12:21] *** Joins: darksun (~darksun@user/darksun)
[17:12:27] *** Joins: darksun_ (~darksun@151.70.195.18)
[17:12:39] *** Joins: darksun__ (~darksun@151.70.195.18)
[17:12:46] <lidless_> I need to hop so I can change my nick back
[17:12:47] *** Parts: lidless_ (lidless@2600:3c02::f03c:92ff:fe1d:6a82) (Konversation terminated!)
[17:12:52] *** Joins: dfch (~dfch@user/dfch)
[17:12:57] <The-Compiler> and a handful of "JSON but with comments and traling commas" kind of things which are actually rather popular
[17:13:08] *** Joins: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82)
[17:13:16] <The-Compiler> e.g. https://json5.org/
[17:13:24] *** Parts: Guest38 (~Guest38@43.247.159.138) ()
[17:13:34] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[17:13:34] *** Quits: darksun__ (~darksun@151.70.195.18) (Client Quit)
[17:13:34] *** Quits: darksun_ (~darksun@151.70.195.18) (Client Quit)
[17:13:46] <xheimlich> pydantic has greatly simplified interacting with the json world, true.
[17:14:31] <xheimlich> for most purposes a data_structures.py and/or external_interfaces.py written in dataclass-like format is the clearest configuration language imaginable.
[17:15:09] <The-Compiler> I actually quite like the idea of configuration in Python
[17:15:16] *** Joins: darksun (~darksun@user/darksun)
[17:15:28] <The-Compiler> at least in contexts where it doesn't matter that the config file can do bad stuff
[17:15:38] <jaggz> $ pip search opencv-python
[17:15:42] <xheimlich> configuration and API spec classes might be the cleanest case for inheritance.
[17:15:46] <jaggz> PyPI's XMLRPC API is currently disabled due to unmanageable load...
[17:15:47] <jaggz> gaw
[17:15:59] <xheimlich> like you have some basic structure to ALL your APIs, and go introducing points of variation.
[17:16:34] <The-Compiler> jaggz: forget the "currently", https://status.python.org/incidents/grk0k7sz6zkp
[17:16:34] <xheimlich> The-Compiler: my problems are of two general kinds.
[17:16:38] <lidless> jaggz: I think that's been the case for 2+ years now. it sucks
[17:16:38] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[17:17:05] *** Joins: darksun (~darksun@user/darksun)
[17:17:06] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[17:17:20] <xheimlich> one, I'm usually the only pythonperson around. backend stuff is all node now. Python survives on the data science niche. I'm not even doing data science per se, but it's adjacent.
[17:18:00] <xheimlich> second, we like to call some things (maybe even trivial from a phd thesis perspective) trade secrets. It makes us look good in PPT pitches.
[17:18:07] <The-Compiler> "Traffic to the endpoint has not subsided in any substantial way and we have not heard from any of the parties who continue to issue hundreds of thousands of search calls per hour." :(
[17:18:18] <xheimlich> putting things behind HTTP APIs is perfect for this.
[17:18:27] <lidless> jaggz: pip install pip-search && pip_search foo
[17:18:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:19:37] <jaggz> geez. thanks for the help, foo
[17:19:47] <lidless> foo!
[17:19:47] <jaggz> ;D
[17:20:41] <hexnewbie> xheimlich: Here's my code that parses and evaluates C-like expressions: https://bpa.st/TT6A (I converted it to Python 3, removed the coupling from the larger project (as the expressions originally generated “playbooks”, like execssh(host, [cmd1, arg1, arg2, str(20**2])), and made the identifiers C-like instead of freeform :)
[17:21:15] <xheimlich> ohh. I'll study this attentively.
[17:21:46] <hexnewbie> And added variables and namespaces, actually, since the original simply stuffed the names in the so-called “playbook”
[17:21:47] <lidless> hexnewbie: that's bad-ass!
[17:22:41] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:23:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:24:53] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:25:08] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:25:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:25:49] <hexnewbie> Unfortunately, it looks like lrparsing is still beta and not quite popular, and is also AGPLv3, which may turn people off. But there could (and probably are) parser libraries that work as simple.
[17:25:55] *** Joins: fikran (~fikran@user/fikran)
[17:26:42] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:26:56] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:27:03] <xheimlich> I once started learning something that parsed some extended BNF type thing. It was a text-driven wazza-zazza I specified and never implemented.
[17:27:31] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:27:42] <xheimlich> Lark.
[17:28:16] <xheimlich> but Pierpaolo was rather complicated. That was from the Old Days, before the baby. https://github.com/asemic-horizon/pierpaolo
[17:28:29] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: bye)
[17:28:31] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[17:29:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:29:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:30:12] *** Joins: dav1d (~dav1d@user/dav1d)
[17:30:36] *** Joins: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de)
[17:30:36] *** Quits: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de) (Changing host)
[17:30:36] *** Joins: menace (~someone@user/menace)
[17:30:44] *** menace is now known as Deknos
[17:31:11] *** Quits: Allegretto (~allegrett@84-236-36-95.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:31:54] <hexnewbie> Lark seems even simpler, and as if it is doing the same
[17:32:08] *** Joins: whistl (~whistl@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[17:32:38] *** Joins: kts (~kts@103.73.237.195)
[17:33:10] *** Quits: kts (~kts@103.73.237.195) (Client Quit)
[17:33:16] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[17:36:16] <xheimlich> I never even figured out how to programmatically freeze a computer in a platform-neutral manner.
[17:36:33] <xheimlich> (which is what should happen if you type INTRODUCE GESUALDO)
[17:36:46] *** Joins: e2m4n (~ezman@user/e2m4n)
[17:37:35] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[17:38:01] *** Quits: whistl (~whistl@172-125-148-108.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[17:38:30] *** Joins: ice9 (~ice9@user/ice9)
[17:39:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:39:33] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[17:40:01] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:40:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:42:50] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Max SendQ exceeded)
[17:43:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:43:15] *** Quits: slisnake0 (~slisnake@82.102.25.13) (Ping timeout: 256 seconds)
[17:43:17] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:43:17] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:43:51] *** Joins: deadpiefly (~deadpiefl@188.30.128.14.threembb.co.uk)
[17:44:25] *** Joins: Allegretto (~allegrett@89-186-97-80.pool.digikabel.hu)
[17:44:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:46:01] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:46:49] *** Joins: sandb0y (~pirate@user/sandb0y)
[17:47:19] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:47:29] *** Quits: aniketgm (~aniketgm@49.36.57.63) (Quit: leaving)
[17:47:29] *** Joins: slisnake0 (~slisnake@82.102.25.12)
[17:49:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:52:13] *** Joins: pycurious (~Adium@user/pycurious)
[17:53:35] *** Joins: darksun (~darksun@user/darksun)
[17:54:28] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:59:07] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:01:02] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[18:01:16] *** Quits: bluedust_ (~bluedust@59.98.50.19) (Remote host closed the connection)
[18:01:51] *** Joins: bluedust (~bluedust@59.98.50.19)
[18:01:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:02:13] *** Joins: mickey8 (~user@user/mickey)
[18:02:42] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:02:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:04:03] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[18:04:08] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Ping timeout: 250 seconds)
[18:06:02] *** Quits: bluedust (~bluedust@59.98.50.19) (Ping timeout: 240 seconds)
[18:06:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:07:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:07:03] *** Joins: ComputerTech_ (~ComputerT@user/computertech)
[18:07:44] *** Joins: Kruppt (~Kruppt@50.111.29.57)
[18:08:02] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[18:08:32] *** Joins: Auron (~Auron956@user/auron)
[18:09:36] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[18:11:31] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[18:12:09] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[18:12:32] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[18:13:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:13:32] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[18:13:49] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:14:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527)
[18:14:55] *** Quits: deadpiefly (~deadpiefl@188.30.128.14.threembb.co.uk) (Remote host closed the connection)
[18:15:05] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Client Quit)
[18:15:10] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[18:16:52] <foo> I have a context dictionary of sorts that stores various information to process/act on between background processes and web processes. I normally stick my entire configuration file in there... eg. context["conf"]... and my conf file has various API keys. eg. think an IMAP user/pass that's used across the system. I don't see any issue with this but it just dawned on me, is this a security concern?
[18:18:35] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Quit: Leaving...)
[18:20:50] *** Joins: bluedust (~bluedust@59.98.50.19)
[18:21:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:21:27] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:23:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:10] *** Joins: georgios (~georgios@user/georgios)
[18:24:52] *** Quits: louis_ (~louis@host-92-0-176-231.as13285.net) (Remote host closed the connection)
[18:25:25] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[18:25:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:25:58] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[18:28:52] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[18:29:16] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[18:30:42] *** Joins: ice9 (~ice9@user/ice9)
[18:32:02] *** Joins: esther (~esther@2607:fb90:5fe1:4b46:d1da:f3e0:5c2:3643)
[18:35:48] *** Joins: bluedust_ (~bluedust@103.161.144.94)
[18:36:17] *** Quits: esther (~esther@2607:fb90:5fe1:4b46:d1da:f3e0:5c2:3643) (Ping timeout: 240 seconds)
[18:36:52] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:37:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:38:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[18:38:32] *** Quits: bluedust (~bluedust@59.98.50.19) (Ping timeout: 240 seconds)
[18:39:01] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[18:39:21] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1d13-cde8-80a7-543f.res6.spectrum.com)
[18:39:21] *** Joins: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f)
[18:41:51] *** Joins: fef (~thedawn@user/thedawn)
[18:42:08] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[18:42:09] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[18:43:54] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[18:45:28] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[18:45:32] *** Quits: cosimone (~user@93-44-186-112.ip98.fastwebnet.it) (Remote host closed the connection)
[18:45:37] *** Quits: rMdes (~rmdes@my.armada.digital) (Read error: Connection reset by peer)
[18:46:00] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:46:06] <nedbat> foo: it depends what you do with the dictionary.  how do you store it and share it?
[18:46:25] <leitz> Line 6/75 inserts data into the database. Except if the print statement in line 5/74 is there. Why does the print seem to exist the elif? If I remove line 5/74, the insert happens normally.    https://bpa.st/FQHA
[18:48:10] <leitz> Well, now it works.  /me bangs his head against the desk...
[18:49:58] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:51:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[18:52:40] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 250 seconds)
[18:52:40] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[18:53:11] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[18:54:05] *** Joins: monkeycoder (~monkey@2001:d08:1b83:205d:38fa:63fa:d3cf:a6b1)
[18:54:07] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[18:56:15] *** Quits: monkeycoder (~monkey@2001:d08:1b83:205d:38fa:63fa:d3cf:a6b1) (Client Quit)
[18:57:11] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[18:59:22] *** Joins: MrCollinsGA (~MrCollins@199.231.255.146)
[18:59:48] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:00:07] <MrCollinsGA> help python super newb here. https://paste.debian.net/1227211/ Can someone help me sort this out? thank you in advance.
[19:00:30] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[19:00:43] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[19:01:00] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:01:14] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[19:01:20] *** Quits: stblaha (~stblaha@user/stblaha) (Ping timeout: 250 seconds)
[19:01:33] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[19:01:51] <nedbat> MrCollinsGA: you've put a "python" command into a file that should only have python code in it.
[19:01:52] <han-solo> MrCollinsGA: `encoder2upload.py` should that some shell script ?
[19:02:06] <han-solo> should that be*
[19:02:12] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[19:02:38] <nedbat> MrCollinsGA: change the first line to #!/usr/bin/bash
[19:03:03] <nedbat> MrCollinsGA: #!/usr/bin/env bash      actually
[19:03:17] <han-solo> yeah, and maybe fix the extension to .bash or something
[19:03:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:03:46] <han-solo> "for humans", not that it will cause any issue technically
[19:04:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c0da:ab94:f145:24f4)
[19:04:01] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c0da:ab94:f145:24f4) (Changing host)
[19:04:01] *** Joins: skapata (~Skapata@user/skapata)
[19:04:12] <nedbat> MrCollinsGA: i would remove the extension, and you probably need backslashes at the ends of lines 2-6
[19:04:56] <han-solo> oh maybe better to remove the extension altogether
[19:06:17] <MrCollinsGA> nedbat han-solo  ok
[19:06:27] <MrCollinsGA> thank you much! :)
[19:08:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:09:35] <MrCollinsGA> thank yall so much that fixed it!
[19:10:01] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:10:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[19:10:06] *** ayusta is now known as ayustae
[19:10:10] * MrCollinsGA bows to han-solo and nedbat 
[19:12:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:14:00] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a)
[19:14:38] *** Joins: NotTheBees (~sven@94-210-181-75.cable.dynamic.v4.ziggo.nl)
[19:14:58] <Henry151> hey folks
[19:15:02] *** Quits: norbinaa (~be3uykpy@2a00:a040:19a:b060:b441:7875:2785:6006) (Ping timeout: 240 seconds)
[19:15:10] <Henry151> https://bpa.st/TABA trying to get ipython working properly
[19:15:42] <nedbat> Henry151: is it not working?
[19:15:50] <Henry151> i am confused about where it is getting python 3.10.1 from
[19:15:58] <Henry151> i didn't think i had that version installed
[19:16:36] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[19:16:53] <nedbat> Henry151: how did you install ipython?  what does "type -a python" and "type -a ipython" show?
[19:17:18] *** vegii_ is now known as vegii
[19:17:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:18:00] <Henry151> nedbat: i installed ipython with "brew install ipython".. ipython is /opt/homebrew/bin/ipython and python is /usr/bin/python
[19:18:40] *** Quits: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f) (Ping timeout: 250 seconds)
[19:18:46] <nedbat> Henry151: ipython brought in 3.10 for you
[19:19:01] <bmr> nedbat: oh man, i've been using unix-systems for 25+ years and never knew about type -a... what a gem!
[19:19:15] <nedbat> bmr: i think i learned about it here :)
[19:19:56] <bmr> always used which, that never made much sense when aliases were involved, this is... well. thanks :)
[19:20:21] <Henry151> i usually would use which as well
[19:20:41] <Henry151> nedbat: so, where did it bring it to? how can i access it other than through ipython?
[19:21:40] *** Quits: bluedust_ (~bluedust@103.161.144.94) (Remote host closed the connection)
[19:21:43] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:21:46] <nedbat> Henry151: /opt/homebrew/bin/python3 might be 3.10.1
[19:22:12] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[19:22:15] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[19:22:20] <NotTheBees> I'm using django + drf to build an API and for some calls I've decided to to with raw sql because django's querysets turned out to be fairly slow. But now i need some variations of this query depending on some parameters does anybody know if there is a more structured way of doing this instead of concatenating strings?
[19:23:18] *** Joins: pepper (~pepper@user/pepper)
[19:23:23] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[19:23:38] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[19:23:48] <han-solo> NotTheBees: parameterize the queries ?
[19:23:59] <han-solo> https://docs.djangoproject.com/en/4.0/topics/db/sql/#passing-parameters-into-raw # ?
[19:24:36] <NotTheBees> the problem is that the depending on the parameters i need to alter the query slightly with additional checks
[19:25:05] <Henry151> nedbat: /opt/homebrew/bin/ does not contain a python3 or a python, just ipython
[19:25:21] <nedbat> Henry151: then in ipython do this:  import sys; print(sys.executable)
[19:25:26] *** Joins: bloody (~bloody@user/bloody)
[19:25:49] <nedbat> NotTheBees: i'm curious why the orm queries were slow, it's usually pretty good at building sql
[19:25:51] <Henry151> thanks nedbat!
[19:27:07] *** Joins: wynemo (~wynemo@116.206.103.245)
[19:28:42] <foo> nedbat: a bit delayed, on the topic of what I do with the dictionary and how I store it /share it. I have a "context loader" that gets ran before any process runs... it needs a context dictionary. It doesn't get "stored" per say, it gets generated per user. I'm not sure on the best way to store imap user/pass, I don't want to do it in clear text. This isn't different for every user, this is a global imap
[19:28:48] <foo> account we'll use. It gets "shared" between different functions, often the first paramter
[19:29:30] *** Joins: xkuru (~xkuru@user/xkuru)
[19:29:33] <nedbat> foo: generated how? you were concerned about security: are there secrets in it?
[19:29:35] <NotTheBees> To be fair the query has to go over a lot of data, it was getting kind of complicated so i used django's Q objects which made the query take around 20 sec whereas with raw sql it takes < 5
[19:29:36] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[19:29:57] <foo> I'm going to be processing PDFs on a system, max 25MB per PDF. I think I can either A) do this in memory or B) do this on the filesystem. Rarely processing two at the exact same time. I think processing in memory is probably best, rather than storing on the filesystem, processing, and then deleting/cleaning up - right?
[19:30:25] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:273:8614:9fc9:d782) (Quit: Leaving)
[19:30:34] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:31:14] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:31:58] <foo> nedbat: Appreciate you clarifying, I realize I wasn't as clear as I could have been. In this specific instance, there is an imap user/pass we connect with that needs to get stored securely. At first I thought I could store that plain text, read it into the context dictionary, then reference it in the imap connector... but that's probably not the best way to do it. I could tokenize it I suppose
[19:33:24] *** Joins: paul424 (~tom@ip-5-172-239-103.multi.internet.cyfrowypolsat.pl)
[19:33:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:33:35] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[19:34:02] *** Parts: wynemo (~wynemo@116.206.103.245) ()
[19:34:43] <foo> Actually, in my PDF question, I am downloading this from an email attachment via IMAP. I may not even be able to read that into memory, I might need to save it.
[19:35:16] *** Joins: fikran (~fikran@user/fikran)
[19:35:33] *** Joins: Lush-_ (~lushlush@modemcable225.71-19-135.mc.videotron.ca)
[19:35:33] *** Quits: Lush-_ (~lushlush@modemcable225.71-19-135.mc.videotron.ca) (Changing host)
[19:35:33] *** Joins: Lush-_ (~lushlush@user/lush-/x-1276235)
[19:38:10] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 250 seconds)
[19:38:19] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[19:39:08] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:41:39] *** Joins: bluedust (~bluedust@103.161.144.94)
[19:41:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[19:41:49] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[19:42:13] <foo> For example, I could store the user/pass for IMAP via encrypt/decrypt here: https://bpa.st/SQPA -> and the only way for someone to pull the user/pass if if they manually ran the decryption on the stored values.
[19:42:23] <foo> That's likely fine, everyoen who has access to this system is trusted
[19:42:50] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[19:43:33] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[19:44:14] *** sven_ is now known as noent
[19:44:29] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:44:40] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:44:56] *** Joins: Betal (~Betal@user/betal)
[19:45:41] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[19:47:11] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:47:54] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:48:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[19:50:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:54:42] *** Joins: Guest81 (~Guest81@2600:6c5e:157f:df79:b90b:75aa:306d:d423)
[19:55:21] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[19:55:35] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[19:56:03] <catern> .oO( raise None should be a no-op, then you can optionally raise an exception by having a variable that either contains it, or None )
[19:56:12] *** Quits: rsx (~dummy@ppp-188-174-150-199.dynamic.mnet-online.de) (Quit: rsx)
[19:56:20] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:56:57] *** Quits: arcticblue (~AdminUser@KD121109002017.ppp-oct.au-hikari.ne.jp) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:56:59] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 256 seconds)
[19:57:12] <catern> .oO( someone is probably going to be extremely unimaginative and say "why not an if statement", rather than thinking about why not )
[19:57:32] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:57:55] *** Quits: guilherme_ (~guilherme@186.223.115.171) (Quit: Leaving)
[19:57:59] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[19:58:38] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:59:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[19:59:02] *** ayusta is now known as ayustae
[20:00:00] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[20:00:24] *** Joins: novns (~novns@user/novns)
[20:01:59] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[20:02:27] <leitz> Running tests on a sqlite3 db. With the following code, if it's run by itself or at the beginning of the test file, it works. Otherwise the DB is locked and the test fails. How do I ensure the DB is unlocked before each test?   https://bpa.st/A4AQ
[20:02:39] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:02:44] <leitz> The db is currently on-disk.
[20:03:05] *** Joins: seednode99 (~seednode@user/seednode)
[20:03:10] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:03:31] *** Quits: novns (~novns@user/novns) (Client Quit)
[20:03:53] *** Joins: novns (~novns@user/novns)
[20:05:35] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a) (Quit: Leaving)
[20:06:15] *** Joins: M_Breviger (~vox@2601:19b:c700:d540::bf49)
[20:06:33] *** Joins: be3uykpy (~ubuntu@141.144.233.89)
[20:06:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:06:38] *** Joins: stanrifkin (~stanrifki@p200300dbcf3c780065439eeb39be1543.dip0.t-ipconnect.de)
[20:06:48] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[20:06:59] <be3uykpy> hi
[20:08:02] <stanrifkin> some book suggestions for advanced programmer? not something who explains me how loops works etc.
[20:08:18] <han-solo> i liked fluent python
[20:08:46] <davis> stanrifkin: how about work on a github repo and learn from others?
[20:08:49] <han-solo> but it's been some time...and i'm not sure new stuffs like async is mentioned in that, maybe they did
[20:08:52] *** Joins: cosimone` (~user@93-44-186-112.ip98.fastwebnet.it)
[20:09:01] *** Parts: M_Breviger (~vox@2601:19b:c700:d540::bf49) ()
[20:09:13] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[20:09:14] <davis> if you are interested you can join me on a dev post hackathon entry.
[20:09:43] <stanrifkin> there was something like python phrases or so
[20:09:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[20:09:48] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Ping timeout: 250 seconds)
[20:10:41] <stanrifkin> i am looking for something like this horstmann cay books for.
[20:11:33] <leitz> stanrifkin, like han-solo said, if you're advanced, Fluent Python seems highly recommended. A new version is supposed to be out in a month or two.
[20:11:52] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a)
[20:11:56] <stanrifkin> leitz: yes fluent python seems promising.
[20:13:00] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[20:13:04] <leitz> stanrifkin, are you good at Python, or advanced in another language and want to get advanced in Python?
[20:13:23] *** Joins: novns (~novns@user/novns)
[20:13:34] *** Joins: \mSg (mSg@user/msg/x-0285936)
[20:13:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:14:33] *** Quits: fstd (~fstd@xdsl-87-79-46-57.nc.de) (Read error: Connection reset by peer)
[20:14:44] *** Joins: fstd (~fstd@xdsl-87-79-46-57.nc.de)
[20:15:11] <stanrifkin> i did python. forgot most of it.
[20:15:24] <stanrifkin> that was more of these 2.4 times
[20:15:40] <stanrifkin> my learning python books on the shelf is quite old
[20:16:40] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Ping timeout: 256 seconds)
[20:18:20] <leitz> stanrifkin, then maybe start with Python 3 Object Oriented Programming (Dusty Phillips). It'll catch you up on a lot of the Python 3 stuff, and then you can probably go into Fluent Python's new edition.
[20:18:51] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:19:19] *** Joins: fanis30 (~anon@adsl-122.37.6.162.tellas.gr)
[20:19:39] <stanrifkin> exactly what i was looking for. thank you
[20:19:49] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[20:20:12] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a) (Quit: Leaving)
[20:22:29] *** Quits: davis (~davis@70-130-78-202.lightspeed.rlghnc.sbcglobal.net) (Quit: Lost terminal)
[20:22:53] *** Abrax is now known as jesus
[20:22:56] *** jesus is now known as Abrax
[20:23:07] <leitz> Happy to help.
[20:23:42] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[20:24:48] *** Joins: mud (~mud@user/kadoban)
[20:25:03] *** Joins: zaquest (~notzaques@5.130.79.72)
[20:26:46] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[20:27:21] *** Joins: bluedust (~bluedust@103.161.144.94)
[20:28:17] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a)
[20:28:33] *** Quits: NotTheBees (~sven@94-210-181-75.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:30:34] *** Joins: summersault (~summersau@179.221.251.36)
[20:31:05] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:8592:709e:6303:d30a) (Client Quit)
[20:31:28] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 250 seconds)
[20:31:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:33:17] *** Joins: ld_ (~a0z1@37.120.159.165)
[20:33:42] *** Quits: optimant (asavage@user/optimant) (Quit: WeeChat 3.2.1)
[20:34:05] *** Quits: timburke__ (~timburke@thunderhill.nvidia.com) (Read error: Connection reset by peer)
[20:34:14] <ddavtian> exit
[20:34:23] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Quit: Lost terminal)
[20:34:56] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 250 seconds)
[20:35:22] *** Joins: timburke__ (~timburke@157.131.128.146)
[20:35:32] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[20:35:55] *** Joins: optimant (~asavage@user/optimant)
[20:36:48] *** Quits: be3uykpy (~ubuntu@141.144.233.89) (Quit: WeeChat 2.8)
[20:37:31] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[20:37:39] *** Joins: be3uykpy (~ubuntu@141.144.233.89)
[20:38:08] <lantech19446> why is it that when I request a json file in ipython I can call it and view the contents but I don't seem to be able to search them or otherwise manipulate them in any manner?
[20:38:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[20:39:00] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:39:57] *** Quits: Voxel (~f8er@user/voxel) (Quit: WeeChat 2.8)
[20:40:20] *** Joins: zebrag (~chris@user/zebrag)
[20:42:52] <grym> lantech19446: because youre looking at a string, most likely
[20:44:20] <lantech19446> is that why you did json.loads(dat) in the thing you wrote for me?
[20:44:46] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[20:45:07] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:35b:d559:ff3f:530f) (Quit: Leaving)
[20:46:44] *** Joins: humberto1 (~humbertow@189.236.30.209)
[20:46:47] <lantech19446> like I see how you made it work when using a static file but I'm trying to load a file that gets changed every day and for some reason json.loads won't work for me and I have imported json it's telling me some error about it having to be a string but changing the variable name to a string isn't working either so I've just been getting frustrated with it
[20:49:42] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:50:13] *** Joins: stblaha (~stblaha@user/stblaha)
[20:50:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:50:41] *** Quits: Guest81 (~Guest81@2600:6c5e:157f:df79:b90b:75aa:306d:d423) (Quit: Client closed)
[20:50:49] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[20:52:38] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[20:52:52] <foo> Re-asking a confusing question before: I have a script that connects with IMAP. I need to provide these credentials to our system (this is a global account, a single user/pass). I was thinking I could encrypt/decrypt on use via https://bpa.st/SQPA -> this way the user and pass is not stored in clear text and for someone to "figure it out" they'd need to manually encrypt/decrypt things. (Which would really
[20:52:58] <foo> just be a trusted developer). This is likely a fine way to do this, right?
[20:53:16] *** Parts: stanrifkin (~stanrifki@p200300dbcf3c780065439eeb39be1543.dip0.t-ipconnect.de) (Leaving)
[20:54:57] *** Joins: bluedust (~bluedust@103.161.144.94)
[20:55:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:56:11] *** Joins: mugwort (~mugwort@2a00:23c5:259b:2001:5d91:b856:c159:b52e)
[20:57:28] <mugwort> hi, I have many versions of python 3 installed and want to replace them all with 3.9, is there a way to install all the modules & dependencies i've installed via pip to 3.9 before i uninstall the older ones/
[20:57:30] <mugwort> ?
[20:57:59] <moonmoon> foo: what's your threat model?
[20:58:24] <deniska> foo: if the secret is encrypted using non-secret data on the same machine, it's not really a secret
[20:58:27] <han-solo> 1. uninstall the pythons *you* installed other than 3.9  2. use a venv
[20:58:29] <foo> moonmoon: damn, I have no idea what that means, but I like it. I can take a guess. Is there a formal assessment to what's involved in answering that I can be mindful of?
[20:58:58] *** Quits: fanis30 (~anon@adsl-122.37.6.162.tellas.gr) (Quit: WeeChat 3.3)
[20:59:03] <han-solo> mugwort: donot mess with the system python(like setting the default python 3.9 and asuch)
[20:59:03] <foo> deniska / moonmoon - this is really to make it a little less obvious for other devs. But I like where this is going. Would you have a "separate system" and an API to pack/unpack such a thing?
[20:59:15] <deniska> foo: or keep it plain text
[20:59:40] <deniska> foo: there're various solutions for secret management if you need something more sophisticated than that
[21:00:02] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 240 seconds)
[21:00:09] <foo> deniska: honestly, we only have 1-3 devs, if it was clear text it's probably no big deal. I'm the only one with access to production... devs would have their own sandbox. So it's likely not an issue at all.
[21:00:20] <deniska> "threat model" is a fancy way of saying "what are you afraid of happening"
[21:00:35] <foo> hey moonmoon , why you gotta be fancy? :P
[21:00:40] <foo> deniska: thanks for clarifying :)
[21:00:42] <moonmoon> sorry my client decided to crash right then
[21:01:09] <foo> I'm not really afraid of anything happening, likely over thinking this. I'm the only one with access to production. And the odds of this getting exposed somehow via a web interface is very very unlikely
[21:01:42] <moonmoon> is the decryption key only living on production? or does it live on the dev machines as well?
[21:01:45] *** Quits: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de) ()
[21:02:00] <moonmoon> if the latter, then you gain nothing in regards to "devs obtaining the password" because they can still do that
[21:02:14] <foo> moonmoon: I like your questions. I'll have to double check that. Ideally, only on production.
[21:02:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:02:23] *** Joins: stanrifkin (~stanrifki@p200300dbcf3c780065439eeb39be1543.dip0.t-ipconnect.de)
[21:02:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:02:25] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: Lost terminal)
[21:02:35] *** Parts: stanrifkin (~stanrifki@p200300dbcf3c780065439eeb39be1543.dip0.t-ipconnect.de) (Leaving)
[21:02:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:02:41] *** Joins: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de)
[21:02:58] <moonmoon> ok, so let's assume it's only on production. Follow-up question is will anything subsequently break for devs on their testing environments because the script cannot log in?
[21:03:00] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[21:03:58] <moonmoon> (or can you provision a separate credential for testing which has access to non-production data; I'm not certain how you're using this key)
[21:04:24] <foo> moonmoon: yes, provisioning separate credential is likely the answer. And since they'll have their own sandbox anyway, it'll be different
[21:04:24] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[21:04:45] <leitz> if the insert just does an insert, why does the self.con.commit() get a "database locked"?    https://bpa.st/PWHA
[21:05:11] <leitz> Removing the commit avoids the "database locked" error.
[21:05:27] <grym> lantech19446: yes you'll need to loads probably; requests has a .json() method that should do that for you
[21:05:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:05:36] <mugwort> han-solo are virtual environments any slower? and is there any need to if I don't really need the older versions (at least i think i dont)?
[21:05:42] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:06:05] <moonmoon> foo: how I handle this at my org is via the CD (continuous delivery) infrastructure, but I'm guessing you likely don't have that. I think what we did before was have one config file with all of the environment's secrets encrypted via different keys, and ensured the decryption keys were only available to that environment
[21:06:10] *** Joins: fef (~thedawn@user/thedawn)
[21:06:28] <foo> moonmoon: I really appreciate it, that's very helpful.
[21:06:29] <moonmoon> and some logic to determine what the current environment is and pull that particular config entry
[21:07:24] <moonmoon> environment variables are another option but since they aren't part of the app code you'll need good documentation to know that there are external bits involved in setting up the app
[21:08:02] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 240 seconds)
[21:08:04] <moonmoon> (and those won't be encrypted at rest, so that exposes you to risk of leaking secrets should an attacker manage to run code in that environment under that user id)
[21:09:08] *** Joins: demon__ (~user@197.54.99.203)
[21:09:09] *** Joins: Termux (puracan@user/termux)
[21:09:20] <foo> Considering the key to decrypt (should) only live in its own environment, if someone got the keys to production on the dev team, this wouldn't be an issue since the decryption key is only on production - I suspect this is the thing
[21:09:29] *** Joins: gitly (~gitly@85.255.234.210)
[21:10:20] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[21:10:22] *** Quits: L0NDONER (~LLLkLLLL@host-78-149-10-182.as13285.net) (Quit: Leaving)
[21:11:12] *** Parts: Termux (puracan@user/termux) (;/)
[21:12:09] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[21:12:38] *** Quits: anotheruser (~user@45.130.86.11) (Ping timeout: 250 seconds)
[21:12:38] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 250 seconds)
[21:14:05] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:14:12] *** Joins: onichomp (~onichomp@2806:264:4408:27:8c1f:856b:32b7:4532)
[21:14:20] <lantech19446> grym: just saw your answer, thank you
[21:15:11] *** Quits: gitly (~gitly@85.255.234.210) (Ping timeout: 256 seconds)
[21:15:20] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[21:15:49] *** Joins: martums5 (~martums@user/martums)
[21:15:55] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:16:05] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:2551:2f5f:591e:b8bb)
[21:16:22] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:16:48] *** Joins: gitly (~gitly@185.69.145.75)
[21:16:57] *** Quits: doc|home (~doc@user/doc) (Quit: Things to do)
[21:18:38] <han-solo> mugwort: no, virtual env is just the environment for the python to run with deps isolated. You create a venv for the python version you want
[21:19:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:19:44] *** Joins: goldcrest1 (~goldcrest@176.234.9.123)
[21:19:52] <mugwort> ah i was just hoping for a way to reinstall all my dependencies for 3.9 without doing it manually
[21:20:03] <mugwort> or having the modules version independent
[21:20:08] *** Joins: osxtra (~root@2605:a601:aa30:fe00::83a2:6799)
[21:20:13] <han-solo> say after you removed all the unwanted pythons *you* installed, you can then `python3.9 -m venv .venv_dir; .env_dir/bin/python -m pip install -r requirements.txt` (assuming you have some requirements list, which if you can get from `python<version> -m pip freeze` you already had
[21:20:18] <mugwort> I just know I'll forget some and it'll break my old projects
[21:20:50] <mugwort> okay thats what I needed
[21:21:24] <mugwort> not sure why i need the venv though, if its only for a specific version
[21:21:39] <jaggz> and for venv users (or modify it for other stuff):
[21:21:41] <jaggz> https://paste.debian.net/1227234/
[21:21:46] <han-solo> say you are working on more than 1 project, and these different projects have different requirements
[21:21:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:21:52] <jaggz> then I can do "venv {tab}" to get a list of envs
[21:21:54] <han-solo> and sometimes they may not be compatible...
[21:21:56] <jaggz> (bash completion)
[21:22:02] *** Quits: goldcrest (~goldcrest@217.131.85.211) (Ping timeout: 240 seconds)
[21:22:03] <mugwort> oh I see
[21:22:07] *** Joins: mickey8 (~user@user/mickey)
[21:22:12] <mugwort> so its more for module versions
[21:22:13] <han-solo> so we isolate the environments for each project
[21:22:14] <mugwort> got ya
[21:22:24] <jaggz> ahhwww.. a wed snappah.. vewwy tasty!
[21:22:31] *** Joins: doc (~doc@user/doc)
[21:22:42] <mugwort> thats pretty useful actually cause having opencv installed stops it working as a local import in blender
[21:23:04] <jaggz> mugwort, yes.. get used to using venvs
[21:23:06] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:23:08] <jaggz> get even more used to it than me
[21:23:09] <han-solo> https://chriswarrick.com/blog/2018/09/04/python-virtual-environments/
[21:23:32] *** Joins: darksun (~darksun@user/darksun)
[21:23:39] <jaggz> (prior to venv I was using miniconda)
[21:23:48] <jaggz> which I think ends up putting prebuilt bins on your system
[21:23:52] <jaggz> for cython stuff
[21:24:28] <mugwort> god i wish i was a real software guy
[21:24:45] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[21:25:07] <mugwort> my code is ok but linking and stuff im no good
[21:25:08] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[21:25:29] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Remote host closed the connection)
[21:25:30] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[21:25:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[21:25:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:25:44] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[21:26:13] <roxfan> "real software guy" is just a normal guy with enough sw experience
[21:26:24] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Client Quit)
[21:26:49] <nedbat> last time my company printed business cards, I put my title as "Software Guy"
[21:27:05] <mugwort> im okay with c and python, just so many fancy new languages and stuff to get a job anymore
[21:27:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:27:24] <mugwort> nedbat nice
[21:27:47] <jaggz> mugwort, may you never be happy with anyone else's junk, and always wish you could get your hands in there and fix it to make it work the way it should
[21:27:50] *** Joins: vassenn (~vassen@178.35.109.151)
[21:28:12] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[21:28:12] <jaggz> I can't be the only coder who suffers like this ^
[21:28:25] <mugwort> jaggz **literally every ios library
[21:28:28] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[21:28:34] <jaggz> lol
[21:28:41] <jaggz> no ios for me
[21:28:43] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:28:46] <jaggz> well, i got a tablet once..
[21:28:52] <jaggz> my one apple experience
[21:29:10] <jaggz> an ipad mini
[21:29:18] <mugwort> its not fun but the hardwares got so much potential for scene construction and virtual reality
[21:29:24] <jaggz> not a good experience either.  apple makes me nauseous
[21:29:36] <jaggz> immoral and selfish
[21:29:48] <jaggz> (like many others, so it's not just them)
[21:29:51] <mugwort> believe me i know, xcode updates breaking stuff for no reason
[21:30:11] <mugwort> yeah that veritasium vid was good on that
[21:30:20] <mugwort> the lightbulb conspiracy
[21:30:21] <jaggz> why we can't have good things.. yeah
[21:30:28] <jaggz> nice
[21:30:44] <jaggz> anyway.. apple has some good parts too
[21:30:52] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[21:31:04] <mugwort> i disagree with his theory on space expansion though
[21:31:09] <mugwort> (partly)
[21:31:16] <jaggz> but the exploitation of mankind is way too pervasive in western business models so....
[21:31:35] <mugwort> well  more that i believe theres a more fundamental reasoning which gives the appearance of what he said
[21:32:12] <jaggz> (not really 'western' either.. but whatever.. I don't know that much about many [generalized] ethical systems of other countries)
[21:32:14] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[21:32:16] <mugwort> yeah for sure, should probably be automating 70% of jobs by now
[21:32:42] <jaggz> not that.. the feeding off the customers, out of personal greed
[21:33:53] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:34:23] <mugwort> yeah its pretty bad
[21:34:30] <jaggz> this isn't the channel for it, so I'll stop here: our established systems, education, upbringing, and media, all encourage -- both directly and through their very functions -- the practice of taking whatever you can from others, even to the detriment of society and the planet as a whole, all for personal gain
[21:34:38] <mugwort> we need a modern day robin hood to go shank some shareholders
[21:34:56] *** Joins: Atque (~Atque@user/atque)
[21:35:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:35:40] <jaggz> even to the point that they've blasphemously claimed corporations as identities, and endowed them with powers, while imbuing them with the same corrupt and immoral principles, with dominion over humans.
[21:35:56] <jaggz> if you're going to create something, make it "good".
[21:36:04] <jaggz> alright ... </rant>
[21:36:10] <grym> sleep 1; tmux -V; which tmux; exit
[21:36:29] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[21:39:32] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[21:39:33] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:40:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:41:20] *** Joins: Ahil (~Ahil@95.43.223.128)
[21:42:20] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:42:20] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[21:42:32] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:42:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:43:17] *** Ruit is now known as ShmoSeph
[21:44:14] *** Joins: nyah (~nyah@94.6.71.219)
[21:44:37] *** Joins: fikran (~fikran@user/fikran)
[21:45:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:46:41] *** Joins: Guddu (~Guddu@122.161.81.114)
[21:46:47] <Guddu> I have a text file which has a comma separated values of City Code and an associates number. I want to group the dataset y City name and sum the associated numbers. Is it possible to achieve this "only using numpy"?
[21:46:48] *** Joins: et_ (~et@user/et)
[21:46:52] <Guddu> https://dpaste.com/GKFKFGCR6
[21:47:01] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[21:47:17] *** et_ is now known as et
[21:48:10] *** Parts: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Ciao!)
[21:50:02] *** Joins: frmlof (~frmlof@70.243.238.191)
[21:50:14] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:2551:2f5f:591e:b8bb) (Quit: pvergain)
[21:51:39] *** Quits: goldcrest1 (~goldcrest@176.234.9.123) (Remote host closed the connection)
[21:51:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:52:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:53:13] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1004)
[21:55:58] <jaggz> Guddu, hm.. starting with some numpy.sort I think?
[21:56:14] <jaggz> not sure how to sum the clusters though
[21:57:49] <Ahil> Guddu: i would use pandas for this
[21:58:07] <Guddu> Ahil, But they asked numpy specificially.
[21:58:08] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[21:58:11] <Guddu> More of an exercise.
[21:58:25] <Ahil> i understand...
[21:59:48] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[22:00:45] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[22:01:10] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:01:30] *** Quits: onichomp (~onichomp@2806:264:4408:27:8c1f:856b:32b7:4532) (Read error: Connection reset by peer)
[22:01:46] *** Joins: goldcrest (~goldcrest@176.234.9.123)
[22:02:07] *** Joins: onichomp (~onichomp@2806:264:4408:27:8c1f:856b:32b7:4532)
[22:03:46] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:03:58] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:03:59] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[22:04:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:04:43] <Repiphany> Guddu: You could use a combination of sorting, np.unique and np.split
[22:04:44] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:05:14] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:05:32] <Guddu> Repiphany, Can't seem to figure out.
[22:05:45] <Guddu> For a starter, can i have strings as well as numbers in the array?
[22:06:03] <han-solo> yes
[22:06:12] <Repiphany> Needs to be a record array if you want to mix dtypes in a single array
[22:07:10] *** Joins: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net)
[22:08:06] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[22:08:26] *** Quits: Lush-_ (~lushlush@user/lush-/x-1276235) (Quit: leaving)
[22:08:40] *** Joins: bluedust (~bluedust@103.161.144.94)
[22:09:22] *** Joins: Phoebus (sid422845@id-422845.ilkley.irccloud.com)
[22:10:12] *** Joins: reedrichards (~f@c-98-210-128-179.hsd1.ca.comcast.net)
[22:11:27] <Repiphany> Guddu: https://bpa.st/YFVQ
[22:13:02] *** Quits: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:13:50] <Repiphany> Whoops, missed sorting
[22:14:12] *** Quits: mexen (uid495612@user/mexen) ()
[22:17:21] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[22:17:48] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[22:18:33] *** Quits: vassenn (~vassen@178.35.109.151) (Quit: Good bye!)
[22:19:02] *** Joins: mxp (~mxp@185.16.205.131)
[22:20:20] <Guddu> Repiphany, Output does not seem right.
[22:20:21] *** Quits: reedrichards (~f@c-98-210-128-179.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:20:35] <Repiphany> Guddu: Add a d.sort()
[22:21:01] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[22:21:37] *** Joins: Lush-_ (~d@user/lush-/x-1276235)
[22:22:24] *** Quits: delvian (~delvian@41.13.224.165) (Ping timeout: 250 seconds)
[22:23:59] *** Joins: lethu (~lethu@user/lethu)
[22:24:46] *** Quits: Lush-_ (~d@user/lush-/x-1276235) (Quit: leaving)
[22:25:00] <Payam> Hi, How do you from a sync function wait until a couple of futures are done?
[22:25:44] *** Joins: Lush-_ (~d@modemcable225.71-19-135.mc.videotron.ca)
[22:25:44] *** Quits: Lush-_ (~d@modemcable225.71-19-135.mc.videotron.ca) (Changing host)
[22:25:44] *** Joins: Lush-_ (~d@user/lush-/x-1276235)
[22:26:29] <han-solo> https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait # ?
[22:27:15] <Payam> in asyncio
[22:30:01] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[22:30:07] <bjs> Payam: you can't
[22:30:13] *** Joins: Guest36 (~Guest36@2a02:908:1f42:84e0:c434:486a:99f1:231a)
[22:30:24] <Payam> not good. Then more code is required in my program
[22:30:26] <bjs> `async` functions can wait for an async thing (a future) to be done, but normal sync ones can't
[22:30:36] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[22:30:37] *** Joins: Guest143332 (~Guest1433@ppp046176081191.access.hol.gr)
[22:31:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[22:31:50] <han-solo> i'm curious, if you write an async function to wait for the futures to finish there, and in the sync function `loop.run_until_complete(that_async_func())`
[22:31:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[22:31:54] <han-solo> what happens ?
[22:32:17] *** Joins: johnkeats6 (~johnkeats@186.220.240.39)
[22:32:46] *** Joins: programmer (~programme@2a01:5ec0:b801:54b5:43ba:6670:c404:e129)
[22:32:52] *** Joins: lethu (~lethu@user/lethu)
[22:33:23] *** Quits: lethu (~lethu@user/lethu) (Client Quit)
[22:33:59] <han-solo> but then why have the sync function at all maybe *shrug*
[22:33:59] *** Parts: Guest36 (~Guest36@2a02:908:1f42:84e0:c434:486a:99f1:231a) ()
[22:34:16] *** Joins: Guest36 (~Guest36@2a02:908:1f42:84e0:c434:486a:99f1:231a)
[22:34:54] <han-solo> Payam: why not make the sync function async ? and just await the futures there ?
[22:35:16] <Payam> han-solo, I have to call the async function from a sync function somewhere
[22:35:54] <Payam> han-solo, I can add a call back to a asyncfunction that I call from *_threadsafe(..)
[22:36:03] <han-solo> asyncio.run(that_main_entry_point_func())
[22:37:01] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:37:56] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[22:38:01] <han-solo> Okay, likely i might have misunderstood
[22:38:59] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[22:39:14] <bjs> han-solo: you cannot nestedly run the same loop,  and even if you make a new loop it won't work because the sync function will block until it returns
[22:39:50] <bjs> so if you inside your sync function wait for some async thing, then the async thing can never complete because the async things can't happen until an `await` and no await can happen until the sync function is finished...
[22:41:04] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:41:36] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:41:54] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:41:54] *** Quits: johnkeats6 (~johnkeats@186.220.240.39) (Ping timeout: 250 seconds)
[22:42:20] *** Quits: programmer (~programme@2a01:5ec0:b801:54b5:43ba:6670:c404:e129) (Quit: Leaving)
[22:42:23] *** Joins: bluedust (~bluedust@103.161.144.94)
[22:43:02] *** Quits: ethrl (~ethereal@user/doforlove33) (Ping timeout: 240 seconds)
[22:44:08] *** Quits: paul424 (~tom@ip-5-172-239-103.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[22:44:09] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[22:44:37] *** Quits: Guest36 (~Guest36@2a02:908:1f42:84e0:c434:486a:99f1:231a) (Quit: Client closed)
[22:44:46] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:45:32] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:45:53] *** Joins: delvian (~delvian@41.13.192.252)
[22:45:59] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:47:02] *** Quits: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:47:33] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:48:51] *** Quits: Guest143332 (~Guest1433@ppp046176081191.access.hol.gr) (Read error: Connection reset by peer)
[22:49:11] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[22:49:32] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:50:25] *** Joins: ahmed (~ahmed@154.101.128.122)
[22:50:31] <Payam> I am either getting to be a pro on asyncio or I am missreading everything. but somehow my code works.
[22:51:02] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:51:12] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:51:21] *** Joins: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net)
[22:54:09] *** Joins: bluedust_ (~bluedust@81.92.205.25)
[22:54:17] *** Quits: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net) (Client Quit)
[22:54:21] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:54:34] *** Joins: gusto (~Augustus@109.255.100.54)
[22:54:50] *** Joins: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net)
[22:54:57] *** Quits: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net) (Client Quit)
[22:55:13] *** Joins: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net)
[22:55:33] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[22:56:04] *** Joins: bluedust (~bluedust@103.161.144.94)
[22:56:46] <han-solo> bjs: ah, right
[22:57:32] *** Quits: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:57:37] <han-solo> for some reason i thought creating a new event loop would magically make stuff work
[22:58:01] *** Quits: fstd (~fstd@xdsl-87-79-46-57.nc.de) (Read error: Connection reset by peer)
[22:58:15] *** Joins: fstd (~fstd@xdsl-87-79-46-57.nc.de)
[22:58:41] <bjs> han-solo: the issue is that the sync function cannot be paused/stopped,  that's what `async def` does, so any kind of "wait" will block that entire thread
[22:59:02] <bjs> including any event loop on that thread
[22:59:08] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:59:09] <han-solo> right
[22:59:32] *** Quits: bluedust_ (~bluedust@81.92.205.25) (Ping timeout: 240 seconds)
[22:59:59] *** Quits: Ahil (~Ahil@95.43.223.128) (Quit: Konversation terminated!)
[23:00:40] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-105.dsl.bell.ca)
[23:00:58] *** Quits: george91 (~george91@103.137.204.24) (Ping timeout: 250 seconds)
[23:01:24] *** Joins: george91 (~george91@103.137.204.24)
[23:02:17] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[23:05:10] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: Bye)
[23:05:26] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:06:09] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:06:16] *** Joins: pacbard (~pacbard@user/pacbard)
[23:06:53] *** Quits: pacbard (~pacbard@user/pacbard) (Client Quit)
[23:07:27] *** Joins: bluedust_ (~bluedust@81.92.206.10)
[23:08:07] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:08:07] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[23:08:17] *** Joins: pacbard (~pacbard@user/pacbard)
[23:10:02] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 240 seconds)
[23:11:58] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[23:11:58] *** Quits: pacbard (~pacbard@user/pacbard) (Client Quit)
[23:12:50] *** Joins: pacbard (~pacbard@user/pacbard)
[23:13:50] *** Joins: bluedust (~bluedust@103.161.144.94)
[23:14:43] <Evolver> What is the right way to manage the use of Cython to accelerate a number of modules in a code base? How do I keep it from getting unwieldy?
[23:16:00] *** Joins: bluedus__ (~bluedust@185.248.85.41)
[23:16:32] *** Joins: parv (~quass@user/parv)
[23:16:45] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[23:16:51] *** Quits: bluedust_ (~bluedust@81.92.206.10) (Ping timeout: 256 seconds)
[23:16:58] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[23:17:20] *** Joins: mickey8 (~user@user/mickey)
[23:19:10] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 250 seconds)
[23:20:23] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:20:23] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[23:21:46] *** Joins: bluedust (~bluedust@103.161.144.94)
[23:22:25] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[23:23:39] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[23:25:03] *** Quits: Lush-_ (~d@user/lush-/x-1276235) (Quit: leaving)
[23:25:40] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[23:25:40] *** Quits: bluedus__ (~bluedust@185.248.85.41) (Ping timeout: 250 seconds)
[23:25:49] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1004) (Quit: Leaving)
[23:26:06] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 250 seconds)
[23:27:35] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488ravz0wvsb637.ipv6.telus.net)
[23:27:51] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488ravz0wvsb637.ipv6.telus.net) (Remote host closed the connection)
[23:28:15] *** Quits: delvian (~delvian@41.13.192.252) (Remote host closed the connection)
[23:28:16] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488ravz0wvsb637.ipv6.telus.net)
[23:28:35] *** Joins: delvian (~delvian@41.13.192.252)
[23:29:14] *** Joins: Pickchea (~private@user/pickchea)
[23:29:59] *** Joins: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f)
[23:30:01] *** Joins: vicfred (~vicfred@user/vicfred)
[23:30:10] <Nothing4You> what would be a good way to detect `Protocol.eof_received()` on an `asyncio.open_connection()`? i'm working on a connection pool where i want to just discard closed connections and don't care if they have unread data left, which can in some cases happen, so i just need to know if they've received eof
[23:30:48] <Nothing4You> from what i've found so far the only solution seems to be implementing a custom asyncio.Protocol?
[23:31:06] <Nothing4You> other than reading the internal StreamReader._eof
[23:33:52] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0::7e04) (Quit: Leaving)
[23:34:01] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[23:34:12] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[23:34:42] <Nothing4You> or i guess implementing a custom StreamReader instead that does expose `_eof`
[23:35:27] *** Quits: parv (~quass@user/parv) (Quit: parv)
[23:39:47] *** Joins: bluedust (~bluedust@103.161.144.94)
[23:41:09] *** Joins: ice9 (~ice9@user/ice9)
[23:42:28] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[23:42:47] *** Joins: bluedust (~bluedust@103.161.144.94)
[23:43:21] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[23:44:32] *** Quits: delvian (~delvian@41.13.192.252) (Ping timeout: 240 seconds)
[23:44:36] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:47:40] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[23:48:34] *** Quits: bluedust (~bluedust@103.161.144.94) (Read error: Connection reset by peer)
[23:48:58] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[23:49:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:50:04] *** Joins: selikolg (~selikolg@178.62.2.76)
[23:51:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:53:58] *** Joins: fikran (~fikran@user/fikran)
[23:54:58] *** ld_ is now known as a0z1
[23:56:26] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[23:57:25] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:58:52] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[23:58:54] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:59:11] *** Joins: r3m (~launch@user/r3m)
