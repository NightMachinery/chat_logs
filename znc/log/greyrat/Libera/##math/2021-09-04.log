[00:01:19] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[00:02:09] *** Quits: trbp (~trbp@user/trbp) ()
[00:02:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:04:11] <riv> what are all the fields?
[00:05:12] *** Joins: p0indexter (~alpha@user/p0indexter)
[00:06:20] <Z-module> You start with any of the prime fields P = one of Q, F_2, F_3, F_5,.... then throw in some set X (possibly empty) of algebraically independent transcendentals so now we have P(X), and now, finally take some algebraic extension of P(X).
[00:06:57] <Z-module> So there exist fields of all finite sizes p^n (p prime), and of all infinite cardinalities and all possible transcendence degrees (the cardinality |X| )
[00:07:15] <Z-module> and all possible characteristic for infinite fields
[00:07:31] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 252 seconds)
[00:07:38] *** Quits: rain3 (~rain3___@79.115.250.43) (Ping timeout: 256 seconds)
[00:07:57] <Z-module> the field C, for example, is the algebraic closure of Q(X)  where X is an |R|-sized transcendence basis.
[00:08:03] <int-e> Hmm, so algebraic extension = non-free extension. Kind of obvious, but a fun observation.
[00:09:05] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[00:09:35] <Z-module> except for the trivial extension
[00:09:44] <int-e> right
[00:10:01] <riv> I see :D
[00:10:24] <riv> is that every field?
[00:10:37] <riv> i suppose that's all the countable ones
[00:10:37] <Z-module> yes up to isomorphism
[00:10:42] <Z-module> it's all
[00:10:46] <Z-module> X can be *any* size
[00:10:50] <riv> ahh
[00:10:57] <riv> very nice
[00:11:45] <Z-module> for every infinite X, and every prime field P,  |P(X)| = |any alg. ext. of P(X)| = |X|
[00:11:51] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[00:12:02] <Z-module> because all prime fields are countable
[00:12:30] <mh_le> hey
[00:12:40] <Z-module> and because |P[x]| = aleph_0  for all prime fields P, and each polynomial has only finitely many roots in any extension
[00:12:52] <Z-module> hi mh_le
[00:13:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[00:14:34] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:15:07] <mh_le> Z-module: up for a chat?
[00:15:37] <Z-module> sure
[00:17:51] <riv> wait
[00:17:56] <riv> how do we get alg closures in that setup?
[00:18:19] <riv> oh that just counts as an algebraic extension
[00:18:22] <Z-module> It requires non-constructive stuff in general to prove they always exist
[00:18:32] <Z-module> yes, it's any maximal algebraic extension
[00:19:01] <int-e> riv: yeah, every element of the algebraric closure is algebraic over the base field already
[00:19:53] <int-e> So you can add all the elements at once. (Or some of them to get other algebraic extensions.)
[00:21:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:21:41] *** Joins: flynn (~mcbloch@user/flynn)
[00:23:11] <Z-module> any two algeraically closed fields of the same characteristic and same transcendence degree over their prime field are isomorphic. A special case of this is that any two uncountable alg. closed fields of the same characteristic are isomorphic.
[00:23:51] *** Joins: econo (uid147250@user/econo)
[00:24:07] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com)
[00:24:33] <int-e> ...and same cardinalty
[00:24:42] *** Quits: gb73d (gb73d@host-92-10-214-66.as13285.net) ()
[00:27:42] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[00:27:46] <riv> nice
[00:27:50] <riv> fields are pretty tame
[00:29:31] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[00:30:29] <Z-module> yeah
[00:31:17] <Z-module> And there are weird phenomena, such as two fields F, K where the two additive groups (F,+) =~ (K,+), and also the two multiplicative groups (F^*, *) =~ (K^*, *),  but F, K are not isomoprhic fields.
[00:32:17] <riv> that's obviously impossible
[00:32:25] <riv> (i believe you though)
[00:32:31] <Z-module> hehe
[00:32:35] <Z-module> It's not even that exotic
[00:32:47] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[00:35:01] *** Quits: ghen (~nobody@2601:649:100:8b0:1cb6:2b10:8299:70cd) (Ping timeout: 252 seconds)
[00:36:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[00:38:22] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[00:38:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:39:02] *** Joins: blueberrycrop (~blueberry@209.222.165.82)
[00:41:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:47:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:54:48] *** Joins: dextaa2 (~dextaa@user/dextaa)
[00:59:17] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:00:22] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:00:49] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:01:01] *** Joins: flynn (~mcbloch@user/flynn)
[01:02:42] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:03:43] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:05:29] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:06:11] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:06:30] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:08:22] *** Joins: stipa_ (~stipa@user/stipa)
[01:08:40] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[01:09:16] <droid3> So i want to kind of discuss tonight some things about prime test to date.
[01:09:42] <Juliu> Hi guys
[01:09:45] <Juliu> Sounds interesting
[01:09:58] <droid3> I am debating about a few things is AKS better then elliptic curve prime test
[01:10:12] <Juliu> Fuck, you already lost me
[01:10:46] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 252 seconds)
[01:10:48] *** stipa_ is now known as stipa
[01:10:57] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[01:11:11] <droid3> I know elliptic curve prime test still hasnt been proven completely because it only is completely deterministic if the generalized riemann hypothesis is true.
[01:12:01] <droid3> Where as AKS prime test is completely deterministic polynomial time.
[01:12:13] <Juliu> There is a prime test algorithm that runs in polynomial time in the input size, and by input size I dont mean the number, but the number of bits of that number. You know that, right?
[01:12:25] <Juliu> Is that AKS?
[01:12:28] <droid3> So i like your thoughts on AKS vs ECCP test for primes
[01:12:57] <Juliu> My thoughts from a theoretical perspective is that this problem is already solved
[01:13:11] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[01:13:27] <droid3> Juliu thats what i am talking about it seems elliptic curve prime test (ECCP) is faster most of the time then AKS by looking at some runtime analysis.
[01:14:21] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[01:14:33] <Juliu> droid3, that is often the case, that an algorithm that is way slower for the general case (i.e. some hard instances) is still faster for most normal instances
[01:14:34] <droid3> So i was wondering AKS is truely polynomial time but elliptic curve is still not fully known to be polynomial time unless G-RH is true.
[01:14:44] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:15:14] <Juliu> droid3, to give you an example, simply checking the last bit of the number is a faster anti-prime test for 50% of all numbers than any other test
[01:15:31] <Nalt> https://paste.ofcode.org/duGLX8rbtAe82dPuG8zQNn Can anyone tell me why I get this error "Error using table (line 237)
[01:15:31] <Nalt> A table variable must not be a function handle.  Use a cell array to contain function handles." I do not understand what a function handle means
[01:15:39] <droid3> Wait so is AKS or ECCP faster on average when testing primes.
[01:15:53] <Koen_> it's the... name of a function?
[01:16:22] <Juliu> droid3, does ECCP even work in all cases?
[01:16:25] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[01:16:54] <droid3> Juliu agreed because you only got a few first digits out of 0-9 that are problematic most of them give that things are divisible.
[01:17:27] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:17:46] <droid3> I thought ECCP works in general it just wasnt known to be fully polynomial runtime unless somebody proves the G-RH conjecture.
[01:19:33] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:19:41] <Juliu> droid3, so what I mean is that the test, that simply checks increasing integer divising, is often the fastest, even though it gets exponentially slow in some cases
[01:19:50] <riv> AKS is polytime but i think it's not actually efficient in practice?
[01:19:57] <Juliu> *division
[01:20:18] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:20:29] <Juliu> riv, that probably depends on the input, and what you mean by efficient
[01:20:57] <Juliu> I think it is the theoretically fastest know test for the worst case
[01:21:18] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 244 seconds)
[01:21:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:21:27] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:21:27] <riv> yes it depends on the input
[01:22:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:22:17] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:23:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:23:14] <droid3> What about assuming G-RH is true then ECCP becomes a polynomial time algorithm.
[01:23:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:23:34] <droid3> And i am curious AKS vs ECCP which is better on average???
[01:23:46] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:23:47] <droid3> Or is it to close usually to tell.
[01:24:49] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:24:55] *** Lord_of_Life_ is now known as Lord_of_Life
[01:25:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:25:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:26:51] <riv> ECCP
[01:27:31] <droid3> only in average case though not in the worst cases ya i agree by looking at some runtime analysis from those.
[01:28:44] <droid3> Anyway looking a little more into AKS. It kind of was first discovered i would imagine by the identity (x+1)^n = x^n + 1 mod n  iff n is prime.
[01:28:55] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:29:51] <droid3> Which using this if you expand the polynomials and take the difference all your pretty much checking is if n divides all the binomial cofficients of the polynomial.
[01:30:02] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:32:13] <droid3> They generalized it and made it faster by using (x+a)^n = x^n + a mod n  and a few additional conditions on a and r > log2(n)^2 ...etc
[01:32:18] <riv> AKS is amazing
[01:33:08] <droid3> But essentially the first  (x+1)^n = x^n + 1 mod n simplified type of AKS is just checking binomial cofficient divisibility. Aka the proper row in the pascals triangle.
[01:33:20] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:33:57] <riv> smart
[01:34:14] <droid3> I would imagine its alot easier to computer binomial cofficients then expanding a polynomial
[01:34:25] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:34:26] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:34:37] <Franciman> hi, anybody selling a reMarkable 2, by chance?
[01:35:07] <droid3> riv take a look this guy explains it well the simplified version
[01:35:09] <droid3> https://www.youtube.com/watch?v=HvMSRWTE2mI
[01:36:16] <droid3> In his explanation which is great it seems one could speed up this simple case if you just pre-computed pascals triangle/binomial cofficients a head of time.
[01:37:12] <droid3> Anyway i been in the process of implementing this AKS now that i understand a little more on how it works. But there is a few cases that are still figuring out.
[01:38:16] <droid3> they are given this (x+a)^n = x^n + a mod ( x^r + 1 , n )
[01:39:33] <droid3> how does one find f and g polynomials such that (x+a)^n - x^n -a = nf + (x^r-1)g efficiently
[01:40:16] <droid3> Because expanding polynomials or having to even test against a huge number of binomial cofficients is still exponential.
[01:40:38] <droid3> I was a bit curious on how algorithmically one can achieve this
[01:40:42] <droid3> "how does one find f and g polynomials such that (x+a)^n - x^n -a = nf + (x^r-1)g efficiently"
[01:41:22] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[01:41:23] <droid3> because most of the algorithm once you find an r depends on just achieving this
[01:42:07] *** Quits: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0) (Ping timeout: 252 seconds)
[01:42:22] <Koen_> just pick g = anything, then set f = (x+a)^n - x^n - a - (x^r-1)g
[01:42:28] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:43:07] * Koen_ proceeds to publish a research paper "solving the question (x+a)^n - x^n -a = nf + (x^r-1)g very efficiently"
[01:43:49] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[01:44:04] <qergle> write it vurry not very.
[01:44:32] <droid3> so if you pick g any random polynomial how are you getting f?
[01:44:50] *** Joins: dextaa2 (~dextaa@user/dextaa)
[01:44:52] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:45:03] <Koen_> I litterally pick f =  (x+a)^n - x^n - a - (x^r-1)g
[01:45:09] <droid3> to make this identity true (x+a)^n - x^n -a = nf + (x^r-1)g
[01:45:31] <Koen_> oh I forgot the n sorry
[01:45:44] <Koen_> I litterally pick f =  (1/n) * ((x+a)^n - x^n - a - (x^r-1)g)
[01:45:49] *** Joins: zacts (~zak@user/zacts)
[01:47:17] <droid3> but how does that make the computation any better to me it seems it just made it more computations then (x+a)^n = x^n -a mod (x^r-1 ,n)
[01:47:33] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:48:21] <droid3> i thought they where using some euclidean algorithm to find f and g or something to get around having to expand (x+a)^n
[01:48:58] <droid3> but i am confused because really (x+a)^n expanding is the computationally intense  issue if you go with the naive way of thinking about doing it.
[01:49:29] <riv> you could use exponentiation by squaring
[01:49:56] <droid3> Though i can see mod out by x^r-1 for r being as small as possible means you only have less then r cofficients to have to check for divisibility
[01:49:57] <CuriousErnestBro> why is the kolmogorov extension theorem important?
[01:50:14] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[01:50:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:50:35] *** Joins: flynn (~mcbloch@user/flynn)
[01:50:41] <droid3> you dont have to like check a whole row of pascals triangle which for a huge number would be like huge amounts of calculations.
[01:51:08] <Nalt> greenbagels, bagls. do you use matlab
[01:51:18] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c::2)
[01:51:31] <droid3> you only have to check a small fraction of congruences aka r or less
[01:52:44] <droid3> but my issue still stands how does one make or get around having to expand (x+a)^n or having to divide by x^r-1 the later is less of a concern then the former
[01:53:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:53:38] *** Quits: Liblx (~Alex@2a02:810c:280:59c:359a:7e57:9b73:48bf) (Quit: WeeChat 3.2)
[01:53:41] <droid3> because the later kind of depends on  the expansion of (x+a)^n thinking about this the naive brute force computing way
[01:53:44] <greenbagels> Nalt: i used octave for some FFT stuff once
[01:53:51] <Nalt> ;_;
[01:53:51] <greenbagels> but no i dont use matlab
[01:54:29] <droid3> anybody know how getting around (x+a)^n expansion so achieve by this (x+a)^n - x^n -a = nf + (x^r-1)g
[01:56:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Quit: Quit)
[01:56:07] <droid3> O wait so if you mod n both side of (x+a)^n - x^n -a = nf + (x^r-1)g
[01:56:15] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[01:56:33] <droid3> you get (x+a)^n - x^n -a mod n = (x^r-1)g mod n
[01:56:38] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[01:57:20] <alphamule> Tl;Dr it's just addition, not multiplication
[01:57:44] <alphamule> In binary, it works out nicely in a simple pattern
[01:58:08] <Juliu> droid3, sorry, I dont understand your question
[01:59:05] <alphamule> Like, 1's bit, 2's bit, 4's bit...
[01:59:14] <alphamule> Repeats
[01:59:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:59:36] *** Joins: flynn (~mcbloch@user/flynn)
[01:59:40] <droid3> basically i am trying to figure out how they speed up computing (x+a)^n = x^n -a mod ( x^r-1 , n) with out having to expand (x+a)^n
[01:59:47] <droid3> Juliu
[02:00:23] <Juliu> droid3, I dont even understand what your formula means
[02:00:36] <droid3> even if you have to divide x^r -1 you still have to expand (x+a)^n first that my issue
[02:01:09] <droid3> Juliu I am talking on AKS https://en.wikipedia.org/wiki/AKS_primality_test
[02:01:10] <Juliu> What does   x^n -a mod ( x^r-1 , n)   mean?
[02:01:26] <Juliu> Oh sorry, I have no clue about AKS
[02:02:06] <droid3> it means your modding by the polynomial x^r - 1 aka dividing everything by that polynomial and take the remainder
[02:02:48] <droid3> the , n is there to denote your cofficents are in the ring Zn so your modding cofficients of polynomials after the fact by mod n
[02:02:57] <droid3> as well.
[02:03:03] <Juliu> What is   ( x^r-1 , n)   ?
[02:03:26] <droid3> i just told you
[02:04:28] <Juliu> What the fuck is n?
[02:04:39] *** Joins: gotoprod (~textual@modemcable070.54-178-173.mc.videotron.ca)
[02:04:51] <droid3> maybe it better to denote it as Ring of Zn[x] / < X^r - 1 > if your familiar with modern algebra
[02:05:02] <Juliu> I mean I would understand    x^n -a mod (x^r-1)   , but this?
[02:05:12] <droid3> n is the number your testing if its prime or not
[02:05:13] <Juliu> Sorry, parenthesis missing
[02:06:05] <droid3> " I mean I would understand    x^n -a mod (x^r-1)   , but this?"  it is division like that except the cofficients are in Zn
[02:06:11] <Juliu> I cant help you, I dont understand your question
[02:06:42] <Juliu> Does x^n -a mod (x^r-1) mean that only -a get's modulo'd ?
[02:06:48] <Juliu> 'gets
[02:07:13] <droid3> alright no problem i just been banging my head on how to implement this part of the algorithm efficiently
[02:08:40] <droid3> Juliu to try to make you understand all it is ...is this  Ring arithmetic = Zn[x] /<X^r-1> if you dont get that i suggest learning modern algebra before you try to understand my question.
[02:09:05] <alphamule> What's nice is a squares table works the same way.
[02:09:11] <droid3> But thanks for the talk on this its an interesting thing to implement.
[02:09:38] <alphamule> Since the next square in the table is just the previous one plus some incrementing variable...
[02:09:46] <alphamule> The table becomes very regular
[02:10:00] <alphamule> Like, obviously, alternating squares are odd/even
[02:10:11] <droid3> square table ??? you mean precomputing pascals triangle to ridiculous sizes and checking divisibility at a given level. Ya that would work but its still exponential
[02:10:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[02:10:39] *** Joins: Samian (~Sami@2620:10d:c091:480::1:77bb)
[02:10:41] <alphamule> Well, for any given bit, such tables will repeat.
[02:10:54] <droid3> the ability to only check r congruences because of the x^r-1 is the big speed up and makes it polynomial time.
[02:11:00] <alphamule> Not sure of the name of this 'class' of table.
[02:11:28] <Juliu> droid3, I know AKS works on rings, but I fucking hate algebra
[02:11:32] <droid3> However i dont know how to get around the expansion of (x+a)^n efficiently so i am left at an exponential time algorithm anyway :(
[02:11:35] <Juliu> Especially polynomial rings!
[02:12:11] <Juliu> droid3, why cant you just calculate (x+a)^n ?
[02:14:00] <droid3> Because if you want to verify say 31 being prime you have to compute (x+a)^31 power and what about checking 23423823855251 prime (x+a)^23423823855251
[02:14:47] <droid3> you see the issue expansion takes as long time to compute even with the best multiplication algorithms at that point it be easier to just do trial and error up to the sqrt of the number.
[02:14:58] <Juliu> I dont understand you, but not because of the math, but because of the broken English. Sorry
[02:15:26] <Juliu> What is a ?
[02:16:17] <droid3> But some how AKS guys found away to achieve a g such that  (x^r-1)g mod n = 0 with out having to expand (x+a)^n
[02:17:11] <Juliu> What is a g ?
[02:17:26] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[02:17:53] <Juliu> What is a ? What is r ?
[02:17:59] <droid3> as we talked about before  (x+a)^n - x^n -a = nf + (x^r-1)g
[02:18:30] <droid3> you got to either expand (x+a)^n or find an f and g more efficiently.
[02:18:46] <Juliu> What if f ?
[02:18:50] <droid3> Thats the only two ways i can think about this AKS equation
[02:18:58] <Juliu> Fuck, why are you adding a new variable with every line that you write
[02:19:31] <Juliu> We now have x, n, g, f, a, r, .... how many fucking variables will you use?
[02:19:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:20:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:22:29] <droid3> Juliu take a look at the concept section here to better understand
[02:22:32] <droid3> https://en.wikipedia.org/wiki/AKS_primality_test
[02:22:40] <Juliu> No thanks
[02:22:58] <Juliu> If you cant formulize your question correctly, it's no wonder you dont understand it
[02:24:35] <droid3> So if you can achieve g efficiently you only multiply g with x^r -1 and not have to expand (x+a)^n
[02:26:15] <Juliu> Yeah, whatever. You sound like a bot to me
[02:26:42] <droid3> so it reduces to dealing with (x^r-1)g mod n  instead of having to work with (x+a)^n = x^n +a  mod n
[02:28:45] <droid3> and the latter is exponential because of the need of expanding (x+a)^n . But the former only need a fast multiplication and testing of cofficients
[02:29:18] <droid3> Ok later not quite understanding how they make it polynomial
[02:29:32] <Juliu> There is not even an "a" in   (x^r-1)g mod n
[02:29:36] <droid3> for the implementation part
[02:33:00] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[02:33:00] *** Joins: specing_ (~specing@user/specing)
[02:33:07] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 244 seconds)
[02:33:43] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[02:34:00] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:90e1:d632:74a6:36ac)
[02:34:36] *** Joins: johnkeats7 (~johnkeats@189.33.236.157)
[02:34:39] *** specing_ is now known as specing
[02:35:28] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:38:13] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:90e1:d632:74a6:36ac) (Ping timeout: 252 seconds)
[02:42:39] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:60f9:ffc0:b80a:de8f) (Quit: Textual IRC Client: www.textualapp.com)
[02:46:26] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[02:47:25] *** plankers is now known as plank
[02:47:52] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: WeeChat 3.2)
[02:48:27] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 245 seconds)
[02:49:23] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:49:36] *** Quits: gotoprod (~textual@modemcable070.54-178-173.mc.videotron.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:28] *** Joins: h4zel (~hazel@user/h4zel)
[02:59:22] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[03:01:35] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[03:01:49] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[03:05:34] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Quit: Stay safe!)
[03:12:09] *** Joins: zacts (~zak@user/zacts)
[03:12:27] *** Joins: darkapex (~darkapex@user/darkapex)
[03:13:56] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 244 seconds)
[03:14:57] *** Joins: DefiantN (~DefiantN@user/defiantn)
[03:15:39] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[03:15:52] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:17:17] *** Joins: causative (~halberd@user/causative)
[03:20:02] *** Joins: CGILightning (~CGILightn@ip-89-102-193-137.net.upcbroadband.cz)
[03:24:56] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Quit: Leaving)
[03:25:06] *** Joins: stipa_ (~stipa@user/stipa)
[03:25:07] *** Joins: Kaylah (~Kaylah@ptr-eit6u3f00qouqzx4ly0.18120a2.ip6.access.telenet.be)
[03:26:51] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 244 seconds)
[03:26:53] *** stipa_ is now known as stipa
[03:27:22] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 244 seconds)
[03:28:31] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[03:32:40] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 240 seconds)
[03:34:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:37:31] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Quit: Leaving...)
[03:38:30] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:43:40] *** Joins: gotoprod (~textual@modemcable070.54-178-173.mc.videotron.ca)
[03:44:33] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[03:46:46] *** Joins: ghen (~nobody@2601:649:100:8b0:528b:6964:c242:5ed5)
[03:53:16] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[04:02:37] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[04:06:07] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 244 seconds)
[04:09:03] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:10:17] *** Joins: Nalt| (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[04:13:55] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[04:15:07] *** Quits: ivche` (~user@77.28.167.127) (Ping timeout: 245 seconds)
[04:15:56] *** Quits: riv (~river@tilde.team/user/river) (Remote host closed the connection)
[04:16:03] *** PJBoy is now known as Guest6601
[04:16:03] *** Quits: Guest6601 (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[04:16:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:16:15] *** Joins: riv (~river@tilde.team/user/river)
[04:16:22] *** Joins: jmft2_ (~jmft2@81.149.115.87.dyn.plus.net)
[04:18:52] *** Quits: jmft2__ (~jmft2@81.149.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[04:20:03] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[04:20:16] *** Joins: flynn (~mcbloch@user/flynn)
[04:20:37] *** Joins: p0indexter (~alpha@user/p0indexter)
[04:28:02] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[04:28:29] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[04:28:36] *** BillyZane2 is now known as BillyZane
[04:30:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[04:30:03] *** Quits: gotoprod (~textual@modemcable070.54-178-173.mc.videotron.ca) (*.net *.split)
[04:30:03] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[04:30:03] *** Quits: darkapex (~darkapex@user/darkapex) (*.net *.split)
[04:30:03] *** Quits: zacts (~zak@user/zacts) (*.net *.split)
[04:30:03] *** Quits: Oli (~Unknown@user/oli) (*.net *.split)
[04:30:03] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[04:30:03] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[04:30:03] *** Quits: bosspotato (~bosspotat@user/bosspotato) (*.net *.split)
[04:30:03] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (*.net *.split)
[04:30:03] *** Quits: tacegory (~tacegory@user/tacegory) (*.net *.split)
[04:30:03] *** Quits: otto_s (~user@p5de2f91c.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: montxero (~user@149.167.149.74) (*.net *.split)
[04:30:03] *** Quits: byanka (~byanka@185.176.110.253) (*.net *.split)
[04:30:03] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[04:30:03] *** Quits: chasmo77 (~chas77@71.63.241.168) (*.net *.split)
[04:30:03] *** Quits: menace (~someone@user/menace) (*.net *.split)
[04:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[04:30:03] *** Quits: BillyZane (~BillyZane@91.196.220.173) (*.net *.split)
[04:30:03] *** Quits: plankster_ (~plankster@c-73-116-209-212.hsd1.ca.comcast.net) (*.net *.split)
[04:30:03] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: rtur (~weechat@mail.rtur.org) (*.net *.split)
[04:30:03] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[04:30:03] *** Quits: cherim (~UserNick@host-217-197-197-182.rev.as20985.net) (*.net *.split)
[04:30:03] *** Quits: Osares10 (~Osares10@user/osares10) (*.net *.split)
[04:30:03] *** Quits: son0p (~ff@181.136.122.143) (*.net *.split)
[04:30:04] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (*.net *.split)
[04:30:04] *** Quits: jmft2 (~JMFT@82.3.54.26) (*.net *.split)
[04:30:04] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[04:30:04] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[04:30:04] *** Quits: caramel (~caramel@user/caramel) (*.net *.split)
[04:30:04] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (*.net *.split)
[04:30:04] *** Quits: tomaw (tom@libera/staff/tomaw) (*.net *.split)
[04:30:04] *** Quits: ksft (~k@user/ksft) (*.net *.split)
[04:30:04] *** Quits: HisShadow (~HisShadow@user/hisshadow) (*.net *.split)
[04:30:04] *** Quits: qedders (~qedders@132.76.61.52) (*.net *.split)
[04:30:04] *** Quits: qergle (mancha@user/mancha) (*.net *.split)
[04:30:10] *** Joins: otto_s (~user@p5de2f91c.dip0.t-ipconnect.de)
[04:30:11] *** Joins: Oli (~Unknown@user/oli)
[04:30:13] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:30:16] *** Joins: montxero (~user@149.167.149.74)
[04:30:19] *** Joins: PlanckWalk (~Planck@ppp105-115.static.internode.on.net)
[04:30:20] *** Joins: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de)
[04:30:21] *** Quits: PlanckWalk (~Planck@ppp105-115.static.internode.on.net) (Changing host)
[04:30:21] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[04:30:21] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:30:23] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[04:30:25] *** Joins: jmft2 (~JMFT@82.3.54.26)
[04:30:25] *** Joins: byanka (~byanka@185.176.110.253)
[04:30:26] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[04:30:27] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:30:28] *** Joins: chasmo77 (~chas77@71.63.241.168)
[04:30:35] *** Joins: plankster (~plankster@c-73-116-209-212.hsd1.ca.comcast.net)
[04:30:43] *** Joins: tacegory (~tacegory@user/tacegory)
[04:30:48] *** Joins: jinsun (~quassel@user/jinsun)
[04:30:50] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-127-40-205.internet.virginmobile.ca)
[04:30:58] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[04:30:58] *** Joins: rtur (~weechat@mail.rtur.org)
[04:31:02] *** Joins: Dragoon (~Dragoon@e244041.upc-e.chello.nl)
[04:31:04] *** Joins: ksft (~k@pool-173-48-47-80.bstnma.fios.verizon.net)
[04:31:26] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-127-40-205.internet.virginmobile.ca) (Changing host)
[04:31:26] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[04:31:29] *** Quits: Dragoon (~Dragoon@e244041.upc-e.chello.nl) (Changing host)
[04:31:29] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:31:53] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[04:32:00] *** Joins: caramel (~caramel@user/caramel)
[04:32:02] *** Joins: webstrand (~webstrand@user/webstrand)
[04:32:03] *** Joins: darkapex (~darkapex@user/darkapex)
[04:32:09] *** Joins: tomaw (tom@libera/staff/tomaw)
[04:32:12] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[04:32:17] *** Joins: cherim (~UserNick@host-217-197-197-182.rev.as20985.net)
[04:33:03] *** Joins: DefiantN (~DefiantN@user/defiantn)
[04:35:18] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[04:35:20] *** Joins: zacts (~zak@user/zacts)
[04:36:57] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0534-c68d-e38c-6e43.res6.spectrum.com)
[04:37:17] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[04:38:32] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:42:40] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 240 seconds)
[04:45:59] *** Joins: systemmessages (~systemmes@pa49-179-13-71.pa.nsw.optusnet.com.au)
[04:52:25] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Ping timeout: 252 seconds)
[04:52:33] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[04:53:04] *** Joins: p0indexter (~alpha@user/p0indexter)
[04:53:41] *** Quits: systemmessages (~systemmes@pa49-179-13-71.pa.nsw.optusnet.com.au) (Quit: Leaving)
[04:55:21] *** Joins: BUSY (~BUSY@user/busy)
[05:08:35] *** Joins: gggp_ (~gggp@111-251-124-128.dynamic-ip.hinet.net)
[05:13:46] *** Joins: numsima (~numsima@101.175.64.73)
[05:14:44] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[05:14:46] *** Quits: ghen (~nobody@2601:649:100:8b0:528b:6964:c242:5ed5) (Ping timeout: 256 seconds)
[05:18:16] *** Quits: robin (~robin@user/terpri) (Ping timeout: 252 seconds)
[05:22:20] *** Joins: oxum (~oxum@106.203.195.217)
[05:22:40] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:24:17] <jero98772> if i have 4 , 4 , 4 and 4 . how i can to get 10 only with 4 fours¿us know about this math calleng?
[05:24:39] *** Parts: homura (root@user/homura) ()
[05:25:31] *** Joins: Nalt|| (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[05:26:25] <PlanckWalk> There are many such puzzles, yes
[05:27:29] <PlanckWalk> In general, reach some target numbers using some list of numbers and some set of operations.
[05:27:34] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[05:27:48] <PlanckWalk> They vary in whch operations are allowed and whether you must use all the numbers in the list.
[05:28:10] <PlanckWalk> Which operations are you allowed?
[05:28:54] <jero98772> all
[05:28:59] <jero98772> be creative
[05:29:13] <PlanckWalk> Oh, in that case I define the "10" operation that takes any number and returns 10.
[05:29:16] *** Quits: Nalt| (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[05:29:28] <PlanckWalk> I call it "t"
[05:29:29] *** Joins: oxum (~oxum@106.203.195.217)
[05:29:34] <PlanckWalk> So t(4+4+4+4) will do
[05:29:45] <jero98772> ...
[05:29:50] <jero98772> only use arimetic
[05:30:40] <PlanckWalk> (4+sqrt(4))!+4  does it with three 4's.
[05:30:54] <jero98772> you need 4 fours
[05:31:08] <PlanckWalk> 4+4+4-sqrt(4)
[05:31:23] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:31:30] <PlanckWalk> Or (4+4/sqrt(4))!+4
[05:31:37] <jero98772> nice
[05:31:54] <jero98772> you can do = nums of 1 to 10 with 4 fours
[05:32:40] <jero98772> i do that with (44-4)/4 = 10
[05:33:06] <PlanckWalk> Is concatenation an arithmetic operation?  I wouldn't have said so.
[05:33:44] <PlanckWalk> But I suppose you can do that if you allow it in your set of operations.
[05:33:56] <PlanckWalk> That's why it's a good idea to be clear about which operations are allowed up front.
[05:33:57] <jero98772> in this challeng can do all what you like
[05:34:11] <PlanckWalk> Oh, in that case I define the "10" operation that takes any number and returns 10.
[05:34:29] <PlanckWalk> "Anything you like but not that!"
[05:34:46] <jero98772> yes , but ...
[05:35:24] <PlanckWalk> There are also lots of combinatorial functions that are defined that can be used
[05:35:32] <PlanckWalk> Stirling numbers etc
[05:37:37] <jero98772> i gift you my anwser to 4 numbers = nums to 0 to 10
[05:37:38] <jero98772> https://github.com/jero98772/SandCripts/blob/main/scripts/math_challenges/los4numeros.org
[05:38:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:38:28] <alphamule> a+10b+100c is concatenation?  XD
[05:38:52] *** Quits: aliosablack (~chomwitt@ppp-94-69-12-184.home.otenet.gr) (Ping timeout: 245 seconds)
[05:39:01] <alphamule> x_n * 10 + a_n -> x_(n+1) right?
[05:39:20] <alphamule> If added to right and integer
[05:39:37] <PlanckWalk> alphamule: Only for 1 <= a_n <= 9
[05:39:44] <alphamule> Wouldn't make sens subtracting... yeah
[05:40:04] <alphamule> So it would have a very limited input space
[05:40:23] <alphamule> log_2(9) bits
[05:41:03] <alphamule> Adding 0 to right would work if x_0 is not 0
[05:41:30] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[05:41:53] <PlanckWalk> S(4+4/4,4) = 10
[05:42:53] *** Joins: oxum (~oxum@106.203.195.217)
[05:43:02] *** Joins: kmh (~kmh@p200300df5f306000bc2a0488d71d046a.dip0.t-ipconnect.de)
[05:44:20] *** Joins: Everything (~Everythin@37.115.210.35)
[05:44:48] *** Quits: kmh_ (~kmh@p200300df5f102900bc2a0488d71d046a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:48:04] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[05:53:29] *** Quits: CGILightning (~CGILightn@ip-89-102-193-137.net.upcbroadband.cz) (Quit: Leaving)
[05:53:52] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 245 seconds)
[05:59:47] *** Joins: Arcorann (~A@user/arcorann)
[06:01:10] *** Quits: xff0x (~xff0x@2001:1a81:5362:1000:c47d:ed82:441b:712b) (Ping timeout: 252 seconds)
[06:01:34] *** Quits: Oxyd (~oxyd@81.4.100.42) (Changing host)
[06:01:34] *** Joins: Oxyd (~oxyd@user/oxyd)
[06:02:53] *** Joins: xff0x (~xff0x@2001:1a81:5399:4e00:f397:598c:9bde:b2ba)
[06:07:14] *** Joins: zacts (~zak@user/zacts)
[06:07:53] *** Joins: newpy_ (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[06:09:47] *** Quits: utunbu_ (~utunbu@user/utunbu) (Ping timeout: 240 seconds)
[06:14:44] *** Joins: gggp (~textual@60.10.194.45)
[06:15:18] *** Joins: utunbu_ (~utunbu@user/utunbu)
[06:16:10] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:17:42] *** Joins: h4zel (~hazel@user/h4zel)
[06:18:04] *** Joins: gggp (~textual@60.10.194.45)
[06:18:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:77bb) (Ping timeout: 240 seconds)
[06:19:37] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:21:04] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:21:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:22:50] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:22:59] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[06:28:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:30:07] *** Joins: robin (~robin@user/terpri)
[06:31:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:31:27] *** Quits: loopspace (sid488598@id-488598.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:31:37] *** Joins: loopspace (sid488598@id-488598.helmsley.irccloud.com)
[06:31:47] *** Quits: carter (sid14827@id-14827.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:33:07] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:33:56] *** Joins: LydiaDickerton (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[06:34:57] *** Joins: carter (sid14827@id-14827.helmsley.irccloud.com)
[06:36:00] *** Joins: oxum (~oxum@106.203.195.217)
[06:36:01] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[06:39:16] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[06:40:11] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:44:59] *** Joins: oxum (~oxum@106.203.195.217)
[06:48:29] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:48:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:49:17] <pi0> has anyone here used BNFC?
[06:51:35] *** Quits: LydiaDickerton (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: No route to host)
[06:51:45] <PlanckWalk> Backus-Naur form compiler?
[06:51:59] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:52:41] * PlanckWalk tried to websearch but only ended up with British National Formulary for Children, Bare Knuckle Fighting Championship (?!)
[06:52:43] *** Joins: oxum (~oxum@106.203.195.217)
[06:52:44] <PlanckWalk> etc
[06:54:09] <PlanckWalk> I guess the search software "knows" that knuckle is pronounced with a leading N
[06:54:29] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:54:50] *** Joins: seninha (~seninha@user/seninha)
[06:58:38] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:59:16] *** Quits: h4zel (~hazel@user/h4zel) (Quit: WeeChat 3.0.1)
[06:59:27] *** Joins: Samian (~Sami@174.27.107.153)
[07:00:26] *** Joins: oxum (~oxum@106.203.195.217)
[07:03:00] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[07:05:20] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[07:08:15] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:08:20] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[07:08:25] *** Joins: gggp (~textual@111.63.14.116)
[07:10:22] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Quit: .)
[07:10:42] *** Quits: gggp (~textual@111.63.14.116) (Client Quit)
[07:12:11] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[07:12:33] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[07:13:40] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[07:13:55] <droid3> One last topic tonight i want to discuss
[07:14:56] <droid3> What is the best known /fastest algorithm for computing jacobi and legendre symbols
[07:15:15] *** Joins: oxum (~oxum@106.203.195.217)
[07:15:51] *** Quits: newpy_ (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[07:17:24] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[07:18:18] *** Joins: cheater (~Username@user/cheater)
[07:20:21] <johnkeats7> PlanckWalk, i'd guess it's just enough people who can't spell use google
[07:20:26] <johnkeats7> that it puts 2 and 2 together
[07:21:46] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[07:22:18] <droid3> well Cipolla ,Pocklington's, Tonelli–Shanks are a few options if one wanted to compute x from a mod p given
[07:22:58] <droid3> But i was thinking there might be a computationally faster way if all one wants is Legendre symbol
[07:23:07] <droid3> or jacobi symbol.
[07:23:32] <droid3> So was curious if anybody on knew.
[07:26:44] <jero98772> PlanckWalk , i can define "10" as operation with f(x)= 10?
[07:28:53] *** Joins: gggp (~textual@60.10.23.169)
[07:29:14] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[07:29:28] *** Joins: montxero (~user@149.167.149.74)
[07:34:32] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[07:35:20] *** Joins: otto_s_ (~user@p4ff2722c.dip0.t-ipconnect.de)
[07:38:40] *** Quits: otto_s (~user@p5de2f91c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:39:11] *** Joins: ball (~ball@99-60-12-181.lightspeed.cicril.sbcglobal.net)
[07:39:37] <ball> Good grief there's a lot of people in here!
[07:41:21] *** Joins: sedeki (~textual@user/sedeki)
[07:42:12] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:57:56] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[07:58:46] <ball> I'm thinking I should take a remedial maths class of some sort.
[07:58:55] <ball> I bought a workbook but my wife threw it away.
[08:01:38] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[08:05:27] *** Joins: qergle (mancha@user/mancha)
[08:06:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[08:08:47] *** Joins: oxum (~oxum@106.203.195.217)
[08:10:12] *** Quits: meingtsla (retrograde@user/meingtsla) (Quit: Leaving)
[08:10:56] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[08:11:41] *** Joins: meingtsla (retrograde@user/meingtsla)
[08:13:47] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 252 seconds)
[08:14:49] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[08:15:00] *** Quits: Kaylah (~Kaylah@ptr-eit6u3f00qouqzx4ly0.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[08:15:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:18:17] <ball> Thinking of replacing my calculator.
[08:18:23] *** Joins: oxum (~oxum@106.203.195.217)
[08:22:49] *** Joins: notzmv (~zmv@user/notzmv)
[08:23:04] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[08:25:23] *** Joins: oxum (~oxum@106.203.195.217)
[08:29:07] *** Quits: johnkeats7 (~johnkeats@189.33.236.157) (Ping timeout: 252 seconds)
[08:34:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3474-1442-9ff3-7009.res6.spectrum.com) (Read error: Connection reset by peer)
[08:34:30] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Quit: Quit)
[08:34:37] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Ping timeout: 252 seconds)
[08:37:47] *** Joins: gggp (~textual@60.10.194.45)
[08:38:56] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[08:44:38] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[08:46:37] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:47:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:49:10] <Fangs> ball: are you taking a uni level math course?
[08:50:32] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 245 seconds)
[08:50:48] <ball> Fangs: No.
[08:51:53] <ball> Did some light algebra during my associate degree but somehow avoided the more difficult stuff I did for GCSE
[08:52:26] <ball> (never completed GCSE maths but I remember drawing some graphs, which I think were for differential equations)
[08:53:00] <ball> I'm told I have "Math anxiety"
[08:53:26] <ball> I'm ok provided I can plod along at my own pace.
[08:53:40] <ball> ...and even then, up to a point.
[08:53:45] <Fangs> its ok, I'm not very good at HS level maths either
[08:54:00] <Fangs> what do you do?
[08:54:33] <ball> I work with computers.
[08:55:15] <ball> It wasn't my first choice but it's what I fell into.
[08:56:18] <Fangs> thats too general for me to mention anything too relevant
[08:56:50] <Fangs> ball: graphs are neat, probability and some real analysis is useful when talking about asymptotitcs
[08:58:07] <[itchyjunk]> i am not good with math or computer
[08:58:13] <[itchyjunk]> but i am having to learn programming
[08:58:19] <[itchyjunk]> "OOP" class that uses java
[08:58:22] <BadK4rMa> [itchyjunk] lets do some programming
[08:58:27] <[itchyjunk]> making me look into fp and type theory
[08:58:40] <[itchyjunk]> BadK4rMa, i did 4 programming assignemtn i submitted today!
[08:58:44] <[itchyjunk]> i got 60/60
[08:58:51] <BadK4rMa> woah
[08:58:53] <BadK4rMa> nice
[08:58:57] <[itchyjunk]> ball, maybe that type of stuff interests you?
[08:59:00] <ball> OOP's kind of interesting.
[08:59:14] <[itchyjunk]> i don't fully understand OOP
[08:59:32] <[itchyjunk]> trying to understand this "type" stuff
[08:59:34] <ball> I've not done any Java but I understand it's static-typed, so I might get along with it.
[08:59:42] *** Joins: LarryDick (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[08:59:47] <BadK4rMa> [itchyjunk] if you need help send me a msg
[08:59:48] <[itchyjunk]> hmm what does static typed mean again?
[08:59:49] <BadK4rMa> but im no pro
[08:59:55] <[itchyjunk]> oh you have to say int x; to use x as int
[08:59:57] <[itchyjunk]> i remember
[09:00:07] <ball> Aye, basically.
[09:00:10] <[itchyjunk]> BadK4rMa, i ask in ##programming generally. you're not there though
[09:00:26] <[itchyjunk]> do you know any type theory?
[09:00:28] <BadK4rMa> yea but im here
[09:00:29] <ball> Isn't there a Java-specific channel?
[09:00:33] <[itchyjunk]> can't make head or tail of it
[09:00:49] <BadK4rMa> im on geometry still
[09:00:54] <[itchyjunk]> there is #java, i prefer ##programming
[09:00:58] <[itchyjunk]> oh what kind of geometry?
[09:00:59] <ball> I'm not familiar with "type theory" but I understand types in programming.
[09:01:06] <BadK4rMa> proofs
[09:01:13] <BadK4rMa> and basics
[09:01:19] <[itchyjunk]> i will have to learn some basic geometry too
[09:01:21] <ball> BadK4rMa: Sounds terrifying.
[09:01:23] <[itchyjunk]> euclid stuff
[09:01:35] <[itchyjunk]> for my history class
[09:01:36] <BadK4rMa> https://github.com/rjphares/Geometry-Notes
[09:01:54] <[itchyjunk]> ball, what about FP stuff?
[09:02:13] <ball> Floating point?  I have only the fuzziest handle on it.
[09:02:19] <[itchyjunk]> functional programming
[09:02:27] <ball> Oh, I don't know that.
[09:02:37] <BadK4rMa> someone explained FP to me once
[09:02:41] <ball> Is lisp an example of that?
[09:02:47] <[itchyjunk]> ah, what are you hoping to get out of it?
[09:02:51] <BadK4rMa> ii didnt understand
[09:02:53] <[itchyjunk]> i think lisp is not FP actually
[09:02:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2)
[09:03:01] <[itchyjunk]> haskell, ocaml etc is
[09:03:05] <ball> Shows how much I know then.
[09:03:20] <[itchyjunk]> what are you hoping to get out of math*, i mean
[09:03:36] <BadK4rMa> Lisp is a functional programming language with imperative features. By functional we mean that the overall style of the language is organized primarily around expressions and functions rather than statements and subroutines. Every Lisp expression returns some value.
[09:03:48] <BadK4rMa> ./copied
[09:04:14] <[itchyjunk]> yeah people in #lisp will say it's not FP :P
[09:04:15] <ball> BadK4rMa: Not much of a Lisp man, anyway.
[09:04:47] <[itchyjunk]> why did you wife throw away your book?
[09:04:58] <BadK4rMa> what is your goa ball?
[09:05:00] <BadK4rMa> goal*
[09:05:13] <BadK4rMa> i kinda jumped in the middle
[09:05:54] * BadK4rMa is confused
[09:06:08] <ball> BadK4rMa: I'd like a better handle on maths.
[09:06:29] <ball> itchyjunk: She was just "tidying up".
[09:06:30] <BadK4rMa> theres a book list which i recommend
[09:06:59] <BadK4rMa> https://freenode-math.fandom.com/wiki/Book_List
[09:07:10] <[itchyjunk]> there is lot of math out there
[09:07:15] <ball> Thanks BadK4rMa
[09:07:18] <[itchyjunk]> i think narrowing it down is useful
[09:07:23] <BadK4rMa> maybe you will find something you like there
[09:07:38] <[itchyjunk]> unless you have good 10-100 years to spend on it
[09:07:51] <ball> itchyjunk: basic algebra, differential equations.  Definitely not calculus.
[09:07:59] <BadK4rMa> <-- has 65 years to spend on it
[09:08:20] <BadK4rMa> i think differential equations and calculus are related?
[09:08:27] <[itchyjunk]> differential equations are equations containing functions and their derivitives
[09:08:37] <[itchyjunk]> and derevatives are handled in calculus
[09:08:38] <ball> BadK4rMa: Probably
[09:08:54] <BadK4rMa> im working my way back up to calculus
[09:08:55] * ball wouldn't know a derivative if it bit him.
[09:08:57] <[itchyjunk]> so leaning diff eq without calc sees like a bad choice
[09:09:03] <BadK4rMa> i have a minor in math but i forgot it all
[09:10:29] <BadK4rMa> precalc covers algebra and trigonometry
[09:10:39] <[itchyjunk]> basic algebra is more computational and not too much math theory
[09:10:41] <BadK4rMa> then you can decide if you would like to continue to calculus
[09:10:42] <ball> [itchyjunk]: Perhaps that means I shouldn't learn differential equations.
[09:10:45] <[itchyjunk]> khan academy is a good place for it
[09:10:52] <ball> linear equations?  Are those a step down?
[09:11:16] <[itchyjunk]> hmm basic algebra will have linear equations
[09:11:22] <[itchyjunk]> even quadratic equations
[09:11:29] <[itchyjunk]> you can learn to compute stuff without theory
[09:11:37] <[itchyjunk]> the theory might be in linear algebra
[09:11:49] <[itchyjunk]> depends on some concrete goal i think
[09:11:58] <[itchyjunk]> if you don't want to have goal but just explore
[09:12:08] <[itchyjunk]> i'd just do random stuff on places like khan academy
[09:12:17] <[itchyjunk]> till you find an interest
[09:12:20] <[itchyjunk]> and specialize from there
[09:12:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[09:13:19] <ball> Ah, perhaps quadratic equations were what I was thinking of then.
[09:14:07] *** Joins: oxum (~oxum@106.203.195.217)
[09:15:56] * ball tries to remember something like thirty years ago
[09:17:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:17:39] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:18:37] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[09:18:51] <ball> Alright.  Time for bed, I think.
[09:19:02] <[itchyjunk]> Yeah i need sleep too
[09:19:04] <ball> Might order myself a new calculator tomorrow.
[09:19:07] <[itchyjunk]> maybe i'll learn some math tomorrow
[09:19:14] <[itchyjunk]> i wouldn't bother
[09:19:20] <[itchyjunk]> just use google calculator
[09:21:16] <ball> I can use xcalc but I do like the immediacy of a physical calculator and that I don't have to move windows around to find it.
[09:23:05] <BadK4rMa> graphic calculatores are just as much as they were 15 years ago
[09:23:09] <BadK4rMa> crazy
[09:23:10] *** Quits: LarryDick (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: No route to host)
[09:23:11] <BadK4rMa> idunno why
[09:23:43] <BadK4rMa> considering they are old tehcnologies i would thikn they would be cheaper
[09:24:01] <ball> I think I'd be happy with a $9 Casio
[09:24:06] <ball> (fx-260SOLARII)
[09:24:24] <BadK4rMa> eww
[09:24:40] <BadK4rMa> graphic calculatores are easy to use
[09:24:50] <BadK4rMa> and can do thingd such as linear equations very easy
[09:24:59] <BadK4rMa> it has built in functions
[09:25:25] <BadK4rMa> they come w/ a very easy to follow manual
[09:25:36] <ball> I have a TI somewhere but my fx-85WA is earlier for me to use.
[09:25:43] <ball> (and the display's more readable)
[09:26:15] <BadK4rMa> https://ti89-simulator.com/
[09:26:39] <BadK4rMa> anyways sleep time
[09:26:42] *** Joins: LarryDickerson (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[09:29:26] * ball nods
[09:29:27] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[09:29:31] <ball> Goodnight!
[09:30:06] *** Parts: ball (~ball@99-60-12-181.lightspeed.cicril.sbcglobal.net) ()
[09:30:37] *** Joins: agur_mkmrrs[m] (~agurmkmrr@2001:470:69fc:105::ed0f)
[09:31:53] *** Joins: rubiksdream (~a@1-64-49-062.static.netvigator.com)
[09:32:24] <rubiksdream> aqw2qwwaaq1q
[09:32:29] *** Quits: rubiksdream (~a@1-64-49-062.static.netvigator.com) (Changing host)
[09:32:29] *** Joins: rubiksdream (~a@user/rubiksdream)
[09:32:36] <rubiksdream> whoops, sorry
[09:33:08] <LarryDickerson> rubiksdream, no problem
[09:37:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:39:22] *** Quits: blueberrycrop (~blueberry@209.222.165.82) (Quit: Client closed)
[09:47:24] *** Joins: oxum (~oxum@106.203.195.217)
[09:49:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:52:10] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[09:53:10] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[09:53:53] *** Quits: emerent (~quassel@p200300cd5701a102ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:54:12] *** Joins: emerent (~quassel@p200300cd5701a189ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:55:11] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[09:55:47] *** Joins: aman (~aman@user/aman)
[09:56:30] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[09:59:48] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 256 seconds)
[09:59:53] *** Joins: mei (~mei@user/mei)
[10:00:57] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 245 seconds)
[10:02:27] *** Joins: gggp (~textual@60.10.23.169)
[10:10:14] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[10:10:35] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:11:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[10:12:26] *** Quits: stipa (~stipa@user/stipa) (Read error: Connection reset by peer)
[10:13:54] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:15:16] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (Ping timeout: 252 seconds)
[10:15:35] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:16:25] *** Joins: stipa (~stipa@user/stipa)
[10:18:09] *** Joins: gggp (~textual@60.10.194.45)
[10:19:04] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[10:19:08] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving)
[10:19:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:20:45] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[10:21:20] *** Joins: oxum (~oxum@106.203.195.217)
[10:24:35] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:24:49] *** Quits: Oli (~Unknown@user/oli) (Quit: leaving)
[10:24:50] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:29:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:31:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:32:14] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[10:34:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:34:22] *** Joins: flynn (~mcbloch@user/flynn)
[10:34:45] *** Joins: Mija (~Mija@user/mija)
[10:34:56] *** Quits: gggp_ (~gggp@111-251-124-128.dynamic-ip.hinet.net) (Quit: Leaving)
[10:35:01] *** Joins: trbp (~trbp@user/trbp)
[10:35:09] *** Joins: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net)
[10:35:37] *** Quits: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:35:40] *** Joins: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net)
[10:38:20] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[10:39:58] *** Joins: dangrenier83 (~username@user/dangrenier83)
[10:40:25] *** Joins: LiftLeft (~LiftLeft@172.83.47.113)
[10:41:11] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[10:45:22] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[10:49:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:49:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:54:28] *** Quits: Mija (~Mija@user/mija) (Read error: Connection reset by peer)
[10:57:14] *** Quits: LarryDickerson (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: Connection reset by peer)
[10:57:51] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:03:56] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[11:08:40] *** Joins: elderK (~elderK@101.100.159.106)
[11:10:58] <elderK> Hey all, I was wondering if this is the place to seek help on a math question. It's a personal question, just for fun but I'd like to learn how to solve it. The idea is that I have a cannon at some location and I have an enemy, some distance away, who is moving towards the cannon. We know how fast enemy is moving and we know where he starts, in
[11:10:58] <elderK> relation to the cannon. We know the velocity with which the cannon fires its projectiles. What I'd like to determine is the angle the cannon should fire at, to hit the enemy as it moves.
[11:11:34] <elderK> I've tried for a few days to solve this myself but I always wind up with an equality that I cannot solve, mostly because of trigonemtric functions that I can't get rid of.
[11:11:51] <elderK> I should also state that we know gravity. :)
[11:12:25] <elderK> I've found that if you change the problem such that we know the angle but not the initial velocity, it becomes much easier to solve.
[11:13:04] *** Joins: h4zel (~hazel@user/h4zel)
[11:13:55] *** Joins: palasso (~palasso@user/palasso)
[11:13:55] <pikapika> elderK
[11:14:15] <pikapika> Write the equation for x(t) and y(t) of the projectile and likewise for the human
[11:14:19] <pikapika> and equate the x and y
[11:14:49] <pikapika> elderK, whats the transcendental equation
[11:15:36] <elderK> EnemyX(Time) = EnemyInitialX + Time * EnemyVelocityX
[11:17:30] <elderK> ProjectileX(Time) = CannonX + cos(FiringAngle) * ProjectileVelocity * Time
[11:17:57] *** Quits: PendulumSwinger (~PendulumS@user/pendulumswinger) (Read error: Connection reset by peer)
[11:18:21] <elderK> ProjectileY(Time) = sin(FiringAngle) * ProjectileVelocity * Time - (1/2) * GravityVelocity * Time^2
[11:18:50] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d)
[11:19:19] <cherim> You don't really need that many symbols
[11:19:30] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d) (Client Quit)
[11:19:51] <cherim> The cannon is in air for 2 v sin(theta)/g time
[11:20:33] <elderK> Aye. I've also tried to solve it based on time in flight.
[11:20:53] <cherim> So the equation is 2v^2 sin(theta) cos(theta)/g + 2u v sin(theta)/g = L
[11:21:16] <cherim> Where v is cannon velocity, u is target velocity, theta is angle, and L is initial distance
[11:21:17] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[11:21:31] <cherim> It has form Asin(2theta)+Bsin(theta)=C
[11:21:51] <pikapika> Yeah thats an easily solvable equation, I think a biquadratic
[11:21:51] <cherim> This is solvable in radicals, but with cubic formulas, not quadratic
[11:21:56] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[11:21:57] <pikapika> Is it cubic?
[11:22:12] <pikapika> I feel it should be a biquad
[11:22:20] <pikapika> oh wait
[11:22:22] <pikapika> yeah
[11:22:27] <pikapika> x(1-x^2) is cubic
[11:22:30] <pikapika> no
[11:22:30] <elderK> How did you get the second equation, cherim?
[11:22:32] <pikapika> its x^2
[11:23:14] <pikapika> oh right, the middle term in the expansion of the square would be problematic
[11:23:29] <elderK> Are you equating the projectile's time in flight with the enemy's position at a given time?
[11:23:35] <cherim> There is only one equation, and it says thatthe distances travelled horizontally by the cannon and the target add to initial separation
[11:24:05] <cherim> vcos(theta)T+uT=L where T is the time of flight
[11:24:32] <pikapika> elderK, are they both on the same height initially
[11:24:55] <elderK> Yes, they are.
[11:26:12] <elderK> I'm sorry. I feel like you guys are moving a little fast for me.
[11:26:38] <pikapika> elderK, the shell will hit the enemy only when the shell has completed its path and is again on the ground
[11:26:45] <pikapika> thas why the total time of flight is involved
[11:27:57] <elderK> Okay, that makes sense.
[11:28:17] *** Joins: tacegory (~tacegory@user/tacegory)
[11:28:21] <pikapika> and at that point the enemy position is L-vT
[11:28:46] <pikapika> we must equate the two
[11:28:46] <elderK> L being the initial distance between them, V being the enemy's velocity, assuming it is positive?
[11:28:50] <pikapika> yes
[11:29:38] <elderK> Right, so TimeInFlight = EnemyPosition(T), expanded out.
[11:29:46] <elderK> Then solve for the angle?
[11:30:16] <pikapika> yes
[11:30:29] <pikapika> remember sin(2*theta)=2*sin(theta)*cos(theta)
[11:30:36] <pikapika> and cos(theta)=sqrt(1-sin^2(theta))
[11:30:48] <elderK> I never knew that about cos(theta). Where can I find that identity?
[11:31:00] <pikapika> sin^2(x)+cos^2(x)=1
[11:31:17] <elderK> Ah, of course.
[11:31:19] <pikapika> which you can trivially derive from pythagoras theorem too
[11:31:34] *** Joins: acresearch (~acresearc@user/acresearch)
[11:31:59] <elderK> Right. I'm going to try this out on paper :)
[11:34:40] <pikapika> cherim, its coming out as a depressed quartic I think
[11:35:49] <cherim> Quartics and cubics both have solutions through ^{1/2} and ^{1/3} radicals
[11:36:17] <cherim> Which doesn't help much in any application
[11:36:37] <pikapika> cherim, quartic's solution is very scary
[11:36:51] <pikapika> At this point it really would be better to do a numeric solution
[11:37:01] <cherim> Already for the cubic
[11:37:15] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[11:37:21] <pikapika> The cubic can be a bit tractable
[11:37:24] <pikapika> But the quartic, no way
[11:37:29] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:37:44] <pikapika> But the good thing if one is determined to do it in radicals, is this equation already came out as a depressed quartic
[11:37:46] <acresearch> people I have complicated question for you: i have 2 unequal spheres [S1, S2], they are bonded together, but this bonding squeezes them into each other (but does not deform their shape) so that the l < r1 + r2  where l is the distance between their centers. in other words a little bit of S1 is lost due to the bonding, and a little bit of S2 is lost due to the bonding. How can i measure each sphere's
[11:37:49] <acresearch> area and volume after the bondong?
[11:37:52] <pikapika> so at least that first step isn't needed
[11:38:02] <pikapika> ie of removing the cubic coefficient
[11:38:11] <cherim> It's a quartic with 2 parameters, not the long formula with all 4
[11:38:22] <pikapika> acresearch, volume is easy
[11:38:24] <pikapika> Area can be hard
[11:38:32] <acresearch> pikapika: ok lets try volume first
[11:38:50] <elderK> Guys, why do we equate them? FlightTime = EnemyPosition(Time)
[11:38:54] <pikapika> cherim, in my expansion the s^4,s^2,s,constant came out non-zero
[11:39:19] <pikapika> acresearch, there are two steps to it
[11:39:27] <elderK> Say, FlightTime = 2vsin(a) / g  where v is the firing velocity.
[11:39:31] <elderK> So, we get some time in seconds.
[11:39:34] <pikapika> first develop an equation for the volume of a sphere "cap"
[11:39:43] <pikapika> then to compute the depth of the cap for each sphere
[11:39:55] <pikapika> I have done a similar thing for intersecting scircles and their areas before
[11:39:59] <elderK> Then we have the position of the enemy which is the x coordinate: x = L - uT where u is the enemy's velocity.
[11:40:02] <pikapika> The equations are a bit lengthy tbh
[11:40:06] <pikapika> but the solution is very nice
[11:40:33] <elderK> Would we not need to rearrange them first, so that we isolate T in the enemy position equation?
[11:40:40] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.1)
[11:40:57] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[11:40:59] <elderK> It seems strange to equate time in flight, with position, as they are.
[11:41:26] <cherim> Of course you don't equate time with coordinate. Look at the formulas we wrote above
[11:41:35] <elderK> Although, I understand: We want the flight time to be the same amount of time it takes for the enemy to move to whatever new position.
[11:41:40] *** Joins: hyiltiz (~quassel@31.220.5.250)
[11:42:00] *** Joins: stipa_ (~stipa@user/stipa)
[11:42:10] <acresearch> pikapika: i am trying to figure it out but i am not sure how to start
[11:42:20] <pikapika> acresearch, the relative depths of the caps is not hard
[11:42:32] <pikapika> Due to the symmetry of spheres it reduces to a plane geometry problem
[11:42:38] <acresearch> pikapika: i am sorry, but i don't understand what you mean by cap
[11:42:48] <pikapika> acresearch, the cut off part from the top of a sphere
[11:42:52] <acresearch> pikapika: ahh
[11:43:40] <elderK> cherim: I am having trouble following without all the steps :(  I'm sorry.
[11:44:04] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 256 seconds)
[11:44:05] <cherim> [09:54:26] <cherim> vcos(theta)T+uT=L where T is the time of flight, and T=2vsin(theta)/g
[11:44:06] <pikapika> acresearch, draw two intersecting circles and the common line between the two intersection points
[11:44:06] *** stipa_ is now known as stipa
[11:44:15] <pikapika> the distance between the centers is as you assume, l
[11:44:38] <pikapika> let us assume the length of the base in the triangle to the left is l1 and for the right is l2
[11:44:40] <pikapika> l1+l2=l
[11:45:04] <pikapika> let us also assume the height of the triangle is h (thus making the length of the common line 2h)
[11:45:07] <elderK> And L is the current (or starting) distance between the cannon and the enemy?
[11:45:16] <pikapika> l1^2+h^2=r1^2
[11:45:23] <pikapika> l2^2+h^2=r2^2
[11:45:35] <cherim> [09:51:37] <cherim> Where v is cannon velocity, u is target velocity, theta is angle, and L is initial distance
[11:45:40] <pikapika> three eqs, three unknowns (l1,l2,h)
[11:45:43] <pikapika> solve these
[11:45:44] <elderK> Thank you.
[11:45:46] <pikapika> acresearch
[11:46:32] *** Joins: gggp (~textual@60.10.194.45)
[11:46:51] <acresearch> pikapika: ok let me try
[11:47:21] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[11:47:40] <pikapika> the solution can lead to somewhat lengthy expressions in between if my memory is right
[11:49:24] <acresearch> pikapika: i can't do it,   i am trying to follow this: https://www.sciencedirect.com/topics/chemistry/molecular-volume    but it does not give me the individual sphere only their sum
[11:49:57] <pikapika> Molecule structure can be quite complex
[11:50:11] <pikapika> How did you come up with your model?
[11:50:15] *** Joins: ghen (~nobody@2601:649:100:8b0:4c02:a93:f2f8:5b5d)
[11:50:52] <acresearch> pikapika: i figured out a iterative process that goes through each 2 bonded atoms, but the volume/area between 2 atoms i cann't get it right
[11:50:58] <cherim> https://en.wikipedia.org/wiki/Spherical_cap
[11:51:30] <pikapika> acresearch, actually while trying to solve this system I got a very neat and symmetric solution this time
[11:51:36] <pikapika> Its actually probably quite easy to solve
[11:51:53] <acresearch> pikapika: ok let me give you the values and try to do it together
[11:52:01] <pikapika> Do it symbolically
[11:52:03] <pikapika> Its quite easy
[11:52:22] <acresearch> r1 = 1.52     r2 = 1.2    l  = 0.97      O-H bonded molecule
[11:52:26] *** Joins: Hash (~weechat@thestonedapes.com)
[11:53:19] <acresearch> cherim: yes i read that, but the problem is ai can't extrapolate h, a and theta from the system
[11:53:43] <pikapika> acresearch, the h there is different
[11:53:52] <pikapika> and I gave you a way to calculate those quantities
[11:53:59] <pikapika> using a system of three eqs
[11:54:05] <cherim> h, a, theta come from a triangle with sides r1, r2, d
[11:54:17] <pikapika> yes
[11:54:32] <acresearch> hmmm
[11:55:47] <pikapika> the depths (ie the heights of the caps) can be calculated from my  l1 and l2
[11:56:36] <pikapika> once l1, l2 are known, therfore all angles of the triangle are also trivially computed if you wanna do it that way
[11:56:50] <elderK> cherim: I see now, thank you.
[11:56:53] <elderK> pikapika, you too.
[11:58:15] <elderK> Is this the only way to solve this particular problem, or are there many possible ways? I figure there are many possible ways to solve it and get the same answer?
[11:58:46] <acresearch> i am in a noisy place, i will find a quiter place   1 sec
[11:59:01] <elderK> Adding up to the initial separation is a really nice way to say that for the time T, there must be no distance between the enemy and the projectile.
[12:02:02] *** Joins: frost (~frost@59.71.240.119)
[12:06:40] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[12:06:52] *** Joins: flynn (~mcbloch@user/flynn)
[12:07:47] *** Quits: elderK (~elderK@101.100.159.106) (Quit: Client closed)
[12:12:59] <acresearch> pikapika: sorry, but what is l1 and l2?  i only have l?
[12:13:12] *** Joins: Samian (~Sami@2620:10d:c091:480::1:e369)
[12:13:20] <pikapika> acresearch, refer to the diagram I described
[12:13:37] <cherim> cos(theta1) = (r1^2+l^2-r2^2)/(2 r1 l) by cosine theorem, not much to compute here
[12:14:08] <cherim> Can just substitute into https://en.wikipedia.org/wiki/Spherical_cap#Volume_and_surface_area
[12:14:08] <pikapika> yeah thats what I am getting for l1
[12:14:13] <bildramer> way to overcomplicate things on the cannon question. first, move to an accelerating frame. then, find where a circle intersects the enemy trajectory (now a parabola) as a function of one parameter. then, find the right parameter
[12:14:34] <pikapika> cherim, either way yes...thats the value obtained
[12:15:03] <acresearch> pikapika: which diagram i cannot see a link   sorry i am just a bit confused
[12:15:06] <pikapika> acresearch, so after getting the volumes of the caps. The volume of the figure is the sum of volume of each sphere - sum of volume of each cap
[12:15:10] <pikapika> acresearch, I described it in text
[12:15:11] <pikapika> Basically
[12:15:27] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Ping timeout: 245 seconds)
[12:15:27] <pikapika> draw two intersecting circles (due to symeetry we only need consider planar problem)
[12:15:31] <pikapika> of radii r1 and r2
[12:15:37] <acresearch> ok
[12:15:39] <pikapika> draw the line connecting the centers
[12:15:44] <pikapika> and the line connecting the intersection points
[12:15:48] <acresearch> ok
[12:15:49] *** Joins: Liblx (~Alex@2a02:810c:280:59c:4c45:84b8:14af:7992)
[12:15:56] <pikapika> assume the height of the triangel is h (so the length of the intersection line is 2h)
[12:16:07] <pikapika> assume base of first triangle is l1, of second is l2
[12:16:25] <pikapika> l1+l2=1, l1^2+h^2=r1^2, l2^2+h^2=r2^2
[12:16:34] <pikapika> l1,l2,h are easily computed
[12:16:43] <pikapika> and would lead to the expression given by cherim
[12:18:22] <pikapika> acresearch, subtract the third eq from the first to get after simplifications l1-l2=(r1^2-r2^2)/l2, and the first eq is l1+l2=l
[12:18:26] <pikapika> l1,l2 is obtained from these two
[12:18:39] <pikapika> its divided by /l rather in the eq not l2
[12:19:18] <pikapika> but yes we could compute from the whole triangle two instead of the two triangles
[12:19:24] <pikapika> that could be faster
[12:19:28] <pikapika> *too
[12:20:41] <acresearch> ok let me try
[12:20:57] <pikapika> the 'h' in the sphere cap formula would be r1-l1 in our terms
[12:23:28] <pikapika> but yes as alluded to before it can be simpler to just consider the whole triangle and compute the angles with cosine rule
[12:23:47] <pikapika> ie the triangle with sides r1,r2,(l1+l2)
[12:25:19] <acresearch> pikapika: i am sorry, i am having difficulty calculating l1 and l2 from l   and thus h     since r1 != r2  i cannot just l/2=l1 or l2
[12:25:27] <acresearch> oh wait
[12:25:39] <acresearch> there is en equation you mentioned
[12:25:43] <acresearch> ok let me try again  1 sec
[12:25:44] <pikapika> there are three
[12:25:54] <pikapika> but really the whole triangle and the cosine rule is easier
[12:26:04] <pikapika> Thats faster than my approach
[12:26:20] <acresearch> pikapika: but i can't find all the values to plug in that is why i am struggling
[12:26:42] <pikapika> acresearch, just consider the triangle with sides r1,r2,l1+l2 instead
[12:26:50] <pikapika> I hope you can see that triangle in your diagram
[12:27:00] <acresearch> pikapika: yes i see it
[12:27:06] <acresearch> l1+l2 = l
[12:27:06] <pikapika> (l1+l2=l as we previously defined)
[12:27:08] <acresearch> hmmmm
[12:27:14] <pikapika> so all three sides of this triangle are known
[12:27:19] <pikapika> therefore we can compute its angles too
[12:27:39] <acresearch> but it is not a right angle triangle now   l,r1,r2
[12:27:43] <acresearch> let me think about it
[12:27:49] <pikapika> yes, the cosine rule is applicavle to all triangles
[12:27:55] <acresearch> aha
[12:28:56] <acresearch> ok i am back to trouble, cos rules calculates theta,   but i need h   right?
[12:29:03] <pikapika> we can calculate the angles made by the radius and the line joining the center
[12:29:07] <pikapika> acresearch, not at all
[12:29:12] <pikapika> the sides are all known to us
[12:29:16] <pikapika> they are r1,r2 and l
[12:29:19] <acresearch> yes
[12:29:23] <pikapika> we only need the sides for the cosines
[12:29:35] <pikapika> https://en.wikipedia.org/wiki/Law_of_cosines
[12:30:29] <acresearch> but why do we need the theta angle?  we are tyring to get the speherical segment volume right?
[12:30:40] <pikapika> if you want to avoid this approach, my first approach is of course also valid if lengthier; it calculates l1=(1/2)(l + (r1^2-r2^2)/l) and l2=(1/2)(l - (r1^2-r2^2)/l)
[12:31:16] <pikapika> acresearch, the theta is the angle subtended by the cap
[12:31:46] <acresearch> pikapika: is there a video i can watch that explains this, i am totally lost now
[12:31:57] <pikapika> there is no video needed, it is a simple geometry problem
[12:32:00] <acresearch> i lost my trail of thought :-(
[12:32:13] <acresearch> i just don't get it
[12:32:13] <pikapika> you can either use the cosine rule on the large triangle or my system of equations
[12:32:32] <acresearch> let me try cos   because i hate systems of equations
[12:32:54] *** Joins: dextaa2 (~dextaa@user/dextaa)
[12:35:48] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[12:36:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:12] <acresearch> pikapika: cos(theta_1) = (r1^2+l^2-r2^2)/(2r1l)  correct?
[12:38:29] <pikapika> yes
[12:38:45] <acresearch> and cos(theta) = h ?
[12:38:52] <pikapika> what theta?
[12:39:06] <pikapika> acresearch, https://i.imgur.com/jXTiFAw.png
[12:39:09] <acresearch> theta is the angle at the center of r1
[12:39:25] <acresearch> yes theta_1   sorry
[12:39:40] <pikapika> we have theta1 available and can likewise compute theta2
[12:39:57] <pikapika> this theta is same as the theta in this diageram https://en.wikipedia.org/wiki/Spherical_cap
[12:40:06] <acresearch> ok
[12:40:07] <pikapika> so you can use the number of forumulas given there that use theta as input
[12:40:25] <pikapika> Looks like it has area formulas too
[12:40:27] <acresearch> ok i get it      good progress  :-)    give me a bit to try to move forward
[12:40:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:43:06] <pikapika> at this point it might be easier to numerically compute the cos(theta1) and cos(theta2) before proceeding
[12:43:17] <acresearch> cos(theta_1) = 1.6
[12:43:23] <pikapika> what
[12:43:28] <pikapika> check your units and your numbers
[12:43:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:43:55] <acresearch> can i send you my code in python?  would it be easier for you to read?
[12:44:09] <pikapika> you can try, but I think you are making an error in the units or lengths
[12:44:18] <acresearch> ok let me check again
[12:44:36] <pikapika> tell us your values of r1,r2,l
[12:44:56] <acresearch> r1=1.52    r2=1.2     l=0.97
[12:46:10] <pikapika> cos(theta1) is coming 0.6142498643516007 for me
[12:46:11] <acresearch> cos(theta1) = 0.6142
[12:46:18] <pikapika> yes
[12:46:21] <acresearch> yeh i forgot l^2   :-)
[12:46:23] <acresearch> i fixed it
[12:46:57] <acresearch> cos(theta2) = 0.03028350515463918
[12:47:13] <pikapika> Yes, same
[12:47:16] <acresearch> ok good
[12:47:32] <acresearch> now we have to get theta1 and theta2  but inverse cos  right?
[12:47:38] <pikapika> no need for inverse
[12:48:20] <Gurkenglas> Category theory makes *so much* sense when you replace as many properties as possible as "all equations you can construct are true". For example, as far as I can tell, a monad is any family indexed over a,b of (a->b)->(fa->fb), a->fa and ffa->fa such that any two things you can build of the precisely same type are equal. Is there some way to say this in terms of (co)equalizers or something?
[12:48:38] <pikapika> either use the formulae using cos(theta) directly
[12:48:47] <pikapika> or compute h=r1*cos(theta1)=r2*cos(theta2)
[12:49:41] <acresearch> ok let me code it
[12:50:43] <pikapika> sorry h=r1*sin(theta1)=r2*sin(theta2)
[12:51:21] <acresearch> ah ok  so i have to calculate theta1 and theta2
[12:51:27] <pikapika> no need
[12:51:34] <pikapika> the formuale directly use cos(theta)
[12:51:46] <acresearch> it says sin
[12:52:10] <pikapika> acresearch, use this https://wikimedia.org/api/rest_v1/media/math/render/svg/1158b50fa2ff8bb764ea211ab7130e23f8e31f64
[12:52:19] <acresearch> ah
[12:52:51] *** Joins: Koen_ (~Koen@246.244.88.92.rev.sfr.net)
[12:54:56] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[12:56:18] <acresearch> pikapika:   full code with results     https://paste.debian.net/1210356/
[12:56:39] <acresearch> pikapika: is this correct?
[12:58:11] <pikapika> acresearch, yeah seems so
[12:58:34] <pikapika> the volume of the figure is sum of volumes of spheres - sum of volumes of caps
[12:59:10] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:59:27] <pikapika> (if we just add the volume of the spheres, we are adding the volume of the common region twice; so we subtract the volume of the common region to get the final value)
[12:59:51] <acresearch> pikapika: i see     but to get the final volume of the individual spheres i have to subtract V2 from S1(with r1) and V1 from S2(with r2)  right?
[13:00:03] <pikapika> same expression
[13:02:38] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[13:04:22] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:06:15] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[13:06:24] <[-_-]> meow
[13:06:26] <[-_-]> http://0x0.st/-v7g.jpg
[13:06:29] <pikapika> [-_-], hi
[13:06:34] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[13:07:17] <[-_-]> If those vectors span a subspace of R^5 then we already have the basis.
[13:07:28] <[-_-]> Whey did they do whatever they did?
[13:07:31] <[-_-]> pikapika: hi
[13:08:48] <[-_-]> also the subspace they span has 4 dimention
[13:09:06] <[-_-]> but the new basis has 3 vectors
[13:09:22] <[-_-]> that means that subspace is 3 dimensional
[13:09:35] <acresearch> pikapika: thank you very much for your help, i am think on the right path now to calculate molecular volumes and areas :-)   i am getting comparible numbers :-)   thank you so much
[13:09:50] <pikapika> acresearch, okay uwu
[13:10:50] <int-e> [-_-]: Evidently the 4 vectors are linearly dependent. So they do not form a basis.
[13:11:10] <[-_-]> oh...really
[13:11:48] <[-_-]> oh...yeah
[13:12:05] <[-_-]> even then, is the row space and column space same?
[13:12:16] <[-_-]> no...right?
[13:12:21] <int-e> This is established by the row reduction; if they were linearly independent, you'd never get a zero row.
[13:12:39] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[13:13:06] <[-_-]> okay....(I never knew that)
[13:13:09] <int-e> [-_-]: they have the same dimension. They're represented differently.
[13:13:17] <[-_-]> oh...
[13:13:18] <[-_-]> wait
[13:13:28] <[-_-]> so the row space and column space are same?
[13:13:31] <int-e> "they" being the row and column spaces.
[13:13:40] *** Joins: dextaa2 (~dextaa@user/dextaa)
[13:14:08] <[-_-]> In general, is the row space and column space of a matrix same?
[13:14:11] <int-e> [-_-]: No, they're different.
[13:14:15] <[-_-]> right
[13:14:24] <int-e> Even though they're isomorphic vector spaces.
[13:14:41] <[-_-]> If they have same dimension then they are same?
[13:15:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:06] <int-e> Don't say "the same" for "isomorphic".
[13:15:16] <[-_-]> oh...
[13:15:19] <Fangs> [-_-]: is the x-axis and the y-axis the same 'subspace' of R^3?
[13:15:29] <Fangs> they're both isomorphic as vector spaces
[13:15:32] <Fangs> are they 'the same'?
[13:15:56] <[-_-]> they have same numbers for R^3
[13:16:01] <[-_-]> they are same
[13:16:11] <[-_-]> why not?
[13:16:18] <Fangs> ok, take a function f(v) = v dot (1,0,0)
[13:16:30] <Fangs> [-_-]: is this function always zero for the x-axis?
[13:16:31] <int-e> The technical detail that the representation is different even though there's a structure-preseriving (and -reflecting) bijection tends to matter a lot for vectorspaces... especially those that are subspaces of some bigger space (as both row and column spaces are)
[13:16:39] <Fangs> [-_-]: is this function always zero for the y-axis?
[13:16:52] <int-e> Glossing over it is asking for trouble.
[13:16:58] <[-_-]> v = x?
[13:17:04] <[-_-]> wait
[13:17:18] <Fangs> v is a vector in R^3
[13:17:18] <[-_-]> for y axis it is always zero
[13:17:23] *** Quits: rubiksdream (~a@user/rubiksdream) (Ping timeout: 252 seconds)
[13:17:26] <Fangs> ok good, and for the x-axis?
[13:17:30] <[-_-]> v
[13:17:39] <int-e> For example, <(1,0,0)> and <(0,1,0)> are both 1-dimensional subspaces of R^3. But they are *different* subspaces; they only share the vector (0,0,0).
[13:17:40] <Fangs> v is not a scalar
[13:17:50] <[-_-]> v_x
[13:17:55] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[13:18:01] <Fangs> v = (v_x,v_y,v_z)?
[13:18:06] <[-_-]> ^
[13:18:07] <Fangs> if so, sure
[13:18:11] <[-_-]> v_x
[13:18:30] <Fangs> [-_-]: so they're 'the same' vector space, but yet the function are different on these 'same' vector spaces
[13:19:00] <[-_-]> weren't they supposed to say find the basis for row space
[13:19:01] *** Joins: dextaa2 (~dextaa@user/dextaa)
[13:19:14] *** Quits: dextaa2 (~dextaa@user/dextaa) (Client Quit)
[13:20:15] <int-e> [-_-]: row reduction also gives you a basis
[13:20:22] *** Joins: dextaa2 (~dextaa@user/dextaa)
[13:20:22] <int-e> [-_-]: namely, the remaining non-zero rows
[13:20:52] <[-_-]> Fangs: okay, the thing is same space but coordinate positions are different
[13:21:08] <[-_-]> it is like a vector (y, x)
[13:21:10] <int-e> The reason is actually rather simple: Each row reduction step preserves the span.
[13:21:10] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:21:31] <Fangs> [-_-]: if your matrix isn't square, the row space and the column space have a different number of components
[13:21:32] <[-_-]> for row space
[13:21:49] <[-_-]> Fangs: then I don't see the merit of the question
[13:21:52] <[-_-]> http://0x0.st/-v7g.jpg
[13:22:06] <int-e> And the non-zero vectors in the row reduced form are obviously linearly independent (the trapezoidal shape ensures that).
[13:22:13] <[-_-]> or they impiled same dimension?
[13:22:33] <Fangs> [-_-]: the column space is a subspace of the codomain
[13:22:48] <[-_-]> don't know what you mean Fangs
[13:23:18] <Fangs> the row space is a subspace of the dual space of the domain
[13:23:26] *** Joins: savask (~savask@Powder/Developer/savask)
[13:24:01] <Fangs> [-_-]: dw about it, you'll know what I'm talking about when you need to know about it
[13:24:51] <[-_-]> okay
[13:24:57] <[-_-]> I have understood.
[13:25:10] <[-_-]> They used those vectors in row space
[13:25:13] <[-_-]> I was mistaken
[13:25:19] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[13:25:25] <[-_-]> So the question is invalid
[13:25:28] <[-_-]> dam it
[13:25:29] <int-e> ?
[13:25:32] <[-_-]> why this happens to me
[13:25:33] <int-e> It's valid
[13:25:42] <int-e> You are interested in the span of those 4 vectors.
[13:25:56] <int-e> You get the same span as the row space of a 5x4 matrix.
[13:26:08] <[-_-]> yes
[13:26:39] <int-e> And then you can do row reduction steps on the matrix, which preserves the row space.
[13:26:50] <[-_-]> yes....thats it!
[13:26:56] <int-e> So the row space of the reduced matrix is still the span you wanted.
[13:27:22] <[-_-]> yeah....it doesn't change for row space, so they implied row space
[13:27:29] <int-e> But you can now easily read off 3 linearly independent vectors... and the zero vector doesn't contribute to the row space.
[13:27:40] <[-_-]> :)
[13:27:49] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[13:27:53] <int-e> Which is *still* the span you were originally interested in. So you have a basis for that span now.
[13:28:11] <[-_-]> int-e: Does reduced row echelon form automatically give linearly independent vectors for row space?
[13:28:58] *** Joins: dextaa2 (~dextaa@user/dextaa)
[13:29:32] <[-_-]> it is just a question
[13:29:44] <[-_-]> my primary qustions have been answered
[13:30:14] <int-e> Yes. You should've seen that somewhere... but basically, you look at a linear combination of those three vectors that is zero. Then first vector must be multiplied by 0, because otherwise the first component of the result would be non-zero. And then the second vector must be multiplied by 0, because otherwise the second component of the result would be non-zero... etc.
[13:30:59] <int-e> This is the same process you go through when solving a linear equation with an upper triangular (or trapezoidal?) matrix.
[13:31:08] <[-_-]> Okay
[13:31:49] <[-_-]> I asked this because for column vector of a matrix reduced row echeleon form doesn't automatically give linearly independent vectors
[13:32:00] <[-_-]> there one have to think like you just did
[13:32:33] <[-_-]> lemme give you context
[13:34:43] <int-e> [-_-]: you'd need to do a column reduction instead if you want a basis for the column space
[13:35:05] <[-_-]> ouuuu....awesome
[13:35:11] <int-e> and you should never mix those
[13:35:14] <[-_-]> never heard of column reduction
[13:35:29] <[-_-]> but I understand
[13:35:30] <int-e> (row reductions change the column space; column reductions change the row space)
[13:35:35] <[-_-]> just transpose
[13:35:39] <[-_-]> do row reduction
[13:35:42] <[-_-]> transpose
[13:35:52] <[-_-]> isn't that it?
[13:35:59] <int-e> yes
[13:36:40] <[-_-]> this is not mentioned in this book
[13:36:43] <[-_-]> this is a shit book
[13:36:57] <[-_-]> I apologize for bad lang
[13:37:02] <int-e> Interestingly, row reductions don't change the *dimension* of the column space. This more or less explains why row and column space have the same dimension.
[13:37:42] <int-e> Well, since you usually don't mix the two, it may actually be better to only talk about row reductions.
[13:37:48] <acresearch> pikapika: ok here is a question,,,, my calculated molecule area is very close to the area calculated by an established software (PyMOL)  the difference is small (which i can live with)   the source of the difference is different interpritations of covalent bonds
[13:37:57] <Fangs> [-_-]: which book is it?
[13:38:23] <pikapika> acresearch, what is the question
[13:38:24] <int-e> I should say "row operations", my bad.
[13:38:26] <pikapika> I don't know any chemistry
[13:38:36] <[-_-]> Elementary linear algebra Howard Anton Applications Version
[13:38:40] <[-_-]> 10th edition
[13:38:54] <int-e> (row reduction is the whole process towards a row reduced matrix; it's composed of row operations)
[13:38:59] <acresearch> pikapika: BUT...   the difference in volume calculation is larger (still around the same area but large)      so the question is,,, should i trust my equation that i coded, or the values that result from a program that i cannot see the code?
[13:39:18] <pikapika> As I said I don't know chemsitry and molecule models are compelx
[13:39:27] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 240 seconds)
[13:39:29] <[-_-]> elementary row operation
[13:39:31] <[-_-]> s
[13:40:35] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[13:40:39] <acresearch> pikapika: i know, i am just asking from a math point of view  i will ask this same question in ##chemistry (when they become active in the channel)
[13:40:41] *** Quits: dextaa2 (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[13:40:58] <[-_-]> Fangs: did you learn about column reduction from this book?
[13:41:45] *** xeno__ is now known as xeno
[13:41:48] *** Joins: dextaa2 (~dextaa@user/dextaa)
[13:43:13] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[13:43:55] *** Joins: Teacup (~teacup@user/teacup)
[13:44:50] *** Joins: cadmio (~cadmio@151.37.141.201)
[13:44:54] <cadmio> Hello
[13:45:06] <riv> hi
[13:45:11] <riv> did you resolve the x^g notation?
[13:45:56] <cadmio> hey riv
[13:46:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:47:11] <cadmio> I was thinking about this. How is it possible that the conjugacy class of sigma in A_n is equal to {τστ', τ odd}, if A_n contains only even permutations?
[13:47:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Ping timeout: 245 seconds)
[13:56:03] <int-e> cadmio: well, it's not.
[13:56:19] <int-e> unless sigma commutes with an odd permutation, that is.
[13:56:25] <riv> any answer to my question
[13:56:29] <Fangs> [-_-]: no, I've never heard of the book before
[13:57:29] <Fangs> mostly learnt linear algebra by tutoring a linear algebra course, partially hand in hand while learning abstract algebra
[13:58:28] <[-_-]> Fangs: you taught others and in the process learnt la?
[13:58:29] <cadmio> riv: not really, but this seems a more basic fact to understand
[13:58:38] <int-e> (If sigma commutes with tau then tau sigma tau^-1 = sigma)
[13:58:40] <[-_-]> wt....
[13:58:49] <Fangs> [-_-]: I took a course in linear algebra previously obviously
[13:58:55] <Fangs> but I never really 'understood' it
[13:59:01] <[-_-]> :D
[13:59:07] <Fangs> (I still don't)
[14:00:40] <int-e> [-_-]: Note... this is likely a case of somebody saying that they don't understand a subject because they know enough of the subject to see that there's a lot more to learn about it than they already know.
[14:00:50] <cadmio> here https://imgur.com/GmMYyt8.png it says that h is odd, but h should be in A_n, right?
[14:01:25] <int-e> cadmio: no.
[14:01:36] <[-_-]> int-e: I know...dk effect
[14:01:46] <riv> S_n = A u B
[14:01:51] <riv> x^S_n = x^A u x^B
[14:01:55] <riv> this is all we are doing here
[14:02:07] <riv> S_n can be split into two disjoint sets
[14:02:07] <[-_-]> but I did not think of this case as that...so thanks for reminding me int-e
[14:02:18] <int-e> cadmio: h is never an element of A_n. However, (1 2)h is.
[14:02:27] <CuriousErnestBro> are these 2 definitions equivalent?
[14:02:33] <CuriousErnestBro> if yes, I don't see how http://mathb.in/63464
[14:03:10] <int-e> cadmio: You can take a = (1 2)^-1h (which *is* in A_n) and have (1 2)a = h.
[14:03:58] <cadmio> (1 2)h is an odd permutation how can it be part of A_n?
[14:04:00] <int-e> cadmio: and then you can look at what h^-1 x h becomes if you take h = (1 2)a
[14:04:17] <int-e> cadmio: h is odd. (1 2) is odd. So (1 2)h is even.
[14:05:16] <int-e> And (1 2)^-1 = (1 2), so the same is true for (1 2)^-1.
[14:05:39] <[-_-]> Fangs: Idk why you haven't hard of it but teachers here act as if it is the god of math books....just saying
[14:05:46] <[-_-]> heard
[14:05:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[14:06:11] <Fangs> I'd say linear algebra done right and linear algebra done wrong should suffice for most of your needs
[14:06:17] <cadmio> int-e: my text says that any odd permutation has the form (1 2)h for some even permutation h
[14:06:55] <int-e> cadmio: except it uses a instead of h to avoid confusion.
[14:07:10] <Fangs> int-e: no I meant I dont really know it, almost in earnest. there's this... decompositions you do that's apparently realy important for applications
[14:07:25] <Fangs> QR decomposition?
[14:07:49] <Fangs> there's also some arcane sorcery about matrix minors that somehow made sense to people and I'm just.. lost
[14:07:55] *** Joins: chomwitt (~chomwitt@ppp-94-69-12-184.home.otenet.gr)
[14:08:33] <Fangs> int-e in the other direction math physics students seems to have a really strong intuition for various matrix groups, and I'm just lost when thinking about them
[14:08:38] <int-e> Fangs: Oh, many... QR is one of them. LPU is another. And then there's various eigenvalue stuff (for principal component analysis, often going into ML territory, blah)
[14:08:47] <Fangs> yeah
[14:09:18] <cadmio> (1 2) is odd h is even and you get odd*even = odd as the text says
[14:09:20] <Fangs> I only know how to do most of the exercise they gave first year students here in our uni, just because I've encountered them and I see them semester to semester
[14:09:36] <Fangs> sometimes I even have a slick picture to draw for the students too
[14:09:40] <int-e> cadmio: you're not helping yourself by chaning a to h.
[14:09:52] <int-e> cadmio: in the text, h is *odd*, and a is even.
[14:10:24] <Fangs> there's some basic exercises too I always struggle with
[14:12:56] <cadmio> I was referring to another text
[14:14:57] *** Quits: trbp (~trbp@user/trbp) ()
[14:16:20] <Fangs> int-e: even in 'calculus' or w/e, there's that dirlichet boundary problem and applied people seems to care about them a lot
[14:16:48] <Fangs> and potential theory in "2D" inevitably relates stupidly to complex analysis
[14:17:15] <int-e> Fangs: *wonders whether to correct "calculus" to "analysis" or home in on the name "Dirichlet"*
[14:17:23] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:17:51] <Fangs> so theres not one obvious way to 'generalize' complex analysis to just "complexanalysis in many variables" there's also potential theory and/or harmonic function theory(??)
[14:18:03] <int-e> Anyway, I don't really know that stuff.
[14:18:18] <Fangs> I don't.. I just found out about it
[14:18:40] <CuriousErnestBro> an AR(1) process satisfies the markov property
[14:18:41] <CuriousErnestBro> right?
[14:19:13] <Fangs> int-e: I had an assignment that says: Suppose you have a function such that it is holomorphic in an annulus, and f(|z| = 1) = 2 and f(|z|=2) = 2, show that f has two zeroes inside the annulus
[14:19:41] <Fangs> then I got sidetracked about that boundary value problem
[14:20:51] <cadmio> sticking to the text I passed before (1 2)a with a in A_n is not in A_n
[14:21:05] <int-e> Fangs: Isn't that problem missing a "non-constant". Other than that... I have some vague ideas why that works but no tools to tackle this properly.
[14:21:20] <Fangs> yeah
[14:21:43] <Fangs> *at least two zeroes with multiplicity
[14:23:25] <Fangs> I'm really proud of my solution. I stole it from mathstack exchange and gamelin
[14:23:43] <[-_-]> I have got my hands on linear algebra done wrong but may not see it (may be never) :D
[14:24:41] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[14:25:11] <Fangs> int-e here you go https://usercontent.irccloud-cdn.com/file/yYcFUW0L/inte.pdf
[14:25:14] <Fangs> its oddly geometric
[14:26:13] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:26:25] *** Joins: flynn (~mcbloch@user/flynn)
[14:26:27] <Fangs> you use the modulus principle and the fact that 1/z is some sort of an 'indicator function'.. a bit like the poincare dual of a point
[14:26:32] <trace987> are there kind of foldings for topologies and how are they called?
[14:28:35] *** Quits: cadmio (~cadmio@151.37.141.201) (Quit: WeeChat 3.0)
[14:30:19] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[14:32:15] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[14:35:24] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[14:35:24] *** Joins: specing_ (~specing@user/specing)
[14:37:03] *** specing_ is now known as specing
[14:37:16] *** Joins: rubiksdream (~a@1-64-49-062.static.netvigator.com)
[14:37:28] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Quit: WeeChat 2.3)
[14:38:20] <trace987> Topology of Manifolds ?
[14:38:47] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[14:39:12] *** Quits: chomwitt (~chomwitt@ppp-94-69-12-184.home.otenet.gr) (Quit: Leaving)
[14:39:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc07:8000:12c3:7bff:fe6d:d374)
[14:39:48] *** Joins: sedeki (~textual@user/sedeki)
[14:42:01] <cherim> In the annulus problem, isn't this simply true that images of both inner and outer contours traverse |f|=5 in the same direction, so just the argument principle suffices?
[14:42:31] <Fangs> cherim: essentially yeah. you have to go around the disc in the image at least twice
[14:42:56] <Fangs> I had no geometric intuition for this previously
[14:43:18] <cherim> I mean your last paragraph looks like a completely independent argument
[14:44:17] <cherim> But the necessity to glue a whole half-disk near boundary into |f|<=5 forces orientation
[14:45:20] <Fangs> "we deduce that this integral must at least be 2." I think I'm basically saying it had to go around the origin twice along the contour
[14:46:20] <cherim> Yes, no questions about the fact
[14:46:35] <Fangs> cherim: I think you can show that the integral must at least be two more directly if you use polar coordinates
[14:46:48] <Fangs> a student did that and ended up with their answer on the solution sheet as an alternative solution
[14:46:56] <cherim> [13:14:39] <cherim> But the necessity to glue a whole half-disk near boundary into |f|<=5 forces orientation
[14:47:01] <cherim> I think this is already OK
[14:47:16] <Fangs> yeah I'm not super comfortable with "just that"
[14:47:23] <Fangs> (its not as obvious to me as it is to you)
[14:47:43] <Fangs> I tend to have very little intuition for analysis in general
[14:52:45] *** Quits: rubiksdream (~a@1-64-49-062.static.netvigator.com) (Changing host)
[14:52:45] *** Joins: rubiksdream (~a@user/rubiksdream)
[14:53:46] <rubiksdream> what was the question?
[14:54:30] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[14:55:08] <Fangs> > I had an assignment that says: Suppose you have a function such that it is holomorphic in an annulus, and f(|z| = 1) = 2 and f(|z|=2) = 2, show that f has two zeroes inside the annulus
[14:56:17] *** Joins: NEYi (~NEYi@109.251.216.38)
[14:57:22] <riv> interesting
[14:57:38] <riv> couldn't it just be f(z) =2
[14:58:07] <cherim> |f|=5, not f=2. Also nonconstant
[14:58:23] <Fangs> non-constant
[14:58:36] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[14:58:45] <riv> of |f(z)=2| for |z| = 1 and |z| = 2
[14:58:45] <Fangs> it took me a week to do this problem
[14:58:49] <riv> of |f(z)|=2 for |z| = 1 and |z| = 2
[14:58:53] <riv> isn't it just rouches theorem?
[14:58:57] <Fangs> yeah that too
[14:58:59] <rubiksdream> |f| = 5? so f(|z| = 1) = 2, and f(|z| = 2) = 5?
[14:59:06] <rubiksdream> not sure what the problem statement is still
[14:59:42] <cherim> |f|=5 on |z|=1 and on |z|=2
[14:59:43] <Fangs> Suppose that |f(z)| = 5 for |z| = 2 and |z| = 1.
[15:00:04] <Fangs> show that f has two zeroes (with multiplicities)
[15:00:14] <riv> how did you solve it?
[15:00:20] <cherim> Confusion since you wrote  f(|z| = 1) = 2 and f(|z|=2) = 2 and not for |f|
[15:00:41] <Fangs> yeahhh, that was a mistake on my part
[15:00:54] <int-e> I did remember the original closely enough though to make the connection.
[15:01:19] <Fangs> riv: argument principle, and basically thinking about the proof of open mapping theorem of a holomorphic function
[15:01:43] <riv> hmm
[15:01:50] <riv> how do you apply argument principle not knowing f?
[15:02:16] <Fangs> (and stealing the answer from mathstackexchange and gamelin)
[15:02:37] *** Quits: Samian (~Sami@2620:10d:c091:480::1:e369) (Ping timeout: 245 seconds)
[15:02:56] <Fangs> riv: some answer from mathstackexchange or mathoverflow.. which ever it is, had a proof where you basically prove the integral of the arugment principle has to be at least 2
[15:03:08] <Fangs> I don't... understand why...
[15:03:11] <riv> I was thinking maybe we could use Rouche: if |f(z)| > |h(z) - f(z)| then f,h have the same number of zeroes inside C
[15:03:27] <riv> and come up with some h that has 2 zeros in the annulus
[15:03:40] <Fangs> so I had to look at gamelin to unravel that argument
[15:03:44] <riv> maybe it doesn't work out though
[15:03:56] <Fangs> riv: I thought rouche only works in a simply connected domain?
[15:03:57] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[15:04:14] <riv> well i  was thinking to do it on the outside then the inside
[15:04:17] <Fangs> or that the function had to be holomorphic inside the boundary
[15:04:25] <riv> ah yeah i guess that ruins it
[15:05:00] <[-_-]> guys another question I wanted to ask
[15:05:07] <[-_-]> on the same problem
[15:05:08] <Fangs> riv: ah, then I don't know how to control |f(z)| for the "inbetween" lines when you cross from the inner boundary to the outer boundary
[15:05:09] <[-_-]> http://0x0.st/-v7g.jpg
[15:05:19] <[-_-]> Is there a problem if I use reduced row echelon form?
[15:05:39] <rubiksdream> by holomorphic inside an annulus, does it mean f is holomorphic in a neighbourhood of the closed annulus 1 <= |z| <= 2?
[15:05:47] <[-_-]> I mean does reduction to reduced row echelon form change row space?
[15:05:59] <rubiksdream> or literally the open annulus, and has a continuous extension to the closed annulus
[15:06:19] <Fangs> rubiksdream: yeah, basically take the annulus +epsilon strip around it.. that was the version I had on the assignment
[15:06:41] <Fangs> the math-overexchange post only assumed continuous extention to the boundary
[15:07:47] <Fangs> I got fucking 80% on that assignment, which is really fucking bad
[15:07:57] <Fangs> (think you're supposed to get close to 100%)
[15:08:05] <[-_-]> sorry, ignore the question
[15:08:12] <[-_-]> it doesn't affect...
[15:08:20] <cherim> The version from your pdf also lost some points?
[15:08:36] <cherim> Or only other problems
[15:08:47] <Fangs> other problems
[15:09:27] <int-e> [-_-]: reduced row echelon form is also okay, but it's just extra work in this context
[15:10:16] <[-_-]> hmmm....then row ech.... it is
[15:11:29] *** Quits: magla (~gelignite@55d416bb.access.ecotel.net) (Quit: Stay safe!)
[15:12:21] *** Joins: daoudr (~daoudr@178.197.197.112)
[15:13:11] <[-_-]> but they are 'unique'
[15:13:48] <[-_-]> for a particular matrix...that doesn't give an advantage in this case though....
[15:13:50] <[-_-]> okay
[15:14:31] *** Quits: daoudr (~daoudr@178.197.197.112) (Client Quit)
[15:15:38] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 252 seconds)
[15:16:07] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:25:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[15:29:08] <rubiksdream> so does the question require you to show that the number of zeros (counting multiplicities ) is >= 2? Or exactly 2
[15:29:18] <rubiksdream> i can see why >= 2 is true, but not = 2
[15:29:37] *** Quits: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de) (Quit: menace)
[15:31:37] <cherim> If f suits, then maybe (1/5)f^2 also does
[15:32:05] <cherim> Why do you think exactly 2 has a chance to hold?
[15:32:40] <rubiksdream> ah yeah, so it cant be = 2
[15:32:49] <rubiksdream> well because the original question i read said '2 zeros'
[15:34:36] <rubiksdream> in that case this just amounts to showing that the boundary curves are mapped by f to circles, which has to happen because f is nonconstant
[15:42:32] <cherim> Technically, exactly 2 has a chance to hold if no such f exists...
[15:46:12] <joel135> How does Nat -> Nat in System F compare to the class of primitive recursive functions?
[15:46:22] *** Quits: luna-is-here (~quassel@ip-95-223-58-39.hsi16.unitymediagroup.de) (Ping timeout: 252 seconds)
[15:46:29] *** Joins: luna-is-here_ (~quassel@2a02:908:f761:2a3c::a)
[15:48:19] <riv> it's a strict subset of the total computable functions
[15:48:52] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:48:58] <joel135> yes
[15:49:03] <riv> ther will be a cutoff with fast growing functions, i can't remember if ackermann is in there or not
[15:49:43] <riv> https://cstheory.stackexchange.com/a/30522  same exact functions as HA_2 and 2nd order PA
[15:49:50] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:50:06] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:51:14] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[15:52:32] <riv> yes it includes ackermann
[15:52:38] *** Joins: oxum (~oxum@106.203.195.217)
[15:54:09] *** Quits: oxum (~oxum@106.203.195.217) (Read error: Connection reset by peer)
[15:54:15] <joel135> thanks!
[15:54:34] *** Joins: oxum (~oxum@106.203.195.217)
[16:01:10] *** Quits: join_subline (~join_subl@135-23-251-24.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[16:05:33] <rubiksdream> hm, although something is confusing me about this question, surely the boundary curve we are using for the argument principle has the outer counter oriented counter clockwise and the inner contour clockwise?
[16:05:54] <rubiksdream> like, they can't be oriented the same way or else we won't be integrating over a contour homologous to zero in the region
[16:06:05] <rubiksdream> *contour
[16:08:03] <cherim> If you want to use argument principle, you have to make the contour S^1
[16:08:20] <cherim> By joining inner and outer with a "there and back"
[16:08:38] <rubiksdream> thats a bridge , right?
[16:09:08] <rubiksdream> i mean that still amounts to C_{outer} - C_{inner}
[16:09:11] <rubiksdream> (both oriented positively)
[16:09:28] <cherim> You make a cut along the bridge
[16:09:50] <cherim> After that orientations of the pieces of the boundary are fixed
[16:10:10] <rubiksdream> what do you mean by cut?
[16:11:15] <cherim> You make annulus a simply-connected domain by removing a curve joining outer and inner circles (and not passing through zeros of f)
[16:11:29] <cherim> And then apply argument principle to it
[16:11:49] <cherim> Contributions from the paths along the cut cancel
[16:11:52] <rubiksdream> yes, im with you here, but ultimately what contour are you integrating over, or rather just talk about cycles, what cycle are you integrating over in the argument principle?
[16:12:01] <rubiksdream> yes, so after they cancel, you are integrating over C_2 - C_1
[16:12:10] <cherim> But relative orientation of C_1 and C_2 are fixed
[16:12:16] <rubiksdream> yes
[16:12:24] <cherim> Wasn't this your question?
[16:12:32] <rubiksdream> my question was that they are opposite, aren't they?
[16:12:58] <cherim> Yes, that's the only thing you can get by traversing the reult of removing a cut
[16:13:08] <rubiksdream> okay, now from here how do we get >= 2?
[16:13:29] <rubiksdream> why does n(f o C_2, 0) - n(f o C_1, 0) >= 2
[16:13:47] <rubiksdream> here C_2, is outer circle oriented positively, C_2 is inner circle oriented positively
[16:13:54] <rubiksdream> *C_1 is inner circle oriented positively
[16:14:00] <cherim> That's the contents of the problem
[16:14:15] <rubiksdream> what was the solution?
[16:14:45] <cherim> There are several, Fangs' is https://usercontent.irccloud-cdn.com/file/yYcFUW0L/inte.pdf
[16:15:29] <cherim> I just say that |f|<=5 by maximum modulus principle, so the annulus is mapped inside the disk
[16:16:20] <cherim> As you go over C_1, the circle is mapped to circle, and the annulus part to |f|<=5. That fixes the orientation you traverse |f|=5
[16:16:55] <cherim> As you go over C_2, the circle is mapped to circle, and the annulus part to |f|<=5. That fixes the orientation you traverse |f|=5 again. And they are the same, so in the argument principle there is addition of 2pi, not subtraction
[16:18:02] <Fangs> my answer just explained why the answer I found on math-overexchange worked geometrically
[16:18:22] <Fangs> (and also taught me what the argument principle is about and the open mapping theorem)
[16:22:29] <Z-module> (I hadn't noticed before that math as the argument principle, and principal arguments. Different.)
[16:23:09] <rubiksdream> ah okay, I see you used 1 / 2pi int f'(z) / (f(z) - w) dz 's continuity as a map D(0;5) -> Z, and if it was equal to 1 for w = 0 then this would be a contradiction so  we need > =2
[16:23:31] <rubiksdream> cherim why when you go over C_2, the orientation you traverse is the same as over C_1 ?
[16:23:31] *** Joins: xiongxin8802 (~manjaro-u@119.123.100.23)
[16:24:32] <rubiksdream> as in what is the justification for why you are adding 2pi
[16:24:49] <cherim> Let x be a point on C1, take a small vicinity of x and intersect it with annulus. You have to glue this inside the disk |f|<=5
[16:25:18] <cherim> It's locally conformal, keeps orientation, boundary to boundary
[16:25:31] <Fangs> rubiksdream: I thought its because complex functions are orientation preserving
[16:25:42] <cherim> You know how you traverse |f| then
[16:25:48] <rubiksdream> ah yes, sure
[16:25:55] <cherim> Now the same but for x on C2
[16:26:23] <Fangs> I wasn't sure if the map has to go around |f| = 5 in totality, a priori I wasn't sure if the map is surjective onto that circle
[16:26:55] <Fangs> that's the bit I wasn't happy about when I found that answer on math-overexchange
[16:27:30] <cherim> There may be no zero of f' on the boundary since otherwise the leading term is z^2 or higher and the image of a half-disk covers too much (incl. outside |f|<=5)
[16:27:53] <cherim> If f' is nonzero, you can't turn back anywhere
[16:28:26] <Fangs> https://usercontent.irccloud-cdn.com/file/K6Kuu58r/SharedScreenshot.jpg there's this answer that I found in a book
[16:28:29] <Fangs> I think its full of shit
[16:29:05] <cherim> It's what I say essentially
[16:29:08] <Fangs> or at least I wasn't convinced the argument went through
[16:29:41] <cherim> The "f(Gamma_1) must be |f|=5 counterclockwise" but without explanations
[16:29:52] <Fangs> yeah, I wasn't happy with that bit either
[16:30:13] <cherim> Since the author has a clear geometric picture of how a locally conformal map must look...
[16:30:15] <Fangs> its essentially the bit that bothered me from the math-overexchange answer
[16:30:20] <Z-module> stupid notation choice, for readability; clearly Gamma_1 should be {|z| = 1}, Gamma_2 should be {|z| = 2}
[16:31:32] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:32:08] <Fangs> its ok I stole that notation for my own answer and swapped the two
[16:32:21] *** Joins: pi1 (~pi@177.223.162.6)
[16:33:24] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:6442:3670:cbe8:d185)
[16:33:38] <Z-module> Did they actually mean f is analytic on an open set containing the closed annulus, I hope?
[16:33:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:33:45] <rubiksdream> Z-module yeah they did
[16:33:49] <rubiksdream> i asked that earlier too
[16:33:53] <cherim> It's in the pdf
[16:33:53] <Z-module> ah, sorry
[16:34:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:34:16] <rubiksdream> the argument principle questions is something i have totally forgotten about
[16:34:33] <rubiksdream> ah, id probably screw up a first course in CA, despite it being somewhat the focus of my phd lol
[16:35:09] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:10fd:e474:6153:b22e)
[16:35:21] *** Quits: traxex (traxex@user/traxex) (Ping timeout: 248 seconds)
[16:38:10] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:6442:3670:cbe8:d185) (Ping timeout: 256 seconds)
[16:38:49] <rubiksdream> i guess maybe if i had a week to do it i would be ok
[16:38:56] *** Joins: seninha (~seninha@user/seninha)
[16:39:38] *** Joins: oxum (~oxum@106.203.195.217)
[16:40:06] <W> This might be more physics (or general philosophy of science) than mathematics, but I had the sudden obvious realization that (physical) units come in two kinds, the ones with a zero baked in (celcius, CE year) and the ones without (meter, second), and I don't know if these kinds have names? Mathematically I guess they correspond to fields vs groups, but that's more about the algebraic structure and its properties, is there a more common or generalized taxonomy?
[16:43:12] <riv> W I dont follow this bit about the zero?
[16:44:07] *** Joins: dez (uid92154@user/dez)
[16:45:10] <Z-module> actually CE (= AD) years *don't* have 0, it's one of the crazy faults of that system
[16:45:31] <Z-module> the year before 1 CE is 1 BCE. It's wacky.
[16:45:37] <[itchyjunk]> 0 minute 1 second
[16:45:40] <[itchyjunk]> 1 minute 0 second
[16:45:48] <[itchyjunk]> 0 is valid there
[16:45:49] *** Quits: xiongxin8802 (~manjaro-u@119.123.100.23) (Quit: Konversation terminated!)
[16:45:57] <W> Z-module, well, by backwards reasoning you can say that 0 CE is 1 BCE, and so it has a zero that way
[16:46:48] <[itchyjunk]> But i don't see any connection to fields or groups here
[16:47:03] <[itchyjunk]> fields and groups both can have 0's
[16:47:28] <W> riv, think about temperature differences. It's 3 celcius hotter now than at midnight. This is a relative measurement. But 3 celcius, on its own, is also a temperature, relative to a defined zero point, 0 celcius where water freezes. but 3 seconds is always relative measurement, there's no zero point defined, any event can do and are all treated equally
[16:47:41] <Z-module> W yes, but it's not done that way historically, was my point.
[16:47:51] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:47:59] <Z-module> (never mind, it's not mathematically interesting)
[16:48:08] *** Joins: aliosablack (~chomwitt@ppp-94-69-12-184.home.otenet.gr)
[16:48:24] <[itchyjunk]> because negative temperature makes sense
[16:48:30] *** Quits: chomwitt (~chomwitt@2a02:587:dc07:8000:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[16:48:31] <[itchyjunk]> we go from positive to negative passing 0
[16:48:33] *** Joins: oxum (~oxum@106.203.195.217)
[16:48:37] <[itchyjunk]> it's not true for kelvin
[16:48:37] <cherim> Temperature certainly has a distinguished 0 (0K)
[16:48:44] <[itchyjunk]> -1k wouldn't make sense
[16:49:02] <cherim> But then you superimpose an absolutely arbitrary and stupid Celsius scale
[16:49:03] <[itchyjunk]> same way, -1m generally doesn't make sense
[16:49:13] <cherim> That doesn't reflect any property of temperature
[16:49:16] <[itchyjunk]> celsius is not stupid
[16:49:23] <[itchyjunk]> it uses water as a base point
[16:49:23] <cherim> Which is the derivative of entropy by energy
[16:49:26] <Z-module> (rankine is more fun)
[16:49:27] <[itchyjunk]> makes really good sense
[16:49:42] <W> [itchyjunk], I was relating it to how 1 is defined by which multiplication operation you're using and 0 is defined by which addition operation you're using (or vice versa, they're connected anyway) but I guess once you call it "multiplication" you've kind of lost that idea since now you're already in a field with a 0
[16:49:44] <[itchyjunk]> 0C being freezing point of water
[16:49:54] <cherim> I know what Celsius is
[16:50:23] <[itchyjunk]> yes, hence it's not stupid
[16:50:46] <cherim> I say that for statistical physics with 1/T=dS/dE by definition a zero somewhere where dS/dE is clearly positive is meaningless
[16:50:46] <rubiksdream> cherim, so if I understand you correctly, we are saying that at z_0 on the boundary (say the outer circle), f'(z_0) = 0 implies that f maps (locally) quadrants 3,4 (around z_0) to quadrants 1,2 (around f(z_0) on |z| = 5), and so we would get points mapped outside |z| = 5, therefore foC_2 winds positively around |z| = 5, and by conformality and the same argument showing f' = 0 on C_1 is impossible, f o C_1 winds positively around |z| = 5
[16:51:00] <[itchyjunk]> absolute zero is a very abstract concept and fairly recent idea in history of physics
[16:51:03] <cherim> But you can rescale any quantity
[16:51:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[16:51:26] <rubiksdream> uh, rather f o (-C_1) winds positively around |z| = 5
[16:51:27] <cherim> Say, let's define velocity as (velocity in m/s - 100m/s)*16
[16:51:34] *** Joins: dbr^ (~dbr@wsip-98-188-244-188.mc.at.cox.net)
[16:51:37] <cherim> Also a system, like Celsius
[16:52:02] <[itchyjunk]> If there was some fimiliar obejct with that specific velocity
[16:52:08] <[itchyjunk]> it would be resonable to define it that way.
[16:52:13] <cherim> Oh, it's not hard to find
[16:52:32] <W> anyway, the point was, some concepts makes sense "floating", to be anywhere on a scale, to not need an origin, a zero. I feel this corresponds to something mathematical. But nevermind, I was just dumbfounded that no one has drawn attention to this essential difference between the two kinds of units, and was wondering if someone who has systematically looked at these things named them. But the field is metrology, not mathematics, so I'll dig there
[16:52:57] <[itchyjunk]> W, i think you used delta t and t interchangably there
[16:53:06] <[itchyjunk]> i am 1 meter and i am 2 meter taller than you
[16:53:10] <[itchyjunk]> makes sense in both cases
[16:53:25] <[itchyjunk]> in one case its my length, in another, it's the change of length
[16:53:33] <cherim> Negative temperature in Kelvin also occurs, by the way
[16:53:34] <[itchyjunk]> same with temeprature and change of temperature
[16:53:55] <cherim> But it corresponds to objects with more energy than at infinite temperature
[16:54:28] <[itchyjunk]> i don't think i understand that
[16:54:31] <cherim> I.e in the Gibbs distribution ~e^{-E/T} there is the inverted population of energy levels
[16:54:34] <[itchyjunk]> what's infinite temperature?
[16:55:15] <cherim> System is at infinite temperature if all energy levels are equally populated
[16:55:40] <[itchyjunk]> how do they manage to do that?
[16:55:42] <cherim> It's the limit of p~e^{-E/T} as t->inf
[16:55:53] <joel135> a locally cartesian closed category may lack a terminal object, so it is sort of 'floating'
[16:56:19] <[itchyjunk]> oh terminal object,cat theory jargon! don're member what it is though
[16:56:36] <joel135> 1 = [*} is terminal in Set [itchyjunk]
[16:56:37] <[itchyjunk]> did you some how make a connection between type theory and category there there?
[16:56:53] <[itchyjunk]> hmmm i don't understand the RHS of that notation
[16:57:01] <joel135> singleton set
[16:57:12] <joel135> {{}} for the set theorists
[16:57:52] <[itchyjunk]> hmmmmmm
[16:58:01] *** Parts: D-04 (~D-04@45.87.212.70) (?)
[16:58:02] <joel135> LCCC is a connection between type theory and category theory, yes
[16:58:43] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:59:53] <[itchyjunk]> man..
[17:00:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[17:02:05] <[itchyjunk]> so {{}} here represents a set with 1 element? so i could use {{}} and {a} interchangably?
[17:02:14] <[itchyjunk]> or does it specifically have to contain the empty set?
[17:02:15] *** Joins: ball (~ball@99-60-12-181.lightspeed.cicril.sbcglobal.net)
[17:04:25] <Z-module> For what purpose, [itchyjunk] ?
[17:04:51] <[itchyjunk]> in that locally cartesian closed category explanation above :s
[17:04:56] <Z-module> oh
[17:05:15] <mh_le> hey
[17:06:43] <[itchyjunk]> i need to review roots in C at some point
[17:07:21] <[itchyjunk]> i wanted to ask if the reason we can have infinite many roots is related to irrationality of pi or some such
[17:07:40] <[itchyjunk]> like z^n has n roots but i can send n to infinity
[17:07:44] <joel135> Yes, the notation {{}} is an instance of the notation {a}, according to set theory.
[17:07:48] <[itchyjunk]> and the roots would not repeat
[17:07:56] <[itchyjunk]> ah okay
[17:09:34] <joel135> Oh, I see now I mistyped [*} instead of {*}.
[17:10:32] <[itchyjunk]> hmm so in the category of Sets, what do the arrows preserve? what are the morphisms? for Grps its homomorphisms i assume
[17:10:43] <[itchyjunk]> can't think of what structure the arrow would be preserving
[17:10:45] *** Joins: oxum (~oxum@106.203.195.217)
[17:12:24] <Z-module> nothing, just maps
[17:13:30] <[itchyjunk]> ah
[17:13:39] <tolarz> [itchyjunk]: You can roughly think of functions of type `Nat -> Nat -> prop` as binary boolean-valued functions of type `Nat × Nat -> bool`.
[17:13:44] <tolarz> [itchyjunk]: because you asked this in offtopic
[17:14:05] *** Joins: zacts (~zak@user/zacts)
[17:14:08] <[itchyjunk]> yeah felt off topicish
[17:14:09] <joel135> If you want to say that they preserve anything at all, functions preserve identity, i.e. equality. That is, if a=b then f(a)=f(b).
[17:14:16] *** Joins: Kaylah (~Kaylah@ptr-ekg3bnxs6jq2zocuwyj.18120a2.ip6.access.telenet.be)
[17:14:31] <[itchyjunk]> hmm so that looks like a function that takes 2 nats and returns Prop
[17:15:06] <[itchyjunk]> but what confused me was the explanation i saw said something like nat -> (nat -> Prop)
[17:15:21] <[itchyjunk]> so then i would have 2 function, first that takes nat and returns nat
[17:15:29] <[itchyjunk]> and second that take nat and return Prop?
[17:15:51] <[itchyjunk]> joel135, oh i see! heh
[17:16:58] <joel135> (In order to be useful/informative, this description of 'preserving identity' requires a mathematical framework in which the structure of identity cannot be taken for granted. For instance, you could have a theory of types without equality, and you could attempt to define sets as setoids in this theory.)
[17:17:07] <tolarz> [itchyjunk]: called currying
[17:17:18] * ball looks confused
[17:17:25] <tolarz> in most type theories, for any types A, B, C the following function types are isomorphic
[17:17:35] <tolarz> A -> (B -> C) ~~ A×B -> C
[17:17:51] <tolarz> consider the direction from left to right
[17:18:01] <tolarz> we're given f: A -> (B -> C) and want to construct g: A×B -> C
[17:18:08] <tolarz> we define g((a,b)) = f(a)(b)
[17:18:10] *** Parts: ball (~ball@99-60-12-181.lightspeed.cicril.sbcglobal.net) (I'll ...come back later.)
[17:18:13] <tolarz> Now consider right to left:
[17:18:17] <tolarz> we're given g and want to construct f
[17:18:24] <tolarz> f(a) = b ↦ g((a,b))
[17:18:35] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Remote host closed the connection)
[17:18:44] <[itchyjunk]> tolarz, that's the type of stuff they were saying in "Proposition as types" video :O
[17:18:49] *** Joins: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de)
[17:18:56] <tolarz> :)
[17:19:10] <[itchyjunk]> let me see if i can understand though, i didn't during the video
[17:19:29] <mh_le> heya
[17:20:58] <[itchyjunk]> f(a)(b), i have to think from left to right here? a gets passed first then b ?
[17:21:06] *** Joins: V (~v@anomalous.eu)
[17:21:39] <[itchyjunk]> hmm actually, idk if i know the notation f(a)(b)
[17:23:48] *** Joins: gggp (~textual@60.10.23.169)
[17:24:06] <int-e> [itchyjunk]: when f :: A -> (B -> C), f(a) is a function
[17:24:26] <int-e> maybe add another pair of parentheses to clarify? (f(a))(b)
[17:24:32] <joel135> Matlab doesn't know the notation f(a)(b) either :p
[17:24:52] <joel135> At least when it comes to functions that returns matrices
[17:26:54] *** Quits: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:27:07] <joel135> Hmm, it seems like octave knows it, so maybe I'm wrong
[17:28:30] <[itchyjunk]> huh, i think i understand (f(a))(b) but still a bit trippy
[17:30:18] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[17:30:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[17:30:44] <[itchyjunk]> f(a) as a function actually make perfect sense but so bizzare to thing of it that way
[17:30:45] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[17:30:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:31:10] <tolarz> [itchyjunk]: f(a) is a function
[17:31:14] <tolarz> f(a)(b) is f(a) applied to b
[17:31:25] <joel135> (I tried it now in matlab: >> eye(3)(1,1) % Error: Indexing with parentheses '()' must appear as the last operation of a valid indexing expression.)
[17:32:36] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:38:30] <[itchyjunk]> wait, so why does it feel okay when i think of f:A->B and g:B->C and g\of f. but thinking in terms of f: A-> (B->C) just trips me up..
[17:38:49] *** Joins: oxum (~oxum@106.203.195.217)
[17:40:32] *** Quits: ghen (~nobody@2601:649:100:8b0:4c02:a93:f2f8:5b5d) (Ping timeout: 245 seconds)
[17:40:53] <int-e> . o O ( dysfunctional brain )
[17:41:05] <[itchyjunk]> how do you write the (f(a))(b) in element notation?
[17:41:21] <[itchyjunk]> f(a):b|-> c ?
[17:41:35] <quantum> seems about right
[17:41:43] <int-e> Jokes aside, treating functions as values is just something that isn't commonly done in most areas of math.
[17:41:45] <Z-module> I don't like the colon there
[17:42:03] <int-e> [itchyjunk]: wrong arrow, I think
[17:42:29] <[itchyjunk]> the bar with arrow thingy?
[17:42:43] <[itchyjunk]> i was approximately drawomg ot
[17:42:46] <[itchyjunk]> it
[17:42:51] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:43:00] <[itchyjunk]> Z-module, what would you put there?
[17:43:07] <int-e> [itchyjunk]: it's not a maps-to, it's just domain and codomain, so -> is the right arrow. Unless I'm misunderstanding what you intended to write.
[17:43:10] <quantum> int-e: I'd disagree, hom sets are a thing
[17:43:55] <quantum> I think `a\in A, b\in B, c\in C`
[17:44:33] <int-e> if c is an expression in b, then I'd prefer = to :.
[17:44:48] <int-e> quantum: that only happens if you apply category theory language.'
[17:45:15] <quantum> It's fairly common in group rep. too
[17:45:23] *** Joins: Koen_ (~Koen@246.244.88.92.rev.sfr.net)
[17:46:12] <[itchyjunk]> f(a) the function maps the element b to element c ?
[17:46:28] <[itchyjunk]> that's what happens in (f(a))(b) no?
[17:46:33] <int-e> hmm.
[17:47:18] *** Quits: pi1 (~pi@177.223.162.6) (Ping timeout: 256 seconds)
[17:47:25] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[17:48:18] <int-e> f a b = c seems clearer (with or without additional parentheses)
[17:52:32] <[itchyjunk]> y(3) = 4 vs y:3|->4 but same thing right?
[17:53:18] <[itchyjunk]> what did you mean by function as values btw, did that happen here?
[17:53:47] <Z-module> I don't think the colon gets used that latter way in general. Only for showing the domain and codomain.
[17:53:49] <int-e> The thing is, I never use \mapsto that way. I only use it as a lambda that describes a whole function, so x |-> <expression in x> stuff...
[17:54:13] <int-e> And also, I reserve : for specifying domains/codomains.
[17:54:23] <Z-module> (and of course only with -> , not |-> )
[17:54:24] <quantum> I think it's a matter of taste, I usually write `f : x |-> y`
[17:54:44] <int-e> f : A -> B; x |-> f(x)
[17:54:46] * int-e shrugs
[17:54:56] <[itchyjunk]> oh i see
[17:55:22] <int-e> take it with a huge grain of salt, I hardly use |-> at all in reality.
[17:55:27] <Z-module> quantum/int-e's idea is perfectly logical as a formalism, but people really don't do it much at all.
[17:56:01] <Z-module> The immediate very strong expectation after a function symbol followed by a colon is that the next symbol is the domain.
[17:56:51] <tolarz> quantum | I think it's a matter of taste, I usually write `f : x |-> y`
[17:56:55] <tolarz> I would object to this notation.
[17:57:00] <tolarz> Type theoretically, it doesn't make sense.
[17:57:04] <tolarz> You want `f = x |-> y`
[17:57:25] <quantum> Usually I don't write this in isolation
[17:57:30] <tolarz> So usually when we define a function in math (or type theory), we want to give a definition (and optionally a type)
[17:57:37] <tolarz> The type is the thing after :, the definition the thing after =
[17:57:44] <Z-module> It sort of depends on whether the x there is generic or some specific element (of the domain)
[17:57:47] <tolarz> Usually one can infer the type from the definition, so types can be left out
[17:58:00] <quantum> I might write `f: A -> B` in the paragraph body and then the actual mapping as a `displaymath` or `equation`
[17:58:05] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:58:10] <tolarz> Z-module: variables bound by binders are always generic
[17:58:14] <tolarz> Z-module: and always shadow outer variables
[17:58:17] <tolarz> (at least in good type theories)
[17:58:42] <tolarz> |-> is a binder
[17:58:42] <Z-module> nicer would be   x |--f--> y    but people don't do that either
[17:58:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:59:07] <tolarz> idk what's wrong with f = x |-> ...
[18:00:40] <[itchyjunk]> oh mix = and |-> ? heh that's a new one for me
[18:01:52] <[itchyjunk]> yeah f on top of that arrow would be great
[18:02:00] <[itchyjunk]> but harder to do
[18:02:29] <[itchyjunk]> well f = is saying a function is equal to
[18:02:36] <quantum> `xrightarrow` is the latex command
[18:02:44] <[itchyjunk]> but it would be equal to another function at best?
[18:02:48] <quantum> for an arrow with something on top
[18:03:41] *** Quits: nejimban (~ben@user/nejimban) (Remote host closed the connection)
[18:03:53] *** Joins: nejimban (~ben@lfbn-idf1-1-1697-248.w90-91.abo.wanadoo.fr)
[18:03:53] *** Quits: nejimban (~ben@lfbn-idf1-1-1697-248.w90-91.abo.wanadoo.fr) (Changing host)
[18:03:53] *** Joins: nejimban (~ben@user/nejimban)
[18:04:24] <quantum> > Jokes aside, treating functions as values is just something that isn't commonly done in most areas of math.
[18:04:24] <quantum> I still think this isn't really true, distributions in statistics, paths in Lagrangian mechanics, integral transforms, these are all treating functions as values to a certain extent
[18:05:03] <[itchyjunk]> did function as value come up in the (f(a))(b) example ?
[18:05:08] <[itchyjunk]> because i don't see it
[18:05:52] <quantum> yeah, `f(a)` is a function, but it's the return value of another function (`f`)
[18:05:54] <tolarz> quantum: Yeah, it isn't true
[18:06:10] <tolarz> also: functional analysis
[18:06:16] <tolarz> dual spaces
[18:06:27] <tolarz> (dual spaces of L^p spaces)
[18:06:54] <tolarz> it's just that mathematicians wanna hide higher-order functions from students for some strange reasons
[18:06:56] <tolarz> idk why
[18:07:13] <tolarz> do they fear students will start getting interested into type theory/CS then and quit math?
[18:08:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:08:13] <quantum> I don't think it's a conspiracy or anything
[18:08:30] <quantum> it's probably just something that mathematicians haven't really thought about
[18:08:30] *** Joins: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl)
[18:08:35] <TheWild> hello
[18:08:54] <quantum> s/mathematicians/most mathematicians
[18:09:16] <TheWild> folks, I have a puzzle (no, I don't know the solution but if you know, I think it would let me better understand one concept).
[18:09:36] <TheWild> let me write it down
[18:09:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:11:44] <tolarz> sequences of functions are also higher-order functions
[18:12:00] <tolarz> e.g. a sequence of real-valued functions might have type N -> (R -> R)
[18:13:55] *** Parts: acresearch (~acresearc@user/acresearch) (WeeChat 2.8)
[18:14:11] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[18:14:18] <TheWild> a lottery. The machine picks 16 out of 255 numbers (set A). However, it doesn't show me which numbers have been chosen. I can choose 32 numbers (set B) and the machine only tells whether all the numbers that were chosen by machine are also the ones I have chosen. In other words, the machine only tells whether A is subset of B.
[18:14:18] <TheWild> For a single machine shuffle, There's no limit of chooses I can take.
[18:14:18] <TheWild> Whats the optimal way to win the game?
[18:14:33] <TheWild> (btw, do you notice the analogy of something?)
[18:14:43] <mh_le> hey tolarz
[18:16:31] <int-e> win?
[18:17:34] <mh_le> hi int-e
[18:20:02] <tolarz> hey mh_le
[18:20:02] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:20:15] *** Joins: flynn (~mcbloch@user/flynn)
[18:23:21] *** Joins: join_subline (~join_subl@135-23-248-194.cpe.pppoe.ca)
[18:23:53] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3474-1442-9ff3-7009.res6.spectrum.com)
[18:24:14] *** Quits: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:24:22] *** Joins: oxum (~oxum@106.203.195.217)
[18:25:04] *** Joins: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl)
[18:25:16] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:25:19] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[18:26:46] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[18:27:56] <cherim> Maybe win means choose a subset which gets a positive answer (and optimal means minimum number of tries in worst case)
[18:27:57] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[18:30:09] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[18:30:21] <TheWild> yeah
[18:30:38] <TheWild> there's no gradient like playing the hot-cold game
[18:30:55] <TheWild> there's only yes or no
[18:31:18] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[18:31:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:31:40] *** Joins: flynn (~mcbloch@user/flynn)
[18:31:42] <TheWild> maybe I'm bit out of sync. Sorry, I got my internet connection knocked off
[18:32:56] <joel135> N -> (R -> R) is less properly higher-order than (R -> R) -> N.
[18:33:55] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:34:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[18:34:22] <quantum> What does "properly higher-order" mean?
[18:34:30] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[18:34:39] <joel135> (I often write `f : x |-> y` too. Read it as "f sends x to y".)
[18:34:49] *** Joins: oxum (~oxum@106.203.195.217)
[18:35:13] <joel135> "properly" in the same rough sense as in "proper subset"
[18:35:26] <joel135> Or "essentially"
[18:35:49] <int-e> There's a notion of rank for this stuff. The rank of basic types is 0, the rank of A -> B is the maximum of 1 plus the rank of A, and the rank of B.
[18:36:01] <int-e> rank(N -> (R -> R)) = 1, rank((R -> R) -> N) = 2.
[18:36:17] <joel135> Returning functions isn't really that higher order. Taking them as arguments is more powerful.
[18:36:17] <quantum> ah ok
[18:36:37] <joel135> Ah good point
[18:36:53] <quantum> So "functions as values" is really a question about rank 2 things or higher?
[18:37:11] <quantum> i.e. functions as arguments?
[18:37:16] <int-e> yeah
[18:37:25] <quantum> ok
[18:37:44] <int-e> if you don't have functions as value, there's nothing you can do with N -> (R -> R) that you can't also do with (N x R) -> R.
[18:38:25] <int-e> (you need to fully apply functions whereever you use them)
[18:38:28] <quantum> true
[18:39:05] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[18:39:41] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[18:39:53] *** Joins: oxum (~oxum@106.203.195.217)
[18:40:15] <fweht> can i somehow show that the terms of the sequence (s_t)_t$ of n-vectors satisfying s_{t+1}=[a.s_t,(s_t)_0,...,(s_t)_{n-2}] is asymptotically dominated by a_0^t(s_0)_0+a_1^(t/2)(s_0)_1+...+a_{n-1}^(t/n)(s_0)_{n-1}?  its just a guess, maybe im wrong
[18:43:09] <joel135> What is a.s_t ?
[18:43:15] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Remote host closed the connection)
[18:43:16] <int-e> fweht: so... looking at just (s_t)_0, that's a standard linear congruence? (what's (s_t)_t when t >= n?)
[18:43:23] <int-e> recurrence, ouch
[18:44:41] <fweht> wait a sec i have to google linear recurrence
[18:44:46] <fweht> a.s_t being dot product
[18:45:19] <fweht> so the first term of s_{t+1} depends linearly on s_t and the other terms just move upwards as t increases so to speak
[18:45:27] *** Quits: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:45:42] <joel135> https://en.m.wikipedia.org/wiki/Companion_matrix
[18:45:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[18:46:03] <fweht> joel135: this is what i mean, thanks!
[18:46:40] *** Joins: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl)
[18:48:38] <int-e> So the question becomes, are the roots of t^n - a_0t^(n-1) - a_1t^(n-2) - ... - a_(n-1) dominated by max(a_0,a_1^(1/2),a_2^(1/3),...,a_(n-1)^(1/n))? The answer is no, you can take a_0 = a_1 = 1. (with the right starting values you'll get the Fibonacci sequence that way.)
[18:50:50] <fweht> int-e: yes, you are right!  thanks!
[18:51:50] <fweht> but isnt the fibonacci sequence also asymptotically similar to a polynomial?
[18:52:58] <cherim> No it isn't
[18:53:10] <fweht> ah, and not to 1^n of course, i see then point!
[18:54:25] <cherim> In my first university year we had a lab where the period of oscillations of a torsion spring had to be measured
[18:54:28] *** Joins: nayfie (~nayfie@2001:8003:cc41:2c01:e1ec:f94f:bbd:f11e)
[18:55:03] <cherim> There was a plate attached with two weights which you could place at different distance from the axis to make the period vary
[18:55:32] <cherim> The result should have been a confirmation of the formula for moment of inertia, I=mr^2
[18:56:03] <cherim> So one of the students plotted the measured I as a function of r and got something increasing and convex
[18:56:31] <cherim> What can it be? Obviously anything increasing, convex, and real life is an exponent
[18:56:48] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[18:56:59] <cherim> So he fitted the Huygens Steiner to e^r
[18:57:26] <cherim> It's hard to describe how shocking this is for a physicist
[18:58:27] <cherim> One can know nothing about moment of inertia, but the ide that you can double effective mass by pushing a weight 10 cm away (repeatedly) is bizarre
[18:58:53] <cherim> I think "Fibonacci grow polynomially" is an exact match in math realm
[19:00:37] <TheWild> well, direct formula for fib(x) is of the form a^x - b^x   (IIRC)
[19:01:15] <riv> i dont understand
[19:02:41] <int-e> The Fibonacci numbers are such a famous example of exponential growth.
[19:04:26] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:04:42] *** Quits: rubiksdream (~a@user/rubiksdream) (Ping timeout: 245 seconds)
[19:05:14] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[19:11:35] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[19:14:32] <quantum> the limiting ratio of consecutive fibonacci numbers is the golden ration `φ`, so I'd imagine it grows proportionally to `φ^n`
[19:15:10] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[19:16:36] <riv> it's kind of weird how it comes out
[19:17:10] <riv> 1/sqrt(5) (phi^n - (1 - phi)^n)
[19:17:26] <riv> somehow ends up an integer
[19:18:35] <riv> hah. x is a fibonacci number iff at least noe of 5x^2+/-4 is a perfect square
[19:20:05] *** Joins: hyiltiz (~quassel@31.220.5.250)
[19:21:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[19:24:15] <joel135> Supppose s is a variable type over which we don't quantify, and let N(0) = s, N(k+1) = (N(k) -> N(k)). While a natural number is a term of type N(2), a term of type N(3) might be construed as a kind of polynomial, and a term of type N(4) might be construed as a kind of 'algebraic operator' which inputs and outputs polynomials.
[19:27:57] <joel135> There are two obvious embeddings N(3) -> N(4) given by p |-> (_ |-> p) and p |-> p, which in terms of polynomials send x^3 + 2x to (f * f * f) + (f + f) or (f . f . f) * (f . f) respectively, but what of (f . f . f) + (f + f) ?
[19:27:59] *** Quits: nayfie (~nayfie@2001:8003:cc41:2c01:e1ec:f94f:bbd:f11e) (Quit: mwah xx)
[19:28:29] *** Joins: Guest16 (~Guest16@103.240.170.209)
[19:28:38] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 252 seconds)
[19:29:33] <joel135> (In the case of the latter embedding one has to replace s by s -> s in the definition of N(4) in order for it to type check ...)
[19:29:52] <joel135> in the definition of N(3) *
[19:31:50] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[19:32:59] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[19:37:49] <joel135> Actually, I think a proper way of framing it is in terms of (forall s. N(3)) -> (forall s. N(4)), where I do quantify over s.
[19:40:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[19:45:44] *** Joins: pi1 (~pi@177.223.162.6)
[19:46:14] *** Joins: oxum (~oxum@106.203.195.217)
[19:50:38] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 252 seconds)
[19:50:38] *** Quits: Nalt|| (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[19:50:55] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[19:51:07] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[20:11:55] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:12:34] *** Joins: byanka (~byanka@185.176.110.253)
[20:14:13] *** Quits: kfv (~kfv@mail.kfv.io) (Quit: ZNC - https://znc.in)
[20:14:27] *** Joins: kfv (~kfv@mail.kfv.io)
[20:15:55] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:17:08] *** Joins: byanka (~byanka@185.176.110.253)
[20:20:25] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:23:48] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:25:26] *** Joins: newpy (~newpy@206.168.231.90)
[20:26:21] <newpy> is there a name for the rule that a mean must be between the low & high of a set
[20:26:34] <newpy> non-inclusive unless low & high are the same?
[20:28:31] *** Joins: Nalt|| (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[20:29:19] *** Quits: Guest16 (~Guest16@103.240.170.209) (Quit: Connection closed)
[20:32:56] <johnkeats6> no it's just sort of obvious
[20:33:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2)
[20:33:37] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Quit: Quit)
[20:37:48] *** Joins: traxex (traxex@user/traxex)
[20:37:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:46:56] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:10fd:e474:6153:b22e) (Ping timeout: 256 seconds)
[20:47:28] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[20:49:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[20:50:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:50:23] *** Joins: flynn (~mcbloch@user/flynn)
[20:50:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:58:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[20:58:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:59:53] <Z-module> You can see it using     mean = (x_1 + ... + x_n)/n    and if you  change every x_i to the min x value x_min, you get x_min back; similarly changing every x_i to the max value x_max.  The first change clearly gives something <= mean, the second something >= mean.
[21:01:39] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:01:50] *** Joins: flynn (~mcbloch@user/flynn)
[21:03:08] <qergle> Do we have to vary anything? mean=(mean + mean + ... + mean)/n. if mean>max{x_i} then (mean + mean + ... + mean)/n > (x1 + x2 + ... + xn)/n
[21:03:40] <pikapika> qergle, hi uwu
[21:03:43] <qergle> in similar fashion on the low end
[21:05:02] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[21:05:38] *** Joins: Europa (~Europa@user/europa)
[21:06:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[21:09:13] *** Quits: rex (~rex@2a02:8071:2280:a220::58e) (Ping timeout: 252 seconds)
[21:13:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:13:59] *** Joins: flynn (~mcbloch@user/flynn)
[21:14:06] *** Joins: stipa_ (~stipa@user/stipa)
[21:14:36] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com)
[21:15:08] *** Quits: stipa (~stipa@user/stipa) (Read error: Connection reset by peer)
[21:15:10] *** stipa_ is now known as stipa
[21:16:14] *** Joins: h4zel (~hazel@user/h4zel)
[21:16:40] <[-_-]> rank of a matrix can not be bigger than no of rows or columns?
[21:17:05] <[-_-]> http://0x0.st/-wsB.jpg
[21:17:13] <[-_-]> my problem is with the word minimum
[21:17:13] *** Joins: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de)
[21:17:24] *** Joins: qbt (~edun@user/edun)
[21:17:25] *** Joins: defjam (~eb0t@90.194.35.110)
[21:17:32] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:17:45] <qergle> why?
[21:18:13] <qergle> if A can't be any bigger than B or C then A≤min(B,C)
[21:18:54] <[-_-]> Let me say it like this, correct me if I am wrong
[21:19:00] <[-_-]> m = no of rows
[21:19:04] <pikapika> how can rank be more than the max or rows or cols
[21:19:07] <[-_-]> n = no of columns
[21:19:26] <pikapika> is rank the number of dependent or the number of independent columns
[21:19:43] <[-_-]> which ever is the smallest of m and n, lets denote it q
[21:19:48] <[-_-]> rank <= q
[21:19:50] <qergle> yes
[21:19:54] <qergle> and q=min(m,n)
[21:19:55] <[-_-]> nice
[21:20:02] <[-_-]> oh.
[21:20:21] <[-_-]> pikapika: dependent?
[21:20:23] <qergle> min(a,b) == "the smallest of a and b"
[21:20:29] <[-_-]> dependent columns
[21:20:43] <[-_-]> My answer is dependent columns
[21:20:48] <[-_-]> no?
[21:20:50] <qergle> no
[21:21:17] <pikapika> Rank seems to be the number of independent columns
[21:21:18] <pikapika> [-_-],
[21:21:31] <pikapika> according to wikipedia
[21:21:45] <[-_-]> oh....sorry
[21:21:52] <[-_-]> thank you pikapika  and qergle
[21:21:56] *** Quits: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 252 seconds)
[21:21:59] <pikapika> Yeah I find it confusing to remember too which of them it is
[21:22:13] <[-_-]> nullity is the dependent columns numebr
[21:22:39] <[-_-]> thank you again
[21:23:03] *** Joins: p0indexter (~alpha@user/p0indexter)
[21:24:46] <qergle> nullity and columns? consider that again.
[21:24:54] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[21:25:05] *** Joins: defjam (~eb0t@90.194.35.110)
[21:25:43] *** Joins: rex (~rex@2a02:8071:2280:a220::58e)
[21:25:58] <qergle> oh nullity not nullspace. gotcha.
[21:26:22] <gas51627> Hi guys
[21:26:27] <gas51627> And girls
[21:29:03] *** Quits: OverCoder (~OverCoder@user/overcoder) (Remote host closed the connection)
[21:31:38] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:31:47] *** Quits: rex (~rex@2a02:8071:2280:a220::58e) (Ping timeout: 245 seconds)
[21:32:03] *** Quits: aman (~aman@user/aman) (Quit: aman)
[21:32:04] *** Joins: rex (~rex@2a02:8071:2280:a220::58e)
[21:34:55] *** Joins: kingjulian (~kingjulia@41.1.86.87)
[21:39:46] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[21:40:46] *** Quits: rex (~rex@2a02:8071:2280:a220::58e) (Ping timeout: 256 seconds)
[21:40:47] *** Joins: defjam (~eb0t@90.194.35.110)
[21:43:34] *** Joins: rex (~rex@2a02:8071:2280:a220::58e)
[21:44:05] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:44:16] *** Joins: flynn (~mcbloch@user/flynn)
[21:45:24] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:46:19] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[21:47:14] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[21:48:55] *** Joins: rex_victor (~rex@2a02:8071:2280:a220::58e)
[21:49:04] *** Quits: rex (~rex@2a02:8071:2280:a220::58e) (Read error: Connection reset by peer)
[21:49:35] <[-_-]> qergle: dimension of null space is nullity, would you like to add something?
[21:50:27] <qergle> yes, i would
[21:50:59] *** Joins: Turingtoast (~Tino@200116b860b6b90055d1d905b853738c.dip.versatel-1u1.de)
[21:51:12] <[-_-]> o.o
[21:51:29] *** defjam is now known as rundown
[21:53:28] *** Quits: Kaylah (~Kaylah@ptr-ekg3bnxs6jq2zocuwyj.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[21:53:35] *** rundown is now known as eblip
[21:54:01] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:54:13] *** Joins: flynn (~mcbloch@user/flynn)
[21:54:42] *** eblip is now known as eb0t
[21:56:07] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[21:56:17] *** eb0t is now known as defjam
[21:56:25] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[21:57:13] *** Joins: defjam (~eb0t@90.194.35.110)
[21:57:31] *** Quits: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346) (Read error: Connection reset by peer)
[21:58:57] *** Parts: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl) ()
[21:59:01] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[22:02:58] *** Joins: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl)
[22:03:28] *** Joins: riv (~river@tilde.team/user/river)
[22:05:27] *** Joins: DrNostril (~DrNostril@37.120.201.212)
[22:05:35] <DrNostril> hiya MATH
[22:07:48] *** Joins: blueberrycrop (~blueberry@209.222.165.82)
[22:09:45] <[-_-]> leading variables are dependent variables?
[22:10:14] *** Quits: rex_victor (~rex@2a02:8071:2280:a220::58e) (Quit: Bye)
[22:11:19] <TheWild> referring to the puzzle I stated, let me explain what I was into
[22:11:26] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:11:44] *** Joins: flynn (~mcbloch@user/flynn)
[22:13:15] *** Quits: Turingtoast (~Tino@200116b860b6b90055d1d905b853738c.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:13:23] <TheWild> Polynomials. How many polynomials of degree k exists that pass through n points? (k < n)
[22:14:18] <specing> one?
[22:15:26] *** Joins: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de)
[22:15:43] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:16:05] *** Joins: defjam (~eb0t@90.194.35.110)
[22:16:20] <TheWild> yes, it's exactly one polynomial. Look at this: From polynomial of degree k passing through n points I calculate additional m points. Now, no matter whatof m points can be lost
[22:16:29] <TheWild> [retry pending]
[22:16:39] *** Quits: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346) (Read error: Connection reset by peer)
[22:16:57] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[22:17:34] <TheWild> yes, it's exactly one polynomial. Look at this: From polynomial of degree k passing through n points I calculate additional m points. Now, when at most m points are dropped, they can be recalculated if their x's are known.
[22:17:46] *** Joins: Guest67 (~Guest67@93-138-153-188.adsl.net.t-com.hr)
[22:18:10] <TheWild> it seems like Reed-Solomon error correction operates on this principle, except using finite field instead of real numbers.
[22:19:39] <int-e> Not sure what that has to do with the "puzzle"... FWIW, that has an easy 2^53.8 lower bound, 255C32/32C16, and a fairly easy 2^59.65 upper bound, -log(255C16)/log(1-32C16/255C16) (a random collection of that many 32-bit subsets of {1..255} has an expected value of uncovered 16-element subsets that is less than 1, so some of these collections must cover them all). The real answer is likely to be...
[22:19:45] <int-e> ...closer to the lower bound.
[22:21:11] *** Quits: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de) (Quit: Bye)
[22:21:57] <TheWild> int-e: yeah, I thought there's some clever way but while ago I realized the number is going to be huge... too big for practical use
[22:22:09] <TheWild> So I have 255 bytes, 223 for data and 32 for error correction (constructing polynomial of degree at most 222). From there it's easy to correct errors when their positions are known, however... how does it supposed to work when positions are not known?
[22:23:01] <int-e> error correction codes don't quite correspond to the puzzle.
[22:23:48] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com) (Quit: Leaving)
[22:24:35] <TheWild> int-e: actually I thought of some way of picking 32 possibly erroneous bytes and checking how well it matches the polynomial constructed from the other 223 bytes.
[22:25:10] <int-e> for error correction codes, you want to partition the code words into disjoint spheres (according to hamming distance), so in a linear code that means all code words except 0 need to further than a given distance away. But it's okay to not cover all the words at a particular distance.
[22:25:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:26:06] *** Joins: flynn (~mcbloch@user/flynn)
[22:26:30] *** Joins: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de)
[22:26:59] <TheWild> are the spheres in purely abstract sense?
[22:26:59] <int-e> (Or maybe concretely: you can just collect all 2^255 subsets to get a valid solution for the puzzle, but if you turn that into code words that would leave no room for error correction.)
[22:28:07] <int-e> Yes, spheres with respect to a metric... S(C,r) = {P | d(C,P) <= r} where d is the metric, C is the center of the sphere, and r the radius.
[22:28:17] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:29:51] <DrNostril> Matrix math.... Why are a*a^T and a^T*a generally not equivalent... and in what scenarios such as the identity matrix are they equivalent?
[22:30:32] *** Joins: avoidr_ (~avoidr@user/avoidr)
[22:30:47] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[22:31:02] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:31:21] <TheWild> dang, I don't have enough experience points to imagine how flipping zeros and ones refer to a sphere
[22:32:09] *** avoidr is now known as Guest7382
[22:32:09] *** Quits: Guest7382 (~avoidr@user/avoidr) (Killed (silver.libera.chat (Nickname regained by services)))
[22:32:09] *** avoidr_ is now known as avoidr
[22:32:22] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:36:45] <qergle> DrNostril: they might not even be the same dimension
[22:39:00] <qergle> what you seek, in terms of a search term is "normal matrix"
[22:40:02] *** Quits: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 252 seconds)
[22:40:28] <TheWild> I hope one day I will understand the topic
[22:40:37] *** Joins: defjam (~eb0t@90.194.35.110)
[22:41:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:41:44] <TheWild> and then I will make a video, explaining the topic in a way I'd like to have explained today.
[22:42:43] <DrNostril> qergle.... yes damn
[22:42:51] <DrNostril> okay nvm i got it...........
[22:43:05] *** Joins: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de)
[22:45:18] <int-e> TheWild: if the center is 000...000, then you can just collect all the words with hamming weight up to r, and that'll be the "sphere" with radius r.
[22:45:34] <qergle> DrNostril now nose
[22:46:27] *** Quits: Guest67 (~Guest67@93-138-153-188.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[22:46:33] <TheWild> int-e: yup, say it's 8 bits with r=1: 00000000, 00000001, 00000010, 00000100, 00001000, 00010000, 00100000, 01000000, 10000000
[22:46:36] <int-e> TheWild: Note that this is the same thing you do for (solid) spheres in R^3: collect all points that are at distance at most the radius from the center.
[22:46:52] <TheWild> 8-bits are 8-dimensional, I suppose
[22:46:53] <int-e> But with a different metric and different set of points.
[22:50:46] <TheWild> int-e: darn, guess what? I think I'll make a program to try to place those spheres in a way that no two spheres share points and look at the solution. Hmm... will it resemble polynomial division in finite field?
[22:51:46] <int-e> TheWild: Probably not, you're probably not even going to get a linear code. It's a rather strong (but useful) restriction.
[22:53:16] <riv> wow
[22:53:43] <riv> if a closed path integral of P(z)/Q(z) dz exists then it is zero or transcendental
[22:54:08] <riv> so int[0,1] dt/(1+t^3) = 1/3(log 2 + pi/sqrt(3)) is transcendental
[22:54:22] <riv> but we can't get e + pi as an integral like this? such a shame
[22:54:46] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:56:26] *** Joins: defjam (~eb0t@90.194.35.110)
[23:00:39] <tusko> Suppose we have a string (e.g. "The quick brown fox is tired of your shit") and we sample the occurrence of characters (a-z) in the string, so sample = {a: 0, b: 1, c: 1, ..., z: 0} and then we convert this to frequencies, so freq = {a: 0.0, c: 0.0, c:  1/33, ... z: 0.0}.
[23:01:12] <tusko> I'm interested in the variance of the frequencies. Of course, $Var(X) = \frac{1}{N}\sum_{i=1}^{N} (x_i - \mu)^2$.
[23:01:19] <int-e> riv: your summary seems to be lacking in detail... int[1,2] (e+pi)/(ln(2)x) dx
[23:01:25] <tusko> Considering that the engrish alphabet has 26 characters, I'm assuming to calculate the variance we would take $\mu = 1/26$ and $N=26$? Does that seem right?
[23:02:07] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[23:03:42] <riv> engrish
[23:03:43] <riv> lol
[23:04:00] <riv> tusko, variance is a property of a random variable
[23:04:04] <tusko> I ran it on an English test string and compared it against the value I calculated from the known relative frequencies of the English language. The values were quite close.
[23:04:08] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[23:04:09] <riv> frequencies are just data pulled from a random variable
[23:04:49] <riv> you said "Of course," and then gave an incorrect formula
[23:05:08] <tusko> pretty sure that's the correct formula
[23:05:59] <tusko> https://en.wikipedia.org/wiki/Variance#Discrete_random_variable
[23:06:30] <int-e> tusko: but your variable isn't real-valued
[23:06:44] <riv> int-e, algebraic coefficients, deg P < deg Q
[23:07:01] <int-e> riv: okay. thanks
[23:07:19] <int-e> riv: and the bounds are algebraic too, I expect
[23:07:25] <tusko> "The variance of a collection of n {\displaystyle n} n equally likely values can be written as $Var(X) = \frac{1}{N}\sum_{i=1}^{N} (x_i - \mu)^2$."
[23:07:30] <tusko> That's from wikipedia
[23:07:32] <int-e> (that is, endpoints of the path)
[23:07:43] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[23:08:32] <int-e> tusko: but your variable isn't real-valued
[23:09:01] <tusko> Does it need to be?
[23:09:09] <int-e> you're treating it as a 26-dimensional vector.
[23:09:13] *** Joins: crankslider (~slidercra@user/slidercrank)
[23:09:16] *** Quits: blueberrycrop (~blueberry@209.222.165.82) (Quit: Client closed)
[23:09:20] <int-e> since you're collecting individual frequencies
[23:09:42] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[23:09:52] <tusko> Right and you're claiming we can't calculate a variance for that. Yet, the exercise I am working through asks for exactly that.
[23:09:59] <int-e> also, the outcomes aren't equally likely
[23:10:35] <tusko> Yes, I also had questions about the outcomes not being equally likely.
[23:10:41] <riv> tusko, you don't know the random variable, you just know data taken from it
[23:11:24] <tusko> Right, look, I was just given a string, told to calculate the relative frequencies, and then calculate the variance.
[23:11:35] <int-e> sharing the actual exercise might be helpful (though it's possible that the conclusion will be that the exercise itself is flawed)
[23:11:40] <qergle> a given string is a "sample"
[23:11:45] <qergle> there's a concept called sample variance
[23:11:50] <tusko> Right
[23:11:57] <riv> tusko, do you get what i mean though?
[23:11:57] <tusko> here I'm happy to share the exercise
[23:12:19] <tusko> riv, yes, but I think there should be a way to get the sample variance
[23:12:22] <tusko> the string is a sample
[23:12:41] <riv> oh "sample variance"
[23:12:52] *** crankslider is now known as slidercrank
[23:14:08] *** Parts: savask (~savask@Powder/Developer/savask) ()
[23:14:43] <qergle> what is the list of your frequencies?
[23:15:12] <tusko> https://imgur.com/a/wAjM3EL
[23:15:41] <tusko> Relative Character Freq. (sample):  {'A': 0.07619, 'B': 0.0131, 'C': 0.04524, 'D': 0.03333, 'E': 0.12143, 'F': 0.01786, 'G': 0.01429, 'H': 0.03214, 'I': 0.08095, 'J': 0.00119, 'K': 0.00595, 'L': 0.05238, 'M': 0.01786, 'N': 0.07381, 'O': 0.0631, 'P': 0.025, 'Q': 0.00238, 'R': 0.0631, 'S': 0.07381, 'T': 0.08214, 'U': 0.04643, 'V': 0.0131, 'W': 0.01548, 'X': 0.00119, 'Y': 0.02738, 'Z': 0.00119}
[23:15:51] <tusko> That's what I came up with for that string.
[23:16:04] <riv> better to use fractions
[23:16:06] <int-e> "population variance of the relative frequencies"... okay that is unambiguous
[23:16:17] <riv> you wil have rounding errors
[23:16:24] <int-e> I think the resulting number is meaningless, but we can compute it.
[23:16:33] <riv> yeah
[23:16:37] <riv> frequentist things
[23:16:38] <qergle> ok, so they're talking that big string to be the "population"
[23:16:39] <tusko> I agree with you all that the exercise doesn't seem satisfactory from a mathematical lens
[23:16:42] <qergle> just plug the numbers
[23:16:51] <riv> add up a bunch of numbers and divide by 7 to get a tick
[23:16:52] <qergle> taking*
[23:17:27] <qergle> did they at least give this in text so you could cut and paste that monstrous thing?
[23:17:34] <tusko> int-e, I think the idea is that the variance would differ for different languages using latin scripts
[23:17:50] <Z-module> riv, any reference on that \int P/Q thing?
[23:17:53] <tusko> qergle, yeah :) but then they won't answer any of my questions about it
[23:18:04] <TheWild> int-e: okay, I got those:
[23:18:04] <TheWild> 00000000 00000111 00011001 00011110 00101010 00101101 00110011 00110100 01001011 01001100 01010010 01010101 01100001 01100110 01111000 01111111
[23:18:20] <tusko> omg are you a hacker?
[23:18:20] <riv> Z-module, its a corrolory of bakers linear forms in logarithms https://core.ac.uk/download/pdf/47111738.pdf
[23:18:29] <Z-module> aha
[23:18:37] <qergle> so they want you to appreciate how the second moment undergoes changes under vigenere
[23:18:51] <qergle> that's fine. do it. report the results to us.
[23:18:59] <TheWild> distance between words is 3 and can correct up to 1 error. Strangely, one bit is not used at all :O (bug in a program?)
[23:20:15] <TheWild> honestly it doesn't look like anything
[23:21:10] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[23:22:15] <TheWild> or maybe by reordering the words and bits in them...
[23:22:15] *** Joins: seninha (~seninha@user/seninha)
[23:23:53] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[23:25:04] <int-e> TheWild: Oh that's just the standard 7,4 hamming code (plus a useless leading 0 bit)
[23:25:10] <TheWild> :D
[23:25:21] <int-e> TheWild: so it's linear.
[23:26:43] *** Quits: kingjulian (~kingjulia@41.1.86.87) (Ping timeout: 252 seconds)
[23:27:42] <qergle> i get a variance for English letter frequency of 0.1% and mean of 3%
[23:28:52] *** Quits: rex (~rex@HSI-KBW-095-208-207-092.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 245 seconds)
[23:29:04] <qergle> used these counts: https://dpaste.org/Cyvi
[23:30:52] *** Joins: rex (~rex@2a02:8071:2280:a220::58e)
[23:32:38] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:33:23] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-0ec9-68f3-b8b9-8bd4.res6.spectrum.com)
[23:33:45] <int-e> the mean should be 1/26 exactly?
[23:37:56] *** Joins: econo (uid147250@user/econo)
[23:38:50] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:39:05] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[23:40:56] <qergle> yeah i truncated instead of rounding
[23:41:44] <qergle> for your ugly plaintext i get mean≈3.846% and var≈0.1008%
[23:42:19] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:43:41] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[23:45:48] <qergle> sorry, my mistake. var(ugly text rel freq)=0.1006183%
[23:46:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:48:21] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[23:48:33] *** Joins: oxum (~oxum@106.203.195.217)
[23:48:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:49:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[23:51:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:51:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:52:59] <Z-module> oh yes riv, I see now, after complete factorization of P and Q using factors (z - something_algebraic), then partial fractions etc.  Neat.
[23:53:07] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:53:40] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[23:54:38] <pikapika> Z-module, hi uwu
[23:55:23] <qergle> tusko: for yz keyed vigenere i get a variance of 0.0005286557
[23:55:40] *** Joins: Guest84 (~Guest84@cpe-173-174-25-173.stx.res.rr.com)
[23:55:51] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:55:55] <Guest84> https://i.imgur.com/SAW3AiQ.png do they mean y is a function of x ?
[23:56:25] <qergle> a roughly 2-fold reduction in variance
[23:56:30] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:57:10] <int-e> Guest84: pretty much; thanks to the given relation, y is related to x.
[23:57:21] <int-e> (implicit function, blah)
[23:57:41] <Guest84> yeah. Okay, was just kinda confused with the instruction.
[23:57:46] <Guest84> thank you
[23:59:00] <tusko> qergle, I just got back to my desk, let me check my results against yours. perhaps we could compare code
[23:59:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
