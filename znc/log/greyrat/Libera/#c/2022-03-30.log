[00:04:23] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.4)
[00:05:07] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[00:05:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[00:06:25] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) ()
[00:07:16] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[00:08:13] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:08:38] *** Quits: angelacrust (~angelacru@223.233.68.194) (Quit: Client closed)
[00:09:02] *** Joins: Guest2 (~Guest2@223.233.68.194)
[00:09:39] <Guest2> Hello, can I replace the `stack = n->next` with `stack = stack->next` ?https://bpa.st/BHYA
[00:09:47] <Guest2> err
[00:09:49] <Guest2> omit the
[00:10:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:11:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:12:07] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[00:15:32] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[00:16:27] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[00:16:27] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[00:16:27] *** Joins: AssKoala (~asskoala@user/asskoala)
[00:16:36] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[00:19:11] <fizzie> Omit the what? But yes, in that context. `n` has just prior been initialized to be equal to `stack`, so `stack = n->next` is the same as `stack = stack->next`.
[00:19:56] <Bou> Guest2: you still need a temporary variable to free the old node after you moved your stack pointer
[00:19:58] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[00:21:09] <fizzie> Yeah, you'll still need `n` as well. That was just about changing that one line, where you can use whichever one you think feels more natural.
[00:21:39] <fizzie> Well, assuming it's the same type. I guess hypothetically that code would still be valid even if it's `void *stack;` pointing at a node, in which case it'd have to be n->next rather than stack->next. But that sounds unlikely.
[00:23:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:25:37] *** Joins: altairz (~altairz@user/altairz)
[00:29:06] *** Quits: altairz (~altairz@user/altairz) (Client Quit)
[00:29:47] *** Joins: zacts (~zacts@user/zacts)
[00:30:05] <Guest2> Ah, understood. Thank you guys!
[00:30:53] *** Joins: Betal (~Betal@user/betal)
[00:31:53] *** Quits: Guest2 (~Guest2@223.233.68.194) (Quit: Client closed)
[00:33:24] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[00:33:51] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:35:24] *** Joins: altairz (~altairz@user/altairz)
[00:36:11] *** Macbethwin is now known as Chargen
[00:36:35] *** Quits: asocialblade (~qsl@user/asocialblade) ()
[00:38:27] *** Quits: ekathva (~ekathva@2001:999:230:5e27:6147:f65d:75d1:f7dd) (Quit: Leaving)
[00:39:40] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[00:40:17] *** Quits: altairz (~altairz@user/altairz) ()
[00:40:36] *** Joins: altairz (~altairz@user/altairz)
[00:42:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:44:44] *** Joins: rgrinberg (~textual@177.248.150.122)
[00:44:54] *** Joins: bliminse (~bliminse@host86-185-253-73.range86-185.btcentralplus.com)
[00:45:05] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:45:26] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:37] *** Quits: altairz (~altairz@user/altairz) ()
[00:47:34] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[00:49:25] *** Quits: freakazoid12345 (~matt@35.136.233.205) (Ping timeout: 240 seconds)
[00:52:03] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:52:13] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[00:53:26] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:54:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[00:56:24] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[00:59:29] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Remote host closed the connection)
[01:00:03] *** Quits: slimbo (~slimbo@user/slimbo) (Quit: slimbo)
[01:00:34] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[01:00:41] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[01:01:48] *** Quits: Jeegh (~brute@176.33.66.185) (Remote host closed the connection)
[01:02:34] *** Joins: cx_ (~cx@user/cx)
[01:03:00] *** Quits: tech_exorcist (13203@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:03:50] *** Joins: slimbo (~slimbo@user/slimbo)
[01:03:51] *** Joins: asocialblade (~qsl@user/asocialblade)
[01:04:22] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[01:05:49] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 240 seconds)
[01:06:32] *** Joins: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f)
[01:07:52] *** Quits: Jong (~Jong@2620:10d:c090:400::5:bdbd) (Quit: Textual IRC Client: www.textualapp.com)
[01:10:39] *** Quits: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f) (Ping timeout: 250 seconds)
[01:10:56] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[01:11:18] <nomagno> Is there some defined way to copy an object into an array of char on a freestanding platform?
[01:11:42] *** Joins: sebn (~sebn@c90-142-43-192.bredband.tele2.se)
[01:12:21] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[01:12:36] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[01:13:12] <pragma-> a while loop and the assignment operator is a good start.
[01:14:01] <twkm> serialize it.  alternatively if you can't stand to do sane things: memcpy(buffer, &object, sizeof object).
[01:14:02] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[01:14:19] <nomagno> twkm: note 'freestanding'
[01:14:45] <nomagno> 'an object of non-unsigned-char type' as formulated by the standard, AKA memcpy without having memcpy around
[01:14:53] <fizzie> `memcpy` is not a hard function to write.
[01:14:53] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[01:15:16] <nomagno> Well I'm asking how to write it without assembly and without UB
[01:15:28] <nomagno> I think I formulated it pretty clearly
[01:15:35] *** Quits: Akuli (~Akuli@85-76-42-117-nat.elisa-mobile.fi) (Quit: Akuli)
[01:15:44] <nomagno> 'Defined' and 'freestanding' say as much
[01:15:51] <pragma-> sizeof, cast to unsigned char *, while, assignment, bam.
[01:16:11] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:16:12] <fizzie> `void *memcpy(void *dest, const void *src, size_t n) { unsigned char *d = dest; const unsigned char *s = src; for (size_t i = 0; i < n; i++) d[i] = s[i]; }` if you want a particularly "regular" version.
[01:16:29] <pragma-> or assign to unsigned char *
[01:16:37] <fizzie> Uh, add a `return dest;` at the end too.
[01:17:45] *** Joins: immibis (~hexchat@62.156.144.218)
[01:17:51] <pragma-> what if I want an irregular version?
[01:17:56] <nomagno> I guess I knew how to write that
[01:18:00] <twkm> shitty anti-serialization ftw!
[01:18:04] <nomagno> I just wasn't sure that was defined
[01:18:28] *** Quits: reedrichards (~f@2607:f598:bbda:220:2ffb:a71c:10b4:af9c) (Remote host closed the connection)
[01:18:36] <pragma-> bonus points for using a trie
[01:18:36] <fizzie> It's defined. You can access the representation of any object type via an lvalue expression of a character type. See C11 6.5p7 (last bullet point) and 6.3.2.3p7 (the "pointer to an object is converted to a pointer to a character type" half).
[01:19:04] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[01:19:16] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 272 seconds)
[01:19:26] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Remote host closed the connection)
[01:20:03] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[01:20:53] *** Quits: asocialblade (~qsl@user/asocialblade) ()
[01:22:51] *** Joins: MrFantastik (~f@2607:f598:bbda:220:3060:781a:20de:246b)
[01:22:51] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:24:39] *** Joins: Windshield (~Windshiel@120.20.132.177)
[01:28:09] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:28:10] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:28:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[01:29:11] *** Quits: parrott (~parrott@2607:fb90:1772:1f51:0:55:6796:c001) (Read error: Connection reset by peer)
[01:29:13] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:29:24] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:29:28] *** Joins: parrott (~parrott@158.59.127.103)
[01:29:56] *** Joins: immibis (~hexchat@62.156.144.218)
[01:30:08] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[01:31:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[01:32:01] *** Quits: cx_ (~cx@user/cx) (Quit: cx_)
[01:33:17] *** Joins: Guest54214 (~Guest5421@42.107.67.157)
[01:34:16] *** Joins: Bandicoot_ (~bandicoot@212.58.114.93)
[01:35:18] *** Joins: kaph (~kaph@net-31-156-214-2.cust.vodafonedsl.it)
[01:36:28] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Ping timeout: 246 seconds)
[01:36:33] *** Joins: starfix (~starfix@gateway/tor-sasl/starfix)
[01:37:28] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[01:37:52] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[01:38:38] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:38:49] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 250 seconds)
[01:39:31] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[01:43:26] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:43:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:44:37] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 240 seconds)
[01:44:49] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4.1)
[01:45:44] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[01:46:59] *** Joins: coaxing (~coaxing@user/coaxing)
[01:48:17] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.5)
[01:52:22] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[01:52:23] <tusko> https://bpa.st/PAHQ
[01:52:27] <tusko> check out my sick codes
[01:52:29] *** Joins: trumae (~trumae@45.170.74.100)
[01:53:18] <greeter> well, i just learned something new. using fclose on a null pointer can definitely cause a segfault :-D
[01:53:27] <greeter> tusko: trying your hand at obfuscation?
[01:53:39] <cehteh> surprise surprise
[01:53:46] <tusko> I do that through my work in cryptography
[01:53:54] <cehteh> lol
[01:54:15] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[01:54:37] <pragma-> smh hardcoded integers
[01:54:54] *** Joins: zacts (~zacts@user/zacts)
[01:55:20] <tusko> right? I should take in some number of Yeets and convert it
[01:55:25] <pragma-> the past tense of yeet is yote
[01:55:31] <tusko> TIL
[01:55:34] <cehteh> tusko: just pipe through cpp gives nice code :D
[01:57:05] <pragma-> tusko: make a yeet for 0 and for 1. you already have a yeet for +. so just add 1 + 1 + 1 + 1 until you get 420, np.
[01:57:35] <cehteh> implement peano numbers with defines to encode constants
[01:57:36] <pragma-> now you can support any integer value!
[01:58:36] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-24dd-3f78-e746-d1a4.fixed6.kpn.net)
[02:01:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[02:01:49] <cehteh> .. and encode strings as arrays of char integer literals!
[02:02:23] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[02:03:09] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:13] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-24dd-3f78-e746-d1a4.fixed6.kpn.net) (Ping timeout: 256 seconds)
[02:05:10] *** Joins: hashfunc32 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[02:06:05] *** Quits: fspax (~fspax@46.148.141.211) (Quit: Leaving)
[02:07:24] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 272 seconds)
[02:08:46] *** Joins: seninha (~seninha@user/seninha)
[02:10:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Remote host closed the connection)
[02:10:44] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[02:11:20] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:12:22] *** Quits: ddakx (~ddakx@user/ddakx) (Quit: ddakx)
[02:13:29] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:15:07] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[02:15:21] *** Quits: MrFantastik (~f@2607:f598:bbda:220:3060:781a:20de:246b) (Remote host closed the connection)
[02:15:43] *** Joins: MrFantastik (~f@176.108.141.162)
[02:15:50] *** Quits: bj33 (~bj33@user/bj33) (Quit: Leaving)
[02:16:19] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[02:18:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:18:50] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:19:12] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.11.threembb.co.uk)
[02:19:38] *** Joins: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de)
[02:19:38] *** Quits: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de) (Changing host)
[02:19:38] *** Joins: asocialblade (~qsl@user/asocialblade)
[02:24:06] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[02:24:11] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[02:24:32] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[02:25:43] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.101) (Ping timeout: 260 seconds)
[02:25:59] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 260 seconds)
[02:26:31] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[02:27:14] <tusko> that's too big brain for me
[02:27:25] <tusko> I'm just a simpleton
[02:27:46] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[02:30:05] *** Quits: Guest54214 (~Guest5421@42.107.67.157) (Quit: Client closed)
[02:30:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:35:03] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 260 seconds)
[02:35:29] *** Quits: alch (~alch@151.38.164.236) (Read error: Connection reset by peer)
[02:37:10] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[02:38:05] *** Joins: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[02:38:35] *** Quits: kaph (~kaph@net-31-156-214-2.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[02:40:08] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 252 seconds)
[02:40:42] *** Joins: alch (~alch@151.34.149.214)
[02:40:47] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Read error: Connection reset by peer)
[02:41:32] *** Joins: karakedi (~eAC53C340@user/karakedi)
[02:42:12] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:43:09] *** Joins: soapsudsxx (~soapsudsx@209.221.40.140)
[02:49:55] *** Quits: parrott (~parrott@158.59.127.103) (Ping timeout: 256 seconds)
[02:50:01] *** Joins: parrott (~parrott@2607:fb90:1c3d:1381:0:51:e8e9:4e01)
[02:51:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:52:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:53:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Read error: Connection reset by peer)
[02:53:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:54:01] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[02:54:31] *** Quits: trumae (~trumae@45.170.74.100) (Ping timeout: 246 seconds)
[02:56:43] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 256 seconds)
[02:58:39] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[03:03:47] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 260 seconds)
[03:03:56] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:04:02] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[03:04:25] *** Quits: hashfunc32 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 256 seconds)
[03:04:42] *** mendel_munkis is now known as munkis
[03:06:01] *** Quits: parrott (~parrott@2607:fb90:1c3d:1381:0:51:e8e9:4e01) (Read error: Connection reset by peer)
[03:06:18] *** Joins: parrott (~parrott@158-59-127-103.net.arlingtonva.us)
[03:09:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:09:36] *** Joins: Posterdati (~posterdat@user/Posterdati)
[03:14:28] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 246 seconds)
[03:16:45] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[03:18:43] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:22:11] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 250 seconds)
[03:22:28] *** Quits: inlight (~n0ise@user/inlight) (Quit: WeeChat 3.3)
[03:22:39] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[03:23:28] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[03:25:20] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[03:25:22] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[03:26:07] *** Quits: starfix (~starfix@gateway/tor-sasl/starfix) (Quit: leaving)
[03:28:00] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[03:33:57] *** Joins: pizdets_ (~pizdets@183.182.115.2)
[03:34:05] *** Quits: pizdets (~pizdets@183.182.111.169) (Ping timeout: 265 seconds)
[03:34:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[03:35:07] *** Quits: adip (~adip@dev80.neoplus.adsl.tpnet.pl) (Ping timeout: 246 seconds)
[03:35:43] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:35:56] *** Quits: bick (~kotaman@94.46.203.147) (Quit: Lost terminal)
[03:37:52] *** Quits: rgrinberg (~textual@177.248.150.122) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:38:26] *** Joins: zacts (~zacts@user/zacts)
[03:38:36] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 240 seconds)
[03:38:52] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:38:53] *** Joins: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl)
[03:42:31] *** Quits: mzxtuelkl__ (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 260 seconds)
[03:45:56] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:46:07] *** Joins: csrf (~csrf@user/csrf)
[03:47:02] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:47:18] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[03:47:35] *** lukedashjr is now known as luke-jr
[03:47:45] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[03:48:12] *** Quits: WickedSmoke (~karl@cpe-76-182-46-7.nc.res.rr.com) (Quit: Konversation terminated!)
[03:48:15] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:48:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.5)
[03:50:00] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[03:50:36] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[03:52:00] *** Joins: reset (~reset@user/reset)
[03:52:13] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Client Quit)
[03:53:38] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Quit: Konversation terminated!)
[03:55:04] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[03:56:09] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[03:57:15] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[03:57:17] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[03:58:17] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[04:02:29] *** Joins: Satin (uid193953@user/Seten)
[04:02:31] *** Joins: drbeco (~beco@user/beco)
[04:04:24] *** Joins: malina (~malina@user/malina)
[04:05:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[04:05:22] *** Quits: msk (~Thunderbi@89.205.124.39) (Quit: msk)
[04:05:57] *** Joins: msk (~Thunderbi@89.205.124.39)
[04:06:06] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:07:18] *** Quits: Arthuria (~Arthuria@user/arthuria) (Read error: Connection reset by peer)
[04:08:19] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[04:10:29] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:10:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:11:35] *** Quits: HardWall (~NeckLek@89.137.113.39) (Read error: Connection reset by peer)
[04:12:39] *** Quits: parrott (~parrott@158-59-127-103.net.arlingtonva.us) (Read error: Connection reset by peer)
[04:12:50] *** Joins: parrott (~parrott@158-59-127-103.net.arlingtonva.us)
[04:13:32] *** Joins: HardWall (~NeckLek@89.137.113.39)
[04:15:20] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[04:16:57] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 256 seconds)
[04:17:11] *** Quits: parrott (~parrott@158-59-127-103.net.arlingtonva.us) (Ping timeout: 256 seconds)
[04:17:33] *** Joins: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01)
[04:17:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:18:23] *** Joins: Dsee4 (~DSee@87.101.93.132)
[04:18:43] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[04:19:33] *** Joins: Wulf (~Wulf@user/wulf)
[04:22:43] *** Quits: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01) (Read error: Connection reset by peer)
[04:23:00] *** Joins: parrott (~parrott@158-59-127-103.net.arlingtonva.us)
[04:23:20] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[04:23:21] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[04:24:24] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[04:24:32] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[04:25:10] *** Quits: AmR (~AmREiSa@102.44.191.208) (Quit: Konversation terminated!)
[04:36:58] *** Quits: parrott (~parrott@158-59-127-103.net.arlingtonva.us) (Ping timeout: 260 seconds)
[04:37:20] *** Joins: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01)
[04:41:33] *** Quits: Dsee4 (~DSee@87.101.93.132) (Quit: Quit)
[04:44:43] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:44:53] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[04:45:07] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 260 seconds)
[04:45:34] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[04:46:23] *** Quits: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01) (Read error: Connection reset by peer)
[04:46:40] *** Joins: parrott (~parrott@158.59.127.103)
[04:47:24] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 240 seconds)
[04:47:38] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[04:48:41] *** Quits: joev (~joev@user/joev) (Ping timeout: 245 seconds)
[04:49:33] *** Joins: joev (~joev@user/joev)
[04:50:43] *** Quits: parrott (~parrott@158.59.127.103) (Ping timeout: 246 seconds)
[04:52:04] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Ping timeout: 260 seconds)
[04:53:31] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 246 seconds)
[04:54:21] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[04:56:04] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[04:56:13] *** Joins: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01)
[04:58:56] *** Joins: coaxing (~coaxing@user/coaxing)
[05:01:12] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[05:01:34] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[05:02:12] *** Joins: joev (~joev@user/joev)
[05:02:20] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[05:04:35] *** Joins: Vrganj (~Vrganj@93-138-31-30.adsl.net.t-com.hr)
[05:05:32] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 260 seconds)
[05:06:19] *** Joins: xiongxin (~Thunderbi@117.136.39.215)
[05:06:31] *** Quits: Vrganj_ (~Vrganj@93-138-53-108.adsl.net.t-com.hr) (Ping timeout: 260 seconds)
[05:08:12] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[05:08:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[05:09:05] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 256 seconds)
[05:09:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:16:55] *** Joins: rgrinberg (~textual@177.248.146.216)
[05:19:02] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.11.threembb.co.uk) (Remote host closed the connection)
[05:19:02] *** Joins: mad_enz (~mad_enz@2605:8d80:6a1:dfde:99cc:819b:ca5c:a037)
[05:21:25] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:15c6:4ddf:5787:908a:a748)
[05:23:10] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:24:16] *** Quits: xiongxin (~Thunderbi@117.136.39.215) (Read error: Connection reset by peer)
[05:24:16] *** xiongxin1 is now known as xiongxin
[05:25:01] *** Quits: rgrinberg (~textual@177.248.146.216) (Ping timeout: 246 seconds)
[05:30:42] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[05:31:27] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:31:47] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:1ff2:e03a:2456:5ccc:3d7b)
[05:35:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:15c6:4ddf:5787:908a:a748) (Ping timeout: 256 seconds)
[05:36:08] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:1ff2:e03a:2456:5ccc:3d7b) (Ping timeout: 252 seconds)
[05:37:14] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:2469:bba4:9099:ef70:f70f)
[05:37:26] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 260 seconds)
[05:38:11] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[05:38:18] *** Joins: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555)
[05:38:49] *** Joins: rgrinberg (~textual@177.248.146.78)
[05:44:00] *** Joins: zer0x (~zer0x@1.55.255.231)
[05:44:10] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[05:50:28] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:50:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:50:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:50:48] *** Joins: wroathe (~wroathe@user/wroathe)
[05:51:13] *** Joins: pert (~pert@fsf/member/pert)
[05:54:33] *** Quits: trumae (~trumae@2804:18:5047:d523:1:0:fa92:d555) (Read error: Connection reset by peer)
[05:54:53] *** Quits: pert (~pert@fsf/member/pert) (Client Quit)
[05:54:57] *** Joins: Torr (~Torr@user/torr)
[05:55:07] *** Quits: mad_enz (~mad_enz@2605:8d80:6a1:dfde:99cc:819b:ca5c:a037) (Ping timeout: 260 seconds)
[05:58:37] *** Quits: Chargen (~chargen@8.21.8.253) (Quit: Leaving)
[05:58:40] *** Joins: trumae (~trumae@45.170.74.100)
[06:03:14] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:07:18] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 260 seconds)
[06:07:22] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[06:08:04] *** Quits: BCMM (~BCMM@user/bcmm) (Ping timeout: 246 seconds)
[06:08:57] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[06:10:38] *** Joins: hamburger (~hamburger@user/hamburger)
[06:12:15] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[06:16:06] *** Joins: hanzo (uid532183@user/hanzo)
[06:16:37] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[06:17:17] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:2469:bba4:9099:ef70:f70f) (Ping timeout: 260 seconds)
[06:18:27] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 260 seconds)
[06:20:29] *** Joins: Posterdati (~posterdat@user/Posterdati)
[06:21:03] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 256 seconds)
[06:23:33] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[06:23:54] *** Joins: Inline (~Inline@p200300cd470a540051f7a3750a30b01e.dip0.t-ipconnect.de)
[06:26:19] *** Quits: Inline__ (~Inline@p200300cd470f690069ffd8a9e8710708.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:26:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:26:54] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 260 seconds)
[06:28:06] *** Joins: Torr (~Torr@user/torr)
[06:30:10] *** Joins: hamburger_ (~hamburger@user/hamburger)
[06:30:52] *** Joins: Administrator__ (~hamburger@user/hamburger)
[06:32:57] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 256 seconds)
[06:33:37] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 246 seconds)
[06:34:02] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 272 seconds)
[06:34:12] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 260 seconds)
[06:34:22] *** Administrator__ is now known as hamburger
[06:34:59] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 252 seconds)
[06:36:38] *** Joins: hashfuncd36 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[06:38:17] *** Quits: alch (~alch@151.34.149.214) (Ping timeout: 256 seconds)
[06:38:46] *** Joins: xiongxin (~Thunderbi@117.136.39.221)
[06:39:08] *** Joins: Posterdati (~posterdat@user/Posterdati)
[06:40:04] *** Joins: alch (~alch@151.68.170.212)
[06:42:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:42:28] *** Joins: Guest802 (~Guest80@186.120.135.90)
[06:42:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:42:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:42:47] *** Joins: wroathe (~wroathe@user/wroathe)
[06:47:10] *** Quits: Guest802 (~Guest80@186.120.135.90) (Client Quit)
[06:47:14] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[06:53:14] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:47] *** Quits: trumae (~trumae@45.170.74.100) (Ping timeout: 260 seconds)
[06:57:39] *** Quits: cehteh (~ct@git.pipapo.org) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:00:25] *** Joins: cehteh (~ct@git.pipapo.org)
[07:03:10] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 272 seconds)
[07:04:55] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:05:26] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:06:00] *** Quits: hashfuncd36 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Remote host closed the connection)
[07:06:18] *** Quits: rgrinberg (~textual@177.248.146.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:06:19] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:a39:e6f5:9d58:2466:b9f0)
[07:07:00] *** Joins: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[07:07:23] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[07:07:59] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 252 seconds)
[07:09:16] *** Quits: xiongxin (~Thunderbi@117.136.39.221) (Ping timeout: 260 seconds)
[07:09:16] *** xiongxin1 is now known as xiongxin
[07:10:10] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:441:afa9:b5e8:ac51:4870)
[07:11:07] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:11:30] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:12:43] *** Quits: hamburger_ (~hamburger@user/hamburger) (Quit: will be back busy now)
[07:13:53] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:a39:e6f5:9d58:2466:b9f0) (Ping timeout: 260 seconds)
[07:14:35] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:441:afa9:b5e8:ac51:4870) (Ping timeout: 252 seconds)
[07:15:15] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:20f2:ac8a:be5c:57a6:5a94)
[07:16:04] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:16:16] *** Quits: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 260 seconds)
[07:17:01] *** Quits: mahmutov (~mahmutov@5.176.38.47) (Ping timeout: 246 seconds)
[07:18:16] *** Quits: meandrain (~meandrain@2a02:2f0e:f708:1200:ace9:8e52:80af:8a8c) (Remote host closed the connection)
[07:18:40] *** Joins: Jong (~Jong@2600:380:741d:dc2b:18c7:613c:9f51:cab0)
[07:19:16] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[07:20:52] *** Joins: raym (~raym@user/raym)
[07:20:58] *** Joins: moog_ (~moog@98.97.82.178)
[07:22:19] *** Quits: moog (~moog@98.97.82.178) (Ping timeout: 260 seconds)
[07:29:44] *** Joins: cdman (~dcm@27.2.218.248)
[07:29:44] *** Quits: cdman (~dcm@27.2.218.248) (Changing host)
[07:29:44] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[07:29:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:31:30] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[07:34:50] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[07:36:01] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Changing host)
[07:36:01] *** Joins: ldericher (~LDer@user/ldericher)
[07:37:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:37:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:37:59] *** Joins: wroathe (~wroathe@user/wroathe)
[07:38:27] *** Joins: fe23 (~fe23@2409:8a34:466:6010:6852:77a4:1918:9cb6)
[07:39:03] *** Joins: xiongxin1 (~Thunderbi@117.136.39.219)
[07:42:39] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:20f2:ac8a:be5c:57a6:5a94) (Ping timeout: 256 seconds)
[07:42:40] *** xiongxin1 is now known as xiongxin
[07:43:29] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-24dd-3f78-e746-d1a4.fixed6.kpn.net)
[07:43:42] *** Joins: hamburger (~hamburger@user/hamburger)
[07:43:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:47:55] *** Joins: xiongxin1 (~Thunderbi@117.136.40.173)
[07:48:17] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-24dd-3f78-e746-d1a4.fixed6.kpn.net) (Ping timeout: 260 seconds)
[07:48:52] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[07:51:43] *** Quits: xiongxin (~Thunderbi@117.136.39.219) (Ping timeout: 260 seconds)
[07:51:58] *** Joins: CCCG2022 (~dell@120.245.30.14)
[07:52:24] *** Parts: CCCG2022 (~dell@120.245.30.14) ()
[07:52:34] *** Quits: xiongxin1 (~Thunderbi@117.136.40.173) (Ping timeout: 272 seconds)
[07:52:39] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:3065:2e43:1e0a:ae80:c245)
[07:53:07] *** Joins: xiongxin1 (~Thunderbi@117.136.40.178)
[07:53:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:54:18] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:55:07] *** Quits: hamburger_ (~hamburger@user/hamburger) (Remote host closed the connection)
[07:55:33] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:57:03] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:3065:2e43:1e0a:ae80:c245) (Ping timeout: 260 seconds)
[07:57:49] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 240 seconds)
[07:58:32] *** Joins: Administrator__ (~hamburger@user/hamburger)
[07:59:52] *** Parts: Administrator__ (~hamburger@user/hamburger) ()
[08:00:56] *** Joins: jkotra (~jkotra@122.176.152.121)
[08:02:04] *** Quits: xiongxin1 (~Thunderbi@117.136.40.178) (Ping timeout: 272 seconds)
[08:02:27] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[08:03:33] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[08:05:19] *** Quits: Jong (~Jong@2600:380:741d:dc2b:18c7:613c:9f51:cab0) (Ping timeout: 256 seconds)
[08:05:27] *** Joins: Jong2 (~Jong@2600:380:746b:82ae:3:557a:b4e4:6755)
[08:08:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:09:23] *** Joins: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5)
[08:10:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:17:02] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:18:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:20:59] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:23:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[08:24:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:26:50] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[08:26:59] *** Joins: seninha (~seninha@user/seninha)
[08:27:09] *** Joins: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[08:30:23] *** Joins: nate1 (~nate@98.45.167.61)
[08:31:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[08:31:20] *** Joins: rgrinberg (~textual@177.248.158.178)
[08:32:51] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:34:26] <hashfunc11d> is there a compiler flag or tool that can output all symbols that are used in a function?
[08:34:43] *** Quits: nate1 (~nate@98.45.167.61) (Ping timeout: 246 seconds)
[08:37:25] <hashfunc11d> for example, using said compiler flag or tool on the code ... void fn(a, b) {return a+b;} ... would output ... fn a b
[08:37:31] <hashfunc11d> or something like that
[08:37:52] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 260 seconds)
[08:38:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:41:58] *** Joins: zacts (~zacts@user/zacts)
[08:42:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:43:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:45:25] *** Quits: soapsudsxx (~soapsudsx@209.221.40.140) (Ping timeout: 240 seconds)
[08:45:53] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:46:17] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:46:39] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[08:54:37] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[08:55:18] *** Joins: vicfred (~vicfred@user/vicfred)
[08:56:17] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[08:57:39] <nitrix> LLVM can. clang -Xclang -ast-dump -fsyntax-only foo.c
[08:58:00] <nitrix> You dump the AST and then can whatever processing you intend to do with it.
[08:58:00] *** Joins: Ox000 (~jy@74.215.12.46)
[08:58:29] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[08:58:30] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[09:01:05] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 256 seconds)
[09:01:29] *** Quits: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 250 seconds)
[09:03:05] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7c79:3bd8:4c9e:2739)
[09:04:28] *** Quits: Ox000 (~jy@74.215.12.46) (Remote host closed the connection)
[09:06:47] *** Quits: Jong2 (~Jong@2600:380:746b:82ae:3:557a:b4e4:6755) (Ping timeout: 252 seconds)
[09:06:55] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[09:08:00] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[09:09:25] *** Joins: fowl (~fowlmouth@user/fowl)
[09:10:11] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[09:10:34] *** Joins: novns (~novns@user/novns)
[09:15:08] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[09:18:19] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:18:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:20:07] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 256 seconds)
[09:20:08] *** Joins: SR-71 (~user@user/SR-71)
[09:21:10] *** Joins: zer0x (~zer0x@1.55.255.231)
[09:26:24] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[09:33:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:39:19] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[09:40:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:40:47] *** icyphox is now known as icy
[09:43:55] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 256 seconds)
[09:46:42] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[09:46:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:47:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:50:14] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[09:51:15] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:52:36] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:53:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:03:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:08:24] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[10:10:00] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[10:10:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[10:14:47] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[10:15:00] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Changing host)
[10:15:00] *** Joins: Murray7501 (~Murray@user/Murray7501)
[10:16:14] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[10:18:29] *** Joins: hashfunc1f63 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[10:22:53] *** Joins: Guest57 (~Guest57@2601:5c0:c280:7090:4533:6252:8e32:243)
[10:23:13] *** Quits: Guest57 (~Guest57@2601:5c0:c280:7090:4533:6252:8e32:243) (Client Quit)
[10:23:44] *** Quits: hashfunc1f63 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Remote host closed the connection)
[10:28:57] *** Quits: Murray7501 (~Murray@user/Murray7501) (Quit: leaving)
[10:30:55] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 246 seconds)
[10:32:43] *** Joins: Murray7501 (~Murray@user/Murray7501)
[10:36:18] *** Quits: alch (~alch@151.68.170.212) (Read error: Connection reset by peer)
[10:37:52] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[10:38:06] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[10:38:38] *** Quits: moog_ (~moog@98.97.82.178) (Ping timeout: 260 seconds)
[10:39:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:39:42] *** Joins: Klinda (~superleag@user/klinda)
[10:40:27] *** Joins: alch (~alch@151.34.175.232)
[10:46:19] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:46:29] *** Joins: ekathva (~ekathva@2001:999:230:5e27:83ce:bbb7:84b1:29a0)
[10:46:43] *** Quits: rgrinberg (~textual@177.248.158.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:59] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[10:49:31] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2)
[10:49:53] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:52:14] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:53:03] *** Joins: nyjets (~zz@2001:8003:1780:7100:e4ec:6ec9:372b:a6f8)
[10:54:22] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 246 seconds)
[11:05:35] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 252 seconds)
[11:06:01] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[11:08:46] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:9dda:4bff:cdb5:90b8) (Ping timeout: 260 seconds)
[11:08:54] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 272 seconds)
[11:11:26] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:13:51] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:14:07] *** Joins: MarderIII (~MarderIII@2a02:a45a:72f1:1:6427:619c:e11c:28aa)
[11:14:08] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:14:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:14:50] *** Quits: Bandicoot_ (~bandicoot@212.58.114.93) (Quit: Leaving)
[11:16:22] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:16:51] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:17:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:17:28] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 246 seconds)
[11:21:32] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:25:45] *** Quits: MarderIII (~MarderIII@2a02:a45a:72f1:1:6427:619c:e11c:28aa) (Quit: Leaving)
[11:28:23] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[11:32:01] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 245 seconds)
[11:33:09] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[11:33:49] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[11:34:04] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:35:18] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 252 seconds)
[11:35:52] *** Joins: vysn (~vysn@user/vysn)
[11:36:30] *** Joins: euandreh (~euandreh@191.181.59.160)
[11:37:01] *** Joins: rcoote (~rcoote@2a02:908:693:85a0:276:45a:a69:828c)
[11:37:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:38:05] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:38:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:40:35] *** Joins: aradesh (~aradesh@user/aradesh)
[11:41:18] <markand> I was seeking for an assert that check for a multiply overflow (wrapping a exit-on-oom calloc version) but the only versions I find are: check = a * b; if (check / b != a) but that couldn't fit in a oneline assert()
[11:41:24] <markand> any proposal?
[11:42:46] <dave0> markand: https://termbin.com/o3uy
[11:43:10] <dave0> change it to int and INT_MAX and cut out all the thread crap
[11:44:29] <dave0> oh as an assert i dunno
[11:45:12] <markand> :P
[11:45:58] <dave0> maybe stick the complicated tests into assert
[11:46:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[11:46:40] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:46:46] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[11:47:03] *** Joins: Furai (~Furai@furai.pl)
[11:48:44] <markand> https://github.com/openbsd/src/blob/master/lib/libc/stdlib/reallocarray.c#L27
[11:48:47] <markand> wut
[11:50:05] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:51:49] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[11:53:10] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:57:30] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:01:19] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[12:02:04] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[12:03:22] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[12:05:23] <NRK> markand: seems like an optimization to skip doing the division
[12:06:16] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[12:06:40] <NRK> if both the operands are < sqrt(SIZE_MAX+1) then it can't overflow.
[12:07:13] *** Joins: john99 (~john99@134.238.107.163)
[12:07:50] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:08:41] <john99> Hi, i am tring to use _Generic with multiple aprameters but i dont ctach why this fail https://godbolt.org/z/cf5557q51
[12:09:06] <john99> someone can check why is the error?
[12:09:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[12:09:20] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[12:10:12] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[12:11:01] *** Joins: alicef (~none@gentoo/developer/alicef)
[12:11:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[12:12:56] *** Joins: tusko (~yeurt@user/tusko)
[12:14:19] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 250 seconds)
[12:15:11] <Amun-Ra> john99: type compat. must be satisfied for all possible generic associations in compile time
[12:16:13] <john99> but i have _Generic(X, float: _Generic(Y.- float: )(x,y)
[12:16:22] <john99> and i pass 2 floats
[12:16:26] <Amun-Ra> it doesn't matter
[12:16:47] <Amun-Ra> john99: check this thread for example https://stackoverflow.com/questions/40096584/c11-generic-usage
[12:17:36] <john99> ammmmmmm
[12:17:39] <john99> ty
[12:18:01] *** Quits: nyjets (~zz@2001:8003:1780:7100:e4ec:6ec9:372b:a6f8) (Read error: Connection reset by peer)
[12:18:08] *** Joins: freakazoid12345 (~matt@35.136.233.205)
[12:18:28] *** Joins: kts (~kts@103.73.237.175)
[12:19:03] <NRK> Amun-Ra: I think it's because you're not catching the case where _Y is a double
[12:19:28] <NRK> Amun-Ra: https://godbolt.org/z/14MG6Ge76 this seems to compile fine
[12:20:09] <john99> isEqual(1.1f, 1.1f); but i am not passing double
[12:20:14] <Amun-Ra> john99: https://godbolt.org/z/q3a5aacMG
[12:20:19] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Ping timeout: 256 seconds)
[12:20:21] <Amun-Ra> NRK: I'm not catching anything ;>
[12:20:49] <NRK> oh, sorry i pinged the wrong person
[12:20:59] <john99> the point i want ensure that i am not using isEqual with double, float i want enforce ever float float or double double
[12:21:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:22:14] <john99> and if posible at compile time
[12:22:21] <Amun-Ra> john99: so… https://godbolt.org/z/e75d9o6Pv ;)
[12:22:42] *** Quits: sokan (~sokan@2a02:587:9e1b:1b00:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[12:23:55] <NRK> Amun-Ra: i think he wants compile time error, not a dummy false return.
[12:24:01] <john99> yes
[12:24:13] <Amun-Ra> hmm
[12:24:37] <NRK> idk how to do it at compile time, but you can force a link time error via declaring a fucntion that doesn't exist
[12:25:02] <NRK> .oO( hmm, maybe _Static_assert ? )
[12:25:50] <john99> https://godbolt.org/z/38jhaoMh9
[12:26:04] <john99> static assert doesnt compile :/
[12:26:23] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[12:26:50] *** Joins: kts (~kts@103.73.237.175)
[12:27:12] <john99> https://godbolt.org/z/PzvKoGExs
[12:27:14] *** Quits: kts (~kts@103.73.237.175) (Client Quit)
[12:27:38] <john99> or may be i am doing something wrong
[12:27:39] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[12:27:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:27:58] *** Joins: kts (~kts@103.73.237.175)
[12:28:18] <NRK> nah, i don't think it'd work
[12:29:56] <NRK> this is the best I can come up with: https://godbolt.org/z/vrWz86KP6
[12:29:58] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:30:22] <NRK> there might be a way to get what you want, but i'm not too good with C11 shenanigans so i'm personally not aware of it.
[12:30:32] <john99> NRK, yes, and luckly is enought
[12:30:40] *** Joins: adip (~adip@dev80.neoplus.adsl.tpnet.pl)
[12:30:49] <john99> na, with force the compile error in any way is enught
[12:30:53] <john99> enought
[12:31:15] <john99> ty
[12:32:22] <Amun-Ra> _Static_assert won't work, not an expression
[12:32:50] <Amun-Ra> link error is a way to do it I guess
[12:33:20] <john99>  undefined reference to `dont_use_isEqual_with_diferent_types'
[12:33:25] <john99> perfect XD
[12:33:54] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:35:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[12:35:18] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Ping timeout: 260 seconds)
[12:35:46] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[12:36:23] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 260 seconds)
[12:36:27] <Amun-Ra> ;)
[12:36:56] *** Joins: CCCG2022 (~dell@120.245.30.14)
[12:38:49] <Amun-Ra> if only there was a way to force function argument being compile time only in C
[12:39:41] <john99> they was trying to add constexpr to c23 or 26 i think
[12:40:04] <john99> 26, to 23 is later now
[12:42:34] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[12:43:38] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[12:45:10] *** Quits: freakazoid12345 (~matt@35.136.233.205) (Ping timeout: 272 seconds)
[12:45:13] *** Joins: KinLux (~workspace@tmo-096-175.customers.d1-online.com)
[12:49:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:49:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:50:50] *** Joins: cart_ (~cart@2a01:4c8:1c81:ee06:27a6:4302:2bd5:5060)
[12:50:53] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:52:50] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:53:30] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[12:53:53] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[12:54:07] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Ping timeout: 260 seconds)
[12:54:10] *** Joins: zer0x (~zer0x@1.55.255.231)
[12:55:15] *** Quits: rcoote (~rcoote@2a02:908:693:85a0:276:45a:a69:828c) (Quit: Konversation terminated!)
[12:57:57] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 256 seconds)
[12:59:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[13:03:38] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[13:05:42] *** Joins: tusko (~yeurt@user/tusko)
[13:07:24] <NRK> how to make a variadic macro run a function/macro for each of it's va args ?
[13:09:02] <john99> ? a loop for?
[13:09:12] <john99> am no
[13:09:27] <john99> ammm, i usually copy P99 for do that
[13:10:02] <john99> basically you do a (manually written) recursive expansion of the arguments
[13:10:26] <NRK> aww man, that's painful...
[13:11:07] <john99> well, if you know that you aregoing to ahve a lot of argument do a script for generate that
[13:11:12] <NRK> also, surrounding a macro with diagnostic pragmas didn't work :c
[13:12:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:12:59] <john99> "macors are awfull" is a deserved statement XD
[13:13:38] *** Parts: CCCG2022 (~dell@120.245.30.14) ()
[13:13:39] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[13:15:05] *** Joins: tafa (~tafa@user/tafa)
[13:16:08] *** Quits: no-n (sid524992@smol/hors) ()
[13:19:03] <NRK> i guess i'll have to go with the manual expansion route..
[13:20:44] *** Quits: zer0x (~zer0x@1.55.255.231) (Remote host closed the connection)
[13:21:24] *** Joins: zer0x (~zer0x@1.55.255.231)
[13:22:14] *** Quits: zer0x (~zer0x@1.55.255.231) (Remote host closed the connection)
[13:22:32] *** Joins: zer0x (~zer0x@1.55.255.231)
[13:24:16] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:3108:281:eecd:3097:6246)
[13:29:28] *** Quits: john99 (~john99@134.238.107.163) (Ping timeout: 250 seconds)
[13:30:11] *** Quits: atulu (~atulum]@2001:470:69fc:105::d50c) (Quit: You have been kicked for being idle)
[13:31:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.5)
[13:32:16] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com)
[13:34:06] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0dd9-0564-5ee4-7b35.res6.spectrum.com) (Ping timeout: 245 seconds)
[13:34:26] *** Joins: jellie (~luv_panda@user/jellie)
[13:45:40] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[13:47:17] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:47:37] *** Quits: fe23 (~fe23@2409:8a34:466:6010:6852:77a4:1918:9cb6) (Ping timeout: 260 seconds)
[13:48:12] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Ping timeout: 260 seconds)
[13:49:32] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:51:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:52:47] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com)
[13:54:17] *** Joins: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:54:39] <smallville7123_> how do i do new line conversion back and forth from \n and \r\n
[13:55:16] <smallville7123_> in a stream of characters, eg from stdin or some write(char c) function
[13:56:53] <dave0> \n to \r\n isn't too hard    int c; while(c = getchar(), c != EOF) { if(c == '\n') { putchar('\r'); } putchar(c); }
[13:57:43] <dave0> going \r\n to \n you need to buffer a character, can't do it off the top of my head
[13:57:53] <smallville7123_> what if it is already \r\n ?
[13:58:22] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[13:58:46] <smallville7123_> as my current approach for detecting '\r\n' is to use an index and a string "\r\n"
[13:58:51] <caze> smallville7123_: Your implementation already does it for you.
[13:59:10] <caze> (maybe)
[14:00:42] <smallville7123_> specifically  if (NL[index] == c) { if (index == strlen(NL) - 1) { index = 0; return true; } index++; } else { index = 0; } return false
[14:01:09] <smallville7123_> that is how i currently detect "\r\n"
[14:02:46] <smallville7123_> but im not sure how to transform the detected input to my target input
[14:03:07] <caze> smallville7123_: ,c11 7.21.2p2
[14:03:09] <candide> smallville7123_: http://www.iso-9899.info/n1570.html#7.21.2p2 [Streams] A text stream is an ordered sequence of characters composed into lines, each line consisting of zero or more characters plus a terminating new-line character. Whether the last line requires a terminating new-line character is implementation-defined. Characters may have to be added, altered, or deleted on input and output to conform to... <truncated; https://0x0.st/oqVK.txt>
[14:04:18] <smallville7123_> hmm would i simply test for "\r\n" and if that fails test for "\n" and insert a \r if the test for "\n" returns true ?
[14:05:53] <dave0> smallville7123_: i'm not sure what you're trying to do? usually you know if the file is windows with \r\n or linux with \n and you have 2 different programs to convert back and forth
[14:05:56] <caze> smallville7123_: Why are you doing this?
[14:06:13] <smallville7123_> manual new line detection
[14:06:32] *** Joins: VoidSync (~sync@user/voidsync)
[14:06:43] <NRK> any macro wizzard wants to help me get rid of this warning? https://godbolt.org/z/bMevdYqzf
[14:07:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[14:07:38] *** Quits: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[14:07:44] <dave0> smallville7123_: you could just delete all `\r`'s
[14:07:59] <dave0> or ignore them and just count `\n`'s
[14:08:46] <dave0> tr -d '\r'   is a poor mans windows-to-linux converter which i use sometimes
[14:09:21] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[14:09:48] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[14:09:55] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[14:10:29] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:11:33] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[14:12:14] <Amun-Ra> dave0: there's dos2unix
[14:13:29] <dave0> Amun-Ra: cool.. smallville7123_ ^
[14:15:24] *** Joins: Thedarkb (~Thedarkb@92.40.196.0.threembb.co.uk)
[14:15:34] <NRK> ah, i think i figured it out
[14:16:10] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Remote host closed the connection)
[14:16:49] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[14:18:35] *** Quits: kts (~kts@103.73.237.175) (Ping timeout: 260 seconds)
[14:19:21] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[14:19:37] <NRK> now the only problem is silencing the pedantic warnings when using `-std=c89` and `-std=c99`
[14:21:25] *** Joins: john99 (~john99@102.246.103.34.bc.googleusercontent.com)
[14:21:25] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[14:22:16] *** Joins: bj33 (~bj33@user/bj33)
[14:23:00] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Remote host closed the connection)
[14:23:15] *** Joins: seninha (~seninha@user/seninha)
[14:23:19] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[14:23:24] <john99> http://www.greenend.org.uk/rjk/tech/inline.html "...and in exactly one source file:" about inline in C99 this is correct? i only need add exter foo in one file?
[14:23:33] <NRK> well, i'll just have to disable those warning flags globally i guess /shrug
[14:23:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[14:23:45] <caze> smallville7123_: https://ideone.com/0P55Hj
[14:23:48] <NRK> was hoping it would be possible to disable just for the macros
[14:24:36] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:3108:281:eecd:3097:6246) (Ping timeout: 240 seconds)
[14:24:41] <john99> i disconected... NKR with pragma you can enable and disbale code bi chunks
[14:25:01] <john99> warnings in code for *
[14:25:05] <john99> NRK
[14:27:52] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[14:28:37] <NRK> john99: doesn't work for macros
[14:28:45] <john99> am
[14:28:51] <john99> fail, sorry
[14:29:43] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:36:47] *** Quits: alch (~alch@151.34.175.232) (Read error: Connection reset by peer)
[14:37:12] *** Joins: fe23 (~fe23@2409:8a34:466:6010:55f1:8ac3:5e09:3ee8)
[14:40:46] *** Joins: alch (~alch@151.34.202.114)
[14:43:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:47:07] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 246 seconds)
[14:48:12] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[14:51:14] *** Quits: bj33 (~bj33@user/bj33) (Remote host closed the connection)
[14:51:34] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:57:07] *** Joins: wyfnt (~wyfnt1232@103.51.58.113)
[14:57:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:57:38] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:58:48] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[14:59:54] <NRK> https://godbolt.org/z/GEds8cYMq this is what i got so far. only problem is `-std=c89` with `DEBUG` disabled. you get warning about C89 not supporting va macros.
[15:00:24] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:01:43] *** Quits: cart_ (~cart@2a01:4c8:1c81:ee06:27a6:4302:2bd5:5060) (Ping timeout: 260 seconds)
[15:02:06] <NRK> just noticed how crap that generated asm is..
[15:02:36] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[15:04:02] <NRK> ahh, the pragma push/pop works when trying to disable va macros warning. nice!
[15:04:16] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.76) (Ping timeout: 246 seconds)
[15:09:28] <john99> why C89 you cannot use something more modern?
[15:09:37] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:09:43] <john99> or a syslog/journal library, becouse seem like you are implementing that
[15:09:51] <john99> NRK
[15:10:02] <NRK> no, im just making printf debugging easier.
[15:10:28] <john99> printf debugging :/
[15:10:43] <john99> well, if fit for you
[15:11:08] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[15:11:10] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[15:11:28] *** Quits: wyfnt (~wyfnt1232@103.51.58.113) (Ping timeout: 272 seconds)
[15:12:02] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:13:10] *** Joins: seninha (~seninha@user/seninha)
[15:15:05] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:15:48] *** Joins: cart_ (~cart@2a01:4c8:1c81:ee06:995e:4c8:efa2:8bad)
[15:18:15] *** Quits: VoidSync (~sync@user/voidsync) ()
[15:20:39] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 260 seconds)
[15:22:16] *** Joins: BCMM (~BCMM@user/bcmm)
[15:22:26] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[15:22:29] <fizzie> john99: Yes, for that model. The one source file you pick will be the one responsible for generating the single external definition, which is used for all those calls where the implementation decided not to inline the function after all.
[15:25:23] <fizzie> It should also be sufficient (if odd-looking) to just do `extern int max(int a, int b);` declaration without the function body in that one translation unit you want to generate the external definition in, if you don't want to use an `INLINE` macro as suggested on that page.
[15:25:32] *** Joins: crankslider (~slidercra@user/slidercrank)
[15:25:41] *** crankslider is now known as slidercrank
[15:26:47] <john99> fizzie and for C11?
[15:27:27] <fizzie> Oh, I guess what I was describing was that model #3 instead.
[15:27:37] <fizzie> (Which, fair enough, is C99 and later.)
[15:28:09] *** Joins: unknow (~i.am@user/marlboro)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:00] *** Joins: csrf (~csrf@user/csrf)
[15:31:55] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:7c79:3bd8:4c9e:2739) (Ping timeout: 250 seconds)
[15:34:01] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 246 seconds)
[15:34:39] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[15:35:05] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:35:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[15:38:18] *** Quits: tech_exorcist (13203@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:38:35] *** Joins: Klinda (~superleag@user/klinda)
[15:38:38] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[15:41:32] *** Parts: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01) (Leaving)
[15:41:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:42:50] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[15:43:04] *** Joins: malina (~malina@user/malina)
[15:45:48] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:4df:bfcf:ac49:3089:d900)
[15:47:07] <john99> i have to found some flag to ensure the function is inlined
[15:47:29] <john99> i hate the "may be yes maybe no" so usual in C
[15:47:52] *** Quits: Khoyo (~khoyo@user/khoyo) (Quit: ZNC 1.8.2 - https://znc.in)
[15:48:26] *** Joins: Khoyo (~khoyo@user/khoyo)
[15:49:40] <NRK> attribute((always_inline))
[15:49:46] <NRK> or something like that
[15:50:12] <NRK> https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html#Common-Function-Attributes
[15:50:19] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:4df:bfcf:ac49:3089:d900) (Ping timeout: 250 seconds)
[15:50:27] <markand> john99, there is nothing like that in standard though
[15:51:30] <john99> markand ty for the link
[15:53:02] <john99> one of the little things I don't like about this language is the "may if may not", if I told you to inline, do it or fail...
[15:53:03] <john99> But it seems that every thing that is added is optional, like the attributes [[]]
[15:53:37] <NRK> C99 has `inline` keyword, but it's just a suggestion
[15:54:41] <john99> yes, as i said, all is optional
[15:55:14] <john99> VLA  are optionals and a lot of things, compatibility can be a real nightmare, lucky now i dont have to support MSVC
[15:55:47] <john99> and then i can use fancy things like generic
[15:57:56] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:134a:aa8c:6c91:412d:d4e6)
[15:58:22] <smallville7123_> how would greedy matching be implemented
[15:59:16] <john99> NRK, thanks for the link
[15:59:51] *** Quits: joev (~joev@user/joev) (Ping timeout: 260 seconds)
[16:00:14] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 272 seconds)
[16:00:31] *** Joins: joev (~joev@user/joev)
[16:00:39] *** Quits: yggdrasil (~yggdrasil@67-0-77-12.albq.qwest.net) (Read error: Connection reset by peer)
[16:03:10] <fizzie> It's quite unusual to be in a situation where something _absolutely must_ be inlined.
[16:03:41] <fizzie> Usually it has performance implications, not correctness ones, and the standard doesn't aspire to say pretty much anything about all about performance.
[16:04:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:04:13] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[16:04:35] <john99> is not so much about "absolutely must" is about i ahve a keyword (a feature maybe?) that said "inline" but may be yes or may be no
[16:05:38] <john99> i can accept the "the compiler inline when posible at level 2" but if i want inline, inline or tell me why not
[16:05:52] *** Joins: yggdrasil (~yggdrasil@67-0-78-132.albq.qwest.net)
[16:06:31] <john99> the "silently i will do waht i want", like promoting to int rules make the language unecesarily complex and tricky
[16:06:45] <smallville7123_> inlining is usually a delicate tradeoff between call overhead/whatever and code bloat
[16:06:54] <fizzie> It's an optimization hint, just like `register`, `restrict` or the `T arr[static N]` function parameter declaration. If it bothers you so much it's not absolute, just don't use it at all.
[16:07:59] <john99> i suppose i didnt explain good what bother me, well, doesnt matter.
[16:09:16] <smallville7123_> basically if EVERY SINGLE FUNCTION was INLINED it would PROBABLY be faster (depending on many factors), but it would be extremely bloated
[16:09:34] <smallville7123_> as there would be duplicate code literally everywhere
[16:10:41] <smallville7123_> void foo(int * a) { *a += 6; }  void x() { foo(6); foo(7); }
[16:11:08] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[16:11:57] <cehteh> note that bloated unrolled code can be slower when it trashes caches
[16:12:12] <smallville7123_> void x() (int i; i = 6; foo(&i); i = 7; foo(&i); }    *
[16:12:28] <smallville7123_> without inlining `foo` this would compile probably very similar to how it is descriped, with a single `*a += 6` and a jump to that location for inputs 6 and 7
[16:12:34] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Remote host closed the connection)
[16:12:53] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[16:12:57] <smallville7123_> with inlining `foo` it would be equvilant to as if the following where done
[16:13:25] <john99> is not about bloated or not , is about , let me choose, if i want do something silly okay, and if the compiler is enought smart for said "this is silly" show a warning or a error, but no "i am inlining or not silently, trust me"
[16:13:34] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 246 seconds)
[16:13:39] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[16:13:51] <smallville7123_> void x() (int i; i = 6; int * tmp_a =&i; *tmp_a += 6; i = 7; tmp_a = &i; *tmp += 6; }
[16:14:45] <smallville7123_> tho in this case it is a barely noticable bloat since it is probs only a few assembly instructions being inlined
[16:15:01] *** Quits: cart_ (~cart@2a01:4c8:1c81:ee06:995e:4c8:efa2:8bad) (Ping timeout: 250 seconds)
[16:15:16] <smallville7123_> but with much larger and complex function the code bloat can multiply depending on how much inlining is done
[16:15:55] <smallville7123_> its basically a copy+substitute+paste every time you call an inlined function
[16:17:07] <john99> yes, i know, its not that waht bother me, anyway, lets change topic becouse really doesnt matter i am not going to have the standart  i like, i will live with the standart i have
[16:17:14] <smallville7123_> which could also cause the compiler to be unable to optimize since the code is not referenced
[16:17:37] <smallville7123_> tho it may still be able to optimize
[16:17:37] <john99> at least i can use __attribute__((always_inline)) that fail if cannot be inlined
[16:18:48] *** Joins: coaxing (~coaxing@user/coaxing)
[16:19:02] <smallville7123_> if we have     int foo(int i) { return i++);        and we always pass foo an arg of 8     the compiler could optimize this away to simply an integer of 9 regardless of if foo is inlined or not
[16:19:18] *** Quits: coaxing (~coaxing@user/coaxing) (Client Quit)
[16:19:48] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (Read error: Connection reset by peer)
[16:19:58] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[16:20:10] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[16:20:20] <smallville7123_> and how it choses to store this 9 is implementation defined
[16:20:25] <fizzie> No it couldn't, because foo(8) would return 8.
[16:20:27] *** Quits: KinLux (~workspace@tmo-096-175.customers.d1-online.com) (Ping timeout: 260 seconds)
[16:20:41] <smallville7123_> fizzie: ++i; then :)
[16:21:22] <smallville7123_> or juse   i + 1;
[16:21:51] *** Joins: coaxing (~coaxing@user/coaxing)
[16:22:31] <smallville7123_> anway, it could store this 9 as a single object the same way it stores string literals, and simply copy this object when needed
[16:22:51] <smallville7123_> or it could store this 9 as a seperate object for each occurence of foo
[16:23:02] *** Joins: KinLux (~workspace@tmo-096-175.customers.d1-online.com)
[16:24:18] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[16:25:29] <smallville7123_> it could further optimize by storing a single object of 9 if the count of foo is greater than some threshold, say 1 MB worth of 9 objects could be obtimized to a single 9 object that gets copied when needed
[16:25:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:26:05] <smallville7123_> saving 1 MB of disk space in the compiled binary/libary
[16:26:55] <smallville7123_> tho i dont know if it actually does this but it is reasonable to assume it does to some degree
[16:27:08] <sham1> Why would it need to store the 9 like a string literal
[16:27:48] <smallville7123_> because int's take up space the same way as any other data
[16:27:53] <sham1> It'd most likely just get constant propagated forwards
[16:28:31] <smallville7123_> eg int64_t takes up 64 bytes of data
[16:28:41] <sham1> No it doesn't
[16:29:15] *** Joins: constxd (~brad@142.134.78.128)
[16:29:18] <NRK> bits
[16:30:10] <NRK> int64_t taking up 64 bytes would be insane. that's an entire cache line
[16:30:22] <smallville7123_> oof
[16:30:37] <smallville7123_> 8 bytes?
[16:30:41] <sham1> Yes
[16:30:44] <sham1> Well
[16:30:48] <sham1> Depends
[16:30:53] <NRK> and it's not guranteed to take up any space, it might get optimized out or constant folded.
[16:31:05] <sham1> Also that
[16:31:32] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[16:31:40] <edk> well an int64_t variable will take up space if you try to observe it taking up space
[16:31:40] *** Joins: zer0x (~zer0x@1.55.255.231)
[16:31:41] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[16:31:55] <NRK> 🧙‍♂️
[16:31:58] <sham1> The abstract machine acts as if it gets allocated but if the computation is done at compile time, it doesn't need to be allocated at runtime
[16:33:45] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:35:00] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[16:36:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[16:39:05] *** Quits: KinLux (~workspace@tmo-096-175.customers.d1-online.com) (Read error: Connection reset by peer)
[16:40:09] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[16:40:11] *** Joins: KinLux (~workspace@tmo-097-71.customers.d1-online.com)
[16:41:41] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:43:26] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:43:45] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:44:20] *** Joins: cart_ (~cart@213.205.197.214)
[16:46:06] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[16:46:23] *** Joins: cdman (~dcm@27.2.218.248)
[16:46:23] *** Quits: cdman (~dcm@27.2.218.248) (Changing host)
[16:46:23] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[16:46:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:134a:aa8c:6c91:412d:d4e6) (Ping timeout: 260 seconds)
[16:48:44] *** Joins: hiroshi_ (~freedom@151.35.46.107)
[16:51:46] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Remote host closed the connection)
[16:52:03] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[16:53:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:54:43] *** Joins: pulse (~pulse@user/pulse)
[16:55:50] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[16:57:27] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:2fae:e7bf:4539:f0df:f823)
[16:58:33] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:59:22] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:59:56] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com) (Remote host closed the connection)
[17:00:32] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com)
[17:00:42] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 260 seconds)
[17:02:34] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[17:04:29] *** MrMobius_ is now known as MrMobius
[17:04:40] *** Joins: Atque (~Atque@user/atque)
[17:09:27] *** Quits: cart_ (~cart@213.205.197.214) (Ping timeout: 260 seconds)
[17:09:59] *** Joins: cart_ (~cart@2a01:4c8:1c81:ee06:abd8:6c7e:f185:3331)
[17:10:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[17:13:04] *** Quits: john99 (~john99@102.246.103.34.bc.googleusercontent.com) (Ping timeout: 250 seconds)
[17:13:14] *** Joins: john99 (~john99@213.246.103.34.bc.googleusercontent.com)
[17:13:25] *** Quits: unknow (~i.am@user/marlboro) (Ping timeout: 240 seconds)
[17:13:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:13:36] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:14:03] *** Joins: unknow (~i.am@user/marlboro)
[17:15:18] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:2fae:e7bf:4539:f0df:f823) (Ping timeout: 260 seconds)
[17:15:18] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[17:15:48] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:17:34] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Read error: Connection reset by peer)
[17:17:45] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[17:19:06] *** Joins: neo1 (~neo@103.144.161.8)
[17:19:14] *** Joins: himitsu (~himitsu@user/himitsu)
[17:19:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[17:19:43] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[17:19:56] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:3c5e:61bb:c9f7:455a)
[17:20:10] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com) (Read error: Connection reset by peer)
[17:20:51] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com)
[17:20:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:20:57] *** Quits: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:21:38] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[17:22:27] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 260 seconds)
[17:24:38] *** Joins: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:25:33] <smallville7123_> how do i implement greedy matching?
[17:26:42] *** Joins: reset (~reset@user/reset)
[17:28:06] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Remote host closed the connection)
[17:28:29] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[17:28:31] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:170d:f1be:16dc:459f:3aa5)
[17:29:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:26] *** xiongxin1 is now known as xiongxin
[17:30:46] <clarity> First define it
[17:31:18] <clarity> Knowing exactly what it must do is step 0 to implementing it..
[17:31:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[17:32:44] <smallville7123_> and i have a problem ;-;
[17:34:00] <smallville7123_> what do i do if i need to match ABCAT and CAT and ABCATO and ATO and BCA
[17:34:26] <smallville7123_> and say, we get passed ABCATI
[17:34:47] <smallville7123_> or ABXCAT
[17:36:55] *** Quits: joev (~joev@user/joev) (Ping timeout: 260 seconds)
[17:37:50] *** Joins: joev (~joev@user/joev)
[17:39:48] *** Quits: cart_ (~cart@2a01:4c8:1c81:ee06:abd8:6c7e:f185:3331) (Ping timeout: 260 seconds)
[17:42:52] <Pentode> smallville7123_: strstr() maybe?
[17:43:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:43:26] <Pentode> smallville7123_: you want a condition on whether the user enters either all or some part of a string?
[17:48:28] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:50:30] *** Joins: tradar (~tradar@user/tradar)
[17:56:38] <NRK> match the longest string first?
[17:56:53] <NRK> and then keep trying the smaller ones?
[17:57:54] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[18:02:42] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[18:04:16] *** Quits: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5) (Quit: Leaving)
[18:05:25] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 240 seconds)
[18:07:49] <smallville7123_> part
[18:10:46] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.206)
[18:14:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:14:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:14:35] *** Joins: wroathe (~wroathe@user/wroathe)
[18:16:17] *** Quits: hiroshi_ (~freedom@151.35.46.107) (Quit: hiroshi_)
[18:16:24] *** Joins: meator (~meator@user/meator)
[18:16:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:16:40] *** Quits: tech_exorcist (13203@user/tech-exorcist/x-0447479) (Quit: See you later)
[18:17:00] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:17:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:19:55] *** Joins: seninha (~seninha@user/seninha)
[18:23:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[18:24:24] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.5)
[18:25:42] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[18:33:02] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:33:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:34:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[18:37:01] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:38:07] *** Quits: alch (~alch@151.34.202.114) (Ping timeout: 246 seconds)
[18:40:02] *** Joins: alch (~alch@151.68.167.138)
[18:44:00] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:47:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:48:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:51:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:51:25] *** Parts: himitsu (~himitsu@user/himitsu) ()
[18:56:18] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.206) (Ping timeout: 272 seconds)
[18:56:50] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:170d:f1be:16dc:459f:3aa5) (Ping timeout: 260 seconds)
[18:57:18] *** Joins: seninha (~seninha@user/seninha)
[18:58:38] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:00:45] <useretail> i have compiled shared library and the source code is lost. how can i get prototypes now?
[19:01:39] <vdamewood> useretail: Reverse engineer it and guess.
[19:02:02] <useretail> any other solutions?
[19:02:26] <useretail> maybe tools?
[19:02:54] <useretail> i just need access to exported functions
[19:02:58] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[19:04:17] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[19:05:36] *** Quits: Windshield (~Windshiel@120.20.132.177) (Remote host closed the connection)
[19:06:11] *** Joins: Guest681 (~Guest68@2804:7f4:c1a5:823:5139:4c08:f211:a7a8)
[19:06:35] *** Joins: Atque (~Atque@user/atque)
[19:08:37] *** Joins: Optimus (~risto@87.227.227.147)
[19:08:55] *** Joins: kts (~kts@103.73.237.175)
[19:09:10] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:12:14] <oldlaptop> You could meditate on the output of objdump. (Assuming this is a unixy context. Surely there are similar tools under windows, et c.)
[19:13:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:13:42] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:14:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:14:25] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:15:25] <vdamewood> useretail: No, there are no tools because on most systems, the machine code is too ambiguous for automated tools.
[19:15:59] <vdamewood> oldlaptop: I think objdump works on Windows with PE files, tools. But yeah, there has to be something.
[19:16:17] *** Joins: xbkkd (~F0@user/xbkkd)
[19:16:21] <vdamewood> s/tools/as well/
[19:16:31] <oldlaptop> The machine code may be ambiguous, but formats like ELF do have some metadata in them.
[19:16:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[19:16:37] <oldlaptop> *Names* of the symbols, at least.
[19:16:59] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[19:16:59] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[19:17:12] <Guest681> Hello everyone! I'm not sure if this is the right channel to ask this, but I need help: currently I'm a Node.js/React developer wishing to migrate my career to be a C developer. Any advices about how is the market actually? A friend told me that C is out-of-date, but I know that much of the core components the developers use today are developed in
[19:17:12] <Guest681> C/C++, like Node.js, V8, operating systems, etc. Am I mistaken or is it possible to be a professional C developer nowadays?
[19:17:56] <pragma-> What made you choose to stumble down the path of "migrating to be a C developer"?
[19:19:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:19:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:19:53] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[19:19:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:22:48] <Guest681> pragma-: many facts, the most significant one is I don't like web programming anymore, I wish I could switch to operating systems-level programming because I like it a lot
[19:23:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[19:24:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:24:28] <pragma-> What's the reason for not liking web programming more? If it's because the different browsers behave inconsistently and weirdly all the time, you'll soon find that's also a major problem in C.
[19:24:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[19:24:50] <vdamewood> Guest681: One thing to keep in mind is that C and C++ are two different languages.
[19:25:18] * pragma- stares again at BOOL_WIDTH.
[19:25:44] <useretail> Guest681, the only similarity between C and JavaScript is syntax (derived from the C) but thats where the similarity ends
[19:26:19] <pragma-> Javascript has some very strange idiosyncrasies in its language, but so does C.
[19:26:47] <pragma-> At least TypeScript is a thing.
[19:27:01] *** Lord_of_Life_ is now known as Lord_of_Life
[19:27:26] *** Joins: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru)
[19:27:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:27:59] *** Joins: eldritch (~eldritch@user/eldritch)
[19:28:09] <vdamewood> new idea. signed _Bool
[19:28:16] <pragma-> Er, not liking web programming *any longer*, not "more".
[19:29:04] *** Joins: glider (~glider@user/glider)
[19:29:52] <useretail> besides, if you worked with React for a prolonged time, you thinking ability may be irreversibly reduced already
[19:30:06] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:32:09] <vdamewood> Anyway, as far as the idea the C is out of date, as you pointed out, many things such as operating systems are written in C, as well as the implementations of other languages.
[19:32:17] <vdamewood> So, no. C isn't out of date.
[19:35:45] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:36:02] *** Joins: plant_tree_flowe (~iwalkarou@38.124.151.184)
[19:36:07] <plant_tree_flowe> hello
[19:36:22] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:22] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:23] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:23] *** ChanServ sets mode: +o candide
[19:36:23] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:24] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:24] <plant_tree_flowe> Ayy, ayy, I walk around like dat nigga, fin'er on the trigger
[19:36:24] *** plant_tree_flowe was kicked by candide (Stop repeating yourself)
[19:36:25] *** candide sets mode: +b *!~iwalkarou@38.*
[19:37:17] <pragma-> I guess one of the hidden blessings of having severe brain damage is that you're too damaged to notice that you have brain damage.
[19:37:33] *** candide sets mode: -b *!~iwalkarou@38.*
[19:37:40] <vdamewood> pragma-: Alas, everyone else does notice.
[19:41:31] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 250 seconds)
[19:41:54] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.7.threembb.co.uk)
[19:42:47] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[19:43:34] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[19:43:46] *** Joins: coaxing (~coaxing@user/coaxing)
[19:43:54] <pragma-> Running head first into a wall a few times should help with that.
[19:45:01] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:45:42] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 272 seconds)
[19:46:23] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:46:54] <vdamewood> Guest681: Not sure what to tell you from here. We might be able to give you some pointers for starting out.
[19:48:07] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.7.threembb.co.uk) (Ping timeout: 246 seconds)
[19:48:35] <clarity> Guest681: C lacks hype but it remains one of the most widely used language
[19:48:51] <clarity> It might be old, it might not be popular for new projects, but it's far from obsolete
[19:49:04] <clarity> And yes there are lots of people with jobs that involve C
[19:49:24] <clarity> It might be hard to find these jobs from between all the web trash but they are there.
[19:51:02] <Bou> vdamewood: "pointers", really?
[19:51:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[19:52:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:52:29] <pragma-> ,recall vdamewood pointers
[19:52:29] <candide> [5m34s ago] <v﻿damewood> Guest681: Not sure what to tell you from here. We might be able to give you some pointers for starting out.
[19:52:40] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 246 seconds)
[19:52:48] *** Joins: meandrain (~meandrain@2a02:2f0e:f708:1200:d147:cca6:dc0e:8b73)
[19:52:59] <Guest681> Well I develop some things in C in my spare time because I love it, but always involving some sort of operating systems development, I'm writing a package manager for posix operating systems, some time ago I wrote a version of Slackware's makepkg in C just for practice (and to don't lose my thinking abilities as useretail pointed :)
[19:53:33] <vdamewood> Bou: Well, C doesn't have references, so I can't give any of those.
[19:53:52] <pragma-> ,h&s
[19:53:52] <candide> h&s is "C - A Reference Manual" by Harbison & Steele; a reference for C on par with K&R - http://www.amazon.com/Reference-Manual-Samuel-P-Harbison/dp/013089592X
[19:54:38] <pragma-> I was thumbing through my copy of H&S a few weeks ago. I was surprised to notice it has exercises. I didn't recall it having exercises at the end of chapters.
[19:54:41] <Guest681> It would be great if I could make it my living but I don't know which companies have jobs similar to what I do in my spare time
[19:54:46] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[19:55:03] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.5.threembb.co.uk)
[19:55:15] <vdamewood> Package managers for POSIX? Not very many companies do that.
[19:56:02] <vdamewood> Most of the C stuff I see is kernel and driver stuff. C++ has game development, and some desktop GUI apps.
[19:56:20] <NRK> turning a hobby into a job is probably the bestest way to kill any passion for that hobby.
[19:56:55] *** Quits: findingnemoeggfr (~findingne@h31-8-176-81.dyn.bashtel.ru) (Ping timeout: 260 seconds)
[19:57:00] <vdamewood> Guest681: If you really want to have fun, try to write a package for Node in C.
[19:57:30] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Ping timeout: 260 seconds)
[19:58:58] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[19:59:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:59:21] <Guest681> Yes driver and kernel development seems good to be my job, I'm studying computer science but I think I should switch to Electric Engineering for that shouldn't I?
[20:00:06] <Guest681> vdamewood hahah good idea
[20:00:12] <vdamewood> Not really. You might want to add some EE classes or maybe a minor, but CS is fine for driver development. EE is more for building the device, not writing an interface for it.
[20:00:16] *** Joins: moog (~moog@98.97.81.134)
[20:01:18] <vdamewood> I guess EE could also help for referse engineering an interface when there's no documentation for it.
[20:01:24] <vdamewood> reverse*
[20:01:45] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:02:05] <Guest681> hum, interesting
[20:02:17] <Guest681> but where can I find jobs for kernel and driver development?
[20:02:29] <vdamewood> Redmond and Cupertino
[20:02:30] *** Joins: moog_ (~moog@98.97.84.204)
[20:02:39] <Guest681> well, first of all I need to know how to to it :)
[20:02:58] <vdamewood> Some people get paid to maintain the Linux kernel, too.
[20:03:10] <vdamewood> But not directly by the Linux kernel maintainers.
[20:03:37] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[20:03:57] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[20:05:19] *** Quits: moog (~moog@98.97.81.134) (Ping timeout: 260 seconds)
[20:05:37] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 246 seconds)
[20:06:04] <Guest681> Well I gotta go now, thank you very much for your help!
[20:06:45] *** Quits: Guest681 (~Guest68@2804:7f4:c1a5:823:5139:4c08:f211:a7a8) (Quit: Client closed)
[20:07:07] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:08:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[20:08:32] *** Joins: blackbird47 (~blackbird@223.233.79.158)
[20:08:35] *** Quits: moog_ (~moog@98.97.84.204) (Ping timeout: 260 seconds)
[20:09:06] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[20:12:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:12:19] <blackbird47> hello, why is the output blank for "reversed_string"? https://bpa.st/S5YQ
[20:13:47] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:13:47] <Bou> eh, I don't see you pushing anything on the stack anywhere?
[20:14:05] <blackbird47> ah rip
[20:14:09] <blackbird47> lmao
[20:14:17] <blackbird47> I forgot I removed some code
[20:15:13] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[20:15:28] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[20:15:28] <Bou> heh. I've had situations where I renamed a file, editing the new one but still compiling the old one... "why aren't my changes working?!"
[20:15:33] <NRK> without even looking at the code, i think it's because you reversed the null terminator as well
[20:16:34] <Bou> eventually I typed "asdfasdfasdf" into it, and it still compiled fine... and I thought my compiler had a weird bug
[20:16:39] <blackbird47> yes I added the string to the stack and now it's working
[20:19:59] *** Quits: john99 (~john99@213.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[20:20:13] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[20:21:14] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:26:56] *** Quits: blackbird47 (~blackbird@223.233.79.158) (Quit: Client closed)
[20:29:38] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:803f:57ea:73dd:15bd)
[20:29:51] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[20:31:53] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:3c5e:61bb:c9f7:455a) (Ping timeout: 260 seconds)
[20:34:38] *** Joins: Alhazred (~Alhazred@86.106.74.40)
[20:35:06] *** Quits: malina (~malina@user/malina) (Ping timeout: 272 seconds)
[20:35:32] *** Joins: mahmutov (~mahmutov@5.176.38.47)
[20:36:13] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[20:36:13] <twkm> ewww, stack.
[20:36:50] <Bou> ,cc void reverse(char *c) { if (*c) { reverse(c+1); putchar(*c); } }    int main(void) { reverse("kcats"); }
[20:36:52] <candide> Bou: stack
[20:38:13] <twkm> that might have issues if the string is long but the stack isn't.
[20:42:40] <Bou> ,sh ulimit -s # should be alright
[20:42:41] <candide> Bou: 8192
[20:43:07] <twkm> sigh.
[20:44:04] <dragonmaster> unfortunately, IRC probably makes it impossible to use a 8193-byte string
[20:44:13] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[20:46:21] <fikran> I have a table with two columns, "Type" and "ID". The "Type" can be one of two values, "manual" or "automatic". Is there a way to select all values where a row exists with "Manual" for a given "ID", but "Automatic" also exists for that "ID" column?
[20:47:18] <twkm> besides writing a program in c?
[20:47:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:47:58] <dragonmaster> SQL query would probably be easier and faster
[20:48:09] <twkm> dragonmaster: a string literal, yes but composing a string via what candide can compile would be trivial.
[20:48:17] <dragonmaster> twkm: indeed
[20:50:00] *** Joins: rampart (~rampart@7.sub-174-250-0.myvzw.com)
[20:50:10] <dragonmaster> Ah.  Why did I assume it would need to be a literal?  automatic storage should work fine
[20:52:45] *** Joins: jack_rabbit (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[20:53:10] <fossforus> fikran: array of structs, after reading tables into struct see if each id has both members set
[20:53:34] <fossforus> s/struct /structs /
[20:54:02] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 260 seconds)
[20:54:27] <fikran> oh wait, wrong place to ask!
[20:54:40] <fossforus> if you don't want to use C, awk sounds maybe useful here
[20:55:45] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:56:10] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[20:56:28] *** Joins: rgrinberg (~textual@177.248.156.216)
[21:02:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:02:22] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[21:02:52] *** Quits: rgrinberg (~textual@177.248.156.216) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:57] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:03:27] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:04:14] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.5.threembb.co.uk) (Ping timeout: 272 seconds)
[21:05:34] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:06:06] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[21:06:43] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:07:54] *** Joins: Inline__ (~Inline@p200300cd470a540051f7a3750a30b01e.dip0.t-ipconnect.de)
[21:08:16] *** Quits: Learath2 (~learath2@user/learath2) (Ping timeout: 245 seconds)
[21:08:22] *** Quits: Inline (~Inline@p200300cd470a540051f7a3750a30b01e.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[21:08:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[21:08:54] *** Quits: Jmtrix (~qed@user/jmtrix) (Ping timeout: 260 seconds)
[21:09:14] *** Joins: parrott (~parrott@2607:fb90:1c3c:67ab:0:52:53fa:bc01)
[21:10:50] *** Joins: Learath2 (~learath2@user/learath2)
[21:10:57] *** Joins: Jmtrix (~qed@2604:180:2:72d::497d)
[21:10:57] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[21:10:57] *** Joins: Jmtrix (~qed@user/jmtrix)
[21:12:45] <Bou> fikran: my SQL is rusty, but I think you can do https://bpa.st/FGFQ
[21:12:45] *** Quits: KinLux (~workspace@tmo-097-71.customers.d1-online.com) (Read error: Connection reset by peer)
[21:15:29] <koollman> fikran: select a.* from yourtable a join yourtable b on (a.id=b.id and a.type < b.type)
[21:15:30] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.2.threembb.co.uk)
[21:19:49] *** Joins: meator (~meator@user/meator)
[21:22:35] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[21:23:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:24:52] <Bou> see, way better than that nasty subquery (but that's what you get for asking in #C)
[21:25:04] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com)
[21:26:09] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:27:18] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com) (Ping timeout: 260 seconds)
[21:29:20] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:29:58] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[21:31:13] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a5a4:d9a1:a057:3848)
[21:31:14] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a5a4:d9a1:a057:3848) (Changing host)
[21:31:14] *** Joins: skapata (~Skapata@user/skapata)
[21:32:17] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:32:23] <pragma-> dragonmaster: not necessarily impossible, but quite tedious if using only IRC. but there is another option involving the web: upload the code to a paste site and then feed an IRC bot/client the URL.
[21:34:07] <pragma-> (the candide bot accepts URLs for submitting lengthy factoids. one could submit a factoid containing the code and then inline the contents of the factoid to the ,cc command via `,cc &{the-factoid}`)
[21:34:09] * pragma- taps brain.
[21:34:18] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[21:36:25] *** candide sets mode: -o candide
[21:37:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:37:50] *** Joins: nitrix_ (~nitrix@user/nitrix)
[21:38:04] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[21:38:24] *** nitrix_ is now known as nitrix
[21:38:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[21:38:38] *** Quits: nitrix (~nitrix@user/nitrix) (Client Quit)
[21:39:06] *** Joins: nitrix (~nitrix@user/nitrix)
[21:39:41] *** Joins: Wulf (~Wulf@user/wulf)
[21:41:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:42:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:44:02] <pragma-> A TEST IS IN ORDER!
[21:44:07] <pragma-> Let's see here...
[21:44:41] * pragma- creates a paste: http://ix.io/3TRz
[21:44:51] <pragma-> candide: factadd test -url http://ix.io/3TRz
[21:44:51] <candide> test added to #c.
[21:44:55] <pragma-> ,cc &{test}
[21:44:59] <candide> pragma-: "All right," said Susan. "I'm not stupid. You're saying humans need... fantasies to make life bearable."  REALLY? AS IF IT WAS SOME KIND OF PINK PILL? NO. HUMANS NEED FANTASY TO BE HUMAN. TO BE THE PLACE WHERE THE FALLING ANGEL MEETS THE RISING APE.  "Tooth fairies? Hogfathers? Little—"  YES. AS PRACTICE. YOU HAVE TO START OUT LEARNING TO BELIEVE THE LITTLE LIES.  "So we can believe the big one... <truncated; https://0x0.st/oqJM.txt>
[21:45:25] <pragma-> Click the truncated output link!  https://0x0.st/oqJM.txt
[21:45:30] <pragma-> Bam.
[21:45:35] <pragma-> IRC is easy.
[21:45:48] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Remote host closed the connection)
[21:47:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:47:54] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[21:48:06] *** Quits: fe23 (~fe23@2409:8a34:466:6010:55f1:8ac3:5e09:3ee8) (Quit: fe23)
[21:49:33] *** Joins: Optimus (~risto@87.227.227.147)
[21:49:35] <pragma-> What a great bot. Just needs a bit more polish.
[21:49:56] <pragma-> ,factadd
[21:49:57] <candide> Usage: factadd [-f] [channel] <keyword> (<factoid> | -url <paste site>); -f to force overwrite; -url to download from paste site
[21:50:02] <pragma-> ,factshow
[21:50:02] <candide> Usage: factshow [-p] [channel] <keyword>; -p to paste
[21:50:06] * pragma- nods.
[21:51:40] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[21:52:50] <pragma-> ,factshow -p test
[21:52:51] <candide> test: https://0x0.st/oqJj.txt
[21:53:59] *** Joins: az103 (~andrew@071-087-062-195.res.spectrum.com)
[21:55:31] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[21:56:17] <pragma-> Don't everybody clap all at once...
[21:56:52] <dragonmaster> Sorry, was too busy thinking about how much I like _Hogfather_
[21:57:01] <pragma-> In 1998 I would have received a standing ovation for this.
[21:57:13] <dragonmaster> As far as you know, you're getting a standing ovation right now
[21:57:48] <dragonmaster> And if you can tell me you're not, then please vacate these premises immediately
[21:57:54] <pragma-> I hear the Hogfather has been made into a movie
[21:58:01] <dragonmaster> I heard that, too
[21:58:07] <pragma-> 2006.
[21:58:37] <pragma-> A made-for-TV movie.
[21:59:44] *** Joins: magla (~gelignite@55d42a76.access.ecotel.net)
[21:59:45] <pragma-> It's 3 hours and 9 minutes long!
[22:00:45] <dragonmaster> Well, there's a lot going on
[22:04:35] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:04:40] *** Quits: az103 (~andrew@071-087-062-195.res.spectrum.com) (Quit: leaving)
[22:05:13] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[22:05:49] *** Joins: az103 (~andrew@071-087-062-195.res.spectrum.com)
[22:06:03] <pragma-> No, I'm happy it's so long. I was expecting it to be 1 hour or 90 minutes long... being a TV movie.
[22:06:20] <pragma-> I do enjoy longer movies when they're good movies.
[22:07:12] <constxd> ,factinfo mallocidiom
[22:07:12] <candide> mallocidiom: Factoid submitted by pragma-!~chaos@unaffiliated/pragmatic-chaos for #c on Wed Feb 17 12:11:54 2016 [6y43d ago], last edited by pragma-!~chaos@unaffiliated/pragmatic-chaos on Sun Mar 14 21:58:21 2021 [1y16d ago] referenced 79 times (last by nitrix!~nitrix@user/nitrix on Mon Mar 28 10:32:17 2022 [2d5m ago])
[22:07:33] <constxd> ,factshow mallocidiom
[22:07:33] <candide> mallocidiom: /call mallocsizeof
[22:07:38] <constxd> wtf is this
[22:07:45] <constxd> ,factshow mallocsizeof
[22:07:46] <candide> mallocsizeof: /say T *p = malloc(sizeof *p) is more robust than T *p = malloc(sizeof (T)) because sizeof *p will always be the correct size of T and it prevents unnecessarily repeating the T (DRY principle). If sizeof (T) is used and later one of the T's is changed there will be a mismatch. T *p = malloc(sizeof *p) is more concise and easier to read, especially when T is a compound type.
[22:08:17] <constxd> ,cc puts("&{mallocsizeof}");
[22:08:19] <candide> constxd: T *p = malloc(sizeof *p) is more robust than T *p = malloc(sizeof (T)) because sizeof *p will always be the correct size of T and it prevents unnecessarily repeating the T (DRY principle). If sizeof (T) is used and later one of the T's is changed there will be a mismatch. T *p = malloc(sizeof *p) is more concise and easier to read, especially when T is a compound type.
[22:08:31] <constxd> based
[22:08:54] *** Joins: plastico (~plastico@neomutt/plastico)
[22:09:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[22:09:30] <constxd> pragma-: can u add my programming language to pbot's supported languages
[22:11:01] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[22:13:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:16:38] <pragma-> constxd: https://github.com/pragma-/pbot/tree/master/applets/pbot-vm/host/lib/Languages
[22:16:39] <candide> Title of pragma-'s link: pbot/applets/pbot-vm/host/lib/Languages at master · pragma-/pbot · GitHub
[22:17:31] <twkm> wow, what a cool title.
[22:18:10] <pragma-> smh. I used to have it ignore github titles. But this guy complained that the bot wasn't showing his clever repo titles or gist titles, so...
[22:18:56] <pragma-> Perhaps I'll restore the ignore.
[22:19:15] <twkm> perhaps if the title is just the url (fragment).
[22:21:08] <pragma-> Hm, the URL titles plugin does have a fuzzy matcher that discards output if the title and the URL are 50% fuzzily similar to each other. The difference must be just outside of the limit. I'll look into it sometime.
[22:21:43] <constxd> pragma-: do you use some kind of dockerfile or something to generate the container that the bot runs in?
[22:22:03] <pragma-> I don't run it in a container. It runs in my shell account as a normal thingie.
[22:22:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:22:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:22:38] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.2.threembb.co.uk) (Read error: Connection reset by peer)
[22:22:44] *** Quits: az103 (~andrew@071-087-062-195.res.spectrum.com) (Quit: leaving)
[22:22:49] <pragma-> Granted the account and the entire machine it runs on pretty much exists just for the bot.
[22:23:00] <constxd> if i make a pull request to add the .pm file would you compile and install the interpreter?
[22:23:00] *** Joins: az103 (~andrew@071-087-062-195.res.spectrum.com)
[22:23:17] <pragma-> Let's talk about this in #pbot
[22:23:27] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[22:23:55] *** Quits: Vrganj (~Vrganj@93-138-31-30.adsl.net.t-com.hr) (Ping timeout: 260 seconds)
[22:25:08] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:25:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:25:18] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:26:02] *** Quits: xbkkd (~F0@user/xbkkd) (Quit: Lost terminal)
[22:26:13] *** Joins: Macbethwin (~chargen@8.21.8.253)
[22:27:22] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[22:29:03] *** Quits: az103 (~andrew@071-087-062-195.res.spectrum.com) (Quit: leaving)
[22:30:07] *** Joins: az103 (~andrew@071-087-062-195.res.spectrum.com)
[22:31:37] *** Quits: az103 (~andrew@071-087-062-195.res.spectrum.com) (Client Quit)
[22:31:56] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com) (Remote host closed the connection)
[22:31:58] *** Joins: az103 (~andrew@071-087-062-195.res.spectrum.com)
[22:32:32] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-e462-8032-35a0-0584.inf6.spectrum.com)
[22:36:08] *** Quits: alch (~alch@151.68.167.138) (Read error: Connection reset by peer)
[22:36:44] *** Joins: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com)
[22:36:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:37:14] *** Joins: Betal (~Betal@user/betal)
[22:37:29] *** Joins: Oddity (~Oddity@user/oddity)
[22:37:45] *** Joins: vicfred (~vicfred@user/vicfred)
[22:40:21] *** Joins: alch (~alch@151.34.171.122)
[22:41:37] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[22:41:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:42:59] *** Joins: rgrinberg (~textual@177.248.156.216)
[22:43:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:44:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:44:54] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:45:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:47:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:47:50] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[22:50:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:54:00] *** Quits: az103 (~andrew@071-087-062-195.res.spectrum.com) (Quit: leaving)
[22:56:42] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 260 seconds)
[22:58:40] *** Macbethwin is now known as Chargen
[22:59:07] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[23:02:28] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:05:32] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[23:05:45] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[23:13:14] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[23:15:47] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:16:38] *** Joins: Church (~aleph@68.161.207.188)
[23:16:52] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:17:58] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:f501:9ac:5ed8:2ed7)
[23:21:21] *** Joins: shivesh (~shivesh@user/shivesh)
[23:21:27] *** Joins: strajder (~strajder@user/strajder)
[23:21:40] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[23:21:46] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:22:08] *** Quits: suki (~jimery@116.30.222.122) (Ping timeout: 265 seconds)
[23:23:55] *** Joins: suki (~jimery@116.30.222.11)
[23:25:51] *** Joins: Guest54214 (~Guest5421@2402:3a80:cbd:8303:9d11:a3b2:e736:84ad)
[23:27:31] *** Quits: rampart (~rampart@7.sub-174-250-0.myvzw.com) (Remote host closed the connection)
[23:28:10] *** Joins: rampart (~rampart@4.sub-174-250-0.myvzw.com)
[23:30:33] *** Joins: seninha (~seninha@user/seninha)
[23:31:24] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:33:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:34:16] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:34:21] *** Joins: festerdam (~monix@a95-93-148-254.cpe.netcabo.pt)
[23:36:01] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:36:31] *** Quits: MrFantastik (~f@176.108.141.162) (Remote host closed the connection)
[23:37:40] <festerdam> Hi, all. I was always of the impression that when one did a[b] it would be read as *(a+b*sizeof(element_type)), but apparently it's just *(a+b), but how does that work? Wouldn't elements in the array overlap if the elements were bigger than a byte?
[23:38:56] *** Joins: nvmd (~weechat@user/nvmd)
[23:39:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:40:43] <festerdam> Isn't 0x00000a07 one byte below 0x00000a08?
[23:41:27] <NRK> pointer arithmetic depends on type
[23:41:58] <NRK> when you add 1 to a pointer, you don't increment the pointer 1 byte. you increment it to the next element.
[23:42:53] <festerdam> Oh. That explains so much about the weird behaviour I was seeing in my code. Thank you so much!
[23:43:30] <NRK> ,cc char c[2]; int i[2]; printf("c: %p i:%p c+1: %p i+1: %p", c, i, c+1, i+1);
[23:43:33] <candide> NRK: [warning: format '%p' expects argument of type 'void *', but argument 3 has type 'int *' [-Wformat=]  warning: format '%p' expects argument of type 'void *', but argument 5 has type 'int *' [-Wformat=]] c: 0x7fffffffe2fe i:0x7fffffffe2f4 c+1: 0x7fffffffe2ff i+1: 0x7fffffffe2f8
[23:44:41] <NRK> ,cc char c[2]; int i[2]; printf("c: %p c+1:%p i: %p i+1: %p", (void *)c, (void *)(c+1), (void*)i, (void *)(i+1));
[23:44:43] <candide> NRK: c: 0x7fffffffe2fe c+1:0x7fffffffe2ff i: 0x7fffffffe2f4 i+1: 0x7fffffffe2f8
[23:44:54] *** Quits: ekathva (~ekathva@2001:999:230:5e27:83ce:bbb7:84b1:29a0) (Remote host closed the connection)
[23:45:06] *** Joins: Vrganj (~Vrganj@93-138-31-30.adsl.net.t-com.hr)
[23:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:47:14] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:47:57] *** Quits: Guest54214 (~Guest5421@2402:3a80:cbd:8303:9d11:a3b2:e736:84ad) (Quit: Client closed)
[23:51:24] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:f501:9ac:5ed8:2ed7) (Remote host closed the connection)
[23:51:40] *** Joins: meator (~meator@user/meator)
[23:51:46] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[23:53:08] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[23:54:10] *** Joins: sokan (~sokan@athedsl-4549484.home.otenet.gr)
[23:55:43] *** Joins: Akuli (~Akuli@213.216.211.202)
