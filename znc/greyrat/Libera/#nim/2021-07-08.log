[00:15:58] <FromDiscord> <talaing> What is the best way to cut off last 2 characters of a string?
[00:16:25] <FromDiscord> <talaing> `now().format("HH:mm:ss'.'ffffff")`
[00:16:37] <FromDiscord> <talaing> `21:44:57.967640`
[00:16:41] <FromDiscord> <talaing> (edit) 
[00:16:53] <FromDiscord> <talaing> I only need `21:44:57.9676`
[00:16:59] <FromDiscord> <timotheecour> setLen
[00:17:16] <FromDiscord> <timotheecour> (edit) "setLen ... " 03added "and see also rfidn"
[00:17:20] <FromDiscord> <timotheecour> (edit) "rfidn" => "rfind"
[00:19:03] <FromDiscord> <vindaar> or just the plain and simple slice `mystring[0..<^2]`
[00:21:28] *** Joins: max22- (~maxime@2a01cb08833598009b074d2aaeec4635.ipv6.abo.wanadoo.fr)
[00:24:17] <FromDiscord> <talaing> `mystring[0..<^2]` doesn't seem to work
[00:24:30] <FromDiscord> <vindaar> huh?
[00:24:43] <FromDiscord> <talaing> `Error: undeclared identifier: '..^<'`
[00:24:48] <FromDiscord> <vindaar> ah
[00:24:49] <FromDiscord> <vindaar> damn
[00:24:51] <FromDiscord> <vindaar> space
[00:25:22] <FromDiscord> <vindaar> https://play.nim-lang.org/#ix=3sfm
[00:27:40] <FromDiscord> <talaing> Now it works, thanks 🙂
[00:29:37] <FromDiscord> <vindaar> just if it isn't clear. The problem in what I wrote first is that the compiler tries to parse `..<^` as a single symbol. But of course that doesn't exist. `..<` and `^` are separate things, so the space is required.↵And btw you could also just do `mystring[0 .. ^3]` instead. `^1` just refers to the last index
[00:30:21] <FromDiscord> <vindaar> this is "including the 3rd last character" and the one before is "up to less than the 2nd last"
[00:35:31] <FromDiscord> <runciter> sent a long message, see http://ix.io/3sfp
[00:35:54] <FromDiscord> <runciter> apologies my Matrix client removed the newlines in my message
[00:36:12] <FromDiscord> <vindaar> @treeform ^ can help you best
[00:36:31] <FromDiscord> <ElegantBeef> Worth noting `mystring[0..< ^2]` will duplicate the data so if you're not ok with more allocations the `setLen` method is better
[00:37:13] <FromDiscord> <vindaar> Thanks, that's certainly true, but I feel like people asking such a thing probably don't care about that.
[00:37:34] <FromDiscord> <ElegantBeef> Probably true, but always good thing to note
[00:37:46] <FromDiscord> <vindaar> indeed 👌
[00:38:43] <FromDiscord> <treeform> In reply to @runciter "heya i'm learning Nim": I would not design an API this way. I would look at the error code returned from HTTP and parse the error as an object. Otherwise parse the result as a regular object not related to errror.
[00:38:47] <FromDiscord> <talaing> In reply to @ElegantBeef "Worth noting `mystring[0..< ^2]`": Thanks for mentioning it, luckily I'm okay with it 🙂 Also thank you vindaar for explanation 👍
[00:39:51] <FromDiscord> <treeform> In reply to @runciter "heya i'm learning Nim": If you don't have an error code, you could try parsing it as an error first, failing then parsing it as some thing you expect.
[00:44:23] <FromDiscord> <treeform> @runciter: https://play.nim-lang.org/#ix=3sfr
[00:44:40] <FromDiscord> <treeform> I think you are overcomplicating your life with types
[00:46:32] <FromDiscord> <treeform> oh maybe this is a better version: https://play.nim-lang.org/#ix=3sft
[00:52:12] <FromDiscord> <runciter> ah, the reason i was attempting to use types for it was so that I could define a single `parseHook` to handle this such that it would apply for all my API calls as there are a dozen or more cases and i wanted to avoid defining the same parseHook for each API proc and offload that work to jsony
[00:53:22] <FromDiscord> <runciter> thanks though, i'll just write the parseHook procsor learn the macro system and have a macro write them all for me \:P
[00:55:50] <FromDiscord> <treeform> so you want all of your types to have `errcode` and `error` just with more indirection?
[00:59:48] <FromDiscord> <runciter> i'm writing a tiered API with raw calls and higher-level calls, and i wanted to have all the raw calls return a Result of either the error or their actual type data, so that the logic for detecting and converting to an ApiError didn't have to be written for each type
[01:00:41] *** Quits: max22- (~maxime@2a01cb08833598009b074d2aaeec4635.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[01:00:45] <FromDiscord> <treeform> I don't think you want macros involved, you probably want some thing like this https://play.nim-lang.org/#ix=3sfw
[01:01:49] <FromDiscord> <treeform> if you want your results to be nested still you probably want to use parse hook inside parse hook
[01:02:52] <FromDiscord> <runciter> oh wow this is exactly what I wanted to do, apologies if I explained it poorly
[01:03:03] <FromDiscord> <runciter> true, I'll see where it goes when I get there↵↵thanks a lot for the help with this
[01:04:22] <FromDiscord> <treeform> This code is better: https://play.nim-lang.org/#ix=3sfB
[01:04:42] <FromDiscord> <treeform> I needed to use parseHook in side parseHook so that it can nest
[01:04:48] <FromDiscord> <treeform> probably does not matter in your case though
[01:05:34] <FromDiscord> <treeform> Although I don't think this is a good design, you are better off handing errors as you see them then making it part of your type system.
[01:05:52] <FromDiscord> <treeform> you got to handle them some place, why pipe them around?
[01:10:55] <FromDiscord> <runciter> sent a long message, see http://ix.io/3sfC
[01:13:21] <FromDiscord> <runciter> if the raw api procs handle the errors then the higher level ones can't, but if the higher level ones are responsible for this then the raw api calls have no way of signifying errors
[01:13:43] *** Joins: max22- (~maxime@2a01cb08833598005f0adae446d8a760.ipv6.abo.wanadoo.fr)
[01:22:31] <FromDiscord> <vindaar> oh damn, you're writing a matrix library? that's awesome!
[01:23:25] <FromDiscord> <runciter> hoping to haha - ty
[01:25:00] <FromDiscord> <tandy> excited to see a Nim mention in This Week In Matrix \:)
[01:26:40] <FromDiscord> <ElegantBeef> Aw hell yea, i was going to try it, but couldnt indulge myself in self abuse 😛
[01:27:42] <fn> <06Prestige99> Ah that's exciting stuff
[01:28:31] <fn> <06Prestige99> I'd like to make a matrix client when that api is ready
[01:36:22] <FromDiscord> <runciter> aha I wasn't expecting any interest - I'll drop a msg in here when it's ready \<3
[01:36:46] <FromDiscord> <vindaar> please do 🚀
[01:37:15] *** Quits: max22- (~maxime@2a01cb08833598005f0adae446d8a760.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:37:37] *** Joins: max22- (~maxime@2a01cb0883359800e5475637f3acb0f6.ipv6.abo.wanadoo.fr)
[01:43:41] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[02:27:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> can I iterate over an array in reverse?
[02:34:58] *** Quits: max22- (~maxime@2a01cb0883359800e5475637f3acb0f6.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:02:00] <FromDiscord> <ElegantBeef> There isnt a way in the stdlib but you can make an iterator relatively quickly
[03:05:15] <FromDiscord> <ElegantBeef> A simple impl here https://play.nim-lang.org/#ix=3sfV
[03:10:30] *** Joins: luis_ (~luis@2804:d47:aa0:9a00:409a:2367:cb02:2073)
[03:35:22] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[03:37:55] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[04:43:29] *** Joins: PersonMcGuy (~PersonMcG@2603-8080-700a-3700-8499-00f6-86dc-8592.res6.spectrum.com)
[04:44:52] <PersonMcGuy> Hello all. Quick question. Would an async proc referencing a global variable be considered gcsafe if the program running it is single-threaded?
[05:27:18] *** Quits: luis_ (~luis@2804:d47:aa0:9a00:409a:2367:cb02:2073) (Remote host closed the connection)
[05:30:04] *** Quits: PersonMcGuy (~PersonMcG@2603-8080-700a-3700-8499-00f6-86dc-8592.res6.spectrum.com) (Quit: Client closed)
[06:05:43] <FromDiscord> <timotheecour> gcsafety depends on whether the type of that variable (int ok, string or seq not ok, IIRC)
[06:05:50] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:05:59] <FromDiscord> <timotheecour> (edit) "gcsafety depends on whether the type of that variable (int ok, string or seq ... not" 03added " or ref int"
[06:06:13] <FromDiscord> <timotheecour> (edit) "gcsafety depends on whether the type of that variable ... (int" 03added "and whether it involves GC"
[06:06:29] <FromDiscord> <timotheecour> (edit) "ok, IIRC)" => "ok)"
[07:19:12] <fn> <11ForumUpdaterBot99> New thread by Bung: Integrate with dll's procs that returns gced types, see https://forum.nim-lang.org/t/8210
[07:55:08] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:29:21] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:45:46] <FromDiscord> <RattleyCooper> Anybody know if I can do a binary left shift like `1 << 0` would do in python?
[10:45:58] <FromDiscord> <Elegantbeef> `1 shl 0`
[10:46:04] <FromDiscord> <RattleyCooper> Thanks 😄
[10:46:18] <FromDiscord> <Elegantbeef> bet you cannot guess what is shift right
[10:46:26] <FromDiscord> <RattleyCooper> shr?
[10:46:32] <FromDiscord> <Rika> Sure it is
[10:46:35] <FromDiscord> <Elegantbeef> Damn you're a rocket scientist
[10:46:39] <FromDiscord> <RattleyCooper> lol
[11:08:58] <FromDiscord> <Bung> @ElegantBeef Nimscripter dont handle import in nims file ?
[11:09:17] <FromDiscord> <Elegantbeef> It's supposed to
[11:12:56] <FromDiscord> <Elegantbeef> Got a sample of what you're doing so i can see what i fucked up?
[11:13:37] <FromDiscord> <Bung> sure
[11:14:59] <FromDiscord> <Bung> https://github.com/bung87/dllgen/blob/scripted/src/dllgen.nim
[11:15:37] <FromDiscord> <Bung> am trying switch my dll gen to nimscripter implement a theme system
[11:16:52] <FromDiscord> <Bung> after fixed problems I still cant get ref T from outside proc's returns
[11:17:22] <FromDiscord> <Bung> that's impossible in theory I guess
[11:19:18] <FromDiscord> <Elegantbeef> I mean you're using the `{.cdecl.}` in the same as a file with `{.exportToNim.}`
[11:19:53] <FromDiscord> <Elegantbeef> Are you using `libcffi`?
[11:21:11] <FromDiscord> <Bung> no,  that proc did not used so may not affect anything
[11:22:37] <FromDiscord> <Bung> your loadscript stdpath param why not point to findNimStdLibCompileTime ?
[11:23:03] <FromDiscord> <Elegantbeef> So you can distribute binaries with their own select stdlib
[11:23:43] <FromDiscord> <Bung> I mean you can take it as default value
[11:25:09] <FromDiscord> <Bung> I dont need custom stdlib , I just want to see how it works , so `./stdlib`  does not usefull to me
[11:26:31] <FromDiscord> <Elegantbeef> Hmm i really should clean it up
[11:26:43] <FromDiscord> <Elegantbeef> Add more docs in code, remove stupid stuff
[11:28:35] <FromDiscord> <Bung> I think you can do de ref automatically if ref not possible
[11:28:46] <FromDiscord> <Elegantbeef> Dont know what you mean
[11:28:49] <FromDiscord> <Bung> when I call invoke memthod
[11:29:17] <FromDiscord> <Elegantbeef> Well references are not passed as is
[11:29:38] <FromDiscord> <Elegantbeef> They're serialized and reconstructed
[11:29:43] <FromDiscord> <Bung> I mean the invoke method return types
[11:30:19] <FromDiscord> <Elegantbeef> I dont follow
[11:30:41] <FromDiscord> <Bung> the method returns a ref T , in the main program you invoke, you get nil
[11:33:01] *** Quits: sagax (~sagax@213.138.71.146) (Excess Flood)
[11:40:57] <FromDiscord> <Elegantbeef> That doesnt sound right
[11:42:40] <FromDiscord> <Bung> it's same behavior when I call proc from dll proc
[11:44:04] <FromDiscord> <Bung> guess I need wirte a macro transform returns types to object type
[11:44:35] <FromDiscord> <Elegantbeef> Well if you want to use nimscripter no, it's an issue i need to fix
[11:46:08] <FromDiscord> <Elegantbeef> oh your issue is something i did dumb and now just realize how dumb it is
[11:46:25] <FromDiscord> <Elegantbeef> it's `newSubModuleExported` due to my stupidity
[11:47:10] <FromDiscord> <Bung> It supposed to handle returns ref type ? I do some work in dll version, that it has self contained gc process
[11:47:36] <FromDiscord> <Elegantbeef> Yes it's supposed to handle ref types, but it copies them
[11:48:26] <FromDiscord> <Bung> oh, that's sounds good
[11:48:49] <FromDiscord> <Bung> when you fix all tell me, I'll try it
[11:48:53] <FromDiscord> <Elegantbeef> I know it was working at one point with refs, but i may have broke it
[11:49:38] <FromDiscord> <Bung> I looked video , does not show pass arg and return ref types
[11:49:49] <FromDiscord> <Bung> so you may add more test cases.
[11:50:02] <FromDiscord> <Elegantbeef> Well it didnt show it but i know it worked then
[11:52:30] <FromDiscord> <Bung> another thing could it handle import in script related to the script file path or provide a cwd arg I think
[11:53:02] <FromDiscord> <Elegantbeef> Yea so the issue is just that whole "Exported" being appened which i should just handle
[11:53:47] <FromDiscord> <Bung> cool
[11:54:52] <FromDiscord> <Bung> it also not parse export symbol I faced the problem.
[11:55:49] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:56:06] <FromDiscord> <Elegantbeef> Well i dont know how easily that can be supported since it needs to be serialized between nimscript and nim
[11:56:11] <FromDiscord> <Elegantbeef> But yea i'll have a update out shortly being `0.3.0`
[11:57:35] <FromDiscord> <Elegantbeef> This isnt seamless communication, everything is serialized from one side to the other due to VM limitations i hit
[11:57:55] <FromDiscord> <Elegantbeef> Though i do wonder how @drsw handles it
[11:58:57] <FromDiscord> <Bung> disruptek also have a serialize lib clam handle any type
[11:59:34] <FromDiscord> <Elegantbeef> Except doesnt work in the VM
[12:00:12] <FromDiscord> <Bung> okay, good to know
[12:00:32] <FromDiscord> <Elegantbeef> I originally was going to use frosty but i hit the wall of VM is limited
[12:00:45] <FromDiscord> <Elegantbeef> So until libcffi becomes standard this will persist
[12:03:25] <FromDiscord> <Elegantbeef> Well there you go 0.3.0 just released
[12:03:35] <FromDiscord> <Elegantbeef> So now you dont need to do `yourNimScriptProcExported`
[12:03:44] <FromDiscord> <Elegantbeef> I realize now that was dumber than imaginable
[12:05:54] <FromDiscord> <Bung> I dont get it, my procs in nims did not exported
[12:06:26] <FromDiscord> <Elegantbeef> no they did but my dumbass though it was smart to require programmers to write `"newSubModuleExported"` for the proc name
[12:07:33] <FromDiscord> <Elegantbeef> Look at tests for examples
[12:08:22] <FromDiscord> <Elegantbeef> I really think i need to take a look at nimscripter again and clean it to a fantastic library instead of whatever this is 😛
[12:09:11] <FromDiscord> <Elegantbeef> I can remove the import order issue and also make it support multiple modules/intepreters but just havent got around to it
[12:14:18] <FromDiscord> <Bung> hmm I still get nil access
[12:15:43] <FromDiscord> <Bung> oh, I commented another proc , it works.
[12:15:54] <FromDiscord> <Elegantbeef> Ah was just about to test it
[12:18:31] <FromDiscord> <Bung> guess you did thought user just feed their old nim file to nimscripter.
[12:20:40] <FromDiscord> <Bung> now am wating for the import things solved. so my theme file just need small changes.
[12:22:10] <FromDiscord> <Bung> it's usefull to be a plugin system.
[12:22:37] <FromDiscord> <Elegantbeef> By import thing do you mean working relative to .nims file?
[12:23:34] <FromDiscord> <Bung> yeah ,atleast if user provide absolute file path
[12:24:03] <fn> <11ForumUpdaterBot99> New thread by Halloleo: In the JavaScript backend how to pass a array back as sequence?, see https://forum.nim-lang.org/t/8211
[12:28:13] <FromDiscord> <Elegantbeef> Not great but presently you can just change the directory before and after loading the interpreter
[12:36:38] <FromDiscord> <Bung> searchPaths add projectFile parent Dir I think
[12:36:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[13:02:12] *** Joins: PMunch (~PMunch@178.74.36.198)
[13:31:24] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[13:32:14] *** Joins: xet7 (~xet7@user/xet7)
[13:33:02] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[13:34:10] *** Joins: xet7 (~xet7@user/xet7)
[13:42:11] *** Joins: max22- (~maxime@2a01cb0883359800aea1625d7be1cb99.ipv6.abo.wanadoo.fr)
[13:42:28] *** Quits: max22- (~maxime@2a01cb0883359800aea1625d7be1cb99.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:42:47] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3shF
[13:42:51] *** Joins: max22- (~maxime@2a01cb0883359800aea1625d7be1cb99.ipv6.abo.wanadoo.fr)
[13:48:13] <PMunch> Nim doesn't like {} IIRC
[13:48:26] <PMunch> I seem to remember having issues with it when I was doing genui
[13:48:54] <PMunch> It is overloaded in your code, but the syntax parser struggles with figuring out what you're trying to do
[13:49:26] <FromDiscord> <ElegantBeef> well hax is doing `echo somStuff = y` which is turned into `asgn(echo(somStuff), y)`
[13:49:59] <FromDiscord> <ElegantBeef> But even wrapping with pars has an issue
[13:50:15] <PMunch> Yeah, but try to wrap it in parenthesis and you see what I mean
[13:50:43] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3shH
[13:50:47] <FromDiscord> <haxscramper> Well, I can live with that, so `echo {}=` is probably weird thing anyway
[13:51:23] <PMunch> Well it was broken because you tried to return something from the {}= proc
[13:51:34] <FromDiscord> <ElegantBeef> yea it's broken even with `[]=`
[13:51:57] <FromDiscord> <ElegantBeef> the curlies were not the issue it was the return type really confuses the parser
[13:52:01] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3shI
[13:52:15] <FromDiscord> <haxscramper> parser should have nothing to do with return type
[13:52:36] <FromDiscord> <ElegantBeef> I use terms very loosely
[13:52:38] <FromDiscord> <ElegantBeef> 😛
[13:52:57] <FromDiscord> <haxscramper> well, anyway, TIL you can overload `from`, `as`, `{}` and `{}=`
[13:53:14] <FromDiscord> <haxscramper> Would be nice if we got `to` operator
[13:53:40] <FromDiscord> <Rika> you can prolly just use a normal proc and mcs it
[13:53:40] <FromDiscord> <Rika> (for now)
[14:01:12] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3shK
[14:26:59] <FromDiscord> <vindaar> what's the point of that thing [haxscramper](https://matrix.to/#/@haxscramper:matrix.org) ? 😅 reminds me of my first ideas about the ggplotnim formulas, i.e. allowing `~` to be used to construct formulas with untyped identifiers as column references and this kind of stuff. The fun part is that `~` has lower precedence than most things that might appear on the RHS, so I needed to reorder the tree 🤭
[14:27:57] <FromDiscord> <haxscramper> No point, just realized you could do this
[14:28:09] <FromDiscord> <haxscramper> Well, custom `[]<XXX>` operators
[14:28:18] <FromDiscord> <vindaar> ah, I see. It's neat to be able to do this stuff
[14:30:05] <FromDiscord> <vindaar> also the whole matching specific nim nodes in an untyped setting is really nice
[14:32:56] <FromDiscord> <haxscramper> Yes, it is really nice
[14:33:20] <FromDiscord> <haxscramper> The main problem - I almost never reach to it for some reason, and this is not particularly buggy feature either
[14:33:31] <FromDiscord> <vindaar> same here
[14:33:32] <FromDiscord> <haxscramper> All of this TRM-related stuff is very cool
[14:33:48] <FromDiscord> <haxscramper> Even without rewriting macros themselves
[15:49:32] <FromDiscord> <Bung> @haxscramper  your pasePNodeStr need update https://github.com/bung87/nimlsp/blob/check/src/nimlsppkg/pnode_parse.nim
[15:50:45] <FromDiscord> <haxscramper> Can you PR a fix?
[15:50:59] <FromDiscord> <haxscramper> Still don't understand why can't just use my library as is
[15:51:25] <FromDiscord> <Bung> ok, then later I'll create PR
[15:51:32] <FromDiscord> <haxscramper> Also, why mImport?
[15:51:41] <FromDiscord> <Bung> yours still install nimble ?
[15:51:50] <FromDiscord> <haxscramper> Doesn't regular import work just fine?
[15:52:22] <FromDiscord> <Bung> you have custom `/` operator
[15:52:49] <FromDiscord> <haxscramper> And?
[15:52:52] <FromDiscord> <Bung> I mean `os.joinPath`
[15:53:25] <FromDiscord> <Bung> mimport is  join to explicitSourcePath
[15:53:50] <FromDiscord> <Bung> so I dont install compiler either
[15:54:29] <FromDiscord> <Bung> me dont install nimble and compiler , yours does.
[15:56:09] <FromDiscord> <haxscramper> Anyway, I don't think I need changes like this - `raise` and catch in the same proc and then return error directly, support for nimpretty, hardocded absolute paths to compiler tec.
[15:56:34] <arkanoid> Rika: I've opened an issue on GH and yeah it went down the rabbit hole. I's just way easier to avoid sugar
[15:57:12] <FromDiscord> <Bung> the main point is move up pars.lex.errorHandler =
[15:58:18] <FromDiscord> <haxscramper> Doesn't `openParser` mutate parser in-place? The parsing happens in `parseAll`
[16:01:26] <FromDiscord> <haxscramper> And `parsePnodeStr` is not exactly the thing you should be building logic on, just like `compileString` it is a hack for quick testing
[16:03:01] <FromDiscord> <haxscramper> Do you plan to use submodules?↵(@Bung)
[16:03:17] <FromDiscord> <haxscramper> Git submodules for a compiler instead of installing it
[16:04:02] <FromDiscord> <Bung> sent a long message, see http://ix.io/3si6
[16:04:55] <FromDiscord> <Bung> openParser will parse first token
[16:05:38] <FromDiscord> <Bung> in this lib , no , I just use it check syntax.
[16:06:36] <FromDiscord> <Bung> feed a tab easily trigger error
[16:19:22] *** Quits: max22- (~maxime@2a01cb0883359800aea1625d7be1cb99.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:21:33] *** Joins: luis_ (~luis@2804:d47:a56:aa00:9b41:80e6:3aab:f5ac)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:46:47] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[17:21:14] *** Quits: luis_ (~luis@2804:d47:a56:aa00:9b41:80e6:3aab:f5ac) (Quit: luis_)
[17:28:33] *** Joins: luis_ (~luis@2804:d47:a56:aa00:9b41:80e6:3aab:f5ac)
[17:49:53] *** Joins: arkurious (~arkurious@user/arkurious)
[17:51:30] <FromDiscord> <lqdev> sent a code paste, see https://play.nim-lang.org/#ix=3sio
[17:51:48] <FromDiscord> <lqdev> is there anything extra i need to do before reading from a connected client?
[18:01:48] *** Quits: arkurious (~arkurious@user/arkurious) (Ping timeout: 258 seconds)
[18:04:06] *** Joins: arkurious (~arkurious@user/arkurious)
[18:20:58] <fn> <11ForumUpdaterBot99> New thread by JPLRouge: Help Json , see https://forum.nim-lang.org/t/8212
[18:28:16] *** Quits: luis_ (~luis@2804:d47:a56:aa00:9b41:80e6:3aab:f5ac) (Quit: luis_)
[18:40:45] *** Joins: rockcavera (~rc@192.12.114.223)
[18:40:46] *** Quits: rockcavera (~rc@192.12.114.223) (Changing host)
[18:40:46] *** Joins: rockcavera (~rc@user/rockcavera)
[18:45:08] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:52:16] *** Joins: max22- (~maxime@2a01cb088335980037186702ae6ae14e.ipv6.abo.wanadoo.fr)
[19:02:58] *** Quits: max22- (~maxime@2a01cb088335980037186702ae6ae14e.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:05:13] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[19:05:26] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[19:34:19] *** Parts: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (WeeChat 2.7)
[19:58:05] *** Joins: max22- (~maxime@2a01cb088335980004df3ef263e38f7a.ipv6.abo.wanadoo.fr)
[20:00:26] <FromDiscord> <RattleyCooper> I'm getting `nan` value back from some math operations on `float64` values.  Looks like docs say to use `complex` module but I'm unsure how to fix this specific problem..
[20:03:23] <FromDiscord> <Rika> whats the problem
[20:08:15] <FromDiscord> <RattleyCooper> I need to do math that works
[20:08:32] <FromDiscord> <Rika> uh specifics
[20:08:42] <FromDiscord> <Rika> we cant tell what youre doing that results in a nan
[20:09:09] <FromDiscord> <RattleyCooper> `dot = dot + gradient[i]  (point[i] - grid_point[i])`
[20:09:25] <FromDiscord> <Rika> nothing here seems like it would give a nan
[20:09:36] <FromDiscord> <RattleyCooper> in a loop where `i` is the index of the 3 `seq[float64]`
[20:10:04] <FromDiscord> <RattleyCooper> That's the operation that results in the `nan` though.  When I look at the sequences they're all floats
[20:12:06] <FromDiscord> <vindaar> given that the word `gradient` appears, it seems much more likely that your numerical computation of a gradient before this divides by 0 somewhere
[20:14:08] <FromDiscord> <Rika> or that you somehow stored a nan in either point or grid_point
[20:15:14] <FromDiscord> <RattleyCooper> I checked the sequences I'll check my gradient function as well
[20:15:51] <FromDiscord> <RattleyCooper> For some reason this pc can't find the `guass` function so I'm having to debug on the nim-lang website
[20:15:57] <FromDiscord> <vindaar> I just had to check whether doing math with an `inf` produces a nan. Apparently not directly 😅
[20:16:28] <FromDiscord> <vindaar> if you mean the `gauss` in the `random` module, it was only added relatively recently↵(@RattleyCooper)
[20:16:49] <FromDiscord> <RattleyCooper> I'm honestly not great at math, I'm trying to port a Perlin noise algorithm to nim
[20:17:12] <FromDiscord> <vindaar> if you can share more of the code, we can help you better though
[20:23:45] <FromDiscord> <vindaar> I suppose you're porting that to learn it rather than to have an implementation, right? Because there's ↵https://github.com/guzba/noisy↵and↵https://github.com/Nycto/PerlinNim
[20:28:54] <FromDiscord> <RattleyCooper> Yeah, just learning
[20:29:20] <FromDiscord> <RattleyCooper> I'm new to nim and trying to get used to using the different types and whatnot.  Learn the standard library
[20:31:58] <FromDiscord> <vindaar> (to add to this\: if your `point[i] - grid_point[i]` were 0, you could have `inf  0`, which does produce nan)
[20:33:14] <FromDiscord> <RattleyCooper> Ok, I will do some testing here when I have more time and see if either of those things are happening.
[20:34:21] <FromDiscord> <vindaar> feel free to ping me if I should look over your code or something
[20:37:22] <FromDiscord> <whyy cant i install choosenim> noise generation lol
[20:39:15] <FromDiscord> <RattleyCooper> Cool, I appreciate the help and will take you up on it if I can't figure it out
[20:46:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:23] <FromDiscord> <dom96> In reply to @lqdev "i'm trying to make": can you share code?
[20:49:19] <FromDiscord> <lqdev> In reply to @dom96 "can you share code?": i already solved my problem differently, but sure. i do actually want to know why this error occured https://media.discordapp.net/attachments/371759389889003532/862729571379838996/syncserver.nim
[20:51:04] <FromDiscord> <dom96> You're calling `recvLine` on the server not the client
[20:51:17] <FromDiscord> <lqdev> ohhh damn
[20:51:45] <FromDiscord> <lqdev> that was a bit dumb
[20:52:09] <FromDiscord> <lqdev> sometimes you just need a second pair of eyes to look at your code 🙃
[21:08:09] <FromDiscord> <hamidb80> sent a code paste, see https://play.nim-lang.org/#ix=3sjx
[21:11:59] <FromDiscord> <RattleyCooper> In reply to @vindaar "(to add to this\:": This is at least part of it
[21:12:25] <FromDiscord> <RattleyCooper> (edit) "it" => "the problem."
[21:17:18] <FromDiscord> <RattleyCooper> I also have `nan`s in my gradient
[21:19:12] <FromDiscord> <vindaar> possibly from essentially having 0 / 0
[21:24:52] <FromDiscord> <RattleyCooper> I'm adding checks for 0.  Just taking more time than necessary bc I'm working and also using play.nim-lang.org lol
[21:25:07] <FromDiscord> <vindaar> why are you not just updating your local nim version?
[21:26:59] <FromDiscord> <RattleyCooper> Can I just download the new version and install over the old version?
[21:27:12] <FromDiscord> <vindaar> it kind of depends on how you installed the old version
[21:27:23] <FromDiscord> <vindaar> in general \~yes, if you use the same approach
[21:27:25] <FromDiscord> <RattleyCooper> I don't know tbh.  I don't think I used choosenim
[21:27:32] <FromDiscord> <vindaar> otherwise you might run into issues with multiple installations and different paths
[21:27:43] <FromDiscord> <RattleyCooper> Gotcha, I have no clue tbh.
[21:27:44] <FromDiscord> <vindaar> are you on windows or linux?
[21:27:58] <FromDiscord> <RattleyCooper> Might have used VSCode or installed from the exe
[21:28:00] <FromDiscord> <RattleyCooper> windows
[21:28:16] <FromDiscord> <vindaar> then I suppose installing the newest version from the website should work out fine
[21:28:24] <FromDiscord> <vindaar> (will be afk for a bit)
[21:28:36] <FromDiscord> <RattleyCooper> OK, I'll give it a shot.  Thanks for all the help!
[21:47:36] *** Joins: Guest28 (~Guest28@2a02:8084:2141:5e80:b225:aaff:fe40:a1d6)
[21:47:54] *** Parts: Guest28 (~Guest28@2a02:8084:2141:5e80:b225:aaff:fe40:a1d6) ()
[21:55:10] *** Joins: dmu (~darkmusic@user/darkmusic)
[22:22:01] <FromDiscord> <treeform> I am trying to do very unsafe thing. I get an image array of bytes from openGL, can I manually make it part of a seq? Some thing like seq.intenraldataptr = openGLArrayPointer?
[22:22:41] <FromDiscord> <Rika> I doubt because a seq is garbage collected
[22:22:55] <FromDiscord> <Rika> Just use the unchecked array type
[22:23:08] <FromDiscord> <treeform> I need it on an object that's a seq
[22:23:23] <FromDiscord> <treeform> I can memcopy it but that is slow
[22:23:27] <FromDiscord> <treeform> I know its not safe
[22:23:30] <FromDiscord> <treeform> but I want to try
[22:24:32] <FromDiscord> <vindaar> I'd say you might run into issues that possibly break the GC (or do bad things to the data)
[22:24:33] <FromDiscord> <vindaar> might work better with arc
[22:24:33] <FromDiscord> <vindaar> but also there I've seen weird things
[22:24:33] <FromDiscord> <Rika> Is it a good idea
[22:24:37] <FromDiscord> <vindaar> why do you need a seq specifically though?
[22:26:08] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3sjS
[22:26:42] <FromDiscord> <treeform> I need to know the layout of the seq
[22:26:45] <FromDiscord> <treeform> (using refc for now)
[22:26:58] <FromDiscord> <treeform> I think arc puts the cap and len as first entries in the pointer
[22:27:20] <FromDiscord> <vindaar> I'm confused. Do you need a seq or is such an `UnsafeSeq` fine?
[22:27:47] <FromDiscord> <treeform> well unsafeSeq is seq
[22:27:49] <FromDiscord> <treeform> just casted
[22:46:36] *** Quits: PMunch (~PMunch@178.74.36.198) (Quit: leaving)
[22:53:08] <FromDiscord> <JonasL> `proc foo[T](self: T) =`
[22:56:09] <FromDiscord> <JonasL> how do i call proc on generics? e.g.
[22:56:19] <FromDiscord> <JonasL> `proc foo[T](self: T) : Position =↵    result self.getPosition()`
[22:57:28] <FromDiscord> <JonasL> (edit) "`proc foo[T](self: T) : Position =↵    result ... self.getPosition()`" 03added "="
[23:02:45] <FromDiscord> <ynfle (ynfle)> What do you mean?
[23:08:56] <FromDiscord> <JonasL> something similar to Rust generics or C++ templates
[23:10:31] <FromDiscord> <Hi02Hi> have you tried `foo[T](arg)` ?
[23:11:32] <FromDiscord> <Hi02Hi> note: nim's type inference means you don't have to put the `[T]` part
[23:14:30] <FromDiscord> <ynfle (ynfle)> What do you want to do?
[23:15:06] <FromDiscord> <konsumlamm> oh, i think they're looking for something like Rust's traits
[23:16:20] <FromDiscord> <konsumlamm> Nim uses SFINAE (like C++), so you can just call functions on generic parameters and only when instantiated with a concrete type, it is type checked
[23:16:31] <FromDiscord> <JonasL> something similar yeah
[23:17:08] <FromDiscord> <konsumlamm> although there are concepts, which let you specify constraints on the generic parameters (like what functions it should support), but they're still experimental
[23:17:30] <FromDiscord> <JonasL> so i have to go the c++ way
[23:17:31] <FromDiscord> <konsumlamm> currently, you usually just use normal generic parameters though
[23:17:37] <FromDiscord> <konsumlamm> ye
[23:17:47] <FromDiscord> <konsumlamm> unless you wanna use concepts
[23:18:43] <FromDiscord> <JonasL> yeah tried it but got an error, but thanks for the advice. Learning by doing i guess
[23:18:44] <FromDiscord> <codic> also there are libraries that simulate it
[23:19:28] <FromDiscord> <codic> like this https://github.com/yglukhov/iface
[23:19:30] <fn> <12R2D299> 4GitHub: 7"<No Description>"
[23:19:33] <FromDiscord> <Alea> Would nim be any faster for building a matplotlib point cloud via nimpy?
[23:19:46] <FromDiscord> <Alea> Or would it spend all it's time in python code anyway
[23:20:37] <FromDiscord> <vindaar> how many data points are you talking about and how slow is matplotlib for you?
[23:20:37] <FromDiscord> <vindaar> unless the limiting factor is the generation of the data or something, no. The plotting will take \~the same time↵(@Alea)
[23:22:11] <FromDiscord> <ynfle (ynfle)> @\_discord\_678286491234992178\:t2bot.io What are you trying to do?
[23:23:02] <FromDiscord> <JonasL> In reply to @JonasL "yeah tried it but": works now. Thanks
[23:23:41] <FromDiscord> <ynfle (ynfle)> \:thumbsup\:
[23:32:23] <FromDiscord> <Alea> In reply to @vindaar "how many data points": 2.7M↵It takes a while to read them from xml to the scatter data, but the actual rendering is unusably slow
[23:34:44] <FromDiscord> <vindaar> regular plotting libraries simply aren't built to deal with that kind of data (especially in an interactive way).↵I'd propose to plot using nim, but to be fair, `ggplotnim` isn't really faster than matplotlib to plot a huge number of points. Last time I compared plotting 1 mio. points comparing with matplotlib it was similar in speed
[23:34:46] <FromDiscord> <vindaar> but the thing is, usually you don't want to plot this much data
[23:34:49] <FromDiscord> <vindaar> that's what heatmaps are for
[23:38:51] <FromDiscord> <Alea> Is there a way to do 3d heat maps?
[23:39:17] <FromDiscord> <Alea> Also pretty sure this is some kind of molecular data, so it should be discreet
[23:40:09] <FromDiscord> <vindaar> if you really want to plot such data as a point cloud though, you should probably look into something like vispy\: https://vispy.org/↵↵a heatmap is technically 3D by definition (color is a 3rd dimension)
[23:42:02] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[23:47:22] <FromDiscord> <vindaar> an additional problem presents itself if you store plots with that many objects. If you store it as a vector graphic, most viewers will choke on that kind of data tooo
[23:48:29] <FromDiscord> <vindaar> compare these
[23:48:30] <FromDiscord> <vindaar> axion\_image\_2018.png https://media.discordapp.net/attachments/371759389889003532/862774666824908810/axion_image_2018.png
[23:48:31] <FromDiscord> <vindaar> xy\_2018.png https://media.discordapp.net/attachments/371759389889003532/862774668914065408/xy_2018.png
[23:50:20] <FromDiscord> <vindaar> that's \~750,000 points in that point cloud. The two aren't exactly the same, because the latter one is weighted by something. The input data is the same aside from that. Converting the scatter plot from a PDF to png took inkscape... 80 s
[23:51:10] <FromDiscord> <Vindaar> (on the discord side it's the former plot... the heatmap that is weighted)
[23:56:04] <FromDiscord> <haxscramper> Close but I think not exactly correct (part about SFINAE) - nim considers all overload candidates at once in `pickBestCandidate` https://github.com/nim-lang/Nim/blob/devel/compiler/semcall.nim#L76 that iterates through all overloads. So it is functionally similar, since you can write `[T: not proc]` and `[T]`, and it would choose by going through alternatives↵(@konsumlamm)
[23:57:22] <FromDiscord> <haxscramper> Though it is mostly terminological difference I suppose
