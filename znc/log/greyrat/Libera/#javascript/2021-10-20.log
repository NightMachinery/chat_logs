[00:02:00] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:05:14] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[00:05:50] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[00:06:45] <fakuve> sheetjs: sorry to bother you again , but do you think this document has included the CDN properly? https://hastebin.com/himunuvuva
[00:06:59] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[00:07:01] <fakuve> Line 35
[00:07:23] <fakuve> But then I don't know if I need to `import sync from ''` thatone is failing
[00:08:50] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:09:05] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 258 seconds)
[00:09:46] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[00:10:25] <fakuve> oh no sheetjs has fallen
[00:11:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:14:47] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[00:16:10] *** Quits: y0shi_ (~lizzin@065-190-009-253.inf.spectrum.com) (Ping timeout: 260 seconds)
[00:16:11] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:2436:4427:7a2e:db73)
[00:16:47] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:2436:4427:7a2e:db73) (Client Quit)
[00:18:36] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:5ab0:35ff:fe81:99ae) (Quit: WeeChat 3.3)
[00:19:50] *** Joins: Rockwood_ (~Rocky@user/rocky)
[00:22:42] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[00:23:08] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[00:27:02] *** Quits: thetoloachekid (~ttk@189.147.235.36) (Read error: No route to host)
[00:29:17] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:32:11] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 264 seconds)
[00:33:37] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 258 seconds)
[00:34:50] *** Quits: peterhil (~peterhil@mobile-access-56734e-227.dhcp.inet.fi) (Ping timeout: 260 seconds)
[00:34:53] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 264 seconds)
[00:35:15] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[00:36:14] *** Joins: pluri (~pluri@user/pluri)
[00:36:45] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[00:37:30] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[00:37:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:38:18] *** Joins: Moyst (~moyst@user/moyst)
[00:39:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:40:49] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:41:31] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:44:38] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 260 seconds)
[00:47:11] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 264 seconds)
[00:47:17] *** Joins: nomic (~nomic@185.217.117.204)
[00:52:25] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:8596:7a93:8b14:d5ad)
[00:55:42] *** Joins: Junxter (~Junxter@114.221.230.117)
[00:56:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[00:56:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:58:26] <banana_> ahoy
[01:01:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[01:02:00] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:03:05] *** KDev2 is now known as KDev
[01:04:08] *** Joins: y0shi (~lizzin@216.63.184.125)
[01:04:50] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:06:21] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[01:06:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[01:08:25] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:10:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[01:13:14] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:18:34] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[01:19:11] *** Joins: pavonia (~user@user/siracusa)
[01:19:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:23:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:23:22] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[01:24:30] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[01:25:10] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:26:38] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[01:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:38] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:30:53] *** Joins: Enissay (~Enissay@user/enissay)
[01:31:10] *** Joins: jess (~jess@libera/staff/jess)
[01:33:10] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 260 seconds)
[01:34:30] *** Quits: federico_it (~textual@176.206.87.127) (Quit: Textual IRC Client: www.textualapp.com)
[01:35:48] *** Quits: y0shi (~lizzin@216.63.184.125) (Quit: leaving)
[01:36:22] *** Joins: incognito (~relativit@user/incognito)
[01:39:48] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:52:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:56:29] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:08:52] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[02:09:46] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:10:19] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[02:14:18] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:5c67:63a4:662e:3750)
[02:14:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:16:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:19:35] *** Quits: haniaF (~haniaF@79.191.106.4.ipv4.supernova.orange.pl) (Ping timeout: 264 seconds)
[02:22:42] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:25:05] *** Joins: haniaF (~haniaF@79.191.104.229.ipv4.supernova.orange.pl)
[02:27:47] <sheetjs> oy
[02:28:27] <seed0> oy vey
[02:28:43] *** Quits: ThePendulum (~znc@37.139.2.240) (Ping timeout: 252 seconds)
[02:29:11] *** Quits: davve (davve@bsd.douchedata.com) (Ping timeout: 264 seconds)
[02:29:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[02:30:17] *** Joins: de-facto (~de-facto@user/de-facto)
[02:30:24] <ljharb> zerothule: what's the package
[02:32:16] *** ChanServ sets mode: +o litharge
[02:32:17] *** litharge sets mode: -bo *!*@copyfree/advocate/tusko litharge
[02:32:48] *** Quits: pizdets_ (~pizdets@183.182.114.223) (Ping timeout: 250 seconds)
[02:34:13] *** Joins: pizdets (~pizdets@183.182.111.121)
[02:34:30] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:35:53] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[02:36:15] *** Joins: onosendi (~onosendi@user/onosendi)
[02:37:44] <onosendi> Anyone have any experience with Jest and Knex?
[02:38:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[02:38:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:41:22] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:42:02] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-c891-1706-dd95-ccc2.res6.spectrum.com)
[02:42:35] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:43:01] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:44:04] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[02:44:06] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[02:44:06] <AJTJ> would be great if someone could help me with a coding problem I got at an interview recently
[02:44:16] <AJTJ> not really sure what the correct solution would be
[02:44:25] <AJTJ> or if I should have asked more questions
[02:44:26] <AJTJ> https://gist.github.com/AJTJ/e4dc65a7e3a81341ee239a1969570f8d
[02:46:41] <onosendi> AJTJ: What role did you apply for?
[02:47:03] <AJTJ> onosendi: backend/fullstack dev
[02:48:11] <AJTJ> I feel like the sliding-window technique + the memoization makes sense, but it still feels innefficient
[02:48:45] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:48:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:49:25] <pavonia> I don't understand how they come to that result list
[02:49:44] <AJTJ> pavonia: you mean in the instructions?
[02:49:49] <pavonia> Yes
[02:50:09] <pavonia> Why is there no "N" for example?
[02:50:26] <AJTJ> I think that's why they say "amongst other results"
[02:50:41] <pavonia> Oh oops
[02:50:54] <sheetjs> use recursion
[02:51:42] <AJTJ> sheetjs: I was thinking that too, but how?
[02:51:48] *** Gustavo6046_ is now known as Gustavo6046
[02:51:53] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:53:19] <sheetjs> sticking with "produce_substrings"
[02:53:23] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:41] <sheetjs> you pick the first conversion
[02:53:47] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[02:54:01] <sheetjs> "1" => ["A", "B", "C"]
[02:54:21] <sheetjs> and combine in a cartesian product with produce_substrings("23")
[02:54:41] <sheetjs> "12" => ["X"], cartesian product with produce_substrings("3")
[02:54:56] <sheetjs> and "123" => ["M", "N"] cartesian product with produce_substrings("")
[02:55:17] <sheetjs> so the actual loop is
[02:55:28] <AJTJ> sheetjs: can you create a gist?
[02:55:34] <AJTJ> for clarity
[02:57:12] <AJTJ> appreciate it
[02:57:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[02:57:53] <sheetjs> you can figure it out yourself :)
[02:57:59] <sheetjs> the key observation is
[02:58:10] <sheetjs> the conversion starts with some prefix
[02:58:35] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[02:58:36] <onosendi> AJTJ: Was this homework, or whiteboarding?
[02:58:40] <sheetjs> to generate the prefixes, Array.from({length: str.length - 1}. (_,i) => str.slice(0, i+1))
[02:58:50] <sheetjs> n> var str = "123"; Array.from({length: str.length - 1}. (_,i) => str.slice(0, i+1))
[02:58:51] <jellobot> (fail) SyntaxError: Unexpected token '('
[02:58:56] <sheetjs> n> var str = "123"; Array.from({length: str.length - 1}, (_,i) => str.slice(0, i+1))
[02:58:57] <jellobot> (okay) [ '1', '12' ]
[02:59:03] <sheetjs> n> var str = "123"; Array.from({length: str.length}, (_,i) => str.slice(0, i+1))
[02:59:04] <jellobot> (okay) [ '1', '12', '123' ]
[03:00:13] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[03:00:56] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[03:01:17] *** Joins: ThePendulum (~znc@37.139.2.240)
[03:01:38] *** Joins: davve (davve@bsd.douchedata.com)
[03:02:03] <AJTJ> sheetjs: looking into this
[03:02:38] <AJTJ> onosendi: whiteboarding
[03:03:04] <onosendi> AJTJ: ouch
[03:03:48] <sheetjs> const prod = (a: string[], b: string[]): string[] => a.map(x => b.map(y => x+y));
[03:05:34] <sheetjs> const doit = (str: string): string[] => { if(!str) return [""]; var out = []; for(let i = 1; i < str.length; ++i) if(conversions[i]) out = out.concat(prod(conversions[i], doit(str.slice(i)))); return out; };
[03:05:38] <sheetjs> something like that
[03:07:59] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[03:08:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:10:32] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[03:11:11] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[03:11:28] *** Quits: konrados (~konrados@user-5-173-136-173.play-internet.pl) (Ping timeout: 252 seconds)
[03:12:41] *** Joins: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-2513-9a5f-8cae-1087.res6.spectrum.com)
[03:13:02] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 260 seconds)
[03:15:50] *** Joins: rundown (~eb0t@90.199.166.206)
[03:16:35] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-c891-1706-dd95-ccc2.res6.spectrum.com) (Ping timeout: 264 seconds)
[03:17:30] <AJTJ_> sheetjs: I'm unable to get your code to work for some reason, something to do with prod
[03:17:49] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[03:18:51] <sheetjs> oh its returning an array of arrays
[03:19:06] <AJTJ_> yep
[03:19:35] <sheetjs> const prod = (a: string[], b: string[]): string[] => ([] as string[]).concat.apply([], a.map(x => b.map(y => x+y)))
[03:22:35] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:5c67:63a4:662e:3750) (Ping timeout: 264 seconds)
[03:23:01] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 245 seconds)
[03:24:14] <ThePendulum> maps allowed https://www.geoguessr.com/challenge/90UpwNdwpjqu2ait
[03:24:58] <sheetjs> AJTJ_: https://gist.github.com/SheetJSDev/e737c02415d494f50ed146dcea3695de
[03:26:12] <AJTJ_> sheetjs:
[03:26:14] <AJTJ_> nicely done
[03:26:42] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[03:28:26] <AJTJ_> I'm studying your response
[03:28:28] <AJTJ_> sheetjs:
[03:29:22] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:29:50] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 260 seconds)
[03:30:08] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:30:37] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:38:44] <AJTJ_> sheetjs: this works if we are no longer keeping the single and double character permutations
[03:39:05] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[03:39:07] <sheetjs> that was the point
[03:39:49] <AJTJ_> I bet I could tweak it to include all the possible permutations
[03:41:36] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:41:36] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:41:36] *** Joins: wroathe (~wroathe@user/wroathe)
[03:41:40] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[03:43:25] <AJTJ_> sheetjs: how's this?
[03:43:26] <AJTJ_> https://gist.github.com/AJTJ/66e9d7823c9a02eb527708039f6fbfe8
[03:43:36] <AJTJ_> I also created variable names for my own sanity
[03:45:07] <AJTJ_> what a challenging problem
[03:45:11] <AJTJ_> thank you for your help hon that
[03:45:39] *** Joins: konrados (~konrados@37.248.253.93)
[03:45:55] <AJTJ_> I see now that I wasn't that far off, but your recursive method really made a lot of sense
[03:46:52] <AJTJ_> memoization wasn't useful/necessary tho
[03:49:12] *** lmat is now known as ic555
[03:49:18] *** ic555 is now known as lmat
[03:49:48] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[03:50:54] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[03:53:47] *** Joins: Axy (~Axy@user/axy)
[03:56:27] *** Joins: onosendi (~onosendi@user/onosendi)
[04:01:00] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 258 seconds)
[04:03:41] *** Joins: hax (~hax@69.165.175.67)
[04:03:42] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[04:03:42] *** Joins: hax (~hax@user/hax)
[04:03:46] *** Joins: dsrt^ (~dsrt@68.101.53.15)
[04:06:08] *** Joins: morg_ (~Morg@d4-50-217-204.clv.wideopenwest.com)
[04:09:29] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[04:12:30] *** Quits: dr_leviathan (~dr_leviat@199-83-221-152.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[04:15:03] *** Quits: morg_ (~Morg@d4-50-217-204.clv.wideopenwest.com) (Changing host)
[04:15:03] *** Joins: morg_ (~Morg@user/morg/x-6403548)
[04:15:18] *** Parts: morg_ (~Morg@user/morg/x-6403548) (WeeChat 3.3)
[04:15:23] *** Joins: morg_ (~Morg@user/morg/x-6403548)
[04:17:35] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-e8a9-eefa-d50a-f29c.res6.spectrum.com)
[04:21:23] *** Quits: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-2513-9a5f-8cae-1087.res6.spectrum.com) (Ping timeout: 264 seconds)
[04:23:59] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:24:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:26:46] *** Gustavo6046_ is now known as Gustavo6046
[04:27:41] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:29:27] *** Joins: Carbone5 (~Carbone5@ool-44c63532.dyn.optonline.net)
[04:34:26] *** Joins: onosendi (~onosendi@user/onosendi)
[04:35:38] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[04:37:52] *** Joins: jazzy (~jaziz@user/jaziz)
[04:38:57] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 258 seconds)
[04:39:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[04:40:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[04:40:31] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 245 seconds)
[04:41:12] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[04:46:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:47:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[04:49:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:49:26] *** Gustavo6046_ is now known as Gustavo6046
[04:50:56] *** Quits: Carbone5 (~Carbone5@ool-44c63532.dyn.optonline.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:54:43] *** Quits: realies (~realies@user/realies) (Ping timeout: 265 seconds)
[04:55:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[04:55:59] *** Joins: de-facto (~de-facto@user/de-facto)
[04:56:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:56:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:56:32] *** Joins: wroathe (~wroathe@user/wroathe)
[04:58:13] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:58:53] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 258 seconds)
[05:00:37] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[05:00:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[05:00:53] *** Joins: de-facto (~de-facto@user/de-facto)
[05:01:43] *** Joins: realies (~realies@user/realies)
[05:02:23] *** Quits: realies (~realies@user/realies) (Client Quit)
[05:02:43] *** Joins: realies (~realies@user/realies)
[05:06:03] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:06:54] *** Parts: morg_ (~Morg@user/morg/x-6403548) (WeeChat 3.3)
[05:07:47] *** Quits: realies (~realies@user/realies) (Quit: ~)
[05:08:06] *** Joins: realies (~realies@user/realies)
[05:08:52] *** Quits: realies (~realies@user/realies) (Client Quit)
[05:09:11] *** Joins: realies (~realies@user/realies)
[05:09:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[05:10:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:12:53] *** Joins: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-4c3e-ee16-b711-7fa4.res6.spectrum.com)
[05:14:20] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:15:12] *** Quits: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:15:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[05:16:35] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-e8a9-eefa-d50a-f29c.res6.spectrum.com) (Ping timeout: 264 seconds)
[05:16:52] *** Joins: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:17:52] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-e47a-eb5c-9144-3906.res6.spectrum.com)
[05:18:01] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[05:19:49] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2cb6:e8b8:9f09:7328) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:20:01] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:21:23] *** Quits: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-4c3e-ee16-b711-7fa4.res6.spectrum.com) (Ping timeout: 264 seconds)
[05:22:22] *** Joins: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my)
[05:25:08] *** Joins: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-0dbd-b14e-f19e-85bb.res6.spectrum.com)
[05:27:41] *** Joins: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[05:28:35] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-e47a-eb5c-9144-3906.res6.spectrum.com) (Ping timeout: 264 seconds)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:32:22] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:39:14] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[05:39:26] *** Joins: realies4 (~realies@user/realies)
[05:39:54] *** Quits: realies (~realies@user/realies) (Ping timeout: 258 seconds)
[05:39:54] *** realies4 is now known as realies
[05:43:57] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:44:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[05:47:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:05:58] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 258 seconds)
[06:06:07] *** Quits: nomic (~nomic@185.217.117.204) (Quit: Leaving)
[06:06:26] *** Joins: nomic (~nomic@185.217.117.204)
[06:06:55] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Quit: junktext_)
[06:07:06] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[06:08:11] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 264 seconds)
[06:12:26] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[06:21:46] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 245 seconds)
[06:25:22] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:27:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:28:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:29:13] *** Quits: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:31:53] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:33:24] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049)
[06:44:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:44:50] *** Joins: incognito (~relativit@user/incognito)
[06:45:49] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:47:53] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-f140-0adf-1f6f-1116.res6.spectrum.com)
[06:49:14] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[06:51:59] *** Quits: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-0dbd-b14e-f19e-85bb.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:52:26] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[06:55:29] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[06:59:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:59:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:00:23] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[07:01:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:01:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:02:07] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:02:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:05:17] <rustyshackleford> ave you ever worked with FIDO/Webauthn?
[07:05:30] *** Joins: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com)
[07:05:33] <rustyshackleford> I wonder how do you the signing operations, creating keys, and so on
[07:05:39] <rustyshackleford> the spec leaves a lot for you to figure eout
[07:05:49] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 252 seconds)
[07:08:14] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[07:09:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:09:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:10:55] *** Joins: Rockwood (~Rocky@user/rocky)
[07:12:17] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 258 seconds)
[07:15:06] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049) (Ping timeout: 245 seconds)
[07:15:07] *** Joins: pmercado (~pmercado@186.107.62.14)
[07:16:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:17:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:19:22] <queue[m]> https://dpaste.com/CSHK23JF8 how do i get the stars out
[07:19:49] <queue[m]> sorry wrong channel
[07:19:57] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:29:28] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049)
[07:33:52] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:36:25] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[07:47:11] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:47:11] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:47:11] *** Joins: wroathe (~wroathe@user/wroathe)
[07:52:36] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 245 seconds)
[07:55:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[07:59:14] *** Joins: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-d16e-0fbd-daa9-10de.res6.spectrum.com)
[08:00:59] *** Quits: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com) (Ping timeout: 264 seconds)
[08:02:47] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-f140-0adf-1f6f-1116.res6.spectrum.com) (Ping timeout: 264 seconds)
[08:06:15] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[08:07:06] *** Joins: D4mned (~Dmnd@212.101.251.238)
[08:08:19] *** Joins: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com)
[08:09:46] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-7cb0-80a6-e6ae-b283.res6.spectrum.com)
[08:12:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:12:59] *** Quits: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-d16e-0fbd-daa9-10de.res6.spectrum.com) (Ping timeout: 264 seconds)
[08:13:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[08:16:12] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:19:50] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:19:51] *** Joins: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-0c2a-a0bb-ef64-886b.res6.spectrum.com)
[08:22:54] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[08:23:01] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-7cb0-80a6-e6ae-b283.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:24:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[08:26:14] *** Joins: AJTJ (~AJTJ@2603-80a0-0f01-461a-99ad-c65a-d9e1-f522.res6.spectrum.com)
[08:26:25] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:28:51] *** Quits: AJTJ_ (~AJTJ@2603-80a0-0f01-461a-0c2a-a0bb-ef64-886b.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:32:02] *** Quits: nomic (~nomic@185.217.117.204) (Quit: Leaving)
[08:33:06] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It)
[08:33:13] <Jonno_FTW> in nightwatch, is it possible to just get a list of failed assertions with no tracebacks?
[08:34:35] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049) (Ping timeout: 264 seconds)
[08:36:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[08:37:42] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049)
[08:41:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:41:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:41:08] *** Joins: wroathe (~wroathe@user/wroathe)
[08:45:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:45:59] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049) (Ping timeout: 264 seconds)
[08:49:58] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 260 seconds)
[08:50:59] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049)
[08:52:21] *** Joins: Moyst_ (~moyst@user/moyst)
[08:54:07] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[08:54:10] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 260 seconds)
[08:54:43] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 252 seconds)
[08:54:54] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[08:55:09] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:58:35] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049) (Ping timeout: 264 seconds)
[09:02:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:02:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:02:12] *** Joins: wroathe (~wroathe@user/wroathe)
[09:04:36] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049)
[09:05:28] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:06:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[09:08:07] *** Joins: hamilton5 (~iamfive@user/ham5)
[09:10:07] *** Quits: ham5 (~iamfive@user/ham5) (Ping timeout: 252 seconds)
[09:10:07] *** hamilton5 is now known as ham5
[09:10:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:10:35] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:becf:d7a2:5a6c:c650) (Ping timeout: 264 seconds)
[09:10:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:11:35] *** Quits: tonelo (~tonelo@host-79-12-238-8.retail.telecomitalia.it) (Quit: Connection closed)
[09:12:37] *** Joins: mexen (uid495612@user/mexen)
[09:13:26] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:fd3c:6146:607c:a049) (Ping timeout: 245 seconds)
[09:22:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[09:22:14] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:53bf:994a:8cf5:bae1)
[09:23:30] *** Joins: salad (~cucumber@86.121.64.41)
[09:25:51] *** Joins: mei (~mei@user/mei)
[09:30:56] *** Joins: hamilton5 (~iamfive@user/ham5)
[09:31:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:32:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:32:54] *** Quits: ham5 (~iamfive@user/ham5) (Ping timeout: 260 seconds)
[09:32:54] *** hamilton5 is now known as ham5
[09:37:03] *** Joins: de-facto_ (~de-facto@user/de-facto)
[09:37:57] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[09:39:55] *** de-facto_ is now known as de-facto
[09:41:51] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[09:43:34] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:47:37] *** Quits: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[09:48:32] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[09:49:33] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[09:51:46] *** Quits: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com) (Ping timeout: 245 seconds)
[09:57:59] *** Joins: stenno (~stenno@user/stenno)
[10:00:52] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[10:01:26] *** Quits: AJTJ (~AJTJ@2603-80a0-0f01-461a-99ad-c65a-d9e1-f522.res6.spectrum.com) (Quit: Leaving...)
[10:02:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[10:04:26] *** Joins: pluri (~pluri@user/pluri)
[10:04:48] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[10:07:09] *** Joins: silly (~silly@user/silly)
[10:17:17] *** Joins: Lazenca (Lazenca@user/lazenca)
[10:17:31] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:20:10] *** gggpkm_ is now known as gggpkm
[10:20:25] <gggpkm> how to open Tex in current tab?
[10:21:22] <ljharb> gggpkm: wrong channel?
[10:21:36] <gggpkm> oops
[10:24:42] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:26:07] *** Joins: happymeal (~happymeal@user/happymeal)
[10:27:25] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:8596:7a93:8b14:d5ad) (Quit: you are feeeling very sleeeeeepyy......)
[10:27:32] *** Joins: diophantoz (~diophanto@user/diophantoz)
[10:28:04] *** Joins: seanBE_ (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[10:28:11] *** Joins: hamess_ (~hamess@user/hamess)
[10:28:16] *** Joins: rosseaux_ (~BeRo@2a00:1828:2000:859::2)
[10:28:23] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[10:28:27] *** Joins: brentaarnold_ (~brentaarn@32.132.115.46)
[10:28:49] *** Joins: Exagone313 (exa@irc.moe)
[10:28:52] *** Joins: WizJin_ (~z0rbaznc@78.141.221.79)
[10:29:05] *** Joins: mei (~mei@user/mei)
[10:29:42] *** Joins: octav1a (~quassel@173.195.145.98)
[10:30:14] *** Joins: thyk2 (~thykka@2a01:4f8:c0c:e335::1)
[10:30:20] *** Joins: eqw_ (~eqw@31.134.178.99)
[10:30:29] *** Joins: Sir_Burns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[10:30:34] *** Joins: supercool (bigode@2600:3c01::f03c:91ff:fee5:c75e)
[10:30:56] *** Joins: kali1 (~kali@user/msfninja)
[10:33:36] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[10:34:24] *** Joins: Solokill (~JKM@vps-85.201.170.217.stwvps.net)
[10:34:48] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[10:35:46] *** Joins: stenno (~stenno@user/stenno)
[10:37:00] *** Quits: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my) (Quit: Bye)
[10:37:27] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:38:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:39:15] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a58e:ea94:dbd:df07)
[10:39:50] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:a5f6:b502:565b:9aff) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: WizJin (~z0rbaznc@78.141.221.79) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Exa (exa@irc.moe) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: pixel[m] (~pixelspac@2001:470:69fc:105::fd73) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: happymeal` (~happymeal@user/happymeal) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: hamess (~hamess@user/hamess) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 260 seconds)
[10:39:50] *** Exagone313 is now known as Exa
[10:39:50] *** Quits: Jackal-o-lantern (~quassel@173.195.145.98) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: bigode (bigode@2600:3c01::f03c:91ff:fee5:c75e) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: thykka (~thykka@2a01:4f8:c0c:e335::1) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: msfninja (~kali@user/msfninja) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Pilum (~JKM@user/pilum) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: arash (arash@thinks.life.is-a.beauty) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 615 seconds)
[10:39:50] *** brentaarnold_ is now known as brentaarnold
[10:39:51] *** rosseaux_ is now known as rosseaux
[10:40:02] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:40:08] *** Joins: laris (undead@37.221.209.36)
[10:41:21] *** Joins: hacks (~hax@69.165.175.67)
[10:41:22] *** Quits: hacks (~hax@69.165.175.67) (Changing host)
[10:41:22] *** Joins: hacks (~hax@user/hax)
[10:41:45] *** Joins: niko (~niko@libera/staff/niko)
[10:41:51] *** thyk2 is now known as thykka
[10:41:57] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:42:38] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[10:42:59] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[10:43:38] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 246 seconds)
[10:43:42] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 265 seconds)
[10:44:05] *** Parts: Solokill (~JKM@vps-85.201.170.217.stwvps.net) ()
[10:44:10] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[10:44:10] *** Quits: hax (~hax@user/hax) (Ping timeout: 265 seconds)
[10:44:29] *** arash- is now known as arash
[10:44:55] <sickdyd> weird cloudflare issue: when accessing the website from Chrome it return 520 error, it works fine on FF. I suspect Chrome caches an IP that cloudflare took down. Any way to fix this
[10:44:59] <sickdyd> ?
[10:45:10] *** Joins: Pilum (~JKM@user/pilum)
[10:45:12] *** Joins: pixel[m] (~pixelspac@2001:470:69fc:105::fd73)
[10:45:15] <sickdyd> By checking the headers FF and Chrome are using two different IPs
[10:46:50] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:48:11] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:50:22] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[10:55:22] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:55:46] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 258 seconds)
[10:58:54] *** Joins: pluri (~pluri@user/pluri)
[10:59:00] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:45] *** kali1 is now known as msfninja
[11:03:35] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:08:02] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 258 seconds)
[11:09:44] *** Joins: kogepan (~kogepan@user/kogepan)
[11:15:03] *** Joins: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my)
[11:16:10] <Cork> sickdyd: try resetting session cookies
[11:20:02] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[11:20:02] *** Joins: mrdata_ (~mrdata@user/mrdata)
[11:20:28] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[11:20:59] *** Joins: de-facto (~de-facto@user/de-facto)
[11:29:11] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:31:15] *** Joins: Intelo (~Intelo@88.244.90.187)
[11:31:21] <Intelo> Hi
[11:31:38] <Intelo> Should I use useReducer instead of redux OR useState?
[11:32:12] <sickdyd> Cork: it was the cookies, turns out that WP plugin CleanTalk adds too many cookies which break the request to WP
[11:32:32] <thykka> quality plugin xD
[11:32:51] <sickdyd> yeah, I asked if we can replace it and they said they just bought it...
[11:33:02] <thykka> sunk cost fallacy
[11:33:40] <thykka> they should ask for a refund
[11:33:48] <sickdyd> yeah, next step contact them anyway
[11:33:58] <thykka> if that's not possible, move on and make better decisions in the future
[11:34:05] <sickdyd> we potentially have customers with that error
[11:34:23] <sickdyd> was a fun ride though
[11:35:00] *** mrdata_ is now known as mrdata
[11:35:39] <Cork> wp plugins tend to be really quality software as far as i've seen...
[11:36:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[11:37:11] <Cork> found aiowps on a site a few days ago, it stores its entire configuration in a sql field as serialized php array
[11:37:17] <Cork> all 5M of it...
[11:37:25] <Cork> and fetches it for each page request
[11:37:30] <Cork> i see no problem there what so ever
[11:38:09] <Cork> and seriously a firewall written in php?!?
[11:39:17] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:42:05] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:340c:d22b:ab90:4585)
[11:42:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:16] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[11:44:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[11:44:53] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[11:45:20] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:47:51] *** Joins: derjanni (~textual@p508ee135.dip0.t-ipconnect.de)
[11:48:26] *** Quits: derjanni (~textual@p508ee135.dip0.t-ipconnect.de) (Client Quit)
[11:48:36] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:50:19] *** Joins: mat001 (~mat001@213.143.69.121)
[11:51:40] *** Joins: mat001_ (~mat001@213.143.69.121)
[11:54:46] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 260 seconds)
[11:55:52] *** Joins: incognito (~relativit@user/incognito)
[11:58:14] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[11:58:32] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:03:23] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[12:04:03] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:04:29] <undefined_bob> lol
[12:05:10] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:08:38] *** Quits: D4mned (~Dmnd@212.101.251.238) (Quit: Leaving)
[12:13:26] <deniska> Cork: mysql is the most high quality nosql database around, really no problem here :)
[12:15:07] <Cork> ya, just like a site i was asked to take over maintanence over about 7 years ago, they use .txt files in the web folder for its data storage... >_<
[12:15:17] <Cork> answer: nooooo
[12:17:00] <undefined_bob> at least we use .csv files in our web folder
[12:17:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:23:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[12:25:28] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 258 seconds)
[12:26:44] <deniska> Cork: .txt files are easy to inspect, easy to edit, easy to copy, easy to backup, easy to restore
[12:27:03] <deniska> require some care for writing atomically to
[12:27:44] <stenno> sqlite?
[12:31:07] <stenno> see the matrix, read sqlite binary files
[12:31:20] <deniska> sqlite is nice, but then it requires some more specialized tooling to inspect
[12:31:38] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[12:31:40] <deniska> but handles atomic writes for you, and is even easier to backup and restore being a single file
[12:31:46] <stenno> yep
[12:33:30] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[12:33:42] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[12:36:41] *** Quits: Junxter (~Junxter@114.221.230.117) (Read error: Connection reset by peer)
[12:36:55] *** Joins: hamilton5 (iamfive@user/ham5)
[12:37:00] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[12:37:00] *** Joins: happymeal` (~happymeal@user/happymeal)
[12:37:02] *** Joins: Junxter (~Junxter@114.221.230.117)
[12:37:51] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[12:39:34] *** Quits: happymeal (~happymeal@user/happymeal) (Ping timeout: 260 seconds)
[12:39:34] *** Quits: ham5 (~iamfive@user/ham5) (Ping timeout: 260 seconds)
[12:39:36] *** hamilton5 is now known as ham5
[12:39:40] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[12:40:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[12:40:26] *** Joins: Axy (~Axy@user/axy)
[12:40:48] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 258 seconds)
[12:41:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[12:41:21] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 245 seconds)
[12:43:44] *** Joins: pluri (~pluri@user/pluri)
[12:50:25] <Cork> deniska: and easy to corrupt when you modify it on multiple simultanious connections
[12:50:55] <Cork> there solution was to just have a backup copy created every night and copy it back when it broke
[12:52:36] <deniska> Cork: you mean txt files? Yeah, as I said, care needed for atomic writes :)
[12:52:54] <deniska> but so easy to backup and restore :P
[12:53:04] <Cork> ya, atomic writes with multiple separate processes isn't really possible though
[13:02:01] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[13:02:20] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[13:06:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:07:17] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[13:08:26] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[13:11:29] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[13:13:10] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[13:13:28] *** Joins: stenno (~stenno@user/stenno)
[13:17:05] *** Joins: diophantoz (~diophanto@user/diophantoz)
[13:18:47] <deniska> well, the simplest way to write to a file atomically is to write to a temp file, and then do a rename (move within filesystem boundaries)
[13:19:10] <deniska> but then you still lose one of the changes if two processes try to rewrite the file at the same time
[13:19:22] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:19:36] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[13:20:00] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:21:06] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[13:23:05] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[13:23:18] *** Quits: rveerman (~rene@2001:980:ed77:1:2946:35cb:be6d:d275) (Quit: WeeChat 2.8)
[13:23:56] *** Joins: chao (~stenno@user/stenno)
[13:24:29] *** stenno is now known as Guest1315
[13:24:29] *** Quits: Guest1315 (~stenno@user/stenno) (Killed (silver.libera.chat (Nickname regained by services)))
[13:24:30] *** chao is now known as stenno
[13:26:14] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[13:28:48] <Maxdamantus> You can come up with a simple locking mechanism on top of that. git just creates a file with a well-known name that indicates that a lock is held. The second process will try to create the same lock file but fail because it already exists, so it will continue trying until timeout.
[13:30:13] <Maxdamantus> though that mechanism has a fallback to the user, so if something crashed while the lock was held, you'll just get an error on timeout when the next thing tries to acquire the lock, and the user is meant manually remove the lock file after making sure that there is no active process.
[13:30:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[13:31:23] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[13:31:46] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[13:32:17] <deniska> great, let's use git as a website data store :)
[13:32:29] <Maxdamantus> I've thought about that before.
[13:35:50] <jaawerth> on unix systems you can use tools like flock (bsd-style locks) and lockf (POSIX locks) for system-supported advisory locks. sqlite itself IIRC uses POSIX locks
[13:37:06] <jaawerth> well, presumably it uses the equivalent syscalls on windows and I have no idea how or whether there are analogous windows cli controls
[13:38:09] <jaawerth> there's also fsync for ensuring writes aren't buffered, which you need to do when doing the write-to-tmp-file-and-then-move-it trick, since otherwise you can't guarantee the file was *actually* written
[13:38:24] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[13:39:48] <Maxdamantus> I don't think that's a correct use of fsync.
[13:40:29] <Maxdamantus> You'd use fsync after the replace, not before, but you only need to use fsync when you're wanting to communicate to something external that the data has been written (is durable).
[13:41:26] <Maxdamantus> I suspect fsync is often misused as a way to unnecessarily force disk writes.
[13:41:48] <jaawerth> I didn't say before though? You're write that it's easy to misuse though
[13:41:51] <jaawerth> *right
[13:42:20] <Maxdamantus> Well, durability is separate from atomicity.
[13:43:00] <Maxdamantus> so unless you're looking to communicate durability (as part of some sort of happens-before relationship with something external), fsync shouldn't be necessary.
[13:43:39] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[13:44:05] <jaawerth> there's, like, a bunch of literature out there on fsync and atomic writes, including the sqlite docs
[13:44:48] *** Joins: voltage_ (voltage@user/voltage)
[13:44:56] <Maxdamantus> Right, because sqlite probably wants to make things durable by default (so it can claim ACID compliance).
[13:45:12] <jaawerth> yeah. I'm not saying it's a perfect solution but I think it's worth mentioning as an option
[13:45:13] <Maxdamantus> but the atomic rename trick can be used separately.
[13:45:43] <Maxdamantus> you can do multiple atomic renames without any fsync, and rely on the user observing durability later (eg, by calling fsync themselves)
[13:45:46] <jaawerth> you can still have the unflushed buffers issue in the event of a power loss etc though, even after you've finished the operation
[13:45:55] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 260 seconds)
[13:45:57] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:46:52] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 265 seconds)
[13:46:54] <jaawerth> that's separate from the concurrency issue ofc
[13:47:23] *** Joins: dayday (uid520582@id-520582.hampstead.irccloud.com)
[13:47:32] <jaawerth> but these things are worth at least mentioning to folks who are tackling these problems so they can do further reading, IMO
[13:48:35] <Maxdamantus> `git commit` doesn't seem to do any fsync
[13:49:02] <Maxdamantus> (it uses the atomic rename trick though, as well as the file-based lock I described)
[13:49:51] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[13:49:51] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6de4:23af:39fb:f3d7)
[13:50:32] <fweht> why do i get the error `Failed to execute 'getImageData' on 'CanvasRenderingContext2D': The canvas has been tainted by cross-origin data.`, the code runs on codepen and the image is hosted on codepen, shouldnt that be same origin?
[13:51:35] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[13:52:10] <jaawerth> I believe git at least does it when you g`git add`, not sure about commit though. But I'm not super familiar with its internal impl, I just remember reading about people running into fsync errors when using it
[13:52:41] <Maxdamantus> I'd be surprised if it's any different, but I'll try in a minute.
[13:53:33] <Alexendoo> fweht: The pen output is probably running on a subdomain or something
[13:53:44] <Alexendoo> Or a different domain entirely
[13:53:52] <fweht> Alexendoo: yikes, you are correct!
[13:54:12] <fweht> :(   why am i even paying for codepen to host assets
[13:54:50] <Maxdamantus> Still no sync when doing `git add`
[13:55:22] <Maxdamantus> So completion of the git commands don't imply durability.
[13:55:45] <undefined_bob> I like codepen
[13:56:16] <Maxdamantus> It just means that if you run something like `git commit -a -m 'committed some stuff'`, then pull the power as soon as you see it's completed, when you reboot, your state might have rolled back.
[13:56:51] <fweht> undefined_bob: i also like it but stuff like stackblitz looks increasingly attractive to me (multiple files, full node.js, etc.)
[13:57:16] <undefined_bob> but I dont do git
[13:57:17] <jaawerth> yeah, you're right about that - I believe the fsync it uses is when doing packing, which makes sense since that's when you could run into trouble
[13:57:45] <jaawerth> but durability isi still important to consider alongside atomicity so I think it's worth bringing up
[13:57:57] <Maxdamantus> so you'll have to do the commit again. things should still be in a consistent state (either the state before or after the commit)
[13:58:20] <jaawerth> right, by the time you commit you've already got the data in the working tree anyway
[13:58:34] <Maxdamantus> Well, that still depends.
[13:58:55] <Maxdamantus> If you didn't do an fsync before the commit, maybe your file hasn't even been written to disk.
[13:59:29] <Maxdamantus> I suspect file editors are likely to do fsync on save, simply because the interactions there tend to be infrequent.
[13:59:51] *** Joins: incognito (~relativit@user/incognito)
[14:00:03] <Maxdamantus> I think vim does fsync, though I think I've noticed in the past that vim doesn't do atomic saves.
[14:01:43] <Maxdamantus> Yep, vim does fsync.
[14:01:47] *** Quits: danbak (~Daniel_Ba@84.215.176.70) (Quit: WeeChat 2.8)
[14:03:25] <jaawerth> it's an option; it's enabled by default in vim, but oddly not in nvim, I think because nvim will always do it under the particularly riskyscenarios
[14:04:12] *** Sir_Burns is now known as MrBurns
[14:04:58] <jaawerth> ah yeah, per `:h 'fsync'` nvim will always do it regardless of the fsync setting during CursorHold, `:preserve`, low power, or abnorrmal exit. makes sense
[14:05:07] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[14:06:38] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:09:50] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[14:12:34] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[14:13:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:13:33] <fweht> what does `Failed to execute 'putImageData' on 'CanvasRenderingContext2D': Overload resolution failed.` mean?  i just do `getImageData` followed by `putImageData` with the exact same data!
[14:14:34] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[14:14:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[14:19:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[14:19:44] *** Joins: pulse (~pulse@user/pulse)
[14:19:48] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[14:25:23] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[14:25:42] <ph88> why is 1.5 + 1.5 == 3  true ?  i would expect it not the be true due to float rounding errors
[14:25:43] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[14:25:58] <leduyquang753> 1,5 is perfectly representable in binary.
[14:27:40] <ph88> ye that's true, but why do other languages mess this up and javascript can do it ? that's my question
[14:29:01] <Maxdamantus> What languages mess it up? Are you sure you're not thinking of something involving `0.1`?
[14:29:33] <ph88> php -r 'echo 1.5 + 1.5 === 3 ? "true" : "false";'  -->  false
[14:29:38] <leduyquang753> `1.5 + 1.5 == 3` is true for anything that uses IEEE floating-point format.
[14:30:33] <ph88> https://www.php.net/manual/en/language.types.float.php   PHP typically uses the IEEE 754 double precision format
[14:31:06] <ph88> oh sorry i made an error in php by using the wrong comparison operator
[14:31:09] <ph88> thanks for help though
[14:31:49] <Alexendoo> ph88: === 3.0
[14:32:06] <ph88> thank you Alexendoo
[14:34:04] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:340c:d22b:ab90:4585) (Ping timeout: 252 seconds)
[14:36:10] *** Joins: incognito (~relativit@user/incognito)
[14:36:59] *** Quits: dsrt^ (~dsrt@68.101.53.15) (Ping timeout: 264 seconds)
[14:38:02] *** Joins: danbak (~Daniel_Ba@84.215.176.70)
[14:38:20] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:43:29] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:44:07] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[14:44:24] *** Joins: benni (~benni@ipbcc31487.dynamic.kabel-deutschland.de)
[14:47:47] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[14:48:59] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 264 seconds)
[14:49:20] <pagios> et getJwtToken = new Promise((resolve, reject) => {
[14:49:20] <pagios>     let t = await getIdTokenClaims();
[14:49:22] <pagios> is it not allowed to use await in a promise like this ?
[14:49:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[14:49:57] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 276 seconds)
[14:50:22] <fakuve> Hi guys , I just want to try to import a simple library (just to wrap my head around importing a library to a project) Do you recommend a simple library out there?
[14:50:42] *** Joins: Simplar (~Simplar@188.163.92.225)
[14:50:49] <Simplar> how do I get the power of bigint?
[14:50:59] <Maxdamantus> pagios: you can only use `await` in an async function, and your function is not an async function.
[14:51:14] <pagios> isnt a promise an async function?
[14:51:17] <pagios> how can i use that
[14:51:42] <Maxdamantus> pagios: you could just make it an async function, but it's going to uglily return an unused promise.
[14:52:23] <Maxdamantus> pagios: no. a promise is not a function, but that's not relevant. The function you're passing to the `Promise` constructor is not an async function, so you can't use `await` inside it.
[14:52:51] <pagios> got it
[14:52:59] <pagios> what would be a better way to do it ?
[14:53:00] <Maxdamantus> pagios: in general you shouldn't need to use the `Promise` constructor.
[14:53:07] <pagios> a prettier way i would say
[14:53:25] <Maxdamantus> pagios: you probably just want to use an immediately invoked async function.
[14:53:32] <pagios> Maxdamantus: i want to use the .then and take actions after the promise resolves and that promise needs to rely on an output from an async funct
[14:54:00] <Maxdamantus> const getJwtToken = async function(){ let t = await getIdTokenClaims(); return t.foo.bar; }();
[14:54:32] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[14:55:00] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:55:50] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[14:56:49] <pagios> the await here will block until it resolves and then the next line
[14:56:52] <pagios> return executes
[14:58:12] <Maxdamantus> I'd say it yields control from the function until it resolves, but not sure what terminology others typically use.
[14:59:25] <fakuve> Is this library properly loaded? https://hastebin.com/ovumefohoy
[15:00:17] <pagios> yiels = stop ?
[15:00:30] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[15:00:45] <fakuve> I see `Failed to load resource: net::ERR_FILE_NOT_FOUND` but at the same time I see some errors linking to the library itself (so it looks kind of loaded)
[15:01:32] <fakuve> I just don't understand when using a CDN do you need import statements such as `import sync from './css-animation-sync';
[15:01:40] <Maxdamantus> pagios: sure, stops temporarily, so the other work can be done instead.
[15:01:53] <Maxdamantus> s/\<the\>/that/
[15:01:57] <Maxdamantus> gtg
[15:02:47] <pagios> why do you prefer that approach vs the promise with an async function in it
[15:03:45] <Maxdamantus> Because you're meant to compose existing promises using `then` or `async`/`await`.
[15:04:14] <Maxdamantus> You only need to use the `Promise` constructor when creating some new primitive promise from something that is not already promise-based.
[15:05:09] <Maxdamantus> and when you construct such a primitive promise using the `Promise` constructor, you need to make sure you're creating it correctly. It's easy to do it incorrectly such that you will never call `resolve` or `reject`, and so the promise will never complete.
[15:06:12] <Maxdamantus> If you use `async`/`await` or `then`, you can't accidentally create a non-completing promise (unless you get a non-completing promise from elsewhere)
[15:07:38] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[15:08:10] <Maxdamantus> for example, `setTimeout` is not promise-based, and to make it promise-based you use the `Promise` constructor: function sleep(n){ return new Promise((resolve, reject) => { setTimeout(() => { resolve(); }, n); }); }
[15:09:15] <Maxdamantus> if you're just calling other functions that already return promises, you don't need to create one of these primitive promises (usually a tiny wrapper around a callback-based API)
[15:18:17] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:24:07] *** Joins: off^ (~off@68.101.53.15)
[15:26:38] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (Ping timeout: 260 seconds)
[15:27:09] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[15:29:31] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:33:05] *** Joins: gggpkm__ (~gggpkm@114.245.104.31)
[15:34:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[15:35:13] *** Joins: pmercado (~pmercado@186.107.62.14)
[15:35:27] *** Joins: stenno (~stenno@user/stenno)
[15:36:22] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[15:38:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:45:58] *** Quits: benni (~benni@ipbcc31487.dynamic.kabel-deutschland.de) (Quit: Client closed)
[15:53:11] *** Quits: off^ (~off@68.101.53.15) (Ping timeout: 264 seconds)
[15:53:51] <pagios>       if (typeof jwtToken !== "undefined" || jwtToken !== "null")  <-- this is always matching why ?
[15:55:11] <stenno> pagios: because the jwtToken is not a string "null" ?
[15:55:25] <pagios> i tried  === null or === undefined
[15:55:56] <stenno> you are asking if jwtToken is the string "null"
[15:56:00] <stenno> is that really what you want
[15:56:07] <silly> to match null AND undefined, == and != are fine
[15:56:19] <pagios> console.log is showing undefined and i want to check on this
[15:56:23] <stenno> n> typeof null
[15:56:24] <jellobot> (okay) 'object'
[15:56:42] <stenno> again, are you sure you want ot request if the jwtToken is the string 'null'?
[15:56:44] <stenno> i doubt it
[15:57:07] <pagios>   if (jwtToken == undefined || jwtToken == null)
[15:57:16] <pagios> yes
[15:57:23] <pagios> not string null
[15:57:30] <stenno> ok because thats what you did
[15:57:30] <pagios> if it is of type nul
[15:57:40] <stenno> thats why that is always true
[15:57:48] <stenno> because the jwtToken will not be the string "null"
[15:57:55] <pagios> ok i tried this   if (jwtToken == undefined || jwtToken == null)
[15:58:04] <pagios> still matching always
[15:58:23] <stenno> this the opposite of what you asked before
[15:58:39] <stenno> don't you want jwtToken !== undefined
[15:59:16] <pagios> my bad... need a break thanks
[16:00:23] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:00:34] <pagios>       if (jwtToken !== undefined || jwtToken !== null)
[16:00:35] <pagios> stenno:  it still matches
[16:00:50] <stenno> ok, so the jwtToken doesn't have one of those values
[16:00:54] <efdee> jwtToken !== undefined && jwtToken !== null
[16:00:58] <stenno> yaeah...
[16:01:00] <stenno> &&
[16:01:06] <pagios> right.. thank you
[16:01:55] <stenno> also note, there is a cool operator ?? now
[16:02:36] <stenno> pagios: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator
[16:02:48] <fakuve> Ok so I am in need of a brilliant mind that can transform this https://jsfiddle.net/d42apxv3/ into https://jsfiddle.net/rmgL5es9/ . Explained , in the second fiddle the buttons are not receiving the `click` `EventListener` due to they have a layer on top of it (screen) , is there any way to keep that layer graphically on there and still bypass the `click` events through it ?
[16:03:11] <stenno> there is actually
[16:03:15] <stenno> and it can be done with css
[16:03:24] <fakuve> Okay
[16:03:36] <stenno> pointer-events: none
[16:03:41] <stenno> https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements
[16:03:50] <fakuve> That is supernice really
[16:05:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:06:02] <stenno> not many people know that this is possible
[16:06:17] <stenno> i wonder if there are any accessibility concerns with this though
[16:07:27] <fakuve> stenno: that is the magic potion for me now
[16:07:29] <fakuve> Thanks!
[16:07:32] <stenno> np
[16:08:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[16:10:33] *** Joins: xiongxin (~quassel@119.123.103.160)
[16:13:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:13:48] *** Quits: Intelo (~Intelo@88.244.90.187) (Quit: Client closed)
[16:14:35] *** Joins: paule32 (~paule32@user/paule32)
[16:15:45] <fakuve> ok so I got the first attempt to synchronize CSS animations , by using an overlay (a little bit of a dirty hack) , lets see if I can apply this into a bigger project
[16:15:47] <fakuve> https://jsfiddle.net/tecvzhr2/
[16:16:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:17:00] *** Quits: xiongxin (~quassel@119.123.103.160) (Read error: Connection reset by peer)
[16:17:18] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[16:18:04] *** Joins: xiongxin (~quassel@119.123.100.49)
[16:22:51] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[16:26:09] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[16:28:30] *** Joins: de-facto (~de-facto@user/de-facto)
[16:30:06] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-1017-8ef5-a6b6-4f0d.res6.spectrum.com) (Ping timeout: 245 seconds)
[16:30:16] *** Joins: Naan (~Naan@user/naan)
[16:30:52] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[16:30:59] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 264 seconds)
[16:33:18] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[16:34:52] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[16:36:48] *** Joins: mei (~mei@user/mei)
[16:37:54] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:38:05] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[16:38:38] *** Joins: incognito (~relativit@user/incognito)
[16:39:10] <fakuve> Ok so , is there any JavaScript library that would take the dimensions of a rendered html element and will create an svg shape with that? Would be awesome
[16:39:39] *** Joins: thiras (~thiras@user/thiras)
[16:40:13] <stenno> unliekly
[16:40:26] <fakuve> :(
[16:40:42] <stenno> are you really sure that is what you want to do in the first place
[16:41:02] <stenno> at some point you should rather draw on a canvas than dealing with html elements
[16:41:54] <fakuve> Well I basically need layer `.screen` to get the shape of the buttons https://jsfiddle.net/xnt68739/
[16:42:15] <fakuve> So it doesnt blink the whole background but just the buttons
[16:43:35] *** Quits: konrados (~konrados@37.248.253.93) (Ping timeout: 264 seconds)
[16:45:22] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[16:45:46] <fweht> why does reading imagedata and then putting the exactly same image data give me an error?
[16:50:10] <efdee> fweht: can you create a demo?
[16:50:18] <efdee> (codesandbox, ...)
[16:50:19] <fweht> https://codepen.io/fweth/full/VwzeWoN
[16:50:35] <fweht> here you have to mousedown, mousemove, mouseup
[16:50:45] <fweht> to create the rect from which the imagedata is taken
[16:51:15] *** Joins: src (~src@user/src)
[16:52:26] <efdee> fweht: putImageData has either 3 or 7 arguments, you're passing in 5
[16:52:36] <fweht> efdee: oh!
[16:52:45] *** Joins: hamilton5 (~iamfive@user/ham5)
[16:52:55] <efdee> hence it can't resolve which overload you want to use. which is what it says in the error.
[16:52:56] <fweht> thanks so much!!!
[16:53:10] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:53:11] <fweht> the error really didnt give me much of a clou
[16:53:26] <efdee> because you refused to google it
[16:54:13] <fweht> i did google it!
[16:54:23] <fweht> i got like 2 results and none of them were good
[16:54:49] <fweht> maybe i googled it with too much context
[16:54:55] *** Quits: ham5 (iamfive@user/ham5) (Ping timeout: 260 seconds)
[16:55:01] *** hamilton5 is now known as ham5
[16:55:11] *** Joins: konrados (~konrados@user-5-173-16-28.play-internet.pl)
[16:55:38] <efdee> https://i.imgur.com/A6KI6mq.png i guess i have a better google
[16:55:48] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:55:57] <efdee> anyway, that's the problem. now you know. :-)
[16:56:03] <fweht> yeah i googled it with imagedata as ii assumed it was connected to it
[16:56:04] <fweht> sorry
[16:56:14] <efdee> np
[16:57:43] <gitesh> Look at this code ------->
[16:57:45] <gitesh> https://runestone.academy/runestone/books/published/webfundamentals/Dynamic/prototype2.html
[16:57:54] <gitesh> This code doing MVC using pubsub pattern
[16:59:02] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:59:25] *** hamess_ is now known as hamess
[17:00:04] *** Joins: de-facto (~de-facto@user/de-facto)
[17:00:39] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[17:02:10] <gitesh> what this line is saying? `model.subscribe(this.redrawList.bind(this))` ?
[17:03:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[17:03:40] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 260 seconds)
[17:03:41] <efdee> what part of it?
[17:04:42] *** Joins: stenno (~stenno@user/stenno)
[17:05:28] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:05:38] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[17:05:38] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[17:05:38] *** Joins: Heraes (~Heraes@user/romarain)
[17:05:58] <silly> gitesh, https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind
[17:06:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:06:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:06:51] *** Joins: wroathe (~wroathe@user/wroathe)
[17:07:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:08:22] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[17:08:32] <gitesh> I'm not understanding `this`
[17:08:52] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:09:18] <gitesh> `this` in bing is which `this` ?
[17:09:21] <gitesh> *bind
[17:09:22] <efdee> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[17:09:59] <efdee> it's whatever 'this' is at the moment that code is executed
[17:10:09] <silly> `this.redrawList.bind(this)` both this refer to the same thing here
[17:10:25] <efdee> myObj.test() => 'this' inside the test function refers to 'myObj' (by default)
[17:11:02] <efdee> var test2 = myObj.test; test2() => 'this' in the test2 function (which is a copy of test) now refers to nothing (well, the global element, but consider it nothing)
[17:11:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[17:11:56] <efdee> var test3 = myObj.test.bind("hello"); test3() => 'this' in the test3 function will refer to the string "hello"
[17:12:48] <efdee> var test4 = myObj.test.bind(myObj); test4() => 'this' in the test4 function will refer to myObj
[17:14:09] <efdee> so in short, if you call a function as <object>.<function>(...), 'this' will by default point to the object. but if you execute it without <object>. (for example, because you assigned the function to a variable, or you're passing it to another function like model.subscribe in your case) then 'this' will not point to what you would expect it to be. so you bind it to get the expected behavior.
[17:14:11] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 264 seconds)
[17:14:23] <efdee> all of this is something you would know if you took the time to read a javascript primer. it's super basic.
[17:16:25] *** Quits: xiongxin (~quassel@119.123.100.49) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:18:21] *** octav1a is now known as Jackal-o-lantern
[17:20:45] <gitesh> i see
[17:24:27] *** Joins: mei (~mei@user/mei)
[17:24:38] *** Quits: Simplar (~Simplar@188.163.92.225) (Quit: Going offline, see ya! (www.adiirc.com))
[17:24:40] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6de4:23af:39fb:f3d7) (Ping timeout: 260 seconds)
[17:24:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:26:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:26:24] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:26:24] *** Joins: wroathe (~wroathe@user/wroathe)
[17:32:09] *** Joins: stenno (~stenno@user/stenno)
[17:33:25] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:33:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:05] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[17:34:09] *** Joins: gggpkm_ (~gggpkm@114.245.104.31)
[17:35:17] *** Joins: onosendi (~onosendi@user/onosendi)
[17:35:22] *** Quits: gggpkm_ (~gggpkm@114.245.104.31) (Remote host closed the connection)
[17:35:44] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[17:37:18] *** Quits: gggpkm__ (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[17:41:28] <Koopz> what's your opinion on aliasing $ to document.querySelector?
[17:43:02] <theskillwithin> put my vote as a no
[17:45:51] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[17:46:11] *** Joins: gggpkm__ (~gggpkm@60.10.23.170)
[17:49:16] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 245 seconds)
[17:49:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[17:51:18] *** Quits: Puyo (sid500577@user/puyo) (Ping timeout: 258 seconds)
[17:51:23] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:51:23] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:51:31] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 252 seconds)
[17:51:46] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[17:52:04] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Ping timeout: 252 seconds)
[17:52:04] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Ping timeout: 258 seconds)
[17:52:11] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[17:52:11] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 245 seconds)
[17:52:27] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Ping timeout: 258 seconds)
[17:52:35] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[17:52:35] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:52:40] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Ping timeout: 260 seconds)
[17:53:32] *** Joins: SrPx (sid108780@uxbridge.irccloud.com)
[17:53:36] *** Joins: onizu (uid373383@uxbridge.irccloud.com)
[17:53:37] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[17:53:42] *** Joins: Puyo (sid500577@user/puyo)
[17:53:50] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[17:53:50] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[17:53:53] *** Joins: dayday (uid520582@hampstead.irccloud.com)
[17:53:54] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[17:53:58] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[17:54:00] *** Joins: mexen (uid495612@user/mexen)
[17:54:08] *** Joins: vqueiroz (uid340368@hampstead.irccloud.com)
[17:54:15] *** Joins: Memory (sid459764@user/memory)
[17:54:16] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[17:56:47] <Koopz> i'm not really a friend of it either because it reminds me of a thing i don't want to use
[17:57:07] <Koopz> but it's just so much shorter than "document.querySelector"
[17:58:27] *** Joins: chao (~stenno@user/stenno)
[17:58:32] <systemfault> It's nice that in JS, you can define your own functions, right? :)
[18:00:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:01:18] <undefined_bob> I like to define my functions as undefined :3
[18:03:03] *** Joins: Intelo (~Intelo@88.244.90.187)
[18:03:23] <Intelo> Generally speaking, its better to use useReducer() instead of useState() for a bit complex state ?
[18:06:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:06:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:06:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:09:40] *** Joins: d[-_-]b (~stenno@user/stenno)
[18:09:41] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 245 seconds)
[18:10:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:13:52] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:13:55] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 258 seconds)
[18:16:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[18:16:48] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[18:18:20] *** Quits: gggpkm__ (~gggpkm@60.10.23.170) (Ping timeout: 260 seconds)
[18:19:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:20:45] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:21:23] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 264 seconds)
[18:23:51] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:24:17] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:27:23] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 264 seconds)
[18:27:37] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[18:28:53] *** Quits: d[-_-]b (~stenno@user/stenno) (Quit: WeeChat 3.2)
[18:34:16] *** Joins: nomic (~nomic@185.217.117.49)
[18:34:57] <ThePendulum> I also vote to avoid $ for the sake of not making people think they're dealing with jay's kwerrie, and more importantly immediately signifying you /are/ using the querySelector they're familiar
[18:35:55] <Koopz> would you avoid aliases alltogether?
[18:36:31] <ThePendulum> yes, this is somewhat in the same realm as people using single letters for all their variables, or obscure 3 letter abbreviations
[18:36:52] <ThePendulum> the effort saved typing it out is not worth the headache of deciphering it later on
[18:36:54] *** Joins: de-facto (~de-facto@user/de-facto)
[18:37:09] <Koopz> b-but muh 120 characters per line limit
[18:37:24] <onosendi> And in the end you'd just end up with a worse version of jQuery.
[18:38:42] <systemfault> function $(selector, root = document) { return Array.from(root.querySelectorAll(selector)) } // Not exactly difficult :)
[18:38:48] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:39:43] <systemfault> The only things jQuery is still really good at is event delegation
[18:39:43] <ThePendulum> I have a scraping library that basically does that, lol
[18:40:29] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:43:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:44:56] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[18:45:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[18:47:11] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[18:48:30] *** Quits: onizu (uid373383@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:49:27] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:52:39] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:53:52] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:00:53] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[19:01:04] *** Joins: macswagger (~macswagge@cpe-104-34-48-156.socal.res.rr.com)
[19:01:21] <cahoots> hi, are there any fast, drop-in replacements for webpack?
[19:02:16] <ThePendulum> what is it about webpack that you're trying to get rid of?
[19:02:41] <cahoots> the slowness
[19:02:58] <hassoon> 'afternon
[19:03:09] <ThePendulum> anything that can act as a drop-in replacement would have a similar feature set and probably be just as slow
[19:04:40] <deniska> If you gotta go fast, there's esbuild
[19:04:47] <deniska> Not too much of a drop in replacement though
[19:05:22] <joepie91> cahoots: you should look at what is actually slowing down your build - webpack is just a bundler, and bundling is a very fast operation, so it's going to be somewhere in the plugins you use
[19:05:53] <joepie91> I have plenty of complaints about webpack, but it's definitely not fundamentally 'slow'
[19:05:57] <ThePendulum> during dev I would put it in watch mode anyway, which takes a split second to rebuild, during deployment I don't really care how long it takes
[19:06:14] <joepie91> IIRC there are some plugins for profiling which plugins/transforms take up the most time
[19:06:38] <ThePendulum> I think for us the obfuscation takes 95% of the build
[19:06:49] <joepie91> it's usually minification or so yeah
[19:06:58] <theskillwithin> also checkout webpack bundle analyzer
[19:07:01] <joepie91> bundling itself is usually a <1 second operation
[19:07:28] <ThePendulum> the bundle analyzer is useful for reducing size and thus load time in the browser but I'm not sure you can get any noteworthy gains in build time from it
[19:08:22] <ThePendulum> still worth checking that out though, even if you don't have a particularly large bundle you could be surprised how much smaller it can be
[19:09:44] *** Joins: leviathan (~dr_leviat@2600:1700:dad0:9870:6108:12de:7f0:6df8)
[19:15:22] <cahoots> sg, ty
[19:19:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:19:09] <banana_> what's that way of making a function to have it support array of elementN and elementN parameters
[19:20:00] <silly> elementN and elementN?
[19:20:41] <silly> you can access arguments in function(){}
[19:21:08] <banana_> like have a function `someFunc` support this: someFunc(elem1, elem2, ...) and someFunc([elem1, elem2, ...])
[19:21:43] *** Joins: Rockwood (~Rocky@user/rocky)
[19:24:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:24:15] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[19:26:52] *** Gustavo6046_ is now known as Gustavo6046
[19:27:01] <ThePendulum> that is pretty much it, just add a parameter name
[19:27:23] <ThePendulum> n> function foo(...items) { console.log(items); } foo('hello', 'world')
[19:27:23] <jellobot> (okay) [ 'hello', 'world' ]
[19:29:33] <banana_> n> function foo(...items) { console.log(items); } foo(['hello', 'world'])
[19:29:33] <jellobot> (okay) [ [ 'hello', 'world' ] ]
[19:29:41] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:29:58] <banana_> that's the issue I'm coming across so I think just use .flat() in there and it's fine
[19:30:05] <banana_> i.e.
[19:30:09] <ThePendulum> n> function foo([item, ...items]) { console.log(item, items); } foo(['hello', 'world', 'lorem', 'ipsum'])
[19:30:10] <jellobot> (okay) hello [ 'world', 'lorem', 'ipsum' ]
[19:30:27] <banana_> n> function foo(...items) { console.log(items.flat()); } foo('hello', 'world')
[19:30:28] <jellobot> (okay) [ 'hello', 'world' ]
[19:30:39] <ThePendulum> you can do foo([...items])
[19:30:43] <ThePendulum> wait no
[19:30:43] <banana_> n> function foo(...items) { console.log(items.flat()); } foo(['hello', 'world'])
[19:30:44] <jellobot> (okay) [ 'hello', 'world' ]
[19:30:48] <ThePendulum> yeah
[19:30:55] <ThePendulum> if you pass an array into foo you can do [...items] :P
[19:31:04] <banana_> yep that too
[19:31:12] <ThePendulum> not sure when you would need flat here
[19:31:31] <ThePendulum> n> function foo([...items]) { console.log(items); } foo(['hello', 'world'])
[19:31:31] <jellobot> (okay) [ 'hello', 'world' ]
[19:31:56] <banana_>  n> function foo([...items]) { console.log(items); } foo('hello', 'world')
[19:32:11] <banana_> n> function foo([...items]) { console.log(items); } foo('hello', 'world')
[19:32:12] <jellobot> (okay) [ 'h', 'e', 'l', 'l', 'o' ]
[19:32:39] <banana_> I think that's why
[19:33:05] <banana_> I think anyways I vaguely remember some one showing me their function that used flat() before on here
[19:42:50] <daoudr> why conditional statement here assumes that I am looking for the true value? https://imgur.com/Cz09eLY.png
[19:44:41] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:45:05] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:45:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:47:23] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:49:38] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[19:52:07] *** Joins: ttys000 (~ttys000@user/ttys000)
[19:55:09] *** Joins: stenno (~stenno@user/stenno)
[19:57:57] <src> going through JS: the definitive guide by Flanagan
[19:58:19] <src> it's detailed but I like it, I miss the exercises though I am used to from some other programming books
[19:58:51] <src> any suggestions how to supplement that? is there a site with good JS exercises? maybe general language non-specific exercises I should check out?
[19:59:19] <daoudr> src codewars.com
[19:59:31] <theskillwithin> doc i don't understand the quesiton, looks like its working properly
[19:59:36] <theskillwithin> daoudr *
[19:59:49] <theskillwithin> n> console.log(true ? 1 : 2);
[19:59:50] <jellobot> (okay) 1
[19:59:56] <theskillwithin> n> console.log(false ? 1 : 2);
[19:59:57] <jellobot> (okay) 2
[20:00:09] <ljharb> !eloquent @ src
[20:00:09] <jellobot> src, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[20:01:04] <daoudr> so any condition statements always tries to output the true value?
[20:01:45] <theskillwithin> it outputs the thing after ? if its true,  and if its false it outputs the thing after :
[20:01:51] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[20:01:57] *** Quits: Intelo (~Intelo@88.244.90.187) (Quit: Client closed)
[20:02:06] <src> daoudr thanks I'll check it out
[20:02:20] <theskillwithin> daoudr https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator
[20:02:38] <src> ljharb though like I've said, I'm happy with the book besides the point I miss some exercises
[20:07:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[20:07:57] <daoudr> I was just wondering how it can tell if 1 or 2 is true without an operation but it seems the location of the number is enough to determine if true or not
[20:08:57] *** Joins: nomic2 (~nomic@185.198.243.184)
[20:09:26] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[20:10:38] <silly> n> false ? 'left' : 'right'
[20:10:39] <jellobot> (okay) 'right'
[20:11:21] <stenno> n> Boolean(1)
[20:11:21] <jellobot> (okay) true
[20:11:28] <stenno> n> !!1
[20:11:29] <jellobot> (okay) true
[20:11:30] *** Quits: nomic (~nomic@185.217.117.49) (Ping timeout: 260 seconds)
[20:12:20] <daoudr> it evaluates from left to right. ok
[20:13:10] <daoudr> depends on what's before ?
[20:15:23] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[20:16:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:17:03] *** Quits: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my) (Quit: Goodbye :D)
[20:19:50] *** Parts: velix (~velix@user/velix) (Leaving)
[20:21:25] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[20:22:23] *** Joins: KevinX (~KevinX@94.140.11.217)
[20:27:27] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Quit: leaving)
[20:35:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:35:47] *** Joins: federico_it (~textual@176.206.87.127)
[20:35:57] *** Joins: zebrag (~chris@user/zebrag)
[20:36:53] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) (Remote host closed the connection)
[20:37:28] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[20:40:34] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) (Remote host closed the connection)
[20:41:56] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[20:43:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[20:43:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:44:05] *** Joins: pycurious (~Adium@user/pycurious)
[20:49:45] *** Quits: happymeal` (~happymeal@user/happymeal) (Quit: https://www.endofthelinegaming.com -- A wonderful TF2 community!)
[20:55:23] <theskillwithin> nice the new MBP can get 64gb memory with the new chip, finally some good memory on a new chip
[20:56:52] <efdee> but it's still an MBP... :-P
[20:58:06] *** Joins: han-solo (~hanish@user/han-solo)
[20:59:37] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:00:52] <hmw[at]> Given how much my browser recently leaks RAM, 64GB seems not like a lot :)
[21:01:46] <stenno> 64gb is even enough to play modded minecraft
[21:02:41] *** Joins: happymeal (~happymeal@user/happymeal)
[21:02:43] <hmw[at]> Maybe, once I killed the browser
[21:03:19] <hmw[at]> I recently switched from ABP to uBlock. It looks like that's when the leaks started
[21:04:20] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:04:58] *** Joins: de-facto (~de-facto@user/de-facto)
[21:07:52] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 252 seconds)
[21:09:28] <src> ljharb I have to admit eloquent JS looks what I'm looking for in some regards
[21:09:28] <src> ty
[21:09:59] *** Joins: jazzy (~jaziz@user/jaziz)
[21:12:02] <paulcarroty> mbp can handle 64gb RAM only in 2021? LOL
[21:13:22] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[21:15:15] *** Quits: pmercado (~pmercado@186.107.62.14) (Remote host closed the connection)
[21:15:38] *** Joins: pmercado (~pmercado@186.107.62.14)
[21:16:19] <theskillwithin> yes,  well to be fair, thats not the full story,  it doesn't need as much memory because of how its optimized
[21:17:02] <stenno> ram with the m1 chip is special as i have learned
[21:17:17] <stenno> something with sharing it with the GPU or so?
[21:17:27] <theskillwithin> something like that
[21:18:23] <silly> 20 years ago i saw a bios option for shared ram
[21:21:25] <paulcarroty> http://media.liveauctiongroup.net/i/13256/13427437_1.jpg
[21:21:32] <systemfault> silly: You can see that "today"
[21:22:04] <silly> yes, i still have it in every bios
[21:22:12] *** nomic2 is now known as nomic
[21:22:20] <paulcarroty> i still use it right now
[21:22:28] <systemfault> Most computers with integrated graphics have that
[21:23:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[21:23:36] <silly> integrated oic
[21:24:09] <silly> yea, i always made sure there was integrated gfx
[21:24:41] <stenno> wot
[21:25:27] <silly> lol paulcarroty i had this poster behind my door too
[21:25:43] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:1879:cbeb:476f:d1d6)
[21:26:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[21:26:25] <hmw[at]> https://m.media-amazon.com/images/I/61wetNCgD-L._AC_SY679_.jpg
[21:26:29] <paulcarroty> hahah
[21:27:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[21:28:22] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:28:43] <silly> ah, s08e01 on german tv in 20min
[21:30:37] *** Joins: Guest87 (~Guest87@p200300c8cf2dff00d33dbfd78ddc2f9d.dip0.t-ipconnect.de)
[21:31:00] <stenno> of x files?
[21:31:07] <silly> yes
[21:31:08] <stenno> wtf
[21:31:23] <silly> pro7 maxx
[21:31:43] <silly> every wednesday
[21:32:44] <stenno> oh season 8
[21:32:48] <stenno> i thought there was new stuff
[21:33:02] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:33:12] <silly> yes they made season 11 couple years back
[21:33:22] <silly> or was it 10?
[21:34:16] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[21:34:41] <paulcarroty> still remember the episode with tv addiction
[21:40:57] <hmw[at]> Guess I'll have to rewatch it
[21:43:27] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) ()
[21:44:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[21:44:38] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[21:47:53] *** Gustavo6046_ is now known as Gustavo6046
[21:53:06] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9)
[21:53:09] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[21:53:58] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df)
[21:54:34] <Swahili> Q: Is there a way to get the variable name as a string?
[21:55:19] <Swahili> nevermind, varObj => Object.keys(varObj)[0]
[21:55:24] <silly> no, neither can the string be used to access the variable, except for globals like window.xy
[21:56:18] <ljharb> Swahili: `[0]` is a bug there
[21:56:23] <ljharb> Swahili: any code that relies on the order of object keys is broken
[21:56:44] <Swahili> ljharb: nice point :)
[21:57:40] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[21:58:35] *** Quits: s (~swant@libera/staff/swant) (Quit: gone to IKEA)
[21:58:59] *** Joins: Swant (~swant@libera/staff/swant)
[21:59:53] *** Swant is now known as s
[22:07:52] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:09:37] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:10:57] <stenno> that was a quick stint to ikea
[22:12:47] <ThePendulum> geoguessr dropped me in sweden in the parking lot of an ikea, thought that's just typical
[22:13:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[22:13:51] <samsch> Were you doing the "find an airport" thing?
[22:13:53] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[22:13:58] *** Quits: Guest87 (~Guest87@p200300c8cf2dff00d33dbfd78ddc2f9d.dip0.t-ipconnect.de) (Quit: Client closed)
[22:14:22] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:14:32] *** Joins: Guest87 (~Guest87@p200300c8cf2dff00d33dbfd78ddc2f9d.dip0.t-ipconnect.de)
[22:16:03] <ThePendulum> no
[22:16:29] <samsch> That's a fun game
[22:21:48] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:23:34] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:f867:2049:3671:7766)
[22:23:56] *** Quits: Guest87 (~Guest87@p200300c8cf2dff00d33dbfd78ddc2f9d.dip0.t-ipconnect.de) (Quit: Client closed)
[22:26:06] *** Joins: EgonX__ (~EgonX@2601:2c6:47f:879e:49fa:15b7:cc4d:9145)
[22:26:08] *** Quits: EgonX__ (~EgonX@2601:2c6:47f:879e:49fa:15b7:cc4d:9145) (Client Quit)
[22:28:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[22:28:30] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[22:28:35] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:f867:2049:3671:7766) (Ping timeout: 264 seconds)
[22:28:47] <ThePendulum> samsch: oh to find out where I am? I thought that was some kind of specific challenge
[22:29:04] <ThePendulum> I do if there's reason to believe there might be one nearby
[22:29:31] <samsch> The game I play is you drop somewhere random and have to make your way to an airport to "escape". Figuring out where you actually are isn't required.
[22:30:20] *** Joins: stenno (~stenno@user/stenno)
[22:32:34] <ThePendulum> ahh right, wouldn't that take hours most of the time with the speed you can 'drive'?
[22:32:48] <ThePendulum> or do you limit the map to major cities
[22:33:47] <samsch> I haven't limited it, and the longest it's taken was maybe an hour?
[22:34:21] <samsch> I wasn't really tracking the time tbh, I don't generally play it unless I have enough time to not care lol
[22:34:38] <ThePendulum> what I usually play is getting it down to the meter in 5 minutes with all tools allowed except extracting the coordinates from the game itself
[22:35:37] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[22:36:23] <samsch> Oh, the site I've used it MapCrunch, not geoguessr
[22:36:40] <samsch> You can "drive" via street view pretty much as fast as in GMaps itself
[22:37:31] <ThePendulum> right, well geoguessr is also just street view but you can still only click forward maybe a 150m or so at once, unless I'm missing some trick
[22:41:44] <samsch> Yeah, it's not super fast
[22:41:46] *** Joins: kogepan (~kogepan@user/kogepan)
[22:42:45] <pizza> is there a js lib that accepts time in ms and returns something more friendly? for example passing 300000 returns 5m, 7200000 returns 2h, etc.
[22:43:27] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:43:50] <hmw[at]> pizza: Check out the Date() object. I think there will always be some frickeling involved though.
[22:44:09] <stenno> check out the Intl library or wait for Temporal :P
[22:44:22] <hmw[at]> (oh. You asked for a lib. I'd have written it myself)
[22:44:24] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat
[22:44:35] <stenno> don't think it can handle ranges though
[22:44:37] <pizza> i keep forgetting about Intl
[22:44:56] <stenno> temporal is stage 3 so you can polyfill it
[22:45:01] <stenno> https://github.com/tc39/proposal-temporal
[22:45:04] <samsch> But also yes, there's libraries which do thta
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:20] <samsch> search npm for like `human time` or something
[22:45:30] <stenno> date-fns
[22:45:33] <pizza> i guess i could just use a simple switch statement
[22:45:44] <stenno> date-fns should be your choice
[22:46:20] <stenno> to be honest i'd probably just polyfill Temporal just to play around with it
[22:46:50] *** Joins: Guest76 (~Guest76@209.202.223.146)
[22:46:53] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[22:47:34] <stenno> because that will be the future of JS
[22:47:41] <stenno> JS date handling (no pun intended)
[22:48:06] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:49:38] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[22:50:19] <stenno> b> Temporal
[22:50:20] <jellobot> (fail) ReferenceError: Temporal is not defined
[22:50:24] <stenno> n> Temporal
[22:50:24] <jellobot> (fail) ReferenceError: Temporal is not defined
[22:50:25] <stenno> ok
[22:53:57] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[22:54:15] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 260 seconds)
[22:57:16] <jaawerth> that's because time is an illusion
[22:58:41] <stenno> time is actually just a infinitely small slice of 5d spacetime
[22:58:44] <stenno> (dunno what i am talking)
[22:59:48] <jaawerth> haha well the experts don't either, they just know how to make the math work
[23:00:17] <hmw[at]> stenno: Check out VSauce - Which way is down?
[23:00:40] <stenno> have seen that a few times already but vsauce is pretty great so i might just watch it again
[23:00:55] *** Joins: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net)
[23:00:59] <hmw[at]> :)
[23:01:17] <hmw[at]> One of the best explanations I have seen so far
[23:01:42] <jaawerth> ohh it's a youtuber. I thought it was some library and was confused when I couldn't find it
[23:01:49] <hmw[at]> heheh
[23:03:20] <jaawerth> oooh I know where he's going with this
[23:03:46] <hmw[at]> If only someone had explained it to me this way 30 years ago
[23:04:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[23:05:13] <hmw[at]> Follow up with https://www.youtube.com/watch?v=wrwgIjBUYVc
[23:05:13] <skillbot> YouTube Title: A new way to visualize General Relativity
[23:05:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:06:02] *** Joins: Pixi (~Pixi@user/pixi)
[23:10:59] *** Joins: Intelo (~Intelo@88.246.74.215)
[23:11:18] <Intelo> I want to know if "all" elements of an array are in another. What is wrong here:? const hasIssues = issueItemsList.every(elem => code.every(codeElement => codeElement.toString().contains(elem)));
[23:11:20] <jaawerth> this reminds me how I always enjoyed astrophysics the most in college because with the scales how they are you can do "spherical cow"-style ideal approximations and actually come really close to accurate results, and most of that comes from just using mass and spectra to calculate all the things
[23:12:04] <stenno> Intelo: code.every
[23:12:21] <Intelo> am.. why? code is an array
[23:12:35] <jaawerth> Intelo: I'm guessing by .contains() you meant .includes()
[23:12:38] <Intelo> its says codeelement.toString is not a funciton
[23:12:42] <jaawerth> oh
[23:12:49] <jaawerth> what's codeElement supposed to be?
[23:12:54] <stenno> issueItemsList.every(elem => code.includes(elem))
[23:12:59] <Intelo> well code is [] and it has strings in each bocket
[23:13:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[23:13:59] <jaawerth> it code's elements are strings, why are you calling toString on them?
[23:14:01] <stenno> you are testing if elem is contained in the string codeElement
[23:14:41] <stenno> didn't you just want to test if elem also appears in the 'code' array?
[23:14:49] <Intelo> stenno  amm let me give example...    issue = ["a code","b a","co"]    code = [ "I am a code", "this is a", " b a LL"
[23:15:06] *** Quits: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net) (Changing host)
[23:15:06] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[23:15:23] <Intelo> jaawerth ya just checking why the contains was not working.
[23:15:35] <stenno> n> 'foo'.includes('o')
[23:15:36] <jellobot> (okay) true
[23:15:47] <jaawerth> in that case, see my first comment, .contains() isn't a string method, you probably meant .includes()
[23:16:10] <jaawerth> but that doesn't explain why you're getting "tostring is not a function", the fact that you are suggests you're getting something else in that array
[23:16:19] <Intelo> n> [ "I am a code", "this is a", " b a LL"].includes["a code","b a","co"]
[23:16:20] <jellobot> (okay) undefined
[23:16:32] <stenno> thats not how..
[23:16:37] <jaawerth> also you shouldn't have to call toString() on it if it's already a string. at any rate, you might wanna filter out nullish values unless you're positive they there can't be any
[23:17:12] <jaawerth> Intelo: no no, just .includes() in place of .contains(), because .contains() is not a thing
[23:18:02] <silly> n> ["includes" in String.prototype, "containes" in String.prototype]
[23:18:03] <jellobot> (okay) [ true, false ]
[23:18:33] <silly> is there a contains anywhere?
[23:18:36] <Intelo> n> [ "I am a code"].includes["a code","b a","co"]
[23:18:37] <jellobot> (okay) undefined
[23:18:49] <silly> maps have has
[23:19:43] <silly> https://developer.mozilla.org/en-US/docs/Web/API/Node/contains
[23:20:02] <Intelo> n> "I am a code".includes["a code","b a","co"]
[23:20:03] <jellobot> (okay) undefined
[23:20:10] <silly> DOMTokenList.contains()
[23:20:17] <stenno> Intelo:
[23:20:22] <jaawerth> n> const issue = ["a code","b a","co"], code = [ "I am a code", "this is a", " b a LL"]; code.every(elem => code.some(chunk => chunk.includes(elem)))
[23:20:22] <Intelo> n> "I am a code".includes"a code"
[23:20:23] <jellobot> (okay) true
[23:20:23] <jellobot> (fail) SyntaxError: Unexpected string
[23:20:24] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:20:31] <Intelo> n> "I am a code".includes("a code")
[23:20:32] <jellobot> (okay) true
[23:21:21] <stenno> for some reason i have to think of machine learning
[23:21:28] <jaawerth> lol I got the logic wrong but you get the idea
[23:21:47] <Intelo> jaawerth stenno i see
[23:21:52] <jaawerth> Intelo: you just want to know if every element of issue is contained in one of the elements of code, right? or does every element of issue need to be in every element of code?
[23:24:17] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[23:24:19] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[23:24:51] <jaawerth> n> const issue = ["a code","b a","co"], code = [ "I am a code", "this is a", " b a LL"]; code.every(chunk => issue.some(elem => chunk.includes(elem)))
[23:24:52] <jellobot> (okay) false
[23:25:03] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:25:08] <jaawerth> I don't know what exactly you wanna check but this should give you enough to go on :)
[23:25:35] <stenno> given in which way they implemented your previous advice i doubt this will be successful in the end
[23:25:47] <jaawerth> I'm guessing this is what you're actually trying to do:
[23:25:49] <jaawerth> n> const issue = ["a code","b a","co"], code = [ "I am a code", "this is a", " b a LL"]; issue.every(elem => code.some(chunk => chunk.includes(elem)))
[23:25:50] <jellobot> (okay) true
[23:26:01] <jaawerth> stenno: lol fair
[23:26:06] <Intelo> jaawerth stenno so I had to use `some`
[23:26:35] <Intelo> jaawerth yes it solved the issue
[23:27:50] <Intelo> the main purpose in english was to know if     any part of any element of code array combined would have "all" elements (full, not parts) of issue array.
[23:28:05] <Intelo> jaawerth stenno are we on the same page? ^
[23:28:28] <jaawerth> in that case you could also probably get away joinining code into a single string ;-)
[23:28:50] <Intelo> oh that might also work.
[23:29:09] <Intelo> but the one you pasted is also valid?
[23:29:38] <jaawerth> I"m not sure what you mean by "combined" though, it almost sounds like you wan ted to do permutations, which this isn't doing exactly
[23:30:44] <KDev> I feel like I always need to go back and read details such as how "this" works, I "know" it enough, but just barely, I couldn't explain it to anyone that's for sure. I don't really ever find myself using "this" tho, so maybe it's a "use it or lose it" kind of thing.
[23:30:49] *** Quits: Guest76 (~Guest76@209.202.223.146) (Quit: Client closed)
[23:31:01] <KDev> Never really used class syntax, react docs seem to like it a lot tho
[23:31:05] <jaawerth> my final snippet there is just hcecking whether every element of issue appears as a substring in at least one element of the code array
[23:31:10] *** Joins: Guest70 (~Guest70@209.202.223.146)
[23:31:58] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[23:32:14] <jaawerth> KDev: I use `this` a lot and rarely use `class` , it's more to do with calling context. I think the bot has some links..
[23:32:15] <jaawerth> !this
[23:32:15] <jellobot> jaawerth, A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[23:32:21] <Intelo> jaawerth ok to further simplify. code [] are lines of a file. I want to check if that file has "all the keywords mentioned in issues[]
[23:32:35] <Intelo> :)
[23:32:39] <jaawerth> aha
[23:32:45] <Intelo> thats sounds simple, right?
[23:32:51] <Intelo> it is the actual problem too :)
[23:34:23] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1595:4962:1916:56f9) (Ping timeout: 258 seconds)
[23:34:31] *** Joins: incognito (~relativit@user/incognito)
[23:34:34] *** Joins: nomic (~nomic@185.198.243.184)
[23:40:51] <Intelo> jaawerth stenno so is this ok? I will study 'some' and 'every' more though. const issue = ["a code","b a","co"], code = [ "I am a code", "this is a", " b a LL"]; issue.every(elem => code.some(chunk => chunk.includes(elem)))
[23:41:13] <stenno> well does it work?
[23:48:07] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df) (Remote host closed the connection)
[23:48:31] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df)
[23:50:50] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df) (Remote host closed the connection)
[23:50:55] <jaawerth> Intelo: and issues start as, like, big strings? I'm confused by the sample issue contents - while the substring approach *could* work, I'd probably do something like
[23:50:56] *** Joins: silverdust (~silverdus@cpe-65-29-179-95.wi.res.rr.com)
[23:51:03] <jaawerth> n> const issue = ["a code","b a","co"], code = [ "I am a code", "this is a"], keywords = issue.flatMap(elem => elem.toLowerCase().split(/\w+/g)), codeWords = new Set(code.flatMap(line => line.toLowerCase().split(/\w+/g))); keywords.every(keyword => codeWords.has(keyword))
[23:51:04] <jellobot> (okay) true
[23:51:14] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df)
[23:51:50] <jaawerth> I dunno, it depends. stuff like the abocve can work for simple cases but for fanciness you would normally use a database with fancy abiliteis like spelling correction and/or fulltext search
[23:51:52] <Intelo> jaawerth isn't the older version you gave me correct?
[23:52:01] <jaawerth> "correct" is somewhat relative here
[23:52:18] <jaawerth> it could have edge cases but it's hard to say without seeing it in context
[23:52:27] <jaawerth> it might be Good Enough
[23:52:30] <Intelo> well correct is very explicit.  code file should not have all the issues
[23:52:35] <Intelo> it can have 1
[23:52:36] <Intelo> or 2
[23:52:38] <Intelo> but not all
[23:52:43] <Intelo> in the same file
[23:53:13] <jaawerth> I mean, I don't understand what issues are,, "a code", "b a", "co" - what are those?
[23:53:39] <Intelo> n> const issue = ["a code","b a","co"], code = [ "I am a code", "this is a", " b a LL"]; issue.every(elem => code.some(chunk => chunk.includes(elem)))
[23:53:40] <jellobot> (okay) true
[23:53:52] <Intelo> n> const issue = ["a code","b a","co", " I am not in code" ], code = [ "I am a code", "this is a", " b a LL"]; issue.every(elem => code.some(chunk => chunk.includes(elem)))
[23:53:53] <jellobot> (okay) false
[23:54:01] <Intelo> looks like it floats the boat
[23:54:19] <Intelo> n> const issue = ["a code","b a","co" ], code = [ "I am a code", "this is a", " b a LL", "something clean"]; issue.every(elem => code.some(chunk => chunk.includes(elem)))
[23:54:20] <jellobot> (okay) true
[23:54:50] <jaawerth> the first example I gave you just checks for substring matches but it's case sensitive, the second example I gave you ignores whitespace as a factor, coerces everything to lowercase, and just checks if every "word" exists somewhere in the code file
[23:55:18] <jaawerth> you could use the first example but coercing to lowercase may or may not be what you want
[23:55:45] *** Joins: de-facto_ (~de-facto@user/de-facto)
[23:55:45] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df) (Remote host closed the connection)
[23:56:10] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f067:cc1f:8851:56df)
[23:58:18] <KDev> Is web hosting obsolete when you can use firebase/aws now?
[23:58:30] <KDev> I haven't setup a website in a long time, I wonder what the usual route is for react apps
[23:59:51] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
