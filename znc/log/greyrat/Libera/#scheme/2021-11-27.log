[00:02:51] *** Quits: hiruji` (~hiruji@2606:6080:1001:10:3c5b:63ff:df18:8486) (Ping timeout: 245 seconds)
[00:03:49] *** Joins: kuribas (~user@ptr-25vy0i8ep4e11jhvxvb.18120a2.ip6.access.telenet.be)
[00:04:29] *** Joins: hiruji (~hiruji@user/hiruji)
[00:08:02] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[00:10:08] <jcowan> Or like yang and yin on the Tao symbol
[00:10:44] <jcowan> (The three-dimensional Tao symbol has three parts, yin, yang, and lee.)
[00:11:50] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 268 seconds)
[00:12:29] *** Joins: hiruji (~hiruji@user/hiruji)
[00:12:37] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[00:16:52] *** Joins: hiruji (~hiruji@user/hiruji)
[00:22:09] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[00:23:58] *** Joins: seninha (~seninha@user/seninha)
[00:26:15] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 250 seconds)
[00:27:41] *** Joins: xsperry (~xs@user/xsperry)
[00:28:41] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 245 seconds)
[00:29:52] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[00:40:03] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:45:21] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[00:53:51] *** Quits: solrize (~solrize@user/solrize) (Ping timeout: 264 seconds)
[01:00:45] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:00:57] <Franciman> lee as in bruce lee?
[01:03:10] <sham1> It's not the same character
[01:03:40] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Quit: Leaving)
[01:04:01] <sham1> This is the character for Li, the Daoist concept: 理  and this is the character in Bruce Lee's name: 李
[01:04:18] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[01:04:45] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Client Quit)
[01:05:10] <sham1> They seem to be homophones
[01:05:45] *** Joins: civodul (~user@guix/contributor/civodul)
[01:07:26] *** Quits: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[01:19:48] <Franciman> thanks sham1 awesome
[01:35:00] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Quit: jrincayc)
[01:35:11] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:35:40] *** Joins: solrize (~solrize@user/solrize)
[01:38:19] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[01:44:06] *** Joins: livoreno (~livoreno@user/notzmv)
[01:53:02] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[02:04:11] *** Joins: mononote (~mononote@user/mononote)
[02:08:12] *** Quits: kuribas (~user@ptr-25vy0i8ep4e11jhvxvb.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[02:10:31] *** Joins: x88x88x (~x88x88x@218.212.160.154)
[02:13:28] *** Quits: robin (~robin@user/terpri) (Read error: Connection reset by peer)
[02:13:38] *** Joins: x88x88x94 (~x88x88x@218.212.160.154)
[02:17:10] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:17:31] *** Quits: x88x88x (~x88x88x@218.212.160.154) (Ping timeout: 256 seconds)
[02:29:48] *** Joins: badkins (~badkins@136.56.92.199)
[02:33:48] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[02:34:53] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[02:41:01] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[02:41:21] *** Joins: robin (~robin@user/terpri)
[02:43:31] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 268 seconds)
[02:46:03] *** Joins: badkins (~badkins@136.56.92.199)
[02:47:34] *** Quits: x88x88x94 (~x88x88x@218.212.160.154) (Ping timeout: 256 seconds)
[02:48:37] *** Quits: klu (~klu@user/klu) (Quit: .)
[03:10:02] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 240 seconds)
[03:17:37] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:23:03] *** Quits: X-Scale (~ARM@31.22.203.240) (Ping timeout: 250 seconds)
[03:23:29] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[03:28:16] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 245 seconds)
[03:28:20] *** Joins: X-Scale (~ARM@83.223.225.150)
[03:29:09] *** Quits: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 268 seconds)
[03:30:37] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:34:56] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 245 seconds)
[03:56:32] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[03:57:19] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[03:59:31] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 245 seconds)
[04:02:01] *** Quits: iisi (sid19824@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:02:02] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[04:02:26] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 245 seconds)
[04:03:16] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (Ping timeout: 245 seconds)
[04:03:28] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[04:05:56] *** Joins: iisi (sid19824@id-19824.hampstead.irccloud.com)
[04:06:10] *** Joins: buhman (sid411355@user/buhman)
[04:07:02] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[04:10:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80::7)
[04:28:11] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:28:54] *** Joins: badkins (~badkins@136.56.92.199)
[04:33:54] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[04:56:22] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:56:48] *** Quits: Guest4609 (~cat@user/sudden) (Ping timeout: 256 seconds)
[04:57:12] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[04:57:36] *** sudden is now known as Guest6872
[05:01:26] *** Joins: s-liao (~s-liao@101.86.101.83)
[05:23:16] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[05:27:46] <solrize> anyone use gambit here?  i have a script that is looking for some builtins that are absent, like (script-file).  any idea?  i'm on debian and i suspect the script was written under macos, but i don't see anything about it in the docs
[05:31:20] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[05:37:42] *** Joins: livoreno (~livoreno@user/notzmv)
[05:39:17] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[05:43:57] *** Joins: notzmv (~zmv@user/notzmv)
[05:52:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:14:32] *** Joins: s-liao (~s-liao@101.86.101.83)
[06:31:24] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[06:35:57] *** Joins: s-liao (~s-liao@101.86.101.83)
[06:54:02] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[06:54:58] *** Joins: ns12 (~ns12@user/ns12)
[07:15:16] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[07:19:58] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 265 seconds)
[07:23:33] *** Joins: badkins (~badkins@136.56.92.199)
[07:28:40] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[07:32:16] *** Joins: hiruji (~hiruji@user/hiruji)
[07:36:30] *** Quits: hiruji (~hiruji@user/hiruji) (Read error: Connection reset by peer)
[07:36:33] *** Joins: hiruji` (~hiruji@pool-100-4-208-71.albyny.fios.verizon.net)
[07:42:29] *** Quits: hiruji` (~hiruji@pool-100-4-208-71.albyny.fios.verizon.net) (Read error: Connection reset by peer)
[07:52:16] *** Joins: badkins (~badkins@136.56.92.199)
[07:57:24] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[08:12:58] *** Joins: hiruji (~hiruji@user/hiruji)
[08:22:48] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[08:23:25] *** Joins: ns12 (~ns12@user/ns12)
[08:24:44] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[08:40:54] *** Joins: s-liao (~s-liao@101.86.101.83)
[08:58:44] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[09:02:26] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 245 seconds)
[09:04:25] *** Joins: s-liao (~s-liao@101.86.101.83)
[09:14:02] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[09:39:02] *** Joins: klu (~klu@98.247.231.39)
[09:39:02] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[09:39:02] *** Joins: klu (~klu@user/klu)
[10:07:03] *** Joins: s-liao (~s-liao@101.86.101.83)
[10:07:19] *** Quits: s-liao (~s-liao@101.86.101.83) (Client Quit)
[10:12:05] *** Joins: s-liao (~s-liao@101.86.101.83)
[10:13:57] *** Joins: badkins (~badkins@136.56.92.199)
[10:15:47] *** Joins: neocron (~NeoCron@p200300c4cf3f7e00320b69bf1a44e74d.dip0.t-ipconnect.de)
[10:18:37] *** Quits: Doraemon (~NeoCron@p200300c4cf1c0a00df145b32079df496.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:18:40] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[10:40:45] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:05:19] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Client closed)
[11:12:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[11:13:45] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[11:23:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:35:21] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 245 seconds)
[11:43:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:43:44] *** Quits: X-Scale (~ARM@83.223.225.150) (Ping timeout: 268 seconds)
[11:43:49] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[11:44:54] *** X-Scale` is now known as X-Scale
[11:56:44] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[12:17:52] <ns12> Is Scheme on track to become the most bloated language ever? Common Lisp is large, but R7RS-large is planning to become even larger than that! I am looking forward to R7RS-large.
[12:18:20] <dpk> well, R7RS's standard library will probably be smaller than, say, Python's
[12:18:36] <dpk> Common Lisp is, by modern standards, not actually that big a language!
[12:20:57] <amazigh> I would not say bloated. 
[12:21:07] <sham1> Yeah, it definitely wouldn't be bloated
[12:21:09] <amazigh> bloated means useless stuff
[12:21:22] <sham1> Basically all of the libraries are useful
[12:22:11] <dpk> you can see a list of things R7 *won't* include at https://github.com/johnwcowan/r7rs-work/blob/master/RejectedDocket.md, which is quite a lot of stuff
[12:22:21] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[12:22:38] <dpk> (not a comprehensive list, of course. it also won't include Larry Wall's STAR operator, for example)
[12:22:48] <sham1> 9p protocol would have been very weird
[12:23:04] <sham1> No adjustable arrays? Really? No no flexivectors
[12:23:22] <sham1> flexvectors even
[12:23:30] <dpk> the page is a bit out of date
[12:23:57] <dpk> e.g. "Symbol property lists (may return)" has actually returned, but as hygienic identifier properties, which are clearly better anyway
[12:24:06] <ns12> Too bad macros were not rejected.
[12:24:17] <solrize> hamt's?  i noticed gambit has those
[12:24:27] <sham1> "erlang protocol"
[12:25:02] <dpk> ns12: 🤨
[12:25:05] <sham1> I understand that a lot of these things are rejected for a reason. Some of the suggestions are just too specific
[12:25:06] <ns12> solrize: Isn't there a hamt in the tangerine edition?
[12:25:13] <sham1> What's wrong with macros
[12:25:23] <solrize> dunno
[12:25:50] <solrize> macros = different from define-syntax?  i thought that had been around for a while
[12:25:58] <ns12> solrize: SRFI 146 as (scheme mapping hash): https://github.com/johnwcowan/r7rs-work/blob/master/TangerineEdition.md
[12:26:09] <sham1> There's a lot of protocols in the rejected docket. If anything I'd like to see networking
[12:26:13] <sham1> Like generally
[12:26:26] <ns12> sham1: socket interface?
[12:26:26] <solrize> thx
[12:26:42] <sham1> So then any of the network protocols like 9p or whatever could be made portably instead of requiring every protocol even within every implementation
[12:26:44] <sham1> ns12: yeah
[12:27:02] <dpk> except in the case of tconcs ('list-queues'), we've generally chosen to standardize abstract data types so far, rather than actual data structures
[12:27:53] <sham1> Standardising actual data structure implementations in general just sounds awful. Better to standardize the abstract data types and their operations and let the implementation pick the best representation
[12:28:17] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:28:53] <dpk> so you can implement (scheme mapping) however you like. iirc the sample implementation uses a red-black tree, but Adam Nelson has a B-tree implementation which is allegedly faster
[12:29:16] <sham1> splay trees
[12:32:29] <ns12> sham1: It will probably be a few years before the socket interface (SRFI 106) gets voted on as part of the Morpheus docket. https://srfi.schemers.org/srfi-106/srfi-106.html
[12:32:46] <dpk> i hope by then we have a better proposal than SRFI 106
[12:33:10] <ns12> What are the flaws of SRFI 106?
[12:33:24] <dpk> i would prefer we standardize a high-level TCP interface only, rather than the very thin layer over POSIX/BSD sockets which SRFI 106 provides
[12:33:35] <dpk> see https://github.com/johnwcowan/r7rs-work/blob/master/NetworkPortsCowan.md
[12:33:59] <sham1> Network ports sound like a better interface IMO
[12:34:29] <sham1> I suppose a low-level socket API would also make sense for some stuff, but for most things you probably want just some port you open and then read and write
[12:34:55] <sham1> Although one might then also want a datagram port
[12:35:12] <dpk> --> https://github.com/johnwcowan/r7rs-work/blob/master/DatagramChannelsCowan.md
[12:35:24] <sham1> Right
[12:35:59] <sham1> Anyway, I don't seem to find what a settings-list is supposed to be
[12:36:38] <dpk> they were an older proposal for keyword arguments
[12:36:56] <sham1> I see
[12:36:58] <dpk> a property list using symbols as keys, basically, iirc
[12:37:19] <ns12> dpk: "Larry Wall's STAR operator" - What is that?
[12:37:55] *** Joins: notzmv (~zmv@user/notzmv)
[12:38:44] <dpk> —
[12:38:48] <dpk> Seriously, it's durn near impossible for one language to be better than
[12:38:48] <dpk> another language at absolutely everything. My favorite language is
[12:38:48] <dpk> call STAR. It's extremely concise. It has exactly one verb '*', which
[12:38:48] <dpk> does exactly what I want at the moment. You know, kinda like the
[12:38:48] <dpk> control box for Gigantor.
[12:38:50] <dpk> —
[12:38:55] <dpk> http://groups.google.com/groups?selm=1991Nov7.200504.25280@netlabs.com
[12:42:57] <Franciman> lol
[12:43:01] <Franciman> looks awfully like scheme
[12:45:56] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[12:49:25] *** Joins: s-liao (~s-liao@101.86.101.83)
[12:55:26] <ns12> Why wasn't set!, set-car!, and set-cdr! rejected from R7RS?
[12:55:44] <ecraven> why should it be? then you should get rid of string-set! and vector-set! too?
[12:55:53] <ns12> Franciman: What looks like Scheme? STAR? How so?
[12:56:26] <ns12> ecraven: Why not? Get rid of mutation.
[12:57:25] <ecraven> well, Scheme has never been a language for immutable programming, why would R7RS force it to be one?
[12:57:56] <ns12> ecraven: So Scheme is a multi-paradigm programming language like Common Lisp?
[12:58:08] <sham1> Yes?
[12:58:29] <rgherdt> ns12: definitely
[12:58:31] <Franciman> ns12: just kidding. I meant the fact that you can make the language suit your needs very easily
[12:58:37] <ns12> Does Scheme have good support for imperative programming with gotos?
[12:58:47] <sham1> Tail-calls
[12:59:09] <Franciman> and continuations, probably
[12:59:45] <ecraven> ns12: you can probably implement a tagbody in Scheme, like CL has.. it's not there by default though
[13:00:02] <rgherdt> scheme favors function programming idioms, doesn't exclude others though
[13:00:22] <ecraven> you can definitely do nice OOP in Scheme, which is in essence the antithesis of functional ;)
[13:00:30] <ns12> rgherdt: Ah, that explains it.
[13:00:53] <Franciman> ecraven: actually, there is a nice paper explaining how OOP is essentially using codata
[13:00:58] <sham1> Message sending isn't all that antithetical to FP
[13:00:58] <Franciman> while functional is essentially using data
[13:01:07] <Franciman> so they can be harmonized in a single framework 
[13:01:23] <Franciman> jcowan gave me the link
[13:02:06] <Franciman> https://www.microsoft.com/en-us/research/uploads/prod/2020/01/CoDataInAction.pdf
[13:03:28] <ecraven> sham1: but encapsulating *state* is, I think ;)
[13:03:43] <sham1> Well that's just a closure innit
[13:03:52] <ecraven> like everything in OOP, it depends entirely on your definition of what OOP actually *is*
[13:04:31] <ecraven> (define count (let ((c 0)) (lambda () (set! c (+ c 1)) c))) is a closure, but definitely not functional
[13:23:25] <solrize> OOP uses codata?  i thought it was just closures with mutable cells 
[13:24:06] <ns12> ecraven: I wonder if R7RS-large will have something like CL's tagbody.
[13:24:19] <mdhughes> goto is just a case of letrec.
[13:24:19] *** Joins: Oshawott (~archenoth@2604:3d09:681:f00:bda3:983e:438:ddd3)
[13:24:46] <sham1> Letrec with tailcalls, yes. Gotos that can pass values around
[13:28:16] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:45c7:9b7e:11e1:c345) (Ping timeout: 265 seconds)
[13:39:02] *** Quits: Guest6872 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[13:39:02] *** Joins: Guest6872 (~cat@user/sudden)
[13:39:08] *** Guest6872 is now known as sudden
[13:46:49] <mdhughes> For a retrocomputing project, I've been writing some BASIC again, and having to define in/out globals and temp vars for all my GOSUB "functions". None are recursive, for that I'd have to make a stack with an array.
[13:47:31] <mdhughes> Normally I'd use a nicer BASIC that has functions, but that won't be possible for some of the target machines.
[13:48:15] <solrize> forth?
[14:03:41] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 245 seconds)
[14:04:08] *** Joins: mononote (~mononote@user/mononote)
[14:15:43] <mdhughes> A) Not installed on anything, don't want to write one. B) When I did some forth back in the day, it fucked up my speech & coding patterns too much.
[14:15:50] *** Joins: badkins (~badkins@136.56.92.199)
[14:18:21] <mdhughes> But writing mostly portable BASIC and a common library I can adapt to each machine is easy. Doesn't have to have all that many features.
[14:19:22] <mdhughes> Anyway. Makes me appreciate *any* modern language, but especially when I do Scheme and don't have any of those concerns…
[14:19:55] <mdhughes> … except I have a giant common library which I code against because no two Scheme impls agree.
[14:20:21] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[14:21:45] *** Joins: civodul (~user@guix/contributor/civodul)
[15:19:44] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Ping timeout: 260 seconds)
[15:20:02] *** Joins: taiju (~taiju@210.160.37.43)
[15:26:56] *** Quits: taiju (~taiju@210.160.37.43) (Ping timeout: 256 seconds)
[15:29:46] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[15:31:30] *** Joins: aeth (~aeth@user/aeth)
[15:32:34] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[15:33:52] <amazigh> it is saturday, but busy :)
[15:35:07] *** Joins: kayprish (~kayprish@185.37.27.218)
[15:41:40] *** Quits: kayprish (~kayprish@185.37.27.218) (Ping timeout: 256 seconds)
[15:45:02] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[15:45:55] *** Joins: X-Scale` (~ARM@92.250.96.158)
[15:46:44] *** X-Scale` is now known as X-Scale
[15:52:19] *** Joins: jao (~jao@45.152.183.52)
[15:52:50] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[16:15:04] *** Joins: taiju (~taiju@215.185.218.133.dy.bbexcite.jp)
[16:21:31] <amazigh> sorry!
[16:26:16] *** bandali is now known as mab
[16:34:51] <solrize> mdhughes, there's tons of portable forths... though yeah it does mess up your thought patterns
[16:43:38] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[16:48:02] *** Quits: taiju (~taiju@215.185.218.133.dy.bbexcite.jp) (Read error: Connection reset by peer)
[16:48:32] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[16:51:08] *** Joins: taiju (~taiju@215.185.218.133.dy.bbexcite.jp)
[17:11:48] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 268 seconds)
[17:15:48] *** Joins: seninha (~seninha@user/seninha)
[17:15:53] *** Joins: s-liao (~s-liao@101.86.101.83)
[17:21:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80::7) (Quit: Leaving)
[17:26:00] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:29:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Remote host closed the connection)
[17:31:06] *** Joins: lagash (lagash@lagash.shelltalk.net)
[17:39:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[17:40:39] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[17:44:16] *** Joins: badkins (~badkins@136.56.92.199)
[17:53:08] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[17:59:42] <amazigh> re scheme live ^^'
[17:59:46] <amazigh> ecraven: did you see https://github.com/ecraven/r7rs-coverage/issues/4
[18:02:13] *** Joins: kayprish (~kayprish@185.37.27.218)
[18:10:59] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Client closed)
[18:12:16] *** Quits: xsperry (~xs@user/xsperry) ()
[18:12:45] *** Joins: xsperry (~xs@user/xsperry)
[18:12:51] *** Joins: badkins (~badkins@136.56.92.199)
[18:17:46] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[18:24:54] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[18:26:05] *** Joins: badkins (~badkins@136.56.92.199)
[18:31:35] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:31:43] *** Joins: badkins (~badkins@136.56.92.199)
[18:39:39] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:39:43] *** Joins: gproto23_ (~gproto23@user/gproto23)
[18:43:02] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:46:17] *** Joins: badkins (~badkins@136.56.92.199)
[18:47:05] <jcowan> ns12 sham1: note that the order of dockets isn't reliably the voting order
[18:47:47] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2cda:53b0:117d:d312) (Ping timeout: 250 seconds)
[18:48:32] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5323:266d:2c0f:d0ec)
[18:52:43] <jcowan> tagbody is in the Indigo docket, which is one step above the rejected docket.  An explanatory implementation is at https://all4dev.blogspot.com/2019/05/common-lisp-like-tagbody-form-enables.html
[19:02:44] *** Quits: kayprish (~kayprish@185.37.27.218) (Ping timeout: 265 seconds)
[19:05:35] <Irvise> One (maybe basic) question. Is there a resource that compares/discusses different Scheme implementations interoperability? I was most specifically thinking Guile-Chicken, but that may be too specific for this channel.
[19:07:26] <Irvise> And I created a proof-of-concept of Ada-Scheme interop a few months ago. It basically uses the C compatibility layer that Ada has to talk to Scheme (and viceversa): https://github.com/Irvise/Ada_Scheme_Example
[19:07:26] <Irvise> Some of you may find it interesting. Questions are welcome if any.
[19:07:51] <Irvise> s/most/more
[19:13:39] *** Joins: gproto_23 (~gproto23@user/gproto23)
[19:14:25] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[19:14:39] *** Joins: gproto23_ (~gproto23@user/gproto23)
[19:14:51] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[19:39:04] *** Joins: seninha (~seninha@user/seninha)
[19:48:35] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[19:49:10] *** Joins: badkins (~badkins@136.56.92.199)
[19:53:58] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[19:54:31] *** Joins: kayprish (~kayprish@185.37.26.208)
[19:54:38] <rgherdt> does anyone know why srfi-1 mentions lset-adjoin! (in the part: "The linear-update procedures in this library are ...") but not in the index? Also it's not defined in any of the implementations I saw
[19:56:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 245 seconds)
[19:59:32] *** Quits: kayprish (~kayprish@185.37.26.208) (Ping timeout: 240 seconds)
[20:00:27] *** Joins: badkins (~badkins@136.56.92.199)
[20:00:27] *** Joins: kayprish (~kayprish@77.243.23.219)
[20:00:50] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[20:01:02] *** Joins: badkins (~badkins@136.56.92.199)
[20:07:56] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[20:08:40] *** Joins: badkins (~badkins@136.56.92.199)
[20:13:42] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[20:13:59] *** Quits: hiruji (~hiruji@user/hiruji) (Quit: ZNC 1.8.2 - https://znc.in)
[20:14:46] *** Joins: hiruji (~hiruji@user/hiruji)
[20:21:26] *** Quits: kayprish (~kayprish@77.243.23.219) (Ping timeout: 260 seconds)
[20:34:55] <rgherdt> I guess I know the answer :) Just wanted to know if that's a known fact
[20:51:53] <amazigh> the best way to have answers to those question is SRFI-1 mailing list.
[20:51:59] <amazigh> ymmv
[20:58:42] <rgherdt> thx
[21:03:50] <amazigh> it is prolly a bug in the sample implementation, and Arthur will request a fix
[21:04:15] <amazigh> so... be ready to fire the keyboard :)
[21:07:56] *** Joins: badkins (~badkins@136.56.92.199)
[21:12:36] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[21:23:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:94bc:db7b:d520:1a5)
[21:23:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:94bc:db7b:d520:1a5) (Changing host)
[21:23:17] *** Joins: skapata (~Skapata@user/skapata)
[21:23:24] <Zipheir> amazigh: It's not a bug, I think; the SRFI just mentions a procedure which was deleted, it seems.
[21:24:03] <Zipheir> rgherdt: Well spotted.
[21:24:59] <rgherdt> I was just about to write the email. So it was removed on purpose?
[21:28:10] <Zipheir> That's my guess.  It doesn't appear anywhere else in the SRFI.  Moreover, it doesn't make much sense; linear update procedures only exist for performance, really, and lsets already suck in that department.
[21:28:34] <rgherdt> it is mentioned under "Linear update" procedures
[21:28:38] * Zipheir checks the ml archive.
[21:29:09] <rgherdt> I also didn't find a mention to it in the archive, just searched for lset-adjoin! though
[21:31:06] <rgherdt> regarding performance, you are probably right it doesn't make much sense. But since lset-union! and co. are already there, I think it makes sense to have it
[21:31:42] <rgherdt> I'll write to the list anyway, then we have that documented somewhere
[21:31:57] <Zipheir> Thanks.
[21:32:23] <Zipheir> AFAICT there's almost no discussion of the lset stuff on the ml at all.
[21:32:48] <Zipheir> That mention of lset-adjoin! goes back to the original finalized SRFI, according to git blame.
[21:33:00] <rgherdt> done
[21:33:06] <rgherdt> ok, good to know
[21:35:14] *** Joins: livoreno (~livoreno@user/notzmv)
[21:37:08] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:48:37] <ecraven> amazigh: yes, haven't had time to deal with it yet
[22:11:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1) (Quit: Leaving)
[22:14:49] <mdhughes> I've been using a few lset functions in my code, handiest way to filter lists down.
[22:21:37] *** Quits: taiju (~taiju@215.185.218.133.dy.bbexcite.jp) (Ping timeout: 250 seconds)
[22:23:00] <Zipheir> Assuming the lists are known to be small, those functions can be quite convenient.
[22:25:05] *** Joins: taiju (~taiju@215.185.218.133.dy.bbexcite.jp)
[22:32:47] <mdhughes> Yeah, I have groups of like 2-10 symbols, and if any of A are in B I need to do or not do things.
[22:40:33] *** Joins: Perryman (~perryman@user/perryman)
[22:45:38] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[22:45:38] *** Quits: gproto_23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[22:47:44] *** Quits: taiju (~taiju@215.185.218.133.dy.bbexcite.jp) (Ping timeout: 260 seconds)
[22:50:41] *** Joins: taiju (~taiju@215.185.218.133.dy.bbexcite.jp)
[22:53:06] <jcowan> Rule of thumb: linear functions win when N < 30 or so
[22:53:15] <jcowan> lower overhead
[23:00:37] *** Quits: X-Scale (~ARM@92.250.96.158) (Ping timeout: 250 seconds)
[23:05:22] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[23:09:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1)
[23:14:14] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:16:16] <sham1> Hmm, chibi doesn't have srfi 152. Disappointing
[23:21:45] *** Joins: Everything (~Everythin@37.115.210.35)
[23:24:14] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[23:27:11] <sham1> Hum, it doesn't have SRFI 13 either.
[23:33:42] <amazigh> neither srfi-180, nor srfi-167, or srfi-168 :]
[23:33:53] <amazigh> but there is snow-fort!
[23:36:01] <sham1> Welp, snow-fort doesn't have them either.
[23:40:06] *** Joins: badkins (~badkins@136.56.92.199)
[23:40:17] <amazigh> you package them \o/
[23:40:27] <sham1> I probably ought to
[23:40:38] <amazigh> I made the mistake to not package the above libraries even if I did all the hard work
[23:40:41] <amazigh> I was foolish
[23:45:13] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[23:58:33] <Zipheir> sham1: chibi uses SRFI 130, IIRC
[23:58:51] <Zipheir> SRFI 13 is very old fashioned indeed.
[23:58:54] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[23:59:33] <sham1> Nice, 130 also has reverse-list->string
