[00:12:47] <FromDiscord> <Generic> do you need a const char array for some c api?
[00:14:32] <FromDiscord> <Generic> also you need to be careful with a seq[cstring] the cstrings can very easily outlive their original strings
[00:19:00] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[00:19:35] *** Joins: vicfred (~vicfred@user/vicfred)
[00:24:14] <FromDiscord> <auxym> there's the reverse here: https://nim-lang.org/docs/system.html#cstringArrayToSeq%2CcstringArray
[00:25:05] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584)
[00:57:28] <FromDiscord> <Generic> that's where I was going
[00:57:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:57:52] <FromDiscord> <Generic> you can use allocstringarray to convert a seq[string] to cstringarray
[00:58:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:40] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:45:19] <FromDiscord> <Elegantbeef> I think it requires a PR to the compiler to make it so it can work, looked at it briefly, there is an issue opened on nimscripter for it
[01:46:26] <FromDiscord> <enthus1ast> i patched my os.nim
[01:46:59] <FromDiscord> <Elegantbeef> Yea i read, that's not a solution though
[01:47:07] <FromDiscord> <enthus1ast> yes true
[01:47:41] <FromDiscord> <enthus1ast> imho just a conditional import was missing
[01:50:21] <FromDiscord> <asampal (Adrian Sampaleanu)> anyone know if the Windows build is currently working?
[01:51:37] <nrds> <06Prestige99> for stable it is
[01:52:12] <FromDiscord> <asampal (Adrian Sampaleanu)> running from Powershell and getting pretty unexpected output\:↵`↵`
[01:52:41] <FromDiscord> <enthus1ast> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: i also don't know yet if nimscripter is the right route for me
[01:52:44] <FromDiscord> <asampal (Adrian Sampaleanu)> would expect it to try using the VS compiler
[01:52:54] <nrds> <06Prestige99> asampal I don't see your output
[01:53:54] <FromDiscord> <Elegantbeef> Hey use whatever you want, there are issues with nimscripter when using nim modules that do need fixed or workarounds
[01:54:29] <FromDiscord> <Elegantbeef> Oh you're building fro msource
[01:54:45] <FromDiscord> <asampal (Adrian Sampaleanu)> as opposed to?
[01:54:56] <FromDiscord> <Elegantbeef> Getting a pre compiled binary
[01:54:56] <FromDiscord> <enthus1ast> no offence i just don't know yet what is better, another option i have is direct PNode generation, i guess nimscripter transforms NimNodes to PNodes?
[01:55:07] <FromDiscord> <enthus1ast> (better for my use case i mean)
[01:55:11] <FromDiscord> <Elegantbeef> Nimscripter transforms Nim code into pnodes and vice versa
[01:55:24] <FromDiscord> <Elegantbeef> It doesnt touch nimnodes
[01:55:28] <FromDiscord> <asampal (Adrian Sampaleanu)> well, a precompiled binary wouldn't be building it
[01:55:54] <FromDiscord> <Elegantbeef> Hey i thought the intent was getting a binary, my bad
[01:56:23] <FromDiscord> <Elegantbeef> You dont have gcc in your path
[01:56:42] <FromDiscord> <asampal (Adrian Sampaleanu)> I have Visual Studio installed though
[01:56:52] <FromDiscord> <asampal (Adrian Sampaleanu)> shouldn't the build use that?
[01:56:52] <FromDiscord> <Elegantbeef> In powershell I assume `gcc --version` doesnt work?
[01:57:07] <FromDiscord> <asampal (Adrian Sampaleanu)> nope
[01:57:09] <FromDiscord> <Elegantbeef> No it uses gcc by default, you might be able to force it to use vcc
[01:58:15] <FromDiscord> <Elegantbeef> Install mingw is what i'd say
[01:58:55] <FromDiscord> <Elegantbeef> Dont know where the build.bat file is so dont know how to force vcc to be used
[01:59:01] <FromDiscord> <asampal (Adrian Sampaleanu)> got WSL for Linux-y stuff
[01:59:09] <FromDiscord> <asampal (Adrian Sampaleanu)> don't use mingw any longer
[01:59:45] <FromDiscord> <asampal (Adrian Sampaleanu)> under Windows I would expect VS should be fine - I'll see what's needed to make it use that, I guess
[02:00:05] <FromDiscord> <Elegantbeef> Well mingw is what Nim defaults for a compiler on windows, so you have to override that to be vcc
[02:00:16] <FromDiscord> <Elegantbeef> It should be relatively simple i reason but i dont see how
[02:01:43] <FromDiscord> <Elegantbeef> Ah it's in the csources
[02:02:01] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/csources_v1/blob/master/build.bat#L3-L4 setting these two flags after it clones the csources to be vcc might work
[02:02:19] <FromDiscord> <Elegantbeef> Then you have to pass `--cc:vcc` to all the nim commands
[02:02:29] <FromDiscord> <Elegantbeef> Or change your config to use vcc by default
[02:05:37] <FromDiscord> <Elegantbeef> [enthus1ast](https://matrix.to/#/@sn0re:matrix.code0.xyz)\: what're you working on anywho?
[02:14:52] <FromDiscord> <asampal (Adrian Sampaleanu)> sent a code paste, see https://play.nim-lang.org/#ix=3RDK
[02:28:08] <anddam> do I need to reinstall packages after I upgraded 1.6.2 > 1.6.4 ?
[02:28:28] <FromDiscord> <gibson> In reply to @asampal (Adrian Sampaleanu) "got WSL for Linux-y": Make sure you are using the Visual Studio Development Terminal I forget what it's called but there's a shortcut in your Start menu somewhere. That will call the right script that sets a ton of VS/MS environment variables so nim can call the compiler tools correctly.
[02:28:50] <FromDiscord> <gibson> Do all your compiler stuff in that terminal.
[02:30:47] <FromDiscord> <gibson> https://docs.microsoft.com/en-us/visualstudio/ide/reference/command-prompt-powershell?view=vs-2022
[02:46:32] <FromDiscord> <gibson> Does anyone know a AoS/SoA library for nim? I thought there was an older one, but all I found was this: https://github.com/guibar64/aossoa
[02:46:56] <FromDiscord> <gibson> (edit) "this:" => "this by treeform:"
[02:47:17] <FromDiscord> <gibson> (edit) "this by treeform: https://github.com/guibar64/aossoa" => "this://github.com/guibar64/aossoa"
[02:47:32] <FromDiscord> <gibson> (edit) "this://github.com/guibar64/aossoa" => "this: https://github.com/guibar64/aossoa"
[02:47:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:47:47] <FromDiscord> <Elegantbeef> No you dont need to update packages
[02:48:17] <FromDiscord> <Elegantbeef> There is https://github.com/liquidev/datarray @gibson
[02:48:52] <FromDiscord> <gibson> @ElegantBeef Ah! That's it, thanks.
[02:50:24] <FromDiscord> <Elegantbeef> It's relatively easily to make with macros eitherway
[02:54:18] <FromDiscord> <gibson> I know, but I'm trying to keep the code that's here legible to newbs on the project, and using something that already has tests and docs as a black box of non-concern is easier for that purpose.
[02:54:28] <FromDiscord> <Elegantbeef> Ah
[02:59:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[03:14:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:25:03] <FromDiscord> <Alea> So I just saw that post about NimSkull↵Will existing libs be compatible with that?
[03:25:47] <FromDiscord> <Elegantbeef> Presently many, but as time goes on fewer and fewer
[03:29:46] <FromDiscord> <Elegantbeef> Anything with async will not work since they want to use CPS instead
[03:54:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[03:59:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:50:39] <FromDiscord> <rockcavera> sent a long message, see http://ix.io/3REr
[04:50:56] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[04:52:33] <FromDiscord> <rockcavera> It is also not necessary to open cmd with msvc paths, because vccexe.exe already searches and finds the compiler.
[05:28:35] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:28:50] *** Joins: a12c58 (~a12c58@2405:201:9003:f190:6216:3d65:8a93:7f09)
[05:28:57] <a12c58> hi
[05:29:23] <a12c58> what language did you use before you used num?
[05:29:27] <FromDiscord> <Elegantbeef> Hello
[05:29:32] <FromDiscord> <michaelb> sent a code paste, see https://play.nim-lang.org/#ix=3REC
[05:29:34] <a12c58> sorry *nim
[05:29:35] <FromDiscord> <Elegantbeef> I used C# before Nim
[05:29:43] <a12c58> cool
[05:29:50] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:29:52] <a12c58> i am learning python
[05:30:11] <a12c58> can you use nim in place of it?
[05:30:44] <nrds> <06Prestige99> I used typescript and java mostly
[05:30:48] <FromDiscord> <Elegantbeef> Depends on what you're doing, you can do a lot with Nim
[05:31:28] <FromDiscord> <michaelb> In reply to @a12c58 "what language did you": mostly a lot of dynamic langs: JavaScript, Clojure, Racket, some Perl and Python, R, ...↵Nim is the first statically typed compiled lang that I've spent a lot of time with
[05:31:44] <FromDiscord> <Elegantbeef> It's technically capable but depending on your application you may run into ecosystem issues
[05:32:28] <a12c58> okay i understand
[05:32:50] <a12c58> are most people from dev ops here?
[05:33:23] <FromDiscord> <Elegantbeef> I'm mostly a pretend gamedev
[05:34:40] <FromDiscord> <michaelb> not formally, but it's landed on me to do some "dev ops" stuff on various projects given my experience with sysadmin stuff, bash scripting, etc.
[05:36:16] <a12c58> @Elegantbeef gamedev is really creative stuff, cool 
[05:37:03] <a12c58> @michaelb are you part of any open source group?
[05:37:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:43:09] *** Quits: a12c58 (~a12c58@2405:201:9003:f190:6216:3d65:8a93:7f09) (Quit: Leaving)
[05:47:15] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:54:39] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[05:54:52] <FromDiscord> <Girvo> Hi all 🙂
[05:56:35] <FromDiscord> <gibson> In reply to @a12c58 "are most people from": Academics/Science
[05:56:54] <FromDiscord> <gibson> (edit) "In reply to @a12c58 "are most people from": Academics/Science ... " 03added "for myself"
[05:57:57] <FromDiscord> <Girvo> @aaa123rc Firmware/IoT service for me
[05:58:27] <FromDiscord> <Elegantbeef> Oh girvo's work is related to IoT guess no more help from me 😛
[05:58:38] <FromDiscord> <Girvo> Hahaha nothing to do with consumers 😉
[05:58:52] <FromDiscord> <Elegantbeef> Ah so no IOT gas ranges 😛
[05:59:10] <FromDiscord> <Girvo> Haha definitely not 😂
[05:59:31] <FromDiscord> <Girvo> Consumer IoT is basically always a "solution" in search of a problem!
[06:00:09] <FromDiscord> <Elegantbeef> As long as you dont want to put a wifi/bluetooth adapter in my dogs we're fine!
[06:00:15] <FromDiscord> <Girvo> We're building (well, have built) an end-to-end sensor platform for industrial/health applications. Being used by Dubai's health service to track COVID vaccine temperatures, for example
[06:00:19] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[06:00:53] <FromDiscord> <Elegantbeef> Yea i see a lot of it iot stuff as just dumbly designed stuff that encourages bad security practices, like having a oven with a wifi adapter
[06:01:00] <FromDiscord> <Girvo> Yepppppp
[06:01:04] <FromDiscord> <Girvo> Its horrid
[06:02:13] <FromDiscord> <Girvo> Though I'll tell you right now: most industrial/commerical IoT stuff is no better security wise... its one of our points of difference! I've implemented CPace key-exchange to allow us to do _real_ security on some seriously embedded platforms 🙂
[06:03:13] <FromDiscord> <huantian> when will my covid shot have buzzwords like "zero knowledge"
[06:03:40] <FromDiscord> <Elegantbeef> I'm still waiting for my wifi connection to get better so probably never huantian
[06:03:40] <FromDiscord> <Girvo> Zero-knowledge 5G NFT-linked COVID shots, lets goooo
[06:19:00] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[06:29:04] <NimEventer> New post on r/nim by SpookyFries: Is Nim right for me?, see https://reddit.com/r/nim/comments/t96tmn/is_nim_right_for_me/
[06:35:16] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[06:55:08] <FromDiscord> <retkid> is there a phantom-JS like thing for nim
[06:59:46] <FromDiscord> <retkid> https://github.com/dom96/webdriver
[06:59:48] <FromDiscord> <retkid> i found this
[07:03:46] <FromDiscord> <retkid> alright I don't like this code, I'm going to fashion my own McGiver solution
[07:03:59] <FromDiscord> <retkid> (edit) "McGiver" => "MacGyver"
[07:22:53] <FromDiscord> <Rika> ?
[07:22:58] <FromDiscord> <Rika> What don’t you like here…
[07:25:37] <FromDiscord> <Elegantbeef> Yea what's wrong with the code?
[07:30:47] <FromDiscord> <sheldon> https://near.org/blog/near-announces-800-million-in-funding-initiatives-to-support-ecosystem-growth/
[07:31:56] <FromDiscord> <sheldon> Good news, we can get through into NEAR core team, and have them allow and try develop in Nim.
[07:32:40] <FromDiscord> <Elegantbeef> ' it will be focusing on Decentralized Finance (DeFi) teams' so crypto bros
[07:33:20] <FromDiscord> <sheldon> Is there any concern?
[07:33:21] <FromDiscord> <Girvo> That webdriver looks pretty good to me: https://github.com/nim-lang/nimforum/blob/7d8417ff97adb646a35dbf93d5e81ae8eaaee148/tests/browsertests/scenario1.nim
[07:33:25] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:34:40] <FromDiscord> <retkid> In reply to @Elegantbeef "' it will be": 😭
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:43:10] <FromDiscord> <sheldon> Is Nim prohibited to dabble in cryptos?
[07:43:39] <FromDiscord> <michaelb> In reply to @a12c58 "<@383034029135364096> are you part": yes, https://github.com/status-im
[07:44:10] <FromDiscord> <michaelb> which... I guess makes me a crypto bro of sorts 😛
[07:47:18] <FromDiscord> <Elegantbeef> People can use it for whatever they want↵(@sheldon)
[07:51:28] <FromDiscord> <sheldon> Great, I might need some community support to have them know and consider Nim.
[08:04:56] <FromDiscord> <sheldon>  https://media.discordapp.net/attachments/371759389889003532/950612557184516116/unknown.png
[08:26:22] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Remote host closed the connection)
[08:29:39] <FromDiscord> <michaelb.eth> In reply to @sheldon "Great, I might need": Status is a large-ish crypto org and has been using Nim for prototyping and production-quality software for several+ years:↵https://github.com/status-im↵The repos that have names starting with "nim-" are Nim projects (obviously) and there are a few others that aren't named like that but are Nim projects nonetheless
[08:56:44] <FromDiscord> <haoliang> is there a document about undefined behaviors? which i believe are related to nim compiler's runtime checks.
[09:00:15] <FromDiscord> <Elegantbeef> not that i know, but what's the issue?↵(@haoliang)
[09:02:43] <FromDiscord> <haoliang> In reply to @Elegantbeef "not that i know,": i recently found that with `--checks:off` nim compiler will not check bounds, `deque.popLast()` will always return 0
[09:04:38] <FromDiscord> <Elegantbeef> Ah, perhaps a list needs to be mde
[09:04:43] <FromDiscord> <Elegantbeef> made\
[09:05:08] <FromDiscord> <Elegantbeef> I mean it's to be expected that "incorrect" code behaves incorrectly
[09:06:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3REX
[09:07:15] <FromDiscord> <haoliang> i acutally tried this, it always causes a compiler error.
[09:07:23] <FromDiscord> <Elegantbeef> No it doesn
[09:07:42] <FromDiscord> <haoliang> i was thought that was related to `--rangeChecks`
[09:08:46] <FromDiscord> <Elegantbeef> Checks off disables all runtime checks
[09:08:59] <FromDiscord> <Elegantbeef> rangechecks falls under that
[09:09:26] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3REY
[09:09:52] <FromDiscord> <sheldon> https://gov.near.org/t/dapp-development-in-nim/16381
[09:15:43] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:17:32] <FromDiscord> <haoliang> sent a code paste, see https://play.nim-lang.org/#ix=3RF0
[09:18:29] <FromDiscord> <Elegantbeef> Worked on mine, what nim version are you using?
[09:19:04] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:19:17] <FromDiscord> <haoliang> sent a code paste, see https://play.nim-lang.org/#ix=3RF1
[09:19:36] <FromDiscord> <Elegantbeef> you're compiling with `--checks:off`?
[09:20:23] <FromDiscord> <haoliang> yes
[09:20:36] <FromDiscord> <Elegantbeef> Well it works here
[09:21:48] <FromDiscord> <haoliang> a quick screenshot https://media.discordapp.net/attachments/371759389889003532/950631904015699978/20220308_135057.jpg
[09:22:06] <FromDiscord> <Elegantbeef> You're doing `x = 10`
[09:22:11] <FromDiscord> <Elegantbeef> That's checked at compile time not runtime
[09:23:16] <FromDiscord> <Eshoe> sent a code paste, see https://paste.rs/bnu
[09:24:00] <FromDiscord> <Rika> looks right
[09:24:04] <FromDiscord> <haoliang> oh, i see, thank you!
[09:24:04] <FromDiscord> <Rika> ah no
[09:24:09] <FromDiscord> <Rika> `x: ptr UncheckedArray[cdouble]`
[09:25:42] <FromDiscord> <Eshoe> Alright, got it. Thanks.
[09:27:09] <FromDiscord> <Eshoe> It's a bit odd, because the function worked both as `x: ptr UncheckedArray[cdouble]` and as `x: UncheckedArray[cdouble]`. Can you tell me why?
[09:28:07] <FromDiscord> <Elegantbeef> Damn matrix bridge slowed again
[09:30:27] <FromDiscord> <Elegantbeef> An unchecked array is represented as `Type data[]` in C so if it was a stack allocated collection it'd work
[09:30:36] *** Joins: toulene (~toulene@user/toulene)
[09:30:48] <FromDiscord> <Elegantbeef> If it was heap allocated it probably would not look proper, though i could be wrong
[09:31:55] <FromDiscord> <Elegantbeef> I do also think you could use `var cint` and `var cdouble` to make it a bit more idiomatic inside Nim, could be wrong though
[09:32:26] <FromDiscord> <Elegantbeef> Assuming you dont want to nil them and just want to mutate the value they hold
[09:32:50] <FromDiscord> <Eshoe> All the arguments are pointers to memory locations for memory another (parent) process handles.
[09:33:00] <FromDiscord> <Eshoe> (edit) 04removed "for memory"
[09:33:28] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[09:33:42] <FromDiscord> <Elegantbeef> Yea i dont know why the unchecked array worked, the var stuff is still "accurate" though
[09:34:03] <FromDiscord> <Elegantbeef> If you just want a `cint` in a procedure that is mutable `var cint` should be 100% compatible but make the Nim side programming easier
[09:34:13] <FromDiscord> <Elegantbeef> Since a `var` parameter is just a Nim checked pointer
[09:34:55] <FromDiscord> <Eshoe> Interesting, I'll give it a go. Thanks.
[09:36:02] <FromDiscord> <Elegantbeef> Probably rambling, but that only holds if you want to set the data at the pointer and doesnt help if you want to check the pointer(for instance doing a nil check)
[09:36:35] <FromDiscord> <Eshoe> You can assume I do the checks at the parent process level.
[09:37:31] <FromDiscord> <Elegantbeef> Then yea seems like it'd make your life easier
[09:40:17] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[09:42:31] <FromDiscord> <Elegantbeef> Also worth noting you should be able to  do `for ind, val in x.toOpenArray(0, xLen):`
[09:42:44] <FromDiscord> <Elegantbeef> much cleaner than manually iterating and then indexing the value of the array
[09:43:52] <FromDiscord> <Eshoe> Cool. I'll add to my try list, thanks again!
[09:49:57] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[09:52:43] <NimEventer> New Nimble package! iterrr - iterate faster. functional style, lazy like, extensible iterator library, see https://github.com/hamidb80/steps
[09:56:01] <FromDiscord> <Elegantbeef> @Hamid_Bluri\:  `list.filterIt(it mod 2 == 0).mapIt(it  2)` still generates two sequences though, right?
[09:57:27] <FromDiscord> <Elegantbeef> Ah nvm i'm dumb
[10:06:43] <FromDiscord> <Rika> `while being better at: extensibility`?
[10:06:45] <FromDiscord> <Rika> im not sold
[10:10:52] <FromDiscord> <Elegantbeef> Hey they made me quickly wrap my chain implementation
[10:11:12] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Gg6
[10:11:35] <FromDiscord> <Elegantbeef> List comprehension eat your heart out!
[10:18:31] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[10:25:57] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3RF9
[10:26:02] <FromDiscord> <Elegantbeef> Yea i got that
[10:26:11] <FromDiscord> <Elegantbeef> I realized you were just demonstrating the probably too late
[10:26:36] <FromDiscord> <Elegantbeef> I thought you had a magical way to filtering/mapping with macro calls
[10:26:45] <FromDiscord> <Hamid_Bluri> LOL
[10:27:31] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:84f:bc4e:6ee1:2584) (Remote host closed the connection)
[10:28:38] <FromDiscord> <Hamid_Bluri> In reply to @Rika "`while being better at:": see `istrJoin` in `src/iterrr/reducers.nim`
[10:30:45] <FromDiscord> <fbpyr> so, here (https://yewtu.be/watch?v=4o_tmccinds) I learned, that when I compile a staticlib in nim, if I want to use it, the external caller needs to run `NimMain()` first. (still true?)↵if so, is there a way to have a different name for that entrypoint? I would need my entrypoint to be named `plugin_x64_init` (as this is called by the external application, this dll will be for) but still want to make sure, that the necessary nim machinery
[10:30:50] <FromDiscord> <Rika> i am still unconvinced
[10:31:12] <FromDiscord> <Elegantbeef> With orc/arc it's not  required to call `NimMain` unless you have toplevel code
[10:31:42] <FromDiscord> <Hamid_Bluri> In reply to @Rika "i am still unconvinced": eventhough with custom idents?
[10:31:56] <FromDiscord> <fbpyr> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  ah thank you! so it would suffice to use `{.exportc: "plugin_x64_init".}` with the proc then?
[10:31:59] <FromDiscord> <Rika> why does it matter what the idents are called is my opinion?
[10:32:04] <FromDiscord> <Rika> thats barely any benefit
[10:32:11] <FromDiscord> <fbpyr> or would the name be mangled?
[10:32:16] <FromDiscord> <Hamid_Bluri> maybe you wanna iterate over a table
[10:32:26] <FromDiscord> <Elegantbeef> Assuming you compile with arc or orc, and dont need any top level statements you should be fine
[10:32:43] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://paste.rs/7nl
[10:32:43] <FromDiscord> <Elegantbeef> A proc annotated with `exportc` should export with the nim name
[10:33:09] <FromDiscord> <fbpyr> great, thank you! [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)
[10:33:14] <FromDiscord> <Elegantbeef> No problem
[10:33:18] <FromDiscord> <Hamid_Bluri> (edit) "https://play.nim-lang.org/#ix=3RFf" => "https://play.nim-lang.org/#ix=3RFe"
[10:33:20] <FromDiscord> <Elegantbeef> If it doesnt work you'll be able to shout at me
[10:33:24] <FromDiscord> <Rika> maybe i have no use for these
[10:33:26] <FromDiscord> <Rika> its whatever
[10:33:35] <FromDiscord> <Hamid_Bluri> 😄
[10:33:56] <FromDiscord> <Elegantbeef> Eh i dont know i implemented filter, unpack and map to my chain macro cause i couldnt see a need  for anything else operating on a single iterator
[10:34:50] <FromDiscord> <Elegantbeef> being able to do `for it in "hello".unpack(a, b).filter(a > 2).map(ord b): it` for instance
[10:35:03] <FromDiscord> <Rika> im not a functional diehard so prolly aint the target audience
[10:35:12] <FromDiscord> <Elegantbeef> Yea i'm not either
[10:35:33] <FromDiscord> <Elegantbeef> I looked at the library and found the syntax and prefixing with `i` tedious
[10:35:53] <FromDiscord> <Rika> yes
[10:36:16] <FromDiscord> <Elegantbeef> Why do you prefix with `i` anyway?
[10:37:14] <FromDiscord> <Elegantbeef> please dont say to disambiguate 😛
[10:37:18] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[10:37:20] <FromDiscord> <Hamid_Bluri> to not be confusing with `std/sequtils`↵imap => [i]terrr map
[10:37:41] <FromDiscord> <Elegantbeef> Ok so for no reason
[10:37:51] <FromDiscord> <Hamid_Bluri> kinda 😄
[10:38:04] <FromDiscord> <Elegantbeef> Nim has module capabilities to disambiguate do not do this in your code, Nim is not C
[10:38:14] <FromDiscord> <Elegantbeef> Atleast that's my view, YMMV
[10:38:38] <FromDiscord> <Hamid_Bluri> agreed
[10:40:02] <FromDiscord> <Elegantbeef> Still really know about using `><` super obscure and unclear
[10:40:22] <FromDiscord> <Elegantbeef> really dont know\
[10:40:45] <FromDiscord> <Hamid_Bluri> it's really better than `-->` IMO
[10:40:59] <FromDiscord> <Rika> neither is good
[10:41:12] <FromDiscord> <Rika> the intent MIGHT be more clear for -->
[10:41:20] <FromDiscord> <Rika> i would not have understood >< at all
[10:41:44] <FromDiscord> <Elegantbeef> `"hello".pairs.iterWith filter(it[0] mod 2 == 0).map(ord it[1])`
[10:42:16] <FromDiscord> <Elegantbeef> I dont know operators are always weird when there isnt a clear intent
[10:43:14] <FromDiscord> <Hamid_Bluri> does slice `slicerator` have reducer?
[10:43:18] <FromDiscord> <Hamid_Bluri> (edit) "reducer?" => "reducers?"
[10:43:32] <FromDiscord> <Elegantbeef> What's a reducer?
[10:43:38] <FromDiscord> <Rika> probably a fold
[10:44:11] <FromDiscord> <Hamid_Bluri> like `imax` or `iStrJoin`
[10:44:38] <FromDiscord> <Elegantbeef> Well chain is the only thing I have that is really like this
[10:44:40] <FromDiscord> <Rika> so fold
[10:44:43] <FromDiscord> <Elegantbeef> And i only have 3 operations for it so far
[10:45:06] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[10:46:41] <FromDiscord> <Elegantbeef> I'm not much of a FP programmer so I generally use slicerator to empower imperative code
[10:48:00] <FromDiscord> <Elegantbeef> Like i mean i added the `colChain` macro just cause you made me realize i could add it relatively simply
[10:49:11] <FromDiscord> <Elegantbeef> My view is that a lot of the time in Nim when you're doing `filter` or `map` you're just going to operate it on afterwards
[10:49:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:50:06] <FromDiscord> <Hamid_Bluri> In reply to @Elegantbeef "My view is that": for example?
[10:50:22] <FromDiscord> <Hamid_Bluri> i get it
[10:50:35] <FromDiscord> <Hamid_Bluri> (edit) "get" => "got"
[10:50:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RFk
[10:56:20] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3RFn
[10:56:27] <FromDiscord> <Elegantbeef> lol
[10:57:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[11:01:44] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[11:06:17] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[11:12:54] *** Joins: toulene (~toulene@user/toulene)
[11:14:37] <FromDiscord> <Hamid_Bluri> I have doubt whether I should use `do` or `ido` 😄
[11:25:48] <FromDiscord> <Rika> Do is a keyword
[11:25:53] <FromDiscord> <Rika> I believe
[11:26:36] <FromDiscord> <Rika> Actually I didn’t bother looking at the implementation of >< so for all I know it’s prolly an untyped macro
[11:26:38] <FromDiscord> <Rika> Whatever
[11:28:58] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[11:49:55] *** Joins: PMunch (~PMunch@user/pmunch)
[12:01:01] <FromDiscord> <Elegantbeef> fbpyr i'm scared of the message you're going to unleash upon us, i've seen you  start and stop typing a message for like 40 minutes now
[12:02:07] <FromDiscord> <Rika> Incoming 2000 character essay
[12:02:11] <FromDiscord> <Rika> I’m joking ;;
[12:02:31] <FromDiscord> <fbpyr> sent a code paste, see https://paste.rs/VJ5
[12:02:42] <FromDiscord> <fbpyr> heheh probably not quite 2000.. 😀
[12:02:47] <FromDiscord> <Elegantbeef> And your message spawned confetti
[12:02:51] <FromDiscord> <Elegantbeef> 10/10 message
[12:04:27] <FromDiscord> <Elegantbeef> `var res = ucon.get_3d_file_name()`
[12:04:32] <FromDiscord> <Elegantbeef> the issue is that line
[12:05:13] <FromDiscord> <Elegantbeef> `ucon.get3dFileName` is `typedesc[ucon].get3dFileName()`
[12:05:13] <FromDiscord> <fbpyr> yes. somehow it seems to expect the UtilController in a different way..
[12:05:28] <FromDiscord> <Elegantbeef> It expects an instantiated type
[12:05:36] <FromDiscord> <fbpyr> ah ok
[12:05:46] <FromDiscord> <fbpyr> makes sense! 😌
[12:05:55] <FromDiscord> <Elegantbeef> It's not a different way, it's expecting a `ptr UtilController` but got a `typedesc[ucon]`
[12:06:20] <FromDiscord> <fbpyr> so I gave it the abstract class but not an instantiated one.
[12:07:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RFz
[12:07:35] <FromDiscord> <fbpyr> cool! will try that - [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)  thank you so much!!
[12:14:41] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3RFA
[12:17:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:18:26] <FromDiscord> <Elegantbeef> I can see why you thanked me now, i've clearly encouraged the bad behaviour of "why not spend time writing a macro"
[12:19:27] <PMunch> I mean it is kind of addicting..
[12:19:41] <FromDiscord> <Hamid_Bluri> yeah
[12:19:48] <FromDiscord> <Elegantbeef> hello pmunch
[12:19:51] <FromDiscord> <Hamid_Bluri> i found my self writing macro 50% of the time
[12:19:55] <PMunch> Hello
[12:20:10] <FromDiscord> <Elegantbeef> Speaking of macros, i need more things to add to micros
[12:20:41] <PMunch> A README perhaps?
[12:20:46] <FromDiscord> <Elegantbeef> lol
[12:21:01] <FromDiscord> <Hamid_Bluri> In reply to @Elegantbeef "I can see why": actually, that was kinda saying "thank you" elsewhere
[12:22:43] <FromDiscord> <Elegantbeef> only libraries that are supposed to be used get readmes pmunch
[12:23:01] <FromDiscord> <Elegantbeef> And then what they get is something unhelpful
[12:23:08] <PMunch> Haha :P
[12:23:14] <PMunch> micros looks useful though
[12:23:36] <PMunch> But I still don't get how you are able to create trees without a bunch of type errors..
[12:24:01] <FromDiscord> <Elegantbeef> What do you mean?
[12:24:12] <PMunch> Well you use distinct types everywhere
[12:24:22] <FromDiscord> <Elegantbeef> Yes
[12:24:34] <PMunch> How can you get and set nodes without having to cast to NimNode everywhere?
[12:24:39] <FromDiscord> <Elegantbeef> https://github.com/beef331/micros/blob/master/src/micros/nimnodes.nim#L45
[12:24:43] <FromDiscord> <Rika> I think you guys are insane
[12:24:57] <FromDiscord> <Elegantbeef> I do have to cast to NimNodes everytime
[12:24:58] <PMunch> Aaaah
[12:25:00] <FromDiscord> <Elegantbeef> But only internally
[12:25:07] <PMunch> Damn that's pretty clever actually
[12:25:20] <PMunch> You should add one for [] as well
[12:25:48] <FromDiscord> <Elegantbeef> Eh i should make it so you never need the raw macros api
[12:25:50] <FromDiscord> <Elegantbeef> or hardly ever need it
[12:26:02] <PMunch> Fair enough
[12:26:44] <PMunch> Are you hand-generating all your definitions?
[12:26:55] <FromDiscord> <Elegantbeef> How else would you do it?
[12:26:59] <PMunch> https://github.com/PMunch/macroutils/blob/master/src/macroutils.nim#L530
[12:27:05] <PMunch> A macro of course :P
[12:27:24] <FromDiscord> <Elegantbeef> I dont see what that solves
[12:27:26] <FromDiscord> <Hamid_Bluri> wow
[12:27:44] <PMunch> Less typing *shrugs*
[12:27:58] <FromDiscord> <Elegantbeef> I need a constructor to a specific NimNode, i cant really do it wildly like that
[12:29:10] <FromDiscord> <Elegantbeef> I mean i'm not hand generating all the types https://github.com/beef331/micros/blob/master/src/micros/routines.nim#L16-L35 stuff like this is being done
[12:29:41] <FromDiscord> <aph> hi, random but: wats the difference between parseStmt and parseExpr
[12:30:25] <FromDiscord> <Elegantbeef> expr expects an expression
[12:30:31] <FromDiscord> <Elegantbeef> So something that has a value
[12:30:40] <FromDiscord> <aph> ooh
[12:30:41] <FromDiscord> <aph> thx!
[12:30:49] <FromDiscord> <aph> so i guess stmt stands for statement
[12:30:52] <FromDiscord> <aph> (edit) "statement" => "statement?"
[12:30:59] <FromDiscord> <Elegantbeef> yep
[12:31:04] <FromDiscord> <aph> :)
[12:32:54] <FromDiscord> <Elegantbeef> Obviously pmunch if I felt macros could solve a problem I'd use them 😛
[12:35:21] <FromDiscord> <Elegantbeef> I should note I am making a higher level API mostly, so most things hopefully wont be similar to the Nim api
[12:36:03] <FromDiscord> <Elegantbeef> This stuff existing https://github.com/beef331/micros/blob/master/src/micros/identdefs.nim#L15-L17 kinda supersedes manual creation
[12:36:24] <FromDiscord> <Elegantbeef> Yes i need one that takes a NimName
[12:37:31] <FromDiscord> <Elegantbeef> Though I might make a DSL for making a nice `of` operator
[12:39:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RFF
[12:54:22] <PMunch> Hmm, I see
[13:06:40] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[13:07:00] *** Joins: toulene (~toulene@user/toulene)
[13:31:40] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[13:31:59] *** Joins: toulene (~toulene@user/toulene)
[13:50:16] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[13:50:28] *** Joins: toulene (~toulene@user/toulene)
[13:54:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[13:54:54] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[14:10:45] <FromDiscord> <sOkam!> Is there any real difference between result and return?
[14:24:36] <FromDiscord> <Rika> sometimes there is an optimisation that can be done with result but not return
[14:37:31] <FromDiscord> <sOkam!> any examples I should care about, or are they generally not very necessary?
[14:46:09] <FromDiscord> <Waldecir Santos> So I'd like to create an "query-builder" but I'd like to reuse/extend the NimNode object, my question is what is the "correct" way of extending NimNode adding new kinds ? for exemple I'll need new kinds like nnkCustomSelect and etc
[14:46:38] <FromDiscord> <Waldecir Santos> the end goal is to print an `SQL statement` as string.
[14:47:01] <PMunch> sOkam, for the most part you don't have to think about it
[14:47:27] <PMunch> But if you're building up an object just to return it at the end it's probably better to just assign to the result variable instead
[14:57:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:06:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[15:15:41] <FromDiscord> <Phil> In reply to @sOkam! "any examples I should": Imagine you're building a string over time. Instead of returning a variable with that string you can just consistently do `result.add` , something often relevant e.g. for parsing stuff.
[15:15:51] <FromDiscord> <Phil> (edit) "time." => "multiple lines of code."
[15:16:04] <FromDiscord> <Phil> (edit) "," => " at the individual spots that add stuff to the string,"
[15:17:44] <PMunch> Or even an object with multiple fields
[15:18:24] <PMunch> Strings you must remember might reallocate anyways, and the stack-allocated data is only a number and a pointer for ARC and just a pointer for the default GC
[15:19:38] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/WohlSoft/SDL-Mixer-X/blob/master/include/SDL_mixer.h↵I want to Futhark this, but it uses a ton of headers, will I have trouble?
[15:20:19] <PMunch> If you have a stack-allocated object (i.e. a non-ref object) however with a lot of fields assigning to those fields and building the object in a variable might cause the ending `return` to copy that entire object from the procedures stack frame over to the callers stack frame. But by assigning to result instead it can enable an optimisation where these field assignments would be assigning directly to the object in the callers stack frame.
[15:20:54] <PMunch> @System64_~_Flandre_Scarlet, nope shouldn't be a problem
[15:22:02] <PMunch> I assume all those headers live in the same folder (probably in the core SDL distribution). In that case simply pass that in with "path" and then tell Futhark to import "SDL_mixer.h" and it should pull in all the required stuff automatically :)
[15:22:23] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, nope shouldn't be": Ah alright, but the thing is the problem with paths, 'cause of Windows
[15:22:36] <PMunch> Ah yes..
[15:24:50] <FromDiscord> <System64 ~ Flandre Scarlet> And it will be a ton of work if I have to do it manually
[15:25:02] <FromDiscord> <sOkam!> talking about that, do nim tools tested in linux work by default on windows?↵_(thinking of things like compiling and nimscript in general, since bash scripting is not fully transferable unless cygwin)_
[15:26:33] <NimEventer> New question by congusbongus: How do I create a mutable reference to an object in another object?, see https://stackoverflow.com/questions/71394618/how-do-i-create-a-mutable-reference-to-an-object-in-another-object
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:06] <FromDiscord> <sOkam!> Can result be aliased to something else?
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:36] <FromDiscord> <sOkam!> sent a code paste, see https://paste.rs/BC3
[15:40:27] <FromDiscord> <Rika> Remove the last return, using a return like that is not gonna return result
[15:40:46] <FromDiscord> <Rika> Otherwise technically yes, but use addr and not & then r[] = 123
[15:41:07] <FromDiscord> <Rika> The usual “this is unsafe” warning by the way
[15:46:48] <PMunch> I mean you could do this: https://play.nim-lang.org/#ix=3RGf
[15:48:21] <FromDiscord> <Rika> i still think the return at the end doesnt return result, but im not so sure
[15:48:33] <PMunch> It does
[15:48:39] <FromDiscord> <Rika> really, why
[15:48:44] <FromDiscord> <sOkam!> according to the manual, it says that return is an alias for return result
[15:49:01] <FromDiscord> <Rika> i dont ever remember reading that, might be a new addition
[15:49:03] <PMunch> Since the proc has return type `int` then a `return` without an int argument will return `result` by default
[15:49:29] <FromDiscord> <Rika> i just thought it would return default(T)
[15:49:30] <PMunch> Been like that for quite a while IIRC
[15:50:14] <FromDiscord> <sOkam!> @Rika you were right in that specific example though, since the proc has no type 🤔 https://media.discordapp.net/attachments/371759389889003532/950729652270424134/unknown.png
[15:51:55] <FromDiscord> <Rika> result doesnt make sense without a type though
[15:59:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[16:28:34] <PMunch> Huh, apparently we have LED-array fidget spinners as merch where I work
[16:28:45] <PMunch> So when you spin them they will show the company took
[16:29:00] <PMunch> Took one apart and there's an ARM Cortex-M3 inside
[16:38:44] <FromDiscord> <Rika> god DAMN that sounds overkill
[16:38:55] <PMunch> Yup :P
[16:39:00] <PMunch> I wonder if it's programmable
[16:41:35] <FromDiscord> <System64 ~ Flandre Scarlet> About Futhark again, is it possible to apply that to an header + C file?
[16:42:07] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/system64MC/Kurumi-fmcomposer/tree/master/src/fmengine
[16:52:24] <PMunch> Yes that is what I do in the example
[16:52:43] <PMunch> That static output and compile part is to compile against a C file
[16:52:59] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright↵But I'll have trouble with Windows paths again :/
[16:53:16] <PMunch> Easier to just switch to Linux at this point :P
[16:53:32] <FromDiscord> <System64 ~ Flandre Scarlet> I can't leave Windows "cause of school
[16:53:48] <FromDiscord> <System64 ~ Flandre Scarlet> (Visual Studio)
[16:54:17] <FromDiscord> <System64 ~ Flandre Scarlet> But what I can eventually do is a Linux VM
[16:54:38] <FromDiscord> <System64 ~ Flandre Scarlet> or via WSL
[16:54:56] <FromDiscord> <System64 ~ Flandre Scarlet> and then take the binaries
[16:55:00] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "binaries" => "nim files"
[16:55:23] <PMunch> "I can't leave Windows "cause of school"" <- Not with that attitude
[16:55:31] <PMunch> I'm the only one at work who uses Linux
[16:55:40] <PMunch> And all the others use Visual Studio
[16:55:49] <PMunch> But I digress
[16:55:56] <PMunch> We should really fix the paths..
[16:57:40] <FromDiscord> <System64 ~ Flandre Scarlet> But in fact I want to move to Linux
[17:25:32] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "We should really fix": Sadly I don't know how to fix thoses paths
[17:31:58] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:37:22] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[17:51:22] <FromDiscord> <Bung> @ElegantBeef Script Error: /users/bung/.choosenim/toolchains/nim-1.6.4/lib/pure/os.nim:812:16 undeclared identifier: 'cmpic' , could you help me with this
[17:52:22] <FromDiscord> <xflywind> In reply to @Bung "<@!145405730571288577> Script Error: /users/bung/.c": It seems to be a known issue: https://github.com/nim-lang/Nim/issues/17051
[17:52:36] <FromDiscord> <xflywind> and https://github.com/beef331/nimscripter/issues/11
[17:52:37] <PMunch> @System64_~_Flandre_Scarlet, I think the main problem with these paths is just figuring out how you're supposed to set up paths on Windows with clang
[17:52:58] <PMunch> I could certainly look into it, but without a Windows machine to test it on it's a bit of a pain to figure out if I'm on the right track or not
[17:53:37] <PMunch> I could of course set up a Windows VM or something, but spending time on that means I can't spend my free-time on more interesting projects..
[17:54:11] <FromDiscord> <Bung> In reply to @flywind "It seems to be": yeah, that's right cause
[17:55:42] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[17:58:35] *** Joins: arkurious (~arkurious@user/arkurious)
[17:58:36] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, I think the": I think Clang is in a good path↵But I think the ``\`` disturbs Futhark, maybe you should escape the ``\`` by doing ``\\`` or something
[17:58:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:58:59] <FromDiscord> <System64 ~ Flandre Scarlet> same for spaces, they should be escaped
[18:00:10] <PMunch> Yeah I know what the core issue is, but testing whether a certain fix works or not would be super annoying
[18:00:26] <FromDiscord> <System64 ~ Flandre Scarlet> I understand
[18:00:41] <FromDiscord> <System64 ~ Flandre Scarlet> and can it work under WSL? And then I copy the files
[18:02:08] <PMunch> Well it can, but then clang will see it as a Linux machine, so if the codebase has any checks for which OS its on you will be generating the Linux version
[18:02:29] <PMunch> It's probably a super easy fix in the syspath and path branches here: https://github.com/PMunch/futhark/blob/master/src/futhark.nim#L428
[18:03:06] <PMunch> Basically those paths and -I parts (which is what is handed to opir and on to clang) should be investigated
[18:03:47] <PMunch> Hmm, I think this might fail on Linux as well if you throw spaces in there
[18:04:04] <PMunch> It's just that people on Linux tend to not use spaces in their paths so I've never run into this issue
[18:07:11] <FromDiscord> <System64 ~ Flandre Scarlet> The backslashes are more problematic
[18:14:47] <PMunch> Using strformat, is there a way to print out X characters of a cstring?
[18:16:36] <FromDiscord> <Rika> not that i know of
[18:26:53] <PMunch> Well this works: http://ix.io/3RGV/nim
[18:28:32] <FromDiscord> <Rika> oh huh i forgot custom stuff
[18:49:44] *** Quits: nisstyre (~wes@user/nisstyre) (Quit: WeeChat 3.2.1)
[19:11:44] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 250 seconds)
[19:17:56] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[19:19:17] *** Joins: jkl (~jkl@user/jkl)
[19:22:13] <FromDiscord> <d4rckh> sent a code paste, see https://play.nim-lang.org/#ix=3RHv
[19:22:56] <FromDiscord> <enthus1ast> echo time2 - time1
[19:23:26] <FromDiscord> <d4rckh> i did that already but i get this very long string, i just want it in a shorter format https://media.discordapp.net/attachments/371759389889003532/950783308755796028/unknown.png
[19:23:45] <FromDiscord> <enthus1ast> then you have to format it accordingly
[19:25:18] <FromDiscord> <Rika> echo (time2 - time1).inMilliseconds, "ms"
[19:25:40] <FromDiscord> <d4rckh> thank you!
[19:25:42] <FromDiscord> <Rika> more work needed for autoscaling
[19:26:14] <FromDiscord> <d4rckh> i think i can figure that on my own 🙂
[19:31:05] *** Joins: nisstyre (wes@user/nisstyre)
[19:47:55] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[20:07:59] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89)
[20:09:24] <FromDiscord> <offray> sent a long message, see https://paste.rs/6LW
[20:16:25] <FromDiscord> <offray> Found it! It was a matter of using `replace` instead of `multiReplace`
[20:31:40] *** Quits: nisstyre (wes@user/nisstyre) (Quit: WeeChat 3.4)
[20:32:01] *** Joins: nisstyre (wes@user/nisstyre)
[20:37:40] *** Joins: toulene (~toulene@user/toulene)
[20:42:00] <FromDiscord> <System64 ~ Flandre Scarlet> is there SDL Mixer bindings for Nim?
[20:42:18] *** Joins: toulene_ (~toulene@user/toulene)
[20:42:20] *** Quits: toulene (~toulene@user/toulene) (Client Quit)
[20:43:55] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:44:48] *** Quits: toulene_ (~toulene@user/toulene) (Remote host closed the connection)
[20:45:44] *** Joins: toulene (~toulene@user/toulene)
[20:45:45] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/nim-lang/sdl2/blob/master/src/sdl2/mixer.nim↵I find the thing
[20:48:12] <FromDiscord> <System64 ~ Flandre Scarlet> Mixer is included by default
[20:49:41] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/WohlSoft/SDL-Mixer-X↵Following the logic, I should be able to port this
[20:51:20] *** Joins: rockcavera (~rc@192.12.112.199)
[20:51:20] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[20:51:20] *** Joins: rockcavera (~rc@user/rockcavera)
[20:54:26] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[20:54:46] <FromDiscord> <Sense> Damn, I wish there was some guides about how to use Nim in creating demoscene stuff
[20:56:11] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[21:14:57] <FromDiscord> <retkid> Does it make sense to differentiate different types of computing
[21:15:28] <FromDiscord> <retkid> im searching for a language to learn how to integrate opengl into my programming, I know i can probably do it in Nim but idk if i want to
[21:20:49] *** Quits: toulene (~toulene@user/toulene) (Quit: Leaving)
[21:20:54] <FromDiscord> <Require Support> whats equivalent of C variable thats an  ` unsigned char ` in nim
[21:21:30] <FromDiscord> <Rika> ptr cuchar
[21:22:19] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3RIb
[21:22:49] <FromDiscord> <enthus1ast> the varargs is the problem
[21:22:57] <FromDiscord> <enthus1ast> withouth varargs (and just one param it works)
[21:23:44] <FromDiscord> <Rika> you dont intend kind and name to also be varargs do you? im not sure
[21:23:54] <FromDiscord> <enthus1ast> nope
[21:23:54] <FromDiscord> <enthus1ast> oh
[21:23:57] <FromDiscord> <enthus1ast> \:)
[21:23:58] <FromDiscord> <Rika> 🙂
[21:24:08] <FromDiscord> <enthus1ast> gonna fix something real quick
[21:24:47] <FromDiscord> <enthus1ast> thank you @Rika
[21:30:06] <FromDiscord> <enthus1ast> the error is gone, but it does not work as intended, the dyn template should just pass the param (any kind) to the proc from the lib
[21:30:48] <FromDiscord> <enthus1ast> must i write a macro for that?
[21:59:33] *** Joins: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[22:16:36] *** Quits: lumidify (~lumidify@user/lumidify) (Ping timeout: 240 seconds)
[22:16:53] *** Joins: lumidify (~lumidify@user/lumidify)
[22:18:11] <reversem3[m]> How can I read a binary file and get its size? 
[22:18:59] <reversem3[m]> binary file is a compiled file by the way 
[22:19:19] <reversem3[m]> sort of how stat works  ? 
[22:28:46] *** ox is now known as oz
[22:39:05] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[22:48:14] *** Joins: vicfred (~vicfred@user/vicfred)
[22:52:44] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 250 seconds)
[22:59:57] <reversem3[m]> How would you find the last position in a binary file using stream 
[23:00:33] <reversem3[m]> does it make more sense to calculate the length of binary in hex first? 
[23:01:53] <Amun-Ra> reversem3[m]: .setPosition int.high; .getPosition
[23:03:08] <Amun-Ra> there's no (0, SEEK_END) equivalent; as for me - I pass file/whatever length along with the stream
[23:05:35] <reversem3[m]> `var pos = strm.setPosition(int.high.getPosition)` ? 
[23:06:06] <Amun-Ra> s.setPosition int.high; let lastpos = s.getPosition
[23:07:06] <Amun-Ra> I haven't tested it tho
[23:11:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[23:11:42] <reversem3[m]> https://play.nim-lang.org/#ix=3RIx
[23:12:49] <FromDiscord> <Waldecir Santos> Is it possible to extend NimNode with new kinds ?
[23:19:27] <FromDiscord> <ynfle> In reply to @Waldecir Santos "Is it possible to": No. You don't have control over the definition. It's someones code. Unless you add code to the compiler.
[23:19:33] <FromDiscord> <ynfle> What are you trying to do?
[23:20:37] <FromDiscord> <Waldecir Santos> I want to create a SQL/AST parcer, I was trying to reuse NimNode to avoid rebuilding the "same" functionality
[23:21:49] <Amun-Ra> reversem3[m]: https://play.nim-lang.org/#ix=3RIx (iirc s.set_position int.high will clamp position to min(last position, inthigh)
[23:22:38] <FromDiscord> <ynfle> In reply to @Waldecir Santos "I want to create": Well nim's parser won't really help you so much because much sql isn't valid nim syntax
[23:23:17] <FromDiscord> <Waldecir Santos> No I just want the "structure" to store the SQL statements, but yeah I'll need to create one, ty
[23:24:12] <reversem3[m]> yeah thats not working , I'm doing something wrong , var pos = strm.setPosition(line.high .. 5) ?
[23:24:53] <FromDiscord> <ynfle> In reply to @Waldecir Santos "No I just want": The object variant implmentation is probably as lot simpler than the parser
[23:30:19] <FromDiscord> <michaelb.eth> any way to have gorge/Ex show output as it goes along, i.e. instead of capturing it in a variable and displaying it after the cmd finishes?
[23:34:13] <FromDiscord> <auxym> not with gorge, but with any proc that takes `ProcessOption` in std/osproc, you can pass `poParentStreams`
[23:34:36] <FromDiscord> <auxym> it will redirect the subprocess stdio to your app's stdio
[23:35:17] <FromDiscord> <auxym> can't use osproc at compile time (or in nimscript) though
[23:50:56] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
