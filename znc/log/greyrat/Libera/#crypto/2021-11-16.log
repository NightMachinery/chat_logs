[00:03:54] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 260 seconds)
[00:08:07] *** Joins: maroon (tinycrypt@user/maroon)
[00:09:48] *** Joins: Thursday (~Thursday@user/thursday)
[00:22:07] *** Joins: sidj (~sidj@78.192.48.242)
[00:23:19] *** Quits: sidj (~sidj@78.192.48.242) (Client Quit)
[00:24:14] *** Joins: sidj (~sidj@78.192.48.242)
[00:24:14] *** Quits: sidj (~sidj@78.192.48.242) (Changing host)
[00:24:14] *** Joins: sidj (~sidj@user/sidj)
[00:27:00] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[00:30:30] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[00:32:07] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[00:35:10] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:40:15] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[00:40:36] *** Joins: son0p (~ff@181.136.122.143)
[00:41:23] *** Quits: kajus (~kajus@200116b845495d0035e4e13366b9ca9c.dip.versatel-1u1.de) (Remote host closed the connection)
[00:48:23] *** Joins: mononote (~mononote@user/mononote)
[00:48:43] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 250 seconds)
[00:56:27] *** Joins: sidj (~sidj@78.192.48.242)
[00:56:27] *** Quits: sidj (~sidj@78.192.48.242) (Changing host)
[00:56:27] *** Joins: sidj (~sidj@user/sidj)
[01:13:06] *** Quits: piku (~piku@47.202.113.8) (Quit: Leaving)
[01:15:57] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[01:28:33] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[01:35:39] <rk4> we can construct a one time pad to say whatever you want it to say, if that helps
[01:45:59] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 264 seconds)
[01:56:38] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[01:57:01] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:00:00] <yanmaani> Has anyone looked into doing MITM prevention using latency?
[02:00:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[02:00:45] <yanmaani> If I send packets, and I include in them a timestamp, I can encode data in this timestamp.
[02:00:57] <yanmaani> An attacker can delay the packets arbitrarily long, but he can't make them go any earlier.
[02:01:26] <yanmaani> He can also change the timestamp without delaying them, but this will be possible to detect.
[02:01:36] <snappy> yanmaani: i think you might want to look at distance bounding protocols
[02:04:04] <sarnold> heh, this reminds me of the classic "500 mile email" story :)
[02:07:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:07:53] <iz> DPA: it might not even be a cipher -- might just be like.. trying to screw up anti-spam bayesian filtering for that e-mail address/sender
[02:09:42] <sarnold> that feels like a very good guess
[02:10:04] <sarnold> a bit funny that they'd put effort into the reputation of any specific address, but given what's there, it feels pretty plausible
[02:10:54] <iz> yeah, usually when you see that, it'll be like at the bottom of a spam message
[02:14:19] <yanmaani> snappy: Isn't that for detecting the physical distance?
[02:21:29] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[02:24:03] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[02:24:12] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 265 seconds)
[02:28:50] *** Joins: CryptoClub (~fafs@87.125.251.76)
[02:28:56] <iz> yanmaani: how would that stop mitm though?  can't the man in the middle just makeup whatever timestamps they want for both sides?
[02:29:36] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[02:32:31] *** Joins: Ox1OfMe (~Ox1OfMe@65.174.54.77.rev.vodafone.pt)
[02:33:02] *** Parts: Ox1OfMe (~Ox1OfMe@65.174.54.77.rev.vodafone.pt) ()
[02:37:13] *** Quits: Thursday (~Thursday@user/thursday) (Quit: WeeChat 3.3)
[02:37:26] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:39:06] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[02:45:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[02:45:36] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:46:40] *** Joins: WishBoy (~WishBoy@user/wishboy)
[02:58:19] <yanmaani> iz: Yes, but only adding.
[02:59:38] <yanmaani> If I send at 00:00:01.000 a message, and include the timestamp "01.000", if the delay is 50ms, then my counterparty will at :01.050 get that message
[02:59:47] <iz> well, i mean the actual server and actual client never get to see the real messages meant for them
[03:00:04] <yanmaani> if there's a mitm in there, he can amend that timestamp, but only to add to it.
[03:00:06] *** Joins: YourNick (~pgm@95.85.25.134)
[03:00:13] *** Parts: YourNick (~pgm@95.85.25.134) ()
[03:00:19] <yanmaani> So for example, let's say I'm talking to someone
[03:00:25] <yanmaani> we've a shared secret
[03:00:28] <iz> he can reset the timestamp in the packet that goes to the client
[03:00:53] <yanmaani> I set my client to only send at, let's say, milliseconds ending in 555
[03:01:05] <yanmaani> so :01.555, :02.555, etc
[03:01:17] <yanmaani> (Our shared secret is 555)
[03:01:30] <iz> oh, well if you already have a shared secret, just use that to prevent mitm :b
[03:01:44] <yanmaani> iz: Well, a shared secret that may be intercepted
[03:02:09] <yanmaani> e.g. the dh between my key and (MITM/their) key
[03:02:17] <iz> yeah, that seems like it wouldn't work, b/c the middle man can just see the secret milliseconds
[03:02:30] <yanmaani> iz: yes, but he can't edit it
[03:02:34] <iz> sure he can
[03:02:37] <yanmaani> there'll be a different shared secret
[03:02:41] <yanmaani> iz: he can't edit the time
[03:02:51] <yanmaani> and if the timestamps mismatch the time, that's trivially detectable
[03:03:12] <iz> sure he can, he's got two seperate connections to server and client, each thinking the middle man is the other client or server
[03:03:13] <yanmaani> so if the other party is expecting timestamps ending in 222, then this means he either has to
[03:03:37] <yanmaani> -edit the timestamp, but then there will be a strange delay of 333 ms
[03:03:43] <iz> just has to see the milliseconds in the connection coming from the server
[03:03:51] <iz> and set the miliseconds in the connection to the client
[03:04:08] <iz> can even wait to send at the right time
[03:04:42] <yanmaani> -edit the timestamp and delay, but then there will be a connection latency of 778ms
[03:04:55] <yanmaani> iz: Yes, but that only works if he wants to add to it.
[03:05:17] <yanmaani> he can turn the clock forward, but not back.
[03:05:30] <iz> sure, but it's just the miliseconds
[03:05:34] <sarnold> lousy antisymmetric time
[03:05:38] <iz> just add 1 second to make sure it's inthe future
[03:05:55] <iz> and wait those milliseconds before you send to client
[03:06:03] <yanmaani> iz: Yes, but then he'll notice there's a big delay.
[03:06:09] <iz> client never knows what the server's original time was
[03:06:17] <iz> because two seperate connections
[03:06:21] <yanmaani> iz: What if I do this for ACKing messages?
[03:06:22] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[03:06:45] <iz> once the man's in the middle, w/ two seperate connections, i don't think it would matter
[03:06:55] <yanmaani> Alice sends to Bob "hello, pls ACK this after (4 * shared_secret[0]) ms"
[03:07:11] <iz> alice sends to mallory that message
[03:07:18] <iz> thinking she is bob
[03:08:46] <Alipha> and then mallory replies to alice at the appropriate time
[03:09:07] <yanmaani> Yeah ok that's a bad example - you have to integrate it with the "human" content
[03:09:34] <yanmaani> but take the other example, with milliseconds.
[03:10:13] <yanmaani> If they ping each other to establish a common time, that should work. Mallory can obviously make them obtain whatever latency, but not more.
[03:10:34] *** Quits: yewscion (~yewscion@72-21-196-65.amazon.com) (Ping timeout: 260 seconds)
[03:10:41] <maroon> is mallory intercepting the pings too?
[03:10:59] <yanmaani> maroon: Yes. He can respond early or late.
[03:11:23] <yanmaani> But if he's early, then that means whatever interceptions he does are noticeable (latency goes up way above measured baseline)
[03:11:30] <yanmaani> if he's late, then latency becomes absurdly high
[03:12:45] <Alipha> what's "absurdly high"?
[03:13:35] <yanmaani> alipha: If latency is 1000ms on a normal TCP/IP conection, for example. Protocol could be designed to use "windows" of 10s or something
[03:13:41] <iz> as far as latency goes, alice communicating to mallory (who she thinks is bob) will be the same as alice communicating with bob
[03:13:42] <maroon> if you know what kind of cpu, and know how long argon takes them, then alice can demand that bob reply quick enough to not give mallory time to decrypt from alice and re-encrypt in fake key for bob
[03:13:44] <yanmaani> if you get 10,000 ms, that's extreme even for Tor
[03:14:01] <yanmaani> maroon: that's even smarter
[03:14:05] <yanmaani> what about time-lock encryption?
[03:14:43] <maroon> never herduvit
[03:14:56] <iz> alice and bob never see each other's messages
[03:15:03] <Alipha> maroon: though then mallory just needs a computer that's 2x faster than alice and bob
[03:15:42] <maroon> but there's no enough time for them to relay to/from bob?
[03:15:50] <iz> or three computers networked
[03:15:58] <iz> of equiv speed
[03:16:01] <yanmaani> maroon: I generate a random key K, I encrypt my message with it. I encrypt <zero block || K> with <0000000000000 | rand>
[03:16:07] <yanmaani> I can then repeat this process
[03:16:26] <snappy> yanmaani: yeah, physical distance, but i guess that's a function of latency
[03:16:30] <yanmaani> e.g. I encrypt <zero block || encrypted K>
[03:16:42] <yanmaani> brute-force is almost 100% sequential
[03:16:45] <yanmaani> there's better schemes too
[03:17:08] <maroon> so alice and bob are not able to share any kind of authentication beforehand?
[03:17:18] <yanmaani> maroon: correct
[03:17:22] <yanmaani> iz: won't work if it's sequential
[03:17:54] <yanmaani> snappy: in response to what message?
[03:18:07] <iz> how would bob usually figure out the encrypted message then?
[03:18:16] <snappy> last one you sent to me, re: distance bounding protocols
[03:18:22] <snappy> sorry i was in scrollback
[03:18:24] <iz> he has to crack every packet?
[03:19:09] <Alipha> DH
[03:19:42] <iz> well yeah
[03:19:49] <maroon> if it takes bob 5 sec to un-argon and another 5 secs to re-argon, anything above 10 secs would be the allowance for latency
[03:20:04] <iz> lol
[03:20:14] <iz> 5 seconds per packet in normal usage?
[03:20:42] <iz> with CPU pegged
[03:20:50] <maroon> you only need to do that long enough to authenticate that mallory isnt in the middle
[03:21:18] <iz> mmm
[03:21:38] <iz> still though, when DH exists..
[03:23:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[03:24:38] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:25:40] <Alipha> this assumes that when alice sends bob a message through mallory, that mallory is waiting to see what bob's reply is. if mallory just sends a reply as soon as he receives a message from alice, then mallory can create a reply in under 10 seconds, just as bob could
[03:33:19] <maroon> bob send me a picture of you holding my public key
[03:33:39] <WishBoy> alice reply
[03:34:05] <WishBoy> bob and alice are old in cryptograph
[03:34:09] <WishBoy> y
[03:34:29] <WishBoy> i know they since 90'
[03:34:46] <iz> alice, bob, mallory, and eve.. are there any others?
[03:35:53] <iz> lol, https://en.wikipedia.org/wiki/Alice_and_Bob#Cast_of_characters
[03:36:17] <WishBoy> hahahaha
[03:36:19] <WishBoy> let me see
[03:36:21] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Quit: JollyRoger)
[03:36:54] <Alipha> iz: i've not heard of most of those
[03:36:59] <iz> yeah, same
[03:37:13] <iz> i recall Trent being one.. and also C-name
[03:37:21] <iz> but the others i've never really seen
[03:37:21] <WishBoy> the list is long, i didn't even know them, just alice and bob were part of all my studies when i was young
[03:38:13] <iz> i think i've seen Carol and Charlie before in older texts
[03:40:46] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:41:30] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[03:42:32] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[03:48:39] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[03:53:59] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[03:55:02] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:57:09] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[03:59:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[04:00:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:04:02] *** Quits: ua_ (~ua@public-gprs233258.centertel.pl) (Ping timeout: 240 seconds)
[04:15:22] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:16:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:19:14] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[04:22:25] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[04:28:46] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[04:31:48] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[04:39:41] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[04:42:12] *** Joins: lord| (~lordpipe@user/lordpipe)
[04:51:46] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[04:53:18] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 256 seconds)
[04:56:27] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[05:00:40] *** Quits: X-Scale (~ARM@31.22.167.45) (Ping timeout: 256 seconds)
[05:00:44] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:13:03] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[05:19:10] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[05:29:00] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Ping timeout: 256 seconds)
[05:50:01] *** Quits: baakeydow (~baake@2001:bc8:65c:2601::1) (Quit: baakeydow)
[06:02:40] *** Joins: frost (~frost@user/frost)
[06:07:00] *** Quits: danieldg (~me@user/danieldg) (Ping timeout: 250 seconds)
[06:11:02] *** Joins: danieldg (~me@user/danieldg)
[06:13:52] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[06:19:21] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[06:38:29] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[07:01:22] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[07:35:27] *** Joins: ua_ (~ua@public-gprs210913.centertel.pl)
[07:36:01] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[07:41:41] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[08:00:58] <Soni> proof of peering: anyone can make blocks, the blocks that spread fastest to the whole network win. to make mining fair, miner fees are distributed across all possible addresses (because any of them could be participating on the peering) and as a bonus, every address also gains a fixed amount of coin per block
[08:02:21] <Soni> the consensus algorithm is the speed of light and the network RTT
[08:03:20] <Soni> also yes, having more miner fees per block is good
[08:04:54] <danieldg> "all possible addresses" - so it's paying per IP?  A good way to fix that whole "IPv6 has so many addresses we'll never run out" problem.
[08:05:30] <Soni> danieldg: no, coin addresses. not tied to IP.
[08:05:38] <Soni> but yes tying it to IP would be fun.
[08:05:45] <Soni> "fun"
[08:06:49] *** Joins: baakeydow (~baake@163.172.145.178)
[08:06:58] <Soni> but yeah this is what proof of stake would have to look like - basically proof of being extremely online really. and it'd have to benefit everyone, because everyone is involved in mining a block.
[08:11:33] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:12:26] <Soni> and ofc with fixed block size you still have the threat that address mining = DoS aka higher transaction/miner fees aka less incentive to address mine
[08:14:14] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:17:23] <Soni> the consensus algorithm is basically "find block with highest fees, propagate it to network"
[08:18:37] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-013d-b643-4dd3-d41b.res6.spectrum.com)
[08:21:22] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 260 seconds)
[08:30:43] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:31:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:38:24] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[08:52:25] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:56:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[08:57:14] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:14:18] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[09:16:41] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[09:21:38] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[09:31:41] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:34:38] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[09:42:04] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:00:57] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 265 seconds)
[10:07:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[10:09:39] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-013d-b643-4dd3-d41b.res6.spectrum.com) (Quit: jarthur)
[10:21:15] *** Joins: kajus (~kajus@200116b845e950003a58d3110f53d23e.dip.versatel-1u1.de)
[10:25:54] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:31:57] *** Joins: qbt (~qbt@user/edun)
[10:36:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[10:42:22] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[10:44:43] *** Joins: sm2n_ (~sm2n@user/sm2n)
[10:44:56] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[10:46:24] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxyu4ayytnxjx5.ipv6.telus.net) (Remote host closed the connection)
[10:48:42] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[10:52:07] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:53:17] *** Joins: CryptoClub (~fafs@87.125.251.76)
[10:57:47] *** Quits: geeknix (~pi@2001:e68:5432:3185:f40a:1f47:7e09:1c6e) (Ping timeout: 268 seconds)
[11:10:48] *** Joins: geeknix (~pi@2001:e68:5432:3185:f40a:1f47:7e09:1c6e)
[11:14:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[11:21:40] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 265 seconds)
[11:24:57] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[11:30:51] *** Joins: Everything (~Everythin@37.115.210.35)
[11:32:44] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:34:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:34:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:37:33] *** Joins: frost (~frost@user/frost)
[11:41:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[11:44:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:47:30] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:49:07] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 250 seconds)
[11:49:48] *** Joins: chasmo77 (~chas77@71.63.241.168)
[11:50:18] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[11:55:42] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:58:28] *** Joins: ravan_ (~ravan@user/ravan)
[12:01:01] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:01:08] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 257 seconds)
[12:06:53] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:11:27] *** Joins: Warped (~Warped@user/warped)
[12:15:12] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Read error: Connection reset by peer)
[12:37:51] *** jtgd is now known as jtgd2
[12:38:24] *** Quits: GlobalBanksta (~aqua@user/aqua) (Ping timeout: 276 seconds)
[12:39:33] *** jtgd2 is now known as jtgd
[12:42:15] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[12:42:24] *** Joins: kish` (~aqua@user/aqua)
[12:42:32] *** Joins: holgersson (~quassel@user/holgersson)
[12:42:44] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[12:43:08] *** Joins: kish` (~aqua@user/aqua)
[12:48:16] *** Joins: mononote (~mononote@user/mononote)
[12:53:54] *** kish` is now known as GlobalBanksta
[12:59:17] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[13:08:05] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:14:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:22:44] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[13:23:14] *** Quits: kajus (~kajus@200116b845e950003a58d3110f53d23e.dip.versatel-1u1.de) (Remote host closed the connection)
[13:24:36] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Client Quit)
[13:24:50] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[13:25:00] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Remote host closed the connection)
[13:25:10] *** Joins: VarunAgw_ (~VarunAgw@103.158.148.26)
[13:26:20] *** VarunAgw_ is now known as VarunAgw
[13:26:26] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Client Quit)
[13:26:43] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[13:27:28] *** Joins: kajus (~kajus@200116b845e950003a58d3110f53d23e.dip.versatel-1u1.de)
[13:28:27] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Client Quit)
[13:28:41] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[13:33:25] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[13:39:21] *** ravan_ is now known as ravan
[13:53:38] *** Joins: kjnda (~kjnda@c-73-241-30-179.hsd1.ca.comcast.net)
[13:55:51] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[13:56:56] *** Quits: kjnda (~kjnda@c-73-241-30-179.hsd1.ca.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:57:29] *** Joins: kjnda (~kjnda@c-73-241-30-179.hsd1.ca.comcast.net)
[14:00:16] *** Quits: kjnda (~kjnda@c-73-241-30-179.hsd1.ca.comcast.net) (Client Quit)
[14:13:12] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[14:29:12] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[14:43:41] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:47:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:49:58] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:51:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2)
[14:58:58] *** Quits: Pythayr (~pither195@64.42.181.51) (Remote host closed the connection)
[14:59:01] *** Parts: rk4 (~r@user/rk4) ()
[15:03:03] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[15:06:18] *** Joins: CryptoClub (~fafs@87.125.251.76)
[15:14:43] *** Joins: igemnace (~ian@user/igemnace)
[15:35:11] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:50:23] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[16:00:31] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[16:06:53] *** Joins: dez (uid92154@user/dez)
[16:12:35] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:13:40] *** Joins: X-Scale` (~ARM@46.50.0.92)
[16:15:32] *** X-Scale` is now known as X-Scale
[16:21:03] *** Joins: rtypo (~alex@user/rtypo)
[16:22:11] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[16:24:22] *** Joins: tradar (~tradar@user/tradar)
[16:31:09] *** GlobalBanksta is now known as kish`
[16:33:42] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[16:36:15] *** Joins: yewscion (~yewscion@52.94.133.128)
[16:46:24] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[16:49:00] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:01:08] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[17:05:48] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[17:12:46] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:14:51] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Client Quit)
[17:15:10] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2) (Ping timeout: 268 seconds)
[17:22:39] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[17:29:57] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:30:05] *** kish` is now known as GlobalBanksta
[17:41:33] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[17:52:37] *** Joins: yeirr (~yeirr@user/yeirr)
[17:53:10] *** Parts: Guyver2 (Guyver@guyver2.xs4all.nl) (Closing Window)
[17:54:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:57:49] *** Joins: jdvr (~jdvr@user/jdvr)
[18:01:49] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:07:38] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:08:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:11:11] *** Joins: igemnace (~ian@user/igemnace)
[18:16:45] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Excess Flood)
[18:17:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:20:49] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxoxj1tx3rrux2.ipv6.telus.net)
[18:40:03] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:40:09] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Excess Flood)
[18:41:02] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:41:03] *** Joins: fulldecent (~textual@wikipedia/fulldecent)
[18:42:00] *** Quits: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net) (Remote host closed the connection)
[18:42:26] *** Joins: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net)
[18:42:55] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[18:43:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:44:18] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:45:31] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:52:03] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 250 seconds)
[18:59:06] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:43d3:62ae:c3f:b657)
[19:03:50] *** Joins: qbt (~qbt@user/edun)
[19:06:23] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:43d3:62ae:c3f:b657) (Ping timeout: 264 seconds)
[19:09:30] *** Joins: Pythayr (~pither195@64.42.181.51)
[19:10:56] *** Joins: gareppa (~gareppa@user/gareppa)
[19:12:57] *** Quits: fulldecent (~textual@wikipedia/fulldecent) (Quit: Textual IRC Client: www.textualapp.com)
[19:14:47] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[19:18:35] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[19:20:10] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 265 seconds)
[19:33:16] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[19:37:10] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:38:04] *** Joins: zro (~zro@user/zro)
[19:38:12] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[19:39:13] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:39:15] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[19:48:42] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[19:50:08] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 265 seconds)
[19:53:32] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[19:55:11] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:01:28] *** Joins: ravan_ (~ravan@user/ravan)
[20:04:09] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 265 seconds)
[20:09:09] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[20:11:43] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:12:22] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[20:12:23] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:15:44] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[20:16:14] *** Quits: jdvr (~jdvr@user/jdvr) (Ping timeout: 265 seconds)
[20:25:13] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 250 seconds)
[20:37:35] *** Joins: WishBoy (~WishBoy@user/wishboy)
[20:44:45] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[20:44:54] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:47:44] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[20:49:06] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 265 seconds)
[20:51:52] *** Joins: eson123 (~eson123@118.69.128.37)
[20:52:43] <eson123> i am wondering why the key length have to be the same as the plain text length when deciding to use one time pad encryption, i mean even if the key isn't as long as plaintext, i can still expand it out by adding extra 0 at the left
[20:53:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:56:35] <yawkat> then it's not secure
[21:00:22] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:35] *** Joins: qbt (~qbt@user/edun)
[21:00:36] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 256 seconds)
[21:00:59] <Alipha> eson123: if the plaintext is 30 characters and the key is 20 characters, you'd think prefix the key with 10 zero bytes? which would mean the first 10 bytes of the ciphertext won't be encrypted.
[21:02:05] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[21:02:53] <eson123> Hm
[21:03:09] <eson123> yea speaking of that, it's gonna be insecure if the data scale
[21:03:14] <eson123> i think i get it now, thk
[21:04:39] <Alipha> eson123: also, what no one ever seems to talk about with regarding One Time Pad, is that even if it has theoretical absolute data confidentiality, if an attacker knows what any part of the plaintext is that is encrypted (or can make a good guess), then the parts that the attacker knows he can trivially change to anything he wants
[21:07:29] <eson123> Alipha: but in that case the attacker will have to know the key which is used to encrypt that part in order to change to their message ? or else i hardly imagine how the changed part will make any sense
[21:08:37] <Alipha> If i know the message is "attack at dawn" and encrypts to "uwheis hg ksxz" then i can trivially change the ciphertext to be decrypted to "attack at dusk" by taking the last 3 characters of the ciphertext ("sxz") and xoring it with the known plaintext ("awn") and xoring it with the desired ciphertext ("usk"). that is: new 3 last characters of ciphertext = "sxz" ^ "awn" ^ "usk"
[21:09:05] <Alipha> eson123: no. i don't need the key if i know the plaintext and corresponding ciphertext. i can recover the key if i know those two things
[21:09:21] <Alipha> ciphertext = plaintext ^ key;  (where ^ is xor)
[21:09:22] <yawkat> i.e. otp only has ind-eav security, which is much weaker than what we usually want nowadays
[21:09:24] <eson123> oh i thought the attacker didn't get plaintext either, if he does then well, the key can be retrieved
[21:09:34] <Alipha> that means: key = plaintext ^ ciphertext;
[21:10:06] <eson123> yea got it :P i thought u mean that attacker didn't know the plain as well
[21:10:08] <eson123> i read it wrong
[21:10:13] <Alipha> eson123: right
[21:11:08] <Alipha> eson123: which in today's world, with highly-formatted messages going across the internet, or files stored in specific formats, there is A LOT of data that's encrypted which an attacker knows (or can make a good guess at) what the plaintext is
[21:15:19] <eson123> yea ok
[21:18:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:19:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:19:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:20:14] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Client closed)
[21:21:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:22:18] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:50:48] *** Quits: Douwd (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[21:52:56] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[21:56:07] *** Joins: derzahl (~derzahl@gateway/tor-sasl/derzahl)
[21:56:40] *** Joins: aleck (~aleck@user/aleck)
[21:56:45] *** Parts: derzahl (~derzahl@gateway/tor-sasl/derzahl) ()
[21:58:24] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 256 seconds)
[21:59:22] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Read error: Connection reset by peer)
[21:59:41] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[22:01:12] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[22:04:33] *** Quits: kajus (~kajus@200116b845e950003a58d3110f53d23e.dip.versatel-1u1.de) (Remote host closed the connection)
[22:05:51] *** Joins: node1 (~node1@user/node1)
[22:11:23] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[22:12:23] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:16:31] *** Joins: gallomimia_ (~Gallomimi@node-1w7jra2a2gqpxoxj1tx3rrux2.ipv6.telus.net)
[22:16:33] *** Quits: gallomimia_ (~Gallomimi@node-1w7jra2a2gqpxoxj1tx3rrux2.ipv6.telus.net) (Client Quit)
[22:18:34] *** Joins: zro (~zro@user/zro)
[22:27:51] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[22:34:27] *** Quits: GlobalBanksta (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:34:46] *** Joins: GlobalBanksta (~aqua@user/aqua)
[22:36:24] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[22:39:12] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 256 seconds)
[22:40:51] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 250 seconds)
[22:41:20] *** ses is now known as xotedend
[22:41:30] *** xotedend is now known as ses
[22:49:31] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:51:13] *** Joins: Pythayr (~pither195@64.42.181.51)
[22:51:19] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:58:23] <riv> https://newsroom.ibm.com/2021-11-16-IBM-Unveils-Breakthrough-127-Qubit-Quantum-Processor
[22:58:32] <riv> intersting, they claim to have made a 127 qubit computer. But is this really true?
[22:59:00] <riv> I wonder what the relationship is between #qubits and #bit-RSA that can be broken
[23:00:20] <iz> need a super position big enough to hold a repeating period for whatever key
[23:00:51] <riv> > The problem is error correction, which currently require (the latest D-Wave 2X) to use ~12 physical qbits for every logical qbit
[23:01:01] <riv> oh there is also a multiplier for error correction
[23:01:26] <riv> > The best implementation of Shor's algorithm on an n-bit semiprime requires 2n + 3 logical qubits
[23:01:30] <riv> https://security.stackexchange.com/questions/87345/how-many-qubits-are-needed-to-factor-2048-bit-rsa-keys-on-a-quantum-computer
[23:02:04] <iz> well, d-wave cheats w/ how they claim qubits also.. they'll have a bunch of 7-qubit connected units all in parallel and call it a > 1000 qubit system, b/c technically it is
[23:02:05] <riv> i am not sure these numbers make sense
[23:02:31] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:03:30] <iz> yeah, that 512-qubit system mentioned in the comments is just for simulalted quantum annealing
[23:03:57] <iz> it only has 7 qubits connected, but a bunch of those 7-qubit units in parallel
[23:04:21] <iz> so it's not really like 512-qubits that could be used w/ shor's alg or whatever
[23:04:56] *** Joins: defjam (~eb0t@90.209.246.132)
[23:07:11] <riv> so it seems that the big thing is... OK this has more qubits, but they are of extremely low quality
[23:07:19] <riv> you need a massive amount of error correction to use them
[23:10:08] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Remote host closed the connection)
[23:10:15] <iz> well, the qubits need to be entangled with each other for the superposition to get huge
[23:11:42] <riv> entanglement or not is just part of the program you run right?
[23:11:53] <riv> s/part/a result of/
[23:12:34] <iz> so it's like the superposition will have 2^n states at the same time, where n is the number of entangled qubits
[23:12:58] <riv> i dont understand that
[23:13:07] <iz> and for shor's algorithm, you need the superposition to be big enough that there will be some repeating pattern in it after a FFT operation
[23:13:51] <iz> so like .. if you have 7 qubits entangled, the superposition can hold 2^7 or 128 states
[23:14:10] <iz> 2^127 is way bigger
[23:15:38] <riv> I think that when you put n bits into superposition, you have a vector in a complex vector space whose basis is all possible bit patterns
[23:17:30] <iz> well, you can load it up w/ sequential values and then do computation with it, so the computation happens on all states at the same time
[23:17:40] <iz> that's kinda how you brute force algorithms w/ grover's alg
[23:18:42] <iz> and then there is this search algorithm that lets you tweak the probabilities on the superposition states so it will collapse into what you are looking for
[23:19:04] <riv> I think that your model of quantum computation is off
[23:19:12] <riv> this idea of happening on all states at once is not right
[23:19:27] <iz> it's called inversion on the mean or median or something like that
[23:20:03] <iz> that's how it works w/ brute forcing crypto w/ lov grover's alg
[23:20:42] <iz> breaking rsa w/ shor's algorithm is different, like i said, you need enough room in the superposition for there to be a repeating pattern after some other operation
[23:21:02] <iz> maybe the FFT finds the period of that repeating pattern though, now that i am remembering it again
[23:21:15] <riv> ok
[23:21:45] <riv> unfortunately it seems like this IBM thing is really really noisy, to the point it can't really do anything
[23:21:51] <iz> but if it's not big enough for the repeating pattern to be in there, you can't find the period of the repeating pattern
[23:22:00] <riv> I don't know they keep posting this crap as if they achieved something great, it's really dishonest
[23:22:21] <iz> it's not dishonest, you are just coming in with wrong assumptions
[23:22:36] <riv> they are not stating the noise parameters of their system
[23:22:43] <iz> it's a pretty big breakthrough to have that many qubits entangled w/ each other and operational
[23:26:28] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[23:30:47] *** Joins: CryptoClub (~fafs@87.125.251.76)
[23:31:14] <riv> I suppose that we need progress in multiple dimensions to make a good quantum computer. number of qubits is one direction, but also the quality of these qubits, the length of time that they can stay coherent etc. also matter (a lot)
[23:36:25] *** Parts: DPA (~DPA@2a05:41c0:b:db04::a3c:10d) ()
[23:47:49] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
