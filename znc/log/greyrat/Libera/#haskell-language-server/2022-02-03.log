[00:00:04] <maerwald> great
[00:14:03] <maerwald> some files in hls repo have dos line endings
[00:14:11] <maerwald> that confuses the hell out of my editor
[00:15:10] <fendor_> maerwald, hie-bios can't give you the ghc version reliably, because, e.g. cabal just can't give you reliably the path
[00:15:29] <maerwald> how so?
[00:15:43] <fendor_> just no API
[00:15:47] *** fendor_ is now known as fendor
[00:15:50] <maerwald> but I made it work :o
[00:16:12] <maerwald> https://github.com/haskell/haskell-language-server/pull/2675/commits/2a3b8b2eec1dc5951c0609c3b337611cb59673a5
[00:17:51] <fendor> ok, well, true, but it isn't that easy, at least for hie-bios. You can't use that path to compile anything, you need to re-supply the libdir to it
[00:18:06] <fendor> what are you using the path for?
[00:18:27] <maerwald> to find ghc-pkg
[00:18:58] <maerwald> that's a general problem... cabal also has this issue
[00:19:08] <fendor> isn't ghc-pkg in the libdir
[00:19:09] <fendor> ?
[00:19:12] <wz1000> maerwald: It needs to be recursive I think? I don't think `ghc-pkg depends` lists transitive dependencies
[00:19:26] <maerwald> wz1000: shouldn't this be enough? :o
[00:19:35] <fendor> I don't think you can reliably determine the ghc-pkg from ghc, no?
[00:20:05] <wz1000> maerwald: tbh its probably fine, but you never know...
[00:20:26] <wz1000> we do need transitive ABI compatibility strictly speaking
[00:20:28] <maerwald> fendor: right, we could also use libdir
[00:22:53] <fendor> don't you need the environment variables that are usually in the ghc wrapper scripts?
[00:23:25] <fendor> eg. datadir, bindir, etc?
[00:24:36] <maerwald> hm, for some reason that's borked
[00:24:40] <maerwald> no, we can't use the one in libdir
[00:24:47] <maerwald> because that's missing info
[00:25:01] <fendor> I know from my experiments with hie-bios that this is all too tricky
[00:25:26] <maerwald> the ghc-pkg in libdir is the raw binary, without a wrapper script telling it where the pkg database is etc
[00:25:26] <fendor> right, for ghc-pkg you need the PKGCONF env
[00:25:45] <fendor> yeah, we would want all these wrapper scripts. If we had access to those directly, it would be peachy
[00:25:46] <maerwald> afair cabal discovers ghc-pkg from the ghc binary as well
[00:26:16] <fendor> true, but I am not sure whether from the wrapper script or the executable directly
[00:27:04] <fendor> We played around with it here: https://github.com/haskell/hie-bios/pull/282
[00:27:23] <fendor> can't remember though, if I documented every wall I hit
[00:27:34] *** Quits: fendor (~fendor@178.165.184.56.wireless.dyn.drei.com) (Remote host closed the connection)
[00:28:35] <wz1000> fendor[m]: jneira[m] last comment shows something that could work?
[00:29:37] <maerwald> https://github.com/haskell/cabal/blob/96940364e800a9c86f1936d4878c6296e3071789/Cabal/src/Distribution/Simple/GHC.hs#L224
[00:29:40] <maerwald> this is what cabal does
[00:29:42] <fendor[m]> Works only on windows, iirc
[00:30:07] <fendor[m]> Because it doesn't have these wrapper scripts, so using the executables directly works fine 
[00:31:10] <fendor[m]> maerwald: I still can't tell whether they start with the wrapper script or the executable 
[00:41:33] *** Quits: Heffalump (~ganesh@urchin.earth.li) (*.net *.split)
[00:41:33] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[00:41:33] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (*.net *.split)
[00:41:34] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[00:41:34] *** Quits: juhp (~juhp@128.106.188.82) (*.net *.split)
[00:41:34] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (*.net *.split)
[00:41:35] *** Quits: agander_m (sid407952@id-407952.tinside.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: liskin (~liskin@xmonad/liskin) (*.net *.split)
[00:41:36] *** Quits: tnks (sid412124@id-412124.helmsley.irccloud.com) (*.net *.split)
[00:41:37] *** Quits: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99) (*.net *.split)
[00:41:37] *** Quits: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac) (*.net *.split)
[00:41:37] *** Quits: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be) (*.net *.split)
[00:41:38] *** Quits: maralorn (~maralorn@2001:470:69fc:105::251) (*.net *.split)
[00:41:38] *** Quits: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9) (*.net *.split)
[00:41:38] *** Quits: LambdaDuck (~anka@ksit.fixme.fi) (*.net *.split)
[00:41:39] *** Quits: coot (~coot@213.134.190.95) (*.net *.split)
[00:41:39] *** Quits: ttylec[m] (~ttylecmat@2001:470:69fc:105::1:554c) (*.net *.split)
[00:41:39] *** Quits: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93) (*.net *.split)
[00:41:39] *** Quits: cdsmith (~cdsmithma@2001:470:69fc:105::284) (*.net *.split)
[00:41:39] *** Quits: adamCS (~adamCS@ec2-34-207-160-255.compute-1.amazonaws.com) (*.net *.split)
[00:41:40] *** Quits: mpickering (sid78412@id-78412.hampstead.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: supersven (sid501114@id-501114.ilkley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: drlkf (~drlkf@2001:41d0:a:62bb::1) (*.net *.split)
[00:41:40] *** Quits: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:41] *** Quits: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9) (*.net *.split)
[00:41:41] *** Quits: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e) (*.net *.split)
[00:41:41] *** Quits: jneira[m] (~jneiramat@2001:470:69fc:105::d729) (*.net *.split)
[00:41:41] *** Quits: sm (~sm@plaintextaccounting/sm) (*.net *.split)
[00:41:41] *** Quits: jiribenes (~jiribenes@rosa.jiribenes.com) (*.net *.split)
[00:41:41] *** Quits: maerwald (~maerwald@user/maerwald) (*.net *.split)
[00:41:41] *** Quits: pepeiborra (sid443799@id-443799.ilkley.irccloud.com) (*.net *.split)
[00:41:42] *** Quits: bgamari (~bgamari@2001:470:e438::1) (*.net *.split)
[00:41:42] *** Quits: dexterfoo (~dexter@li655-253.members.linode.com) (*.net *.split)
[00:41:42] *** Quits: kosmikus (~kosmikus@nullzig.kosmikus.org) (*.net *.split)
[00:41:42] *** Quits: eddiemundo (~eddiemund@2001:470:69fc:105::a80) (*.net *.split)
[00:41:42] *** Quits: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07) (*.net *.split)
[00:41:42] *** Quits: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11) (*.net *.split)
[00:41:42] *** Quits: expipiplus1 (~expipiplu@2001:470:69fc:105::d713) (*.net *.split)
[00:41:43] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[00:41:43] *** Quits: alinab (sid468903@id-468903.helmsley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: rune (sid21167@id-21167.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net) (*.net *.split)
[00:41:43] *** Quits: hpd_ (~hpdhpdeif@2001:470:69fc:105::230) (*.net *.split)
[00:41:44] *** Quits: fendor[m] (~fendormat@2001:470:69fc:105::fcbd) (*.net *.split)
[00:41:44] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[00:41:44] *** Quits: alanz (sid110616@uxbridge.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: Hecate (~mariposa@user/hecate) (*.net *.split)
[00:41:44] *** Quits: teto[m] (~keiichima@2001:470:69fc:105::3a35) (*.net *.split)
[00:41:45] *** Quits: PotatoHatsue (~berberman@2001:470:69fc:105::b488) (*.net *.split)
[00:41:45] *** Quits: kronicma1 (user73386@neotame.csclub.uwaterloo.ca) (*.net *.split)
[00:41:45] *** Quits: ts3 (~ts@46.101.20.9) (*.net *.split)
[00:41:45] *** Quits: berberman_ (~berberman@user/berberman) (*.net *.split)
[00:41:45] *** Quits: jade (jade@lfcode.ca) (*.net *.split)
[00:41:45] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[00:41:46] *** Quits: sooch_ (sid533113@id-533113.hampstead.irccloud.com) (*.net *.split)
[00:44:07] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[00:44:07] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[00:44:07] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[00:44:07] *** Joins: Heffalump (~ganesh@urchin.earth.li)
[00:44:07] *** Joins: LambdaDuck (~anka@ksit.fixme.fi)
[00:44:07] *** Joins: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9)
[00:44:07] *** Joins: maralorn (~maralorn@2001:470:69fc:105::251)
[00:44:07] *** Joins: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be)
[00:44:07] *** Joins: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99)
[00:44:07] *** Joins: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac)
[00:44:07] *** Joins: sooch_ (sid533113@id-533113.hampstead.irccloud.com)
[00:44:07] *** Joins: Philonous (~Philonous@user/philonous)
[00:44:07] *** Joins: jade (jade@lfcode.ca)
[00:44:07] *** Joins: berberman_ (~berberman@user/berberman)
[00:44:07] *** Joins: ts3 (~ts@46.101.20.9)
[00:44:07] *** Joins: kronicma1 (user73386@neotame.csclub.uwaterloo.ca)
[00:44:07] *** Joins: teto[m] (~keiichima@2001:470:69fc:105::3a35)
[00:44:07] *** Joins: PotatoHatsue (~berberman@2001:470:69fc:105::b488)
[00:44:07] *** Joins: bgamari (~bgamari@2001:470:e438::1)
[00:44:07] *** Joins: pepeiborra (sid443799@id-443799.ilkley.irccloud.com)
[00:44:07] *** Joins: maerwald (~maerwald@user/maerwald)
[00:44:07] *** Joins: jiribenes (~jiribenes@rosa.jiribenes.com)
[00:44:07] *** Joins: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9)
[00:44:07] *** Joins: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e)
[00:44:07] *** Joins: sm (~sm@plaintextaccounting/sm)
[00:44:07] *** Joins: jneira[m] (~jneiramat@2001:470:69fc:105::d729)
[00:44:07] *** Joins: alanz (sid110616@uxbridge.irccloud.com)
[00:44:07] *** Joins: Hecate (~mariposa@user/hecate)
[00:44:07] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[00:44:07] *** Joins: fendor[m] (~fendormat@2001:470:69fc:105::fcbd)
[00:44:07] *** Joins: hpd_ (~hpdhpdeif@2001:470:69fc:105::230)
[00:44:07] *** Joins: kosmikus (~kosmikus@nullzig.kosmikus.org)
[00:44:07] *** Joins: dexterfoo (~dexter@li655-253.members.linode.com)
[00:44:07] *** Joins: fendor (~fendor@178.165.184.56.wireless.dyn.drei.com)
[00:44:07] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:07] *** Joins: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net)
[00:44:25] <fendor> to repeat what I said, since I don't know whether element has sent it:
[00:44:32] *** Joins: juhp (~juhp@128.106.188.82)
[00:44:32] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[00:44:32] *** Joins: agander_m (sid407952@id-407952.tinside.irccloud.com)
[00:44:32] *** Joins: liskin (~liskin@xmonad/liskin)
[00:44:32] *** Joins: tnks (sid412124@id-412124.helmsley.irccloud.com)
[00:44:36] <fendor> when you execute ghc -e "System.Environment.getExecutablePath, I am pretty sure you get handed the path to the ghc executable directly
[00:44:42] <fendor> not the wrapper
[00:44:45] <fendor> from there, it is not trivial to recover all the information that is present in the wrappers
[00:44:49] *** Joins: coot (~coot@213.134.190.95)
[00:44:49] *** Joins: ttylec[m] (~ttylecmat@2001:470:69fc:105::1:554c)
[00:44:49] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[00:44:49] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[00:44:49] *** Joins: supersven (sid501114@id-501114.ilkley.irccloud.com)
[00:44:49] *** Joins: adamCS (~adamCS@ec2-34-207-160-255.compute-1.amazonaws.com)
[00:44:49] *** Joins: mpickering (sid78412@id-78412.hampstead.irccloud.com)
[00:44:49] *** Joins: drlkf (~drlkf@2001:41d0:a:62bb::1)
[00:44:49] <fendor> It's not like I suggest using the executables directly without the wrapper script, but unless I am mistaken, you only can find the path to the executable directly
[00:45:01] *** Quits: hpd_ (~hpdhpdeif@2001:470:69fc:105::230) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: fendor[m] (~fendormat@2001:470:69fc:105::fcbd) (Ping timeout: 250 seconds)
[00:45:02] *** Quits: teto[m] (~keiichima@2001:470:69fc:105::3a35) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: dxld[m] (~dxldit-sy@2001:470:69fc:105::978) (Ping timeout: 240 seconds)
[00:45:08] *** Quits: sm (~sm@plaintextaccounting/sm) (Ping timeout: 252 seconds)
[00:45:10] *** Quits: maralorn (~maralorn@2001:470:69fc:105::251) (Ping timeout: 260 seconds)
[00:45:17] *** Joins: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07)
[00:45:17] *** Joins: eddiemundo (~eddiemund@2001:470:69fc:105::a80)
[00:45:17] *** Joins: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11)
[00:45:17] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[00:45:17] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[00:45:17] *** Joins: alinab (sid468903@id-468903.helmsley.irccloud.com)
[00:45:17] *** Joins: rune (sid21167@id-21167.ilkley.irccloud.com)
[00:45:17] *** Joins: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net)
[00:45:18] *** Quits: eddiemundo (~eddiemund@2001:470:69fc:105::a80) (Ping timeout: 245 seconds)
[00:45:18] *** Quits: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11) (Ping timeout: 245 seconds)
[00:45:18] *** Quits: expipiplus1 (~expipiplu@2001:470:69fc:105::d713) (Ping timeout: 245 seconds)
[00:45:21] *** Quits: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93) (Ping timeout: 245 seconds)
[00:45:21] *** Quits: cdsmith (~cdsmithma@2001:470:69fc:105::284) (Ping timeout: 245 seconds)
[00:45:38] *** Quits: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9) (Ping timeout: 260 seconds)
[00:45:41] *** Quits: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9) (Ping timeout: 252 seconds)
[00:45:41] *** Quits: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e) (Ping timeout: 252 seconds)
[00:45:41] *** Quits: jneira[m] (~jneiramat@2001:470:69fc:105::d729) (Ping timeout: 252 seconds)
[00:45:49] *** Quits: PotatoHatsue (~berberman@2001:470:69fc:105::b488) (Ping timeout: 240 seconds)
[00:46:06] *** Quits: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99) (Ping timeout: 260 seconds)
[00:46:06] *** Quits: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be) (Ping timeout: 260 seconds)
[00:46:15] *** Quits: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07) (Ping timeout: 268 seconds)
[00:47:51] *** Quits: ttylec[m] (~ttylecmat@2001:470:69fc:105::1:554c) (Ping timeout: 245 seconds)
[00:50:41] <maerwald> ok, so we only need to set PKGCONF?
[00:50:53] <wz1000> fendor: I'm proposing that we use the ghc executable directly with -B$(ghc --print-libdir)
[00:51:17] <maerwald> package.conf.d is also in libdir
[00:51:18] <wz1000> or rather $(cabal exec ghc -- --print-libdir)
[00:51:20] <maerwald> so this should be easy
[00:52:08] <wz1000> fendor: the only extra relevent info in the wrappers is the libdir, which is easily recovered
[00:55:54] <fendor> wz1000, if we also need ghc-pkg, the nwe need PKGCONF, too
[00:55:56] *** Joins: eddiemundo (~eddiemund@2001:470:69fc:105::a80)
[00:57:39] <maerwald> easy, done
[00:58:16] <wz1000> fendor: which is $libdir//package.conf.d?
[01:00:12] <maerwald> https://github.com/haskell/haskell-language-server/pull/2675/commits/d2284b0fbf6e42041b83268c98655c88453eb79c#diff-8a02da550905dfabe75e95f2779c74e69117a5dc02755ef907fb0778bd445b41R74-R85
[01:00:14] <maerwald> yes
[01:00:53] <wz1000> maerwald: also probably pass --global to ghc-pkg for good measure
[01:01:50] <fendor> wz1000, that's not guaranteed right? It usually is but not necessarily
[01:02:11] <wz1000> fendor: its also the first line of `ghc-pkg --global list`
[01:03:44] <maerwald> official bindists do this and debian
[01:03:51] <maerwald> that should cover 90% of use cases
[01:04:03] *** Joins: ttylec[m] (~ttylecmat@2001:470:69fc:105::1:554c)
[01:04:23] <wz1000> so if you really want to cover all bases `cabal exec -- ghc-pkg --global list | head -n 1`
[01:04:53] <fendor> I guess. Or we manage to get this information from cabal directly
[01:05:06] <maerwald> uhm... I'm not invoking cabal or stack in the wrapper script 
[01:05:14] <maerwald> and don't see why it should
[01:05:26] <wz1000> maerwald: we're talking about the hie-bios pull request linked above
[01:05:32] <maerwald> ah
[01:05:45] <wz1000> To not use ghc and ghc-pkg from $PATH and instead use whatever cabal is configured with
[01:06:41] *** Quits: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[01:07:18] <wz1000> fendor: `ghc --print-global-package-db` also works
[01:08:12] <fendor> wz1000, true I guess. I hope to get all of this eventually from cabal directly <_<
[01:08:14] *** Joins: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net)
[01:09:33] *** Joins: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99)
[01:11:56] <wz1000> sure, but lets not make perfect be the enemy of good
[01:14:03] <maerwald> when would package.conf.d not be in libdir? 
[01:15:46] <maerwald> only interested in FACTS, not hypothetical mispackaged GHCs on esoteric distros :p
[01:16:08] <maerwald> those aren't supported to begin with
[01:19:39] *** Joins: dxld[m] (~dxldit-sy@2001:470:69fc:105::978)
[01:20:00] *** Joins: jneira[m] (~jneiramat@2001:470:69fc:105::d729)
[01:23:54] *** Joins: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e)
[01:27:16] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[01:27:21] *** Joins: fendor[m] (~fendormat@2001:470:69fc:105::fcbd)
[01:32:41] *** Joins: maralorn (~maralorn@2001:470:69fc:105::251)
[01:34:34] *** Joins: teto[m] (~keiichima@2001:470:69fc:105::3a35)
[01:37:49] *** Joins: sm (~sm@plaintextaccounting/sm)
[01:39:19] *** Joins: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac)
[01:40:18] <maerwald> btw... tangentially... hls-wrapper executable barely uses any function from haskell-language-server (only argument parsing and the version module), but depends on the entire library
[01:40:26] <maerwald> I think that bloats up the exe size 
[01:41:59] *** Joins: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9)
[01:42:05] *** Joins: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9)
[01:45:57] *** Joins: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be)
[01:47:57] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[01:49:08] *** Joins: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11)
[01:56:09] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[01:57:49] *** Joins: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07)
[02:12:43] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[02:14:52] *** Joins: hpd_ (~hpdhpdeif@2001:470:69fc:105::230)
[02:18:57] *** Quits: fendor (~fendor@178.165.184.56.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[02:20:33] *** Joins: hololeap (~hololeap@user/hololeap)
[02:21:38] *** Joins: PotatoHatsue (~berberman@2001:470:69fc:105::b488)
[03:18:38] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 250 seconds)
[03:59:13] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[03:59:26] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[06:32:51] *** Quits: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[06:44:31] *** Joins: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net)
[10:55:52] *** Quits: Heffalump (~ganesh@urchin.earth.li) (*.net *.split)
[10:55:52] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[10:55:52] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (*.net *.split)
[10:55:52] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[10:57:58] *** Joins: Heffalump (~ganesh@urchin.earth.li)
[10:57:58] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[10:57:58] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[10:57:58] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[11:24:54] *** Joins: coot (~coot@213.134.190.95)
[11:46:15] *** Joins: arrowd (~arr@2.93.163.158)
[12:27:56] *** Joins: fendor (~fendor@178.165.184.56.wireless.dyn.drei.com)
[13:49:18] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[13:49:51] *** Joins: coot (~coot@213.134.190.95)
[15:09:43] <michaelpj[m]> jneira: thinking about what you said about releases. A thought I had: maybe after each release we should appoint a release manager for the *next* release. It's often a bit late when it's time to do the release and nobody is keen. We could also have them overlapping (nixos does this) so it's the previous RM + the new RM and you're the RM for two releases (one junior one senior). WDYT?
[15:10:44] <michaelpj[m]> I 100% agree that you need to stop doing releases :)
[15:16:12] <maerwald> or maybe don't do monthly release, but every 3 months
[15:17:05] <maerwald> that's 4 releases per year instead of 12
[15:17:40] <maerwald> building hls from source isn't that hard anymore for people who want the latest jazz
[15:20:42] <michaelpj[m]> yeah, I'm also pro making the release cycle longer
[15:20:58] <michaelpj[m]> esp since I think the pace of change has slowed a bit
[15:21:32] <michaelpj[m]> monthly releases is a lot
[15:24:21] <jneira[m]> sounds good, we were doing bimonthly in fact
[15:25:55] <jneira[m]> i noted it just after the release (more or less) for give time
[15:26:35] <jneira[m]> but driven by the new one, so they can feel the entire experience :-P
[15:28:24] <jneira[m]> <maerwald> "or maybe don't do monthly..." <- only note that more time between releases the harder is do the next one
[15:28:27] <jneira[m]> more time with the hackage index obsolete, etc
[15:28:59] <jneira[m]> alanz:suggested monthly one for that reason, but at that moment the release was update stack.yamls and push the tag 
[15:29:06] <jneira[m]> so things have changed a lot
[15:30:20] <maerwald> is this up to date: https://haskell-language-server.readthedocs.io/en/latest/contributing/releases.html
[15:31:01] <alanz> Rust analyzer does weekly releases
[15:31:55] <alanz> But i think the logic of releasing often is that it should be pretty much automated
[15:39:01] <jneira[m]> <maerwald> "is this up to date: https://..." <- yeah, i've updated it en each release
[15:39:43] <jneira[m]> we have lot of things automated, but the gitlab release: https://github.com/haskell/haskell-language-server/issues/2663
[15:39:50] <jneira[m]> it has some manual steps
[15:41:03] <michaelpj[m]> there are still a lot of things to do
[15:41:06] <jneira[m]> but it needs some bridge between gitlab and github
[15:41:07] <jneira[m]> michaelpj[m]: yap
[15:41:29] <michaelpj[m]> I know we can't really get rid of the binary distributions, but it would make things so much simpler if the main way people installed was with `cabal` and building from source :/
[15:43:23] <jneira[m]> i dont know other haskell project with so many options to get it :-P 
[15:44:01] <michaelpj[m]> (FWIW, I had a quick look at `rust-analyzer` and they have a fairly sophisticated looking sub-project that manages all the release tasks, so they've evidently invested quite a lot of effort into it)
[15:44:03] <jneira[m]> we only miss `stack install haskell-language-server` in a usable way 
[15:44:52] <jneira[m]> (i mean install directly from stackage)
[15:45:04] <michaelpj[m]> noticed another bottleneck looking at the release process: at the moment, we need the person who runs the process to be an uploader for all the packages on hackage, right? Maybe we need a shared account for that
[16:05:17] <jneira[m]> <michaelpj[m]> "noticed another bottleneck..." <- yeah, we could upload directly the packages as definitive auto though
[16:05:30] <jneira[m]> after revising it, through a manual run
[16:05:43] <michaelpj[m]> don't you need a hackage account even to upload the candidates?
[16:05:50] <jneira[m]> yeah
[16:05:57] <jneira[m]> and for candidates too
[16:06:05] <jneira[m]> so there is one
[16:06:07] <jneira[m]> :-)
[16:06:09] <michaelpj[m]> so e.g. if we appoint a new RM we need to get them added as a maintainer to all the packages
[16:06:12] <michaelpj[m]> oh, there's a shared one?
[16:06:13] <jneira[m]> pepe's one
[16:06:18] <michaelpj[m]> ah right
[16:06:21] <jneira[m]> as a secret
[16:06:57] <michaelpj[m]> maybe we should make a `hls-release-manager` hackage account and share that? a bit more official, and pepe can change his password
[16:07:13] <jneira[m]> it is a token
[16:07:19] <jneira[m]> and you can have more than one
[16:07:31] <jneira[m]> but sounds reasonable
[16:11:33] <michaelpj[m]> oh, that's not so bad then
[16:28:10] <jneira[m]> <jneira[m]> "yeah, we could upload directly..." <- https://github.com/haskell/haskell-language-server/pull/2689
[16:41:08] *** Joins: fendor_ (~fendor@178.115.38.12.wireless.dyn.drei.com)
[16:43:57] *** Quits: fendor (~fendor@178.165.184.56.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[20:19:26] <maerwald> anyone understands how to set rpath properly on mac?
[20:20:41] <maerwald> I use: `install_name_tool -add_rpath "@executable_path/../lib/ghc-8.10.7/" "haskell-language-server-8.10.7"`
[20:21:01] <maerwald> but that causes loader error: https://gitlab.haskell.org/maerwald/haskell-language-server/-/jobs/927464#L910
[20:23:51] <maerwald> hm, maybe I didn't copy the correct files xD
[21:01:57] *** Quits: coot (~coot@213.134.190.95) (Remote host closed the connection)
[21:02:32] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[21:15:10] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[21:16:37] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[21:17:23] <maerwald> ok, this looks really promising: https://gitlab.haskell.org/maerwald/haskell-language-server/-/pipelines/46937
[21:17:45] <maerwald> darwin and freebsd tests also succeed (on the dynamic HLS bindist)
[21:22:18] *** shapr` is now known as shapr
[22:23:48] <maerwald> everything is green!
[22:35:15] <sm> whaaat
[22:55:53] <maerwald> yep
[23:05:55] *** Joins: Morrow_ (~user@bzq-110-168-31-106.red.bezeqint.net)
[23:28:13] *** Quits: Morrow (~user@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[23:28:13] *** Quits: Morrow_ (~user@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[23:37:16] *** Joins: juhp (~juhp@128.106.188.82)
