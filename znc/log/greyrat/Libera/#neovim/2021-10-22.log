[00:01:18] *** Joins: ajr (~andrew@47.151.137.150)
[00:08:41] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 258 seconds)
[00:10:11] *** Joins: rgrinberg (~textual@201.182.226.118)
[00:10:50] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 260 seconds)
[00:13:59] <leiserfg[m]> You could also use the `=` register from insert mode `<c-r>=execute('lua print(vim.inspect(foo))')`
[00:14:12] *** Joins: ajr (~andrew@47.151.137.150)
[00:14:48] <leiserfg[m]> that's my calculator üòÑ
[00:36:35] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[00:55:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ecc0:34ba:7ca0:1eda) (Remote host closed the connection)
[00:56:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:59:11] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[01:00:01] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:01:54] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:7e8e:6ff0:61c:a42d)
[01:04:30] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[01:11:25] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:7e8e:6ff0:61c:a42d) (Ping timeout: 252 seconds)
[01:12:05] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:486c:ed66:58a1:b7f6)
[01:18:46] *** Quits: guido (~guido@host-87-7-87-25.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[01:36:44] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:46:12] <bew[m]> Hello, is there a simple way to make a `y` mapping (like `<M-y>`) that do not move the cursor to the beginning of the copied selection?
[01:46:35] <bew[m]> * copied selection? (or restore cursor position after copy)
[01:48:16] *** Joins: gafawww (~gafawww@92.40.203.113.threembb.co.uk)
[01:49:18] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[01:49:30] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:486c:ed66:58a1:b7f6) (Ping timeout: 258 seconds)
[01:50:55] <muniter[m]> bew[m]: You could leave a mark before yanking and use `TextYankPost` to move the cursor back. 
[01:51:23] *** Joins: mestre (~mestre@191.177.175.57)
[01:54:27] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[02:00:32] <bew[m]> muniter: good idea, thanks! Didn't think of that autocmd üëçÔ∏è
[02:02:41] <bew[m]> following up for my curiosity, is there a way to do that (wait for the operator and its action) in a generic way? (not all key with operator pending mode have an autocmd)
[02:04:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[02:05:50] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 260 seconds)
[02:09:29] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[02:12:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:14:41] *** Joins: cjb (~cjbayliss@user/cjb)
[02:14:54] *** Quits: cjb (~cjbayliss@user/cjb) (Client Quit)
[02:24:02] *** Quits: meinside (uid24933@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:48] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[02:38:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[02:50:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:55:20] *** Joins: just1602_ (~just1602@199.58.80.143)
[02:55:20] *** Quits: just1602 (~just1602@user/just1602) (Read error: Connection reset by peer)
[03:02:17] <YorickPeterse[m]> bew: maybe you can hook into `CursorMoved` and use a timer?
[03:02:20] <YorickPeterse[m]> then invalidate that timer every time  the event is triggered, and schedule a new one
[03:07:01] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[03:11:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[03:13:37] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[03:14:26] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:16:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:19:37] *** Joins: Auprivave (~Auprivave@77.241.136.230.bredband.3.dk)
[03:20:21] <Auprivave> hi there. looking for a scriptrunner for neovim. for running simple js files
[03:21:47] <elianiva[m]> is `:!node %` not enough?
[03:22:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[03:22:42] *** Quits: just1602_ (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[03:23:31] *** Joins: just1602_ (~just1602@199.58.80.143)
[03:23:34] <Auprivave> elianiva[m]: thats really neat. Thanks :)
[03:27:18] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[03:33:39] *** Joins: qaph (~weechat@user/qaph)
[03:35:59] <Bowuigi[m]> <elianiva[m]> "is `:!node %` not enough?" <- Try using single quotes (' ') around %, that will handle paths with spaces, like this `:!node '%'`
[03:36:15] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 260 seconds)
[03:36:17] *** qaph is now known as kron
[03:38:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[03:39:34] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[03:39:43] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[03:41:49] <Auprivave> Bowuigi[m]: how can a path have a space?
[03:42:48] <Bowuigi[m]> Auprivave: Paths in Linux can have almost any character, even newlines (that kinda breaks most programs lmao)
[03:43:04] <elianiva[m]> sane person shouldn't use spaces for filename :p 
[03:43:25] <Bowuigi[m]> Auprivave: ~/My Programs/C/main.c
[03:43:36] <Bowuigi[m]> elianiva[m]: Yeah
[03:43:44] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[03:43:50] <Bowuigi[m]> But it is a "just in case"
[03:44:27] <Auprivave> okay. so if i use Windows \11
[03:44:29] *** Joins: Julian (~tos9@python/site-packages/Julian)
[03:44:45] <Bowuigi[m]> Auprivave: Don't
[03:44:56] *** Quits: jaitoon (~Jaitoon@2a02:c7f:a5f:1d00:3901:d03b:2d77:c4b6) (Quit: Leaving)
[03:45:17] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[03:45:36] <Bowuigi[m]> But if you really want, paths can also have spaces in Windows
[03:46:05] <Bowuigi[m]> So it is a good idea to use single quotes around the `%` on this case
[03:46:07] <maverun[m]> elianiva[m]: learn this way to late, like 2 months after i start using linux
[03:46:07] <maverun[m]> fml
[03:46:23] <Bowuigi[m]> maverun[m]: Oof
[03:46:41] <maverun[m]> nowday i just do _ as a space lol
[03:46:50] <Bowuigi[m]> Bowuigi[m]: Specially because Windows actually uses them pretty often
[03:46:56] <Bowuigi[m]> maverun[m]: PascalCase gang
[03:46:57] <elianiva[m]> maverun[m]: same, or use dash
[03:47:15] <maverun[m]> depend on my mood
[03:47:15] <maverun[m]> lol
[03:47:31] <elianiva[m]> wait, actually no, I have a folder called 'japanese stuff' which uses space
[03:47:40] <elianiva[m]> lol i gotta change that
[03:47:51] <maverun[m]> ( Õ°¬∞ Õú ñ Õ°¬∞)
[03:48:15] <Cobra[m]> yikes
[03:48:20] <elianiva[m]> dw it's just a bunch of books
[03:48:38] <elianiva[m]> (an actual book, yknow, the one you read to learn something)
[03:48:54] <maverun[m]> sure that what they say
[03:49:00] <Bowuigi[m]> elianiva[m]: Are the filenames in japanese? I wouldn't be surprised lol
[03:49:01] <maverun[m]> that like drunk person telling they aitn drunk
[03:49:18] <elianiva[m]> Bowuigi[m]: nah, it'd be a nightmare haha
[03:49:24] <Cobra[m]> maverun[m]: this is peojecting i think
[03:49:26] <Bowuigi[m]> elianiva[m]: Lol
[03:49:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[03:49:53] <Bowuigi[m]> "What was this book for? I only see some random glyphs that seem familiar"
[03:50:41] <maverun[m]> i should seriously start learn it
[03:50:41] <maverun[m]> lol
[03:50:47] *** Joins: js3z (~js3z@146.115.76.107)
[03:57:08] *** Joins: chenqisu12 (~peiycae@183.217.203.91)
[03:59:47] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 264 seconds)
[04:00:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:00:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[04:01:11] *** Quits: mestre (~mestre@191.177.175.57) (Quit: Lost terminal)
[04:03:42] *** Quits: Ilyu_ (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 260 seconds)
[04:03:45] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[04:05:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[04:09:05] *** Joins: nathom[m] (~nathommat@2001:470:69fc:105::1:205e)
[04:11:35] *** Quits: gafawww (~gafawww@92.40.203.113.threembb.co.uk) (Read error: Connection reset by peer)
[04:18:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[04:23:36] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[04:23:36] *** Quits: just1602_ (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[04:23:42] *** Joins: just1602 (~just1602@199.58.80.143)
[04:23:45] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:55] *** Joins: spiderman (~spiderman@user/spiderman)
[04:31:05] <spiderman> holy shit there are a lot of you in here
[04:31:16] <spiderman> ha, twice as many as in #vim
[04:31:53] <spiderman> can at least one of you evangelize neovim for me? I have heard this is so much better than vim by several people but they never went into detail.
[04:31:55] *** Joins: amrx (~amrx@access-63-249-98-253.static.cruzio.net)
[04:32:46] <Auprivave> please dont laught. Coc autocompletion. how do i chose a suggestion from the dropdown list?
[04:34:11] <elianiva[m]> try `<C-n>`
[04:35:31] <Auprivave> elianiva[m]: okay. thats sets focus on the first item. Where do i go from there?
[04:35:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[04:36:20] *** Quits: cottoneyejim (~cottoneye@2a01:261:3d2:6200:ea6a:64ff:fe4f:b643) (Ping timeout: 260 seconds)
[04:36:46] <elianiva[m]> keep pressing that, it will cycle the item
[04:36:46] <elianiva[m]> press `<C-y>` to select it (or `<CR>`, not sure which one)
[04:36:53] <elianiva[m]> * keep pressing that, it will cycle the item.
[04:36:53] <elianiva[m]> press `<C-y>` to select it (or `<CR>`, not sure which one)
[04:37:05] <gpanders[m]> <spiderman> "can at least one of you evangeli..." <- `:h vim_diff`
[04:37:09] <nvim-bot[m]> Links to referenced help pages:
[04:37:09] <nvim-bot[m]> * [`vim_diff`](https://neovim.io/doc/user/vim_diff.html#vim_diff) in *vim_diff.txt*
[04:37:19] <gpanders[m]> And take a look at some of the Neovim only plugins that exist
[04:37:19] *** Quits: just1602 (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[04:37:36] <gpanders[m]> s//-/
[04:37:53] *** Joins: just1602 (~just1602@199.58.80.143)
[04:38:09] <Auprivave> elianiva[m]: thanks :) finally!
[04:39:20] <spiderman> gpanders[m]: thanks
[04:40:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[04:40:59] <spiderman> I'm doing a code for the first time in a year or so and I want to actually have code completion. The net told me nvim loves language completion
[04:41:12] <spiderman> I love it too <3
[04:47:02] <spiderman> plugin manager looks so much nice than vundle
[04:47:06] <spiderman> it has more colors 
[04:48:13] *** Joins: utraciss (~utraciss@118.100.91.150)
[04:52:00] *** Joins: Julian (~tos9@python/site-packages/Julian)
[04:52:01] <Bowuigi[m]> <spiderman> "can at least one of you evangeli..." <- Lua. Killer feature. Full stop
[04:52:21] * spiderman uses a lua-configured window manager
[04:52:24] <Bowuigi[m]> Also the built in LSP, but eh
[04:52:38] <spiderman> awesomewm if you love lua
[04:53:00] <Bowuigi[m]> Pretty cool
[04:53:03] <Bowuigi[m]> I use BSPWM
[04:54:09] <spiderman> heh, that is definitely a 1337 wm Bowuigi[m] 
[04:55:43] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[04:56:11] *** Joins: Iago[m] (~mercvrivs@2001:470:69fc:105::2ee6)
[04:57:20] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[04:57:59] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[04:58:30] *** Joins: mud (~mud@user/kadoban)
[04:59:08] <spiderman> oh my god I have autocomplete set up
[04:59:29] * spiderman presses his "Easy" button
[05:00:38] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 260 seconds)
[05:01:37] *** Joins: Intelo (~Intelo@88.244.89.165)
[05:02:46] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c559:3de9:7a37:317a)
[05:03:28] <spiderman> and 'K' opens the man page in its own buffer???? this rocks
[05:05:04] *** Quits: Intelo (~Intelo@88.244.89.165) (Client Quit)
[05:09:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:14:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[05:16:37] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[05:18:05] *** Joins: pvp4 (~pierrepri@p54ae9940.dip0.t-ipconnect.de)
[05:18:55] *** Quits: pvp (~pierrepri@p54ae948a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:18:55] *** pvp4 is now known as pvp
[05:21:59] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 264 seconds)
[05:23:39] <spiderman> I'm trying to get function signatures to show up in my autocomplete, using deoplete + python-jedi but it doesn't open a window
[05:25:53] *** Joins: Intelo (~Intelo@88.244.89.165)
[05:28:19] <Bowuigi[m]> <spiderman> "heh, that is definitely a 1337..." <- Yeah
[05:32:15] *** Parts: YuiYui[m] (~elijah911@2001:470:69fc:105::1:17f0) ()
[05:35:17] *** Quits: almostdvs (~almostdvs@162.154.206.233) (Remote host closed the connection)
[05:35:28] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:43:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:49:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[05:57:28] *** Joins: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e)
[05:57:59] *** Quits: hide (sid299131@id-299131.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[05:58:31] *** Quits: ec (sid1544@id-1544.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:58:35] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[05:58:40] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 258 seconds)
[05:58:46] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[05:59:37] *** Joins: ec (sid1544@tinside.irccloud.com)
[06:00:00] *** Joins: hide (sid299131@helmsley.irccloud.com)
[06:00:24] *** Joins: liam (sid7517@helmsley.irccloud.com)
[06:00:48] *** Quits: js3z (~js3z@146.115.76.107) (Quit: WeeChat 3.3)
[06:00:54] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:06:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[06:17:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:22:46] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[06:27:20] *** Quits: Intelo (~Intelo@88.244.89.165) (Quit: Client closed)
[06:33:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:36:15] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[06:37:33] <d34df00d> Is it possible to make the usual neovim autocomplete (as in completefunc) substitute the current text with the completion (if it exists) even if the user doesn't select the completion explicitly?
[06:38:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[06:38:13] <d34df00d> I'm writing a plugin for a funny unicode-heavy language, and I'd like to replace strings like "\forall" with the corresponding math symbol ‚àÄ even if the user just types in "\forall"
[06:38:51] <d34df00d> Existing plugins do a lot of state tracking explicitly (and they also reinvent popups etc), and I'm curious if I could leverage existing completion features.
[06:41:57] *** Joins: dre (~dre@120.156.30.159)
[06:50:25] *** Quits: szgy (~szgy@181.47.27.68) (Ping timeout: 265 seconds)
[06:51:08] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:56:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[07:08:56] *** Joins: Julian (~tos9@python/site-packages/Julian)
[07:14:06] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[07:22:14] *** Joins: yeirr (~yeirr@user/yeirr)
[07:25:15] *** Joins: Julian (~tos9@python/site-packages/Julian)
[07:27:08] <muniter[m]> d34df00d  Sounds  like a good use case for `:help iabbr`
[07:27:54] <muniter[m]> `:help iabbrev` come on bot 
[07:28:40] <muniter[m]> Come on bot `:help :iabbrev`
[07:30:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[07:33:45] *** Joins: tomtomjhj[m] (~tomtomjhj@2001:470:69fc:105::b96c)
[07:33:45] * tomtomjhj[m] uploaded an image: (32KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/SFvoEibnPJsJtaYMtHpIikTe/image.png >
[07:34:36] <tomtomjhj[m]> It seems that enabling treesitter breaks `:h word`. For example, word motions like `e`/`b`/..  put the cursor in the middle of a word and `<cword>` evaluates to the fragment of the word. The image shows the result of `*`, where the tan/bold/underlined text is `Search`.
[07:37:21] <tomtomjhj[m]> Has anyone faced a similar issue? This bug has been there since I first tried treesitter few months ago. I don't have a reliable reproducing steps for now, but I'll file an issue once I find one.
[07:42:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[07:42:42] <tomtomjhj[m]> <d34df00d> "I'm writing a plugin for a funny..." <- Ultisnips has this functionality. For example, this automatically expands `bN` to `\mathbb{N}`.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b1af3fcede8a47992a033beb735448fcc53c2126)
[07:46:07] <tomtomjhj[m]> > <@tomtomjhj:matrix.org> Ultisnips has this functionality. For example, this automatically expands `bN` to `\mathbb{N}`.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ff94d726b396f26c8741343e4239e549471ddcfb)
[07:47:09] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[07:58:29] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:03:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[08:04:20] *** Joins: reumeth (~reumeth@user/reumeth)
[08:10:31] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[08:11:25] *** Parts: steiner[m] (~steinerkd@2001:470:69fc:105::c9cc) ()
[08:12:19] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[08:14:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[08:15:24] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:20:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[08:22:59] *** Joins: szgy (~szgy@2800:810:549:8290::3)
[08:26:13] *** Quits: chenqisu12 (~peiycae@183.217.203.91) (Quit: Leaving)
[08:27:02] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[08:29:46] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 252 seconds)
[08:30:05] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 258 seconds)
[08:30:11] *** Quits: amrx (~amrx@access-63-249-98-253.static.cruzio.net) (Remote host closed the connection)
[08:31:23] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:35:02] *** Joins: mahlon (~mahlon@martini.nu)
[08:36:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[08:38:55] *** Joins: mjlbach[m] (~atriusmat@2001:470:69fc:105::39bd)
[08:39:51] <mjlbach[m]> sumneko: we have issues with multibyte characters with incremental sync during some edit operations :) 
[08:39:56] <mjlbach[m]> It's on my to-do for 0.6
[08:40:02] *** Parts: mjlbach[m] (~atriusmat@2001:470:69fc:105::39bd) ()
[08:41:09] *** Joins: mjlbach[m] (~atriusmat@2001:470:69fc:105::39bd)
[08:41:10] <mjlbach[m]> <gpanders[m]> "this is a common request, I..." <- Happy to move the lsp wiki snippets to this cookbook as they are all core related anyhow...
[08:44:47] *** Quits: emf_ (~emf@2620:10d:c090:400::5:70ff) (Ping timeout: 264 seconds)
[08:45:25] *** Quits: szgy (~szgy@2800:810:549:8290::3) (Ping timeout: 260 seconds)
[08:48:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:48:05] *** Joins: szgy (~szgy@2800:810:549:8290::3)
[08:53:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[08:56:30] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[09:06:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[09:11:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[09:11:27] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[09:12:47] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:21:52] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:22:30] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[09:23:06] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:24:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[09:27:14] *** Joins: yeirr (~yeirr@user/yeirr)
[09:29:18] *** Joins: flip214 (~marek@user/flip214)
[09:30:15] <p00f[m]> <d34df00d> "Is it possible to make the usual..." <- `:h iabbr`
[09:30:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[09:30:27] <p00f[m]> !:h iabbr
[09:30:34] <p00f[m]> oh no
[09:32:40] *** Quits: szgy (~szgy@2800:810:549:8290::3) (Ping timeout: 260 seconds)
[09:35:00] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[09:35:38] *** Quits: flip214 (~marek@user/flip214) (Ping timeout: 258 seconds)
[09:36:09] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[09:36:12] <p00f[m]> <Auprivave> "hi there. looking for a scriptru..." <- (for more complex stuff vim-dispatch is really really good)
[09:36:36] <p00f[m]> like if you set it up with telescope
[09:37:39] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[09:37:42] *** Joins: flip214 (~marek@user/flip214)
[09:39:11] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:43:08] *** Joins: Julian (~tos9@python/site-packages/Julian)
[09:43:14] *** Quits: flip214 (~marek@user/flip214) (Read error: Connection reset by peer)
[09:43:45] *** Joins: flip214 (~marek@user/flip214)
[09:48:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[09:49:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[09:58:52] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:59:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[09:59:28] *** Joins: ckeshav (~keshavcha@103.66.50.47)
[10:04:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[10:08:23] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[10:11:00] *** ckeshav is now known as ckeshav_
[10:11:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:11:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[10:12:39] *** ckeshav_ is now known as ckeshav__
[10:13:46] *** ckeshav__ is now known as ckeshav
[10:14:10] *** Joins: jklfds_ (~jklfds@user/jklfds)
[10:15:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[10:16:11] *** Quits: ckeshav (~keshavcha@103.66.50.47) (Changing host)
[10:16:11] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[10:18:40] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 252 seconds)
[10:19:11] *** taw10_ is now known as taw10
[10:19:46] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[10:26:22] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 260 seconds)
[10:29:24] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Quit: Leaving)
[10:31:12] *** Joins: Julian (~tos9@python/site-packages/Julian)
[10:33:47] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[10:34:33] <tomtomjhj[m]> It seems that nvim leaks about 200-300 kb of memory on each fzf invocation.
[10:34:41] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[10:36:15] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[10:37:32] *** Joins: ixil (~ixil@82.197.178.137)
[10:42:06] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[10:47:20] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 260 seconds)
[10:47:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[10:50:58] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[10:52:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[10:55:57] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 265 seconds)
[11:00:50] <clason[m]> <tomtomjhj[m]> "> <@tomtomjhj:matrix.org..." <- or Telescope's `builtin.symbols`: https://github.com/nvim-telescope/telescope.nvim#lists-picker
[11:01:23] <clason[m]> (combined with the `cursor` theme)
[11:01:53] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 258 seconds)
[11:02:15] <clason[m]> you can also check how https://github.com/Julian/lean.nvim does it
[11:03:31] <clason[m]> sorry, that should have pinged d34df00d instead
[11:03:37] <vigoux[m]> Morning
[11:03:41] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:03:45] <maverun[m]> good morning mateo
[11:04:02] <clason[m]> Is it Rant Friday?
[11:04:03] <vigoux[m]> Mateo ?
[11:04:10] <vigoux[m]> Oh is it ???
[11:04:30] <vigoux[m]> clason[m]: If yes, my day is definitely better (somehow)
[11:04:34] * kdurantNo[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/6b1401fb6d6c8987321cc4ca89259eb3db6e4c9a
[11:04:37] <clason[m]> Then it is :]
[11:04:43] <kdurantNo[m]> Can anyone help me? Thank you!
[11:05:08] <vigoux[m]> kdurantNo[m]: Which first `)` ?
[11:05:24] <vigoux[m]> (And btw, you should try out your regexs in regex101.com)
[11:05:31] <hauleth> kdurantNo[m]: /[^)]*)
[11:05:34] *** Parts: aitvaras (~aitvarase@2001:470:69fc:105::687) ()
[11:05:42] <mjlbach[m]> vig!
[11:05:43] <mjlbach[m]> hello
[11:05:58] <hauleth> vigoux[m]: regex101.com do not support Vim regexes
[11:06:24] <vigoux[m]> mjlbach[m]: It's funny because I just discovered a new lsp server thanks to you
[11:06:34] <mjlbach[m]> lol which one
[11:06:34] <hauleth> kdurantNo[m]: /[^)]\zs) to be exaxt
[11:06:43] <vigoux[m]> hauleth: Do you really want to argue on that though ?
[11:06:49] <kdurantNo[m]> @hauleth:libera.chat only match first **)**, not include other char
[11:07:10] <vigoux[m]> mjlbach[m]: ltex-ls
[11:07:11] <hauleth> vigoux[m]: yeah, as Vim regular expressions are pretty different from other engines
[11:07:18] <mjlbach[m]> oh yes
[11:07:20] <vigoux[m]> It looks fairly cool
[11:07:21] <mjlbach[m]> grammar-guard.nvim
[11:07:24] <hauleth> Especially if you do not enable very magic
[11:07:41] <mjlbach[m]> Very, tried it out, worked great
[11:07:44] <mjlbach[m]> will be good to have in lspconfig one day :) 
[11:07:49] <hauleth> kdurantNo[m]: it will match only first `)`
[11:08:19] <hauleth> Just pin it to the beginning of line /^[^)]*\zs)
[11:08:22] <kdurantNo[m]> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/Rg94/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/Rg94/image.png)
[11:08:36] <vigoux[m]> mjlbach[m]: Vewy niceeeeee
[11:08:49] <kdurantNo[m]> tks
[11:08:50] <kdurantNo[m]> qqq
[11:08:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[11:08:58] <vigoux[m]> It's funny because now that I know it exists, I need it so bad
[11:10:44] <vigoux[m]> mjlbach[m]: Yeah !
[11:10:51] <vigoux[m]> Man lspconfig is just dope though
[11:11:23] <mjlbach[m]> ltex-ls seems to have a lot of client side commands, so it's good there is a dedicated extension
[11:11:23] <vigoux[m]> I remember the old days where we had to struggle to enable a damn lsp
[11:15:26] <vigoux[m]> But it relies on lspconfig
[11:15:35] <mjlbach[m]> yeah
[11:15:43] <mjlbach[m]> we want to move that machinery into core eventually 
[11:15:44] <vigoux[m]> I am dreaming of a plugin that integrates languagetool and tree-sitter though
[11:16:03] <vigoux[m]> mjlbach[m]: I did not intedned to say it this way
[11:16:03] <mjlbach[m]> That would be cool, not sure the grammarguard author is active here
[11:16:09] <mjlbach[m]> Oh no I mean
[11:16:17] <vigoux[m]> I wanted to say: lspconfig is now the main interface people use, which is great
[11:16:18] <mjlbach[m]> That's what we want to do :) 
[11:16:49] <mjlbach[m]> Yeah I don't want that though haha, I don't think nvim-jdtls/nvim-metals should have to reimplement the root detection/attaching files under the root to the server 
[11:19:48] <mjlbach[m]> s/should/shouldn't/
[11:19:49] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:8449:7d74:5738:e870)
[11:20:26] <vigoux[m]> Hmm even if I use pcall I have errors ?
[11:20:28] <vigoux[m]> weird...
[11:21:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:21:27] <vigoux[m]> Grammar-guard is pretty darn awesome
[11:21:53] <vigoux[m]> Thanks for the suggestion mjlbach !
[11:22:14] <mjlbach[m]> you are welcome 
[11:22:53] <vigoux[m]> When I have my on_attach function, how do I know if the server I am attatching to supports a given request (or whatever it is called in lsp parlance) ?
[11:23:27] <mjlbach[m]> you can check client.resolved_capabilities 
[11:23:51] <mjlbach[m]> or client.supports_method
[11:24:40] <mjlbach[m]> Did anyone else's treesitter highlighting just break today? 
[11:25:20] <maverun[m]> with new update?
[11:25:30] <mjlbach[m]> ye
[11:25:37] <vigoux[m]> hm
[11:25:40] <clason[m]> looks like it, yes
[11:25:41] <vigoux[m]> trying
[11:25:44] <clason[m]> just doesn't enable
[11:25:46] <maverun[m]> look fine to me?
[11:25:50] <clason[m]> (no errors)
[11:25:56] <maverun[m]> i just update it, so i dnt see differences?
[11:25:59] <maverun[m]> what filetype
[11:26:03] <vigoux[m]> Are you guys serious though, the one day I would actually do the $DAYJOB
[11:26:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[11:26:32] <vigoux[m]> Working for me ?
[11:26:59] <clason[m]> You have to reinstall the parsers
[11:27:11] <mjlbach[m]> Hmm I thought I did, maybe it's a nix things 
[11:27:14] <clason[m]> (which points towards the zig PR being the culprit)
[11:27:46] <mjlbach[m]> I'd be really surprised though
[11:28:04] <mjlbach[m]> I'll bisect tomorrow
[11:28:48] <clason[m]> reinstalling worked for me
[11:29:13] <clason[m]> (that's the usual thing to try in case of tree-sitter problems)
[11:29:53] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[11:30:00] <mjlbach[m]> oh lol
[11:30:01] <mjlbach[m]> https://github.com/nvim-treesitter/nvim-treesitter/commit/10419ee747512a5189a6755925a456025228435b
[11:30:04] <mjlbach[m]> I think this was it
[11:30:23] <vigoux[m]> lol wtf am I doing again
[11:30:23] <mjlbach[m]> sad, I would have joined
[11:30:26] <clason[m]> I had issues with Lua and Latex parsers, though
[11:30:28] <maverun[m]> i was about to grab my üëî
[11:30:39] <clason[m]> so maybe there are two problems :]
[11:31:30] <vigoux[m]> maverun[m]: Wouldn't have been that official no worry
[11:31:42] <kdurantNo[m]> Why `[^(] or [^)]` match all char?
[11:32:07] <kdurantNo[m]> I don't understand
[11:32:54] <mjlbach[m]> Yeah, reverting this fixed it https://github.com/nvim-treesitter/nvim-treesitter/pull/1882
[11:33:01] <mjlbach[m]> Am I missing something?
[11:34:06] <clason[m]> Did you update the parser?
[11:34:27] <clason[m]> The capture was added recently, so won't work with older versions
[11:34:46] <mjlbach[m]> I can try, I updated this morning, but I manually compile mine
[11:34:50] <mjlbach[m]> * compile mine (via nix)
[11:35:06] <vigoux[m]> mjlbach[m]: You guys like to suffer, isn't it ?
[11:35:26] <mjlbach[m]> most of the time it's nice because it auto-compiles the latest parser for me while I sleep, along with all of my other source built software :) 
[11:35:47] *** Joins: Crows[m] (~nanozukic@2001:470:69fc:105::1:20ae)
[11:37:13] <maverun[m]> i dont trust install/update package while i sleep or off computer,cuz it will ask for my password or prompt input y/n, and it will cancel itself if i dont respond in time so i have to do all over again...
[11:37:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:38:14] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[11:38:43] *** Joins: ixil (~ixil@82.197.178.137)
[11:41:11] <folke[m]> fyi: just released a new version of Trouble that is compatible with both 0.5 and 0.6. Highlight groups, signs, diagnostics,  lsp references, lsp definitions and lsp implementations should all work again :)
[11:41:31] <folke[m]> * work again as expected :)
[11:41:50] <maverun[m]> nice work, working hard when you return huh
[11:42:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[11:45:12] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:8449:7d74:5738:e870) (Ping timeout: 258 seconds)
[11:46:00] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:f043:5760:71e5:1fe)
[11:48:31] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[11:51:52] <folke[m]> Still far from done though. Maintaining 10 plugins is a lot of fun üòÇ
[11:52:19] <maverun[m]> this is what i was afraid of when i thought of new idea but thought of maintenance put me off lol
[11:52:29] <folke[m]> And I still need to release a workspace settings plugin that's been sitting here for a couple of months now ü§¶‚Äç‚ôÇÔ∏è
[11:53:23] <mjlbach[m]> I may beat you to it :P 
[11:53:38] *** Quits: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com) (Ping timeout: 258 seconds)
[11:54:08] <folke[m]> haha :)
[11:55:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:01:06] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[12:04:35] *** Joins: MichaelZant[m] (~zantinger@2001:470:69fc:105::1:20b2)
[12:07:56] <MichaelZant[m]> Hi, I am trying to send selected elements to a quickfixlist with telescope. But I am not aware of the keybinding <M-q>. This should be a default binding: https://github.com/nvim-telescope/telescope.nvim#default-mappings
[12:08:11] <maverun[m]> M-q is alt-q
[12:08:19] <maverun[m]> m is meta aka alt
[12:08:45] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[12:09:30] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[12:12:06] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[12:12:06] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:14:34] *** Quits: baltazar (~baltazar@178-164-254-238.pool.digikabel.hu) (Ping timeout: 268 seconds)
[12:16:19] *** Joins: baltazar (~baltazar@84-236-16-46.pool.digikabel.hu)
[12:17:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[12:18:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 258 seconds)
[12:18:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:19:22] *** Joins: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net)
[12:20:44] *** Joins: towb (~bwot@user/towb)
[12:21:40] *** Joins: ixil (~ixil@2002:52c5:b289:e472:b64c:c0eb:649f:a99b)
[12:29:34] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[12:29:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:30:08] *** Quits: Neel[m] (~neel12mat@2001:470:69fc:105::d99b) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: jumping-dragon[m (~jumping-d@2001:470:69fc:105::f377) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: anonius11235[m] (~anonius11@2001:470:69fc:105::c3bb) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: ElChemist[m] (~elchemist@2001:470:69fc:105::feb3) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: dboso[m] (~dbosomatr@2001:470:69fc:105::ba28) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: bachir[m]1 (~bachirnet@2001:470:69fc:105::fb8d) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: michzappa[m] (~michzappa@2001:470:69fc:105::eeb1) (Quit: You have been kicked for being idle)
[12:35:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[12:36:28] *** Joins: zro (~zro@user/zro)
[12:41:14] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[12:43:17] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[12:46:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:47:38] <XVilkaAntonKochk> Are maintainers of the Packer.nvim here? This PR looks in a good shape to either merge or request some additional changes: https://github.com/wbthomason/packer.nvim/pull/348
[12:47:48] <XVilkaAntonKochk> One of the most requested features
[12:48:56] <clason[m]> They have their own room: #packer-nvim_community:gitter.im 
[12:50:01] <phaazon[m]> How do I see who pinged me in element
[12:50:22] <clason[m]> scrollback to the mention
[12:50:42] <clason[m]> (that's something that Gitter did better)
[12:51:05] <phaazon[m]> I don‚Äôt know where it is
[12:51:21] <phaazon[m]> That sounds like a suboptimal notification system
[12:51:52] <clason[m]> Such is life
[12:51:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[12:52:02] <phaazon[m]> So I don‚Äôt know who pinged me but if you did, I know you did and can‚Äôt say anything more than that ü•≤
[12:52:17] <clason[m]> I didn't üòá
[12:52:32] *** Joins: cottoneyejim (~cottoneye@2a01:261:366:a000:ea6a:64ff:fe4f:b643)
[12:55:13] <bfredl> same as discord, search for your nick.
[12:55:53] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[12:55:55] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[12:57:52] * maverun[m] uploaded an image: (3KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ubHQUdMrIIbNJBrDWahITBrg/image.png >
[12:57:53] <maverun[m]> ?
[12:58:00] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[12:58:00] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[12:58:00] *** Joins: vroom (~vroom@user/vroom)
[12:58:17] * maverun[m] uploaded an image: (33KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/xNPUvxVqItJVlrtMWJQUCAAv/image.png >
[12:58:24] <maverun[m]> it show a list of people who ping you tho
[12:58:25] <clason[m]> Right, that works
[12:58:33] <p00f[m]> ugh it's sorted the wrong way
[12:58:44] <clason[m]> and clicking on the channel scrolls you to the message
[12:59:38] <clason[m]> p00f[m]: it's sorted the same way as the main message list -- I'd argue that the opposite way would be worse.
[13:00:23] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 264 seconds)
[13:01:21] <p00f[m]> oh yea
[13:02:10] <phaazon[m]> I don‚Äôt have that on mobile
[13:03:10] <maverun[m]> your biggest mistake is using mobile in first places
[13:03:10] <maverun[m]> xD
[13:03:15] <clason[m]> but on mobile you should have system notifications for the ping
[13:03:17] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:03:42] <phaazon[m]> Yeah I‚Äôm not sure why it doesn‚Äôt work
[13:03:46] <phaazon[m]> Can someone ping me please?
[13:03:49] <clason[m]> (enable "noisy" notifications for at least `@`-mentions)
[13:03:52] <p00f[m]> <Bowuigi[m]> "That is pretty cool, good luck" <- this
[13:03:56] <clason[m]> phaazon: ‚òùÔ∏è
[13:04:05] <phaazon[m]> It works
[13:04:09] <clason[m]> \o/
[13:04:13] <dundargoc[m]> Famiu: Hey. I'm pretty sure [your commit](https://github.com/neovim/neovim/pull/15999) broke the windows (MSVC_32) CI test. Mind taking a quick look at it and see what could've caused it? 
[13:04:27] <phaazon[m]> I guess it was something I read on the website version and the notification got cached on mobile or some weirdness
[13:04:30] <p00f[m]> p00f[m]: the last message when i searched your nick
[13:06:10] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:08:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[13:10:29] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[13:13:33] *** Quits: holgersson (~quassel@user/holgersson) (Quit: ‚ÄúFormat C:........[Done]‚Äú)
[13:18:03] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[13:20:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:26:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[13:26:23] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:32:04] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 265 seconds)
[13:35:02] *** Quits: ixil (~ixil@2002:52c5:b289:e472:b64c:c0eb:649f:a99b) (Remote host closed the connection)
[13:38:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:40:45] <phaazon[m]> There is something super weird with the smart mode for paths in telescope built in fd
[13:41:05] <phaazon[m]> The cursors jumps around like crazy and it‚Äôs super annoying to select an entry
[13:46:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[13:47:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:58:26] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:58:40] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:f043:5760:71e5:1fe) (Ping timeout: 260 seconds)
[14:03:20] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[14:06:44] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[14:08:00] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[14:09:41] *** Joins: zro (~zro@user/zro)
[14:11:02] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[14:11:15] *** Quits: X-Scale (~ARM@46.50.2.19) (Ping timeout: 258 seconds)
[14:12:22] *** X-Scale` is now known as X-Scale
[14:14:46] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[14:15:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:20:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[14:31:07] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[14:32:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:36:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[14:40:01] *** Joins: X-Scale` (~ARM@83.223.233.104)
[14:40:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[14:41:23] *** X-Scale` is now known as X-Scale
[14:42:11] *** Joins: holgersson (~quassel@user/holgersson)
[14:48:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:53:18] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[14:59:00] *** Joins: guido (~guido@host-95-247-93-153.retail.telecomitalia.it)
[15:05:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:06:29] *** Quits: dre (~dre@120.156.30.159) (Remote host closed the connection)
[15:14:32] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[15:16:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[15:17:55] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 265 seconds)
[15:19:48] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[15:21:45] <fourstepper[m]> Hi, does anyone have a working, autocompleting setup based on nvim-lsp for Terraform? For me, terraform-ls works well for checking if everything is well within the code, however provides no autocompletion for me through vim-snip, nvim-cmp
[15:21:45] <fourstepper[m]> Thank you for sharing
[15:23:15] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[15:24:58] <hauleth> fourstepper[m]: does Terraform LS that you use even support completion?
[15:28:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:32:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 258 seconds)
[15:33:48] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:33:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[15:34:21] *** Quits: Auprivave (~Auprivave@77.241.136.230.bredband.3.dk) (Ping timeout: 265 seconds)
[15:36:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:40:27] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[15:42:03] <currybullen> can i configure neovim to always return to the most recently used tab when closing the one i'm currently in?
[15:42:04] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[15:47:42] *** Joins: zro (~zro@user/zro)
[15:49:06] *** Joins: Betal (~Betal@user/betal)
[15:52:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:54:10] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:752:7053:abf7:26fc)
[15:55:06] <hauleth> currybullen: you probably need to add autocommands to store LRU of the used tabs and then react respectively on tab close
[15:58:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[16:02:19] *** Joins: szgy (~szgy@2800:810:549:8290::3)
[16:10:13] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:13:36] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[16:15:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[16:16:50] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:24:34] *** Joins: reumeth (~reumeth@user/reumeth)
[16:25:24] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[16:25:43] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:26:05] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Client Quit)
[16:26:24] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:27:36] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Client Quit)
[16:27:55] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:30:16] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Client Quit)
[16:30:35] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:31:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:33:23] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[16:34:27] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Client Quit)
[16:35:13] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:36:07] *** Joins: zro (~zro@user/zro)
[16:37:57] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[16:42:24] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[16:42:43] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:44:55] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[16:45:20] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Client Quit)
[16:45:39] *** Joins: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net)
[16:46:21] *** Joins: meator (~meator@user/meator)
[16:47:08] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:01:59] *** Joins: zro (~zro@user/zro)
[17:02:40] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[17:06:26] *** Quits: zro (~zro@user/zro) (Ping timeout: 258 seconds)
[17:07:39] *** Joins: grizzly_move03[m (~grizzlymo@2001:470:69fc:105::1:20e7)
[17:14:11] *** Joins: just1602_ (~just1602@199.58.80.143)
[17:14:12] *** Quits: just1602 (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[17:14:38] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[17:21:15] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:752:7053:abf7:26fc) (Quit: WeeChat 3.0.1)
[17:38:37] *** Joins: yeirr (~yeirr@user/yeirr)
[17:40:03] *** Joins: zro (~zro@user/zro)
[17:43:26] *** Quits: anihm (~anihm136@grayideas.org) (Ping timeout: 245 seconds)
[17:44:26] *** Joins: anihm136 (~anihm136@grayideas.org)
[17:46:45] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[17:50:50] <ddickstein[m]> My ftplugins are loading silently (I need to use unsilent to echo) and I think they might even be loading with silent! (I suspect there's an error that's being suppressed). I don't see anything in the runtime's ftplugin.vim that would cause this silent behavior. Is this built-in? Is something awry in my plugins? Does anyone have any ideas about what might be causing this?
[17:51:59] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 264 seconds)
[17:52:34] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[17:53:02] *** Joins: Auprivave (~Auprivave@77.241.128.49.mobile.3.dk)
[17:54:20] *** Quits: szgy (~szgy@2800:810:549:8290::3) (Ping timeout: 260 seconds)
[17:55:52] <ddickstein[m]> .. is this because of shortmess+=F?
[17:56:13] <clason[m]> very likely
[17:56:40] <clason[m]>           F     don't give the file info when editing a file, like :silent
[17:56:40] <clason[m]>                 was used for the command; note that this also affects messages
[17:56:40] <clason[m]>                 from autocommands
[17:57:13] <clason[m]> and `ftplugin.vim` is _all_ autocommand...
[18:01:58] <ddickstein[m]> hmm when I disable F though I still encounter the issue. Specifically, the issue I am running into is that the ftplugin stops sourcing -- I think the reason this is happening is that the function that is being called at the moment is being redefined by the buffer that is being loaded -- one of those cases where the function needs to be in an autoload file. But the behavior I would expect is an error message
[18:02:03] <ddickstein[m]> and I see nothing just radio silence
[18:02:05] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[18:04:35] <ddickstein[m]> like it's in an ftplugin foo.vim and the function opens a split with a different file of type foo, so the ftplugin is loaded again and tries to define the function while it's active
[18:04:36] <kaddkaka[m]> Compared to default syntax highlighting of c++, treesitter does not handle `#if 0` sections in any special way. The default highlight style makes the disabled code look like comments. Do you know if it's possible to turn on this kind of highlighting in Treesitter?
[18:05:23] *** Joins: lilgopher (~textual@2601:241:8000:38f0:8d2b:81a9:aa03:d249)
[18:06:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:07:46] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:12:32] <ddickstein[m]> ok I do get an error in a most minimal repro, so this isn't a core neovim issue -- I'm doing something bad in a plugin that's suppressing the output
[18:20:20] *** Joins: liam[m] (~worsematr@2001:470:69fc:105::ca81)
[18:21:06] *** Joins: szgy (~szgy@200.81.173.6)
[18:29:08] <hide> I'm using null-ls for formatting, running shfmt on shell files, I have indent set to 2 spaces by default, but in some projects the files us 4 spaces. I'm using indent-o-matic to dynamically change the indent setting based on what the indent in the file is set to.
[18:29:28] <hide> When I save null-ls/shfmt changes the indentation on every line to 2 spaces. shfmt takes an argument as to what to set indentation to, but is there a variable I can pass to shfmt with the indentation setting?
[18:31:31] *** Joins: kjir[m] (~kjirmatri@2001:470:69fc:105::1:20f0)
[18:33:48] <kjir[m]> Hi all, I have a question regarding LSP: I'm using the builting LSP client and when I save typescript files I now get prompted for which LSP server to use when saving. This is most likely due to the format on save configuration, and since both `null-ls` and `tsserver` have the formatting capability I get asked which one to use.
[18:33:49] <kjir[m]> Is there a way to set a default and avoid getting asked this when saving?
[18:34:34] <kjir[m]> Select a language server:
[18:34:34] <kjir[m]> (1) null-ls, (2) tsserver
[18:35:49] <clason[m]> you could probably edit the capabilities of one to remove the formatting capability (check the lspconfig wiki for how to pass adapted capabilities to the setup)
[18:37:45] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Remote host closed the connection)
[18:38:37] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[18:42:49] *** Joins: mud (~mud@user/kadoban)
[18:48:47] *** Joins: ajr (~andrew@cpe-172-91-111-232.socal.res.rr.com)
[18:55:42] *** Quits: NotIndonesian (znc@Indonesians.are.sick.bnc.HUNTERS.thats.bad.mn) (Remote host closed the connection)
[19:03:53] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[19:10:41] <dundargoc[m]> god lua can be nasty
[19:12:00] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[19:12:24] <kjir[m]> I think I could also opt for `formatting_seq_sync()` instead of `formatting_sync()`. It would run through all of them, but at least I shouldn't get a prompt
[19:12:57] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[19:13:16] <mjlbach[m]> You can pass an order in opts to district client ids
[19:13:55] <kjir[m]> How would that look like? I would I know which comes first and which comes last?
[19:15:38] <kjir[m]> s/I/How/
[19:17:22] *** Quits: utraciss (~utraciss@118.100.91.150) (Quit: %quit from znc%)
[19:29:41] <dundargoc[m]> debounce_text_changes (number, default nil): Debounce didChange notifications to the server by the given number in milliseconds.
[19:29:46] <dundargoc[m]> What is a debounce?
[19:30:07] *** Quits: danielpower[m] (~danielpow@2001:470:69fc:105::feab) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: amenonsen[m] (~amenonsen@2001:470:69fc:105::d2f5) (Quit: You have been kicked for being idle)
[19:30:27] <p00f[m]> > <@dundargoc:matrix.org> ```
[19:30:27] <p00f[m]> > debounce_text_changes (number, default nil): Debounce didChange notifications to the server by the given number in milliseconds.
[19:30:27] <p00f[m]> > ```
[19:30:27] <p00f[m]> timer something something
[19:30:29] <p00f[m]> i think
[19:30:33] <kjir[m]> dundargoc: Debounce means that instead of sending all requests as they happen, you wait a certain amount of time before doing the request so that you don't flood the server with requests
[19:31:03] <clason[m]> don't react every time something happens but wait at least x ms and then react to everything that's happened in the meantime in bulk
[19:31:51] <kjir[m]> Think for example autocomplete: if you're typing fast, you know already what you want to type and there's no point in generating suggestions in quick succession. You should instead wait for a small amount of time to optimize your load
[19:31:51] <dundargoc[m]> clason[m]: Aha, so basically the time before it reacts so it doesn't spam error every time I change something.
[19:31:55] <clason[m]> (key point here is to coalesce all change notifications into a single big change)
[19:32:00] <clason[m]> exactly
[19:32:27] <clason[m]> or, more generally, don't overload the JSON en- or decoder by sending every single keystroke
[19:33:21] <dundargoc[m]> Is `didChange` something internal to neovim or is it related to lsp?
[19:33:22] <clason[m]> if you're a two-finger pecking eagle, you don't need it, but a 200wpm keyboard masher will burn needless cycles
[19:33:30] <clason[m]> it's related to LSP
[19:33:56] <clason[m]> it's how the client and the server synchronize the buffer contents
[19:34:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[19:38:00] <dundargoc[m]> Yes, got it. Thank you for the help.
[19:38:23] <clason[m]> np
[19:42:47] *** Quits: szgy (~szgy@200.81.173.6) (Ping timeout: 265 seconds)
[19:45:10] <kjir[m]> Ahhh I found a relevant discussion about my problem: https://github.com/neovim/neovim/issues/14952
[19:45:13] *** Joins: szgy (~szgy@200.81.173.6)
[19:48:14] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[19:53:20] *** Joins: jklfds_ (~jklfds@user/jklfds)
[19:54:21] <enjoinedmot[m]> I have a couple questions about `busted` ... One is, can `busted` be used to test `vimscript` (I see no reference to this, but I am porting, a `vimscript` plugin to `lua` and I'd like to have a unified test framework if that's possible. Right now it doesn't look like it is possible to me.)
[19:54:31] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[19:55:28] <enjoinedmot[m]> also I noticed there's been no releases for `busted` in over 3 years, that seems like a long time, though `Vader` also was kind of "stale," maybe these projects just hit a mark on what they were intended to do? Or...?
[19:57:17] <enjoinedmot[m]> eventually I would like to build toward contributing to `neovim` but right now I'm trying to get deeper with `lua` as well as exploring using `lua` as a 'shim' for functionality provided by different languages, or in my case right now, specifically `rust`
[19:59:15] <enjoinedmot[m]> I guess a final question for now is, would `neovim` as a project be interested in, some day, factoring out some languages currently in the code base (I think `perl` is especially hard to understand) and replacing that functionality with `rust` or something else? Thank you...
[19:59:28] <clason[m]> Wdym?
[19:59:51] <clason[m]> Neovim is written in C, with (increasingly) functionality in Lua (and of course Vimscript
[19:59:54] <clason[m]> * course Vimscript)
[20:00:22] <clason[m]> No perl anywhere (apart for two legacy scripts that are kept around for the sake of history)
[20:00:54] <clason[m]> If you want to RIIR, you should look at https://github.com/helix-editor/helix
[20:01:11] <Mathias[m]> <enjoinedmot[m]> "I have a couple questions about..." <- If you execute busted through the lua embedded in neovim you can call vimscript through `vim.fn.`   Plenary contains a busted like interface, see  https://github.com/nvim-lua/plenary.nvim#plenarytest_harness  
[20:01:47] <enjoinedmot[m]> okay, yeah I don't see any `perl` on the github readout but I swear I saw something, probably using `tokei`. Sorry if these are stupid questions. :)
[20:02:10] <enjoinedmot[m]> Thank you Mathias and clason for replies
[20:02:32] *** Joins: arkurious (~arkurious@user/arkurious)
[20:05:11] *** Quits: szgy (~szgy@200.81.173.6) (Ping timeout: 264 seconds)
[20:06:11] <dundargoc[m]> implementation()
[20:06:11] <dundargoc[m]>                 Lists all the implementations for the symbol under the cursor in the quickfix window.
[20:06:25] <dundargoc[m]> Does implementation mean every time the symbol is used?
[20:06:37] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[20:06:37] <clason[m]> No, that's `references`
[20:06:37] <Mathias[m]> enjoinedmot:  https://github.com/nvim-lua/nvim-lua-plugin-template  contains a minimal setup for using plenary busted in plugins 
[20:06:50] <clason[m]> I think this is specific to C-like languages
[20:07:05] <clason[m]> where you'd have declaration and implementation in different files
[20:07:41] <enjoinedmot[m]> yeah I see 3 files of `perl` with 530 lines by using `tokei`
[20:08:07] <dundargoc[m]> I swear I'm spamming it on every word I see and nothing happens.
[20:08:18] <clason[m]> is that a header declaration?
[20:08:32] <dundargoc[m]> I've tried it on everything
[20:08:39] <clason[m]> and are you sure the server supports `textDocument/implementation`?
[20:08:50] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[20:08:57] <dundargoc[m]> clason[m]: the what
[20:09:01] <clason[m]> enjoinedmot[m]: yep, that's just ancient tooling (one from a dependency)
[20:09:14] <clason[m]> that's not at all related to actual Neovim functionality
[20:09:26] <clason[m]> (same with the Python scripts)
[20:10:02] <Mathias[m]> dundargoc[m]: It can show implementations of a interface or classes extending another class. E.g. with jdtls if you have a `List<Integer> x;` property and call implementation when the cursor on top of `List` you see all classes that have a `implements List`
[20:10:38] <dundargoc[m]> Mathias[m]: Aha, so it's only for those fancy-pants languages that have features.
[20:10:54] <SeanDewar[m]> i think clangd also uses it for C++
[20:10:59] <SeanDewar[m]> for `override`
[20:11:06] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[20:11:09] <SeanDewar[m]> for virtual methods
[20:11:13] <SeanDewar[m]> but i might be misremembering
[20:11:28] <dundargoc[m]> lol, so I guess C is like the only language it won't work on :)
[20:12:10] <Mathias[m]> maybe it works in a header file to move to the implementation ?
[20:13:26] <SeanDewar[m]> you mean for function prototypes n stuff?
[20:13:27] <SeanDewar[m]> i'd expect that'd be `definition`
[20:15:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[20:15:33] <dundargoc[m]> > method textDocument/typeDefinition is not supported by any of the servers registered for the current buffer
[20:15:38] <dundargoc[m]> but....it's C.
[20:15:51] <clason[m]> `typeDefinition` is something else again
[20:15:53] <SeanDewar[m]> nah not typedefinition
[20:16:29] <dundargoc[m]> I've moved on from implementation
[20:16:30] <clason[m]> there's `definition`, `declaration`, `implementation`, and `typeDefinition`
[20:17:11] <bfredl> country and western
[20:17:12] <dundargoc[m]> lol
[20:17:13] <clason[m]> hard and rock
[20:17:34] <dundargoc[m]> But typedefinition isn't information about the variable type?
[20:17:42] <clason[m]> depends on the server
[20:17:43] <dundargoc[m]> Like int, short, long etc.
[20:17:56] <dundargoc[m]> clason[m]: ?
[20:17:59] <clason[m]> don't try to guess what it should mean
[20:18:15] <clason[m]> look at what the server claims to do on these requests
[20:18:26] <dundargoc[m]> Is lsp some wild wasteland where everyone is free to do as they please or something?
[20:18:29] <clason[m]> the spec just says that these methods exist
[20:18:35] <dundargoc[m]> uhhhh
[20:18:36] <clason[m]> what servers do with them is up to them
[20:18:47] <bfredl> dundargoc[m]: how are you gonna stop them?
[20:19:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:19:12] <dundargoc[m]> lmfao, can't stop madness
[20:19:34] <dundargoc[m]> alrighty then
[20:19:39] *** Joins: emf (~emf@2620:10d:c090:400::5:bb17)
[20:20:23] <enjoinedmot[m]> <clason[m]> "yep, that's just ancient tooling..." <- okay, thank you for clarifying :)
[20:20:29] <bfredl> as the maintainer of the spec themselves treat it as a loose recommendation, it is hard to fault everyone else...
[20:20:39] <dundargoc[m]> lmao so microsoft threw a bunch of lemons and just went "make some lemonade out of that"
[20:20:45] *** Quits: aa (~douglasco@200.146.85.128.static.gvt.net.br) (Quit: Leaving)
[20:20:51] *** just1602_ is now known as just1602
[20:20:57] *** Quits: just1602 (~just1602@199.58.80.143) (Changing host)
[20:20:57] *** Joins: just1602 (~just1602@user/just1602)
[20:21:06] <bfredl> yes. and you won't except everyone to make identical lemonade.
[20:21:12] <clason[m]> pretty much. also, "look at our cool-aid".
[20:22:49] <bfredl> and "vscode don't need tree-sitter since we can haz LSP"
[20:23:06] *** Quits: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566) (Quit: WeeChat 3.3)
[20:23:22] <Mathias[m]> Even if Microsoft made the spec strict, you can be sure that plenty of implementations would ignore it 
[20:25:15] <dundargoc[m]> Ehhh, doesn't it make them unusable if people don't know wtf to expect?
[20:25:31] <dundargoc[m]> Or you mean they would ignore it in favor of vscode?
[20:25:49] *** Joins: szgy (~szgy@200.81.173.6)
[20:27:07] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:27:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:27:26] <dundargoc[m]> Actually what do you mean? :)
[20:27:35] *** Joins: kotto (~kotto@2001:8a0:ee37:f500:2ad2:44ff:fe68:9566)
[20:28:29] <dundargoc[m]> I'm at that point where I'm confused, but I don't know enough/haven't thought about it enough to formulate coherent questions. Ignore it :)
[20:28:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:33:37] <dundargoc[m]> Wait whaaat. So if each server is free to define each "function", then doesn't neovim account for each each server in case they do something different?
[20:33:43] <dundargoc[m]> Man I don't know shit
[20:33:58] <clason[m]> don't have to
[20:34:26] <clason[m]> it's only the semantics that are left undefined -- what the editor is supposed to do is clear
[20:34:56] <dundargoc[m]> clason[m]: ?
[20:35:24] *** Joins: burakcank (burakcank@has.arrived.and.is.ready-to.party)
[20:35:39] <dundargoc[m]> I don't understand the distinction.
[20:35:42] <clason[m]> the editor sends the request "I want 'implementation' on this position in the buffer" and the server sends back another position
[20:35:44] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[20:35:46] <SeanDewar[m]> editor just ask where and then go jumpy
[20:36:00] <clason[m]> how those two positions relate is irrelevant to the spec
[20:36:25] <clason[m]> the specific server will document this though
[20:37:36] <dundargoc[m]> Aha!
[20:38:09] <dundargoc[m]> Ok maybe theres a point in having each server define it in a way that makes sense for their language
[20:38:37] <dundargoc[m]> I think
[20:38:43] <dundargoc[m]> Im just thinking out loud
[20:39:20] <dundargoc[m]> Also did yall go to LSP school or some shit?
[20:39:47] <dundargoc[m]> When, how, where you gor this info?
[20:39:48] <clason[m]> The LSP School of Hard Knocks, yes
[20:39:51] <clason[m]> the Spec
[20:39:56] <clason[m]> also trial and error
[20:40:08] <dundargoc[m]> "mostly error"
[20:40:10] *** Joins: utraciss (~utraciss@118.100.91.150)
[20:40:14] <dundargoc[m]> ;)
[20:40:59] <dundargoc[m]> Does anyone actually read that thing?
[20:41:13] <dundargoc[m]> Unironically
[20:41:30] <clason[m]> you need to, when you get into a debate between client and server on what should happen
[20:41:40] <clason[m]> it's terrible, not going to lie
[20:41:59] <dundargoc[m]> The spec is terrible you mean?
[20:42:03] <clason[m]> yes
[20:42:06] <dundargoc[m]> In what way?
[20:42:19] <clason[m]> hard to read because of the way it's structured (and presented)
[20:42:27] <dundargoc[m]> clason[m]: Idk server goes brrrrrrrr
[20:42:30] <clason[m]> no good table of contents
[20:42:56] <dundargoc[m]> Yeah but aren't specs supposed to be hard to read :)
[20:43:12] <clason[m]> well, this one is harder to read than necessary, I feel
[20:45:25] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:48:29] <dundargoc[m]> <clason[m]> "well, this one is harder to read..." <- Challenge accepted
[20:48:46] <clason[m]> Godspeed, then
[20:49:33] *** Joins: blami (~blami@ag006056.dynamic.ppp.asahi-net.or.jp)
[20:51:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:53:53] <dundargoc[m]> <clason[m]> "Godspeed, then" <- Never mind, WTF am I reading?
[20:56:04] <dundargoc[m]> I leave the specreading to the big boys like MJ, Mathias and Greg ü•∞
[21:04:43] <Mathias[m]> As far as specs go, I think it's pretty good
[21:05:00] <Mathias[m]> But if you've seen some specs, the bar for good is pretty low :p
[21:08:50] <dundargoc[m]> Mathias[m]: Only the C spec, but also left that with the impression of "well, someone needs to read and understand this s*** but it won't be me"
[21:13:11] <p00f[m]> <clason[m]> "hard to read because of the..." <- should be a pdf
[21:13:35] <p00f[m]> looks authentic and specy
[21:15:07] <dundargoc[m]> ackshually, the neovim lsp client doesn't conform to the LSP specification version 3.06 in paragraph 5, section 2....
[21:15:14] <dundargoc[m]> ü§ì
[21:15:23] <clason[m]> that's a bug; file an issue
[21:15:43] <clason[m]> üò¨
[21:16:18] <dundargoc[m]> It was just a joke :(
[21:16:36] <clason[m]> so was my answer
[21:16:50] <clason[m]> (although non-adherence to the spec is treated as a bug)
[21:16:57] <dundargoc[m]> üßê
[21:17:09] <SeanDewar[m]> and so the joker gets joker...ed
[21:17:20] <dundargoc[m]> ü§°
[21:17:23] <clason[m]> who jokereth the the joker?
[21:17:34] <p00f[m]> üÉè
[21:17:50] <p00f[m]> or something i don't cards
[21:17:59] <dundargoc[m]> Anyway, I'd rather drink acid than read the spec.
[21:18:01] <clason[m]> s/the//
[21:18:12] <dundargoc[m]> Bugs be damned
[21:20:18] <dundargoc[m]> Sorry MJ :(
[21:20:21] <dundargoc[m]> Nothing personal
[21:20:32] <dundargoc[m]> * Nothing personel
[21:20:46] <dundargoc[m]> * Nothing personnel
[21:21:06] *** Quits: blami (~blami@ag006056.dynamic.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[21:22:44] *** Joins: hololeap (~hololeap@user/hololeap)
[21:34:49] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[21:35:24] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[21:35:52] *** Joins: hololeap (~hololeap@user/hololeap)
[21:42:03] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 258 seconds)
[21:44:30] <anniehallmoon> Is there any issue tracking missing features from configuring neovim in lua, like for example set colorscheme and augroups ? 
[21:45:01] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[21:47:14] <clason[m]> https://github.com/neovim/neovim/projects/5
[21:47:22] <clason[m]> but take this with a grain of salt
[21:48:14] <clason[m]> the goal is not necessarily to have Lua copies of every vimscript command just for the sake of it
[21:48:59] *** Joins: meator (~meator@user/meator)
[21:50:45] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:51:14] <clason[m]> it's usually more worthwhile to extend the (C) Neovim API to access Vim internals directly (and, of course, expose that to Lua)
[21:51:22] <clason[m]> that's tracked here: https://github.com/neovim/neovim/projects/11
[21:52:16] <clason[m]> (again, more of an "ideas collection" than a proper project schedule -- expect things to be removed or just go stale if nobody is interested in doing that)
[21:52:39] <anniehallmoon> Right now the only vim script I have on my config is augroups(that are already being working on) and my set colorscheme 
[21:52:50] *** Joins: zro (~zro@user/zro)
[21:52:51] <anniehallmoon> Thanks for the info clason 
[21:53:03] <clason[m]> you can write colorschemes in Lua, you know ;)
[21:53:49] <clason[m]> (and there's little benefit of `vim.colorscheme = 'foo'` over `vim.cmd 'colorscheme foo'`)
[21:56:21] *** Joins: haciendasanpedro (~haciendas@2001:470:69fc:105::1:2117)
[21:58:16] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 252 seconds)
[21:59:10] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:02:45] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[22:03:57] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[22:08:42] *** Quits: szgy (~szgy@200.81.173.6) (Remote host closed the connection)
[22:08:45] *** Joins: kron (~weechat@user/qaph)
[22:09:15] *** Joins: szgy (~szgy@200.81.173.6)
[22:18:00] *** Quits: Carp (~rue@1-162-40-226.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:21:23] *** Quits: utraciss (~utraciss@118.100.91.150) (Quit: %quit from znc%)
[22:33:57] *** Quits: guido (~guido@host-95-247-93-153.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[22:34:38] *** Joins: guido (~guido@host-95-247-93-153.retail.telecomitalia.it)
[22:35:01] *** Quits: guido (~guido@host-95-247-93-153.retail.telecomitalia.it) (Client Quit)
[22:41:51] *** Quits: arthurpbs (~arthurpbs@168.121.99.146) (Ping timeout: 258 seconds)
[22:42:04] *** Joins: guido (~guido@host-95-247-93-153.retail.telecomitalia.it)
[22:44:44] *** Joins: szgy_ (~szgy@200.81.173.6)
[22:44:50] *** Quits: szgy (~szgy@200.81.173.6) (Ping timeout: 260 seconds)
[22:45:11] <maverun[m]> oh they finally add that huh
[22:45:12] <maverun[m]> neat
[22:45:48] <dundargoc[m]> <clason[m]> "(and there's little benefit of..." <- The first one three fewer letters
[22:46:46] <Cobra[m]> 3 is a big number
[22:48:31] <clason[m]> Only if you write it in crayon
[22:52:36] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[22:54:37] *** Joins: arthurpbs (~arthurpbs@168.121.99.182)
[23:18:01] * maverun[m] uploaded an image: (353KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/weHEcfqwpveKvbdSmpoYGHxf/image.png >
[23:18:14] <maverun[m]> i swear element love to embed bigass picture...
[23:20:28] <clason[m]> Well, it's a big number Indeed...
[23:22:01] <enjoinedmot[m]> more than 2 and definitely less than infinity
[23:23:22] *** Joins: TobTobXX (~TobTobXX@adsl-89-217-23-196.adslplus.ch)
[23:24:00] <dundargoc[m]> Inb4 clason  in with his math BS and proceed to explain why infinity isn't a number ;)
[23:24:21] <p00f[m]> <clason[m]> "(and there's little benefit of..." <- doesn't work
[23:24:44] <p00f[m]> oh you said "little benefit"
[23:24:47] *** Quits: szgy_ (~szgy@200.81.173.6) (Ping timeout: 258 seconds)
[23:25:42] <dundargoc[m]> Doesn't work != Little benefit
[23:25:54] <BradenT[m]> <clason[m]> "(and there's little benefit of..." <- wait, is `vim.colorscheme` already available? I just tried it out, but got error `colorscheme` field is nil
[23:25:57] <dundargoc[m]> English mother******, do you speak it
[23:26:29] <p00f[m]> dundargoc[m]: they asked "the only vimscript I have is my set colorscheme"
[23:26:47] <p00f[m]> clason said "little benefit" which means it's not worth adding
[23:27:20] <dundargoc[m]> So it does work :)
[23:27:34] <p00f[m]> what
[23:27:42] <dundargoc[m]> Never mind
[23:28:18] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[23:28:57] <p00f[m]> okei
[23:29:43] <dundargoc[m]> Rainbow parenthesis when?
[23:30:16] <p00f[m]> wdym
[23:30:27] <dundargoc[m]> Your plugin.
[23:30:38] <dundargoc[m]> Make it faster
[23:30:41] <dundargoc[m]> Now
[23:30:47] <dundargoc[m]> Chop chop
[23:30:48] <maverun[m]> it work fine...?
[23:30:49] <p00f[m]> is it still slow
[23:30:58] <p00f[m]> i thought i made it faster
[23:31:10] <dundargoc[m]> Haven't tried, but probably :)
[23:31:20] <p00f[m]> F
[23:31:23] <dundargoc[m]> F
[23:31:50] <p00f[m]> p00f[m]: s/i/theHamsta
[23:32:03] <dundargoc[m]> Don't take it personally, pretty much all treesitter plugins are death to editor.
[23:32:23] <p00f[m]> p00f[m]: i mean i'm obviously not capable of doing it
[23:32:28] <dundargoc[m]> Will buy a new xomputer soon
[23:32:35] <p00f[m]> dundargoc[m]: F (2)
[23:32:47] <dundargoc[m]> F(2)
[23:34:25] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[23:34:59] <dundargoc[m]> * F (2)
[23:39:59] *** Joins: dmitmel[m] (~dmitmelma@2001:470:69fc:105::c78b)
[23:39:59] <dmitmel[m]> <mjlbach[m]> "sumneko: we have issues with..." <- hi! I am the one who was posting on the ticket on github related to this. I remember I promised to come up with a solution, but sorry, didn't have much free time lately. I have time to work on this in the following week. The main problem I had with this is writing unit tests for the diffing function. I mean, I am sure that I can throw together an untested implementation (I actually have a
[23:39:59] <dmitmel[m]> component in my configs which does something very similar to the incremental syncer diffing, it just does it on the line level and not on the column level. extending it to work on columns should not be hard.), but I take it you won't accept it in the codebase. the good news is that I believe that only the `vim.lsp.util.compute_diff` and related local functions need changing, so a monkey-patch can be used for fixing this in older neovims.
[23:46:10] *** Joins: Jacob[m]1234 (~jgawlikma@2001:470:69fc:105::1:2129)
[23:47:29] <Jacob[m]1234> Hey guys, does any one know what happened to daily builds?
[23:49:38] <dmitmel[m]> also... bfredl, I have found this thing on your github: <https://github.com/bfredl/bfredl.github.io/blob/9efcb1a2a4b32beb0133f1222bbe347ef43b91b1/nvim/lua/bfredl/miniguide.lua>... the idea of using decoration providers for rendering indentation guides. I have extended this in my own configs to imitate the indentLine and indent-blankline plugins, the implementation is more-or-less complete:
[23:49:38] <dmitmel[m]> <https://github.com/dmitmel/dotfiles/blob/488ec36e4057eda9455ef35f1fc26092d107f870/nvim/lua/dotfiles/sane_indentline.lua>.
[23:49:54] <clason[m]> <BradenT[m]> "wait, is `vim.colorscheme..." <- No, of course not, that was my point.
[23:51:17] <dmitmel[m]> by the way, are colorschemes in Lua really faster to load? like, if I take my existing colorscheme script and turn it into a series of evals of `:highlight` and `:highlight link`.
[23:51:18] <clason[m]> Jacob[m]1234: That's one of the pinned issues on the Neovim repo...
[23:51:49] <p00f[m]> also it takes like 2 mins to build
[23:52:19] <clason[m]> dmitmel[m]: Not by much, no
[23:52:55] <clason[m]> Lua is not a magic sauce that automatically makes everything faster.
[23:53:40] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 260 seconds)
[23:54:19] <Jacob[m]1234> clason[m]: Thanks, I don't know how I've missed that, sorry
[23:55:57] <dmitmel[m]> clason[m]: yes, this is why I was asking. although at least measuring the difference in my case may be worth it because I have a few helper functions, in particular this beauty for doing computer graphics in Vimscript:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d5076a07937f83f8e1b8fe5285d40230e791b4e4)
[23:58:26] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[23:59:55] *** Quits: jklfds_ (~jklfds@user/jklfds) (Ping timeout: 265 seconds)
