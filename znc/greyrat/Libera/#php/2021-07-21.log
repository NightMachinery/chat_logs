[00:00:10] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[00:04:48] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:22:17] *** Quits: ge (~g@37.214.79.50) (Remote host closed the connection)
[00:23:39] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Quit: oh, look, upgrades...)
[00:24:59] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[00:32:28] *** Quits: olle (~olle@mue-88-130-56-135.dsl.tropolys.de) (Ping timeout: 256 seconds)
[00:34:09] *** Quits: Sammitch (~Jerkface@159.203.29.159) (Changing host)
[00:34:09] *** Joins: Sammitch (~Jerkface@user/sammitch)
[00:43:22] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:57:52] *** Quits: adsr (~adsr@45.58.35.250) (Remote host closed the connection)
[01:31:10] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[01:43:52] <celphi> is there ever a reason to zip using a php class over the basic exec('zip')
[01:45:08] <da_wunder> personally I would avoid using exec and similar functions
[01:45:30] <da_wunder> using those with user input is major security risk
[01:45:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:45:43] <stenno> also you lose platform independence
[01:45:55] <stenno> and have external dependencies
[01:46:20] <celphi> dependencies being zip?
[01:46:53] <stenno> a program called zip which zips stuff, in any case
[01:47:59] <Sammitch> reasons: all of the methods on this page https://www.php.net/manual/en/class.ziparchive.php
[01:48:31] <celphi> im assuming it's slower though
[01:48:42] <Sammitch> why on earth would you assume that?
[01:48:51] <celphi> https://stackoverflow.com/questions/7079674/which-is-more-efficient-zipping-with-a-system-command-or-using-php-ziparchive
[01:49:04] <da_wunder> celphi: have you benchmark that?
[01:49:07] <celphi> nope
[01:49:14] <celphi> just going off old SO
[01:49:25] <celphi> but it would make sense that a linux command would be faster
[01:49:27] <Sammitch> that stackoverflow post is coming up on its 10th birthday
[01:49:39] <Sammitch> and itself comes with caveats
[01:49:54] <celphi> im not defending the position-
[01:50:07] <da_wunder> and really if you have speed problems - have you really pinpointed those to be zip related?
[01:50:29] <stenno> premature optimization..
[01:50:56] <celphi> shrug perhaps. thus why i asked room on thoughts
[01:51:06] <celphi> ty for feedback
[01:51:39] <da_wunder> and most of the host companies doesn't allow you to use exec or similar functions - just for the security reasons
[01:52:10] <celphi> makes sense
[01:54:37] <celphi> zip can be ran by anyuser
[01:55:40] <da_wunder> that is not the point there - allowing using exec is the point
[01:55:48] <celphi> k
[01:56:30] <celphi> wouldnt it only be  a security issue if you alow the user to insert the parameters?
[01:56:53] <stenno> its wise to avoid those methods out of principle
[01:56:58] <celphi> aight
[01:57:04] <da_wunder> eg. if you pass some user input there you could do something like `exec('somecommand userinput)` where that userinput is something like `foo &&  rm -rf /`
[01:57:19] <celphi> yeah i was referring it to being static
[01:57:27] <celphi> i get the user input issues
[01:57:37] <stenno> same reason you don't use eval, ever
[01:57:48] <celphi> well you do if the string is static
[01:57:49] <da_wunder> and because of that most of the host providers just disallow use of those functions
[01:58:00] <da_wunder> because they cannot know how those are used
[01:58:36] <celphi> aight- thanks for allowing me to play devil's advocate
[02:14:55] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-01f2-fb55-5ffe-baf3.res6.spectrum.com) (Quit: Leaving.)
[02:22:44] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Remote host closed the connection)
[02:25:10] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[02:25:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[02:30:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:38:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:50:19] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-ed5e-2f35-0ac2-f32a.res6.spectrum.com)
[02:54:35] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[02:55:15] *** Joins: astiak (~astiak@ownage.biz)
[02:59:58] <Blondie101010> welllll it depends on the host, and consequently how much you pay for the service
[03:00:26] *** Quits: pmercado (~pmercado@186.107.32.40) (Quit: Konversation terminated!)
[03:05:36] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[03:06:39] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:11:31] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 268 seconds)
[03:18:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 255 seconds)
[03:19:26] *** Joins: Northwoods (~Northwood@223.130.30.165)
[03:19:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[03:22:36] *** Joins: impliednude (~impliednu@104.232.118.176)
[03:24:21] <impliednude> My work is using wordpress heavily but since they were bought out, They will be switching to drupal in '22. The design will remain the same but the modules will have to be redone, as well as the ability to retain wysiwyg for less techy individuals. Anyone here knowledgable I can ping some ideas on?
[03:30:55] <Sammitch> you might want to ask in #drupal instead
[03:31:30] <impliednude> in there, not heard a peep
[03:40:37] <Sammitch> you might have to wait a literal day, it's IRC. they might also be the type to go "ew IRC" and be slack/dicord/whatever-only
[03:41:31] <impliednude> I get ya. I sometimes avoid helping in the channel I am an oper in
[03:45:12] <Blondie101010> that sounds irrelevant
[03:51:15] <impliednude> Blondie101010> oh, okay. cool ^_^
[03:53:24] <Blondie101010> impliednude:  to be frank, it seems strange not to make them realize the price it costs to change, and that includes hiring the consultant who'd answer your questions
[03:55:39] <Blondie101010> chances are that you're likely to lose your job, sadly
[04:07:29] <Byteflux> Presumably there are "reasons" for switching and there are people pushing those reasons.
[04:08:51] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[04:15:56] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[04:16:03] *** Quits: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) (Client Quit)
[04:16:08] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 255 seconds)
[04:17:20] *** Joins: WishBoy (~WishBoy@user/wishboy)
[04:24:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:36:24] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[04:36:59] *** Joins: LSD (~LSD@2.lsd.systems)
[04:38:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[04:40:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:49:25] *** Joins: evilbug (~evilbug@191.101.174.50)
[04:53:35] *** Quits: locsmif (~none@user/locsmif) (Read error: Connection reset by peer)
[04:53:50] *** Joins: adsr (~adsr@45.58.35.250)
[05:04:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[05:05:12] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[05:05:54] *** Joins: goddard (~goddard@user/goddard)
[05:30:17] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:00] *** Joins: vlm (~vlm@user/vlm)
[05:36:59] *** Joins: nirix (uid48447@id-48447.tinside.irccloud.com)
[05:48:38] *** Quits: evilbug (~evilbug@191.101.174.50) (Quit: Connection closed)
[05:55:13] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-ed5e-2f35-0ac2-f32a.res6.spectrum.com) (Ping timeout: 252 seconds)
[06:00:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[06:10:41] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[06:11:31] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[06:11:53] *** Joins: kenoba (~kenoba@user/kenoba)
[06:14:42] *** Joins: ferdna (~ferdna@user/ferdna)
[06:18:14] *** Joins: seand (~seand@69.54.136.33)
[06:22:40] <celphi> Ca someone elaborate on this https://usercontent.irccloud-cdn.com/file/pe3W2i1h/image.png
[06:23:17] <celphi> How could someone abuse system if in production without a proxy
[06:23:28] <__adrian> are you asking about HTTP_X_FORWARDED_FOR ?
[06:23:31] <celphi> yes
[06:23:42] <__adrian> i can simply send that header
[06:23:52] <celphi> oh you can manipulate that ?
[06:23:56] <__adrian> and then you'll think that my ip is whatever i say it is
[06:23:58] <__adrian> of course
[06:24:01] <celphi> gotcha
[06:24:03] <__adrian> it's just a header
[06:24:18] <celphi> then why would it be any securer using proxy
[06:24:34] <__adrian> because you know your proxy set it
[06:24:53] <celphi> but if i knew your proxy couldnt i just spoof that?
[06:25:42] <__adrian> if you spoof the header, and i _do_ have a proxy, then my proxy will overwrite it with the correct value
[06:25:57] <__adrian> at least, it would if i'd set it up properly
[06:25:58] <celphi> oh. i get it now
[06:26:32] <__adrian> this caution is talking about the risk that comes from the fact that tons of people copy+paste HTTP_X_FORWARDED_FOR into their code just because they saw it somewhere
[06:27:06] <celphi> yeah ive always used REQUEST_URI but always wondered why it was sometimes ok to use HTTP_X_FORWARDED
[06:27:29] <__adrian> those are different things entirely
[06:27:42] <celphi> wait not REQUEST_URI
[06:27:45] <__adrian> :)
[06:27:58] <celphi> REMOTE_ADDR
[06:28:21] <__adrian> in the end, you need to know what your sapi is sending so you know what to truct
[06:28:29] <__adrian> *trust
[06:28:38] <celphi> so if PERSON -> PROXY -> WEBSERVER how do checking ip gurantee anything?
[06:28:58] <celphi> if webserver is seeing proxy ip
[06:29:09] <__adrian> you need to know your proxy and know what to trust from it
[06:29:28] <__adrian> forwarded-for is for your proxy to tell you, "btw this was the ip"
[06:29:28] <Byteflux> you have to be able to trust proxy is forwarding the client's real IP in X-Forwarded-For
[06:29:40] <__adrian> ^
[06:29:48] <celphi> gotcha
[06:30:00] <__adrian> generally, you only trust this is YOU control the proxy and know how it's set up.
[06:30:04] <__adrian> *if
[06:30:14] <Byteflux> the client isn't going to be able to fake its IP, so proxy will always see the client's IP. so it comes down to trusting the proxy to forward that information to you.
[06:30:21] <__adrian> you at least, REALLY trust the person that does control it
[06:30:30] <celphi> makes total sense- thank you for explaining that so well
[06:31:52] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:31:56] <Byteflux> some proxy softwares specifically have features that say "only trust forwarded information if it comes from these IPs"
[06:32:32] <celphi> i have a dbug function that `<script>console.log(' . json_encode($var) . ')</script>;` is there something better to see objects in dev tools?
[06:33:30] <__adrian> ...are you asking about js or php
[06:33:36] <celphi> php
[06:33:41] <Byteflux> i mean why are you using devtools to inspect PHP objects
[06:33:43] <__adrian> don't use js to "debug" php
[06:33:45] <Byteflux> that seems like your first mistake
[06:33:48] <__adrian> nor dev tools
[06:33:52] <__adrian> !+error logging
[06:33:52] <php-bot> In addition to configuring error reporting (/msg php-bot error reporting), set log_errors=1 and error_log=/path/to/your/error.log in your php.ini file. This allows you to simply tail the log to see errors, and to disable display_errors (e.g., during production).
[06:34:12] <celphi> these examples ive seen : https://stackoverflow.com/questions/4323411/how-can-i-write-to-the-console-in-php
[06:34:27] <celphi> im trying to see everything in dev tools if possible
[06:34:43] <__adrian> that's a foolish and mostly counterproductive goal
[06:34:56] <__adrian> log errors, use real debuggers
[06:35:20] <__adrian> there's very very little reason for the browser to be involved in php dev at all until a very late stage
[06:35:46] <__adrian> it's almost entirely "in the way" as a dev/debug tool
[06:35:57] <Byteflux> most editors or IDEs that are half decent will have debugging capabilities too.
[06:36:01] <Byteflux> and integration with xdebug
[06:36:19] <celphi> i just mean for viewing the objects in a nice way
[06:36:26] <__adrian> fwiw, xdebug is a big thing which you may never need/get used to
[06:36:37] <__adrian> but that doesn't mean dev tools is better  ;)
[06:36:59] <__adrian> if you want to "view objects" then var_dump() and log it
[06:37:15] <__adrian> if you want to view them at runtime use a debugger
[06:37:52] <Byteflux> If you're using a framework, they usually offer ways to dump objects for "viewing in a nice way" as you describe it
[06:38:31] <Byteflux> Certainly nicer and more useful than what you'd see in devtools.
[06:38:42] <__adrian> which i'd also recommend avoiding as foolish and mostly-counterproductive endeavors
[06:38:57] <__adrian> but if that's what you want it's certainly the better choice
[06:39:36] <celphi> https://usercontent.irccloud-cdn.com/file/bCLXrqQU/image.png
[06:39:43] <celphi> you dont think that looks clean?
[06:39:55] <__adrian> that's not the right question
[06:39:58] <Byteflux> Doesn't matter how it looks
[06:40:00] <Byteflux> Is it useful?
[06:40:01] <celphi> from $php array
[06:40:03] <__adrian> if that's what you want to see, use xdebug
[06:40:07] <Byteflux> ^
[06:40:11] <celphi> well i mean if it were larger
[06:40:17] <Byteflux> And you'll get much more information than that, too.
[06:40:22] <celphi> k
[06:40:24] <Byteflux> You'll get property type info
[06:40:30] <Byteflux> proper*
[06:40:37] <celphi> cool ty
[06:40:46] <__adrian> using dev tools to do that is (a) fake (b) extra work (c) less reliable (d) a long time after it "really" happened
[06:40:52] <__adrian> etc. etc.
[06:41:15] <celphi> ya but what about for large projects already made where i cant install xdbug
[06:41:26] <__adrian> log stuff out
[06:41:31] <celphi> i was looking for a ad-hoc solution
[06:41:42] <__adrian> logging IS the ad-hoc solution
[06:41:54] <celphi> k
[06:41:54] <__adrian> installing a whole new tool is not
[06:42:12] <__adrian> if you can install something at all, install xdebug
[06:42:17] <__adrian> no reason you can't
[06:42:35] <Byteflux> And if you have to modify code to dump info, log it instead of dumping it to a browser console.
[06:42:40] <celphi> the reason im not a fan of error.log using tail is it sometimes just stops working and i dont know until i press enter a few times
[06:42:41] <__adrian> ^
[06:43:01] <__adrian> "sometimes just stops working"  you need to figure that out then
[06:43:04] <celphi> like the terminal just fails on me without alert
[06:43:08] <__adrian> that's not just "how it works"
[06:43:48] <celphi> havent you ran tail -f /var/log/error.log for awhile and it stops outputing if inactive too long
[06:44:00] <__adrian> no
[06:44:15] <__adrian> it should sit there for weeks if you let it
[06:44:26] <__adrian> perhaps your ssh client is disconnecting?
[06:44:32] <Byteflux> If the log file is being rotated, then that could happen
[06:44:38] *** Quits: toretto (~0xe3b7@user/toretto) (Quit: Lost terminal)
[06:44:39] <__adrian> ^ also possible
[06:44:39] <Byteflux> In which case, you should be using 'tail -F' instead of 'tail -f'
[06:45:11] <celphi> oh F?
[06:45:18] <celphi> ok ill check that out
[06:45:22] <celphi> thnx again!
[06:45:37] <celphi> never heard about the log rotation thing
[06:45:45] <__adrian> well, first, are your logs being rotated?
[06:45:52] <__adrian> if they're not then that's not the issue
[06:45:58] <celphi> you're referring to journalctl logs?
[06:46:01] <Byteflux> Or is your log file being recreated for whatever reason (as it would be during rotation)
[06:46:28] <Byteflux> `tail -f` watches the file by inode
[06:46:44] <celphi> shouldnt be recreated.. but now that im thinking about it, i do believe each day's log is compressed and a new one is made
[06:46:47] <Byteflux> if the file is deleted or moved and recreated for whatever reason (e.g. rotation) then the inode changes
[06:47:01] <celphi> aight makes total sense
[06:47:08] <__adrian> "i do believe each day's log is compressed and a new one is made"  that's log rotation
[06:48:04] <celphi> gotcha
[06:48:12] <celphi> i wasnt aware of the terminology
[06:48:15] <celphi> https://usercontent.irccloud-cdn.com/file/ll1pZu1V/image.png
[06:48:21] <celphi> ya -F is spot on
[06:48:31] <celphi> sweet
[06:51:54] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 240 seconds)
[06:53:30] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:53:43] <celphi> kinda weird., i'm using $response->getClientIP() and it's returning 127.0.0.1 -- i guess aws somehow returns localhost ip address
[07:04:04] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Ping timeout: 268 seconds)
[07:09:50] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 258 seconds)
[07:10:53] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:19:37] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (Quit: ZNC - http://znc.sourceforge.net)
[07:27:47] *** Joins: Rockwood (~Rocky@user/rocky)
[07:28:10] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[07:33:33] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[07:39:27] *** Joins: keypushe- (keypusher@user/keypusher)
[07:39:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 255 seconds)
[07:42:38] *** keypushe- is now known as keypusher
[07:57:06] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[07:58:31] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[08:09:26] *** Joins: guidoc (~guido@host-79-19-249-80.retail.telecomitalia.it)
[08:10:48] <celphi> how is this safe? https://usercontent.irccloud-cdn.com/file/VJ10Ghy6/image.png
[08:12:12] <Rockwood> celphi, are you using any framework?
[08:12:31] <celphi> it's from https://symfony.com/doc/current/create_framework/templating.html
[08:13:22] <Rockwood> what kind of safety? what is your point in ti?
[08:13:23] <Rockwood> it
[08:14:16] *** Joins: toretto (~0xe3b7@user/toretto)
[08:14:51] <Rockwood> looks okay
[08:15:04] <celphi> php docs says it's not safe
[08:15:13] <celphi> https://www.php.net/manual/en/function.extract.php
[08:17:25] <Rockwood> yeah
[08:17:42] <Rockwood> i think you can validate
[08:18:29] <Rockwood> or remove this and handle later
[08:18:41] <Rockwood> just extract
[08:19:42] <Blondie101010> celphi:  what risk can you imagine with it?
[08:20:05] <celphi> im just reading the part in red Blondie101010 in php docs
[08:20:19] <Rockwood> see the case just
[08:20:54] <Blondie101010> celphi:  yes, that is a good warning
[08:21:13] <Blondie101010> but the risk is in the misuse
[08:21:29] <Rockwood> you just working on path
[08:21:30] <Blondie101010> if you make sure there's no variable to override, then there's no risk
[08:21:49] <celphi> isnt `extract($request->attributes->all(), EXTR_SKIP);` dynamic
[08:21:51] <Rockwood> at time DB risk is
[08:21:59] <Blondie101010> and it uses EXTR_SKIP
[08:22:29] <celphi> yeah i dont fully understand what that means
[08:22:30] <Blondie101010> celphi:  what is the (imaginary) problem with it?
[08:22:42] <Byteflux> Its meaning is documented on the same page.
[08:22:48] <Blondie101010> it avoids overriding existing values
[08:23:18] <celphi> yeah ok but what does : ` Import variables into the current symbol table from an array` mean
[08:23:48] <Rockwood> This is marginally safer than extract() with EXTR_SKIP in the context of a loop where, in the future, variables might not get set to their sane values if they were already defined.
[08:23:52] <Byteflux> It means: $arr = ['abc' => 123]; extract(arr); // $abc == 123
[08:24:05] <Byteflux> I mean extract($arr) of course.
[08:24:20] <celphi> oh
[08:24:29] <Byteflux> But you could've learned that by also reading the example on the same page.
[08:24:47] <celphi> and EXTR_SKIP would mean if $abc was already defined to not overwrite?
[08:24:54] <Byteflux> Correct.
[08:25:06] <Rockwood> \o/ cheers
[08:25:22] <celphi> so why would $_GET ad $_FILES be dangerous
[08:25:45] <celphi> oh nvm i get it now
[08:26:01] <celphi> they could potentially change local variable values
[08:26:22] <Byteflux> It's not inherently dangerous, EXTR_SKIP makes it safer. The danger would usually come from overwriting variables from user input.
[08:26:29] <Byteflux> But even with EXTR_SKIP, there could be danger too.
[08:26:55] <Byteflux> For example creating variables that might not be declared but still used by the application.
[08:27:23] <Byteflux> That's probably a much less likely scenario though.
[08:27:38] <celphi> but if i used extra inside a function then those variables would die with function right?
[08:27:47] <celphi> so would be safer right?
[08:27:58] <celphi> *extract
[08:28:29] <celphi> sorta like with a closure
[08:28:37] <Byteflux> Function variables are scoped to the function but that doesn't automatically mean it's safer.
[08:29:05] <Byteflux> Just because you can't pollute the outer scope doesn't mean there's no risk.
[08:29:33] <Byteflux> Depends on what the function does and how it does it.
[08:29:35] <Rockwood> celphi, just make sure your validation is appropriate
[08:29:55] <celphi> k
[08:30:10] <Blondie101010> isolating it in a function prevents most possible issues
[08:30:23] <Blondie101010> that's the example you showed at the beginning
[08:31:09] <celphi> ya
[08:31:14] <celphi> cool ty
[08:32:49] <Rockwood> validation and proper code make your life easier
[08:33:11] <Rockwood> never go with nested stuff
[08:33:17] <Rockwood> stuffs
[08:33:51] <Rockwood> i think js is very differ (:laughing)
[08:42:13] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 258 seconds)
[08:48:49] <celphi> Is there anything inheritly wrong with using html templates with placeholders and using str_replace to sub those out with their dynamic values?
[08:49:20] <Blondie101010> if it works with str_replace, it's limited to constants
[08:49:29] <Blondie101010> not very useful or powerful templates
[08:52:20] <celphi> llike i would have `<a href="{{ IMAGE_LINK }}">IMAGE_TXT</a>` and load that into a variable $template. Then use an array to switch out those variables like $replacements = [ "IMAGE_LINK" => CALLBACK_FUNCTION_HERE, "IMAGE_TXT" => CALLBACK_FUNCTION_HERE]; then just str replace calling the functions first
[08:56:49] <Blondie101010> it seems like it would work, but there's no need for a call back on every single variable
[08:57:21] <Blondie101010> why do you insist in taking solutions that work and break them
[08:57:26] <Blondie101010> use what works already
[09:00:36] <celphi> because some of those functions would return dropdowns
[09:01:17] <celphi> it's mainly to avoid some sort of templating engine
[09:01:29] <celphi> and having to learn one
[09:01:31] <Byteflux> Why avoid?
[09:01:54] <celphi> bc then it's another entire syntaxing i would have to learn
[09:02:11] <Byteflux> The basics are still simple and easy to learn.
[09:02:35] <Byteflux> Unnecessarily reinventing something just creates problems that have already been solved.
[09:03:42] <Rockwood> yes Byteflux, is very correct
[09:04:01] <Rockwood> celphi, use documented things
[09:04:39] <celphi> im looking at examples like twig and it seems like an entire project
[09:05:04] <Byteflux> Hm? Twig is an "entire project" yes. Why is that bad?
[09:05:09] <Byteflux> It's not a particularly large project.
[09:07:03] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[09:07:40] <celphi> not saying it's bad,. i just prefer something that is pure php
[09:08:22] <Byteflux> Twig is written in pure PHP. It's just more sophisticated than str_replace() and has a proper tokenizer/parser for its syntax.
[09:08:58] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:09:36] <Byteflux> It can be as basic or as complex as you want it to be. It can effectively cache templates so there's no real overhead compared to a simpler implementation. And it's future-proof should your needs evolve to become more complex.
[09:10:11] <celphi> ya but http2 and server push helps with cacheing too
[09:10:15] <Byteflux> Why waste time reinventing what Twig (or other similar projects) have already spent countless hours on and have been fully unit tested?
[09:10:47] <celphi> bc the time to learn twig > writing a str_replace script
[09:11:03] <Byteflux> The time to learn Twig is 5 minutes if you only want to learn how to use it like you would use str_replace().
[09:11:05] <Byteflux> Literally, 5 minutes.
[09:11:13] <Byteflux> That's not a good argument.
[09:11:42] <Byteflux> In the time you spent on IRC justifying why you should reinvent templating, you could've been a Twig pro haha
[09:12:47] <celphi> lmao
[09:34:04] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 246 seconds)
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:44:19] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (Read error: Connection reset by peer)
[09:44:52] *** Joins: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa)
[09:47:05] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[09:47:38] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[09:47:41] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:53:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:53:39] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[09:58:09] *** Quits: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com) (Quit: Buh bye!)
[10:00:36] *** Joins: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com)
[10:01:35] *** Quits: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com) (Client Quit)
[10:04:29] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[10:04:54] *** Joins: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com)
[10:05:52] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:13:32] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[10:27:23] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[10:36:03] *** Joins: stenno (~stenno@user/stenno)
[11:03:15] *** Joins: Northwoods (~Northwood@223.130.30.165)
[11:08:16] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 268 seconds)
[11:10:22] *** Quits: guidoc (~guido@host-79-19-249-80.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[11:13:29] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[11:25:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[11:27:47] *** Joins: stenno (~stenno@user/stenno)
[11:35:27] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:46:39] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[11:50:42] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[12:03:36] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[12:15:28] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Pull the pin and count to what?)
[12:22:16] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[12:32:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[12:33:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:33:39] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:33:47] *** Joins: bobdobbs (~user@2406:5a00:f001:c600:d2b:11df:3692:bf40)
[12:56:38] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:56:48] *** Quits: nirix (uid48447@id-48447.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:57:11] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[12:59:39] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[13:06:18] *** Quits: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 255 seconds)
[13:09:00] *** Quits: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79) (Ping timeout: 255 seconds)
[13:18:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[13:19:39] *** Joins: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net)
[13:20:27] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[13:21:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:29:24] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:29:35] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[13:30:13] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Client Quit)
[13:30:23] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[13:31:02] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Client Quit)
[13:40:51] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: East bound and down, loaded up and truckin')
[13:47:41] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-207.mobile.abo.orange.fr)
[14:10:48] *** Quits: traptrip (trip@brigaid.xs4all.nl) (Ping timeout: 276 seconds)
[14:11:14] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:13:58] *** Joins: zkv (~zkv@46.216.147.164)
[14:15:47] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 255 seconds)
[14:27:36] *** Quits: zkv (~zkv@46.216.147.164) (Ping timeout: 258 seconds)
[14:30:25] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:41:30] *** Quits: DuckThom (~luna@2001:41f0:3fe:3:40e3:b6f8:cf1d:8e23) (Quit: WeeChat 3.2)
[14:42:50] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-207.mobile.abo.orange.fr) (Remote host closed the connection)
[14:43:08] *** Joins: entuland (~entuland@user/entuland)
[14:49:28] *** Quits: olle (~olle@p578524f9.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:51:58] *** Joins: kenoba (~kenoba@user/kenoba)
[14:55:21] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[14:55:47] <olle> Is there a good IRC channel for software project management?
[14:58:30] <TinoDidriksen> Maybe ask ##programming
[15:06:43] <olle> TinoDidriksen: I'll try...
[15:08:47] <biberu> olle: maybe try to just ask your question directly in ##programming
[15:09:35] <biberu> (for context TinoDidriksen, he just repeated the question for a channel)
[15:10:57] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Ping timeout: 245 seconds)
[15:24:28] <olle> hm hm
[15:30:18] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[15:34:18] *** Quits: MrTrick (uid181961@id-181961.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[15:36:15] *** Joins: gefd (~Geoff@user/gefd)
[15:37:02] <Naktibalda> olle: how about https://pm.stackexchange.com/ ?
[15:40:01] <olle> Naktibalda: Nice!!
[15:40:03] <olle> Thank you :)
[15:47:56] *** Joins: freeman_h (~freeman_h@90.208.166.19)
[15:53:05] <freeman_h> hi all I have  avery messy long query which gets execute by pdo. In the query I am having to do things like ".($source ? "AND Source = '".$source."'" : '')."  and ".($siteCountryID ? "AND o.SiteCountryID = ".$siteCountryID : '')." and other conditions like this this makes it tricky to bind it. I am wondering how people handles use cases like this to escape? Thank you
[15:53:31] *** Joins: zkv (~zkv@46.216.147.164)
[15:54:41] <stenno> prepared statements
[15:55:04] <stenno> your current code looks like its susceptible to SQL injection attacks
[15:55:34] <stenno> freeman_h: see here https://www.php.net/manual/en/pdo.prepare.php
[15:56:35] <stenno> oh hm i see now
[15:57:22] *** Joins: guidoc (~guido@host-79-40-188-142.business.telecomitalia.it)
[15:57:33] <Naktibalda> freeman_h: use if statements, append to SQL and add to parameters array in the same block
[15:58:58] <freeman_h> stenno, i know about the prepare in my use case the query looks something like this but its a long query joining about 5 tables
[15:58:59] <freeman_h> https://kopy.io/4hJDC
[16:00:19] <Naktibalda> use placeholders in conditional conditions too
[16:00:22] <freeman_h> things like $siteCountryID $excludeWholesale $excludeFreebies are not always set which is why i use the ternary  operator
[16:00:46] <Naktibalda> well, you only placeholder for cityCountryId
[16:01:34] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[16:02:16] <freeman_h> Naktibalda, so it will be something like this https://kopy.io/1iyQV
[16:02:31] <freeman_h> with if statements to bind it
[16:07:40] <Naktibalda> yes, I would place sql contatenation inside if statement
[16:08:35] <Naktibalda> it is simpler with execute()  -  $params []= $siteCountryId;
[16:09:06] <freeman_h> Naktibalda, "I would place sql contatenation inside if statemen" you mean the CONCAT method
[16:09:26] <freeman_h> Naktibalda, if you have a small example that will be help me understand better
[16:10:27] <Naktibalda> $sql .= ' AND o.SiteCountryID = ?'
[16:18:54] *** Quits: yuckey2d (~yuckey2d@209.181.233.16) (Read error: Connection reset by peer)
[16:19:43] *** Joins: yuckey2d (~yuckey2d@66.115.145.202)
[16:25:51] *** Quits: zkv (~zkv@46.216.147.164) (Ping timeout: 268 seconds)
[16:26:36] *** Joins: nirix (uid48447@id-48447.tinside.irccloud.com)
[16:35:36] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[16:51:11] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:05:07] *** Joins: zibby15 (~androirc@user/zibby15)
[17:08:43] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:11:42] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[17:15:44] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[17:17:46] *** Quits: gefd (~Geoff@user/gefd) (Ping timeout: 265 seconds)
[17:23:13] *** Joins: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79)
[17:35:48] *** Joins: pmercado (~pmercado@186.107.32.40)
[17:40:19] *** Joins: zkv (~zkv@46.216.147.164)
[17:51:56] *** Quits: zibby15 (~androirc@user/zibby15) (Quit: Leaving.)
[17:53:52] *** Quits: seand (~seand@69.54.136.33) (Ping timeout: 245 seconds)
[17:57:23] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[18:06:00] *** Joins: seand (~seand@69.54.136.33)
[18:29:59] <freeman_h> Naktibalda, thank you sorry for the late reponse
[18:30:44] <freeman_h> had another issue with this. https://kopy.io/RT74L when binding. I use :x however getting an error
[18:30:44] <freeman_h> SQLSTATE[HY093]: Invalid parameter number: number of bound variables does not match number of tokens
[18:32:33] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Ping timeout: 268 seconds)
[18:33:38] *** Quits: zkv (~zkv@46.216.147.164) (Ping timeout: 252 seconds)
[18:34:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:35:12] <freeman_h> i thought you can use :x as and then bind it once and pdo will use the value to replace :x with it
[18:35:41] *** LSD is now known as acidsys
[18:37:28] <biberu> freeman_h: https://www.php.net/manual/en/pdo.prepare.php says "You cannot use a named parameter marker of the same name more than once in a prepared statement, unless emulation mode is on."
[18:41:22] <relipse> biberu: cannot use same name twice
[18:41:45] <freeman_h> biberu, thanks
[18:47:22] <__adrian> "freeman_h> i thought you can use :x as and then bind it once and pdo will use the value to replace :x with it"  aside; no. this is not how parameters work. the :marker is NEVER "replaced" with the value. the SQL and the value are kept separate and are never put together (not even in the DB itself).
[18:47:56] <__adrian> aside aside: PDO::ATTR_EMULATE_PREPARES => false
[18:48:00] <__adrian> always ^
[18:51:15] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[18:53:48] <freeman_h> __adrian, okay I am using doctrine in laravel and doctrine comes with pdo just trying to see how to set the PDO::ATTR_EMULATE_PREPARES
[18:54:38] <__adrian> there's probably a config option for it; check doctrine documentation
[18:54:49] <biberu> freeman_h: set it to what?
[18:55:11] <__adrian> false?  assuming they're referring to my comment above
[18:55:39] <biberu> maybe they decided to enable it to reuse the placeholder, just checking
[18:56:04] <__adrian> that would definitely be a poor choice  :)
[18:56:33] <freeman_h> its set to false by default
[18:57:40] <__adrian> good
[18:59:10] <freeman_h> this query is over 45 lines line
[18:59:14] <freeman_h> long*
[18:59:53] <freeman_h> some of the conditions are optional with teneray operater uses to determine if to use them or not
[19:02:05] <__adrian> "> teneray operater to determine if to use them or not"  this sounds a bit wrong
[19:02:29] <__adrian> a ternary is not a shorthand for if..else, and certainly not a shorthand for just  if
[19:02:38] <__adrian> make decisions with  if..else
[19:03:36] <__adrian> but, are you asking a question?
[19:05:06] <freeman_h> i think that i have to do in something like $sql = "select blah blaj from x"; if($foo) {
[19:06:14] <freeman_h> the where condition bit is easy i guess where i am having issues that they are a few different sub selects which results in a column name
[19:10:08] *** Quits: nirix (uid48447@id-48447.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:36] *** Norkle is now known as B--------D
[19:15:48] *** B--------D is now known as Norkle
[19:16:09] *** Norkle is now known as B--------D
[19:17:57] *** B--------D is now known as Norkle
[19:28:42] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[19:29:01] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Client Quit)
[19:29:35] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[19:39:55] *** Joins: ge (~g@37.214.79.50)
[19:40:08] *** Quits: freeman_h (~freeman_h@90.208.166.19) (Read error: Connection reset by peer)
[19:44:50] *** Joins: Northwoods (~Northwood@223.130.30.165)
[19:45:50] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[19:46:21] <s17> I use conditional blocks for adding SQL conditions and parameters as well.  The ternary things just get to be too confusing
[19:47:36] <s17> I can add the constraint to $conditions[0] and then add extra parameters with $conditions[]
[19:54:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:03:03] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:06:24] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[20:07:44] *** Joins: Akimb (~Akimb@86.100.13.100)
[20:24:44] *** Quits: olle (~olle@p578524f9.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:29:49] <harpia> I use this, and I think it's cleaner: https://gist.github.com/o-alquimista/9b80e6d5c03e8c6f0715b78c2ea44fb2
[20:30:35] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:30:54] *** Joins: Rockwood (~Rocky@user/rocky)
[20:33:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:40:27] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:54:12] *** Joins: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com)
[20:59:02] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: IceChat - It's what Cool People use)
[21:00:19] <__adrian> harpia: aside from **PREPARE STATEMENTS and USE PARAMETERS**, yes
[21:01:10] <Rockwood> __adrian, hi how are you sir?
[21:03:26] <Rockwood> gn
[21:03:28] <Rockwood> cya
[21:03:42] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:04:05] <__adrian> https://gist.github.com/o-alquimista/9b80e6d5c03e8c6f0715b78c2ea44fb2
[21:09:26] <celphi> yikes
[21:10:01] <celphi> maybe status are fixed values
[21:15:48] <harpia> in the example, status would be an integer (has argument type hinting), so it's safe, am I right?
[21:18:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:22:40] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[21:23:13] <harpia> it usually comes from class constants such as Example::STATUS_ACTIVE = 1. The user input is checked against these constants during form validation.
[21:23:22] <Sammitch> it's a really bad habit to have.
[21:24:09] <Sammitch> plenty of vulnerabilities because a value was _supposed_ to have been validated, but wasn't.
[21:25:08] <harpia> Can an integer cause SQL Injection?
[21:25:28] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e4b7:9e54:e07b:5e56)
[21:25:44] <Sammitch> only when it's not actually an integer
[21:25:51] <harpia> ah, i see
[21:25:59] <harpia> if I forget the type hinting/casting, etc
[21:25:59] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 255 seconds)
[21:26:05] <harpia> I get the point
[21:27:55] *** Joins: Akimb (~Akimb@86.100.13.100)
[21:52:14] <__adrian> harpia: no; do not rely on casting. rules of thumb: (1) do not put $variables in your SQL. (2) always parameterize data.
[21:53:18] *** Quits: shailangsa (~shailangs@host86-186-142-108.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[21:53:26] <__adrian> the _hard_ rule is, you **don't _avoid_ parameterizing.**
[21:55:43] <harpia> got it.
[22:01:48] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 255 seconds)
[22:02:15] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 255 seconds)
[22:03:08] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:04:08] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[22:25:07] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[22:28:21] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e4b7:9e54:e07b:5e56) (Ping timeout: 255 seconds)
[22:32:21] <celphi> does it make the most sense to always pass the time as UTC to browser then use JS to convert time based on client's local time
[22:32:30] <celphi> or is there a better way nowadays
[22:33:02] <__adrian> for point-in-time that's still the sensible way
[22:33:12] <celphi> ty
[22:33:26] <__adrian> though any dt format that includes the tz should also be fine
[22:33:40] <Sammitch> ISO8601
[22:34:04] <celphi> yeah im just thinking to show the time to the client in their time so they're not having to do maths
[22:34:10] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 252 seconds)
[22:34:34] <__adrian> *standard format
[22:35:16] <Sammitch> but yeah, I'd say doing it in-browser is most preferable because generally the TZ can't be determined based on the information sent with a request. to reliably do it server-side you'd have to explicitly ask the user to set their desired timezone
[22:35:32] <celphi> thnx
[22:36:31] <da_wunder> I have used to use this; 1) store your datetimes as in UTC, 2) store timezone for user profile, 3) convert those utc datetimes to user timezone on ui
[22:37:56] <da_wunder> actually I store timezone, language and locale for each user - and use those to format numbers, convert datetimes, etc. in ui
[22:38:00] <__adrian> indeed, IF your user profiles have such preferences
[22:38:09] <__adrian> and IF they're logged in
[22:39:28] <da_wunder> for non-logged in users there is always language choice available where they can change that if/when needed, for locale and timezone I have just used the "best" guess, which is the target country of that application
[22:39:45] <Sammitch> mainly because we recently got bitten by it, be careful of setting future appointments in timezones with DST. if you set an appointment across a DST boundary you may or may not have to account for it depending on your datetime library and/or how you're using it
[22:39:55] <da_wunder> although those could be easily be changed just like the language
[22:39:58] <__adrian> would be better to let their system decide based on offset
[22:40:59] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[22:41:30] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:49:20] <celphi> also just bc your profile is in one part of state doesnt mean your time is same in another part
[22:50:15] <celphi> horrible wording. my point is any traveling customers would get wrong times
[22:50:39] <celphi> if i used da.wunder suggestion
[22:51:23] <da_wunder> "wrong times" is the wrong term there - user has choose the timezone which he/she wants to use...
[22:52:33] <da_wunder> and sure you could use eg. geolocation to guess where user is, but is it really worth of it?
[22:54:12] <Sammitch> 1. if you're going to programatically choose a timezone, do it inside the browser. 2. allow the user to override it manuall if they so wish. 3. accept that it's going to be wrong sometimes due to factors outside your control. 4. accept that the users are going to screw it up and blame you for letting them do it.
[22:55:04] <da_wunder> or just show all the datetimes in utc and let users calculate those times
[22:55:05] *** Quits: guidoc (~guido@host-79-40-188-142.business.telecomitalia.it) (Quit: WeeChat 3.2)
[22:55:45] <da_wunder> and that is enough for most users
[22:55:47] *** Joins: guidoc (~guido@host-79-40-188-142.business.telecomitalia.it)
[22:56:05] <__adrian> heh
[22:56:18] <__adrian> that's confusing+frustrating as hell for most users
[22:56:27] <Sammitch> unless you have gps and telepathy I don't know what more you could do
[23:00:46] *** Joins: pmercado_ (~pmercado@186.107.49.222)
[23:03:21] *** Quits: pmercado (~pmercado@186.107.32.40) (Ping timeout: 265 seconds)
[23:19:19] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:25:23] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:6858:e1e6:8f1d:bd31)
[23:27:57] *** Joins: Phil-Work (~phil@62.3.100.20)
[23:34:06] <entuland> what if they're on the ISS?
[23:35:20] <entuland> "example.com wants to access your altitude and speed relative to the ground"
[23:36:33] *** stenno is now known as `o`
[23:36:50] *** `o` is now known as lol
[23:36:55] *** lol is now known as stenno
[23:37:52] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:37:56] <no_gravity> Good Evening
[23:38:10] <no_gravity> Why does PHP 8 exit with code 137 here? https://3v4l.org/ZPlVD
[23:38:32] <stenno> stack overflow
[23:39:05] <Sammitch> entuland: what if you're a quantum particle and it's not possible to know both your position and velocity at the same time?
[23:39:17] <stenno> oh no wait
[23:39:35] <stenno> i thought it was segfault but segfault is 139
[23:39:47] <entuland> good point Sammitch
[23:40:00] <entuland> OOM
[23:40:10] <stenno> 137 is out of memorty
[23:40:12] <stenno> yeah
[23:42:02] <Sammitch> must be just riding the line for memory allocation at 10e6
[23:42:10] <Sammitch> though what is even being stored? o_oa
[23:42:19] <stenno> 10e6?
[23:42:27] <stenno> thats a big number
[23:42:36] <Sammitch> 10e6 iterations :P
[23:42:47] <no_gravity> stenno: Takes 2.9s on my laptop.
[23:43:05] <stenno> no_gravity: where is that code from?
[23:43:22] <Sammitch> and what on earth is it supposed to accomplish?
[23:43:30] <no_gravity> stenno: It is my benchmark to test different languages regex performance.
[23:43:42] <stenno> uh...
[23:44:29] <stenno> thats not how you bookmark
[23:44:29] <biberu> it works if you remove the (unnecessary) wildcards, probably related to the different pcre version after 7.3?
[23:44:55] <stenno> yeah what kind of regexp is that lol
[23:44:56] <biberu> https://www.php.net/manual/en/migration73.other-changes.php#migration73.other-changes.pcre
[23:45:55] <Sammitch> "strings containing the character '3'" but intentionally tanking the performance?
[23:46:23] <no_gravity> As I said, it is to benchmark the regex performance.
[23:46:42] <Sammitch> what on earth is using the memory though?
[23:47:45] <Byteflux> presumably a benchmark is conducted to measure the implications to real world performance, unless there's another motivation here.
[23:47:53] <Byteflux> in which case how can you be so sure this benchmark isn't tainted?
[23:48:14] <Sammitch> 3v4l: "your script was stopped while abusing our resources"
[23:48:16] <biberu> Sammitch: guessing something in pcre
[23:49:00] <Sammitch> yeah I think it might be creatins a bun-ton of $matches in the background, and because it's doing nothing BUT that it's outrunning GC?
[23:50:54] *** pmercado_ is now known as pmercado
[23:51:19] <no_gravity> So why is the script stopped in PHP 8 but not in earlier versions? Memory leak in PHP 8?
[23:52:45] <stenno> i wouldn't call that a memory leak tbf
[23:53:02] <Sammitch> it breaks in a random assortment of versions each time it runs
[23:53:46] <no_gravity> Sammitch: Ah!
[23:57:34] <entuland> possibly they are set up with different max memory or the alike?
[23:58:03] <biberu> memory_get_usage appears stable
[23:58:15] <Sammitch> I think that 1e6 iterations is just riding the line for wheter orr not it gets killed
[23:58:28] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[23:58:35] <Sammitch> also 3v4l is getting more and more angry at me as I throw crap into this :P
[23:58:43] <__adrian> guys
[23:58:48] <__adrian> don't use 3v4l for this crap  :p
[23:59:41] <Sammitch> :3c
