[00:01:39] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[00:03:59] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:04:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:04:32] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:05:21] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:06:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:06:32] *** Quits: Myst (~Myst@user/myst) (Quit: Bye!)
[00:09:00] *** Joins: Myst (~Myst@user/myst)
[00:09:05] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[00:09:15] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:09:33] *** Quits: Nuremberg2pt0 (~ambassado@075-141-230-217.res.spectrum.com) (Read error: Connection reset by peer)
[00:09:43] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:10:02] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:11:24] *** Joins: O[A]code (~OAcode@user/Ocode)
[00:11:32] *** Joins: jdmark (~jdmark@user/jdmark)
[00:11:38] *** Quits: odoood (~odoood@c-73-184-6-164.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[00:12:19] <O[A]code> quick question for anyone around (goign nuts) probably easy for you guys how would i pass : in an argument ex: mook = bla:ssa - so that i could sendkeys mook after without it prompting an error?
[00:12:29] <O[A]code> woud would have thaugt this is would be whats pissing me off
[00:13:13] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Quit: WeeChat 2.8)
[00:13:21] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Ping timeout: 250 seconds)
[00:13:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:13:51] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:eca1:9faa:a5b0:56cf)
[00:15:22] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:15:48] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:16:32] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[00:20:02] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0207.v6.ethz.ch) (Ping timeout: 260 seconds)
[00:20:29] *** Joins: Pickchea (~private@user/pickchea)
[00:21:28] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[00:22:34] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:22:47] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:23:26] <aphysically> jinsun: https://github.com/microsoft/pyright/issues/2697#issuecomment-991960960
[00:25:39] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:26:22] <grandrew> O[A]code, mook = f"{bla}:{ssa}" ?
[00:27:39] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[00:28:32] *** Joins: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22)
[00:30:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:30:32] *** Joins: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net)
[00:30:56] <greentree> are there any good libs for a database for storing json data
[00:31:12] <greentree> something super light weight preferably. nothing production grade
[00:31:16] <greentree> so far found: https://pypi.org/project/tinydb/
[00:32:07] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:32:10] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 260 seconds)
[00:32:26] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:32:32] *** Joins: rany__ (~rany@user/rany)
[00:32:36] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:33:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:33:51] *** Joins: LimeOn (~user@user/limeon)
[00:34:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a)
[00:34:45] *** Quits: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22) (Ping timeout: 252 seconds)
[00:35:04] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:35:11] *** Joins: pyzozord (pyzozord@user/pyzozord)
[00:35:21] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:35:32] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:35:35] <pyzozord> Hey, anyone read Fluent Python? Is it worth reading?
[00:36:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:36:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9cf9-e077-6a91-f1ef.res6.spectrum.com) (Ping timeout: 250 seconds)
[00:36:45] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:37:03] <grym> it's well regarded
[00:37:37] <montpol> x = a,b where a and b are of the class numpy.ndarry, what is x? I
[00:37:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:37:45] <montpol> Whoops please ignore that
[00:37:58] <montpol> I have another question to this here: https://bpa.st/IYIA
[00:38:15] <deniska> greentree: https://dataset.readthedocs.io/en/latest/ there's this weird thing
[00:38:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:39:08] <montpol> if there is an error within a class initialization e.g. for BECx = observables.BECFit(self, self.roi, "x", allow_offset=False, imgname="absNa23pic",
[00:39:08] <montpol>                                   namesuffix="Na23", centervar="NaCenter"), would the error first show up after the __init__() is done initializing everything within it?
[00:39:10] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Quit: WeeChat 2.8)
[00:39:23] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:39:28] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[00:40:15] <bjs> montpol: what kind of error?
[00:40:42] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:41:02] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c025-4ecb-7d4d-0f1a.res6.spectrum.com)
[00:41:57] *** Joins: armin (~armin@unix.porn)
[00:42:13] <montpol> Any error inside on the classes being initialized. For example, I just tested this question with writing "jsdhfgkhaf" in just a method of one of the classes and the error came after all the print functions even though the error was in BECFit()
[00:42:20] <montpol> inside one*
[00:42:36] <armin> hi, could someone tell me why "python -c 'import psutil; print(psutil.cpu_percent())'" always gives "0.0" on my computer? (freebsd 13, doing the same manually in ipython works fine)
[00:42:39] <bjs> montpol: what do you mean when you say "error". That word can mean a lot of things
[00:43:00] <montpol> for example writing "jfdhjh" in a line of code
[00:43:01] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[00:43:50] <pyzozord> can you guys explain in few words what are and how work protocols and descriptors?
[00:43:56] <bjs> montpol: where? I mean that's just a string. I'm really not sure what you're trying to ask. If you write code that isn't even valid Python, there will be an error before the code even runs.  If you misspell a variable name or method name then it'll error when you try run it. If you pass the wrong number of arguments then maybe it will error once you call it
[00:43:57] <nedbat> montpol: the error isn't postponed. it could happen before any of the class's attributes are initialized.
[00:44:15] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[00:44:29] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:44:35] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[00:44:47] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:44:56] <bjs> montpol: if the error is just the function does something "wrong", then the functio n can succeed and continue until you actually try use the result.  If an exception happens when you try that call with that string, it will happen when the line is run
[00:45:08] <bjs> pyzozord: in a few words? "no" :)
[00:45:24] <montpol> ok so __init__ doesnt have any hierarchy before errors are thrown, that means the __init__ function could stay half way through if some initialization has an error
[00:45:39] <sudomann> wooooooooow I've been lied to
[00:45:40] <sudomann> ERROR: tensorflow-2.6.1.whl is not a valid wheel filename.
[00:46:09] <bjs> montpol: __init__ is just like any other function/method really
[00:46:11] <sudomann> Somebody told me earlier it would be too fragile a system, for simply renaming a wheel to render it "broken"
[00:47:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:47:10] <sudomann> Why does pip even rely on the name? That should be optional imo, used only as a human-friendly identifier. If I'm moving wheels around on my device I'd like to rename them as I please
[00:47:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:47:27] <bjs> sudomann: wheels should have a particular format for their filenames https://www.python.org/dev/peps/pep-0427/#file-name-convention
[00:47:29] <sudomann> That kinda of metadata belongs on a manifest within the archive
[00:47:59] <sudomann> wow theres a whole PEP for it :0
[00:48:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:48:12] <sudomann> lesson learned
[00:48:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:48:51] <bjs> pyzozord: what do you want to know about them?  The descriptors are (one part of) how attribute access works in Python.
[00:49:03] *** Quits: Andrynet (~Andrynet@190.152.211.201) (Ping timeout: 252 seconds)
[00:50:24] <pyzozord> bjs: I don't know what is any of, I just found out the terms by skimming chapter titles in Fluen Python
[00:50:49] <bjs> pyzozord: okay,  descriptors are part of the attribute lookup process. It's how things like @property and bound methods work
[00:50:53] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 252 seconds)
[00:51:02] *** Joins: Andrynet (~Andrynet@190.152.211.201)
[00:51:08] <bjs> (specifically it's about the __get__ and __set__ methods)
[00:51:32] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[00:51:36] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:52:09] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:52:25] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 268 seconds)
[00:52:39] *** Quits: oisota (~oisota@user/oisota) (Quit: The Lounge - https://thelounge.chat)
[00:52:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:52:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:52:50] *** Parts: akk (~akk@75.161.146.115) (+++)
[00:53:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[00:53:12] *** Joins: ItsColdOutside (~max@178.249.193.38)
[00:53:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:53:27] *** Joins: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net)
[00:53:31] <Guest00> Hi I am having a hard time trying to convert the hex code generated by render_to_string into a normal character (single quote) and then using strip() to remove the white space. I somehow need a way to get any special character created as hex into a string and then remove the whitespace. https://dpaste.org/gvN0
[00:53:39] <Guest00> I have tried things like .encode('utf-8').decode('unicode-escape'), codecs, re, etc.
[00:54:22] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[00:54:24] <montpol> ok thanks bjs
[00:54:57] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[00:55:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:57:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a) (Ping timeout: 252 seconds)
[00:58:01] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[00:58:59] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[00:58:59] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[00:59:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:01:03] *** Quits: ItsColdOutside (~max@178.249.193.38) (Quit: Konversation terminated!)
[01:01:48] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[01:02:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-05ef-1a08-94e4-96be.res6.spectrum.com) (Read error: Connection reset by peer)
[01:03:02] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[01:03:36] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[01:04:01] <deniska> Guest00: html.unescape('Alice O&#x27;Reilly')
[01:04:07] *** Joins: oisota (~oisota@user/oisota)
[01:04:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:58] <deniska> Guest00: (that's kinda a weird thing to do, why would you want to unescape an html-safe string you just created?)
[01:06:23] <Guest00> yes that worked deniska. Idk I am trying to fix a bug on a github project
[01:07:12] <deniska> Guest00: if this string ever goes inside an http response from your server, you better know what you are doing, to prevent XSS attacks and such
[01:07:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:07:24] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:08:04] <Guest00> Good point. Here is the bug and code if you are curious: https://github.com/pennersr/django-allauth/issues/2717
[01:08:21] <Guest00> I am not sure can you check if that is the case with XSS?
[01:08:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com)
[01:09:18] <deniska> Guest00: ah, so it doubly escapes the string…
[01:09:48] <Guest00> Yea it is strange
[01:10:29] <Guest00> I can comment with the XSS you just mentioned to make others aware
[01:11:02] <spudpnds> Hey! So I have a class that has say 10 keyword args. They're explicit keyword args rather than **kwargs, because most of them have defaults. Is there a way to avoid the boilerplate of a 10 separate of self.foo = foo in my __init__?
[01:11:20] <Yhg1s> spudpnds: that would be the 'attrs' package.
[01:11:36] *** Quits: oisota (~oisota@user/oisota) (Quit: The Lounge - https://thelounge.chat)
[01:11:49] <spudpnds> Yhg1s: I'll investigate, thanks!
[01:12:04] *** Joins: oisota (~oisota@user/oisota)
[01:12:26] <deniska> Guest00: I think in this case it's fine, but it's always good to keep in mind
[01:12:36] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 265 seconds)
[01:12:45] <deniska> Guest00: this code reverts what's supposed to be a safety measure
[01:12:57] <Guest00> Ok thank you
[01:14:03] <deniska> Guest00: a better fix probably would be to avoid passing the same string through templates twice, perhaps to combine the templates into a single one or something like that
[01:14:21] *** Quits: stella (aoei@nethackscoreboard/aoei) (Quit: brb reboot)
[01:14:24] <deniska> but I'm not familiar with this project :)
[01:15:32] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:17:20] *** Quits: magla (~gelignite@55d4a165.access.ecotel.net) (Quit: Stay safe!)
[01:17:24] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:18:04] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[01:18:35] *** Quits: Andrynet (~Andrynet@190.152.211.201) (Ping timeout: 250 seconds)
[01:19:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:19:19] *** Joins: stella (aoei@nethackscoreboard/aoei)
[01:20:40] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:4fb:6b7:4ff2:80f1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:55] *** Joins: Andrynet (~Andrynet@190.152.211.201)
[01:20:57] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[01:22:10] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[01:22:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:25:19] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[01:26:19] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:bdf6:8e80:3874:783f)
[01:26:32] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:27:45] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Remote host closed the connection)
[01:28:01] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[01:28:43] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[01:29:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:29:19] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:30:07] *** Joins: Arw (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[01:31:03] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:34:46] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:35:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:37:29] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[01:37:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:38:03] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[01:38:41] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[01:39:05] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:39:15] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[01:39:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:40:37] *** Quits: Devtron (~Devtron@D4708984.rev.sefiber.dk) (Ping timeout: 240 seconds)
[01:40:40] *** Joins: stockholm (~Andreas@p200300d2c7467b00ed9254dd1c994c25.dip0.t-ipconnect.de)
[01:40:57] <LimeOn> Hello. I have an input box that is saved to a .txt . I want to that my .py script "recognizes" some kind of special chracter that tells him to make a break of line(that the following word should be written in a new line of the .txt). Is it possible? how can i make this?(How i should search about a solution about it?)
[01:41:13] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[01:41:35] <BrenBarn> why not just store an actual line break?
[01:42:08] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[01:42:34] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[01:43:15] <LimeOn> What you mean? (im am a begineer)
[01:43:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[01:43:32] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:43:36] <BrenBarn> A line break is an actual character (usually written as `\n`) that you can store in a string
[01:43:40] <LimeOn> I want to be able to paste some words separated by a special character whenever i want to make a line break
[01:43:58] <LimeOn> It will work if i put it in a input text?
[01:44:15] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:45:10] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:47:02] <LimeOn> Oh, i archieved what i wanted, using <br> code inside of my input information.Thanks BrenBarn
[01:47:16] <hzm74> Hello, I have a pandas dataframe that holds meters  (integers). I also have a dictionary which has keys and values, it defines the price which has to be paid per meter. So I wanna loop through the dictionary and that in the dataframe a new column is created which is the multiply of ‘meters’ * value in the dictionary.
[01:47:24] *** Joins: tmm88 (~tmm88@user/tmm88)
[01:47:39] <hzm74> This is my code. Really thought it should work. https://bpa.st/G7XQ
[01:47:47] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:48:17] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:d59c:1606:be8c:4404)
[01:48:52] <hzm74> I get error:  numpy.core._exceptions.UFuncTypeError: ufun
[01:48:52] <hzm74> c 'multiply' did not contain a loop with si
[01:48:52] <hzm74> gnature matching types (dtype('<U21'), dtyp
[01:48:52] <hzm74> e('<U21')) -> dtype('<U21')
[01:48:52] <hzm74> >>>
[01:48:54] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:49:07] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[01:49:46] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[01:50:00] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:51:32] *** Quits: sazawal (~sazawal@122.161.85.155) (Quit: Leaving)
[01:53:22] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[01:53:49] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:54:53] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:55:08] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[01:55:32] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:58:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:58:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:59:54] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Ping timeout: 260 seconds)
[02:00:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:00:59] *** Joins: fikran (~fikran@user/fikran)
[02:02:43] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 268 seconds)
[02:03:01] *** Joins: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl48abtdxx3ebke81.ipv6.telus.net)
[02:03:37] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[02:04:54] *** Joins: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de)
[02:05:14] *** Quits: stockholm (~Andreas@p200300d2c7467b00ed9254dd1c994c25.dip0.t-ipconnect.de) (Quit: Leaving)
[02:05:19] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 252 seconds)
[02:06:05] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[02:07:50] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[02:08:10] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[02:08:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[02:08:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:10:44] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:10:48] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[02:11:06] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[02:11:59] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[02:13:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:13:29] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:13:45] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 252 seconds)
[02:14:29] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:15:26] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[02:15:48] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:17:52] *** Joins: analoq (~yashi@user/dies)
[02:19:12] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[02:19:27] <analoq> im trying to understand how dict look ups are O(1). I get that the hashing is O(1) and i get how an array lookup via the index would be O(1). But how do I go from a Hash value to the stored value in O(1) (excl. collisions)?
[02:19:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:19:59] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 252 seconds)
[02:20:14] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:20:23] <rk4> imagine a giant array of keys, and your hash output is an index in the array
[02:21:04] <BtbN> It's only O(1) as long as no hashes collide though
[02:21:08] <analoq> rk4: i can imagine that but I intentionally dropped that thought because that's not how it works, is it? Otherwise you would alloc an array of enormous size
[02:21:17] <analoq> BtbN: i excluded that...
[02:21:30] <BtbN> Well, then it's literally just an array lookup.
[02:21:56] <analoq> BtbN: but how do you convert a hash to an index?
[02:22:06] <BtbN> mod arraysize.
[02:22:56] <rk4> it's worth implementing a hashtable from scratch IMHO
[02:23:17] <rk4> if you intend to be a programmer for a while anyway
[02:23:24] <cvmn> can configparser support nested sections?
[02:24:01] <analoq> rk4: i looked into that first and i found a few hash table linked list examples. which obv. cant be O(1)
[02:24:15] <analoq> i could use a btree, which would be faster but also not O(1)
[02:24:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:24:32] <analoq> my issue is merely, how do i go from a hash to an index
[02:24:38] <analoq> i think...
[02:25:00] <Yhg1s> analoq: no, really, it's %.
[02:25:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:25:07] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 252 seconds)
[02:25:29] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[02:25:37] <Yhg1s> analoq: there's a bit of math involved to reduce the impact of collisions, but as BtbN said it's basically hashvalue % arraysize.
[02:25:59] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:26:13] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[02:28:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:28:45] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:28:46] <analoq> Yhg1s: i see, that makes sense. However wouldn't that cause massive changes with each addition to the dict?
[02:29:18] <rk4> the key array starts off with lots of empty slots
[02:29:20] <Yhg1s> analoq: not on each addition. Dicts overallocate for a variety of reasons. They are usually kept between 1/3rd and 2/3rds full.
[02:29:37] <Saxtheowl> 186660  26312
[02:29:40] <analoq> i see. but it does happen when a realloc is necessary?
[02:29:41] <Saxtheowl> whoops
[02:30:10] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[02:30:13] <Yhg1s> analoq: when growing or shrinking the dict, all the index items have to be re-inserted, yes.
[02:30:13] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[02:30:13] <nicode> Saxtheowl: those numbers aren't offensive to me, for what it's worth.
[02:30:15] *** Joins: mud (~mud@user/kadoban)
[02:30:30] <Saxtheowl> aha
[02:30:34] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:35] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[02:30:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[02:30:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[02:31:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:12] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3867-449b-5d1d-345f.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:24] <analoq> thanks. i guess i'll try implementing one myself for learning purposes :)
[02:31:25] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[02:31:43] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:31:58] <Yhg1s> analoq: note that Python's dict implementation is not a simple bucket-based or linked-list-based one.
[02:32:03] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[02:32:24] <Yhg1s> analoq: so if you do implement one yourself, it very likely won't be like CPython's :)
[02:32:41] *** Joins: grooverman (~grooverma@177.102.117.95)
[02:34:43] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:34:56] *** Joins: KhazAkar (~KhazAkar@178.43.196.230.ipv4.supernova.orange.pl)
[02:35:53] *** Quits: KhazAkar (~KhazAkar@178.43.196.230.ipv4.supernova.orange.pl) (Remote host closed the connection)
[02:37:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[02:38:27] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:38:51] <bjs> analoq: when we say O(1) we really mean "on average"
[02:39:27] <bjs> Yhg1s: but still, any hashmap implementation gives you the basic idea of how it all works.
[02:39:37] <Yhg1s> bjs: how some of it works, yes.
[02:39:55] <bjs> CPython's dicts are just... an extreme example for all of the possible decisions in implementation
[02:41:23] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[02:42:38] *** Quits: delvian (~delvian@41.13.212.121) (Ping timeout: 256 seconds)
[02:43:05] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[02:43:36] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:943d:5b05:e9f7:79b5) (Quit: Leaving)
[02:44:14] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:9638:1ce0:71ec:362a) (Ping timeout: 260 seconds)
[02:44:41] *** Quits: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net) (Remote host closed the connection)
[02:44:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:45:18] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[02:45:19] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[02:46:21] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[02:48:21] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 268 seconds)
[02:48:23] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[02:48:24] *** Joins: Nik (~Nik@whm-ebs-nat2.rz.uni-ulm.de)
[02:49:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:49:28] <Nik> Hey guys! In a program that I was given by someone else, I encountered the line  _, frame1 = cap.read()  - what does the _, part do here? I have never seen such a syntax before
[02:49:38] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Client Quit)
[02:49:39] <bjs> Nik: it's a variable called "_".
[02:49:57] <rk4> [fwiw i quite like using btrees, perf wise haven't noticed any problems, O(logn) is still pretty good!]
[02:50:06] <bjs> Nik: there's nothing special about the variable called "_",  but people like to use it as a variable when they don't care what the value is
[02:50:07] <Nik> bjs: So it assigns the value to both variables?
[02:50:18] <Nik> Ah, okay, got it
[02:50:20] <bjs> Nik: no, it's like going `a, b = cap.read()`.
[02:50:30] <Nik> I remember Python can have functions with multiple returns
[02:50:43] <Nik> It's been a while, apologies
[02:50:46] <Yhg1s> it's not really 'multiple returns'. It's unpacking a tuple, or other iterable.
[02:50:51] <bjs> Nik: this would take the result of cap.read() (e.g. a list or tuple or any other iterable-with-2-elements) and put the first element in `a` and the second in `b`
[02:51:12] <Nik> Alright, many thanks for the quick and helpful explanation!
[02:51:20] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[02:52:10] <bjs> rk4: trees are a very different way of implementing dictionary types,  they are also good but have many performance trade-offs vs hashmaps
[02:52:49] *** Joins: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064)
[02:53:40] *** Quits: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl48abtdxx3ebke81.ipv6.telus.net) (Quit: Leaving)
[02:54:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2)
[02:55:38] *** Quits: DaNeenjah (~jake@adsl-74-230-7-13.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[02:55:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[02:56:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:56:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:d59c:1606:be8c:4404) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:57:36] <koopman> Anyone know how I can rotate my csv? Https://bpa.st/UTGA
[02:59:26] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[02:59:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:59:34] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[02:59:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[02:59:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:00:10] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[03:02:15] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:03:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:04:18] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 260 seconds)
[03:04:18] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[03:04:26] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[03:05:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:06:26] <koopman> Worked it out, zip transposes lol
[03:06:27] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[03:07:00] *** Joins: arinov (~arinov@213.194.126.155)
[03:07:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[03:08:32] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:11:27] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:12:40] *** Joins: rapier_k (~rapier@user/rapier)
[03:13:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[03:13:19] *** Quits: rapier (~rapier@user/rapier) (Read error: Connection reset by peer)
[03:13:33] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:14:13] *** Joins: Terexen (~terexen@user/terexen)
[03:15:15] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[03:16:46] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[03:18:26] <greentree> would anyone happen to have an idea as to how i could calculate permutations (not sure if this is the correct choice of terminology here) for a script that's supposed to calculate some stuff for a game
[03:18:33] <greentree> ill include my code since it's hard to explain, https://bpa.st/BRAQ
[03:18:33] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[03:19:08] <greentree> e.g for a sample input start=25, end=65, you'll get {'option1': {'start': 25, 'end': 30, 'cost': 6183520}, 'option2': {'start': 30, 'end': 65, 'cost': 78491700}, 'option4': {'start': 30, 'end': 65, 'cost': 74131050}}
[03:19:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[03:19:47] <greentree> but since it's 25-65, id like to add option 1 (25-30) + option 2 (30-65) and also option 1 (25-30) + option 4 (30-65) and show both scenarios
[03:22:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:23:23] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:24:13] *** Joins: jinsun__ (~quassel@user/jinsun)
[03:25:15] *** Quits: pystardust (~pystardus@172-105-41-139.ip.linodeusercontent.com) (Ping timeout: 252 seconds)
[03:25:25] <magic_ninja> anyone know how I can get an absolute path to a spec file from within the file?
[03:25:43] *** Joins: p3lim6 (~p3lim@ti0006q161-2971.bb.online.no)
[03:25:59] *** Quits: Russell (russell@bnc4free/staff/russell) (Ping timeout: 250 seconds)
[03:25:59] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[03:26:06] *** Joins: km_ (znc@user/km)
[03:26:06] *** Joins: SoF3 (~skius@user/skius)
[03:26:14] *** Quits: SoF (~skius@user/skius) (Killed (NickServ (GHOST command used by SoF3)))
[03:26:14] *** SoF3 is now known as SoF
[03:26:21] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 252 seconds)
[03:26:31] *** Joins: Russell (russell@bnc4free/staff/russell)
[03:27:05] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[03:27:05] *** Quits: erry (~erry@errietta.me) (Ping timeout: 252 seconds)
[03:27:05] *** Quits: km (znc@user/km) (Ping timeout: 252 seconds)
[03:27:05] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Ping timeout: 252 seconds)
[03:27:05] *** p3lim6 is now known as p3lim
[03:27:22] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[03:28:35] *** Joins: dohtem (uid524096@user/dohtem)
[03:28:45] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[03:28:46] <Wulf> magic_ninja: what's a "spec file"?
[03:28:58] <magic_ninja> its for a pyinstaller one file executable
[03:29:00] *** Joins: erry (~erry@errietta.me)
[03:29:34] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:29:55] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:30:10] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:35] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:32:03] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[03:33:17] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:34:18] <rk4> bjs: indeed
[03:34:48] *** Quits: fstd (~fstd@xdsl-85-197-54-43.nc.de) (Read error: Connection reset by peer)
[03:35:55] *** Joins: fstd (~fstd@xdsl-85-197-54-43.nc.de)
[03:36:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:37:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:37:18] *** Quits: vladoski (~foo@2001:b07:add:d406:2481:17fe:8dde:7064) (Quit: Textual IRC Client: www.textualapp.com)
[03:37:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[03:37:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:38:19] *** Joins: vladoski (~foo@2001:b07:add:d406:8083:15f0:2ed1:1541)
[03:39:13] <ThePhilgrim> Hey. I have an f-string in a json file that says something like "f"Welcome to Foo, {self.user_nick}"" (I escape the inner quotes with \). However, when I load the string into my script and print it, it prints the string with {self.user_nick} instead of actually using the variable. How would I apply the variable to a string imported from json?
[03:40:20] <nedbat> ThePhilgrim: you can't make an f-string from data like that. But you can use: data.format(self=self)
[03:40:40] <nedbat> ThePhilgrim: definitely json doesn't know about the f"" syntax
[03:41:09] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[03:41:13] <ThePhilgrim> Right, I just thought that when it gets loaded into Python, it gets loaded as f"foo bar {baz}"
[03:41:25] <ThePhilgrim> So then it should be interpreted as an fstring by python
[03:42:16] <nedbat> ThePhilgrim: f-strings only work when they are literally in your source code
[03:42:22] <ThePhilgrim> Ah okay
[03:42:42] <ThePhilgrim> Hmm, I'm not sure how I would write this data.format thingy tbh
[03:43:00] <nedbat> ThePhilgrim: json with variable references sounds unusual
[03:43:31] <ThePhilgrim> It's basically a "message of the day", and I want to use the user nickname
[03:44:10] *** Quits: Strom (~strom@fedora/strom) ()
[03:45:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:45:42] *** Joins: Strom (strom@fedora/strom)
[03:46:07] <ThePhilgrim> nedbat: The json has a list with the lines of the MOTD. Only the first line uses a variable, and I print them out in a for loop. Any good idea on how to approach this?
[03:46:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[03:46:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:46:45] *** Joins: dre (~dre@2001:8003:c932:c301:706d:6370:7ead:d0e3)
[03:47:14] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:47:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:48:19] *** Joins: Wulf (~Wulf@user/wulf)
[03:49:11] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[03:49:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:50:09] <nedbat> ThePhilgrim: I would make a string like "Hello, {user_nick}", and then use s.format(user_nick=self.user_nick)
[03:50:34] *** Joins: Celeo (~Celeo@user/celeo)
[03:50:45] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:51:01] <ThePhilgrim> Right, but how would I do it if it's just on one line in a for loop?
[03:51:05] <ThePhilgrim> you see my point?
[03:51:12] <ThePhilgrim> You only need the format on one line
[03:51:23] *** Quits: Celeo (~Celeo@user/celeo) (Client Quit)
[03:52:10] <ThePhilgrim> The for loop looks like this
[03:52:11] <ThePhilgrim> https://dpaste.com/AGYC5ZSY5
[03:52:31] <ThePhilgrim> {motd_line} are the lines loaded in from json
[03:52:32] *** Quits: grimvar (~grimvar@i5C75F681.versanet.de) (Ping timeout: 240 seconds)
[03:52:37] *** Joins: dez (uid92154@user/dez)
[03:53:12] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:53:20] *** Joins: d00gy (~d00gy@user/d00gy)
[03:53:29] <ThePhilgrim> You know what. I can also just skip greeting the user. I'll just say "Hello". Who needs a personal touch anyways. Lol xD
[03:54:16] *** Joins: grimvar (~grimvar@i5C75F74F.versanet.de)
[03:55:07] <nedbat> ThePhilgrim: i don't understand how the for-loop changes things
[03:55:23] *** maplefinger is now known as Bakunin
[03:56:02] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:56:02] <ThePhilgrim> Because if you do .format(user_nick=foo) that will be set on several lines that doesn't have {user_nick}
[03:56:07] <ThePhilgrim> I just assume that would error?
[03:56:26] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[03:57:47] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[03:57:49] <nedbat> ThePhilgrim: let's try it!
[03:58:13] <nedbat> ThePhilgrim: "Hello".format(user=12)  -->  "Hello"
[03:58:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:58:46] <ThePhilgrim> Ah, nice
[04:01:19] <ThePhilgrim> It works, awesome! Thanks alot
[04:01:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:01:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:02:05] <nedbat> anyone have pypy on windows, and can try something for me?
[04:02:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:03:02] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:03:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[04:03:26] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:03:47] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:04:01] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[04:04:25] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:06:29] *** Quits: d00gy (~d00gy@user/d00gy) (Ping timeout: 250 seconds)
[04:08:08] *** Joins: d00gy (~d00gy@user/d00gy)
[04:08:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:10:19] *** Joins: fikran (~fikran@user/fikran)
[04:12:29] *** Joins: de-facto_ (~de-facto@user/de-facto)
[04:12:44] *** Quits: Andrynet (~Andrynet@190.152.211.201) (Ping timeout: 256 seconds)
[04:13:45] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[04:14:49] *** Joins: Andrynet (~Andrynet@190.152.211.201)
[04:15:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:15:50] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[04:16:59] *** de-facto_ is now known as de-facto
[04:17:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:17:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2) (Quit: Leaving)
[04:18:25] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[04:19:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[04:20:46] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:21:59] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:22] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:24:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:26:44] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Client Quit)
[04:26:47] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:02] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:27:55] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:28:56] *** Joins: R035N3R (~phobos@user/r035n3r)
[04:30:00] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[04:30:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[04:30:38] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[04:30:53] *** Quits: rapier_k (~rapier@user/rapier) (Ping timeout: 252 seconds)
[04:35:31] *** Quits: flokuehn (~flokuehn@87.123.247.75) (Ping timeout: 250 seconds)
[04:37:16] *** Joins: flokuehn (~flokuehn@87.123.247.41)
[04:38:15] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:39:13] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[04:39:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:39:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:40:27] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:40:37] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:44:06] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:44:26] *** Joins: SnowMN (~mpalarina@adsl-189.91.140.90.tellas.gr)
[04:45:26] <SnowMN> Hello!anyone available for some coding backup please?
[04:46:16] <parv> people went home
[04:46:53] <SnowMN> late for the party heh,story of my life!
[04:47:30] *** Joins: fluter- (~fluter@user/fluter)
[04:48:17] *** Quits: greknod28 (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[04:48:18] <nedbat> SnowMN: what do you need?
[04:48:39] *** Joins: greknod28 (~grek@120.88.171.98)
[04:48:50] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 260 seconds)
[04:49:16] <SnowMN> a tip or two for a project entry level
[04:49:31] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 245 seconds)
[04:50:42] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 260 seconds)
[04:50:57] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:52:19] *** Quits: d00gy (~d00gy@user/d00gy) (Ping timeout: 268 seconds)
[04:52:21] *** Parts: SnowMN (~mpalarina@adsl-189.91.140.90.tellas.gr) ()
[04:52:27] *** Joins: faLUKE (~paolo@host-79-37-180-53.retail.telecomitalia.it)
[04:52:37] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[04:53:28] *** Joins: d00gy (~d00gy@user/d00gy)
[04:53:46] *** Joins: rapier_k (~rapier@user/rapier)
[04:57:42] *** Quits: inomoz (~inomoz@85.26.235.86) (Read error: Connection reset by peer)
[04:57:55] *** Joins: zebrag (~chris@user/zebrag)
[04:58:23] *** Joins: frost (~frost@user/frost)
[04:59:06] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:59:49] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[05:00:13] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[05:00:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:01:37] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:02:01] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[05:03:09] *** Joins: Fiji- (~Fiji@user/fiji)
[05:03:17] *** Quits: Fiji- (~Fiji@user/fiji) (Remote host closed the connection)
[05:03:21] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[05:05:55] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[05:06:05] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:06:20] *** Joins: humberto1 (~humbertow@189.132.139.98)
[05:06:34] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[05:09:22] *** Quits: vladoski (~foo@2001:b07:add:d406:8083:15f0:2ed1:1541) (Quit: Textual IRC Client: www.textualapp.com)
[05:09:23] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 252 seconds)
[05:09:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[05:09:40] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:10:36] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[05:10:36] *** Joins: audio (~audio@user/audio)
[05:11:11] <faLUKE> hey: how can I call myFunc() in file2.py from file1.py?  They are not in the same dir
[05:11:23] <faLUKE> (thanks)
[05:11:59] <faLUKE> from file import function ?
[05:13:00] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[05:16:16] *** Joins: pystardust (~pystardus@172-105-41-139.ip.linodeusercontent.com)
[05:16:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:17:50] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:18:12] *** Joins: delvian (~delvian@41.13.250.233)
[05:22:03] <parv> You would need to set up sys.path one way (do the package & install dance) or other (use sys.path.append). See also: https://realpython.com/python-modules-packages
[05:22:19] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:22:47] <faLUKE> parv: what if I insert path duplicates?
[05:23:42] <faLUKE> I mean: sys.path.insert(1, path) twice ?
[05:23:54] <faLUKE> I mean: what if I do sys.path.insert(1, path) twice ?
[05:24:20] <parv> Won't matter
[05:24:27] <nedbat> faLUKE: it's better not the change sys.path
[05:24:39] <faLUKE> nedbat: mmmmh
[05:24:45] <nedbat> faLUKE: can you show us the whole project layout, and how you are running the program?
[05:25:07] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:25:37] <faLUKE> nedbat: my python program has to run custom python scripts made by users
[05:26:09] <nedbat> faLUKE: is file2.py a user-provided program?
[05:26:16] <faLUKE> nedbat: yes
[05:26:55] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[05:28:40] <nedbat> faLUKE: you will probably need to use https://docs.python.org/3/library/importlib.html#importlib.import_module
[05:29:59] <faLUKE> nedbat: let's see
[05:30:03] *** Norkle is now known as sickjoke
[05:30:49] *** sickjoke is now known as NOrkle
[05:30:56] *** Joins: BSaboia (~bsaboia@177.51.33.61)
[05:30:57] *** NOrkle is now known as Norkle
[05:31:37] <faLUKE> nedbat: I don't understand exactly:   importlib.import_module(name, package=None)  ----> what is name, in my case?  file2.py ?
[05:33:13] *** Quits: flokuehn (~flokuehn@87.123.247.41) (Ping timeout: 252 seconds)
[05:33:20] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c) (Quit: Leaving)
[05:33:34] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[05:34:21] <rapier_k> how can I test a piece of code to know if it won't fail?
[05:34:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:34:36] <grym> rapier_k: write tests for it and run them
[05:34:47] <rapier_k> write test
[05:34:59] <grym> rapier_k: bit.ly/pytest3
[05:35:01] <rapier_k> i'll see how I can do this
[05:35:13] <rapier_k> thank you, grym
[05:35:17] *** Joins: flokuehn (~flokuehn@87.123.247.87)
[05:36:09] *** Quits: nicode (~nic@2607:f2c0:92fa:de00:bd06:1f91:f492:e67c) (Ping timeout: 252 seconds)
[05:36:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:38:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[05:41:01] *** Quits: hackers (~self@user/hackers) (Ping timeout: 268 seconds)
[05:41:26] *** Quits: BSaboia (~bsaboia@177.51.33.61) (Quit: This computer has gone to sleep)
[05:41:39] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:42:01] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[05:42:22] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[05:44:27] <nedbat> faLUKE: sorry, that's not enough, i forget the function to import a file on disk
[05:44:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:656e:27bd:c2cd:f6e1)
[05:45:04] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[05:46:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:46:23] *** Joins: aoei (~aoei@nethackscoreboard/aoei)
[05:46:42] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Ping timeout: 276 seconds)
[05:46:49] *** Quits: stella (aoei@nethackscoreboard/aoei) (Quit: WeeChat 3.3)
[05:48:14] <faLUKE> nedbat, solved: loader = importlib.machinery.SourceFileLoader(scriptFile.replace(".py", ""), os.path.join(wsDirPath, scriptFile))
[05:48:15] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800f51ccd2243bea06a.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[05:48:21] <faLUKE> nedbat: thanks for your previous tip
[05:48:40] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[05:49:13] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:49:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[05:50:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:51:38] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[05:52:51] *** aoei is now known as stella
[05:53:02] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:53:12] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[05:54:10] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:55:57] *** Quits: relight (~relight@user/relight) (Ping timeout: 252 seconds)
[05:56:13] *** Joins: humbertowoody (~humbertow@189.132.139.98)
[05:56:24] *** Joins: relight (~relight@user/relight)
[05:59:02] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:59:31] *** Quits: humberto1 (~humbertow@189.132.139.98) (Ping timeout: 268 seconds)
[06:02:09] *** Quits: onichomp (~onichomp@2806:264:4404:814b:257d:908b:4541:484c) (Read error: Connection reset by peer)
[06:03:01] *** Joins: imp (~imp@192-141-191-232.alternativaip.net.br)
[06:03:20] <faLUKE> nedbat: this is a *GREAT* feature!
[06:04:11] <nedbat> faLUKE: i hope you trust these users who are uploading code
[06:04:58] <faLUKE> nedbat: why?
[06:05:15] <nedbat> faLUKE: because you are going to run the code they wrote, and that code can do lots of damage.
[06:05:27] <faLUKE> do you think that code can do damage ?
[06:05:40] <nedbat> faLUKE: definitely. it could delete your files.
[06:05:51] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[06:06:45] *** Quits: delvian (~delvian@41.13.250.233) (Ping timeout: 250 seconds)
[06:06:45] <faLUKE> nedbat: I see what you mean, but this feature is reserved only for *expert* users
[06:06:55] <faLUKE> and for their installation, not for mine
[06:07:30] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[06:07:37] <nedbat> faLUKE: ok, make it clear what's going on.  executing untrusted code is a significant risk
[06:08:08] <faLUKE> nedbat: of course. it is a feature that a user can activate only on his installation
[06:08:27] <faLUKE> not on a shared installation
[06:08:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[06:12:36] <rapier_k> grym, is this main idea of testing? >>> https://bpa.st/PLHA
[06:13:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:13:23] <grym> rapier_k: basically.
[06:13:50] <grym> rapier_k: now write a test that asserts some things about when you hand it numbers that suck, like nan
[06:13:51] <rapier_k> ok, so my routine does what I'm expected
[06:13:55] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:13:55] *** brabrax_ is now known as brabrax
[06:13:57] <grym> or things that aren't numbers, like "foo"
[06:14:05] <rapier_k> ok
[06:14:15] <greentree> what could be a simple way to de-dupe a dictionary based off of the values
[06:14:30] <greentree> e.g delete a key if another key has the same value
[06:15:37] <grym> greentree: inverse = {v:k for k,v in thedict.items()}; deduped = {v:k, for k,v in inverse.items()} ; last key in wins
[06:15:39] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:16:12] <greentree> so it overwrites?
[06:16:49] <greentree> could the behavior be so that the first key is preserved? is ordereddict still required to preserve order
[06:17:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:17:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:18:25] <grym> greentree:
[06:18:26] <grym> https://bpa.st/STEA
[06:18:41] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:19:07] <grym> 3.7+ preserves insertion order, so make a new dict sorted how you want it to be and the last key wins
[06:19:39] *** Joins: fikran (~fikran@user/fikran)
[06:19:48] <parv> grym's wrote that better than I was going to
[06:19:49] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[06:19:50] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[06:19:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:20:15] <parv> s/'s//
[06:20:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:21:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:21:49] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[06:22:35] <grym> rapier_k: there are testing assistant packages that will come up with input values for a test following some set of rules about how to do so, but it's best to be comfortable with testing first before picking them up i think
[06:23:09] <rapier_k> thank you
[06:24:12] *** Quits: humbertowoody (~humbertow@189.132.139.98) (Ping timeout: 256 seconds)
[06:24:56] *** Joins: humbertowoody (~humbertow@187.202.213.181)
[06:25:11] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:656e:27bd:c2cd:f6e1) (Quit: Client closed)
[06:25:54] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[06:26:03] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 268 seconds)
[06:28:09] <rapier_k> my routine deal with positive integers only
[06:28:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22)
[06:31:03] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:53] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:37] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[06:39:08] *** Joins: qpdb (~qpdb@user/qpdb)
[06:40:27] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:40:27] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:40:27] *** finn_elija is now known as FinnElija
[06:40:50] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[06:46:01] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:eca1:9faa:a5b0:56cf) (Quit: Textual IRC Client: www.textualapp.com)
[06:46:26] *** Joins: wlemuel (~user@210.22.124.110)
[06:46:43] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:46:49] *** Quits: faLUKE (~paolo@host-79-37-180-53.retail.telecomitalia.it) (Remote host closed the connection)
[06:47:07] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:47:44] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:50:29] *** Chex is now known as The
[06:50:35] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[06:50:37] *** The is now known as Chex
[06:52:27] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[06:52:28] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:52:39] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:53:53] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[06:54:25] *** Joins: wlemuel (~user@210.22.124.110)
[06:55:33] *** Quits: R035N3R (~phobos@user/r035n3r) (Quit: WeeChat 3.3)
[06:57:01] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[06:57:39] <madduck> if you were to start a new project that aspires to run as a proxy between two network protocols, what would you base this on? twisted incl. its event loop? async + twisted? or something entirely different?
[06:57:49] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[06:58:07] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[07:07:12] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[07:07:54] *** Quits: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353) (Quit: Leaving)
[07:08:21] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:09:03] *** Joins: onichomp (~onichomp@2806:264:4404:814b:257d:908b:4541:484c)
[07:10:45] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 252 seconds)
[07:12:13] <troethe> madduck: Depends on the network protocols. Are there already good libraries for them?
[07:13:19] *** Joins: nickodd (~nickodd@user/nickodd)
[07:14:21] *** Quits: onichomp (~onichomp@2806:264:4404:814b:257d:908b:4541:484c) (Quit: onichomp)
[07:14:29] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (Quit: WeeChat 2.3)
[07:15:12] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[07:15:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:16:14] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[07:19:26] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:19:57] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[07:20:11] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:21:05] <madduck> troethe: IRCd on the one side seems to be part of Twisted. Matrix on the other would be provided by matrix-nio.
[07:24:21] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:24:38] *** Quits: d00gy (~d00gy@user/d00gy) (Ping timeout: 268 seconds)
[07:25:50] <madduck> OTOH, https://github.com/matrix-org/pantalaimon already seems to do most of what I need, and "all I have to swap out" is the client-facing side, i.e. their HTTP server for an IRCd ;)
[07:26:01] *** Joins: d00gy (~d00gy@user/d00gy)
[07:26:32] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:26:50] <madduck> how hard could that possibly be??? ;)
[07:28:21] *** Quits: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82) (Read error: Connection reset by peer)
[07:29:22] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:29:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[07:30:00] *** Quits: Luke (~ldm@hacksoc/member) (Quit: o/ 4w 6d 23h 59m 10s)
[07:32:16] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:33:02] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:39:11] *** audio is now known as audiocat
[07:39:12] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:40:06] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[07:41:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[07:42:07] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:42:36] *** Joins: kdc (~kdc@196.211.197.159)
[07:42:58] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[07:44:33] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[07:47:24] *** Quits: damonlynch (~ngaio@static-68-235-44-26.cust.tzulo.com) (Quit: Leaving)
[07:52:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:54:06] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[07:56:01] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[07:56:03] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:56:34] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 256 seconds)
[07:57:27] *** Quits: Nik (~Nik@whm-ebs-nat2.rz.uni-ulm.de) (Ping timeout: 250 seconds)
[07:57:41] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22) (Ping timeout: 252 seconds)
[07:58:39] *** Quits: dre (~dre@2001:8003:c932:c301:706d:6370:7ead:d0e3) (Quit: Leaving)
[07:58:57] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[08:01:02] *** Quits: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:01:06] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:01:10] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:01:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[08:04:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:04:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:05:33] *** Joins: dre (~dre@2001:8003:c932:c301:3df8:d146:e893:5aaa)
[08:07:03] *** Joins: delvian (~delvian@41.13.250.115)
[08:07:30] *** Joins: Knaxius (~Knaxius@user/Knaxius)
[08:08:12] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:09:14] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[08:10:04] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:12:15] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:12:30] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[08:15:02] *** Quits: ideopathic_ (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 265 seconds)
[08:15:35] *** Joins: wlemuel (~user@210.22.124.110)
[08:16:07] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[08:16:12] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[08:23:50] *** Quits: sreve (~quassel@p54a71e1f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:24:05] *** Joins: sreve (~quassel@p4ff449b5.dip0.t-ipconnect.de)
[08:27:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[08:27:20] *** Joins: alzgh (~alzgh@user/alzgh)
[08:27:46] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:28:59] *** Joins: fikran (~fikran@user/fikran)
[08:29:40] *** Joins: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82)
[08:29:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:31:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:31:23] *** Quits: rany__ (~rany@user/rany) (Remote host closed the connection)
[08:31:23] *** Quits: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:31:29] *** Joins: wlemuel (~user@210.22.124.110)
[08:31:50] *** Joins: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:32:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:33:05] *** Joins: rany_ (~rany@user/rany)
[08:33:34] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[08:34:54] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[08:37:47] *** Joins: inomoz (~inomoz@85.26.235.86)
[08:38:13] *** Quits: l4yer (~l4yer@139.28.219.37) (Ping timeout: 240 seconds)
[08:38:17] *** Joins: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net)
[08:39:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:40:27] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Quit: Bye)
[08:41:17] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[08:46:25] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[08:47:30] *** Quits: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:48:42] *** Joins: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:51:18] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:51:51] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:53:57] *** Quits: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:55:09] *** Joins: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:55:18] *** Quits: dtux (~dtux@2601:646:8f00:3f2:53eb:355a:694a:c73) (Quit: dtux)
[08:55:37] <randomxusr> I'm new to programming. Could you recommend some project excercises for learning python?
[08:56:22] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:57:37] <Knaxius> randomxusr: what did you try so far - what are your goals?
[08:58:14] <randomxusr> Haven't tried anything. I'm study Linux/Bash at the moment.
[08:59:00] <randomxusr> I might want to try DevOps, or create standalone apps, and think I'm interested in data science
[08:59:27] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:59:32] <Knaxius> yeah, good luck
[08:59:37] <gry> i presume you're already in #linux #bash ##cs already
[08:59:53] <drew> I have a dict -> dict(str: [str, str, ...], ...) and I am using this function to do a bfs to find paths from 'start' to 'end' http://0x0.st/-Fvf.txt
[08:59:55] <gry> or #cs
[09:00:14] <doug16k> I would move some pieces before thinking about the checkmate :)
[09:01:10] <doug16k> set the goal(s) not so far ahead
[09:01:10] <randomxusr> I wasn't
[09:01:46] <drew> but the genorator seems to get hung up going back and forth between two nodes: http://0x0.st/-FvW.log
[09:02:18] <drew> am I doing something wrong with yield and yield for? This is kind of new territory for me
[09:02:54] <drew> full .py to get that output is here, fwiw: http://0x0.st/-Fv4.py
[09:03:22] <Repiphany> drew: You probably don't want to be appending to path
[09:03:40] <Repiphany> Make a new list so each recursive call doesn't affect all the others
[09:03:53] <jinsun__> randomxusr: see https://nedbatchelder.com/text/kindling.html
[09:04:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:04:08] *** jinsun__ is now known as jinsun
[09:04:11] <drew> Repiphany: ah, you're right
[09:04:29] *** Joins: onichomp (~onichomp@2806:264:4404:814b:257d:908b:4541:484c)
[09:04:42] <drew> so do something like path = path.copy().append(start)
[09:04:47] <randomxusr> jinsun, this is what I was looking for. thank you
[09:05:29] <doug16k> I always say to beginners that ask what to do: make two player tic tac toe (aka noughts and crosses). if that is too easy, make it vs the computer
[09:05:35] *** Joins: mactron (~mactron@APN-123-254-208-gprs.simobil.net)
[09:05:41] <Repiphany> The way I'd do it is just putting it in the recursive call, like `yield from find_paths( ... path = path + ['next'])`
[09:05:43] <doug16k> if that is too easy, make solitaire bot
[09:06:11] <randomxusr> doug16k, Think I'll start with the basics
[09:06:34] <randomxusr> I'm a bit overwhelmed at all there is to learn.
[09:07:36] <doug16k> nobody has said solitaire bot is too easy yet :P
[09:07:38] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:08:01] <randomxusr> I'll keep that in mind ;)
[09:08:16] <doug16k> it's fun when you get to that level. it is not that hard
[09:08:30] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e)
[09:08:33] <doug16k> just brute force the textbook strategy
[09:08:41] <doug16k> computer never misses a thing
[09:08:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:09:06] <Repiphany> drew: It also seems unnecessary to copy with `next_caves[...].copy()`
[09:09:40] <Repiphany> You can always just access next_caves[current_position] without any need to modify it
[09:10:04] <Repiphany> So it doesn't need to be passed to the find_paths function either
[09:10:44] <drew> I was making a copy and then removing 'invalid' options for the next loop
[09:11:05] <drew> because if I don't make a copy then it will remove entries from the dict for all other calls too, right?
[09:11:13] <drew> but yeah the dict is global so I don't need to pass it
[09:11:19] <Repiphany> Just don't yield from when the next path is invalid
[09:11:44] <drew> I'll do that
[09:12:56] <aphysically> jinsun: evening
[09:13:02] <aphysically> did you see eric is going to consider adding a heuristic
[09:13:18] <aphysically> I just did tonight's AoC real quick
[09:15:24] <jinsun_> aphysically: yeah that was great be got convinced with just that one reply
[09:15:41] <jinsun_> s/be/he
[09:15:45] <aphysically> jinsun_: here's today's AoC solution before golf *and* before cleanup https://bpa.st/6NMA what I wrote "live" as is
[09:15:56] <aphysically> no imports today (yet)
[09:16:34] <aphysically> https://adventofcode.com/2021/day/13
[09:18:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[09:19:00] <drew> Repiphany: this looks a lot cleaner and seems to work: http://0x0.st/-Fv6.py
[09:19:02] <drew> thanks for the help
[09:19:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:21:20] <Helenah> At present I have 2 lists, first one contains ['foo', 'bar', 'baz'] and second one contains ['foo'. 'bar'], I'm wanting to check if the items of the second list are present in the first while stripping the first of the rest of the items, in this case baz will be stripped.
[09:21:51] <parv> drew, That website, 0x0.st, causes Firefox to present "Opening ..." dialog asking how to deal with the file; does not happen with "http://0x0.st/-FvW.log"
[09:22:07] <doug16k> Helenah, and there are no duplicates in the lists?
[09:22:28] <Helenah> doug16k, In my case, it's impossible for duplicates to occure.
[09:22:31] <doug16k> sounds like you want set difference
[09:23:22] <parv> Intersection I think
[09:23:46] <doug16k> ah right. set difference would be give me the ones not in right hand set
[09:24:37] <doug16k> set(a).intersection(set(b))
[09:24:46] <drew> parv: actually someone else mentioned firefox not liking that when it pastes to .bin
[09:24:56] <doug16k> but make b a set once outside the loop if it is the same many times
[09:25:03] <drew> I should switch to using wgetpaste, sorry about that
[09:25:04] <Helenah> It sounds like intersection is what I want, thank you.
[09:25:39] <Helenah> Wait, whatever ends up in the first list is unpredictable but can never be a duplicate.
[09:26:08] <doug16k> if a duplicate happened, the result would have that key once
[09:26:21] <Helenah> A duplicate can't happen.
[09:28:04] <doug16k> set is like a list but it is enchanted to guarantee that there are no duplicates, and it can do it extremely efficiently - way better than you checking if it includes then inserting, for large lists
[09:28:37] *** Quits: phox (~phox@S0106c8fb26791d35.pk.shawcable.net) (Ping timeout: 240 seconds)
[09:28:58] <doug16k> and it can extremely raplidly find a key by name and tell you if it exists, so it can efficiently do the intersection by the screaming fast lookups
[09:29:29] * bookworm should look at the actual implementation
[09:29:32] <bookworm> hashmap?
[09:29:54] <parv> dict without values
[09:30:08] <bookworm> hashmap then ;P
[09:30:22] *** Joins: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de)
[09:30:38] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:31:01] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:32:02] <Helenah> I've noticed intersection requires {} brackets, my list can only be [] brackets.
[09:32:20] <doug16k> that's why I said set(a).intersection(set(b))
[09:32:25] *** Joins: analoq (~yashi@user/dies)
[09:32:26] <Helenah> Oh
[09:32:26] <doug16k> have to make set from list
[09:32:34] <Helenah> Thanks.
[09:32:39] <doug16k> but do b outside the loop if it is same over and over
[09:32:53] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:00] <doug16k> hold a reference to the set you made once
[09:33:06] <doug16k> presumably from some schema thing
[09:33:48] <grawity> do you prefer .intersection() or the & operator
[09:34:05] *** Joins: maryo (~Maryo@user/maryo)
[09:34:36] <doug16k> I'm indifferent. intersection is a bit less obscure
[09:34:36] <parv> .method()
[09:35:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[09:36:37] <parv> Python set punctuation operators did not turn out to be what I had expected
[09:36:52] <doug16k> weird precedence?
[09:37:03] <parv> No, just the symbols
[09:37:25] <phy1729> It makes sense in the context of bitwise operations
[09:37:44] <parv> That ^ ; phy1729++
[09:38:47] <parv> s/No, just the symbols/& used/
[09:39:15] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 252 seconds)
[09:40:02] <phy1729> in result if in A or B is union and that's |
[09:40:53] <parv> My map would have been union : +
[09:41:23] <grawity> dunno, I guess + from list makes sense, but for sets it feels like | makes sense a little bit more
[09:41:32] *** Joins: upsala (~zcb@185.213.155.232)
[09:42:11] <doug16k> yeah just a tiny bit more sense. the + implies carry and | does not :)
[09:42:27] <phy1729> I like to image sets like giant bit fields and then the notation makes sense
[09:43:57] <doug16k> like an index merge optimization bit-per-record thing, yeah
[09:44:27] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[09:44:49] <parv> There could have been xor() method aliased to symmetric_difference()
[09:44:55] <doug16k> the thing that mysql does when the dev doesn't know how to make good compound indexes
[09:45:29] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[09:46:01] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:46:13] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[09:46:13] <parv> How does one add methods to built-in or standard library objects?
[09:46:18] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[09:49:03] <doug16k> you can wrap things with __getattr__ calling getattr on the underlying things. not sure how advisable it is though
[09:49:20] <doug16k> make a class that wraps it and looks like the real thing by getattr forwarding
[09:49:27] <Helenah> All works. :)
[09:50:01] <parv> doug16k, Thanks
[09:50:09] <grateful> i'm trying to build a graphical output using a list of sports scores, and wondering if there's a better option for doing it than pillow, is there a good html2png? for say turning html into something like this https://cms.nhl.bamgrid.com/images/photos/317566644/1024x576/cut.png
[09:50:40] <grateful> oh i see a few nvm
[09:51:16] <parv> grateful, Don't go ...
[09:51:23] <parv> grateful, What did you find?
[09:51:23] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Ping timeout: 268 seconds)
[09:51:49] <grateful> https://pypi.org/project/html2png/
[09:52:22] <grateful> there's one suggesting i do html to pdf to png :/
[09:53:08] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:53:54] <doug16k> parv, this wraps sql connection and overrides what close does https://github.com/mysql/mysql-connector-python/blob/master/lib/mysql/connector/pooling.py#L120
[09:54:39] <doug16k> .rollback and all that magically work
[09:55:13] *** Joins: dvx (~dvx@5.181.92.64)
[09:55:50] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[09:55:55] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[09:55:55] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[09:56:34] <parv> doug16k, Thank you for finding an usage
[09:56:37] *** Joins: djapo (~archangel@user/djapo)
[09:56:49] <parv> grateful, Thanks
[09:56:51] <IceMichael> good morning guys
[09:57:19] <IceMichael> any idea how I could fix this: https://github.com/jurplel/install-qt-action/issues/127 ? dylib link error for python, apparently at upgrading pip
[09:57:53] <IceMichael> but it's within a foreign plugin, so my endeavour should go into making sure that my global state is fine, not sure what the problem there could be, though
[09:58:32] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-207.home.otenet.gr) (Ping timeout: 240 seconds)
[09:58:35] *** Joins: zepolen (~zepolen@2a02:1388:2092:e26c:e9f:25ed:d60c:8187)
[09:59:27] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[10:00:03] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:00:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[10:00:40] <grateful> imgkit works great parv
[10:02:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:03:33] <parv> grateful, Appreciate the update. I was thinking about html2png that it did not list any dependency as there ought to be something to render HTML (imgkit wraps around wkhtmltopdf wraps around webkit)
[10:03:37] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[10:06:42] <parv> Thanks people. Until I return ...
[10:07:27] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:07:44] *** Quits: parv (~quass@user/parv) (Quit: parv)
[10:08:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:08:23] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:08:50] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:12:23] *** Quits: mactron (~mactron@APN-123-254-208-gprs.simobil.net) (Quit: Leaving)
[10:14:17] *** Quits: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net) (Quit: Leaving)
[10:14:19] *** Joins: mrwick (~mrwick@user/mrwick)
[10:14:27] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[10:14:30] *** Joins: humberto1 (~humbertow@187.202.213.181)
[10:16:40] *** Quits: humbertowoody (~humbertow@187.202.213.181) (Ping timeout: 268 seconds)
[10:16:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[10:18:27] *** km_ is now known as km
[10:21:57] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e) (Remote host closed the connection)
[10:22:10] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e)
[10:22:57] *** Joins: manti7 (~manti7@176.10.104.94)
[10:23:54] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:23:54] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:23:54] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:27:13] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:29:43] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-92.poda.cz)
[10:29:48] *** Joins: callq (~callq@2409:4062:231c:7ae8:3d73:6aac:1dda:a7de)
[10:30:02] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-207.home.otenet.gr)
[10:30:15] *** Quits: zepolen (~zepolen@2a02:1388:2092:e26c:e9f:25ed:d60c:8187) (Ping timeout: 268 seconds)
[10:32:08] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.162)
[10:34:34] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:35:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:36:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:37:02] *** Joins: chele (~chele@user/chele)
[10:37:46] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[10:38:17] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 252 seconds)
[10:38:19] *** Joins: fikran (~fikran@user/fikran)
[10:39:30] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:40:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:40:54] *** Joins: whaley (~whaley@2603-6080-a301-33d1-a5df-1574-27e5-a3a1.res6.spectrum.com)
[10:42:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:28] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:46:03] *** Parts: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de) ()
[10:51:00] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[10:51:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:51:35] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:51:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[10:52:19] *** Joins: seednode (~seednode@user/seednode)
[10:52:35] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 252 seconds)
[10:53:16] *** Joins: aniketgm (~Aniket@49.36.107.79)
[10:53:37] *** Quits: TFKyle (~kyle@64.201.205.70) (Quit: :q!)
[10:54:35] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[10:55:25] *** Quits: pkx (~pkx@user/pkx) (Quit: leaving)
[10:58:34] *** Joins: OPK (~OPK@user/opk)
[10:58:55] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e) (Quit: Leaving)
[10:58:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:57] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:00:58] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e)
[11:01:42] *** Quits: aniketgm (~Aniket@49.36.107.79) (Quit: leaving)
[11:01:58] <aphysically> jinsun_: okay I sorta cleaned it up with a few comprehensions but I haven't started looking at adjusting the logic to go any farther https://bpa.st/4VOQ
[11:02:24] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e) (Client Quit)
[11:03:38] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e)
[11:03:53] *** Joins: aniketgm (~Aniket@49.36.107.79)
[11:03:54] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e) (Client Quit)
[11:04:33] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[11:05:16] *** Quits: delvian (~delvian@41.13.250.115) (Ping timeout: 256 seconds)
[11:06:04] *** Joins: xardas (~xardas@149.233.51.127)
[11:07:18] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[11:07:31] *** Joins: luigibu (~luigi@80.30.201.209)
[11:09:02] *** Joins: SteveR (~SteveR@192.146.154.3)
[11:09:50] <jinsun> nice, much shorter and still without imports
[11:10:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:10:56] <jinsun> no fun pyright breaking stuff this time, except the complaint about lambda which can be easily annotated (at the cost of lines)
[11:11:05] *** Joins: pepper (~pepper@user/pepper)
[11:13:14] *** Joins: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de)
[11:18:39] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:19:04] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:19:13] <rindolf> aphysically: you should use "with" with open()
[11:19:45] <aphysically> I usually just use Path for stuff like this
[11:20:12] <aphysically> (I'm golfing so idc about the opened file)
[11:20:36] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:20:40] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[11:20:52] *** Joins: kosh (~kosh@user/kosh)
[11:21:01] <rindolf> aphysically: then why are the identifiers long?
[11:21:28] <aphysically> I have a bespoke ruleset that's not very defined
[11:21:32] <jinsun> readable golf :D
[11:22:24] <rindolf> jinsun: heresy!
[11:22:47] <aphysically> something like, must be black formatted, variable length doesn't matter, prefer less lines over less bytes within reason (but this naturally gets restricted by black line length)
[11:22:49] <jinsun> for only one file and short programs it doesn't matter too much anyway, the os will close it with the program ends
[11:22:52] <aphysically> minimize tokens
[11:22:56] <aphysically> over bytes
[11:23:00] <aphysically> that sort of thing
[11:23:10] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:23:58] <jinsun> and if you rely on cpython implementation detail then the file should be closed immediately because there is no reference to it
[11:24:08] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00d5af2064097ce1bb.dip0.t-ipconnect.de)
[11:26:28] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[11:26:31] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:4902:9bb3:20fb:8ed4)
[11:27:00] *** Joins: wlemuel (~user@210.22.124.110)
[11:27:17] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b131:226f:3856:883e)
[11:29:24] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:29:38] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[11:30:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:30:37] <grawity> felt like that splitlines() needed some work though https://paste.rs/q3p
[11:31:55] *** Joins: delvian (~delvian@41.13.232.220)
[11:31:56] <grawity> I feel like that *f, is approaching Perl levels of punctuation though
[11:32:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:32:31] <grawity> ah wait, that won't work because \n everywhere
[11:32:36] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[11:32:41] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[11:32:41] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[11:32:43] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:33:30] <aphysically> jinsun: I'll leave it at here for tonight and head to bed https://bpa.st/FGSQ
[11:33:32] <aphysically> talk to ya later
[11:33:38] <jinsun> grawity: looks like pointer to f :D
[11:34:16] <jinsun> or rather f is a pointer
[11:34:23] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 252 seconds)
[11:34:38] *** Joins: palasso (~palasso@user/palasso)
[11:34:41] <aphysically> I can probably come up with ways to clean up the printing at the end
[11:35:06] <aphysically> but mostly it's okay now
[11:36:17] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 250 seconds)
[11:36:34] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:38:24] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[11:38:32] *** Joins: gusto (~Augustus@109.255.100.54)
[11:38:52] *** Joins: giusb (~giusb@137.146.155.242)
[11:39:17] *** Quits: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:39:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:40:21] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:41:03] *** Joins: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de)
[11:41:55] *** Quits: dre (~dre@2001:8003:c932:c301:3df8:d146:e893:5aaa) (Quit: Leaving)
[11:42:00] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[11:42:45] <IceMichael> no one an idea about my issue? how to even debug this symlink stuff
[11:42:56] <IceMichael> I have tried removing python from my mac altogether, but that's not even possible
[11:43:45] <esro> wtf you trying to do ?
[11:43:57] * esro dont purge python, that a sure way to foobar your system. 
[11:44:17] <esro> symlinks are cancer, or anomaly from filesystem perspective
[11:44:58] *** Quits: aniketgm (~Aniket@49.36.107.79) (Read error: Connection reset by peer)
[11:47:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:48:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[11:48:28] <aphysically> jinsun: I think I've always managed to do full input processing in <=3 lines so far which is nice
[11:48:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:49:39] <jinsun> yeah string methods and comprehensions are powerful
[11:50:33] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:50:59] *** Joins: Wulf (~Wulf@user/wulf)
[11:54:11] *** Joins: stonkey (~stonkey@user/stonkey)
[11:54:40] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:55:50] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:56:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:58:58] *** Joins: parv (~quass@user/parv)
[12:00:58] *** Quits: goutly (~gitly@185.69.144.142) (Ping timeout: 260 seconds)
[12:01:08] *** Quits: delvian (~delvian@41.13.232.220) (Quit: Leaving)
[12:02:39] *** Joins: goutly (~gitly@148.252.133.243)
[12:02:43] <IceMichael> esro: that's what I am trying to fix: ttps://github.com/jurplel/install-qt-action/issues/127
[12:02:47] <IceMichael> https://github.com/jurplel/install-qt-action/issues/127
[12:03:03] <IceMichael> and I have no clue on how to go about it. 3rd party is failing but I'm pretty sure it's because of my local setup
[12:04:13] *** Joins: rendar (~rendar@user/rendar)
[12:04:32] <esro> hmm command you are running might be helpful
[12:07:04] *** Quits: goutly (~gitly@148.252.133.243) (Ping timeout: 268 seconds)
[12:07:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:08:58] *** Joins: goutly (~gitly@148.252.129.31)
[12:09:04] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[12:15:49] *** Quits: goutly (~gitly@148.252.129.31) (Ping timeout: 252 seconds)
[12:18:46] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[12:20:02] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[12:20:02] *** Joins: goutly (~gitly@185.69.144.142)
[12:20:50] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:21:07] *** Joins: arinov (~arinov@213.194.126.155)
[12:23:36] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Client Quit)
[12:24:22] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:24:30] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[12:25:02] *** Quits: goutly (~gitly@185.69.144.142) (Ping timeout: 240 seconds)
[12:25:36] *** Joins: adeliktas (~adeliktas@2001:16b8:22c1:c800:fc6c:f5c3:4e96:ccc3)
[12:25:41] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[12:26:05] *** Joins: Klinda (~superleag@user/klinda)
[12:26:23] *** Joins: goutly (~gitly@185.69.144.163)
[12:26:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:27:37] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[12:28:15] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Client Quit)
[12:29:08] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:29:09] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Client Quit)
[12:31:46] *** Joins: jazzy (~jaziz@user/jaziz)
[12:31:55] *** skreech1 is now known as skreech
[12:31:58] *** Quits: goutly (~gitly@185.69.144.163) (Ping timeout: 256 seconds)
[12:32:09] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[12:32:49] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[12:33:31] *** Joins: ejjfunky (~ejjfunky@125.163.60.19)
[12:33:45] *** Joins: goutly (~gitly@85.255.233.205)
[12:34:00] *** Joins: shad (~shad@user/shad)
[12:34:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:34:31] *** Joins: jmd (~user@de.cellform.com)
[12:34:53] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[12:35:00] *** Quits: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:38:25] *** Joins: iomari891 (~iomari891@197.210.71.83)
[12:39:39] *** Joins: LimeOn (~user@user/limeon)
[12:40:28] *** Quits: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:41:03] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Textual IRC Client: www.textualapp.com)
[12:41:07] *** Quits: goutly (~gitly@85.255.233.205) (Ping timeout: 252 seconds)
[12:41:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:41:49] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:43:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:43:09] *** Joins: goutly (~gitly@185.69.144.163)
[12:45:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[12:46:23] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:47:39] *** Joins: fikran (~fikran@user/fikran)
[12:47:47] *** Quits: goutly (~gitly@185.69.144.163) (Ping timeout: 250 seconds)
[12:49:30] *** Joins: goutly (~gitly@148.252.128.88)
[12:49:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[12:49:56] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[12:50:12] *** Joins: aniketgm (~Aniket@49.36.107.79)
[12:50:35] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:52:22] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 256 seconds)
[12:52:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:52:51] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:52:52] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:a6e9:4af8:654:3268)
[12:53:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:54:53] *** Quits: goutly (~gitly@148.252.128.88) (Ping timeout: 265 seconds)
[12:54:54] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[12:55:03] *** Joins: xkuru (~xkuru@user/xkuru)
[12:55:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:56:52] *** Joins: goutly (~gitly@185.69.144.142)
[13:05:21] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 250 seconds)
[13:05:57] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[13:08:04] *** Joins: iomari891 (~iomari891@197.210.70.19)
[13:09:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[13:09:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:10:43] *** Joins: led_belly (~led_belly@196.240.57.117)
[13:11:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:12:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:14:07] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[13:14:16] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[13:14:37] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[13:14:53] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:15:36] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[13:15:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[13:16:07] <Stefan26> what's the pythonic way to split this list (the logic between ## in this pastebin https://pastebin.com/hfWw7VA9 ?)
[13:16:25] <Stefan26> i know it can be done in some [ bla for ... bla ... for  foo ] magic
[13:16:44] *** Quits: saribro (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:16:51] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[13:16:56] <madduck> exactly ;)
[13:17:18] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 256 seconds)
[13:18:58] <madduck> does sound a bit like homework to me ;)
[13:19:15] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:19:38] <Affliction> That's probably what I would write, I'd take multiple readable lines over a complex one-liner
[13:19:48] <Affliction> ... having written many complex one-liners
[13:19:53] <madduck> the one-liner is not complex at all
[13:19:59] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:20:04] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[13:20:04] <madduck> but you have a good point.
[13:20:48] <Affliction> Personally, trying to kick my habit of nesting ternary ifs
[13:21:00] *** Quits: aniketgm (~Aniket@49.36.107.79) (Read error: Connection reset by peer)
[13:21:09] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[13:21:52] <Stefan26> madduck, was that related to what I said?
[13:22:17] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 268 seconds)
[13:22:34] <madduck> Stefan26: yes.
[13:22:38] *** Joins: aniketgm (~Aniket@49.36.107.79)
[13:22:58] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[13:23:49] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[13:24:14] *** dcaro_away is now known as dcaro
[13:25:04] <madduck> https://scratch.madduck.net/2021-12-13-225020 is not tested, but…
[13:25:14] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 256 seconds)
[13:25:56] <Stefan26> oh it's not homework; it's for AdeventoFCode for a problem I already solved; but I'm not happy that it took so many lines for something that I usually can do in 1 line: I prefer having one line in this case cause all the other templates have 1 line for parsing-code, (such matrix=[[int(c) for c in list(line)] for line in [e for e in input.split('\n')]] for parsing into a 2_d_matrix[][]
[13:26:00] *** Joins: luigibu (~luigi@80.30.201.209)
[13:26:03] <madduck> I am almost sure there is a functools approach to combine the last two lines, but I can't be bothered ;)
[13:26:21] <Stefan26> I tried x,y = [item.split(',') for item in lines] but that didn't work as i thought, (i got stuck... i can usually solve by trial and error :))
[13:26:35] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:27:00] <Affliction> you could I have a solution in mind using map() and a lambda
[13:27:10] <Affliction> s/you could//
[13:27:17] <Repiphany> Need to abuse some `a, b = zip(*list)`
[13:27:22] <stranac> Stefan26: x, y = zip(*(map(int, line.split(',')) for line in lines))
[13:27:25] <stranac> ugly, but works
[13:27:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:27:32] <madduck> weeeeh
[13:27:36] <madduck> now we're talking
[13:28:56] *** Joins: jazzy (~jaziz@user/jaziz)
[13:28:58] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[13:29:00] <Stefan26> Thank you stranac and madduck ... stranac's works Ill try that first... now i just need to figure out why it works :)
[13:29:14] <Stefan26> haven't used zip() in ages so forgot what it does
[13:29:23] <madduck> zip is evil
[13:29:24] <Affliction> interleaves sequences
[13:29:31] <Stefan26> (but now that I have a working example i can investigate myself :))
[13:29:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[13:29:57] <Affliction> Incidentally, this is why I'm trying to kick the one-liner habit: if rmdr.server == server.name and (rmdr.owner == origin.account or origin.account in rmdr.interested or "admin" in origin.flags) and (target == server or target.name == rmdr.target):
[13:30:09] <madduck> Stefan26: as long as you take from my code the context-managed file handling, and the fact that you can iterate a fileobj to return lines, and so you don't have to read it all into memory…
[13:30:27] <madduck> Affliction: that is not one-liner magic, that is logic hell.
[13:30:58] *** Joins: teut (~teut@106.215.11.94)
[13:30:59] <madduck> your problem is that rmdr.interested is searched for a boolean value, isn't it? ;)
[13:31:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:31:08] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:31:50] <teut> https://bpa.st/SKHQ
[13:32:00] <madduck> I think "rmdr.owner == origin.account or origin.account in rmdr.interested" means that everything until "in" is computed to give e.g. True, and then the in expression evaluates to whether True is in the list.
[13:32:05] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 252 seconds)
[13:32:09] <teut> how to fix this?
[13:32:37] <Affliction> madduck: it certainly seems to work, so, I don't want to touch it :)
[13:33:07] <madduck> teut: spin up a local webserver, or open the file:// directly, don't use requests for it, as it's not a request.
[13:33:09] *** Joins: plastico (~plastico@neomutt/plastico)
[13:33:16] <teut> https://stackoverflow.com/a/15115345/4213362
[13:33:17] *** Joins: arinov (~arinov@176.89.29.127)
[13:33:36] <teut> this says add https   but then for other links it might fail
[13:33:55] <Affliction> madduck: and if I do need to touch it, I'll probably work from bytecode, it's not the first time I've picked apart my past self's "cleverness" from a disassembly.
[13:33:57] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[13:34:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:34:19] <madduck> teut: do you understand the difference between file:// and https:// URIs and how a client might process those?
[13:34:40] <madduck> Affliction: test coverage is for boring people.
[13:34:41] <teut> no, what should I read ?
[13:34:43] *** Joins: maryo87 (~Maryo@user/maryo)
[13:34:49] *** Quits: onichomp (~onichomp@2806:264:4404:814b:257d:908b:4541:484c) (Ping timeout: 250 seconds)
[13:34:55] <teut> and whats a client?  a browser?
[13:35:06] <madduck> firefox in this case, but also the requests library
[13:35:07] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:35:53] <madduck> file:// means the file is accessed locally directly from the filesystem, https:// means a request is made via the network. The requests library cannot do local file retrieving, but Firefox can.
[13:36:22] <teut> oh so thats why geckodriver worked but requests failed
[13:36:43] <madduck> yes
[13:36:52] <teut> thanks, understood it
[13:36:55] <madduck> A simple solution: start in the directory with the test.html file:
[13:37:02] <madduck> python -m http.server 8080
[13:37:08] <madduck> and then use
[13:37:21] <madduck> http://localhost:8080/test.html for both
[13:38:16] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[13:38:49] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[13:39:28] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:39:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:40:01] <teut> how to host a single file?
[13:40:07] <madduck> I just told you
[13:40:23] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:40:27] <teut> no I mean what you told will serve the whole folder
[13:40:53] <madduck> yes. Don't think you can host a single file, so make a new folder that is otherwise empty
[13:41:16] <madduck> or just don't care. This is local only, nobody else has access.
[13:41:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:41:22] <madduck> other than people using the local machine
[13:41:22] <teut> yes done that, thanks
[13:41:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:41:47] <madduck> *ACTUALLY*
[13:42:06] <madduck> python -m http.server --bind 127.0.0.1 8080
[13:42:17] <madduck> otherwise it may well be public. oops.
[13:42:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:43:07] <teut> what does this mean?
[13:43:12] <teut> public
[13:43:56] <madduck> public: people on your network can request the file. local means that only the very same computer can access it. 127.0.0.1 is the "loopback" address, i.e. loops back to itself.
[13:44:24] <teut> you mean on my wifi?
[13:44:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[13:45:05] <madduck> just use --bind 127.0.0.1 as I said, and if you want to learn more about networking, then there are heaps of resources out there, but this is not the right channel for it.
[13:45:21] <teut> ok, got it
[13:45:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:45:49] <teut> thanks a lot for the help
[13:47:48] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:48:45] *** Joins: kosh (~kosh@user/kosh)
[13:49:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:50:02] *** Joins: nomic (~nomic@51.52.78.152)
[13:50:38] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:3c0c:4012:31aa:648e)
[13:50:59] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[13:56:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[13:57:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:57:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[13:57:18] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:58:31] <petaflot> hello! I'm looking for a pythonic way to do myString.replace("x","y") where "x" and "y" are pulled from a list such as (("a","b"),("x","y"))
[13:58:56] <petaflot> .. so obviously there has to be some recursion involved
[13:59:24] <petaflot> myString.replace("x","y").replace("a","b")
[13:59:32] <doug16k> one string, bunch of replacements on same one?
[13:59:39] <doug16k> ya
[13:59:45] <Repiphany> petaflot: `t = str.maketrans('ax', 'by'); 'abcxyz'.translate(t)`
[14:00:01] <grawity> I'm assuming your actual strings are not necessarily 1-character long
[14:00:37] <doug16k> that is more iteration than recursion - it returns all the way every time
[14:00:50] <grawity> the straightforward (but flawed) way would be "for k, v in pairs: mystring = mystring.replace(k, v)" or even "for pair in pairs: mystring = mystring.replace(*pair)", to answer the "recursion" part, but ... if a later key contains an earlier value, it'll probably end up replacing that incorrectly
[14:01:35] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:01:57] *** Quits: DocMors (~DocMors@web.crypticity.net) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[14:02:18] <petaflot> grawity: my point is to replace "illegal" chars in a string so yes it's one-char long. if it matters
[14:02:28] <grawity> then translate()
[14:02:28] <doug16k> wanting to do a bunch of replacements is suspect to begin with
[14:02:47] <grawity> ugh, did I just crash the repl
[14:02:53] *** Quits: humberto1 (~humbertow@187.202.213.181) (Ping timeout: 252 seconds)
[14:03:02] <grawity> free(): double free detected in tcache 2
[14:03:06] <grawity> probably a readline thing
[14:03:08] <petaflot> doug16k: well... I gotta do with what's available.
[14:03:37] *** Quits: rapier_k (~rapier@user/rapier) (Ping timeout: 250 seconds)
[14:03:45] <doug16k> my philosophy is to make every character legal
[14:03:48] <grawity> doug16k: I was expecting it to be one of those "homegrown template" things with [("@FOO@", "foobar"), ("@BAR@", etc)]
[14:04:18] <doug16k> when it is at all possible I mean
[14:04:26] <petaflot> doug16k: yeah me too. that's why I was so happy when Python3 finally came out.. now I treat all strings as bytestrings
[14:05:42] <doug16k> office building better work or I am annoyed 🏢
[14:06:23] <doug16k> (it's good not-inside-BMP test)
[14:06:32] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[14:06:36] <doug16k> upgrade from pile of poo unicode - more office friendly
[14:06:42] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[14:06:52] *** Joins: humberto1 (~humbertow@187.202.244.149)
[14:07:15] <grawity> tbh in general I would go with re.sub() to replace all at once
[14:07:21] <petaflot> actually my "problem" is somewhat simpler.. since I'm either removing chars or replacing them, the string will _never_ get longer than how it started ; so this can be done in-place
[14:07:47] *** Joins: iomari891 (~iomari891@197.210.70.19)
[14:07:59] <grawity> ...that sounds more like a C concern than a Python one?
[14:08:08] <Repiphany> str.translate does exactly that, like my example
[14:08:41] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:09:13] <petaflot> grawity: how is this more a C concern? I'd say it's more an ASM question then ;-)
[14:09:20] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[14:09:26] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[14:09:31] <doug16k> databases love truncating stuff
[14:09:54] <doug16k> they wait with popcorn for an insert to overflow the field then they put on their poker face
[14:10:04] <Repiphany> `print('abab'.translate(str.maketrans({'a':'', 'b':'z'}))) # zz`
[14:10:11] <petaflot> doug16k: it's not a database. my database precisely stores bytes
[14:10:22] <petaflot> ^database^database issue
[14:11:23] * petaflot is using asnycpg... pretty good but overkill and quite a bit of overhead
[14:11:52] *** Joins: eson123 (~eson123@118.69.128.37)
[14:11:53] *** Joins: legola (~legola@46.235.101.65)
[14:12:33] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[14:12:37] <eson123> what is the minimum requirement of Python and flask ? i am intending to run a web app on a 1GB ram computer so gotta make sure nothing breaks
[14:13:04] <grawity> I think that depends more on what your webapp does than flask itself
[14:13:09] *** Quits: callq (~callq@2409:4062:231c:7ae8:3d73:6aac:1dda:a7de) (Ping timeout: 250 seconds)
[14:13:12] <petaflot> Repiphany: using a dict is nice :-)
[14:13:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:13:33] *** Joins: luigibu (~luigi@80.30.201.209)
[14:13:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:14:05] <petaflot> totally the way to go to reduce complexity
[14:14:39] <doug16k> eson123, 1GB is a monster if you don't do that much
[14:14:46] <eson123> oh wait yes sorry that's a dumb question
[14:14:47] <doug16k> you can do stuff on 128MB
[14:14:57] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[14:15:06] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[14:16:04] <eson123> i was putting it in a wrong way, more like the entire system of mine is about a few GB, it's nothing to do with RAM
[14:16:25] <petaflot> eson123: minimum requirement is easy to figure out on your system: `import flask ; while True ; print("hello world")` and while this is running check your resources ;-)
[14:16:26] <eson123> so i am calculating the total persistent memory that all of my apps are going to use
[14:16:26] <grawity> a few GB of what
[14:16:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:17:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:17:25] <eson123> persistent memory, not RAM or volatile memory
[14:17:52] <petaflot> eson123: this will ultimately depend on the data you need to store, and the overhead due to python objects and such. if you're really tight on memory, don't use python but pure C
[14:18:07] <eson123> i am using a rashberry pi tho and i kinda have a 4GB SD card for my entire system, i don't wanna overflow stuffs, including my lightweight linux distro and all of the apps i am intending to use, including python and flask
[14:18:54] *** Joins: luigibu (~luigi@80.30.201.209)
[14:19:07] <awmv> Anyone tried using E-ink display for programming? There is a 25.3" one from Dasung. I sometimes get a Visual Aura (some from of Migrana) and one assumption is that it's related to "flashing lights". I spend a lot of time looking at monitors so my idea was to get blue light glasses and maybe an E-ink display🤔
[14:19:11] <awmv> What do you think=
[14:19:42] <supakeen> Might work but refresh rate might be bad.
[14:19:42] <petaflot> eson123: don't store "user" data on an SD card? really... esp. if it has your system on it. I suggest you should at the very least use an USB memory stick
[14:19:46] <doug16k> blue thing I can say helps. you can do that in software sometimes in display settings
[14:20:04] <doug16k> it's weird for a bit then becomes almost normal
[14:20:43] <petaflot> awmv: you can use use it for your editor, but for executing the code I really suggest something fast
[14:20:44] <eson123> petaflot: that sounds ok, i never tried that before with my rashberry pi, mostly SD only
[14:21:08] *** Joins: tobybl (~tobybl@213.31.132.151)
[14:21:08] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[14:21:33] *** Joins: rany__ (~rany@user/rany)
[14:21:34] <petaflot> eson123: and unless you have some form of distributed storage/backup, use a ZFS pool witrh redundant storage
[14:21:43] *** Quits: rany__ (~rany@user/rany) (Remote host closed the connection)
[14:21:52] *** Joins: rany___ (~rany@user/rany)
[14:22:13] <petaflot> the zfs team has really done a great job and it's very easy to set up and maintain
[14:22:28] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:22:42] <doug16k> zfs isn't completely stable
[14:22:47] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[14:22:52] <petaflot> .. since most Pis have USB ports this is not a problem
[14:23:00] <eson123> but not really, i am not storing any user's data on my puny rashberry pi, it's just a simple website but does require flask and python
[14:23:05] <petaflot> doug16k: the linux kernel isn't completely stable either
[14:23:14] <eson123> so i am not worrying about data expanding overtime but rather that will it work or not
[14:23:16] <awmv> petaflot: That was the idea. Although according to the vendor it's supposed to be responsive enough to watch yt videos. Not sure what "DASUNG Turbo refresh rate tech, 5 level adjustment" is supposed to be in Hz
[14:23:23] *** Joins: luigibu (~luigi@80.30.201.209)
[14:23:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:23:41] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:23:46] <petaflot> awmv: rotfl.. ask the chinese ;)
[14:24:15] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[14:24:32] <doug16k> awmv, try a 144p youtube video
[14:24:42] <doug16k> that might be what they menat
[14:24:45] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[14:25:07] <petaflot> .. or launch xscreensaver ;-) it's pretty good for this purpose
[14:25:31] <petaflot> doug16k: what they want or what they need?
[14:25:33] <awmv> Well.. Seems to be out of stock anyway. So far it's just an idea. Will probably be stabbed by import taxes
[14:26:00] *** Joins: luigibu (~luigi@80.30.201.209)
[14:26:25] <doug16k> I like little computers. usually they are strong for how disadvantaged they are
[14:27:00] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[14:27:21] *** Joins: lethu (~lethu@user/lethu)
[14:27:54] <doug16k> we should say "gigantic" before "desktop cpu" but we leave it out
[14:28:39] *** Quits: rany___ (~rany@user/rany) (Ping timeout: 276 seconds)
[14:29:02] <awmv> doug16k: Doesn't look too bad: https://youtu.be/1clQ2GNUBpw
[14:29:10] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[14:29:21] *** Joins: nomic2 (~nomic@51.52.78.152)
[14:29:55] *** Joins: gusto (~Augustus@109.255.100.54)
[14:30:06] <petaflot> awmv: as long as it's fast enough to keep up with your keystrokes it should be alright
[14:30:10] <supakeen> The whole epaper for code display has been tried quite a bit.
[14:30:24] *** Joins: luigibu (~luigi@80.30.201.209)
[14:30:24] <supakeen> But you'll be hard pressed to get a faster (even partial) refresh then a few 100 milliseconds with ghosting involved.
[14:30:32] <supakeen> For any affordable type of epaper display.
[14:31:09] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[14:31:19] <supakeen> I've only worked with some smaller epaper displays for general IoT things and yes, they are terrible in refresh rate (but that isn't their usecase).
[14:31:46] <supakeen> (It's something I've wanted as well :))
[14:31:57] <awmv> Yes but they have "dasung turbo high-speed refresh rates tech" :D:D:D
[14:32:01] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 250 seconds)
[14:32:06] *** nomic2 is now known as nomic
[14:32:31] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[14:32:45] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:49] <awmv> I would order it just for a try. But I can already see that I will regret the overhead to get my import taxes back and that I have to pay for all shipping or something like that
[14:32:55] *** Joins: Klinda (~superleag@user/klinda)
[14:32:59] *** Joins: bsdband31 (~bsdbandit@172.58.189.246)
[14:33:25] <supakeen> Generally not that expensive and pre-charged if you buy through AliExpres or sorts.
[14:33:27] *** Quits: bsdband31 (~bsdbandit@172.58.189.246) (Client Quit)
[14:33:46] <supakeen> Though, I guess that depends on where you are in the world :)
[14:33:51] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Quit: Leaving)
[14:34:24] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[14:34:53] *** Joins: delvian (~delvian@41.13.250.208)
[14:36:29] *** Joins: luigibu (~luigi@80.30.201.209)
[14:36:55] <awmv> I live in Switzerland. FedEx made it too annoying for me to get the taxes back for the item I returned. I guess that's their strategy
[14:37:21] <supakeen> ah, ok
[14:37:33] *** Joins: Thanatos (~Thanatos@197.210.70.114)
[14:38:07] <awmv> But they ship from China, so I guess most people have to pay for that
[14:38:08] <supakeen> if you are into that sort of thing it's probably a fun little software/hardware project to write a thing that takes in VGA; buffers it, and translates it to the corresponding (Q)SPI for an epaper on the other side
[14:38:20] <supakeen> but hey, a readymade thing is likely more fun
[14:38:43] <awmv> supakeen: I like projects
[14:39:13] <awmv> But wouldn't I need to buy the display anyway?
[14:39:36] <supakeen> you would :)
[14:41:53] *** Joins: rany_ (~rany@user/rany)
[14:42:40] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 265 seconds)
[14:43:28] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:43:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[14:43:36] *** Joins: iomari891 (~iomari891@102.91.4.225)
[14:45:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[14:45:20] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[14:46:04] *** Joins: cursey (~cursey@user/cursey)
[14:47:14] <awmv> I mean it would be worth it if I can find the hardware for it
[14:49:25] *** Joins: arinov (~arinov@213.194.126.155)
[14:51:22] *** Quits: iomari891 (~iomari891@102.91.4.225) (Ping timeout: 256 seconds)
[14:51:50] *** Quits: rany_ (~rany@user/rany) (Remote host closed the connection)
[14:52:08] *** Joins: iomari891 (~iomari891@197.210.71.83)
[14:52:44] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[14:53:44] *** Joins: rany_ (~rany@user/rany)
[14:55:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:55:45] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:56:21] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[14:56:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:59] *** Joins: fikran (~fikran@user/fikran)
[14:57:33] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:57:44] *** Joins: thiras (~thiras@user/thiras)
[14:58:04] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[14:59:40] *** Joins: iomari891 (~iomari891@197.210.70.19)
[14:59:45] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[15:00:02] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:01:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:01:31] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[15:02:48] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:03:26] *** Quits: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 260 seconds)
[15:04:38] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:05:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:05:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:06:13] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:06:48] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[15:07:47] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 252 seconds)
[15:07:48] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[15:08:11] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 250 seconds)
[15:08:43] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:09:12] *** Joins: iomari891 (~iomari891@102.91.5.163)
[15:11:18] *** Joins: luigibu (~luigi@80.30.201.209)
[15:11:40] *** Quits: guenhael1 (~Thunderbi@193.52.208.97) (Ping timeout: 265 seconds)
[15:12:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:12:58] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:15:14] *** Quits: iomari891 (~iomari891@102.91.5.163) (Remote host closed the connection)
[15:17:09] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:17:11] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:17:55] <varaindemian> how can I split by any elements in a list and then take the first element it finds?
[15:18:53] *** Joins: rany__ (~rany@user/rany)
[15:19:16] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-207.home.otenet.gr) (Quit: Konversation terminated!)
[15:19:24] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:19:55] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[15:20:07] <doug16k> split by?
[15:20:38] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:20:58] *** Joins: zepolen (~zepolen@ppp-94-66-223-207.home.otenet.gr)
[15:21:16] *** Joins: slav0nic (slav0nic@python.su)
[15:21:27] <varaindemian> I have a list a = ['1', '2', '3']. I'd like to split my text by any of these elemets in a.
[15:21:46] <varaindemian> if it finds one of these split and so on
[15:22:23] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[15:22:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[15:23:15] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[15:23:41] <varaindemian> makes sense?
[15:23:46] <dminuoso> varaindemian: You can use filter on that list
[15:24:14] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:24:26] <varaindemian> dminuoso: how?
[15:24:32] <dminuoso> Or, hold on
[15:24:33] <grawity> hmm I'm tempted to suggest `re.split("|".join(re.escape(v) for v in the_list))`
[15:24:33] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[15:25:42] <jinsun> that looks like the solution
[15:25:42] <dminuoso> varaindemian: Mmm, you could do this with a generator expression elegantly
[15:26:23] <jinsun> without re it would have to be some sort of recursive splitting function
[15:26:56] <doug16k> it wouldn't be find the offset of each delimiter and use lowest offset?
[15:27:10] <varaindemian> basically I have a two lists. and I want to a function that returns True if it finds any ellement in listA followed by any element in listB
[15:27:18] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[15:27:56] *** Joins: ano (~ano@user/ano)
[15:28:19] <bjs> varaindemian: what about just a for loop and a boolean variable?
[15:28:35] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 265 seconds)
[15:29:00] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:29:25] *** Quits: maryo87 (~Maryo@user/maryo) (Remote host closed the connection)
[15:29:30] <doug16k> varaindemian, in list c ?
[15:29:34] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00d5af2064097ce1bb.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:29:43] <varaindemian> bjs: it has to be with elements in two lists and text matching from listA and listB
[15:29:46] *** Joins: maryo87 (~Maryo@user/maryo)
[15:29:54] *** Quits: delvian (~delvian@41.13.250.208) (Ping timeout: 256 seconds)
[15:29:56] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:30:01] <bjs> varaindemian: I'm not sure what you mean
[15:30:03] <varaindemian> doug16k: sorry?
[15:30:16] *** Joins: delvian (~delvian@169-0-205-126.ip.afrihost.co.za)
[15:30:20] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:30:20] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[15:30:23] <doug16k> in some unmentioned list, something in a followed by something in b?
[15:30:25] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:30:48] <varaindemian> bjs: I have a text and then I have to make sure I find something from listA that is followed by anything from listB
[15:31:16] <doug16k> ok
[15:31:22] <dminuoso> next(y for sep in [",","."] for y in "foo,bar".split(sep)
[15:31:23] *** Joins: luigibu (~luigi@80.30.201.209)
[15:31:27] <dminuoso> This seems like the cleanest and simplest solution.
[15:31:35] <dminuoso> Float these out into variables and it looks nicer
[15:31:43] <teut> "-78^89%45"    is there any python module to solve math like this? I can replace ^ with ** with I am not sure if that would be enough
[15:31:48] <bjs> varaindemian: what does "followed by" mean?
[15:31:53] <dminuoso> varaindemian: ^-
[15:32:01] <teut> but I am*
[15:32:01] <doug16k> teut, and not eval?
[15:32:28] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Remote host closed the connection)
[15:32:31] <doug16k> teut, pass that to eval() and it'll just do it
[15:32:36] <dminuoso> Oh hold on, this wont quite work due to split behavior
[15:32:44] <teut> split?
[15:32:49] <teut> ^ is problem
[15:32:55] <teut> this is xor
[15:33:00] <bjs> teut: the usual approach is to use the `ast` module to implement a little calculator.  There is no built-in "calculator" module because... well, Python is already kind of a calulcator
[15:33:01] <varaindemian> bjs: listA = [1, 2, 3] listB = [4, 5, 6] I want to find anything like 14, 15, 16, 24, etc
[15:33:05] <bjs> teut: dminuoso wasn't talking to you
[15:33:21] <teut> ok
[15:33:28] <grawity> now feels like the story is entirely different than before
[15:33:35] <dminuoso> Mmm, I think there's something sleek here.
[15:33:38] *** Joins: grooverman (~grooverma@177.102.117.95)
[15:33:38] <bjs> varaindemian: I still think you should just write a for loop that checks
[15:33:40] <dminuoso> But I gotta go back do stuff
[15:33:57] <varaindemian> bjs: how exactly?
[15:34:04] <grawity> varaindemian: start with itertools.product(listA, listB)
[15:34:13] <teut> even multiply has so much od syntax . *  X
[15:34:27] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[15:34:32] <teut> I would have done it but I am in a haste
[15:34:47] <bjs> varaindemian: the way you learned in day1 with programming: `for i in range(len(text)-1): if text[i] in a and text[i+1] in b: return True`
[15:35:15] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[15:35:51] <bjs> varaindemian: the more_itertools library has a nice helper for this called "pairwise" https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.pairwise
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:06] <varaindemian> grawity: that thing looks neat
[15:36:09] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[15:36:21] <bjs> teut: would have done what?
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[15:37:00] <deniska> bjs: https://docs.python.org/3/library/itertools.html#itertools.pairwise now in the stdlib
[15:37:16] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[15:37:29] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 252 seconds)
[15:37:49] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[15:38:21] *** Joins: luigibu (~luigi@80.30.201.209)
[15:38:44] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:38:56] <varaindemian> grawity: how would `itertools.product(listA, listB)` return True
[15:39:08] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[15:39:08] <varaindemian> ?
[15:39:08] <grawity> I didn't say it will return True
[15:39:29] <grawity> I said "start with", as in, it gives you (1,4) then (1,5) then (1,6)
[15:40:04] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:40:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:40:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[15:42:04] *** Joins: Naan (~Naan@user/naan)
[15:42:21] <bjs> deniska: yeah,  I'm never quite sure how far behind to lag in my suggested replies
[15:42:37] <varaindemian> https://www.irccloud.com/pastebin/8EfOZxtX/
[15:42:39] <bjs> like I'm not recommending match/case as answers yet
[15:42:49] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:43:01] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[15:43:10] *** Quits: delvian (~delvian@169-0-205-126.ip.afrihost.co.za) (Quit: Leaving)
[15:44:32] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:44:57] <varaindemian> bjs: can I get the elements inside the tuples joined together? list(itertools.product(lista, listb))
[15:45:24] <bjs> varaindemian: why are you using product? what was wrong with my suggestion
[15:45:36] <varaindemian> bjs: seems easier
[15:46:38] <bjs> varaindemian: okay, if you say so.  Yes if you have two strings you can add them together like "1"+"2"  (and if they're not strings you can turn them into strings with str()) or alternatively you can format them together "{}{}".format(first, second)
[15:46:44] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:46:46] <bjs> f"{first}{second}"
[15:46:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[15:48:08] *** Joins: shad (~shad@user/shad)
[15:48:50] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:50:17] <varaindemian> bjs: like on the result of list(itertools.product(lista, listb)) I can apply f"{first}{second}"?
[15:50:20] <teut> that ast thing that u just said to do
[15:50:22] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:51:10] <bjs> teut: yes, that's the way people would generally make a little calculator (at least, one that uses Python's syntax).  If you want to invent your own calculator language that doesn't look like Python then you're going to have to use some other kind of parser
[15:51:19] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:51:45] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[15:51:45] *** ayusta is now known as ayustae
[15:53:07] <bjs> if you want to allow brackets/parentheses like 2*(3+4)  then I highly recommend getting some kind of decent parser.  Simple string manipulation won't really work.  Like I said Python doesn't have a calculator module because Python itself is a kind of calculator.
[15:53:16] <bjs> teut: what are you trying to do? Why are you in such a rush to get this?
[15:53:47] <teut> i ve a test
[15:53:55] <teut> numerical reasoning
[15:54:08] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[15:54:11] *** Joins: luigibu (~luigi@80.30.201.209)
[15:54:23] <teut> surely you wouldnt help
[15:54:34] <bjs> teut: I don't know what you mean
[15:54:38] <teut> 10 minutes 60 questions
[15:54:45] <bjs> teut: you're trying to cheat on some kind of test?
[15:54:50] <teut> yes
[15:55:01] *** Joins: grooverman (~grooverma@177.95.12.14)
[15:55:04] <teut> I have set up selenium
[15:55:12] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[15:55:27] <teut> this is my skill not that
[15:55:55] <bjs> teut: well, maybe the test is working and you're not going to get that question correct
[15:56:12] <teut> how?
[15:56:20] <bjs> teut: how what
[15:57:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:57:34] <teut> there will be atleast 25 questions based on just X=  56^78,  Y= 78^56  ,  X>Y , X <Y , X =Y
[15:57:42] *** Joins: zeden (~zeden@user/zeden)
[15:57:45] *** Joins: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de)
[15:58:02] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[15:59:20] <bjs> teut: I have no idea what you're saying,  that wasn't even a question
[15:59:25] *** Joins: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778)
[15:59:46] *** Joins: grooverman (~grooverma@177.102.117.95)
[15:59:59] <jinsun> if it is python syntax then just eval() it and problem solved?
[16:00:19] <doug16k> I said eval a long time ago. I guessed he was being snotty about eval being evil
[16:00:21] <jinsun> and replace ^ with ** if that means power
[16:00:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:00:34] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[16:00:56] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[16:00:57] <jinsun> well depends on who is checking
[16:01:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:01:21] <teut49> I havent seen the UI , only asked friends who gave the test
[16:01:27] <jinsun> if a human then probably eval won't do
[16:01:32] <teut49> have you giiven test for optiver?
[16:01:32] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:01:57] <teut49> any person its like that
[16:02:08] *** Quits: teut (~teut@106.215.11.94) (Ping timeout: 256 seconds)
[16:02:25] <bjs> teut49: so the test is something like "X=56^78; Y=78^56.  Which is larger?"  and you need Python to answer that question?
[16:02:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:02:52] *** Joins: tobybl (~tobybl@213.31.132.151)
[16:03:19] <teut49> yes
[16:04:06] <bjs> teut49: (A) you don't need any kind of calculator for that and (B) why not just type 56**78 into Python and see what the value is ...
[16:04:08] *** Quits: menace (~someone@user/menace) (Quit: menace)
[16:04:25] <teut49> one of the question on glassdoor was  X = 5^1/4    Y = 1.5   so it can be this
[16:04:52] <teut49> there is negative marking too
[16:05:01] <doug16k> 4th root of 5
[16:05:09] <bjs> teut49: that also doesn't sound like it needs a calculator?   but again if you can use Python you can just type the numbers in manually
[16:05:52] <bjs> teut49: these are all fairly simple numeric questions. Isn't optiver some kind of financial/trading place?  I mean if you fail the test for a financial place because you can't do simple numeric questions maybe it's not the right place for you? :S
[16:06:13] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[16:06:15] <doug16k> 3^-x means 1/(3^x)
[16:06:22] <jinsun> I don't think they will ask such simple questions and provide python interpreter too try it out too
[16:06:22] *** dcaro is now known as dcaro_lunch
[16:06:29] <teut49> nope doug16k
[16:06:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[16:06:40] <teut49> oh yes
[16:06:44] <teut49> sorry it does
[16:06:45] <doug16k> yep teut
[16:07:26] <teut49> I will think about that later bjs
[16:07:33] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:07:33] *** Quits: Babar (~Babar@171.226.230.141) (Ping timeout: 252 seconds)
[16:07:35] <teut49> I need to get the job thats it
[16:07:36] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[16:08:01] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Quit: This computer has gone to sleep)
[16:09:14] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:09:26] <teut49> the time is too less
[16:09:40] *** Quits: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de) (Quit: Client closed)
[16:10:11] *** Joins: shad (~shad@user/shad)
[16:10:46] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:10:51] <doug16k> ya financial places will have sky high expectations
[16:11:07] <doug16k> they want a bazillion inserts per second on a potato
[16:11:44] <teut49> do not worry there will be many people who would hire an alternate person to give the test, use anydesk etc
[16:11:45] *** Joins: raek (~raek@2.67.243.131.mobile.tre.se)
[16:11:47] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:12:28] <bjs> I know people complain about those stupid coding interviews where they make you do stuff infront of them,  but that's one of the reasons why
[16:12:44] <grym> ^
[16:12:50] <bjs> because it becomes blatantly obvious if the person infront of you (physically and/or virtually) doesn't know the stuff when you ask
[16:12:58] <doug16k> I love the horrifying pad and pen push. do they still do that in programmer interviews?
[16:12:59] *** Quits: Thanatos (~Thanatos@197.210.70.114) (Quit: Leaving)
[16:13:06] <grym> or is copy/pasting things into the editor buffer, in a remote interview
[16:13:18] <bjs> doug16k: usually a whiteboard or I guess more recently some virtual equivalent
[16:13:20] <grym> watching someone think/type their way through a little coding exercise is more illuminating than i would like it to be
[16:13:33] <grym> (we've used coderpad.io with some success)
[16:13:35] <teut49> remember that I am h=just starting out the thing
[16:13:56] <teut49> just*
[16:14:18] <bjs> teut49: you mentioned selenium,  and I recall you've done some web-y things.  Maybe you should be focusing on applying to places that can make use of the skillsets you have
[16:14:41] <bjs> I mean it was just yesterday you said you didn't want to do problems that involved 2d arrays because of "how many numbers it has" and now you're applying to some financial trading company(!?)
[16:14:41] <hogarius> teut49: when are you scheduled to take the test?
[16:14:43] <teut49> no , such companies do not come to my campus
[16:14:48] <leitz> If A imports B, C, D, and E, and B-E import Z, is there a way to have A import Z once for B-E?
[16:14:50] <teut49> tomorrow
[16:14:57] <teut49> you work  there hogarius?
[16:15:09] <doug16k> I did one where the guy said "yeah you are one of the few people where the answer to our test didn't appear as a paste of the whole thing at the last minute"
[16:15:12] *** Joins: darksun (~darksun@user/darksun)
[16:15:17] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:15:19] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[16:15:25] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[16:15:35] <grym> leitz: aiui the 'real' import happens once and after that it's a dict lookup
[16:15:47] <bjs> leitz: not sure what you mean? Imports only happen once anyway
[16:15:53] <hogarius> teut49: how would i know where you are talking about?
[16:15:54] *** Joins: darksun (~darksun@user/darksun)
[16:15:58] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[16:16:18] *** Joins: darksun (~darksun@user/darksun)
[16:16:22] <jinsun> optiver
[16:16:34] <leitz> grym, bjs, I put "import re" into the calling code, but the later imported code that uses "re" couldn't find it.
[16:16:38] <jinsun> teut49 mentioned few lines above
[16:16:39] <teut49> idk , whatever ways, maybe you just need to ban my ip , to avoid me giving the test
[16:16:47] <bjs> leitz: you need to `import re` in any file you want to use it in
[16:16:53] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 250 seconds)
[16:16:55] <bjs> leitz: the import is what makes the name available
[16:16:55] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[16:17:05] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 250 seconds)
[16:17:11] <leitz> Ah, so imports don't cross files?
[16:17:20] *** Joins: darksun (~darksun@user/darksun)
[16:17:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[16:17:32] <grym> leitz: it's just a name, so it follows all the usual scoping rules
[16:17:52] <grym> (you can import things inside a function, if you want to, and you won't see the name outside of it)
[16:18:02] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[16:18:14] *** Joins: roped (~lonely_@user/roped)
[16:18:28] <leitz> Thanks! I'm re-learning, and the cobwebs are a bit thick today.
[16:18:28] <grym> (generally speaking that's bad practice, but on rare occasion it's the right thing to do)
[16:18:34] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 260 seconds)
[16:18:45] <doug16k> does that run off and run a bunch of module resolution code each time?
[16:18:45] <hogarius> teut49: if you know how to program today, I'm sure you'll do fine tomorrow.
[16:18:59] *** Joins: iomari891 (~iomari891@197.210.70.206)
[16:19:01] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[16:19:30] *** Quits: nomic (~nomic@51.52.78.152) (Remote host closed the connection)
[16:20:18] *** Quits: darksun (~darksun@user/darksun) (Client Quit)
[16:20:41] *** Joins: darksun (~darksun@user/darksun)
[16:20:57] <teut49> nope, I am a chemical engineering student, and I have lost too many marks in tests because of wrong calculations
[16:21:21] <teut49> so I dont know how I will be able to clear tomorrow's test
[16:21:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:21:23] *** Quits: raek (~raek@2.67.243.131.mobile.tre.se) (Ping timeout: 256 seconds)
[16:21:29] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:21:29] <supakeen> I love how people always complain about programming tests but try to get anyt welding job without having to do a few coupons.
[16:21:33] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[16:21:39] <supakeen> And/or up to date certifications.
[16:21:42] *** Joins: Klinda (~superleag@user/klinda)
[16:21:57] <teut49> I dont have calculator too
[16:22:12] <bjs> teut49: being able to check your answers are right and to correct yourself is one of the skills they will usually be testing for too
[16:22:18] <doug16k> yeah, programming is a thing where it seems like you have to have tons of formal education but you could be amazing with none
[16:22:33] <supakeen> Which is exactly why there's tests involved :)
[16:22:40] <dminuoso> Experience shows people tend to be less amazing without formal education.
[16:23:02] <bjs> teut49: everyone complains about "making stupid mistakes in calculations" when they do tests,  but the ones who do really well actually do something about it
[16:23:03] *** Joins: raek (~raek@2.67.243.131.mobile.tre.se)
[16:23:18] <supakeen> You'll always be unsure about any test, do the test, see if they give you feedback, then test somewhere else until you get it.
[16:23:25] <dminuoso> Dunning Kruger effect is particularly strong on people without formal education.
[16:23:37] <doug16k> yeah good ones self learned a lot the stuff they drag you through school so really they are more educated than paper says
[16:24:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:17] <Helenah> I have Dyscalculia but I have a computer to aid me.
[16:24:29] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:24:32] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00d5af2064097ce1bb.dip0.t-ipconnect.de)
[16:25:00] *** Quits: iomari891 (~iomari891@197.210.70.206) (Remote host closed the connection)
[16:25:28] <teut49> ya, my friend is 5th ranked in the whole university. And he doesnt do it, but he is able to do it
[16:25:50] <teut49> one of the reasons is he just uses his phone for everything
[16:25:59] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:26:26] <dminuoso> doug16k: The key is that "self-learned" and formal education are not mutually exclusive. In university nobody "teaches", essentially you're forced to learn to learn.
[16:26:28] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:26:29] <teut49> he can even fill google forms on phone wheras I use computer for everything , so he is used to the keyboard
[16:26:43] <dminuoso> So formal education has the benefit of giving you a robust framework to learn for yourself
[16:26:50] <doug16k> dminuoso, I know. the assignment almost seems like it had nothing to do with the lecture
[16:27:05] <doug16k> have to learn it all yourself
[16:27:13] <teut49> mobile/calculator keyboard
[16:27:13] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Read error: Connection reset by peer)
[16:28:39] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:29:46] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Ping timeout: 268 seconds)
[16:29:56] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:30:31] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[16:30:45] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[16:31:03] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:33:44] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:34:28] *** Quits: legola (~legola@46.235.101.65) ()
[16:36:17] <leitz> Does "with open(file)" automatically close the file at the end of the with?
[16:36:30] <leitz> I like to keep things clean.
[16:36:42] <doug16k> that's the whole point of with
[16:37:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[16:37:07] <doug16k> it even closes it if something raises an exception and it leaves the block that way
[16:37:15] <rk4> is it fair to call this RAII
[16:37:25] *** Quits: palasso (~palasso@user/palasso) (Quit: No Ping reply in 180 seconds.)
[16:37:30] <leitz> doug16k, thanks!
[16:37:31] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:38:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:38:24] *** Joins: mat001 (~mat001@c-71-202-248-112.hsd1.ca.comcast.net)
[16:38:47] *** Joins: palasso (~palasso@user/palasso)
[16:38:50] <doug16k> rk4, it solves the same problem as raii, it's pretty similar
[16:38:56] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:38:58] *** Quits: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778) (Ping timeout: 256 seconds)
[16:39:02] * leitz has to work on his resume, so is using Python to work on his resume.
[16:39:47] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[16:39:52] <jmd> resume your resume
[16:40:44] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 256 seconds)
[16:40:44] *** guenhael1 is now known as guenhael
[16:41:41] <doug16k> in python it's more like RAMBI Resource Allocation Might Be Initialization
[16:42:53] <doug16k> depends on how the class reacts to __enter__ and __exit__
[16:43:14] <doug16k> s/Allocation/Acquisition/
[16:45:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[16:45:46] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Ping timeout: 256 seconds)
[16:46:11] <doug16k> it could have nothing to do with resources, might be just holding a lock and guaranteeing it is released
[16:46:52] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[16:47:17] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[16:48:00] <rk4> i see
[16:48:55] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:50:56] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[16:51:58] *** Joins: Payam (~Payam@138.106.57.132)
[16:52:12] *** Joins: arinov (~arinov@78.187.169.227)
[16:53:07] <Payam> Hi, If I wana say that return only 'src/*' but not 'sr/*/*' how do I do it using RE?
[16:53:59] *** Joins: jim87 (~quassel@93.55.249.30)
[16:55:33] <nyuszika7h> assuming you meant 'src/*/*' in the second example, you could do r'src/[^/]+'
[16:55:51] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:56:21] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:56:54] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[16:56:57] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[16:57:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:58:26] <doug16k> as in `find src -maxdepth 1` ?
[16:58:39] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:59:19] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Client Quit)
[16:59:24] *** Joins: yotsuba420 (~yotsuba@93-172-241-53.bb.netvision.net.il)
[16:59:34] *** yotsuba420 is now known as yotsuba
[16:59:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:00:52] <wyre> hi guys, I've defined several constants in a script and I'd like to use a json file to define all of them
[17:01:18] <wyre> could I just set all of them after json.load(opened_json_file) automatically?
[17:01:23] *** Joins: wlemuel (~user@210.22.124.110)
[17:01:31] <wyre> I mean, once I have the dictionary loaded in some variable
[17:01:51] <grym> wyre: i usually use pydantic for this; let me show you real quick
[17:02:11] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 252 seconds)
[17:02:15] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[17:02:32] <wyre> grym, but I wouldn't like to introduce more dependencies than I have already
[17:03:04] <teut> for key, val in json.loads(...).items(): globals()[key] = val
[17:03:20] <teut> wouldnt this just do that?
[17:03:29] *** dcaro_lunch is now known as bcaro
[17:03:41] <wyre> teut, that sounds good
[17:04:23] *** bcaro is now known as dcaro
[17:04:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:04:28] <grym> wyre: https://bpa.st/OQSQ
[17:04:36] <teut> :b  was that good? I am not that person who gives good solutions usually
[17:04:46] *** Joins: \`_ (~nirnam@gateway/tor-sasl/nirnam)
[17:05:29] *** Quits: arinov (~arinov@78.187.169.227) (Ping timeout: 252 seconds)
[17:05:38] <doug16k> could you do global() += json.loads(...) ?
[17:05:40] <\`_> hi what's the equivalent of imp.load_compiled in importlib?
[17:05:40] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:05:55] <jdavfsxd> well, congratz, 3.10 is really nice
[17:05:55] <grym> doug16k: if you hate life but breathe matlab...
[17:06:06] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:06:10] <doug16k> stole teuts idea :P
[17:06:12] <teut> but you might overwrite some defaults, do take care of that
[17:06:19] *** Joins: fikran (~fikran@user/fikran)
[17:06:29] <jdavfsxd> union typing + pattern matching = great
[17:06:53] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[17:07:25] <grym> (in matlab, load() just yeets dict keys out of the matfile as names into the global namespace, if you don't assign the result of load() a name itself; this is _godawful_)
[17:07:33] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[17:07:41] *** Joins: demophoon43 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[17:07:44] <teut> += is __iadd__
[17:07:54] *** Quits: wlemuel (~user@210.22.124.110) (Remote host closed the connection)
[17:08:06] <grym> wyre: i find the validation checking that pydantic brings to be well worth the dependency cost
[17:08:17] *** Joins: wlemuel (~user@210.22.124.110)
[17:08:34] <grym> wyre: defensive boundaries wherever users get to mash keyboards has saved me a lot of time
[17:09:00] *** Joins: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2)
[17:09:04] <teut> doug16k probably you could use the   |  of python 3.9
[17:10:00] * hexnewbie hushes eagerness to propose def __riassign__(self, other, name, locals, globals)
[17:10:23] <teut> += doesnt combine the dicts
[17:10:35] <doug16k> lol, globals() = { **globals(), **json.loads(...) }    # eat that python interpreter
[17:10:41] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[17:11:12] <grym> doug16k: then you find yourself writing truly nasty hacks to make a dict whose keys are the string values of names of ... and the pain just goes exponential
[17:11:23] <teut> https://gamma.sympy.org/input/?i=34%5E5  see this bjs
[17:11:35] <teut> there is a calculator
[17:11:57] <hexnewbie> doug16k: That would need at least something like __setcall__(*a, **kw) to work
[17:12:07] <ali1234> wait does that syntax actually work?
[17:12:22] <doug16k> ali1234, star star to expand a dict into another? yeah
[17:12:22] <teut> wohoo, with this I dont need to worry at all
[17:12:47] *** Quits: demophoon43 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[17:12:47] <bjs> teut: can't you just type 34**5 into Python?
[17:12:58] <teut> believe me its tough
[17:12:59] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[17:13:03] <grym> that's how you merge dicts, in fact
[17:13:07] <grym> before | came along
[17:13:09] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:13:20] <teut> it will be very difficult to do it in 10-20 seconds which the test provides
[17:13:31] <ali1234> how do you do it with |?
[17:13:43] <grym> a | b
[17:13:52] <ali1234> what version of python does that require?
[17:13:55] <teut> and there is strange negative marking which increases with number of times you give incorrect answer
[17:13:59] <grym> 3.9, i think ?
[17:14:03] <ali1234> cos it doesn't work in 3.8
[17:14:07] *** Joins: maryo_87 (~Maryo@user/maryo)
[17:14:26] <ali1234> what do either of these do when a key exists in both?
[17:14:31] <grym> last man in wins
[17:14:31] <Wulf> int | str  or similar is supported from python 3.10 onwards.
[17:14:37] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:14:39] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:fff3:c59c:b8a9:6efa)
[17:14:50] <grym> ali1234: so for a|b, b's key's win
[17:14:59] <hexnewbie> Seriously, though, globals().update(...) is more readable than globals() |= ..., for whatever that's worth
[17:15:01] <Wulf> oh, it's about dicts. Never mind :)
[17:15:12] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:15:23] <grym> hexnewbie: i find globals(anything at all) kind of unreadable :D
[17:15:43] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[17:15:57] <ali1234> string_i_got_from_the_user.format(**globals())
[17:16:10] <hexnewbie> grym: At least it's not vars(builtins)....
[17:16:52] <hexnewbie> It's constrained to polluting your own module only
[17:17:13] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[17:19:12] <hexnewbie> Wait, gettext.install() actually messes with builtins I think? So somebody did think that was a wise idea too :)
[17:21:13] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:1567:bbee:acce:b1f)
[17:22:05] *** Joins: philectro (~quassel@2a02:2788:1024:671:f437:b1d:594a:60ac)
[17:22:38] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[17:22:47] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[17:22:47] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:3c0c:4012:31aa:648e) (Ping timeout: 268 seconds)
[17:22:58] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[17:23:07] <dminuoso> What's the correct way to execute a code region when an exception passes through without catching it?
[17:23:10] <philectro> hi
[17:23:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[17:23:33] <doug16k> dminuoso, finally
[17:23:44] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[17:23:46] <dminuoso> doug16k: That would execute it even when no exception is thrown.
[17:24:07] <doug16k> oh if only exception then I'd catch it then use bare `raise` to continue unwind
[17:24:10] *** Joins: luigibu (~luigi@80.30.201.209)
[17:24:12] <dminuoso> I mean yeah I can track this state in the try block, but I was wondering whether there was a more fundamental mechanism.
[17:24:32] <dminuoso> doug16k: Mmm, wouldn't that mask the original callstack?
[17:24:36] <Wulf> dminuoso: else:?
[17:24:55] <doug16k> rethrow shouldn't ruin it. throwing a new one would yeah
[17:25:15] <doug16k> bare raise should just keep going with the exception it was unwinding
[17:25:18] <hexnewbie> dminuoso: No, a bare raise does not. Now that Python 3 exceptions include a traceback I'm not sure even a non-bare raise would mask it.
[17:25:30] <dminuoso> Alright, then reraising the exception will work.
[17:25:31] <dminuoso> Thanks
[17:26:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:27:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:27:14] *** Joins: arinov (~arinov@176.89.29.127)
[17:27:14] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[17:27:39] <dminuoso> Perhaps a more idiomatic choice would be to use some wrapper class that defines __exit__, and check for whether an exception was noted there.
[17:27:43] <doug16k> `except Exception as error: ...stuff... raise MyError('The thing failed') from error` gives you another way to keep the old stack trace right?
[17:28:21] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:28:27] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[17:29:49] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:30:29] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:42] *** Joins: csmiga1 (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[17:31:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:31:44] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[17:31:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:32:02] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[17:32:02] *** csmiga1 is now known as csmiga
[17:32:28] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:32:40] *** Quits: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:32:50] *** Joins: mfao (~Matheus@187.1.168.150)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:34:36] *** Joins: kdc (~kdc@196.211.197.159)
[17:34:38] <mfao> Hi, everyone! Im getting TypeError: expected string or bytes-like object in line 28. My doubt is how i check for multiple regex patterns in a single loop. https://bpa.st/DDFQ
[17:35:35] <doug16k> what does type(line) print
[17:35:37] <The-Compiler> mfao: you are overriding the str object in "line" with a re.Match object in line 24
[17:35:50] *** Joins: shad (~shad@user/shad)
[17:36:10] <mfao> the first type line shows str and the second Nonetype
[17:36:12] <The-Compiler> mfao: don't call those two different things "line" - call it "match" or something instead.
[17:36:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:36:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:36:40] <mfao> like match2 for example? @The-Compiler
[17:37:02] <bjs> mfao: or whatever you want, just don't call them both "line" :)
[17:37:07] <The-Compiler> yep
[17:37:10] <doug16k> why isn't line 28 line.group(1) ?
[17:37:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:24] *** Parts: \`_ (~nirnam@gateway/tor-sasl/nirnam) ()
[17:37:44] <doug16k> the argument in the .search call I mean
[17:38:04] <mfao> because line.group(1) is the match itself
[17:38:11] <doug16k> that might make your shadowing work
[17:38:15] <doug16k> ok
[17:38:50] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[17:38:52] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:f472:e353:6a1a:925b)
[17:39:12] <mfao> i cahnge the names to match1 and match 2 but now im getting AttributeError: 'str' object has no attribute 'group' @The-Compiler
[17:39:25] <bjs> mfao: what is your new code?
[17:39:33] <mfao> lemme paste it
[17:39:55] <mfao> https://bpa.st/4I5Q
[17:40:16] <bjs> mfao: you need to use match1 not line now you've changed the name
[17:40:23] <Deneb> why am I getting a 'missing 3 required positional arguments:' error here: https://bpa.st/P24Q
[17:40:25] <The-Compiler> mfao: well, now you also changed the lines referring to the match object
[17:40:33] <bjs> mfao: like print(repr(match1)) then if match1 and then print(match1.group(1))
[17:40:38] <bjs> mfao: same with match2
[17:40:55] <The-Compiler> mfao: the current line and the result of re.search are two different things, and you seem to be confusing the two
[17:40:56] <Deneb> I am passing 4 arguments and the function is designed to receive 4 arguments?
[17:41:03] <bjs> Deneb: can you show the actual code and the traceback?
[17:41:18] <mfao> indeed i am @The-Compiler
[17:41:30] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:1567:bbee:acce:b1f) (Ping timeout: 265 seconds)
[17:41:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:41:40] *** Joins: Trieste_ (T@user/pilgrim)
[17:41:45] <Deneb> bjs: was afraid someone would say that... one moment...
[17:41:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:42:44] <mfao> the if condition shoukd be now if match1... if match 2...? @The-Compiler
[17:42:54] <Deneb> https://bpa.st/O7NA
[17:43:26] <Deneb> I am not passing the entry object just the value of it?
[17:43:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[17:43:45] <The-Compiler> mfao: probably, yes - you want to check if there was a match, you don't want to check whether the current line (a string) is empty
[17:44:14] <bjs> Deneb: what's happening on line 59
[17:44:38] <bjs> you bind() it?
[17:44:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:45:00] <Deneb> bjs: well, yes, that probably wants commenting out. Let me try that....
[17:45:09] *** Trieste_ is now known as Trieste
[17:45:42] <Deneb> bjs: I had definitely commented that out already...
[17:45:50] <bjs> Deneb: it's not commented out here?
[17:45:58] <mfao> @The-Compiler, i corrected and it seem to be working fine. but just wondering, is this the most efficient way to check for more than one pattern in a pdf file?
[17:46:02] <Deneb> ...at least I think so....
[17:46:06] <mfao> this way i'll be only using one loop
[17:46:46] <The-Compiler> mfao: don't optimize for performance before measuring. Optimize for readable code as a primary target.
[17:47:02] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[17:48:01] <mfao> i think if I change match1 to "the_name_of_the_match_match " would be readable what you think?
[17:48:01] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:48:20] <Deneb> bjs: yes, that was it. Strange, cos I had it working, then the error appeared. Either it wasn't commented out and it working was a fluke, or I did and managed to delete the # somehow, coul be though Ctrl-Z a little earlier. Whatever the case, mea culpa. Thank you for spotting it.
[17:48:29] <bjs> mfao: making names super long can often make things *less* readable
[17:48:32] <mfao> Also I want to write better python and more professional, any books recommended? @The-Compiler
[17:48:37] *** Joins: RiFo (~RiFo@user/rifo)
[17:48:44] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 256 seconds)
[17:49:53] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:06] <mfao> the name part I get it, but performance-wise speaking way better with a single loop, right?
[17:50:28] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[17:50:45] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00d5af2064097ce1bb.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[17:50:57] <RiFo> Hi, i got a question (about pyserial) i am trying to read 3 bytes swith serial.read(3) and a timeout of 5 seconds, but the command sometimes returns after less then half a second with less then 3 bytes, any idea what could cause this?
[17:51:06] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Client Quit)
[17:51:12] <Wulf> RiFo: working as intended.
[17:51:14] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Quit: Bye!)
[17:51:15] <Wulf> RiFo: keep reading!
[17:51:18] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[17:51:39] <bjs> RiFo: https://pyserial.readthedocs.io/en/latest/pyserial_api.html#serial.Serial.read  "f a timeout is set it may return fewer characters than requested. With no timeout it will block until the requested number of bytes is read."
[17:51:48] <The-Compiler> mfao: agreed it makes sense to read both in the same loop, also for readability
[17:51:57] *** Joins: Burger (~textual@user/burger)
[17:52:19] <The-Compiler> bjs, RiFo: huh, but it indeed seems weird to get less data *before* the timeout is up
[17:52:33] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[17:52:35] <mfao> any book recommendations on books to write better python in a non structural ugly way?
[17:52:49] <mfao> like using OOP
[17:53:20] <RiFo> ive the log checked multipy times, the next log comes less then half a second after the one before the read command, and timeout is set to 5 seconds
[17:54:04] <Wulf> mfao: everything in python is an object. You're already doing OOP, congratulations!
[17:54:55] *** Joins: legola (~legola@46.235.101.65)
[17:55:05] <mfao> :D
[17:55:14] <grym> write functions, pass around data packet classes, avoid mutating global state as much as you can; be happy
[17:56:15] <Wulf> mfao: upload some of your code and ask for hints
[17:56:42] <mfao> what do you mean by data packet classes? a function only to collect data? @grym
[17:56:59] <mfao> @Wulf, thanks for the tip!
[17:57:10] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Client Quit)
[17:57:27] <grym> mfao: i mean a class instance whose attributes are semantically related bits of information, and typically one that doesn't have very many methods on it
[17:57:45] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:58:22] <Wulf> mfao: class Apple: diameter: float; colour: Colour; worms: int   Human().eat(apple)  is better than  Human().eat("apple", 3.15, "green", 4)
[17:59:15] <mfao> got it
[17:59:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:59:19] <mfao> thanks
[18:00:08] <grym> often when people say "i should do OOP" it seems that they mean "i should write Java!" and python is not a good language in which to write java
[18:00:17] <RiFo> The-Compiler: got any idea why it could be returning early?
[18:00:22] *** Joins: rapier (~rapier@user/rapier)
[18:00:28] <summonner> this is very true. Most confused learners seem to be java people
[18:00:33] <Wulf> RiFo: We told you.
[18:00:53] <grym> specifically because: we have first-class functions; we scope names with modules not classes; we don't have compellable interfaces / public /private/const ... langauge ideas
[18:01:22] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[18:01:25] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[18:01:32] <RiFo> it returned after half a second with a timeout of 5 seconds, and a inter byte timeout of 5 seconds too
[18:01:36] <grym> (and other reasons besides, but the instinct seems to be 'if everything is a class, that's OOP!', and it's ungainly in python)
[18:01:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:01:48] <summonner> RiFo, it's like this. I have 2 hands, when my hands are full, I will take the ice cream over to the table, then come back.
[18:01:52] <bjs> RiFo: well my first question is whether that's what really happened
[18:02:11] <bjs> you say you're reading from logs, but who knows if the logs actually accurately represent what happened
[18:02:16] <summonner> RiFo, if I've waited 5 seconds, and my hands aren't full, I will go over to the table anyway
[18:02:34] *** Joins: superboot (~agentgasm@user/superboot)
[18:02:40] <mfao> Its just a weird feeling that my code look ugly. And i think that someone with more experience could do the same in half of the lines and in a more consistent and organized way, you know?
[18:03:03] <grym> mfao: sure.  that comes with experience of reading and writing code
[18:03:57] <summonner> mfao, that comes with learning how to go from Apprentice -> Journeyman -> Master. But if you don't read any books or learn how the Masters write code (and why) then you'll never improve
[18:04:03] <mfao> like i sometimes do 150 line code, which is small and I have the feeling that someone could do in 80 with plenty of functions in a much more organized way
[18:04:21] <grym> mfao: functions are very nice!
[18:04:29] <mfao> @summonner, i asked for book recommendations, do u have any?
[18:04:31] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[18:04:43] <grym> mfao: fluent python is quite good, i hear
[18:04:48] <grym> new edition coming soon even
[18:04:53] <bjs> RiFo: it's pretty clear that it can return <size bytes if a timeout is set.  It's unusual if it gives up much earlier than the timeout. But I'm always wary of phrases like "the logs suggest..."
[18:04:53] <summonner> mfao, what's your skill level? you feel you just keep hacking away and you're not improving?
[18:05:40] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[18:06:33] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Client Quit)
[18:06:48] <mfao> i feel like im intermediate level. Like I can do almost everything that i desire with effort. But I have the feeling that ive not mastered data analysis (which is what i want). Or mastered the ways of writing better code
[18:06:57] *** Joins: luva6 (~luva@45.141.152.52)
[18:07:06] <mfao> my code, in general is just a bunch of snippets adapted to my situation u know?]
[18:07:21] <Wulf> mfao: you mean like copy+paste from stackoverflow?
[18:07:27] <mfao> yep
[18:07:32] <Wulf> mfao: start writing your own code instead.
[18:07:33] <grym> after a while i started developing habits about how to write ETL pipelines
[18:07:38] <grym> and they're pretty grooved in by now
[18:07:54] <grym> >  10. Get into a rut early: Do the same process the same way. Accumulate idioms. Standardize. The only difference(!) between Shakespeare and you was the size of his idiom list - not the size of his vocabulary.
[18:08:14] <mfao> only checking the docs? @Wulf
[18:08:26] <mfao> like official docs
[18:08:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 240 seconds)
[18:08:44] <Wulf> mfao: that too. But most important do your own thinking.
[18:09:22] <Wulf> mfao: I learn best by "learning by doing". So if I want to learn how to write programs, I need to write programs. If I only copied+rearranged code, that's what I'd learn.
[18:09:45] *** Quits: luva (~luva@37.120.197.52) (Ping timeout: 250 seconds)
[18:09:45] *** luva6 is now known as luva
[18:09:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:10:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:10:15] <summonner> mfao, flip through Code Complete 2, then go slowly through Clean Code by Robert C. Martin
[18:10:57] <mfao> will check that @summonner thanks
[18:11:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:11:27] <mfao> code complete by steve mc connell?
[18:12:02] *** Joins: han-solo (~hanish@user/han-solo)
[18:12:23] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[18:12:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:13:23] *** Joins: nicode (~nic@2607:f2c0:9417:4c00:c788:aed4:9339:c885)
[18:13:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:14:26] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[18:15:06] *** Quits: mfao (~Matheus@187.1.168.150) (Quit: Leaving)
[18:15:46] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[18:15:54] *** Joins: mfao (~Matheus@187.1.168.150)
[18:15:55] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6c52-46c4-6bfd-7e9f.res6.spectrum.com)
[18:16:35] <ChrisWarrick> don’t read clean code
[18:16:41] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[18:17:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[18:20:02] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[18:20:28] <RiFo> found the issue, somehow the timeout got reset for unknown reasons
[18:20:58] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[18:21:37] <mfao> why? @ChrisWarrick
[18:22:28] <ChrisWarrick> mfao: it’s full of bad advice and ugly code, see https://qntm.org/clean for example
[18:22:36] *** Quits: whaley (~whaley@2603-6080-a301-33d1-a5df-1574-27e5-a3a1.res6.spectrum.com) (Ping timeout: 268 seconds)
[18:23:14] *** Joins: whaley (~whaley@2603-6080-a301-33d1-6003-4db3-18f7-d344.res6.spectrum.com)
[18:23:38] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:25:17] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[18:25:18] <mfao> any recommendations then? @ChrisWarrick
[18:25:21] <rindolf> mfao: we also wrote https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#what-are-some-best-practices-in-programming-that-i-should-adopt
[18:26:25] <mfao> thanks
[18:26:28] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[18:27:02] <han-solo> i don't need version control, i have directories, v1, v2, v2_final
[18:27:23] *** Joins: tobybl (~tobybl@213.31.132.151)
[18:27:23] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[18:27:52] <grym> and the ever popular v2_final_edits
[18:27:59] <ChrisWarrick> mfao: I don’t have any book recommendations
[18:28:19] <han-solo> grym: obviously :)
[18:28:40] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[18:28:53] <deniska> Copy of v2_final_edits
[18:29:06] <mfao> seriously, this is me coding
[18:29:13] <mfao> not even joking
[18:29:33] <deniska> yeah, version control is a thing which I wish people told me about earlier
[18:29:40] <mfao> And the result is that im lost in my own code
[18:29:51] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[18:30:07] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:30:45] <deniska> (and when I learned about their existence, I still ignored them for a few years because I thought they are only for these big projects with whole teams working on it)
[18:31:12] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[18:31:23] <han-solo> wait a sec, wasn't that svn ?
[18:32:05] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[18:32:05] *** Quits: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2) (Ping timeout: 250 seconds)
[18:32:06] <deniska> Well, I guess learning programming in early 00's, git wasn't a thing yet
[18:32:32] * rindolf started with cvs...
[18:33:06] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[18:34:24] <han-solo> git was very much a thing when i started, but for some reason they were using svn....
[18:34:36] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[18:35:37] <rindolf> i actually contributed some patches for subversion - well before git was written
[18:36:39] <jinsun> at my work people were finally forced to switch from svn to git this year
[18:37:23] <jinsun> because few years ago atlassian stopped supporting their SVN thing and made bitbucket git only
[18:37:40] <hexnewbie> I was the CVS good old says person
[18:37:43] <hexnewbie> days
[18:38:17] <ChrisWarrick> jinsun: didn’t bitbucket do hg?
[18:38:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[18:39:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[18:40:30] <jinsun> yeah but here we were using fisheye for SVN, and I think by the time they decided to set up bitbucket it became git only
[18:40:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:41:06] <Julian> bitbucket stopped supporting hg a few years back
[18:41:15] <Julian> (and started supporting git a few years before that)
[18:41:22] <Julian> and then obviously exclusively supported git afterwards
[18:42:39] <jinsun> now hg is only supported by less known stuff, like heptapod
[18:42:53] *** Quits: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:43:26] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[18:43:42] *** Quits: davor (~davor@user/davor) (Ping timeout: 260 seconds)
[18:45:02] *** Joins: akk (~akk@75.161.146.115)
[18:45:23] *** Joins: davor (~davor@user/davor)
[18:45:42] <RiFo> mysteriy solved (for those who care) on setting up the serial device it takes 1/10th seconds for some reason, later it interpretes the timeout as seconds
[18:46:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[18:47:14] *** Joins: arinov (~arinov@31.223.11.114)
[18:48:09] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[18:48:11] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[18:48:55] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr)
[18:49:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[18:49:57] *** Joins: Klinda (~superleag@user/klinda)
[18:49:59] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Quit: emf)
[18:50:18] <leitz> Recursive funny for the day: Worked on the "open source contributions" section of my resume writer, and realized that the resume writer was an open source contribution...
[18:50:45] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[18:51:30] *** Joins: humbertowoody (~humbertow@187.202.244.149)
[18:52:26] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[18:53:29] <bjs> RiFo: that sounds weird, are you sure that's what's happening?
[18:53:32] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:88fa:103b:dade:b5f8)
[18:53:54] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[18:54:00] *** Quits: arinov (~arinov@31.223.11.114) (Ping timeout: 265 seconds)
[18:54:01] *** Quits: humberto1 (~humbertow@187.202.244.149) (Ping timeout: 252 seconds)
[18:54:23] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:54:33] <RiFo> it is weird, we tested it on 2 system, after setting the timeout in the Serial() call to 50, it was set at 5 seconds.
[18:55:07] <RiFo> its a mystery, i have to check the version and see if maybe something on the git changed since then
[18:55:36] *** Joins: arinov (~arinov@176.89.29.127)
[18:56:24] *** Quits: maryo_87 (~Maryo@user/maryo) (Remote host closed the connection)
[18:56:32] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:f472:e353:6a1a:925b) (Ping timeout: 240 seconds)
[18:56:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:56:33] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[18:56:41] *** Joins: horner (~textual@host86-141-1-192.range86-141.btcentralplus.com)
[18:56:45] *** Joins: maryo_87 (~Maryo@user/maryo)
[18:56:49] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[18:57:08] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:b131:226f:3856:883e) (Ping timeout: 268 seconds)
[18:57:30] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:6930:8476:afb9:3a7f)
[18:58:26] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[18:58:50] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 265 seconds)
[18:58:54] *** Joins: emf_ (~emf@2620:10d:c091:480::1:cbc8)
[18:59:09] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Ping timeout: 252 seconds)
[19:00:19] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[19:01:04] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[19:02:27] *** Joins: VaniaPy (~VaniaPy@46.12.178.58.dsl.dyn.forthnet.gr)
[19:02:50] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[19:03:33] <VaniaPy> Hello, which CI/CD tool would you recommend me to use? Jenkins maybe? I'm currently using gitlab's runners for my pipelines
[19:03:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:04:11] *** Quits: Knaxius (~Knaxius@user/Knaxius) (Quit: bye)
[19:04:44] *** Joins: _0ne (~one@user/0ne/x-2101768)
[19:04:58] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:88fa:103b:dade:b5f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:05:20] <phy1729> If you're already using gitlab, I'd stick with gitlab-ci. I have quite unfond memories of Jenkins due to fairly constant security updates and not being able to configure it from text files.
[19:05:42] <rindolf> VaniaPy: hi, i only used hosted ones and poor-man's docker scripts
[19:05:48] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[19:06:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[19:07:33] *** Quits: inomoz (~inomoz@85.26.235.86) (Quit: WeeChat 3.3)
[19:07:42] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:08:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:09:03] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[19:09:07] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[19:09:07] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 250 seconds)
[19:09:44] <horner> VaniaPy I also would stick with gitlab for ci/cd, what incentive is there to use jenkins when you've got gitlab CI
[19:09:47] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[19:10:05] *** Joins: medium_cool (~medium_co@136.36.128.48)
[19:11:15] *** Joins: gusto (~Augustus@109.255.100.54)
[19:11:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:12:01] *** Joins: yolo (~xxiao@159.89.184.51)
[19:13:11] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[19:13:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:14:30] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Ping timeout: 260 seconds)
[19:14:46] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:15:17] *** Joins: bidouille (~user_name@trois.potager.org)
[19:15:18] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:88fa:103b:dade:b5f8)
[19:15:39] *** Joins: fikran (~fikran@user/fikran)
[19:16:44] <RiFo> after some research (logging the parameter before calling Serial() and then checking serial.tiemout after, it seams the timeout parameter got completetly ingored)
[19:16:56] *** Joins: mimmy_ (~mimmy@37.19.212.190)
[19:18:54] *** Joins: timkofu (~timkofu@user/timkofu)
[19:19:10] *** Parts: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) ()
[19:20:21] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[19:20:21] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 245 seconds)
[19:20:47] *** Joins: maryo_87 (~Maryo@user/maryo)
[19:21:32] *** Joins: Atque (~Atque@user/atque)
[19:22:03] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[19:22:28] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[19:22:50] *** Joins: cebor (~cebor@user/cebor)
[19:22:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:23:05] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:23:11] *** Quits: cebor (~cebor@user/cebor) (Remote host closed the connection)
[19:23:54] *** Joins: cebor (~cebor@user/cebor)
[19:24:27] *** Quits: emf_ (~emf@2620:10d:c091:480::1:cbc8) (Ping timeout: 252 seconds)
[19:25:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[19:25:35] <bjs> RiFo: can you make a small example?  because it still sounds weird :)
[19:25:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:26:11] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[19:26:42] *** Joins: shad (~shad@user/shad)
[19:26:53] <RiFo> sure, just give me a few minutes, have to finish something for work first quick (for now i just set the timeout after the Serial() call
[19:27:29] *** Joins: iomari891 (~iomari891@102.91.5.185)
[19:28:50] *** Joins: emf (~emf@2620:10d:c091:480::1:cbc8)
[19:29:12] *** Parts: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Leaving)
[19:30:25] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[19:31:40] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[19:33:05] *** Joins: pyzozord (pyzozord@user/pyzozord)
[19:33:09] <pyzozord> hey what do I do wrong in this line
[19:33:11] <pyzozord> tuple(tuple(axis, int(dist)) for axis, dist in inst.replace('fold along ', '').split('=') for inst in insts.splitlines())
[19:33:26] <pyzozord> I am getting "name 'inst' is not defined"
[19:33:37] <bjs> pyzozord: did you get the loops the wrong way around
[19:34:36] <bjs> `(a for b in c for d in e)` is like `for b in c: for d in e: append(a)`
[19:35:19] <pyzozord> oh
[19:35:24] <pyzozord> I'm not sure, let me check
[19:35:35] *** Joins: delvian (~delvian@41.5.27.233)
[19:36:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:12] <pyzozord> it's too confusing to think about
[19:37:36] <bjs> pyzozord: maybe you should just use the normal for loops that are less confusing to think about then :P
[19:37:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:38:06] *** Quits: humbertowoody (~humbertow@187.202.244.149) (Ping timeout: 256 seconds)
[19:38:28] <pyzozord> I got a multiline string of lines like this 'fold along y=7' and I want to change them into a list of ('y', 7) tuples
[19:38:38] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[19:39:03] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[19:39:51] *** Joins: guardian (~guardian@planet-d.net)
[19:39:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:39:56] <jinsun> you had the right thing just the inner loop should have been outer
[19:40:03] *** Joins: bloody (~bloody@user/bloody)
[19:40:24] <jinsun> also instead of replacing the beginning part with blank, I would just slice it off
[19:41:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:41:34] *** Joins: hackers (~self@user/hackers)
[19:42:13] <pyzozord> no idea how to do it
[19:42:26] *** Joins: Payam (~Payam@138.106.57.132)
[19:42:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:42:49] <jinsun> the loops are left to right, outmost to innermost, like usual, only the final item goes to the left
[19:42:52] <bjs> pyzozord: maybe a way t odo this is with regex
[19:43:03] <bjs> python has built-in support for regexes with the `re` module
[19:43:12] <sudomann> is sit acceptable to keep pip.conf and .pypirc in source control
[19:43:24] <pyzozord> no, I'm intentionally doing it this way to practice comprehensions
[19:43:53] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[19:43:59] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:44:01] <bjs> pyzozord: okay, well can you write without using comprehensions first? Even when code golfing it's usually easier to write out and then squash it
[19:44:06] *** Joins: zebrag (~chris@user/zebrag)
[19:44:10] <bjs> than to write it directly in the golfed form
[19:46:49] *** Quits: rapier (~rapier@user/rapier) (Ping timeout: 252 seconds)
[19:46:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6500:bc30:b0fd:c100)
[19:47:02] <kmh> hi
[19:47:14] <ejjfunky> hey
[19:47:21] <kmh> i have question regarding namedtuples
[19:47:55] <ejjfunky> im a noob. so just shoot. someone else might know the answer.
[19:48:03] <kmh> i have map object that i can turn into a tuple, namely tuple(map(....))
[19:48:07] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 250 seconds)
[19:48:23] <kmh> now i want to do the same but with a namedtuple
[19:48:40] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:48:54] <pyzozord> this is more or less what I need in the long form for inst in insts.splitlines(): axis, dist = inst.replace('fold along ', '').split('=') dist = int(dist)
[19:48:59] <deniska> kmh: replace tuple() call with your_named_tuple() call
[19:49:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:49:04] <kmh> and when i replace tuple in the expression above by the namedtuple i get an error
[19:49:13] <bjs> kmh: okay, what is the error?
[19:49:14] *** Joins: humbertowoody (~humbertow@187.202.244.149)
[19:49:26] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e)
[19:49:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:49:38] <kmh> deniska,  that'a what i've tried and which doesn't seem to work
[19:50:11] <bjs> kmh: oh you have tuple(map(...)) and it makes a tuple with those elements?
[19:50:22] <bjs> kmh: you can go some_namedtuple(*map(...))
[19:50:43] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:50:54] <kmh> bjs,  let me try this
[19:51:10] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:51:35] <jinsun> pyzozord: you can walrus the assignment inside comprehension and avoid the second loop
[19:51:37] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[19:51:49] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[19:51:54] <kmh> bjs,  yep that fixed it thanks, the use of the * is slightly mysterious to me
[19:51:56] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:52:07] <bjs> kmh: it's standard Python syntax for "unpacking" arguments.  f(*[1,2,3]) == f(1,2,3)
[19:52:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:53:02] <kmh> bjs,  yes i've seen that and used it following in examples but with understanding the exact mechanics
[19:53:11] <kmh> i saw with zip
[19:53:11] *** Joins: stonkey (~stonkey@user/stonkey)
[19:53:16] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:53:39] <jinsun> it just passes each item of the iterable as separate arguments
[19:53:45] <RiFo> bjs: can't reproduce it, i literally copy  the code from the function and it does something different when called standalone, have to give up and just set it after the Serial() Call
[19:53:56] <jinsun> kmh: instead of passing the entire iterable as a single argument
[19:54:30] <RiFo> (same envirement too )
[19:54:38] *** Joins: d00gy (~d00gy@user/d00gy)
[19:54:53] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[19:55:02] *** Joins: fofoni (~fofoni@user/fofoni)
[19:55:15] *** Quits: mimmy_ (~mimmy@37.19.212.190) (Ping timeout: 252 seconds)
[19:55:30] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:8979:8aad:3a33:7fbb)
[19:55:32] <pyzozord> jinsun: would you mind sharing what you had in mind?
[19:55:39] <pyzozord> I can't get that to work
[19:55:53] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[19:56:15] *** Joins: awmv_ (~awmv@2a02:21b0:644f:c181:59d8:9a55:4680:634f)
[19:57:30] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[19:57:34] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 268 seconds)
[19:58:02] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:88fa:103b:dade:b5f8) (Ping timeout: 240 seconds)
[19:58:02] *** Joins: jmdaemon (~anon@user/jmdaemon)
[19:59:05] *** Quits: jmdaemon (~anon@user/jmdaemon) (Client Quit)
[19:59:53] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[20:00:03] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:8979:8aad:3a33:7fbb) (Ping timeout: 268 seconds)
[20:00:23] *** Joins: nomic (~nomic@51.52.78.152)
[20:00:37] <jinsun> hmm hadn't tried, now that I try it, walrus would need a weird if, and it doesn't work with tuple assignment, but you can still get it to work
[20:00:52] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[20:01:03] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[20:01:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:01:44] <pyzozord> the outer collection should be actually a list not a tuple so [(), ()]
[20:02:05] <jinsun> pyzozord: something like `[(x[0], int(x[1])) for inst in insts.splitlines() if (x:= inst[11:].split("="))]`
[20:02:20] <RiFo> bjs: mysteriy solved, sorry very very stupid error
[20:02:31] <RiFo> <- goes sit in a corner
[20:02:39] <pyzozord> jinsun: is if necessary there?
[20:03:11] <bjs> no jinsun is just being hacky finding a place to put the assignment expression
[20:03:15] <jinsun> yeah it is a bit weird, maybe can do without it, let me see
[20:03:17] <bjs> you could also just put inside the tuple
[20:03:39] <bjs> but at this point it's screaming that some refactoring is wanted
[20:04:05] <jinsun> yeah if you can repeat the split then you can put in the result
[20:04:10] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[20:04:14] <phy1729> So generally I sort imports by  stdlib, external, local  and then alphabetically inside each group.  How do .foo ..foo ...foo   sort relative to each other? Deepest first then alphabetically?
[20:04:18] <bjs> jinsun: repeat the split?
[20:04:18] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:04:19] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:04:47] <jinsun> .split()[0], and int(.split([1])
[20:04:48] <bjs> jinsun: I mean it's an assignment expression, you can just replace the first instance of `x` with that assignment expression rather than having the `if`
[20:05:40] <bjs> `((x := ...)[0], int(x[1]))`  although it's really screaming at you to do less on this line
[20:05:40] <jinsun> yeah but x is there twice in the result
[20:05:53] <Julian> phy1729: or just all alphabetical, or just use isort and don't think about it
[20:05:54] <bjs> jinsun: yes and you can replace one of them with the assignment expression,  I'm not sure what you're saying
[20:06:00] <Julian> phy1729: (or or just don't use those kinds of imports :P)
[20:06:01] <jinsun> ah yeah
[20:06:03] <bjs> (well you have to replace the earliest one)
[20:06:18] <phy1729> Relative imports are _really_ nice for tests in particular
[20:06:21] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:06:36] <jinsun> wasn't thinking that it can be done in the tuple construction time also
[20:06:51] <pyzozord> so is it possible to do it with comprehension? maybe I want somethign that's impossible?
[20:06:51] *** Joins: jcsteele (~jcsteele@104-2-180-239.lightspeed.rlghnc.sbcglobal.net)
[20:06:59] <pyzozord> but I thought doing 2d things with comprehensions is ok
[20:07:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:07:02] <pyzozord> I did it before
[20:07:08] <bjs> pyzozord: it's possible,  wasn't your first comprehnesion fine you just got the loops the wrong way around
[20:07:20] <bjs> pyzozord: [ for xs in y for x in xs]
[20:07:26] <pyzozord> i tried reversing the loops and couldn't manage to do it
[20:07:28] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[20:07:42] <pyzozord> let me try with that format
[20:08:05] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[20:08:15] <bjs> pyzozord: hmm,  if you *really* want to make things in a single comprehension always write them out in the long format first. `for a in b: for c in d: append(e)` then you can turn it into a comprehension easily: [e for a in b for c in d]`
[20:08:19] <jinsun> pyzozord: with bjs's suggestion `[((x:=inst[11:].split("="))[0], int(x[1])) for inst in insts.splitlines()]`
[20:09:11] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[20:09:36] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[20:09:42] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[20:09:44] <pyzozord> the := is necessary?
[20:09:47] <bjs> well no
[20:09:50] <bjs> you can just repeat the split
[20:10:11] <bjs> or you could use another `for` on the end like you were trying to earlier
[20:10:14] <pyzozord> oh, but then either := or double split is necessary?
[20:10:14] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Client Quit)
[20:10:21] <jinsun> or another loop
[20:10:41] <pyzozord> would you guys mind showing me what is the correct way to do of what I was trying to do?
[20:10:49] <pyzozord> I cannot get it to work
[20:10:53] *** Joins: jmd (~user@de.cellform.com)
[20:11:13] <bjs> pyzozord: well no you could use another `for`
[20:11:30] <bjs> and even that isn't "necessary", there's probably a million different ways to write this
[20:12:24] <pyzozord> I got this now [tuple(axis, int(dist)) for inst in insts.splitlines() for axis, dist in inst.replace('fold along ', '').split('=')]
[20:12:31] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:12:32] <bjs> pyzozord: tuple(a,b) isn't how you make a tuple
[20:12:33] <bjs> it's just (a,b)
[20:12:34] <pyzozord> but I'm getting not enough values to unpack (expected 2, got 1)
[20:12:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:12:59] <pyzozord> ok good to know, but removing "tuple" doesn't help
[20:13:04] <bjs> this is one reason you want to write things out in the long form *first*, because otherwise you make mistakes
[20:13:16] <bjs> pyzozord: well it certainly helps, but maybe you also have another bug :P
[20:13:51] <pyzozord> [(axis, int(dist)) for inst in insts.splitlines() for axis, dist in inst.replace('fold along ', '').split('=')] gives me not enough values to unpack (expected 2, got 1)
[20:13:57] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (Quit: .)
[20:14:21] <bjs> pyzozord: okay before we talk about the comprehension, does this work if you just write the two for loops?
[20:14:28] <bjs> `for inst in insts.splitlines(): for axis, dist in ...`
[20:14:42] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:15:31] <pyzozord> yes
[20:15:37] <bjs> pyzozord: I don't believe you.
[20:15:56] <bjs> `for axis, dist in inst.replace(...).split(...): ...` can't work right?  Because split returns a list of strings
[20:16:06] <pyzozord> it's a simple thing, for each line remove 'fold along ', then split the line by '=', then create a tuple with first part and int of second part
[20:16:20] <jinsun> when you wrote the for loop version you did assignment instead of a second loop
[20:16:38] <jinsun> that is why I went for walrus in the comprehension version
[20:16:45] <bjs> pyzozord: okay but the problem is your second loop there isn't right, it's trying to loop over pairs in the split but a split doesn't give pairs
[20:16:53] <bjs> that's not a comprehension thing that doesn't work even just as normal for loops
[20:17:04] <pyzozord> I think at I am at a loss, would you mind just giving out the answer?
[20:17:18] *** Quits: horner (~textual@host86-141-1-192.range86-141.btcentralplus.com) (Ping timeout: 268 seconds)
[20:17:49] <jinsun> put the inst.replace('fold along ', '').split('=') inside a list
[20:18:00] <jinsun> so you get tuples when you loop over it
[20:18:34] <pyzozord> ok yeah I see that problem
[20:18:38] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:18:40] <pyzozord> it's too deep
[20:18:45] *** Joins: maplefinger (~maplefing@user/lindis)
[20:18:45] <jinsun> `[(axis, int(dist)) for inst in insts.splitlines() for axis, dist in [inst.replace('fold along ', '').split('=')]]`
[20:18:46] <pyzozord> it loops over elements of a tuple
[20:19:15] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[20:19:25] <pyzozord> thank you
[20:19:25] <han-solo> `[(lambda x, y: (x, int(y)))(*v.replace('fold along ', '').split('=')) for v in x.splitlines()]` # yay, unnecessary lambda
[20:19:29] *** Joins: DerpGusta (~quassel@user/derpgusta)
[20:19:30] <pyzozord> I wuldn't have come up with that
[20:20:06] <bjs> pyzozord: https://bpa.st/5R2Q
[20:20:40] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[20:20:51] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[20:21:01] <Payam> Hi is it possible to divide text in multiple lines with it loosing spaces and tabs?
[20:21:48] <pyzozord> why is the second [] necessary?
[20:22:17] <bjs> pyzozord: because `for x, y in ["abc", "def"]` does not work.
[20:22:24] <bjs> but `for x, y in [["abc", "def"]]` does
[20:22:44] <pyzozord> ooh
[20:22:49] <pyzozord> yeah that makes sense
[20:23:45] <pyzozord> is there a way to get rid of the second [] without resorting to := or normal for loops?
[20:23:52] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:24:00] <bluss> Payam: for one thing, .splitlines() does not lose spaces and tabs
[20:24:27] <bjs> pyzozord: yes there's probably millions (literally) ways of writing this;  I don't think it's a good use of our time to sit here and go through each variation ...
[20:25:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:25:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[20:25:27] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[20:25:32] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:25:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:26:04] <bjs> pyzozord: suffice to say, if you can write it as a normal `for` loop in the format `for a in b: if c: for d in e: if f: append(g)` you can turn it into `[g for a in b if c for d in e if f]` in general
[20:26:18] <powftw> ```['', '', '', '', 'john', '']``` this is my list. ```for i in reversed(x): print(i)``` gives me list in reversed order but the index number isn't negative. I was expecting it to go like -1 -2 and so on.. is there any way to get minus indexing in reversed() ?
[20:27:27] <bjs> pyzozord: and Python strings have lots more string manipulation methods than just replace and split https://docs.python.org/3/library/stdtypes.html#string-methods  including slicing, finding, partitioning and not to mention libraries like the `re` regex library
[20:27:47] *** Quits: humbertowoody (~humbertow@187.202.244.149) (Ping timeout: 268 seconds)
[20:28:13] <bjs> powftw: what is `i`?  something is missing from your code
[20:28:16] <pyzozord> so there was multiple things that I had misconceptions about
[20:28:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:28:26] <bjs> powftw: nothing about your code seems to talk about index numbers
[20:28:40] <powftw> x is that list..
[20:28:44] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[20:28:48] <powftw> Sorry, I didn't mention it .
[20:29:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:29:13] <pyzozord> I thought that for a in b: for c in d translates to [c in d for a in b] or something like that
[20:29:30] <bjs> pyzozord: no that's backwards, the for loops are in the same order
[20:29:33] <powftw>  ```for i in enumerate(reversed (x))```
[20:29:33] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:29:59] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[20:30:10] <powftw>  ```x=['', '', '', '', 'john', '']```
[20:30:11] <bjs> powftw: ah, yes. You want it to start from -1 and go backwards?  enumerate() can't do that
[20:30:25] <powftw> oh
[20:30:28] <powftw> What else can?
[20:30:36] <maplefinger> whats wrong with just multiplying by -1
[20:30:45] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[20:30:50] <powftw> True
[20:30:56] <bluss> you can zip your iterator with any other sequence
[20:30:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:31:02] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 240 seconds)
[20:31:04] <powftw> Or simply putting minus is enough ig
[20:31:04] <bjs> powftw: well you can start from 1 and go up (and then just negate it), you can zip with any arbitrary iterable (e.g. of negative counts
[20:31:19] <bjs> powftw: or if you're okay with positive indexes you can reversed(list(enumerate(x)))
[20:31:25] <bluss> don't just multiply with -1, then 0 => 0 which is probably wrong for you
[20:32:36] <powftw> There's a big difference. Enumerated will only start with Zero where negative index starts from -1
[20:32:43] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:32:48] <bjs> powftw: no enumerate can start from anywhere you want, but it only goes up
[20:32:58] <bjs> powftw: see the `start` argument https://docs.python.org/3/library/functions.html#enumerate
[20:33:03] *** gitesh is now known as Orbbit
[20:33:04] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[20:33:06] <maplefinger> should be fine, they want to report the index, but after reversing, they want the "reversed" index number
[20:33:27] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:33:35] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[20:34:48] <powftw> btw, what's the issue with multiplying with -1
[20:34:51] <powftw> It does work
[20:38:04] *** Joins: kdc (~kdc@196.211.197.159)
[20:39:01] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:39:12] *** Joins: node1 (~hex@user/node1)
[20:40:01] *** Joins: sedeki (~textual@user/sedeki)
[20:41:43] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:42:02] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:42:05] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:42:32] <pyzozord> can I in python do something like for x as list(x) in foo: ?
[20:42:32] <powftw> ```for i in enumerate(reversed(x),start=1): i[0]*-1```
[20:42:36] <powftw> Job done
[20:42:40] <powftw> ✅
[20:42:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:43:11] <node1> Any ideas to define a binary tree using classes? Like for tree class and for node another class? is it good to have?
[20:43:58] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[20:44:53] <Togra> you can certainly make a binary tree with classes, is there anything in particular you're trying to do that might be weird?
[20:44:53] <Yhg1s> pyzozord: as if you did 'for x in foo: x = list(x); ...'? No.
[20:45:10] <node1> Togra, https://stackoverflow.com/questions/2598437/how-to-implement-a-binary-tree
[20:45:13] <Togra> should be fine to make a class that has left/right properties that can either be None or holding another of the same class
[20:45:27] <Payam> Does a async function have to await something?
[20:45:44] <deniska> Payam: no, but if it doesn't await anything, chances are it shouldn't be async
[20:45:45] <Togra> in theory you could do this with dicts or lists containing more dicts/lists too if you want, which is best probably just depends on your circumstances or possibly even preference
[20:46:00] <pyzozord> Yhg1s: yeah like that except without overriding it
[20:46:03] <Payam> well then I need to make a executor to execute that function?
[20:46:07] <node1> I'm confused here. Which one is the best options to go?  seprate class node and class Tree or just simply node
[20:46:14] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[20:46:16] <Payam> and it will be alot of executors right deniska
[20:46:18] <Togra> no idea, I think it's up to you?
[20:46:18] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[20:46:33] *** Joins: nomic (~nomic@51.52.78.152)
[20:46:35] <node1> Even using nested list we could make tree.
[20:46:38] <Togra> depending on your needs, any of a variety of implementations might be equally fine
[20:46:51] *** Joins: zothix (~zoth@user/zothix)
[20:46:56] *** Quits: ejjfunky (~ejjfunky@125.163.60.19) (Quit: Leaving)
[20:47:32] <Togra> it's possible though a bit of an ordeal to run a binary search on a flattened list, too, rather than a tree, but it all depends on the specifics of what you're doing
[20:47:50] <zothix> Hi i am running multiple threads on a python application and i am getting this error, ( if i reduce the number of threads to 1, i dont get any error ) => free(): invalid next size (normal) , Process finished with exit code 134 (interrupted by signal 6: SIGABRT)
[20:47:59] <node1> Even with dictionary. It's really easy to make non-linear data structure using Python or any higher language, unlike with C it's bit lengthy
[20:48:11] <zothix> other then that even 2 threads will give error
[20:48:32] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:48:53] <Yhg1s> zothix: sounds like you're doing something that's not thread-safe. It's hard to say what without seeing the code and more details about the failure, though.
[20:49:28] <zothix> Yhg1s, let me comment out the code, and send dpaste
[20:49:32] <zothix> brb
[20:49:41] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:473:1574:9dd9:d01)
[20:50:00] <Soni> y'know as much as we think python packaging is a pain, we do appreciate how flexible it is about URLs
[20:50:11] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:50:27] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[20:51:11] <Soni> you can just set homepage, funding, docs, repository and ganarchy URLs. you can literally just do it today. it doesn't require wasting two years of your life arguing with developers about whether or not those things should be supported.
[20:51:54] <node1> Using C one need to use struct enum
[20:52:03] *** Joins: luigibu (~luigi@80.30.201.209)
[20:52:05] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:52:09] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[20:52:15] <Payam> I have a dictionary like this. What is the fastest way of getting the sum of sizes?
[20:52:44] <Payam> https://bpa.st/RVGA
[20:52:58] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[20:53:00] <node1> well i think the advantage of using higher level language is that we could solve many real world business problems using "Yes or No" in directly.
[20:53:19] <yitz> Payam: sum() and a generator expression?
[20:53:23] <Yhg1s> Payam: sum(result['size'] for result in your_dict['results'])
[20:53:42] *** Quits: awmv_ (~awmv@2a02:21b0:644f:c181:59d8:9a55:4680:634f) (Ping timeout: 268 seconds)
[20:53:44] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[20:54:00] <zothix> Yhg1s, https://dpaste.org/HS6J
[20:54:14] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:a6e9:4af8:654:3268) (Remote host closed the connection)
[20:54:15] <zothix> this is not a run able code as it doesnt have the data its processing
[20:54:22] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:54:22] <mehwork> if i unit test a lambda handler, is that considered a unit test because it tests one handler or an integration test or something else?  I'm using the same unit test/mocking framework
[20:54:32] <zothix> but you can see the thread initialization and what i am doing with it is plain simple
[20:56:04] <Yhg1s> zothix: well, without more information about the failure I'm just guessing, but I'm going to guess the extension module you're using isn't thread-safe, or you're passing shared data in a thread-unsafe way.
[20:56:07] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[20:56:07] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[20:56:29] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[20:56:49] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[20:56:56] <zothix> Yhg1s, the thread has 3 parameters, x1, y1, process, all of those variables are changed for every thread
[20:57:26] *** Joins: dez (uid92154@user/dez)
[20:57:29] <zothix> only thing the threads have in common is appending to class variables their results
[20:58:00] <zothix> Yhg1s, this is the code  https://dpaste.org/HS6J if it helps with more information
[20:58:06] <Yhg1s> zothix: that sounds like shared data.
[20:58:19] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.162) (Ping timeout: 250 seconds)
[20:58:23] <Yhg1s> zothix: yes, I looked at the code.
[20:58:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[20:58:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1b9c:d4d6:c8fb:c24f)
[20:58:26] *** Joins: arinov (~arinov@213.194.126.155)
[20:58:31] <zothix> Yhg1s, even if i comment out those appending of class variables i still get the error
[20:58:33] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:58:45] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[20:59:12] *** Joins: Betal (~Betal@user/betal)
[20:59:15] <Yhg1s> zothix: sounds like it's one of the other things I mentioned then. Again, still guessing, because you'll have to look more closely at the error to find out what might be causing it. Which isn't easy, since it's probably an error in an extension module, and it was probably built without debug symbols.
[20:59:36] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:473:1574:9dd9:d01) (Remote host closed the connection)
[20:59:41] <zothix> like how do i get more logs of error? it only gives me those 2 lines
[20:59:59] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[21:00:02] <NeilRG> hello
[21:00:03] <zothix> only extension module i am using is python statsmodels
[21:00:12] <NeilRG> could someone help understand this mypy error? https://mypy-play.net/?mypy=latest&python=3.10&gist=5722053b91845385dd0e5956f9bb8946
[21:00:27] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[21:00:38] <zothix> Yhg1s, here is one more funny thing, no matter how many threads if i use pycharm coverage tool, it doesnt give any error
[21:02:01] <zothix> and on normal execution error changes as well, like in this new run i got this error : double free or corruption (!prev), Process finished with exit code 134 (interrupted by signal 6: SIGABRT) "
[21:02:19] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[21:02:43] *** Quits: thevishy (~Nishant@2405:201:f005:c007:81f3:ee3c:76f0:8869) (Ping timeout: 252 seconds)
[21:03:16] *** Joins: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de)
[21:04:44] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f180:83fa:cae:718e) (Quit: Leaving)
[21:04:47] *** Quits: ericlee (~ericlee@2601:647:4681:3420::3) (Ping timeout: 268 seconds)
[21:04:59] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[21:05:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:05:39] <NeilRG> I don't understand why the overload isn't working
[21:06:15] <coc0nut> anyone tried the ssh remote extension (remote developer extension) in vs code?
[21:06:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:07:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:07:12] <Swayze> ye
[21:07:25] <Swayze> is that the question... i suspect theres more :p
[21:07:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[21:07:43] <coc0nut> i have a issue, cpu runs overloading while connecting to server
[21:07:49] <coc0nut> :p
[21:07:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:08:46] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 256 seconds)
[21:08:47] <Swayze> that sounds like a bug ;-)
[21:09:06] <Swayze> so its using 100% cpu?
[21:09:09] <coc0nut> pretty much feels like it
[21:09:16] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[21:09:18] <coc0nut> yeah, and googling several people has the same issue
[21:09:18] <Swayze> did you check the cpu usage to confirm?
[21:09:21] <Swayze> right
[21:09:31] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:f159:de3a:6832:71fa)
[21:09:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:09:51] <Swayze> if you didnt find a solution on google its unlikley you'd find one here
[21:10:01] <Swayze> particularly as this is a vs code /plugin issue
[21:10:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:10:41] *** Joins: WarpedAI (~Warped@user/warped)
[21:10:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:10:45] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:10:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:12:17] <coc0nut> yeh, well the developer remote extension is what vscode needs to be complete :p a really nice idea when you can just add a ssh connection as your workspace so you can have whole computers in a workspace. remotely. so hope itll be fixed :p
[21:12:26] *** Joins: kostkon_ (~androirc@ppp-94-66-131-50.home.otenet.gr)
[21:12:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0)
[21:12:37] *** Joins: millido (~millido@84.210.150.128)
[21:12:42] <Swayze> yeah it is a really great idea
[21:12:51] <Swayze> why not write it yourself xd
[21:13:02] <Swayze> sometimes you just got to do things yourself to do it right
[21:13:12] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 265 seconds)
[21:13:13] *** Joins: newbie|2 (~Warped@user/warped)
[21:13:19] *** Quits: DerpGusta (~quassel@user/derpgusta) (Read error: Connection reset by peer)
[21:13:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Remote host closed the connection)
[21:13:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:13:40] *** Joins: DerpGusta (~quassel@user/derpgusta)
[21:13:43] *** Joins: bauripalash (~bauripala@2401:4900:382a:515c:1:2:a29c:7fac)
[21:15:00] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:15:02] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[21:15:07] <dlam> 2
[21:15:50] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:16:17] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 252 seconds)
[21:16:48] *** Quits: bauripalash (~bauripala@2401:4900:382a:515c:1:2:a29c:7fac) (Client Quit)
[21:17:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:17:48] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[21:18:04] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[21:19:59] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[21:20:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[21:21:44] *** Joins: ErkiS (~opera@62.65.198.13.cable.starman.ee)
[21:21:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:22:10] *** Joins: faLUKE (~paolo@host-79-37-180-53.retail.telecomitalia.it)
[21:22:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[21:23:16] *** Joins: ericlee (~ericlee@2601:647:4681:3420::3)
[21:23:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[21:24:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:24:04] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:24:59] *** Joins: fikran (~fikran@user/fikran)
[21:25:05] <ErkiS> is there a faster wrapping library than the built-in textwrap?
[21:25:11] <mojoberlin> Hello, can someone help me with my Visual Studio Code project? It's about a CSV file that doesn't show all the columns. Here are two screenshots for understanding  https://imgur.com/3eH29zn https://imgur.com/2bwIiYx
[21:26:03] <faLUKE> hello. Which is a convenient way to merge a VECTOR image on a PDF? I checked PyPDF2, but can't find an option for specifying the position of the image... I don't want to use PIL (I don't like its license)
[21:26:10] *** Joins: guardian (~guardian@planet-d.net)
[21:27:04] *** Joins: humbertowoody (~humbertow@187.202.244.149)
[21:28:14] <han-solo> mojoberlin: `pd.set_option('display.max_columns', None)`
[21:28:37] <han-solo> same can be done for the `rows` if required
[21:29:19] *** Joins: Knaxius (~Knaxius@user/Knaxius)
[21:29:21] *** Quits: jcsteele (~jcsteele@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Quit: leaving)
[21:29:45] <mojoberlin> hi han-solo i will try it thx :)
[21:29:56] *** Quits: DXR (~lyrical@77.49.234.159.dsl.dyn.forthnet.gr) (Ping timeout: 245 seconds)
[21:30:22] <han-solo> https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html
[21:31:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:31:30] *** Joins: DaNeenjah (~jake@adsl-74-230-7-13.hsv.bellsouth.net)
[21:31:34] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:31:52] <mojoberlin> thx for this info han-solo
[21:32:03] *** Joins: DXR (~lyrical@193.92.178.179.dsl.dyn.forthnet.gr)
[21:32:06] <han-solo> no problem
[21:33:19] <mojoberlin> you rare my hero @han-solo :)
[21:35:44] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:36:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:36:06] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:36:25] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:37:43] <Julian> ErkiS: It'd be pretty surprising if that were ever your bottleneck -- you have a profile output where that's the case?
[21:37:51] <Julian> ErkiS: If you ever did, I'd look for some C library to do it.
[21:39:13] *** dcaro is now known as dcaro_away
[21:40:03] *** Joins: dbristow_ (~dbristow@user/dbristow)
[21:40:50] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:41:00] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[21:41:17] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:41:25] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 240 seconds)
[21:42:37] <stewie925> hey guys, I am brushing up on my pandas and numpy and looking to install Jupyter notebook
[21:43:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:43:32] <ErkiS> Julian: I have made a somewhat custom version of textwrap, as I need to format text with ANSI colour codes. and yes. the _wrap_chunks() method is a bottleneck.
[21:45:04] *** Joins: nomic2 (~nomic@51.52.78.152)
[21:45:14] <stewie925> to those using Jupyter notebook today using Mac - would 'pip install jupyterlabs' suffice?  I believe we can install numpy and pandas on our machine.   I hate to install the whole anaconda suite
[21:45:24] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[21:45:44] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:46:19] <mojoberlin> stewie925  👍
[21:46:31] *** Joins: CombatVet (~c4@user/combatvet)
[21:46:32] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[21:46:43] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:4902:9bb3:20fb:8ed4) (Ping timeout: 268 seconds)
[21:47:10] <stewie925> hi mojoberlin
[21:47:33] <stewie925> thank you - I'll give it a shot:) .
[21:47:53] <ErkiS> Julian: I'd rather avoid a C library, because I need the custom logic of ignoring ANSI codes in wrap calculations
[21:48:01] *** nomic2 is now known as nomic
[21:48:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:48:52] <mojoberlin> stewie925 we are working on a little college project with VSC Jupyter Notebook & Pandas and large csv frame
[21:49:37] *** Joins: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de)
[21:49:42] <Wooble> ErkiS: you could write it in C yourself with the logic you need; you're probably unlikely to get much faster than the stdlib implementation in pure python.
[21:49:43] <stewie925> ah youre using VSCode and installed jupyter notebook extension on it
[21:49:43] <mojoberlin> stewie925 i am bloody beginner :)
[21:49:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:50:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:50:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:50:46] <stewie925> no worries, mojoberlin
[21:51:03] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6930:8476:afb9:3a7f) (Ping timeout: 268 seconds)
[21:51:27] <stewie925> I'll try the vscode Jupyter notebook... checking back later to share my results
[21:51:42] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:781:abb1:8fdf:7f2b)
[21:52:12] <mojoberlin> stewie925 goal is a visual design for stakeholders
[21:52:29] *** Joins: hackers_ (~self@user/hackers)
[21:52:29] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:52:48] <mojoberlin> stewie925 👍
[21:52:49] *** Quits: hackers_ (~self@user/hackers) (Client Quit)
[21:53:17] *** Joins: dohtem (uid524096@user/dohtem)
[21:54:00] <Wooble> ErkiS: (well... maybe the spots that add the indent to the start of the string with +, even if it's empty, could be micro-optimized :) )
[21:54:12] *** Joins: xkuru (~xkuru@user/xkuru)
[21:54:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:55:12] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[21:55:22] *** Quits: nomn (nomn@user/nomn) (Quit: WeeChat 3.2)
[21:57:22] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[21:57:44] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[21:58:41] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd)
[21:59:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:59:51] *** Quits: delvian (~delvian@41.5.27.233) (Ping timeout: 250 seconds)
[22:00:18] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[22:00:34] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[22:00:48] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:01:54] *** Joins: apteryx (~maxim@dsl-10-141-188.b2b2c.ca)
[22:02:30] <Julian> ErkiS: Yes, if you're in this situation you probably get to roll your own, though finding a C lib that does text wrapping by visible characters doesn't seem unlikely to me
[22:02:36] <Julian> Look through what each of the editors use
[22:02:44] <apteryx> hello, is it OK to concat strings using ('string1'\n + 'string2'\n + 'string3'), where \n is actual new lines in the source file?
[22:02:49] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:f159:de3a:6832:71fa) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:50] <Julian> ErkiS: After that though yeah CFFI is your friend.
[22:02:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:03:52] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[22:03:53] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800a96a628b77b4b9db.ipv6.abo.wanadoo.fr)
[22:03:57] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[22:03:58] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[22:04:07] <apteryx> seems to work, yet flake8 says 'W503 line break before binary operator'
[22:04:36] *** Joins: audiocat (~audio@user/audio)
[22:05:04] <ErkiS> Julian: I think I'll forgo C, and try to optimize what I have
[22:05:16] <bjs> apteryx: yes it works.  flake8 probably wants you to put the + on the newline too because it thinks it looks better
[22:07:09] *** Joins: magla (~gelignite@55d43df6.access.ecotel.net)
[22:07:35] <apteryx> haha, no, it seems flake8 doesn't know that parethesises make it OK; but nobody must care because W503 is disabled by default; it was enabled in my case due to using a .flake8 with an ignore line in it (it should have been extend-ignore instead)...
[22:08:34] <apteryx> err, parentheses*
[22:08:42] <summonner> apteryx, what version of python are you using?
[22:08:50] <apteryx> 3.9.6
[22:09:28] <summonner> with f-strings you could change this into   print(f"{string1}\n{string2}\n{string3}")
[22:09:39] <bjs> apteryx: if flake8 didn't know about the parens it would've complained about it being invalid syntax no?
[22:09:46] <bjs> summonner: i think you misunderstood apteryx's question
[22:09:58] <madduck> summonner: "\n".join((string1, string2, string3)) will be faster
[22:10:00] <bjs> i don't think they actually wanted any newline charactrs in their strings
[22:10:42] <apteryx> if I move things around it now says W504 line break after binary operator
[22:11:01] <bjs> apteryx: if flake8 didn't know it was okay, then wouldn't it give some kind of invalid syntax error instead of a warning?  kind of weird
[22:11:16] <apteryx> I think I've read in PEP 8 that operators on continued lines should appear at the beginning for readability
[22:11:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[22:11:39] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[22:11:39] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[22:11:51] <summonner> sounds like the  \n is not inside a string?
[22:12:33] <apteryx> yeah, it's in the source file; actual snippet: https://paste.debian.net/1223300/
[22:12:34] <summonner> "where \n is actual new lines in the source file?" is a little confusing to me
[22:12:49] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:3b12:6706:4ee5:604d)
[22:13:07] <bjs> apteryx: what version of flake8 do you have
[22:13:31] <apteryx> flake8 --version says: '3.9.1 (mccabe: 0.6.1, pycodestyle: 2.7.0, pyflakes: 2.3.1) CPython 3.9.6 on Linux'
[22:14:03] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:14:18] <summonner> apteryx, those brackets are redundant btw
[22:14:22] <bjs> apteryx: hmm, not the most up-to-date but fairly recent.  Maybe it's just being overly pedantic
[22:14:36] <bjs> summonner: no they're not.
[22:15:27] <Wooble> apteryx: https://github.com/mila-iqia/cookiecutter-pyml/issues/10
[22:16:05] *** Joins: djapo (~archangel@user/djapo)
[22:17:12] <bjs> Oh I see
[22:17:20] <bjs> PEP 8 used to say it had to be before the newline,  now it says it has to be after
[22:17:30] <bjs> so pycodestyles has two warnings -- one for each
[22:17:32] <bjs> disable both? :P
[22:17:43] <Wooble> apteryx: err, related but not actually from flake8. anyway, recent versions should have W504 in default ignore list; did you explicitly make your own ignore list that replaces it?
[22:17:57] <supay> bjs, or just ignore them.
[22:17:59] *** hackers is now known as remote
[22:18:52] <summonner> forcing a string concatenation over multiple lines is more obvious with    + \    at the end
[22:19:33] <summonner> but that could be the linux in me
[22:19:33] <Julian> they do different things
[22:19:33] <bjs> Well I say it's more obvious if you put + on the beginning of each newline
[22:19:38] <Wooble> ew
[22:19:43] *** Joins: sjk (~sjk@user/sjk)
[22:19:49] <Julian> in general I agree with what whichever style thing recommends
[22:20:02] <Julian> which is don't do implicit concat unless you put it in parens, or it's the only arg
[22:20:13] <Julian> (flake8-someplugin)
[22:20:42] <Wooble> in this case they're adding lists, not strings, anyway :P
[22:21:11] <Wooble> (the real question is why you're manipulating sys.path :) )
[22:21:29] <bjs> Sometimes you just need to put sys.path in its place, so it knows who is boss
[22:21:29] <sjk> What is the best way to set up python on macOS in 2021? Homebrew? Pyenv? Something else?
[22:21:52] <Wooble> "install windows with bootcamp"?  *hides*
[22:21:56] <mefistofeles> hah
[22:22:14] * summonner hands Wooble a shovel and starts chanting "dig! dig! dig!"
[22:22:15] <gbristol> i use pyenv
[22:22:32] <gbristol> so i can just leave the OS X python alone
[22:22:39] *** Joins: Naan` (~Naan@user/naan)
[22:22:46] <supay> Wooble, and python within docker on top of the dual-boot windows
[22:23:37] <mefistofeles> supay: no no, that would be crazy, it is python within docker on a WSL running in a windows VM on a Linux host
[22:23:58] <supay> mefistofeles, now you're talkin'!
[22:24:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:22] <summonner> azure, anyone?
[22:24:35] *** Joins: lethu (~lethu@user/lethu)
[22:24:42] * supay kicks summonner out of the multiverse
[22:24:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:24:56] <supay> how dare you use anything but alibaba cloud, imbecile!
[22:25:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:25:35] <apteryx> Wooble: I saw this coming ;-), it's provided by Guix as its sitecustomize.py; used to make available packages found in the custom GUIX_PYTHONPATH (an environment variable used to specify where packages can be found, as Guix is not a file hieararchy standard (FHS) distro)
[22:26:48] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[22:27:53] <stewie925> sjk: I remember I used homebrew to install python
[22:27:58] *** Joins: Klinda (~superleag@user/klinda)
[22:28:28] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:28:54] <causasui> supay: I think you meant "metaverse"
[22:30:21] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:30:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[22:30:25] *** ayusta is now known as ayustae
[22:30:30] <supay> +1
[22:31:22] *** Quits: wlemuel (~user@210.22.124.110) (Read error: Connection reset by peer)
[22:31:30] *** Quits: zothix (~zoth@user/zothix) (Remote host closed the connection)
[22:32:10] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[22:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:32:18] <NeilRG> which is the best way to access builtins?
[22:32:28] <sudomann> since the m in cp37m is for malloc, what is the use of malloc?
[22:32:30] <NeilRG> import builtins, __builtins__, or __builtin__?
[22:32:31] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:32:50] <sudomann> Why does this one feature have its own identifier?
[22:32:56] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[22:33:04] <O[A]code> why wouldent this catch an exeption?
[22:33:05] <O[A]code> https://pastebin.com/zBc8CP9A
[22:33:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:34:40] <Togra> that'll only catch the specific exception you've set, NoSuchElementException, if you get any others they'll go uncaught
[22:34:55] <Togra> if you're sure that's the only exception you want to catch though, then you've done it right
[22:35:13] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:35:23] <O[A]code> its not catching the no such element
[22:35:25] <O[A]code> lol
[22:35:31] <Wooble> O[A]code: won't trying to find the element throw the exception, rather than the .click()?
[22:35:42] <O[A]code> no
[22:35:48] <O[A]code> its fin if theres is no exeptions it runs
[22:35:49] <jinsun> NeilRG: there is also the possibility of just using them directly, without going through any of those
[22:35:56] <stewie925> mojoberlin: VSCode Jupyter notebook extension does work
[22:36:02] <Wooble> O[A]code: can you pastebin the whole traceback?
[22:36:03] <O[A]code> but the second it hits one it stops
[22:36:09] <NeilRG> jinsun: yeah unfortunately the file I'm editing has shadowed a builtin (yuck)
[22:36:13] <O[A]code> thats why im trying to exept: pass
[22:36:26] <O[A]code> but its giving me grief for some reason, as far as i can tell syhtnax is ok
[22:36:29] *** Quits: faLUKE (~paolo@host-79-37-180-53.retail.telecomitalia.it) (Quit: Konversation terminated!)
[22:36:46] <mojoberlin> stewie925 ?
[22:36:46] <jinsun> NeilRG: okay then import builtins is the best way, and builtins.thing is the best way
[22:36:54] <NeilRG> jinsun: thanks
[22:37:48] *** Joins: humberto1 (~humbertow@187.202.244.149)
[22:38:30] <Wooble> sudomann: https://docs.python.org/3/c-api/memory.html#pymalloc has some details of how pymalloc differs from regular malloc. I'm not 100% sure why it needs its own tag, but can certainly imagine an extension expecting to manage memory one way going horribly wrong when it can't. :)
[22:38:48] <O[A]code> yup woodle give me a second
[22:39:17] <stewie925> mojoberlin: haha, nevermind  - I assumed you use Visual Studio Code (vsc) maybe you don't
[22:39:34] <O[A]code> https://pastebin.com/yC5wcW0s
[22:39:49] <O[A]code> and i did import the nosuchelementexception before you ask :)
[22:39:59] <mojoberlin> stewie925 i am use vsc
[22:40:31] <Wooble> O[A]code: yes, the line that's getting the exception is outside the try: block. You want the .find_element_by_xpath call inside the try: instead of before it.
[22:40:50] <O[A]code> oh jeesus
[22:40:52] <mojoberlin> stewie925 but no clue how everything works :)
[22:40:53] <O[A]code> thanks
[22:40:59] *** Quits: humbertowoody (~humbertow@187.202.244.149) (Ping timeout: 268 seconds)
[22:41:20] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[22:41:40] <mojoberlin> stewie925 nxt callenge how to use numpy in vsc
[22:42:26] <mojoberlin> stewie925 but for now it's enough
[22:42:43] *** Quits: mojoberlin (~mojoberli@p50894502.dip0.t-ipconnect.de) (Quit: Client closed)
[22:44:51] *** Joins: pgib (~textual@173.38.117.69)
[22:45:01] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:20] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[22:45:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:45:50] *** Joins: sharksauce (sharksauce@user/sharksauce)
[22:46:40] <jfcaron> Is there a good way to add a @property to an existing @property?
[22:46:57] <jfcaron> Like I have someobj.prop1 which is a property, but I want to also add someobj.prop1.prop2
[22:47:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:47:11] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:12] <teut> you need two classes
[22:47:23] <teut> jfcaron
[22:47:33] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[22:47:44] <jfcaron> I know if I make an inner class for prop1 I can then use @property for prop2
[22:47:56] <jfcaron> but I guess I'd have to hand-write the setter/getter things for prop1?
[22:48:12] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[22:48:41] <sudomann> Wooble: thanks
[22:48:51] <teut> ya and why is that a problem?
[22:49:04] *** Joins: Maikel (~Maikel@130.61.63.136)
[22:49:17] <jfcaron> Not a big problem, just more work and I gotta read the docs on getters and setters. =p
[22:50:43] <jinsun> what do you mean by "hand write" getter setter? prop1 can still be a property
[22:50:56] <teut> https://www.programiz.com/python-programming/property
[22:51:01] <teut> see here
[22:51:40] *** Joins: LimeOn (~user@user/limeon)
[22:51:51] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:52:13] <jinsun> the class that has prop1 will have @property def prop1, and prop1 will return an instance of another class that has @property def prop2
[22:52:26] <teut> https://www.programiz.com/python-programming/property#decorator see this
[22:52:43] <teut> its so simple
[22:53:49] *** Quits: Andrynet (~Andrynet@190.152.211.201) (Ping timeout: 252 seconds)
[22:53:52] <teut> how does the delete works but? I didnt know about it
[22:54:02] *** Quits: Orbbit (uid423739@id-423739.ilkley.irccloud.com) (Quit: Updating details, brb)
[22:54:07] <teut> property(fget=None, fset=None, fdel=None, doc=None)   fdel is function to delete the attribute
[22:54:29] <jfcaron> If your class needs a special destructor you can use it
[22:54:38] <jfcaron> Like to close a file handle or something.
[22:55:22] *** Quits: Knaxius (~Knaxius@user/Knaxius) (Quit: bye)
[22:55:23] <Wooble> del'ing an attribute is fairly unusual/niche
[22:55:35] <jfcaron> jinsun: "prop1 will return an instance of another class that has @property def prop2", but prop1 is just a `str` property?
[22:55:52] *** Joins: Andrynet (~Andrynet@186.46.205.112)
[22:56:15] <bjs> jfcaron: if prop1 just returns a str, then the str doesn't have any prop2 property
[22:56:17] <bjs> so you can't do that
[22:56:32] <jfcaron> I need to make prop1 a small class that has a str value in it but also prop2
[22:56:35] <bjs> If you want obj.prop1.prop2 to work then obj's class needs a prop1 property whose getter returns an object with a prop2 value
[22:56:46] <jfcaron> Right
[22:56:57] <bjs> jfcaron: well you need the prop1 @property to return some object that has a prop2 property/attribute, yeah
[22:57:01] <teut> so do we got    @temperature.delete too?
[22:57:07] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[22:57:11] <Wooble> teut: `.deleter`
[22:57:14] <bjs> teut: why not check the actual documentation for property
[22:57:20] <teut> ok
[22:57:26] <bjs> teut: https://docs.python.org/3/library/functions.html#property here
[22:58:59] <teut>   here  they used   self._voltage   in __init__  https://docs.python.org/3/library/functions.html#property
[22:59:01] <bjs> teut: see "A property object has getter, setter, and deleter methods usable as decorators that create a copy of the property with the corresponding accessor function set to the decorated function. "
[22:59:16] <teut> in that programiz example  , they did self.temperature
[22:59:40] <teut> this I couldnt understand
[22:59:57] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:59:59] <bjs> teut: well one of them sets the "_voltage" attribute, the other calls the temperature property setter
[23:00:04] <bjs> which do you not understand?
[23:00:37] *** gitesh is now known as orbit
[23:00:53] <O[A]code> Wooble, still no go
[23:00:55] <O[A]code> https://pastebin.com/J4GVQpkg
[23:00:59] <teut> instantiating Celcius(37)  calls the setter
[23:01:03] <O[A]code> dont think anything has changed in the traceback but just incase
[23:01:07] *** orbit is now known as Guest6035
[23:01:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:01:33] <teut> why didnt they do  self._temperature = temperature?
[23:01:42] *** Joins: ubert (~Thunderbi@p200300ecdf1abbd3ca03b07f10ffc657.dip0.t-ipconnect.de)
[23:01:48] *** Guest6035 is now known as Orbbit
[23:01:51] <bjs> teut: because they wanted to use the setter to set the temperature
[23:02:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:02:41] <bjs> teut: because the point of their temperature property is so that it can check that it's a valid temperature. So they can use that setter in __init__ to do the checks for them again
[23:02:53] *** Orbbit is now known as gravity
[23:03:11] <bjs> teut: the setter *is* doing `self._temperature = temperature` in the end anyway (after doing that check)
[23:03:29] <teut> yes, I understand it now, thanks
[23:04:23] <Wooble> O[A]code: well, it's s10 = instead of s6... so a different block of code.
[23:05:02] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[23:05:25] <O[A]code> yeah because the page i am scanning has changed :P
[23:05:36] <O[A]code> but the lines are identicle
[23:05:43] <teut> is the __init__ the constructor in python?
[23:05:47] *** gravity is now known as theSpaceShuttle
[23:05:49] <jfcaron> yes
[23:05:53] <Wooble> ...ish
[23:05:55] <teut> someone asked it
[23:06:04] <O[A]code> i could just use find elements insted of find element and use if element present click()
[23:06:08] <NeilRG> "ish" is a perfect way to describe it
[23:06:14] <teut> there is __new__ too
[23:06:14] <O[A]code> but i WANT to know wihy its not wotking lol
[23:06:17] <Wooble> O[A]code: well, check where the try: is around line 150
[23:06:26] <teut> thats the classmethod
[23:06:35] <O[A]code> i checked its fine
[23:06:40] <NeilRG> never use __new__ unless you absolutely have to
[23:06:41] <teut> unnamed classmethod
[23:06:43] <Wooble> O[A]code: then I guess your code works.
[23:06:52] <O[A]code> well it doesent LOL
[23:06:54] <O[A]code> but it should!
[23:07:08] <Wooble> teut: technically __new__ constructs the object, then __init__ initializes it.
[23:07:44] <teut> whats construction and initialization ?
[23:07:45] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[23:07:54] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[23:08:11] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[23:08:16] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[23:08:34] <teut> in __new__ you can attach and modify the class's properties, in __init__ the instance's
[23:08:45] <bjs> teut: you construct a house, but there's nothing in it. Then you can "initialise" the house by painting it and putting furniture in
[23:08:46] <Wooble> teut: __new__ makes an actual object. __init__(that_object, args...) is called to do stuff to it after. But everyone *calls* __init__ the "constructor" because it's analagous to the ones in other OOP languages
[23:08:47] <bjs> :)
[23:09:18] <teut> what kind of analogy is that bjs, went over my head totally
[23:09:37] <bjs> teut: really?  __new__ makes new objects that don't have anything in them.  Then __init__ is called so you can put stuff on them
[23:09:49] <bjs> teut: probably you will go your entire career using Python and never write a __new__ method
[23:09:52] <bjs> so you can forget about it
[23:10:38] <teut> why dont we face this in c++?
[23:10:44] <aphysically> jinsun: we can turn the inner loop into a couple comprehensions too https://bpa.st/Z7GA
[23:10:47] <Wooble> (I don't think the language reference ever calls __init__ the constructor; I think the only time the official docs use the word it's referring to using the class's name as a callable.)
[23:11:09] <teut> ya thats why I asked Wobble
[23:11:14] <teut> Wooble*
[23:11:27] <bjs> teut: you do deal with this in all languages, it's just some don't give actual names to the real constructor.
[23:11:27] <teut> I was asked this in an interview
[23:11:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:11:46] <bjs> teut: Python gives a name to __new__ because Python is very dynamic and lets you hack around with this stuff.
[23:11:51] <teut> whats  constructor in python
[23:12:03] <bjs> if someone is asking you about __new__ in a Python interview I would guess that the giver of said interview learned about __new__ 5 minutes before and wanted to show off
[23:12:09] <bjs> there is almost 0 reason to ask about it
[23:12:16] <Wooble> teut: they almost certainly meant __init__ unless they were trying to see how pedantic you can be :)
[23:12:24] *** theSpaceShuttle is now known as Spaceflight
[23:12:27] <bjs> ^ and were just using the terminology incorrectly
[23:12:32] <bjs> which is probably more likely
[23:12:33] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:12:39] <teut> I agree to it, the next time someone asks me this, I will throw a metaclass at them
[23:12:48] <Wooble> if they went on to ask you about metaclasses... then I might wonder. :)
[23:13:15] <teut> do not worry here devs do not know more than cs books
[23:13:29] <bjs> teut: what do you mean,  what about cs books?
[23:13:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:13:41] *** Joins: somlis (~somlis@user/somlis)
[23:13:47] <teut> your standard dbms, oop in java, os by tanenbraum
[23:13:50] *** Quits: Spaceflight (uid423739@id-423739.ilkley.irccloud.com) ()
[23:14:00] *** Joins: djapo (~archangel@user/djapo)
[23:14:06] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[23:14:16] <bjs> teut: what about them?
[23:14:27] <teut> when they ask oop, they expect the candidate to automatically understand that they are talking about java
[23:14:48] <teut> I am saying they no no more than that
[23:14:54] <teut> know no*
[23:15:27] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:15:30] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[23:15:51] <teut> they write python as scripting languages and object oriented languages such as java c++
[23:16:03] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[23:16:40] <bjs> teut: I feel like you're just ranting based on some generalisation of interviews/whatever now?
[23:16:48] <bjs> Do you have any more Python questions?
[23:16:55] <jinsun> aphysically: I forgot how it looked before, but I'm guessing that set union did the trick? and nice, no complaints from pyright too
[23:17:20] <teut> so what should I saw if someone asks explain constructor in python/
[23:17:21] <teut> ?
[23:17:23] <teut> say*
[23:17:43] <aphysically> I'm going to see if I can make a mapping solution work
[23:18:14] <teut> and whats use of staticmethod they do ask
[23:18:40] *** Joins: sazawal (~sazawal@122.161.88.88)
[23:18:56] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd) (Quit: smeeagle)
[23:19:29] *** Quits: greedom (~greedom@p200300de6709f9005cd0149c7f40ec82.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:19:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[23:20:41] *** Joins: Spaceflight (uid423739@id-423739.ilkley.irccloud.com)
[23:20:46] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[23:20:53] <bjs> teut: ask them to clarify what they mean, and then if they are asking about __init__ you can explain
[23:21:41] <teut> I deal with java/c# programmers who just learn python
[23:21:48] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[23:21:50] *** Quits: ericlee (~ericlee@2601:647:4681:3420::3) (Ping timeout: 260 seconds)
[23:21:52] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:18f3:9df5:7902:bfc2)
[23:21:56] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:22:22] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[23:22:26] <teut> whereas I am the opposite case, I first learned python(whatever amount) and then c++
[23:22:55] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:23:24] *** O[A]code is now known as OCode
[23:23:41] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[23:23:48] <bjs> teut: it doesn't matter what order you learn things, or how you learn things what matters is what you know and what you can do
[23:24:15] <bjs> teut: if people ask you questions in interviews, ask them to clarify, explain as best you can. That's all you can do;  if they have misunderstandings then you can try explain
[23:25:33] <teut> next time I will throw the word "monkey patching" whenever they will ask about @staticmethod
[23:25:36] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[23:25:49] <teut> but what does it monkey patches to in java?
[23:25:54] <aphysically> jinsun: you can do this but it's too long https://bpa.st/VA2Q
[23:26:37] <bjs> teut: throwing random words back at them to "catch them out" is unlikely to help you
[23:26:54] <bjs> teut: especially if you yourself are not so comfortable with the idea or how it relates to those other languages
[23:27:40] <bjs> teut: (and surely @staticmethod is best described by the phrase "static methods", which Java has with the `static` keyword. Infact the first method you learn in Java is a static method.)
[23:28:37] *** Spaceflight is now known as spaceflight
[23:28:44] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[23:28:56] *** spaceflight is now known as spacecraft
[23:29:06] *** spacecraft is now known as Spaceflight
[23:29:42] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[23:29:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[23:29:48] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[23:29:55] <teut> dont worry I have many companies coming to the campus. I can afford to lose a few
[23:30:29] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[23:30:36] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[23:30:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:31:08] <teut> just wanna calm them
[23:31:43] <teut> ok , I will have a look at that
[23:32:24] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:32:40] <teut> oh , public static void main '=D
[23:34:15] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Quit: Client closed)
[23:34:19] *** Joins: fikran (~fikran@user/fikran)
[23:35:32] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[23:35:32] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[23:35:40] *** dbristow_ is now known as dbristow
[23:36:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[23:37:42] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[23:38:22] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:38:57] *** Quits: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:39:26] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[23:40:48] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:43:24] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:43:42] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[23:43:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:03] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[23:44:08] *** Joins: Cyp (~cyp@213.237.85.9)
[23:45:59] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:48:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:49:01] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:50:34] *** Quits: aniketgm (~Aniket@49.36.107.79) (Quit: leaving)
[23:51:18] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[23:54:14] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:54:34] *** Joins: alzgh (~alzgh@user/alzgh)
[23:55:07] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800a96a628b77b4b9db.ipv6.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[23:55:39] <aphysically> lol one of my parsing comprehensions is completely unneeded
[23:57:56] *** Joins: Knaxius (~Knaxius@user/Knaxius)
[23:58:14] <norwood> been here aphysically
