[00:01:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:01:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:01:40] *** Joins: wroathe (~wroathe@user/wroathe)
[00:04:05] *** Joins: bnchs (~bnchs@41.251.90.215)
[00:04:08] *** Quits: bnchs__ (~bnchs@41.251.90.215) (Read error: Connection reset by peer)
[00:06:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[00:08:08] *** Joins: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[00:08:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:08:22] <bnchs> whatever rp happened here
[00:09:10] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[00:09:26] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:09:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:10:14] <Feuermagier> is there any kind of security issue if one declares _Exit(1); implicitly?
[00:10:29] *** Quits: inlight (~thomas@user/inlight) (Quit: leaving)
[00:10:32] <Feuermagier> well, uses it without importing it essentially
[00:10:36] * APic laughs magically.
[00:10:43] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[00:10:47] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:10:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[00:11:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:11:31] <fizzie> C11 7.1.4p2: "Provided that a library function can be declared without reference to any type defined in a header, it is also permissible to declare the function and use it without including its associated header."
[00:11:42] <fizzie> In other words, on a conforming implementation no.
[00:12:29] <sham1> What kind of a security issue *could* there be. It's just a function
[00:12:48] <sham1> Except that it might get the implicit type of `int _Exit(int)`
[00:12:51] <APic> As long as it is Turing-complete‚Ä¶
[00:13:02] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Ping timeout: 240 seconds)
[00:13:28] <fizzie> Oh, I was assuming an actual (correct) declaration, just without the header.
[00:13:28] *** Joins: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com)
[00:13:38] <fizzie> Implicit function declarations are no longer a thing, after all.
[00:18:24] <Feuermagier> well, I got one here where _Exit(1); is called and _Exit() is not imported
[00:18:32] <Feuermagier> (it compiles though)
[00:18:57] <sham1> There's no importing in C, first of all
[00:19:13] <Feuermagier> well, #include
[00:19:17] <APic> Cannot one refer to #include'ing as Importing?
[00:19:22] <APic> ‚Åµ
[00:20:12] <sham1> Feuermagier: does it have no headers included?
[00:20:28] <Feuermagier> #include<stdio.h> and #include<stdint.h>
[00:20:36] <fizzie> One probably shouldn't, even if one could, just to avoid confusion. (Objective-C has a different #import directive, for example, which it might be confused with.)
[00:21:53] <sham1> If it doesn't give any sort of warning for using _Exit without a declaration, then it must mean that either stdio.h or stdint.h is transitively including stdlib.h
[00:22:30] <APic> If everybody avoids Confusion, everbody can be confused very easily
[00:22:39] <fizzie> Or it's just a particularly lax implementation. It did used to be legal.
[00:22:50] <sham1> Could be
[00:23:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:23:33] <fizzie> ,cc -std=c89 int g(int x) { return f(x); } int f(int x) { return x; } printf("%d", g(123));
[00:23:36] <candide> fizzie: 123
[00:23:42] <fizzie> ,cc int g(int x) { return f(x); } int f(int x) { return x; } printf("%d", g(123)); // by comparison
[00:23:44] <candide> fizzie: [In function 'g':  warning: implicit declaration of function 'f' [-Wimplicit-function-declaration]] 123
[00:23:47] *** Joins: k (~k@fork.wtf)
[00:24:48] <fizzie> (In retrospect, the "by comparison" version should've probably done -std=c99 or -std=c11 or something, because otherwise that's comparing GCC defaults with candide's ridiculously long list of default warning flags.)
[00:26:08] <sham1> ,cc -std=c11 int g(int x) { return f(x); } int f(int x) { return x; } printf("%d", g(123)); // by comparison
[00:26:11] <candide> sham1: Same output.
[00:26:15] * sham1 nods
[00:27:12] <pragma-> s/ridiculously/sensibly/
[00:27:14] * pragma- nods
[00:27:26] <pragma-> I totally could have added 20 more flags easily!
[00:27:43] <sham1> -Weverything when
[00:27:50] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:27:52] <pragma-> when clang
[00:28:01] <pragma-> speaking of which
[00:28:16] <pragma-> ,clang -std=c11 -Weverything int g(int x) { return f(x); } int f(int x) { return x; } printf("%d", g(123)); // by comparison
[00:28:27] <candide> pragma-: [warning: macro name is a reserved identifier [-Wreserved-id-macro]  warning: implicit declaration of function 'f' is invalid in C99 [-Wimplicit-function-declaration]  warning: no previous prototype for function 'g' [-Wmissing-prototypes]  note: declare 'static' if the function is not intended to be used outside of this translation unit  warning: no previous prototype for function 'f' [-Wmissing-... <truncated; https://0x0.st/oHr6.txt>
[00:28:34] * pragma- wags his tail happily.
[00:30:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:30:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:702c:f538:99a2:cdd0)
[00:30:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:702c:f538:99a2:cdd0) (Changing host)
[00:30:20] *** Joins: skapata (~Skapata@user/skapata)
[00:32:02] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Ping timeout: 250 seconds)
[00:32:46] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[00:32:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:15] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:36:38] *** Quits: terminalpusher (~terminalp@2a01:586:1347:1:24d9:fe07:2585:32f7) (Remote host closed the connection)
[00:38:57] <bnchs> APic: what if its not turing-complete
[00:40:18] <APic> bnchs: Then it can not be a that serious Security Issue
[00:42:01] <APic> Probably we should take this Line of the Conversation to ##Security üòâ
[00:42:28] <bnchs> pragma-: you have a tail?
[00:42:41] <APic> ,o0(Is that a Trick-Question?)
[00:42:44] <pony> - is the tail
[00:42:50] <candide> AÔªøPic, That's slightly perceptive.
[00:42:56] <APic> candide: Excellent Answer!
[00:43:04] <pony> ,perl
[00:43:05] <candide> pony: Unquoted string "pÔªøony" may clash with future reserved word at prog.pl line 1. Useless use of a constant ("pÔªøony") in void context at prog.pl line 1.
[00:43:18] <pony> ,perl say q/hi/
[00:43:19] <candide> pony: Unquoted string "say" may clash with future reserved word at prog.pl line 1. syntax error
[00:44:10] <pony> candide: I love you
[00:44:13] <candide> The art of being yourself at your best is the art of unfolding your personality into the person you want to be. . . . Be gentle with yourself, learn to love yourself, to forgive yourself, for only as we have the right attitude toward ourselves can we have the right attitude toward others.
[00:44:16] * pony pets candide 
[00:44:22] * candide giggles at pÔªøony
[00:44:27] <pony> :>
[00:44:28] <pragma-> you have to `use feature say` or a `use v5.something-recent-enough-to-import-say-automatically`
[00:44:35] <pony> ok!
[00:44:53] <pony> does it add use strict; use warnings; for you?
[00:44:54] <pragma-> use v5.10 and higher enable say
[00:45:04] <pragma-> not unless you use v5.30 or something around there
[00:45:09] <pony> ahhh
[00:46:08] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[00:46:19] <pragma-> the ,perl command doesn't have any default options like the ,cc command does
[00:48:15] <APic> ,perl -e 'print "√ó"x2342'
[00:48:16] <candide> APic: Success (no output).
[00:48:26] <APic> ,perl -e 'print "√ó"x2342x"\n"'
[00:48:28] <candide> APic: Success (no output).
[00:48:39] <APic> ,perl -e 'print "√ó"x2342."\n"'
[00:48:40] <candide> APic: Success (no output).
[00:48:46] <APic> Sorry
[00:48:48] <pragma-> drop the -e, it's not a command-line perl interface
[00:48:48] <pony> you're checking if that string exists on the file system
[00:49:16] <APic> ,perl 'print "√ó"x2342 . "\n"'
[00:49:17] <candide> APic: Useless use of a constant ("print \"\327\"x2342 . \"\\n\"") in void context at prog.pl line 1.
[00:49:32] <APic> ,perl print "√ó"x2342 . "\n"
[00:49:35] <candide> APic: √ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó√ó... <truncated; https://0x0.st/oHrk.txt>
[00:49:36] <APic> o/
[00:49:44] <APic> Ok, i will mute myself herein again now
[00:49:50] <APic> We apologize for the Inconveniences.
[00:49:51] <APic> ‚ò∫
[00:50:09] <pony> spam
[00:51:24] <bnchs> ,help
[00:51:24] <candide> For general help, see <https://github.com/pragma-/pbot/tree/master/doc>. For help about a specific command or factoid, use `help <keyword> [channel]`.
[00:52:28] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:52:32] *** Quits: luizfrds1 (~Luiz@152.250.243.147) (Ping timeout: 240 seconds)
[00:53:03] <bnchs> ,cc printf("%s", (char)"a" << 2)
[00:53:07] <candide> bnchs: [warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]  warning: format '%s' expects argument of type 'char *', but argument 2 has type 'int' [-Wformat=]] Program received signal SIGSEGV, Segmentation fault in __strlen_sse2 () called by printf_positional () called by __vfprintf_internal () called by buffered_vfprintf () called by printf () called by main () at statement: printf("%s", (char)"a" << 2)
[00:53:20] *** Quits: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[00:53:38] <bnchs> oops
[00:53:47] <bnchs> should have used %c
[00:54:02] <pragma-> ,cc replace '%s' with '%c'
[00:54:05] <candide> pragma-: No output.
[00:54:14] <caze> What do you think (char)"a" does?
[00:54:48] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[00:55:25] <bnchs> casts "a\0" to char, since char is 8-bit (maybe), it uses the first character?
[00:56:34] <caze> bnchs: "a" is converted to be a pointer to the first element of an array containing the sequence { 'a', '\0' }. You're attempting to convert an address to char.
[00:56:47] <bnchs> oh
[00:57:01] <caze> Try *"a" or just 'a'.
[00:57:22] <bnchs> ofcourse the compiler said it
[00:57:46] <bnchs> ,cc printf("%c", (char)'a' ^ 0xFF);
[00:57:49] <candide> bnchs: No output.
[00:57:54] <caze> ,cc putchar(*"a");
[00:57:59] <candide> caze: a
[00:58:17] <caze> I have no idea what you're trying to do with the shift.
[00:58:18] <bnchs> ,cc putchar((char)'a' ^ 0xFF);
[00:58:22] <candide> bnchs: No output.
[00:58:28] <bnchs> nothing
[00:58:40] <caze> Why do you keep casting?
[00:59:08] <bnchs> i don't need to cast?
[00:59:41] <caze> No. What did you think the cast was accomplishing?
[00:59:51] <bnchs> ok maybe i'm a little bit stupid today
[01:00:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:01:22] <bnchs> i'm sorry
[01:02:56] *** Joins: sr20det (~sr20det@user/sr20det)
[01:04:02] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[01:04:31] <bnchs> ,cc printf("%s", getenv("SHELL"));
[01:04:33] <candide> bnchs: /bin/bash
[01:05:01] <pragma-> ,sh echo $SHELL
[01:05:02] <candide> pragma-: /bin/bash
[01:05:18] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[01:05:40] <bnchs> ,sh head -n 1 /etc/passwd
[01:05:41] <candide> bnchs: root:x:0:0:root:/root:/bin/bash
[01:06:52] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Read error: Connection reset by peer)
[01:07:08] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:08:02] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:08:04] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-58b1-4e88-f873-517a.fixed6.kpn.net) (Quit: WeeChat 3.4)
[01:08:17] *** Joins: wroathe (~wroathe@user/wroathe)
[01:12:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[01:12:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:14:04] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 250 seconds)
[01:14:19] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:15:03] <zwr> heh
[01:15:04] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[01:15:22] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Ping timeout: 250 seconds)
[01:15:41] <zwr> ,sh cat /etc/shadow
[01:15:42] <candide> zwr: cat: /etc/shadow: Permission denied
[01:16:44] <bnchs> ,sh id
[01:16:45] <candide> bnchs: uid=1000(compiler) gid=1000(compiler) groups=1000(compiler) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
[01:18:04] <pragma-> i should change that from compiler to pbot-vm
[01:18:27] *** Quits: magla (~gelignite@55d450c5.access.ecotel.net) (Quit: Stay safe!)
[01:18:50] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[01:19:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:19:37] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 240 seconds)
[01:19:38] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:f8d5:8af2:5390:e10e) (Quit: Leaving)
[01:20:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:20:45] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 268 seconds)
[01:21:32] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:24:28] *** Quits: bnchs (~bnchs@41.251.90.215) (Ping timeout: 250 seconds)
[01:24:28] *** Joins: Telvana (~capo@user/telvana)
[01:27:39] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:29:18] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[01:31:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:33:35] *** Joins: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16)
[01:35:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[01:35:02] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Quit: Client limit exceeded: 20000)
[01:36:43] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[01:40:29] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Ping timeout: 268 seconds)
[01:41:37] *** Quits: Akuli (~Akuli@82-203-160-13.bb.dnainternet.fi) (Quit: Akuli)
[01:42:09] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (Ping timeout: 256 seconds)
[01:42:28] *** Joins: SpringSprocket (~srv@hobby.esselfe.ca)
[01:43:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[01:43:32] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[01:43:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:45:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:45:24] *** Joins: jackk (~jackiii@93-41-2-236.ip79.fastwebnet.it)
[01:46:26] <jackk> can I allocate a str[][] easly ?
[01:46:27] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[01:46:43] <caze> What's a str[][]?
[01:46:57] <jackk> i know that normally u have to do malloc for the array and each line
[01:47:18] <jackk> array of char array
[01:48:05] <jackk> char str[][]
[01:48:33] <caze> Is each line the same length?
[01:48:57] <jackk> no but all lenghts are known
[01:49:31] <caze> Then no.
[01:49:51] <caze> Why do you need all the lines to be stored all at the same time?
[01:50:16] <jackk> to simplify the code
[01:50:19] <jackk> ...
[01:50:35] <caze> Sounds like it's complicating it
[01:50:36] <caze> ...
[01:50:48] <sham1> Amateurs
[01:50:50] <sham1> ‚Ä¶
[01:52:00] *** Joins: selk (~selkfoste@user/selkfoster)
[01:52:09] <jackk> 1 malloc and 1 in a for loop and a strcpy for each string ?
[01:52:54] <jackk> can I allocate the memory after the array has been filled ?
[01:52:55] *** Joins: Byzantine (~Byzantine@2a02:1388:95:5547:e474:3ce1:a601:d034)
[01:53:51] <caze> jackk: What will you do with the lines?
[01:54:37] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 240 seconds)
[01:58:40] <sr20det> ,sh grep -sra . /dev
[01:58:42] <candide> sr20det: Success (exit code 1).
[02:01:47] *** Quits: Byzantine (~Byzantine@2a02:1388:95:5547:e474:3ce1:a601:d034) (Ping timeout: 256 seconds)
[02:01:52] <jackk> read them
[02:02:02] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:02:36] <sr20det> ,sh grep -sra . /
[02:02:37] <caze> jackk: And then what?
[02:03:03] <jackk> nothing
[02:03:06] <candide> sr20det: No output.
[02:03:14] <jackk> oh
[02:03:19] <jackk> wait
[02:03:22] <caze> Then why bother to read them?
[02:03:58] <jackk> I send them from a function to another function
[02:04:09] <sr20det> ,sh f(){ f&grep -sra . /& };f
[02:04:17] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[02:04:17] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[02:04:17] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[02:04:20] <caze> What does the function do with them?
[02:04:36] <jackk> just read
[02:04:39] <candide> sr20det: No output.
[02:04:53] <caze> Does it do any calculation with them?
[02:05:05] <caze> Does it change its behavior based on the content of the lines?
[02:05:42] <jackk> why do u ask ?
[02:05:57] *** Joins: Byzantine (~Byzantine@2a02:1388:95:5547:8c6d:f7be:62f1:b288)
[02:06:09] <jackk> i dont change them
[02:06:18] <caze> I'm trying to determine if there's an actual reason that you need to have all of the lines occupying memory all at the same time.
[02:06:40] <jackk> they goes out of scope
[02:06:45] <chiselfuse> Why do I usually see  `unsigned sa_length = sizeof sa; bind(fd, (struct sockaddr *)&sa, sa_length);`   instead of just    `bind(fd, (struct sockaddr *)&sa, sizeof sa);`  ?
[02:06:49] <jackk> after the first function
[02:07:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:07:44] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[02:08:01] *** Quits: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca) (Remote host closed the connection)
[02:08:13] <caze> jackk: That would be due to the way you've structured your program. It's not an actual computational reason for having them all in memory.
[02:08:58] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Quit: later)
[02:09:41] <caze> jackk: An example of what I'm talking about would be if your program were to perform a task such as echoing input to output, but replacing all occurences of a certain character with the character 'X'. This certain character is the last character of input.
[02:09:56] *** Joins: hlauk (~hlauk@176.33.108.116)
[02:10:21] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[02:10:57] <caze> jackk: Since you do not know what the last character is until you've read all the input, you are forced to save all of the input until you reach the last character.
[02:11:09] *** Joins: pulse (~pulse@user/pulse)
[02:11:39] <caze> jackk: This is a computational reason for having all of the lines stored in memory all at once. Do you have a similar reason?
[02:12:08] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 250 seconds)
[02:12:36] <jackk> i only copy and display
[02:13:20] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:16:00] <caze> Then why don't you just work on a single line at once?
[02:16:40] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:16:51] <jackk> cos then id have parse
[02:17:02] <jackk> *to parse
[02:17:22] <caze> Parse what?
[02:17:35] <caze> I thought you were just displaying.
[02:17:52] <jackk> caze, nevermind
[02:18:03] <caze> jackk: Do you know about the fgets function?
[02:19:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[02:19:26] *** lukedashjr is now known as luke-jr
[02:20:41] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:20:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:23:35] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:26:01] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:26:28] *** Quits: r_n_d (~r_n_d@gateway/tor-sasl/rnd/x-30212483) (Quit: Leaving)
[02:26:55] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[02:28:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:29:04] *** Joins: wroathe (~wroathe@user/wroathe)
[02:29:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:33:43] *** Quits: pizdets_ (~pizdets@183.182.115.221) (Ping timeout: 256 seconds)
[02:33:58] *** Joins: nuxil (~nuxil@141.195.51.213)
[02:34:10] *** Joins: pizdets (~pizdets@183.182.114.221)
[02:35:43] *** Quits: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:35:56] *** Joins: pulse_ (~pulse@user/pulse)
[02:35:58] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:37:29] *** Quits: Byzantine (~Byzantine@2a02:1388:95:5547:8c6d:f7be:62f1:b288) (Ping timeout: 256 seconds)
[02:38:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[02:41:24] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[02:43:09] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:47] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[02:43:49] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:53:08] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:54:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[02:54:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:33] *** Quits: ultsllt (~ultsllt@50.231.5.242) (Remote host closed the connection)
[02:54:41] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:54:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:54:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:54:44] *** Joins: wroathe (~wroathe@user/wroathe)
[02:56:02] *** Joins: kit_ten (~u0_a391@2603-6010-a103-1f2e-f44f-d859-cfd9-2a3c.res6.spectrum.com)
[02:56:42] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:57:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[02:58:15] *** Quits: alch (~alch@151.36.183.131) (Read error: Connection reset by peer)
[02:58:37] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:59:22] *** Quits: kit-ten (~u0_a391@2600:380:8815:93a5:db4b:61ad:43f8:6363) (Ping timeout: 250 seconds)
[02:59:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[03:01:06] *** Quits: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16) (Ping timeout: 250 seconds)
[03:02:55] *** Joins: alch (~alch@151.38.182.189)
[03:03:03] *** Joins: AmR (~AmREiSa@156.199.9.4)
[03:03:40] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[03:04:37] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[03:04:58] *** Quits: cosimone (~user@93-44-185-255.ip98.fastwebnet.it) (Ping timeout: 268 seconds)
[03:08:39] *** Quits: trenka (~ykaliuta@user/trenka) (Ping timeout: 256 seconds)
[03:10:10] *** Quits: jackk (~jackiii@93-41-2-236.ip79.fastwebnet.it) (Quit: Leaving)
[03:11:12] *** Quits: kit_ten (~u0_a391@2603-6010-a103-1f2e-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Quit: WeeChat 3.0.1)
[03:19:29] *** Joins: trenka (~ykaliuta@82-181-192-55.bb.dnainternet.fi)
[03:19:29] *** Quits: trenka (~ykaliuta@82-181-192-55.bb.dnainternet.fi) (Changing host)
[03:19:29] *** Joins: trenka (~ykaliuta@user/trenka)
[03:22:59] *** Parts: Kit (~NotApplic@2603-6010-a103-1f2e-4e6d-cc75-dd88-8b0f.res6.spectrum.com) (https://kit.osmarks.net/note.php?irc)
[03:24:08] *** Quits: p0g0 (~p0g0@216.211.153.38) (Quit: p0g0)
[03:24:48] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[03:26:16] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[03:26:32] *** loganlee is now known as loganlee[gnu]
[03:26:33] *** Joins: kish` (~aqua@user/aqua)
[03:26:52] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[03:27:13] *** Joins: kish` (~aqua@user/aqua)
[03:27:17] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[03:27:37] *** Joins: AmR| (~AmREiSa@156.199.9.4)
[03:27:44] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:27:58] *** Quits: AmR (~AmREiSa@156.199.9.4) (Ping timeout: 250 seconds)
[03:28:56] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[03:29:01] *** Quits: Dotz0cat (~Dotz0cat@151.213.94.135) (Ping timeout: 240 seconds)
[03:29:30] *** Joins: Dotz0cat (~Dotz0cat@h83.241.19.98.static.ip.windstream.net)
[03:29:35] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:29:49] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[03:30:00] *** loganlee is now known as loganlee[gnu]
[03:30:43] *** Joins: regreg (~regreg@2a02:2f09:500b:8000:3502:5982:40f9:22bb)
[03:31:40] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:31:47] *** AmR| is now known as AmR
[03:32:14] <sokan> https://bpa.st/7K7Q This is a function I've written and I only want to add a struct as it's parameter. I don't get how to call it in main though :S
[03:32:56] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Client limit exceeded: 20000)
[03:33:36] *** Quits: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5) (Quit: Client limit exceeded: 20000)
[03:34:28] *** Quits: oriba (~oriba@77.11.223.152) (Ping timeout: 250 seconds)
[03:34:40] <fizzie> It doesn't really work any differently for `struct aminoacid` than it would for, say, `int`.
[03:34:41] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[03:34:41] *** Joins: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5)
[03:35:02] <fizzie> You pass in a pointer, possibly as the result of naming an array (to convert it to a pointer to its first element).
[03:35:06] <fizzie> ,cc void func(int arr[]) { arr[0] = 1; arr[1] = 2; arr[2] = 3; }  int arr[3] = {0}; func(arr); printf("%d, %d, %d", arr[0], arr[1], arr[2]);
[03:35:09] <candide> fizzie: 1, 2, 3
[03:37:01] <sokan> so in my case I `hydrothingamy (aminoacid);`
[03:37:34] *** Joins: Torr (~Torr@user/torr)
[03:37:58] <fizzie> Assuming you've declared `aminoacid` as `struct aminoacid aminoacid[NNN];` before the call, sure.
[03:38:02] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[03:38:53] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 268 seconds)
[03:39:18] <sokan>         struct aminoacid aminoacid_in[1000];
[03:39:37] *** Quits: marcj (~marc@199.167.158.211) (Ping timeout: 240 seconds)
[03:40:36] <fizzie> Well, `hydrothingamy(aminoacid_in);`, then.
[03:43:24] *** Joins: p0g0 (~p0g0@216.211.153.38)
[03:44:33] *** Joins: marcj (~marc@205.175.215.11)
[03:45:12] *** Joins: jx0 (~jx0@199.229.250.46)
[03:45:28] *** Quits: sr20det (~sr20det@user/sr20det) (Quit: leaving)
[03:48:38] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[03:48:38] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[03:48:38] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[03:49:59] *** Quits: mahmutov (~mahmutov@5.176.46.201) (Ping timeout: 268 seconds)
[03:49:59] *** Quits: Alhazred (~Alhazred@86.106.74.41) (Ping timeout: 268 seconds)
[03:50:33] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[03:51:25] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Client Quit)
[03:51:55] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[03:52:33] *** Joins: liba (~liba@user/liba)
[03:54:28] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[03:54:34] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:54:49] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[03:55:39] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[03:56:08] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[03:57:03] *** Quits: regreg (~regreg@2a02:2f09:500b:8000:3502:5982:40f9:22bb) (Read error: Connection reset by peer)
[03:57:37] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Ping timeout: 240 seconds)
[03:58:03] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:58:31] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Quit: cassepipe)
[03:58:56] *** Joins: regreg (~regreg@2a02:2f09:500b:8000:2c46:a2e6:76aa:adf3)
[03:59:44] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[03:59:46] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[04:00:05] *** Quits: jx0 (~jx0@199.229.250.46) (Quit: poof!)
[04:00:17] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[04:02:17] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Client Quit)
[04:02:19] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[04:03:12] <sokan> is it always necessary to add parameters in a function/
[04:03:14] <sokan> ?
[04:05:23] *** Joins: ic3blx_ (~ic3blx___@87.116.179.30)
[04:05:24] *** Quits: ic3blx_ (~ic3blx___@87.116.179.30) (Changing host)
[04:05:24] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[04:05:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:05:31] *** Joins: Betal (~Betal@user/betal)
[04:05:31] <sokan> aaaand the answer is no
[04:05:35] <SamuelMarks> hi
[04:06:37] <SamuelMarks> Is `strnstr` guaranteed available on Linux systems? - I know that `#include <bsd/string.h>` is provided by: libbsd-dev‚Ä¶ - but I think <strings.h> also has `strnstr`‚Ä¶
[04:07:20] <scaramanga> not only is it not guaranteed, it geneally isn't available
[04:07:25] <SamuelMarks> =(
[04:07:40] <SamuelMarks> Guess I'll need to adjust my `ifdef`s then to include an impl on Linux also then
[04:08:19] <SamuelMarks> ARghhh so many hacks‚Ä¶¬†https://github.com/offscale/libacquire/blob/486ca79/libacquire/acquire_string_extras.h
[04:08:37] <fizzie> Unrelated to that, I think `memmem` is a funny function name.
[04:08:52] <scaramanga> the madness of portable code :)
[04:08:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:09:28] <SamuelMarks> scaramanga - I suppose SunOS, Windows, Linux, macOS, BSD
[04:09:35] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[04:09:36] <sokan> http://dpaste.com/CWEP9Z4LH Is this style good? And is program ok? I mean it runs and works just fine, but maybe some parts are badly writen
[04:09:36] <SamuelMarks> is sufficient to say my code is portable? :P
[04:10:15] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[04:11:45] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[04:13:54] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:13:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:15:42] *** Quits: Chpy0 (~chpy@30-8-178-69.static.gci.net) (Remote host closed the connection)
[04:15:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:05] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[04:17:17] <scaramanga> sokan, if you're doing it in one file it makes more sense to have main() at the bottom and all the functions above it and make them static since they're all in the same compilation unit
[04:17:47] <scaramanga> then you don't need prototypes up top, c programmers are used to reading it that way around, bottom to top
[04:17:58] <pnbeast> sokan, without even looking, gcc throws three warnings in three separate functions, "In function 'hydrophobicity': warning: control reaches end of non-void function [-Wreturn-type]".
[04:18:17] <scaramanga> looks good to me though, style-wise, you've got spaces after functions butg before brackets in a couple of places
[04:18:35] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[04:19:23] <scaramanga> also, buffer overflow exploit if an attacker can control input file, of course, but i'm sure you know that :)
[04:20:33] <fizzie> Arguably `(void)` is better than `()` for functions that take no parameters. Especially when it's a non-definition declaration.
[04:20:52] <scaramanga> inside whiile(fgets(...) you're double indented there, too
[04:21:00] *** pulse_ is now known as pulse
[04:21:01] <SamuelMarks> I'm giving up and adding fake indents to indicate scope of my `ifdef`/`ifndef`/`if`/`endif`/`define` macro statements
[04:21:05] <fizzie> The latter is officially an "obsolescent feature".
[04:21:17] <fizzie> ,c11 6.11.6p1
[04:21:17] <candide> http://www.iso-9899.info/n1570.html#6.11.6p1 [Function declarators] The use of function declarators with empty parentheses (not prototype-format parameter type declarators) is an obsolescent feature.
[04:21:28] <scaramanga> +1 for (void),  yeah
[04:21:31] <fizzie> (Or in the world of practical reality, a C++-ism.)
[04:22:32] *** Joins: chenqisu1 (~bhca7d@183.217.200.249)
[04:23:14] <fizzie> If you want to take some action (like print an error message and abort) on invalid input, checking the return value from sscanf (the number of successfully performed non-discarded conversions, so 2 and 1 respectively for your two sscanf calls in the happy path) is an option.
[04:23:16] <scaramanga> sokan, overall tho, impression is good, it looks like C-code, nothing in there is completely nonsensical :)
[04:23:41] <fizzie> You can even print the line number (from i/j) and offending line while you're at it, to make things easier for the poor user. ;)
[04:24:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[04:24:52] <sokan> fizzie: so I _must_ declare something?
[04:25:02] <sokan> scaramanga: better to add all these functions in one?
[04:25:28] <fizzie> sokan: Empty parentheses in a declaration (in C, though not in C++) means "unspecified parameters", not "no parameters".
[04:25:42] <sokan> so function (void)
[04:25:57] <fizzie> Yeah, using just the keyword `void` has a special meaning of "no parameters".
[04:25:58] <sokan> pnbeast: I didn't get any issues :/
[04:26:07] <scaramanga> sokan, i just mean there is no need to declare functions, if you put main at the bottom of the file, and work upwards, then the definition will be the declaration
[04:26:14] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com) (Remote host closed the connection)
[04:26:23] <scaramanga> and you can make them static, since there is only one file/compilation unit in this program
[04:26:35] <sokan> I didn't get what ou meant by static
[04:26:37] <fizzie> Right, those functions should also have a return type of `void` to indicate they don't actually return a value.
[04:26:40] <pnbeast> sokan, maybe enable extra warnings?
[04:26:51] <sokan> pnbeast: probably so.
[04:26:53] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[04:26:56] <scaramanga> the keyword "static" before the function, means that it is only available in this compilation unit
[04:27:04] <scaramanga> it's a good practice to make functions static wherever possible
[04:27:20] <sokan> fizzie: they do return -1 to double check textfile opened rightly
[04:27:26] <pnbeast> sokan, oh, I see.  You have three int functions that *may* return -1, but seem to drop off the end if they're successful?
[04:27:35] <scaramanga> the only reason to not make them static is if they are going to be exported from this copilation unit, to be used by code in another compilation unit, not using "static" keyword makes the function visible to the linker
[04:27:36] <fizzie> sokan: Oh, I missed that, because you don't actually *use* the return value.
[04:27:49] <scaramanga> but you only have one file, so there is no need for any non-static function
[04:27:50] <fizzie> Well, in that case, you'd add `return 0;` at the end of each of them.
[04:27:51] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:27:59] <fizzie> (Or whatever you want to use to indicate success.)
[04:28:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:28:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:28:06] *** Joins: wroathe (~wroathe@user/wroathe)
[04:28:17] <fizzie> And then probably also check the return values, since you've gone through the trouble of returning something. :)
[04:28:34] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:28:46] <scaramanga> sokan, the reason that is good practice is that you could have like 20 files in a project and then 2 of them have a function called "do_stuff()" and now the project fails to link!
[04:29:30] <sokan> @_@
[04:29:41] <scaramanga> i mean, you can think of "static" for a function meaning something like "private" in other languages
[04:30:08] <sokan> pnbeast, fizzie I literally forgot to add return 0; in the end ^_^;
[04:30:14] <scaramanga> :)
[04:30:30] <sokan> scaramanga: I think I get what you mean.
[04:30:32] <scaramanga> happens to the best of us :)
[04:30:53] <sokan> will move all functions to the top and add return 0 in the end
[04:31:28] <sokan> that whlie (!foef(in)) kinda annoys me, but can't think of anything else :\
[04:31:39] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[04:31:40] <scaramanga> all the stuff like fixing buffer overflows, nicer errors, that is stuff we "should" always do, but in reality, for a program that only you will use, people regularly skip out on
[04:32:09] <sokan> It's not really a hmmm
[04:32:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:32:22] <sokan> program that will go out to the public officially.
[04:32:26] *** Quits: regreg (~regreg@2a02:2f09:500b:8000:2c46:a2e6:76aa:adf3) (Ping timeout: 260 seconds)
[04:32:53] <sokan> I mean, whoever wants to can use it but it's not anything corporate-level :P
[04:33:09] *** Joins: gco (~gco@2601:647:4c80:2424:a988:144e:386f:dfbd)
[04:33:23] <scaramanga> yeah, if someone walks in to my office and says "release this program" (pointing to some random program we have written)
[04:33:33] <scaramanga> we wil probably all cringe and then spend time making it nicer :)
[04:34:33] <sokan> but hey! I can write a program that looks C :D
[04:34:37] <sokan> (and is C :P)
[04:34:43] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[04:39:31] <SamuelMarks> `#include <strings.h>`, where is this guaranteed? - `#ifdef _GNU_SOURCE`?
[04:39:42] *** Joins: timmot (~timmot@207.148.85.201)
[04:39:46] *** Joins: ominionx (~ominionx@2604:2d80:9d0b:e400:afa8:a47a:73ca:db5d)
[04:39:54] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[04:40:41] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:43:45] *** Quits: joev (~joev@user/joev) (Remote host closed the connection)
[04:44:10] *** Joins: joev (~joev@user/joev)
[04:44:30] *** Joins: pert (~pert@fsf/member/pert)
[04:45:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:46:17] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Read error: Connection reset by peer)
[04:47:17] *** Joins: cytokine_storm (~user@user/cytokine-storm/x-1083107)
[04:48:58] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[04:49:17] <fizzie> sokan: Oh, I skimmed over that. Yeah, no need to use feof there, really. getc/fgetc returns the value of the EOF macro to indicate end-of-file, and the character as an `unsigned char` converted to int otherwise. Also, the first fgetc loop will get stuck in an infinite loop if the file contains no newlines.
[04:50:55] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Quit: Quit)
[04:51:20] *** Joins: System_Error (~SystemErr@user/systemerror)
[04:52:05] <pert> would anyone, esp. Unix-fluent folks, like to critique my implementation of the 'which' command? it's at https://git.sr.ht/~jscott/which (you may go to either the web page or git clone from the same URL). i'd also appreciate suggestions for projects which may be slightly larger
[04:52:54] <fizzie> sokan: I'd just make it an `int ch;` for the variable, and then `while (ch = fgetc(in), ch != '\n' && ch != EOF);` for the first loop and `while (ch = fgetc(in), ch != EOF) if (ch != '\n') aaseq[k++] = ch;` for the second. Or if you think the comma looks weird, the controlling expressions can be `(ch = fgetc(in)) != '\n' && ch != EOF` and `(ch = fgetc(in)) != EOF` as well.
[04:54:07] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[04:55:01] *** Quits: gco (~gco@2601:647:4c80:2424:a988:144e:386f:dfbd) (Quit: gco)
[04:55:24] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:59:59] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[05:00:10] <SamuelMarks> Finally got my string_extras to work on macOS, Windows, and Linux‚Ä¶¬†man it's been like 4 commits since everything worked last
[05:02:56] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:05:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[05:06:43] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[05:07:12] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 250 seconds)
[05:08:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[05:11:44] *** Quits: pyook (~pyook@user/puke) ()
[05:14:33] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:15:09] *** Joins: vysn (~vysn@user/vysn)
[05:15:29] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[05:19:28] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[05:20:02] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[05:20:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:27:53] <SamuelMarks> *13
[05:32:20] *** Joins: notzmv (~zmv@user/notzmv)
[05:33:17] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[05:34:00] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:34:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:34:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:36:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:39:17] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[05:40:19] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:40:57] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[05:41:27] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[05:41:27] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[05:41:27] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[05:41:39] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:42:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[05:42:42] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[05:49:16] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[05:50:00] *** Joins: frostygoth (~frostygot@li1566-163.members.linode.com)
[05:54:03] *** Joins: Xatenev (~xatenev@2a02:8108:9640:74d4:1263:e44d:8925:ad21)
[05:54:03] *** apotheon is now known as IAmGrueT
[05:54:21] *** Quits: Xatenev (~xatenev@2a02:8108:9640:74d4:1263:e44d:8925:ad21) (Changing host)
[05:54:21] *** Joins: Xatenev (~xatenev@user/xatenev)
[05:54:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[06:01:07] *** IAmGrueT is now known as LaoGrue
[06:04:26] *** Joins: cytokine` (~user@2409:4065:d10:cc9a:f29e:4aff:fe8d:cbb0)
[06:04:45] *** dogbert_2 is now known as dogbert2
[06:05:42] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[06:06:21] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[06:06:57] *** Quits: cytokine_storm (~user@user/cytokine-storm/x-1083107) (Ping timeout: 240 seconds)
[06:10:09] *** Joins: fstd_ (~fstd@xdsl-89-1-56-234.nc.de)
[06:11:17] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 240 seconds)
[06:13:23] *** Quits: fstd (~fstd@xdsl-87-79-46-57.nc.de) (Ping timeout: 256 seconds)
[06:13:48] *** Joins: Betal (~Betal@user/betal)
[06:19:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:19:16] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:19:37] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[06:20:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:21:02] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[06:25:12] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[06:27:03] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:28:09] *** Joins: fe23 (~fe23@2409:8a34:461:9470:99a7:c634:3ff8:4634)
[06:29:06] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[06:30:17] *** Joins: Atque (~Atque@user/atque)
[06:32:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:34:37] *** Quits: davros (~davros@host86-184-82-149.range86-184.btcentralplus.com) (Ping timeout: 240 seconds)
[06:37:39] *** Quits: selk (~selkfoste@user/selkfoster) ()
[06:43:11] *** Joins: foul_owl (~kerry@94.140.8.105)
[06:44:36] *** Joins: jx0 (~jx0@199.229.250.46)
[06:47:08] *** Joins: davros (~davros@host86-184-82-149.range86-184.btcentralplus.com)
[06:47:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:48:05] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[06:50:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[06:52:34] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:45] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Read error: Connection reset by peer)
[06:59:39] *** Joins: teut (~teut@2401:4900:1c68:97ee:f019:e976:f8bd:9ca2)
[07:00:37] *** Quits: alch (~alch@151.38.182.189) (Ping timeout: 256 seconds)
[07:02:19] *** Joins: alch (~alch@151.38.167.216)
[07:02:28] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Ping timeout: 250 seconds)
[07:02:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:02:49] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[07:05:09] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[07:06:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:13:15] <SamuelMarks> *15, and done
[07:14:21] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:16:59] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[07:21:05] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[07:24:17] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 240 seconds)
[07:24:59] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:28:08] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[07:29:12] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:29:18] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[07:32:17] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[07:35:11] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:13] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[07:39:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[07:41:40] *** Joins: Charadon (~Charadon@155.138.164.183)
[07:43:54] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:48:23] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:49:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:49:52] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[07:52:06] *** Joins: regreg (~regreg@2a02:2f09:500b:8000:b086:9dc7:c98e:4f69)
[07:55:11] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:56:03] *** Joins: Atque (~Atque@user/atque)
[07:58:44] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[08:01:49] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:02:04] *** Joins: frostygoth_ (~frostygot@104-186-97-153.lightspeed.wchtks.sbcglobal.net)
[08:02:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:02:45] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[08:02:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:04:17] *** Quits: frostygoth (~frostygot@li1566-163.members.linode.com) (Ping timeout: 240 seconds)
[08:04:36] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[08:04:37] *** Quits: Dotz0cat (~Dotz0cat@h83.241.19.98.static.ip.windstream.net) (Ping timeout: 240 seconds)
[08:04:49] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:04:57] *** frostygoth_ is now known as frostygoth
[08:05:47] *** Quits: frostygoth (~frostygot@104-186-97-153.lightspeed.wchtks.sbcglobal.net) (Client Quit)
[08:09:01] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[08:10:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:10:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:10:45] *** Joins: wroathe (~wroathe@user/wroathe)
[08:15:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:15:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:16:34] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Remote host closed the connection)
[08:16:47] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[08:24:29] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[08:25:03] *** Joins: pert (~pert@fsf/member/pert)
[08:29:15] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[08:34:43] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[08:34:58] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:35:08] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[08:36:57] *** Quits: cytokine` (~user@2409:4065:d10:cc9a:f29e:4aff:fe8d:cbb0) (Ping timeout: 240 seconds)
[08:37:08] *** Joins: cytokine` (~user@47.29.232.235)
[08:38:30] *** Joins: ickk (~ickk@user/ickk)
[08:38:57] <scaramanga> [10:22:05] <pert> would anyone, esp. Unix-fluent folks, like to critique my implementation of the 'which' command? it's at https://git.sr.ht/~jscott/which (you may go to either the web page or git clone from the same URL). i'd also appreciate suggestions for projects which may be slightly larger
[08:39:09] <scaramanga> am i looking at the right thing? it's got threads and semaphores?
[08:40:04] *** Joins: AssKoala (~asskoala@user/asskoala)
[08:40:21] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[08:40:37] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[08:41:50] <scaramanga> file_is_executable() is reimplementing access(path, X_OK) but incorrectly?
[08:43:49] <scaramanga> it's unlikely that madvise is needed to read through the env block.. is there any reason he OS lookahead can't be trusted to do the job in the case where the env block is gargantuan in size? this seems more likely to be a pessimisation than an optimisation
[08:44:53] <scaramanga> considering that the number fo threads it's going to create is potentially unbounded (or bounded only by the max argv size), that's more likely to be a cause of performance problems than hard-faults on the env-block which should be about as rare as sightings of santa-clause
[08:45:28] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:46:07] *** Joins: loganlee (~Thunderbi@user/loganlee)
[08:46:26] <scaramanga> but the overall theme seems to be of something which is very over-engineered
[08:46:31] *** loganlee is now known as loganlee[gnu]
[08:46:44] <scaramanga> also, almost all of the work that is being parallelised is then being serialised on a few global data strucutres anyway..
[08:57:11] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:57:36] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[08:57:59] *** Quits: teut (~teut@2401:4900:1c68:97ee:f019:e976:f8bd:9ca2) (Quit: Client closed)
[09:01:30] *** Joins: Burgundy (~NA@86.121.143.206)
[09:04:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:07:37] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[09:10:09] *** Joins: Rounin (~david@84.212.130.215)
[09:12:12] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Quit: symb0l)
[09:12:50] *** Joins: Dotz0cat (~Dotz0cat@h227.195.187.173.dynamic.ip.windstream.net)
[09:12:58] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[09:13:19] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[09:16:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:16:46] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:17:32] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[09:18:33] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Quit: symb0l)
[09:20:26] *** Joins: lleo (~leo@89-200-36-146.mobile.kpn.net)
[09:24:07] *** Joins: Kerr (~Kerr@2601:602:ce01:1f0:24d0:1b76:7dc4:51ff)
[09:26:46] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 250 seconds)
[09:27:51] *** Joins: bbju (~bbju@103.144.149.220)
[09:27:51] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:29:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:29:20] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[09:34:18] *** Joins: liba (~liba@user/liba)
[09:36:27] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[09:36:46] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:37:02] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:39:02] *** Quits: lleo (~leo@89-200-36-146.mobile.kpn.net) (Ping timeout: 240 seconds)
[09:44:58] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 250 seconds)
[09:49:44] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.32) (Ping timeout: 250 seconds)
[09:56:42] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[09:59:25] *** Joins: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com)
[10:01:26] *** Quits: cytokine` (~user@47.29.232.235) (Ping timeout: 250 seconds)
[10:01:35] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:03:58] *** Quits: Chewt (~hayden@2601:1c0:8101:7310::144a) (Quit: WeeChat 3.4)
[10:12:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[10:16:40] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[10:16:41] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: Client limit exceeded: 20000)
[10:21:14] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[10:22:39] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:29:49] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au)
[10:30:17] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[10:32:00] *** Quits: kurahaupo (~kurahaupo@pa49-182-112-209.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[10:36:17] *** Joins: nathanael (~nathanael@user/nathanael)
[10:42:55] *** Parts: gtlsgamr (~gtlsgamr@user/gtlsgamr) ()
[10:45:04] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[10:45:53] *** Joins: justGhost3 (~justache@user/justache)
[10:46:29] *** Quits: blinky42 (~quassel@user/blinky42) (Quit: No Ping reply in 180 seconds.)
[10:46:30] *** Joins: nurupo_ (~nurupo.ga@user/nurupo)
[10:46:32] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[10:46:44] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 256 seconds)
[10:46:44] *** Quits: eau (~chat@user/eau) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: justGhost (~justache@user/justache) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: kzootech (~contact@kzoo.tech) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: edr (~edr@user/edr) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Ping timeout: 256 seconds)
[10:47:18] *** justGhost3 is now known as justGhost
[10:49:09] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[10:49:09] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[10:49:09] *** Joins: blinky42 (~quassel@user/blinky42)
[10:50:01] *** nurupo_ is now known as nurupo
[10:51:49] *** Joins: eau (~chat@user/eau)
[10:52:07] *** Joins: kzootech (~contact@kzoo.tech)
[10:52:09] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[10:52:28] *** Joins: edr (~edr@enlo.co)
[10:52:28] *** Quits: edr (~edr@enlo.co) (Changing host)
[10:52:28] *** Joins: edr (~edr@user/edr)
[10:58:38] *** Quits: alch (~alch@151.38.167.216) (Read error: Connection reset by peer)
[10:59:26] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:00:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:02:26] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[11:02:39] *** Joins: alch (~alch@151.36.201.147)
[11:03:30] *** Joins: abraxis (~abraxis@user/abraxis)
[11:06:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:09:21] *** LaoGrue is now known as apotheon
[11:09:40] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[11:14:21] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:17:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[11:19:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[11:22:22] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:24:07] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:30:24] *** imm__ is now known as imm_
[11:33:33] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:34:07] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:34:40] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:37:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[11:38:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:38:45] *** Joins: aradesh (~aradesh@user/aradesh)
[11:39:19] *** Joins: kanin (~kanin@2409:8a14:10e7:52d0:4526:1e35:f024:52e7)
[11:39:39] *** Joins: luizfrds (~Luiz@152.250.243.147)
[11:45:26] *** Joins: jellie (~luv_panda@user/jellie)
[11:50:11] *** Quits: adip (~adip@deo188.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[11:53:45] *** Joins: cosimone (~user@93-44-184-251.ip98.fastwebnet.it)
[12:01:22] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:01:32] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:01:50] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[12:04:42] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:06:45] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[12:07:46] *** Quits: regreg (~regreg@2a02:2f09:500b:8000:b086:9dc7:c98e:4f69) (Read error: Connection reset by peer)
[12:08:46] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[12:08:57] *** Joins: alicef_ (~none@gentoo/developer/alicef)
[12:10:02] *** Quits: alicef (~none@gentoo/developer/alicef) (Ping timeout: 240 seconds)
[12:11:31] *** Joins: regreg (~regreg@2a02:2f09:500b:8000:4598:d534:fe43:8800)
[12:11:37] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Quit: Leaving)
[12:14:47] *** Joins: adip (~adip@deo188.neoplus.adsl.tpnet.pl)
[12:14:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:19:39] *** Quits: geezabiscuit (~Geezabisc@user/geezabiscuit) (Ping timeout: 256 seconds)
[12:19:46] *** Joins: drin (~Geezabisc@user/geezabiscuit)
[12:20:17] *** Quits: ominionx (~ominionx@2604:2d80:9d0b:e400:afa8:a47a:73ca:db5d) (Ping timeout: 240 seconds)
[12:24:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[12:25:57] *** Quits: fe23 (~fe23@2409:8a34:461:9470:99a7:c634:3ff8:4634) (Ping timeout: 240 seconds)
[12:26:12] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:27:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:32:05] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:6e00:12c3:7bff:fe6d:d374)
[12:33:22] *** Joins: cytokine` (~user@2409:4065:d10:cc9a:f29e:4aff:fe8d:cbb0)
[12:34:24] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Ping timeout: 256 seconds)
[12:34:57] *** Quits: candide (~pbot3@about/c/bot/candide) (Ping timeout: 256 seconds)
[12:36:43] *** Quits: cytokine` (~user@2409:4065:d10:cc9a:f29e:4aff:fe8d:cbb0) (Client Quit)
[12:37:13] *** Joins: r_n_d (~r_n_d@gateway/tor-sasl/rnd/x-30212483)
[12:40:01] *** Joins: ominionx (~ominionx@172.58.193.70)
[12:47:18] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.32)
[12:56:52] <clarity> meow.
[12:56:53] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[12:59:17] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:00:05] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[13:02:17] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.32) (Remote host closed the connection)
[13:08:28] <loganlee[gnu]> are there C functions like map() and reduce() as in javascript?
[13:08:32] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:09:12] <dave0> loganlee[gnu]: what do they do?
[13:10:00] <NRK[m]> abstracted away for loops
[13:10:22] <novns> loganlee[gnu], C is not a functional language
[13:10:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:11:31] <Amun-Ra> C is a dysfunctional language
[13:11:38] <sham1> It can be programmed as such, but it's not fun
[13:11:53] <novns> Amun-Ra, C is an imperative procedural language
[13:12:17] <sham1> And structured
[13:12:30] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:12:36] <novns> you don't need map/filter/reduce things in C, they are from another world
[13:13:03] <clarity> Your bug reported yet novns?
[13:13:10] *** Joins: inlight (~thomas@157.35.16.80)
[13:13:10] *** Quits: inlight (~thomas@157.35.16.80) (Changing host)
[13:13:10] *** Joins: inlight (~thomas@user/inlight)
[13:13:28] <novns> clarity, no, life is hard :)
[13:13:30] <clarity> meow
[13:13:54] *** Joins: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960)
[13:14:26] <NRK[m]> i think Dennis specifically didn't like those constructs because they just hide the loop.
[13:14:54] <NRK[m]> as in, the hardware still has to loop through, even with simd.
[13:15:05] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:15:30] <novns> and it's not a bug for me anymore, after I change the logic of my code
[13:15:57] <novns> it's ok for me to have NULLs as arguments
[13:16:05] <novns>     bool result = value_1 && value_2 && ((value_1 == value_2) || !strcmp(value_1, value_2));
[13:16:07] <novns> this way
[13:16:18] <clarity> The next time someone argues with me, I'll give them NULL
[13:17:15] <novns> with this explicit expression strcmp never causes any UB
[13:17:44] <NRK[m]> lol.
[13:17:51] <Amun-Ra> novns: unless value_1 or value_2 is not null terminated
[13:17:51] <megaTherion> NRK[m]: they arent really just hiding the loop, they are totally different concepts... not sure what Dennis' thoughts were about functional programming back then.
[13:17:56] <sham1> > !strcmp(value_1, value_2)
[13:17:59] <sham1> I mean, yeah
[13:18:00] <sham1> But no
[13:18:22] <novns> sham1, is any value_ is NULL it's never called
[13:18:35] <sham1> Yes
[13:18:45] <sham1> I'm more just noting the "logical NOT" there
[13:18:57] <clarity> It's fine
[13:18:59] <novns> I used asserts with exit() before
[13:19:03] <sham1> Personally? Not a fan
[13:19:11] <NRK[m]> meh, it's fine.
[13:19:28] <clarity> But it seems that strcmp does get called if one value is null
[13:19:33] <clarity> Unless there's another check somewhere
[13:20:02] <NRK[m]> only thing i don't like about !strcmp is that the `!` can be easy to miss (visually) compared to == 0.
[13:20:11] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[13:20:12] <novns> clarity, no, value_1 && value_2 protects from this
[13:20:25] <dave0> ! orks on bools and strcmp doesn't return a bool
[13:20:32] <dave0> ork
[13:20:33] <clarity> novns: It doesn't because ||
[13:20:49] <clarity> false && true || callthis()
[13:21:04] <novns> clarity, no, || is in a subexpression
[13:21:07] <clarity> Oh
[13:21:15] <sham1> false && true || callthis() also short-circuits
[13:21:18] <clarity> You'e right, I didn't see the double parens.
[13:21:28] <novns> clarity, false && true && (a || b)
[13:22:13] <sham1> ,parens value_1 && value_2 && ((value_1 == value_2) || !strcmp(value_1, value_2))
[13:22:27] <sham1> ,paren value_1 && value_2 && ((value_1 == value_2) || !strcmp(value_1, value_2))
[13:22:31] <sham1> ok
[13:22:49] <loganlee[gnu]> ,puts("hello");
[13:22:56] *** Quits: vboykox (~user@121-57-134-95.pool.ukrtel.net) (Ping timeout: 250 seconds)
[13:22:59] <loganlee[gnu]> is there a bot here?
[13:23:09] <sham1> ,cc printf("Hello")
[13:23:12] <NRK[m]> ,cc puts("yes");
[13:23:16] <sham1> Nope
[13:23:18] <Amun-Ra> I don't see candide
[13:23:19] <sham1> It's down
[13:23:48] <dave0> lets cheer her up
[13:23:51] <novns> I could omit (value_1 == value_2), it's just an unnedded premature optimization in a case where both values are the same
[13:24:09] <NRK[m]> someone probably hacked her due to some buffer overflow :)
[13:24:18] <novns> maybe strcmp does this inside, didn't check
[13:24:19] <dave0> novns: you could add  && value_1[0] == value_2[0]
[13:24:27] <sham1> But doesn't the buffer overflow just affect the VM
[13:24:38] <sham1> Since that's where pragma keeps candice
[13:24:40] <sham1> candide*
[13:24:57] *** Joins: vboykox (~user@199-25-134-95.pool.ukrtel.net)
[13:25:06] <NRK[m]> maybe the VM is what got hacked
[13:25:31] <novns> dave0, sure, but that would be too much unneeded
[13:26:04] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:28:28] *** Quits: ickk (~ickk@user/ickk) (Ping timeout: 260 seconds)
[13:29:38] <novns> NRK[m], `#define NOT ! `  and  `NOT strcmp()` then, the problem is solved
[13:30:05] <sham1> Or just #include <iso646.h>
[13:30:16] <sham1> not strcmp()
[13:30:17] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[13:30:47] <novns> sham1, TIL about iso646.h
[13:30:54] <markand> nobody use that
[13:30:56] <sham1> It's even a freestanding header!
[13:31:07] <novns> will forget this iso646.h very soon
[13:33:43] <sham1> I'll make sure to remind you in that case
[13:35:41] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[13:38:25] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:39:41] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 252 seconds)
[13:39:59] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:40:23] <loganlee[gnu]> hey guys if a header file contains not the full definition of a function but just a prototype, then what's the use of including that header file to my source file? don't i need to define that function some where?
[13:40:56] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:40:57] <caze> loganlee[gnu]: So the code using the function can compile.
[13:41:25] *** Joins: inlight (~thomas@157.35.16.80)
[13:41:25] *** Quits: inlight (~thomas@157.35.16.80) (Changing host)
[13:41:25] *** Joins: inlight (~thomas@user/inlight)
[13:43:17] *** Joins: fe23 (~fe23@2409:8a34:461:9470:b1e2:f545:1b8d:6665)
[13:43:51] <loganlee[gnu]> caze: so if the source file doesn't define the function while importing the header file (that lists the function prototype) then it won't compile?
[13:44:31] <caze> loganlee[gnu]: No, it can compile. It just won't link.
[13:45:02] <caze> loganlee[gnu]: Do you know the difference between compiling and linking?
[13:45:06] <loganlee[gnu]> no
[13:45:22] <caze> Compiling is translating the code.
[13:45:36] <caze> Linking is tying up identifier references.
[13:46:12] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[13:46:20] <loganlee[gnu]> i don't get why we need to include header files
[13:46:30] <sham1> So you get the function prototypes
[13:46:53] <loganlee[gnu]> but each source file can define that function differently?
[13:46:57] <caze> loganlee[gnu]: I told you. > loganlee[gnu]: So the code using the function can compile.
[13:47:30] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[13:47:37] <sham1> loganlee[gnu]: yes. It just happens that you'll get a linking error since you will have multiple definitions of the function
[13:47:42] <sham1> Unless
[13:47:43] <caze> So your code can refer to identifiers that are not defined in the same code. But as long as there is a declaration, the compiler can put in a stub for that identifer, and proceed with the code translation. Then, it's the linker's job to fill in these stubs.
[13:47:46] <sham1> You have `inline`
[13:47:53] *** Joins: frytaped (~frytaped@user/go4godvin)
[13:49:07] <loganlee[gnu]> so who defines the function prototype if it is defined only once for it to link?
[13:49:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:49:27] <loganlee[gnu]> i mean by define, implementing it
[13:49:32] <caze> loganlee[gnu]: Function prototypes are not used for linking.
[13:49:50] <caze> loganlee[gnu]: They are used for compiling.
[13:50:12] <caze> loganlee[gnu]: Remember what you asked: >what's the use of including that header file to my source file?
[13:50:24] <caze> loganlee[gnu]: Remeber my response > loganlee[gnu]: So the code using the function can compile.
[13:50:43] <loganlee[gnu]> who implements the function prototype?
[13:50:53] <caze> loganlee[gnu]: The library author.
[13:51:32] <loganlee[gnu]> what if it's a header file i wrote?
[13:51:42] <caze> loganlee[gnu]: Then you implemented it.
[13:52:02] *** Quits: kuoi (~kuoi@109.175.166.58) (Ping timeout: 240 seconds)
[13:52:19] <loganlee[gnu]> which source file should implement it? i think you just need to implement it once right?
[13:52:24] <dave0> loganlee[gnu]: having a prototype along with the actual function definition lets the compiler do an extra check
[13:52:35] <caze> loganlee[gnu]: Any.
[13:52:52] <caze> loganlee[gnu]: There are design considerations, but the compiler and linker don't care.
[13:53:02] <sham1> I feel like there's a bit of a confusion of terms here
[13:53:08] <fizzie> It's conventional (but not mandatory) for declarations in `foo.h` to be defined in `foo.c`.
[13:53:09] <NRK[m]> loganlee[gnu]: i don't think you want to do that unless you want to encounter subtle bugs
[13:53:22] <caze> loganlee[gnu]: It's a bit like asking how should I organize my emails? Your email client doesn't care how you do it.
[13:53:42] <NRK[m]> (you'll also get a type mismatch warning if you're using `-flto` i believe)
[13:53:52] <caze> Your compiler and linker don't care where you implement your functions.
[13:54:09] <caze> NRK[m]: Do what?
[13:54:41] <NRK[m]> err, wait you said define not declare.
[13:54:58] <loganlee[gnu]> so say my header file contains function prototype f(). then in one of my source files i include that header then define it. then i include that header file in another source file. that source file will have access to function f()'s content right?
[13:55:22] <caze> loganlee[gnu]: That source file will compile.
[13:55:40] <loganlee[gnu]> i need to test this
[13:55:47] <dave0> loganlee[gnu]: no, but there is enough information in the prototype so that the second source file can call the function in the first source file
[13:55:56] <caze> loganlee[gnu]: That is, you won't get an error for calling the function in that source file.
[13:56:06] <NRK[m]> still, it's not something you'd want to do. unless you're trying to create a shim
[13:56:06] <sham1> What you have discovered is that translation units don't all need to contain the definitions of functions
[13:56:10] *** Quits: frytaped (~frytaped@user/go4godvin) (Quit: frytaped)
[13:56:15] <sham1> Just one will do
[13:56:20] <caze> loganlee[gnu]: Do you know the difference between declarations and definitions?
[13:56:40] <loganlee[gnu]> caze: i guess you 'declare' a function prototype and you 'define' it in the source?
[13:57:26] <caze> loganlee[gnu]: Yes, but more generally. You at least know that you have to declare a variable before you can use it, correct? You can't just do: a = 42; without first having something like int a;
[13:57:43] <loganlee[gnu]> caze: yeh
[13:57:56] <caze> loganlee[gnu]: It's the same with functions. You can't do foo(); without at least first having a declaration of foo.
[13:58:23] <caze> loganlee[gnu]: You will get a compiler error saying that it doesn't know what you're talking about.
[13:58:50] <caze> loganlee[gnu]: That is why you need at least a function declaration, but typically, a function prototype.
[13:58:50] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:59:00] <loganlee[gnu]> ok
[13:59:44] <loganlee[gnu]> and 'linking' means you can share the prototype in multiple sources?
[14:00:54] <sham1> No. Linking just means linking. You bring together your object files produced from the translation units
[14:00:57] <caze> omg
[14:01:34] <caze> > loganlee[gnu]: Function prototypes are not used for linking.
[14:01:43] <loganlee[gnu]> ok
[14:01:47] <NRK[m]> do what where?
[14:01:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[14:02:17] <caze> loganlee[gnu]: Do you know what a function prototype is?
[14:02:27] <loganlee[gnu]> caze: yes i used it before
[14:02:51] <loganlee[gnu]> i put function prototype before defining it
[14:02:59] <caze> loganlee[gnu]: No.
[14:03:00] *** Joins: seninha (~seninha@user/seninha)
[14:03:06] *** Joins: strajder (~strajder@user/strajder)
[14:03:10] <caze> loganlee[gnu]: You put function prototype before using calling it.
[14:03:24] <loganlee[gnu]> ah ok
[14:03:38] <caze> loganlee[gnu]: A function prototype is a type of declaration.
[14:03:46] <loganlee[gnu]> ok
[14:04:08] <caze> loganlee[gnu]: Just like you must have a declaration of a before doing a = 42;
[14:04:21] <caze> loganlee[gnu]: You must have a function prototype before calling foo().
[14:04:29] <loganlee[gnu]> ok i got it
[14:04:30] <caze> loganlee[gnu]: This is required for compilation.
[14:04:39] <loganlee[gnu]> ah!!!!!!!!!!!
[14:05:24] *** Quits: defjam (~eb0t@90.209.247.249) (Quit: WeeChat 3.0)
[14:05:30] <caze> Well technically you only need a function declaration before calling foo().
[14:05:33] <NRK[m]> doesn't it default to `int foo();` if it doesn't find anything?
[14:05:38] *** Quits: chenqisu1 (~bhca7d@183.217.200.249) (Ping timeout: 256 seconds)
[14:05:49] <caze> But it won't hurt you to think that you need a function prototype.
[14:06:05] <caze> NRK[m]: Not anymore.
[14:06:15] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[14:06:32] <caze> Depends what you mean by "it", though.
[14:07:28] *** Joins: marlboro (~i.am@user/marlboro)
[14:07:41] *** Quits: citrons (~citrons@alt.mondecitronne.com) (Ping timeout: 256 seconds)
[14:07:41] *** Quits: regulate (~regulate@koduro.com) (Ping timeout: 256 seconds)
[14:07:50] <NRK[m]> caze: yeah, you don't need a prototype for compiling.
[14:07:56] <loganlee[gnu]> why don't we have a single source file containing all function definitions for a header file?
[14:08:12] <sham1> Why would we?
[14:08:15] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: jaeckel (~jaeckel@sleipnir.jaeckel.eu) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: crudo (~crudo@livredigital.com) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: root__ (~root@157.245.144.252) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: mattroelle (~Matt_Roel@funbox.mattroelle.com) (Ping timeout: 256 seconds)
[14:08:20] <NRK[m]> it'll be a `-Wimplicit-function-declaration` warning, not error.
[14:08:27] <caze> loganlee[gnu]: Because you don't always want everything to be "in scope".
[14:08:28] <sham1> -Werror
[14:09:07] <fizzie> NRK[m]: It's an error as far as the language is concerned. Implicit declarations were a C89 thing, but removed in C99.
[14:09:30] *** Joins: regulate (~regulate@koduro.com)
[14:09:32] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[14:09:45] <caze> ,c11 F.7
[14:09:54] <caze> of candide
[14:09:55] *** Joins: root__ (~root@157.245.144.252)
[14:10:12] *** Joins: mattroelle (~Matt_Roel@funbox.mattroelle.com)
[14:10:17] <caze> NRK[m]: Paragraph 7 of the Forward lists the changes from previous versions of the standard.
[14:10:27] <sham1> pragma-: fix your bot
[14:10:45] <loganlee[gnu]> i still don't get which source file(s) should contain function definitions of a header file
[14:10:49] <fizzie> In candide citation syntax, "F.n" would be subchapter n of appendix F, anyway.
[14:11:01] <sham1> loganlee[gnu]: it doesn't matter
[14:11:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Ping timeout: 240 seconds)
[14:11:13] <loganlee[gnu]> sham1: ok!
[14:11:15] <sham1> There is no specified source file
[14:11:16] <caze> loganlee[gnu]: It really depends on how your program is structured.
[14:11:35] <NRK[m]> the main problem here is that loganlee[gnu] isn't entirely familiar with the entire compilation pipeline.
[14:11:52] <caze> loganlee[gnu]: The thing to understand is that source files are almost like a next higher level of code block.
[14:12:46] <caze> loganlee[gnu]: So much like the way your split your functions up into various loops and nested loops, depending on what they need to do, you split your program up into files depending on what the program does.
[14:13:01] <loganlee[gnu]> ok
[14:13:21] <caze> loganlee[gnu]: If you're making a library for other people to use, there is a certain set of conventions.
[14:13:36] <loganlee[gnu]> caze: ok
[14:14:17] <NRK[m]> source -> executable
[14:14:48] <caze> loganlee[gnu]: So if I'm writing a stack library, I can implement it using a file scope array of fixed size. I can provide a header with push and pop functions.
[14:15:14] <caze> loganlee[gnu]: If I decide the fixed array sucks, I can change it to be a linked list. But I don't have to change the function prototypes in the header.
[14:15:43] <loganlee[gnu]> ok
[14:15:46] <caze> loganlee[gnu]: I don't have to change the API at all. All that is required of programs that were using my old array version is to relink against my new version.
[14:15:59] <NRK[m]> it's a multi-step process, unless you're familiar (at least at a high level) of all the steps required to get from source -> executable, alot of the "requirements" around function prototype will just seem like arbitary limitations.
[14:16:01] <loganlee[gnu]> ok
[14:16:18] *** Joins: jaeckel (~jaeckel@sleipnir.jaeckel.eu)
[14:16:47] <caze> NRK[m]: And you don't have to know or care anything about what I changed in my library implementation.
[14:17:00] * sham1 mutters something about one-pass compilers
[14:17:28] <NRK[m]> i think gcc will still compile fine even with -std=c99
[14:17:36] *** Joins: inlight (~thomas@157.35.16.80)
[14:17:36] *** Quits: inlight (~thomas@157.35.16.80) (Changing host)
[14:17:36] *** Joins: inlight (~thomas@user/inlight)
[14:17:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:18:13] <caze> NRK[m]: You need a lot of flags to get gcc to be standards conformant.
[14:18:26] <sham1> -pedantic
[14:19:43] <NRK[m]> loganlee[gnu]: maybe this will help you: https://hackthedeveloper.com/c-program-compilation-process
[14:19:53] <loganlee[gnu]> NRK[m]: ok i'll read it
[14:19:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:20:50] <fizzie> It warns about implicit function declarations by default with `-std=c99` or later, unlike with `-std=c89`. Yes, it's "only" a warning, but that's all that's required of a conforming implementation anyway.
[14:21:04] <loganlee[gnu]> is there a linux ide that uses gcc to compile and generates makefile automatically?
[14:21:20] *** Joins: crudo (~crudo@livredigital.com)
[14:21:25] <NRK[m]> caze: unless i see performance drop, then i'll care >:(
[14:21:27] <nomagno> -std=C11/99/90 -pedantic -Wall
[14:21:51] <tarzeau> loganlee[gnu]: i'm not aware of one. but writing simple Makefile is not too hard also cmake is not too hard
[14:21:59] <loganlee[gnu]> tarzeau: ok
[14:22:34] <sham1> ok
[14:22:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:23:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[14:23:39] <NRK[m]> probably is. though i'd advice against using such thing, using something without having a decent clue of what you're doing is an easy way to get yourself into undebuggable problems.
[14:23:41] <nomagno> Makefiles are fairly simple yeah, they're essentially just the simplest form of dependency management/CI
[14:24:00] <nomagno> You just need to read the docs
[14:24:06] <loganlee[gnu]> i'll need to read and learn
[14:24:08] <nomagno> The GNU Make introduction is fairly nice
[14:24:32] <NRK[m]> the make manpage isn't too nice though.
[14:25:13] <nomagno> NRK: That's because GNU uses Texinfo for user guides. Which I honestly understand, Troff SUCKS for organizing documentation
[14:25:28] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:25:53] <caze> loganlee[gnu]: I'll make you an example.
[14:25:57] <NRK[m]> ,oO( info-pages sucks as well )
[14:26:06] <loganlee[gnu]> caze: that would be great
[14:26:15] <nomagno> NRK: Fair, but at least they have local hyperlinks
[14:26:41] *** Joins: digilink (~digilink@user/digilink)
[14:27:54] <NRK[m]> i kinda like this as a `(GNU) make crash course` : http://nuclear.mutantstargoat.com/articles/make/
[14:31:36] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:32:48] <caze> loganlee[gnu]: https://ideone.com/knu25a
[14:33:55] <loganlee[gnu]> caze: i'll bookmark it and come back after some study thanks a lot!
[14:34:24] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[14:34:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[14:34:30] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:35:38] <caze> loganlee[gnu]: First thing you should see is that if you remove the contents of stack.h, it won't compile, even though the function definitions are still at the bottom of the file.
[14:35:43] <loganlee[gnu]> caze: do i need #include "stack.h" inside stack.c?
[14:35:49] <caze> loganlee[gnu]: https://ideone.com/FiXCq2
[14:36:25] <loganlee[gnu]> ok
[14:36:43] *** Joins: Zenton (~user@user/zenton)
[14:37:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694)
[14:37:57] <loganlee[gnu]> caze: obviously #include "stack.h" is needed inside main.c but what about stack.c?
[14:38:45] <caze> loganlee[gnu]: In this case the only thing you need from stack.h is the typedef struct stack stack;
[14:39:35] <loganlee[gnu]> caze: so stack.h is associated by name to stack.c?
[14:39:39] <caze> loganlee[gnu]: Since there are two functions: pop and push, and neither calls the other, then you don't need the prototype for either function.
[14:40:07] <caze> loganlee[gnu]: Remember, you only need the prototype for where the function is used.
[14:40:23] <caze> loganlee[gnu]: There is not an automatic link, this is only convention.
[14:40:25] <fizzie> It's also *useful* (if not strictly *necessary*) to have the function declarations from stack.h included in stack.c because it allows the compiler to check the declarations in the header actually match the definitions.
[14:40:58] <loganlee[gnu]> but do header file and source file need to have same name (without the extension)
[14:41:23] <caze> loganlee[gnu]: No.
[14:42:05] <caze> loganlee[gnu]: stack.c should have another include. Can you see what that is?
[14:43:06] <loganlee[gnu]> sorry guys. i'm still confused as to how function definitions in stack.c is 'saved'
[14:43:17] <loganlee[gnu]> so main.c can see it
[14:43:26] <caze> loganlee[gnu]: main.c cannot see it.
[14:43:44] <caze> loganlee[gnu]: That is why compilation fails if you remove the prototypes above main.
[14:45:16] <caze> loganlee[gnu]: Even if the function definition for push and pop are in the same file as the main function, it still cannot see them. https://ideone.com/FiXCq2
[14:45:38] <caze> loganlee[gnu]: You need the prototype (declaration) *before* you use them. Not after.
[14:46:11] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[14:46:28] <NRK[m]> loganlee[gnu]: how exactly are you trying to "compile" that thing?
[14:46:45] <caze> (A function definition serves as a function prototype)
[14:46:47] *** Joins: Jong (~Jong@174.27.15.0)
[14:47:16] <NRK[m]> or rather what im asking is are you familiar with multi-file compilation?
[14:47:17] <loganlee[gnu]> i think i'll just have to try it myself
[14:47:22] <loganlee[gnu]> thanks a lot guys
[14:47:54] <caze> loganlee[gnu]: Did you actually break that program apart into separate files?
[14:48:00] <loganlee[gnu]> caze: not yet
[14:48:07] <caze> loganlee[gnu]: You don't have to.
[14:48:19] <loganlee[gnu]> ok
[14:48:23] <caze> In fact, it probably won't work.
[14:48:37] <caze> > loganlee[gnu]: stack.c should have another include. Can you see what that is?
[14:51:57] *** Quits: kanin (~kanin@2409:8a14:10e7:52d0:4526:1e35:f024:52e7) (Ping timeout: 240 seconds)
[14:54:07] *** Joins: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16)
[14:54:52] *** Quits: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16) (Client Quit)
[14:59:45] <loganlee[gnu]> caze: it worked when i #include "stack.h" inside stack.c
[15:00:28] <loganlee[gnu]> it compiled and run with output "3 2 1"
[15:00:57] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:00:57] *** Quits: alch (~alch@151.36.201.147) (Ping timeout: 240 seconds)
[15:03:00] *** Joins: alch (~alch@151.36.223.94)
[15:04:29] <loganlee[gnu]> i'm guessing i could also just list all the prototypes at the top of stack.c instead of #include "stack.h"
[15:06:13] <loganlee[gnu]> and of course main.c has #include "stack.c" as well
[15:06:27] <loganlee[gnu]> sorry #include "stack.h"
[15:07:15] <dave0> where's the code?
[15:08:24] <loganlee[gnu]> https://paste.debian.net/1228571/
[15:09:53] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[15:09:55] *** Joins: kuoi (~kuoi@109.175.166.60)
[15:10:20] <dave0> looks nice, does it work?
[15:10:25] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:10:32] <loganlee[gnu]> dave0: yes
[15:10:50] <dave0> cool
[15:11:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[15:12:16] <dave0> loganlee[gnu]: you could leave out the 'struct' word on line 11
[15:12:59] <dave0> save a couple of bytes :-)
[15:13:19] *** Joins: Klinda (~superleag@user/klinda)
[15:17:50] *** Joins: Byzantine (~Byzantine@2a02:1388:95:5547:a941:d2f:4d93:54e0)
[15:18:19] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.32)
[15:20:09] <the_lanetly_052> Hi all, today i had interview and they asked me what is your C level lang (senior, mid etc.). What should I have said?
[15:20:32] <megaTherion> truthful answer? :D
[15:20:37] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:20:43] <megaTherion> I guess you'd have to prove your claim in some way
[15:21:15] <the_lanetly_052> I said that I never will be senior in C because of undefined behaviors :D
[15:21:32] <NRK[m]> :DDD
[15:22:59] <Amun-Ra> if you say you know quantum physics you don't know quantum physics; it's the same with C
[15:24:14] <the_lanetly_052> Amun-Ra: that's a good answer for next interview :D
[15:24:27] <Amun-Ra> :>
[15:24:45] *** Quits: Byzantine (~Byzantine@2a02:1388:95:5547:a941:d2f:4d93:54e0) (Ping timeout: 256 seconds)
[15:25:13] <NRK[m]> what were you interviewing for?
[15:25:49] <the_lanetly_052> for job interview
[15:26:31] <NRK[m]> i meant what type of job...
[15:28:04] <clarity> the_lanetly_052: You should have said whatever the interviewer wants to hear
[15:28:20] <clarity> And you need a crystal ball to figure out what they want to hear
[15:28:21] <clarity> :)
[15:28:33] <the_lanetly_052> oh sorry, they have cloud migration (if i understand correctly it works on hypervisor level) software that they are looking for C developer for that.
[15:28:41] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 245 seconds)
[15:28:59] <clarity> Interviewers are quirky beasts
[15:31:03] <the_lanetly_052> clarity: I just said I am junior in C development and I won't be senior :D
[15:32:39] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:32:46] *** Joins: dracolide (~dracolide@203.189.118.253)
[15:33:12] *** Joins: pulse (~pulse@user/pulse)
[15:33:24] *** Joins: csrf (~csrf@user/csrf)
[15:33:31] *** Joins: gareppa (~gareppa@user/gareppa)
[15:33:59] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:34:29] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:35:41] <dave0> you could tell a joke!       A programmer walks into a bar and asks the bartender for 1.00000000000003123939 root beers. Bartender says, I'll have to charge you extra, that's a root beer float. Programmer says, better make it a double.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:47] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[15:39:02] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[15:40:37] <sham1> Har har
[15:40:56] <NRK[m]> kek
[15:44:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:45:18] <fizzie> What's the SI unit for measuring a C developer level as? Milliritchies?
[15:48:09] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:52:19] <clarity> Who defines levels anyway
[15:52:45] <NRK[m]> -O3
[15:53:46] <NRK[m]> "the higher levels of optimization you're confident that your code won't break in, is your level as well" - me, right now.
[15:54:29] <dave0> i never use more than -O
[15:55:27] *** Quits: regreg (~regreg@2a02:2f09:500b:8000:4598:d534:fe43:8800) (Read error: Connection reset by peer)
[15:55:34] <fizzie> There's the standard star ranking, of course.
[15:55:51] <fizzie> (How many `*`s you have in a single declarator defines your rank.)
[15:57:47] <clarity> I can't remember ever finding a legitimate use for more than three
[15:58:07] <clarity> I guess I've reached my ceiling :(
[15:59:32] <dave0> does this count?  int(*a)() = ********** main;
[15:59:44] <fizzie> It's in the initializer, not the declarator.
[15:59:48] <dave0> doh
[16:00:50] <fizzie> I don't know about legitimate uses, but we had some links on channel to "real" pieces of software with at least 5 or 6. Should've saved those somewhere.
[16:01:11] <fizzie> For example, musl has a `static struct aio_queue *****map;` here: https://git.musl-libc.org/cgit/musl/tree/src/aio/aio.c#n75
[16:01:15] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[16:03:12] *** Joins: Atque (~Atque@user/atque)
[16:07:00] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:07:12] *** Joins: shivesh (~shivesh@user/shivesh)
[16:08:37] *** Quits: jkotra (~jkotra@223.230.82.56) (Ping timeout: 240 seconds)
[16:10:29] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Client Quit)
[16:10:54] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:16:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[16:20:37] *** Quits: Kerr (~Kerr@2601:602:ce01:1f0:24d0:1b76:7dc4:51ff) (Quit: Client closed)
[16:22:29] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[16:22:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:24:54] *** kurahaupo_ is now known as kurahaupo
[16:29:30] *** Joins: kanin (~kanin@2409:8a14:10e7:52d0:e868:e5f3:fdc5:9fd)
[16:30:31] *** Quits: kanin (~kanin@2409:8a14:10e7:52d0:e868:e5f3:fdc5:9fd) (Max SendQ exceeded)
[16:31:00] *** Joins: kanin (~kanin@2409:8a14:10e7:52d0:e868:e5f3:fdc5:9fd)
[16:32:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[16:34:41] *** Joins: qorg11 (~lain@2605:6400:c022:fa04::666)
[16:37:50] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:38:05] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:38:34] *** Joins: inlight_ (~thomas@157.35.6.129)
[16:39:22] *** Quits: inlight_ (~thomas@157.35.6.129) (Client Quit)
[16:40:54] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[16:41:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[16:46:01] <bookworm> oO
[16:46:12] <bookworm> that can't be sane
[16:47:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:47:46] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:48:12] <fizzie> It's just a page table, or a fixed-depth bytewise trie, depending on how you view these things.
[16:52:03] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:53:06] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:00:34] *** Joins: Nutte35 (~Nutte@43.231.30.216)
[17:02:59] *** alicef_ is now known as alicef
[17:03:17] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:04:27] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:06:23] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:06:45] <constxd> kings
[17:08:33] <Amun-Ra> "five star programmer badge achieved"
[17:08:40] *** Joins: regreg (~regreg@2a02:2f09:500b:8000:dc:42d0:262e:3f86)
[17:10:22] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[17:10:57] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:15:25] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:15:48] <scaramanga> hah, it's a trie, you could say a page-table is the same thing but generally they're not straight-up pointers due to the flags :)
[17:15:56] <scaramanga> oh, was scrolled up, lol
[17:15:58] <scaramanga> beat me to it
[17:16:35] <scaramanga> radix-tree, whatever
[17:18:54] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:23:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[17:26:11] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:26:21] *** Joins: tradar (~tradar@user/tradar)
[17:26:26] *** Joins: jkotra (~jkotra@223.230.82.56)
[17:26:36] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[17:27:05] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:27:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:31:35] *** Joins: candide (~pbot3@about/c/bot/candide)
[17:31:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Quit: Leaving)
[17:31:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[17:32:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:33:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:34:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:36:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:37:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:37:20] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:38:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:39:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:44:03] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[17:47:16] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:49:49] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[17:52:18] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 260 seconds)
[17:56:34] *** Joins: serbest (~ike@user/serbest)
[17:57:54] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:58:46] *** Joins: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com)
[18:01:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[18:01:57] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[18:06:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:06:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:06:01] *** Joins: wroathe (~wroathe@user/wroathe)
[18:17:49] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:25:44] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[18:30:14] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:33:55] *** Joins: Alhazred (~Alhazred@86.106.74.43)
[18:37:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661)
[18:37:35] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:41:25] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[18:43:38] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[18:44:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:45:48] *** Quits: tm512 (~tm512@user/tm512) (Read error: Connection reset by peer)
[18:46:02] *** Joins: tm512 (~tm512@50.53.132.213)
[18:46:11] *** Quits: tm512 (~tm512@50.53.132.213) (Changing host)
[18:46:11] *** Joins: tm512 (~tm512@user/tm512)
[18:49:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:49:30] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[18:49:32] *** Quits: Nutte35 (~Nutte@43.231.30.216) (Ping timeout: 240 seconds)
[18:50:06] *** Joins: remavas (~Remavas@user/remavas)
[18:51:48] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[18:52:55] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[18:53:19] *** Joins: serbest (~ike@user/serbest)
[18:53:20] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[18:53:50] *** Joins: Atque (~Atque@user/atque)
[18:56:50] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:57:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:57:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:57:29] *** Joins: wroathe (~wroathe@user/wroathe)
[18:58:27] *** Quits: alch (~alch@151.36.223.94) (Read error: Connection reset by peer)
[18:59:01] *** Quits: dracolide (~dracolide@203.189.118.253) (Quit: Leaving)
[19:01:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[19:02:19] *** Joins: alch (~alch@151.38.135.157)
[19:02:23] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[19:03:50] *** Quits: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net) (Remote host closed the connection)
[19:04:46] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[19:04:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:10:42] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:12:23] *** Joins: raym (~raym@user/raym)
[19:15:36] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[19:16:40] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:17:47] *** Joins: jellie (~luv_panda@user/jellie)
[19:17:58] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:21:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[19:22:18] *** Joins: r1d1 (~tom@0543dbad.skybroadband.com)
[19:22:35] *** Joins: magla (~gelignite@55d4248d.access.ecotel.net)
[19:25:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[19:28:46] *** Joins: gtlsgamr (~gtlsgamr@user/gtlsgamr)
[19:29:02] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (Remote host closed the connection)
[19:29:47] <gtlsgamr> Yesterday I posted a question related to tabspaces, and had a discussion related to it. I have written a program wanted people to see if there is a way it can be improved / any problems that might arise from the code
[19:29:58] <gtlsgamr> http://0x0.st/oHH3.c
[19:29:58] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 250 seconds)
[19:33:52] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[19:33:53] <twkm> c's type is wrong, i don't like ( attached to other than function names, and fyi the final count++ isn't part of the else.
[19:34:09] <NRK[m]> why have `putchar(c);count++;` on the same line.
[19:34:45] <gtlsgamr> So even if they're on the same line, only the first statement is counted eh?
[19:35:02] <fizzie> It's quite misleading to put the `count++;` where it is, since it makes it look like it's part of the `else` branch, but it's not.
[19:35:09] <NRK[m]> i'd also avoid `main()` , use `int main(void)` explicitly.
[19:35:20] <twkm> both are executed, the putchar as part of the else, the count++ no matter then or else.
[19:35:32] <gtlsgamr> ahhh got it
[19:35:34] <NRK[m]> ^
[19:35:50] <NRK[m]> you need a compound statement to put them both on the else branch, aka { }
[19:36:00] <gtlsgamr> Understood.
[19:36:44] <gtlsgamr> twkm: What do you mean c's type is wrong?
[19:36:55] <twkm> what type does getchar return?
[19:37:15] <gtlsgamr> int
[19:37:24] <gtlsgamr> got it
[19:37:42] <twkm> also read the words around their first descriptions of getchar.
[19:37:55] <gtlsgamr> just one more thing, twkm: you don't like ( attached.. is that a personal preference or a C convention?
[19:38:27] <twkm> personal.
[19:38:30] <gtlsgamr> and NRK[m] I learnt it like int main() in school, but the book I am reading right now, K&R, shows it as only main().
[19:39:24] <NRK[m]> that's because K&R is using C89. where it'll default to `int main`.
[19:39:26] <twkm> the words in k&r describe why you see just main(), which are that in c89 int was assumed.
[19:39:57] <gtlsgamr> Ah! That makes sense!
[19:40:16] <NRK[m]> also, if you aren't already. always compile with `-std=cNN -Wall -Wextra -Wpedantic`
[19:40:20] <gtlsgamr> So is there something wrong with learning C89? Will it cause problems later or is it nearly similar with C99?
[19:40:26] <twkm> c99 removed that implied type, so if you use a c99 compiler you have to write it explicitly: int main().
[19:40:39] <NRK[m]> replace `cNN` with whatever version of C you're using.
[19:40:42] <twkm> learning c89 is fine.
[19:40:47] <gtlsgamr> 21:40      NRK[m] ‚îÇ  also, if you aren't already. always compile )) <--- I wasn't doing this. I will have to see what these args do..
[19:41:03] <NRK[m]> they enable useful warnings
[19:41:32] <twkm> it is an essential base, which you can laterr learn the newer revisions.
[19:42:00] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[19:42:07] <NRK[m]> and -std specifies which standard you're using. gcc typically defaults to some GNUC version if you don't specify anything.
[19:42:14] <gtlsgamr> NRK[m]: okay I have set an alias for gcc with those flags. twkm okay, I will continue with K&R then.
[19:42:17] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 240 seconds)
[19:43:08] <NRK[m]> for now an alias would be fine. though later on you should pick up some build system, GNU make would be my choice.
[19:44:24] <gtlsgamr> Does K&R cover build systems or will I have to learn them seperately? I am learning C from scratch, so I am going in blind. I will finish this book and then move on to advanced stuff I guess.
[19:44:39] <twkm> seperately.
[19:45:05] <gtlsgamr> alright. Thank you NRK[m] twkm !
[19:45:37] <gtlsgamr> Does this look better now? http://0x0.st/oHHl.c
[19:47:24] *** Joins: AsenMx (~asen@user/asenmx)
[19:47:43] <NRK[m]> were did you pick up this from btw `for (int i =` ? because K&R doesn't teach that (since it's a C99 feature)
[19:47:56] <fizzie> '#' isn't very blank. ;)
[19:48:01] <NRK[m]> s/were/where/
[19:48:30] <gtlsgamr> NRK[m]: In 10th grade C class I think.. I did C a long time ago and then moved on to python. Recently picked up interest again
[19:48:54] *** Joins: jhnsn (~jx0@199.229.250.98)
[19:48:55] <gtlsgamr> I will try to lose that habit
[19:49:02] <gtlsgamr> fizzie: Haha! True
[19:49:15] <twkm> sie used // too, which isn't c89 either.  otoh, those don't seem worth avoiding since they are in current c.
[19:49:17] <NRK[m]> hmm, it's fine. but if you're going to be using c99 features then i'd use `-std=c99` as well.
[19:49:37] <gtlsgamr> No I will try to stick with C89
[19:49:41] <gtlsgamr> and change my code accordingly
[19:49:51] <NRK[m]> yeah, gcc doesn't even compile with -std=c89 and `//` style comments afaik
[19:49:54] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[19:50:00] *** Quits: jhnsn (~jx0@199.229.250.98) (Client Quit)
[19:51:02] *** Joins: jellie (~luv_panda@user/jellie)
[19:51:37] *** Quits: jx0 (~jx0@199.229.250.46) (Ping timeout: 240 seconds)
[19:51:38] *** Joins: jhnsn (~jx0@199.229.250.98)
[19:51:59] <gtlsgamr> True true
[19:52:29] <gtlsgamr> You are right it didn't compile with // comments
[19:52:32] *** jhnsn is now known as jx0
[19:52:37] <twkm> well, with -pedantic.
[19:53:04] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[19:53:23] <NRK[m]> it's fine to use c99. just change your compiler -std accordingly, since it affects warnings (`-Wpedantic`)
[19:53:44] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Read error: Connection reset by peer)
[19:53:58] <gtlsgamr> Just out of curiousity, Did any one of you start learning from K&R?
[19:54:04] <pony> how well is C11 supported?
[19:54:10] <pony> C17 for that matteR?
[19:54:19] *** Quits: cosimone (~user@93-44-184-251.ip98.fastwebnet.it) (Remote host closed the connection)
[19:54:43] <NRK[m]> twkm: i think -std=c89 is enough to trigger it, no -pedantic needed.
[19:54:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:55:02] <NRK[m]> gtlsgamr: me.
[19:55:09] <twkm> yet without -pedantic other not c89 this are allowed.
[19:55:09] <Hexmind> gtlsgamr, I did. And I found K&R to be the best programming book I ever read.
[19:55:18] <twkm> err, not c89 things.
[19:55:25] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[19:55:50] <NRK[m]> pony: afaik msvc supports c11 but doesn't fully support c99
[19:56:03] <pony> :O
[19:56:05] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Read error: Connection reset by peer)
[19:56:17] <pony> weird
[19:56:19] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[19:56:29] <gtlsgamr> NRK[m]: Hexmind: Did you have to move on to different books for advanced programming?
[19:57:18] <NRK[m]> not really, you can pick up the later additions/features rather easily.
[19:57:23] <Hexmind> gtlsgamr, I'm not recommending to stay with that book. Just that it teaches a very solid foundation.
[19:57:25] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[19:57:32] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 252 seconds)
[19:57:54] <NRK[m]> even with alot of the C99/11 additions, C is still a rather small language.
[19:58:00] <Hexmind> I guess it depends what kind of programming you want to do.
[19:58:10] <twkm> you can conform to a standard without conforming to every earlier standard, and specifically c11 made it easier to conform where c99 required things some vendors weren't ready to attempt.
[19:58:50] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Remote host closed the connection)
[19:59:00] *** Quits: kanin (~kanin@2409:8a14:10e7:52d0:e868:e5f3:fdc5:9fd) (Ping timeout: 250 seconds)
[19:59:09] *** Joins: bbju (~bbju@103.144.149.220)
[19:59:18] *** Joins: jellie (~luv_panda@user/jellie)
[19:59:32] <NRK[m]> gtlsgamr: for "advanced programming" i'd look into good quality source codes instead.
[19:59:41] <gtlsgamr> Hexmind: I am plannign to build a strong foundation. I will try to stick with it, and then change if things need to change.
[19:59:48] <twkm> alas not as small as it once was, e.g., the addition of atomics, complex types, and threads.
[19:59:55] <gtlsgamr> NRK[m]: that's a suggestion I have not heard until now.
[20:00:20] *** Joins: jhnsn (~jx0@199.229.250.98)
[20:01:15] <Hexmind> gtlsgamr, once you're done with K&R, pick up "The Pragmatic Programmer".
[20:01:21] <gtlsgamr> I will try to do that as well, but first, basics!
[20:01:27] <gtlsgamr> Hexmind: Let me check that out
[20:01:32] <NRK[m]> well, i've never finished K&R, it helped me get my foot on the door but most stuff i learned from just messing around on existing source code.
[20:02:02] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[20:02:32] *** Quits: jx0 (~jx0@199.229.250.98) (Ping timeout: 240 seconds)
[20:02:59] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 256 seconds)
[20:03:13] *** Quits: jhnsn (~jx0@199.229.250.98) (Client Quit)
[20:03:18] <ChoHag> gtlsgamr: Real code will set you in a far better stead than any amount of books will.
[20:03:36] *** Joins: jx0 (~jx0@199.229.250.98)
[20:03:41] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[20:03:56] <gtlsgamr> ChoHag: But I still need to get the basics clear right? I can't just jump in directly
[20:04:33] <ChoHag> If you're patient.
[20:06:36] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:06:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:08:57] <abraxis> i've found it helpful to come at it from both ends. read k&r + other books and read through source code to see how they accomplish something you'd like to do in whatever you're toying around with
[20:09:29] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Read error: Connection reset by peer)
[20:12:34] *** Quits: regreg (~regreg@2a02:2f09:500b:8000:dc:42d0:262e:3f86) (Quit: Leaving)
[20:13:09] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:13:15] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:14:53] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:16:40] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[20:21:29] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Quit: symb0l)
[20:23:44] *** Joins: Alhazred (~Alhazred@86.106.74.43)
[20:25:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:25:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:25:15] *** Joins: wroathe (~wroathe@user/wroathe)
[20:25:24] *** Joins: kanin (~kanin@2409:8a14:10e7:fa80:94e5:9c21:2378:713)
[20:25:26] *** Quits: kanin (~kanin@2409:8a14:10e7:fa80:94e5:9c21:2378:713) (Remote host closed the connection)
[20:27:10] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.32) (Ping timeout: 250 seconds)
[20:29:08] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:31:53] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:33:08] *** Joins: Guest17 (~Guest17@8ta-246-29-103.telkomadsl.co.za)
[20:33:44] *** Joins: mahmutov (~mahmutov@5.176.46.201)
[20:34:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:35:09] *** Joins: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net)
[20:36:19] <Guest17> im a c hacker hie everyone
[20:37:05] <qorg11> Hello Guest17 i am too
[20:37:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:38:51] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Ping timeout: 268 seconds)
[20:39:14] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[20:39:28] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 268 seconds)
[20:39:38] <Guest17> @qorg nice to meet you
[20:40:03] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[20:41:07] <qorg11> same
[20:43:44] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[20:45:40] *** Joins: seninha (~seninha@user/seninha)
[20:45:45] *** Joins: kubast2 (~kubast2@user/kubast2)
[20:46:15] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[20:46:15] *** yamchah2_ is now known as yamchah2
[20:46:51] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Ping timeout: 250 seconds)
[20:48:50] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:49:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:49:57] <kubast2> How does one load 8 elements of a char array into a MMX register? I never manage to write into MM0 register; Do movq opands swap their purpose when one of them is a dereference of a register, at least that's what I have noticed when working with gdb and printing the register+mem values;
[20:50:32] *** Joins: badsektor (~badsektor@user/badsektor)
[20:50:52] *** Quits: fe23 (~fe23@2409:8a34:461:9470:b1e2:f545:1b8d:6665) (Quit: fe23)
[20:51:28] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:52:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:52:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:52:22] *** Joins: wroathe (~wroathe@user/wroathe)
[20:53:30] *** Joins: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d)
[20:54:32] <kubast2> I have so far: Overwritten rax(then I swapped opands), then haven't overwritten rax but didn't writte to MM0, got rid of (*((unsigned long*)&r/*pointer to char[8]*/))), and changed it into r; and the assembly requested into "movq (%0), %%mm0", both overwrite memory at location of %0 with contents of MM0;
[20:54:40] <Amun-Ra> kubast2: I'd ask that on ##asm, too
[20:54:49] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[20:55:18] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:55:22] *** Joins: tiotags (~tiotags@user/tiotags)
[20:55:46] *** Joins: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2)
[20:55:59] *** Joins: bebyx (~Thunderbi@user/bebyx)
[20:56:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[20:57:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[20:57:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:02:00] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[21:02:50] *** Joins: kuber (~kuber@97-113-209-119.tukw.qwest.net)
[21:04:57] *** Quits: LuKaRo_ (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[21:06:08] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[21:06:21] *** Joins: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9)
[21:08:05] *** Joins: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com)
[21:08:30] *** Quits: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960) (Quit: Konversation terminated!)
[21:09:10] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[21:11:04] *** Quits: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (Client Quit)
[21:11:06] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:12:58] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b2b00000000000001f9.dip0.t-ipconnect.de)
[21:13:36] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[21:14:17] *** Joins: symb0l_ (~symb0l@user/symb0l)
[21:14:39] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[21:16:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[21:17:13] *** Quits: Guest17 (~Guest17@8ta-246-29-103.telkomadsl.co.za) (Ping timeout: 256 seconds)
[21:17:29] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[21:20:38] *** Joins: Akiva (~Akiva@user/Akiva)
[21:21:20] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[21:22:06] *** Parts: kubast2 (~kubast2@user/kubast2) (Leaving)
[21:27:12] *** Joins: fwg (~fwg@user/fwg)
[21:28:57] *** Quits: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d) (Ping timeout: 240 seconds)
[21:31:35] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 252 seconds)
[21:32:08] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661) (Ping timeout: 252 seconds)
[21:33:33] *** Joins: jellie (~luv_panda@user/jellie)
[21:34:13] *** Quits: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2) (Ping timeout: 256 seconds)
[21:35:05] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Remote host closed the connection)
[21:35:19] *** Joins: Kerr (~Kerr@2601:602:ce01:1f0:24d0:1b76:7dc4:51ff)
[21:35:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:35:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:35:22] *** Joins: wroathe (~wroathe@user/wroathe)
[21:35:23] *** Quits: symb0l_ (~symb0l@user/symb0l) (Quit: symb0l_)
[21:37:54] *** Joins: boB_K7IQ (~boB_K7IQ@198.134.98.50)
[21:39:01] *** Joins: ravella (~ravella@user/ryanavella)
[21:39:08] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[21:40:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[21:40:32] *** Joins: jcw00fe (~Guest66@213.194.153.233)
[21:40:54] *** Parts: jcw00fe (~Guest66@213.194.153.233) ()
[21:41:27] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 250 seconds)
[21:41:27] *** yamchah2_ is now known as yamchah2
[21:41:48] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Ping timeout: 256 seconds)
[21:42:05] *** Joins: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d)
[21:42:46] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[21:43:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[21:43:38] *** Quits: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d) (Client Quit)
[21:45:13] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4014:1b4f:f962:d9d9)
[21:45:13] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4014:1b4f:f962:d9d9) (Changing host)
[21:45:13] *** Joins: skapata (~Skapata@user/skapata)
[21:45:29] *** Joins: crashrep (~crashrep@user/crashrep)
[21:46:54] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[21:47:51] *** Joins: Filystyn (~piotr@user/filystyn)
[21:47:53] <Filystyn> guys
[21:48:20] <Filystyn> I want to hear opinions about _noReturn keyword I might have misspelled it anyway
[21:48:36] <Filystyn> it feels silly like it's supposed to be a hint for compiler optimialization
[21:49:05] <Filystyn> but really,  how many programs need thing like that an optimalization for exit which is literally last thing you do
[21:49:09] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[21:49:50] <Filystyn> feels like trying to do thing over the top
[21:49:53] *** Parts: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Leaving)
[21:51:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[21:51:27] <Filystyn> when I know there is no return I jump into the void
[21:51:37] <Filystyn> never once looked back
[21:52:48] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661)
[21:53:27] *** Quits: p0g0 (~p0g0@216.211.153.38) (Quit: p0g0)
[21:53:43] *** Joins: Warkruid (~MarderIII@enneman.demon.nl)
[21:53:56] <ravella> It isn't just for optimization, _Noreturn is also helpful for static analysis
[21:54:32] <Filystyn> what is static analysis ?
[21:54:38] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[21:54:50] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[21:55:37] *** Joins: oxfuxxx (~oxfuxxx@103.137.12.253)
[21:57:29] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661) (Ping timeout: 250 seconds)
[21:58:35] <ravella> Kind of like a debugger, but it runs analysis at compile-time instead of runtime. The wikipedia article gives a better summary
[21:59:01] *** Joins: Akuli (~Akuli@213.216.208.241)
[21:59:28] *** Joins: h4zel (~hazel@user/h4zel)
[21:59:30] <Filystyn> people use that thing ?
[21:59:56] *** Quits: Dotz0cat (~Dotz0cat@h227.195.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[22:00:23] *** Joins: pulse (~pulse@user/pulse)
[22:00:24] <Filystyn> seems you don't even run program
[22:00:33] <Filystyn> what kind of tools you use for that
[22:00:51] <Filystyn> freeware stuff ;-) plox
[22:01:40] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:02:04] *** Quits: oxfuxxx (~oxfuxxx@103.137.12.253) (Ping timeout: 250 seconds)
[22:02:25] *** Joins: Dotz0cat (~Dotz0cat@h59.213.213.151.dynamic.ip.windstream.net)
[22:03:04] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[22:04:58] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:09:52] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:10:49] <fizzie> _Noreturn isn't necessarily "the last thing you do"; a function can avoid returning also via longjmp, without terminating the program. Not that it's probably all that relevant w.r.t. the optimization argument.
[22:10:55] *** Joins: jjido (~Denis@94.0.244.224)
[22:12:20] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:12:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:12:27] <fizzie> Personally I think it's mostly just useful for better warnings (a special case of static analysis); you'll be told if you have unreachable code after call to a _Noreturn function and so on.
[22:12:54] <Filystyn> longjump is something I would never use but k
[22:13:45] <Filystyn> would not even trust compiler would handle that ;-)
[22:14:02] <Hexmind> n
[22:14:05] <fizzie> It also frees you from having to add "dead" return statements that will never be executed just to shut a compiler up.
[22:14:09] <fizzie> ,cc int f(void) {} f();
[22:14:12] <candide> fizzie: [In function 'f':  warning: control reaches end of non-void function [-Wreturn-type]] no output: f() = 0
[22:14:14] <fizzie> ,cc int f(void) { exit(0); } f();
[22:14:25] <candide> fizzie: [Inferior 1 (process 67118) exited normally] The program being debugged exited while in a function called from GDB. Evaluation of the expression containing the function (f) will be abandoned.  The program is not being run.
[22:14:26] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[22:14:35] <Filystyn> ooooo, that is indeed nice
[22:14:36] *** Joins: useretail (~useretail@185.132.19.151)
[22:14:36] *** Quits: useretail (~useretail@185.132.19.151) (Client Quit)
[22:14:50] *** Joins: useretail (~useretail@185.132.19.151)
[22:15:01] <Filystyn> Ok, i might actualy use it ;-) thx fizzie
[22:15:47] *** Joins: p0g0 (~p0g0@216.211.153.38)
[22:16:03] *** Joins: M101donutman[m] (~M101donut@2001:470:69fc:105::d51)
[22:17:08] *** Joins: oxfuxxx (~oxfuxxx@103.137.12.253)
[22:19:46] <Filystyn> Rather very rare case [ keeping something in function pointer int( *foo)()   ] but makes sens
[22:19:58] *** Joins: inlight (~thomas@user/inlight)
[22:20:14] <Filystyn> and behaves like void.
[22:21:28] *** Quits: boB_K7IQ (~boB_K7IQ@198.134.98.50) (Ping timeout: 256 seconds)
[22:21:34] *** Quits: oxfuxxx (~oxfuxxx@103.137.12.253) (Ping timeout: 250 seconds)
[22:21:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:21:50] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[22:22:16] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:23:42] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[22:24:36] <SrPx> I have a pthread that waits on a `cond` in a `while (1) { ... }` loop. problem is, this thread never stops, obviously. what is the proper way to signal to this thread that it should stop? should I replace `1` by a global variable (like: `while (!stop) { ... }`) and just set `stop = 1` when I want threads to stop?
[22:25:15] <Filystyn> check mutex ?
[22:25:35] <Filystyn> I would avoid signals on threads for communication
[22:26:12] <SrPx> does it need to be a mutex? `stop` only changes from 0 to 1 once, then the program stops
[22:26:20] <SrPx> there is no need to synchronize access to it i guess?
[22:26:45] <SrPx> I mean, the parent thread sets `stop = 1` and then uses `pthread_join`, so the child thread will eventually stop
[22:26:45] <SrPx> right?
[22:27:03] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:27:38] <Filystyn> I would still use mutex
[22:28:01] *** Joins: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com)
[22:29:09] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:29:22] *** Joins: MrFantastik (~f@2607:f598:bbda:2c0:c0f7:afbe:3df1:ebb0)
[22:29:34] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[22:29:46] *** Joins: Akiva (~Akiva@user/Akiva)
[22:29:52] <SrPx> why?
[22:29:57] <MrFantastik> https://paste.debian.net/1228625/
[22:30:03] <MrFantastik> nice diff panel i use in org mode
[22:30:14] <SrPx> won't that make the thread slower if it has a `while ()` on a mutex?
[22:30:24] <MrFantastik> oh shoot wrong channel
[22:31:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:31:28] <Filystyn> because in theory all seems fine one only reads one only writes. but I have no such knowledge what happens under hood. So pthread_mutex_lock is simply safe no stuff happens
[22:31:28] <fizzie> You can't use pthread_cond_wait in the first place without a mutex, anyway. So makes sense to guard the relevant state with that same mutex as well. And of course it's required if you want to be strictly conforming.
[22:31:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[22:32:23] <Filystyn> And that is my final answer i think this is some kidn of shitty optimilization you are afraid to like check a mutex once per 1/ 10 sec
[22:32:50] *** Joins: Narrat (~omnius@p2e511ab8.dip0.t-ipconnect.de)
[22:33:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:33:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:33:42] <ChoHag> SrPx: I highly recommend getting it right before you even consider performance.
[22:33:56] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[22:33:56] <ChoHag> I would normally recommend that anyway but you're multi-threading.
[22:34:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:34:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:35:06] <SrPx> it isn't some shitty optimization, I just don't get it lol
[22:35:37] <ChoHag> I didn't say before you consider shitty performance, but before you consider performance _at all_.
[22:36:12] <fizzie> Also worth noting: pthread_cond_wait is allowed to have spurious wakeups whenever. So you typically have some sort of predicate (guarded by the same mutex you use for the wait) to decide whether it's *actually* time to wake up and do a thing. That same thing can often be used to tell the thread to break out of the loop as well.
[22:36:55] <ChoHag> You have two hard problems: I suggest you figure them out one at a time.
[22:37:58] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:39:21] <SrPx> I just meant I don't *understand* what I'm supposed to do. I'm not worried about performance, I just don't get what is the *right way* to do it. Do you mind if I share the snippet?
[22:39:23] <SrPx> https://gist.github.com/VictorTaelin/f2afea1b5d1fbae19f1b5578bba4f44f
[22:39:24] <candide> Title of SrPx's link: confusion.c ¬∑ GitHub
[22:39:30] <SrPx> it is as simplified as I could make it
[22:39:36] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:39:39] <ChoHag> Code is always better than talk.
[22:39:43] <Filystyn> SrPx Butenhof book about threads - first 50 pages
[22:39:51] <Filystyn> this will put you on track
[22:40:00] <SrPx> if I understand correctly, you're proposing that I use the existing `u64 got_work` variable (that I'm already using to wake up the thread anyway) to signal that the thread should quit. is that correct?
[22:40:12] <SrPx> Filystyn: I read it :p
[22:40:18] <SrPx> a while ago, though
[22:40:48] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:cd48:6f73:4bfa:ecd8)
[22:40:48] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:cd48:6f73:4bfa:ecd8) (Changing host)
[22:40:48] *** Joins: skapate (~Skapata@user/skapata)
[22:40:52] <SrPx> I think I get it though, just would like a confirmation that my plan on that gist sounds right
[22:40:59] <SrPx> and that I'm not doing anything obviously wrong there
[22:41:00] <ChoHag> ... except I don't know how the thread primitives actually work under the hood.
[22:41:22] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[22:41:24] <fizzie> You generally wouldn't leave the `got_work_mutex` locked for the entire thing. You'd lock it just for the first lines.
[22:42:01] *** Quits: ominionx (~ominionx@172.58.193.70) (Quit: Leaving)
[22:43:06] *** Joins: blu (c99e8442f9@2604:bf00:561:2000::220)
[22:44:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[22:44:32] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[22:44:47] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[22:48:13] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:48:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:49:18] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[22:50:36] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[22:52:47] *** Joins: vicfred (~vicfred@user/vicfred)
[22:56:55] *** Joins: isaiahG (~AdminUser@69.59.80.251)
[22:57:04] <SrPx> okay I got it
[22:57:10] <SrPx> thanks! :)
[22:58:10] *** Quits: alch (~alch@151.38.135.157) (Read error: Connection reset by peer)
[22:58:32] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 240 seconds)
[23:00:46] *** Quits: Kerr (~Kerr@2601:602:ce01:1f0:24d0:1b76:7dc4:51ff) (Quit: Client closed)
[23:01:33] *** Joins: van3ll0pe (~van3ll0pe@37.173.78.154)
[23:01:55] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:02:36] *** Joins: Kerr (~Kerr@2601:602:ce01:1f0:2e92:133b:16d9:1409)
[23:02:42] *** Joins: alch (~alch@151.46.32.98)
[23:03:16] *** Quits: remavas (~Remavas@user/remavas) (Quit: WeeChat 2.8)
[23:03:41] *** Joins: twinkiecream (~tux1@2601:1c1:c180:5b90::5)
[23:04:16] *** Quits: twinkiecream (~tux1@2601:1c1:c180:5b90::5) (Changing host)
[23:04:16] *** Joins: twinkiecream (~tux1@user/twinkiecream)
[23:05:59] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:06:35] *** Joins: jackk (~jackiii@93-44-188-69.ip98.fastwebnet.it)
[23:07:13] <jackk> sorry for the gtk question:
[23:07:32] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[23:08:12] <jackk> If I do g_signal_connect(but, "clicked", G_CALLBACK(callback), (gpointer) strdup(str)); the string will stay in memory even if i never click the button ?
[23:08:48] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 250 seconds)
[23:09:13] *** Quits: sokan (~sokan@2a02:587:9e07:5300:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[23:09:18] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[23:09:23] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:11:16] *** Joins: sokan (~sokan@85.73.227.185)
[23:12:01] *** Joins: h4zel (~hazel@user/h4zel)
[23:13:59] <bliminse> SrPx: what do you mean by having the thread quit? that it should drop the work it's doing now and resume to wait for incoming work, or that it should prepare to shutdown, or what exactly?
[23:15:00] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[23:15:23] <bliminse> I'm trying to figure it out from the gist but can't tell what your workers are supposed to be doing; are you planning to use a queue onto which you push work requests and then your worker threads pick them up and do whatever job is required?
[23:15:32] <Filystyn> jackk there is gtk channel that is quite resposive but not on this network
[23:16:25] *** Quits: AmR (~AmREiSa@156.199.9.4) (Quit: Konversation terminated!)
[23:16:47] *** Quits: Warkruid (~MarderIII@enneman.demon.nl) (Ping timeout: 250 seconds)
[23:18:22] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[23:18:28] *** Quits: isaiahG (~AdminUser@69.59.80.251) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:18:50] <SrPx> bliminse: no, at that point in time all threads have *already* stopped doing any work. but they are still hanging, waiting for more work to arrive (but there won't be). so I just needed to kill them to let the program quit (it was hanging even though it already print the result)
[23:19:10] <SrPx> bliminse: yep, these threads just wait for tasks to arrive, do the task and then wait again
[23:19:25] <SrPx> the problem I was having is that the program itself has hanging, even though all tasks were completed and the result was printed
[23:19:26] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[23:20:03] <SrPx> but I solved it by just communicating to the threads (using the same mechanism I use to pass work) that they should stop
[23:20:18] <SrPx> so they break out of the loop, and then I use pthread_join, and the program ends
[23:20:19] <SrPx> :)
[23:21:33] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 250 seconds)
[23:21:49] <bliminse> makes sense. and yes, having some variable that you add to your while loop around the condition variable is usually the way I'd do that. kind of like:
[23:22:39] <bliminse> while (myworkqueue->head && !timetoquit) <-- so the 2nd var is the flag to let them know when it's time to shut it all down
[23:24:55] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.71)
[23:25:11] *** Quits: sokan (~sokan@85.73.227.185) (Quit: Reality.is.a.lie)
[23:26:04] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 256 seconds)
[23:27:21] *** Joins: sokan (~sokan@85.73.227.185)
[23:28:42] *** Quits: kuber (~kuber@97-113-209-119.tukw.qwest.net) (Quit: leaving)
[23:29:06] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.71) (Ping timeout: 245 seconds)
[23:30:02] *** Quits: Kerr (~Kerr@2601:602:ce01:1f0:2e92:133b:16d9:1409) (Quit: Client closed)
[23:30:02] *** Joins: Kerr_ (~AdminUser@2601:602:ce01:1f0:2e92:133b:16d9:1409)
[23:30:05] *** Quits: Kerr_ (~AdminUser@2601:602:ce01:1f0:2e92:133b:16d9:1409) (Client Quit)
[23:30:16] *** Quits: jjido (~Denis@94.0.244.224) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[23:30:25] *** Joins: Kerr (~AdminUser@2601:602:ce01:1f0:2e92:133b:16d9:1409)
[23:34:32] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Ping timeout: 240 seconds)
[23:35:08] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[23:40:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[23:42:21] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 250 seconds)
[23:43:10] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[23:44:59] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[23:45:19] *** Joins: symb0l_ (~symb0l@user/symb0l)
[23:49:04] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e172:6885:7e27:8509)
[23:50:04] *** Joins: diamondbond (~diamondbo@175.157.238.109)
[23:50:20] *** Joins: terminalpusher (~terminalp@2a01:586:9365:1:140d:351b:132c:7f59)
[23:51:41] *** Quits: diamondbond (~diamondbo@175.157.238.109) (Client Quit)
[23:52:37] *** Quits: van3ll0pe (~van3ll0pe@37.173.78.154) (Remote host closed the connection)
[23:57:01] *** Joins: h4zel (~hazel@user/h4zel)
[23:57:20] *** Quits: mahmutov (~mahmutov@5.176.46.201) (Ping timeout: 250 seconds)
[23:57:48] *** Quits: Jong (~Jong@174.27.15.0) (Ping timeout: 256 seconds)
[23:59:27] *** Quits: jmpeax (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com) (Quit: leaving)
