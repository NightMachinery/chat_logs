[00:00:15] <onizu> yes, you only changed the class names in your version?
[00:00:18] <__adrian> untyped properties can be null. but typed properties cannot be null (unless they are defined as null, or nullable).
[00:00:24] <__adrian> onizu: yes
[00:00:27] <onizu> k
[00:00:37] <onizu> so well null isn't useful either
[00:00:46] <__adrian> so let's start with something. as a rule of thumb, do not make new objects in your constructor.
[00:01:13] <__adrian> if you need an object, it's a _dependency_. this is what arguemnts are for.
[00:01:28] <__adrian> so  __construct() { $this->x = new X; }  // no
[00:01:39] <__adrian> __construct(X $x) { $this->x = $x; }  // YES
[00:01:59] <__adrian> do you see the difference?
[00:02:02] <onizu> I think I should just pass the required properties to the child object while creating it from the parent. And actually no need to make it parent<->child .. (don't need to extend it from parent class)
[00:02:07] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:02:19] <__adrian> > don't need to extend it from parent class  // maybe, maybe not
[00:02:38] <__adrian> but that doesn't mean you shouldn't know how these things work, so you know how to make the right decision  :)
[00:02:44] <onizu> well unless I call the parent's constructor, I find extending from the parent useless
[00:03:24] <__adrian> that's likely true. if you don't want to call the parent constructor, it probably means you class does something completely different from its parent, which means it probably shouldn't be a subclass
[00:03:33] <__adrian> but that doesn't mean you shouldn't know how these things work, so you know how to make the right decision  :)
[00:03:42] <onizu> ok
[00:04:04] <__adrian> rn i'm talking about something a bit different (but related). about _dependencies_.  i.e., things your object needs.
[00:04:17] <Sammitch> function __construct() { /* do child things */; parent::__construct(); }
[00:04:39] <__adrian> so as a dependency:  https://3v4l.org/iOTN4
[00:04:39] *** Quits: guidoc (~guido@host-95-235-254-141.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[00:04:55] <onizu> yes, I saw your example. Prefer passing an object than creating it in the new class
[00:05:07] <__adrian> next question is about $z
[00:05:29] <__adrian> why did you create a new Z? and not assign it to a property? what do you need it for?
[00:06:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[00:06:50] <onizu> Z is doing some stuff, which I did not want to clutter in Y
[00:07:05] <onizu> Z is taking care of form requests, so I put all of them in Z
[00:07:26] <__adrian> code like this:   $z = new Z;   should NEVER "do stuff." constructor are for getting ready, NOT for doing work.
[00:08:09] <onizu> so Z's constructor checks for all form requests and executes the relevant method
[00:08:10] <__adrian> if you're doing work in your consturct method, you're doing it wrong. that's like hiring a secretary to answer phones in a building that is still under construction.
[00:08:10] <da_wunder> unless that constructor take some parameters to work with
[00:08:31] <__adrian> "onizu> so Z's constructor checks for all form requests and executes the relevant method"  // understood.  this is *completely wrong*.
[00:08:37] <onizu> :/
[00:09:13] <__adrian> at best, Z's constructor should accept the list of form submissions and validators, whatever that it's going to need to do that work.
[00:09:29] <__adrian> then LATER you'll have some code like  $z->processForm($form)
[00:09:53] <onizu> but what's wrong with having Z check all the form requests on its own?
[00:10:12] <__adrian> public function __construct() { /* UNDER CONSTRUCTION - construction work only */ }
[00:10:25] <__adrian> that's fine. what's not fine is doing it in the constructor
[00:11:07] <onizu> well , all Z's constructor has is a call to a method "checkFormRequests()" and that method actually has all the stuff to be done
[00:11:23] <__adrian> so call that method
[00:11:35] <onizu> why? :)
[00:11:35] <__adrian> (not from the constructor).
[00:12:11] <__adrian> i'm not sure what you don't understand. did you follow "constructors are for getting the object ready"?
[00:12:34] <__adrian> this is the basics of how objects work
[00:12:43] <onizu> yes, there's the advantage of having the clarity of what's going on in Z if I call $z->checkFormRequests()  than just doing new Z
[00:12:56] <__adrian> there's also control
[00:13:09] <onizu> did you follow "constructors are for getting the object ready"? - yes
[00:13:17] <onizu> ok
[00:13:21] <__adrian> this is, effectively, the same reason you don't do  class X { ... }  and then new X; in the same file
[00:13:39] <onizu> I don't do that
[00:13:53] <__adrian> i know  :)  just a similar example you might be familiar with
[00:14:00] <onizu> though I've seen examples in the tutorials
[00:14:10] <__adrian> (don't follow those tutorials, they're bad)
[00:14:10] <onizu> that do it
[00:15:00] <onizu> now, I have a lot of constructors calling methods :) ...
[00:15:26] <__adrian> that might be ok, so long as those methods are like  ->getReady()  and not like  ->go()
[00:15:38] <onizu> hehe, ok
[00:16:12] <onizu> yes, I had one which was like updateProperties($params)
[00:16:25] <__adrian> that sounds appropriate
[00:18:11] <onizu> btw, I have not used objects in the true sense of objects-having-properties.. Mostly I used them as a set of functions and some properties
[00:19:16] <onizu> my classes are mostly a collection of functions that I wanted to be grouped
[00:22:48] *** Quits: dimbag (~dimbag@pppoe-77-75-15-109.ppp.kmv.ru) (Ping timeout: 276 seconds)
[00:22:50] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:23:25] *** Parts: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) ()
[00:24:00] *** Quits: genom (~g@37.214.28.175) (Remote host closed the connection)
[00:25:51] <__adrian> "onizu> my classes are mostly a collection of functions that I wanted to be grouped"  so, if they're just "topically" grouped and don't actually rely on / interact with each other and/or object data, then they should not be objects (classes)
[00:26:02] <__adrian> just keep them as separate functions.
[00:26:31] <__adrian> now, it's very likely they _could_ make good classes/objects. probably need reorganized and planned out a bit.
[00:27:02] <__adrian> do you understand "encapsulation" ?
[00:28:00] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 276 seconds)
[00:28:00] <onizu> they do interact (not all though)
[00:28:29] <onizu> do you understand "encapsulation" ? --- yes, shielding some information from direct access
[00:29:07] <onizu> also sort of 'grouping' the information
[00:34:00] <__adrian> it's not "shielding" so much as "containing."  i.e., your class should manage all of its things itself, rather than being "micromanaged" by outside code. classes encapsulate functionality, and objects (class instances) encapsulate state (data).
[00:35:39] <__adrian> so if you find yourself treating classes as a "namespace" for not-really-related functionality, you're doing it wrong. and if you have objects with unrelated data (or _no_ data)(or data that's only used by outside code), you're doing it wrong.
[00:36:20] <onizu> the functionality is related
[00:36:24] <__adrian> and yes, as a result, you can also be suspicious of public properties.
[00:36:46] <__adrian> "related" as in, interdependent
[00:36:55] <onizu> only sometimes it's not, like a method which just takes the name as an argument and adds it to the database
[00:37:00] <__adrian> do they all work towards the same goal
[00:37:17] <__adrian> "> like a method which just takes the name as an argument and adds it to the database"  yep, doesn't belong.
[00:37:41] <__adrian> at least, not on that class
[00:38:26] <onizu> "> like a method which just takes the name as an argument and adds it to the database"  yep, doesn't belong. --- why?
[00:39:08] <onizu> say, there's a Task class, and you want to add a new task, shouldn't there be a method as addTask($taskText) { } ?
[00:39:43] <onizu> or just add($taskText) .. so that:  $task = new Task;  $task->add($taskText);
[00:40:20] <onizu> now this add() method is not interacting with any other method in the class, neither is it setting or accessing any property
[00:40:23] <__adrian> that sounds like your "Task" is both a task, AND a list of tasks
[00:40:40] <__adrian> "> you want to add a new task"  then you do  new Task()
[00:40:56] <onizu> hmm
[00:41:15] <__adrian> maybe you need another class, TaskList ?
[00:41:26] <onizu> to avoid this ambiguity , I tend to name it as TaskManager
[00:41:31] <__adrian> sure
[00:41:43] <__adrian> so you'd have  Task  and also  TaskManager
[00:42:00] <__adrian> $taskmanager->addTask($task);
[00:42:30] <onizu> and $task->details
[00:42:42] <__adrian> sure
[00:43:44] <onizu> got it.  I made did with just TaskManager, to avoid too many task related classes..
[00:43:48] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:43:50] <biberu> onizu: what if you took it one step further and just had a TaskAdder?
[00:44:10] <onizu> biberu: and then TaskDeleter, TaskUpdater ..?
[00:44:28] <biberu> that'd follow
[00:44:33] <__adrian> "avoid too many task related classes"  this is a wrong concern  :)  many small, focused classes is what you SHOULD have. not a few large, catch-all classes.
[00:44:38] <onizu> I'd just have them all in TaskManager
[00:45:02] <onizu> __adrian: got it
[00:45:17] <__adrian> whether you had all those operations as separate classes would depend on your usage, overall architecture, and how complex the operations were
[00:45:18] <biberu> onizu: is there some problem with more classes?
[00:45:30] <__adrian> but definitely valid
[00:45:58] <biberu> (not saying that you should always do one or the other)
[00:46:06] <onizu> biberu: well, I don't see what else could be put in TaskAdder than just an add method.. So why not have a TaskManager which takes care of adding, deleting and updating..
[00:46:32] <biberu> onizu: are you familiar with the interface segregation principle?
[00:46:49] <__adrian> having a class AddTask doesn't mean you wouldn't also have a method TaskManager->addTask()
[00:47:02] <onizu> that said, I admit to have a tendency of avoiding too many classes, which leads to my classes being ultimately bloated
[00:47:14] <onizu> same with methods
[00:47:49] <__adrian> yeah. change that habit - don't "avoid." yes, you don't necessarily NEED to make ten thousand classes, but when you have a reason, just do it
[00:48:08] <onizu> __adrian: why would you have TaskManager->addTask() ? when there's $addTask = new AddTask ?
[00:48:52] <__adrian> the manager would run the AddTask object. and might do other things along the way (e.g., logging)
[00:49:21] <ash_worksi> onizu: the plus about having smaller classes, in my mind, is testability
[00:49:49] <biberu> onizu: if there's a common need for one client to use all of those operations one alternative is to have adders, deleters, updaters etc. injected and delegate to the smaller pieces
[00:49:55] <ash_worksi> onizu: if you have a TaskAdder class, then you can test it for _just_ that, rather than having any other misc. dependencies that might come with other functionality of an overall Manager
[00:50:05] <onizu> AddTask sounds more apt to be a method than a class of its own to me
[00:50:08] <__adrian> TaskManager might even have factories for building the various TaskOperations
[00:50:42] <biberu> onizu: what if it is? :)
[00:50:50] <onizu> I've heard of factory-classes but don't understand
[00:51:04] <__adrian> what do factories do?
[00:51:07] <onizu> biberu: sorry, didn't get you
[00:51:33] <onizu> __adrian: in what sense? real factories build stuff
[00:51:43] <__adrian> exactly. factories build things.
[00:51:43] <ash_worksi> onizu: it is more common lately to name some DTO classes as operations, like "AddTask" would contain all the data required to add a task, "UpdateTask" would look different and only have data required for updating.
[00:51:47] <biberu> onizu: if that adder that is a class really behaves like a function
[00:52:15] <__adrian> a Factory is an object that knows how to build some other type of object
[00:52:18] <onizu> ash_worksi: ok
[00:52:57] <__adrian> usually several subtypes
[00:52:59] <onizu> biberu: it could
[00:53:36] <onizu> __adrian: a class/object used only to build other objects?
[00:53:43] <__adrian> yes
[00:53:48] <onizu> example?
[00:53:58] *** Quits: Pixi (~Pixi@user/pixi) (Read error: Connection reset by peer)
[00:54:01] <__adrian> so you can _encapsulate_ the processes of creating them
[00:54:11] <onizu> hmm
[00:54:18] *** Joins: Pixi (~Pixi@user/pixi)
[00:55:07] <__adrian> e.g., you might have a TaskOperationFactory that knows how to build AddTask, EditTask, DeleteTask, RunTask objects
[00:56:48] <onizu> what's so complex about creating the AddTask object?
[00:57:03] <__adrian> i don't know, it's your object
[00:57:14] <__adrian> :p
[00:57:21] <onizu> just new AddTask :) and let the constructor do the rest
[00:57:47] <onizu> or new AddTask($params)
[00:58:20] <biberu> doesn't it depend on e.g. a database connection?
[00:58:30] <paule32> try to "extend" a class, before running future with factories
[00:58:38] <onizu> I mean I didn't get the advantage of such a factory-class (maybe I didn't understand their utility/functionality fully)
[00:58:57] <onizu> biberu: pass the db as arg
[00:59:21] <biberu> onizu, to what?
[00:59:46] <onizu> lately I've gotten averse to using 'extends..' >.<
[01:00:20] <onizu> biberu: to AddTask()  ----- new AddTask($database)
[01:01:49] <biberu> onizu, ah
[01:01:59] <onizu> (I keep the database as statically accessible, so passing it is not required)
[01:02:30] <paule32> class Tasks { public function __construct() {} }  class AddTask extends Tasks { public function __construct() { parent::__construct($this); }
[01:02:44] <paule32> }
[01:03:13] <biberu> onizu: ah, that's what it sounded like when you said to just new if up without arguments, that's a bit scary
[01:03:58] <biberu> onizu: gtg afk
[01:04:04] <onizu> k biberu
[01:04:39] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:05:04] <onizu> paule32: what's the use of extending AddTask from Tasks ?
[01:05:28] <paule32> to extend Tasks class
[01:05:47] <onizu> why though?
[01:06:00] <paule32> Tasks as root/super class, and AddTask as sub class/child
[01:06:23] <onizu> so doing new Tasks() can be avoided and we can directly do new AddTask() ?
[01:07:05] <paule32> yes, if you need arguments, you can give it over, and use it as default
[01:07:22] <paule32> $o = new AddTask("foo");
[01:07:26] <paule32> e.g.
[01:07:36] <paule32> then in Tasks:
[01:07:39] <onizu> I take it that you extend a class only when you want to use some properties/methods of the parent in the child, without having an instance of the parent in the child
[01:08:06] <paule32> class Tasks { function __construct($name = "") { ... } }
[01:09:08] <onizu> and in AddTask you have to do parent::__construct($name)
[01:09:12] <paule32> i store the previous class instance in a property
[01:09:19] <paule32> right
[01:09:36] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[01:10:11] <paule32> but you can do it like me: give:  parent::__construct($this);
[01:10:26] <paule32> so you can quickly search up, which class was before
[01:10:39] <paule32> recursive
[01:11:42] <paule32> then you could in Tasks:  public $prev;  function __construct($prev) { $this->prev = $prev; }
[01:12:00] <paule32> and deeper in class:  $this->prev -> name = "foo";
[01:12:06] <paule32> e.g.
[01:12:55] <paule32> i use this for my html generatpr, which build top down code
[01:14:12] <paule32> e.g.: https://dpaste.com/2X55HGYBB
[01:14:38] <paule32> this is a pieche of my framework build up with php
[01:15:11] <onizu> when you pass $this as the argument, all the properties of the child are passed to the parent's constructor?
[01:15:44] <paule32> yes, if they public
[01:15:49] <onizu> ok
[01:16:30] <onizu> when you say 'deeper in class' you mean in one of the children classes?
[01:17:13] <paule32> ehm in the class where the constructor resides - in the member functions - outside ctor scope
[01:17:37] <paule32> also
[01:17:38] <onizu> k
[01:19:08] <biberu> onizu: careful with advice from paule32
[01:24:08] <paule32> https://imgur.com/XjfhEyi
[01:24:08] <__adrian> "onizu> lately I've gotten averse to using 'extends..' >.<"  favor composition over inheritance.
[01:24:23] <__adrian> "onizu> (I keep the database as statically accessible, so passing it is not required)"   BOOOOOOOOOOOOOO
[01:24:37] <__adrian> "paule32> class AddTask extends Tasks {"  uhhh no
[01:24:56] <paule32> revert
[01:25:13] <paule32> where did you get this ?
[01:25:16] <__adrian> "paule32> parent::__construct($this);"  also uhhh no
[01:25:31] <paule32> ah this context, yes
[01:25:40] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:25:47] <paule32> but not extend
[01:25:49] <onizu> "favor composition over inheritance." -- heard of this, don't really understand it
[01:25:50] <paule32> refer
[01:26:22] <onizu> what's wrong with the db being accessible as App::get('database') ?
[01:30:23] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[01:32:23] <__adrian> onizu: that's just a global variable. (also, likely, a singleton). both are antipatterns. they hide your dependencies and make your code more error prone by making it rely on outside state.
[01:32:55] *** Quits: Northwoods (~Northwood@223.130.30.69) (Quit: Leaving)
[01:33:08] <__adrian> use _dependency injection_ instead. if your object NEEDS something (e.g., a db connection), then GIVE it that thing (i.e., via a constructor argument).
[01:34:24] <onizu> __adrian: do you use any framework?
[01:35:11] <__adrian> most of my work involves an application that was developed before there were any good choices of frameworks  :)
[01:35:22] <__adrian> but in other stuff, yes, where appropriate
[01:35:28] <onizu> ok
[01:35:33] <__adrian> note: frameworks and/or components
[01:36:20] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 252 seconds)
[01:36:39] <onizu> keep the db global has not created any problems for me so far
[01:36:44] <onizu> keeping*
[01:37:40] <__adrian> you can read about singletons and globals, i'll leave that to your interest  :)
[01:37:47] <paule32> onizu: this is the result: https://imgur.com/phMcPdy   of:  https://dpaste.com/2X55HGYBB
[01:38:08] <onizu> almost every class requires it, so it becomes like a standard argument for every class
[01:38:28] <__adrian> onizu: and that's a problem... why?
[01:39:15] <onizu> not a problem, just easier to have it global..
[01:40:44] <paule32> you know it from .net ?
[01:40:50] <paule32> also c#
[01:42:38] <onizu> I did use it the other way in a project (passing db as argument to every class)..
[01:42:56] <paule32> no
[01:43:04] <paule32> use a member
[01:43:08] <paule32> like getter
[01:43:31] <onizu> paule32, i'm not totally following you, sorry..
[01:43:59] <paule32> passing db as argument to every class
[01:44:11] <paule32> make a instance of a TDataBase class e.g.
[01:45:15] <paule32> like TObject can be your base of all classes
[01:45:35] <paule32> in TObject, you collect the constructors instances in a array
[01:45:37] <__adrian> paule32: do not give bad advice  ;)
[01:46:18] *** Joins: ferdna (~ferdna@user/ferdna)
[01:47:19] *** Quits: magla (~gelignite@55d46dd2.access.ecotel.net) (Quit: Stay safe!)
[02:07:15] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:11:46] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[02:28:11] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:32:33] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[02:44:27] <Blondie101010> onizu:  learn to organize your dependencies...  few classes should need access to the DB...  perhaps look into dependency injection
[02:46:50] <onizu> ok Blondie101010
[02:47:27] <Blondie101010> reading about SOLID principles might help too
[02:47:40] *** Parts: admin0 (~admin0@83-86-143-156.cable.dynamic.v4.ziggo.nl) (The Lounge - https://thelounge.chat)
[02:48:56] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:54:06] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[02:54:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:58:52] *** Quits: pmercado (~pmercado@190.22.176.14) (Ping timeout: 256 seconds)
[03:09:50] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:11:25] <__adrian> !+solid
[03:11:25] <php-bot> Useful principles of software development. https://youtu.be/TMuno5RZNeE?t=2278 ← you can watch the beginning if you like rambling, vaguely amusing monologues, but this is where the good stuff starts
[03:11:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:03] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 276 seconds)
[03:16:26] *** Joins: ferdna (~ferdna@user/ferdna)
[03:19:43] <s17>  This is a private video. Please sign in to verify that you may see it.
[03:19:45] <s17> ^^
[03:20:11] <__adrian> ._·
[03:20:20] <__adrian> weird. didn't used to be that way.
[03:20:55] <Blondie101010> do you have access to update factoids?
[03:21:17] <__adrian> yeah. i'll try to find something else
[03:30:46] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:31:19] <__adrian> https://deviq.com/principles/solid  what y'all think of this
[03:31:47] <__adrian> https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898  or this, which is cuter but less on-the-nose
[03:33:47] *** Quits: cspray (~cspray@75.76.18.60) (Quit: Leaving)
[03:34:49] <Blondie101010> I don't like them
[03:35:45] <Blondie101010> I found https://medium.com/successivetech/s-o-l-i-d-the-first-5-principles-of-object-oriented-design-with-php-b6d2742c90d7 which I find better than those two, though not perfect
[03:35:54] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[03:38:44] <__adrian> hm
[03:38:59] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[03:39:00] <__adrian> they need a proofreader  :)
[03:39:23] <Blondie101010> yeah
[03:39:49] <__adrian> not sure any of these are clearly better
[03:41:11] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 252 seconds)
[03:42:07] <Blondie101010> hmmmm, https://www.hashbangcode.com/article/solid-principles-php looks pretty good, but I didn't read it completely
[03:51:36] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:56:21] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[04:09:21] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:12:43] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[04:15:10] *** Joins: kenoba (~kenoba@user/kenoba)
[04:17:42] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[04:25:19] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[04:39:44] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Remote host closed the connection)
[04:45:46] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) (Ping timeout: 240 seconds)
[04:54:15] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[04:54:50] *** Joins: evilbug (~evilbug@191.101.174.127)
[04:59:01] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 250 seconds)
[04:59:11] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[05:05:52] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:09:51] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 250 seconds)
[05:12:09] *** Joins: P1RATEZ (piratez@user/p1ratez)
[05:15:17] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:19:22] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[05:26:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:10] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[05:33:08] *** Quits: omegatron (~some@p54bd5da4.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:36:19] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:41:18] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[05:45:33] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:56:53] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:01:32] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[06:06:49] *** Joins: WishBoy (~WishBoy@user/wishboy)
[06:17:48] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:22:28] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[06:22:52] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[06:38:46] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:43:14] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[06:59:28] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:59:42] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[07:04:16] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[07:05:20] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[07:20:23] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:25:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[07:41:08] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 255 seconds)
[07:41:19] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:45:56] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[07:53:50] *** Quits: WishBoy (~WishBoy@user/wishboy) (Remote host closed the connection)
[08:02:20] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[08:04:44] *** Joins: Rockwood (~Rocky@user/rocky)
[08:05:40] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:06:58] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[08:12:40] *** Joins: Rockwood (~Rocky@user/rocky)
[08:13:53] *** Quits: Rockwood (~Rocky@user/rocky) (Remote host closed the connection)
[08:14:18] *** Joins: Rockwood (~Rocky@user/rocky)
[08:15:53] *** Quits: Rockwood (~Rocky@user/rocky) (Remote host closed the connection)
[08:22:58] *** Quits: fentanyl (~0xe3b7@ca1-1.azirevpn.net) (Ping timeout: 240 seconds)
[08:57:11] *** Joins: guidoc (~guido@host-79-26-255-89.retail.telecomitalia.it)
[09:40:02] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:55:24] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[09:56:06] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[10:07:26] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[10:09:06] *** Quits: evilbug (~evilbug@191.101.174.127) (Quit: Connection closed)
[10:09:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:12:13] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 258 seconds)
[10:21:10] *** Joins: ham5 (iamfive@user/ham5)
[10:28:25] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[10:33:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[10:49:23] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[10:54:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[10:59:43] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[11:07:39] *** Quits: justache (~justache@user/justache) (Remote host closed the connection)
[11:07:59] *** Joins: justache (~justache@user/justache)
[11:10:03] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:14:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:15:03] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[11:15:43] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[11:21:39] *** Quits: gry (~quassel@botters/gry) (Quit: No Ping reply in 180 seconds.)
[11:22:14] *** Joins: gry (~quassel@botters/gry)
[11:22:28] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[11:23:37] *** Joins: arash (uid510918@id-510918.stonehaven.irccloud.com)
[11:30:42] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:45:18] *** Joins: impliednude (~impliednu@104.232.118.176)
[11:45:59] <impliednude> I updated my system to  php 7.4 and now my log file is saying End of script output before headers: ea-php74. any idea? before it was not doing that :/
[11:46:44] <paule32> you output content before headers ?
[11:48:38] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 272 seconds)
[11:50:12] <impliednude> that's easyphp
[11:50:18] <impliednude> easyapache php
[11:50:31] <impliednude> I am on cpanel
[11:52:02] *** Joins: GoSox (~GoSox@pool-71-174-247-109.bstnma.fios.verizon.net)
[11:52:59] <GoSox> Question: Is there a straight forward way to collapse multiple occurances of a character down to just one, in a string? So for example with the input of "Balloon" you would get the output "Balon" ?
[11:53:47] <GoSox> that's not at all the case i'd be using it in, i'd be using it to collapse multiple spaces in the output of cli programs but thats the basic thing i need to do, turn every group of multiple spaces in a string into a single space
[11:54:12] <paule32> regex
[11:54:16] <GoSox> or I suppose for that matter, turn every group of consecutive spaces to a single comma. go full csv
[11:54:20] <paule32> preg_match
[11:54:20] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[12:11:34] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:14:20] *** Joins: gry (~quassel@botters/gry)
[12:24:09] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[12:34:54] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[12:47:28] *** [Pokey] is now known as Pokey
[12:48:51] *** Joins: entuland (~entuland@user/entuland)
[12:54:18] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[12:56:20] *** Quits: yuckey2d (~yuckey2d@46.246.3.212) (Ping timeout: 272 seconds)
[13:11:14] *** Quits: LuKaRo (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[13:11:33] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[13:15:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:17:51] *** Joins: yuckey2d (~yuckey2d@46.246.3.212)
[13:26:02] *** Joins: LuKaRo (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[13:31:38] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[13:35:54] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[13:43:13] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[13:49:39] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[13:54:40] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[14:10:26] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:10:45] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[14:12:34] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[14:12:51] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[14:13:26] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[14:13:43] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[14:13:48] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Read error: Connection reset by peer)
[14:42:30] <arash> Hello, is there any function to get a file extension ?
[14:46:01] <arash> i find out.i can do it with pathinfo
[15:27:08] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[15:36:24] *** Quits: LuKaRo (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[15:38:29] *** Joins: NakedKing (~NakedKing@user/nakedking)
[15:58:49] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[16:08:23] *** Joins: LuKaRo (~LuKaRo@p200300dfa714f1b8616219dadd8a483b.dip0.t-ipconnect.de)
[16:09:34] *** Quits: guidoc (~guido@host-79-26-255-89.retail.telecomitalia.it) (Ping timeout: 272 seconds)
[16:13:27] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[16:21:37] *** Joins: guidoc (~guido@host-79-23-252-62.retail.telecomitalia.it)
[16:39:12] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[16:46:37] *** Joins: vlm (~vlm@user/vlm)
[17:06:37] *** arash is now known as arash_
[17:07:50] <paule32> arash_: correct, pathinfo
[17:07:55] <paule32> hello
[17:08:20] <paule32> how can it be done, that i have a function as parameter ?
[17:08:23] <paule32> like:
[17:08:37] <paule32> membe(function(){}); ?
[17:08:52] <paule32> how can i exec the function
[17:10:10] <AllenJB> paule32: See https://www.php.net/manual/en/functions.variable-functions.php https://www.php.net/manual/en/functions.anonymous.php and https://www.php.net/callable
[17:14:14] *** Joins: cspray (~cspray@75.76.18.60)
[17:33:58] <paule32> thx
[17:38:02] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) (Ping timeout: 258 seconds)
[17:40:37] *** Joins: arash (arash@thinks.life.is-a.beauty)
[17:43:04] *** Joins: zibby15 (~androirc@user/zibby15)
[17:47:05] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 252 seconds)
[18:13:52] *** Quits: zibby15 (~androirc@user/zibby15) (Quit: Leaving.)
[18:22:22] *** Quits: cspray (~cspray@75.76.18.60) (Quit: Leaving)
[18:26:15] *** Joins: cspray (~cspray@75.76.18.60)
[18:37:27] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 258 seconds)
[18:39:18] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[18:42:35] *** Joins: gefd (~Geoff@user/gefd)
[18:50:10] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:19:15] *** Joins: dimbag (~dimbag@pppoe-77-75-15-109.ppp.kmv.ru)
[19:23:22] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[19:24:11] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[20:12:04] *** Joins: Poboy (~Poboy@user/poboy)
[20:18:39] *** Quits: ordos (~ordos@user/ordos) (Ping timeout: 258 seconds)
[20:25:56] *** Quits: gefd (~Geoff@user/gefd) (Ping timeout: 258 seconds)
[20:37:32] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[20:47:02] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[20:47:52] *** Joins: ordos (~ordos@user/ordos)
[20:51:50] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[20:57:38] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[20:59:14] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[21:31:13] *** Joins: Northwoods (~Northwood@223.130.30.69)
[21:32:17] <Northwoods> is there a way to log query execution time
[21:34:03] <__adrian> that's question for your db. e.g., maybe https://dev.mysql.com/doc/refman/8.0/en/slow-query-log.html
[21:35:58] <Northwoods> __adrian, i am trying to upload around 200,000 records with 5 columns simple varchar data , it looks like its taking longer than it use to be
[21:36:16] *** Joins: magla (~gelignite@55d418d7.access.ecotel.net)
[21:36:19] <Northwoods> i am just trying to find out possible reasons for it
[21:36:32] <Northwoods> upload via php script ( its a xls file )
[21:37:50] <Northwoods> machine config looks good to me , t3a.medium ( aws) 2 vCPU's and 4 gigs ram
[21:41:37] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:42:45] <AllenJB> Things I would investigate: What else is the DB server doing at the time? How many records are in the table? How many indexes does the table have? Are you batch-inserting records? Is MySQL optimally configured (scripts like MySQLTuner can give you a good base configuration)
[21:44:00] <Northwoods> AllenJB, Thanks for insight , your idea looks good to me
[21:44:50] <Northwoods> AllenJB, so number of records already in table is also an affecting factor
[21:45:13] <__adrian> might be
[21:45:37] <__adrian> but seems like you're trying to ignore/avoid db logging?
[21:45:48] <__adrian> start with your db logging
[21:45:50] <Northwoods> __adrian, yes going to look into that now
[21:45:54] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 240 seconds)
[21:45:58] <Northwoods> __adrian, right
[21:46:01] <__adrian> :thumbs up:
[21:46:10] <Northwoods> Thanks
[21:46:45] *** Joins: Rockwood (~Rocky@user/rocky)
[21:47:06] <AllenJB> If you can't solve it with the above, I might look at setting up some observability on the DB server with, for example, Percona Monitoring & Management
[21:47:45] <biberu> Northwoods: it may perform better under a transaction too, and with proper use of parameterized queries
[21:48:03] <Rockwood> biberu, o/ h r u?
[21:48:19] <biberu> hey Rockwood, just relaxing :)
[21:48:19] <Northwoods> biberu, right
[21:48:37] <Rockwood> biberu, me too cheers
[21:48:53] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:54:02] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:55:57] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:00:40] *** Joins: genom (~g@37.214.28.175)
[22:03:36] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[22:23:52] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[22:26:52] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:29:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:34:34] <celphi> whats up peeps?
[22:34:45] *** Parts: GoSox (~GoSox@pool-71-174-247-109.bstnma.fios.verizon.net) ()
[22:38:05] <Northwoods> I found one of these messages in RDS Mysql instance of AWS
[22:38:07] <Northwoods> The gp2 burst balance credits for the RDS database instance are low. To resolve this issue, reduce IOPS usage or modify your storage settings to enable higher performance.
[22:38:13] <Northwoods> __adrian, AllenJB ^
[22:40:11] <AllenJB> Sounds AWS specific - I'm not experienced with that. It looks to me like it's telling you to adjust what you're doing or upgrade for more IOPS because you're hitting limits
[22:52:16] <Blondie101010> yup, sounds like "give us more cash or suffer"
[22:52:49] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 250 seconds)
[22:53:06] <Blondie101010> of course the alternative could be to optimize processing
[22:58:59] *** Joins: Northwoods (~Northwood@223.130.30.69)
[23:03:40] *** Quits: Northwoods (~Northwood@223.130.30.69) (Remote host closed the connection)
[23:04:00] *** Joins: Northwoods (~Northwood@223.130.30.69)
[23:07:16] <paule32> hello
[23:07:25] <paule32> i have problem with this script: https://dpaste.com/G6LEB8AG5
[23:07:30] <paule32> in line: 3
[23:08:02] *** Joins: ferdna (~ferdna@user/ferdna)
[23:08:58] <__adrian> paule32: what does the error message say
[23:14:22] <paule32> Parse error: syntax error, unexpected ')'
[23:16:22] <__adrian> and what are you trying to write on that line where the unexpected  )  is?
[23:17:01] <paule32> i would like to execute lines: 4..8
[23:17:07] <__adrian> that's not my question
[23:17:12] <__adrian> and what are you trying to write on that line where the unexpected  )  is?
[23:17:24] <__adrian> find the  )
[23:17:30] <__adrian> then tell me what you're trying to do there
[23:17:50] <paule32> callable
[23:18:07] <__adrian> use more words and be specific
[23:18:22] <__adrian> what kind of callable are you trying to make?
[23:18:30] <paule32> a function
[23:18:35] <__adrian> what kind of function
[23:18:48] <__adrian> fn () =>
[23:18:51] <__adrian> what does that make?
[23:18:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:18:59] <paule32> nothing
[23:19:14] <paule32> i dont know how to make callable that can be call
[23:19:14] <__adrian> if it makes nothing then why did you write it?
[23:19:19] <__adrian> what kind of function is that?
[23:19:30] <__adrian> what is it called?
[23:19:59] <paule32> function foo($arg1) { ... };
[23:20:05] <paule32> no anonymouse
[23:20:32] <__adrian> it's anonymous, yes. but more than that. it's an _arrow function_
[23:20:44] <__adrian> https://php.net/functions.arrow
[23:20:45] <paule32> ahm yes
[23:21:03] <__adrian> so read the docs, learn the syntax, and find out what you did wrong
[23:21:34] <__adrian> (there are two big things)
[23:22:14] <paule32> in javascript, i can do:  foo(function() { ... });
[23:22:26] <paule32> and that is what i would do in php
[23:22:28] <__adrian> are you WRITING JAVASCRIPT?
[23:22:38] <Poboy> doesn't everybody?
[23:23:08] *** Joins: fentanyl (~0xe3b7@ca1-1.azirevpn.net)
[23:23:16] <paule32> i write javascript, and php, yes, but that was a example, what i like to do
[23:23:24] <paule32> a pedant of js code
[23:23:29] <__adrian> the code you're asking about IS NOT JAVASCRIPT.
[23:23:46] <__adrian> you don't learn how to write php by thinking about javasript.
[23:23:54] <__adrian> go read the PHP docs, learn the syntax, and find out what you did wrong
[23:24:04] <fentanyl> what's the name for limited search thingy that sites uses? like, if there are like 100 entries, we'll dynamically create 10 or 9 pages, and each pages showing only 10 results. how can i implement something like that? can someone have a link?
[23:24:38] <__adrian> fentanyl: not sure if you're asking about the search itself, or paginating the results
[23:25:06] <fentanyl> search + page navigateion (and page generation). Like, just like google for example.
[23:25:27] <__adrian> those are all completely separate things
[23:25:28] <fentanyl> like, dynamically N pages will be generated based on the result.
[23:26:31] <__adrian> you'd have a webpage with js to do the search box and submit the query
[23:26:52] <__adrian> php would likely query your database and get the paginated results
[23:27:00] <__adrian> and then js would take that result and display it
[23:27:29] <__adrian> even that is fairly oversimplified. it's a lot of separate funcationality working together.
[23:28:59] <fentanyl> yeah, when i query a database, there are like 100s of results. currently, i'm throwing all the results in a single page, like all the 100s of results. but i wanna split those into different pages, such that i'll `yield` the results from page 1, 2, ... N. but i'm not sure how to do that.
[23:29:21] <__adrian> "such that i'll `yield` the results from page 1, 2, ..."  not like that  ;)
[23:29:34] <__adrian> you'd select only one "page" of results at a time.
[23:30:03] <__adrian> i'd suggest googling "mysql pagination" to get a start on that idea.
[23:30:13] <__adrian> or whatever rdbms you're using
[23:30:22] <s17> limit/offset ;)
[23:30:36] <__adrian> that's the most common approach
[23:30:52] <__adrian> not the best, but in most cases works well enough you wouldn't notice
[23:34:01] <fentanyl> thanks for that google term.
[23:34:06] *** Quits: LuKaRo (~LuKaRo@p200300dfa714f1b8616219dadd8a483b.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[23:34:33] <__adrian> np
[23:35:34] *** Joins: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[23:37:27] <fentanyl> php is love.
[23:37:34] <fentanyl> that's all i need. i figured.
[23:37:55] <fentanyl> it's easy than i thought.
[23:38:36] <__adrian> the idea is easy, once you grasp it, but there are lots of details.
[23:39:25] <fentanyl> ya, my usecase is pretty basic.
[23:44:18] *** Quits: magla (~gelignite@55d418d7.access.ecotel.net) (Quit: Stay safe!)
[23:56:39] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) ()
[23:57:08] <Northwoods> Thanks AllenJB
