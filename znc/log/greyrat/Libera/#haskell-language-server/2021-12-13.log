[01:38:16] <pepeiborra> @myShoggoth it should be #2438. The fix is landed (#2441), try it out to be sure
[02:09:54] *** Joins: isovector1 (~isovector@node-1w7jr9um9vgs0hx3w7z22ha0k.ipv6.telus.net)
[02:09:55] <isovector1> hiya
[02:10:19] <isovector1> i don't see traceM output in the hls output anymore
[02:10:29] <isovector1> do i need to do osmething to enable it?
[03:02:40] *** Joins: yoshitsugu (uid529929@id-529929.hampstead.irccloud.com)
[03:22:17] *** Quits: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[03:26:51] *** Quits: ts2 (~ts@46.101.20.9) (Ping timeout: 250 seconds)
[03:27:09] *** Joins: ts2 (~ts@46.101.20.9)
[03:27:12] *** Quits: isovector1 (~isovector@node-1w7jr9um9vgs0hx3w7z22ha0k.ipv6.telus.net) (Ping timeout: 268 seconds)
[04:06:25] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[04:39:56] *** Joins: isovector1 (~isovector@node-1w7jr9um9vgs0hx3w7z22ha0k.ipv6.telus.net)
[06:26:18] *** Quits: isovector1 (~isovector@node-1w7jr9um9vgs0hx3w7z22ha0k.ipv6.telus.net) (Quit: Leaving)
[06:59:06] *** Joins: shapr` (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[07:00:51] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[07:12:35] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:02] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:54:04] *** shapr` is now known as shapr
[08:13:05] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[09:04:57] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[09:05:23] *** Joins: hololeap (~hololeap@user/hololeap)
[10:16:56] <jneira[m]> i also miss traces lately, tempted to open an issue
[11:51:55] *** Joins: arrowd (~arr@2.94.236.140)
[14:51:23] *** Quits: yoshitsugu (uid529929@id-529929.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:27] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[17:34:48] *** Joins: hololeap (~hololeap@user/hololeap)
[19:33:22] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[19:51:09] <sm> g'day all
[19:52:02] <sm> hls seems to start normally, https://termbin.com/h0g0, but I see no red lines or other effects in the source pane, any ideas ?
[19:53:20] <sm> that's with this hie.yaml:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/2e56a4847a3489964ef0de6d89bd5f708416aa01)
[19:53:39] *** Joins: sm[i] (~user@plaintextaccounting/sm)
[19:57:30] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[20:03:25] <jneira[m]> looks good to me too, executing `hls-wrapper -d .` in the project root dir shows some error?
[20:12:23] <sm> hi, a minute while I track down that executable
[20:13:39] <sm> '/Users/simon/Library/Application Support/Code/User/globalStorage/haskell.haskell/haskell-language-server-wrapper-1.5.1-darwin'. (What's the difference between the -wrapper and other executables ?)
[20:14:09] <jneira[m]> the path is in the log output
[20:14:39] <jneira[m]> inside the vscode storage dir
[20:16:35] <sm> Running this from command line fails (and also if I add that directory to PATH):... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/89b1e9ddbce8fe8ddfd35df9e18dc7d3de605085)
[20:18:34] <jneira[m]> oh sorry use directly the his executable, it is near the wrappee
[20:18:42] <jneira[m]> same args
[20:22:00] <sm> it shows many of these: https://termbin.com/dj7k
[20:22:00] <sm> followed by a ton of output that's still going
[20:22:40] <sm> like, way too much to handle :)
[20:22:48] <sm> 1G so far
[20:23:30] <sm> oh maybe 1M, never mind
[20:23:43] <sm> 35k lines anyway, perhaps it's looping..
[20:24:12] <sm> no! completed successfully after 37k lines
[20:25:08] <sm> I think perhaps I need more components in my hie.yaml 
[20:31:14] <jneira[m]> it checks all modules of the project hence the long output
[20:31:42] <jneira[m]> you can set the path to concrete modules instead `.`
[20:33:03] <sm> ok
[20:33:45] <sm> a way to turn off the checking, just to see diagnostic output, would be great
[20:34:48] <sm> whatever the reason, I guess it's problematic that the log output showed no error when things aren't working ?
[20:34:57] <jneira[m]> but if the module and its dependants you were loading in the editor is covered by the cradle it should work
[20:35:54] <jneira[m]> the LSP cradle should have shown an error in other case
[20:36:13] <jneira[m]> s/cradle/log/
[20:36:17] <sm> --print-cradle shows
[20:36:17] <sm> Cradle {cradleRootDir = "/Users/simon/src/DARCS/darcsden", cradleOptsProg = CradleAction: Stack}
[20:36:17] <sm> I assume that means it's using the hie.yaml
[20:37:36] <sm> yes it is, judging by other output 
[20:39:19] <sm> this seems to be leading in the right direction:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/912168635749985126712b579c40faf0a1d83ad7)
[20:40:27] <sm> maybe I can set cabal flags in hie.yaml ?
[20:42:50] <sm> setting the flag in stack.yaml to make that component buildable took care of that first error. I'll work on the second
[20:43:53] <sm> I wish this had shown up in the vs code Output pane
[20:48:47] <sm> soo.. why can't it load the library ?
[20:50:21] <sm> aha, it works on certain simpler files. Progress.
[20:52:10] <sm> in fact, it's working on all library files now, but no executable files
[20:56:16] <sm> and now it's working in executable files too. I don't know what fixed it, I suppose more extensive hie.yaml and time for it to process the new stuff. Thanks, and onward
[20:56:54] <sm> if it keeps working, this will be a big help for darcsden dev
[21:02:07] <jneira[m]> I think the root cause of that is https://github.com/haskell/haskell-language-server/issues/366
[21:02:58] <jneira[m]> in short you need a succesful build before load the project
[21:04:33] <sm> ie, just a successful stack build ? I thought I had that, but maybe something changed
[21:05:02] <sm> I'm used to having to restart lsp server and even vs code quite often, so https://github.com/haskell/haskell-language-server/issues/366 is quite interesting
[21:05:13] <sm> thanks for your support, jneira
[21:06:18] <sm> hls working like a champ on darcsden right now
[21:37:04] <jneira[m]> <sm> "ie, just a successful stack..." <- well a succesful one to starts with, with tests and bench enabled (they arenot build by default), but introducing an error in the library makes the other components fail and a restart is needed ðŸ˜Ÿ
[21:39:38] <sm> good to know, thanks
[21:40:53] <sm> for mac users:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/478b1b17881f86ccf8302659481674172d8265f8)
[21:50:02] <sm> so there's kind of a dance, I wasn't clear on it before. 1. if expected results not showing up in Problems pane, and no problems showing in Output pane 2. at command line, do a successful full rebuild of the project, with default flags, including the source file in question 3. restart haskell lsp server. And if that doesn't do it, troubleshoot with 4. at command line, run hls on source file.
[21:51:08] <sm> summarised: ensure code is error-free before starting hls
[21:57:44] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[22:04:41] <jneira[m]> s/well a succesful one to starts with, with tests and bench enabled (they arenot build by default), but introducing an error in the library makes the other components fail and a restart is needed ðŸ˜Ÿ/well a succesful one to starts with, with tests and bench enabled (they are not built by default), but introducing an error in the library makes the other components fail and a restart is needed ðŸ˜Ÿ/
[22:05:01] <jneira[m]> yeah
[22:06:08] <jneira[m]> and restart hls if the `Could not load module`/`Cannot satisfy -package` pops up
[22:06:41] <jneira[m]> iirc an user provided some vscode actions to alliviate the bug
[22:06:46] <jneira[m]> inthe mentioned issue
[22:06:53] <jneira[m]> s/inthe mentioned issue/in the mentioned issue/
[22:07:24] <jneira[m]> i am afraid it is not the better user experience  :-( 
[22:08:29] <jneira[m]> but we are blocked upstream on stack without a better workaround
[22:16:52] <sm> it's good to highlight these stack blockers as you're doing, it will help justify renewed stack dev 
[22:17:33] <sm> I think it has been stalled since snoyberg stepped away
[22:24:20] <jneira[m]> ya, if stack gets to leverage the new show-build-info feature from the cabal library things will improve a lot
[22:24:54] <jneira[m]> I think the relevant hie-bios issue is linked in the hls mentioned one
[22:26:52] <jneira[m]> and some work was started by chrisdone: https://github.com/haskell/hie-bios/issues/269
[22:28:23] <jneira[m]> but no updates since long time ago ðŸ˜¢
[22:51:33] <michaelpj[m]> we have a lot of dead settings...
[22:51:38] <michaelpj[m]> e.g. `formatOnImport`...
[22:52:48] <sm> here's a multi-library package: https://github.com/lpeterse/haskell-ssh/blob/master/package.yaml#L38 (cabal file looks like https://bpa.st/AAYA). The implicit cradle doesn't find the second library component. How would you configure that in hie.yaml ?
[22:53:18] <sm> I guess I need to find out how to express that component in stack-ese
[22:57:01] <jneira[m]> <michaelpj[m]> "e.g. `formatOnImport`..." <- time to christmast clen up! :-) 
[22:57:12] <michaelpj[m]> just what I'm doing...
[22:57:14] <sm> https://docs.haskellstack.org/en/stable/build_command/#components "It can have 0 or 1 libraries". Maybe stack doesn't support this yet.. on the other hand, it does build..
[22:57:23] <jneira[m]> s/clen/clean/
[23:01:21] <sm> stack ide targets, that's the command I was looking for. It doesn't list the second library. I'm guessing only partially supported, and therefore hard to use hls in this case.
[23:03:46] <sm> can I put both stack and cabal configuration in a single hie.yaml ?
[23:10:35] <michaelpj[m]> jneira: I notice that e.g. the vscode extension doesn't set the formatting plugins to on. I assume that's because they'll be on by default?
[23:15:22] <sm> I get the "error: unrecognized instruction mnemonic" / "you need clang" type error when trying to use hls with cabal, like https://github.com/haskell/haskell-language-server/issues/2148. Unlike 2148, it also happens when just doing cabal build at the command line. Also both cabal and hls are x86 binaries. Not a hls issue then ?
[23:22:31] *** Quits: arrowd (~arr@2.94.236.140) ()
[23:32:54] <sm> fixed by reinstalling cabal with brew to get an arm version
[23:33:21] <sm> which gets hls working on this multi-library package
[23:35:16] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 268 seconds)
[23:40:52] *** Joins: juhp (~juhp@128.106.188.82)
[23:47:24] <sm> correction hls still gives the same errors on most components. I wonder if the hls binary needs to be arm as well. Weirdly the above has fixed it on one component though, that second library.
[23:49:14] <sm> enough for today I think
[23:50:23] *** Joins: coot (~coot@2a02:a310:e03f:8500:933a:39ca:ef4e:37cb)
