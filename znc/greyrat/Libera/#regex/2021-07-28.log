[00:02:10] <StayHungry> of course, i could .trim(), but am curious to find what causes
[00:05:51] <StayHungry> yes, it is somehow related to regex
[00:06:46] <StayHungry> when i use version 2 of yours, code breaks a bit, but at least blank lines starting with asterisk are counted as 0
[00:10:01] <StayHungry> aha... it is related to last lines of paragraphs
[00:10:30] <StayHungry> something unwanted is captured there
[00:14:29] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[00:15:13] <StayHungry> time to call comrade Purplex for help, he once helped with those invisibilities before :)
[00:17:11] <StayHungry> version 2 suits me, but it seems last break in the paragraph is mistakenly caught as well
[00:17:16] <StayHungry> https://regex101.com/r/ygPvMQ/2
[00:22:34] <StayHungry> this is how comrade Perplex described that, I quote, 'The problem is . doesn't care about carriage return \r so, .* captures \r into group as well when line endings are \r\n. When you use lazy .*? it stops before it sees \r but .* greey consumes \r.'
[00:24:15] *** Quits: joo-_ (~joo-_@jodb.mikjaer.com) (Changing host)
[00:24:15] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[00:26:35] *** Joins: fakuve (~fakuve@192.210.243.250)
[00:30:17] <StayHungry> found a workaround
[00:30:42] <StayHungry> version 2 stays in place, but then i split second group not by \r?\n, but by [\r?\n]+
[00:36:18] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 240 seconds)
[00:45:08] <OnlineCop> StayHungry: I've noticed in many flavors that `.` matches `\r` but doesn't match `\n`.
[00:45:16] <OnlineCop> So instead of `.+` you could try `[^\r\n]+`
[00:45:40] <StayHungry> glad to see you back, sir
[00:45:41] <OnlineCop> `[\r?\n]` is actually 3 characters: `\r`, the literal `?` character, and `\n`
[00:45:46] <OnlineCop> Yeah; was in a work meeting.
[00:46:37] <OnlineCop> https://regex101.com/r/ygPvMQ/4
[00:46:42] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[00:47:00] <StayHungry> right, i roll back split string to \r?\n and... paste your regex...
[00:49:54] <OnlineCop> Other control characters you might have to look at are terminal escape codes (like colored outputs): `\e[1m ... \e[0m`
[00:50:07] <OnlineCop> Not very often, but those DO tend to come back to bite me on occasion
[00:52:04] <StayHungry> since split via [\r\n]+ works fine with version 2, then most probably it's about breaks
[00:53:22] <OnlineCop> Does version /4 also work?
[00:53:45] <OnlineCop> It should be the same as /2 but with `.` replaced with `[^\r\n]`
[00:54:19] <OnlineCop> No, I take it back. /2 has the leading \r\n.
[00:56:25] <StayHungry> version 4 works for errors which popup when it comes to last lines of paragraphs
[00:56:38] <StayHungry> error message says nothing to me: "You cannot call a method on a null-valued expression."
[00:57:55] <OnlineCop> Not sure what a null-valued expression is, either, unless it finds no results.
[00:58:57] <StayHungry> well, i can live with version 2 and [\r\n[+ as split delimiter, it works fine, thank you ^^
[00:59:09] <OnlineCop> Cool; glad it will work.
[00:59:26] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[01:00:39] <StayHungry> yeah, it's a little hobby project of mine, so far called Polyglot
[01:00:52] *** Quits: simbioz_ (~simbioz@user/simbioz) (Remote host closed the connection)
[01:01:33] <StayHungry> tiny version of rosettacode.org on local machine
[01:01:47] <OnlineCop> That sounds like fun.
[01:02:46] <StayHungry> for example, you have a trivial task like swapping dates
[01:03:03] <StayHungry> and you have 10 scripting languages installed to help you
[01:03:47] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 255 seconds)
[01:03:52] <StayHungry> this is what you get after all troubles https://dpaste.org/WY1w/slim
[01:04:26] <OnlineCop> Why are some of the '*' lines there empty?
[01:04:42] <StayHungry> no solutions exist with given limitations
[01:05:11] <StayHungry> after a while (solving various tasks) you have a folder with such tables
[01:05:28] <StayHungry> and you need a way to browse them more quickly, basically to filter
[01:05:37] <OnlineCop> Smart.
[01:06:18] <StayHungry> i used PowerShell to build such 'filter'... will you screenshots right now
[01:07:26] <StayHungry> https://s3.rokket.space/t_VIxp3Q.png
[01:07:52] <StayHungry> https://s3.rokket.space/t_13Zd2F.png
[01:08:42] <StayHungry> https://s3.rokket.space/t_UZaAEg.png
[01:09:04] <StayHungry> the last one https://s3.rokket.space/t_hA0vHK.png
[01:09:59] <OnlineCop> And since several had no solution 3, they were simply left out of the result?
[01:10:15] <StayHungry> check switches i used
[01:10:16] <OnlineCop> Or that's due to the `-hidezero`.
[01:10:27] <StayHungry> with -hidezero they are omitted
[01:11:14] <StayHungry> but we can show them too, of course, let's remove switch and... https://s3.rokket.space/t_GM9xnL.png
[01:11:41] <OnlineCop> I see.
[01:12:19] <StayHungry> nothing fancy, but i felt happier after bringing some order into pieces of knowledge from various scripting languages :)
[01:12:47] <OnlineCop> Yeah; having a multi-language lookup would be handy.
[01:14:12] <StayHungry> i'm interested in evolution/digression of languages, so comparison is one of the priorities
[01:14:31] <OnlineCop> Sounds like a maintenance nightmare to me.
[01:14:37] <StayHungry> for example, Python reminds of me Yoda speaking
[01:14:57] <StayHungry> [for tea, at five to join me, 'feel free']  :D
[01:20:18] <StayHungry> trivial tasks have not many (logical) solutions then you pick languages to tackle it with. in this case (of swapping dates with 3 possible solutions) i took all more or less modern scripting languages. each paragraph of table begins with language's name then oneliners follow, each starting with *. not much maintenance.  :)
[01:21:23] <StayHungry> what i especially interesting is that community matters
[01:21:28] <StayHungry> *what i find
[01:21:44] <StayHungry> for example, one of the friendliest is Perl's one
[01:22:06] <StayHungry> the most hostile is PHP :D
[01:25:02] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[01:30:12] *** Quits: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9) (Read error: Connection reset by peer)
[01:30:38] *** Joins: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9)
[01:31:12] <Timvde> The Perl one is empty in your screenshot :(
[01:31:24] <StayHungry> huh?
[01:31:27] <StayHungry> where, where
[01:31:45] <StayHungry> ah, solution #3
[01:32:00] <StayHungry> yes, Perl has no bundled date parsing beyond unix epoch
[01:32:15] <StayHungry> it requires installing remote module to make it work
[01:33:39] <Timvde> FWIW, the Python regex solution: impore re; re.sub(r'(\d\d)-(\d\d)-(\d{4})', r'\3-\2-\1', '23-07-1821')
[01:34:05] <Timvde> Oh, nvm, you already had it :P
[01:34:14] <Timvde> Literally the same even :D
[01:34:21] <StayHungry> ye :)
[01:35:06] <Timvde> StayHungry: '-'.join(reversed('23-07-1821'.split('-')))
[01:35:20] <Timvde> wait, that's your #1
[01:35:22] <Timvde> nvm
[01:35:26] <Timvde> you probably already have that too
[01:35:47] <Timvde> Note to self: read everything before commenting
[01:35:51] <StayHungry> aha, [for tea, at five to join me, 'feel free']  :)
[01:36:40] <Timvde> So I suppose you meant the Perl split/reverse/join solution
[01:37:08] <Timvde> Haskell is probably good for this
[01:39:10] <StayHungry> I was hesitating whether to include Racket, which is kind of LISP dialect (mind those never ending parenthesis), and you recall Haskell to make it even more sinister :D
[01:39:42] <Timvde> A friend of mine is a Haskell developer, he wrote this for me: formatTime defaultTimeLocale "%F" (parseTime defaultTimeLocale "%d-%m-%Y" )
[01:40:10] *** Joins: re101-yak-78 (~re101-yak@199.67.138.44)
[01:40:14] <re101-yak-78> Hi
[01:40:23] <JohnDoe2> we don't respond to hi
[01:40:30] <JohnDoe2> try an insult, maybe?
[01:41:15] <re101-yak-78> :)
[01:41:25] <re101-yak-78> How can I filter TEXT_I_NEED from dummy-text|dummy-text||--|TEXT_I_NEED BATCH: 
[01:41:54] <re101-yak-78> Text: dummy-text|dummy-text||--|TEXT_I_NEED BATCH: 
[01:42:03] <JohnDoe2> if the number of | is always the same you can go by that
[01:42:04] <re101-yak-78> Required Output: TEXT_I_NEED
[01:42:17] <re101-yak-78> I am very new to regex
[01:42:28] <re101-yak-78> so far I did  \|--\|(?<output>.+$)
[01:42:36] <JohnDoe2> it seems TEXT_I_NEED is after the 4th "|" correct?
[01:42:42] <re101-yak-78> no number of | might get custom
[01:42:55] <JohnDoe2> cool so what's always the same so we can orient ourselves in the string?
[01:42:57] <Timvde> re101-yak-78: is it after the last one?
[01:43:04] <re101-yak-78> but |dummy-text||--|TEXT_I_NEED BATCH will be always a fix format
[01:43:06] <Timvde> No further |s on that line?
[01:43:59] <re101-yak-78> no furhter | . for sure
[01:44:19] <re101-yak-78> I can give may be more realistic string
[01:44:53] <re101-yak-78> |BATCH_NAME||--|TEXT_I_NEED BATCH: Customer
[01:44:56] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[01:44:57] <re101-yak-78> is this helpful ?
[01:44:57] <JohnDoe2> the actual string would help a lot re101-yak-78 - just shuffle stuff that's sensitive
[01:45:09] <JohnDoe2> and paste it on regex101.com then hit save on the left sidebar
[01:49:19] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 250 seconds)
[01:50:07] *** Parts: re101-yak-78 (~re101-yak@199.67.138.44) ()
[02:00:40] <StayHungry> Timvde: friend of yours, who gave that haskell command... i'm not sure how to execute it from a command line. simple ghc.exe -e "command" does not work. anyway, binary package weight ~3GB, the least favorable option for little scripting now and then :)
[02:02:13] <Timvde> StayHungry: someone I know
[02:02:17] <Timvde> It may need some imports
[02:09:56] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:18:26] <Timvde> Can't get it to work, but well, I'm not a Haskell developer
[02:29:20] *** Joins: re101-beagle-48 (~re101-bea@117.211.0.240)
[02:29:34] <re101-beagle-48> !rehelp
[02:29:34] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[02:30:59] <re101-beagle-48> https://regex101.com/r/soYjsQ/1
[02:33:15] <re101-beagle-48> In the entire string, I had the exact value of  XXX-234, I want this particular string not to be included while matching the regex
[02:37:06] <OnlineCop> You want the `.*?` at the beginning?
[02:38:10] <OnlineCop> After `[A-Z]{1,}-` but before `[0-9]{1,}`, add a negative look-ahead: `(?!234)`
[02:38:22] <OnlineCop> https://regex101.com/r/soYjsQ/2
[02:43:50] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[03:14:42] *** Quits: re101-beagle-48 (~re101-bea@117.211.0.240) (Quit: Client closed)
[03:35:03] *** Joins: re101-goat-32 (~re101-goa@2405:204:51a1:2929:c982:26fd:2c51:181d)
[03:35:07] <re101-goat-32> !rehelp
[03:35:07] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[03:35:11] <re101-goat-32> https://regex101.com/r/Icyc3Y/1
[03:35:49] <re101-goat-32> My RegEx finds what I want it to but the substitution/replacement is not happening
[03:36:22] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[03:37:31] <re101-goat-32> .....it finds the last <br> tag in each section
[03:42:54] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[03:45:48] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[03:50:24] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 252 seconds)
[04:00:16] *** Quits: re101-goat-32 (~re101-goa@2405:204:51a1:2929:c982:26fd:2c51:181d) (Quit: Client closed)
[04:02:17] *** Joins: re101-goat-3 (~re101-goa@2405:204:51a1:2929:c982:26fd:2c51:181d)
[04:03:00] *** Quits: re101-goat-3 (~re101-goa@2405:204:51a1:2929:c982:26fd:2c51:181d) (Client Quit)
[05:05:11] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:43] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[05:38:42] *** Joins: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se)
[05:38:42] *** Quits: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se) (Changing host)
[05:38:42] *** Joins: maetthew (~maetthew@user/maetthew)
[05:46:36] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[05:50:58] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 240 seconds)
[05:51:45] *** Joins: asd72 (~asd@191.254.14.165)
[05:51:46] <asd72> !help
[05:51:47] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[05:51:51] <asd72> https://regex101.com/r/M0CmbW/1
[05:52:12] <asd72> i want to capture only the number, only if the text nsfw exits
[05:53:01] <asd72> https://regex101.com/r/M0CmbW/2/
[05:55:03] <asd72> there's 1 number matching that doesn't has the text nsfw https://regex101.com/r/DztdcT/1
[05:55:35] <asd72> I guess I got it https://regex101.com/r/rv7NQ5/1/
[05:56:57] <asd72> but I'm getting error messages when I test it
[05:59:35] <asd72> I got it,good night
[05:59:36] *** Quits: asd72 (~asd@191.254.14.165) (Quit: Client closed)
[06:06:36] *** Joins: Success (~Announcem@172.58.102.142)
[06:17:04] *** Quits: Success (~Announcem@172.58.102.142) (Ping timeout: 258 seconds)
[07:33:31] *** Quits: army (~aL@user/army) (Quit: Going offline, see ya! (www.adiirc.com))
[07:44:56] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[07:47:21] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[07:51:47] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 245 seconds)
[07:54:48] *** Joins: re101-fossa-62 (~re101-fos@115.243.2.227)
[07:54:50] <re101-fossa-62> !rehelp
[07:54:50] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[07:54:54] <re101-fossa-62> https://regex101.com/r/DGOxtl/1
[07:55:28] <re101-fossa-62> i'm looking to extract the words only before '&'
[08:01:19] <Me-me> https://regex101.com/r/DGOxtl/2 Here's one method.
[08:47:08] *** Joins: re101-poodle-6 (~re101-poo@2603-6080-e309-1800-78f9-21c8-ec19-24f7.res6.spectrum.com)
[08:47:33] <re101-poodle-6> !rehelp
[08:47:34] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[08:48:55] <re101-poodle-6> https://regex101.com/r/9O2NHj/1
[08:52:43] <yitz> re101-poodle-6: did you need help with something?
[08:52:53] <re101-poodle-6> yes
[08:53:10] <re101-poodle-6> im have this string GF87351-Thu-Figueredo-France
[08:53:31] <re101-poodle-6> and i want to remove the second dash and replace it with no space
[08:53:44] <re101-poodle-6> so it can look like this GF87351-ThuFigueredo-France
[08:54:04] <re101-poodle-6> is that possible
[08:54:21] <yitz> https://regex101.com/r/9O2NHj/2
[08:54:49] <re101-poodle-6> hey thank you but that has a space
[08:54:56] <re101-poodle-6> between the first and last name
[08:56:18] <yitz> Oh. I added a space in the replace
[08:56:20] <yitz> Drop the space
[08:56:55] <re101-poodle-6> how do i do that
[08:57:07] <re101-poodle-6> oh i got it
[08:57:13] <re101-poodle-6> thank you so very much!!!
[08:57:14] <yitz> Find the " " in the replacement part, select it and hit BACKSPACE or DELETE
[08:57:21] <re101-poodle-6> love you!! 
[08:57:36] <yitz> I love you too. Would you like to grab dinner sometime?
[08:58:19] <re101-poodle-6> lol
[08:58:58] *** Quits: re101-poodle-6 (~re101-poo@2603-6080-e309-1800-78f9-21c8-ec19-24f7.res6.spectrum.com) (Quit: Client closed)
[09:00:52] <digitok> rejected
[09:01:37] *** Joins: re101-oyster-20 (~re101-oys@2607:fb90:4430:95f:7f3d:6643:1da6:3958)
[09:01:57] *** Joins: re101-cuscus-84 (~re101-cus@103.241.224.93)
[09:02:25] <re101-cuscus-84> !rehelp
[09:02:26] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[09:08:10] *** Quits: re101-oyster-20 (~re101-oys@2607:fb90:4430:95f:7f3d:6643:1da6:3958) (Ping timeout: 246 seconds)
[09:08:30] <re101-cuscus-84> How to share link containing my regex?
[09:08:54] <re101-cuscus-84> !rehelp
[09:08:55] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[09:09:00] <re101-cuscus-84> How to share link containing my regex?
[09:13:30] *** Quits: re101-cuscus-84 (~re101-cus@103.241.224.93) (Quit: Client closed)
[09:16:31] <digitok> not like that
[09:48:07] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[09:52:34] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 240 seconds)
[10:30:48] *** Joins: palasso (~palasso@user/palasso)
[10:34:07] *** Joins: re101-goat-99 (~re101-goa@116.75.72.42)
[10:34:10] <re101-goat-99> !rehelp
[10:34:10] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[10:34:13] <re101-goat-99> https://regex101.com/r/6b51Q0/1
[10:36:39] <re101-goat-99> My RegEx finds only the `<br>` tag but I want it to find the `<br>` tag, the `-` on the next line, the text after the hyphen/dash, as well as the HTML after the text
[10:37:05] <digitok> ok, i'm making 2 new rules for you
[10:37:15] <digitok> #1, don't type !rehelp. you know the instructions
[10:37:24] <digitok> #2, don't post links with pattern or substitution errors
[10:37:54] <re101-goat-99> I want to replace it with what I've put in the substitution (which I believe is correct)
[10:38:00] <digitok> it isn't
[10:38:05] <digitok> hence the red error
[10:38:28] <re101-goat-99> OK, digitok, you're the RegEx Guru, pls help
[10:38:50] <digitok> these rules are prerequisites for my help
[10:39:03] <re101-goat-99> OK, I'll follow it
[10:39:14] <digitok> great
[10:46:23] <digitok> what does "the html after the text" mean
[10:52:24] <re101-goat-99> the HTML code
[10:53:10] <re101-goat-99> this: `</span><span style='font-size:13.5pt;font-family:
[10:53:11] <re101-goat-99>   "Verdana","sans-serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
[10:53:11] <re101-goat-99>   "Times New Roman"'><o:p></o:p></span></p>`
[10:54:28] *** Quits: Me-me (~me-me@v.working.name) (Changing host)
[10:54:28] *** Joins: Me-me (~me-me@user/me-me)
[10:54:28] *** ChanServ sets mode: +v Me-me
[10:55:43] <digitok> so just everything up to the first </p> ?
[10:55:51] <re101-goat-99> yea
[10:55:59] <digitok> and what do you want in $1
[10:56:19] <re101-goat-99> replace with this:-
[10:56:33] <re101-goat-99> `</span></p></td></tr></table><p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><span style='font-size:13.5pt;font-family:"Verdana","sans-serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal
[10:56:34] <re101-goat-99> style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><span style='font-size:13.5pt;font-family:"Verdana","sans-serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>$1</td></tr></table><p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><span
[10:56:34] <re101-goat-99> style='font-size:13.5pt;font-family:"Verdana","sans-serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>`
[10:56:39] <digitok> -_-
[10:56:48] <digitok> that wasn't my q
[10:57:11] <re101-goat-99> My RegEx finds only the `<br>` tag but I want it to find the `<br>` tag, the `-` on the next line, the text after the hyphen/dash, as well as the HTML after the text
[10:57:16] <digitok> that wasn't my q
[10:57:23] <digitok> allow me to clarify
[10:57:29] <digitok> your replacement includes 07$1
[10:57:38] <digitok> which part of the matched text do you want placed into 07$1
[10:57:42] <digitok> the whole thing?
[10:57:59] <digitok> 07<br>...</p>?
[10:58:24] <re101-goat-99> yes
[10:58:42] <digitok> ok, and does notepad++ support $0
[10:58:49] <re101-goat-99> yes
[10:58:54] <digitok> then you can use that
[10:59:19] <digitok> https://regex101.com/r/6b51Q0/2
[11:00:18] <digitok> if you click on the 07` to the left of the pattern in my link, you'll see a list of delimiters
[11:00:31] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[11:00:38] <digitok> using something other than 07/ will prevent errors regarding unescaped delimiters when you use 07/ in the pattern
[11:02:47] <re101-goat-99> Sure
[11:03:55] <re101-goat-99> Your RegEx finds what it needs to perfectly but doesn't replace it - it only adds the replacement just above that last ~<br>` tag
[11:04:17] <re101-goat-99> `<br>` tag
[11:05:33] <digitok> i didn't do anything to the replacement other than changing 07$1 to 07$1
[11:05:48] <digitok> s/\$1\K/$0/
[11:05:49] <rebot> 14digitok meant: i didn't do anything to the replacement other than changing 07$107$014 to 07$1
[11:05:56] <digitok> s/\$1$/$0/
[11:06:00] <digitok> whatever
[11:06:01] <digitok> lol
[11:08:18] <re101-goat-99> neither $1 nor $0 is helpful
[11:09:13] <re101-goat-99> if I use $1 in the replace field, everything vanishes
[11:09:51] <re101-goat-99> if I use $0, it only adds the replacement just above that last `<br>` tag
[11:10:21] <digitok> my point is that you made the replacement, not me
[11:10:37] <digitok> i just asked what data you wanted in $0/$1
[11:10:47] <digitok> which was 07<br>...</p> which is what i did
[11:14:09] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[11:29:38] *** Joins: re101-hound-59 (~re101-hou@150.228.101.236)
[11:29:43] *** Quits: OnlineCopy (~onlinecop@user/onlinecopy) (Quit: o/)
[11:29:45] <re101-hound-59> !rehelp
[11:29:46] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[11:30:05] <re101-hound-59> Hi experts, I need to search the exact unicode value for the below link
[11:30:06] <re101-hound-59> https://regex101.com/r/diYSi6/1
[11:30:16] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:30:18] <re101-hound-59> the unicode is 2007
[11:31:03] <re101-hound-59> CAD (x2007)(6)43. There are six number of 2007 unicode
[11:35:49] <re101-goat-99> OK, thanks a lot digitok. It finds everything perfectly
[11:36:55] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Ping timeout: 250 seconds)
[11:37:09] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[11:37:09] *** ChanServ sets mode: +v JohnDoe2
[11:37:21] *** Joins: OnlineCopy (~onlinecop@user/onlinecopy)
[11:38:15] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[11:38:15] *** ChanServ sets mode: +v OnlineCop
[11:38:52] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:50] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[11:46:07] *** Quits: re101-goat-99 (~re101-goa@116.75.72.42) (Quit: Client closed)
[11:48:07] *** Joins: re101-pika-94 (~re101-pik@2600:8802:3703:4000:4c52:896d:4c74:e4f3)
[11:48:31] <re101-pika-94> !rehelp
[11:48:31] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[11:49:19] *** Quits: re101-hound-59 (~re101-hou@150.228.101.236) (Quit: Client closed)
[11:49:50] <re101-pika-94> any way to, using the substitution function, include the match into the replacing field
[11:50:55] <digitok> 07re101-pika-94, $0
[11:51:04] <digitok> or 07$& in js
[11:52:12] <re101-pika-94> perfect thanks
[11:52:22] *** Quits: re101-pika-94 (~re101-pik@2600:8802:3703:4000:4c52:896d:4c74:e4f3) (Client Quit)
[11:52:22] <digitok> yw
[12:05:13] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[12:05:14] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[12:11:13] *** Joins: re101-goat-88 (~re101-goa@116.75.72.42)
[12:11:13] <re101-goat-88> https://regex101.com/r/BSxLCi/1
[12:13:33] <re101-goat-88> My RegEx finds the first `<br>` tag as well as all the matter preceding it but I don't want it to find the matter preceding it. I also want it to find the first `<br>` tag in every section (it finds only the first one now)
[12:15:08] <re101-goat-88> I'm using Notepad++
[12:20:34] <karhunkynsii> Something like this?  https://regex101.com/r/BSxLCi/2
[12:21:28] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:22:30] <re101-goat-88> +karhunkynsii, I added the "SECTION" just so that it would be easy for you guys but my "original" doesn't have it
[12:23:22] <karhunkynsii> How about this then?  https://regex101.com/r/BSxLCi/3
[12:23:31] <re101-goat-88> I want to replace only the first `<br>` tag in every section
[12:24:31] <karhunkynsii> Delete those?
[12:24:54] <karhunkynsii> https://regex101.com/r/BSxLCi/4
[12:25:58] <re101-goat-88> I don't want the matter between <p..................... and <br>, I want to replace only the first `<br>` tag in every section
[12:26:43] <karhunkynsii> Is /4 good?
[12:27:05] <re101-goat-88> what is \4?
[12:27:12] <karhunkynsii> https://regex101.com/r/BSxLCi/4
[12:29:05] <karhunkynsii> Alternatively,  https://regex101.com/r/BSxLCi/5
[12:30:23] <re101-goat-88> Can you use `-[\s\S]\d+:[\s\S]*?<br>`
[12:30:35] <re101-goat-88> improve on it?
[12:30:53] <karhunkynsii> Try it.
[12:31:39] <re101-goat-88> it did not match anything
[12:32:14] <re101-goat-88> it needs to be tweaked
[12:32:30] <karhunkynsii> What's the problem?
[12:33:42] <re101-goat-88> Notepad++ says "no occurence found"
[12:34:29] <re101-goat-88> When SECTION is added, this works: SECTION \d+:[\s\S]*?<br> fine
[12:34:55] <karhunkynsii> Did you try pattern from /5?
[12:35:18] <re101-goat-88> without "SECTION", `-[\s\S]\d+:[\s\S]*?<br>` is not found
[12:35:45] <karhunkynsii> You said you added SECTION just for us.
[12:36:14] <re101-goat-88> yea
[12:36:31] <karhunkynsii> Did you try pattern from /5?
[12:36:38] <re101-goat-88> what is that?
[12:37:03] <karhunkynsii> https://regex101.com/r/BSxLCi/5
[12:37:13] *** Joins: lavaball (felix@31.204.155.215)
[12:37:19] <karhunkynsii> See the end of the link? It says /5, meaning 5th version.
[12:37:56] <re101-goat-88> Sorry but that finds everything from <p...............................to ................<br>
[12:38:23] <re101-goat-88> I want to find this: `-[\s\S]\d+:[\s\S]*?<br>`
[12:39:10] <re101-goat-88> Notepad++ wants it tweaked to be able to find it, so pls help
[12:39:41] <karhunkynsii> Maybe someone else will help you.
[12:40:06] <re101-goat-88> Pls help me+karhunkynsii
[12:40:16] <re101-goat-88> You've studied it
[12:40:44] <re101-goat-88> I want to find this: `-[\s\S]\d+:[\s\S]*?<br>`
[12:52:25] <re101-goat-88> https://regex101.com/r/8BxMc4/1
[12:53:51] <re101-goat-88> My RegEx (see the link) is not working, pls help
[12:58:48] <re101-goat-88> .....also, when replaced, only the text should remain but not the "-" or <br> tag
[13:03:26] *** Quits: re101-fossa-62 (~re101-fos@115.243.2.227) (Quit: Client closed)
[13:04:11] <re101-goat-88> I though `\d>-[\s\S]+[\s\S]*?<br>` may find it but it didn't
[13:06:56] <re101-goat-88> this works: >-[\s\S].+[\s\S]*?<br>
[13:13:20] <karhunkynsii> May as well do like this then,  >-[\s\S]+?<br>
[13:21:00] <re101-goat-88> OK, thanks a million +karhunkynsii
[13:21:51] *** Quits: re101-goat-88 (~re101-goa@116.75.72.42) (Quit: Client closed)
[13:26:57] *** Joins: digitok (~death@about/regex/digitok)
[13:27:04] *** Joins: rebot (~death@about/regex/rebot)
[13:27:04] *** ChanServ sets mode: +v rebot
[13:29:31] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:34:47] *** Joins: army (~aL@user/army)
[14:33:37] *** Joins: shan (shan@user/shan)
[14:33:42] <shan> !rehelp
[14:33:43] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[14:35:45] <shan> https://regex101.com/r/H5nJhx/1 ok so i'm trying to use this regex with a lookbehind to match things that look like *test* but not \*test*. It seems to work on regexr and regex101 but it doesn't when i try the same thing in JavaScript?
[14:40:30] *** Joins: re101-lizard-44 (~re101-liz@th-190-28.splius.lt)
[14:41:35] <re101-lizard-44> Need help with matching lines containing character or "2021" or time for example 12:27 
[14:42:16] <re101-lizard-44> !rehelp
[14:42:17] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[14:42:28] <re101-lizard-44> https://regex101.com/r/7Sd3Oo/1
[14:42:38] <re101-lizard-44> Need help matching lines containing:
[14:42:39] <re101-lizard-44> character €
[14:42:39] <re101-lizard-44> Deliveries
[14:42:40] <re101-lizard-44> Bonuses
[14:42:40] <re101-lizard-44> 2021
[14:42:41] *** ChanServ sets mode: +o rebot
[14:42:41] <re101-lizard-44> and time ":" for example 12:27
[14:42:42] *** rebot sets mode: +q-o *!*re101-liz@*.splius.lt rebot
[14:42:43] <rebot> 14re101-lizard-44: You've been muted for posting too many lines too quickly. You'll be unmuted in 0730s14.
[14:43:11] *** ChanServ sets mode: +o rebot
[14:43:12] *** rebot sets mode: -qo *!*re101-liz@*.splius.lt rebot
[14:44:05] *** Joins: re101-bichon-66 (~re101-bic@185.124.230.251)
[14:44:14] *** Quits: re101-bichon-66 (~re101-bic@185.124.230.251) (Client Quit)
[14:45:30] *** Joins: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry)
[14:45:43] <StayHungry> Afternoon, comrades
[14:45:56] <testuser[m]> hi
[14:46:22] <re101-lizard-44> hello blyatiful
[14:46:41] <StayHungry> Hope everybody's feeling well and no one has the virus :)
[14:47:13] <shan> figured it out, i wasn't escaping the backslash in my js *facepalms*
[14:47:18] <shan> sup StayHungry, how goes it
[14:47:49] <StayHungry> shan: personally fine, but grandma got sick after her 96s birthday
[14:47:59] <StayHungry> I'm struggling to fix https://regex101.com/r/3Mg0QA/1 which for some reason  does not include that 'P 5'
[14:47:59] <shan> oh no :(
[14:54:53] <StayHungry> shan: yeah, can't grasp how that happened, i kept her away for 2 years in a remote cabin that only a couple of relatives had access to. add did checks recently, everyone passed, yet it happened.
[14:55:10] <StayHungry> *all did
[14:57:35] <StayHungry> perhaps something leaked from the market or the groceries 
[15:05:35] <StayHungry> \S for whatever reason does not capture that 'P 5'
[15:05:45] <StayHungry> that's odd
[15:08:52] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:13:31] <digitok> 07re101-lizard-44, like https://regex101.com/r/7Sd3Oo/2 ?
[15:15:14] <digitok> 07shan, js only supports lookbehind with es6
[15:15:39] <shan> digitok: that wasn't the problem, i wasn't escaping the backslash in the js string
[15:15:50] <shan> StayHungry: hope she gets well soon
[15:16:04] <digitok> ah, right
[15:16:26] <digitok> you could simplify it slightly to https://regex101.com/r/H5nJhx/4
[15:16:38] <digitok> unless you had \w* there for a reason
[15:28:23] *** Joins: re101-bear-94 (~re101-bea@53.226-244-81.adsl-dyn.isp.belgacom.be)
[15:28:36] <re101-bear-94> Hello, i'm a newbie :-(
[15:28:42] <digitok> :'(
[15:28:55] <re101-bear-94> :-)
[15:29:04] <re101-bear-94> I try to find a solution with regex.
[15:29:06] <digitok> cool, glad to help!
[15:29:17] <re101-bear-94> Tks
[15:29:19] <digitok> oh, still need more help
[15:29:19] <re101-bear-94> https://regex101.com/r/rrvK3V/1
[15:29:47] <re101-bear-94> Here i try to convert (replace) url in html format
[15:30:17] <re101-bear-94> But when an url end by a "point" it's not correct :-(
[15:30:28] <re101-bear-94> How to adapt the regex to correct this?
[15:30:37] <digitok> will the url always have a . at the end?
[15:30:46] <re101-bear-94> No :-(
[15:31:12] <digitok> right, i didn't scroll down
[15:31:20] <re101-bear-94> For example Group 4 is correct
[15:31:38] <re101-bear-94> Soory make mistake
[15:31:42] <re101-bear-94> Group 4 is NOT correct
[15:31:51] <digitok> which language are you using
[15:32:18] <re101-bear-94> Sorry it's the first time i use and see group 4 is repaet in the right part
[15:32:23] <re101-bear-94> I can use many language
[15:32:31] <digitok> like php?
[15:32:32] <re101-bear-94> Here i try to random my texte..
[15:32:35] <digitok> or perl
[15:32:38] <re101-bear-94> or sorry
[15:32:51] <re101-bear-94> My goal is to use in notepad++ with regex replace
[15:32:53] <re101-bear-94> in PHP
[15:33:01] <digitok> cool
[15:33:14] <digitok> how about https://regex101.com/r/rrvK3V/2
[15:33:17] <re101-bear-94> no Html sorru
[15:33:27] <digitok> this will work in np++
[15:34:57] <re101-bear-94> Whaoooo
[15:35:08] <re101-bear-94> you considerally light my version :-)
[15:35:16] <re101-bear-94> Thanks it lok like to work :-)
[15:35:34] <digitok> great :) yw
[15:35:36] <re101-bear-94> It's 4 day i watch youtube tuto etc, read etc
[15:35:55] <re101-bear-94> I make some test. Thank you very much. Thanks
[15:36:00] <digitok> yea, it can take some time
[15:36:04] <digitok> !tutorials
[15:36:04] <perlbot> https://www.regular-expressions.info/tutorial.html, http://www.rexegg.com/, https://regexone.com/, https://youtu.be/_6QBBT9Sq1U
[15:36:15] <re101-bear-94> I will have some other think to do and come back certainly again :-)
[15:36:16] <digitok> these are some good resources
[15:36:22] <digitok> sure :)
[15:36:43] <re101-bear-94> Thank you again. With this i will won many time :-)
[15:36:47] <re101-bear-94> Best regards
[15:36:50] <digitok> hehe
[15:38:17] <StayHungry> digitok: https://regex101.com/r/3Mg0QA/1 :(
[15:38:19] <testuser[m]> !karma notepad
[15:38:19] <perlbot> notepad has karma of 2984
[15:38:23] <testuser[m]> bruh
[15:39:25] <digitok> !karma np
[15:39:25] <perlbot> np has karma of 196
[15:39:45] <StayHungry> !karma StayHungry
[15:39:45] <perlbot> StayHungry has karma of 2
[15:39:47] <StayHungry> :D
[15:40:27] <testuser[m]> -++
[15:40:29] <testuser[m]> !karma -
[15:40:30] <perlbot> - has karma of -8401
[15:40:37] <testuser[m]> Lol
[15:40:50] <re101-lizard-44> digitok not like https://regex101.com/r/7Sd3Oo/2 cause it does not match the time (12:27) for example
[15:42:24] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:45:13] *** Joins: fakuve (~fakuve@192.210.243.250)
[15:55:34] <digitok> 07re101-lizard-44, how exactly do you want it returned
[15:55:50] <digitok> in terms of matches and groups
[16:00:10] <digitok> 07StayHungry, https://regex101.com/r/3Mg0QA/2
[16:00:38] <digitok> [^\*\s]\S means there must be a char that is not a space or * followed by a char that is not a space
[16:00:43] <StayHungry> oh, comrade, you've not forgotten. nice :)
[16:00:43] <digitok> "P " doesn't match that
[16:02:29] <digitok> er
[16:02:39] <digitok> https://regex101.com/r/3Mg0QA/3
[16:02:42] <digitok> removed the extra groups
[16:03:11] <StayHungry> that's odd... i thought it would work as follows: if line begins with either asterisk or space, then omit it. but catch lines that start with some meaningful to human beings :)
[16:04:25] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Read error: Connection reset by peer)
[16:04:27] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Read error: Connection reset by peer)
[16:04:29] <digitok> nope
[16:08:24] <StayHungry> heh, you also removed catching linebreak after first line :D
[16:09:40] <digitok> yea, although mine will grab the trailing linebreak where yours didn't
[16:11:15] <digitok> to avoid that you'd need https://regex101.com/r/3Mg0QA/4
[16:17:41] <StayHungry> it's just how the second capture group is processed later. i intended to split it with \r?\n or [\r?\n]+ to display depending on user's input. for example, user presses 1 then * first line is display, 2 then * second line, etc. with current pattern, i have to hack splitting a bit -> split('\r?\n')[$intput-1]
[16:18:21] <StayHungry> whereas my initial pattern allows calling index with -1
[16:18:24] <StayHungry> *without
[16:18:38] <StayHungry> as follows split('[\r?\n]+')[$intput]
[16:19:02] <digitok> you don't need 07? in there
[16:19:10] <digitok> that's literal inside []
[16:19:15] <StayHungry> always forget about that, sorry
[16:19:19] <digitok> :)
[16:20:39] <digitok> so which part are you splitting?
[16:20:47] <StayHungry> <Comm>
[16:20:58] <digitok> right
[16:21:35] * StayHungry was happy to know groups could be named :)
[16:21:38] <digitok> so having the initial newline in there means [0] would be empty
[16:21:42] *** Joins: re101-goose-94 (~re101-goo@103.206.114.107)
[16:21:45] <digitok> meaning no need for -1 as you said
[16:22:29] <re101-goose-94> !rehelp
[16:22:29] <rebot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[16:22:43] <digitok> then yea, you can use https://regex101.com/r/3Mg0QA/5
[16:23:17] <StayHungry> hooray, it works :D
[16:23:28] <digitok> (:
[16:23:36] <StayHungry> how do i raise your karma here?
[16:24:04] <StayHungry> where to press, to click, to send a covid-free hug? :D
[16:24:18] <digitok> you type a nick and append ++
[16:24:55] <StayHungry> digitok+++++
[16:25:02] <digitok> :>
[16:25:23] <StayHungry> digitok++
[16:25:43] <digitok> now i'll get 2
[16:25:51] <StayHungry> digitok+++++
[16:26:24] <digitok> the bot isn't here actually :)
[16:26:42] <StayHungry> what a peculiar thing that regexp, it can both split by \r?\n and [\r\n]+, whereas mine was possible only with the latter
[16:26:43] <digitok> but one's enough for one help
[16:27:24] <digitok> yours should be the same
[16:27:57] <StayHungry> ah, right. \r?\n captures 1 extra char, so [\r\n]+ should be used
[16:28:27] <digitok> not sure what you mean there
[16:29:56] <StayHungry> for example, paragraph is https://dpaste.org/ToFW/slim
[16:31:22] <StayHungry> when split to show third * line with \r?\n -> https://s3.rokket.space/t_dPf21U.png
[16:31:43] <StayHungry> but with [\r\n]+ it is processed as expected, chars columns shows 0
[16:34:55] <StayHungry> if it still does not make sense, never mind, just be sure you've helped :D
[16:35:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[16:36:53] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[16:37:47] <digitok> i'm not sure why that would happen
[16:37:52] <digitok> which language is it again
[16:37:53] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[16:37:53] *** ChanServ sets mode: +v perlbot
[16:38:57] <re101-bear-94> Hello Again :-)  I come back for a little adaptation
[16:38:58] <re101-bear-94> https://regex101.com/r/ksEGA9/1
[16:39:26] <re101-bear-94> In this one i try to modify regex (intial by digitok ;-)  ) with (target)
[16:40:11] <re101-bear-94> BUT in the 2 search, (Target) is follow for the first case with "no space" and in the second match with a space
[16:40:29] <re101-bear-94> How to include by "or"
[16:40:56] <re101-bear-94> MAtch if (Target) is follow OR not with space
[16:41:03] <digitok> 07StayHungry, the only reason i can think of that that'd happen is if the data ended with "\r\n\r"
[16:41:12] <re101-bear-94> Don't know if i'm clear again
[16:41:31] <StayHungry> digitok: there is a possibility, yes
[16:41:45] <digitok> then yea, [\r\n]+ is better
[16:41:54] <digitok> ah
[16:42:07] <StayHungry> digitok: what a subtle observer you are :)
[16:42:13] *** Joins: AKT (~AKT@2409:4054:309:4dfb:4d88:a6ad:58fb:daec)
[16:42:32] <digitok> thanks :)
[16:43:13] <digitok> i bet if you remove "\r?" from the regex, the results won't change
[16:43:33] <digitok> the main regex, not the split
[16:43:39] <StayHungry> let me see
[16:43:44] <digitok> 07re101-bear-94, could it be more than 1 space?
[16:44:03] <digitok> 07re101-bear-94, also, do you actually need to capture (Target)? you don't seem to be using it in the replacement
[16:44:28] <StayHungry> but i thought \r is there for cross-platform compatibility in case file was created not on Windows, but on mac or unix 
[16:45:18] <re101-bear-94> digitok, "Normaly" not more one space
[16:45:35] <digitok> we can just allow unlimited
[16:45:47] <digitok> https://regex101.com/r/ksEGA9/3
[16:45:50] <re101-bear-94> digitok, no Target is put on the replacement
[16:46:08] <digitok> i removed the group/capture for (Target)
[16:46:14] <digitok> hopefully that's ok
[16:46:42] <digitok> 07StayHungry, in most tools, . will match \r unless you specify somehow that linebreaks are \r\n
[16:46:59] <digitok> so the \r will be consumed by .*/.+, and then \n matches the newline
[16:47:24] <digitok> so in the case you mentioned, the last line will indeed contain \r, hence 1 char length
[16:47:26] <AKT> This is my pattern = (^(To|to).+)e  & this is my str = tone, tongue, Toggle, tomorrow, tonight, line And I want to match only words begging with to or To & ending with e, but I'm getting the word "line" as well in the outcome https://regex101.com/r/vnkkIS/1/
[16:47:30] <AKT> https://regex101.com/r/vnkkIS/1/
[16:48:28] <digitok> 07AKT, https://regex101.com/r/vnkkIS/2
[16:49:22] <re101-bear-94> digitok, Perfect. Thanks again :-)  Now i can create a macro in notepadd++ and do the 2 replaces :-)
[16:49:32] <digitok> cool :)
[16:49:51] <AKT> But I want them all in the signle line match just like I'm getting
[16:50:11] <re101-bear-94> I love regex. So many possibilities but practices is required
[16:50:16] <StayHungry> never ending pipeline of issues... regex issue | digitok :D
[16:50:17] <digitok> hehe, yep
[16:50:27] <digitok> :>
[16:50:33] <re101-bear-94> ;-)
[16:50:38] <StayHungry> almost like curl ident.me
[16:50:43] <StayHungry> curl | ident.me
[16:50:51] <StayHungry> oh, nevermind :D
[16:51:24] <digitok> 07AKT, do you mean you want to match "tone, tongue Toggle"
[16:51:29] <digitok> as a single match?
[16:51:57] <digitok> the other 2 words don't end with "e"
[16:51:59] <AKT> yes
[16:52:03] <digitok> ok
[16:52:35] <digitok> would you prefer that trailing commas or spaces aren't included?
[16:52:36] <AKT> also why my Theroy of computation syntax doesn't match here
[16:52:53] <digitok> e.g. "tone, tongue Toggle, "
[16:53:51] <AKT> OK , but if can include them as well
[16:54:23] <digitok> how's https://regex101.com/r/vnkkIS/3
[16:55:46] <AKT> Thanks but I tried simply with ^ & * or + why don't they work for me
[16:56:12] <digitok> 07re101-lizard-44, fyi i updated your link, but tbh i'm not entirely sure what you want
[16:56:28] <AKT> Also they * means 0 or more occurence does it mean it will also include null values
[16:56:33] *** Joins: re101-kudu-21 (~re101-kud@81.213.104.67)
[16:57:14] *** Quits: re101-kudu-21 (~re101-kud@81.213.104.67) (Client Quit)
[16:57:54] <digitok> 07AKT, ^ means start of string
[16:58:19] <digitok> and 07.*e and 07.+e match as much as possible before backtracking to find 07e
[16:58:29] <digitok> meaning it will match anything and everything until the last 07e in the string
[16:59:06] <digitok> and no, mine won't match null values. it matches 1 such word (to...e) and 0 or more after it
[16:59:23] <digitok> \W* matches the non-word characters between the words
[16:59:32] <digitok> like comma, space etc
[17:00:55] <StayHungry> digitok: how did you manage to learn all that?
[17:01:20] <StayHungry> i look at regexes for 2 decades already and still not figured it out yet :D
[17:01:42] <StayHungry> pandora box
[17:01:49] <digitok> you need to write them :p
[17:01:50] <AKT> why can't i've a simple syntax like this (^(to|To)+ then any alphabetic chars)e$
[17:02:28] <digitok> because ^ and $ mean start and end of string, not start and end of word
[17:02:31] <digitok> that's what \b is for
[17:02:50] <digitok> and what you described there is pretty much what i gave you in version /2
[17:02:55] <digitok> but you didn't want it :p
[17:03:24] <digitok> "(to|To)+ then any alphabetic chars)e" would be a single word
[17:03:35] <digitok> brb though
[17:03:55] <AKT> Thanks man
[17:08:09] <StayHungry> call him comrade :)
[17:15:23] *** Quits: AKT (~AKT@2409:4054:309:4dfb:4d88:a6ad:58fb:daec) (Quit: Client closed)
[17:16:02] <StayHungry> i wonder... since most of you're natives and IT-oriented... which one sounds more appealing to you
[17:16:30] <StayHungry> -alive (display only existing solutions) or -hidezero (hide non-existing solutions)
[17:17:51] <Me-me> hidezero seems less ambiguous.
[17:18:25] <StayHungry> it's just i am not native and come from humanities, so i process hide zero as hide something that does not exist in the first place :D
[17:18:47] <Me-me> It's all about context.
[17:19:08] *** Joins: davido_ (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9)
[17:19:22] *** Quits: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9) (Ping timeout: 256 seconds)
[17:25:18] *** Joins: re101-wasp-6 (~re101-was@2a10:8000:94e8:0:d913:3204:64fc:77cf)
[17:25:39] <re101-wasp-6> !rehelp
[17:25:39] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[17:28:15] <re101-wasp-6> Hi,
[17:28:30] <re101-wasp-6> Need help with minimize this regex: https://regex101.com/r/KkndnP/1
[17:29:16] <re101-wasp-6> Can this "((insect|dog|cat|snake|animal|spider)\s(bite|bit|bitten|sting))|((bite|bit|bitten|sting)\s(insect|dog|cat|snake|animal|spider))" some how get shinked into the two parts but without order?
[17:34:38] <digitok> 07re101-wasp-6, which programming language?
[17:35:04] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[17:35:17] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:35:35] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[17:36:39] <re101-wasp-6> digitok typescipt
[17:37:06] <re101-wasp-6> Currently I'm writting it as:
[17:37:09] <re101-wasp-6>             const animalsRegex = new RegExp('\(insect|dog|cat|snake|animal|spider)', 'g');
[17:37:10] <re101-wasp-6>             const biteRegex = new RegExp('(bite|bit|bitten|sting)', 'g');
[17:37:10] <re101-wasp-6>             const animalBiteRegex = new RegExp(`(${animalsRegex.source}\\s+${biteRegex.source})|(${biteRegex.source}\\s+${animalsRegex.source})`, 'g');
[17:37:11] <re101-wasp-6>             const matches = text.match(animalBiteRegex);
[17:37:11] *** ChanServ sets mode: +o rebot
[17:37:12] *** rebot sets mode: +q-o *!*re101-was@2a10:8000:94e8:0:d913:3204:64fc:* rebot
[17:37:13] <rebot> 14re101-wasp-6: You've been muted for posting too many lines too quickly. You'll be unmuted in 0730s14.
[17:37:41] *** ChanServ sets mode: +o rebot
[17:37:42] *** rebot sets mode: -qo *!*re101-was@2a10:8000:94e8:0:d913:3204:64fc:* rebot
[17:38:53] <re101-wasp-6> digitok any suggestions?
[17:39:21] <digitok> how do you need it returned
[17:39:28] <digitok> s/it/the matches/
[17:39:28] <rebot> 14digitok meant: how do you need 07the matches14 returned
[17:39:47] <digitok> do you want the words captured?
[17:40:15] *** Quits: re101-goose-94 (~re101-goo@103.206.114.107) (Quit: Client closed)
[17:42:28] *** Quits: blddk (~admin@185.233.252.229) (Ping timeout: 258 seconds)
[17:42:49] <re101-wasp-6> yes
[17:44:37] <digitok> the only thing i can think of is https://regex101.com/r/KkndnP/3
[17:44:48] <digitok> since you're using js
[17:46:23] <re101-wasp-6> That looks awesome
[17:46:31] <re101-wasp-6> thanks, still need tofigure it out
[17:48:18] <digitok> yw :)
[17:49:32] <digitok> basically we match a word boundary (between a word-char [a-zA-Z0-9_] and a non-word char), and then we check using a zero-width lookahead assertion (this doesn't "consume" characters) that what follows is an optional word, followed by one of the listed words. we do this twice as we have 2 lists of words
[17:50:08] <digitok> inside these assertions we also ensure that the word isn't a partial word by adding \b at the end of each
[17:50:51] <digitok> then we match/consume the words with 07\w+ \w+, but now that i think about it, that part isn't actually required
[17:51:18] <digitok> that just gives you a "full match" (group 0) of both words together
[17:51:26] <digitok> https://regex101.com/r/KkndnP/4
[17:51:39] <digitok> so here the full match will be nothing, but you'll still get the captured words
[17:53:29] <re101-wasp-6> Thanks for the detailed info,
[17:53:41] <digitok> np
[17:53:53] <re101-wasp-6> but what makes it look for those two group without order ("X" "Y"  and also "Y" "X")
[17:54:21] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 258 seconds)
[17:54:33] <digitok> since the lookahead (?=...) are zero-width assertions, they don't move the internal pointer
[17:54:47] <digitok> so after the first one matches, we're still positioned at the initial \b
[17:55:11] <digitok> that's why inside each we allow an optional word before the listed words
[17:55:26] *** Joins: blddk (~admin@185.233.252.229)
[17:55:40] <re101-wasp-6> amm I guess I need to learn more about lookahead (?=...) 
[17:56:13] <digitok> yea, you could say it's somewhat of an advanced feature
[17:56:16] <digitok> !lookaround
[17:56:16] <perlbot> http://www.regular-expressions.info/lookaround.html
[17:56:22] <digitok> there's some good info there
[17:57:14] <re101-wasp-6> Cool
[17:57:20] <re101-wasp-6> Thank you so much!!!
[17:57:34] <digitok> glad to help :)
[17:58:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 255 seconds)
[17:59:34] *** Joins: BUSY (~BUSY@user/busy)
[18:04:13] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 268 seconds)
[18:27:53] *** Joins: AKT (~AKT@2409:4054:309:4dfb:991:2007:ce9d:7a6)
[18:28:24] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[18:29:47] *** Joins: re101-frog-39 (~re101-fro@ptr-e1j9zz6qn4ute8xxa6n.18120a2.ip6.access.telenet.be)
[18:30:04] <re101-frog-39> !rehelp
[18:30:14] <rebot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[18:30:59] <re101-wasp-6> digitok after re reading you info and learning about lookarround, how come it's not capturing "bit bit"? (which is exelent)
[18:31:53] <re101-frog-39> https://regex101.com/r/DzlWsh/1
[18:32:15] <re101-frog-39> Sorry link doesnt work
[18:32:24] <re101-frog-39> https://regex101.com/r/6KL2TT/1
[18:32:34] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[18:32:45] <re101-frog-39> last link is the one i'm testing
[18:33:09] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 252 seconds)
[18:33:09] <re101-frog-39> would like to strip everything BEFORE "/teams"
[18:33:53] <digitok> in php?
[18:34:12] <digitok> any reason you're using (?s)
[18:34:50] <digitok> https://regex101.com/r/6KL2TT/2
[18:35:21] <digitok> 07re101-wasp-6, because if one of the lookaheads fails, the match fails
[18:36:05] <re101-frog-39> no powershell actually
[18:36:15] <re101-frog-39> found the (?s) on stackoverflow
[18:36:21] <digitok> 07re101-wasp-6, so in the case you mentioned, the first lookahead will fail
[18:36:36] <digitok> right, that'll work in powershell
[18:36:57] <digitok> (?s) just allows . to match newline characters, which it doesn't seem like you'd need
[18:37:13] <re101-frog-39> indeed
[18:37:24] <re101-frog-39> I now have this: ^.*$[teams]
[18:37:29] <re101-frog-39> stil doesn't produce a match
[18:37:38] <digitok> check my link
[18:37:41] <digitok> https://regex101.com/r/6KL2TT/2
[18:38:22] <re101-frog-39> that's exactly what I need
[18:38:26] <re101-frog-39> thanks a bunch! (y)
[18:38:31] <digitok> yw :)
[18:38:45] <re101-frog-39> thanks, have a great day! :)
[18:38:51] <digitok> thanks, you too
[18:39:01] <re101-frog-39> thanks!
[18:39:47] <digitok> oh btw
[18:39:55] <digitok> you won't need to escape / in powershell
[18:40:04] <digitok> so you can use 07^.*?(?=/teams)
[18:40:21] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[18:42:20] *** Quits: AKT (~AKT@2409:4054:309:4dfb:991:2007:ce9d:7a6) (Quit: Client closed)
[18:43:37] *** Quits: re101-frog-39 (~re101-fro@ptr-e1j9zz6qn4ute8xxa6n.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[18:45:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:46:51] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[18:48:02] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[18:52:55] *** Joins: TMC (~TMC@2800:484:6f83:6700:6c51:df0f:8eec:5df7)
[18:55:07] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 245 seconds)
[18:56:27] <TMC> Hi, JohnDoe2
[18:56:44] <JohnDoe2> 👋
[18:57:31] *** Quits: Thermoriax (Thermoriax@user/thermoriax) (Quit: WeeChat 3.2)
[18:58:12] <TMC> How are you
[18:59:38] <JohnDoe2> good, working, what about you/
[19:02:01] <TMC> I'm working
[19:02:28] <TMC> https://regex101.com/r/5or9Qy/1/
[19:02:30] <TMC> would you help me with this expression
[19:02:57] <JohnDoe2> what should it do with the numbers?
[19:05:01] <OnlineCop> TMC: What are you attempting to do?
[19:07:57] *** Quits: re101-wasp-6 (~re101-was@2a10:8000:94e8:0:d913:3204:64fc:77cf) (Quit: Ping timeout (120 seconds))
[19:22:06] <TMC> I NEED validate 500 <- 
[19:22:34] <TMC> x > 500 and last char 0 view only 0
[19:22:44] <TMC> 501 no
[19:22:53] <TMC> 5010 yes
[19:23:02] <TMC> 101
[19:23:04] <TMC> nop
[19:23:11] <TMC> 1010 yes
[19:23:19] <TMC> 3 or more character
[19:24:45] <JohnDoe2> TMC maybe something like this https://regex101.com/r/5or9Qy/3
[19:26:45] <digitok> you'd match 50 there
[19:27:11] <JohnDoe2> right my bad the ? should not be there
[19:27:33] <TMC> 50 good
[19:27:37] <TMC> 500 bad
[19:27:42] <TMC> 501 good
[19:27:47] <TMC> 5010 bad
[19:28:05] <JohnDoe2> so... backwards?
[19:32:20] <digitok> none of those are as bad as jd2 not responding to my msg :'(
[19:32:38] <JohnDoe2> what msg? I got nothing
[19:33:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:38:22] *** Joins: badbroodbrother (~badbroodb@c-379be555.08-427-6b6c6d10.bbcust.telenor.se)
[19:38:33] <badbroodbrother> So I did a filter for 90-270
[19:38:36] <badbroodbrother> (?:9\d)|(?:1\d\d)|(?:2[0-6]\d)|270
[19:39:20] <badbroodbrother> but what if I want to add decimals?
[19:40:00] <karhunkynsii> Put that stuff in a group, then add decimals after.
[19:40:35] <digitok> fyi you don't need any of the groups you have currently
[19:40:42] <badbroodbrother> Ah
[19:40:44] <OnlineCop> Decimals that go from 90.0..90.9 to 270.0 (but not 270.9) ?
[19:41:00] <badbroodbrother> @onyes
[19:41:06] <badbroodbrother> OnlineCop yes
[19:41:34] <OnlineCop> [90, 90.0, 90.1, ..., 90.9, 91, 91.0, 91.1, ... 269.9, 270, 270.0] but not 270.1, etc.
[19:41:39] <badbroodbrother> yep
[19:41:57] <OnlineCop> How many trailing decimal places, and is `90.` without a trailing 0 valid?
[19:42:12] <OnlineCop> !range 90 270
[19:42:13] <rebot> 14OnlineCop: 14/0714(?:079\d14|071\d{2}14|072[0-6]\d14|0727014)0714/
[19:42:16] <badbroodbrother> 90. is not valid
[19:42:30] <badbroodbrother> with as many or few it can take
[19:43:15] <OnlineCop> If `90.` is not valid, then `(?:\.\d+)?` at the end of all the alternations EXCEPT '270'.
[19:43:30] <OnlineCop> There, `(?:\.0)?`
[19:46:43] <badbroodbrother> `9\d|1\d\d|2[0-6]\d(?:\.0)?|270`
[19:46:44] <badbroodbrother> ?
[19:46:50] <badbroodbrother> It doesnt seem to work
[19:47:46] <OnlineCop> https://regex101.com/r/QN5uYV/1
[19:48:41] <badbroodbrother> ah, thanks
[19:48:47] <OnlineCop> https://regex101.com/r/QN5uYV/2 adds 90-269 without decimals.
[19:49:01] <OnlineCop> And, yes, I forgot 270 and 270.0 at the end.
[19:49:09] <OnlineCop> Although: is `270.000` valid?
[19:49:26] <OnlineCop> You might change `270(?:\.0)?` to `270(?:\.0+)?` if it's okay.
[19:50:36] <badbroodbrother> `270.000` is valid
[19:50:37] <OnlineCop> Also note that this doesn't contain any kind of word boundary check, so you'll need to add your own ^ and $, or \b or whatever.
[19:50:50] <badbroodbrother> Yep
[19:50:54] <badbroodbrother> thanks
[19:51:15] <OnlineCop> https://regex101.com/r/QN5uYV/3: looks like it matches '[270].1' at the bottom.
[19:52:14] <badbroodbrother> yeah because of the lack of boundary checks right?
[19:53:05] <OnlineCop> Yes. If you wrapped it with ^...$, it wouldn't be a problem. Or with (?:^|\s)...(\s|$)
[19:53:21] <badbroodbrother> `^(?:(?:9\d|1\d{2}|2[0-6]\d)(?:\.\d+)?$|^270(?:\.0+)?)$`
[19:53:25] <OnlineCop> Right.
[19:53:43] <badbroodbrother> Again, thanks for the help
[19:53:47] <TMC> wow 
[19:54:34] <TMC> 90. no interesting for int entry
[19:55:35] <digitok> 07badbroodbrother, you can remove the first 07$
[19:56:52] <OnlineCop> And the middle ^
[19:57:14] <digitok> right
[19:57:23] <OnlineCop> I mean, technically, it's more optimized to have that $ inside the group.
[19:57:58] <OnlineCop> And then move the last `$` into the ^270... alternation.
[19:58:22] <digitok> yea, but we don't do it :p
[20:04:15] *** Joins: AKT (~AKT@2409:4054:309:4dfb:991:2007:ce9d:7a6)
[20:04:39] <AKT> How to write a regular expression (R) not specific to any programming lang. but according to "Theory of Computation (TOC)"
[20:04:39] <AKT> The R is a str that begins with "To or to" followed by any other english alphabets except "e" and is ending with "e"
[20:04:40] <AKT> Tried this (to|To)#e		(I'm sure what to put in place of #)
[20:04:40] <AKT> Also 
[20:04:41] *** ChanServ sets mode: +o rebot
[20:04:41] <AKT> as "^" indicates NULL in TOC, so I skipped
[20:04:41] <AKT> as "*" indicates positive clousure, thats the str occures 0 or more times & I didn't want the 0th occurence
[20:04:42] *** rebot sets mode: +q-o *!*AKT@2409:4054:309:4dfb:991:2007:ce9d:* rebot
[20:04:43] <rebot> 14AKT: You've been muted for posting too many lines too quickly. You'll be unmuted in 0730s14.
[20:05:11] *** ChanServ sets mode: +o rebot
[20:05:12] *** rebot sets mode: -qo *!*AKT@2409:4054:309:4dfb:991:2007:ce9d:* rebot
[20:05:13] <OnlineCop> ^[Tt]o
[20:06:03] <OnlineCop> For "followed by": does that mean a space after the letters 't-o' like "To my dear friend" or "Tomorrow" ?
[20:06:54] <OnlineCop> `(To|to)[^e\s]*e\b` might be one way
[20:07:03] <AKT> first tell me did u get the entire message cause some bot muted me for posting too many line at once
[20:07:46] <OnlineCop> I saw "How to write", "The R is", "Tried this", "Also", 'as "^" indicates', and 'as "*" indicates'
[20:08:12] <OnlineCop> AKT: You could consider uploading the entire question within a pastebin or regex101 link.
[20:08:41] <OnlineCop> It would be especially helpful if you could show several examples, since "this should match" and "this should not match" is useful when crafting a regex to match (or not) something.
[20:09:44] *** Quits: re101-lizard-44 (~re101-liz@th-190-28.splius.lt) (Quit: Client closed)
[20:10:03] *** Joins: fakuve (~fakuve@192.210.243.250)
[20:11:37] <OnlineCop> @AKT: https://regex101.com/r/PGyiz7/1
[20:14:12] <AKT> https://regex101.com/r/Zr7feb/1
[20:15:22] *** Quits: badbroodbrother (~badbroodb@c-379be555.08-427-6b6c6d10.bbcust.telenor.se) (Quit: Client closed)
[20:15:33] <OnlineCop> AKT: You said that you tried `(to|To)#e` but you didn't state what the input data looked like, so you'd know whether or not it matched as you expected.
[20:16:44] <AKT> check update
[20:17:04] <AKT> or do i have to share the link again
[20:17:22] <OnlineCop> Click "Update regex" on the left.
[20:17:28] <OnlineCop> That should give it a /2 URL suffix.
[20:18:08] <AKT> done
[20:18:10] <OnlineCop> If you click "save regex" by mistake, it generates a different regex101 URL, and won't keep the same /Zr7feb/ that the first had.
[20:18:38] <OnlineCop> I'm not seeing it when I try to update the 'v1' dropdown.
[20:18:50] <OnlineCop> When you updated/saved, did it give you a new URL?
[20:19:12] <AKT> https://regex101.com/r/oluuXH/3
[20:19:24] <AKT> its greyed out 
[20:21:38] <OnlineCop> https://regex101.com/r/oluuXH/5
[20:23:09] <AKT> https://regex101.com/r/oluuXH/6
[20:23:20] <AKT> do u see anything now
[20:23:43] <OnlineCop> I don't know how to write this "not specific to any programming lang" but the [^...] should match non-whitespace (which may not be what you want since it includes punctuation) as well as forbids the letter 'e'. It repeats that until it reaches an 'e' followed by a word boundary.
[20:23:52] <TMC> sorry OnlineCop and JohnDoe2
[20:24:31] <OnlineCop> Can it accept a capital 'E' in the middle of the word as long as it's not a lowercase 'e'?
[20:24:58] <OnlineCop> togEthEre
[20:25:03] <AKT> the R should exactly match the given str & nothing else
[20:25:19] <OnlineCop> Case-sensitive, I take it?
[20:25:28] <OnlineCop> So 'to' or 'To' but not 'tO' or 'TO' ?
[20:25:44] <AKT> yes that why (to | To)
[20:25:44] <JohnDoe2> TMC 👍 remember to remove the ? in my last link if you want to go with that.
[20:25:49] <OnlineCop> https://regex101.com/r/oluuXH/7
[20:26:39] <OnlineCop> It's left up to you how you want to handle the start/end of each of the words.
[20:27:12] <AKT> okay, maybe u got this wrong here is the working pattern for this in python \b[Tt]o\w*e(?:\W*[Tt]o\w*e)*\b 
[20:27:18] <OnlineCop> If there's one word per line, wrap in ^...$. If there are spaces or punctuation around each word on a single line,  \b...\b  or some other mechanism would be necessary, like (^|\s)...(\s|$)
[20:27:35] <OnlineCop> In python, `\w*` will match 'e' in the middle of the word.
[20:27:37] <AKT> but what I want is in theory, in TOC these symbols aren't defined
[20:28:08] <OnlineCop> And `\W*` matches whitespace and punctuation.
[20:28:30] *** Joins: I-M (~id@78.183.108.198)
[20:28:37] <OnlineCop> https://regex101.com/r/oluuXH/8 <-- using your python pattern
[20:29:24] <AKT> I  don't want its programming implementation
[20:29:40] <AKT> I want it in theory on pen & paper
[20:30:01] * OnlineCop will bow out, then. I can't "theory".
[20:30:01] *** Quits: I-M (~id@78.183.108.198) (Remote host closed the connection)
[20:30:53] <OnlineCop> I think the python pattern you posted is wrong, though.
[20:31:25] <OnlineCop> > begins with "To or to" followed by any other english alphabets **except "e"**
[20:31:51] <OnlineCop> Then `\w*` will match an 'e', so that should not match in a word like "tele".
[20:31:53] <AKT> for example a str that begins with "a" & end with "b" The R would be a(a+b)*b
[20:32:40] <OnlineCop> If the only letters allowed in the string were 'a' and 'b', then yes, that pattern would match the definition.
[20:32:57] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (Ping timeout: 250 seconds)
[20:33:18] <OnlineCop> But the requirement stated that "To or to" should be followed (I assume "immediately", with no spaces between) by any other non-"e" english alphabet letter.
[20:33:34] <OnlineCop> That would be (To|to)[a-df-z]*
[20:33:49] *** Quits: Vultyre (~vultyre@user/vultyre) (Ping timeout: 258 seconds)
[20:33:51] <OnlineCop> Then, it would need to end in 'e', so you tack that onto the end.
[20:34:12] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 258 seconds)
[20:34:13] <OnlineCop> (To|to)(a|b|c|d|f|g|...|x|y|z)*e
[20:34:41] *** Quits: fakuve (~fakuve@192.210.243.250) (Ping timeout: 268 seconds)
[20:35:02] *** Joins: re101-coral-77 (~re101-cor@2405:201:d019:6017:d073:dd4d:9265:45d6)
[20:35:13] <AKT> man, you are absolutely right regarding implementation
[20:35:31] <AKT> BUt I want the same pattern for my problem but just don't know what to put in place of "#" because either the python symbols are defined in TOC or they convey a different meaning
[20:35:43] <re101-coral-77> !rehelp
[20:35:43] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[20:36:16] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[20:36:22] <AKT> https://regex101.com/r/oluuXH/6
[20:37:23] <OnlineCop> AKT: When it says 'str = "tone,  tongue, ..., line"` then does that mean that each of those words should match by itself, as though they're the only input on the line?
[20:38:07] <OnlineCop> Or does it mean that you should come out with 3 matches from that single string: [ 'tone', 'tongue', 'Toggle' ] ?
[20:38:24] <AKT> 3 matches
[20:38:58] <OnlineCop> https://regex101.com/r/oluuXH/9
[20:39:04] <AKT> think of it as an automation sys, you input some thing & it returns all the matched outputs
[20:40:02] <AKT> There are no such symbols defined like ? or !
[20:40:13] <OnlineCop> Sure, but you can either do this in TOC style, like that  a(a+b)*b  pattern, or you can do it with Python regex notation, which uses [character groups] and/or word boundries.
[20:40:29] <re101-coral-77> https://regex101.com/r/1OW4HD/1/
[20:40:48] <AKT> The thing is they are 2 separate subjects
[20:41:06] <AKT> & i can do whateva I want when it comes to python
[20:41:16] <AKT> but restricted to TOC
[20:41:58] <AKT> nice try but you've to specify the expression
[20:42:40] <AKT> and using your exprssion one should be able to draw the transitions diagram or automaton from it
[20:43:16] <OnlineCop> re101-coral-77: Are you trying to match math operations? If so, which operators are valid, and should numbers allow decimal?
[20:43:33] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:43:37] *** Joins: tkazi (~tkazi@user/tkazi)
[20:44:21] <AKT> there are no numbers in problem just str of chars i.e. english alphabets
[20:44:45] <OnlineCop> ?
[20:45:14] <re101-coral-77> OnlineCop thank you for asking. Sorry, first time here so not sure of the etiquette. I added a unit test to demonstrate what I wanted the regex to match. 
[20:45:15] <AKT> operators are * . + | ()
[20:45:30] <re101-coral-77> I think I need to read up about lookahead and lookbehind. Doing this now.
[20:46:02] <AKT> lookaheads don't relate here
[20:46:36] <OnlineCop> AKT: I won't be able to answer, sorry. I don't know. See previous (a|b|c|d|f|g|...|x|y|z) and maybe build a tree from there. /shrug
[20:46:52] *** Quits: re101-coral-77 (~re101-cor@2405:201:d019:6017:d073:dd4d:9265:45d6) (Quit: Client closed)
[20:47:02] <AKT> Well thanks for your response
[20:47:04] *** Joins: re101-coral-77 (~re101-cor@2405:201:d019:6017:d073:dd4d:9265:45d6)
[20:47:13] <OnlineCop> re101-coral-77: Do you have to deal with nested parens? If so, do you need infinite recursion (Javascript/ECMAScript doesn't support that) or just a few braces deep?
[20:48:03] <AKT> Again I'm telling you this is not regarding to programatic implementation
[20:48:07] <re101-coral-77> OnlineCop for now, I just want that one unit test I added to pass. It contains only one level of parens
[20:48:41] *** Joins: Vultyre_ (~vultyre@user/vultyre)
[20:48:44] <OnlineCop> re101-coral-77: (30 + (40+20) + 20) is two levels of parens :D  Outer ones and the (40+20) ones.
[20:49:44] <re101-coral-77> OnlineCop ah! sorry. My mistake. Will tweak the unit test to remove the inner paren
[20:49:49] <AKT> this is not what I want, these are arithmetic operations , besides if use them as its they would be treated as single chars of a str
[20:50:07] <AKT> Do you've any backgroud in TOC?
[20:50:17] <digitok> 07AKT, you're responding to a lot of msgs that aren't directed at you
[20:50:34] <AKT> Ok sorry
[20:50:41] <OnlineCop> re101-coral-77: I didn't catch it, but can numbers contain digits? '30.0' or just '30' ?
[20:51:07] <digitok> most of them are prefixed with other users' nicknames :)
[20:51:15] <OnlineCop> re101-coral-77: https://regex101.com/r/1OW4HD/2
[20:51:32] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[20:52:14] <re101-coral-77> OnlineCop thank you very much. This is exactly what I wanted. Will read the explanation and try to understand what is happening.
[20:52:38] <OnlineCop> re101-coral-77: For a breakdown, it first matches '(' and then starts a 0-or-more repeating group that matches either whitespace, math operators [*/+-], or digits. If it encounters a single-nested '(', then it matches '(', more of the above, and MUST match its closing ')'.
[20:53:09] <re101-coral-77> OnlineCop thank you again
[20:53:13] <OnlineCop> My pleasure.
[20:53:32] <OnlineCop> And thank you for adding a Unit Test! <3
[20:53:43] *** Joins: fakuve (~fakuve@192.210.243.250)
[20:55:54] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:04:44] *** Quits: re101-coral-77 (~re101-cor@2405:201:d019:6017:d073:dd4d:9265:45d6) (Quit: Ping timeout (120 seconds))
[21:09:08] *** Joins: re101-mist-23 (~re101-mis@2405:201:d019:6017:d073:dd4d:9265:45d6)
[21:10:30] *** Quits: re101-mist-23 (~re101-mis@2405:201:d019:6017:d073:dd4d:9265:45d6) (Client Quit)
[21:14:20] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[21:14:47] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[21:14:47] *** Joins: Bayes (~Bayes@user/bayes)
[21:21:42] *** Joins: Anton (~Anton@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb)
[21:21:44] *** Quits: Anton (~Anton@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb) (Client Quit)
[21:21:56] *** Joins: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb)
[21:23:00] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[21:24:44] <Antoooon> Hey, sorry I hate to ask. But can someone help me with regex :(  I have a list of many urls and want to delete the lines, that end with the same string (so lets say I have 2 URLs: "abc.com/xyz/hello1" and: "hij.com/abc/hello1" each in their own line. I want to keep only the first. But howw :/
[21:26:23] <Antoooon> So basically I want to check every line for duplicates behind the last "/" and if there are duplicates that have the same string behind the last /, i want to keep only one of them and delete the others
[21:27:07] <Antoooon> !rehelp
[21:27:08] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[21:44:55] *** Joins: fakuve (~fakuve@158.223.165.127)
[21:49:25] *** Quits: AKT (~AKT@2409:4054:309:4dfb:991:2007:ce9d:7a6) (Quit: Client closed)
[21:50:26] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[21:51:13] <OnlineCop> Antoooon: It would help if you had some example lines.
[21:51:52] <Antoooon> sure! one second pls
[21:51:56] <OnlineCop> Antoooon: If I understand correctly, "abc.com/xyz/hello1" and "example.com/foo/bar/hello1" should result in "abc.com/xyz/hello1" remaining but "example.com/foo/bar/hello1" to be deleted?
[21:52:14] <OnlineCop> Or do you want the repeated lines deleted only if the entire line is identical to one before it?
[21:52:58] <Antoooon> yes exactly, i just want to check whats after the last / for duplicates, and delete the line if its a duplicate
[21:54:33] *** Quits: fakuve (~fakuve@158.223.165.127) (Quit: Connection closed)
[21:55:30] <Antoooon> https://regex101.com/r/LD5Q76/1
[21:55:38] <Antoooon> I hope i did it kind of right
[21:56:16] <OnlineCop> Which regex flavor/engine, or does it not matter?
[21:57:48] <Antoooon> I use Notepad++ not sure what engine it uses
[21:58:08] <Antoooon> PCRE i guess?
[21:59:06] *** Joins: lavaball (felix@31.204.155.215)
[21:59:21] <OnlineCop> Yep, PCRE. Cool.
[22:04:47] <OnlineCop> I might have misunderstood: the first two lines have the same URL but end in 'p10-e' and 'p10-s'. Wouldn't those be considered unique, so you'd want to keep both of those?
[22:05:29] <OnlineCop> Antoooon: This is what I thought you were after: https://regex101.com/r/LD5Q76/2
[22:07:15] <Antoooon> Yes Id want to keep both of those. Basically I just want to keep one line of each "ending". So one line that ends in "p10-e", one that ends in "p10-s", etc..
[22:08:19] *** Quits: TMC (~TMC@2800:484:6f83:6700:6c51:df0f:8eec:5df7) (Ping timeout: 246 seconds)
[22:08:24] <OnlineCop> If you have a lot of lines, you might want to two-step it: match (http.*/)(.+) and replace first with \2\t\1\2  (so it puts the stuff after '/' at the beginning of the line, then a tab, then the original contents of the url/line), and then do a second pass.
[22:11:12] <Antoooon> okay thanks a lot for your help! I will have to look into what you send and try to understand it... Thats like way above my very basic regex knowledge :)
[22:39:06] *** Quits: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb) (Quit: Client closed)
[22:41:44] *** Joins: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb)
[22:49:58] <Antoooon> OnlineCop so, I tried it out on the first document (that has ~250 lines), and it worked somewhat. there are 128 lines left, while it should be 87 (Using another method I took the last part of the urls and removed the rest of the line, and then removed all duplicates. Thats how I know that it should be 87 lines. But this method "destroyed" the urls)
[22:50:52] <Antoooon> Do you think the 2 pass run would help with that? im not sure if i undstood correctly. I shoud 1. match (http.*/)(.+) and replace first with \2\t\1\2 and then 2. run the original regex101 stuff over it?
[22:52:22] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[22:56:10] <OnlineCop> Antoooon: The issue I see with it (version https://regex101.com/r/LD5Q76/5 now) is that it will capture the 1st line, capture the 2nd..Nth lines that don't match, and then match (without capturing) the Nth+1 line which DOES match the first line, and replaces that with 1st..Nth lines (leaving Nth+1 off), but it doesn't do a second pass. So you end up having to run it multiple times until there are no other matches.
[22:56:41] <OnlineCop> I think if I rewrote it to keep the LAST instance instead, it might work better, and should be able to work with a single pass.
[22:57:24] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net) (Ping timeout: 272 seconds)
[22:57:46] <Antoooon> Yes i tried running it multiple times in NP++, but it always found matches somehow, until no more lines were left. But maybe that has to do with how i use the regex in NP. I just removed all spaces and put the regex in one line
[23:01:10] <OnlineCop> https://regex101.com/r/LD5Q76/6 _might_ work (haven't field-tested it), but would require that you reversed the URLs, did the substitution, then reversed the URLS back. :-/
[23:02:26] <OnlineCop> https://regex101.com/r/LD5Q76/7 as a copy-pastable Notepad++ single-line.
[23:03:20] *** Joins: joo-_ (~joo-_@jodb.mikjaer.com)
[23:03:20] *** Quits: joo-_ (~joo-_@jodb.mikjaer.com) (Changing host)
[23:03:20] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[23:04:45] <Antoooon> Well if i dont have to do it manually it would still save me days of time 
[23:05:30] <Antoooon> I just dont know how, and dont want to waste your time to save mine :| 
[23:18:46] <Antoooon> lol wait
[23:18:55] <OnlineCop> Hmm?
[23:18:58] <Antoooon> The last thing you sent works!!
[23:19:11] <OnlineCop> Oh, cool.
[23:19:46] <OnlineCop> I was looking in #perl and #python for other ways to do it with the whole "preserve order" thing. A lot of them do a .reverse() on the string, something similar to this, then .reverse() it back again.
[23:20:01] <OnlineCop> And it's probably a lot more efficient than this regex. /shrug
[23:20:03] <Antoooon> First time I tried, i copied it using the copy feature, which broke it by adding the gmx stuff to it
[23:20:34] <Antoooon> Thanks for putting so much work into helping a random stranger like me, thats really kind!
[23:20:40] <OnlineCop> Ah. I also forgot to remove the `\#.*(*SKIP)(*F)|` stuff in version /7, which your text probably doesn't have to deal with.
[23:21:16] <Antoooon> No idea what that means ;(  Does it matter?
[23:21:18] <OnlineCop> That was mainly to fix the regex101 problem of removing the last 4 lines due to the "Desired outcome:" section below it, containing those "unique" ends of the URLs.
[23:21:37] <Antoooon> Ohh i see
[23:21:47] <OnlineCop> I mean: `\#.*(*SKIP)(*F)|^([^...])` should have simply been `^([^...])`
[23:21:55] *** Joins: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry)
[23:22:06] <OnlineCop> But, if Notepad++ didn't balk at it, and it didn't cause any unintended side-effects... *meh*
[23:22:25] <StayHungry> digitok's shift is passed, OnlineCop is on the ride :D
[23:22:52] <re> fwiw, there is rev(1)
[23:23:07] <OnlineCop> re: for Notepad++?
[23:23:38] <OnlineCop> And, wouldn't that make 'example.com/foo' turn into 'oof/moc.elpmaxe' instead?
[23:23:52] <re> i don't know, yes
[23:25:47] <karhunkynsii> Awk needs to be mentioned. Great match for this task,  awk -F/ '!seen[$NF]++'
[23:26:24] <OnlineCop> Could awk be written so 'http://example.com/foo/bar/' isn't considered in part of the "is a duplicate"?
[23:27:09] <karhunkynsii> This produces the desired outcome.
[23:27:21] <karhunkynsii> -F/ splits line into / separated fields.
[23:27:47] <karhunkynsii> $NF is last field which is checked if has been found already. If not, print.
[23:28:11] <OnlineCop> Requirement was: "http://example.com/foo/bar/unique1 [newline] http://abc.co.uk/baz/unique1" considered 'unique1' (anything after the last '/' ). How would we assign 'unique1' to $NF ?
[23:31:14] <karhunkynsii> 'unique' is $NF when we use -F/
[23:31:28] <StayHungry> i want to split on comma either surrounded by any number of spaces or not
[23:31:39] <OnlineCop> `\s*,\s*`
[23:31:57] <StayHungry> OnlineCop++
[23:32:14] <StayHungry> !karma OnlineCop
[23:32:15] <perlbot> OnlineCop has karma of 53
[23:32:17] <karhunkynsii> Didn't want to offtrack you too much, just thought it should be mentioned.
[23:32:36] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7118-7b40-a307-ee35.fixed6.kpn.net)
[23:32:51] <OnlineCop> karhunkynsii: I'd definitely have considered it on-topic. I just haven't used awk enough to know how I'd have accomplished it.
[23:32:51] <Antoooon> OnlineCop++
[23:33:00] <Antoooon> !karma OnlineCop
[23:33:00] <perlbot> OnlineCop has karma of 54
[23:33:02] <Antoooon> nice.
[23:33:27] <StayHungry> he deserves much more :) i remember him helping me back in... i don't know, a decade ago :D
[23:33:28] *** Joins: fakuve (~fakuve@192.210.243.250)
[23:33:58] <StayHungry> you have a regex issue, you come to (freenode -> now libera) and boom, solved
[23:34:55] <StayHungry> this is so smooth and unfailingly that public services might envy
[23:34:56] <OnlineCop> I think the karma rolled over from freenode.
[23:35:55] <StayHungry> this and awk channels are like fountains of eternal youth :)
[23:37:35] *** Quits: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb) (Quit: Client closed)
[23:37:49] *** Joins: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb)
[23:38:28] *** Joins: re101-pig-78 (~re101-pig@webaccess01.barclays.com)
[23:38:42] <Antoooon> This saves me like soo many hours. Im checking all these urls and using them for a design project, and having to check 3-4 times as many pages with wayback archives loading times took for like ever. Normally I would try to figure it out by myself, but this would have taken even longer for me i think... way over my head haha. Anyway thank you guys a
[23:38:42] <Antoooon> lot! the awk solution looks nice too, but i dont have a linux system here rn, so this solution should do perfectly fine. You saved me like days haha
[23:39:26] *** Quits: re101-pig-78 (~re101-pig@webaccess01.barclays.com) (Client Quit)
[23:39:32] <OnlineCop> My pleasure.
[23:39:41] <OnlineCop> "Can you do all of this in PowerShell?" :D
[23:40:44] *** Joins: re101-possum-87 (~re101-pos@mobile-access-bceee4-49.dhcp.inet.fi)
[23:40:55] <re101-possum-87> Need a noob help
[23:41:02] * genio both loves and hates powershell
[23:41:28] <re101-possum-87> !rehelp
[23:41:28] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[23:41:35] <StayHungry> yeah, sometimes awk just shines
[23:42:16] <OnlineCop> re101-possum-87: Post your question, a link, and any other helpful info (like regex flavor you're using: Python, PCRE, Javascript, etc.).
[23:42:19] <StayHungry> for example -> https://s3.rokket.space/t_PtNuVP.png
[23:42:37] <StayHungry> and awk's way to solve that is echo 23-07-1821| awk 'BEGIN{FS=OFS="-"}{print $3,$2,$1}'
[23:43:34] <OnlineCop> I see no 'Awk' under Language. :D
[23:43:46] <re101-possum-87> https://regex101.com/r/bDIvwN/1 -> Need to extract everything between ####tell_me and #### to a variable
[23:44:04] <StayHungry> OnlineCop: i keep it on bonus section, not displayed here, because it's not general scripting language
[23:44:11] <OnlineCop> re101-possum-87: Including or excluding the text "tell_me" ?
[23:44:19] <re101-possum-87> Including
[23:44:30] <StayHungry> s/on/in
[23:45:03] <OnlineCop> https://regex101.com/r/bDIvwN/2
[23:45:12] <OnlineCop> !codegen
[23:45:12] <perlbot> Select code generator on the left side of regex101 to view sample code for your language of choice.
[23:45:31] <OnlineCop> If you want the '####' also included, just move the '(' and ')' appropriately.
[23:46:20] <re101-possum-87> And if I want to exclude "tell_me"?
[23:46:22] <OnlineCop> The `\r?` before `\n` is if you're doing work on CRLF.
[23:46:40] <OnlineCop> Then change '(\w+' to '\w+('
[23:46:51] <OnlineCop> But then you'll also have to exclude the '####' before it.
[23:47:06] <re101-possum-87> Yes, that is what I want
[23:47:08] <OnlineCop> You could also capture `tell_me` in one group and everything after it into another.
[23:47:25] <re101-possum-87> That would by super
[23:47:32] <re101-possum-87> be
[23:47:34] <re101-possum-87> *
[23:48:01] <OnlineCop> https://regex101.com/r/bDIvwN/3
[23:48:33] <OnlineCop> That will have a trailing newline that you might need to .split() out of it, if that's not a problem.
[23:49:12] <re101-possum-87> How in the hell you guys understand that regex?
[23:49:22] <OnlineCop> Also, if `tell_me` can be any text including non-newline whitespace, like `####this is a variable [newline]...[newline]####` then you'd need to adjust `\w+` to handle whatever you need there.
[23:49:56] <re101-possum-87> I am #mindblown
[23:50:25] <OnlineCop> Every single character in a regex is a "command" or a function/subroutine. You told it to find a '#' and if that matched, to find another '#' (plus 2 more times). If any of those failed, it stops and tries something else.
[23:50:25] <re101-possum-87> Hats off!!! I humbly bow my head
[23:50:55] <OnlineCop> Then you tell it "I want to group a whole bunch of stuff together" when it encounters a '(' and has to match all the stuff until the ')'.
[23:51:00] <OnlineCop> And so on, and so forth.
[23:51:22] <OnlineCop> By the way: You can do even more exciting things in Python regex if you switch from the `re` module to the `regex` module.
[23:51:38] <OnlineCop> It's backward-compatible with `re`, but can do all sorts of magic.
[23:51:58] <re101-possum-87> Well that is magic already
[23:52:35] <re101-possum-87> I still donät get how in the hell '/w+' can find tell_me or does it even?
[23:52:44] <re101-possum-87> don't*
[23:52:58] *** Quits: re101-bear-94 (~re101-bea@53.226-244-81.adsl-dyn.isp.belgacom.be) (Quit: Client closed)
[23:53:21] <OnlineCop> `\w` is a shortcut for [a-zA-Z0-9_] which are common letters/numbers commonly used in programming language keywords.
[23:53:39] <re101-possum-87> Nice!
[23:53:41] *** Quits: subie (~subie@2601:4c0:4080:bc0:8597:132d:aeb0:39d3) (Ping timeout: 252 seconds)
[23:53:48] <OnlineCop> So any letter, any digit, or an underscore (and in many cases, "all" letters if it supports Unicode, instead of just a-z).
[23:54:15] <OnlineCop> The big messy part is inside that ((?:(?!...)...)...)
[23:54:24] *** Quits: Antoooon (~Antoooon@2a02:810a:10c0:987c:a0b8:fc45:95ca:1ccb) (Quit: Client closed)
[23:54:25] <re101-possum-87> So in this case "tell_me" can be whatever?... What if I want to get that "tell_me" from variable?
[23:54:52] <OnlineCop> You should be able to look for a specific word instead of `\w+` if you wanted to inject that from a variable, yes.
[23:55:13] <re101-possum-87> Well... what is the trick there?
[23:55:18] <OnlineCop> OR, you can extract 'tell_me' or whatever it's called from the returned matches and assign it to a variable/key/list/dict/whatever.
[23:55:30] <OnlineCop> Did you take a look at 'code generator' on the left?
[23:55:34] <re101-possum-87> Yes
[23:56:11] <OnlineCop> Since FUNCTION on the left has "Substitution" selected, the code generator is going to show you how to do a search-and-replace. If you change FUNCTION to "Match" instead, it can show you how to simply pull out a match without replacing anything.
[23:57:45] <OnlineCop> You could pull out 'tell_me' (it's stored in group 1 since it's the first '(' the pattern saw) and use that as a key, and then pull out the stuff in ####...#### (that's stored in group 2) as the value.
[23:58:11] <re101-possum-87> Ok, I need to look it long and hard... If I do not get it I can't use it the way I want... Click and learn might be the way here...
[23:58:14] <OnlineCop> Some people will even process that further, since you could then .split() each of the lines.
[23:58:29] <OnlineCop> Yep; play around with it on the regex101 site, ask questions in here...
[23:58:31] <OnlineCop> Have fun with it.
[23:58:45] <re101-possum-87> You guys truly kick ass in this!
[23:59:34] <OnlineCop> Meh; some of us have been doing this for WEEKS now. You kinda pick up things here and there.
