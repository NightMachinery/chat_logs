[00:21:39] *** Joins: Bayes^_^ (~Bayes@vps-1d06364e.vps.ovh.ca)
[00:23:08] *** Bayes^_^ is now known as Bayes
[00:23:29] *** Quits: Bayes (~Bayes@vps-1d06364e.vps.ovh.ca) (Changing host)
[00:23:29] *** Joins: Bayes (~Bayes@user/bayes)
[01:19:07] *** Joins: zjason` (~user@220-136-49-100.dynamic-ip.hinet.net)
[01:21:04] *** Quits: zjason (~user@118-168-135-99.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[04:15:41] *** Quits: ur5us (~ur5us@2406:e002:6c21:1b01:1d94:5568:cc90:9ee2) (Ping timeout: 264 seconds)
[04:19:58] *** Joins: ur5us (~ur5us@2406:e002:6c21:1b01:ce4e:6cc3:39c7:6cf2)
[04:34:47] <rdrg109> konubinix: These are my improvements to the function that you created for storing the number of visits for each node. http://0x0.st/-Up_.el
[04:38:06] <rdrg109> zaeph, Carp: Yes, it is possible. David Wilson (System Crafters) did that and explained it in this video. Link with timestamp: https://youtu.be/CUkuyW6hr18?t=623 . He managed to make the completion list show those nodes with an specific tag.
[04:39:18] <rdrg109> konubinix: Now, here are some more ideas for metadata of nodes. (1) Store "LAST_VISITED". (2) Store "LAST_MODIFIED".
[04:59:45] *** Joins: z3t0 (~z3t0@146.71.14.98)
[07:53:04] <rdrg109> 2konubinix: Done! Elisp code for storing "NUMBER_OF_VISITS", "LAST_VISITED" and "LAST_MODIFIED" in node properties: http://0x0.st/-0yO.el
[07:57:46] *** Quits: ur5us (~ur5us@2406:e002:6c21:1b01:ce4e:6cc3:39c7:6cf2) (Ping timeout: 260 seconds)
[08:46:40] <zaeph> rdrg109: I mean, I've written the functions to do so in v1, and I don't remember questioning whether it was possible or not.
[08:47:02] <zaeph> That's the whole point about using SQL as our back-end: any kind of filtering goes, provided you've got someone to write them.
[08:48:28] <zaeph> And you should probably use hooks for your extra metadata, not advice.  It'll bite you in the back with non-interactive use of those commands.
[08:49:57] <zaeph> For the record: most of the stuff that people are asking currently is *very* easy to implement, but our limiting factor is the cohesion of the UX.  v1 was very much an accumulation of stuff without due consideration for this, and because both Jethro and I are limited in time, it's taking longer than we wanted to get those QoL features out.
[10:53:38] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[11:53:52] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[11:54:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:54:58] *** Joins: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[11:55:50] *** Server sets mode: +nt 
[11:59:32] *** Joins: taharqa (~weechat@ns511930.ip-198-100-146.net)
[12:03:41] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[12:03:58] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (Max SendQ exceeded)
[12:04:16] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[12:16:43] *** Quits: ur5us (~ur5us@2406:e002:6c21:1b01:1d94:5568:cc90:9ee2) (Ping timeout: 252 seconds)
[12:20:41] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[12:32:37] *** Quits: taharqa (~weechat@ns511930.ip-198-100-146.net) (Ping timeout: 252 seconds)
[12:33:19] *** Joins: taharqa (~weechat@ns511930.ip-198-100-146.net)
[13:29:16] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: Tisoxin (~ikosit@user/ikosit) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: PirateBady[m] (~badypodde@2001:470:69fc:105::82f) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: nickanderson[m] (~nickander@2001:470:69fc:105::cc1) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: elimik[m] (~elimikmat@2001:470:69fc:105::fa33) (Quit: Bridge terminating on SIGTERM)
[13:29:19] *** Quits: JuhaAutero[m] (~jauteroja@2001:470:69fc:105::b6d) (Quit: Bridge terminating on SIGTERM)
[13:29:19] *** Quits: pink[m] (~pinkodaho@2001:470:69fc:105::e42b) (Quit: Bridge terminating on SIGTERM)
[13:29:19] *** Quits: M0xAFFE[m] (~timschuma@2001:470:69fc:105::6151) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: budric[m] (~budricmat@2001:470:69fc:105::1d15) (Quit: Bridge terminating on SIGTERM)
[13:29:23] *** Quits: petrichor (~petrichor@user/petrichor) (Quit: Bridge terminating on SIGTERM)
[13:32:50] *** Joins: nickanderson[m] (~nickander@2001:470:69fc:105::cc1)
[13:40:45] *** Joins: budric[m] (~budricmat@2001:470:69fc:105::1d15)
[13:40:45] *** Joins: PirateBady[m] (~badypodde@2001:470:69fc:105::82f)
[13:40:45] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[13:40:45] *** Joins: petrichor (~petrichor@user/petrichor)
[13:40:45] *** Joins: Tisoxin (~ikosit@user/ikosit)
[13:40:45] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[13:40:45] *** Joins: elimik[m] (~elimikmat@2001:470:69fc:105::fa33)
[13:40:46] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[13:40:55] *** Joins: M0xAFFE[m] (~timschuma@2001:470:69fc:105::6151)
[13:40:57] *** Joins: pink[m] (~pinkodaho@2001:470:69fc:105::e42b)
[13:40:57] *** Joins: JuhaAutero[m] (~jauteroja@2001:470:69fc:105::b6d)
[16:51:19] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[16:51:45] *** Joins: srhm (~srhm@user/srhm)
[17:18:11] <konubini`> rdrg109: I think I will end up storing this data outside of the note. Because I don't like the fact the file is modified, and then needs to be saved again each time I visit a node
[17:18:32] <konubini`> For files with big tables, it may take like a few seconds per visit
[17:18:38] <konubini`> But, yeah good work :-)
[17:19:32] <konubini`> zaeph: I'm glad you take your in order to keep a stable core
[17:19:50] <konubini`> *time
[17:31:53] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[17:32:24] *** Joins: srhm (~srhm@user/srhm)
[18:17:14] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:17:51] *** Joins: srhm (~srhm@user/srhm)
[22:01:05] <rdrg109> konubini`: True. Storing that information outside of the file seems more reasonable since that way we avoid having to save the whole buffer.
