[00:00:29] <stenno> yeah ok, and if sugar <1.4 checks for the existence of groupBy and finds it, the followup code will break
[00:01:16] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:49] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175) (Quit: Textual IRC Client: www.textualapp.com)
[00:02:01] *** Joins: voltage_ (voltage@user/voltage)
[00:04:27] *** Quits: Tangent-Man (~Tang3nt-M@213.205.240.3) (Ping timeout: 260 seconds)
[00:06:33] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[00:08:02] *** Joins: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk)
[00:08:28] <stagas> is there any module search that sorts packages by size? as in bytes?
[00:08:38] *** Joins: rawley (~rawley@142.99.241.242)
[00:09:12] <buu> stagas: which size? regular? compiled? tree shaked? loc? dependencies?
[00:11:34] *** Joins: average (~average@81.196.245.112)
[00:11:35] *** Quits: average (~average@81.196.245.112) (Changing host)
[00:11:35] *** Joins: average (~average@user/average)
[00:12:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:12:53] <stagas> buu: why is there any module search for any of these?
[00:13:06] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:13:14] <stagas> ideally only for itself
[00:13:26] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[00:13:26] <stagas> even the dist npm tarball size would do
[00:17:19] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:17:49] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[00:19:38] *** Quits: N4buc0_ (~N4buc0@189.115.86.130) (Remote host closed the connection)
[00:22:32] <buu> stagas: I'm trying to understand why problem you're trying to solve
[00:23:38] <silly> https://www.npmjs.com/package/webpack-bundle-analyzer
[00:24:23] <buu> Yeah but that has nothing to do with the tarball npm distributes
[00:24:47] <stagas> i'm trying to search the npm registry and sort the results by byte size so i can find the smallest modules and look at those first if they solve my problems
[00:25:03] <stagas> instead of going through 300 pages
[00:25:33] <stagas> and also if i can't read a module's source code i can't use it, so it has to be small
[00:25:53] *** Joins: duds- (~duds-@user/duds)
[00:26:32] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:27:00] <epolanski> why is it also logging "" : "" when I press submit here?
[00:27:02] <epolanski> https://codepen.io/Aquazi/pen/PoEpVjM?editors=1011
[00:28:56] <ThePendulum> god I hate the lack of a run button on codepen
[00:29:17] <qswz> silly: lighter version: npx source-map-explorer 'build/static/js/*.js'
[00:29:36] <qswz> ThePendulum: same!
[00:29:40] <silly> ice
[00:30:06] <qswz> I don't use it anymore, codepen is shit
[00:30:11] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:30:17] <qswz> codepenis
[00:30:33] <ThePendulum> I never really had a reason to look away from jsfiddle
[00:30:41] *** Parts: apocalyptech (~apocalypt@wilug/apocalyptech) ()
[00:30:52] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[00:31:50] <ThePendulum> epolanski: I guess because you're iterating over every single element and not just the inputs
[00:32:50] <epolanski> should I just filter select, input and textarea?
[00:34:13] *** Joins: hanaan (~naan@user/naan)
[00:34:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[00:34:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:35:00] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:35:11] <ThePendulum> put a class on the inputs and query that
[00:36:58] *** Quits: Naan (~naan@user/naan) (Ping timeout: 260 seconds)
[00:37:01] <epolanski> I prefer something more generic
[00:41:14] <DPA> How can I allow data URIs in a CSP? I tried the following, but with no luck:
[00:41:14] <DPA> Content-Security-Policy: sandbox allow-same-origin allow-scripts allow-downloads allow-popups; default-src 'self' 'javascript:' 'unsafe-eval' 'unsafe-inline' 'data:' ;
[00:43:12] <DPA> I try to use a data URI in one of my css files for a background image.
[00:44:52] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 272 seconds)
[00:45:53] <ThePendulum> epolanski: seems more generic to me than selecting everything and then having to deal with all the elements you don't want
[00:50:03] *** Joins: nomic (~nomic@185.192.69.121)
[00:50:13] *** Joins: duds- (~duds-@user/duds)
[00:51:48] *** Joins: voltage (voltage@user/voltage)
[00:52:36] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[00:52:41] *** voltage is now known as voltage_
[00:53:37] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[00:53:45] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:54:19] <DPA> FIgured it out. I needed to write data: instead of 'data:'
[00:55:56] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[00:56:01] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:56:30] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:59:58] *** Parts: mcint1 (mcint@pox.ocf.berkeley.edu) ()
[01:00:15] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[01:01:02] <fweht> is there a difference between `let foo={bar(x){...}}` and `let foo={bar: function(x){...}}`?
[01:02:56] <sheetjs> a few differences
[01:03:19] <sheetjs> fweht: for one, the former defines a named function
[01:03:24] <fweht> interesting...  i never saw the left version before tbh
[01:03:31] <sheetjs> n> let foo={bar(x){...}}; foo.bar.name
[01:03:32] <jellobot> (fail) SyntaxError: Unexpected token '}'
[01:03:38] <sheetjs> n> let foo={bar(x){/* */}}; foo.bar.name
[01:03:39] <jellobot> (okay) 'bar'
[01:03:41] *** Joins: zebrag (~chris@user/zebrag)
[01:03:44] <sheetjs> n> let foo={bar: function(x){/* */}}; foo.bar.name
[01:03:45] <jellobot> (okay) 'bar'
[01:03:47] *** Joins: autodev (~autodev@097-105-230-074.biz.spectrum.com)
[01:04:20] *** Joins: pavonia (~user@user/siracusa)
[01:04:32] <fweht> n> let foo={bar: (x){/* */}}; foo.bar.name
[01:04:32] <jellobot> (fail) SyntaxError: Unexpected token '{'
[01:04:35] <sheetjs> hmm
[01:04:52] <sheetjs> concise methods can also use super
[01:04:54] <fweht> n> let foo={bar: (x)=>{/* */}}; foo.bar.name
[01:04:55] <jellobot> (okay) 'bar'
[01:04:58] <fweht> ah weird
[01:05:05] <stenno> regexp
[01:05:05] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:05:10] <fweht> i thought arrow functions wouldnt defined a name
[01:06:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[01:06:33] <stenno> n> '*     '.match(/* */)
[01:06:34] <jellobot> (okay) [ '', index: 0, input: '*     ', groups: undefined ]
[01:08:03] <stenno> n> '*     '.match(/\* */)
[01:08:04] <jellobot> (okay) [ '*     ', index: 0, input: '*     ', groups: undefined ]
[01:08:12] <stenno> damn lol
[01:09:01] <sheetjs> so in IE11, var foo = {bar: function() { }}; foo.bar.toString is "function() {}"
[01:09:53] <sheetjs> n> var foo = {bar: function(){}, baz(){} }; [foo.bar.toString(), foo.baz.toString()]
[01:09:53] <jellobot> (okay) [ 'function(){}', 'baz(){}' ]
[01:10:11] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:10:14] <systemfault> Yes, you need a proper ES6+ browser for functions to be named off the variable they're initialized to.
[01:10:45] <sheetjs> right in ES5 the name was not applied
[01:11:02] *** Joins: kerat58 (~keeerat@user/tarek58)
[01:11:36] *** Quits: c_89 (~c_89@151.74.3.74) (Quit: Connection closed)
[01:17:13] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[01:19:08] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[01:32:10] <fweht> sheetjs: sorry, my browser crashed
[01:32:34] <fweht> thanks for the infos!
[01:36:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[01:38:12] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:41:53] *** Quits: nwoob (~apple@49.36.239.91) (Read error: No route to host)
[01:45:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9ce0:4e24:4ca7:ce8) (Ping timeout: 260 seconds)
[01:46:46] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:50:19] *** Quits: autodev (~autodev@097-105-230-074.biz.spectrum.com) (Remote host closed the connection)
[01:52:53] *** Joins: autodev (~autodev@097-105-230-074.biz.spectrum.com)
[01:53:11] *** Joins: realies7 (~realies@user/realies)
[01:53:52] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:53:55] *** Quits: realies (~realies@user/realies) (Ping timeout: 256 seconds)
[01:53:55] *** realies7 is now known as realies
[01:58:29] <buu> How do I turn "x, y" into "y x" in a single expr
[01:58:59] <buu> Hmm, does javascript have any equivalent to ar[1,2]
[01:59:21] <buu> oh
[01:59:38] <buu> n> "x, y".split(/\s*,\s*/).reverse()
[01:59:38] <jellobot> (okay) [ 'y', 'x' ]
[02:00:17] <sheetjs> n> "x, y".replace(/(\S+), (\S+)/, "$2, $1")
[02:00:18] <jellobot> (okay) 'y, x'
[02:00:23] <sheetjs> n> "x, y".replace(/(\S+), (\S+)/, "$2 $1")
[02:00:24] <jellobot> (okay) 'y x'
[02:01:51] <buu> yeah but no =[
[02:01:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:02:05] <buu> although honestly
[02:02:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:02:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:02:16] <buu> 'tis a shit show
[02:02:35] <buu> n> "smith, esq, joe".split(/\s*,\s*/).reverse().join(" ")
[02:02:36] <jellobot> (okay) 'joe esq smith'
[02:02:39] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:02:46] <buu> God I wish split took a limit
[02:03:10] <buu> Well, I wish even more people weren't fucking with names
[02:03:55] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[02:05:42] <buu> n> "Washington Sr., Clarence".split(/\s*,\s*/).reverse().join(" ")
[02:05:43] <jellobot> (okay) 'Clarence Washington Sr.'
[02:05:46] <buu> ok good
[02:06:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[02:06:33] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a765:1ee9:ff77:700f)
[02:08:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:08:45] *** hassoon is now known as hassoonid
[02:08:51] *** hassoon_ is now known as hassoon
[02:11:03] *** Quits: autodev (~autodev@097-105-230-074.biz.spectrum.com) (Remote host closed the connection)
[02:15:30] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[02:15:47] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[02:16:57] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[02:17:38] *** Parts: skmo (eskimo@iglooirc.com) (Textual IRC Client: www.textualapp.com)
[02:17:46] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:17:54] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[02:20:19] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[02:20:53] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[02:21:45] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[02:22:02] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[02:22:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[02:22:33] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:22:54] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[02:23:28] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[02:24:44] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[02:25:45] <austincheney> buu, everything ok?
[02:26:03] <buu> hm?
[02:26:15] <buu> n> null >=
[02:26:15] <jellobot> (fail) SyntaxError: Unexpected end of input
[02:26:16] <buu> n> null >= 0
[02:26:17] <jellobot> (okay) true
[02:26:23] <buu> n> null == 0
[02:26:24] <jellobot> (okay) false
[02:26:28] <buu> nothing will ever be ok again
[02:26:36] <buu> n> null > 0
[02:26:36] <jellobot> (okay) false
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:26] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:36:20] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[02:38:06] *** Joins: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:38:25] <buu> unrelated but everyone should see this https://www.youtube.com/watch?v=ErwMV4kXXfc
[02:38:25] <skillbot> YouTube Title: The Middleman: The Complete Series - DVD Trailer
[02:39:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:40:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a765:1ee9:ff77:700f) (Ping timeout: 245 seconds)
[02:40:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[02:43:48] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:44:13] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[02:50:50] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: Connection reset by peer)
[02:50:55] *** Joins: stenno (~stenno@user/stenno)
[02:50:57] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:52:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:56:14] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:52] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[02:59:59] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[03:01:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[03:05:28] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[03:05:55] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[03:06:14] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:07:46] *** Joins: Guts71 (~Guts71@41.104.214.66)
[03:08:58] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[03:09:22] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:10:00] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[03:11:13] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:12:44] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:15:24] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[03:16:14] *** Quits: average (~average@user/average) (Ping timeout: 272 seconds)
[03:22:12] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[03:23:03] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[03:23:17] *** Joins: w_lehinsun__ (~lehinsun@188.113.178.220)
[03:26:03] *** Quits: w_lehinsun (~lehinsun@188.113.178.220) (Ping timeout: 260 seconds)
[03:26:07] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:27:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[03:30:04] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:33:03] *** Quits: pizdets (~pizdets@183.182.115.192) (Ping timeout: 252 seconds)
[03:33:45] *** Joins: pizdets (~pizdets@183.182.111.169)
[03:34:18] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[03:34:40] *** Joins: w_lehinsun (~lehinsun@188.113.178.220)
[03:36:29] *** Joins: relms (~relms@user/relms)
[03:37:23] *** Quits: w_lehinsun__ (~lehinsun@188.113.178.220) (Ping timeout: 256 seconds)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:2c89:8e5c:78e:a8d0) (Remote host closed the connection)
[03:40:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[03:42:50] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[03:42:58] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[03:43:51] *** duckgoose is now known as willsmith
[03:43:56] *** Joins: stenno (~stenno@user/stenno)
[03:45:12] *** willsmith is now known as duckgoose
[03:47:35] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 256 seconds)
[03:47:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:50:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:53:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[03:55:30] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 272 seconds)
[03:56:29] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[03:56:46] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 272 seconds)
[03:57:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:59:22] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 246 seconds)
[04:01:46] *** Joins: Cork (~Cork@user/cork)
[04:03:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[04:05:12] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[04:07:01] *** Quits: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk) (Ping timeout: 245 seconds)
[04:07:46] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 246 seconds)
[04:11:20] *** Quits: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[04:18:56] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[04:19:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:23:51] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[04:24:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[04:25:17] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:25:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Max SendQ exceeded)
[04:25:53] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:26:15] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:26:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[04:27:50] *** Joins: suss (~user@user/suss)
[04:28:35] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 252 seconds)
[04:33:54] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:37:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:38:11] *** Parts: VoidSync (~sync@user/voidsync) ()
[04:42:50] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Read error: Connection reset by peer)
[04:42:50] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[04:43:02] *** Joins: thekingofbandit3 (~thekingof@thunix.net)
[04:43:12] *** Joins: w_lehinsun__ (~lehinsun@188.113.178.220)
[04:43:21] *** Quits: w_lehinsun (~lehinsun@188.113.178.220) (Read error: Connection reset by peer)
[04:43:24] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[04:43:27] *** Quits: phryk (~totallyno@user/phryk) (Read error: Connection reset by peer)
[04:43:46] *** Joins: phryk (~totallyno@user/phryk)
[04:44:45] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Quit: %bye mirc%)
[04:46:50] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[04:47:44] *** Joins: Koopz7 (~Koopz@koopz.rocks)
[04:48:37] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[04:48:39] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[04:49:13] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 268 seconds)
[04:50:09] *** Quits: Koopz (~Koopz@koopz.rocks) (Quit: Ping timeout (120 seconds))
[04:50:09] *** Koopz7 is now known as Koopz
[04:50:36] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[04:50:44] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[04:51:38] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[04:52:11] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[04:52:53] *** Joins: chenqisu12 (~chenqisu1@183.217.200.168)
[04:55:01] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:55:40] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 272 seconds)
[04:55:43] *** Quits: pmercado (~pmercado@186.107.57.83) (Ping timeout: 246 seconds)
[04:57:27] *** Joins: juno__ (~junebug@2600:1700:3db0:2540:84f7:9c76:4e7d:2835)
[04:59:13] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 246 seconds)
[04:59:37] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:59:52] *** Quits: nomic (~nomic@185.192.69.121) (Quit: Leaving)
[05:00:01] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:03:30] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[05:08:15] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 260 seconds)
[05:10:31] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:11:51] *** Quits: shurane (sid132556@2a03:5180:f:1::2:5cc) (Ping timeout: 250 seconds)
[05:13:24] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[05:15:15] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[05:19:31] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 245 seconds)
[05:19:39] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: bbiaf.)
[05:21:05] *** Joins: l__q (~modinfo@user/modinfo)
[05:21:41] *** Quits: relms (~relms@user/relms) (Quit: Byeeee)
[05:21:55] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[05:22:07] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[05:22:14] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[05:24:03] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[05:24:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:27:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:29:13] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Quit: Leaving)
[05:29:28] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:29:49] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:31:35] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[05:31:51] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:35:16] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:36:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:36:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:36:14] *** Joins: wroathe (~wroathe@user/wroathe)
[05:36:22] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:37:22] *** Quits: thekingofbandit3 (~thekingof@thunix.net) (Remote host closed the connection)
[05:38:03] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:9863:ed91:ec8f:6351)
[05:38:14] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[05:39:48] *** Joins: codebam_ (~codebam@user/codebam)
[05:39:48] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[05:40:09] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[05:40:09] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[05:40:09] *** Joins: nortoh (~nortoh@user/nortoh)
[05:40:38] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Ping timeout: 272 seconds)
[05:40:57] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a487:bfd9:1cce:4fb7) (Ping timeout: 240 seconds)
[05:41:51] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[05:42:09] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[05:42:49] *** Quits: Akiva (~Akiva@user/Akiva) (Quit: WeeChat 3.4)
[05:45:50] *** Quits: Guts71 (~Guts71@41.104.214.66) (Ping timeout: 250 seconds)
[05:46:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:48:46] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[05:55:04] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[06:06:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[06:10:04] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[06:11:00] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[06:13:20] *** Joins: l__q (~modinfo@user/modinfo)
[06:15:04] <buu> String(parseInt(url.searchParams.get("pn")) + 1
[06:15:05] <buu> Eesh
[06:15:29] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 256 seconds)
[06:19:07] <ljharb> buu: don't forget the second parseInt arg.
[06:23:17] <buu> NO
[06:23:20] <buu> I REFUSE AND YOU CAN'T MAKE ME
[06:26:19] <ljharb> lol
[06:32:31] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[06:35:40] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[06:36:10] <friend> Isn't there some way in js to fill variables through implicit means like {lname, fname} ="doe, john"  ?
[06:38:20] <ljharb> friend: no, and that would be explicit
[06:38:27] *** Quits: justOkay (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[06:38:35] <ljharb> friend: you can do `const [lname, fname] = 'doe, john'.split(', ')` tho
[06:39:20] <friend> that's what I was thinking about. And that's explict, huh? good to know.
[06:39:59] *** Joins: codebam (~codebam@user/codebam)
[06:40:57] <friend> thanks as always for the info.
[06:42:10] *** Quits: codebam_ (~codebam@user/codebam) (Ping timeout: 260 seconds)
[06:42:47] *** Joins: justOkay (~justache@user/justache)
[06:43:40] *** Joins: thojanssens (~thojansse@182.232.172.121)
[06:45:09] *** Joins: chao (~stenno@user/stenno)
[06:46:30] <ljharb> friend: yes, it'd be implicit if you weren't statically writing the bindings
[06:49:47] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 250 seconds)
[06:53:13] *** Quits: karabaja4 (~karabaja4@dh207-93-10.xnet.hr) (Remote host closed the connection)
[06:55:21] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Quit: Ping timeout (120 seconds))
[06:57:16] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175)
[06:57:51] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 245 seconds)
[06:59:24] *** Quits: prometh (uid425119@id-425119.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:11:38] *** Joins: pulse (~pulse@user/pulse)
[07:12:50] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:13:37] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:15:23] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:35] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:17:07] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[07:20:39] *** Joins: chao (~stenno@user/stenno)
[07:21:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 260 seconds)
[07:23:09] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:29:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:31:00] *** Quits: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:32:52] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:33:55] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[07:44:03] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:53:15] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[08:03:49] *** Quits: Cyp (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[08:04:05] *** Joins: Cyp (~cyp@213.237.84.236)
[08:12:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[08:12:42] *** Joins: comet23 (comet23@user/comet23)
[08:13:21] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[08:15:18] *** Joins: nwoob (~apple@2405:201:5c18:58db:403e:eb9e:9256:49ee)
[08:19:35] *** Quits: nwoob (~apple@2405:201:5c18:58db:403e:eb9e:9256:49ee) (Ping timeout: 252 seconds)
[08:26:28] *** Joins: pmercado (~pmercado@186.107.57.83)
[08:26:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:27:25] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[08:29:40] *** Joins: nomic (~nomic@185.192.69.121)
[08:30:26] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[08:35:22] *** Quits: bobdobbs` (~user@116.251.146.222) (Quit: ERC (IRC client for Emacs 27.2))
[08:35:47] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:6044:fd9a:1b3c:5456)
[08:41:07] *** Joins: chao (~stenno@user/stenno)
[08:45:39] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[08:46:07] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-e886-7411-fd33-5a22.res6.spectrum.com)
[08:53:04] *** Joins: lilmonkey` (~lilmonkey@user/lilmonkey)
[08:54:23] *** Quits: lilmonkey`` (~lilmonkey@user/lilmonkey) (Ping timeout: 256 seconds)
[08:54:30] *** Joins: wyclif (~wyclif@user/wyclif)
[08:54:48] *** Joins: nwoob (~apple@49.36.237.213)
[08:55:20] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:56:25] *** Quits: wqe23_ (~wqe23@2603-6010-fd40-014c-b16f-73ca-d614-dc1e.res6.spectrum.com) (Ping timeout: 256 seconds)
[08:58:37] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[09:00:06] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:03:52] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:04:48] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[09:05:05] *** Joins: wqe23 (~wqe23@cpe-107-10-46-203.neo.res.rr.com)
[09:08:07] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[09:08:08] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[09:08:08] *** Joins: average (~average@user/average)
[09:09:31] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Client Quit)
[09:13:58] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[09:14:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[09:14:58] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[09:16:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:17:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[09:19:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f0cf:f5b0:60ea:907f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:23:37] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[09:24:10] *** Quits: w_lehinsun__ (~lehinsun@188.113.178.220) (Ping timeout: 246 seconds)
[09:24:25] *** Joins: w_lehinsun (~lehinsun@188.113.178.220)
[09:26:18] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[09:26:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:26:48] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[09:27:52] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[09:27:57] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 250 seconds)
[09:29:01] *** Joins: Praise (~Fat@user/praise)
[09:32:21] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 256 seconds)
[09:32:41] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[09:33:43] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[09:35:59] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[09:47:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[09:49:23] *** Joins: wyclif (~wyclif@user/wyclif)
[09:49:23] *** Quits: juno__ (~junebug@2600:1700:3db0:2540:84f7:9c76:4e7d:2835) (Ping timeout: 250 seconds)
[09:54:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[09:54:55] *** Joins: wyclif (~wyclif@user/wyclif)
[10:04:03] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[10:04:55] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:11:06] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[10:11:28] *** Quits: comet23 (comet23@user/comet23) (Ping timeout: 250 seconds)
[10:16:40] *** Quits: pmercado (~pmercado@186.107.57.83) (Ping timeout: 246 seconds)
[10:22:24] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[10:28:31] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-e886-7411-fd33-5a22.res6.spectrum.com) (Quit: Client closed)
[10:29:15] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[10:29:32] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Client Quit)
[10:31:05] *** Joins: mexen (uid495612@user/mexen)
[10:36:53] <foo> Anyone have a favorite autocomplete library? Leaning towards https://github.com/LeaVerou/awesomplete
[10:39:05] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[10:39:26] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:39:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[10:40:19] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[10:44:15] *** Joins: han-solo (~han-solo@user/han-solo)
[10:46:11] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:46:28] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[10:48:52] *** Quits: han-solo (~han-solo@user/han-solo) (Client Quit)
[10:54:24] *** Joins: han-solo (~han-solo@user/han-solo)
[10:55:24] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[10:55:55] *** Quits: thojanssens (~thojansse@182.232.172.121) (Ping timeout: 260 seconds)
[10:56:57] *** Joins: Everything (~Everythin@37.115.210.35)
[11:00:22] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:02:59] <entropy_> can someone help me with moment.js?
[11:03:17] <entropy_> how would i make a call to it in jscript?
[11:04:31] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-e886-7411-fd33-5a22.res6.spectrum.com)
[11:05:22] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[11:05:46] <Maxdamantus> entropy_: JScript as in the Windows scripting engine?
[11:06:42] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[11:06:43] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 246 seconds)
[11:08:56] *** Quits: w0ng (~w0ng@185.218.127.24) (Ping timeout: 260 seconds)
[11:09:16] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[11:09:21] *** Joins: han-solo (~han-solo@user/han-solo)
[11:10:33] *** Joins: dob1 (~dob1@user/dob1)
[11:15:25] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[11:16:23] *** Joins: w0ng (~w0ng@185.218.127.4)
[11:20:11] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 260 seconds)
[11:23:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[11:23:31] <DnzAtWrk> just out of curiosity. Is there any way to execute js code inside an isolated context in javascript, except for iframes
[11:23:57] <DnzAtWrk> not allowing it to modify any global variables inside the parent context
[11:26:01] <sheetjs> web workers?
[11:26:30] <DnzAtWrk> can web workers be used for real time animations?
[11:26:35] <DnzAtWrk> or is there too much delay
[11:27:20] <sheetjs> offscreencanvas
[11:28:02] <DnzAtWrk> not for isolated animations
[11:28:13] <DnzAtWrk> but for rendering stuff to the browser
[11:28:18] <DnzAtWrk> through some API of some kind
[11:28:29] <sheetjs> web workers don't have dom access
[11:28:42] <DnzAtWrk> no but it would have to communicate draw calls somehow
[11:29:12] <sheetjs> right it would send messages if you want to use DOM stuff
[11:29:23] <sheetjs> but for animations that run in a canvas, https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen
[11:29:40] <DnzAtWrk> it isn't enough for one tho
[11:29:48] <DnzAtWrk> they are supposed to be many working together
[11:30:14] <sheetjs> what are you trying to do
[11:30:17] <DnzAtWrk> the rendering isn't the important part as much as getting real-time data
[11:30:44] <DnzAtWrk> I'm just pondering on the idea of making a gamejam about designing a SHMUP ship using a Javascript Template
[11:30:50] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:31:01] <DnzAtWrk> but then each user would have their own Javascript code for their ship
[11:31:27] <sheetjs> ah like those AI games
[11:31:33] <DnzAtWrk> probably yeah
[11:32:52] <sheetjs> what input does the code receive?
[11:33:08] <sheetjs> individual frames? some sort of data about the position of objects?
[11:33:26] <DnzAtWrk> a context with a number of systems
[11:33:36] <DnzAtWrk> such as renderer, collisionSystem, player info
[11:33:49] <sheetjs> you could stick the user code in one worker and the renderer in a separate worker if you really wanted
[11:33:57] <DnzAtWrk> update(context) { context.collisionSystem.createCircle(position); }
[11:34:45] <DnzAtWrk> I'm mostly just wondered about performance
[11:35:02] <DnzAtWrk> in a game like this you would need to call the update for each ship for every frame
[11:35:11] <DnzAtWrk> well... at least some 10-20 times per second
[11:35:25] <DnzAtWrk> and it would have to be deterministic, you can't just like wait for a slow worker for too long
[11:36:41] <sheetjs> so there are multiple ships running at once?
[11:36:52] <DnzAtWrk> yeah, probably up to like a hundred
[11:37:17] <sheetjs> does it have to play in realtime? if you're concerned about fairness and determinism, you could just round-robin
[11:37:23] <DnzAtWrk> yeah
[11:37:32] <DnzAtWrk> you should be able to play against the ships
[11:37:50] <sheetjs> so its not just AI vs AI
[11:38:14] *** Joins: fef (~thedawn@user/thedawn)
[11:38:16] <DnzAtWrk> no
[11:38:20] <DnzAtWrk> tho that would be fun too
[11:38:38] <sheetjs> if it was AI vs AI and you were concerned about fairness, you could quantize time and let each function determine a ship movement, then run a game step
[11:38:45] <DnzAtWrk> but since I'm giving the user free reign over their own code
[11:38:49] <DnzAtWrk> it would be super easy to cheat
[11:38:55] <DnzAtWrk> so it's mostly about making cool enemies against players
[11:39:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:39:21] <DnzAtWrk> there are like no limitations to how much bullets the enemy fires
[11:39:23] <DnzAtWrk> or how it moves
[11:42:28] <DnzAtWrk> update(context) { context.renderer.drawSprite('MyAtlas', frameIndex, position); context.collisions.addCircle(position, 5, Constants.DAMAGE); }
[11:43:14] <DnzAtWrk> basically something like that, and the player would be able to just put whatever they want in their own code
[11:43:27] <DnzAtWrk> the programmer*
[11:44:12] <sheetjs> before user-generated code, first test using a simple hardcoded function
[11:44:19] <sheetjs> something that sprays every frame
[11:45:18] <DnzAtWrk> is a web worker truly isolated?
[11:45:23] <DnzAtWrk> Or is there some kind of trickery
[11:45:43] <DnzAtWrk> you could run all the ships on one web worker
[11:45:45] <sheetjs> web worker does not have access to `window`
[11:46:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:46:05] <sheetjs> and likewise, the main thread does not have access to the worker `self` scope
[11:46:07] <DnzAtWrk> postMessage has a latency of 0.5 ms
[11:46:17] <DnzAtWrk> which is acceptable if you user a fixed step
[11:46:20] <DnzAtWrk> use*
[11:46:33] <DnzAtWrk> ie, you maybe execution update 10 times per second and interpolate in the main code
[11:46:36] <DnzAtWrk> execute*
[11:46:56] <sheetjs> https://www.youtube.com/watch?v=Utym5qYVWD4
[11:46:56] <skillbot> YouTube Title: Rolling Gunner OverPower v.2.10 - Expert TRUE ALL Clear
[11:47:20] *** Quits: doji (~doji@user/doji) (Ping timeout: 272 seconds)
[11:47:42] <DnzAtWrk> I know there is some form of shared memory in web workers
[11:47:47] <stagas> DnzAtWrk: you can use a SharedArrayBuffer and read/write from that which is instant since it's accessing the same memory, Atomics also might be useful there but if you're only writing from one side then it should be fine i think
[11:47:49] <DnzAtWrk> is that something which has to be initialized from the main code?
[11:47:58] <sheetjs> sharedarraybuffer but the browser support
[11:48:10] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:48:16] <sheetjs> !ciu SharedArrayBuffer
[11:48:17] <jellobot> sheetjs, Shared Array Buffer (Edge 79, FF 79, Chrome 68, Opera 64, Safari 15.2-15.3, iOS 15.2-15.3) 81.28% https://caniuse.com/sharedarraybuffer
[11:48:19] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:48:22] <DnzAtWrk> not bad
[11:48:26] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:48:35] <DnzAtWrk> you could basically just insert commands into the shared array buffer
[11:48:45] <stagas> DnzAtWrk: yes exactly
[11:48:58] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:49:10] <sheetjs> !ciu Atomics
[11:49:11] <jellobot> sheetjs, Failed to look up feature
[11:49:13] <DnzAtWrk> so maybe it is possible
[11:49:17] <DnzAtWrk> to make this jam
[11:49:24] <sheetjs> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics
[11:49:36] <DnzAtWrk> what is the worst malicious code could do in a web worker?
[11:49:36] <stagas> DnzAtWrk: you can write a small pub/sub like queue on top
[11:49:58] <stagas> DnzAtWrk: nothing it's a different realm it's isolated
[11:50:06] <stagas> it's like a new tab
[11:50:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[11:50:07] <DnzAtWrk> could it freeze the worker?
[11:50:08] <sheetjs> DnzAtWrk: is the game jam for people to write player AI or to play against others?
[11:50:41] <DnzAtWrk> my idea is for them to design enemy ships in a SHMUP
[11:50:43] <DnzAtWrk> against a player
[11:50:58] <stagas> DnzAtWrk: the worker can freeze yea and you can't have too many of them, but you can terminate it from the main thread
[11:51:07] <stagas> after a timeout of unresponsiveness
[11:51:19] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[11:51:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:53:12] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:53:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ace2:b4ed:9f9:d737)
[11:53:27] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:53:59] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:58:11] *** Quits: nomic (~nomic@185.192.69.121) (Quit: Leaving)
[11:58:12] *** Quits: nwoob (~apple@49.36.237.213) (Read error: Connection reset by peer)
[11:58:42] <DnzAtWrk> sounds fairly good
[11:59:13] <DnzAtWrk> I guess the worst then is that one player can mess with another player by messing up the command queue
[11:59:18] <DnzAtWrk> one ship*
[11:59:43] *** Joins: nomic (~nomic@185.217.117.233)
[12:03:55] *** Joins: l__q (~modinfo@user/modinfo)
[12:06:14] *** Joins: wyclif (~wyclif@user/wyclif)
[12:09:20] *** Joins: nwoob (~apple@49.36.237.213)
[12:10:57] *** Joins: chao (~stenno@user/stenno)
[12:11:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[12:11:44] *** Joins: wyclif (~wyclif@user/wyclif)
[12:11:54] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[12:14:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[12:15:48] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[12:19:09] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:21:37] *** Joins: salad (~cucumber@79.114.140.189)
[12:25:56] *** Quits: nwoob (~apple@49.36.237.213) (Quit: leaving)
[12:25:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:27:40] <blueagain> sheetjs: I created a github user :)
[12:28:04] <sheetjs> https://github.com/blueagain isn't you?
[12:28:26] <blueagain> nope, I have no idea who that is
[12:28:36] <blueagain> https://github.com/prmtcr
[12:28:38] <blueagain> that's me
[12:28:56] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175) (Quit: My iMac has gone to sleep. ZZZzzz…)
[12:29:33] <sheetjs> neat
[12:32:31] *** Joins: GvJordan (~Jordan@y.gvnet.me)
[12:36:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:37:23] *** Joins: maret (~maret@5-101-143-122.as42831.net)
[12:38:37] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 240 seconds)
[12:39:53] *** Joins: chao (~stenno@user/stenno)
[12:40:27] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:48:08] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[12:48:23] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[12:51:23] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:f136:f9d6:17ab:1405) (Ping timeout: 260 seconds)
[12:53:54] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[12:54:11] *** Quits: chenqisu12 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:54:48] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[12:57:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[13:01:37] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:01:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:04:15] *** Quits: wand (~user@gateway/tor-sasl/wand) (Ping timeout: 240 seconds)
[13:05:52] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:10:37] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[13:18:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:18:17] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:18:41] <fweht> is `document.createRange()` / `window.getSelection()` expensive?  would it make sense to keep references to the objects after they are created for the first time?
[13:18:50] *** Joins: wyclif (~wyclif@user/wyclif)
[13:19:22] <DnzAtWrk> web workers can access IndexedDB
[13:19:29] <DnzAtWrk> but does that matter when its on its own site
[13:19:47] <DnzAtWrk> what is the theoretical worst unsecure code can do with that
[13:23:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:23:53] <blueagain> DnzAtWrk: why is that insecure?
[13:24:15] <DnzAtWrk> imagine if it was ran on a website where indexeddb stores something secure
[13:24:35] *** Joins: wyclif (~wyclif@user/wyclif)
[13:24:41] <DnzAtWrk> I'm talking about running third-party code in a web worker
[13:25:09] <blueagain> afaik indexeddb is domain-sandboxed, like cookies and localstorage
[13:25:34] <DnzAtWrk> yeah, but that's why it would only be an issue if ran on the same website as some other code
[13:25:35] <blueagain> would be kind of alarming if it weren't
[13:25:38] <DnzAtWrk> which stores something secure there
[13:25:44] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[13:25:44] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[13:25:51] <blueagain> yes, but this is not an indexeddb issue
[13:26:00] <DnzAtWrk> never said it was
[13:26:23] <DnzAtWrk> it's a web worker issue
[13:27:30] <blueagain> how is that related to web workers
[13:28:39] <blueagain> the only problem is xss
[13:28:53] <DnzAtWrk> no, that is unrelated
[13:29:00] <DnzAtWrk> as I said, running third party code in web workers
[13:29:03] <DnzAtWrk> ie, untrusted code
[13:29:12] <blueagain> that is, if an attacker breaks the segregation that the browser imposes between sites
[13:29:14] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 252 seconds)
[13:29:29] <blueagain> but running third party code opens it up to xss, that's the whole point
[13:29:53] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 260 seconds)
[13:29:57] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 250 seconds)
[13:32:19] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:35:25] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 240 seconds)
[13:35:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:35:43] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Excess Flood)
[13:36:24] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[13:40:17] *** Joins: shuck (~shuck@user/shuck)
[13:43:21] *** Joins: doji (~doji@user/doji)
[13:44:24] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[13:48:31] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[13:50:34] *** Quits: jargon (~jargon@184.101.173.186) (Remote host closed the connection)
[13:51:56] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:53:42] *** Joins: chao (~stenno@user/stenno)
[13:56:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:58:28] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[13:59:13] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 250 seconds)
[14:02:27] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:03:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:03:49] *** chao is now known as stenno
[14:04:15] *** Joins: suss` (~user@user/suss)
[14:04:43] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[14:04:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[14:05:17] *** Joins: rLapz (~rLapz@user/rLapz)
[14:05:34] *** Quits: suss (~user@user/suss) (Ping timeout: 246 seconds)
[14:08:50] *** Joins: gulzar (~gulzar@49.206.240.149)
[14:09:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[14:10:02] *** suss` is now known as suss
[14:11:04] *** Joins: taupiqueur (~taupiqueu@174.105.204.77.rev.sfr.net)
[14:13:35] *** Joins: jasonaowen (~owenja@user/jasonaowen)
[14:13:48] *** Joins: ocx32 (~ocx32@195.201.179.27)
[14:18:12] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:18:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[14:18:22] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[14:19:28] *** Quits: taupiqueur (~taupiqueu@174.105.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[14:19:30] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[14:23:52] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[14:26:54] <peteyboy1> if axios can't pass a body with get requests, and what I want to pass is an id token for firebase auth (which I'd rather pass in the body), should I pass it in the params anyway or should I make it a post request?
[14:27:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[14:28:01] <peteyboy1> on one hand, the token is something I wouldn't like to pass in params, on the other, I'm not exactly pushing anything to the DB either so post doesn't seem fitting
[14:30:36] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Quit: 🖖)
[14:31:43] *** kmh_ is now known as kmh
[14:32:07] <jasonaowen> the http spec says get requests do not have bodies; that's not just an axios thing
[14:32:40] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[14:32:50] <peteyboy1> ok...
[14:33:09] <peteyboy1> does it change my question in a meaningful way?
[14:33:29] <jasonaowen> possibly you want to pass the token in a header?
[14:33:36] *** Joins: pulse (~pulse@user/pulse)
[14:33:44] <jasonaowen> are you talking to an api you're building, or to firebase directly?
[14:34:09] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[14:35:03] <peteyboy1> it's some firebase methods in the api
[14:35:18] <peteyboy1> I am calling an endpoint I created, which contains some firebase methods
[14:35:24] <peteyboy1> so both I guess
[14:36:25] <peteyboy1> anyway, ok, I just always had the mindset that anything more "delicate" should go through the body
[14:37:02] <peteyboy1> but I guess a post req is a post req, so in this case it would have to go through the params
[14:37:07] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 260 seconds)
[14:37:12] <jasonaowen> things that are directly related to the entity represented by the URL should go through the body, yeah
[14:37:38] <jasonaowen> things that are related to the person or machine making the request should go in headers
[14:37:43] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-e886-7411-fd33-5a22.res6.spectrum.com) (Quit: Client closed)
[14:38:35] <jasonaowen> and things that determine which entity you're talking about go in the URL, which includes query parameters
[14:38:39] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[14:39:11] <jasonaowen> so yeah, I'd suggest the Authorization header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication
[14:39:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:39:28] <peteyboy1> ok yeah, that was also an option
[14:39:47] <peteyboy1> but could you clarify a bit more the 3 lines?
[14:42:27] <jasonaowen> that was an off-the-cuff summary of REST API design principles
[14:43:42] <peteyboy1> yeah I know
[14:45:33] <jasonaowen> say more about what you'd like clarified?
[14:50:12] <jasonaowen> you're right, by the way, that probably you want to keep secrets out of query parameters, because sometimes those get logged
[14:51:02] *** Joins: RLa (~RLa@85.253.190.236.cable.starman.ee)
[14:51:23] *** Joins: igemnace (~ian@user/igemnace)
[14:52:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:52:45] <igemnace> quick question: is there a built-in identity tag function? that is, identity`some string ${sub1} ${sub2}` === `some string ${sub1} ${sub2}`
[14:53:06] *** Joins: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch)
[14:53:33] <igemnace> i've come across a use case where i want to do use such a function -- identity(strings, sub1, sub2) -- but i don't want it to be NIH if there's a built-in equivalent
[14:53:43] <ccapndave> Hey everyone.  I'm looking for a way to detect if an element or any of its parents has `display: none`, and I also need to get an event if that changes.  Is there a way?
[14:54:28] <ccapndave> IntersectionObserver I guess
[14:55:00] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Remote host closed the connection)
[14:55:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:55:43] *** Joins: wyclif (~wyclif@user/wyclif)
[14:55:48] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:56:22] <igemnace> String.raw does what i'm looking for (for strings without any escape codes), but there's a bit of a connotation that it's to be used in the context of escape codes
[14:56:51] *** Joins: KevinX (~KevinX@user/KevinX)
[14:58:17] *** Quits: eMBee (~eMBee@realss.com) (Ping timeout: 240 seconds)
[15:00:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[15:03:17] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 256 seconds)
[15:03:34] *** Joins: Jaran (~mail@p57a8918b.dip0.t-ipconnect.de)
[15:03:34] *** Quits: Jaran (~mail@p57a8918b.dip0.t-ipconnect.de) (Changing host)
[15:03:34] *** Joins: Jaran (~mail@user/jaran)
[15:04:19] *** Quits: ocx32 (~ocx32@195.201.179.27) (Quit: Client closed)
[15:05:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:06:10] *** Quits: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch) (Quit: Textual IRC Client: www.textualapp.com)
[15:06:44] *** Joins: wyclif (~wyclif@user/wyclif)
[15:07:18] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 260 seconds)
[15:07:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:11:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:11:52] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[15:12:16] *** Joins: wyclif (~wyclif@user/wyclif)
[15:14:36] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:14:39] *** Joins: VoidSync (~sync@user/voidsync)
[15:15:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[15:17:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:17:57] *** Joins: wyclif (~wyclif@user/wyclif)
[15:18:22] *** Quits: w0ng (~w0ng@185.218.127.4) (Ping timeout: 240 seconds)
[15:18:53] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Read error: Connection reset by peer)
[15:20:55] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:22:49] *** Joins: comet23 (comet23@user/comet23)
[15:23:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:23:43] *** Joins: wyclif (~wyclif@user/wyclif)
[15:26:25] *** Joins: w0ng (~w0ng@185.218.127.4)
[15:29:34] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 246 seconds)
[15:30:43] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:e568:4309:ec69:3fba)
[15:30:48] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:561:c28b:7138:6f96)
[15:32:27] *** Joins: stenno (~stenno@user/stenno)
[15:32:45] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[15:33:18] *** Joins: fef (~thedawn@user/thedawn)
[15:39:13] *** Joins: llorllale (~llorllale@198.98.119.85)
[15:44:23] *** Quits: RLa (~RLa@85.253.190.236.cable.starman.ee) (Quit: Client closed)
[15:53:01] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Quit: ~ Server made a boo boo.)
[15:54:21] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[15:56:15] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[15:56:27] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:57:15] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[15:57:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:58:27] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[15:58:42] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[15:58:43] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[15:58:43] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[16:04:13] *** Joins: em-bee (~eMBee@realss.com)
[16:06:32] *** Parts: igemnace (~ian@user/igemnace) (WeeChat 3.5)
[16:07:32] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[16:07:48] <qswz> clever youtube pushed a feature in their main page to preview videos, but that burns up my CPU
[16:09:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:09:10] <blueagain> qswz: ... don't use yt?
[16:09:37] <qswz> then what? dailymotion? right it's french
[16:09:42] <qswz> let's be patriot
[16:09:49] <blueagain> what is dailymotion
[16:10:08] <qswz> similar vidoe site
[16:10:32] <blueagain> there are alternative interfaces to yt, plus you can use an ad blocker / umatrix in your browser
[16:10:52] <qswz> I've ublock-origin
[16:11:14] <qswz> I don't see ads
[16:11:18] <blueagain> moi aussi
[16:11:43] <blueagain> (that's about all the french I know)
[16:13:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[16:14:27] <qswz> tu es une pipe
[16:14:41] <qswz> sort of mean, you suck
[16:15:08] <qswz> guys, how could I pass arguments form one npm script to another
[16:15:26] <qswz> "s1": "npm run s2 arg1 arg2"
[16:15:49] <qswz> "s2": "echo $1 $2" // doesn't work
[16:15:59] <qswz> npm run s1 doesn't do what expected
[16:16:48] <comet23> idk how js got so popular
[16:17:10] <qswz> echoes arg1 arg2
[16:17:23] <qswz> comet23: because it fuels browsers
[16:17:34] <qswz> which is basically most apps
[16:18:12] <qswz> and because Ryan Dahl had a good idea to do it on server-side as well
[16:18:38] <qswz> and because big actors like Google, MS, are all working a lot on it
[16:19:25] <comet23> the syntax and quirks would make one think they'd make a new language just for the web with better features...
[16:19:32] <qswz> bringing great features, and better overall than other languages like python
[16:19:41] <comet23> python > javascript
[16:19:55] <qswz> it used to be
[16:20:03] <comet23> since when
[16:20:07] <qswz> but the intersection point is around 2016
[16:20:13] <blueagain> I can't think of a more terrible idea for a programming language than for whitespace to have meaning
[16:20:14] <qswz> ES2015
[16:20:29] <qswz> async/await definitely puts js ahead
[16:20:40] <qswz> the tooling is far superior
[16:20:54] <blueagain> otherwise, python is nice
[16:20:59] <qswz> the huge package management options
[16:21:05] <qswz> (npm)
[16:21:07] *** Quits: teear (~teear@cbharraste.eu) (Quit: reboot)
[16:21:33] <qswz> the day more scientific packages will be added to JS, like scikit ported to JS, python might die
[16:22:01] <qswz> but I hope it'll survive, multiple langauges is good
[16:22:19] <qswz> I mean die in a sense of go low-usage like firefox (sadly)
[16:22:23] <blueagain> python has widespread use, especially in machine learning areas
[16:22:24] <qswz> vs chrome
[16:22:33] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[16:22:41] <blueagain> fb just donated like 300k to the python foundation
[16:22:42] <qswz> I know, but it mght change in the future soon
[16:22:49] <blueagain> I don't see it going anywhere soon
[16:22:57] <qswz> because fb heailyrelies on python
[16:23:09] <qswz> I remember their post about their painful migration to python3
[16:23:13] <blueagain> firefox, on the other hand, should go away asap, if that's the best the foss community can come up with
[16:23:49] <qswz> just looks the pages https://nodejs.org/ vs https://www.python.org/
[16:23:51] <Svitkona> ✋
[16:23:56] <qswz> one is slick the other looks clumsy
[16:24:28] <qswz> blueagain: firefox is great
[16:24:30] <blueagain> I wouldn't judge things by how they look
[16:24:39] <qswz> blueagain: me neither
[16:24:46] <qswz> but a website has to be good in UX
[16:24:50] <qswz> to be usable
[16:24:53] <qswz> good docs, etc..
[16:24:55] <blueagain> qswz: firefox seems to you great just because you don't have a better alternative
[16:25:05] <qswz> I'm using chrom
[16:25:12] <blueagain> they completely failed at the PWA front, which could have been their unique selling point
[16:25:22] <qswz> PWA is stupid
[16:25:22] <blueagain> leaving the field instead to google
[16:25:27] <blueagain> PWA is great
[16:25:40] <qswz> why?
[16:25:45] <blueagain> it breaks google's and apple's monopoly on apps which is dangerous
[16:26:00] <blueagain> you can finally use apps without being forced to use a google or an apple device
[16:26:12] <qswz> lol that's just web app
[16:26:19] *** Quits: suss (~user@user/suss) (Ping timeout: 260 seconds)
[16:26:37] <blueagain> yes, but PWA specifically refers to web apps acquiring (progressively) capabilities that only native apps used to have
[16:26:39] <qswz> in my company we never shipped natives apps, just a webapp, no PWA needed
[16:26:39] *** Joins: teear (~teear@cbharraste.eu)
[16:26:56] <ashnur> lol
[16:26:56] <blueagain> like working offline with service workers
[16:26:58] <qswz> actually react-scripts adds a service worker I think
[16:27:08] <ashnur> so, blueagain, can I open a tcp socket in a browser?
[16:27:09] <qswz> but i don't really care about this
[16:27:13] <qswz> (and a manifest)
[16:27:25] <blueagain> ashnur: I have no idea, I didn't say anything about parity with native apps
[16:27:42] <blueagain> but parity is where it should go in tendency, yes
[16:27:43] <ashnur> you seemed to be an expert on this
[16:27:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:28:00] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:561:c28b:7138:6f96) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:28:08] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b04f:a3c8:8176:6595)
[16:28:41] <blueagain> ashnur: I made the point that firefox could get the drop on the competition if they aggressively pushed PWAs
[16:28:47] *** Joins: wyclif (~wyclif@user/wyclif)
[16:28:49] <blueagain> which they didn't, focussing on worthless stuff instead
[16:29:33] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Ping timeout: 260 seconds)
[16:32:23] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:d860:33a3:a28f:c27) (Ping timeout: 260 seconds)
[16:33:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[16:34:19] *** Joins: wyclif (~wyclif@user/wyclif)
[16:35:23] *** Quits: Everything (~Everythin@37.115.210.35) (Ping timeout: 260 seconds)
[16:36:54] *** Joins: Everything (~Everythin@37.115.210.35)
[16:37:35] *** Joins: D4mned (~D1mned@212.101.251.194)
[16:37:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[16:38:31] *** Joins: pmercado (~pmercado@186.11.44.225)
[16:38:43] <ashnur> while i agree with the second part, that they are focusing on stuff I don't see worthwhile, I don't see how pwa would've been a more worthy
[16:39:17] <ashnur> hence my question about the tcp port
[16:39:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[16:39:25] <ashnur> sorry, socket, whatever
[16:39:29] <qswz> I've just something against this new term PWA
[16:39:41] <qswz> service-workers, manifest exist since long time
[16:39:42] <ashnur> lol, but you have always been a contrarian :D
[16:39:51] *** Joins: wyclif (~wyclif@user/wyclif)
[16:39:59] <qswz> if that has to be called PWA now, then great
[16:40:00] <ashnur> i don't get bogged down with names anymore
[16:40:16] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[16:40:38] <blueagain> I don't really care that much about semantics, we don't have to call it PWAs
[16:40:55] *** Quits: comet23 (comet23@user/comet23) (Quit: Client closed)
[16:40:58] *** Joins: rLapz (~rLapz@user/rLapz)
[16:41:16] <qswz> I call it webapps
[16:41:22] <blueagain> web apps is fine by me
[16:41:44] <blueagain> ff hasn't really been supporting the newer, more exciting apis as much as chromium does
[16:41:53] <blueagain> like web share api
[16:45:00] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[16:46:14] <qswz> try to type "npm isnt good" in your terminal
[16:46:28] <qswz> !npm good
[16:46:30] <jellobot> qswz, npm.im/good 8.1.2|2019-01-19|Server and process monitoring plugin
[16:46:51] <qswz> isnt is a stupid alias for install
[16:47:42] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:6d2e:9a88:666c:3fae)
[16:47:48] <blueagain> lol
[16:48:23] <blueagain> it's probably a joke, no?
[16:48:32] <blueagain> it isn't mentioned in the man page
[16:48:38] <qswz> npm is suck
[16:48:44] <qswz> this one would work too
[16:48:47] <qswz> !npm suck
[16:48:48] <jellobot> qswz, npm.im/suck 0.0.7|2013-09-15|Simple crawler tree of patterns.
[16:49:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:49:08] <qswz> since every single word in the dictionary is a npm package
[16:50:43] *** Joins: thiras (~thiras@user/thiras)
[16:51:12] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:52:26] <blueagain> `npm i qswz` doesn't work
[16:52:43] *** Quits: ColorShes (~yoann@1.618.talagrand.com) (Quit: Ping timeout (120 seconds))
[16:53:02] *** Joins: ColorShes (~yoann@1.618.talagrand.com)
[16:58:33] <qswz> !npm qs
[16:58:34] <jellobot> qswz, that doesn't look like a valid package name
[16:58:59] <qswz> huh, it is
[16:59:08] <qswz> need to fix that shit
[16:59:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:01:51] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:02:30] *** Quits: han-solo (~han-solo@user/han-solo) (Read error: Connection reset by peer)
[17:05:54] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[17:09:48] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[17:14:30] *** Joins: ivanf (~ivan@user/ivanf)
[17:14:39] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[17:16:42] *** Joins: han-solo (~han-solo@user/han-solo)
[17:16:51] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[17:19:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:21:20] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[17:22:57] *** Quits: Talon (~Talon@172.77.124.134) (Ping timeout: 240 seconds)
[17:23:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[17:24:01] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[17:24:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[17:26:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:28:16] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[17:31:58] *** Quits: clamiax (~clamiax@net-93-147-243-26.cust.vodafonedsl.it) (Read error: No route to host)
[17:33:00] <hassoon> 'mornin
[17:34:44] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:36:05] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[17:38:05] *** Joins: chao (~stenno@user/stenno)
[17:41:00] *** Joins: nomic (~nomic@185.217.117.233)
[17:41:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[17:43:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:44:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:45:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:49:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[17:50:01] *** Joins: iomari891 (~iomari891@197.210.84.73)
[17:50:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[17:50:26] *** Joins: wyclif (~wyclif@user/wyclif)
[17:50:35] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:51:31] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:53:10] *** Joins: d[-_-]b (~stenno@user/stenno)
[17:53:35] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[17:55:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:55:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:56:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[17:57:11] *** Joins: han-solo (~han-solo@user/han-solo)
[17:58:28] *** Joins: voltage_ (voltage@user/voltage)
[17:59:35] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[18:09:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:09:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:09:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:11:46] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:1f4c:9bcd:696d:fd8f)
[18:18:34] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[18:21:48] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[18:22:21] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:24:37] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[18:25:52] *** Joins: arne_ (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de)
[18:26:16] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:27:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:27:24] *** Joins: version (~stenno@user/stenno)
[18:27:26] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[18:30:05] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:32:24] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:1f4c:9bcd:696d:fd8f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:33:48] *** Joins: stenno (~stenno@user/stenno)
[18:34:19] *** Joins: sfields (~sfields@2605:a601:adea:7a00:b060:ab7f:958c:df55)
[18:34:42] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (Quit: K-Lined)
[18:34:43] *** Quits: version (~stenno@user/stenno) (Ping timeout: 246 seconds)
[18:34:58] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[18:35:24] *** Joins: nwoob (~apple@157.38.212.35)
[18:35:33] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[18:35:34] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[18:35:57] <nwoob> How can I add  string with reduce "1,2,3".split(',).reduce((a,b)=> parseInt(a)+parseInt(b))
[18:36:00] <nwoob> This gives me error Argument of type 'number' is not assignable to parameter of type 'string'.
[18:37:51] *** Joins: RLa (~RLa@85.253.190.236.cable.starman.ee)
[18:38:46] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873) (Remote host closed the connection)
[18:38:54] <Alexendoo> nwoob: Pass an initial argument so a is always a number and be is always a string
[18:38:59] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:d10b:be87:ad35:873)
[18:39:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:39:05] <Alexendoo> s/be/b/
[18:39:14] <D4mned> its working
[18:39:31] <D4mned> "1,2,3".split(',').reduce((a,b)=> parseInt(a)+parseInt(b))
[18:39:50] <nwoob> D4mned: works in javascript but throwing error in typescript
[18:39:59] <D4mned> oh
[18:40:22] <nwoob> Alexendoo: How do I do that? like this? "1,2,3".split(',).reduce((a,b)=> parseInt(a)+parseInt(b), 0)
[18:40:46] <Alexendoo> nwoob: Yeah, then you don't need to parseInt(a) since it's already a number
[18:41:59] <stenno> i saw buu doing something disturbing yesterday
[18:42:03] <stenno> n> 0 == null
[18:42:04] <jellobot> (okay) false
[18:42:09] <nwoob> Alexendoo: thanks
[18:42:13] <stenno> ^ it totally boggles my mind that that is false lol
[18:42:25] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 246 seconds)
[18:42:47] <stenno> n> 0 == +null
[18:42:48] <jellobot> (okay) true
[18:43:20] <stenno> i assume null will be cast to string first
[18:43:26] <ThePendulum> n> null > 0
[18:43:26] <jellobot> (okay) false
[18:43:31] <ThePendulum> as long as that's the case I'm good
[18:43:46] <stenno> n> n> null >= 0
[18:43:47] <jellobot> (fail) ReferenceError: n is not defined
[18:43:50] <stenno> n> null >= 0
[18:43:50] <jellobot> (okay) true
[18:43:53] <blueagain> n> null >= 0
[18:43:53] <jellobot> (okay) true
[18:43:57] <stenno> mhm...
[18:44:03] <nwoob> stenno: why do you want it return true?
[18:44:08] <stenno> so >= forces coercion to number
[18:44:11] <ThePendulum> :thinking_emoji:
[18:44:14] <nwoob> 0 ==null should be false
[18:44:15] <stenno> but just == will coerce to string
[18:44:25] <ThePendulum> javascript amirite
[18:44:29] <stenno> ikr
[18:44:32] <stenno> n> ''+null
[18:44:32] <jellobot> (okay) 'null'
[18:44:39] <stenno> n> 'null' == null
[18:44:40] <jellobot> (okay) false
[18:44:43] <stenno> damn
[18:44:53] <ThePendulum> nwoob: well I can see why one might expect it to be true
[18:44:55] <ThePendulum> in the same sense that
[18:44:58] <ThePendulum> n> '' == 0
[18:44:58] <jellobot> (okay) true
[18:45:02] <blueagain> casting is highly non-intuitive across programming languages and within them
[18:45:08] <blueagain> that's why it sucks
[18:45:11] <stenno> indeed
[18:45:28] <nwoob> I don't understand why you would expect 'null' == null to be true or 0 == null to be true. Null is something that there is no value
[18:45:28] <ThePendulum> of course there's a logic to it, but it's indeed not necessarily obvious
[18:45:53] <stenno> n> [ null == 0, null > 0, null >= 0] // @ nwoob
[18:45:54] <jellobot> nwoob, [ false, false, true ]
[18:46:08] <ThePendulum> n> [] == ''
[18:46:08] <jellobot> (okay) true
[18:46:16] <ThePendulum> you would expect it because javascript, but then it ain't so because javascript
[18:46:39] <stenno> n> null == null
[18:46:39] <jellobot> (okay) true
[18:47:00] <stenno> but why isn't 'null' == null true then
[18:47:17] <nwoob> why would it be true
[18:47:22] <stenno> maybe its some special case like NaN
[18:47:26] <nwoob> 'null' is a string
[18:47:35] <stenno> nwoob: javascript has something called type coercion
[18:47:46] <stenno> n> 0 == '0'
[18:47:47] <jellobot> (okay) true
[18:47:49] <stenno> nwoob: ^
[18:47:58] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:48:27] <ThePendulum> I can see why they didn't do that for null
[18:48:28] <nwoob> I don't know but 'null == null should not be true even with type coercion
[18:49:03] <stenno> ThePendulum: its inconsistent
[18:49:26] <stenno> wait is null a primitive?
[18:49:33] <blueagain> yup
[18:49:45] <stenno> yes
[18:49:53] <ThePendulum> it would become unreliable to check a string being present because it might contain null
[18:50:10] <blueagain> not contains
[18:50:11] <ThePendulum> ok no need to insult null
[18:50:13] <blueagain> *is*
[18:50:23] <stenno> null return to monke
[18:50:27] <blueagain> I don't think the expectation is 'nulle' == null
[18:50:50] <stenno> so lets work through the comparison specs
[18:51:01] <ThePendulum> I meant as opposed to being null
[18:51:25] <ThePendulum> "In JavaScript, a primitive (primitive value, primitive data type) is data that is not an object"
[18:51:29] <ThePendulum> n> typeof null
[18:51:29] <jellobot> (okay) 'object'
[18:51:40] <blueagain> anyway, this "intuition" is usually some random person deciding on something dumb
[18:51:41] <ThePendulum> fantastic, lol
[18:51:44] <blueagain> like NaN != NaN
[18:51:44] <stenno> https://262.ecma-international.org/5.1/#sec-9.12
[18:52:01] <stenno> blueagain: NaN != NaN makes sense
[18:52:05] <stenno> anyway
[18:52:35] <stenno> thats the wrong section
[18:52:41] <blueagain> stenno: even if it makes sense according to some argumenation
[18:52:45] <blueagain> it's not intuitive
[18:53:35] <blueagain> this is the same like java's equalTo on strings
[18:53:56] <blueagain> or equals, I think it's called
[18:53:57] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:54:04] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[18:54:15] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[18:54:28] *** Joins: wyclif (~wyclif@user/wyclif)
[18:56:25] *** Joins: tmm88 (~tmm88@user/tmm88)
[18:57:38] <stenno> n> undefined == null
[18:57:38] <jellobot> (okay) true
[18:58:05] <stenno> If Type(x) is Object and Type(y) is either String or Number,
[18:58:07] <stenno> return the result of the comparison ToPrimitive(x) == y.
[18:58:16] <stenno> ^ this is why its false
[18:58:31] <stenno> https://262.ecma-international.org/5.1/#sec-11.9.3 step 9
[18:58:32] <Alexendoo> In the spec Type(null) is Null
[18:58:37] <stenno> yess
[18:58:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:58:39] <stenno> err
[18:58:52] <stenno> https://262.ecma-international.org/5.1/#sec-11.9.3 step 10
[18:58:55] <blueagain> n> 1 + null
[18:58:56] <jellobot> (okay) 1
[18:59:02] <blueagain> n> 1 + undefined
[18:59:03] <jellobot> (okay) NaN
[18:59:08] <blueagain> lol
[18:59:39] <stenno> n> undefined + 1
[18:59:40] <jellobot> (okay) NaN
[19:00:01] <blueagain> n> 1 / null
[19:00:02] <jellobot> (okay) Infinity
[19:00:02] *** Quits: tmm88 (~tmm88@user/tmm88) (Client Quit)
[19:00:09] <blueagain> n> null / 1
[19:00:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:00:09] <jellobot> (okay) 0
[19:00:14] <stenno> n> +undefined
[19:00:15] <jellobot> (okay) NaN
[19:00:16] <blueagain> so null is always 0 in numer contexts
[19:00:28] <stenno> check the specs
[19:00:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[19:03:08] <blueagain> n> Math.cos(null)
[19:03:09] <jellobot> (okay) 1
[19:03:16] <blueagain> nice
[19:03:38] *** Joins: rawley (~rawley@142.99.241.242)
[19:06:34] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 246 seconds)
[19:07:09] *** Joins: KevinX_ (~KevinX@user/KevinX)
[19:07:31] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048)
[19:08:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[19:09:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:11:37] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[19:12:07] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:12:32] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[19:14:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:15:01] <teresko> ... I wonder, can we forkbomb the bot
[19:15:43] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:15:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:16:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:19:09] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:19:32] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048) (Remote host closed the connection)
[19:19:39] <stenno> ask Maxdamantus about it, teresko
[19:19:40] *** Joins: N4buc0 (~N4buc0@189.115.86.130)
[19:20:19] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:20:48] <banana_> n> 'ba' + NaN + 'a'
[19:20:49] <jellobot> (okay) 'baNaNa'
[19:21:15] *** Joins: prometh (uid425119@id-425119.ilkley.irccloud.com)
[19:22:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[19:24:45] *** Joins: et09 (~et09@user/et09)
[19:25:17] <et09> dumb question maybe but i've never ran into this.  i want to conditionally exit a case block in a switch based on some condition.  can i just toss in a if(foobar){ break } ?
[19:26:34] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:27:30] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162)
[19:29:37] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[19:30:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[19:31:36] <ThePendulum> n> [1,2,3,4][1,2,3,2,1,2,3]
[19:31:36] <jellobot> (okay) 4
[19:31:37] <ThePendulum> TIL lol
[19:31:37] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:33:08] <prometh> n> (()=>{ let v; switch (1){ case 0: {if (true) break} v=1; break} case 1: {v=2; break}} return v })()
[19:33:09] <jellobot> (fail) SyntaxError: Unexpected token 'case'
[19:33:22] *** Joins: l__q (~modinfo@user/modinfo)
[19:34:39] <prometh> n> (()=>{ let v; switch (1){ case 0: {if (true) break; v=1; break} case 1: {v=2; break}} return v })()
[19:34:40] <jellobot> (okay) 2
[19:34:59] *** Joins: wand (~user@gateway/tor-sasl/wand)
[19:36:02] <prometh> n> const test=x=>{ let v; switch (x){ case 0: {if (true) break; v=1; break} case 1: {v=2; break}} return v }; [test(0), test(1)]
[19:36:02] <jellobot> (okay) [ undefined, 2 ]
[19:36:08] <prometh> et09: ^
[19:36:29] *** Joins: dimi1947 (~dimi1947@46.198.247.237)
[19:37:36] <dimi1947> Do I need at all the facebook PHP SDK since i can do my job w JS SDK...I am  talking about facebookSocialLogin
[19:38:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:38:34] <prometh> dimi1947: i'd imagine that you could do everyhting with the js sdk, but long long ago that was not the case
[19:39:03] <dimi1947> prometh: that is what I though too
[19:39:36] *** Joins: dply (~dply@2800:150:111:1815:5cdc:2c99:b0db:7868)
[19:41:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:46:48] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[19:47:54] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:e0bf:13e7:4d38:a036)
[19:48:07] *** KevinX_ is now known as KevinX
[19:48:40] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[19:49:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[19:50:19] *** Joins: han-solo (~han-solo@user/han-solo)
[19:52:32] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[19:53:06] <ljharb> arne_: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic. (altho hopefully you have more to contribute than snark)
[19:53:19] <ljharb> teresko: not anymore
[19:54:14] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:54:42] <teresko> ah ,,, so someone already tried it :D
[19:57:35] <teresko> n> require('os').arch();
[19:57:36] <jellobot> (okay) 'x64'
[19:57:42] <teresko> hmmmmmmmm
[19:58:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[19:59:44] <teresko> n> require('child_process').spawn;
[19:59:45] <jellobot> (okay) [Function: spawn]
[19:59:47] *** Quits: nwoob (~apple@157.38.212.35) (Read error: No route to host)
[20:00:08] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[20:00:26] <teresko> ljharb: there might be still some ... undocumented features in that bot :D
[20:00:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:02:22] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[20:02:44] *** Joins: rawley (~rawley@142.99.241.242)
[20:05:54] *** Joins: stenno (~stenno@user/stenno)
[20:06:06] *** Joins: dionysus69 (~Thunderbi@185.115.6.175)
[20:06:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:07:44] <ljharb> teresko: lol, fair, i'll fix that too
[20:08:00] <ljharb> altho wait, hm
[20:08:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:08:11] <ljharb> n> Reflect.ownKeys(require('child_process'))
[20:08:12] <jellobot> (okay) [ '_forkChild', 'ChildProcess', 'exec', 'execFile', 'execFileSync', 'execSync', 'fork', 'spawn', 'spawnSync' ]
[20:08:19] <ljharb> ok wat, the fix isn't there
[20:08:26] <ljharb> ohh right
[20:08:30] *** Joins: dionysus70 (~Thunderbi@185.115.6.76)
[20:08:38] <ljharb> teresko: so, my first fix deleted those. but now, the docker container has PID limits
[20:08:48] <ljharb> teresko: so you can forkbomb one command, but it won't kill the bot anymore
[20:10:13] *** Joins: clamiax (~clamiax@net-93-147-243-26.cust.vodafonedsl.it)
[20:10:17] <et09> prometh: could have just said "yes" lol
[20:10:23] <banana_> https://www.youtube.com/watch?v=Vhh_GeBPOhs
[20:10:23] <skillbot> YouTube Title: Steve Ballmer: Developers
[20:10:48] *** Quits: dionysus69 (~Thunderbi@185.115.6.175) (Ping timeout: 260 seconds)
[20:10:48] *** dionysus70 is now known as dionysus69
[20:12:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:12:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:13:17] <et09> n> const x = (foo) => x(foo); x(25)
[20:13:18] <jellobot> (fail) RangeError: Maximum call stack size exceeded
[20:13:22] <et09> lel
[20:13:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[20:14:25] <teresko> n> require('child_process').exec('whoami', (e, so, se) => console.log(so));
[20:14:26] <jellobot> (okay) <ref *1> ChildProcess { _events: [Object: null prototype] { close: [Function: exithandler], error: [Function: errorhandler] }, _eventsCount: 2, _maxListeners: undefined, _closesNeeded: 3, _closesGot: 0, connected: false, signalCode: null, exitCode: null, killed: false, spawnfile: '/bin/sh', _handle: Process { onexit: [Function (anonymous)], pid: 14, [Symbol(owner_symbol)]: [Circular *1] }, spawnargs: [ '/bin/sh', '-c', 'whoa …
[20:14:33] <teresko> hmmmmm
[20:14:50] <et09> n> `whoami`
[20:14:51] <jellobot> (okay) 'whoami'
[20:14:56] <et09> oh wait that's ruby
[20:15:11] <et09> n> require('child_process').execSync('whoami')
[20:15:12] <jellobot> (okay) <Buffer 6e 6f 64 65 0a>
[20:15:19] <et09> n> require('child_process').execSync('whoami', {encoding:'utf8'})
[20:15:20] <jellobot> (okay) 'node\n'
[20:15:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:15:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:15:47] <et09> i assume it's in a docker container or something
[20:16:23] <teresko> n> require('child_process').execSync('whoami')
[20:16:24] <jellobot> (okay) <Buffer 6e 6f 64 65 0a>
[20:16:33] <prometh> et09: i didn't know :)
[20:16:47] *** Quits: N4buc0 (~N4buc0@189.115.86.130) (Remote host closed the connection)
[20:16:50] <et09> n> require('child_process').execSync('cat /proc/1/sched', {encoding:'utf8'})
[20:16:51] <jellobot> (okay) 'node (1, #threads: 8)\n-------------------------------------------------------------------\nse.exec_start                                :    1446262669.567539\nse.vruntime                                  :           105.464569\nse.sum_exec_runtime                          :            97.961937\nse.nr_migrations                             :                    0\nnr_switches                                  :              …
[20:16:51] <teresko> n> require('child_process').execSync('ip addr', {encoding:'utf8'})
[20:16:52] <jellobot> (fail) /bin/sh: 1: ip: not found Error: Command failed: ip addr /bin/sh: 1: ip: not found
[20:16:59] <et09> yikes
[20:17:11] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048)
[20:17:22] <et09> ok bad luck to fiddle with the bot
[20:17:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:17:49] <teresko> n> require('child_process').execSync('uname -a', {encoding:'utf8'})
[20:17:50] <jellobot> (okay) 'Linux 4151b4dea149 4.19.0-19-amd64 #1 SMP Debian 4.19.232-1 (2022-03-07) x86_64 GNU/Linux\n'
[20:18:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:18:09] <teresko> ok ... I am stopping here
[20:18:13] <ljharb> teresko: maybe play with the bot in PM tho
[20:18:20] <ljharb> teresko: go nuts, just if you do break something, please PM me and let me know
[20:18:21] *** Joins: wyclif (~wyclif@user/wyclif)
[20:18:41] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[20:18:59] <et09> ljharb: node-slim or something?
[20:19:16] <ljharb> no idea what that is, so probably not
[20:19:58] *** Quits: dionysus69 (~Thunderbi@185.115.6.76) (Ping timeout: 260 seconds)
[20:20:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6d2e:9a88:666c:3fae) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:20:54] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:21:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:23:03] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:23:10] *** Joins: N4buc0_ (~N4buc0@189.115.86.130)
[20:23:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:23:15] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048) (Remote host closed the connection)
[20:24:04] *** Joins: wyclif (~wyclif@user/wyclif)
[20:25:43] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[20:28:02] *** Quits: dimi1947 (~dimi1947@46.198.247.237) (Quit: Leaving)
[20:28:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:29:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:29:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[20:30:05] *** Quits: Deide (~deide@user/deide) (Quit: You have been kicked for being idle)
[20:31:43] *** Quits: maret (~maret@5-101-143-122.as42831.net) (Quit: maret)
[20:31:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:33:41] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 245 seconds)
[20:34:13] *** Quits: Digit (~user@user/digit) (Ping timeout: 256 seconds)
[20:34:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[20:35:08] *** Joins: wyclif (~wyclif@user/wyclif)
[20:35:41] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:38:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[20:38:19] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[20:38:50] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:38:58] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 246 seconds)
[20:39:34] *** Joins: stenno (~stenno@user/stenno)
[20:39:51] <OnkelTem> Grrr, I really hate CORS. This crap is pisses me off
[20:39:59] <OnkelTem> pissing(
[20:40:07] *** Quits: stenno (~stenno@user/stenno) (Client Quit)
[20:40:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:40:24] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[20:40:48] <OnkelTem> I'm writing a test script to learn more about fetch(). I found an example WEBM video in the Internet and yet - I cannot use it due to this bloody CORS thing
[20:41:17] <OnkelTem> and if I set mode to 'no-cors' I get just some nonsense in return: error status 0
[20:42:43] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[20:43:50] *** Joins: l__q (~modinfo@user/modinfo)
[20:43:54] <OnkelTem> Folks, do you have any example video or another big file at hand to share?
[20:44:36] <OnkelTem> I don't know how to solve this cors issue. It's just driving me nuts
[20:45:12] <sheetjs> https://raw.githubusercontent.com/SheetJS/sheetjs/master/packages/ssf/test/times.tsv is ~73M
[20:46:03] *** Joins: Digitteknohippie (~user@user/digit)
[20:46:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:46:28] <sheetjs> n> fetch
[20:46:29] <jellobot> (fail) ReferenceError: fetch is not defined
[20:46:44] <OnkelTem> sheetjs: thanks
[20:47:23] <sheetjs> https://jsfiddle.net/ch3vktzj/
[20:47:24] <OnkelTem> sheetjs: and sorry, you need to install node-fetch and make jellobot to speak ESM mwahahhah
[20:47:54] <OnkelTem> (I don't know really, maybe it's just find with ESM)
[20:48:04] *** Joins: audio (~audio@user/audio)
[20:48:19] <OnkelTem> fine*
[20:48:24] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:48:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[20:48:27] *** Quits: Digitteknohippie (~user@user/digit) (Read error: Connection reset by peer)
[20:50:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:51:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:51:26] <sheetjs> OnkelTem: you can check the network tab in the devtools to see the request / response
[20:51:38] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:53:44] <prometh> i was asked in an interview about reactive programming... what is it?
[20:54:00] <prometh> from what i understood, it's not addEventListener
[20:54:32] <blueagain> prometh: when you can model some values as derivatives of others, and when the others change, the ones you modelled also change
[20:55:10] <prometh> ok, so react component state under the hood?
[20:55:30] <blueagain> I don't know, I was recently told that react has nothing to do with reactivity
[20:55:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[20:55:49] <prometh> but react handles changing models
[20:56:03] <prometh> so then reactive programming is basically state management?
[20:56:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:56:25] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:9133:d4a1:66e0:3fc)
[20:57:09] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[20:57:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:58:34] <blueagain> prometh: something is stateful if it has a memory of past events
[20:58:57] <prometh> not necssarily
[20:59:20] <prometh> it's often a model that gets updated manually
[20:59:56] <prometh> any triggered events thereafter are an implementation detail, i'd think
[21:00:11] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:00:34] <prometh> so... reactive programming is state management with events triggered that update the dom?
[21:00:41] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[21:00:45] <prometh> meaning it's not native
[21:01:10] <evulish> Map should have an update method. like blah.update('key', (val = 0) => val + 1))
[21:01:28] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:01:37] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[21:01:37] <prometh> evulish: why? those methods are functional programming which does not mutate
[21:01:57] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[21:01:58] <prometh> err Map
[21:01:59] <prometh> oops
[21:02:24] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[21:02:30] <prometh> what would update() do?
[21:02:32] *** Joins: codebam (~codebam@user/codebam)
[21:02:40] <prometh> that set() does not?
[21:02:46] <evulish> tired of doing blah.set('key', (blah.get('key') ?? 0) + 1)
[21:03:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[21:03:42] *** Quits: blez (~blez@213-130-92-210.ip.btc-net.bg) ()
[21:04:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:04:32] <sheetjs> wrap that in a function
[21:04:55] <blueagain> evulish: ... don't use maps?
[21:05:01] <sheetjs> function increment(map, key) { map.set(key, (map.get(key)??0) + 1); }
[21:05:28] <evulish> sure but it seems like common enough of a thing to be built-in!
[21:05:30] <evulish> maybe not
[21:05:34] <prometh> not to me
[21:05:38] <evulish> blueagain: heresy
[21:06:14] *** Joins: alioui (~medeva293@197.0.87.71)
[21:06:22] <sheetjs> javascript behaves as if it is "single-threaded" and there's no way to share a Map with a Worker, so thread safety is not an issue
[21:07:55] <sheetjs> otherwise some sort of atomic operation would be needed
[21:11:02] <blueagain> most stuff you can do with a map/set can probably be done better with an object/array
[21:11:46] <sheetjs> not really
[21:12:02] <DnzAtWrk> can you uniquely identify which part of a function which calls another function
[21:12:04] <sheetjs> take a Set
[21:12:26] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 245 seconds)
[21:12:37] <sheetjs> to implement this in an array, your add function either has to scan the array each insertion or de-dupe when iterating
[21:13:15] <sheetjs> and the performance changes all the time, but
[21:13:28] <blueagain> to implement what though?
[21:13:31] <sheetjs> Map bypasses a lot of the hidden class overhead
[21:13:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[21:13:45] <sheetjs> what is a Set blueagain?
[21:14:06] <blueagain> non-repeatable, non-ordered
[21:14:40] <sheetjs> so there are a handful of operations
[21:15:01] <sheetjs> let's focus on a few of them
[21:15:13] <sheetjs> Set#add, Set#has and set#forEach
[21:15:44] <sheetjs> `has` tests for presence of the value in the Set
[21:15:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:16:01] <sheetjs> so lets say you were implementing this behavior in the context of an array
[21:16:11] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:38] <sheetjs> instead of set.has(obj) you would test something like arr.includes(obj)
[21:17:07] <sheetjs> that necessitates a linear scan
[21:18:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[21:19:27] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 260 seconds)
[21:20:55] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:21:59] <blueagain> sheetjs: doesn't set do it anyway? is it really faster?
[21:22:39] *** Quits: iomari891 (~iomari891@197.210.84.73) (Ping timeout: 260 seconds)
[21:23:39] *** Joins: l__q (~modinfo@user/modinfo)
[21:23:51] <sheetjs> https://github.com/v8/v8/blob/master/src/builtins/builtins-collections-gen.cc#L1808 is Set#add
[21:24:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Quit: Leaving)
[21:26:36] <blueagain> so it uses a hashmap to find the key
[21:27:00] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:27:12] <sheetjs> at the very least, a native implementation makes sense because JS has no direct equivalent of Java's hash code
[21:27:48] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[21:27:49] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:27:54] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk)
[21:28:40] <sheetjs> so you have easy inequality testing (x != y) but no fast and easy way to get a unique number
[21:28:49] *** Joins: Enissay (~Enissay@user/enissay)
[21:30:30] <blueagain> it just so happens, that when I care about unique existence, I use an object
[21:30:42] <blueagain> and otherwise arrays
[21:30:48] <sheetjs> the natural next question is "why not a big Object?" and the answer is the hidden class optimizations and "dictionary mode"
[21:31:00] <blueagain> hm
[21:31:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:840:dacd:590f:ddfc)
[21:32:10] <blueagain> I find it somewhat more straightforward with simpler mental model that doesn't include Map and Set
[21:32:15] <sheetjs> so even if you work out the details of forcing dictionary mode, you have to contend with `forEach` and `entries`
[21:32:27] <sheetjs> both work in insertion mode
[21:32:40] <sheetjs> *insertion order
[21:34:11] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:35:10] <sheetjs> all CS aside, the fact that this is implemented in C++ rather than JS should be a hint that the native implementation can take advantage of something that the JS cannot
[21:35:34] <sheetjs> and in this case, I suspect it's the ability to quickly generate a hash code
[21:36:29] <blueagain> that's fair enough
[21:36:43] *** Quits: D4mned (~D1mned@212.101.251.194) (Ping timeout: 246 seconds)
[21:39:24] *** Joins: D4mned (~D1mned@212.101.251.194)
[21:39:52] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 246 seconds)
[21:39:53] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 260 seconds)
[21:41:07] <sheetjs> we did some testing a long time ago (2018)
[21:41:12] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[21:41:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:41:55] <sheetjs> XLS/XLSX/XLSB/NUMBERS have this concept of a "shared string table".  all of the string constants are stored in one location and cells reference them by index
[21:42:21] *** Joins: wyclif (~wyclif@user/wyclif)
[21:42:32] <blueagain> sheetjs: is the ms wopi protocol relevant to you?
[21:43:34] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:43:39] <sheetjs> sort of, except sheetjs would be acting in the role of Office Online
[21:46:40] *** Joins: pulse (~pulse@user/pulse)
[21:47:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:47:53] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:41] <blueagain> sheetjs: it's kind of interesting
[21:49:38] <sheetjs> that architecture has the advantage of not requiring javascript to generate charts and complex diagrams
[21:50:58] <blueagain> is that good or bad for you
[21:51:47] <sheetjs> we're hitting the limits of what current JS engines support
[21:52:21] <sheetjs> 10 years ago, would anyone have expected a serious conversation about processing 100M cells in the browser?
[21:53:48] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Remote host closed the connection)
[21:53:59] <blueagain> probably not
[21:55:38] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:55:49] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[21:56:29] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[21:57:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:58:31] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[22:01:43] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[22:01:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[22:02:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[22:06:02] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[22:06:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:06:37] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:07:11] *** Joins: Praise (~Fat@user/praise)
[22:09:45] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[22:10:34] <sheetjs> https://jimmywarting.github.io/StreamSaver.js/examples/media-stream.html
[22:11:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[22:12:04] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[22:13:08] *** Quits: CATS (apic@brezn3.muc.ccc.de) (Remote host closed the connection)
[22:13:14] *** Joins: l__q (~modinfo@user/modinfo)
[22:13:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:13:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:13:59] <blueagain> sheetjs: what's that?
[22:14:25] <sheetjs> recording video/audio in the browser
[22:14:42] <blueagain> sheetjs: have you seen my testing framework, https://github.com/primatejs/debris
[22:15:00] <sheetjs> Supercharged testing framework with support for fixtures, asynchronicity and spaced testing.
[22:15:15] <blueagain> ya, figured I give it some fancy description
[22:15:24] <audio> sheetjs, hey
[22:15:26] <sheetjs> why is this better than alternatives
[22:15:56] <sheetjs> ofc `audio` is a user
[22:16:03] <blueagain> it bootstraps fixtures nicely, has spaced testing, and I use it in my own projects
[22:17:52] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[22:17:55] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:18:29] <sheetjs> restructured the main sheetjs test suite to use deno (so i
[22:18:40] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/test.ts
[22:18:50] <sheetjs> how would something like that be translated
[22:20:16] <blueagain> a huge part of that file are fixtures to me
[22:20:35] <blueagain> I'd move it out to dedicate exports I can pull in
[22:20:42] <blueagain> this also makes it reusable, for other tests
[22:20:50] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[22:20:53] <blueagain> dedicated*
[22:21:04] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:21:11] <sheetjs> the goal was to keep the browser and node tests as similar as possible
[22:22:47] <blueagain> I see. yeah, my framework is still new, but if there's a feature you're interested in I can add it
[22:23:13] <sheetjs> it's up to you to first determine and articulate the scope and vision
[22:24:06] <blueagain> I just needed something that works for my own things, and that it already does. I have many fixtures that I reuse, and I wanted the framework to take care of loading them for me
[22:25:30] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:25:58] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[22:25:58] *** Quits: w_lehinsun (~lehinsun@188.113.178.220) (Ping timeout: 260 seconds)
[22:27:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:28:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[22:28:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:30:12] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (Ping timeout: 240 seconds)
[22:33:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:33:57] *** Joins: wyclif (~wyclif@user/wyclif)
[22:34:18] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) (Ping timeout: 252 seconds)
[22:35:43] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[22:36:11] *** Joins: CATS (apic@brezn3.muc.ccc.de)
[22:37:38] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk) (Ping timeout: 260 seconds)
[22:38:07] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[22:38:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[22:39:11] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[22:39:13] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 250 seconds)
[22:39:28] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[22:39:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:41:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:42:28] *** Joins: w_lehinsun (~lehinsun@188.244.142.69)
[22:42:32] *** Quits: junebug (~junebug@2600:1700:3db0:2540:840:dacd:590f:ddfc) (Ping timeout: 252 seconds)
[22:43:41] *** Joins: w_lehinsun__ (~lehinsun@188.113.178.220)
[22:44:05] *** Joins: nwoob (~apple@49.36.239.79)
[22:44:38] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[22:45:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:45:36] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[22:46:58] *** Quits: w_lehinsun (~lehinsun@188.244.142.69) (Ping timeout: 260 seconds)
[22:46:58] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:48:07] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[22:51:28] *** Joins: autodev (~autodev@097-105-230-074.biz.spectrum.com)
[22:51:28] *** Quits: salad (~cucumber@79.114.140.189) (Read error: Connection reset by peer)
[22:51:29] *** Joins: salad1 (~cucumber@79.114.140.189)
[22:59:41] *** Quits: pmercado (~pmercado@186.11.44.225) (Read error: Connection reset by peer)
[23:02:17] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:02:23] *** Joins: taupiqueur_ (~taupiqueu@129.106.204.77.rev.sfr.net)
[23:03:04] *** Joins: pmercado (~pmercado@190.22.73.57)
[23:03:06] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[23:06:57] *** Joins: k8yun (~k8yun@user/k8yun)
[23:10:52] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[23:11:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:13:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:16:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 246 seconds)
[23:16:59] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 260 seconds)
[23:19:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162) (Ping timeout: 245 seconds)
[23:20:00] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[23:23:27] *** Quits: N4buc0_ (~N4buc0@189.115.86.130) (Quit: Leaving)
[23:26:06] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:28:03] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:28:30] *** Quits: autodev (~autodev@097-105-230-074.biz.spectrum.com) (Remote host closed the connection)
[23:37:46] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:39:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1434:5fb0:9b0b:cf98)
[23:39:14] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[23:40:10] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[23:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:46:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1434:5fb0:9b0b:cf98) (Ping timeout: 240 seconds)
[23:48:14] <Donitz> https://donitz.itch.io/canvas-draw-2d
[23:48:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:48:17] <Donitz> released my editor
[23:48:33] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:48:35] <Donitz> for generating graphics for HTML canvas
[23:49:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[23:51:31] <D4mned> wow looks fancy
[23:51:34] <D4mned> congrats!
[23:51:39] <Donitz> danke
[23:52:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:52:35] *** Joins: z1haze (~z1haze@user/z1haze)
[23:52:54] <z1haze> is there any baked in way to convert a form element into a FormData object?
[23:53:10] <z1haze> or do i have to manually create all of the data for it
[23:53:42] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[23:53:45] <systemfault> z1haze: You pass the form node to the constructor?
[23:54:17] <lara99> Hi, how can I take a full quality screenshot of a DIV and its content?
[23:54:22] <z1haze> systemfault, you do?
[23:54:26] <z1haze> where do you see this?
[23:54:33] <z1haze> https://developer.mozilla.org/en-US/docs/Web/API/FormData
[23:54:45] <systemfault> z1haze: https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData
[23:54:52] <systemfault> Look at the constructor
[23:55:13] <z1haze> ahh, ok. well in my defense, it showed an empty constructor at first :)
[23:55:41] <systemfault> True
[23:56:23] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:56:53] <z1haze> thanks!
[23:57:14] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[23:58:49] *** Quits: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt) (Remote host closed the connection)
[23:59:13] *** Joins: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt)
[23:59:27] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
