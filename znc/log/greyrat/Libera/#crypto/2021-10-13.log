[00:28:29] *** Joins: dez (uid92154@user/dez)
[00:30:32] *** Quits: Arsen (~arsen@managarm/dev/Arsen) (Quit: Quit.)
[00:30:53] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[00:43:27] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[00:44:51] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:49:43] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:51:52] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:53:48] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:54:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[00:54:34] *** Quits: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[00:56:35] *** Lord_of_Life_ is now known as Lord_of_Life
[00:59:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[01:05:57] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[01:14:46] *** Quits: g00fy7 (~g00fy@user/g00fy) (Quit: Ping timeout (120 seconds))
[01:30:49] *** Quits: yggdrasil (~yggdrasil@67-0-43-175.albq.qwest.net) (Read error: Connection reset by peer)
[01:31:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[01:33:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[01:34:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:35:18] *** Joins: yggdrasil (~yggdrasil@67-0-36-124.albq.qwest.net)
[01:37:34] *** Quits: tkob (tkob@shell.xshellz.com) (Ping timeout: 252 seconds)
[01:39:47] *** Joins: tkob (tkob@2607:5300:60:21b::1)
[01:40:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[01:42:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:44:41] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-ad5a-d7d8-86d4-5dd6.res6.spectrum.com)
[01:45:58] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-bd3d-32f8-73a8-cd11.res6.spectrum.com) (Ping timeout: 265 seconds)
[01:50:36] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:d8c8:d91f:a344:f108)
[01:51:48] *** Joins: RickSan__ (~RickSanch@2607:fb90:88df:af6:6933:301f:92c9:b455)
[01:52:34] *** Joins: g00fy7 (~g00fy@user/g00fy)
[01:54:19] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:ed43:d015:c215:2b4c)
[01:54:40] *** Joins: chasmo77 (~chas77@71.63.241.168)
[01:55:31] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:d8c8:d91f:a344:f108) (Ping timeout: 245 seconds)
[01:55:56] *** Quits: RickSan__ (~RickSanch@2607:fb90:88df:af6:6933:301f:92c9:b455) (Ping timeout: 245 seconds)
[01:58:26] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:ed43:d015:c215:2b4c) (Ping timeout: 245 seconds)
[01:59:09] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:d1fb:86cb:fc5:57a2)
[02:03:17] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:7c96:4bc7:a0c3:2df0)
[02:04:41] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:d1fb:86cb:fc5:57a2) (Ping timeout: 245 seconds)
[02:05:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[02:05:56] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:1404:6932:1e56:41ea)
[02:08:01] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:7c96:4bc7:a0c3:2df0) (Ping timeout: 245 seconds)
[02:08:25] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:c884:77db:4d5e:a88c)
[02:10:21] *** Joins: RickSa___ (~RickSanch@2607:fb90:88df:af6:39f0:e2e:56d7:bf72)
[02:10:32] *** Quits: jtgd (~jay@user/jtgd) (Read error: Connection reset by peer)
[02:10:34] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:1404:6932:1e56:41ea) (Ping timeout: 260 seconds)
[02:10:56] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:e4f7:3715:4eb3:c4e6)
[02:12:36] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:c884:77db:4d5e:a88c) (Ping timeout: 245 seconds)
[02:14:23] *** Joins: jtgd (~jay@user/jtgd)
[02:14:41] *** Quits: RickSa___ (~RickSanch@2607:fb90:88df:af6:39f0:e2e:56d7:bf72) (Ping timeout: 245 seconds)
[02:15:42] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:e4f7:3715:4eb3:c4e6) (Ping timeout: 260 seconds)
[02:15:47] *** Joins: RickSan__ (~RickSanch@2607:fb90:88df:af6:d0db:d28b:3f63:4c2d)
[02:15:58] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:16:52] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:f9ac:9600:181e:4d7d)
[02:19:09] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:b0e5:c092:92ef:f472)
[02:20:50] *** Quits: RickSan__ (~RickSanch@2607:fb90:88df:af6:d0db:d28b:3f63:4c2d) (Ping timeout: 260 seconds)
[02:21:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:f9ac:9600:181e:4d7d) (Ping timeout: 260 seconds)
[02:21:25] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:64c3:982d:810b:47ae)
[02:23:38] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:b0e5:c092:92ef:f472) (Ping timeout: 260 seconds)
[02:24:47] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:a44d:327c:ef0b:75df)
[02:25:21] *** Joins: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt)
[02:25:58] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:64c3:982d:810b:47ae) (Ping timeout: 260 seconds)
[02:26:49] *** Quits: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt) (Client Quit)
[02:27:03] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[02:27:14] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:616c:efc4:aba5:649e)
[02:28:48] *** Quits: b93 (~I@a89-152-175-20.cpe.netcabo.pt) (Client Quit)
[02:29:00] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[02:29:02] *** Quits: b93 (~I@a89-152-175-20.cpe.netcabo.pt) (Client Quit)
[02:29:15] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[02:29:26] *** Joins: RickSan__ (~RickSanch@2607:fb90:88df:af6:244a:4c9d:f257:af18)
[02:29:41] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:a44d:327c:ef0b:75df) (Ping timeout: 245 seconds)
[02:30:35] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:ddcf:1be1:273e:860)
[02:31:21] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:616c:efc4:aba5:649e) (Ping timeout: 245 seconds)
[02:33:27] *** Joins: RickSa___ (~RickSanch@2607:fb90:88df:af6:8cc:1bf5:2f47:8c9d)
[02:34:16] *** Quits: RickSan__ (~RickSanch@2607:fb90:88df:af6:244a:4c9d:f257:af18) (Ping timeout: 245 seconds)
[02:34:41] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:ddcf:1be1:273e:860) (Ping timeout: 245 seconds)
[02:35:24] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:5575:d736:4e51:d7ab)
[02:36:23] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:6502:da42:f8f7:ead4)
[02:36:35] *** Quits: b93 (~I@a89-152-175-20.cpe.netcabo.pt) (Quit: Quit)
[02:37:36] *** Quits: RickSa___ (~RickSanch@2607:fb90:88df:af6:8cc:1bf5:2f47:8c9d) (Ping timeout: 245 seconds)
[02:38:37] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[02:39:41] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:5575:d736:4e51:d7ab) (Ping timeout: 245 seconds)
[02:40:11] *** Joins: RickSanc_ (~RickSanch@2607:fb90:88df:af6:cea:6be:1390:a99f)
[02:40:31] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:6502:da42:f8f7:ead4) (Ping timeout: 245 seconds)
[02:41:28] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[02:44:38] *** Quits: RickSanc_ (~RickSanch@2607:fb90:88df:af6:cea:6be:1390:a99f) (Ping timeout: 260 seconds)
[02:58:59] *** Quits: b93 (~I@a89-152-175-20.cpe.netcabo.pt) (Remote host closed the connection)
[03:05:32] *** Quits: jtgd (~jay@user/jtgd) (Remote host closed the connection)
[03:08:27] *** Joins: jtgd (~jay@user/jtgd)
[03:14:43] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[03:18:56] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[03:19:45] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[03:19:49] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[03:23:20] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Remote host closed the connection)
[03:23:43] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[03:29:29] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-142e-facc-6ddb-8c11.res6.spectrum.com)
[03:31:46] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-ad5a-d7d8-86d4-5dd6.res6.spectrum.com) (Ping timeout: 260 seconds)
[03:39:03] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[03:48:29] <rk4> lol
[03:48:57] <rk4> jesus i read all of https://securitylab.github.com/advisories/GHSL-2021-1012-keypair/, it was like a 3 way train wreak
[03:49:03] *** Quits: finalbeta (~finalbeta@dD576A726.access.telenet.be) (Read error: Connection reset by peer)
[03:49:42] <rk4> i stopped reading yesterday at the first train wreak [a null value being used] thinking that was it
[03:51:24] <sarnold> rk4: brutal
[03:51:50] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 260 seconds)
[03:54:03] *** Quits: drocan (~drocan@user/drocan) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:54:18] *** Joins: drocan (~drocan@yigitsever.com)
[03:55:50] <rk4> it's like very kind of fuckup, sort of merged together into a epic fuckup. who thinks LCG(math.random) is a good idea, though i guess if you made it to the point of thinking generating RSA keys in pure JS is a good idea for a personal project
[03:55:55] <rk4> every*
[03:57:32] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Remote host closed the connection)
[03:57:55] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[03:59:05] <rk4> i was wondering if maybe they'd done a specific style of TDD which would entirely overlook things like bad RNGs, https://github.com/juliangruber/keypair/blob/master/test.js but uh is that the extent of the tests?!
[03:59:33] <rk4> i guess they were relying on their robust type system
[04:00:22] <rk4> github says it's used by 20k other projects
[04:00:30] <rk4> meanwhile if i were him i'd delete it in shame
[04:00:53] <sarnold> https://m.xkcd.com/1181/
[04:01:29] <sarnold> rk4: it's been a busy eight years. I'm sure he'll add more tests any moment now.
[04:08:16] *** Quits: d1cor (~diego@179.63.242.100) (Ping timeout: 252 seconds)
[04:15:40] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-04cc-b6ed-267b-4319.res6.spectrum.com)
[04:17:40] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-142e-facc-6ddb-8c11.res6.spectrum.com) (Ping timeout: 252 seconds)
[04:20:58] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[04:22:09] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:29:16] *** Joins: det (~det@23.96.202.209)
[04:59:21] *** Joins: gggpkm (~gggpkm@60.10.194.44)
[05:11:09] *** Joins: gggpkm_ (~gggpkm@60.10.23.168)
[05:14:19] *** Quits: gggpkm (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[05:29:06] *** moose`` is now known as moose
[05:44:56] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[06:00:40] *** Joins: igemnace (~ian@user/igemnace)
[06:21:07] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[06:23:36] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[06:23:53] *** Joins: igemnace (~ian@user/igemnace)
[06:42:36] *** Quits: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca) (Ping timeout: 245 seconds)
[06:53:39] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[06:57:07] *** Quits: gggpkm_ (~gggpkm@60.10.23.168) (Ping timeout: 252 seconds)
[06:59:11] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[07:02:25] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[07:12:24] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[07:15:29] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Remote host closed the connection)
[07:16:02] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[07:20:49] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Ping timeout: 252 seconds)
[07:21:47] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[07:22:09] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[07:24:04] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[07:28:50] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[07:38:38] *** Joins: frost (~frost@59.71.244.189)
[07:43:40] *** Joins: gggpkm__ (~gggpkm@60.10.23.168)
[07:46:40] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[07:51:47] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[07:52:21] *** Joins: kish` (~aqua@user/aqua)
[08:04:38] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:10:30] *** Joins: fernand (~fernand@179.156.35.4)
[08:12:28] *** fernand is now known as Fernanda
[08:19:19] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[08:20:10] *** Joins: Wulf (~Wulf@user/wulf)
[08:22:17] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:25:02] *** Hash is now known as LordOfThePings
[08:27:19] *** Quits: Fernanda (~fernand@179.156.35.4) (Ping timeout: 252 seconds)
[08:28:40] *** LordOfThePings is now known as EnchanterTim
[08:34:44] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:34:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[08:36:07] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 252 seconds)
[08:37:14] *** Quits: CryptoClub (~fafs@137.101.242.135) (Read error: Connection reset by peer)
[08:41:06] *** Joins: CryptoClub (~fafs@137.101.242.135)
[08:43:33] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[08:53:06] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[08:56:28] *** Quits: gggpkm__ (~gggpkm@60.10.23.168) (Ping timeout: 252 seconds)
[08:59:09] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[09:02:34] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[09:05:27] *** Joins: qbt (~qbt@user/edun)
[09:05:51] *** Parts: qbt (~qbt@user/edun) ()
[09:06:39] *** Joins: gggpkm_ (~gggpkm@123.113.177.190)
[09:09:41] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 245 seconds)
[09:10:59] *** Joins: Doraemon (~NeoCron@p200300c4cf1964009b5b3ef502cc8e57.dip0.t-ipconnect.de)
[09:13:17] *** Quits: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:27:04] *** Quits: terminaldweller (~devi@ip137.ip-145-239-165.eu) (Ping timeout: 265 seconds)
[09:28:36] *** Joins: terminaldweller (~devi@5.116.28.12)
[09:33:25] *** Joins: qbt (~qbt@user/edun)
[09:36:04] *** Quits: terminaldweller (~devi@5.116.28.12) (Read error: Connection reset by peer)
[09:40:01] *** Joins: terminaldweller (~devi@ip137.ip-145-239-165.eu)
[09:43:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[09:44:39] *** Joins: Nimrodel (~Nimrodel@2a02:587:4c11:c000:d572:9489:f1a7:1f97)
[09:48:50] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Ping timeout: 260 seconds)
[09:56:17] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[09:57:36] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 245 seconds)
[10:00:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 250 seconds)
[10:00:34] *** Joins: maroon (tinycrypt@user/maroon)
[10:04:53] *** Joins: andreasbuhr (~quassel@p548dd9cd.dip0.t-ipconnect.de)
[10:06:07] *** Joins: igemnace (~ian@user/igemnace)
[10:09:12] *** Quits: Nimrodel (~Nimrodel@2a02:587:4c11:c000:d572:9489:f1a7:1f97) (Quit: Leaving)
[10:11:11] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[10:14:14] *** Joins: gggpkm (~gggpkm@60.10.194.44)
[10:14:26] *** Quits: gggpkm_ (~gggpkm@123.113.177.190) (Ping timeout: 265 seconds)
[10:16:43] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[10:18:09] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[10:21:33] *** Quits: gggpkm (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[10:26:38] *** Joins: gggpkm__ (~gggpkm@123.113.177.190)
[10:29:41] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 245 seconds)
[10:35:31] *** Quits: terminaldweller (~devi@ip137.ip-145-239-165.eu) (Ping timeout: 252 seconds)
[10:49:33] *** Quits: gggpkm__ (~gggpkm@123.113.177.190) (Read error: Connection reset by peer)
[10:53:38] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[11:53:51] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[11:54:13] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[11:54:32] *** Server sets mode: +nt 
[11:54:46] *** Joins: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[11:55:16] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 252 seconds)
[11:55:43] *** Joins: Arachnophine (~KeterClas@vm0.max-p.me)
[11:57:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (*.net *.split)
[11:57:00] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (*.net *.split)
[11:57:00] *** Quits: neocow (~neocow@185.38.14.210) (*.net *.split)
[11:57:00] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (*.net *.split)
[11:57:00] *** Quits: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se) (*.net *.split)
[11:57:00] *** Quits: pdg (sid395042@id-395042.lymington.irccloud.com) (*.net *.split)
[11:57:00] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (*.net *.split)
[11:57:00] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[11:57:27] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[11:59:08] *** Joins: DoctorD90 (~DoctorD90@user/doctord90)
[12:03:21] *** Joins: poopster (poopster@shell.xshellz.com)
[12:03:41] *** Joins: igemnace (~ian@2001:4451:4522:c700:e1ec:974e:1c5c:790b)
[12:03:41] *** Joins: trebuh (~trebuh@2001:41d0:a:15c7::1)
[12:03:41] *** Joins: terabit (sid146285@2a03:5180:f:5::2:3b6d)
[12:03:41] *** Joins: bw__ (sid2730@2a03:5180:f:3::aaa)
[12:03:41] *** Joins: ses (uid38151@2a03:5180:f:4::9507)
[12:03:41] *** Joins: pdg (sid395042@id-395042.lymington.irccloud.com)
[12:03:41] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[12:03:41] *** Joins: sebbu (~sebbu@user/sebbu)
[12:04:29] *** ses is now known as Guest3977
[12:04:43] *** Joins: g00fy7 (~g00fy@user/g00fy)
[12:06:02] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[12:08:17] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[12:17:09] *** Joins: Henry151 (~bishop@user/henry151)
[12:19:51] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:20:31] *** Joins: tkob (tkob@2607:5300:60:21b::1)
[12:20:35] *** Joins: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[12:20:35] *** Joins: voker57 (~quassel@2a06:1700:0:24::)
[12:20:37] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[12:20:38] *** Joins: mweckbecker (~matthias@weckbecker.name)
[12:20:43] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[12:20:52] *** Joins: eruditass_ (uid248673@id-248673.uxbridge.irccloud.com)
[12:21:06] *** Joins: hl (~hl@user/hl)
[12:28:19] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[12:28:31] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[12:28:31] *** Joins: menace (~someone@user/menace)
[12:28:37] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[12:36:39] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-04cc-b6ed-267b-4319.res6.spectrum.com) (Quit: jarthur_)
[12:42:01] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[12:48:34] *** Quits: jtgd (~jay@user/jtgd) (Ping timeout: 252 seconds)
[12:54:48] *** Joins: undeclared (nullx@user/undeclared)
[12:57:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:58:38] <undeclared> do signatures for the same content always come out as the same?
[12:58:48] <undeclared> I'm havign this with libsodium
[12:58:50] <undeclared> having*
[13:00:26] <Peng> It depends. Often no.
[13:00:33] <Peng> I'm not sure how libsodium implements it.
[13:00:53] <undeclared> oh maybe it's just a cached result or something
[13:01:50] <undeclared> second thing then
[13:02:07] <undeclared> is there any danger to responding with the signature of something random in order to validate it's coming from me on some other side?
[13:02:24] <undeclared> eg, if invalid, return nothing, if valid, return a signed uuid v4 or something
[13:02:39] <undeclared> well, a uuid v4 and the signature separately
[13:04:50] *** Quits: bw__ (sid2730@2a03:5180:f:3::aaa) ()
[13:05:13] *** Joins: bw__ (sid2730@id-2730.ilkley.irccloud.com)
[13:07:08] *** bw__ is now known as bw
[13:07:14] <piou> undeclared: hard to say from so little context, but the main danger I see is replay attacks: the signature proves you signed the data, but since the receiver doesn't know what data to expect he cannot know whether you signed it just there for him. I could maybe use your service, get a random number and the signature, then if I give those to someone else they can verify that you signed the random
[13:07:20] <piou> number but it's really me at the other end of the transmission. That's why nonce schemes have a challenge system instead: the client provides a random number which the server signs, that way the client knows the signature was just for him.
[13:07:20] *** Quits: bw (sid2730@id-2730.ilkley.irccloud.com) (Changing host)
[13:07:20] *** Joins: bw (sid2730@user/betawaffle)
[13:15:31] *** Quits: bbear_ (~znc@21212.s.t4vps.eu) (Ping timeout: 245 seconds)
[13:16:22] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[13:17:25] <undeclared> piou: the context is a licensing system, I figure I return back a signed challenge but they do not provide the challenge, instead its provided 
[13:17:41] *** Quits: rk4 (~r@user/rk4) (Ping timeout: 250 seconds)
[13:18:10] <undeclared> eg, send license key and get back -> {"success":true,"challenge":"791d6416-ffa9-4ee9-a8c1-5f35bdffa21a","sig":"FePja214VnytkYVoGf2EO0nrx8cIJmAYh42Dig91KM3_DmjGBMmbdAwS8fuzvrW7e7v8odidcz2bUIaLhqOyDw=="}
[13:18:16] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[13:18:22] <undeclared> if that makes sense
[13:18:44] *** Joins: rk4 (~r@user/rk4)
[13:18:54] *** Joins: jtgd (~jay@user/jtgd)
[13:20:07] *** Joins: Wulf (~Wulf@user/wulf)
[13:24:16] <undeclared> ohh I see what you mean
[13:24:26] <undeclared> hmm
[13:24:53] <undeclared> I mean the problem being it validates that the server said yes but nothing else
[13:25:56] <piou> undeclared: you can combine the two: have the client generate and send a random number N, generate your license key L, sign(L || N) ?
[13:26:08] <undeclared> piou: no no they put in a license key
[13:26:13] <undeclared> and it hits my server, checks if its valid
[13:27:54] *** Quits: yang_ (~yang@gnulinux.si) (Changing host)
[13:27:54] *** Joins: yang_ (~yang@fsf/member/yang)
[13:28:51] <piou> Is the goal for you to verify the license key or for them to verify that you're a legitimate server?
[13:29:16] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[13:29:19] *** Quits: duck[m] (~duckm]@user/duckm/x-2763650) (Quit: Bridge terminating on SIGTERM)
[13:29:19] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Quit: Bridge terminating on SIGTERM)
[13:29:28] <piou> Because in the first case I'm not sure what signing brings you, and in the second I'm not sure what the license key brings you
[13:32:30] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:33:16] <undeclared> verify the license key and that I'm the legitimate server
[13:33:24] <undeclared> its extended copy protection, eg.. harder to fake
[13:33:29] <undeclared> or crack, I guess
[13:33:31] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[13:33:41] *** yang_ is now known as yang
[13:33:45] *** Joins: duck[m] (~duckm]@user/duckm/x-2763650)
[13:33:47] <piou> Yeah, I don't think you should try mixing the two
[13:33:57] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[13:34:03] <undeclared> it could just return true/false
[13:34:07] <undeclared> but it feels lacking
[13:44:29] <piou> The scheme your propose would avoid someone setting up a dummy server that always answers True. However the moment someone with a legitimate copy sees the communication they can setup a dummy server that answers True and the signature and tell people to use the specific key that they used for that and it'll work. You can try adding a challenge as I outlined before where the client provides a
[13:44:36] <piou> random number alongside the license key and the server signs both, but the key weakness that you're not solving is that valid license keys can be shared and you have no way to ensure that it's only been used once without additional information.
[13:44:54] <undeclared> yeah, the used once I'm doing with hwid
[13:45:07] <undeclared> I appreciate the thorough thought process
[13:45:31] <undeclared> but yeah no matter what, this is fakeable
[13:45:58] <piou> Everything is compromise, but you shouldn't spend too many resources on solving secondary issues IMHO
[13:46:01] <undeclared> yea
[13:46:43] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 250 seconds)
[13:47:53] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:48:26] *** Quits: EnchanterTim (~weechat@thestonedapes.com) (Ping timeout: 245 seconds)
[13:48:29] <wasamasa> did you know that the better license schemes just check whether there have been excessive amounts of activations and let the support know
[13:48:35] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:9d6e:e820:71f6:16ee)
[13:49:12] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[13:49:19] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[13:49:19] <piou> Note that as far as server authentication (and avoiding dummy ones) is concerned, another possible route is to bet on HTTPS and use a specific "pinned" certificate. You should have the communication encrypted anyway, but using a specific certificate you can ensure that the connection is only done to a specific server. No need to reinvent challenges here, especially since in both cases you need to
[13:49:25] <piou> include a public key for the server within the client.
[13:49:33] <wasamasa> in the end it's about keeping your customers happy and avoiding customers milking you
[13:49:39] <undeclared> that's kind of a good point too
[13:49:45] <wasamasa> it's not about ensuring that no license abuse ever happens
[13:49:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[13:49:58] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:50:27] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[13:50:37] <undeclared> so do I just limit activations to like 3?
[13:50:44] <undeclared> and make them come back over time like demerits lol
[13:50:51] <undeclared> it's a hard call the whole system
[13:51:01] <wasamasa> no, I'd just do monitoring
[13:51:02] *** Quits: _paul0 (~paul0@179.181.83.178) (Quit: Leaving)
[13:51:13] <wasamasa> and have whoever does support check on anything suspicious looking
[13:51:22] <undeclared> I don't have anybody for support yet =/
[13:51:30] <wasamasa> like, thousands of computers sharing the same license key
[13:51:32] <undeclared> but no scale is good too
[13:51:44] <undeclared> yup
[13:51:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:52:01] <piou> undeclared: I hate it when softwares don't let me reinstall my licenses on newer computers, so I'd go for quite higher number if you want a fixed amount.
[13:52:06] <wasamasa> one computer repeatedly activating a license could be legit
[13:52:14] <undeclared> yeah I was thinking I'd limit activations by hwid maybe
[13:52:14] <wasamasa> especially on windows or with VMs
[13:52:17] <undeclared> like same pc unlimited
[13:52:20] <undeclared> just switching is 3
[13:52:32] <undeclared> but yeah good point.. wouldn't wanna block someone
[13:52:35] <undeclared> I'll just log activations
[13:52:46] <undeclared> and make sure to have some dashboards up for repeated or excessive
[13:54:47] <undeclared> well thanks guys
[13:55:13] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Ping timeout: 268 seconds)
[13:56:06] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[13:58:25] *** Quits: qbt (~qbt@user/edun) (Ping timeout: 252 seconds)
[14:01:03] *** Joins: EnchanterTim (~weechat@thestonedapes.com)
[14:03:22] *** uramhoaH is now known as Haohmaru
[14:08:07] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Reconnecting)
[14:08:13] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:08:22] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:08:23] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[14:08:56] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[14:09:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:09:18] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Client Quit)
[14:09:36] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[14:10:48] *** Joins: WarpedAI (~Warped@user/warped)
[14:11:45] *** Quits: jtgd (~jay@user/jtgd) (Read error: Connection reset by peer)
[14:12:24] *** Joins: jtgd (~jtgd@user/jtgd)
[14:12:52] *** Joins: qbt (~qbt@user/edun)
[14:13:32] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 265 seconds)
[14:16:37] *** Joins: g00fy72 (~g00fy@user/g00fy)
[14:18:46] *** Quits: g00fy7 (~g00fy@user/g00fy) (Ping timeout: 252 seconds)
[14:18:46] *** g00fy72 is now known as g00fy7
[14:30:56] *** Quits: jhed9 (~jhed9@113.189.225.35.bc.googleusercontent.com) (Ping timeout: 245 seconds)
[14:30:57] *** Joins: b93 (~I@a89-152-175-20.cpe.netcabo.pt)
[14:31:21] *** Joins: jhed9 (~jhed9@113.189.225.35.bc.googleusercontent.com)
[14:33:59] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Ping timeout: 265 seconds)
[14:38:55] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[14:39:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:42:41] *** EnchanterTim is now known as Hash
[14:44:39] *** Quits: igemnace (~ian@2001:4451:4522:c700:e1ec:974e:1c5c:790b) (Remote host closed the connection)
[14:50:41] *** chowmein__ is now known as chowmeined
[14:54:41] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:55:04] *** Joins: igemnace (~ian@user/igemnace)
[14:59:14] *** Joins: whytwulf (~whytwulf@user/clf59)
[14:59:32] *** Quits: whytwulf (~whytwulf@user/clf59) (Remote host closed the connection)
[15:04:17] *** Quits: yggdrasil (~yggdrasil@67-0-36-124.albq.qwest.net) (Ping timeout: 265 seconds)
[15:05:36] *** Joins: yggdrasil (~yggdrasil@67-0-79-173.albq.qwest.net)
[15:15:18] *** Quits: menace (~someone@user/menace) (Quit: menace)
[15:44:15] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[15:45:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[15:51:53] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[15:52:31] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[15:55:31] *** Quits: riv (river@tilde.team/user/river) (Ping timeout: 245 seconds)
[15:57:25] *** Joins: riv (river@tilde.team/user/river)
[15:57:49] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Ping timeout: 252 seconds)
[16:02:14] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[16:04:41] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[16:08:06] *** Guest3977 is now known as ses
[16:08:36] *** ses is now known as Guest2503
[16:08:46] *** Quits: b93 (~I@a89-152-175-20.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[16:09:21] *** Guest2503 is now known as ses
[16:09:25] *** Joins: Torr (~Torr@user/torr)
[16:13:53] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 265 seconds)
[16:14:18] *** Joins: aleck1 (~aleck@user/aleck)
[16:15:48] *** Quits: tkob (tkob@2607:5300:60:21b::1) (Remote host closed the connection)
[16:15:56] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[16:16:22] *** Joins: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca)
[16:16:46] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 245 seconds)
[16:19:27] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[16:19:47] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[16:21:35] *** Joins: Torr (~Torr@user/torr)
[16:25:49] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[16:27:48] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:28:40] *** Joins: rtypo (~alex@user/rtypo)
[16:36:36] *** Joins: Torr (~Torr@user/torr)
[16:37:50] *** Joins: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877)
[16:38:12] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[16:43:34] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:9d6e:e820:71f6:16ee) (Ping timeout: 268 seconds)
[16:44:08] *** Joins: RickSanc_ (~RickSanch@2607:fb90:ba8a:f0de:7d39:56ae:9527:6465)
[16:45:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:88df:af6:2d4a:81f0:cccd:9877) (Ping timeout: 260 seconds)
[17:01:14] *** Quits: CryptoClub (~fafs@137.101.242.135) (Read error: Connection reset by peer)
[17:05:29] *** Joins: CryptoClub (~fafs@137.101.242.135)
[17:07:02] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:08:18] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[17:08:21] *** Joins: alip (~alip@exherbo/developer/alip)
[17:09:49] *** Quits: JvD (~jvd@kpa15.kuuskaista.fi) (Ping timeout: 252 seconds)
[17:10:02] *** Joins: JvD (~jvd@kpa15.kuuskaista.fi)
[17:10:51] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:11:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:14:32] *** Joins: iz (~tv@user/xiz)
[17:16:52] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[17:21:04] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[17:22:10] *** Joins: yeirr (~yeirr@user/yeirr)
[17:39:33] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:42:22] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:42:42] *** Joins: yeirr (~yeirr@user/yeirr)
[17:46:04] *** Quits: RickSanc_ (~RickSanch@2607:fb90:ba8a:f0de:7d39:56ae:9527:6465) (Remote host closed the connection)
[17:46:21] *** Joins: Wulf (~Wulf@user/wulf)
[17:50:04] *** Quits: madage (~madage@user/madage) (Quit: leaving)
[17:50:41] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:51:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:52:56] *** Joins: yeirr (~yeirr@user/yeirr)
[17:54:28] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[17:56:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[17:57:44] *** Joins: madage (~madage@user/madage)
[18:00:30] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[18:01:02] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[18:07:29] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Remote host closed the connection)
[18:12:52] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[18:13:45] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[18:14:18] *** Joins: Malvolio (~Malvolio@user/malvolio)
[18:17:23] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[18:17:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:19:40] *** Quits: JvD (~jvd@kpa15.kuuskaista.fi) (Ping timeout: 252 seconds)
[18:19:53] *** Joins: JvD (~jvd@kpa15.kuuskaista.fi)
[18:27:13] *** Joins: Dixcy (~Dixcy@user/dixcy)
[18:27:47] <Dixcy> Hi. How to decrypt twofish algo?
[18:28:26] <Alipha> Dixcy: you have the key?
[18:28:31] <Dixcy> yes
[18:29:31] <Dixcy> http://twofish.online-domain-tools.com/ ?
[18:30:40] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[18:32:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[18:33:19] *** Joins: yeirr (~yeirr@user/yeirr)
[18:33:37] *** Joins: mei6 (~mei@user/mei)
[18:34:20] <maroon> i wonder how that site handles a 16-byte IV for blowfish
[18:34:41] *** Quits: ldm (~ldm@hacksoc/member) (Ping timeout: 245 seconds)
[18:34:44] <Dixcy> dunnow
[18:35:14] <Dixcy> if i post a key , how can you guess what encryption type is used ?
[18:35:45] <Dixcy> in other words im not sure even that is twofish or blowfish or anyting please help :P
[18:35:50] *** Joins: Luke (~ldm@hacksoc/member)
[18:35:57] <maroon> you ean the mode like ecb/cbc, or which cipher?
[18:36:06] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[18:36:23] <Dixcy> i have a cipher key  only
[18:36:38] <Dixcy> and im not cryptographer expert
[18:38:51] <maroon> schneier has a page claiming to be a list of programs that do 2fish https://www.schneier.com/academic/twofish/products/
[18:39:08] <ioxzev1z> Given key k, decryption is just D(c, k), no?
[18:39:33] <Dixcy> i dont know for sure that is 2fish
[18:39:40] <wasamasa> that still leaves figuring out basic things, such as the encoding of ciphertext and key for whatever the decryption software accepts
[18:40:05] <wasamasa> let's ask something more productive, what gives you the idea it's twofish?
[18:40:14] <Dixcy> what algo would be used for this 
[18:40:16] <Dixcy> 04 2f 22 33 38 31 35 28 2e 2f 1e 72 1e 32 2e 2d 34 35 28 2e 2f 1e 27 2d 20 26 1e 72 72 79 79 70 72 72 76
[18:40:23] <wasamasa> lol
[18:40:27] <Dixcy> this is the key
[18:40:44] <maroon> ciphers have several choces for the 'mode of operation' that gives 'feedback' between blocks, if you don't use the correct mode, you'll be lucky to get 1 block to decode correctly
[18:42:01] *** Quits: Torr (~Torr@user/torr) ()
[18:42:06] <piou> (good thing is, there's only one block to decrypt)
[18:42:07] <MacGyver> If that's really a key, that's 280 bits.
[18:42:10] <Dixcy> ok im not familliar with this, how to proceed , i have a task this is the key i have to figureout what is says the message in plaintext after decryption
[18:42:12] *** Joins: Torr (~Torr@user/torr)
[18:42:13] <MacGyver> That narrows the options.
[18:42:36] <maroon> seems an awful lot of text in the key there at the end /"3815(./r2.-45(./'- &rryyprrv
[18:42:43] <wasamasa> yeah
[18:43:11] <wasamasa> imagine if the cipher text was also 280 bits :P
[18:43:14] <wasamasa> or a multiple
[18:44:35] <Dixcy> https://blog.storagecraft.com/5-common-encryption-algorithms/
[18:44:45] <Dixcy> is there any chance to be one of these
[18:44:49] <wasamasa> lol
[18:44:51] <maroon> Dixcy, did you see that link i pasted? dunno how many of those programs are still around and are free
[18:45:09] <wasamasa> so you base your idea that it's twofish not on observation, but on a shoddy blog post
[18:45:45] <maroon> but any 2fish program isnt going to know what to do with a 280 bit key sincd 2fish supports keysize only 256
[18:45:49] <Dixcy> i have no idea what algo is used i need to find out the message like i said
[18:45:55] <wasamasa> yeah and even the blog post tells you that
[18:46:43] <Dixcy> so what method to use?
[18:46:48] <wasamasa> observation
[18:46:56] <Dixcy> what would you do, for decryption strategy ?
[18:46:56] <wasamasa> take a good hard look at all the information you have
[18:47:19] <Dixcy> i have only this and it is enought to get the answer
[18:47:20] <Dixcy> https://blog.storagecraft.com/5-common-encryption-algorithms/
[18:47:36] <Dixcy> no this link sorry
[18:47:38] <Dixcy> 04 2f 22 33 38 31 35 28 2e 2f 1e 72 1e 32 2e 2d 34 35 28 2e 2f 1e 27 2d 20 26 1e 72 72 79 79 70 72 72 76
[18:47:51] <wasamasa> the key isn't, no
[18:48:05] <Dixcy> what
[18:48:08] <maroon> i dont see anything about that key at that blog
[18:48:13] <piou> Dixcy: assuming this is related to what you were asking on #security yesterday, you have a lot more information you should share
[18:48:21] <wasamasa> lol, #security
[18:48:52] <Dixcy> maroon: this blog is completely random and has nothing to do with the key i just googling and search
[18:48:55] <wasamasa> and yeah, I get the same feeling, that something crucial is omitted here
[18:49:20] <Dixcy> pio: no this is a different its not about config file, its completely new thing
[18:49:33] <maroon> someone told you that this 35-byte sequence is a 2fish key?
[18:49:49] <Dixcy> no its my guess
[18:49:55] <piou> Dixcy: ok, what thing? Do you have data to decrypt? What is it like? Where did you find it? That's relevant
[18:49:58] <Dixcy> i really dont know what type is key
[18:49:59] <maroon> your 'educated' guess? :)
[18:50:38] <maroon> you start out asserting this is a 2fish key, and now it turns out you 'know' no such thing
[18:50:40] <piou> Just the length of encrypted data alone can help a lot identifying what the encryption is
[18:51:01] <Dixcy> its a task i have a key, i have to figureout what it tells as a messege after decrypt the key. Its simple. But decryption its not :D
[18:51:15] <ms7821> "decrypt the key"?
[18:51:46] <Dixcy> marron: like i said above and mention im not cryptographer expert sorry
[18:51:48] <wasamasa> I suspect Dixcy is paraphrasing the actual challenge task badly
[18:51:48] <maroon> the fact that no bits of the key have the highest bit set, suggests to me that maybe it's encoded some way
[18:52:07] <wasamasa> or overlooking something very obvious
[18:52:09] <iz> if it's a challenge, it probably isn't challenging you to guess the standard encryption method and using it to decrypt
[18:52:09] <Dixcy> ms7821: i post it the decrypt key above in the chat
[18:52:17] <wasamasa> like a hint in the challenge name
[18:52:35] <iz> because that would be a pretty dumb challenge
[18:52:41] <ms7821> Dixcy, that makes no sense
[18:52:52] <piou> Dixcy: the key is the secret you use to encrypt a message. You decrypt the message using the same key (exceptions apply, but let's keep it simple). So you always have a key and a message, either to encrypt or decrypt, but you can't do anything with just a key.
[18:53:13] <ms7821> is 04 2f 22 33... 72 72 76 the key, or a "decrypted" key, or the ciphertext?
[18:53:28] <wasamasa> I'm mildly curious where the challenge is from
[18:53:40] <iz> if it's the only piece of info, it must be the ciphertext.. or there's a lot of omitted info
[18:53:53] <Dixcy> ms7821: this is the key that need to be used for decryption!
[18:53:54] <wasamasa> because sometimes not all challenges are worth solving
[18:53:58] <piou> Dixcy: also, explaning where all of this comes from would help a *lot* 
[18:54:01] <ms7821> Dixcy, and what does it decrypt?
[18:54:21] <Dixcy> answer
[18:54:25] <Dixcy> that i need to solve
[18:54:25] <ms7821> what?
[18:54:29] <iz> lol
[18:54:31] <wasamasa> lol
[18:54:31] <ms7821> do you have a ciphertext?
[18:54:36] <iz> it has to decrypt something
[18:54:37] <wasamasa> is this ##english or what
[18:54:42] <Dixcy> iz: yep
[18:54:45] <piou> Dixcy: the key needs to be used to decrypt what?
[18:55:05] <maroon> how long is the ciphertext you're trying to decrypt with that key?
[18:55:11] <iz> (and now he says "yeah, that's what i'm trying to find out!!!")
[18:55:39] <Dixcy> if i know answers of your question i would not asking the same :D
[18:55:49] <piou> Dixcy: please don't keep information to yourself and just explain your whole context giving as much details as possible, you're really not helping anyone, especially yourself
[18:55:51] <maroon> you dont know where you got it?
[18:55:52] <ms7821> so you have a key, but nothing to decrypt?
[18:56:01] <Dixcy> pio: plain text secret messege i think
[18:56:08] <wasamasa> Dixcy: how about you just give us a link to the actual challenge
[18:56:10] <iz> Dixcy: so there will be a ciphertext and a plaintext.. the ciphertext is encrypted and with the key it can be decrypted to produce the secret plaintext
[18:56:15] <wasamasa> Dixcy: that would be a lot easier to understand
[18:56:20] <piou> Dixcy: if you don't have a message to decrypt, then you can't do anything.
[18:56:26] <piou> Dixcy: does the challenge say it's a key?
[18:56:32] <piou> Dixcy: what is the challenge?
[18:56:34] <maroon> Dixcy is the king of the XY question
[18:56:35] <iz> Dixcy: if you have a key, you must also have a ciphertext to try to decrypt
[18:56:38] <ms7821> "skjdhcnkjsdhfnc" I got a key folks, who can tell me what it decrypts
[18:57:33] <wasamasa> lol, I solved it
[18:57:50] <ms7821> is it actually just an encoded message?
[18:58:02] <Dixcy> Here this is all what i got:  CHALLENGE DATA : [solved by 784] Figure out what this says:  04 2f 22 33 38 31 35 28 2e 2f 1e 72 1e 32 2e 2d 34 35 28 2e 2f 1e 27 2d 20 26 1e 72 72 79 79 70 72 72 76 
[18:58:10] <ms7821> RIGHHHHTTT
[18:58:13] <ms7821> so it's not a key
[18:58:13] <iz> lol, that would be a ciphertext, not a key
[18:58:23] <Dixcy> maybe but encoded with what algo is the point
[18:58:25] <wasamasa> yup, it's an encrypted message with an unknown key
[18:58:37] <ms7821> honestly, it looks encoded rather than encrypted
[18:59:06] <wasamasa> sure, you could say that about rot13
[18:59:18] <Dixcy> Challenge is Encryption title  ,
[18:59:20] <piou> Dixcy: ok, then it's not a key and that makes a lot more sense because trying to decrypt things without knowing the key or anything is a common problem
[18:59:31] <Dixcy> i used rot13 for other challenge and im 100% that is not rot13
[19:00:00] <wasamasa> I'm not saying that it's rot13, I'm saying that rot13 can be argued to be both an encoding and an encryption algorithm
[19:00:08] <maroon> rot13 would be alphabet text
[19:00:33] <Dixcy> i just guessing friends sorry 
[19:00:45] <ms7821> if you're guessing, say you're guessing, instead of "it's twofish"
[19:00:46] <Dixcy> there is so many algos
[19:00:53] <wasamasa> you need more than dumb luck to solve this
[19:01:16] <iz> Dixcy: it's like a puzzle where you break then encryption.. not one where you guess the standard encryption method and then figure out the key was encoded in the message also
[19:01:17] <Dixcy> awf
[19:01:38] <Dixcy> iz: yes maybe
[19:01:44] <iz> i'm telling you
[19:01:57] <ms7821> oh lol it's super easy to crack
[19:02:01] <wasamasa> told you
[19:02:03] <iz> because you are totally off in the weeds right now
[19:02:04] <ms7821> encryption
[19:02:06] <ms7821> ugh
[19:02:14] <ms7821> Dixcy: have a play with https://gchq.github.io/CyberChef/
[19:02:37] <wasamasa> oh, that reminds me
[19:02:52] <ms7821> in particular, the "From Hex" and "XOR" or "XOR Brute Force" tools
[19:02:52] <Dixcy> i've already tried cyberchef
[19:03:14] <Dixcy> by the way there is no 2fish there
[19:03:19] <ms7821> none
[19:03:25] <wasamasa> I don't get your fascination with twofish
[19:03:41] <ms7821> it took 15s after I started up cyberchef to get the answer, so don't overcomplicate it
[19:03:47] <maroon> 2fish was one of the candidates that didn't win the contest to become AES
[19:04:17] <ms7821> maybe also have a look at an ASCII chart to understand how "From Hex" works
[19:04:29] <Dixcy> ms7821: give me the clue what you used ? :D
[19:04:40] <wasamasa> I've used a ruby shell
[19:04:42] <ms7821> what I've just said is absolutely more than enough of a clue
[19:04:54] <ms7821> particularly the bit about an ascii chart
[19:04:59] <wasamasa> a little bit of programming skill really helps here
[19:05:16] <wasamasa> knowing cryptography basics, too
[19:05:18] <Dixcy> wasamasa: ruby shell , what to use metasploit instead :D
[19:06:15] <wasamasa> I'm a bit sad that the only thing you associate with my words is metasploit, but ok
[19:06:52] <iz> script kiddie generation :/
[19:07:01] <Dixcy> metasploit use ruby gems thats why i associate this
[19:07:16] <iz> where's the thing i find with google then plug these values in and it gives me the answer?!?!
[19:07:22] <wasamasa> I might have said python and it wouldn't have made any difference
[19:07:44] <wasamasa> or JS or whatever
[19:07:50] <piou> Dixcy: when faced with a ciphertext that you must decrypt and know nothing about one of the first things to do is look at its length (because many algorithms work by blocks of 16 or 32 bytes so any length that isn't a multiple of that eliminates these possibilities) and its "randomness". Good encryption should look very random because there shouldn't be any relation between parts of the message,
[19:07:56] <piou> so every byte should look like a random number between 0 and 255. Twofish is a modern cipher and it would provide such random-looking ciphertext. The ciphertext you have contains waaaay too much ascii characters to be random, the end alone shows much repetitions. It is therefore extremely unlikely that a modern cipher is used. Which leaves things like ceasar ciphers etc.
[19:11:02] <wasamasa> I threw ciphey at this and it's hanging, lol
[19:11:15] <wasamasa> that may be proof it's indeed not encoding
[19:11:17] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[19:13:34] <maroon> "35 28 2e 2f 1e" appears twice in the string, very unlikely to be a modern ciphertext
[19:15:57] <Dixcy> ms7821: why you do the job for 15sec in cyberchief did you get a readable text for output in the end ? 
[19:16:02] *** Quits: Guest95 (~Guest95@h83-209-100-173.cust.a3fiber.se) (Quit: Client closed)
[19:16:17] <Dixcy> i tried this also https://www.dcode.fr/ascii-code
[19:16:25] *** Joins: yeirr (~yeirr@user/yeirr)
[19:16:44] <ms7821> Dixcy: yes
[19:16:58] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[19:17:01] <ms7821> to reiterate, the only components I used were "From Hex" and "XOR"
[19:17:25] *** Joins: kish` (~aqua@user/aqua)
[19:17:36] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 245 seconds)
[19:17:53] <ms7821> "From Hex" does the same as dcode.fr, but it's not sufficient on its own
[19:17:58] <piou> Dixcy: it's really hard to give more details without spoiling the solution
[19:18:11] <piou> which also means you're pretty close I guess
[19:18:59] <Dixcy> this would be a child game for guys like you and pretty simple but not for me like i said several times not fammiliar with this kind stuff :)
[19:19:26] <wasamasa> so get familiar with it
[19:19:28] <ms7821> if you're not familiar with how computer encode data in ASCII, or what XOR does and how XOR ciphers work, google those things
[19:19:30] <piou> Dixcy: it's alright, take your time, that's part of the process
[19:19:32] <wasamasa> learn some cryptography basics
[19:20:13] <Dixcy> maybe i will learn, but my job is different this is for educational purpose
[19:20:31] <maroon> ok i solved it
[19:20:49] <Dixcy> nice
[19:25:07] <Dixcy> Please tell me that i solved it too ?
[19:25:08] <Dixcy> Data is not a valid byteArray: [0,null,null,null,null...
[19:25:11] <Dixcy> ?
[19:27:26] <Dixcy> nope
[19:27:29] <Dixcy> ;(  xd
[19:30:06] *** Joins: Pythayr (~pither195@76-214-97-148.lightspeed.dybhfl.sbcglobal.net)
[19:30:40] *** Quits: WishBoy (~WishBoy@user/wishboy) (Ping timeout: 252 seconds)
[19:32:14] <ioxzev1z> Did he paste the ciphertext somewhere?
[19:32:41] <ioxzev1z> oic he said above the entire line
[19:33:17] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Remote host closed the connection)
[19:33:26] <piou> Dixcy: you'll definitely see it when you solve it
[19:38:48] <Dixcy> pio: It tells me that the data aray its not valid, i thought that is geeky messege :D
[19:39:24] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[19:39:45] *** Joins: yeirr (~yeirr@user/yeirr)
[19:39:46] <Dixcy> used all possible options from Hex and Xor and still get non sense :P
[19:40:19] <ms7821> are you still getting "Data is not a valid byteArray"?
[19:40:52] <Dixcy> in xor did you input any key ?
[19:41:16] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[19:41:37] *** Joins: defiant (~defiant@user/defiant)
[19:41:51] <ms7821> yes, you need to find a value to XOR it with
[19:42:08] <piou> Dixcy: I guess that's the point where you should step away from pure guess and learn a bit more about cryptography and common simple ciphers
[19:42:08] <ms7821> again, if you don't know what an XOR cipher does, see https://en.wikipedia.org/wiki/XOR_cipher
[19:42:53] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:43:06] <Dixcy> yes i dont know
[19:43:26] <Dixcy> heres the irony i was able to decrypt blowfish key but cant do this simple shit :D
[19:44:56] <ms7821> I'm not sure it's exactly simple shit, but it's fundamental shit
[19:45:13] <ms7821> if you don't understand it, you'll have an incomplete understanding of everything that builds on top of it
[19:45:15] <Dixcy> im need to start research again from the scratch
[19:45:19] <ms7821> good plan
[19:45:26] <Dixcy> ok by3 need to good thanks to all 
[19:45:36] *** Parts: Dixcy (~Dixcy@user/dixcy) ()
[19:46:14] <maroon> so that explains why he thought it was 2fish
[19:47:46] *** Joins: yeirr (~yeirr@user/yeirr)
[19:48:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:49:43] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[19:50:42] <iz> he still never figured out that decrypting with a key is different than decrypting without a key
[19:51:08] *** Quits: aleck1 (~aleck@user/aleck) (Quit: Leaving)
[19:51:45] *** Quits: poopster (poopster@shell.xshellz.com) (Changing host)
[19:51:45] *** Joins: poopster (poopster@user/poopster)
[19:59:24] *** Joins: monkey_ (~user@181.114.17.106)
[20:00:25] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 260 seconds)
[20:02:01] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 265 seconds)
[20:06:06] *** Joins: yeirr (~yeirr@user/yeirr)
[20:06:57] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[20:12:11] *** Joins: szarkaorg (~szarka@2001-48F8-9004-E05-C108-6FE4-FD19-AEE1-dynamic.midco.net)
[20:14:20] *** Joins: kish` (~aqua@user/aqua)
[20:15:25] *** Quits: szarkanet (~szarka@2001-48F8-9004-E05-9929-CE5A-98C9-1331-dynamic.midco.net) (Ping timeout: 250 seconds)
[20:18:49] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[20:19:11] *** Joins: yeirr (~yeirr@user/yeirr)
[20:20:56] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:43:20] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Quit: Leaving)
[20:49:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:50:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:50:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:52:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:54:46] *** Quits: JvD (~jvd@kpa15.kuuskaista.fi) (Ping timeout: 252 seconds)
[20:55:00] *** Joins: JvD (~jvd@kpa15.kuuskaista.fi)
[20:59:38] *** Joins: Moonlight (~Moonlight@64.253.17.181)
[21:02:07] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:08:16] *** Joins: aleck (~aleck@user/aleck)
[21:10:22] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[21:15:35] *** Quits: CryptoClub (~fafs@137.101.242.135) (Read error: Connection reset by peer)
[21:19:07] *** Joins: CryptoClub (~fafs@137.101.242.135)
[21:27:17] <ioxzev1z> Not sure he even understands the word "key"
[21:28:03] *** Joins: aleck1 (~aleck@user/aleck)
[21:28:46] <ericonr> maroon: did I miss something? what explains thinking it was 2fish?
[21:29:30] *** Quits: Moonlight (~Moonlight@64.253.17.181) (Ping timeout: 265 seconds)
[21:30:57] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 265 seconds)
[21:35:46] <Alipha> ericonr: a previous puzzle apparently involved 2fish, so that must mean all puzzles involve 2fish!
[21:40:53] *** Joins: mikeliuk (~mikeliuk@213.205.198.201)
[21:41:56] <ericonr> ah, I see
[21:42:04] <ericonr> that unfortunately makes sense
[21:45:00] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[21:51:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[21:51:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[21:52:36] *** Joins: zro (~zro@user/zro)
[21:53:24] *** Quits: felco (~felco@user/felco) (Quit: ZNC 1.8.2 - https://znc.in)
[21:54:48] *** Joins: rasta (~rasta@user/felco)
[21:55:02] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[22:01:46] *** Quits: wasamasa (~wasamasa@chicken/contributor/wasamasa) (Ping timeout: 245 seconds)
[22:01:46] *** Joins: wasa (~wasamasa@chicken/contributor/wasamasa)
[22:02:37] *** Quits: mikeliuk (~mikeliuk@213.205.198.201) (Quit: Connection closed)
[22:16:43] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[22:17:19] *** Joins: river (~river@tilde.team/user/river)
[22:18:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[22:36:46] *** Quits: Luke (~ldm@hacksoc/member) (Ping timeout: 245 seconds)
[22:37:03] *** Joins: Luke (~ldm@hacksoc/member)
[22:37:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[22:37:34] <Alipha> So, does anyone know what would happen if you initially caused a sha1 collision in git? Either creating a commit with the same hash as another or having two object refs have the same hash?
[22:38:01] <Alipha> s/initially/intentionally/
[22:40:59] *** Quits: mei6 (~mei@user/mei) (Read error: Connection reset by peer)
[22:44:13] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 252 seconds)
[22:46:18] <iz> try it out, w/ a debugger.. just overwrite the returned hash w/ the same value the time you want to intentionally do it
[22:49:22] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[22:51:14] <danieldg> Alipha: fyi, this was discussed in some detail on the git mailing lists when the sha1 collision paper was published (and again when the sample collision was produced)
[22:51:27] <danieldg> iirc first one seen wins
[22:52:03] <danieldg> also for testing you need to find an older git that doesn't try to detect this
[22:54:07] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 252 seconds)
[22:59:52] *** Joins: signop (~signop@li699-102.members.linode.com)
[23:00:05] *** Quits: signop_ (~signop@li699-102.members.linode.com) (Ping timeout: 250 seconds)
[23:04:08] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[23:04:25] *** Joins: kish` (~aqua@user/aqua)
[23:08:25] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[23:11:21] *** Joins: RickSanchez (~RickSanch@2607:fb90:ba8a:f0de:7d39:56ae:9527:6465)
[23:11:38] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[23:13:49] *** Joins: jab416171 (~jab416171@c-67-161-208-101.hsd1.ut.comcast.net)
[23:13:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[23:14:06] *** Joins: monkey_ (~user@181.114.17.106)
[23:16:57] *** Quits: RickSanchez (~RickSanch@2607:fb90:ba8a:f0de:7d39:56ae:9527:6465) (Ping timeout: 265 seconds)
[23:17:11] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[23:27:04] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:27:14] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[23:32:08] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[23:33:43] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 252 seconds)
[23:41:38] <rk4> reminds me... https://www.mercurial-scm.org/wiki/SHA1TransitionPlan has a 'Feedback from git people' which was interesting to me for some reason
[23:47:42] *** Joins: kish` (~aqua@user/aqua)
[23:48:50] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[23:50:25] *** Joins: kish` (~aqua@user/aqua)
[23:52:47] *** Joins: Torr (~Torr@user/torr)
[23:57:59] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[23:58:30] *** Joins: kish` (~aqua@user/aqua)
