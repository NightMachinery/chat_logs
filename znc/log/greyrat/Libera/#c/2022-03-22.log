[01:00:26] *** Joins: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a)
[01:00:29] <Intelo> apotheon ruby is dying and slow (is what I heard). True?
[01:00:33] <apotheon> no, not APL
[01:00:47] <apotheon> Ruby is plenty fast for general webdev and it's not dying.
[01:02:00] <Intelo> ok
[01:02:00] <apotheon> APL uses math symbols in its syntax which basically requires either a whole new skillset with a whole new dev environment to type code or a shit-ton of annoyance.
[01:02:17] <apotheon> Mostly, the bottleneck in webdev is data transfer.
[01:02:35] <Intelo> right but APL is so short
[01:02:38] <apotheon> The second biggest is probably just shitty code.
[01:02:42] <Intelo> and short is more maintainable? true?
[01:02:51] <apotheon> depends on why it's short
[01:02:59] <Intelo> ahan? why is it?
[01:03:46] <apotheon> If it's short because you have to handcraft a religious totem for every character, but each character is equivalent to a word in another language, you still end up wasting a whole lot of time on code that you could've saved by just using a normal keyboard.
[01:04:16] <apotheon> anyway, this is still a C channel, not some "any language but C" channel
[01:04:29] <Intelo> apotheon I see
[01:04:46] <Intelo> apotheon  in that case haskel is closest to APL and still shortest and elaborative
[01:04:48] <Intelo> correct?
[01:05:08] <apotheon> Haskell is not generally suitable for OS dev.
[01:05:17] <Intelo> apotheon I wonder why you didn't mentioend rust while everyone else is
[01:05:24] *** Quits: bolodgad (~bolodgad@user/bolodgad) (Quit: Leaving)
[01:05:31] <apotheon> 13:25 < apotheon> err, maybe Go and Rust, respectively, but . . . this is a C channel
[01:05:47] <Intelo> apotheon oh I missed... dam
[01:05:49] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[01:05:49] <apotheon> I think Rust has some limitations that make it unsuitable for parts of a proper OS, though.
[01:06:02] <Intelo> like?
[01:06:10] <apotheon> like runtime stuff
[01:06:35] <Intelo> oh no. I didn't missed. I forgot. short term memory loss
[01:06:54] <apotheon> I might be mistaken, but my impression is that there is very low-level stuff that you can do with a minimum of fuss in C but ends up with Rust being a bit heavy and less fine-grained.
[01:06:55] <Intelo> ok so Go is ok for web?
[01:07:01] <apotheon> kinda
[01:07:06] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[01:07:21] <apotheon> Ruby's still generally better for the web, but at least Go should mostly beat the crap out of JVM stuff.
[01:07:33] <Intelo> so Go replaces JS?
[01:07:39] <apotheon> not at all
[01:07:39] *** Joins: wyre (~wyre@user/wyre)
[01:07:58] <apotheon> JS is available for client-side dev.  Nothing you mentioned is good for that.
[01:08:06] <Intelo> oh ok
[01:08:07] <apotheon> s/dev/webdev/
[01:08:15] <Intelo> so nothing can replace JS?
[01:08:19] <duds-> why is Ruby better for the web?
[01:08:33] <apotheon> not until you can get client-side web capability in some other language
[01:08:37] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 240 seconds)
[01:08:46] <duds-> Dart was supposed to be that other language...
[01:08:59] <apotheon> JS runs in the browser.  It's basically the only language that does.  Some stuff involving WebAssembly is working around that, but it's not quite 100% yet.
[01:09:10] <apotheon> duds-: Yeah, but Google has commitment issues.
[01:09:19] <duds-> yeah.........
[01:09:31] <apotheon> duds-: Ruby is highly expressive, has an awesome ecosystem, and comes with great webdev tools.
[01:09:34] <apotheon> I also enjoy Ruby a lot.
[01:09:48] <duds-> i want to learn it one day :3
[01:09:49] <Intelo> apotheon once wasm is there, no need for JS/
[01:09:55] <apotheon> maaaaaaaybe
[01:10:06] <Intelo> then how to getElementById?
[01:10:21] <apotheon> duds-: Are you brand new to coding, or already a programmer who's thinking of learning Ruby, or what?
[01:10:48] <apotheon> Intelo: How you'd do something like getElementById via WebAssembly depends on what language you're using.
[01:11:16] <apotheon> I haven't actually done anything with WebAssembly, by the way.  I just know something about the ideas behind it.
[01:11:36] <duds-> apotheon, i am learning C as my first language (at this point i am about to read some C++ too because this project i want to work on uses C++ for containers (idk what those are yet even))
[01:12:01] <duds-> (and i am pretty far into the C book i read already)
[01:12:45] <apotheon> duds-: Ah.  My recommendation is that, if you are happy to keep learning C and C++, you stick with that for a couple years before getting too into another language.  If you switch languages too much early on, you may end up learning only the same beginner basics over and over again in several languages, rather than really learning more programming over the whole time.
[01:13:11] <duds-> yep, that's how i've felt, and why i put it off for "one day"
[01:13:26] <apotheon> duds-: Once you've actually learned to program reasonably well as an advanced beginner and can write your own programs from scratch to do useful things, then think about learning another language.
[01:13:38] <duds-> very well ヽ(´ー｀)ノ
[01:13:57] <Intelo> so it is possible to almost completely replace JS with WASM?
[01:14:14] <apotheon> If you want to learn Ruby after you've got a decent grasp of programming, then pick up an ebook copy of Eloquent Ruby.
[01:14:32] <apotheon> It's the best book I've seen for learning to hit the ground running in a new (to you) language.
[01:14:37] <duds-> thanks for the rec!
[01:14:41] <apotheon> Intelo: maybe
[01:14:44] <apotheon> duds-: welcome
[01:15:11] <Intelo> apotheon then no one needs to use JS, all can use the language of their choice. no?
[01:15:23] <apotheon> I think C is a fine language to learn.  I don't know if this will help you, but maybe check out this thing:
[01:15:26] <apotheon> https://chadperrin.com/articles/understand-c/
[01:15:28] <candide> Title of apotheon's link: Chad Perrin
[01:15:33] <apotheon> Intelo: in theory
[01:15:50] <apotheon> duds-: That link was for you, by the way.
[01:16:21] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:32e0:1242:b04b:4f5e)
[01:16:32] <duds-> checking, thank u ( ´ω`)
[01:17:05] <apotheon> glad to help
[01:17:52] <Intelo> apotheon how much practical is that theory as of now?
[01:17:59] <apotheon> I'm headed off for a walk soon.
[01:18:05] <apotheon> Intelo: good question; dunno
[01:18:12] <apotheon> I haven't used WebAssembly, as I said.
[01:18:33] <Intelo> ok thanks
[01:19:59] *** Joins: ioxzev1z_ (~ioxzev1z@user/ioxzev1z)
[01:20:23] *** Quits: ioxzev1z_ (~ioxzev1z@user/ioxzev1z) (Client Quit)
[01:22:48] *** Joins: foul_owl (~kerry@174-21-69-110.tukw.qwest.net)
[01:24:33] *** Joins: strajder (~strajder@user/strajder)
[01:25:41] *** Quits: mahmutov (~mahmutov@5.176.42.41) (Ping timeout: 268 seconds)
[01:31:29] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.14)
[01:31:32] *** Quits: marderII1 (~MarderIII@86.88.74.111) (Ping timeout: 240 seconds)
[01:31:32] *** Quits: marderIII (~MarderIII@86.88.74.111) (Ping timeout: 240 seconds)
[01:32:36] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[01:34:12] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:32e0:1242:b04b:4f5e) (Ping timeout: 240 seconds)
[01:34:14] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[01:34:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[01:35:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:35:32] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.14) (Ping timeout: 240 seconds)
[01:35:33] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[01:36:00] *** Joins: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl)
[01:36:35] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 252 seconds)
[01:38:39] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 250 seconds)
[01:39:46] *** Quits: mzxtuelkl__ (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 260 seconds)
[01:40:55] *** Joins: pert (~pert@fsf/member/pert)
[01:43:54] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[01:44:09] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[01:45:11] <pert> does anyone know of a C library for compiling and executing C code besides libtcc, preferably a portable/compiler-agnostic one? unfortunately there's no widely implemented compiler-agnostic way to build a shared library to be dlopen'ed for example (POSIX Issue 8's -G option is not yet widely implemented), and something that could cope with the abnormalities of various compilers would be nice. perhaps I'll just have to lever
[01:45:14] <pert> age a build system which, however, seems like overkill to achieve portable just-in-time compilation
[01:45:50] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[01:47:14] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[01:48:32] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[01:49:51] *** Joins: mahmutov (~mahmutov@5.176.17.188)
[01:50:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:51:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[01:51:38] *** Joins: kleiner (uid540109@id-540109.uxbridge.irccloud.com)
[01:54:32] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:57:02] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Quit: Stay safe!)
[01:57:13] <ioxzev1z> You're looking for a C compiler that compiles C code?
[01:58:28] <pert> except I don't think a user of my application should have to install any *particular* compiler, I'm concerned about portability
[01:59:09] <pert> so I'm wondering if there exists a library that lets one invoke potentially many compilers and either let you access objects directly, or at least give output you can dlopen() on
[01:59:32] *** Joins: seninha (~seninha@user/seninha)
[01:59:43] <ioxzev1z> Isn't that a little like expecting the user to run perl without a particular perl interpretter?
[01:59:56] <ioxzev1z> I
[02:00:08] <ioxzev1z> I'm like 99% sure anyone compiling C can find the correct compiler
[02:00:57] *** Joins: Maksim (~weechat@185.158.178.9)
[02:01:23] <pert> I don't know much about Perl, but do Perl programs really require a particular interpreter, or shouldn't they work with any interpreter that understands the language?
[02:01:55] <ioxzev1z> They do, much like compiling portable C code with any compiler
[02:02:18] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:02:32] <ioxzev1z> I don't think the compiler matters wrt portability more than writing actually portable code.
[02:02:55] <ioxzev1z> I don't see any reason why, if you write portable code, gcc and clang cannot both compile it just fine, for example.
[02:03:08] <rcf> pert: if you've got dlopen(), you've almost certainly got a compiler in the form of cc.
[02:03:36] <pert> but some compilers may not understand the -shared option for building a shared library suitable for use with dlopen(): -shared is not in any standard.
[02:04:30] <ioxzev1z> pert, in that case, you might need to suggest to the user that they compile your code with a compiler that supports the -shared option
[02:04:50] <ioxzev1z> pert, by your logic you should be writing C89 because some obscure/unused compiler doesn't support C99
[02:05:09] <rcf> Historically that is an entirely-valid argument.
[02:05:10] <pert> perhaps the answer I need to be content with is using a build system (like Meson) that is already knowledgable about how to invoke various compilers, and maybe someday I can use 'c99/c17 -G' option when that's widely implemented.
[02:05:41] <ioxzev1z> Given gcc and clang, flip a coin and, given the result, use the one you get.
[02:05:50] <pert> your C89 analogy makes sense: why would a decent compiler not support -shared? that puts me at ease
[02:11:09] <SaltHilStroller_> Perhaps wrong channel. But I'm getting a kernel panic with the message: `Data abort in user mode.
[02:11:09] <SaltHilStroller_> Alignment (dfsr=0x00000801) on write to 0x500c26b6`. The part about alignment is what I'm curious about. I'm assuming I have some HW limitation of only performing byte aligned reads. In that case, how can I have a packed struct?
[02:11:10] *** Quits: alch (~alch@151.36.182.79) (Read error: Connection reset by peer)
[02:13:36] <ioxzev1z> struct foo { ... } __attribute__((packed));
[02:15:15] *** Joins: alch (~alch@151.36.167.253)
[02:16:00] <SaltHilStroller_> ioxzev1z: Okay, yes. But then, if I have a misaligned member, how can I write to it? As it seems writing on a non-aligned address causes a panic
[02:16:20] <ioxzev1z> I actually have no clue, never encountered that before
[02:18:37] <fizzie> If your implementation supports packed structs, and targets a system with strict alignment restrictions, it usually also knows how to generate suitable code for reading fields of that struct.
[02:18:53] <fizzie> Such as doing two aligned reads and combining the results of them.
[02:20:02] <fizzie> (Which can go wrong if you take the address of a member; that's why there's usually a warning about that.)
[02:20:44] <fizzie> ,cc struct foo { char c; int i; } __attribute__ ((packed)); struct foo x = {1, 2}; int *p = &x.i; printf("%d", *p); // should warn
[02:20:46] <candide> fizzie: [warning: taking address of packed member of 'struct foo' may result in an unaligned pointer value [-Waddress-of-packed-member]] 2
[02:21:35] *** Quits: mahmutov (~mahmutov@5.176.17.188) (Ping timeout: 256 seconds)
[02:22:13] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[02:24:10] <fizzie> But if you actually do `x.i = 123;` the compiler's supposed to do whatever's necessary to make it work. In the case of a write, that might imply two reads and two writes, even. Or just doing it with a special unaligned write instruction, or a write-byte one. As happens here: https://gcc.godbolt.org/z/oTjKhdbYr
[02:25:02] <SaltHilStroller_> fizzie: ahah, I am taking the address of a packed member. No warning though interestingly
[02:26:10] <fizzie> Curious. At least on GCC, I think that's enabled by default. (The reason why I think that is that the documentation says: "This is enabled by default.")
[02:26:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:27:11] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 250 seconds)
[02:28:37] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:3473:e0f9:d8:6df3) (Ping timeout: 240 seconds)
[02:29:09] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[02:29:25] *** Joins: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e)
[02:31:20] <SaltHilStroller_> Very strange
[02:32:33] <SaltHilStroller_> It was a packed struct with an array of structs, and I was attemping to set the value of an int in the array. Perhaps it was nested enough to not detect it ...
[02:32:42] *** Joins: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net)
[02:32:44] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:98a8:5b40:1f3d:c925)
[02:32:56] *** Quits: oriba (~oriba@dynamic-089-014-152-127.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:33:19] *** Joins: deflected (~deflected@user/deflected)
[02:33:31] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[02:34:23] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[02:34:37] *** Joins: JanC (~janc@user/janc)
[02:35:27] *** Joins: kurahaupo (~kurahaupo@pa49-197-231-226.pa.qld.optusnet.com.au)
[02:35:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[02:36:36] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:36:46] *** Joins: noteness (~noteness@user/noteness)
[02:48:28] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:cd00:568b:6ca3:f1ed)
[02:49:21] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[02:51:34] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:51:39] *** Joins: Atque (~Atque@user/atque)
[02:53:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:55:25] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[02:55:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[02:55:52] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Remote host closed the connection)
[02:56:04] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[02:56:06] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[02:56:34] *** Joins: moog__ (~moog@98.97.82.161)
[02:59:00] *** Quits: moog_ (~moog@107.126.53.83) (Ping timeout: 240 seconds)
[03:02:23] *** Quits: Intelo (~Intelo@user/Intelo) (Quit: Client closed)
[03:02:24] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:fcf3:f901:1aa2:b0bf)
[03:04:00] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[03:05:15] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[03:05:17] *** Joins: Enitin (~Enitin@82.180.145.230)
[03:05:51] *** Joins: Torr (~Torr@user/torr)
[03:07:58] *** Quits: adip (~adip@aeja124.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[03:12:15] *** Quits: pgib (~textual@173.38.117.89) (Ping timeout: 256 seconds)
[03:13:15] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net)
[03:14:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:14:29] *** Quits: Briann (~Brianboru@177.12.221.56) (Ping timeout: 252 seconds)
[03:16:03] *** Joins: moose (~moose@user/moose)
[03:17:26] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net) (Ping timeout: 245 seconds)
[03:17:27] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[03:18:31] *** Joins: ferdna (~ferdna@user/ferdna)
[03:20:39] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[03:23:05] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:24:23] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:25:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[03:27:00] *** Joins: HP55555 (~HP51248@49.205.103.133)
[03:29:15] *** Quits: Akuli (~Akuli@213.216.208.2) (Quit: Akuli)
[03:29:33] *** Joins: korg815 (~korg815@user/korg815)
[03:31:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[03:32:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:32:38] *** Quits: pizdets_ (~pizdets@183.182.114.133) (Ping timeout: 252 seconds)
[03:33:58] *** Joins: pizdets (~pizdets@183.182.115.102)
[03:34:55] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[03:37:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[03:37:21] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:98a8:5b40:1f3d:c925) (Quit: Client closed)
[03:37:39] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:37:50] *** Joins: monkey_ (~user@190.104.116.153)
[03:44:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[03:45:41] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 256 seconds)
[03:47:19] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[03:48:31] *** Joins: korg815 (~korg815@user/korg815)
[03:48:39] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 250 seconds)
[03:52:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:52:43] *** Quits: pert (~pert@fsf/member/pert) (Read error: Connection reset by peer)
[03:52:59] *** Joins: pert (~pert@fsf/member/pert)
[03:53:32] *** Quits: pert (~pert@fsf/member/pert) (Remote host closed the connection)
[03:56:11] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:59:16] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:59:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:01:14] *** Quits: HP55555 (~HP51248@49.205.103.133) (Ping timeout: 252 seconds)
[04:01:15] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 252 seconds)
[04:03:08] *** Joins: Xgc (~Xgc@user/xgc)
[04:07:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[04:08:36] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[04:08:40] *** Joins: noteness (~noteness@user/noteness)
[04:10:17] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[04:11:09] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:11:15] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Client Quit)
[04:11:37] *** Joins: hub (~hub@user/hub)
[04:13:24] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:14:27] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[04:19:48] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:964:33b9:5b34:486d)
[04:19:48] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:964:33b9:5b34:486d) (Changing host)
[04:19:48] *** Joins: skapata (~Skapata@user/skapata)
[04:25:30] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Read error: Connection reset by peer)
[04:29:54] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[04:33:33] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[04:33:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[04:35:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:36:07] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[04:36:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:37:47] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:38:55] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[04:39:15] *** phaisedArray is now known as phaise
[04:40:38] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[04:42:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[04:43:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[04:46:02] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Ping timeout: 240 seconds)
[04:48:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:50:37] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Ping timeout: 256 seconds)
[04:53:12] *** Joins: lureevar (~lureevar@2804:d45:477e:f300:9067:d28f:c8b4:79db)
[04:54:49] *** Quits: lureevar (~lureevar@2804:d45:477e:f300:9067:d28f:c8b4:79db) (Client Quit)
[04:56:14] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 260 seconds)
[04:57:26] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[04:57:34] *** Guest4440 is now known as Stink
[04:58:07] *** Joins: korg815 (~korg815@user/korg815)
[05:02:19] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:fcf3:f901:1aa2:b0bf) (Quit: Leaving)
[05:03:37] *** Quits: foul_owl (~kerry@174-21-69-110.tukw.qwest.net) (Ping timeout: 240 seconds)
[05:06:03] *** Joins: Akiva (~Akiva@user/Akiva)
[05:09:01] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[05:09:42] *** Joins: random-nick (~random-ni@87.116.167.125)
[05:11:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:14:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 252 seconds)
[05:17:55] *** Joins: foul_owl (~kerry@23.82.193.88)
[05:18:49] *** Parts: nosolls (~nosollsma@user/nosolls) ()
[05:22:55] *** Joins: HP55555 (~HP51248@49.205.103.133)
[05:23:58] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:26:44] *** Quits: moog__ (~moog@98.97.82.161) (Remote host closed the connection)
[05:26:46] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:26:58] *** Joins: moog (~moog@98.97.82.161)
[05:27:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[05:27:19] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[05:29:06] *** Joins: Wulf (~Wulf@user/wulf)
[05:29:57] *** Quits: X-Scale (~ARM@46.50.5.55) (Ping timeout: 256 seconds)
[05:29:57] *** X-Scale` is now known as X-Scale
[05:30:30] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:31:26] *** Quits: moog (~moog@98.97.82.161) (Ping timeout: 252 seconds)
[05:31:30] *** Joins: moog_ (~moog@98.97.82.161)
[05:32:07] *** Joins: quartz (~quartz@user/quartz)
[05:33:06] *** Joins: moog__ (~moog@107.126.53.83)
[05:36:11] *** Quits: moog_ (~moog@98.97.82.161) (Ping timeout: 256 seconds)
[05:36:32] *** Quits: quartz (~quartz@user/quartz) (Client Quit)
[05:36:43] *** Joins: quartz (~quartz@user/quartz)
[05:40:09] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[05:40:13] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[05:41:01] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[05:41:26] *** Quits: Techcable (~Techcable@168.235.93.147) (Changing host)
[05:41:26] *** Joins: Techcable (~Techcable@user/Techcable)
[05:43:29] *** Joins: X-Scale` (~ARM@89.214.146.25)
[05:44:50] *** Joins: kaichiuchi (uid547644@id-547644.uxbridge.irccloud.com)
[05:45:34] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[05:45:50] *** X-Scale` is now known as X-Scale
[05:49:33] *** Joins: moog_ (~moog@98.97.82.161)
[05:49:58] *** Quits: kaichiuchi (uid547644@id-547644.uxbridge.irccloud.com) (Changing host)
[05:49:58] *** Joins: kaichiuchi (uid547644@user/kaichiuchi)
[05:51:57] *** Quits: moog__ (~moog@107.126.53.83) (Ping timeout: 250 seconds)
[05:53:00] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[05:55:05] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[05:57:17] *** Quits: HP55555 (~HP51248@49.205.103.133) (Ping timeout: 252 seconds)
[05:58:47] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:02:04] *** Joins: seninha (~seninha@user/seninha)
[06:04:41] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:04:55] *** Joins: seninha_ (~seninha@user/seninha)
[06:07:18] *** Quits: seninha_ (~seninha@user/seninha) (Remote host closed the connection)
[06:07:32] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[06:07:51] *** Joins: seninha_ (~seninha@user/seninha)
[06:09:22] *** Joins: Satin (uid193953@user/Seten)
[06:10:13] *** Quits: seninha_ (~seninha@user/seninha) (Remote host closed the connection)
[06:11:42] *** Joins: seninha (~seninha@user/seninha)
[06:11:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:12:52] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:13:00] *** Joins: Torr (~Torr@user/torr)
[06:13:05] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[06:13:18] *** Joins: Torr (~Torr@user/torr)
[06:13:35] *** Quits: alch (~alch@151.36.167.253) (Ping timeout: 256 seconds)
[06:13:50] *** Quits: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:15:33] *** Joins: alch (~alch@151.38.160.75)
[06:29:18] *** Joins: dacav (~dacav@h94-245-9-200.cust.a3fiber.se)
[06:30:00] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:30:28] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[06:31:14] <Crocodillian> Hi, is it valid in C to declare an "unsigned int" as just "unsigned"?
[06:32:03] <Crocodillian> it works but I don't trust MSVC for C code
[06:32:47] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[06:34:06] <fizzie> It is.
[06:34:17] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:34:28] <Crocodillian> Wonderful, thank you.
[06:35:01] *** Joins: vysn (~vysn@user/vysn)
[06:35:23] <fizzie> C11 6.7.2p2 & p5 to quote chapter & verse.
[06:36:55] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[06:36:56] *** Joins: Matt|home (~matt@adsl-74-233-58-210.mia.bellsouth.net)
[06:39:40] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[06:43:23] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[06:52:50] *** Joins: p0g0_ (~p0g0@user/p0g0)
[06:54:30] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 252 seconds)
[06:55:17] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:55:36] *** Quits: p0g0 (~p0g0@user/p0g0) (Ping timeout: 252 seconds)
[06:59:19] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:59:19] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:59:19] *** Joins: wroathe (~wroathe@user/wroathe)
[07:12:30] *** Joins: Phandal (~Phandal@user/phandal)
[07:13:25] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net)
[07:17:48] *** Joins: Inline__ (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de)
[07:19:48] *** Joins: zer0x_ (~zer0x@42.113.144.44)
[07:19:48] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 240 seconds)
[07:19:56] *** Quits: Inline (~Inline@p200300cd4709f600befffe6df48235ec.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:20:37] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net) (Ping timeout: 240 seconds)
[07:21:13] <quartz> Hello. I'm trying to implement a simple program that reads from a database using this simple linked list api: https://bpa.st/63JA  I'm suppose to read in each entry of the database using addAfter() function at line 73. I'm just confused on what to pass in for "prevNode" parameter during the first call of addAfter()
[07:21:50] <quartz> The databse is essentially a long linked list of char pointers that are 40 bytes each.
[07:22:03] <quartz> This is what I have so far: https://bpa.st/WOAQ
[07:22:54] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[07:22:57] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 250 seconds)
[07:23:12] <quartz> Oh maybe I just need to pass in popFront()?
[07:23:29] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:24:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:31:36] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[07:33:09] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:34:03] *** Quits: banc (~banc@217.138.195.27) (Ping timeout: 256 seconds)
[07:35:15] <Crocodillian> quartz: the parent of the parent node is NULL
[07:37:58] <quartz> Crocodillian: They did something like this:         node = addAfter(&list, node, data);
[07:38:07] <quartz> Fancy one liner I guess
[07:39:58] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[07:40:48] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[07:40:49] *** Joins: Norkle_ (~norkle@admin.nasa-g0v.com)
[07:40:49] *** Joins: Djoobstil_ (~djoobstil@djoobstil.online)
[07:40:51] *** Quits: Ragnor (~Ragnor@user/ragnor) (Killed (NickServ (GHOST command used by Ragnor_!~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de)))
[07:40:54] *** Joins: smlavine__ (~smlavine@sourcehut/user/smlavine)
[07:40:54] *** Joins: gcd_ (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[07:40:56] *** Joins: trenka_ (~ykaliuta@82-181-192-55.bb.dnainternet.fi)
[07:40:58] *** Joins: Ragnor (~Ragnor@user/ragnor)
[07:40:58] *** Joins: Biolunar_ (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[07:41:03] *** Joins: paulo_ (paulo@user/paulo/x-9032687)
[07:41:06] *** Joins: asdflkj1 (~asdflkj@bsdforall.org)
[07:41:12] *** Joins: ra4king1 (~ra4king@roiatalla.com)
[07:41:15] *** Joins: burakcan- (~burakcank@has.arrived.and.is.ready-to.party)
[07:41:19] *** Joins: kzootick (~contact@kzoo.tech)
[07:41:20] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[07:41:26] *** Joins: merced_ (merced@user/merced)
[07:41:29] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (*.net *.split)
[07:41:29] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[07:41:29] *** Quits: asdflkj_sh (asdflkj@2605:6400:10:fe:bebd:57ba:41a5:636d) (*.net *.split)
[07:41:29] *** Quits: greeter (fresh@2604:180:2:117:cafe:babe:dead:beef) (*.net *.split)
[07:41:29] *** Quits: johnnyre1 (~tth@user/johnnyreb) (*.net *.split)
[07:41:29] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[07:41:29] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[07:41:29] *** Quits: Dotz0cat (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net) (*.net *.split)
[07:41:29] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[07:41:29] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (*.net *.split)
[07:41:29] *** Quits: paulo (paulo@user/paulo/x-9032687) (*.net *.split)
[07:41:29] *** Quits: kplant (~kplant@user/kplant) (*.net *.split)
[07:41:29] *** Quits: kzootech (~contact@kzoo.tech) (*.net *.split)
[07:41:29] *** Quits: merced (merced@user/merced) (*.net *.split)
[07:41:29] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[07:41:29] *** Quits: trenka (~ykaliuta@user/trenka) (*.net *.split)
[07:41:29] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[07:41:29] *** Quits: Djoobstil (~djoobstil@djoobstil.online) (*.net *.split)
[07:41:29] *** Joins: that (fresh@2604:180:2:117:cafe:babe:dead:beef)
[07:41:32] *** Joins: kplant_ (~kplant@user/kplant)
[07:41:33] *** Joins: Dotz0cat_ (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net)
[07:41:36] *** ra4king1 is now known as ra4king
[07:41:43] *** Joins: lawt2 (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[07:42:10] *** Joins: johnnyre1 (~tth@user/johnnyreb)
[07:42:24] *** burakcan- is now known as burakcank
[07:42:27] *** Dotz0cat_ is now known as Dotz0cat
[07:43:16] *** smlavine__ is now known as smlavine
[07:43:43] *** Norkle_ is now known as Norkle
[07:44:10] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[07:45:23] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[07:46:35] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Remote host closed the connection)
[07:48:34] *** Joins: In0perable (~PLAYER_1@fancydata.science)
[07:48:41] *** kzootick is now known as kzootech
[07:49:55] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[07:50:06] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[07:50:07] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[07:50:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[07:50:32] *** Quits: zer0x_ (~zer0x@42.113.144.44) (Ping timeout: 240 seconds)
[07:51:45] *** lukedashjr is now known as luke-jr
[07:51:45] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[07:54:37] *** Quits: Torr (~Torr@user/torr) ()
[07:54:52] *** Joins: banc (~banc@217.138.195.27)
[07:57:00] *** Joins: fe23 (~fe23@2409:8a34:466:6010:a963:e1e:5c0e:2b7a)
[07:58:01] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[08:00:57] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[08:01:14] *** Parts: Phandal (~Phandal@user/phandal) ()
[08:02:02] *** Joins: Phandal (~Phandal@user/phandal)
[08:02:51] *** Joins: raym (~raym@user/raym)
[08:04:51] *** Joins: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa)
[08:04:51] *** Joins: relight (~relight@user/relight)
[08:06:33] *** Joins: Akiva (~Akiva@user/Akiva)
[08:07:25] *** Quits: Techcable (~Techcable@user/Techcable) (Ping timeout: 240 seconds)
[08:07:25] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:f470:9081:bd76:4326) (Ping timeout: 240 seconds)
[08:09:11] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[08:09:15] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[08:09:53] *** Joins: teepee (~teepee@openscad/teepee)
[08:13:15] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[08:13:41] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[08:14:20] *** that is now known as greeter
[08:16:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:17:26] *** Joins: malina (~malina@user/malina)
[08:19:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[08:21:24] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[08:23:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[08:24:22] *** Joins: relight (~relight@user/relight)
[08:26:15] *** Quits: Phandal (~Phandal@user/phandal) (Quit: Phandal)
[08:31:11] *** Joins: raym (~raym@user/raym)
[08:34:31] *** merced_ is now known as merced
[08:36:56] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[08:37:17] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[08:37:41] *** Quits: gcd_ (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[08:38:13] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[08:38:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[08:38:36] *** Quits: Biolunar_ (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 240 seconds)
[08:39:01] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[08:39:26] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[08:39:27] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[08:40:29] *** Joins: raym (~raym@user/raym)
[08:41:07] *** Quits: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e) (Remote host closed the connection)
[08:41:49] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-8902-68c6-ecc8-5f4e.inf6.spectrum.com) (Ping timeout: 256 seconds)
[08:48:58] *** Joins: fossforus (~stan@174.99.70.146)
[08:54:08] *** Joins: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78)
[08:54:28] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[08:55:06] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[08:55:30] *** Quits: LangerJan (~jan@user/langerjan) (Ping timeout: 252 seconds)
[08:55:39] *** Joins: LangerJan (~jan@user/langerjan)
[08:57:30] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[08:58:49] *** Joins: zer0x_ (~zer0x@42.113.144.44)
[08:59:47] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[09:00:48] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:01:11] *** Joins: nicbk (~nicbk@user/nicbk)
[09:01:53] *** Joins: smeso (~smeso@user/smeso)
[09:03:26] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[09:07:39] *** Joins: dansan (~daniel@75.81.148.51)
[09:09:21] *** Joins: Techcable (~Techcable@user/Techcable)
[09:12:06] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Read error: Connection reset by peer)
[09:12:14] *** Joins: Triskelios (~trisk@c-73-253-10-38.hsd1.ma.comcast.net)
[09:13:26] <danielcamiel> Flash Gordon
[09:14:34] *** Quits: Triskelios (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Client Quit)
[09:14:50] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[09:15:04] <malloy> hello, do i need atomic_bool if there's only one thread write it and another thread read?
[09:19:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:20:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[09:20:57] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (Quit: WeeChat 3.3)
[09:21:28] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[09:23:24] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[09:24:37] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[09:25:00] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:25:12] *** Quits: kurahaupo (~kurahaupo@pa49-197-231-226.pa.qld.optusnet.com.au) (Ping timeout: 252 seconds)
[09:25:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:25:30] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:cd00:568b:6ca3:f1ed) (Quit: Quit)
[09:37:08] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (Quit: WeeChat 3.3)
[09:39:50] *** Quits: zer0x_ (~zer0x@42.113.144.44) (Read error: Connection reset by peer)
[09:47:44] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 252 seconds)
[09:48:56] *** Joins: kektagen (~kektagen@kektagen.org)
[09:51:54] *** Joins: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net)
[09:57:51] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[09:59:06] <nitrix> Depends whether the platform has MESI protocol and other details like that for cache consistency.
[09:59:29] <nitrix> Otherwise, two threads scheduled onto different cores wont know about the changes in each others caches.
[10:00:45] *** Joins: angelacrust (~angelacru@223.233.66.159)
[10:01:12] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:02:11] <angelacrust> how do you read the contents of a file line by line in C?
[10:03:07] <Wulf> angelacrust: try fgets in a loop.
[10:03:08] <nitrix> fgets if you know the maximum lengths of the lines, otherwise fread+realloc combo.
[10:03:48] <angelacrust> Right
[10:03:55] <malloy> emm, the reading thread is polling it, so it does not matter only if it's correct finally. i am afraid of that whether it will coredump.
[10:05:02] <nitrix> malloy, It's safe. You just cannot guarantee when the synchronization happens (might be the next mutex, next memory barrier, next atomic, etc).
[10:05:46] <malloy> nitrix: ok, thanks!
[10:06:35] <nitrix> You might also get worse performance than by using atomic, because you're cheating instructions pipelining.
[10:08:47] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[10:10:51] *** Quits: moog_ (~moog@98.97.82.161) (Ping timeout: 252 seconds)
[10:10:57] *** Quits: alch (~alch@151.38.160.75) (Read error: Connection reset by peer)
[10:11:32] <nitrix> Cache coherency will kick in, gain temporal exclusive access, lock access. If it's over page boundaries you completely fuck up the execution...
[10:11:44] <nitrix> Bubbles gets inserted, it's a fucking mess.
[10:12:46] <nitrix> You probably wont notice because the modern computers that are designed to recover from those developer mistakes are also very fast.
[10:13:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 256 seconds)
[10:14:28] *** Joins: toulene (~toulene@user/toulene)
[10:14:36] *** Joins: alch (~alch@151.36.207.244)
[10:15:07] <nitrix> But hey, at least you don't have to use C11, am I right!
[10:19:06] *** Quits: mudzap (~mudzap@2806:107e:f:64c7:945a:364:ecf7:ff43) (Ping timeout: 268 seconds)
[10:20:59] *** Quits: nq (~nq@2a02:2f08:e015:a900:7e72:2af9:f526:1e8f) (Quit: Leaving)
[10:26:18] <angelacrust> https://bpa.st/ZCZQ
[10:26:40] <angelacrust> Is this the correct method?
[10:29:38] *** Joins: kts (~kts@103.73.237.225)
[10:31:50] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[10:32:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:35:23] <Wulf> angelacrust: assuming that no line is actually longer than LENGTH, it looks ok
[10:35:43] <angelacrust> thanks
[10:36:24] <Wulf> angelacrust: if there is such a line, it will appear like multiple lines
[10:36:32] *** Joins: ekathva (~ekathva@2001:999:50:7590:b428:f6a6:94c7:d128)
[10:36:38] <oldlaptop> That may or may not be better than truncation..
[10:36:48] <angelacrust> hmm
[10:37:02] <oldlaptop> If you have POSIX, getline() is a reasonable option.
[10:37:15] <angelacrust> I'm not sure what POSIX is.
[10:37:39] <angelacrust> I did look up the `getline()` function though.
[10:38:32] <oldlaptop> getline() is a library function defined by the POSIX standard, which specifies various things about the programming interface presented by UNIX(TM) (and by extension, and more importantly, non-(TM) unices such as most linuxes, the BSD derivatives, etc.)
[10:39:15] <oldlaptop> it's a fairly recent addition, so in this case "have POSIX" doesn't necessarily mean "running on something that smells unixy"
[10:41:15] <oldlaptop> (getline() is also harder than some things to just copy/paste from a libc that implements it)
[10:41:43] *** Joins: kmuc (~kmuc@109.126.36.28)
[10:45:15] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[10:45:25] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[10:45:32] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[10:48:02] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[10:48:27] *** Joins: malina (~malina@user/malina)
[10:49:51] <rcf> oldlaptop: absurdly-optimized current versions are hard to copy, but the original netbsd implementation is quite concise completely standard C.
[10:50:46] *** Quits: malloy (~jimery@116.30.221.173) (Ping timeout: 265 seconds)
[10:51:09] <angelacrust> Oh.
[10:51:46] <oldlaptop> rcf: I see at least some asserts and so on to either pull out of their headers or elide
[10:52:36] *** Joins: malloy (~jimery@116.30.221.173)
[10:52:40] <angelacrust> Is `getline()` the standard choice of C programmers?
[10:52:41] <caze> angelacrust: Correct for doing what?
[10:52:42] <oldlaptop> and some calls to what I'm guessing (from reading other implementations) are internal functions that know about the structure of struct FILE
[10:52:50] <oldlaptop> (http://cvsweb.netbsd.org/bsdweb.cgi/src/lib/libc/stdio/getdelim.c?rev=1.14&content-type=text/x-cvsweb-markup&only_with_tag=MAIN)
[10:52:56] <candide> Title of oldlaptop's link: src/lib/libc/stdio/getdelim.c - view - 1.14
[10:53:07] <caze> angelacrust: getline isn't standard C.
[10:53:36] <oldlaptop> getline() is a nice luxury if you know the program only needs to support systems that also conform to POSIX.
[10:54:11] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:54:20] <caze> angelacrust: Why line by line?
[10:55:00] <angelacrust> dictionary is assumed to be a file containing a list of lowercase words, one per line
[10:55:23] <caze> angelacrust: What will you do with each word?
[10:55:35] <angelacrust> I will load each word into a hash table
[10:56:31] <caze> angelacrust: What kind of hash table?
[10:56:53] <rcf> oldlaptop: the main version does, but elsewhere in the tree they had a much simpler one that I tend to use when operating on old crap. https://rcf.sdf.org/pb/t/c92a4e83
[10:57:15] <kmuc> you can make a perfect hash table and compile it into your C program using the utility gperf
[10:57:31] <kmuc> https://www.gnu.org/software/gperf/
[10:57:32] *** Joins: crankslider (~slidercra@user/slidercrank)
[10:57:53] <oldlaptop> Aaaah
[10:58:15] <fossforus> angelacrust: personally I'd shove the whole file into one buffer with fread, and just loop through the file delimiting newline by newline
[10:58:20] <fossforus> no need to copy the file line-by-line
[10:58:22] <oldlaptop> so *that's* what 'original' means :)
[10:58:33] <oldlaptop> I was thinking "pretty sure gnu implemented it first..."
[10:58:34] <angelacrust> The keys are the letters of the alphabet. So I have a hash table that contains 26 pointers to a struct node (which is a linked list)
[10:59:15] <caze> angelacrust: So you could actually process each word character by character then.
[10:59:41] <caze> angelacrust: In which case you don't even need a buffer.
[10:59:47] <angelacrust> fossforus hmm, what should be the size of the buffer then?
[10:59:49] <angelacrust> Yeah
[10:59:50] <caze> Well, a buffer of size 1.
[11:00:03] <angelacrust> Yes, but that won't be efficient right?
[11:00:09] <fossforus> angelacrust: you can get it with fseek
[11:00:23] <fossforus> and ftell
[11:00:24] <caze> angelacrust: "Efficient" in what regard?
[11:00:34] <kmuc> angelacrust: have you any experience with AWK?  you know, AWK historically was used for prototyping algorithms similar to what you are doing
[11:00:39] *** Quits: kts (~kts@103.73.237.225) (Ping timeout: 256 seconds)
[11:00:54] *** Quits: malina (~malina@user/malina) (Ping timeout: 252 seconds)
[11:01:02] <fossforus> actually is getline or fseek+ftell+fseek+fread faster?
[11:01:13] <fossforus> if you want to do line by line processing anyways
[11:01:30] <angelacrust> Nope, but I'd learn about that for sure kmuc
[11:01:38] <nomagno> Getline might have optimizations
[11:02:13] <fossforus> or possibly getdelim with null
[11:02:24] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[11:03:45] <fossforus> you could also batch fread until you find the EOF
[11:04:37] *** Joins: Techcable (~Techcable@user/Techcable)
[11:04:45] <angelacrust> there are 150k words in this dictionary, using a buffer of 1 will make the program run extremely slow right?
[11:05:18] <caze> angelacrust: No.
[11:05:33] <angelacrust> hmmm
[11:05:48] <kmuc> imho, the whole idea of reading this file line-by-line is just an attempt at masking the most obvious work (from algorithmic perspective) behind the blind of caching done by standard library io-functions
[11:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:06:02] <fossforus> tools like getline still need to scan byte by byte in order to find the newline char I'd imagine
[11:07:07] <kmuc> you really can slurp the whole file in memory using a typical read-a-big-object-in-a-growing-byte-array-by-multiple-fread-realloc-calls idiom, then analyze the data character-by-character, maybe using a kind of an IFS
[11:07:23] <caze> Just use getchar.
[11:08:08] *** Quits: ekathva (~ekathva@2001:999:50:7590:b428:f6a6:94c7:d128) (Remote host closed the connection)
[11:08:11] <oldlaptop> (that is basically what rcf's getline() does)
[11:08:15] <kmuc> should'nt this program print back parts of the text copied from the input?
[11:08:26] *** Joins: ekathva (~ekathva@2001:999:50:7590:3e0c:28bd:f451:9781)
[11:09:00] <kmuc> i get it is a filter program, and it for some reason should store its input in a hash table, isn't it for printing back the stored data (copied from the input)?
[11:09:27] <kmuc> (sorry for bad grammar, i see all my mistakes)
[11:10:26] <rcf> angelacrust: getchar() is not going to be as slow as you'd expect because stdio is buffered by default. It's not going to be making a syscall for each character processed. Even with a 150k word dictionary it will be done in a fraction of a second.
[11:11:25] <NRK> perfect hash table?
[11:11:29] <caze> In reality, getchar just copies a byte from memory to register (probably cache to register)
[11:11:39] <kmuc> getchar will read the data using the buffer provided by the standard library.  you can read about buffering strategies (full, line, none) of standard io-functions in the C standard, this is a standard feature
[11:12:20] <kmuc> NRK: i'm talking specifically about application of the gperf utility
[11:12:38] <angelacrust> Okay, I'll use getchar()
[11:13:02] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[11:13:12] <caze> angelacrust: How will you organize the chains?
[11:13:41] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2034:c204:70d1:cb4e) (Ping timeout: 256 seconds)
[11:13:51] <kmuc> perfect hash tables are the tables based on using perfect hash algorithms tailored for hashing data of a known type
[11:13:52] *** Joins: malina (~malina@user/malina)
[11:14:16] <angelacrust> caze I haven't thought about it yet
[11:14:43] <NRK> so basically you already know what data you want to put into the table at compile time?
[11:14:50] <caze> angelacrust: If you end up with a tree, getchar would be fine.
[11:15:31] <caze> angelacrust: If you just store each word in an unsorted linked list, then you've only shortened the each word by one letter, and still need to store the rest in the node.
[11:15:50] <kmuc> NRK: perfect has algorithm is a hashing algorithm that computes a hash that guarantees that data items with different keys (in a subset of known keys) will never collide
[11:15:52] <angelacrust> Yes, it's a dictionary of known words. I'll be checking for any wrong words in a piece of a text or a file using that dictionary.
[11:16:11] <caze> angelacrust: Do you know what a trie is?
[11:16:29] *** Joins: angelacrust43 (~angelacru@223.233.66.159)
[11:16:29] <angelacrust43> https://bpa.st/2K7Q is the struct
[11:16:39] *** Quits: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:16:48] <angelacrust43> My username just changed
[11:17:11] *** Quits: angelacrust43 (~angelacru@223.233.66.159) (Client Quit)
[11:17:17] <kmuc> NRK: ideally you have to know the keys, and this isn't that hard in many applications.  i.e. in programming language development where you have, for example, a set of known keywords, and you have to classify the words in a program, whether it is a variable name or a keyword... thing of this kind
[11:17:27] *** Joins: angelacrust58 (~angelacru@223.233.66.159)
[11:18:02] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 240 seconds)
[11:18:30] *** Quits: malina (~malina@user/malina) (Ping timeout: 252 seconds)
[11:18:33] <kmuc> an example of a tree structure can be demonstrated in candide
[11:18:33] <candide> an is exception to printing that message if the regexp `sizeof(char).*always.*1` is contained in the IRC message ;-)
[11:19:01] *** Joins: pulse (~pulse@user/pulse)
[11:20:09] *** Quits: angelacrust (~angelacru@223.233.66.159) (Ping timeout: 256 seconds)
[11:20:12] <rcf> kmuc: in the case of a dictionary for a spellchecker such is not really possible, as being unable to modify the dictionary would become extremely irritating as a user.
[11:21:15] <angelacrust58> https://bpa.st/5BKA is the struct.
[11:21:16] <angelacrust58> (reposting it cus I think my last message got deleted).
[11:21:42] *** Joins: Enitin (~Enitin@82.180.145.223)
[11:21:48] <caze> If only things typed in IRC could be deleted.
[11:22:02] *** Quits: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78) (Ping timeout: 240 seconds)
[11:23:59] <kmuc> rcf: not for a Gentoo user
[11:24:45] <caze> angelacrust: Do you know what a trie is?
[11:24:49] <caze> angelacrust58: ^
[11:25:10] <angelacrust58> Yep
[11:25:19] <caze> angelacrust58: Why don'y you use one?
[11:25:51] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[11:26:21] <angelacrust58> I want to implement a hash table first
[11:26:42] <caze> But... a trie is better than a hash table?
[11:26:45] <angelacrust58> yes
[11:26:47] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:27:03] <angelacrust58> I've never implemented a hash table though
[11:27:20] *** Joins: msk (~Thunderbi@89.205.124.59)
[11:27:26] <caze> Okay, well maybe think of how you'll organize the chains before you do anything.
[11:27:56] *** Joins: Batzy (~quassel@user/batzy)
[11:28:14] <caze> You might just end up with a badly implemented trie in the end, as opposed to just starting with a trie in the first place.
[11:28:24] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 252 seconds)
[11:28:32] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:29:00] <angelacrust58> I should insert new words at the first node of a bucket cus that'll make for faster insertion
[11:29:58] <angelacrust58> I'll also implement a trie version of this code later
[11:30:52] *** Joins: malina (~malina@user/malina)
[11:35:33] <caze> Maybe you should do the trie version first.
[11:37:25] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[11:39:12] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:39:35] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[11:41:42] *** Joins: nicbk (~nicbk@user/nicbk)
[11:43:00] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:45:30] *** Quits: angelacrust58 (~angelacru@223.233.66.159) (Quit: Client closed)
[11:58:41] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[11:58:59] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[12:00:28] *** Joins: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78)
[12:05:46] *** Joins: eddybilley (~freddieti@217.119.232.174)
[12:08:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:08:51] *** Joins: adip (~adip@dia124.neoplus.adsl.tpnet.pl)
[12:10:07] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:10:29] *** synapt is now known as nate
[12:13:26] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:16:05] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[12:16:18] *** Quits: nate (NBishop@o.apocaleaps.com) (Killed (tantalum.libera.chat (Nickname regained by services)))
[12:16:30] *** Joins: synapt (NBishop@o.apocaleaps.com)
[12:19:44] *** Joins: lleo (~leo@89-200-4-50.mobile.kpn.net)
[12:20:29] *** Quits: lleo (~leo@89-200-4-50.mobile.kpn.net) (Client Quit)
[12:21:18] *** Joins: jellie (~luv_panda@user/jellie)
[12:21:47] *** Quits: Maksim (~weechat@185.158.178.9) (Changing host)
[12:21:47] *** Joins: Maksim (~weechat@user/Maksim)
[12:24:00] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[12:24:25] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[12:26:47] *** imm__ is now known as imm_
[12:27:02] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Ping timeout: 240 seconds)
[12:29:14] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[12:29:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[12:30:33] *** Joins: aradesh (~aradesh@user/aradesh)
[12:32:20] *** Quits: les (znc@user/les) (Quit: Adios)
[12:32:39] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[12:33:00] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[12:33:41] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 245 seconds)
[12:34:14] *** Joins: les (znc@user/les)
[12:38:52] *** Joins: joeyzheng5403_ (~kerwin@124.126.18.162)
[12:39:48] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 240 seconds)
[12:43:23] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[12:43:43] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:44:35] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[12:46:36] *** Quits: fe23 (~fe23@2409:8a34:466:6010:a963:e1e:5c0e:2b7a) (Ping timeout: 245 seconds)
[12:51:00] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:52:18] *** Joins: ekathva_ (~ekathva@2001:999:50:a96:4ee5:c816:f561:d86f)
[12:54:11] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[12:54:37] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[12:54:44] *** Quits: ekathva (~ekathva@2001:999:50:7590:3e0c:28bd:f451:9781) (Ping timeout: 252 seconds)
[12:56:14] *** Joins: fengdaolong (~fengdaolo@171.43.210.166)
[12:57:47] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[12:59:40] *** Quits: sokan (~sokan@85.73.229.195) (Quit: Reality.is.a.lie)
[13:10:05] *** Quits: fengdaolong (~fengdaolo@171.43.210.166) (Read error: Connection reset by peer)
[13:14:50] *** Quits: kmuc (~kmuc@109.126.36.28) (Remote host closed the connection)
[13:15:39] *** Joins: fengdaolong (~fengdaolo@171.43.210.166)
[13:17:12] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[13:19:27] *** Joins: somlis (~somlis@user/somlis)
[13:20:22] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[13:20:36] *** Joins: aradesh (~aradesh@user/aradesh)
[13:21:22] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[13:21:25] *** Quits: adip (~adip@dia124.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[13:21:43] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:23:00] *** Joins: zer0x (~zer0x@42.113.144.44)
[13:23:07] *** Joins: adip (~adip@did158.neoplus.adsl.tpnet.pl)
[13:23:24] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[13:26:00] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[13:26:09] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:27:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[13:32:03] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:36:29] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[13:39:49] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[13:42:22] *** Joins: Akiva (~Akiva@user/Akiva)
[13:46:10] *** Joins: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru)
[13:48:22] *** Joins: peki (~peki@pppoe-46-239-4-14.teol.net)
[13:50:32] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4.1)
[13:52:21] <findingnemoeggfr> hello?
[13:52:30] <peki> hey!
[13:52:46] <findingnemoeggfr> Is this channel alive?
[13:53:19] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[13:53:41] *** Joins: Furai (~Furai@furai.pl)
[13:54:39] <peki> findingnemoeggfr: i suppose so
[13:56:07] <findingnemoeggfr> nice
[13:56:19] <NRK> findingnemoeggfr: did u have something to ask?
[13:56:25] <findingnemoeggfr> no, nothing
[13:56:30] <findingnemoeggfr> just wanted to chat and stuff
[13:56:37] <findingnemoeggfr> recently started learning c
[13:56:52] <findingnemoeggfr> just reading through k&r rn
[13:57:12] <NRK> you probably want to go to #c-offtopic then
[13:57:31] <findingnemoeggfr> got it
[13:57:36] <caze> findingnemoeggfr: What exercise are you doing?
[13:57:46] <NRK> but if you have something to ask related to C then just drop it here.
[13:58:01] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:58:07] <NRK> ah yes, caze wants to ask if you're doing 1.17 or not :D
[13:58:27] *** Quits: peki (~peki@pppoe-46-239-4-14.teol.net) (Quit: Leaving)
[13:58:33] <findingnemoeggfr> ???
[13:58:39] <caze> Well it's the first real exercise.
[13:59:12] <caze> findingnemoeggfr: Are you doing the exercises in K&R?
[13:59:12] <findingnemoeggfr> almost
[13:59:23] <findingnemoeggfr> yeah I do
[13:59:46] <caze> findingnemoeggfr: Which one are you doing right now?
[14:00:03] <NRK> ,nohello
[14:00:24] <NRK> hmm.. how to feed stuff into candide?
[14:00:35] <candide> N﻿RK, Can has happy fun time!
[14:02:15] <findingnemoeggfr> wait how do I reply in hexchat
[14:02:54] <dave0> i think it's    <comma> factadd
[14:03:09] <dave0> ,factadd nohello stop saying hello
[14:03:09] <candide> nohello added to #c.
[14:03:13] <dave0> ,nohello
[14:03:13] <candide> nohello is stop saying hello
[14:03:14] <NRK> wdym "reply" ?
[14:03:15] <Svitkona> replies aren't really a thing on IRC
[14:03:21] <dave0> ,factrem nohello
[14:03:22] <candide> nohello removed from #c.
[14:03:35] <Svitkona> you just ping the person you're talking to by typing their name (or typing the first few letters and pressing tab)
[14:03:41] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:03:52] <shadowchaser> ,dave0
[14:04:03] <NRK> ,factadd nohello stop saying hello, just ask. https://nohello.net/
[14:04:04] <candide> nohello added to #c.
[14:04:10] <NRK> ,nohello
[14:04:10] <candide> nohello is stop saying hello, just ask. https://nohello.net/
[14:04:24] <Bou> What's so bad about saying hello first
[14:04:33] <dave0> too friendly
[14:04:43] <dave0> #c is full of grumpy people :-p
[14:04:53] <NRK> Bou: the link explains it :3
[14:05:09] <shadowchaser> ,dave0
[14:05:10] <candide> d﻿ave0 is like Jon Snow, knows nothing
[14:05:25] <NRK> just tryna do things EFFICIENTLY :)
[14:05:28] <findingnemoeggfr> caze, I've read the chapter about character arrays and am implementing some of ideas for programs
[14:05:54] <caze> findingnemoeggfr: So you are not doing the exercises?
[14:05:55] <findingnemoeggfr> wait, it's supposed to be with a comma?
[14:06:18] <findingnemoeggfr> caze, I do, just found it cool to experiment first. I've done 1.19 btw
[14:06:31] <caze> ,kr1-19
[14:06:31] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-19. Write a function reverse(s) that reverses the character string s. Use it to write a program that reverses its input a line at a time.
[14:06:40] <findingnemoeggfr> yep
[14:07:02] <caze> findingnemoeggfr: How did you do 1-17?
[14:07:19] <findingnemoeggfr> I haven't, but I'm thinking of ways to approach it
[14:07:32] <findingnemoeggfr> probably gonna sit down and write it today
[14:07:39] <findingnemoeggfr> don't spoil it pls
[14:07:49] <caze> findingnemoeggfr: Want a hint?
[14:07:49] <Bou> NRK: the link says "This is kinda only half serious (kinda 👀)" though
[14:07:59] <findingnemoeggfr> caze, nah
[14:08:07] <findingnemoeggfr> caze: nah
[14:08:11] <findingnemoeggfr> hmm
[14:08:15] <findingnemoeggfr> still haven't figured it
[14:08:19] <caze> findingnemoeggfr: Okay.
[14:08:23] <caze> findingnemoeggfr, Okay.
[14:08:32] <NRK> lol
[14:09:05] <caze> findingnemoeggfr: But just a comment that it is possible to write a solution that can handle infinitely long lines.
[14:09:39] <findingnemoeggfr> cool
[14:09:42] <caze> (using only ideas already introduced in the chapter)
[14:11:11] <dave0> shadowchaser: you gotta admit they are pretty grumpy
[14:12:15] *** Joins: fe23 (~fe23@2409:8a34:466:6010:a963:e1e:5c0e:2b7a)
[14:13:03] *** Joins: plastico (~plastico@neomutt/plastico)
[14:13:23] *** Quits: alch (~alch@151.36.207.244) (Ping timeout: 252 seconds)
[14:13:56] <shadowchaser> Isn’t it a requirement for writing C? You need to be grumpy.
[14:15:00] *** Joins: alch (~alch@mi-18-25-188.service.infuturo.it)
[14:15:03] *** Quits: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru) (Ping timeout: 250 seconds)
[14:18:07] *** Quits: lwhjp` (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf) (Remote host closed the connection)
[14:19:51] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:25:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:26:35] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[14:27:22] *** Joins: Enitin (~Enitin@82.180.145.230)
[14:31:07] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (Ping timeout: 256 seconds)
[14:33:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:35:39] <rustytaco> shadowchaser: No C just makes you that way :P
[14:36:25] <rustytaco> tho it could be argued by the time you've reached the age to do programming, the world's already done a fair job at make you grumpy :P
[14:36:36] *** Quits: zer0x (~zer0x@42.113.144.44) (Ping timeout: 240 seconds)
[14:37:26] *** Joins: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru)
[14:41:37] *** Quits: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru) (Ping timeout: 240 seconds)
[14:43:10] *** Joins: jellie (~luv_panda@user/jellie)
[14:45:20] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[14:45:43] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:45:51] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[14:46:08] *** Joins: toulene (~toulene@user/toulene)
[14:49:14] *** Joins: Enitin (~Enitin@82.180.145.230)
[14:51:23] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[14:53:15] *** Joins: Darkcoal (~user@user/Darkcoal)
[14:54:11] *** Joins: unknow (~i.am@user/marlboro)
[14:55:37] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[14:59:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[15:04:55] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[15:05:25] *** Joins: noteness_ (~noteness@user/noteness)
[15:05:45] *** Joins: toulene (~toulene@user/toulene)
[15:05:45] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[15:06:07] *** Joins: Enitin (~Enitin@82.180.145.223)
[15:06:15] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[15:08:37] *** Joins: Klinda (~superleag@user/klinda)
[15:09:25] *** Quits: fengdaolong (~fengdaolo@171.43.210.166) (Ping timeout: 256 seconds)
[15:12:01] *** Joins: shivesh (~shivesh@user/shivesh)
[15:13:58] *** Joins: kts (~kts@103.73.237.225)
[15:16:50] *** Joins: tolot (~tolot@dynamic-002-244-155-162.2.244.pool.telefonica.de)
[15:18:04] *** Joins: nq (~nq@2a02:2f08:e015:a900:99af:f5ee:ecd5:7377)
[15:20:37] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:23:11] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[15:23:44] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[15:26:57] *** Joins: seninha (~seninha@user/seninha)
[15:32:54] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:35] *** Joins: csrf (~csrf@user/csrf)
[15:34:06] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[15:34:42] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[15:36:40] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:37:30] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:37:37] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Read error: Connection reset by peer)
[15:38:00] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[15:40:25] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 250 seconds)
[15:44:24] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.45)
[15:47:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[16:02:37] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[16:02:50] *** Joins: terminalpusher (~terminalp@2a01:586:9174:1:55ec:e603:11b7:f9e4)
[16:03:24] *** Quits: yggdrasil (~yggdrasil@67-0-92-81.albq.qwest.net) (Ping timeout: 252 seconds)
[16:04:06] *** Quits: dhch (~dhch@185.213.154.165) (Quit: The Lounge - https://thelounge.chat)
[16:04:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:05:18] *** Joins: yggdrasil (~yggdrasil@67-0-0-186.albq.qwest.net)
[16:10:55] *** flooded is now known as _flood
[16:22:13] *** Joins: cart_ (~cart@2a01:4c8:1405:79a9:b8a2:90dc:f907:a83e)
[16:23:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:25:11] *** Quits: joeyzheng5403_ (~kerwin@124.126.18.162) (Remote host closed the connection)
[16:25:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[16:26:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[16:26:54] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[16:31:18] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[16:31:32] *** Joins: toulene (~toulene@user/toulene)
[16:32:05] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:33:17] *** Quits: ncrowl (~ncrowl@31-208-119-44.cust.bredband2.com) (Ping timeout: 256 seconds)
[16:33:37] *** Quits: Xeha (~Xeha@user/Xeha) (Ping timeout: 240 seconds)
[16:34:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:34:44] *** Joins: ncrowl (~ncrowl@83-233-96-165.cust.bredband2.com)
[16:35:35] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[16:36:03] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:40:19] *** Quits: cart_ (~cart@2a01:4c8:1405:79a9:b8a2:90dc:f907:a83e) (Remote host closed the connection)
[16:40:44] *** Joins: cart_ (~cart@2a01:4c8:1405:79a9:637b:38fa:d163:88e4)
[16:40:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[16:42:48] *** Joins: Xeha (~Xeha@user/Xeha)
[16:50:33] *** Masklin__Gurder is now known as Masklin
[16:51:11] *** Joins: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru)
[16:51:14] *** Quits: cart_ (~cart@2a01:4c8:1405:79a9:637b:38fa:d163:88e4) (Ping timeout: 252 seconds)
[16:51:23] *** Joins: Wulf (~Wulf@user/wulf)
[16:52:32] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[16:54:20] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[16:57:52] *** Joins: amogus (~amogus@163.5.10.172)
[16:57:52] *** Quits: amogus (~amogus@163.5.10.172) (Client Quit)
[17:00:15] *** Quits: terminalpusher (~terminalp@2a01:586:9174:1:55ec:e603:11b7:f9e4) (Remote host closed the connection)
[17:00:26] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:a452:16ed:d049:541)
[17:01:10] *** Joins: john99 (~john99@102.246.103.34.bc.googleusercontent.com)
[17:08:17] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[17:13:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:14:29] *** Joins: karthy (~karthy@103.219.206.35)
[17:14:36] <constxd> kings.
[17:16:37] <clarity> buns
[17:19:17] *** Quits: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru) (Ping timeout: 252 seconds)
[17:20:07] *** Joins: zwr (~zwr@2804:d45:b966:fb00:77fe:55bd:621e:2223)
[17:21:33] *** Joins: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru)
[17:26:02] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Read error: Connection reset by peer)
[17:26:27] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[17:27:06] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[17:28:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:28:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:30:50] *** Joins: mudzap (~mudzap@2806:107e:f:64c7:ef6d:b82a:36c:d8f6)
[17:32:00] *** Quits: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru) (Ping timeout: 268 seconds)
[17:34:08] *** Quits: kts (~kts@103.73.237.225) (Ping timeout: 252 seconds)
[17:38:59] *** Joins: lispy (~lispy@user/lispy)
[17:40:45] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[17:42:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[17:43:41] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 250 seconds)
[17:43:54] *** Joins: toulene (~toulene@user/toulene)
[17:45:25] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[17:45:28] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[17:46:03] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:47:14] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:47:54] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 252 seconds)
[17:48:59] *** Joins: sidy (~sidy@user/sidy)
[17:49:16] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:a452:16ed:d049:541) (Ping timeout: 268 seconds)
[17:49:40] *** Joins: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru)
[17:50:01] *** Joins: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3)
[17:51:37] *** Joins: strajder (~strajder@user/strajder)
[17:52:05] *** Joins: kts (~kts@103.73.237.196)
[17:53:49] *** Quits: findingnemoeggfr (~findingne@h95-110-103-59.dyn.bashtel.ru) (Ping timeout: 240 seconds)
[17:56:00] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:56:07] *** Quits: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78) (Quit: Leaving)
[17:57:54] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 268 seconds)
[17:59:43] *** Joins: Darkcoal (~user@user/Darkcoal)
[18:02:14] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[18:07:58] *** Joins: Darkcoal (~user@user/Darkcoal)
[18:10:38] *** Quits: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3) (Read error: Connection reset by peer)
[18:10:38] *** Quits: alch (~alch@mi-18-25-188.service.infuturo.it) (Read error: Connection reset by peer)
[18:10:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:10:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:10:53] *** Joins: wroathe (~wroathe@user/wroathe)
[18:11:07] *** Joins: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3)
[18:12:52] *** Quits: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3) (Read error: Connection reset by peer)
[18:15:22] *** Joins: alch (~alch@151.82.20.230)
[18:16:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:17:29] *** Joins: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3)
[18:18:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[18:20:42] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:21:16] *** Joins: Darkcoal (~user@user/Darkcoal)
[18:23:41] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:24:32] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[18:26:10] *** Joins: lureevar (~lureevar@2804:214:8187:6589:f128:9d6b:be01:83b5)
[18:28:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:31:53] *** Quits: treble (~treble@user/treble) (Ping timeout: 252 seconds)
[18:32:17] *** Joins: rootx74 (~rootx74@user/rootx74)
[18:32:44] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:34:06] *** Joins: treble (~treble@user/treble)
[18:34:50] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[18:35:34] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[18:35:41] *** Quits: rootx74 (~rootx74@user/rootx74) (Quit: Leaving)
[18:36:44] *** Joins: korg815 (~korg815@user/korg815)
[18:39:26] *** Joins: rootx74 (~rootx74@user/rootx74)
[18:39:36] <sham1> Being grumpy is implementation-defined
[18:39:53] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[18:40:10] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[18:40:27] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[18:40:47] *** Quits: treble (~treble@user/treble) (Ping timeout: 256 seconds)
[18:41:26] *** Joins: lureevar_ (~lureevar@2804:d45:4788:bb00:890b:9a9a:267:fb74)
[18:44:33] *** Joins: cart_ (~cart@2a01:4c8:1405:79a9:db43:9ef1:a2c0:fce5)
[18:45:23] *** Quits: lureevar (~lureevar@2804:214:8187:6589:f128:9d6b:be01:83b5) (Ping timeout: 268 seconds)
[18:45:23] *** lureevar_ is now known as lureevar
[18:45:45] <lispy> pacman -R emotion
[18:46:14] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 2.8)
[18:46:15] *** Joins: zer0x (~zer0x@42.113.144.44)
[18:49:44] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:49:49] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[18:51:48] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 240 seconds)
[18:53:37] *** Quits: kts (~kts@103.73.237.196) (Quit: Konversation terminated!)
[18:59:34] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 268 seconds)
[19:00:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:01:01] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:01:05] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:02:37] *** Joins: treble (~treble@user/treble)
[19:06:01] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[19:08:46] *** Quits: Inline__ (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[19:09:16] *** Joins: Inline (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de)
[19:09:55] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[19:12:04] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:13:08] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[19:18:55] *** Quits: lureevar (~lureevar@2804:d45:4788:bb00:890b:9a9a:267:fb74) (Quit: lureevar)
[19:19:39] *** Joins: lureevar (~lureevar@152-238-250-137.user.veloxzone.com.br)
[19:21:00] *** Joins: magla (~gelignite@55d4decd.access.ecotel.net)
[19:23:02] *** Quits: rootx74 (~rootx74@user/rootx74) (Ping timeout: 252 seconds)
[19:25:44] *** Joins: meator (~meator@user/meator)
[19:28:34] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:28:37] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[19:31:35] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:32:27] *** Quits: rootx74 (~rootx74@user/rootx74) (Remote host closed the connection)
[19:32:54] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:33:43] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[19:34:01] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:34:26] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[19:34:28] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:34:37] *** Quits: zer0x (~zer0x@42.113.144.44) (Ping timeout: 240 seconds)
[19:35:19] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[19:35:40] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:36:09] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:36:56] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:37:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:39:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[19:39:34] <pragma-> The trick is to be grumpy with a smile!
[19:39:39] <pragma-> bah humbug :-)
[19:39:45] *** Quits: lureevar (~lureevar@152-238-250-137.user.veloxzone.com.br) (Quit: lureevar)
[19:41:30] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[19:44:17] *** Joins: pulse (~pulse@user/pulse)
[19:45:36] *** Quits: cart_ (~cart@2a01:4c8:1405:79a9:db43:9ef1:a2c0:fce5) (Ping timeout: 252 seconds)
[19:47:46] <pragma-> NRK: btw https://github.com/pragma-/pbot/blob/master/doc/Factoids.md#special-commands
[19:48:09] *** Quits: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3) (Read error: Connection reset by peer)
[19:52:14] <NRK> ,nohellow
[19:52:17] <NRK> ,nohello
[19:52:17] <candide> nohello is stop saying hello, just ask. https://nohello.net/
[19:52:55] *** Joins: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3)
[19:52:59] <NRK> ,factadd global nohello /say stop saying hello, just ask. https://nohello.net
[19:52:59] <candide> nohello added to global channel.
[19:53:23] *** Joins: Viewday1152 (~Viewday@user/viewday)
[19:54:41] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[19:54:56] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:54:56] *** Viewday1152 is now known as Viewday115
[19:56:04] <ioxzev1z> hello
[19:56:10] <NRK> now we wait...
[19:56:10] <ioxzev1z> Doesn't auto link
[19:56:15] <ioxzev1z> ,hello
[19:56:17] <NRK> aha, victim found
[19:56:21] <ioxzev1z> NRK, tester
[19:56:22] <NRK> ,nohello
[19:56:23] <candide> nohello is stop saying hello, just ask. https://nohello.net/
[19:56:25] <candide> How are you doing i﻿oxzev1z
[19:56:33] <ioxzev1z> candide, but muh greetings
[19:57:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:57:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:58:02] <pragma-> NRK: but now you have ,nohello in #c and in global
[19:58:06] <pragma-> and you invoke the #c one when you use it here
[19:58:58] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[19:59:24] *** Quits: fengdaolong (~fengdaolo@2409:8a4d:c46:9901::4d3) (Ping timeout: 240 seconds)
[19:59:48] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:59:52] <pragma-> the factoids exist in channel namespaces :-)
[20:00:07] *** Joins: bindu (~bindu@user/bindu)
[20:00:15] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[20:00:15] *** Joins: fengdaolong (~fengdaolo@2409:8a4d:c46:9901:727a:e2b3:eaf2:a73a)
[20:01:01] *** Quits: magla (~gelignite@55d4decd.access.ecotel.net) (Quit: Stay safe!)
[20:03:01] * pragma- eye-twitches at NRK
[20:04:45] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:07:22] *** Joins: ddakx (~csi@68.169.216.216)
[20:07:30] *** Quits: ddakx (~csi@68.169.216.216) (Client Quit)
[20:07:37] <pragma-> NRK: wtf?
[20:08:50] <Bou> NRK: hello!
[20:09:00] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[20:09:31] <ioxzev1z> Can't even see his messages...
[20:10:49] <pragma-> I'm waiting for him to notice and delete the #c duplicate factoid so the bot will invoke the global one with the /say.
[20:10:56] * pragma- twitches.
[20:10:58] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[20:11:30] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[20:12:56] *** Joins: Alhazred (~Alhazred@86.106.74.39)
[20:15:01] *** Joins: ddakx (~ddakx@68.169.216.216)
[20:15:13] *** Quits: ddakx (~ddakx@68.169.216.216) (Client Quit)
[20:15:21] *** Joins: ddakx (~ddakx@68.169.216.216)
[20:15:24] *** Parts: ddakx (~ddakx@68.169.216.216) ()
[20:15:58] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[20:17:47] *** Joins: rootx74 (~rootx74@user/rootx74)
[20:18:07] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f52e:1e16:af5a:322a)
[20:18:07] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f52e:1e16:af5a:322a) (Changing host)
[20:18:07] *** Joins: skapata (~Skapata@user/skapata)
[20:20:17] * pragma- snarls.
[20:20:28] <pragma-> ,forget nohello
[20:20:28] <candide> nohello removed from #c.
[20:20:29] <pragma-> ,forget nohello
[20:20:30] <candide> nohello removed from global.
[20:20:58] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 268 seconds)
[20:21:53] *** Joins: cart_ (~cart@2a01:4c8:1405:79a9:5041:1e57:a990:a58)
[20:31:18] *** Joins: noonien (~noonien@user/noonien)
[20:32:06] <NRK> pragma-: aww man, i didn't even notice that it was still doing the "nohello is.." prefix
[20:32:13] <NRK> did u fix it?
[20:32:22] <NRK> ,nohello
[20:32:34] <pragma-> yup
[20:33:16] <NRK> it's not printing anything...
[20:33:47] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[20:33:47] <NRK> i think you nuked both... ,factadd nohello /say stop saying hello, just ask. https://nohello.net
[20:34:50] <NRK> ,factadd nohello /say stop saying hello, just ask what you gotta ask. https://nohello.net
[20:34:50] <candide> nohello already exists for #c.
[20:34:54] <ioxzev1z> L
[20:34:56] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[20:35:06] <NRK> (╯°□°）╯︵ ┻━┻
[20:36:02] <NRK> ,nohello
[20:36:56] *** Joins: kurahaupo (~kurahaupo@pa49-182-51-224.pa.qld.optusnet.com.au)
[20:37:30] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Quit: WeeChat 2.8)
[20:40:36] *** Joins: Akiva (~Akiva@user/Akiva)
[20:41:23] <pragma-> Yes, I nuked both.
[20:42:02] <NRK> ...heroshima and nagasaki
[20:42:06] <pragma-> And whoops, seems like I forgot to delete from the cache when removing duplicates.
[20:42:10] <NRK> *NRK leaves*
[20:42:25] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[20:42:28] <pragma-> It thinks `nohello` still exists despite being "forgotten".
[20:42:30] * pragma- fixes.
[20:42:43] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:42:55] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[20:43:24] *** Joins: Atque (~Atque@user/atque)
[20:43:25] *** Quits: alch (~alch@151.82.20.230) (Ping timeout: 256 seconds)
[20:43:29] <NRK> ,factadd nohello /say stop saying hello, just ask what you gotta ask. https://nohello.net
[20:43:29] <candide> nohello already exists for #c.
[20:43:39] <NRK> -_-
[20:43:58] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[20:44:58] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:45:07] *** Joins: alch (~alch@151.44.92.237)
[20:46:04] <pragma-> ,die
[20:46:04] <candide> Good-bye.
[20:46:04] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[20:46:13] <pragma-> It's cached improperly.
[20:46:22] *** Joins: candide (~pbot3@about/c/bot/candide)
[20:46:40] *** ChanServ sets mode: +o candide
[20:46:41] *** candide sets mode: -q *!*@81.187.183.71
[20:46:46] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[20:46:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:47:03] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[20:51:47] *** Joins: Ap3 (~ape@kanonenjagd.panzer.ninja)
[20:53:38] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[20:57:01] <Akawama[m]> I'm confused about this code style please make a suggestion https://dpaste.org/BPWM
[20:57:39] <pragma-> I personally prefer the first style.
[20:57:52] <Amun-Ra> same
[20:57:57] <pragma-> but without a space between the function name and parameters
[21:00:50] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[21:01:15] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[21:01:54] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:20b1:b36f:805d:9afa)
[21:02:11] <ioxzev1z> Akawama[m], second no space
[21:02:45] <ioxzev1z> You can then find function names starting at 0
[21:03:08] <pragma-> or use a decent editor that supports tags
[21:03:18] <ioxzev1z> pragma-, you don't code with nano?
[21:04:50] <ioxzev1z> ,nohello
[21:05:03] <ioxzev1z> Not working
[21:05:04] <pragma-> He hasn't re-added it since I restarted the bot.
[21:05:09] <ioxzev1z> Ah
[21:06:35] <pragma-> I couldn't find any obvious spot where the caching broke, either. Restarting the bot cleared the cache, so re-adding the factoid should work. But it'd be nice to understand why it got stuck in the factoid cache. I tried to reproduce it and I looked over the code. I could not reproduce it and I saw nothing wrong with the code. Argh.
[21:07:14] <ioxzev1z> Not missing some cache.update() or something?
[21:07:25] *** Joins: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net)
[21:07:40] <pragma-> Unless I'm blind...
[21:08:07] *** Quits: fe23 (~fe23@2409:8a34:466:6010:a963:e1e:5c0e:2b7a) (Ping timeout: 256 seconds)
[21:08:21] *** Joins: fe23 (~fe23@2409:8a34:466:6010:d056:f79a:d2b2:fdd2)
[21:09:29] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[21:13:22] <SaltHillStroller> If I'm transferring data serially across architectures, is utilizing packed structs the only way to ensure padding won't be incorrect?
[21:14:06] <SaltHillStroller> I.e. I have a struct I populate on a 32bit arch, and transfer to a 64bit arch. I memcpy the binary data to a struct on the 64bit arch, and receive garbage as the padding is incorrect
[21:14:45] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-251-82.pa.qld.optusnet.com.au)
[21:15:35] *** Quits: kurahaupo (~kurahaupo@pa49-182-51-224.pa.qld.optusnet.com.au) (Ping timeout: 250 seconds)
[21:18:34] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:18:36] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:19:35] *** Joins: Enitin (~Enitin@82.180.145.230)
[21:20:43] <twkm> serialize the data.
[21:20:56] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:21:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[21:22:43] *** Quits: alch (~alch@151.44.92.237) (Read error: Connection reset by peer)
[21:25:03] *** Joins: alch (~alch@151.38.240.14)
[21:25:07] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 256 seconds)
[21:28:49] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[21:29:12] *** Quits: sidy (~sidy@user/sidy) (Remote host closed the connection)
[21:29:29] *** Joins: sidy (~sidy@user/sidy)
[21:30:18] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[21:30:42] *** Joins: mahmutov (~mahmutov@37.155.95.65)
[21:31:13] *** Quits: fe23 (~fe23@2409:8a34:466:6010:d056:f79a:d2b2:fdd2) (Quit: fe23)
[21:31:15] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[21:31:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[21:31:46] *** Joins: Epithium (~Epithium@2603-6080-3203-8d68-b162-a173-f12a-3a04.res6.spectrum.com)
[21:31:59] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:32:03] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[21:34:05] <NRK> Akawama: the 2nd one, but without spaces between func name and ()
[21:34:13] <NRK> ,factadd nohello /say stop saying hello, just ask what you gotta ask. https://nohello.net
[21:34:13] <candide> nohello added to #c.
[21:34:20] <NRK> B)
[21:34:45] <gnoo> add /en there as it requires javascript otherwise
[21:34:50] <NRK> Akawama: oh, use /* comments */ as well, not // crap
[21:34:57] *** Quits: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:35:48] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[21:36:29] <ioxzev1z> NRK, wat
[21:36:35] <ioxzev1z>  // is fine
[21:36:47] <ioxzev1z> It's been here since C99, 23 years bru
[21:37:05] <NRK> he asked for style suggestion
[21:37:46] *** nf is now known as ju
[21:38:11] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[21:38:15] <NRK> and /* */ is way cooler.
[21:38:16] *** ju is now known as Guest3578
[21:38:24] *** Guest3578 is now known as nf
[21:39:57] *** Joins: Akuli (~Akuli@213.216.208.39)
[21:41:45] *** Quits: cart_ (~cart@2a01:4c8:1405:79a9:5041:1e57:a990:a58) (Ping timeout: 268 seconds)
[21:41:50] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[21:41:55] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-40ea-77d7-9e3-80a0.fixed6.kpn.net)
[21:42:16] *** Joins: cart_ (~cart@2a01:4c8:1405:79a9:1641:3131:f502:1b0b)
[21:42:16] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:43:01] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:44:47] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[21:46:22] *** Joins: vin (~vin@user/crash)
[21:46:35] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-40ea-77d7-9e3-80a0.fixed6.kpn.net) (Ping timeout: 252 seconds)
[21:47:33] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:47:40] <vin> What happens when you don't unmap a mmaped buffer but simply mmap another file and asign it to the same variable? Assuming you have made writes to the previous one and will make writes to the new one as well
[21:48:55] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[21:49:53] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[21:50:21] *** Joins: Viewday115 (~Viewday@user/viewday)
[21:52:18] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[21:53:01] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[21:53:05] <Bou> The old memory will still be mapped but your program forgot where it is
[21:53:20] <fizzie> `mmap` on a *fixed* address replaces any previous mappings of those pages, as if you had called `munmap` first. But if you just call mmap a second time, the fact that you assign the result to the same variable doesn't matter.
[21:53:22] *** Joins: Viewday1159 (~Viewday@user/viewday)
[21:53:40] *** Joins: magla (~gelignite@55d4decd.access.ecotel.net)
[21:53:45] *** Quits: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a) (Ping timeout: 252 seconds)
[21:54:09] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[21:54:43] *** Joins: lleo (~leo@89-200-4-50.mobile.kpn.net)
[21:55:09] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:55:10] *** Viewday1159 is now known as Viewday115
[21:57:52] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Client Quit)
[21:58:31] *** Quits: john99 (~john99@102.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[22:00:37] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.157)
[22:00:43] *** Quits: ekathva_ (~ekathva@2001:999:50:a96:4ee5:c816:f561:d86f) (Remote host closed the connection)
[22:02:06] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4.1)
[22:03:06] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[22:05:55] *** Quits: fengdaolong (~fengdaolo@2409:8a4d:c46:9901:727a:e2b3:eaf2:a73a) (Ping timeout: 256 seconds)
[22:06:03] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.157) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[22:06:40] *** Joins: ekathva (~ekathva@2001:999:50:a96:4ee5:c816:f561:d86f)
[22:07:01] <ioxzev1z> vin, int x = 5; x = 6; what happens to 5 ?
[22:11:18] *** Joins: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net)
[22:17:31] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[22:17:55] *** Joins: Viewday115 (~Viewday@user/viewday)
[22:18:17] *** Joins: neilthereildeil (~neilthere@pool-71-191-164-234.washdc.fios.verizon.net)
[22:18:22] *** Parts: neilthereildeil (~neilthere@pool-71-191-164-234.washdc.fios.verizon.net) ()
[22:18:25] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:19:54] *** Joins: john99 (~john99@102.246.103.34.bc.googleusercontent.com)
[22:21:40] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[22:21:52] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:23:45] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[22:25:12] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Client Quit)
[22:26:08] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:27:03] *** Quits: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:29:55] *** Quits: cart_ (~cart@2a01:4c8:1405:79a9:1641:3131:f502:1b0b) (Ping timeout: 250 seconds)
[22:30:00] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[22:30:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:30:51] *** Joins: ns12 (~ns12@user/ns12)
[22:32:01] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:32:22] *** Joins: bindu (~bindu@user/bindu)
[22:33:57] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[22:35:05] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:35:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[22:35:31] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:35:44] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.103)
[22:36:36] *** Joins: ddakx (~ddakx@68.169.216.216)
[22:40:35] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:41:34] *** Quits: lleo (~leo@89-200-4-50.mobile.kpn.net) (Ping timeout: 268 seconds)
[22:42:37] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:45:36] *** Joins: vicfred (~vicfred@user/vicfred)
[22:46:41] *** candide sets mode: -o candide
[22:47:06] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 252 seconds)
[22:49:07] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:49:09] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:50:04] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:50:56] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.103) (Ping timeout: 252 seconds)
[22:51:01] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 240 seconds)
[22:51:12] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:51:23] *** Joins: vysn (~vysn@user/vysn)
[22:51:26] *** Joins: sidy (~sidy@user/sidy)
[22:51:34] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[22:52:35] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[22:55:18] *** Joins: tiotags (~tiotags@user/tiotags)
[22:55:30] *** Quits: strajder (~strajder@user/strajder) (Remote host closed the connection)
[22:56:51] *** Joins: lispy (~lispy@user/lispy)
[22:58:03] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:2937:5007:9bc8:5f50)
[23:00:24] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[23:01:21] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[23:02:12] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:07:01] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 245 seconds)
[23:07:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:07:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:08:16] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:2937:5007:9bc8:5f50) (Read error: Connection reset by peer)
[23:11:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:11:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:11:51] *** Joins: wroathe (~wroathe@user/wroathe)
[23:12:38] *** trenka_ is now known as trenka
[23:12:39] *** Quits: trenka (~ykaliuta@82-181-192-55.bb.dnainternet.fi) (Changing host)
[23:12:39] *** Joins: trenka (~ykaliuta@user/trenka)
[23:17:09] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[23:17:32] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[23:18:09] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[23:18:22] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-40ea-77d7-9e3-80a0.fixed6.kpn.net)
[23:18:59] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.45) (Ping timeout: 252 seconds)
[23:19:32] *** Quits: Alhazred (~Alhazred@86.106.74.39) (Ping timeout: 252 seconds)
[23:19:56] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:20:29] *** Joins: luizfrds (~Luiz@152.250.243.147)
[23:20:36] *** Joins: justOkay (~justache@user/justache)
[23:20:54] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[23:22:51] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-40ea-77d7-9e3-80a0.fixed6.kpn.net) (Ping timeout: 252 seconds)
[23:24:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:28:34] *** Joins: xbkkd (~F0@user/xbkkd)
[23:31:33] *** Joins: wlemuel_ (~wlemuel@210.22.124.110)
[23:32:13] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:17] *** Quits: wlemuel_ (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:52] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[23:33:32] <NRK> integer literal leak...
[23:34:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:36:32] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:37:22] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:41:09] *** Joins: crankslider (~slidercra@user/slidercrank)
[23:43:20] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[23:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:57] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[23:47:23] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:50:21] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[23:52:21] *** Joins: rgrinberg (~textual@2806:102e:18:c0c1:a896:63f7:5249:df28)
[23:52:32] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 252 seconds)
[23:53:23] *** Joins: Viewday1153 (~Viewday@user/viewday)
[23:53:42] *** Joins: Satin (uid193953@user/Seten)
[23:53:51] *** Quits: magla (~gelignite@55d4decd.access.ecotel.net) (Quit: Stay safe!)
[23:54:55] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:54:55] *** Viewday1153 is now known as Viewday115
[23:56:40] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:57:13] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 256 seconds)
[23:57:27] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
