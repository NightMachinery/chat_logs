[00:00:07] *** Joins: shoobie (~shoobie@user/shoobie)
[00:00:08] *** Joins: Deep6 (~Deep6@189.146.239.170)
[00:00:49] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:01:00] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:2042:a71:4322:6233)
[00:02:11] *** Joins: wyclif (~wyclif@user/wyclif)
[00:02:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[00:03:56] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 255 seconds)
[00:04:34] *** Quits: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[00:04:38] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[00:05:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:05:32] *** Joins: y1n (~y1n@84-115-65-94.wifi.dynamic.surfer.at)
[00:05:38] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[00:05:45] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[00:06:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:08:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[00:08:32] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[00:10:00] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:11:35] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[00:13:31] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[00:14:14] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:14:30] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:15:01] *** Quits: greedom (~greedom@2001:16b8:2eab:8c00:fb86:b59c:1ac7:62c9) (Remote host closed the connection)
[00:15:01] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:15:02] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[00:15:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:15:51] *** Joins: greedom (~greedom@2001:16b8:2eab:8c00:fb86:b59c:1ac7:62c9)
[00:15:59] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:16:06] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Client Quit)
[00:16:20] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:16:29] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:16:43] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[00:16:47] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:17:10] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[00:17:12] *** Quits: Juggernaut (~Juggernau@cpe-67-253-33-23.maine.res.rr.com) (Remote host closed the connection)
[00:18:15] *** Joins: wyclif (~wyclif@user/wyclif)
[00:18:34] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[00:19:52] *** Quits: y1n (~y1n@84-115-65-94.wifi.dynamic.surfer.at) (Remote host closed the connection)
[00:21:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:22:13] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[00:23:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:24:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:24:46] <shan> is there something in python similar to js's `val = thing || 'fallback'`
[00:25:23] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:25:45] <SnoopJ> shan, `val = thing or fallback` is the equivalent
[00:25:54] <shan> Nice!
[00:26:07] <ice9> ChrisWarrick, i'm lost with so many different ways of implementing fetch API in flask, can you point me to a simple tutorial?
[00:26:08] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:26:17] <ChrisWarrick> ice9: you don’t implement fetch API in flask
[00:26:26] <ChrisWarrick> ice9: that’s a javascript topic
[00:26:28] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:27:20] *** Parts: val (~val@limnoria/val) (WeeChat 2.3)
[00:27:20] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:27:21] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[00:27:33] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:27:45] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[00:29:07] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:32:17] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 255 seconds)
[00:32:50] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[00:33:18] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[00:34:00] *** Joins: wyclif (~wyclif@user/wyclif)
[00:38:20] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:f984:20da:67a5:99d7)
[00:39:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[00:40:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:40:40] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[00:44:31] <[itchyjunk]> When using b'' to get bytes, can i still do b'{var}' to refer to variables?
[00:44:42] *** Quits: dld (~davidlowr@2601:197:600:1210:b1dd:9292:d6da:40cf) (Ping timeout: 240 seconds)
[00:45:02] <bjs> [itchyjunk]: did you mean f ?
[00:45:30] <bjs> if you did, then no
[00:45:31] *** Quits: exilepilot (~exile8338@host86-164-249-163.range86-164.btcentralplus.com) (Read error: Connection reset by peer)
[00:45:40] <[itchyjunk]> well, i am looking at f'' and it says i can. but i was wondering if it's possible for b''
[00:45:45] <[itchyjunk]> for f, it does work right?
[00:45:52] <[itchyjunk]> https://docs.python.org/3/tutorial/inputoutput.html
[00:45:53] *** Joins: dld (~davidlowr@2601:197:600:1210:f14b:4a8a:4522:f5d2)
[00:45:54] <bjs> [itchyjunk]: f-strings the f stands for "format"
[00:46:03] <SnoopJ> it "works" in the sense that '{' is a valid byte. It does not let you interpolate values
[00:46:09] <bjs> the point of f is to allow the interpolation (aka the {var} part)
[00:46:12] <KirkMcDonald> There are no bf'' strings.
[00:46:15] <SnoopJ> sorry, b'{' is a valid byte heh
[00:46:20] <bjs> [itchyjunk]: byte literals do not support that, you cannot have bf"{var}"
[00:46:26] <[itchyjunk]> ah
[00:47:00] <[itchyjunk]> I am doing b'this is ' + name + b'\r\n' kinda thing, i guess that is fine then
[00:47:13] <bjs> [itchyjunk]: normally you "format" text
[00:47:20] <[itchyjunk]> hmm
[00:47:26] <SnoopJ> [itchyjunk], you can do f"this is {name}\r\n".encode(a_suitable_encoding) though
[00:47:32] <bjs> it's weird to format bytes as if it was text.  The usual best way is to format the text then turn it into bytes:  f"this is {name}\r\n".encode()
[00:47:56] <SnoopJ> yea, bytes are 'just' bytes
[00:48:20] <[itchyjunk]> I was not decoding the bytes from the server and using them as is. i suppose i can decode first and encode and such
[00:49:02] <bjs> [itchyjunk]: well a common thing in these programs is to unwrap the bytes when you get handed to them, to extract any text. Then do text-y things to the text (and not to the bytes), then when you want to send it back you package it all back up
[00:49:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:50:26] <SnoopJ> if you want to do text-y things, you want text
[00:50:38] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[00:50:38] <[itchyjunk]> yeah not decoding was a mistake
[00:50:58] *** Joins: wyclif (~wyclif@user/wyclif)
[00:51:33] <[itchyjunk]> for `open()` it says r and t is applied by default. so to open and write to a text tile i just need f = open('test.txt','w') ?
[00:52:02] <bjs> [itchyjunk]: well if you pass 'w' then you're overwriting the default so the r and t doesn't matter anymore. But yes that will open a textfile for writing
[00:52:13] <SnoopJ> [itchyjunk], a file so open()ed will not be read()able
[00:52:24] <[itchyjunk]> ah i want to read and write
[00:52:30] <[itchyjunk]> i am not sure when to use t though
[00:52:40] <bjs> [itchyjunk]: t means text, it's the opposite of b
[00:52:50] <bjs> if you don't specify it assumes t
[00:52:53] <SnoopJ> and since it's the default, you usually don't specify it at all
[00:53:10] <[itchyjunk]> ah.. i will fix this byte decoding first then, seems to be getting in the way
[00:53:32] <bjs> [itchyjunk]: there are a few ways to read+write from a file,  but which way you want depends on how exactly you're going to use the opened file
[00:53:33] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[00:54:02] <[itchyjunk]> hmmmmm
[00:55:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:55:16] *** Quits: greedom (~greedom@2001:16b8:2eab:8c00:fb86:b59c:1ac7:62c9) (Quit: Konversation terminated!)
[00:55:29] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:55:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:56:09] <[itchyjunk]> ah apparently i want to work with bytes till i know for sure it's something else because i can receive random things when connected to irc server etc
[00:56:10] *** Joins: greedom (~greedom@i577BC6F5.versanet.de)
[00:56:27] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[00:57:07] <bjs> [itchyjunk]: the stuff that you get from an irc server between the \r\n's is definitely text :)
[00:57:30] <[itchyjunk]> hmmmm
[00:57:48] <bjs> [itchyjunk]: but you should probably be decoding the text parts of the message into text long before you get to trying to format things
[00:58:06] <bjs> surely by the time you're formatting a thing you're *pretty sure* it's supposed to be text.
[00:58:14] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Remote host closed the connection)
[00:58:54] <Noisytoot> bjs, IRC doesn't specify a character set
[00:59:16] <Tashtari> Yeah, I was going to say, IRC only deals in bytes...
[00:59:17] <Noisytoot> ��
[00:59:17] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 255 seconds)
[00:59:28] <Noisytoot> ^ that message is a valid irc message, but invalid utf8
[00:59:36] <bjs> Yes
[01:00:09] <SnoopJ> (they did say "pretty sure")
[01:00:13] *** Joins: inom (~inom@176.59.118.44)
[01:00:35] <bjs> I mean even just forgetting IRC,  a network can just send your garbage
[01:01:12] *** Joins: ray (~ray@user/re)
[01:01:22] <bjs> but I'm not really sure this helps [itchyjunk], because I get the impression they're not out to build a big reliable irc network but just want a little bot and to learn about bytes vs text :)
[01:01:28] <Gurkenglas> does DataFrame have a left inverse?
[01:01:45] <SnoopJ> Gurkenglas, a matrix inverse?
[01:01:46] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 240 seconds)
[01:02:19] <Gurkenglas> no, the inverse of a function, that function being the constructor DataFrame. Actually I think I want the right inverse instead.
[01:02:29] <Gurkenglas> (a right inverse, that is)
[01:02:43] <SnoopJ> DataFrame isn't even an operator, so I'm not sure what an inverse would mean
[01:03:05] <SnoopJ> s/operator/function in the bijection sense/
[01:03:13] <[itchyjunk]> I am mostly trying to learn to code using ircbot as a topic
[01:03:17] <Gurkenglas> an f such that DataFrame(f(x))=x
[01:03:20] <ice9> that's my code https://bpa.st/QMSQ and i'm getting "Uncaught ReferenceError: submit_message is not defined"; any idea?
[01:03:48] <Gurkenglas> basically, given a dataframe, i want a datastructure that doesnt use pandas and has the same data.
[01:04:08] *** Quits: magla (~gelignite@55d41815.access.ecotel.net) (Quit: Stay safe!)
[01:04:48] <SnoopJ> DataFrame.to_*()
[01:04:58] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:f984:20da:67a5:99d7) (Quit: Client closed)
[01:05:18] <bjs> ice9: that doesn't look like all your code,  I'm not sure there's enough for someone to help really
[01:05:19] <SnoopJ> (these are definitely not "inverses", but you can round-trip with most of them)
[01:05:58] <ice9> bjs, i mean the code i'm trying, so it doesn't matter if it's mine or a tutorial, it's about fixing the issue
[01:06:02] <SnoopJ> hmm, well, some of them. .to_dict() in particular
[01:06:49] <bjs> ice9: but it's not code, it's even the entire jinja2(?) template
[01:07:04] <SnoopJ> https://bpa.st/VCFA
[01:07:07] <bjs> ice9: i mean it doesn't really matter _whose_ code it is if we can't see it :P
[01:08:08] *** Joins: wyclif (~wyclif@user/wyclif)
[01:08:12] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:08:42] <bjs> ice9: I mean for all we know the problem is actually in layout.html
[01:09:35] <ice9> bjs, this is the layout.html https://bpa.st/65XA
[01:09:54] <bjs> ice9: where's the script block?
[01:10:10] <ice9> bjs, in guestbook.html
[01:10:24] <bjs> ice9: ... what is guestbook.html?
[01:10:33] <ice9> bjs, the first link i mentioned
[01:10:57] <bjs> ice9: okay but look in layout.html, there is no script within the <html>
[01:11:11] <[itchyjunk]> for an irc bot reading and writing to a text file ocassionally, is it a good idea to keep the socket open? or just open it when needed?
[01:11:21] <ice9> bjs, should i place empty script block in layout.html?
[01:12:08] <p-i-> Is it possible to do `30ms` and get 30000?
[01:12:18] <p-i-> Or am I thinking of C++
[01:12:55] <ice9> bjs, oh i see, i placed the real script block code in layout.html and it worked fine, but i want to have that script block in guestbook.html
[01:13:06] *** Quits: flyback (~flyback@2601:540:8201:1e60:5d64:de9e:dc71:ee3c) (Ping timeout: 240 seconds)
[01:13:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:13:22] <bjs> ice9: then do the same thing you did for title and footer and include a block in layout.html
[01:13:30] <bjs> and then define it in guestbook.html
[01:13:47] <bjs> and content*
[01:15:04] <SnoopJ> p-i-, Python doesn't have user-defined literals if that's what you're asking
[01:15:15] <p-i-> tx
[01:15:17] *** Joins: hanaan (~naan@user/naan)
[01:15:20] <SnoopJ> if you want to manage units, `pint` is a great library
[01:15:25] *** Joins: brickfat (~brickfat@user/brickfat)
[01:16:27] <ice9> thanks bjs :)
[01:16:40] <ice9> much appreciated
[01:16:41] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:16:47] *** Joins: parzival (~parzival@user/parzival)
[01:16:54] *** Quits: inom (~inom@176.59.118.44) (Quit: WeeChat 3.1)
[01:18:11] *** Joins: inom (~inom@176.59.118.44)
[01:20:52] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[01:21:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[01:21:44] *** hugoposca is now known as hposca
[01:22:55] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[01:23:05] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:23:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[01:24:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:25:58] *** Joins: flyback (~flyback@2601:540:8201:1e60:b90d:9f30:19da:85a2)
[01:28:13] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:29:56] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[01:30:02] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[01:30:50] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Read error: Connection reset by peer)
[01:31:35] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:35:59] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[01:38:31] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:39:10] *** Quits: inom (~inom@176.59.118.44) (Ping timeout: 252 seconds)
[01:39:47] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:40:52] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:41:06] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:41:15] *** Joins: wyclif (~wyclif@user/wyclif)
[01:41:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 246 seconds)
[01:41:56] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[01:42:56] *** Gustavo6046_ is now known as Gustavo6046
[01:42:58] *** Joins: ivan_ (~Ivyy@195.216.219.105)
[01:44:34] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[01:44:39] *** Joins: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com)
[01:44:59] <pyfisch> What are good libraries to implement terminal user interfaces? I already know about urwid, are there any good alternatives focused on input forms?
[01:45:38] *** Quits: Ivyy (~Ivyy@2001:a62:41d:fa01:d1fb:2875:a96:4962) (Ping timeout: 255 seconds)
[01:46:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[01:46:11] <Evolver> pyfisch: what's wrong with `curses` for a basic interface?
[01:47:09] <Evolver> Also there is the `cmd` module.
[01:47:20] <pyfisch> Evolver: I am looking for a more high-level module than curses.
[01:47:25] *** Joins: user3456 (user3456@user/user3456)
[01:47:30] <Evolver> pyfisch: https://docs.python.org/3/library/cmd.html#module-cmd no good?
[01:48:03] <The-Compiler> pyfisch: there's also https://python-prompt-toolkit.readthedocs.io/ and if you can wait for a bit until it's usable, https://github.com/willmcgugan/textual
[01:48:09] *** Quits: user3456 (user3456@user/user3456) (Remote host closed the connection)
[01:49:14] *** Quits: Deep6 (~Deep6@189.146.239.170) (Ping timeout: 255 seconds)
[01:49:26] *** Joins: isekaijin (~pyon@user/pyon)
[01:51:09] *** Joins: Deep6 (~Deep6@208.127.69.222)
[01:51:16] <pyfisch> The-Compiler: thank you textual looks good
[01:52:50] *** Quits: audiocat (~audio@2603-8081-1800-6a65-032f-072b-bf09-a39b.res6.spectrum.com) (Ping timeout: 255 seconds)
[01:53:13] *** Quits: shoobie (~shoobie@user/shoobie) (Remote host closed the connection)
[01:53:30] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 265 seconds)
[01:53:31] <brickfat> terminal user interface aka TUI
[01:54:08] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:54:11] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[01:54:22] *** Joins: shoobie (~shoobie@user/shoobie)
[01:55:18] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 252 seconds)
[01:56:29] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:56:56] *** Quits: shoobie (~shoobie@user/shoobie) (Remote host closed the connection)
[01:58:00] *** Joins: wyclif (~wyclif@user/wyclif)
[01:58:30] *** Joins: pnoud (~pnoud@user/pnoud)
[01:58:36] *** Joins: user3456 (user3456@user/user3456)
[01:58:41] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[01:59:24] *** Quits: Narrat (~omnius@p200300df5f11252206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:59:41] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:59:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:01:04] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 246 seconds)
[02:02:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:03:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:03:38] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[02:03:58] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:04:43] *** Quits: greedom (~greedom@i577BC6F5.versanet.de) (Quit: Konversation terminated!)
[02:06:02] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:06:08] *** Joins: greedom (~greedom@2001:16b8:2eab:8c00:fb86:b59c:1ac7:62c9)
[02:06:47] *** Quits: argento (~argent0@168-227-97-34.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[02:07:30] *** Joins: derelict (~derelict@user/derelict)
[02:08:03] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[02:10:45] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:11:35] <SnoopJ> The-Compiler, what's missing from the prompt toolkit in your opinion? (just curious)
[02:11:46] <The-Compiler> SnoopJ: no idea, I've never built a TUI
[02:12:20] <SnoopJ> well, I guess what I really mean is "why isn't it usable now" :)
[02:12:38] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:12:46] *** Quits: zbe (~zbe@pleiades.zbe.bz) (Ping timeout: 268 seconds)
[02:12:48] <raek> pyfisch: what's missing from urwid in your opinion :-)
[02:12:53] <The-Compiler> SnoopJ: prompt-toolkit probably is perfectly usable, textual isn't
[02:13:00] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[02:13:06] <SnoopJ> oh, oops, I misread :)
[02:13:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:13:09] *** Joins: zbe (~zbe@pleiades.zbe.bz)
[02:13:53] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[02:15:20] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 255 seconds)
[02:15:31] *** Joins: wyclif (~wyclif@user/wyclif)
[02:16:34] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[02:17:10] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 246 seconds)
[02:17:31] *** Quits: Deep6 (~Deep6@208.127.69.222) (Ping timeout: 246 seconds)
[02:17:33] <pyfisch> raek: I find the urwid examples difficult to understand in addition there are not as many form elements as I want
[02:18:20] <pyfisch> Its more centered around command-line-gui applications while I am more looking for forms or dialog but with a "back" button
[02:18:31] <pyfisch> Probably I just need to learn urwid better
[02:20:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:22:48] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:23:42] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:24:14] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:24:44] *** Joins: ATAD (~ATAD@user/atad)
[02:25:50] <raek> I've been using urwid for forms. I like it, but it took a long time to learn how to think in it...
[02:26:14] <raek> (maybe that's true for many UI toolkits)
[02:26:34] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:26:49] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:26:54] *** Joins: p-i-_ (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net)
[02:27:07] <habnabit_> pyfisch, how about prompt_toolkit or blessings
[02:27:17] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Client Quit)
[02:27:26] <habnabit_> pyfisch, 'rich' i'd been hearing about recently but that might not be TUI enough
[02:27:30] <raek> well, maybe not "long", but definitely some effort. interactivity is tricky.
[02:27:59] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[02:28:49] *** Joins: c10l (~c10l@89.34.167.207)
[02:28:50] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[02:29:16] *** Quits: p-i- (~Ohmu@node-ozo.pool-125-24.dynamic.totinternet.net) (Ping timeout: 265 seconds)
[02:29:40] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:30:14] <SnoopJ> rich does seem good, yea
[02:30:47] *** Quits: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net) (Ping timeout: 252 seconds)
[02:31:31] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:32:35] *** Quits: greedom (~greedom@2001:16b8:2eab:8c00:fb86:b59c:1ac7:62c9) (Remote host closed the connection)
[02:32:40] *** Joins: wyclif (~wyclif@user/wyclif)
[02:33:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:33:17] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[02:33:41] <graingert> habnabit_: there's a tui in rich now as a side project
[02:33:41] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[02:33:46] <graingert> But not trio enough
[02:33:56] <habnabit_> dang
[02:34:36] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:34:39] <weedmic> pyfisch: u find any good tutorial for urwid?  i remember using it to make some really basic text box menus about 2 years ago.  but nvr found a good reference tool.
[02:34:40] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Quit: Konversation terminated!)
[02:35:19] *** Quits: Akuli (~Akuli@82-203-162-138.bb.dnainternet.fi) (Quit: Leaving)
[02:35:44] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[02:35:49] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:35:50] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:09] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Quit: Konversation terminated!)
[02:37:28] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[02:38:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:38:13] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[02:38:42] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[02:40:16] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[02:40:19] <nedbat> habnabit_: the rich author now has textual also, for tui's.  it will probably be great
[02:41:08] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 268 seconds)
[02:41:38] <graingert> habnabit_: nedbat yeah textual is the one I was referring to
[02:43:53] *** Joins: argento (~argent0@168-227-97-34.ptr.westnet.com.ar)
[02:44:35] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[02:47:12] <CobaltCam> So it's my understanding that EOF Errors are cause by a loop with no code inside or failure to properly use parenthesis. Is there another way to get this error that I'm not aware of?
[02:47:21] *** Quits: argento (~argent0@168-227-97-34.ptr.westnet.com.ar) (Client Quit)
[02:47:29] <habnabit_> CobaltCam, what's an EOF Error
[02:47:38] <habnabit_> CobaltCam, can you pastebin what you're seeing
[02:48:29] <CobaltCam> I'm on mobile let me see if I can.
[02:48:42] <habnabit_> CobaltCam, take a photo of the screen
[02:48:45] *** Joins: wyclif (~wyclif@user/wyclif)
[02:48:48] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[02:49:05] *** Quits: Natt0 (~Natalie@cust-143-196-110-94.dyn.as47377.net) (Read error: Connection reset by peer)
[02:50:41] *** Joins: orbatos_ (~orbatos@user/orbatos)
[02:50:46] *** Joins: Natt0 (~Natalie@cust-143-196-110-94.dyn.as47377.net)
[02:51:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:47] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[02:52:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:52:16] *** Joins: cheater (~Username@user/cheater)
[02:52:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:52:42] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 244 seconds)
[02:52:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:53:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:53:31] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:53:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[02:53:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:53:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:54:15] <CobaltCam> Okay so bear with me I'm fairly new, but I'm going through an online course to brush up on python after a class I took was less than impressive. So the goal here is to write a program that adds up a  total cost for plane tickets. 100 per ticket, kids younger than 3 fly free.
[02:54:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:54:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:54:41] <habnabit_> CobaltCam, if you're getting an error, why don't we talk about the error?
[02:54:47] <CobaltCam> https://usercontent.irccloud-cdn.com/file/X7Zl6mem/9_Sololearn.jpg
[02:54:51] *** Joins: clawh (~clawh@185.244.214.60)
[02:55:04] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:55:06] <CobaltCam> https://usercontent.irccloud-cdn.com/file/UUuHDiRQ/2_Sololearn.jpg
[02:55:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:55:21] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:55:27] <habnabit_> CobaltCam, that error means you called input() but no more input is available
[02:55:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:55:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:56:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:56:33] *** Joins: JavaBean (~JavaBean@user/javabean)
[02:56:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:56:50] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[02:56:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:57:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:57:26] *** Leonarbro_ is now known as Leonarbro
[02:57:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:57:38] <ferz> Can SQLAlchemy generate metadata from an existing database and store it into a python source file?
[02:57:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:58:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[02:58:15] <habnabit_> ferz, i'm not sure if reflection can do that exactly but i've seen generators for that at some point
[02:58:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:58:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:59:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:59:19] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Quit: Konversation terminated!)
[02:59:22] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[02:59:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:59:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[02:59:44] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[02:59:52] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 246 seconds)
[02:59:56] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:edff:946b:89ad:7dd5)
[02:59:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[02:59:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:00:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:00:31] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Client Quit)
[03:00:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 246 seconds)
[03:00:36] <janemba> hi
[03:00:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:00:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:01:12] *** Quits: quesker (~idnet@mail.89vx.net) (Quit: ZNC 1.7.2 - https://znc.in)
[03:01:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:01:32] *** Joins: Trieste (T@user/pilgrim)
[03:01:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:02:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:02:30] *** Joins: quesker (~idnet@mail.89vx.net)
[03:02:31] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[03:02:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:02:56] *** Quits: quesker (~idnet@mail.89vx.net) (Remote host closed the connection)
[03:03:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:03:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:03:44] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[03:03:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:04:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:04:57] *** Joins: wyclif (~wyclif@user/wyclif)
[03:05:05] *** Joins: twinsignal (~twinsigna@104.129.24.243)
[03:05:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:05:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:05:55] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (Client Quit)
[03:06:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:06:27] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[03:06:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:06:33] <janemba> is it possible to get the color with color code inside string in JSON ? -> https://pastebin.com/gwifAAy5
[03:06:40] <CobaltCam> habnabit_: Ahhh, so the loop isn't terminating early enough
[03:06:57] <ferz> habnabit_: thank you. I'm used in perl to use DBIx::Class::Schema::Loader that given a db connection creates files, one for each table, and retrieve also relationship between tables. ORM definition without hassle.
[03:07:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:07:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:07:30] *** Joins: parzival (~parzival@user/parzival)
[03:07:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:08:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:08:05] <ferz> I'm looking for something with similar features for SQLAlchemist
[03:08:17] *** Quits: twinsignal (~twinsigna@104.129.24.243) (Client Quit)
[03:08:29] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:08:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:08:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:09:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:09:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:09:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:09:57] <CobaltCam> Thank you for the help, I think I know how to fix this now.
[03:10:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:10:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:10:27] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[03:10:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:11:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:15:50] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:18:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:19:45] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[03:20:08] <nedbat> janemba: is your question about extracting info from json, or about interpreting those escape sequences?
[03:20:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:20:27] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:21:06] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[03:21:59] *** Joins: wyclif (~wyclif@user/wyclif)
[03:22:34] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[03:22:52] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:25:20] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[03:28:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:30:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:30:44] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:36:09] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[03:38:26] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[03:39:19] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[03:44:49] *** Joins: cman_ (~Cody@2603-9000-d104-8465-cda2-46d8-8c3a-d97d.inf6.spectrum.com)
[03:45:20] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 255 seconds)
[03:46:04] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[03:47:26] *** Joins: Hackerpcs (~user@user/hackerpcs)
[03:47:47] *** Quits: cman (~Cody@2603:9000:d104:8465:7db2:1203:6422:9d08) (Ping timeout: 252 seconds)
[03:49:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:49:52] *** Quits: ivan_ (~Ivyy@195.216.219.105) (Quit: Leaving)
[03:50:38] *** Joins: clf59 (~clf59@user/clf59)
[03:51:21] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:53:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[03:53:15] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:54:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[03:55:31] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 246 seconds)
[03:55:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[03:57:15] *** Joins: m4v (~znc@ubuntu/member/m4v)
[03:58:20] *** Joins: Celeo (~Celeo@user/celeo)
[03:58:34] *** Joins: tims (~tims@220.240.106.233)
[03:59:20] *** Joins: pnoud (~pnoud@user/pnoud)
[04:00:08] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[04:00:21] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 256 seconds)
[04:00:24] *** Joins: wyclif (~wyclif@user/wyclif)
[04:04:16] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[04:05:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[04:05:21] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[04:07:22] *** Joins: Celeo_ (~Celeo@user/celeo)
[04:08:17] <[itchyjunk]> I want to use file.write() and i want file.write(word1 + tab space + word2) so i can seperate things by a tab there :s
[04:08:38] <[itchyjunk]> i think it's \t but is it just word1 + '\t' + word2 ?
[04:08:48] <nedbat> [itchyjunk]: that should work
[04:08:56] <[itchyjunk]> ah
[04:09:11] <nedbat> [itchyjunk]: but you might like this better:  file.write(f"{word1}\t{word2}")
[04:09:58] <[itchyjunk]> hmmmm
[04:10:12] <[itchyjunk]> It's bytes, would that mess things up?
[04:10:13] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 246 seconds)
[04:10:32] <[itchyjunk]> i'm getting word1 word2 from some irc server and i can't be sure what encoding it is at any given time
[04:11:41] <[itchyjunk]> can if do if file.write(stuff) then: stuff ? that is use the file.write to be true to trigger an event?
[04:12:03] <nedbat> [itchyjunk]: ideally you would decode the bytes as soon as you get them. you can't just squirt bytes to your terminal and expect the right outcome.
[04:12:03] <MacGyver> Should work if you mark it as a bytes.
[04:12:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:12:29] <MacGyver> Assuming you actually want to *keep* the encoding you got for, I dunno, debug logging purposes.
[04:12:47] <MacGyver> But yeah, probably best to decode.
[04:13:02] <SnoopJ> nedbat, the discussion earlier made it sound like [itchyjunk] is working on something that's speaking IRC, but "decode is a good idea" came up then, too.
[04:13:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:13:42] <[itchyjunk]> hmm right people said something about irc not being consistent or somesuch with encoding?
[04:13:47] <[itchyjunk]> forgot the exact wording
[04:14:04] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[04:14:33] <SnoopJ> [itchyjunk], the protocol doesn't really care about the meaning (encoding) of the bytes being shuttled around
[04:15:04] <MacGyver> *that being said*, it's not 2010 anymore.
[04:15:23] <SnoopJ> MacGyver, what do you mean?
[04:15:37] <MacGyver> It's pretty safe to just assume utf8 and handle exceptions as the corner case that they're going to end up being.
[04:15:54] <MacGyver> (On IRC)
[04:16:03] <[itchyjunk]> hmm
[04:16:49] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Remote host closed the connection)
[04:16:50] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[04:17:37] *** Joins: wyclif (~wyclif@user/wyclif)
[04:18:05] <MacGyver> It's a far cry from when you actually had to deal with CP1252. But if you do run into trouble, well, just except-wrap your decode step and try it down the chain: first UTF8, then CP1252, and whatever's left is *really* going to be exceptional.
[04:18:08] <SnoopJ> Sopel tries UTF-8, cp1252, iso8859-1 in that order
[04:18:09] *** Joins: justache (~justache@user/justache)
[04:18:11] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[04:18:23] <[itchyjunk]> Damn, I can't open("file.txt","wr") ?
[04:18:24] <[itchyjunk]> ValueError: must have exactly one of create/read/write/append mode
[04:18:33] <[itchyjunk]> I can either read or right :s
[04:18:36] <MacGyver> Oh right, 8859-1.
[04:18:49] <MacGyver> And if it's in neither of those 3 you can tell the sending side to f* right off.
[04:19:52] <SnoopJ> [itchyjunk], you want mode="+" as described in the docs for open(): https://docs.python.org/3/library/functions.html#open
[04:20:19] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[04:20:20] <[itchyjunk]> ahh missed that one, thanks
[04:21:04] <SnoopJ> [itchyjunk], if you're not dying to write your own IRC framework, I would recommend picking an existing one and writing your bot in that. There is a lot that goes into handling the protocol.
[04:21:39] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:22:15] <[itchyjunk]> I figured i'd work on this one without a library. and maybe try a discord bot or somesuch in future with a library
[04:22:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[04:23:21] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:23:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:24:30] <MacGyver> IRC is a bit annoying because it's inherently async.
[04:24:59] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[04:25:19] <MacGyver> Not sure if that would be any different with Discord -- just, IRC isn't necessarily *easy* just because it's *simple*.
[04:25:21] <SnoopJ> [itchyjunk], as long as you know you're ordering that with the Pretty Hard task up front
[04:26:04] <pycurious> Before my package can work, I need to download some large files from the web. Is there a way to tell pip to get those files? (I am using pip install git+https://…)
[04:26:32] <SnoopJ> pycurious, do you want the `pip download` subcommand maybe?
[04:26:33] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[04:26:33] <nedbat> pycurious: pip won't do that, but your package can do it when it's first started
[04:26:48] <SnoopJ> oh, the package needs auxilliary data
[04:26:50] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:26:50] *** Wulf4 is now known as Wulf
[04:26:51] <SnoopJ> nvm me
[04:27:32] <pycurious> nedbat: so if the file is not there, it downloads it first time - is that what you are thinking?
[04:27:41] *** Joins: cjb (~cjb@user/cjb)
[04:27:49] <nedbat> pycurious: that could work, or an explicit initialization step.
[04:28:02] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[04:28:45] <pycurious> nedbat: but then the user will have to run it explicitly? no?
[04:29:02] <nedbat> pycurious: yes
[04:30:57] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:31:07] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[04:31:27] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-813e-39b4-ec58-a40f.res6.spectrum.com) (Read error: Connection reset by peer)
[04:31:29] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Remote host closed the connection)
[04:32:16] <pycurious> so the usser calls mypackage.install()?
[04:32:56] <nedbat> pycurious: that's an option.
[04:33:20] <nedbat> pycurious: for example, nltk does something like that: https://www.nltk.org/data.html
[04:33:22] <pycurious> nedbat: that download might take a few minutes, and is required only once
[04:33:37] <SnoopJ> this is common in the pytorch ecosystem as well
[04:33:50] <pycurious> perfect. Thanks. I'll use the nltk model.
[04:34:30] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:35:32] *** Joins: wyclif (~wyclif@user/wyclif)
[04:38:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[04:39:00] *** Quits: DX099 (~dx099@2a01:e0a:347:f1c1:9179:a6ce:9f64:aeb7) (Quit: Konversation terminated!)
[04:39:12] *** Joins: DX099 (~dx099@82-65-154-67.subs.proxad.net)
[04:40:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:41:14] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:41:35] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[04:43:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[04:43:38] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:45:22] *** Quits: DX099 (~dx099@82-65-154-67.subs.proxad.net) (Ping timeout: 240 seconds)
[04:46:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:48:34] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 240 seconds)
[04:48:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[04:49:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:49:16] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[04:50:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:50:18] <bilb_ono> would os.getenv(‘somevar’) ever return something different from echo $somevar?
[04:50:35] <bilb_ono> like if you are using os.getenv in a virualenv would that not use the bash enviroment variables?
[04:51:09] <BtbN> Not sure what you mean. If you change the envvar in between, it'll show something different.
[04:51:46] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[04:51:54] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[04:51:59] *** Joins: wyclif (~wyclif@user/wyclif)
[04:52:13] <cedric> the API is really nice: https://cvepremium.circl.lu/api_docs
[04:52:14] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Ping timeout: 252 seconds)
[04:53:00] <bilb_ono> BtbN: os.getenv says it returns “Enviroment variables”.  I am not clear on what that means. My understanding is that its anything you can echo in the shell.
[04:53:18] <bilb_ono> but does this refer to a different type of enviroment variable? like a python enviroment vs os enviroment?
[04:53:21] <BtbN> No, shell variables are not neccesarily environment variable
[04:53:25] *** Joins: jiffe (~jiffe@mail.nsab.us)
[04:53:31] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Ping timeout: 246 seconds)
[04:53:44] <BtbN> environment variables are a system wide concept, fully independend of any specific language
[04:54:21] <bilb_ono> BtbN: so if I have a file with the .env extension, and I source file.env, then it makes them shell variables, not system wide variable…
[04:54:24] <bilb_ono> I guess that makes sense
[04:54:40] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[04:54:41] <BtbN> the file extension has zero effect on what your shell does when you source it
[04:54:50] <BtbN> All it cares about is what's in the file
[04:55:05] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 255 seconds)
[04:55:07] <BtbN> If it exports some env vars, it'll export them. If not, then it won't.
[04:55:24] <bilb_ono> right but source <some file> make them shell variables, not enviroment variables right?
[04:55:37] <BtbN> source somefile just sources that file.
[04:55:38] <bilb_ono> if the file contains those variables
[04:55:57] <BtbN> If that file exports an env-var, that'll obviously show up in the environment
[04:56:25] <BtbN> If it just defines a variable without exporting it, that's just shell-internal
[04:56:41] <bilb_ono> I have variables.env that contains the line DJANGO_DEBUG=True. I do source variables.env. This makes it a shell variable. I know this because I can echo $DJANGO_DEBUG and it says True.
[04:56:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[04:57:03] <bilb_ono> oh so I need to specifically export that variable to the system in my variables.env file ?
[04:57:10] <phy1729> The environment is a list of key=value pairs that's passed from the parent to the child (unless overridden) when a new process is executed
[04:57:34] <phy1729> A shell variable may be put into the environment by  export variable_name
[04:57:54] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:59:12] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[04:59:36] <bilb_ono> ok thank you. it looks like the variables become system variable when I do export variable_name
[04:59:43] <bilb_ono> and thus os.getenv can see them
[05:00:27] *** Joins: P1RATEZ (piratez@user/p1ratez)
[05:00:34] <phy1729> I wouldn't call it a system variable as that confuses many thinking that setting or changing an environment variable in one process will be reflected elsewhere.
[05:00:55] <phy1729> The environment passes from parent to child and a child can't affect its parent's environment.
[05:02:24] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:03:38] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:edff:946b:89ad:7dd5) (Ping timeout: 255 seconds)
[05:03:54] *** hanaan is now known as Naan
[05:04:04] <bilb_ono> I am interested in whatever envorment os.getenv is referring to. So if thats the child enviroment, I would like to alter the child enviorment. I then do not care about the parent
[05:04:21] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:06:32] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:06:36] <BtbN> That makes no sense
[05:06:59] *** Quits: tims (~tims@220.240.106.233) (Ping timeout: 252 seconds)
[05:07:03] <BtbN> you can only ever alter your own environment. And any new children will inherit it.
[05:07:20] <BtbN> But only at that time. Future changes will not propagate down
[05:07:29] *** Joins: tims (~tims@14-200-6-147.static.tpgi.com.au)
[05:07:44] <BtbN> (Windows does some funky stuff that breaks that expectation at times, but that's not relevant for this)
[05:08:46] <bilb_ono> BtbN: I am trying to host a django app with docker. to do this they recommend putting variables into a enviroment variables file so that no secrets are in docker. I think you would do a similar thing in github. so then in my file I have os.getenv(‘DJANGO_SECRET_KEY’) and such. I am trying to figure out how to “Source” or do something to my file full of variables so that my django app works
[05:09:02] <bilb_ono> then I can do this in every enviroment I want to run the app. so that the varaibles arent hard coded
[05:09:07] <bilb_ono> does that make sense?
[05:09:29] <BtbN> A docker environment file is not a shell script though
[05:09:31] *** Joins: wyclif (~wyclif@user/wyclif)
[05:09:35] <BtbN> it very much WILL turn all of them into env vars.
[05:09:52] <AhmedAmerican> `root.find(".//{http://archer-tech.com/webservices/}SearchRecordsByReportResult").text` why we use `{}` or what the meaning of it here ?
[05:10:14] <BtbN> Usually your entrypoint script takes care of translating from Docker-Envvar-Based options to whatever options your application expects
[05:10:45] <bilb_ono> ok well just locally for instance. I have removed the hardcoded values and replaced them with os.getenv(‘somevariable’). I would like to export these so that my app works and I dont have to use a new settings.py file with hardcoded values
[05:11:09] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[05:11:13] <BtbN> Feel free to do so then?
[05:11:32] <bilb_ono> yeah but I dont (or didn’t know) how to do that.
[05:11:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[05:11:46] <bilb_ono> I didn’t know how to export them such that os.getenv could find them. hency my original question.
[05:12:02] <BtbN> Relying on a shell to feed options to your app is probably a bad idea though
[05:12:02] <bilb_ono> but it sounds like export variable in the variables file fixes that
[05:12:08] <BtbN> What if someone wants to run it without a shell?
[05:12:15] <janemba> nedbat: it's about interpreting escape sequences
[05:12:37] *** Quits: cedric (~cedric@2a01:cb11:867:c200:e767:9574:ddd:f7f4) (Quit: Konversation terminated!)
[05:12:39] <bilb_ono> how am I supposed to run this locally then? Do I re-hardcode the values into the settings.py file?
[05:13:01] <BtbN> Use commandline arguments?
[05:13:02] <bilb_ono> I guess theres probably a good django way to do this that I can ask about in the django channel
[05:13:15] <BtbN> No idea how django handles that, but can't you pass it arguments on startup?
[05:13:29] <nedbat> janemba: i'm not sure how best to get the color from an escape sequence. I guess there's a table someplace?
[05:13:34] <bilb_ono> umm maybe?
[05:13:43] <BtbN> Or probably a config file, which is more common with server-applications
[05:13:51] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Quit: Client closed)
[05:14:02] <jamiejackson> this is a LONG SHOT that anybody will know this but, i'm new to requests_mock (for mocking http requests during unit testing). i'm looking for a way to spy on its requests but i'm not sure how to do that and it's not documented (as far as i can tell)
[05:14:14] <BtbN> I'm sure there's libraries that support both a config file and env vars for settings, so you can support both worlds.
[05:14:30] <bilb_ono> it still feels like there will have to be two versions of settings.py.
[05:14:30] <BtbN> If Django doesn't even have that built in
[05:14:33] <bilb_ono> yeah that would be cool
[05:14:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[05:14:52] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:14:56] <BtbN> But the docker entrypoint script generating a config file on the fly from env vars is not at all uncommon
[05:15:42] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 272 seconds)
[05:15:48] <nedbat> jamiejackson: what do you want to get from spying on it? You want to know the URLs?
[05:16:29] <jamiejackson> nedbat, i want to see a post body, in my first use case
[05:17:24] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:18:07] <nedbat> jamiejackson: i've used requests_mock, but I don't know if i've grabbed post bodies from it.
[05:18:53] <jamiejackson> what about anything else, like request params, URL, response stuff, etc?
[05:19:05] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[05:19:23] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[05:20:29] <janemba> nedbat:Yes I have a table, the sequences for the colors are fine but once in json it disappears
[05:20:44] <nedbat> jamiejackson: what you do you mean, "it disappears"?
[05:21:09] <janemba> nedbat: let me show you an example
[05:21:21] <nedbat> jamiejackson: i'm looking. the code is here: https://github.com/edx/openedx-webhooks/blob/master/tests/conftest.py
[05:23:01] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:23:33] <nedbat> jamiejackson: request_history seems useful: https://github.com/edx/openedx-webhooks/blob/master/tests/conftest.py
[05:23:40] <nedbat> oops: https://github.com/edx/openedx-webhooks/blob/c2fafb7cb8ad36da34694de6d875047f816852ae/tests/faker.py#L113
[05:23:51] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 246 seconds)
[05:25:01] <jamiejackson> thanks nedbat, i'll try to make sense of that...
[05:25:59] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[05:26:20] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:26:21] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[05:26:33] *** Joins: wyclif (~wyclif@user/wyclif)
[05:27:30] <[itchyjunk]> err, is r+ and just + the same?
[05:27:54] <nedbat> jamiejackson: let me know if i can fill any gaps
[05:27:57] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:28:34] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[05:29:20] <janemba> nedbat: for example this: https://pastebin.com/PBQb47cr
[05:29:38] <[itchyjunk]> Also, what does "turncate a file" mean?
[05:29:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:30:01] <furrykef> What web framework should I use for my app? I only want a very simple interface that takes a string as input and prints some HTML as output.
[05:30:20] <furrykef> Also, let's suppose my memory requirements are tight, and I don't need to serve more than one request at a time.
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:47] <KirkMcDonald> [itchyjunk]: To truncate is to shorten. Usually with a file, it means to delete all of its content.
[05:31:11] <nedbat> furrykef: Flask is probably the right choice
[05:31:22] <[itchyjunk]> oh crap, i don't want to turncate a file then lol
[05:32:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[05:32:21] <KirkMcDonald> [itchyjunk]: truncate
[05:32:25] <furrykef> Isn't flask a little heavyweight for such a simple interface?
[05:33:09] <nedbat> furrykef: what measurement are you using to determine "heavy"?
[05:33:57] <[itchyjunk]> oh i see
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:34:20] <furrykef> Well, what's the advantage over using flask instead of just werkzeug, for instance?
[05:34:27] <furrykef> s/over/of/
[05:34:46] <BtbN> You are done in like 5 lines of code for the most simple case.
[05:35:30] <[itchyjunk]> if var has a `\r\n` at the end, is there an easy way to get rid of that? i could split the message based on \r\n or somesuch but \r\n in middle of a string might throw off the code
[05:35:33] <nedbat> furrykef: what kind of machine will this be running on? Are you resource-constrained?
[05:35:58] *** Joins: vimart (~vimart@85.255.237.147)
[05:37:49] <jamiejackson> nedbat, yes, request history is what i needed! helps to know the lingo
[05:37:50] <KirkMcDonald> [itchyjunk]: s.removesuffix("\r\n")
[05:38:03] <Byteflux> [itchyjunk]: var.rstrip('\r\n') if you don't care that it strips lone '\r' or '\n' trailing
[05:38:22] <furrykef> nedbat: VPS with 512 MB RAM that's running other stuff (notably a MediaWiki site).
[05:38:30] <[itchyjunk]> oh fancy
[05:38:39] <[itchyjunk]> Byteflux, so it works for all 3 cases?
[05:39:00] <Byteflux> the rstrip() one would remove trailing '\r' and '\n'
[05:39:01] <nedbat> furrykef: just use Flask, it will be fine :)
[05:39:01] <KirkMcDonald> Note that s.rstrip("\r\n") will remove an arbitrary number of \r and \n characters from the end.
[05:39:27] <KirkMcDonald> In any order and length.
[05:39:31] <[itchyjunk]> hmm
[05:39:36] <Byteflux> depending on what it's for it may or may not be what you want
[05:39:58] <[itchyjunk]> its for irc inputs from a server. it comes with \r\n after each line
[05:40:02] <KirkMcDonald> removesuffix() will remove a single instance of the exact suffix, if it is present.
[05:40:06] <Byteflux> for dealing with IRC messages, I would use rstrip() personally
[05:40:20] <[itchyjunk]> hmm okay
[05:40:21] <nedbat> [itchyjunk]: use s.rstrip(), it will remove all rtailing spaces
[05:40:30] <KirkMcDonald> IRC can be a bit fuzzy, so that may be best.
[05:40:50] <Byteflux> your IRC client/server *should* support any line endings, even if \r\n is the spec, for compatibility you want to support any possible line ending
[05:41:03] <Byteflux> some clients may only use \r, some might only use \n, some \r\n
[05:41:13] <furrykef> I'm looking at web.py and I'm thinking this might be what I'm looking for
[05:41:52] <Byteflux> note that you want rstrip('\r\n') specifically and not rstrip() (no args) because a trailing parameter can legally contain trailing spaces
[05:41:53] <nedbat> furrykef: my understanding is that web.py is not well-maintained
[05:42:35] <nedbat> furrykef: what made web.py look better than Flask?
[05:45:04] *** Joins: wyclif (~wyclif@user/wyclif)
[05:45:49] *** Joins: pete443 (~pete@user/pete443)
[05:46:52] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:5056:66c0:d6e:186f) (Remote host closed the connection)
[05:48:20] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:49:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[05:50:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:53:47] *** Joins: trench (trench@user/trench)
[05:53:58] *** Joins: kmh (~kmh@p200300df5f198e00daf0d5d59210689d.dip0.t-ipconnect.de)
[05:54:24] *** Joins: jdmark (~jdmark@67.8.137.130)
[05:57:30] *** Quits: jayteeach (~jared@2601:8b:4400:9cf3::14f3) (Ping timeout: 240 seconds)
[05:58:47] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 252 seconds)
[06:00:10] *** Joins: pnoud (~pnoud@user/pnoud)
[06:00:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:00:47] *** Quits: hposca (~hposca@node-1w7jr9phoke2swvj0j3acea4z.ipv6.telus.net) (Ping timeout: 255 seconds)
[06:01:03] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d9ab:a04a:5a43:5da4)
[06:01:18] *** Quits: vimart (~vimart@85.255.237.147) (Ping timeout: 272 seconds)
[06:01:37] *** Quits: Pseudocrat (~pseudo@user/pseudocrat) (Quit: WeeChat 3.2)
[06:01:47] *** Joins: ExTRaTeRrEsTRe (~extra@177.228.178.247)
[06:02:45] *** Joins: wyclif (~wyclif@user/wyclif)
[06:02:54] <Byteflux> [itchyjunk]: i write so many of these i figured i'd put this together for you. by far not the cleanest way to do it, but should be very compatible with most messages (no msg tags, though): https://ideone.com/RVBdaA
[06:03:01] <Byteflux> feel free to use or not use any of it
[06:03:25] <furrykef> nedbat: I guess 'cause the "Hello, world!" example is already pretty close to what I need
[06:04:09] <nedbat> furrykef: https://flask.palletsprojects.com/en/2.0.x/quickstart/#a-minimal-application ?
[06:04:36] <[itchyjunk]> i'll save it and try to figure it out at some point, thanks
[06:05:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[06:06:18] *** Joins: Pseudocrat (~pseudo@user/pseudocrat)
[06:06:25] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[06:06:43] *** Quits: kmh (~kmh@p200300df5f198e00daf0d5d59210689d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:08:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[06:08:49] <furrykef> nedbat: Why is that better, though?
[06:09:05] <nedbat> furrykef: better docs, more people using it to help if things go wrong.
[06:11:35] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[06:11:47] *** Joins: ominionx (~ominionx@38.135.235.14)
[06:11:48] *** Joins: brabrax- (~brabrax@user/brabrax)
[06:13:06] *** Joins: kmh_ (~kmh@p200300df5f086f00577dac48d2ae195c.dip0.t-ipconnect.de)
[06:24:00] *** Joins: gggkmp (~gggkmp@60.10.23.164)
[06:24:30] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[06:25:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[06:26:34] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[06:27:52] *** Joins: easior (~easior@61.155.142.70)
[06:28:04] *** Joins: minip (minip@user/minip)
[06:28:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:31:39] *** Quits: gggkmp (~gggkmp@60.10.23.164) (Remote host closed the connection)
[06:31:52] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[06:32:15] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[06:32:17] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 255 seconds)
[06:33:50] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Remote host closed the connection)
[06:34:48] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[06:36:14] *** Joins: audiocat (~audio@2603-8081-1800-6a65-bbfb-7743-e7ab-c12a.res6.spectrum.com)
[06:37:42] *** Joins: easior (~easior@61.155.142.70)
[06:39:39] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[06:42:56] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[06:43:38] *** Joins: zeden (~zeden@user/zeden)
[06:44:53] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 255 seconds)
[06:47:18] <cvmn> any hope to have python one day offer variables in secure memory?
[06:48:02] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 255 seconds)
[06:48:03] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[06:48:10] <cvmn> at least even something silly like `python --secure-emory script.py`?
[06:48:12] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:48:37] <cvmn> or.. is there any python wraper that runs cpython in itself in such a way to fool it to only use secure memory?
[06:49:31] *** Quits: Celeo_ (~Celeo@user/celeo) (Quit: Leaving)
[06:49:52] <FunkyBob> what do you consider to be "secure" memory?
[06:50:04] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:51:20] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 272 seconds)
[06:51:25] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:2042:a71:4322:6233) (Quit: Leaving)
[06:51:43] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[06:52:10] *** Joins: matsaman (~matsaman@user/matsaman)
[06:52:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[06:53:19] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:53:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[06:53:19] *** finn_elija is now known as FinnElija
[06:53:53] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d9ab:a04a:5a43:5da4) (Ping timeout: 255 seconds)
[06:53:53] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[06:54:13] <nedbat> cvmn: i'm also unfamiliar with secure memory
[06:54:30] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[06:54:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:55:00] <diogenese> not bouncing around inside the box?
[06:55:05] <cvmn> FunkyBob: as in the secure malloc offered by libsodium.  it's a memory that offers some security guarantees, such as not getting swapped, and always being zerod.
[06:55:19] *** Joins: Hanii (~textual@host86-184-47-37.range86-184.btcentralplus.com)
[06:55:30] <cvmn> https://libsodium.gitbook.io/doc/memory_management
[06:55:55] <nedbat> cvmn: python doesn't promise not to swap, but you don't have to worry about zeroing, Python won't give you a variable with uninitialized contents.
[06:55:58] <cvmn> void *sodium_malloc(size_t size);
[06:56:07] *** Joins: sydbarret (~anton@static-186-121-195-201.acelerate.net)
[06:56:13] <nedbat> cvmn: you could call sodium_malloc from Python if you wanted to.
[06:56:39] <cvmn> to store, say, a dictionary?
[06:56:54] <nedbat> cvmn: no, you wouldn't be able to do that.
[06:57:59] <nedbat> cvmn: how does libsodium guarantee that the memory won't be swapped to disk?
[06:58:18] <cvmn> is there any kind of general purpose app, that wraps around a child app, and intercepts its malloc calls, but internally routes it to sodium_malloc?
[06:58:33] <matsaman> do people usually get sensitive data out of swap and memory without having physical access also?
[06:58:58] <cvmn> nedbat: i guess it sets some flags to the kernel.  so the kernel knows that it must not swap it.
[06:59:17] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 255 seconds)
[06:59:59] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:00:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[07:01:09] <nedbat> cvmn: i have no idea what this is, but maybe it's what you want: https://github.com/unrelentingtech/pysectools
[07:01:53] *** Joins: easior (~easior@61.155.142.73)
[07:03:51] <SnoopJ> cvmn, what kind of data do you want to secure?
[07:04:07] <SnoopJ> Are you worried about attacks on specific parts of an application, or anywhere at all inside of it?
[07:04:34] <cvmn> SnoopJ: passwords.
[07:04:47] <cvmn> there is a dictionary full of passwords.
[07:05:02] <FunkyBob> attacks from outside t he process, I would assume
[07:05:16] <FunkyBob> and, yeah, some OSs provide  ways to say "give me wired/unswappable memory"...
[07:05:31] <SnoopJ> cvmn, I would say not storing passwords is a very good way to improve the security of that application, if salted hashes would suffice
[07:06:00] <FunkyBob> SnoopJ: sure, but that's no use if you're a client application
[07:06:04] <cvmn> SnoopJ: it's a password manager.  must store it.
[07:06:15] <SnoopJ> aha
[07:06:55] <[_]> file.read() gets entire file it seems. is it fine to read like this or should i read per line? i think it's fine unless my file is too big right?
[07:07:00] *** [_] is now known as [itchyjunk]
[07:07:38] *** Joins: khanred (~khanred@user/khanred)
[07:07:42] <cvmn> SnoopJ: otherwise i may need to reimplement it in c.  but i see it's not worth it.  if python could bun with --secure-malloc option, it would be great.  since sodium_malloc has same api as malloc.  i think can be done very easily in python
[07:07:44] <FunkyBob> [itchyjunk]: "fine" depends on context,
[07:07:44] <SnoopJ> [itchyjunk], if you care about content one line at a time, it's generally best to read the data this way.
[07:08:05] <SnoopJ> cvmn, you can customize memory allocation, sure: https://docs.python.org/3/c-api/memory.html#customize-memory-allocators
[07:08:14] <FunkyBob> cvmn: the issue I can see there is you may not want _all_ your vars in wired memory...
[07:08:59] <SnoopJ> Not sure if anybody's implemented such a thing since PEP 445 though
[07:09:10] <[itchyjunk]> ah i do care about spliting the content based on \t in each line
[07:09:16] <cvmn> FunkyBob: why not all?
[07:09:17] <[itchyjunk]> i guess i have to do it per line!
[07:09:29] <SnoopJ> cvmn, the big issue is that malloc() is not what you always get with CPython. It uses an internal arena allocation system for objects smaller than 512 bytes (which is most objects)
[07:09:51] <cvmn> but at some point it must call malloc.  no?
[07:09:59] <FunkyBob> cvmn: you don't want to allow _any_ of your app to ever swap out?
[07:10:06] <cvmn> e.g. python calls malloc, gets a big bag, then manages that big bag.  no?
[07:10:21] <SnoopJ> cvmn, establishing an arena requires calling malloc, yes.
[07:10:28] <cvmn> FunkyBob: right.
[07:11:23] <cvmn> SnoopJ: i don't get how that memory thing works.  does it work by me putting stuff in the header of my python script?
[07:11:40] <SnoopJ> cvmn, no, you are talking about changes to the runtime itself, which would require rebuilding libpython
[07:12:07] <cvmn> so all py apps will lose swappability
[07:12:44] <SnoopJ> cvmn, are you looking for a way to change malloc() for all code, or only certain code? This is basically a repeat of the question I asked earlier.
[07:12:53] <cvmn> any reason we can't have --secure-malloc argument for cpython?  so each instance is run with different malloc backend?
[07:13:20] <cvmn> SnoopJ: for only when i run app passman.py
[07:13:34] <SnoopJ> cvmn, okay, you could run this customized version only when running that, then.
[07:14:02] <SnoopJ> probably you would be better off finding a library that gives you a "vault" to store these passwords in
[07:14:09] <SnoopJ> than modifying the Python runtime
[07:14:22] <cvmn> so passman.py will basically ship with its whole turing-complete python interpretor.
[07:15:11] <cvmn> i guess it's easier for me to just rewrite my passman in c.
[07:15:34] <SnoopJ> cvmn, are you aware of the PyNaCl bindings to libsodium?
[07:15:53] <cvmn> no.
[07:16:14] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[07:16:41] *** Joins: easior (~easior@61.155.142.70)
[07:17:06] <cvmn> SnoopJ: i doubt it can use sodium_malloc for storing a python dictionary.  can it?
[07:17:06] <SnoopJ> https://pynacl.readthedocs.io
[07:17:31] <SnoopJ> cvmn, I don't know. If you're specifically interested in using libsodium with Python, it would be the logical place to begin your research.
[07:17:38] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[07:17:49] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:18:08] <cvmn> plan b:  can mainstream python add runtime --secure-malloc to cpython?
[07:18:10] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:18:21] <SnoopJ> nothing is blocking that proposal from being made
[07:18:39] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[07:20:08] <dodobrain> i have this class which allows me to start up a thread so it can do some processing. I want to be able to stop the processing and the process itself upon a keyboard interrupt. how would i go about it?
[07:20:09] <dodobrain> https://bpa.st/QZEQ
[07:20:54] <dodobrain> the try/except KeyboardInterrupt  works fine, but isnt there a better way than simply while True: sleep(1) ?
[07:21:03] <SnoopJ> cvmn, you should know that even if CPython got such a feature, you would not necessarily be secure on every implementation of the language. A 3rd-party library providing the interface to the malloc you want would be more durable across different runtimes, in addition to not requiring special invocation by the end user
[07:21:18] <SnoopJ> (and more importantly a version new enough to have the flag)
[07:21:19] <cvmn> yes.
[07:22:16] <cvmn> best would if python gets an mlock before variable names 1st time they're declared.
[07:22:39] <cvmn> e.g. mlock as a keyword.  eg. mlock mydic = {1:11, 2:22, ...}
[07:23:03] <cvmn> then let python throw an exception if secure malloc is not available
[07:23:09] <SnoopJ> that would be an even larger change, by several orders of magnitude
[07:23:35] <cvmn> try: mlock .... except SecureMemNotAvailable:  print('oh no!'); sys.exit(1)
[07:23:43] <SnoopJ> cvmn, why a keyword?
[07:23:52] <SnoopJ> if a foreign function call would suffice
[07:23:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:24:50] <cvmn> like, c__securemem_dict(...)?
[07:25:18] <SnoopJ> if you like
[07:25:40] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[07:26:30] <cvmn> mlock(mydic = {1:11, 2:22, ...})?
[07:26:50] <cvmn> mydic = mlock({1:11, 2:22, ...})?
[07:27:56] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[07:28:03] <SnoopJ> `secure_dict = somelib.swapless_dict({1:11, 2:22, ...})`
[07:28:59] <jinsun> dodobrain: you can add a handler for SIGINT  https://docs.python.org/3/library/signal.html#signal.signal
[07:29:28] <cvmn> SnoopJ: but that requires  somelib to reimplement a whole new dictionary, and not re-use python's dictionary, right?
[07:29:38] <fannagoganna> @jinsun I use SIGINT to kill my CLI's when typing Ctrl+C
[07:30:20] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:30:45] <SnoopJ> cvmn, is there a reason you want Python's dict implementation in particular, assuming we've introduced a third-party library?
[07:31:46] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[07:32:09] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[07:32:33] <cvmn> SnoopJ: not just a dict, but all other variable types.  as data in myd will be stored in other temporary variables (scalars, lists, etc) which --too-- must be in secure mem.  so if `mlock myd = {...}`, then x = myd[1]`, then the mlock should infect x and make it mlocked.
[07:33:10] <cvmn> or.. no need to infect.  i guess that's too complex.
[07:33:10] <SnoopJ> cvmn, like I said, this is an even larger change; you're not just talking about an implementation detail, you're changing the language itself
[07:33:11] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:33:16] <cvmn> mlock x = myd[1] is fine.
[07:33:44] <SnoopJ> and imbuing it with a thing it doesn't currently have: a particular opinion about memory in the runtime environment
[07:33:49] <cvmn> yes.  i guess this would be a neat python language feature.  it will cause new class of apps to be born in python
[07:35:57] <SnoopJ> awful lot of fuss to avoid using a task-specific library
[07:36:08] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 252 seconds)
[07:36:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:36:41] <cvmn> meanwhile will disable swap.  and hybernation i guess.
[07:36:51] <SnoopJ> especially given the implications for systems running Python where the concept of swap doesn't even exist
[07:36:56] *** Quits: NeoCore (~neocore@217.138.207.156) (Quit: Leaving)
[07:38:20] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[07:38:37] <SnoopJ> anyway, if you'd like to propose it as a feature, go for it :)
[07:38:58] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[07:39:56] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[07:40:00] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:40:24] <dodobrain> jinsun, umm i added a signal handler for sigint but it is not triggered at all on ctrl-c on the terminal
[07:41:16] *** Joins: mei (~mei@user/mei)
[07:42:08] <SnoopJ> cvmn, pysectools (shared earlier) also does look like it has some of the security features you're interested in
[07:42:25] <sydbarret> anybody has used signals in scrapy? i wanna run a code after a batch of scrape urls has ended
[07:42:56] <sydbarret> https://docs.scrapy.org/en/latest/topics/signals.html
[07:43:02] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Client Quit)
[07:43:05] *** Quits: ExTRaTeRrEsTRe (~extra@177.228.178.247) ()
[07:43:23] <SnoopJ> looks like it disables swapping by calling mlockall() in libc https://github.com/unrelentingtech/pysectools/blob/master/pysectools/__init__.py#L56-L63
[07:43:42] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[07:44:41] *** Joins: KindOne (~KindOne@user/kindone)
[07:45:08] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[07:49:12] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:49:14] *** Quits: KindOne (~KindOne@user/kindone) (Ping timeout: 255 seconds)
[07:50:31] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[07:51:10] *** Joins: nac (~nac@user/nac)
[07:51:17] <jinsun> dodobrain: show your code with the handler?
[07:51:30] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:51:40] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[07:52:33] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:52:53] <dodobrain> jinsun, https://bpa.st/PHQA
[07:52:58] <Repiphany> I'm trying to use pyinstaller on windows 10, python 3.9.6 to package something that embeds an ipython shell, but there's a problem when trying to use tab autocomplete. https://bpa.st/PQQQ
[07:53:40] <Repiphany> Anyone know how to add the grammar txt files that parso uses for pyinstaller
[07:53:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[07:54:45] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[07:55:38] *** Joins: parzival (~parzival@user/parzival)
[07:56:01] *** Joins: great_taste (~great_tas@190.32.235.15)
[07:57:26] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:58:00] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[07:58:02] *** Joins: KindOne (kindone@user/kindone)
[08:00:15] *** Quits: Elzington (~Elzington@static-198-54-128-46.cust.tzulo.com) (Quit: Leaving)
[08:00:55] *** Joins: imp (~imp@186.205.11.214)
[08:01:01] *** Joins: pnoud (~pnoud@user/pnoud)
[08:02:00] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[08:04:25] <rannnn8888> Strange question, I'm running a script from CMD , But when the pycharm software is open in the background the script in CMD responds faster, in a second faster does it make sense?
[08:04:43] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 246 seconds)
[08:05:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[08:06:08] *** Quits: fluiD (~fluiD@66.186.209.60) (Quit: Leaving)
[08:06:17] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[08:06:23] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[08:08:29] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[08:09:03] <SnoopJ> Repiphany, you might try `--collect-data parso` or maybe --collect-all
[08:09:14] *** Joins: KindOne (kindone@user/kindone)
[08:10:17] <jinsun> dodobrain: hmm seems like that handler will run after the join completes, so it is useless for you
[08:11:25] <dodobrain> yeah, so whats my option to remove the spinlock ?
[08:13:21] *** Joins: candyman (~candyman@user/candyman)
[08:13:59] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 255 seconds)
[08:14:29] <[itchyjunk]> line = file.readline() while line != '': print(line) line.readline
[08:14:38] <[itchyjunk]> with proper indentation, does that look correct?
[08:14:58] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:15:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:17:34] *** Joins: KindOne (kindone@user/kindone)
[08:21:17] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Quit: WeeChat 3.2)
[08:21:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:23:21] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:28:23] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[08:28:54] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Remote host closed the connection)
[08:28:56] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[08:30:30] *** Quits: easior (~easior@61.155.142.70) (Quit: Leaving)
[08:31:42] <SnoopJ> [itchyjunk], no, `line.readline` will be accessing that attribute on an instance of str, which has no such attribute.
[08:33:10] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[08:33:46] *** Quits: audiocat (~audio@2603-8081-1800-6a65-bbfb-7743-e7ab-c12a.res6.spectrum.com) (Ping timeout: 246 seconds)
[08:33:48] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[08:34:09] <[itchyjunk]> ah so the while is messed up ?
[08:34:20] <[itchyjunk]> that would explain why it's stuck in infinite loop if so
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:40] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[08:36:41] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:37:16] <[itchyjunk]> ah i found better example further down in the tutorial, should have kept reading
[08:39:14] *** Joins: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net)
[08:39:14] *** Quits: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net) (Client Quit)
[08:40:22] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[08:41:07] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 246 seconds)
[08:41:53] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 255 seconds)
[08:42:27] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:43:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:45:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:46:53] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Remote host closed the connection)
[08:46:59] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 252 seconds)
[08:47:29] *** Joins: gggkmp (~gggkmp@221.219.70.176)
[08:47:40] *** Joins: akoana (~ah@user/akoana)
[08:48:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[08:49:12] *** Joins: audiocat (~audio@2603-8081-1800-6a65-63a8-70ba-985b-6ade.res6.spectrum.com)
[08:52:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:52:40] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:54:22] * u4t facewalls
[08:54:33] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[08:54:54] <u4t> i think all this code i wrote last week can be junked
[08:55:07] <kushal> u4t, we all feel that.
[08:55:30] <u4t> i'm not sure though (:
[08:55:40] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:55:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[09:00:32] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:03:59] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[09:04:17] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[09:04:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:05:14] *** Quits: srhm (~ascii@user/srhm) (Remote host closed the connection)
[09:05:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[09:06:16] *** Joins: HaMsTeRs (~mx@121.202.92.70)
[09:10:31] *** Quits: gggkmp (~gggkmp@221.219.70.176) (Ping timeout: 246 seconds)
[09:10:32] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[09:12:04] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:12:43] *** Parts: great_taste (~great_tas@190.32.235.15) ()
[09:12:53] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:13:49] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:14:54] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[09:15:42] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:15:50] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:16:26] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:17:16] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:17:23] *** Quits: kushal (~hopless@dgplug/kushal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:20:47] <robyndrake> Please, anyone know of a good tutorial for python and mongodb, or is there a better NoSQL database for python?
[09:20:52] *** Joins: hposca (~hposca@node-1w7jr9phoke2u2nhpnpnvkkwv.ipv6.telus.net)
[09:21:29] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 255 seconds)
[09:22:07] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[09:23:53] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:23:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:25:57] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:26:26] *** Quits: hposca (~hposca@node-1w7jr9phoke2u2nhpnpnvkkwv.ipv6.telus.net) (Ping timeout: 255 seconds)
[09:27:47] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[09:31:50] *** Joins: stranac (~stranac@195.29.239.126)
[09:32:07] *** Joins: dvx (~dvx@185.63.97.64)
[09:34:32] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 255 seconds)
[09:34:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[09:34:55] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Ping timeout: 268 seconds)
[09:36:01] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:37:11] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Remote host closed the connection)
[09:37:47] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[09:39:09] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[09:39:55] <mdk> robyndrake: why do you need NoSQL in the first place ?
[09:39:55] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 246 seconds)
[09:40:08] <robyndrake> just dumping data for now
[09:40:21] <robyndrake> uncategorized, unsorted
[09:40:33] <robyndrake> then I'll clean it up and put into a relational database
[09:40:51] <mdk> If it fit on your machine, you don't need NoSQL engines like mongodb. MongoDB has a lot of drawbacks, it only wins features when the data *does not fit* in a single machine.
[09:41:35] <mdk> robyndrake: so (but I don't know the size of you data) why not just putting it in an sqlite database ? It's built into Python, it's easy and fast, and if you don't want relations for the moment just create a single table ?
[09:41:39] <u4t> oh good, i actually DO need the code i wrote last week (:
[09:42:22] <robyndrake> mdk, that may be a better idea, but will sqlite work without a table?
[09:43:07] <mdk> robyndrake: no you'll need to create at least one table (doable in a single line of Python), like in MongoDB you'll need to create at least one database (single line of Python too I bet).
[09:43:28] <robyndrake> ok
[09:43:56] <vdamewood> robyndrake: Also, with SQLite, the column type is merely a suggestion.
[09:44:08] <robyndrake> oh ok
[09:44:52] <vdamewood> So a simple, one-table KVP store is pretty easy with SQLite.
[09:51:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[09:53:20] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[09:53:49] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[09:53:56] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Remote host closed the connection)
[09:58:01] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:58:21] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 268 seconds)
[09:58:22] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[09:59:28] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:01:49] *** Joins: pnoud (~pnoud@user/pnoud)
[10:02:22] <rannnn8888> have pack get requset speed up :d ?
[10:02:37] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[10:03:08] *** Quits: HaMsTeRs (~mx@121.202.92.70) (Quit: Konversation terminated!)
[10:03:10] *** Joins: brickfat (~brickfat@user/brickfat)
[10:05:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:06:02] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[10:06:49] *** Joins: VaniaPy (~VaniaPy@46.12.210.52.dsl.dyn.forthnet.gr)
[10:07:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[10:07:20] *** Parts: VaniaPy (~VaniaPy@46.12.210.52.dsl.dyn.forthnet.gr) ()
[10:10:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[10:11:20] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[10:14:27] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:15:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 255 seconds)
[10:19:42] *** Joins: CombatVet (~c4@user/combatvet)
[10:23:25] *** Joins: upsala (~zcb@185.213.155.160)
[10:25:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:26:32] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[10:27:12] *** Joins: upsala (~zcb@185.213.155.160)
[10:31:35] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[10:31:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:32:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:34:52] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[10:35:02] *** Joins: mirai (~mirai@2001:bc8:630:161::1)
[10:37:38] *** kostkon_ is now known as kostkon
[10:43:15] *** Joins: wyclif (~wyclif@user/wyclif)
[10:43:18] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[10:43:58] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[10:44:28] *** Parts: mattf (~mattf@li908-138.members.linode.com) ()
[10:44:48] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:45:08] *** Joins: jaggz (~jaggz@user/jaggz)
[10:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[10:45:49] *** Joins: chele (~chele@user/chele)
[10:46:10] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:41] *** Joins: seednode (~seednode@user/seednode)
[10:46:58] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:48:53] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[10:49:06] <enrh> Is there a possible race condition if opening a SQLite DB file in read-only that is currently being used by another Python process?
[10:50:56] *** Joins: gusto (~Augustus@109.255.100.54)
[10:51:09] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[10:52:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:53:39] *** Quits: sydbarret (~anton@static-186-121-195-201.acelerate.net) (Remote host closed the connection)
[10:54:20] *** Joins: rendar (~rendar@user/rendar)
[10:54:38] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 255 seconds)
[10:54:45] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[10:56:26] *** Joins: BillyZane2 (~BillyZane@91.196.220.173)
[10:57:20] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:57:54] <deniska> enrh: sqlite handles being opened from different processes gracefully
[10:57:55] <rindolf> enrh: does the other proc writes to it?
[10:57:57] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:58:57] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[10:59:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[10:59:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:59:55] *** Joins: rememberYou (~someone@user/rememberyou)
[11:00:09] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:00:32] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 252 seconds)
[11:00:36] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:00:40] <deniska> enrh: https://sqlite.org/lockingv3.html this page describes the technical details, but TLDR is "writer will wait until other processes finished reading, and then readers will wait until a writer is done"
[11:01:18] <enrh> deniska, interesting. That answers my question, thank you!
[11:01:41] <enrh> rindolf, it does. One does the writing, the other occassionally reads it
[11:01:46] <enrh> Thank you both!
[11:01:47] <deniska> enrh: for typical usage it's basically seamless
[11:01:48] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[11:02:20] <enrh> Yeah it's working for me just as you explained, but I was skeptical. Now I'm not :)
[11:02:23] *** Joins: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net)
[11:04:15] *** Joins: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d)
[11:04:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:04:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:04:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:05:41] *** Quits: LiftLeft (~LiftLeft@154.21.114.118) (Ping timeout: 252 seconds)
[11:06:13] *** Joins: inom (~inom@176.59.102.225)
[11:07:05] *** Quits: inom (~inom@176.59.102.225) (Client Quit)
[11:09:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:10:50] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[11:10:55] <deniska> enrh: possible pitfalls are: networked file systems, basically don't use sqlite on one unless you are really familiar with how it does file locking, and sharing a single connection objects between multiple threads, just… don't do that :)
[11:11:49] <rindolf> deniska: thanks for helping enrh [and me]
[11:12:48] <nubonix> how can i schedule tags in pyqt5?
[11:12:54] <nubonix> tasks*
[11:13:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:14:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:15:44] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[11:16:02] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[11:17:28] <EvilDMP> Sorry for the noise from my IRC client overnight. I am not sure what happened there.
[11:17:55] <rindolf> nubonix: use the event loop
[11:18:27] <nubonix> rindolf ?
[11:18:46] <nubonix> found apschedule seems to do what i need [i think]
[11:18:58] <rindolf> nubonix: https://wiki.qt.io/Timers
[11:19:19] *** Joins: doev (~doev@p549d78c6.dip0.t-ipconnect.de)
[11:19:38] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[11:21:46] *** Quits: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 246 seconds)
[11:22:01] <rannnn8888> maybe someone know how install the pack ? faster-than-requests
[11:22:39] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[11:22:45] <rannnn8888> i get " No matching distribution found for faster_than_requests"
[11:22:51] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[11:23:06] *** Joins: palasso (~palasso@user/palasso)
[11:25:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[11:25:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:25:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[11:25:59] *** Joins: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:27:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:27:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:27:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:28:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:28:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:29:21] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[11:29:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:29:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:29:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:30:01] *** Quits: kmh_ (~kmh@p200300df5f086f00577dac48d2ae195c.dip0.t-ipconnect.de) (Quit: Leaving)
[11:30:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:30:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:31:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:31:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:31:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:33:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:33:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:33:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:34:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:34:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:34:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:35:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:35:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:36:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:36:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:36:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:37:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:37:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:38:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:38:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:38:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:39:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:39:38] *** Joins: node1 (~node1@user/node1)
[11:39:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:40:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:40:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:40:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:41:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:41:38] *** Joins: Meteorhead (~Meteorhea@lfbn-idf1-1-703-113.w86-245.abo.wanadoo.fr)
[11:41:55] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[11:41:56] *** Joins: candyman (~candyman@user/candyman)
[11:41:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:42:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:42:30] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[11:42:31] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[11:42:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:42:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:43:14] *** Parts: mattf (~mattf@li908-138.members.linode.com) ()
[11:43:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:43:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:44:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:44:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:44:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:45:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:45:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:46:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:46:27] *** Joins: nicxz (~nicxz@user/nicxz)
[11:46:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:46:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:47:01] *** Joins: crawler (~crawler@user/crawler)
[11:47:09] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:47:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:48:56] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:49:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[11:49:10] *** Joins: f1se4 (~f1se4@213.195.100.109)
[11:49:46] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 246 seconds)
[11:50:13] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[11:50:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:50:34] *** Joins: candyman (~candyman@user/candyman)
[11:50:45] <graingert> nubonix: you can just start a task and run anyio.sleep(delay)
[11:51:00] <graingert> await anyio.sleep(delay) ofc
[11:51:09] <nubonix> mm i suppose
[11:52:02] <nubonix> im scheduling a weeks worth at a time, and a possible change could be on every 15th minute of the day, and im running anywhere from 1-100 of these
[11:52:25] <nubonix> every 15 minutes* [that was a weird way to word that...]
[11:52:25] *** Joins: azazello (~azazello@109.75.158.195)
[11:52:48] <nubonix> so idk, my brain hasnt grabbed ahold of howto yet
[11:53:29] *** Quits: icy (~icy@user/icy) (Remote host closed the connection)
[11:53:30] <nubonix> im liking the apscheduler as it seems organized, but no vid tutorials so im struggling a bit
[11:53:33] <rannnn8888> graingert  you know if i  can speed up my request time when i scrap same site ? have way use like concurrent.futures + requests.Session()
[11:53:34] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:53:58] <rannnn8888> same site diffrent end point i mean
[11:54:03] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:54:08] <nubonix> rann888 you can do it that way, but there is a library designed for scraping `scrapy`
[11:54:08] <graingert> rannnn8888: I use httpx and aiometer
[11:54:31] <nubonix> httpx is still kinda fragile though
[11:54:55] <nubonix> aiometer a throttling library?
[11:54:58] *** Quits: Pseudocrat (~pseudo@user/pseudocrat) (Quit: WeeChat 3.2)
[11:55:28] <graingert> httpx is pretty robust tbh
[11:55:32] <nubonix> that httpx comment may be wrong, but idk
[11:55:42] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[11:55:46] <graingert> I've not had too many problems with it especially on trio
[11:56:17] <nubonix> well, i guess my lack of experience [shows] and im probably alot more prone to breaking things
[11:56:26] <nubonix> so* im prob
[11:56:31] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Client Quit)
[11:56:46] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 246 seconds)
[11:56:49] <nubonix> maybe it wasnt httpx that broke on me... idr, ill retract my comment
[11:57:11] <nubonix> rannnn8888: guess it depends on your goals and experience
[11:57:25] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[11:57:56] <nubonix> be mindful that things like require alot more comprehension than sequential does
[11:58:09] <nubonix> things like async* [howd that get deleted >.>]
[11:59:07] <rannnn8888> nubonix sorry i cheack the httpx , now i use concurrent.futures + request its fast but But because it is the same site I thought it was possible to speed it up even more
[11:59:31] <nubonix> more sites the better, not the reverse
[11:59:33] <rannnn8888> now to request i take like 1 sec
[11:59:43] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:59:49] <nubonix> you could possibly shut down the site if you hit it too fast
[12:00:05] <graingert> rannnn8888: Yeah the requests.Session pool has trouble sharing between threads
[12:00:06] <nubonix> but until then [idc] :D
[12:00:41] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 252 seconds)
[12:00:43] <nubonix> mm you cant connect to the internet faster, but you can optimize sure, but its not going to be your connection most likely
[12:00:56] *** Joins: upsala1 (~zcb@193.32.127.230)
[12:01:05] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[12:01:07] <nubonix> what i mean is, instead of using bs4 find a library that isnt so heavy
[12:01:21] <nubonix> this isnt the i/o workload, but it does make it faster
[12:01:47] <nubonix> other optimizations could be timeouts, error handling, # of concurrency
[12:01:58] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[12:02:15] *** Joins: zaquest (~notzaques@5.128.210.178)
[12:02:42] <nubonix> "why does setting a timeout increase speed?" well, if you expect a response by 5 seconds, and your 1 thread is waiting 20 seconds before it default timeouts, well you just saved yourself 15 seconds per thread [that fails]
[12:03:00] <rannnn8888> graingert what u mean ? requests.Session pool has trouble sharing between threads ? but have way make this
[12:03:11] *** Joins: upsala2 (~zcb@185.213.155.160)
[12:03:13] <rannnn8888> when u say in httpx ?
[12:03:25] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:03:28] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[12:03:35] <graingert> rannnn8888: httpx.AsyncClient can be shared between concurrent tasks
[12:03:58] <graingert> Then you don't need to wait for a TLS connection to be made
[12:04:18] *** Parts: mattf (~mattf@li908-138.members.linode.com) ()
[12:04:43] *** Quits: doev (~doev@p549d78c6.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[12:04:46] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 268 seconds)
[12:05:10] <graingert> If you can reuse it
[12:05:13] *** Joins: icy (~icy@user/icy)
[12:05:25] <graingert> Also you can enable http2 to use fewer connections
[12:05:32] <u4t> wat
[12:05:45] *** Joins: doev (~doev@p4ff44791.dip0.t-ipconnect.de)
[12:05:47] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[12:06:10] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 240 seconds)
[12:06:13] *** Quits: upsala1 (~zcb@193.32.127.230) (Ping timeout: 246 seconds)
[12:06:14] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[12:06:28] *** Joins: gggkmp_ (~gggkmp@221.219.70.176)
[12:06:41] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[12:07:32] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Remote host closed the connection)
[12:10:57] <nubonix> graingert have you used apschedule before?
[12:11:18] <nubonix> i ask cause ik you pre much my goto for all things idk
[12:11:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:11:46] <nubonix> also, wdym http2 uses few connections?
[12:12:43] <nubonix> why do i only get a "hello world" print once from the hw function? [apschedule] https://bpa.st/RTLQ
[12:13:50] *** Joins: Pickchea (~private@user/pickchea)
[12:14:49] <rannnn8888> graingert have link example  how u mean ? httpx.AsyncClient() i need use here the httpx.AsyncClient()  + the concurrent.futures togther ?
[12:15:05] <nubonix> one or the other
[12:15:23] <nubonix> mixing the two doesnt make sense
[12:17:56] <rannnn8888> nubonix so what its the aiometer ?
[12:18:09] <nubonix> not sure im assuming its a throttler, but check readthedocs
[12:18:41] <nubonix> throttled connections can actually be faster than nonthrottled b/c of the server response time
[12:19:04] <rannnn8888> nubonix i not find "aiometer" in google
[12:19:19] <nubonix> there isnt a way to "go as fast as possible without breaking anything" library, so guess in check is required
[12:19:39] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[12:19:55] <nubonix> bruh first result... https://github.com/florimondmanca/aiometer
[12:20:24] <nubonix> and yeah, it does what i thought, throttling
[12:20:39] <nubonix> hence the name :D
[12:20:43] <graingert> It throttles tasks
[12:20:56] <graingert> But can actually result in better performance
[12:21:15] <nubonix> lols
[12:21:22] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[12:21:31] <nubonix> graingert concurs :D
[12:21:31] <graingert> Eg if you just fill a deque with unrunnable async functions then crash you didn't do much scraping
[12:22:03] <nubonix> wut
[12:22:26] * nubonix googles deque
[12:22:29] <graingert> Like you have to actually wait for stuff
[12:22:43] <nubonix> right but isnt async designed to wait for me?
[12:23:14] <nubonix> like... yo, you go over there and tell this server this, and lmk when you get an answer
[12:23:31] *** Quits: f1se4 (~f1se4@213.195.100.109) (Quit: WeeChat 2.8)
[12:23:37] <graingert> Right but you can take a list of URLs and start a task for every one
[12:23:41] *** Joins: stranac (~stranac@195.29.239.126)
[12:23:44] <graingert> Without waiting
[12:23:50] <nubonix> fetchall yeah
[12:24:02] <nubonix> whats the deque / have to do with it?
[12:24:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:24:19] <graingert> That's how the scheduler works in asyncio
[12:24:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:24:35] <graingert> It has a deque of Handles that represent the thing you're awaiting on
[12:24:38] <nubonix> oh okay, so after a response is found, it deques the task [cleanup]
[12:24:54] <graingert> For every operation
[12:25:05] <nubonix> ok so thats the "overhead"
[12:25:26] <graingert> So usually you want to use something like aiometer so you can stream abstract tasks from a source
[12:25:38] <nubonix> eg?
[12:25:40] <graingert> Then compute them and stream the results to a database
[12:25:48] <nubonix> oh right
[12:25:55] <nubonix> the scheduling bit of aiometer
[12:25:57] <graingert> And if the Database is slow rather than results building up in memory new tasks don't get started
[12:26:04] <graingert> It's knows as backpressure
[12:26:14] <graingert> Known
[12:26:16] <nubonix> smart
[12:26:40] <nubonix> def smart()
[12:26:41] <nubonix> :D
[12:26:52] <nubonix> oh that double pun
[12:27:33] <nubonix> oh right i get it now
[12:27:38] *** Quits: gggkmp_ (~gggkmp@221.219.70.176) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:27:49] <nubonix> [your comment earlier]
[12:28:14] *** Quits: audiocat (~audio@2603-8081-1800-6a65-63a8-70ba-985b-6ade.res6.spectrum.com) (Ping timeout: 255 seconds)
[12:28:20] <nubonix> the deque is the overhead tho yeah?
[12:28:25] <nubonix> has to be
[12:28:35] <nubonix> or at least part of it
[12:28:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[12:29:05] <nubonix> is there a way to catch if the database cant keep up [logging?]
[12:29:27] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[12:31:22] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 240 seconds)
[12:31:34] <graingert> I don't think out of the box
[12:32:01] <graingert> but you can wrap `await anext(aiter)` calls in a timer
[12:32:32] <graingert> and asyncgen `yield` calls
[12:34:13] <nubonix> uh huh im going to pretend i understand that so i can ask my next q
[12:34:36] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:34:56] <graingert> you can also pass a limiter subclass into aiometer
[12:35:04] <graingert> that handles task idle notiications
[12:35:15] <nubonix> notifications or events?
[12:35:28] <nubonix> ignore that
[12:35:30] <graingert> it calls a method on your limiter
[12:35:39] <nubonix> callback?
[12:35:48] <graingert> right but an async def callback
[12:35:52] <graingert> you see a lot of them in SC
[12:35:53] <nubonix> right
[12:35:57] <nubonix> SC?
[12:36:02] <graingert> structured concurrency
[12:36:13] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[12:36:21] <nubonix> makes sense
[12:36:32] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:40] <nubonix> smooth* concurrency u mean
[12:36:40] <nubonix> :D
[12:38:02] *** Joins: pycode (~pycode@2001:b07:5d28:551:94a7:8b08:6e08:452a)
[12:39:33] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[12:39:38] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:48] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Client Quit)
[12:40:33] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[12:40:55] <nubonix> what a monkey... no wonder why it wasnt running the schedule forever... "Background"Scheduler aint designed to be doing that... l0l how about... "BlockingScheduler" ftw
[12:41:54] <nubonix> graingert perhaps you could help me with a topdown perspective?
[12:42:07] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[12:42:12] <nubonix> bottomup is how i think... and it sucks
[12:42:17] <graingert> ?
[12:43:26] <nubonix> nvm, by writing it out to explain it to you solved my problem
[12:43:29] <nubonix> :D
[12:43:55] <nubonix> perhaps you have some more / different insight though
[12:44:20] <nubonix> okay, so i have a pyqt app, and i have tasks that i can start and stop [QThreads], and each task is to start/stop a schedule of tasks to be running
[12:44:41] <nubonix> i think its pre simple though... nvm
[12:45:11] *** Joins: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de)
[12:45:50] <u4t> ok i think i might need to rewrite this parser without regexes
[12:46:09] <u4t> for one thing, it's not picking up closing braces
[12:46:11] <u4t> yay
[12:46:24] <nubonix> with the way that im storing schedules [day of the week & time of day in 15 minute increments] i just gotta convert that into an apschedule. Assign an id to each task_thread, and have the start/stop button call the appropreiate apschedule.start/stop task
[12:46:41] *** Joins: brickfat (~brickfat@user/brickfat)
[12:46:50] <nubonix> sweet deal, tyvm for being there [soundingboard] graingert :)
[12:46:55] * u4t grumbles at nested syntax
[12:47:07] <nubonix> regex is not fun...
[12:47:16] <nubonix> r u parsing html?
[12:47:20] *** Joins: mrwick (~mrwick@user/mrwick)
[12:47:20] <u4t> regex is fun until you have to count stuff
[12:47:24] <u4t> similar
[12:47:29] <nubonix> wdym similar
[12:47:33] <nubonix> yes/no
[12:47:36] <u4t> no
[12:47:54] <nubonix> what format?
[12:47:58] <u4t> yes
[12:47:59] <u4t> (:
[12:48:03] <nubonix> ha
[12:48:05] <nubonix> :D
[12:48:10] <u4t> trying to customise string.Formatter
[12:48:24] <nubonix> ?
[12:48:28] <u4t> yah
[12:48:39] <nubonix> idk the string library very well :-/ soz
[12:48:57] <nubonix> still dono what your trying to parse tho
[12:49:20] <nubonix> perhaps use something besides regex or r u not wanting to part
[12:49:22] *** Quits: ray (~ray@user/re) (Ping timeout: 240 seconds)
[12:49:37] * nubonix thinks that there has to be an easier solution
[12:50:28] *** Joins: kmh (~kmh@p200300df5f086f00577dac48d2ae195c.dip0.t-ipconnect.de)
[12:50:59] <kiwikiwik> hi! do you reinstall dev-dependencies like `pytest` or `flake8` in every venv? i use poetry and i don't wan't to add them manually every time
[12:51:22] <u4t> my brain is sufficiently broken for tonight
[12:51:41] <kmh> u4t,  lol
[12:51:56] <kmh> at least it's just for tonight
[12:52:04] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:52:06] <u4t> yah
[12:52:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:52:10] <u4t> there's always tomorrow (:
[12:52:35] *** Joins: KevinX (~KevinX@94.140.11.95)
[12:52:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[12:53:17] *** Lord_of_Life_ is now known as Lord_of_Life
[12:55:47] *** Quits: p-i-_ (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[12:56:00] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:56:19] *** Joins: p-i- (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net)
[12:57:40] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:57:56] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[12:58:02] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:58:12] <rannnn8888> greyrat here ?
[12:58:55] *** Parts: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Leaving)
[12:59:15] *** Joins: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311)
[12:59:18] <Wulf> rannnn8888: yes, we've got one of those.
[12:59:18] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:00:53] *** Quits: p-i- (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[13:00:56] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Client Quit)
[13:01:13] <nubonix> kiwikiwik: well the way i would do it is with a .bat or .sh but idk a way to do it in python besides subprocess [these probably arent the best options, but as a last resort]
[13:01:46] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:01:53] <nubonix> graingert: oh right, wdym by http2 is faster?
[13:02:41] <kiwikiwik> nubonix: thank you, i'm interested if there's a best practice approach
[13:02:48] <rannnn8888> nubonix https://dpaste.org/5iPq what worng here i dont use before ? SyntaxError: 'async with' outside async function
[13:02:53] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 255 seconds)
[13:03:18] <nubonix> rannnn8888: exactly what it says
[13:04:02] <rannnn8888> nubonix i dont sure how its need look :x
[13:04:08] <nubonix> there arent great examples that ive found to learn async, but if you use the most basic asnyc complete code and figure out what its doing by dissecting it, you will start to learn async
[13:04:44] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[13:04:53] <nubonix> hmm alright lemme take a look, glanced, seems you are defining the function correctly :D
[13:05:06] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[13:05:16] <rannnn8888> nubonix yep i take the example from the aiometer doc to try
[13:05:30] *** Joins: gstaniak (~gstaniak@212.187.221.34)
[13:05:47] <nubonix> rannnn8888: please post the full traceback for this code
[13:06:22] <rannnn8888> https://dpaste.org/NNhQ
[13:06:25] <nubonix> also, i suggest a context manager when using httpx
[13:06:41] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[13:06:54] <nubonix> oh okay, idk anything about functools, but this isnt how i would call that function
[13:07:12] <nubonix> so what thats telling me is aiometer needs to be in an async function, because its an async func
[13:07:22] <rannnn8888> nubonix Slowly you have a lot more knowledge and experience: D I want to start here at the base to see how it works
[13:07:30] <nubonix> so put it in an async func and call it via asyncio.run()
[13:08:00] <nubonix> is aiometer using functools in its docs?
[13:08:09] <gstaniak> What would be the best way to compare many objects for equality? I mean, I can test the boolean value of "obj_a == obj_b", but I have up to a few dozen of these objects. What's the accepted algorithm for this? Couldn't find much in google so far.
[13:08:34] <nubonix> a loop?
[13:09:05] <nubonix> gstaniak: a loop?
[13:09:10] <graingert> gstaniak: you want them all equal?
[13:09:18] <graingert> gstaniak: is this in a test case?
[13:09:20] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:10:04] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[13:10:07] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[13:10:16] <graingert> gstaniak: a dozen is a lot I'd probably write it out like `assert a == b == c == d == e == f == g == h == i == j == k == l` in a pytest
[13:10:26] <gstaniak> nubonix: I need to catch discrepancies, because they should be equal. It's not a test, I'm verifying the results of a data sync across servers.
[13:10:32] <graingert> and then have black autoformat it into a nice expression
[13:10:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:10:39] <rannnn8888> nubonix yep in the example https://github.com/florimondmanca/aiometer
[13:10:42] *** Joins: manti7 (~manti7@176.10.104.94)
[13:10:47] <graingert> oh right you could use a set gstaniak
[13:10:59] <nubonix> gstaniak: listen to graingert has 1000x the experience i do
[13:11:19] *** Joins: Doffi (~doffi@91.132.197.188)
[13:11:19] <gstaniak> graingert: I tried using a set, but the object are not hashable
[13:11:48] <graingert> gstaniak: hmm why are they not hashable?
[13:11:58] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[13:12:04] <gstaniak> graingert: based on dict
[13:12:22] <graingert> gstaniak: maybe load the dict into a frozen dataclass?
[13:12:46] <nubonix> rannnn8888: it says alternatively?
[13:13:13] <rannnn8888> nubonix yep its try this two
[13:13:18] <rannnn8888> i try *
[13:13:45] <nubonix> lemme see if i can get it to work, if all else fails im sure grain will help :)
[13:14:34] <rannnn8888> nubonix why its write example a Not working :D
[13:14:51] <nubonix> rannnn8888: 99% of things you will find dont work as examples
[13:14:57] <nubonix> they are only bits of code
[13:14:59] <gstaniak> graingert: I thought about this, but then I lose equivalence. These are configparser objects. Configs are distributed across servers, I'm trying to catch issues with that. But the config sync may produce configs with different section order or some whitespace difference, when I freeze them they no longer compare as equal, even though as configparser objects they are equivalent (== gives True).
[13:15:10] <nubonix> trust me i find it aggravating as well
[13:15:54] <rannnn8888> graingert so u know how its need to look Right ? https://dpaste.org/GopE
[13:16:04] <nubonix> rannnn8888: works fine
[13:16:05] <nubonix> :D
[13:16:36] <nubonix> rannnn8888: alright please dissect & ingest this [more] https://bpa.st/AX5A
[13:16:45] <graingert> rannnn8888: I'd do it with `async with httpx.AsyncClient() as client:`
[13:16:54] <graingert> and also I don't like to use httpx.Request objects
[13:17:03] <nubonix> ^ context manager :D
[13:17:28] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[13:17:31] <graingert> I prefer to just call `async def async_fn(client, whatever, data): return await client.get(whatever, data=data)`
[13:17:39] <nubonix> rannnn8888: oh right, as i and graingert stated, use a context manager, b/c like me, im sure you will probably forget to close the session as i put in that example
[13:18:01] <nubonix> so that session is still active even after the program closes because it was never closed
[13:18:32] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:18:54] <graingert> rannnn8888: you'll also need to end your file with: https://www.irccloud.com/pastebin/rfHBUqUk/aboilerplate.py
[13:19:14] *** Quits: noobly (~user@50.38.126.25) (Ping timeout: 252 seconds)
[13:19:51] <nubonix> rannnn8888: heres an example with a context manager https://bpa.st/AEPA
[13:19:56] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[13:20:13] <graingert> I feel like mypy has stolen `...` from me
[13:20:34] <graingert> I used to use `def fn(): ...` to mean "please fill this in"
[13:20:39] <nubonix> your stealing from me!
[13:20:43] <graingert> but now it means body left blank for type annotations
[13:20:49] <nubonix> rofl, but yet again, your approach is still better >.>
[13:20:53] <graingert> so I want a `def fn(): ???`
[13:21:45] <nubonix> graingert alright so breaking your boilerplate down
[13:21:51] *** Joins: candyman (~candyman@user/candyman)
[13:21:59] <rannnn8888> nubonix nice but what its want when its get this error ? TypeError: type 'partial' takes at least one argument
[13:22:04] <nubonix> [still havent answered my q about http2 speed boosting >.< but w/e]
[13:22:23] <ferz> is there a way to update pip3 repository to get newest packages?   I've installed SQLAlchemy and it's 1.3.x while I would prefer to use 1.4.x.
[13:22:23] <graingert> oh right http2 saves having to make a bunch of round trips for each new connection
[13:22:29] *** cman_ is now known as cman
[13:22:39] <graingert> ferz: that's the default
[13:22:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:23:01] <nubonix> rannnn8888: i tried to use better practice when passing arguments but it didnt like the keywords i used, so replace that line with this one `functools.partial(fetch, client),`
[13:23:09] <ferz> graingert: thank you.  How can I change default?
[13:24:00] *** Quits: node1 (~node1@user/node1) (Ping timeout: 272 seconds)
[13:24:13] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:b058:24e1:6e32:1842)
[13:24:15] <Widdershins> ferz: did you install it directly or did you receive it while installing something else that uses it
[13:24:25] <nubonix> rannnn8888: however, a better way to approach your question would be, what is different from the last one i posted vs this one
[13:25:09] <nubonix> graingert: please describe a higher level of roundtrips if you dont mind :)
[13:25:26] <nubonix> idk what round trips are so..
[13:25:32] <graingert> like when you make an http 1.1 connection it makes a TCP connection
[13:25:36] <nubonix> right
[13:25:42] <nubonix> http2 uses udp?
[13:25:50] <nubonix> nvm ill hush n listen
[13:26:12] <graingert> https://usercontent.irccloud-cdn.com/file/2Gthcarv/image.png
[13:26:20] <graingert> http3 uses quic which uses udp
[13:26:39] <ferz> Widdershins: I've installed it directly
[13:26:52] <nubonix> sweet exactly how i was thinking [didnt elude to it at all tho]
[13:27:11] <graingert> nubonix: that image is from https://dzone.com/articles/benefits-of-rest-apis-with-http2 but the article has a number of innacuracies
[13:27:12] <nubonix> http1.1 sends one request at a time, while http2 sends a few
[13:27:26] <graingert> but you can send multiple requests concurrently by opening multiple TCP connections
[13:27:38] <nubonix> yeah so kinda like a sequential vs async
[13:27:41] <graingert> whereas with http2 you can multiplex concurrent requests over a single TCP connection
[13:27:42] <nubonix> ?*
[13:28:00] <graingert> right it's a bit like an upside event loop
[13:28:01] <ferz> Widdershins: 1.3.x it's one year old.
[13:28:07] <nubonix> so
[13:28:22] <Widdershins> ferz: what command did you use to install it?
[13:28:37] <nubonix> one request is sent to get index.html, and an entirely new request is sent to get index.js and the results are collected in a session?
[13:28:44] <nubonix> in http1.1
[13:28:52] <graingert> yeah but you have to do that either way in http1 or http2 now
[13:29:01] <nubonix> ?
[13:29:30] <graingert> there used to be a thing where you could GET index.html and it would send you styles.css and scripts.js
[13:29:36] <graingert> in addition to index.html
[13:29:43] <nubonix> even with 1.1?
[13:29:50] <graingert> technically yes
[13:29:51] *** Joins: Teacup_ (~teacup@user/teacup)
[13:29:55] <nubonix> hmm
[13:29:57] <ferz> Widdershins: pip3 install SQLAlchemy
[13:30:10] <nubonix> but that doesnt exist anymore, so how is http faster? the other stuff that it has to grab?
[13:30:21] <nubonix> amskfdmaskfasdf not http, but http2
[13:30:25] <graingert> nubonix: sending unsolicited responses is technically a http1.1 spec violation
[13:30:29] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 268 seconds)
[13:30:44] <Widdershins> ferz: you're installing it in the system python?
[13:30:44] <graingert> but you can totally do it, and people used it to make webcams work in ie4
[13:30:44] <ferz> Widdershins: I thought that pip3 installs only most updated packages
[13:30:55] <nubonix> graingert: i could see how that would be good
[13:31:01] <graingert> but it made ads load slower so google killed it
[13:31:05] <nubonix> at least for scraping :D
[13:31:06] <ferz> Widdershins: yes, I do
[13:31:20] <graingert> right but you probably don't want it for scraping
[13:31:33] <graingert> like you want the html and don't give a toss about the .css file
[13:31:33] <Widdershins> ferz: ok, i'm not 100% sure what your system python is going to be doing and it's generally a bad idea to install stuff there instead of using a virtualenv
[13:31:41] <graingert> and you just get sent it and have to throw it away
[13:31:42] <nubonix> graingert if im scraping index.html i dont want index.css
[13:31:54] <nubonix> lols
[13:32:20] <nubonix> wait lemme back up a sec, i understand it looks like, but got terms confused somewhere
[13:32:25] <ferz> Widdershins: virtualenv multiplies libs in the system.
[13:32:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[13:32:47] <nubonix> http1.1 ~= sequential and http2 is ~= async
[13:33:01] <nubonix> so http1.1 is supposed to only send whatever i request
[13:33:06] <graingert> they have different approaches to multiplexing
[13:33:09] <Widdershins> ferz: ?
[13:33:10] <nubonix> and http2 can send more than what i request
[13:33:17] <nubonix> graingert: okay
[13:33:18] <graingert> right but it doesn't do it anymore
[13:33:25] <graingert> and http1.1 could also do it
[13:33:27] <nubonix> that last comment makes the most sense
[13:33:38] <nubonix> `they have different approaches to multiplexing`
[13:33:56] <ferz> Widdershins: every user or project can install virtualenv and load its libs
[13:33:58] <nubonix> couldnt that also be slower though? http2
[13:34:03] <nubonix> for scraping at least
[13:34:06] <Widdershins> ferz: yes, that's the idea
[13:34:27] <nubonix> [is what you were trying to say]
[13:34:29] <ferz> Widdershins: I prefer a single installation system wide at the moment
[13:34:38] <Widdershins> ferz: that way you don't have to put your packages in the system where they might mess with the python scripts that make your whole system work
[13:34:54] *** Joins: varaindemian (~varaindem@86.124.78.162)
[13:35:49] <ferz> Widdershins: is python following the perl troubles about it?
[13:36:08] <Widdershins> i do not know what you are asking
[13:37:09] <ferz> Widdershins: many years ago perl was used by OSes and you could not update part of it without break something in the OS
[13:37:13] <graingert> nubonix: generally http2 will be faster for making lots of concurrent requests
[13:37:24] <graingert> and about the same for sequential requests
[13:37:38] <graingert> probably slightly faster due to hpack
[13:37:46] <nubonix> graingert but why? if it has to send me all the other junk that a browser would use
[13:38:19] <Widdershins> ferz: you are probably not super likely to break the OS but it can at least be difficult to undo what you've changed. dependencies may not be compatible. it is widely advised not to install things in the system python like this, for very good reasons
[13:38:34] <nubonix> graingert scraping json from a website for example
[13:38:34] <Widdershins> virtualenvs are clean and easy and cheap and they work
[13:38:46] <ferz> Widdershins: ok, thank you
[13:38:48] <nubonix> [this has been primarly my own use-cases]
[13:38:54] <shan> https://github.com/shantaram3013/mkproj/blob/main/mkproj.py can haz code review?
[13:39:11] <ferz> Widdershins: is it like perlbrew then?
[13:39:24] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:39:27] *** Joins: ray (~ray@user/re)
[13:39:31] *** Joins: Pseudocrat (~quassel@user/pseudocrat)
[13:39:33] <Widdershins> ferz: i have no idea
[13:40:17] *** Joins: p-i- (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net)
[13:40:23] <nubonix> graingert i guess im not following the simplistic logic of it [surely downloading more things than i want to has to be slower?]
[13:40:56] <nubonix> graingert i also know im not accounting for any algos that may make it faster [hpack? idk what this is but im assuming thats what you are reffering to]
[13:41:11] <graingert> nubonix: right but people don't do it anymore
[13:41:26] <nubonix> dont do what?
[13:41:34] <graingert> send unsolicited responses
[13:42:03] *** Joins: jazzy2 (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235)
[13:42:07] <nubonix> so if the img u sent earlier is inaccurate, how does http2 gain its speed?
[13:42:23] <graingert> you can multiples multiple requests in a single tcp socket
[13:42:31] <graingert> and a single TLS stream
[13:42:47] <nubonix> okay, and 1.1 cant?
[13:42:56] <graingert> it can but only sequentially
[13:43:03] <graingert> and often it doesn't work
[13:43:08] <nubonix> wut
[13:43:16] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:43:16] *** Joins: gggp (~gggp@60.10.194.47)
[13:43:40] <nubonix> so 1.1 == a TLS stream of 1 request?
[13:44:04] <nubonix> or it can have multiple like http2, but doesnt do it very well as http does
[13:44:16] <nubonix> http2
[13:44:16] <supakeen> I think TLS and HTTP is being conflated.
[13:44:44] <Widdershins> what? lol, yeah. HTTP 1.1 has literally nothing to do with TLS
[13:44:53] *** Joins: Warped (~Warped@user/warped)
[13:44:54] <Widdershins> 1.1 is a version number
[13:44:54] *** Quits: acid (~acid@user/acid) (Ping timeout: 272 seconds)
[13:44:58] <supakeen> HTTP/2 supports multiplexing various requests over the same connection (at the same time), HTTP/1.1 (not 1.0), supports a sequential stream of requests.
[13:45:04] <supakeen> This means that responses must come in the order they were requested.
[13:45:21] *** Joins: pnoud (~pnoud@user/pnoud)
[13:45:23] <supakeen> HTTP/2 (and HTTP/3) don't have that requirement, responses and requests can come in any order they want to.
[13:45:27] <nubonix> yeah ik what sequential is, but idk what `stream` is
[13:45:44] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:b058:24e1:6e32:1842) (Ping timeout: 252 seconds)
[13:45:49] <supakeen> Just a bunch of requests :)
[13:45:54] <nubonix> but thanks, takes a load off of graingert
[13:45:55] <Widdershins> series of things that come in order. no special meaning to the word here
[13:45:57] <supakeen> Pretend they're floating down a stream (or river).
[13:46:15] <nubonix> ok so stream == async
[13:46:15] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Quit: Konversation terminated!)
[13:46:21] <Widdershins> no
[13:46:23] <supakeen> No, those two words are not related.
[13:46:24] *** jazzy2 is now known as jazzy
[13:46:32] <nubonix> difference?
[13:46:36] <jor> http 1.1 calls it pipelining, but nobody is using that, since concurrent connections work better
[13:46:38] *** Joins: akaWolf (~akaWolf@akawolf.org)
[13:46:48] <supakeen> Async is a programming paradigm and a stream is some data in order.
[13:46:55] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:47:00] *** Joins: acid (~acid@user/acid)
[13:47:03] <nubonix> but the way the react is the same
[13:47:09] <supakeen> jor: Pipelining is actually in use quite a bit (perhaps not between client and server but in between servers it is very much so).
[13:47:42] <jor> true, talking in the context of browsers
[13:47:46] <supakeen> There is however a lot of huff-puff around idempotency so you're invalidating connections all the time :)
[13:48:09] <graingert> It's absolutely about TLS!
[13:48:29] <graingert> That was one of the big sells of http2 is that it makes TLS everywhere viable
[13:48:52] <supakeen> No, it was one of the big arguments around http2 that it required TLS to do ALPN.
[13:49:03] <Widdershins> graingert: they were assigning some special significance to 1.1, the HTTP version number, to something about TLS
[13:49:41] <graingert> Right but mobile devices got hot doing RSA handshakes all the time for every request
[13:49:42] <supakeen> But HTTP/2 the protocol can run over non-TLS connections just fine.
[13:50:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[13:50:10] <graingert> And http 2 means you only need to do one handshake for multiple concurrent requests
[13:50:40] <nubonix> thats only if you are using the same credentials tho yah?
[13:50:51] <graingert> Nope
[13:50:52] <supakeen> Your browser still opens multiple HTTP/2 connections to avoid head-of-line.
[13:51:02] <nubonix> v interesting
[13:51:08] <supakeen> (and there's often multiple hosts involved *anyways*).
[13:51:14] <graingert> You can use different cookies for different requests
[13:51:15] *** Joins: RougeR (~rougex250@user/rouger)
[13:51:24] <graingert> And you can use the same host for multiple origins
[13:51:34] *** Quits: gstaniak (~gstaniak@212.187.221.34) (Quit: Leaving)
[13:51:42] *** Joins: entuland (~entuland@user/entuland)
[13:51:55] <graingert> The whole point of http2 is so Google can send more ads to lower power devices
[13:51:55] <supakeen> HTTP/2 is more about a faster window scaling than the handshaking being heavy, you don't need HTTP/2 to get that advantage (TLS session resumption is sufficient).
[13:51:56] <nubonix> graingert: okay, but sequential can do cookies for diff reqeusts as well
[13:52:24] *** Quits: spithash (~spithash@user/spithash) (Quit: leaving)
[13:52:32] <nubonix> graingert: i guess that wouldnt being sharing though
[13:52:57] <supakeen> HTTP connections do not carry state in general, no matter if that is HTTP/1, 2, or 3.
[13:53:05] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 256 seconds)
[13:53:16] <nubonix> wdym state
[13:53:17] <graingert> Well hpack carries state
[13:53:59] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[13:54:08] <supakeen> graingert: For some value of state.
[13:54:36] <supakeen> nubonix: What I mean is you don't say 'this connection belongs to nubonix'.
[13:54:46] <supakeen> You always look at the requests inside that connection to determine that.
[13:55:02] <nubonix> proof?
[13:55:04] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[13:55:15] <supakeen> Any HTTP implementation.
[13:55:15] <nubonix> requests inside == proof?
[13:55:21] <nubonix> mb
[13:55:32] <nubonix> didnt declare what i meant at all
[13:56:06] <tWqaq> Hi, I get those errors or warnings when close Clocks after launch the code when using loop = GLib.MainLoop.new(None, False) / loop.quit() / loop.run() / loop.unref():
[13:56:07] <tWqaq> (_jb_pytest_runner.py:91833): GLib-GObject-WARNING **: 16:40:49.818: invalid unclassed pointer in cast to 'WnckClassGroup'
[13:56:07] <tWqaq> (_jb_pytest_runner.py:91833): GLib-CRITICAL **: 16:40:49.818: g_hash_table_remove_internal: assertion 'hash_table != NULL' failed
[13:56:07] <tWqaq> (_jb_pytest_runner.py:91833): GLib-CRITICAL **: 16:40:49.818: g_hash_table_remove_internal: assertion 'hash_table != NULL' failed
[13:56:10] <tWqaq> Code is here: https://bpa.st/FOYQ
[13:56:12] <tWqaq> Any help welcome, I have tried my best to debug this kind of issue, but I failed, It's difficult to find the cause. I'm new to Gtk / Glib.
[13:56:18] <nubonix> supakeen for example, when you buy beer, the cashier asks you for your id because you cant say that im nubonix im 21+
[13:56:41] <supakeen> Where are you going with this?
[13:56:53] <nubonix> the request has my id
[13:57:17] <nubonix> its me thats sending the request, but the id verifies its me
[13:57:37] <supakeen> Sure.
[13:57:37] <nubonix> im thinking of an ipv4
[13:57:39] <nubonix> mk
[13:58:03] <Widdershins> nubonix: request authentication in http is basically never tied to what connection the request comes in on
[13:58:05] <nubonix> tWqaq: please use a pastebin like site
[13:58:06] <grawity> I think the point is that in http, this sort of thing happens individually for each request, and not for the entire connection as a whole
[13:58:14] <supakeen> The request can contain the information about who or what you are, the connection itself doesn't have that information.
[13:58:20] <nubonix> tWqaq: for tracebacks as well
[13:58:23] <grawity> (unless you're Microsoft and are trying to cram NTLM into HTTP)
[13:58:37] *** Quits: jancoow (~jancoow@dhcp-077-251-034-091.chello.nl) (Changing host)
[13:58:37] *** Joins: jancoow (~jancoow@user/jancoow)
[13:58:37] <Widdershins> it is *not safe* to associate authentication to anything outside the data of the request itself
[13:59:32] <nubonix> supakeen: well tehy dono i wanna buy until i send the "request" [im thinking of the connection as walking into the store]
[13:59:35] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[14:00:00] <Widdershins> nubonix: that's not how the connection does or even can work in http
[14:00:06] <Widdershins> nor https
[14:00:07] <supakeen> I think you're making the wrong analogy.
[14:00:18] <nubonix> hmm, alright
[14:00:23] <supakeen> It's more like we put a tube through the wall and I assume any message that comes through the tube is coming from you.
[14:00:36] *** Joins: ExpiredKebab (~expiredke@121.74.209.17)
[14:01:04] <nubonix> but im not the server?
[14:01:07] <supakeen> As opposed to looking in the messages who they belong to.
[14:01:12] *** Joins: asa22 (~asa22@www.asa2.xyz)
[14:01:18] <tWqaq> nubonix: https://bpa.st/EJAQ
[14:01:21] <grawity> hmm tbh the store did seem like a good analogy
[14:01:33] <tWqaq> nubonix: https://bpa.st/FOYQ
[14:01:35] <nubonix> tWqaq: y was i tagged?
[14:01:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:01:35] *** Quits: ExpiredKebab (~expiredke@121.74.209.17) ()
[14:02:01] <asa22> Is there a premade function in python to insert a char every X chars in a string?
[14:02:02] <nubonix> tWqaq: i was asking for compliance to edicacy
[14:02:03] <Widdershins> nubonix: it's safe to assume that, because of TLS guarantees, the party who receives the reply that is sent back is the same party who sent the request. it is not safe to assume that more than one request were sent on behalf of the same party.
[14:02:54] *** Quits: MikZyth (~MikZyth@188.65.242.201) (Quit: WeeChat 3.1)
[14:03:11] <nubonix> Widdershins: right so the way https works [hi server, server says hi & is this you? and i reply, yep, you got me / still me]
[14:03:22] <nubonix> ajdfmadsf ignore pleas
[14:03:23] <Widdershins> HTTPS is literally HTTP-over-TLS. it's just one inside the other. HTTP is almost entirely divorced from the idea of connections: you have a request, and you generate a response for it. you don't know about the connection
[14:03:31] <nubonix> oh? hmm
[14:03:42] <nubonix> https == http + tls?
[14:03:46] <Widdershins> yes
[14:03:49] <nubonix> wut
[14:03:50] <nubonix> l0l
[14:04:00] <nubonix> major facepalm moment...
[14:04:10] <nubonix> wait
[14:04:18] <Widdershins> HTTP is "stateless"
[14:04:22] <nubonix> so... when a site like amazon says they use tls, what does that mean?
[14:04:28] <Widdershins> HTTP requests have no history
[14:04:31] <tWqaq> sorry, I have put my code in a pastebin site
[14:04:33] <nubonix> like i cant use the requests library ?
[14:04:43] <nubonix> [isolating the TLS part]
[14:04:50] *** Joins: spithash (~spithash@user/spithash)
[14:05:23] <Widdershins> nubonix: not sure what you're asking
[14:05:26] <nubonix> Widdershins: isnt that what cookies are for?
[14:05:51] <Widdershins> nubonix: yes, cookies *are sent with every request*
[14:05:55] <nubonix> Widdershins: mm, nvm, i need more information myself
[14:06:11] <supakeen> There's not that much information, HTTP the application protocol is divorced from the transport it goes over.
[14:06:33] <supakeen> It can be straight up TCP, it can be TLS-over-TCP, it can be a UNIX domain socket, or it can be pen and paper.
[14:06:41] <nubonix> supakeen no, theres more context, but its not relevant
[14:06:47] <Widdershins> a cookie is not something that attaches itself to the network session, it's a value that the browser sends back attached to all future requests
[14:06:52] <shan> can initialising a string or list fail
[14:06:58] <shan> supakeen: can it be avian carriers
[14:07:05] <Widdershins> shan: yes
[14:07:12] <nubonix> Widdershins: wut how
[14:07:16] <shan> Widdershins: yes to which
[14:07:23] <nubonix> mylist = list()   # how can this fail?
[14:07:24] <Widdershins> shan: yes to birds
[14:07:28] <shan> oh
[14:07:31] <shan> nubonix: oom
[14:07:34] <shan> or something
[14:07:38] <nubonix> oom?
[14:07:41] <Widdershins> there are a lot of ways that initializing a list can fail
[14:07:46] <shan> in C malloc would return null in an out of memory condition
[14:07:56] <shan> is there any way to detect and handle this in Python
[14:07:57] <supakeen> Yes, and like in C it's rare that you can recover.
[14:08:01] <nubonix> invalid types?
[14:08:02] <supakeen> You'd catch MemoryError.
[14:08:03] <nubonix> hmm
[14:08:11] <shan> supakeen: aha, so it exists, nice
[14:08:12] *** Quits: asa22 (~asa22@www.asa2.xyz) (Quit: Client closed)
[14:08:21] <supakeen> And then handle it how you want to handle it, but like I said you usually can't handle it :)
[14:08:36] <shan> right
[14:08:38] <Widdershins> nubonix: no it doesn't care about types, but it also doesn't catch errors that bubble up from the underlying iterable and it doesn't stop until the iterable is exhausted
[14:09:00] <supakeen> (even in C, you usually only check the error and exit)
[14:09:05] <shan> right
[14:09:12] <nubonix> Widdershins: so every object is listable?
[14:09:14] <nubonix> hmm
[14:09:22] <nubonix> thought numpy might throw an error
[14:09:28] <Widdershins> or you don't have anything to catch because the operating system OOM-killer lops the head off your process and you don't even make it that far
[14:09:46] <Widdershins> nubonix: numpy arrays are not lists
[14:09:54] <nubonix> ^
[14:09:55] <Widdershins> they are numpy arrays
[14:10:02] <nubonix> tru tru
[14:10:08] <shan> aren't userspace programs usually the last thing to get killed in an OoM scenario
[14:10:19] <shan> except for chromium ofc ;_;
[14:10:22] <nubonix> tru, tru*
[14:10:34] <nubonix> alright well im TLS's out for today
[14:10:38] <The-Compiler> shan: IIRC Chromium adjusts its OOM scores so that it gets killed first
[14:10:46] <shan> yeah
[14:10:56] <Widdershins> sticks its neck out, so to speak
[14:11:10] <The-Compiler> nubonix, Widdershins: Whatever you pass to list() will need to be iterable, see e.g. list(None)
[14:11:20] <supakeen> The scoring is also not that easily grokked.
[14:12:10] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:12:31] *** Joins: timkofu (~timkofu@user/timkofu)
[14:12:31] *** Joins: Naan (~Naan@user/naan)
[14:12:35] <ferz> Widdershins: using virtualenv how can I get SQLAlchemy 1.4.x instead of 1.3.x?
[14:12:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:12:48] <Widdershins> ferz: pip install sqlalchemy
[14:13:12] *** Joins: wyclif (~wyclif@user/wyclif)
[14:13:23] *** Joins: node1 (~node1@user/node1)
[14:13:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:13:58] <ferz> Widdershins: thank you again.
[14:14:03] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Quit: Leaving)
[14:14:14] <Widdershins> ferz: you probably also need to be using python >= 3.6
[14:14:41] <Widdershins> it looks like sqlalchemy 1.4 dropped support for python 3.4 and 3.5
[14:14:50] <nubonix> ferz you can also specify a version doing this `pip install package==1.1.1` package being whatever package you are installing and after the == is any version you want to install that is available on pypi
[14:16:04] <nubonix> but yes Widdershins shins is also correct, using pip install without the == installs the latest stable version
[14:16:13] <Widdershins> https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-f814d2919aaf5a56b06fed34b031638a
[14:16:14] *** Quits: Strom (strom@fedora/strom) ()
[14:16:49] <Widdershins> basically python 3.5 is EOL and you should not be using it
[14:17:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[14:17:08] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 255 seconds)
[14:17:19] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[14:17:36] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[14:17:41] <Widdershins> anything before python 3.6 is dead and python 3.6 will also be dead in 5 months. use 3.9 if you can
[14:17:46] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[14:18:16] *** Joins: Strom (strom@fedora/strom)
[14:18:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:19:10] <nubonix> not sure i agree with Widdershins here as for deving on your own, but the learning curve will be steeper when you need to upgrade to a newer python version
[14:19:24] *** Joins: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e)
[14:21:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[14:22:01] *** Quits: {HD} (~{HD}@191.96.185.62) (Ping timeout: 246 seconds)
[14:22:07] <roelj> I am writing a package (called 'example') with three modules: 'ui.py', 'config.py', and 'api.py'. Now, I'd like to use a procedure from 'config' in 'ui. What should the import statement look like? 'import example.ui'?
[14:22:36] <supakeen> I prefer the explicit way of doing it so I usually from `import example.ui as ...`
[14:25:15] <roelj> Oh right, so if I have a procedure 'show_help()' in example.ui, I can do: 'from example.ui as ui', and then call that procedure as 'ui.show_help()'?
[14:25:37] <nubonix> apscheduler question, ive got QThreads that im using to start/stop tasks, but idk if i should use the QScheduler or the Background scheduler?
[14:25:51] <supakeen> Well, you can do both `from example import ui; ui.show_help()` or `from example.ui import show_help; show_help()` or others :)
[14:25:53] <Widdershins> nubonix: 3.5 is no longer supported, for security updates or otherwise
[14:26:03] *** Joins: phlixi (~phlixi@tmo-080-223.customers.d1-online.com)
[14:26:04] <supakeen> The former might need an import in `__init__.py`.
[14:26:36] <nubonix> Widdershins: mm, 3.5 is probably too old, but machine learning from the mass amounts of tutorials ive watched / tried / implimented, py3.7 >>> anything else
[14:26:37] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[14:26:53] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[14:26:59] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-51f6-604d-705f-f753.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:27:06] <roelj> supakeen: Oh I see, thanks!
[14:27:07] <nubonix> havent dove too much into 3.9 to know though, as 3.8 was the latest available at the time of my ml endevours
[14:27:28] *** Joins: c10l (~c10l@89.34.167.207)
[14:27:36] <Widdershins> anything more than a few months old should be fully supported by all the necessary libraries
[14:27:52] <nubonix> yes but the documentation is sparse
[14:28:05] *** Quits: binarymutt[m] (~binarymut@2001:470:69fc:105::2b3f) (Ping timeout: 252 seconds)
[14:28:11] <nubonix> making it very difficult if you are learning a new library
[14:28:12] <Widdershins> "I'm not sure it'll work" is a very bad excuse not to upgrade to a version that's inside security support
[14:28:26] <Widdershins> the documentation is identical
[14:28:30] <nubonix> it flat out didnt work with 3.8 for awhile
[14:28:32] <Widdershins> just use the other documentation
[14:28:33] *** Joins: catdog2 (~quassel@2001:470:50f7:cdcd::cd1)
[14:28:38] *** Quits: Pseudocrat (~quassel@user/pseudocrat) (Ping timeout: 252 seconds)
[14:28:38] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (Ping timeout: 252 seconds)
[14:28:43] *** Joins: xernaron_ (~xernaron@box.xernaron.ch)
[14:28:47] <Widdershins> that's why I said a couple months
[14:28:55] <Widdershins> 3.5 is more than 5 years old
[14:29:02] <nubonix> but as i mentioned, my lack of xp in the field certainly didnt help
[14:29:02] *** Joins: pseudocrat (~quassel@user/pseudocrat)
[14:29:08] <Widdershins> 3.6 is over 4 and a half
[14:29:09] <nubonix> im not defending 3.5 i didnt like it
[14:29:13] *** Joins: wyclif (~wyclif@user/wyclif)
[14:29:17] <nubonix> i liked 3.6 and 3.7 tho
[14:29:25] <nubonix> 3.8 i skipped
[14:29:30] *** Quits: xernaron (~xernaron@box.xernaron.ch) (Ping timeout: 240 seconds)
[14:29:43] <nubonix> well used a few times, but mostly skipped
[14:29:58] <Widdershins> i am not discussing personal preferences and impressions
[14:30:21] <Widdershins> i am begging people not to use unsafe, unsupported software
[14:30:43] *** Joins: orbatos__ (~orbatos@user/orbatos)
[14:30:46] *** Quits: upsala2 (~zcb@185.213.155.160) (Ping timeout: 246 seconds)
[14:30:54] <nubonix> not sure EOL means unsafe
[14:31:12] <nubonix> just means it has potential to be in the future as there are no more updates that are public
[14:32:04] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d976-268d-ebd6-fd0d.res6.spectrum.com)
[14:32:16] <nubonix> dw tho im not against upgrades, i certainly upgraded chrome when i saw they had a rat basically hidden in it
[14:32:22] *** Quits: spithash (~spithash@user/spithash) (Quit: leaving)
[14:32:47] *** Joins: upsala2 (~zcb@185.213.155.160)
[14:33:02] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 252 seconds)
[14:33:03] <nubonix> "this works for now but ill upgrade later when it is documented better"
[14:33:26] <nubonix> probably not the best approach as ik "if it aint broke dont fix it" happens alot
[14:33:27] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[14:33:38] <tWqaq> My question: https://bpa.st/EJAQ
[14:33:38] <tWqaq> Test code: https://bpa.st/FOYQ
[14:33:38] <tWqaq> How to repreduce this issue: 1. Open Clocks (gnome-clocks)  2. Run test code 3. Close Clocks manually
[14:33:38] <tWqaq> This is the result of gdb / bt: https://bpa.st/CFDA. I'm glade to provide any more info to solve this question.
[14:34:02] <nubonix> much better :)
[14:34:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:35:45] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[14:35:48] *** Quits: pseudocrat (~quassel@user/pseudocrat) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:36:00] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[14:36:10] *** Joins: spithash (~spithash@user/spithash)
[14:36:11] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[14:36:33] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[14:36:35] <nubonix> would be nice to know the libraries though
[14:37:01] *** Parts: jamesmartinez (~keinbock@37.44.247.165) ()
[14:38:53] *** Quits: Meteorhead (~Meteorhea@lfbn-idf1-1-703-113.w86-245.abo.wanadoo.fr) (Quit: Client closed)
[14:40:16] <nubonix> do you get these errors when running it from the command line? [gnome clock]
[14:40:26] <nubonix> terminal*
[14:40:49] <nubonix> i would really like to help... but i just dont know :-/
[14:41:02] *** Joins: j00n (~mario@user/j00n)
[14:41:10] <tWqaq> I only get these errors in pycharm, using pytest
[14:42:53] <tWqaq> No, also get these from the command line in Guake
[14:42:54] <nubonix> o right, seen via the pytest logger. Ive never used pytest myself so...really hope you get help
[14:43:29] <nubonix> is it causing any problems? this is a terrible solution... but you could supress the errors
[14:44:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:44:45] <nubonix> if all else fails just keep asking every so often, eventually someone will respond [think the longest time ive had a question go unanswered was about 3 days]
[14:44:54] <tWqaq> Seem like not causing problems, but this is only test code, not very sure if this cause issue in complex code ...
[14:45:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[14:45:41] <tWqaq> Thank you :)
[14:45:53] <nubonix> yeah, sorry i couldnt be of more help
[14:46:27] <nubonix> :-/
[14:46:43] *** Quits: crawler (~crawler@user/crawler) (Remote host closed the connection)
[14:46:51] *** Joins: wyclif (~wyclif@user/wyclif)
[14:47:12] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[14:47:29] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[14:48:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:49:32] *** Quits: pycode (~pycode@2001:b07:5d28:551:94a7:8b08:6e08:452a) (Ping timeout: 255 seconds)
[14:50:33] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[14:51:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[14:54:25] <p-i-> I'm so impressed at what VSCode are doing with iPython Notebooks.
[14:54:51] <p-i-> The original project ran out of steam (+funding?) several years back IIRC, but they have really picked it up.
[14:55:46] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[14:55:53] *** Joins: Ninkentio (~Ninkentio@117.237.252.252)
[14:59:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[15:02:11] <deniska> p-i-: huh, jupyter didn't seem inactive to me
[15:02:24] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[15:03:53] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:34] <Yhg1s> I assume p-i- means the vscode integration? Because, yeah, jupyter notebooks, really not slowing down.
[15:06:48] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:07:04] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[15:08:04] *** Joins: crawler (~crawler@user/crawler)
[15:08:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:09:38] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[15:10:04] *** Quits: doev (~doev@p4ff44791.dip0.t-ipconnect.de) (Quit: Client closed)
[15:11:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[15:12:07] <p-i-> Are Jupyter notebooks still under active development? The browser interface hasn't changed for years...
[15:12:08] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[15:12:32] *** Joins: Jigsy (~Jigsy@user/jigsy)
[15:13:14] <Yhg1s> https://github.com/jupyter
[15:17:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:18:03] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:18:17] *** Joins: cedric (~cedric@2a01:cb11:867:c200:d938:faa6:dd1:a5d4)
[15:18:20] *** Joins: wyclif (~wyclif@user/wyclif)
[15:18:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:18:56] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[15:19:20] *** Joins: azazello (~azazello@109.75.158.195)
[15:19:54] *** Quits: Ninkentio (~Ninkentio@117.237.252.252) (Ping timeout: 272 seconds)
[15:20:59] <p-i-> Is there any room for pandas? I can't find anything with alis...
[15:21:10] <deniska> it's nice when an interface doesn't change :)
[15:22:23] <p-i-> Yes, so much doc/help for VSCode becomes obsolete fast because they keep reworking the GUI, so the web fills with outdated screenshots.
[15:23:02] *** Joins: {HD} (~{HD}@143.244.44.62)
[15:23:10] *** Joins: dhch1 (~dhch@185.213.154.168)
[15:23:17] *** Quits: dhch (~dhch@185.213.154.168) (Read error: Connection reset by peer)
[15:23:18] *** dhch1 is now known as dhch
[15:23:24] <jor> p-i-: maybe you missed the juptyer 'lab' UI then?
[15:23:42] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 272 seconds)
[15:23:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[15:23:44] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 255 seconds)
[15:24:30] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[15:25:32] <p-i-> huh I must have got stuck in mobile fullstack while all that happened.
[15:27:11] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.2)
[15:27:36] <p-i-> Suppose I have lots of lines like {'p'=1.08, 'q'=5, 't'=100} {'p'=1.09, 'q'=3, 't'=100} ... and I want to group by t.
[15:28:00] <p-i-> For each unique t I may have a dozen records. And I want to sum p*q over these records.
[15:28:16] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[15:29:00] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[15:29:03] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[15:29:08] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[15:29:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:29:21] *** Joins: fluffyballoon (~fluffybal@199.204.58.62)
[15:29:58] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[15:30:14] *** Quits: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d) (Ping timeout: 252 seconds)
[15:30:34] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[15:30:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[15:31:06] *** Joins: kericsson (~kericsson@user/kericsson)
[15:33:00] *** Joins: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d)
[15:33:01] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[15:34:05] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[15:34:19] *** Quits: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de) (Quit: Client closed)
[15:35:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:35:11] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:35:18] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[15:35:23] <nedbat> p-i-: a defaultdict(int) would let you do something like: dd = defaultdict(int); for d in those_lines: dd[d["t"]] += d["p"]*d["q"]
[15:36:00] *** Joins: wyclif (~wyclif@user/wyclif)
[15:36:54] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[15:37:18] *** Joins: digilink (~digilink@user/digilink)
[15:38:35] *** Quits: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d) (Ping timeout: 255 seconds)
[15:39:39] *** Joins: DX099 (~dx099@82-65-154-67.subs.proxad.net)
[15:39:56] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 255 seconds)
[15:40:20] <p-i-> nedbat: Neat!
[15:41:05] *** Joins: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d)
[15:41:06] *** Quits: bookworm (~bookworm@neomutt/bookworm) (Read error: Connection reset by peer)
[15:41:14] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 252 seconds)
[15:41:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[15:42:20] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:42:39] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[15:42:40] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:45:38] *** Quits: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d) (Ping timeout: 252 seconds)
[15:46:12] *** Joins: pnoud (~pnoud@user/pnoud)
[15:47:24] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:50:30] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[15:51:07] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[15:51:26] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[15:51:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[15:51:55] *** Joins: Guest1142 (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com)
[15:53:25] *** Parts: Guest1142 (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com) ()
[15:53:48] *** Joins: wyclif (~wyclif@user/wyclif)
[15:56:26] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 265 seconds)
[15:56:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[15:57:03] *** Joins: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d)
[15:57:38] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:00:26] *** Joins: rhax (~yannick@user/rhax)
[16:00:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[16:00:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:03:03] <CuriousErnestBro> Yhg1s, that name looks familiar
[16:03:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:03:10] <CuriousErnestBro> I think I used to follow you on twitter
[16:03:30] <CuriousErnestBro> Are you dutch?
[16:04:01] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:05:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[16:07:51] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:09:51] *** Joins: AUDaags (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com)
[16:12:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[16:13:18] *** Quits: timkofu (~timkofu@user/timkofu) (Remote host closed the connection)
[16:15:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[16:17:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:19:19] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[16:19:54] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[16:20:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[16:20:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:81d0:621c:8a3b:bd6d)
[16:22:59] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Quit: Quit)
[16:23:19] *** Joins: wyclif (~wyclif@user/wyclif)
[16:23:35] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[16:29:59] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:13] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:38:23] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[16:39:46] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 240 seconds)
[16:41:55] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Ping timeout: 246 seconds)
[16:42:32] <A_Dragon> from yesterday where I just gave up. I want to type annotate this: https://bpa.st/K42Q such that it returns whatever type its given (as it essentially returns the same obj anyway), but with a constraint as UPDATABLE_DATA already has. I tried a TypeVar with both a bound=UPDATABLE_DATA and with just two constraints for Mapping and Sequence. I was then told types were incompatible (in the specific
[16:42:35] <A_Dragon> test I had, the return type was Mapping[Unknown, Unknown] as reported by pyright)
[16:42:46] *** Joins: ice9 (~ice9@user/ice9)
[16:42:50] *** Joins: Pickchea (~private@user/pickchea)
[16:43:00] <A_Dragon> Im not sure if there is a way to do this such that things behave correctly, but if there is I'd love to know
[16:43:39] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:44:11] *** Joins: zeden (~zeden@user/zeden)
[16:45:21] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[16:45:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[16:51:22] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235) (Ping timeout: 240 seconds)
[16:52:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[16:55:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:56:21] *** Joins: Naan` (~Naan@user/naan)
[16:57:25] *** Joins: wyclif (~wyclif@user/wyclif)
[16:58:44] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[16:59:22] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[16:59:35] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 255 seconds)
[16:59:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:59:56] *** Joins: rsx (~dummy@ppp-188-174-132-81.dynamic.mnet-online.de)
[17:00:11] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:02:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[17:03:02] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[17:04:36] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:05:00] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[17:09:47] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[17:11:00] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:13:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[17:15:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:15:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:18:10] *** Joins: PdimH (~pdimh@user/pdimh)
[17:19:40] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[17:19:55] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:20:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:20:03] *** Joins: sgn (~sgn@user/sgn)
[17:20:20] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:22:13] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[17:24:41] <p-i-> doc says OrderedDict remembers the order keys were added. But doesn't 3.x do that anyway? Is there a dict-primitive that will maintain ordering on the keys?
[17:25:28] <p-i-> So if I have {1:11, 3:33} and I add {2:22} I get {1:11,2:22,3:33} and not {1:11,3:33,2:22} when I D.items()...
[17:25:37] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[17:25:45] *** Joins: DrNostril (~DrNostril@37.120.201.220)
[17:27:40] *** Joins: Paul (~Paul@user/paul)
[17:30:22] <DrNostril> hi guys... i'm doing some text analysis, and my computer keeps running out of ram and the kernel dies
[17:30:36] *** Joins: gravy (~gravy@123-243-232-67.tpgi.com.au)
[17:30:38] <DrNostril> if i subset the data, i can make a fine model, but i want a more robust one
[17:31:02] *** Joins: fluffyballoon (~fluffybal@pat-verona-i.epic.com)
[17:31:14] <DrNostril> how to break this task into littler pieces so that my computer can handle it (even if it takes hours and hours)
[17:31:31] *** Joins: wyclif (~wyclif@user/wyclif)
[17:31:41] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:31:46] <MacGyver> That depends entirely on how the text analysis in question works.
[17:32:07] *** Joins: tWqaq92 (~tWqaq@240e:389:5da4:7b00:3adb:9a98:bf5f:1182)
[17:32:09] <MacGyver> And why you're running out of RAM.
[17:32:31] <DrNostril> i'm taking about 50k news items and breaking them into two groups of fake and real news, already categorized
[17:32:45] *** Joins: Trieste (~T@user/pilgrim)
[17:33:41] <DrNostril> then making a term frequency matrix, and using naive bayes to categorize
[17:33:51] <DrNostril> i am using cross-validation as well
[17:34:22] <DrNostril> Thanks MacGyver, you have helped me in the past
[17:34:30] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:34:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:35:04] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:35:17] *** Joins: tWqaq (~tWqaq@240e:389:5da4:7b00:3adb:9a98:bf5f:1182)
[17:35:18] <DrNostril> so it seems to me that the document term matrix is just too fucking huge
[17:36:04] <no_gravity> Does python have an optional chaning operator? Like "v=f().?[3].?x" to "set v to property x of the 3rd element o the return value of f if possible"?
[17:36:17] *** Joins: zebrag (~chris@user/zebrag)
[17:36:21] <MacGyver> Although I have no active memory of the event (I help lots of people with lots of things), you're welcome :)
[17:36:39] <grawity> no_gravity: not in current versions, no
[17:36:40] <MacGyver> Re: your current problem, though, I'm unsure if I'll be able to help.
[17:36:42] <graingert> p-i-: OrderedDict lets you use it like a deque too
[17:36:54] *** Joins: varaindemian (~varaindem@86.124.78.162)
[17:36:57] <graingert> so handy for schedulers
[17:36:58] <MacGyver> If for this algorithm the entire matrix *needs* to fit in RAM... well.
[17:37:10] <MacGyver> Ideally you'd be able to divide and conquer somehow.
[17:37:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:37:20] <MacGyver> Or at least go through it sequentially.
[17:37:34] <MacGyver> But a cross-validation sounds like that might not be an option.
[17:37:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:37:45] <no_gravity> grawity: I see. Thanks. In other than "current" versions?
[17:37:52] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:38:06] *** Joins: srhm (~ascii@user/srhm)
[17:38:16] <DrNostril> divide and conquer is the name of the game
[17:38:22] <grawity> if stuff := f():
[17:38:25] <grawity>   v = stuff[3].x
[17:38:28] <grawity> not good enough?
[17:38:51] <grawity> I *think* I've seen a proposal but uhhh, I literally can't remember if it was for Python or PHP
[17:39:16] <A_Dragon> p-i-: cpython 3.x does yes, but its not required by the spec until 3.6
[17:39:26] <A_Dragon> for dicts being insertion order, that is
[17:39:32] <A_Dragon> before that they can be anything
[17:39:50] <DrNostril> what do you guys use when you get sick of ipython notebook but you need to use ipynb?  I used to use spyder and i've heard MS VS is worthwhile..........
[17:40:02] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 252 seconds)
[17:40:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:42:11] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[17:42:16] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:43:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[17:43:15] <MacGyver> I'll be honest, I do most of this stuff still in vim with some plugins.
[17:43:21] <bjs> no_gravity: there was a proposal for such an operator, it hasn't technically been rejected yet https://www.python.org/dev/peps/pep-0505/ so you can probably give some feedback if you want it
[17:43:22] *** Joins: clawh (~clawh@185.244.214.60)
[17:43:24] <bjs> oh they left
[17:43:32] <MacGyver> I really *should* learn to use an interactive notebook because it'd save me so much time prototyping.
[17:43:50] *** Joins: Trieste (T@user/pilgrim)
[17:44:23] <A_Dragon> I use ipython on a commandline or vscs notebook frontend
[17:44:23] *** Joins: nuala (~nuala@user/nuala)
[17:44:44] <A_Dragon> but I often don't prototype stuff like that, unless the logic is cumbersome and I need to verify my assumptions
[17:45:20] <A_Dragon> also 0505 looks nice I wouldnt mind it, but it can and will make None special (as mentioned) which is.... questionable
[17:45:45] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:45:52] <A_Dragon> something something "special cases arent special enough to break the rules"
[17:46:46] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:47:01] *** Joins: pnoud (~pnoud@user/pnoud)
[17:47:05] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[17:47:12] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[17:47:21] <p-i-> DrNostril: I'm using VSCode right now and it's lush
[17:47:34] <p-i-> They are throwing a huge dev=effort into it
[17:47:36] <A_Dragon> pylance is great, though I wish it worked in codium
[17:48:18] *** Joins: wyclif (~wyclif@user/wyclif)
[17:49:15] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[17:49:23] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[17:50:33] *** Joins: bambams (~bambams@S0106a84e3f66f543.su.shawcable.net)
[17:51:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:52:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[17:52:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:53:08] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Remote host closed the connection)
[17:53:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:53:34] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[17:53:45] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Ping timeout (120 seconds))
[17:53:52] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[17:53:58] *** Quits: poxifide (deathspawn@user/poxifide) (Remote host closed the connection)
[17:54:12] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[17:54:17] *** Quits: zware (~zach@python/psf/zware) (Quit: No Ping reply in 180 seconds.)
[17:54:19] *** Quits: cedric (~cedric@2a01:cb11:867:c200:d938:faa6:dd1:a5d4) (Remote host closed the connection)
[17:54:20] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: Ping timeout (120 seconds))
[17:54:24] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Quit: No Ping reply in 180 seconds.)
[17:54:24] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[17:54:32] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[17:54:43] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[17:54:44] *** Joins: cedric (~cedric@2a01:cb11:867:c200:d938:faa6:dd1:a5d4)
[17:54:45] *** Quits: noord (~noord@user/noord) (Quit: ZNC 1.8.2 - https://znc.in)
[17:55:02] *** Quits: Natt0 (~Natalie@cust-143-196-110-94.dyn.as47377.net) (Read error: Connection reset by peer)
[17:55:11] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[17:55:13] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Quit: Ping timeout (120 seconds))
[17:55:19] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[17:55:20] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:55:26] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[17:55:26] *** Quits: catbeard (~noise@user/catbeard) (Ping timeout: 252 seconds)
[17:55:28] *** Quits: BigShip (~BigShip@user/bigship) (Quit: Ping timeout (120 seconds))
[17:55:33] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[17:55:42] *** Joins: zware (~zach@python/psf/zware)
[17:55:45] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[17:55:56] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[17:55:59] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 252 seconds)
[17:55:59] *** Quits: botfather (~botfather@botd.io) (Ping timeout: 252 seconds)
[17:55:59] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[17:56:00] *** Joins: BigShip (~BigShip@user/bigship)
[17:56:23] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[17:56:24] *** Joins: Natt0 (~Natalie@cust-143-196-110-94.dyn.as47377.net)
[17:56:24] *** Joins: catbeard (~noise@user/catbeard)
[17:56:34] *** Joins: mixfix41 (~homefame@user/mixfix41)
[17:56:36] *** Joins: noord (~noord@user/noord)
[17:56:39] *** Quits: waxfire23 (~waxfire@65.119.2.240) (Quit: Ping timeout (120 seconds))
[17:56:56] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[17:57:01] *** Quits: kericsson (~kericsson@user/kericsson) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[17:57:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[17:57:05] *** Quits: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[17:57:05] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[17:57:17] *** Quits: infernix (~nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[17:57:25] *** Joins: hkm (~hkm@85.153.201.192)
[17:57:55] <jim> hi, what are some csv parsers that are available to use?
[17:57:59] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[17:58:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:58:11] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[17:58:20] <MacGyver> jim: What do you want to do?
[17:58:37] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:58:40] <hkm> jim is asking for me
[17:58:46] *** Joins: bambams_ (~bambams@S0106a84e3f66f543.su.shawcable.net)
[17:58:53] <MacGyver> hkm: Well, what do you want to do?
[17:58:54] <hkm> What I want to do is recieve a field of text and manipulate it
[17:59:01] <jim> hkm, if you have any special requirements, maybe you should let the people here know. also, MacGyver would like to know what you're interested in doing
[17:59:11] <MacGyver> There's csv.reader, but you might be better served with the pandas parsers depending on context..
[17:59:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[17:59:17] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Ping timeout: 252 seconds)
[17:59:37] <hkm> Well I will be counting each word in the file's specific field
[17:59:50] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:59:50] *** Quits: qpdb| (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[18:00:45] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[18:00:59] <jim> could you show not the first line, but one of the lines in the csv file?
[18:01:02] <DrNostril> pandas has a built in csv reader
[18:01:29] <hkm> sure jim 1 sec
[18:02:01] <A_Dragon> Ill repost my typing headache at some point :D generics are a pain
[18:02:04] <jim> hkm is also a very new python user (or at least he's evaluating python for suitability)
[18:02:35] *** Quits: bambams (~bambams@S0106a84e3f66f543.su.shawcable.net) (Ping timeout: 255 seconds)
[18:02:39] <DrNostril> y'all probably want pandas
[18:02:42] <hkm> US      Games   topgrossingapplications 2021-07-09      100     1434505322      Harry Potter: Puzzles & Spells  Zynga Inc.      https://is4-ssl.mzstatic.com/image/thumb/Purple115/v4/13/dc/67/13dc67c4-1319-fc03-0ce9-5da9bfc9e075/AppIcon-0-0-1x_U007emarketing-0-0-0-7-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/150x150bb.png
[18:02:42] <hkm> https://apps.apple.com/US/app/id1434505322?l=en 2020-09-22 07:00:00 UTC 2021-07-06 00:00:00 UTC true    4.74781   0.0     352319  118116  118116  -3      750     $60001.99       244     $14937.39
[18:02:54] <DrNostril> if you have issues, you can literally email wes mckinney
[18:03:03] *** Joins: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com)
[18:03:08] *** Quits: bss (bss@rie.incorporeal.org) (Ping timeout: 252 seconds)
[18:03:15] <hkm> cool
[18:03:25] <hkm> are csv files binary files?
[18:03:39] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:03:43] *** Joins: bambams (~bambams@165.227.200.42)
[18:03:43] <jim> (new to the point of not having written any python lines :)
[18:04:07] *** Quits: shodan45 (~quassel@107.161.22.155) (Quit: No Ping reply in 180 seconds.)
[18:04:09] <jim> hkm, are you also a new programmer?
[18:04:39] <hkm> Ah somewhat, I'm ok with C and bash
[18:04:44] *** Joins: wyclif (~wyclif@user/wyclif)
[18:04:47] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 252 seconds)
[18:04:47] *** Quits: grym (~grym@user/grym) (Ping timeout: 252 seconds)
[18:04:52] <A_Dragon> welcome to the world of programming!
[18:04:58] <fluter> hi
[18:05:00] <hkm> cool thanks
[18:05:05] <jim> oh, how long have you been doing C?
[18:05:13] <fluter> with setup.py anyone to create a symlink in the package?
[18:05:14] <jim> fluter, hi
[18:05:26] *** Joins: shodan45 (~quassel@107.161.22.155)
[18:05:28] *** Joins: Abrax- (~Abrax@user/abrax)
[18:05:55] <SnoopJ> hkm, if you're familiar with another language, the official tutorial is a pretty good introduction to what you need to know in Python: https://docs.python.org/3/tutorial/
[18:06:03] <hkm> jim, I will be asking you a linux question in #linux. Look out for that
[18:06:14] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[18:06:14] <jim> ok
[18:06:17] *** Quits: Abrax (~Abrax@user/abrax) (Killed (NickServ (GHOST command used by Abrax-)))
[18:06:22] *** Joins: grym (~grym@user/grym)
[18:06:23] *** Abrax- is now known as Abrax
[18:07:32] <MacGyver> pandas has the drawback that the data manipulation can get a bit... unintuitive, but if all you want is a single-indexed CSV and do some operations on it like counting, summing, etc, it's probably the way to go here.
[18:07:37] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:08:48] <SnoopJ> If you're new to Python in general, I would recommend getting the basics of the language under your feet first
[18:09:10] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[18:09:28] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:09:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:10:08] <hkm> I have some practice with python
[18:10:17] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Ping timeout: 252 seconds)
[18:10:21] *** Joins: Ninkentio (~Ninkentio@117.237.194.88)
[18:11:37] *** Quits: rhax (~yannick@user/rhax) (Ping timeout: 246 seconds)
[18:11:47] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[18:11:53] *** Joins: rhax (~yannick@user/rhax)
[18:11:55] <jim> hkm, I -could- give you the zero-to-hero video... starts slow (first example they present is a half hour in, after they've introduced themselves, tell you what they're gonna tell you, and probably other things... it's not bad for very basic python3
[18:12:26] <jim> (python3 is the version most people here will recommend to you)
[18:12:30] *** Joins: poxifide (deathspawn@user/poxifide)
[18:12:33] *** Joins: binarymutt[m] (~binarymut@2001:470:69fc:105::2b3f)
[18:12:56] <SnoopJ> yes, you want 3.x, 2.x is best left in ancient history where it belongs :)
[18:13:35] <jim> 2 works, but it's different enough from 3 to make it somewhat annoying
[18:13:53] *** Joins: JavaBean (~JavaBean@user/javabean)
[18:14:42] <SnoopJ> (and no longer getting updates/patches)
[18:14:50] <jinsun> p-i-: nothing in standard library for sorted dicts, but there is this https://pypi.org/project/sortedcontainers/
[18:15:11] <jim> hkm, give it a try... put the linux command: python3 into a terminal, see what it does
[18:15:21] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[18:15:45] <graingert> p-i-: I think trio depends on that
[18:16:38] *** Quits: tWqaq92 (~tWqaq@240e:389:5da4:7b00:3adb:9a98:bf5f:1182) (Quit: Client closed)
[18:16:38] *** Joins: hkm94 (~hkm@85.153.201.192)
[18:16:40] <graingert> p-i-: https://github.com/python-trio/trio/blob/f2e23123b196358b85556c592cfd26882261b738/setup.py#L83
[18:17:04] *** Quits: hkm94 (~hkm@85.153.201.192) (Client Quit)
[18:17:28] *** Quits: hkm (~hkm@85.153.201.192) (Ping timeout: 246 seconds)
[18:17:43] *** Quits: flyback (~flyback@2601:540:8201:1e60:b90d:9f30:19da:85a2) (Read error: Connection timed out)
[18:18:01] <grym> that's not the only reason it's annoying now :)
[18:18:08] <jim> oops, all gone... anyway, thanks folks
[18:18:09] *** Joins: flyback (~flyback@2601:540:8201:1e60:b90d:9f30:19da:85a2)
[18:19:23] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[18:20:48] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[18:21:20] *** Joins: derelict (~derelict@user/derelict)
[18:21:29] *** Quits: rhax (~yannick@user/rhax) (Ping timeout: 255 seconds)
[18:22:15] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[18:22:16] *** Joins: rhax (~yannick@user/rhax)
[18:24:40] <u4t> w00t
[18:24:46] <u4t> i think i've done it
[18:24:58] *** Abrax is now known as Azriel
[18:25:06] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:26:31] *** Azriel is now known as Abrax
[18:26:33] *** Joins: qpdb| (~qpdb@user/qpdb)
[18:26:35] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[18:26:42] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 240 seconds)
[18:26:50] *** Joins: Abrax (~Abrax@user/abrax)
[18:26:51] *** Joins: Praise (~Fat@user/praise)
[18:27:12] *** Joins: Roey (~Roey@user/Roey)
[18:27:21] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[18:27:36] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Remote host closed the connection)
[18:27:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[18:27:49] <u4t> 7 unittest fails XD
[18:28:16] <MacGyver> Of how many?
[18:28:26] <fluter> how to tell wheel that it is for linux os
[18:28:28] <u4t> oh wait
[18:28:31] <u4t> 4 fails, 2 errors (:
[18:28:51] <u4t> so many fails
[18:29:24] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:30:11] *** Joins: bss (bss@rie.incorporeal.org)
[18:30:28] *** Joins: hkm (~hkm@85.153.201.192)
[18:30:32] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:33:09] <SnoopJ> fluter, you're building a wheel and want to indicate that it's for Linux platforms?
[18:33:29] <fluter> yes because there ;'s extension .so file in it
[18:33:56] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:34:42] <MacGyver> That made even less sense than the initial question.
[18:34:59] <MacGyver> fluter: Can you describe in more sentences what you need?
[18:35:08] <SnoopJ> fluter, you probably want to look into the 'manylinux' family of tags: https://www.python.org/dev/peps/pep-0513/ (see also PEP 571, PEP 599, PEP 600 for further updates to this idea)
[18:35:34] *** Quits: bboles (~bboles@64.94.212.195) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:12] <MacGyver> Maybe this makes sense to someone intimately familiar with wheel, but I can't parse the sentence.
[18:36:16] <SnoopJ> MacGyver, the extension .so usually indicates ELF shared objects (i.e. libraries), which is fairly Linux-specific
[18:36:21] <fluter> i wanna make sure that if someone is downloading the package with pip on say macos / solaris it should fail to download
[18:36:26] <u4t> aaah
[18:36:39] <fluter> i wil lupload the wheel to pip server
[18:36:41] <u4t> [a-z][A-Z] is very different to [a-zA-z] (:
[18:37:21] *** Joins: dez (uid92154@user/dez)
[18:37:56] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:39:18] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:39:57] *** Joins: Fluxx (~Fluxx@user/fluxx)
[18:40:41] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[18:40:57] <MacGyver> SnoopJ: Yes but I'm having trouble parsing their answer to you, I don't understand how that ; fits into anything and the grammar's off, but maybe that's just me not being familiar with the system in use.
[18:40:59] *** Quits: Dotz0cat (~Dotz0cat@h164.71.213.151.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[18:41:00] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5871-cb81-f0bd-9b20.res6.spectrum.com)
[18:41:12] <Henry151> good morning
[18:41:15] <Gurkenglas> How should I assemble a picture from "a rectangle with text here, a recursively defined picture there"?
[18:41:48] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:41:54] <SnoopJ> Gurkenglas, what is a "recursively defined picture"? It sounds like you want a image manipulation library that can deal with whatever that is.
[18:42:15] <Henry151> i'm trying to understand more about classes and subclasses, and objects, and i had a couple questions. Let's see if I can phrase them clearly enough to get answers:
[18:42:26] <SnoopJ> MacGyver, the semicolon is I believe a typographical error (it is located next to ' on many keyboards)
[18:42:32] <MacGyver> SnoopJ: ... d'oh.
[18:42:43] <MacGyver> Of course, then it makes sense >.<
[18:43:29] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Quit: Leaving)
[18:43:43] *** Joins: Dotz0cat (~Dotz0cat@h179.194.186.173.dynamic.ip.windstream.net)
[18:43:48] <hkm> I'm getting this error: "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte" when trying to read the lines of a csv file
[18:44:14] <MacGyver> BOM?
[18:44:25] <Gurkenglas> SnoopJ, like https://en.wikipedia.org/wiki/Sierpi%C5%84ski_triangle - this fractal can be defined as three copies of this fractal, offset in three directions
[18:44:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:44:43] <hkm> if that regers to me MacGyver, I have no idea what it means
[18:44:44] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[18:44:59] <u4t> w00t bisshin
[18:45:14] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:45:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:45:19] <MacGyver> hkm: It's probably the first byte of the byte order mark.
[18:45:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[18:45:21] <Repiphany> UTF-16 starts with 0xFFFE, not encoded with utf-8
[18:45:33] <MacGyver> hkm: It's either UTF-16, or UTF-8-sig.
[18:45:33] <Henry151> If I have a class "bicycle" that creates bicycle objects that have certain attributes, for example bicycle.frame could be any of three different brands of frame.. then i use that class to make a bicycle object, like my_bike = bicycle(frame="Raleigh") .. now i have a my_bike object with an attribute "frame" that is set to "Raleigh." But, my question is, can I have a class "frame" that creates frame
[18:45:39] <Henry151> objects, and can i then create a bicycle with one of those frame objects as its ".frame" attribute?
[18:46:17] <MacGyver> hkm: Try "utf-8-sig" as the encoding, if that also fails you'll probably need "utf-16"
[18:46:24] <grym> Henry151: yes, of course
[18:46:30] <hkm> cool thanks
[18:46:38] <grym> Henry151: sec
[18:47:04] <MacGyver> Oh wait, the UTF-8 BOM doesn't contain FF.
[18:47:10] <MacGyver> hkm: You'll need "utf-16".
[18:47:25] <hkm> got it!
[18:47:25] <SnoopJ> Gurkenglas, an L-system? Okay, well, make an image of that first (by whatever means you like) and then compose it with your image compositing framework of choice. If you use Pillow, you want PIL.ImageDraw.rectangle() and PIL.ImageDraw.text() (or .multiline_text() as appropriate)
[18:48:31] <grym> Henry151: https://bpa.st/5LEA
[18:48:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:48:44] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[18:48:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[18:48:48] <u4t> https://bpa.st/LCAA << and it's only 12:20am
[18:49:13] <Henry151> grym: thanks for the clarity
[18:49:23] *** lukedashjr is now known as luke-jr
[18:49:27] *** Joins: haroon (~haroon@gw.wmd.de)
[18:49:32] <u4t> i need to write more unittests but my manual testing has showed it working
[18:49:47] <grym> Henry151: sure.  this works with "normal" classes too; there's nothing special about attrs here
[18:49:50] * u4t hugs deque
[18:49:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[18:50:16] <Gurkenglas> ah what i needed to google is "declarative vector graphics"
[18:50:25] <u4t> svg?
[18:50:26] <Henry151> grym: can you help me understand what's different between doing this with the "attr" module and doing it without?
[18:50:55] <grym> Henry151: sure, i can write it with OG classes
[18:51:14] <Henry151> thanks
[18:51:41] <SnoopJ> Henry151, the attrs library is a convenient way to write classes that come with nice features like automatically generated __init__, __repr__. Mostly it helps elminate boilerplate.
[18:52:06] <Henry151> Ah, I see
[18:52:50] <grym> Henry151: https://bpa.st/GQ4Q
[18:52:57] <grym> note that the reprs suck :)
[18:53:25] <Henry151> i want to make this model "with the boilerplate" since i'm making it just to better grasp how classes and objects all work together, and so seeing everything "explicitly written out" i think may be helpful
[18:53:31] <Henry151> grym: thanks that's awesome
[18:53:34] <Henry151> perfect start for me
[18:53:56] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[18:54:05] <grym> Henry151: ok, but keep this in mind: https://www.attrs.org/en/stable/why.html#hand-written-classes
[18:54:20] <grym> (stdlib dataclasses do the basic stuff attrs does as well)
[18:55:37] <Henry151> grym: ah, i see, thanks
[18:56:11] <hkm> How can I get nth field of an entry in a cvs file using cvs.reader()?
[18:56:18] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[18:56:31] <grym> hkm: skip n-1 lines
[18:56:49] <MacGyver> hkm: How large is this file?
[18:57:20] <hkm> 256K
[18:57:39] <grym> hkm: actually, could you clarify "field" and "entry" for me?
[18:57:43] *** Joins: Blankspace (~abcd@user/blankspace)
[18:57:48] <MacGyver> hkm: Then you probably want to just read its entire contents into a list (of dictionaries, probably), and index the list.
[18:57:56] <grym> do you want the nth row, or do you want the nth delimited entry of one or more rows
[18:58:06] <MacGyver> hkm: Since you want to do all kinds of other operations as well, it seemed earlier.
[18:58:10] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:58:15] <hkm> an entry would be a single line, and a field is like one group of information such as name, date, company, date, etc.
[18:58:30] <MacGyver> hkm: Read the data into memory, then operate on it in-memory.
[18:58:46] <grym> hkm: ok, then it's row[n]
[18:58:51] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[18:58:55] <hkm> ah there it is thanks
[18:59:07] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:59:19] <grym> hkm: you might also like DictReader over reader, which would let you do row["name"]
[18:59:43] <grym> (dictreader by default uses the first row in the file as column names, but you can provide your own, etc, if you have to; consult the docs)
[19:01:21] <hkm> I get 'NameError: name 'row' is not defined' if I attempt to print out row[n] before doing `for row in line:...`
[19:01:33] <grym> hkm: bpa.st/+python your code please
[19:01:49] <grym> but yes, you can't get a row without iterating over the file
[19:02:02] *** Joins: wyclif (~wyclif@user/wyclif)
[19:02:13] <hkm> Don't know what that means but I'm guessing is use a pastebin, grym?
[19:02:20] <grym> hkm: that pastebin in particular, yes
[19:02:23] <Henry151> grym: in that example you pasted, my_bike is a "Bicycle object" ... if I make a subclass of bicycle, like "MountainBike" it's going create MountainBike objects instead of Bicycle objects, right? Or would the resulting objects be of both classes somehow? Is it possible to make a subclass of bicycle that still produces bicycle objects?
[19:02:37] <grym> Henry151: subclasses are instances of their parents
[19:02:42] <grym> for better or worse
[19:02:45] <grym> often, worse :)
[19:03:01] <Henry151> ah, so a subclass MountainBike would still be producing Bicycle objects
[19:03:01] <fluter> what is none means in the wheel file name?
[19:03:05] <grym> Henry151: why not have Bicycle(type=...)
[19:03:10] <fluter> i see sth like -py3-none-any.whl in it
[19:03:20] <Henry151> grym: oh, because i'm trying to grasp how subclasses work a little better :)
[19:03:21] <fluter> py3 is python3, what is none and any?
[19:03:28] <grym> Henry151: would you accept "confusingly"? :)
[19:03:35] *** Joins: gggp (~gggp@221.219.70.176)
[19:03:44] *** Joins: ice9 (~ice9@user/ice9)
[19:04:06] <hkm> grym, how would I go about getting access to a column using cvs.reader()?
[19:04:11] <Henry151> grym: i just find modeling a physical object has often brought me some clarity on how things work in python, so i was trying to imagine "how do i fit subclasses in here on my model of a bicycle?"
[19:04:15] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[19:04:19] <grym> Henry151: usually people pick cars :)
[19:04:28] <hkm> Shoudl I just parse for spaces?
[19:04:30] <SnoopJ> fluter, those fields are called "wheel tags," they are described in PEP 425: https://www.python.org/dev/peps/pep-0425/
[19:04:30] <gggp> numpy seems hard to learn
[19:04:41] <grym> hkm: can you paste the first few rows of your csv?
[19:04:45] <grym> to a pastebin
[19:04:53] <hkm> ok 1 sec
[19:04:56] <grym> gggp: can be.  depends on how familiar you are with linear algebra
[19:04:58] <SnoopJ> gggp, it is easy to get started with numpy, but it is challenging to master the entire library
[19:05:04] <p-i-> Anyone for a round of codegolf? Challenge is to get all p<q pairs in range(n), ordered by smallest gap first. So if N=5, that's 01 12 23 34 02 13 24 03 14 04
[19:05:05] <Henry151> grym: nice. My dad happens to be a cycling enthusiast and long-time bicycle mechanic, and since I often bounce ideas off him, I thought modeling it this way would make for interesting conversations with him that overlap our interests
[19:05:07] <fluter> oh thanks Snoop
[19:05:14] <gggp> SnoopJ, pandas is also hard
[19:05:19] <grym> Henry151: yep.  lots of us bike dorks in the world :)
[19:05:21] <hkm> https://termbin.com/d4bg
[19:05:35] <Henry151> quite a tour this year :)
[19:05:49] <grym> hkm: i see one line there
[19:05:52] <hkm> grym, I need the 7th field (or column), where it states the name
[19:06:04] <hkm> There all the same format
[19:06:15] <SnoopJ> gggp, it's easy enough to get started with it, but pandas is kind of a mess.
[19:06:17] <hkm> I can paste more if you wish though
[19:06:28] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[19:07:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:08:13] *** Joins: ice99 (~ice9@user/ice9)
[19:08:32] <grym> hkm: https://bpa.st/YYLA
[19:08:58] <grym> hkm: ignore the io.StringIO bit, i'm just making your string act like a file.  You should use `with open(thefile,'r') as f:` instead of `with data as f:`
[19:09:25] <hkm> cool thanks :)
[19:10:00] <grym> the trick is that your file is tab-delimited
[19:10:03] <grym> so you have to specify that
[19:11:04] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[19:11:05] *** Quits: DrNostril (~DrNostril@37.120.201.220) (Remote host closed the connection)
[19:11:09] <grym> (that's what those ^Is are)
[19:11:38] *** Joins: DrNostril (~DrNostril@37.120.201.220)
[19:11:40] *** Quits: DrNostril (~DrNostril@37.120.201.220) (Remote host closed the connection)
[19:12:20] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 255 seconds)
[19:14:19] <Repiphany> p-i-: n=5;[(a,a+d)for d in range(1,n)for a in range(n-d)]
[19:14:24] *** Quits: pneff (~pneff@2a02:168:fedc:0:b9fd:cd61:40cc:cb6d) (Quit: WeeChat 3.2)
[19:14:35] <hkm> Ah thanks grym
[19:15:59] *** Quits: ominionx (~ominionx@38.135.235.14) (Quit: Leaving)
[19:16:53] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:16:58] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:17:10] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[19:18:32] *** Joins: sedeki (~textual@user/sedeki)
[19:18:36] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[19:19:17] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[19:19:42] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[19:19:58] *** Joins: wyclif (~wyclif@user/wyclif)
[19:20:26] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[19:20:59] *** Joins: cheater (~Username@user/cheater)
[19:21:00] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[19:23:54] <p-i-> Repiphany: neat! I was using 'sorted' but that's much more compact.
[19:25:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:25:20] <Yamakaja> I was just looking at some code, and is there a reason why one may want to call Py_BuildValue("N", obj)? As far as i can tell that's just an identity operation, but i may be missing something here
[19:25:20] <Yamakaja> https://docs.python.org/3/c-api/arg.html#c.Py_BuildValue
[19:25:20] <Yamakaja> https://github.com/gnuradio/gnuradio/blob/master/gr-qtgui/lib/time_raster_sink_f_impl.cc#L126
[19:25:46] *** Joins: LiftLeft (~LiftLeft@154.21.28.156)
[19:26:07] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:26:44] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[19:28:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:28:49] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[19:32:18] *** Joins: cul8r (~cul8r@2600:1702:2160:13e0::44)
[19:32:21] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:34:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:36:12] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[19:37:14] *** Joins: wyclif (~wyclif@user/wyclif)
[19:37:30] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:38:40] *** Quits: haroon (~haroon@gw.wmd.de) (Ping timeout: 246 seconds)
[19:39:12] *** Quits: hkm (~hkm@85.153.201.192) (Quit: Client closed)
[19:39:13] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[19:41:28] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[19:42:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:43:06] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[19:43:41] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[19:44:12] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:45:44] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:46:09] <SnoopJ> Yamakaja, the only advantage I can guess at there is that Py_BuildValue will set an exception if the object passed in is a NULL and no existing exception is set (it's documented pretty badly)
[19:46:38] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[19:46:58] <SnoopJ> occurs here: https://github.com/python/cpython/blob/main/Python/modsupport.c#L484-L494
[19:47:51] *** Joins: pnoud (~pnoud@user/pnoud)
[19:48:32] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[19:49:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:49:38] *** Joins: sybariten (~jake@78-47-86-21.cinfuserver.com)
[19:49:41] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[19:49:44] <SnoopJ> gnuradio would do better to: `if (w == NULL) { /* raise */ }` if there's not some other (really nuanced?) reason for doing it this way
[19:49:46] <sybariten> hey hey
[19:50:27] <sybariten> If i have a long code block that i think will not be used, instead of making a multiline quote, can i put it at the end of a script and sort of break out of it before this gets touched at all?
[19:50:35] <sybariten> Just as a temporary storage
[19:50:43] <thm> you can use if 0:
[19:51:11] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[19:52:18] <SnoopJ> sybariten, if it's already in your version control, just delete it. If not and you want it for safe-keeping, I'd make a dedicated directory for that ("ideas/" maybe?)
[19:52:30] <sybariten> thats it? "if 0:" as the start of a code block and then whichever shenanigans after that?
[19:52:50] <sybariten> SnoopJ: yeah yeah sure, we're not talking best practice here by any means  ;-)
[19:52:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[19:52:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[19:53:19] <SnoopJ> sybariten, I would think not if you're looking for code that will execute for the sake of code that will never execute
[19:53:35] <thm> sybariten: yep, why not?
[19:53:53] *** Joins: wyclif (~wyclif@user/wyclif)
[19:54:04] <Yamakaja> SnoopJ Well, i wouldn't expect a PyLong that i just created from (some arbitrary pointer, could even be null) to fail allocation, so really i see no point
[19:54:23] <sybariten> thm: no no i was just making sure that i understood  :)
[19:55:04] <SnoopJ> sybariten, CPython is smart enough to fold away something unreachable like that suggestion
[19:55:27] *** Joins: Crassus (~Crassus@user/crassus)
[19:55:41] *** Quits: JanC (~janc@user/janc) (Ping timeout: 265 seconds)
[19:55:42] <SnoopJ> Yamakaja, it's usually a good idea to check for NULL, but if Py_BuildValue() is being used for that, it's opaque and imo a bad idea
[19:55:53] <sybariten> SnoopJ: is that an IDE?  I'm in VS Code
[19:56:04] <SnoopJ> sybariten, CPython is the Python interpreter you get from python.org
[19:56:11] <SnoopJ> and likely the one you have installed
[19:56:31] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[19:56:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[19:56:57] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[19:57:21] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:58:11] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:58:15] *** Joins: clawh_ (~clawh@185.244.214.60)
[19:58:31] *** Joins: JanC (~janc@user/janc)
[19:58:52] *** Joins: kericsson (~kericsson@user/kericsson)
[19:59:29] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[19:59:44] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[19:59:54] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[20:00:28] *** Quits: {HD} (~{HD}@143.244.44.62) (Ping timeout: 272 seconds)
[20:01:15] <bjs> sybariten: I'd probably write it as `if False:`, the stuff inside an if block only executes if the condition is True
[20:01:17] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[20:01:24] <bjs> so an `if False: do stuff` never does the stuff.
[20:03:14] *** Joins: {HD} (~{HD}@102.165.16.52)
[20:04:24] *** Joins: knipster9 (~knipster@user/knipster)
[20:05:25] *** Quits: knipster (~knipster@user/knipster) (Ping timeout: 268 seconds)
[20:05:26] *** knipster9 is now known as knipster
[20:07:06] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[20:12:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:12:57] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:13:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[20:14:32] *** Joins: cheater (~Username@user/cheater)
[20:14:33] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[20:14:57] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[20:14:59] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[20:15:16] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[20:15:22] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:16:34] *** Joins: skapata (~Skapata@user/skapata)
[20:17:39] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:18:40] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[20:19:02] *** Joins: Akuli (~Akuli@87-94-111-36.bb.dnainternet.fi)
[20:19:14] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:24:03] <A_Dragon> fun fact, this is how `if TYPE_CHECKING` works
[20:24:53] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[20:25:06] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5871-cb81-f0bd-9b20.res6.spectrum.com) (Read error: Connection reset by peer)
[20:25:14] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[20:25:35] *** Joins: wyclif (~wyclif@user/wyclif)
[20:27:57] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:28:27] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[20:29:54] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[20:30:14] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[20:30:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:30:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:31:13] *** Joins: Auron (~Auron956@user/auron)
[20:32:54] *** Joins: Mrumel (~Mrumel@149.20.202.235)
[20:33:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:34:54] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[20:34:57] <Mrumel> Hi, I have a kind of obscure question that I cannot find out where a python installation is coming from. I have python 3.9.2 installed on my system and I have fully uninstalled all other versions. But when I type "python --version" into command prompt (I'm on win10) I get python 3.8.7    I never installed python 3.8.7 and I have no idea how to get
[20:34:58] <Mrumel> windows to stop using it as the default
[20:35:27] <grym> Mrumel: what's your %PATH%
[20:35:57] <Mrumel> C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%SYSTEMROOT%\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program
[20:35:58] <Mrumel> Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Shoreline Communications\ShoreWare Client\;C:\Program Files (x86)\Shoreline Communications\ShoreWare Client\win64;C:\Program Files\dotnet\;C:\Program Files\Inkscape\bin;C:\Program Files (x86)\STMicroelectronics\STM32 ST-LINK Utility\ST-LINK Utility;C:\Program Files\PuTTY\;C:\Program
[20:35:58] <Mrumel> Files\WinMerge;C:\Program Files\Git\cmd;C:\Program Files\Graphviz\bin;
[20:36:10] <Mrumel> thats the system one
[20:36:17] *** Joins: hposca (~hposca@node-1w7jr9phoke2vlnhot95w4kak.ipv6.telus.net)
[20:36:19] <Mrumel> C:\Users\merrick.rumel\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\merrick.rumel\AppData\Local\Programs\Python\Python39\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files (x86)\GNU Arm Embedded Toolchain\10
[20:36:20] <Mrumel> 2020-q4-major\bin;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;%USERPROFILE%\.dotnet\tools;C:\Users\merrick.rumel\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\OpenOCD-20201228-0.10.0\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Users\merrick.rumel\AppData\Local\GitHubDesktop\bin;
[20:36:20] <grym> Mrumel: bpa.st/+text please :)
[20:37:08] <Mrumel> I'm sorry but I don't know how to do that
[20:37:12] <grym> go to that link
[20:37:15] <grym> and paste there
[20:37:18] <grym> (next time)
[20:37:41] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[20:39:22] *** Quits: phlixi (~phlixi@tmo-080-223.customers.d1-online.com) (Ping timeout: 240 seconds)
[20:39:42] <thm> maybe try "where python"
[20:39:47] <Mrumel> I don't think that link will format it any nicer unfortunately if I copy it straight from windows
[20:39:51] <grym> Mrumel: try `python.exe -c "import sys; print(sys.executable)"
[20:39:53] <grym> `
[20:40:03] <grym> Mrumel: it won't, but it also won't spam the channel with it
[20:40:17] <grym> sys.executable will tell you where python is, though
[20:40:40] <Mrumel> Oh man, I think the where python worked. It looks like it's coming from inkscape
[20:40:43] *** Joins: phlixi (~phlixi@aftr-62-216-205-24.dynamic.mnet-online.de)
[20:41:01] <grym> yeah, that's the only thing i know of that vendors python in your list
[20:41:07] <grym> that's not implausible
[20:41:24] <Mrumel> https://bpa.st/GYDQ
[20:41:40] <grym> yup, that's it!
[20:41:43] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:02] <Mrumel> Thanks for the help guys, this has been driving me crazy all day
[20:42:13] <grym> sure thing
[20:44:01] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:46:00] <sybariten> SnoopJ: thm: bjs: thanks
[20:47:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:47:37] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:35] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[20:49:36] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:50:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:50:53] *** Quits: pycode (~pycode@2001:b07:5d28:551:81d0:621c:8a3b:bd6d) (Ping timeout: 255 seconds)
[20:51:26] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[20:51:40] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:52:41] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:53:08] *** Joins: Trieste (~T@user/pilgrim)
[20:53:41] *** Quits: Mrumel (~Mrumel@149.20.202.235) (Quit: Client closed)
[20:54:03] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:54:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[20:56:44] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:57:09] *** Joins: Trieste_ (T@user/pilgrim)
[20:57:21] *** Joins: darksun (~darksun@user/darksun)
[20:57:38] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 255 seconds)
[20:57:40] *** Joins: ganchan (~thomas_w@user/ganchan)
[20:57:53] <iomari891> greetings, is there any existing function that can process all elements of an array against each other? eg: [a,b,c,d,e,f,g,h,i,j] I want to run some code on 'a' aainst all the other elemens, then 'b' against all the other elemenst, etc. SO for a 10 element list, I'll run 100 iterations.
[20:58:12] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:50] *** Joins: slav0nic (slav0nic@python.su)
[20:59:25] <phy1729> itertools.product is likely what you want
[20:59:43] <Obo> Maybe a `map` after `itertools.product`
[20:59:52] <Obo> Exactly phy1729
[21:00:09] <SnoopJ> product +1
[21:00:38] <iomari891> phy1729: thanks
[21:00:58] <SnoopJ> well, product() if you care about ('a', 'a'). If you only care about 'a' against other items, use itertools.combinations
[21:01:23] <iomari891> SnoopJ: thanks
[21:01:41] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[21:02:35] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[21:03:02] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 255 seconds)
[21:03:06] <SnoopJ> https://bpa.st/S7OA
[21:03:43] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[21:04:17] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[21:04:31] *** darklambda is now known as cs
[21:04:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:04:42] *** cs is now known as cpp
[21:04:54] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:05:21] *** Joins: pan (~quassel@pankid.club)
[21:05:46] *** cpp is now known as darklambda
[21:05:50] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:07:10] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:07:22] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[21:07:32] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[21:07:35] <iomari891> SnoopJ: Thanks. WHat I want is for each element to go through every other except itself. Combinations does not do that. eg: I want a,b and b,a
[21:07:56] <SnoopJ> iomari891, that's itertools.permutations(), then
[21:08:30] <SnoopJ> https://bpa.st/O6KA
[21:08:45] *** Quits: kiska (~kiska@user/kiska) (Quit: Ping timeout (120 seconds))
[21:09:02] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:09:07] <SnoopJ> (combinations don't care about order, permutations do)
[21:09:11] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[21:09:23] <iomari891> SnoopJ: damn I love python
[21:09:37] <SnoopJ> that library in particular has some nice tools in it :)
[21:09:47] *** Joins: kiska (~kiska@user/kiska)
[21:09:54] <iomari891> Understatement
[21:10:25] <iomari891> thanks all
[21:12:44] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[21:15:38] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[21:16:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:16:21] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[21:16:42] *** Joins: gyim (~user@51B6A4CF.unconfigured.pool.telekom.hu)
[21:16:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:17:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:18:43] *** Joins: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com)
[21:19:20] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:20:05] *** Quits: dzz007 (~dzz007@user/dzz007) (Quit: Ping timeout (120 seconds))
[21:20:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[21:20:32] *** Joins: dzz007 (~dzz007@user/dzz007)
[21:20:46] *** Quits: liam (sid7517@id-7517.brockwell.irccloud.com) (Ping timeout: 246 seconds)
[21:21:10] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[21:21:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:21:48] *** Joins: liam (sid7517@id-7517.brockwell.irccloud.com)
[21:23:24] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:7018:37c7:e025:203e)
[21:23:35] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:25:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:25:33] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[21:26:13] *** Joins: Naan (~Naan@user/naan)
[21:26:35] *** Quits: Naan (~Naan@user/naan) (Remote host closed the connection)
[21:27:05] *** Quits: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[21:28:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:28:07] *** Joins: Betal (~Beta@user/betal)
[21:29:31] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[21:29:35] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[21:30:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:31:13] *** Quits: dustiestgolf (~spectruml@secure-wireless-nat-19-197.msu.montana.edu) (Quit: Leaving)
[21:31:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:31:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:31:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[21:32:12] *** Parts: Tritium (~tritium@toxin.sdamon.com) (Closing Window)
[21:32:27] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[21:32:53] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[21:33:03] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[21:33:13] *** Quits: gggp (~gggp@221.219.70.176) (Ping timeout: 246 seconds)
[21:33:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[21:34:05] *** Quits: rsx (~dummy@ppp-188-174-132-81.dynamic.mnet-online.de) (Quit: rsx)
[21:34:58] *** Quits: tWqaq (~tWqaq@240e:389:5da4:7b00:3adb:9a98:bf5f:1182) (Ping timeout: 246 seconds)
[21:35:51] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[21:35:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:37:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[21:37:33] *** vinleod is now known as vdamewood
[21:38:40] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:42:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 258 seconds)
[21:44:12] *** Joins: Naan (~naan@user/naan)
[21:45:03] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[21:45:44] *** Joins: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com)
[21:47:08] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:19] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[21:48:41] *** Joins: pnoud (~pnoud@user/pnoud)
[21:48:44] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[21:49:28] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:49:30] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[21:49:50] <p-i-> How to `f'{x:.4f>8}'`?
[21:50:17] <p-i-> I can print to 4dp with :.4f and I can right-align-8 with :>8 but how to use both?
[21:51:00] <SnoopJ> p-i-, the alignment comes first. See the documentation for the format mini-language: https://docs.python.org/3/library/string.html#format-specification-mini-language
[21:51:02] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[21:51:25] *** Joins: RougeR (~rougex250@user/rouger)
[21:51:28] <SnoopJ> i.e. you want `f'{x:>8.4f}'
[21:52:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:52:44] <p-i-> Thanks!
[21:53:31] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[21:55:52] *** Joins: Guddu (~Guddu@106.214.41.45)
[21:58:32] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[22:00:39] <foo> If I have adict = {"a": "b": { "c": 1 }} - how can I pull all the keys of "b" when I don't know "a"? I can walk through it all, but is there anything else?
[22:00:56] *** Quits: ATAD (~ATAD@user/atad) (Remote host closed the connection)
[22:01:42] <SnoopJ> foo, what you just shared is a SyntaxError, but if you have heavily nested data, `glom` can occasionally be a useful library.
[22:01:50] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[22:02:23] *** Quits: tims (~tims@14-200-6-147.static.tpgi.com.au) (Ping timeout: 252 seconds)
[22:02:32] <grawity> if the root dict always has one key, you could use next(adict.values()) I guess
[22:03:00] <grawity> oh that needs an iter (), boring
[22:03:06] <Tritium> foo: i dont know if you are asking how to introspect a dict inside a dict when you dont know the structure of the containing dict, or if you are investigating a syntax error...
[22:03:24] <foo> SnoopJ: heh, whoops. oh, glom. Right.
[22:03:35] <foo> Tritium: the former, ask fail.
[22:04:21] *** Joins: wyclif (~wyclif@user/wyclif)
[22:04:48] <Tritium> iterate .items or .values (or .keys if you have some idea what the key containing the interesting dict SHOULD be), or use one of the various xpath like libraries for nested datastructures ... im out of the loop as to the one to use
[22:06:13] <grawity> hmnm, "firstitem, = adict.values()"
[22:06:38] <SnoopJ> grawity, that should probably be `firstitem, *_ = ...` for the cases where there isn't just one key
[22:06:43] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[22:06:56] <Tritium> do you strictly need the _?
[22:07:07] <grawity> it seems like an exception would be preferred in this case
[22:07:12] <SnoopJ> Tritium, yea
[22:07:25] <grawity> because if you accept *rest you can't be sure *which* value was firsr
[22:07:27] <SnoopJ> or any other identifier, I use *rest sometimes
[22:07:42] <SnoopJ> grawity, huh? Why would the first one unpacked not be the first one?
[22:08:02] <Tritium> I thought there was syntax for "And i dont care about the rest" but that was probably a suggestion i'm remembering
[22:08:11] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[22:08:25] <SnoopJ> that's pretty much what the starred target is there
[22:08:27] <grawity> SnoopJ: because it's a dict that came from who knows where and has no defined order... and wasn't supposed to have more than one key anyway, unless I misunderstood
[22:08:35] <SnoopJ> grawity, dicts preserve insertion order since 3.7
[22:08:48] <grawity> only if you know how stuff was inserted to it!
[22:08:52] <Tritium> 3.6 but that was an implementation detail.
[22:09:06] <grawity> not necessarily if you got it from JSON or some similar
[22:09:10] <SnoopJ> grawity, you do not need to know this for the runtime to do it. It's only *useful* in this context if you know it.
[22:09:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:09:29] <grawity> right, you're missing my point then
[22:09:30] <SnoopJ> Just pointing out that `a, = ...` is implicitly assuming there's only one (and will barf if there's more)
[22:09:58] <grawity> that's a *deliberate* assumption here
[22:10:08] *** Joins: ntdll (~ntdll@user/ntdll)
[22:10:13] *** Quits: Ninkentio (~Ninkentio@117.237.194.88) (Read error: Connection reset by peer)
[22:10:35] <grawity> ...I can't remember where I had to deal with similar structures but there was an API of this sort
[22:11:33] <grawity> ohh
[22:11:44] <grawity> maybe it was an xml api for our mail server
[22:11:47] <SnoopJ> if you're willing to assume this and presumably the exact number of levels of nesting, sure
[22:12:03] <SnoopJ> I'm not sure exactly which thing in glom does this, it might be glom.merge
[22:13:25] <SnoopJ> for nesting that isn't "too deep" you can also write a recursive function to walk the dict
[22:15:53] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:16:23] <NeilRG> what are my options for "mixing in" behaviour into a class?
[22:16:31] *** Joins: clawh (~clawh@185.244.214.60)
[22:16:39] <NeilRG> *a class hierarchy
[22:17:19] <NeilRG> I can wrap an object with another object, e.g.
[22:17:21] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:17:32] *** Joins: jdmark (~jdmark@67.8.137.130)
[22:18:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:18:37] <salparadise> Trying to avoid writing from scratch, but does anyone have a library that can compare fields between deeply nested dictionary objects?
[22:18:59] <Wulf> salparadise: you mean something like json diff?
[22:19:16] <salparadise> Wulf: is this a package?
[22:19:38] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:19:50] <Wulf> salparadise: there is one by this name. Can't vouche for it though.
[22:20:02] <salparadise> Wulf: thanks, will look.
[22:20:10] <Wulf> salparadise: I believe there's a standard for this
[22:20:26] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[22:21:11] *** Joins: wyclif (~wyclif@user/wyclif)
[22:21:21] *** Quits: rindolf (~rindolf@87.68.241.247.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:21:22] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:21:38] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[22:22:44] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 252 seconds)
[22:23:08] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 255 seconds)
[22:23:23] *** Joins: EnNa (~steve@public-gprs229793.centertel.pl)
[22:23:57] <bjs> NeilRG: well you can have an object wrap another object or have an attribute that is another object, or you can inherit the other class with the behaviours
[22:24:10] *** Joins: clawh_ (~clawh@185.244.214.60)
[22:24:21] <NeilRG> bjs, ohh that's right
[22:24:35] <A_Dragon> to people with good mypy magic :D :
[22:24:36] <A_Dragon> from yesterday where I just gave up: I want to type annotate this: https://bpa.st/K42Q such that it returns whatever type its given (as it essentially returns the same obj anyway), but with a constraint as UPDATABLE_DATA already has. I tried a TypeVar with both a bound=UPDATABLE_DATA and with just two constraints for Mapping and Sequence. I was then told types were incompatible (in the specific test I had, the return type was
[22:24:36] <A_Dragon> Mapping[Unknown, Unknown] as reported by pyright)
[22:25:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 244 seconds)
[22:25:02] <NeilRG> that's similar to the visitor pattern, right?  but instead of passing an object, I can store it on the object
[22:25:51] *** Joins: Wulf4 (~Wulf@user/wulf)
[22:25:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:26:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:26:23] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[22:26:46] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 272 seconds)
[22:28:49] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[22:28:52] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[22:28:53] *** Wulf4 is now known as Wulf
[22:29:53] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 255 seconds)
[22:30:39] <jinsun> A_Dragon: paste it on https://mypy-play.net , and import all the things you are using
[22:30:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:30:50] *** Joins: jiffe (~jiffe@mail.nsab.us)
[22:32:30] *** Joins: giga84 (~giga84@171.60.255.246)
[22:32:43] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[22:33:11] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[22:34:58] <giga84> i am learning python with python crash course 2nd edition and a beginner to programming. In alien invasion project https://bpa.st/MPHQ this program is there. How does "self.screen = pygame.display.set_mode((800, 600))
[22:35:34] <giga84> run automatically without being called in the run_game method
[22:35:48] <giga84> how is this possible?
[22:36:23] <A_Dragon> jinsun: https://mypy-play.net/?mypy=latest&python=3.10&gist=d82499e6508527d371fee8b8bffa026b
[22:37:13] <A_Dragon> giga84: __init__ is called when a class is constructed, so its implicitly called in line 22
[22:37:40] *** Joins: wyclif (~wyclif@user/wyclif)
[22:37:54] <giga84> what does implicity means?
[22:37:57] <A_Dragon> jinsun: sorry thats not an amazing example, I have more classes and other things that sit on that but getting all of THAT imported is a headache, the gist is
[22:38:01] <SnoopJ> giga84, "not directly"
[22:39:25] <giga84> i still don't get it cna you give me a simple example please?
[22:39:52] <A_Dragon> the gist is that I want to be able to call _deep_apply (or _apply) and have the returned type from that do_the_thing func both match what it was given but also have it checked to be within the bounds of Mapping/Sequence
[22:40:06] <A_Dragon> giga84: when you do AlienInvasion(), some magic happens, that includes __init__ being called
[22:41:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:42:18] <giga84> guess i am too stupid to learn programming?
[22:42:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:42:39] <giga84> man what a waste of time
[22:42:47] <grym> giga84: that's a pretty common mental trap to fall into, but it's an unhelpful one
[22:43:01] <grym> we're remarkably effective at convincing ourselves we can't do things
[22:43:04] *** Joins: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net)
[22:43:26] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:43:28] <A_Dragon> jinsun: this better shows my issue. https://mypy-play.net/?mypy=latest&python=3.10&gist=08e399bd8210f376c04bb62d982788c4 see how y's revealed type is weird?
[22:44:08] <A_Dragon> giga84: was my explanation not sufficient? constructors and stuff are hard to grasp as a new programmer
[22:44:11] <grym> giga84: classes have a constructor, which is a method that is called whenever an instance of that class is created.  So if you call AlienInvasion(), the method AlienInvasion.__init__ is run automatically
[22:44:34] <grym> constructors are like "what's all the stuff we have to do to make one of us?"
[22:45:29] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Remote host closed the connection)
[22:45:35] <SnoopJ> giga84, here's a concrete example: https://bpa.st/6YEA
[22:45:43] <giga84> ok
[22:46:39] <SnoopJ> clarification: A() is being called explicitly there, I could have picked better names for the sections in the output.
[22:46:48] *** Quits: bambams_ (~bambams@S0106a84e3f66f543.su.shawcable.net) (Ping timeout: 258 seconds)
[22:48:26] <giga84> well thanks for the help
[22:49:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[22:49:49] *** Joins: pgib (~textual@173.38.117.69)
[22:51:44] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:53:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:53:23] *** Parts: giga84 (~giga84@171.60.255.246) ()
[22:53:27] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:54:00] *** Quits: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net) (Remote host closed the connection)
[22:54:06] *** Joins: wyclif (~wyclif@user/wyclif)
[22:54:23] *** Joins: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net)
[22:55:56] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[22:57:34] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[22:58:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[22:58:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:58:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[22:59:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:01:31] <jinsun> A_Dragon: so what do you want y's type to be? same as x? if I run it I don't get a dict[str, bool] as output
[23:01:58] <A_Dragon> jinsun: correct I want it to be the same as x
[23:02:20] <A_Dragon> it works fine with no constraints on the typevar, but then I lose the safety I wanted
[23:02:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:02:56] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:03:33] <jinsun> but if you actually run that code y's type is dict[str, None] so you you just want to lie to mypy?
[23:04:05] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[23:04:31] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[23:06:19] *** Joins: dascout_29 (~dascout_2@190.236.211.203)
[23:06:46] <A_Dragon> oh whoops! thats me messing up line 88 should have to_set and delete passed to _deep_apply as well
[23:06:52] <A_Dragon> y should still be a str, bool
[23:07:37] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:07:48] <A_Dragon> https://mypy-play.net/?mypy=latest&python=3.10&gist=ca1ba9d9b62669e506f446a67b7061ec like that, sorry
[23:08:15] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[23:08:50] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Client Quit)
[23:09:13] *** Quits: EnNa (~steve@public-gprs229793.centertel.pl) (Quit: WeeChat 3.2)
[23:09:19] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[23:10:00] *** Joins: wyclif (~wyclif@user/wyclif)
[23:10:01] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[23:10:20] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[23:11:55] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[23:13:02] *** Joins: Crassus (~Crassus@user/crassus)
[23:13:10] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[23:14:44] *** Joins: JordiGH (~jordi@user/jordigh)
[23:15:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:15:45] <JordiGH> For a report, I want to create a cover page. I have a static image already. I just need to add title on front with some text, using a specific truetype font, inside a transparent round-corners box with drop shadows. Is there a Python library that lets me manipulate images like this?
[23:16:19] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:16:55] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:17:52] *** Quits: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net) (Ping timeout: 246 seconds)
[23:18:12] <JordiGH> Hm, can pillow do this?
[23:19:45] <The-Compiler> JordiGH: I'd definitely look at Pillow for this, but no idea if it can do things like drop shadows
[23:20:11] <JordiGH> Okay, looks like it's got me covered for the font.
[23:21:30] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[23:23:01] <Tashtari> JordiGH: Is there something about this that requires that it be done in Python, or in a programming language of any sort?  My first thought on reading what you're trying to do is "inkscape".
[23:23:04] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[23:23:04] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Remote host closed the connection)
[23:23:18] <JordiGH> Tashtari: No X-Y, please, yes, Python.
[23:23:25] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[23:23:29] <thm> could imagemagick do it?
[23:23:41] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[23:23:42] <Tashtari> No X-Y please?
[23:23:44] <JordiGH> I want Python and nothing but Python.
[23:23:56] <thm> there are python bindings to imagemagick
[23:24:03] <JordiGH> Tashtari: I ask X I mean X. https://en.wikipedia.org/wiki/XY_problem
[23:24:06] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:24:13] <JordiGH> thm: Oh, that might work then. I thought you meant scripting it in bash.
[23:24:21] <Tashtari> Suit yourself.
[23:24:25] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:24:32] <A_Dragon> being aware of the XY problem does not mean you are unable to fall victim to it.
[23:24:54] <JordiGH> Everyone who is XY'ed is a victim.
[23:24:59] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Client Quit)
[23:25:03] <JordiGH> XY is vicitimisation by its very nature.
[23:25:10] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[23:25:18] <JordiGH> If I ask something stupid, just please answer my stupid question.
[23:25:25] <JordiGH> Don't change the question because you don't know how to answer mine.
[23:26:09] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:47] <JordiGH> thm: I am finding more examples for Pillow than for imagemagick. I guess I just was asking if Pillow is still the thing people use for image manipulation in Python.
[23:27:04] *** Quits: Barones (~Barones@2804:48dc:8500:0:e0ca:58a6:dc63:dc0b) (Remote host closed the connection)
[23:27:32] <bjs> it's certainly a thing, it works, why stop using it?
[23:27:34] <grym> JordiGH: it's still in heavy use, yes
[23:27:37] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:27:47] <JordiGH> bjs: idk, kids these days with their tiktoks and their rusts.
[23:27:58] <SnoopJ> JordiGH, Pillow can do the text stuff, I don't think it knows anything about drop shadows or rounded corners, though.
[23:28:07] <bjs> JordiGH: you made it pretty clear you didn't want to hear about any rusts
[23:28:12] <JordiGH> bjs: exactly.
[23:28:23] <grym> https://en.wikibooks.org/wiki/Python_Imaging_Library/Drop_Shadows  hmmm.
[23:28:28] <grym> TIL wikibooks
[23:28:29] *** Joins: audiocat (~audio@2603-8081-1800-6a65-409f-2bb3-722e-2529.res6.spectrum.com)
[23:28:39] <SnoopJ> yea you could definitely roll your own
[23:28:49] <JordiGH> Or steal someone else's homerolls.
[23:28:49] <bjs> i mean pillow can write and read arbitrary images,  and then Python is general purpose so it can do anything you want :)
[23:29:12] <SnoopJ> bjs, open() can read and write arbitrary images too :P
[23:29:16] <JordiGH> I mean, I would probably end up doing something similar in gimp copying layers around and performing blurs.
[23:29:17] <bjs> yep
[23:29:31] <SnoopJ> Using GIMP itself is an option, but it would be a bad one over imagemagick
[23:30:02] <JordiGH> Seeing how I am aware of gimp, I have obviously already discard this option.
[23:30:07] <JordiGH> *discarded
[23:30:29] <SnoopJ> not very obvious to me, I think maybe this question isn't for me
[23:30:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:30:50] <JordiGH> Well, why would I want to do this programmatically to begin with? Why does anyone use a programming language?
[23:30:50] *** Quits: LuKaRo (~LuKaRo@p200300dfa714f1881c4e96891ae58782.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:30:57] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[23:31:00] <JordiGH> Because you want to do it more than once, right?
[23:31:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:31:07] <JordiGH> perhaps, even hundreds or thousands of times.
[23:31:24] <bjs> JordiGH: you are being very defensive and nobody has questioned why you'd want to do image processing programatically
[23:31:26] <JordiGH> And bundling gimp with my Python thing so I can script gimp from Python seems weird and awkward.
[23:31:35] <Tashtari> bjs: I did, to be fair.
[23:31:44] <SnoopJ> I regret mentioning it at all, considering the reaction it's produced
[23:31:55] *** Joins: candyman (~candyman@user/candyman)
[23:32:19] *** Joins: LuKaRo (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[23:32:20] <JordiGH> I'm not even sure how scriptable and headless gimp can be.
[23:32:27] <JordiGH> I'm sure it's been done.
[23:32:43] <SnoopJ> 1) very 2) yes
[23:33:30] <JordiGH> But at that point I'm just bundling some whole other program, with its own set of C dependencies, and relying on its weird API that has fewer examples online.
[23:33:37] <SnoopJ> Are you prepared to move on, then?
[23:33:51] <JordiGH> Yeah, sure. I hate being XY'ed so much.
[23:35:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[23:35:32] <bjs> JordiGH: so do we :)
[23:35:56] <JordiGH> Hm, looks like Pillow ends up using imagemagick anyway, at least for the X display, so there you go. I am using imagemagick after all.
[23:36:23] <bjs> is that a problem?
[23:36:25] <SnoopJ> You want to display this image as well?
[23:36:27] <JordiGH> No.
[23:36:29] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[23:36:40] <JordiGH> Not a problem and I don't want to display it. I mean, not in X anyway.
[23:36:45] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 256 seconds)
[23:37:44] *** Joins: rhax (~yannick@user/rhax)
[23:38:07] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:893a:9830:2905:12a4)
[23:38:18] *** Joins: Barones (~Barones@2804:48dc:8500:0:bc76:e91f:e923:4056)
[23:38:50] <SnoopJ> then you won't need to worry about that part of Pillow
[23:39:10] *** Joins: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net)
[23:39:20] *** Joins: Deknos (~someone@user/menace)
[23:40:38] <Tashtari> Anyway, the reason I suggested inkscape was not to suggest that you had no need of Python at all, but to suggest that you create a template of sorts for the page you're trying to create in inkscape, then use Python to manipulate the parts of the SVG file that need to be changed programmatically.
[23:40:40] <SnoopJ> If the drop shadow is in a consistent spot, possibly you could just load it from a file and composite it
[23:41:03] <SnoopJ> or not a consistent spot, but something you can scale/position with Pillow
[23:41:27] <JordiGH> The size of the drop shadow should change with the size of the textbox that contains the text.
[23:41:52] <JordiGH> Anyway, Pillow will work; it seems about the same amount of work as anything else and it's already there.
[23:42:29] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[23:42:46] <SnoopJ> oh neat, it does have ImageDraw.rounded_rectangle()
[23:43:31] <SnoopJ> ImageDraw.textbbox() is what you'll want to calculate the spatial extent of your text
[23:43:41] *** Joins: wyclif (~wyclif@user/wyclif)
[23:43:42] <supakeen> ImageDraw.textbeatbox()
[23:43:57] <supakeen> (beat > bounding)
[23:44:36] *** Quits: Barones (~Barones@2804:48dc:8500:0:bc76:e91f:e923:4056) (Remote host closed the connection)
[23:44:41] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:49:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:49:30] *** Joins: pnoud (~pnoud@user/pnoud)
[23:50:36] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:50:53] *** Quits: p-i- (~Ohmu@node-nuj.pool-118-173.dynamic.totinternet.net) (Ping timeout: 255 seconds)
[23:51:38] *** Quits: bambams__ (~bambams@S0106a84e3f66f543.su.shawcable.net) (Ping timeout: 272 seconds)
[23:52:14] *** Quits: audiocat (~audio@2603-8081-1800-6a65-409f-2bb3-722e-2529.res6.spectrum.com) (Ping timeout: 255 seconds)
[23:52:29] *** Joins: p-i- (~Ohmu@node-4pl.pool-118-172.dynamic.totinternet.net)
[23:54:27] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[23:54:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[23:55:02] *** Joins: Barones (~Barones@2804:48dc:8500:0:4d0f:1aa9:7e5f:65b4)
[23:55:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
