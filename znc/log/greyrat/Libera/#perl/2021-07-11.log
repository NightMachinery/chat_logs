[00:05:34] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[00:10:13] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Quit: Leaving)
[00:13:26] *** Joins: horsepatat (~horsepata@212.3.196.140)
[00:16:50] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[00:17:25] <mmlj4> cool... Hop On Pop just arrived :-)
[00:19:26] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[00:40:59] <mst> mmlj4: oh, I loved that book
[00:41:33] <mst> not much of it was exactly -new- to me but reading it was a great "comparing notes with another functional perler" experience
[00:42:34] <mmlj4> I missed the pop train when it first left the station, I was too green at that point
[00:44:27] <mst> I binge read it while suffering from having caught chickenpox as an adult
[00:45:09] <mst> so I spent the entire time wearing only a kimono and having one cigarette a day because moving my fingers to roll hurt too much to do it more often than that
[00:45:13] <mst> still amazing fun
[00:45:33] <mmlj4> yeah, chicken pox is like that
[00:46:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 272 seconds)
[00:48:09] <pflanze> mmlj4, may I point you also to FunctionalPerl, in case you're not already aware?
[00:48:44] <pflanze> Same spirit, much should translate directly.
[00:48:56] <pflanze> More ready-made stuff :)
[00:49:02] <pflanze> (Except still alpha.)
[00:49:25] <mst> pflanze: it's interesting stuff but HOP is -very- good for showing the concepts
[00:49:41] <pflanze> That may well be. I only read parts of it.
[00:49:51] <pflanze> And a long time ago.
[00:50:11] <mst> mmlj4: once you've read it, pflanze's dist is damn interesting btw
[00:50:42] <mmlj4> hmm...
[00:50:43] <pflanze> :)
[00:52:17] <pflanze> I'm about to release a new version with persistent sets and indexed sets and a new blog post in the next few days. 
[00:52:56] <pflanze> Now for a mundane question: how do I best split a string into bits, and back, when bits means 4 or 5 bits at a time, not individual ones (so pack/unpack is out, right?)?
[00:53:46] <mst> pflanze: http://trout.me.uk/vaguecat.jpg
[00:54:09] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[00:54:30] *** Joins: csrf (~csrf@user/csrf)
[00:54:48] <pflanze> OK :), I have a string from md5, 16 bytes long; I want to split off the first 5 bits.
[00:55:04] <pflanze> Then the next 12 bits, or something like that. And so on.
[00:55:41] <pflanze> I want to treat a string of bytes as a bitstring, essentially.
[00:56:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:56:35] <pflanze> Maybe I should just start adding XS to this distro.
[00:56:48] <mst> or keep that separate
[00:57:06] <mst> I think maybe you could do it with pack/unpack
[00:57:19] <pflanze> Hmm, maybe generate 2 distros from the same Git repo.
[00:57:32] <mst> but why are you wanting the first 5 bits and etc. ?
[00:57:37] <mst> step back. explain what you're trying to achieve.
[00:57:52] <Grinnz> pflanze: dealing with sub-bytes in perl is a bit messy - you usually have to bitshift
[00:58:07] <pflanze> I'm using a trie data structure (really HAMT but it's simplified right now).
[00:58:30] <pflanze> So on each level I need a certain number of bits to decide into which child node to dispatch.
[00:58:52] <mst> should be possible to unpack with a number of bits or something?
[00:58:52] <pflanze> Ah, stupid, I can bitshift in Perl, true.
[00:58:55] * mst isn't good at this
[00:58:58] <Grinnz> mst: should be, but isn't :(
[01:00:04] <leont> plicease: have you tried vec?
[01:00:16] <leont> I meant pflanze, tabbing is diffucult
[01:00:17] <mst> Grinnz: took me a moment to realise you meant unpack rather than 'mst isn't good at this'
[01:00:17] <Grinnz> the only way to unpack bits is with B, which gives you a string of 1s and 0s and not actual bits
[01:00:24] <Grinnz> mst: bahaha
[01:00:57] <pflanze> leont, oh sh* I wasn't aware of that!
[01:01:06] <pflanze> Or forgot
[01:01:44] <Grinnz> i sometimes think of using vec, then i look at its docs and remember i have no idea how to use it
[01:01:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[01:01:55] * leont has used it, but not often
[01:02:49] <Grinnz> pflanze: though unpack 'B' giving you 1s and 0s may be sufficient for some cases
[01:03:25] <pflanze> I saw that one, not so good.
[01:03:37] <pflanze> But I think vec is exactly what I was looking for.
[01:04:40] <pflanze> Well, almost, I wanted the OFFSET to be in bits not in elements, but I think I can make it work anyway.
[01:05:11] *** Joins: khosruw (~khosruw@45.137.151.75)
[01:05:52] <Grinnz> my experience with this is mostly in NetPacket, which does things in pretty naive and redundant ways but whatever works
[01:05:53] <khosruw> Hi guys, how can I handle the error of (Can't locate object method "foo" via package "bar") ?
[01:06:13] <leont> By adding a method foo to package bar? ;-)
[01:06:25] <Grinnz> khosruw: you likely forgot to load one of those keywords and indirect object syntax got confused
[01:08:33] <khosruw> leont No, I have a JSON-like interpreter that instead of calling the hashes, it calls the modules to return the values... so I wanna give it the module names and if it couldn't find the module, then throw an error
[01:08:53] <mst> khosruw: http://trout.me.uk/vaguecat.jpg
[01:09:03] <leont> Yeah, what mst said
[01:09:06] <Grinnz> wat
[01:09:28] <khosruw> mst thanks :)))
[01:09:59] <mst> khosruw: seriously though dude, MOAR INFORMATION
[01:10:19] <khosruw> I just wanna call an object from a module, but by user input
[01:10:27] <Grinnz> "it couldn't find the module" has nothing to do with the error you mentioned
[01:10:30] <mst> khosruw: dude that still doesn't help
[01:10:42] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:10:44] <Grinnz> you determine whether you can find the module by requiring the module
[01:10:44] <khosruw> ...so if my program couldn't find the module, throws an error
[01:10:52] <Grinnz> like with Module::Runtime
[01:10:59] <mst> khosruw: use Module::Runtime qw(use_module);
[01:11:05] <Grinnz> if it's already loaded, requiring it will be a no-op
[01:11:15] <mst> khosruw: use_module($module_name)->$method_name(@method_args)
[01:11:37] <Grinnz> haarg: release Require::Module or whatever you called it already :P
[01:11:43] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:13:47] <khosruw> It's what I mean: User inputs something like this: "Foo::Bar" via terminal
[01:13:47] <khosruw> and if my program couldn't find the module, it handle the
[01:13:48] <khosruw> error via try/catch
[01:14:05] *** vrurg_ is now known as vrurg
[01:14:29] <khosruw> I know that I'm saying my point unclear, but I don't know how to explain it
[01:14:31] <mst> my $method = 'baz';
[01:14:37] <mst> khosruw: use_module('Foo::Bar')->$method(...);
[01:14:48] <mst> will load Foo::Bar and then call Foo::Bar->baz(...)
[01:14:58] <mst> like we already explained it :P
[01:15:18] <Grinnz> if you want to handle the missing module error specially, wrap only the require_module part in try/catch
[01:15:35] <khosruw> mst , Grinnz : yeah, I got it!
[01:15:42] <khosruw> thanks a lot guys :)
[01:16:10] <mst> khosruw: 's all fine. you still owe me a cat :P
[01:16:22] <Grinnz> and for UX, it's a good idea to handle it separately, because if the module is successfully loaded and then the method call fails, that's a very different problem
[01:16:51] <khosruw> mst : well, you've got britain cats in your country, so yours is better than us!
[01:17:12] <khosruw> Grinnz , true
[01:23:46] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:27:28] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[01:28:23] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:30:38] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[01:33:32] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:34:34] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[01:39:02] *** Quits: khosruw (~khosruw@45.137.151.75) (Quit: Client closed)
[01:44:04] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[02:09:20] *** Quits: pekster (~rewt@user/pekster) (Quit: system update)
[02:12:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[02:16:29] * GumbyPAN CPAN Upload: Devel-ebug-0.64 by PLICEASE https://metacpan.org/release/PLICEASE/Devel-ebug-0.64
[02:16:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:17:17] *** Quits: v` (~v@user/ctrl) (Remote host closed the connection)
[02:23:05] *** Joins: pekster (~rewt@user/pekster)
[02:23:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:29:33] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:36:17] *** Quits: horsepatat (~horsepata@212.3.196.140) (Read error: Connection reset by peer)
[02:41:32] * GumbyPAN CPAN Upload: Devel-ebug-HTTP-0.36 by PLICEASE https://metacpan.org/release/PLICEASE/Devel-ebug-HTTP-0.36
[02:46:33] * GumbyPAN CPAN Upload: Firefox-Marionette-1.09 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.09
[02:46:57] *** Joins: thunder (~thunder@185.163.110.87)
[02:47:14] *** Quits: thunder (~thunder@185.163.110.87) (Changing host)
[02:47:14] *** Joins: thunder (~thunder@user/thunder)
[02:47:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[02:53:35] *** Joins: v` (~v@user/ctrl)
[02:54:26] *** Joins: whynot (~whynot@88.155.7.69)
[02:55:27] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[02:55:43] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:56:34] * GumbyPAN CPAN Upload: Firefox-Marionette-1.10 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.10
[02:59:21] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[02:59:44] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[03:08:48] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[03:08:53] *** Joins: djerius_ (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:18:34] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Ping timeout: 246 seconds)
[03:42:26] *** Joins: Manderson (~manderson@69.51.86.133)
[04:00:01] *** Quits: Manderson (~manderson@69.51.86.133) (Read error: Connection reset by peer)
[04:00:11] *** Parts: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) ()
[04:01:22] *** Quits: GEttR (~GEttR@user/gettr) (Remote host closed the connection)
[04:18:40] *** Quits: jess (~jess@libera/staff/jess) ()
[04:22:22] <simcop2387> genio: proper hdd enclosure on the pi4 :) gonna try playing more with things tonight while i watch black widow.  hopefully i can get something building
[04:41:45] * GumbyPAN CPAN Upload: SDL2-FFI-0.04 by SANKO https://metacpan.org/release/SANKO/SDL2-FFI-0.04
[04:54:09] *** Parts: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) ()
[05:09:12] *** Quits: bs338 (~pi@host217-44-229-46.range217-44.btcentralplus.com) (Ping timeout: 250 seconds)
[05:10:56] *** Joins: bs338 (~pi@host81-152-213-199.range81-152.btcentralplus.com)
[05:19:51] *** Joins: monkey_ (~user@190.104.116.134)
[05:28:06] *** Parts: gry (~quassel@botters/gry) (gone)
[05:44:28] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[05:45:15] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[05:45:18] *** Joins: smitop (~smitop@user/smitop)
[05:46:36] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[05:48:31] *** Joins: Martchus_ (~martchus@dynamic-077-002-044-030.77.2.pool.telefonica.de)
[05:49:59] *** Quits: Martchus (~martchus@dynamic-095-118-046-083.95.118.pool.telefonica.de) (Ping timeout: 255 seconds)
[05:50:26] *** Quits: rewt (~default@user/rewt) (Remote host closed the connection)
[05:52:47] *** Quits: seekr (~seekr@130.44.163.10) (Quit: Goodbye, cruel world.)
[05:53:36] *** Joins: rewt (~default@user/rewt)
[05:56:21] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[05:58:27] *** Joins: Su-Shee (~Susanne@p4ffc7d2e.dip0.t-ipconnect.de)
[06:00:51] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:02:07] *** Quits: Su-Shee_ (~Susanne@p4ffc7a45.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[06:04:59] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:06:29] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:07:48] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:11:14] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[06:11:56] *** Joins: whynot_ (~whynot@37.73.45.109)
[06:12:10] *** Quits: whynot (~whynot@88.155.7.69) (Killed (NickServ (GHOST command used by whynot_!~whynot@37.73.45.109)))
[06:13:50] *** whynot_ is now known as whynot
[06:30:29] *** Quits: whynot (~whynot@37.73.45.109) (Quit: leaving)
[06:31:08] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[06:31:31] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:40:22] *** Quits: tabris (~northman@c-107-4-92-118.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:41:36] *** Joins: tabris (~northman@c-107-4-92-118.hsd1.mi.comcast.net)
[06:51:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:05] *** FinnElija is now known as Guest1783
[06:51:05] *** finn_elija is now known as FinnElija
[06:54:10] *** Quits: Guest1783 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 246 seconds)
[07:17:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:38:53] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 255 seconds)
[07:44:04] <v`> simcop2387: what did u think of the movie
[07:47:25] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ec4e:24df:4152:cf57)
[07:47:56] *** Joins: Martchus (~martchus@dynamic-077-004-021-061.77.4.pool.telefonica.de)
[07:48:41] *** Quits: Martchus_ (~martchus@dynamic-077-002-044-030.77.2.pool.telefonica.de) (Ping timeout: 268 seconds)
[07:50:49] <genio> I’m doing the CPA’s
[07:51:20] <genio> Stupid phone. I’m doing the cpan install back and forth right now
[07:51:34] <genio> Sooo many things fail on windows
[08:00:16] <neshpion> just install windows 11
[08:06:25] <xenu> perlbot: acrofind CPA
[08:06:30] <perlbot> xenu: Compulsory Purchase Annuity (UK)
[08:28:46] *** Quits: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb) (Remote host closed the connection)
[08:29:54] *** Joins: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb)
[08:30:07] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (Remote host closed the connection)
[08:30:27] *** Joins: quesker (~idnet@mail.89vx.net)
[08:39:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:48:23] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 265 seconds)
[08:50:28] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[09:25:04] *** Joins: metasintactic (~thunder@185.163.110.122)
[09:25:04] *** Quits: metasintactic (~thunder@185.163.110.122) (Changing host)
[09:25:04] *** Joins: metasintactic (~thunder@user/thunder)
[09:25:12] *** thunder is now known as Guest4984
[09:25:12] *** metasintactic is now known as thunder
[09:26:48] *** Quits: The_Blode (~Blode@92.40.180.222.threembb.co.uk) (Changing host)
[09:26:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:27:28] *** Quits: Guest4984 (~thunder@user/thunder) (Ping timeout: 246 seconds)
[09:30:19] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[09:30:19] *** Quits: gbristol (gbristol@hermes.gbristol.net) (*.net *.split)
[09:30:19] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (*.net *.split)
[09:30:19] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (*.net *.split)
[09:30:19] *** Quits: elcaro (~anonymous@45.32.191.75) (*.net *.split)
[09:30:19] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[09:30:19] *** Quits: lucs (~lucs@user/lucs) (*.net *.split)
[09:30:19] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[09:30:19] *** Quits: niedobry (~bbrindle@li1839-111.members.linode.com) (*.net *.split)
[09:30:19] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[09:30:19] *** Quits: Bodger1234 (uid503511@id-503511.highgate.irccloud.com) (*.net *.split)
[09:30:19] *** Quits: daex (~daex@user/daex) (*.net *.split)
[09:30:19] *** Quits: pounce (~pounce@facebook/engineering/pounce) (*.net *.split)
[09:30:19] *** Quits: TitanOfOld (titan@gentoo/developer/TitanOfOld) (*.net *.split)
[09:30:23] *** Joins: lucs_ (~lucs@user/lucs)
[09:30:23] *** Joins: DrHyde_ (~david@bytemark.barnyard.co.uk)
[09:30:24] *** Joins: rozie_ (~rozie@2001:15e8:110:2913:1:1:1:2)
[09:30:24] *** Joins: niedobry1 (~bbrindle@li1839-111.members.linode.com)
[09:30:25] *** Joins: gbristol_ (gbristol@hermes.gbristol.net)
[09:30:25] *** Joins: ndorf_ (~nd@ob.noxio.us)
[09:30:27] *** Joins: elcaro (~anonymous@45.32.191.75)
[09:30:29] *** Joins: jjatria_ (~jjatria@68.183.32.235)
[09:30:31] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:30:40] *** Quits: ndorf_ (~nd@ob.noxio.us) (Client Quit)
[09:30:48] *** Joins: ndorf (~nd@ob.noxio.us)
[09:30:49] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[09:30:52] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[09:30:56] *** Joins: daex (~daex@user/daex)
[09:30:59] *** Joins: pierrot_ (~pi@user/pierrot)
[09:31:07] *** jjatria_ is now known as jjatria
[09:31:13] *** Joins: TitanOfOld (titan@gentoo/developer/TitanOfOld)
[09:45:40] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:57:11] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 252 seconds)
[10:08:50] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ec4e:24df:4152:cf57) (Ping timeout: 252 seconds)
[10:10:51] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 258 seconds)
[10:36:39] *** Quits: Adura (~Adura@user/adura) (Killed (NickServ (GHOST command used by Adurah!~Adura@142.126.128.7)))
[10:36:53] *** Joins: Adura (~Adura@user/adura)
[10:41:18] *** Quits: m_athias (~mathias@comm.detonation.org) (Read error: Connection reset by peer)
[10:41:24] *** Joins: m_athias1 (~mathias@comm.detonation.org)
[11:06:32] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[11:38:16] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[11:40:34] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[11:47:13] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[11:51:32] * GumbyPAN CPAN Upload: Math-BigInt-Lite-0.22 by PJACKLAM https://metacpan.org/release/PJACKLAM/Math-BigInt-Lite-0.22
[12:18:50] *** Joins: furrymcgee (~devuan@31.179.186.66)
[12:25:30] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[12:25:30] *** Joins: judabuda (kowbunga@user/judabuda)
[12:41:38] * GumbyPAN CPAN Upload: App-Music-ChordPro-0.979.1 by JV https://metacpan.org/release/JV/App-Music-ChordPro-0.979.1
[12:51:39] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Model-0.12 by AVKHOZOV https://metacpan.org/release/AVKHOZOV/Mojolicious-Plugin-Model-0.12
[12:55:41] *** Quits: ilmari_ (~ilmari@user/ilmari) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: Zhmylove[m] (~zhmylovem@2001:470:69fc:105::483a) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: roy[m] (~roybitnex@2001:470:69fc:105::93b) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[12:58:43] *** Joins: ilmari_ (~ilmari@user/ilmari)
[13:07:11] *** Joins: latk (~latk@2001:470:69fc:105::255)
[13:07:11] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[13:07:11] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[13:07:11] *** Joins: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0)
[13:07:11] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[13:07:11] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[13:07:11] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[13:07:23] *** Joins: roy[m] (~roybitnex@2001:470:69fc:105::93b)
[13:07:23] *** Joins: Zhmylove[m] (~zhmylovem@2001:470:69fc:105::483a)
[13:12:47] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 255 seconds)
[13:15:07] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[13:42:19] <Mandevil> Can anyone explain the Moo BUILDARGS example to me? (https://metacpan.org/pod/Moo#BUILDARGS)
[13:42:20] <Paperbot> Link title(s): [ Moo - Minimalist Object Orientation (with Moose compatibility) - metacpan.org ]
[13:42:32] <Mandevil> Why are there two completely different return statements?
[13:42:39] <Mandevil> What do they do?
[13:43:58] <ehuelsmann[m]> Mandevil: context?
[13:44:20] <Mandevil> I don't understand the example.
[13:44:58] <Mandevil> Particularly the return $class-> ... 
[13:45:04] <ehuelsmann[m]> ah. ok. sorry, I missed the link above.
[13:45:22] <ehuelsmann[m]> ok. so the problem is mostly with the second return statement?
[13:45:26] <Mandevil> Yep.
[13:45:37] <Mandevil> The doc says you should return hashref of arguments.
[13:45:41] <Mandevil> That sounds clear.
[13:45:47] <Mandevil> But what does the second return do?
[13:47:58] <ehuelsmann[m]> so the thing here is that the function you're looking at is an "around" method.
[13:48:19] <Mandevil> Oh right
[13:48:29] <ehuelsmann[m]> it means that it is executed instead of the original function.
[13:48:51] <ehuelsmann[m]> the around method has the responsibility to call the original function.
[13:49:51] <ehuelsmann[m]> in order to call that function, you need to know which one it is. that's what $class and $orig are about
[13:49:51] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:50:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Remote host closed the connection)
[13:51:06] <Mandevil> So when there's return { arg => 'val' } it shortcuts this process?
[13:51:22] <ehuelsmann[m]> yes. it decides not to call the original.
[13:51:27] <Mandevil> I see.
[13:52:21] <Mandevil> Thank you
[13:52:38] <ehuelsmann[m]> personally, I use around normally to modify arguments or to post-process the result.
[13:53:46] <ehuelsmann[m]> not calling the original function is usually an indicator of a design problem in the code. Although with buildargs, I think there's a legitimate use-case.
[14:00:41] *** Joins: The_Blode (~Blode@92.40.180.221.threembb.co.uk)
[14:03:04] *** Quits: The_Blode (~Blode@92.40.180.221.threembb.co.uk) (Changing host)
[14:03:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:03:34] *** Joins: xenial-user5 (~androirc@20014C4C17E1D2005DF16E19F566FDF5.unconfigured.pool.telekom.hu)
[14:10:46] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[14:11:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:24:47] *** Quits: xenial-user5 (~androirc@20014C4C17E1D2005DF16E19F566FDF5.unconfigured.pool.telekom.hu) (Ping timeout: 255 seconds)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:00] *** Joins: csrf (~csrf@user/csrf)
[14:34:25] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 246 seconds)
[14:48:15] *** Joins: pj (~pj@ghettoforge/pj)
[15:09:26] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[15:40:57] *** Joins: Pali (~pali@user/pali)
[15:53:39] *** Joins: aman (~aman@user/aman)
[15:56:59] <Mandevil> Hm, Moo's coerce doesn't have access to the instance invoking it...
[15:57:27] <Mandevil> What if I am coercing multiple attributes the same way and don't want to by DRY?
[15:59:07] <ehuelsmann[m]> you can write a single function to do the coercion for all of them.
[15:59:11] <ehuelsmann[m]> coerce => 
[15:59:17] <ehuelsmann[m]> sorry.
[15:59:30] <ehuelsmann[m]> coerce => \&your_fn
[16:02:22] <Mandevil> But the func can't a parent class method.
[16:05:14] <ehuelsmann[m]> yes.
[16:05:40] <ehuelsmann[m]> that's why you can re-use the same function for all coercions of the same type.
[16:05:44] <ehuelsmann[m]> it's context free.
[16:05:53] <ehuelsmann[m]> (i.e. it's not a method)
[16:06:08] <ehuelsmann[m]> or do I misunderstand the problem?
[16:06:18] <Mandevil> But what if I want to do the same coercion in multiple classes? I'll have to define the function in each class.
[16:06:34] <Mandevil> So the idea was to have it in shared parent class.
[16:06:42] <ehuelsmann[m]> why is that? Why can't you put the function in a helper  module?
[16:06:53] <Mandevil> Well, sure I can.
[16:07:01] <Mandevil> But isn't that a bit messy?
[16:08:08] <ehuelsmann[m]> putting in in a parent class works too, but you'll need to access it by it's package-prefixed name all the same, or you need to import it into the current namespace all the same.
[16:08:27] <ehuelsmann[m]> coerce => \&Parent::Class::my_coercion
[16:08:57] <ehuelsmann[m]> or: coerce => \&Helper::Class::my_coercion
[16:09:14] <ehuelsmann[m]> oh. the backslash prefix gets consumed here.
[16:09:21] <ehuelsmann[m]> not sure if it does for you too.
[16:12:59] *** Joins: sverzel (~sverzel@2001:9b1:26f8:3700:6d9:f5ff:fe82:7f8f)
[16:21:09] *** Joins: magla (~gelignite@55d42871.access.ecotel.net)
[16:23:40] <Mandevil> ehuelsmann[m]: Hm, that sounds workable.
[16:25:02] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[16:25:38] <choroba> Especially when you create a Type::* class where your custom types and coercions live
[16:37:08] *** Joins: vanfanel640 (~vanfanel6@user/vanfanel64)
[16:39:46] *** Quits: vanfanel64 (~vanfanel6@user/vanfanel64) (Ping timeout: 240 seconds)
[16:39:55] *** vanfanel640 is now known as vanfanel64
[16:40:10] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 240 seconds)
[16:41:33] *** Joins: k-man (~jason@user/k-man)
[16:55:32] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Ping timeout: 255 seconds)
[16:57:04] *** Joins: Su-Shee_ (~Susanne@p4ff49230.dip0.t-ipconnect.de)
[16:57:05] * GumbyPAN CPAN Upload: Term-Choose-1.734 by KUERBIS https://metacpan.org/release/KUERBIS/Term-Choose-1.734
[16:57:22] *** Quits: Su-Shee (~Susanne@p4ffc7d2e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:57:40] *** Joins: brtastic (~bartosz@185.24.91.138)
[16:59:14] <brtastic> if I want to check whether I can load a module, is it enough to check return value of: eval "require Module; 1" ?
[17:00:19] <brtastic> or even without the 1 at the end?
[17:03:57] <lopid> without actually loading it?
[17:13:16] <mst> brtastic: if (eval { require Foo::Bar }) {
[17:13:21] <mst> brtastic: no reason to do a string eval for that
[17:13:33] <brtastic> lopid: no, its okay if I load
[17:14:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:14:12] <brtastic> mst: ah right, I was string evaling it in another place just to have a name from string. Thanks
[17:14:23] <mst> brtastic: shouldn't do that either
[17:14:35] <mst> require(join('/', split '::', $name).'.pm');
[17:20:41] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[17:21:09] <Adura> I have vague memories of complaints about split using something other than //.
[17:22:19] <mst> Adura: depends what you're doing
[17:25:55] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[17:28:46] <xenu> the problem with '' or "" is that it's misleading because split always takes a regex
[17:28:55] <xenu> (with one exception: " ")
[17:29:31] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[17:34:14] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[17:34:29] *** Joins: horsepatat (~horsepata@80.89.76.22)
[17:35:54] *** Joins: ztx (~ztx@89.232.195.187)
[17:40:48] *** Quits: horsepatat (~horsepata@80.89.76.22) (Read error: Connection reset by peer)
[17:41:22] *** Joins: thunder (~thunder@185.163.110.69)
[17:41:32] *** Quits: thunder (~thunder@185.163.110.69) (Changing host)
[17:41:32] *** Joins: thunder (~thunder@user/thunder)
[17:42:58] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:5123:b631:593f:c629) (Ping timeout: 240 seconds)
[17:43:23] *** Joins: Michelle (~michelle@2407:8800:bc20:200a:4178:e7ee:713a:1592)
[17:52:40] <mst> xenu: when it's a static match like '::' I think it's fine to do that though
[18:11:37] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[18:21:48] *** Joins: Vicissitude (~Vicissitu@user/vicissitude)
[18:23:41] *** Quits: Vicissitude (~Vicissitu@user/vicissitude) (Client Quit)
[18:27:56] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[18:32:55] *** Joins: Md (~md@libera/staff/md)
[18:33:25] <Md> why is autodie engaged for close() even with the "or something" added?
[18:33:26] <Md> use autodie; open(my $fh, '|-', 'false'); close $fh or warn 'xxx';
[18:34:19] *** Joins: Su-Shee (~Susanne@p4ff4968e.dip0.t-ipconnect.de)
[18:34:35] <simcop2387> v`: which movie? sorry lost in scrollback
[18:35:39] <simcop2387> mst: memfd_secret is being added finally.  it creates a memfd but set so that it can't be swapped or mapped directly by the kernel or other processes.  https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.14-memfd_secret
[18:35:40] <Paperbot> Link title(s): [ Linux 5.14 Can Create Secret Memory Areas With memfd_secret - Phoronix ]
[18:35:54] *** Quits: Su-Shee_ (~Susanne@p4ff49230.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:38:10] <lopid> your or is on the close, not the open
[18:41:44] <Md> yes. but autodie dies on the close, not on the open
[18:42:08] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:42:13] <mst> simcop2387: oooh, shiny
[18:42:20] <mst> Md: because autodie is engaged full stop
[18:42:25] <mst> Md: it die()ed before it got to the 'or'
[18:43:04] <aquanight> if you want to suppress autodie for a specific call you can either do { no autodie; close $fh or warn 'xxx'; }
[18:43:09] <Md> the man page shows this example, and I tought that it was general: print "Hello World" or die $!;    # autodie DOESN'T check print!
[18:43:11] <aquanight> or eval { close $fh; 1; } or warn 'xxx';
[18:43:15] <simcop2387> yea looks like it'd be a fun one to get for perl too.  though difficult to use securely.  we'd need a special SV/object that holds the value in a marked mmap area properly for reading from it
[18:43:23] <Md> aquanight: sure, but I am trying to understand why it is not working as expected
[18:44:10] <aquanight> Md: the perldoc for autodie lists what functions are affected\
[18:44:12] <aquanight> https://perldoc.pl/autodie#CATEGORIES
[18:44:13] <Paperbot> Link title(s): [ autodie - Replace functions with ones that succeed or die with lexical scope - Perldoc Browser ]
[18:45:12] <aquanight> for some reason, print was exempted
[18:45:17] <Md> OK, looks like I was horribly confused. for some reason I believe that autodie would be disabled every time the return value is explicitly checked
[18:45:23] <Md> believed, even
[18:45:50] <mst> Md: autodie doesn't check print -at all-
[18:46:06] <mst> Md: you can always do "no autodie 'close';" I think
[18:46:07] <aquanight> hmmm
[18:46:20] <mst> because print has a batshit insane prototype you can't emulate from userspace
[18:46:28] <aquanight> you know that WOULD be an interesting take an autodie, to only replace operators used in void context?
[18:46:34] <mst> same reason it doesn't override system() and IPC::System::Simple exists for that
[18:46:51] <mst> aquanight: perl's last-expression-is-implicit-return stuff would make that leaky
[18:47:43] *** Joins: monkey_ (~user@190.104.116.134)
[18:47:47] <aquanight> mst: only in those situations where you're doing an autodie-affected operator as the last expression/statement
[18:48:11] <aquanight> in which case absent autodie (or under successful cases) you're leaking unspecified return values anyway
[18:48:36] <mst> yes, but I still think it'd be more confusing than it was worth
[18:48:49] *** lucs_ is now known as lucs
[18:49:50] <aquanight> then again, I've started to take up the opinion of "never let subs implicitly return things"
[18:50:38] <aquanight> to the point that I almnost wish we had a 'return'-like for do/eval
[18:51:25] *** Joins: MichaelOF (~michael@p200300eb8f09730149fb8751e6b8d492.dip0.t-ipconnect.de)
[18:56:12] * leont did start an autocroak pragma that does handle print and system, but it's in a very early stage
[18:57:16] <leont> It detects errors just fine, but doesn't contain any customizations yet for most syscalls
[18:58:15] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[19:02:32] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 258 seconds)
[19:07:15] *** Joins: thrig (~thrig@70.97.65.230)
[19:30:00] *** Quits: ztx (~ztx@89.232.195.187) (Quit: ztx)
[19:31:45] *** Joins: jess (~jess@libera/staff/jess)
[19:35:49] <gordonfish> Hmm, for what is supposed to be a historic launch, the coverage is pretty lacking
[19:36:59] <gordonfish> Most of the streams are mirrors of the same video, which barely shows the plane/craft, and keeps putting ads on top of it and going back to fullscreen with some guy doing random commentary
[19:37:19] <gordonfish> nasa's live stream has the best coverage so far
[19:37:29] <thrig> lesson: ads > space travel
[19:41:43] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[19:42:29] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 255 seconds)
[19:42:40] <thrig> (also a bit late to be competing with Yuri Alekseyevich Gagarin)
[19:43:51] <genio> What did I miss?
[19:45:26] <choroba> not much since the 12th April 1961
[19:45:54] <thrig> there was the moon thing in the early 70s
[19:50:52] <xenu> i'm pretty sure that never happened
[19:52:00] <gordonfish> I'm not so sure after that mythbuster's moon episode
[19:53:54] <gordonfish> https://www.youtube.com/watch?v=3KI2_cpR9Ek
[19:53:54] <Paperbot> YouTube video linked by gordonfish: LIVE: Virgin Galactic launches Richard Branson to space on Unity 22 - published by NASASpaceflight
[19:54:47] <gordonfish> That's the best coverage I could find
[19:55:44] <gordonfish> The craft just separated
[20:00:17] <ology> gordonfish: thank you
[20:09:15] *** Joins: monkey_ (~user@190.104.116.134)
[20:15:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[20:24:51] *** Joins: Pixi (~Pixi@user/pixi)
[20:26:49] *** Joins: finsternis (~X@23.226.237.192)
[20:27:05] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:31:28] * GumbyPAN CPAN Upload: Rex-Hook-File-Impostor-v0.1.1.1-TRIAL by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Impostor-v0.1.1.1-TRIAL
[20:31:28] * GumbyPAN CPAN Upload: TCOD-0.002 by JJATRIA https://metacpan.org/release/JJATRIA/TCOD-0.002
[20:34:16] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[20:36:02] *** Quits: thrig (~thrig@70.97.65.230) (Remote host closed the connection)
[20:36:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[20:37:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:46:24] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ec4e:24df:4152:cf57)
[20:56:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:03:13] <simcop2387> genio: sort of kind of figured out how to get some msys2 stuff working on the pi4.  but not fully enough yet to actually build anything.  i might be able to build a working msys2 system manually though it seems.  then i'd throw that up as a blob on a github repo for easier access.
[21:03:26] <simcop2387> the bootstrapping is the hard part.
[21:04:43] <simcop2387> they've got a set of native arm64 compilers for it, but it *seems* like they might only sort of support doing things via x86_64 emulation which i don't have possible on my pi4 (need a windows insider build for that) and i specifically didn't set one up with that support for now.
[21:11:32] * GumbyPAN CPAN Upload: Term-Choose-Util-0.126 by KUERBIS https://metacpan.org/release/KUERBIS/Term-Choose-Util-0.126
[21:11:32] * GumbyPAN CPAN Upload: Term-Form-0.536 by KUERBIS https://metacpan.org/release/KUERBIS/Term-Form-0.536
[21:16:33] * GumbyPAN CPAN Upload: Term-TablePrint-0.140 by KUERBIS https://metacpan.org/release/KUERBIS/Term-TablePrint-0.140
[21:17:53] *** Joins: Guest9 (~Guest9@103.250.145.129)
[21:30:52] *** Quits: MichaelOF (~michael@p200300eb8f09730149fb8751e6b8d492.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[21:51:27] *** Quits: nirnam (~nirnam@1.47.129.158) (Quit: leaving)
[21:54:20] *** Quits: subie (~subie@2601:4c0:4080:bc0:f1fc:54b4:3f90:36af) (Ping timeout: 255 seconds)
[21:56:38] *** Joins: subie (~subie@2601:4c0:4080:bc0:38d4:f7d1:c307:19bb)
[21:58:59] *** Joins: anthk_ (~anthk_@92.176.105.30)
[22:04:42] *** Quits: subie (~subie@2601:4c0:4080:bc0:38d4:f7d1:c307:19bb) (Ping timeout: 240 seconds)
[22:06:18] <gordonfish> simcop2387: It is sort of sounding like it'd be simpler to just use raspian with a mingw cross compiler
[22:07:04] <simcop2387> gordonfish: the problem is that strawberry perl itself depends on a lot of dependencies from msys2, so i'm trying to get that going before i try doing a completely custom build system for it all.
[22:07:15] *** Joins: subie (~subie@2601:4c0:4080:bc0:38d4:f7d1:c307:19bb)
[22:07:48] <simcop2387> the whole windows arm64 ecosystem is in it's infancy so either avenue i suspect is going to be terribly painful
[22:10:40] <buZz> yeah they've only been targetting arm for +10 years now
[22:10:43] <buZz> :)
[22:12:16] <simcop2387> it's a whole new setup since they dropped the whole ce stuff, and then with 8 it was basically DOA, with 10 it looks usable and 11 is aiming to make it more of a thing.  so the idea of getting strawberry built for it isn't as insane as it used to look.  that said doing this isn't as simple as one might hope.  I think I'
[22:13:02] <buZz> really curious if this time it will 'stick' , kinda doubt it
[22:13:06] <simcop2387> I've now got a working enough system to start manually building some dependencies to then get a functional msys2 setup, so i can then build an msys2 installer for arm64 (which doesn't exist yet).  But it'll take a while.
[22:13:27] <buZz> nobody is using windows for 'i dont mind that none of my programs work, as long as the windows look the same'
[22:13:28] <buZz> :P
[22:13:40] <buZz> well maybe a few
[22:13:58] <simcop2387> buZz: with manufacturers finally starting to make decent performing arm chips it has a real chance now.  windows on an M1 mac is likely to start happening
[22:14:04] <simcop2387> and then you've got the android app support stuff too
[22:14:06] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 265 seconds)
[22:14:21] <buZz> we'll see
[22:14:28] <buZz> imho armv5 was already decent performing
[22:15:47] <simcop2387> not decent enough for a desktop though.  but with server chips, and desktop chips now being made and then apple switching to it, i can't imagine it's going to die really.  if it'll take off and go somewhere is a different question but it'll probably limp along much better than it has in the past
[22:16:17] <simcop2387> i'm gonna predict it'll be like Forrest Gump with the leg braces for a while still
[22:27:22] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[22:38:14] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[22:42:05] <mst> I mean, if I can get WSL, firefox and dosbox that's like 95% of my windows use covered
[22:44:14] <simcop2387> alright it looks like the main impediment to doing strawberry perl on windows on arm is that the cygwin base of msys2 doesn't compile natively there.  so patches for that will be necessary to get that working.  might be doable might not but i've almost got an environment to find out
[22:51:43] * GumbyPAN CPAN Upload: Task-MusicBundle-0.1904 by GENE https://metacpan.org/release/GENE/Task-MusicBundle-0.1904
[22:53:30] *** Quits: subie (~subie@2601:4c0:4080:bc0:38d4:f7d1:c307:19bb) (Ping timeout: 240 seconds)
[22:54:40] <daemon> mst, need cortana too :D
[22:55:11] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 268 seconds)
[22:55:24] *** dilfridge is now known as iznogoud
[22:55:25] <rindolf> The Fear-mirage of a biological father is a freaking sadist - his facial expression gets horrid and he can become violent
[22:57:11] *** Joins: subie (~subie@2601:4c0:4080:bc0:38d4:f7d1:c307:19bb)
[22:57:12] <rindolf> https://www.youtube.com/watch?v=e-ORhEE9VVg [SFWish] - even worse than that
[22:57:12] <Paperbot> YouTube video linked by rindolf: Taylor Swift - Blank Space - published by TaylorSwiftVEVO
[22:58:11] <rindolf> my bio makes https://en.wikipedia.org/wiki/Buffy_the_Vampire_Slayer look like a stroll in the park.
[22:58:12] <Paperbot> Link title(s): [ Buffy the Vampire Slayer - Wikipedia ]
[22:58:16] *** Quits: Guest9 (~Guest9@103.250.145.129) (Ping timeout: 268 seconds)
[23:01:44] * GumbyPAN CPAN Upload: SDL2-FFI-0.05 by SANKO https://metacpan.org/release/SANKO/SDL2-FFI-0.05
[23:01:57] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:07:55] *** iznogoud is now known as dilfridge
[23:12:11] *** dilfridge is now known as sonny
[23:12:14] <mst> daemon: no, no I don't
[23:12:26] *** sonny is now known as dilfridge
[23:15:51] <tm604> can't you just `docker run -d --privileged --cap-add=everything microsoft/cortana` these days anyway?
[23:56:52] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Read error: Connection reset by peer)
[23:57:15] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[23:58:39] *** autopsy is now known as coroner
[23:59:46] *** Lemniscate is now known as Sauvin
