[00:00:33] <PJBoy> I get that being created is a necessary condition for being an object, but a sufficient one?
[00:00:35] <Alipha> a subobject still has an address, even if the storage is 0
[00:00:37] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:4ce4:2fb3:3e73:c605)
[00:00:38] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:4ce4:2fb3:3e73:c605) (Changing host)
[00:00:38] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:00:46] <PJBoy> that's true
[00:01:19] <Eelis> PJBoy: i think the list of creation cases is meant to be exhaustive. same as how many "if"s in the standard are really meant to be "iff"
[00:01:53] <Alipha> section 8 talks about objects of zero size
[00:01:58] <PJBoy> could be
[00:02:19] <PJBoy> one of those list items is "when a temporary object is created", which seems somewhat circular
[00:03:06] <Alipha> `int x = 3;`  // is `3` an object, or only x?
[00:03:09] <ville> Eelis: have you read the new rules? there's the "or some magic if it would make the program valid" provision
[00:03:12] <PJBoy> luckily the definition of temporary object doesn't use the definition of an object anywhere
[00:03:31] <Eelis> ville: that's part of "by an operation that implicitly creates objects (see below)", so part of the exhaustive listing
[00:04:07] <ville> Eelis: just saying it's become impossible to reason about what's valid
[00:04:15] <Eelis> http://www.eelis.net/c++draft/intro.object#1.sentence-2
[00:04:38] <Eelis> ville: nah, the places in which objects can magically appear are limited and you can reason about it
[00:04:45] <Eelis> it doesn't happen automatically everywhere. only in specific places
[00:05:56] <PJBoy> and only for specific types
[00:05:59] <PJBoy> but the wording is weird
[00:06:27] <Eelis> from a formal semantics perspective it's super odd. never seen anything like it before
[00:07:26] <PJBoy> you have to trigger UB when wanting to use those blessed operations on these implicitly lifetime types
[00:07:32] <PJBoy> and it will solve that UB for you somehow
[00:07:59] <RandomReader> the definition of an object type may be useful: http://eel.is/c++draft/basic.types.general#8
[00:08:12] <ville> it's terrible how the rules are. it really shouldn't be this difficult
[00:08:25] <Eelis> if you read between the lines, it's like it's trying to subliminally tell you that it's not the spoon^object that bends, it's you that bends
[00:08:28] <RandomReader> (intro.object is the conceptual introduction, not the complete definition .. like most things in the standard, pieces are scattered around)
[00:08:43] <PJBoy> it should just say "whatever operations would be valid in C are valid in C++" >_>
[00:09:00] <RandomReader> that wouldn't make any sense, C's core model is different
[00:09:03] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[00:09:04] <PJBoy> I know I know
[00:09:19] <PJBoy> it should say that in the non-normative text :p
[00:09:33] <RandomReader> we couldn't have RAII with that language
[00:10:15] <AliceMeows> gcc has some sort of a hack to support that in C which obviously isn't standard
[00:10:28] <ville> c23 will have defer
[00:10:59] <PJBoy> the linked definition of an object type is completely sensible actually
[00:11:13] <PJBoy> I'll take that over the exhaustive list for sure
[00:11:20] *** Joins: Pook (~Pook@2001:8a0:f996:1400:6c7c:b52c:8596:bd9f)
[00:12:40] <Eelis> the type of an object is like the easiest thing about it. the subtle things are lifetime, identity, value, representation
[00:14:08] <PJBoy> ah yeah true true
[00:14:16] <PJBoy> tunnel visioned on the type aspect
[00:15:52] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[00:16:38] <ville> a true banger would instantly reroll cpomb if it's not a pow
[00:17:05] <ville> err. wrong window
[00:17:20] <TinoDidriksen> ...what was the right window?
[00:18:44] <ville> a silly children's boardgame related thing. that grown men take way too seriously
[00:18:54] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[00:21:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:25:42] *** Joins: stonkey (~stonkey@user/stonkey)
[00:31:16] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[00:31:17] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) ()
[00:31:32] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[00:31:41] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Client Quit)
[00:31:55] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[00:40:21] *** Quits: costanza (~i.am@user/heineken) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:40:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:40:40] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[00:46:46] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:48:40] *** Joins: noarb (~noarb@user/noarb)
[00:52:43] *** Quits: PointThink (~PointThin@acbh87.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[00:52:57] *** Joins: kn07_ (~kn07_@86.121.166.134)
[00:56:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d)
[00:56:55] *** Joins: kit-ten (~u0_a391@2600:380:a47c:f1f4:1689:bbab:7452:b4f0)
[00:56:56] <kalven> ville: they're adding defer to c?
[00:57:15] <ville> yes i believe so
[00:57:26] <writeback[m]> defer_lock?
[00:57:26] <writeback[m]> or what
[00:57:43] <writeback[m]> not sure what defer is in this context
[00:58:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:58:41] <writeback[m]> oh i see
[00:58:53] <ville> you get stuff to execute at scope end
[00:59:14] <writeback[m]> just write your own scope guard
[00:59:21] <writeback[m]> which.. i guess you can't do in c
[00:59:25] <writeback[m]> how the hell are they implementing this ðŸ¤”
[00:59:34] <ville> http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2895.htm think is the latest
[01:00:05] <writeback[m]> `This paper builds on the assumption that at least simple lambdas are integrated into C23; otherwise it is obsolete. That assumption helps to simplify the proposal a lot and evacuates certain points that had be contentious, even between the original authors of N2542.`
[01:00:10] <writeback[m]> that's a large assumption to start off with
[01:00:16] <writeback[m]> would be nice though
[01:00:41] <writeback[m]> but at this point i dont see a reason to be writing C
[01:00:49] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[01:00:51] <writeback[m]> all these new c standards really are just for appeasing c diehards
[01:01:23] <writeback[m]> like why the fuck is elifndef and elifdef in C++
[01:01:41] <writeback[m]> no reason, but just because it is good for C programmers, and it wouildn't make sense to have it in C and not C++
[01:01:50] <writeback[m]> /rant
[01:02:12] <PJBoy> completeness
[01:03:05] <writeback[m]> true
[01:03:27] <writeback[m]> * in C++23
[01:04:00] <writeback[m]> writeback[m]: circling back to this, *is* there a bare bones lambda proposal in the works?
[01:04:27] <writeback[m]> or is this just a disclaimer
[01:04:54] <ville> there are couple, they just posted new papers this month
[01:05:06] <ville> http://www.open-std.org/jtc1/sc22/wg14/www/wg14_document_log
[01:05:06] <writeback[m]> interesting
[01:05:29] <writeback[m]> oh wow, that's alot of actually useful proposals
[01:05:55] <writeback[m]> hopefully c23 will be the opposite of c17
[01:06:28] <PJBoy> C23 is looking to be the C++11 of C
[01:06:45] <BurumaSerafuku> /j #C
[01:08:19] <writeback[m]> PJBoy: i wonder if this will make writing kernel-mode stuff slightly easier
[01:08:25] <writeback[m]> or if all these impls still just won't work in kernel omde
[01:08:34] <writeback[m]> because obviously you don't have the standard libraryt
[01:09:18] <writeback[m]> * slightly easier (as  you really can't write C++, outside of some wrappers, simple overloads, hacking together a bastardized exception handling scheme)
[01:09:24] <writeback[m]> * slightly easier (as  you really can't write C++, outside of some wrappers, simple overloads, hacking together a bastardized exception handling scheme, and namespaces)
[01:09:25] <PJBoy> no one will use the new C features until torvalds has had at least one rant about them
[01:09:43] <writeback[m]> now if that's not the truth i dont know what is
[01:09:49] <writeback[m]> ðŸ˜‚
[01:19:31] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Ping timeout: 256 seconds)
[01:20:13] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[01:26:01] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[01:26:44] *** Joins: george91 (~george91@103.137.204.24)
[01:28:12] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:29:17] *** Quits: kit-ten (~u0_a391@2600:380:a47c:f1f4:1689:bbab:7452:b4f0) (Ping timeout: 240 seconds)
[01:31:59] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[01:32:34] *** Joins: oknenavin (~nomo@95.87.208.95)
[01:34:22] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:35:23] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 256 seconds)
[01:37:05] *** Quits: dansan_ (~daniel@75.81.148.51) (Ping timeout: 256 seconds)
[01:38:24] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[01:40:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:07] *** ChanServ sets mode: +v npaperbot
[01:41:17] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[01:44:13] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[01:45:07] *** Joins: dansan (~daniel@75.81.148.51)
[01:49:46] *** Joins: proller (~p@2a02:6b8:b081:8822::1:2)
[01:50:34] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:51:57] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 240 seconds)
[01:56:30] *** Quits: proller (~p@2a02:6b8:b081:8822::1:2) (Ping timeout: 250 seconds)
[01:59:57] <pa> how to store a pointer for just comparing if it's the same as another pointer? uint64_t?
[02:01:12] *** Joins: Joss (~joss@user/Joss)
[02:01:58] <zz> If you have a pointer, it is already stored. Just compare it.
[02:02:04] <zz> void f(void *p) { if (p == nullptr) ... }
[02:03:18] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[02:06:20] <vdamewood> pa: There is no guarantee that uint64_t can represent a pointer.
[02:06:33] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[02:06:49] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[02:07:13] <pa> i see, so what to use, if i want to store it in a struct, or for example export its value into a text file?
[02:07:20] <pa> s/value/address
[02:08:20] <zz> use its natural type for storing in a struct. Inside a text file, a pointer has no meaning.
[02:08:23] <writeback[m]> vdamewood: well, if you really want to be pedantic, uintptr_t..
[02:08:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:09:08] <pa> thanks
[02:09:11] <pa> trying that type
[02:09:13] <vdamewood> uintptr_t isn't guaranteed to exist.
[02:09:26] <Alipha> Why would you put a pointer value in a text file?
[02:09:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[02:09:55] *** Joins: stonkey (~stonkey@user/stonkey)
[02:10:09] <writeback[m]> FILE* ?
[02:10:10] <pa> to compare it afterward with another such value
[02:10:15] <writeback[m]> or is he trying to literally store the value
[02:10:17] <writeback[m]> in a text file
[02:10:40] <writeback[m]> pa: when you say, "afterward", how much afterward
[02:10:43] <writeback[m]> address randomization exists
[02:10:51] <writeback[m]> * address space randomization exists
[02:11:01] <writeback[m]> highly unlikely your pointer will be at the same location as it was previously
[02:11:05] <vdamewood> a memory address has no meaning after the process quits.
[02:11:05] <pa> writeback[m]: after i read the file from another application
[02:11:25] <writeback[m]> ahhh
[02:11:27] <pa> i just want to compare if two such pointers were the same
[02:11:34] <writeback[m]> so you will hvae both running at the same time
[02:11:34] <writeback[m]> ?
[02:11:43] <pa> no i want to do it afterward
[02:11:53] <writeback[m]> not doable
[02:12:05] <writeback[m]> it's just what vdamewood said
[02:12:05] <vdamewood> I would just use a hex string for the text file.
[02:12:07] <pa> i just need the value of the pointer to compare if one was the same of another
[02:12:37] <vdamewood> Sounds like pa is just trying to probe implementation details for personal discovery.
[02:13:36] <writeback[m]> well... why not write the deref'd value in the file... and compare that ?
[02:13:38] <writeback[m]> I just
[02:13:42] <writeback[m]> don't really followe
[02:13:45] <pa> how about void * ?
[02:13:46] <writeback[m]>  * don't really follow
[02:14:13] <writeback[m]> whatever the answer to this question is, will require type punning, so there is no concrete answer
[02:14:35] <vdamewood> pa: void * is the best bet.
[02:14:47] *** Quits: magla (~gelignite@55d475f4.access.ecotel.net) (Quit: Stay safe!)
[02:14:50] <pa> thanks trying that one then
[02:14:53] <writeback[m]> im misunderstanding
[02:15:00] <writeback[m]> i guess
[02:15:24] <pa> i suppose that can convert to uint64_t, where pointers are 64bits, right?
[02:15:36] <vdamewood> pa: Maybe maybe not. No guarantees.
[02:15:46] <pa> why not, if not
[02:15:59] <writeback[m]> ub
[02:16:01] <writeback[m]> no?
[02:16:07] <pa> i see, thanks
[02:16:11] <RandomReader> std::uintptr_t is the standard type that is supplied if the implementation supports representing locations as integers
[02:16:14] <RandomReader> type alias*
[02:16:19] <RandomReader> if it doesn't exist, then it's not supported
[02:16:34] <RandomReader> the details of the integer conversion are also up to the implementation, not standardized
[02:17:31] <RandomReader> the "store to file" piece also doesn't make much sense in general, as there's no reason for a pointer value to have meaning even while the same program is running, let alone later or for different programs
[02:17:33] *** Parts: jplejacq (~jplejacq@68.71.169.160) (Leaving.)
[02:17:55] <vdamewood> pa: C++ was designed to work on a wide range of hardware with different features, some of which people don't normally talk about. As such the representation of pointers can vary widely since, on some systems, pointers aren't even compatible with pointers.
[02:18:12] <writeback[m]> RandomReader: `for a pointer value to have meaning even while the same program is running`  not really, as you can attach to a process' address space and read memory
[02:18:20] <RandomReader> in a standard sense the pointer holds the location of an object internal to the program, while that object exists, and doesn't really cover much more than that
[02:18:23] <writeback[m]> e.g ReadProcessMemory
[02:18:35] <pa> RandomReader: what do you mean, not even when the same program is running? if two pointers are the same, and the object is of the same type, why can't i assume it's the same object?
[02:18:41] <writeback[m]> * e.g ReadProcessMemory (implementation defined, windows, ik)
[02:18:53] <RandomReader> I mean that holds while both objects exists, but not once either ceases to exist
[02:18:57] <vdamewood> pa: virtual memory means each process sees its own isolated memory.
[02:18:57] *** Joins: peacefulman (~paul@141.217.247.7)
[02:19:23] <RandomReader> writeback[m] - this channel covers Standard C++, so not specific implementations (which can and often do specify their own interesting things)
[02:19:30] <pa> so within that process, this would make sense, or?
[02:20:01] <writeback[m]> RandomReader: apologies
[02:20:08] <vdamewood> Well, if you're still in the same process, you don't need to output to a file, you can just do a comparison with ==.
[02:20:08] <RandomReader> pa - as long as the objects you're comparing are alive, yes .. you originally mentioned storing for some amount of time, and that's the piece I'm highlighting here: if you store it long enough for the object to die, then the stored value doesn't have meaning anymore
[02:21:00] <pa> i just want to store the address of objects during the lifetime of the process, to later analyze it and assess if various objects were in fact the same object
[02:21:05] <RandomReader> if it's just as simple as "void* in a container, search to see which object it == later" that's fine
[02:21:14] <writeback[m]> would this be a potential use case for concepts?
[02:21:31] <writeback[m]> oh nvm
[02:21:37] <RandomReader> it has to be lifetime of the *objects*, lifetime of the entire process won't get you a useful answer
[02:21:38] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[02:21:38] <writeback[m]> yeah, not compile time, whoops
[02:22:18] <RandomReader> in standard terms, once the object dies, and pointer referring to it now has an invalid value, and it's not specified what will happen .. in practical terms, an implementation is likely to reuse memory for some other purpose (object)
[02:22:36] <RandomReader> so the equality comparisons later, after one or more objects has died, will have unpredictable results
[02:24:39] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:24:51] <RandomReader> if what you need is a guaranteed unique identifier for each object, you'll have to build that in somehow, like with a global counter
[02:26:21] * vdamewood plays with his UUID
[02:26:56] <RandomReader> it would be difficult to do "externally" in code in a generic way, since you need to either modify the class type to store the identifier within the object, or have enough control of where each object is created and destroyed to maintain an external map
[02:27:31] <RandomReader> if it's only for debugging, there might be an existing trace tool of some sort to help on your target platform(s), perhaps one of the memory profilers
[02:28:09] * writeback[m] cries in COM
[02:31:07] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[02:32:23] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:32:56] *** Quits: pizdets_ (~pizdets@183.182.110.146) (Ping timeout: 250 seconds)
[02:33:45] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.149)
[02:36:48] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[02:37:47] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:39:26] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[02:39:42] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:54] *** Joins: stonkey (~stonkey@user/stonkey)
[02:41:33] *** peacefulman is now known as BobTheTomato
[02:42:54] <zz> writeback[m]: well the upside of COM is, you pretty much deal with active objects exclusively
[02:51:15] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:56:04] *** Quits: cosimone (~user@93-44-186-159.ip98.fastwebnet.it) (Remote host closed the connection)
[02:58:18] *** Quits: george91 (~george91@103.137.204.24) (Remote host closed the connection)
[02:58:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:17] *** Quits: jkaye (~jkaye@2601:281:8300:7530:91a1:7dca:589a:aaae) (Ping timeout: 240 seconds)
[03:03:33] *** Joins: george91 (~george91@103.137.204.24)
[03:03:40] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 250 seconds)
[03:05:10] <cbreak> zz: radio-active objects?
[03:08:00] *** Quits: george91 (~george91@103.137.204.24) (Ping timeout: 250 seconds)
[03:12:48] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[03:13:03] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[03:13:35] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[03:17:01] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[03:23:36] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:32:56] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:33:15] *** Joins: LunarJetman (Zogatribe@user/zogatribe)
[03:33:39] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Ping timeout: 256 seconds)
[03:33:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:34:47] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 256 seconds)
[03:40:37] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[03:41:11] *** Quits: N4buc0- (~N4buc0@191.250.99.50) (Ping timeout: 256 seconds)
[03:43:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:49:32] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[03:52:12] <thad_the_man> I wish someone would take the Frtee SOM version and iontegrate in with linux.
[03:53:07] <thad_the_man> s/Frtee/Free/
[03:53:57] <pa> the problem with profilers is that they are usually generic, and therefore huge and bulky and makes applications run terribly slow
[03:55:16] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[03:57:00] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:57:12] *** Joins: EdFletcher (~PKD@user/edfletcher)
[03:57:37] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d) (Remote host closed the connection)
[04:00:23] <writeback[m]> very much so
[04:00:24] <writeback[m]> <cbreak> "zz: radio-active objects?" <- https://docs.microsoft.com/en-us/previous-versions/31k6d0k7(v=vs.140)?redirectedfrom=MSDN
[04:00:40] <writeback[m]> developer hazard
[04:00:40] <writeback[m]> ðŸ¤£
[04:01:00] * writeback[m] uploaded an image: (26KiB) < https://libera.ems.host/_matrix/media/r0/download/halogen.city/e0f37732ba2b436b99a153e5cc33855ec8a0b7b8/image.png >
[04:01:30] <zz> congrats you managed to make a screenshot
[04:01:43] <writeback[m]> thanks
[04:01:49] <zz> a redundant one, at that
[04:01:50] <writeback[m]> a screenshot is better than a link
[04:02:49] <zz> ironic how your screenshot is behind a link
[04:03:21] <writeback[m]> oh, that's a good point
[04:03:28] <writeback[m]> on matrix it just embeds
[04:03:34] <writeback[m]> is this  channel bridged to IRC?
[04:04:45] <zz> heh, matrix is deceptive isn't it
[04:05:02] <writeback[m]> genuinely thought it uploaded it locally
[04:05:08] <writeback[m]> haha
[04:05:17] <TinoDidriksen> All of Libera.chat is bridged to Matrix.
[04:05:32] <writeback[m]> ah, okay
[04:05:41] <writeback[m]> sorry about that, if i knew it was bridged to irc i wouldn't have posted that :p
[04:14:01] <sam113101> how do you specify that a method can be called on const objects
[04:14:17] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[04:14:17] <zz> drumroll, with a trailing const qualifier
[04:14:49] <zz> to be fair, any normal method (C++ does not have methods!) can be called on (normal and) const objects
[04:18:36] <zz> .oO(no, that sounded wrong)
[04:19:58] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:20:04] <zz> references to const T& require that T::f is const-qualified, naturally.
[04:20:35] <zz> { S s; const S &t = s; t.f(); } struct S { void f() const {} };
[04:20:35] <geordi>  
[04:22:44] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:23:12] <sam113101> honestly const should be the default
[04:23:14] *** Joins: mrh (~mrh@c-67-161-88-249.hsd1.wa.comcast.net)
[04:24:04] <zz> yes, but it's too late to change the default
[04:24:15] *** Parts: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[04:25:29] <sam113101> passing 'const Packet' as 'this' argument discards qualifiers [-fpermissive]
[04:25:32] <sam113101> what does this mean
[04:25:39] <zz> means you forgot the const qualifier on f
[04:26:53] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[04:33:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[04:34:25] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[04:36:44] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9f5:eb51:8b61:96ab) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:42:06] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:43:34] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[04:46:50] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[04:47:29] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[04:47:31] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:50:21] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[04:50:57] *** Joins: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com)
[04:52:39] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[04:53:18] *** Quits: BobTheTomato (~paul@141.217.247.7) (Ping timeout: 250 seconds)
[04:55:15] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Remote host closed the connection)
[04:56:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:58:43] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:59:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[04:59:32] *** Quits: stephe (sid14127@id-14127.lymington.irccloud.com) (Ping timeout: 240 seconds)
[04:59:32] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (Ping timeout: 240 seconds)
[05:00:07] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[05:00:18] *** Joins: patterner___ (sid212303@id-212303.ilkley.irccloud.com)
[05:00:18] *** Joins: stephe (sid14127@id-14127.lymington.irccloud.com)
[05:00:24] *** Joins: greyblue9_ (sid500829@id-500829.ilkley.irccloud.com)
[05:00:25] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[05:00:27] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[05:00:28] *** Joins: psb___ (sid500598@id-500598.ilkley.irccloud.com)
[05:00:37] *** Joins: VShell (~shell@user/shell)
[05:01:05] *** Joins: heiner__ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[05:01:36] *** Joins: yano1 (~yano@ircpuzzles/staff/yano)
[05:01:47] *** Joins: Jck_true6 (~jcktrue@user/jck-true/x-0200799)
[05:02:47] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[05:02:49] *** Joins: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:02:52] *** Joins: tbe_loki2 (~loki@loki.codes)
[05:02:53] *** Joins: nolyc_ (~nolyc@tinodidriksen.com)
[05:02:53] *** ChanServ sets mode: +v nolyc_
[05:04:06] *** Joins: Arsen_ (arsen@managarm/dev/Arsen)
[05:04:10] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[05:04:12] *** Joins: Nixx (~quassel@bulbasaur.sjorsgielen.nl)
[05:04:27] *** Joins: miklcct_ (quasselcor@vps.miklcct.com)
[05:05:05] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[05:05:51] *** Joins: real_hirion (~hirion@user/hirion)
[05:06:18] *** Joins: cncr04s_ (~cncr04s@afxr.net)
[05:08:46] *** Joins: sielicki1 (~sielickim@2001:470:69fc:105::f45)
[05:08:52] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[05:09:04] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: patterner__ (sid212303@id-212303.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: psb__ (sid500598@id-500598.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: Shell (~shell@user/shell) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[05:09:05] *** decartes_ is now known as decartes
[05:09:06] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 240 seconds)
[05:09:06] *** Jck_true6 is now known as Jck_true
[05:09:06] *** Quits: sielicki (~sielickim@2001:470:69fc:105::f45) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: writeback[m] (~writeback@2001:470:69fc:105::1:6118) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Stewart (~stewart@2001:470:69fc:105::1:6cd) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: popocka[m] (~popockama@2001:470:69fc:105::1:546e) (Ping timeout: 240 seconds)
[05:09:06] *** greyblue9_ is now known as greyblue9
[05:09:06] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: cncr04s (~cncr04s@afxr.net) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Nixx_ (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: jadew` (~rcc@2a02:2f0a:b111:b100:ca2a:14ff:fe58:c8c0) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Forsaken87_ (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: paulo (paulo@user/paulo/x-9032687) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: miklcct (~quassel@vps.miklcct.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: tbe_loki (~loki@loki.codes) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: nolyc (~nolyc@tinodidriksen.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: hirion (~hirion@user/hirion) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: kalven (~calvin@2a02:470:84:102::24) (Ping timeout: 240 seconds)
[05:09:07] *** nolyc_ is now known as nolyc
[05:09:07] *** tbe_loki2 is now known as tbe_loki
[05:09:16] *** Quits: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Remote host closed the connection)
[05:10:01] *** Joins: epony (~epony@user/epony)
[05:10:06] *** VShell is now known as Shell
[05:10:13] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[05:10:28] *** yano1 is now known as yano
[05:11:09] *** Parts: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) ()
[05:12:40] *** Joins: paulo (paulo@user/paulo/x-9032687)
[05:13:50] *** Joins: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[05:16:03] *** Joins: jadew` (~rcc@2a02:2f0a:b111:b100:ca2a:14ff:fe58:c8c0)
[05:17:04] *** Joins: kalven (~calvin@2a02:470:84:102::24)
[05:18:15] *** Joins: writeback[m] (~writeback@2001:470:69fc:105::1:6118)
[05:19:09] *** Joins: Stewart (~stewart@2001:470:69fc:105::1:6cd)
[05:20:44] *** Joins: popocka[m] (~popockama@2001:470:69fc:105::1:546e)
[05:30:39] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:36:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: Cahaan (~Cahaan@user/cahaan) (Ping timeout: 240 seconds)
[05:38:49] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:40:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:07] *** ChanServ sets mode: +v npaperbot
[05:42:36] *** Joins: Cahaan (~Cahaan@user/cahaan)
[05:44:10] *** Joins: Common-Lisp (~eric@2600:1700:94cc:cf:cec6:abc9:37c0:8449)
[05:46:04] *** Quits: irrenhaus3 (~xenon@HSI-KBW-046-005-003-085.hsi8.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[05:47:03] *** Quits: Pook (~Pook@2001:8a0:f996:1400:6c7c:b52c:8596:bd9f) (Quit: Leaving)
[05:47:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[05:49:37] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[05:51:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:55:42] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 250 seconds)
[05:55:56] *** Quits: Common-Lisp (~eric@2600:1700:94cc:cf:cec6:abc9:37c0:8449) (Quit: WeeChat 3.3)
[05:56:34] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[05:58:32] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[06:02:30] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[06:05:04] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:06:13] *** Quits: kn07_ (~kn07_@86.121.166.134) (Quit: Leaving)
[06:10:50] *** Joins: frost (~frost@user/frost)
[06:14:37] *** Quits: chozorho (~chozorho@2601:146:300:c30::6b8f) (Ping timeout: 240 seconds)
[06:15:09] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:15:49] *** Joins: chozorho (~chozorho@2601:146:300:c30::a15b)
[06:24:57] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[06:31:14] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:32:13] *** Joins: zunino (~zunino@189.27.223.108.dynamic.adsl.gvt.net.br)
[06:32:43] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:33:21] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:36:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[06:47:44] *** Joins: millido (~millido@84.210.150.128)
[06:53:45] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:01:12] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:05:51] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[07:08:16] *** Joins: xiongxin (~Thunderbi@113.116.224.153)
[07:11:29] *** Joins: xiongxin1 (~Thunderbi@2409:8954:3858:3b67:5530:ac8b:7831:d0e0)
[07:12:20] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[07:12:50] *** Quits: xiongxin (~Thunderbi@113.116.224.153) (Ping timeout: 250 seconds)
[07:12:51] *** xiongxin1 is now known as xiongxin
[07:12:59] *** Quits: zunino (~zunino@189.27.223.108.dynamic.adsl.gvt.net.br) (Quit: WeeChat 3.0.1)
[07:14:35] *** Joins: anandn (~anandn@2601:600:a27f:d92d:557:2ccd:32e:85fe)
[07:27:16] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[07:29:52] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:30:11] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:33:38] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:34:04] *** Quits: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:35:20] *** Joins: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:36:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:38:32] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[07:41:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:43:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[07:44:06] *** Joins: xiongxin1 (~Thunderbi@113.116.224.153)
[07:44:36] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[07:44:37] *** Quits: xiongxin (~Thunderbi@2409:8954:3858:3b67:5530:ac8b:7831:d0e0) (Ping timeout: 240 seconds)
[07:44:37] *** xiongxin1 is now known as xiongxin
[07:48:07] *** Quits: jsbach (~jsbach@2a01:c22:b0ac:9600:1cd7:52ec:6b1a:4d40) (Ping timeout: 250 seconds)
[07:52:36] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[08:00:27] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[08:00:46] *** Joins: jsbach (~jsbach@2a01:c22:b026:9600:b0d4:cea7:b488:c972)
[08:07:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:10:47] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:10:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[08:16:26] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[08:16:26] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[08:16:26] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:18:41] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[08:21:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[08:22:04] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[08:24:44] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:33:25] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[08:33:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:40:22] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[08:40:45] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Remote host closed the connection)
[08:41:31] *** Joins: evelyette (~Eleanor@178.79.105.181)
[08:42:58] *** Quits: xiongxin (~Thunderbi@113.116.224.153) (Ping timeout: 250 seconds)
[08:43:32] *** Joins: xiongxin (~Thunderbi@2409:8954:3858:48bd:b2bb:297c:d465:c397)
[08:44:14] *** Joins: c4017w (~c4017@209.52.68.8)
[08:44:49] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:44:54] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:45:33] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[08:45:47] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[08:48:32] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:50:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:50:51] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[08:51:00] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:55:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:57:57] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[08:58:27] *** Joins: c4017w (~c4017@209.52.68.8)
[09:01:02] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:04:57] *** Quits: LunarJetman (Zogatribe@user/zogatribe) (Ping timeout: 240 seconds)
[09:09:02] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[09:12:00] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:20:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[09:28:49] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:31:10] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:33:17] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:41:00] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:09] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:09] *** ChanServ sets mode: +v npaperbot
[09:42:22] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:43:04] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[09:44:14] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Client Quit)
[10:01:39] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de)
[10:08:06] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[10:09:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[10:09:21] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:18:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:19:30] *** Joins: ferdna (~ferdna@user/ferdna)
[10:21:00] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:22:25] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[10:23:08] *** Joins: p|q (~plq@94.54.152.75)
[10:24:17] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66003dc9c095b214cf35.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:39:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[10:40:23] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:44:45] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca)
[10:51:40] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[10:51:50] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:51:51] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[10:53:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:55:08] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 250 seconds)
[10:56:41] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[10:59:00] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:13] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[10:59:25] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[10:59:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:45] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[11:00:10] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[11:09:25] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Ping timeout: 256 seconds)
[11:09:32] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[11:12:36] *** Joins: lais (~lais@110.red-88-21-181.staticip.rima-tde.net)
[11:12:43] *** Joins: rendar (~rendar@user/rendar)
[11:13:31] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca)
[11:14:13] *** Cyp_ is now known as Cyp
[11:15:24] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[11:17:19] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[11:20:09] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:23:23] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[11:24:15] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[11:24:26] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:28:15] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:30:38] *** Joins: Guest1594 (~Guest15@ip72-199-239-162.sd.sd.cox.net)
[11:36:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[11:36:43] *** Quits: epony (~epony@user/epony) (Quit: QUIT)
[11:38:26] *** Joins: epony (epony@user/epony)
[11:38:57] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:43:13] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[11:54:49] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[11:58:20] *** Joins: r-g (~r-g@163.172.58.132)
[11:58:58] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[11:59:21] *** Joins: Techcable (~Techcable@168.235.93.147)
[12:05:25] *** Arsen_ is now known as Arsen
[12:12:46] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:19:33] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca) (Quit: WeeChat 3.4)
[12:19:41] *** Quits: letto (~letto@86.120.81.105) (Ping timeout: 256 seconds)
[12:24:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:36:12] *** Joins: xiongxin1 (~Thunderbi@117.136.33.151)
[12:37:17] *** Quits: xiongxin (~Thunderbi@2409:8954:3858:48bd:b2bb:297c:d465:c397) (Ping timeout: 240 seconds)
[12:37:17] *** xiongxin1 is now known as xiongxin
[12:39:42] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[12:40:02] *** Quits: Guest1594 (~Guest15@ip72-199-239-162.sd.sd.cox.net) (Quit: Client closed)
[12:41:13] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Client Quit)
[12:41:47] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[12:45:02] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca) (Ping timeout: 240 seconds)
[12:45:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:51:19] *** Quits: chozorho (~chozorho@2601:146:300:c30::a15b) (Quit: good night)
[12:54:02] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[12:56:31] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[12:57:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca)
[13:01:17] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:02:26] *** Joins: waleid (~waleid@110.137.102.130)
[13:05:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:07:27] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca)
[13:09:46] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[13:11:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:88f8:5844:198f:e3c2)
[13:21:16] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:26:48] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:28:16] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:29:12] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[13:29:29] *** Joins: badone (~badone@209.132.189.152)
[13:33:04] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[13:33:53] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:34:22] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[13:36:00] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[13:40:13] *** N`aZ is now known as T`aZ
[13:41:00] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:09] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:09] *** ChanServ sets mode: +v npaperbot
[13:43:42] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[13:46:02] *** Quits: anandn (~anandn@2601:600:a27f:d92d:557:2ccd:32e:85fe) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:49:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[13:49:49] *** Joins: proller (~p@2a02:6b8:b081:15::1:30)
[13:50:14] *** Joins: letto (~letto@86.120.81.105)
[13:50:20] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:57:48] *** Joins: lovelace (~lovelace@222.212.239.150)
[13:58:09] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:00:54] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:01:09] *** Parts: lovelace (~lovelace@222.212.239.150) ()
[14:01:38] *** Joins: xiongxin1 (~Thunderbi@2409:8954:3858:48bd:b2bb:297c:d465:c397)
[14:03:02] *** Quits: xiongxin (~Thunderbi@117.136.33.151) (Read error: Connection reset by peer)
[14:03:02] *** xiongxin1 is now known as xiongxin
[14:08:10] <lockywolf> How would I call a multithreaded library from a multithreaded program?
[14:09:14] <lockywolf> A multithreaded library has to use some kind of place to manage thread information, which has to be non-threadsafe. Or at least, it seems so.
[14:12:26] *** Joins: xiongxin1 (~Thunderbi@119.123.101.197)
[14:13:30] <ville> something being a library and multithreaded has little to do with each other
[14:13:39] <ville> what is "thread information"?
[14:13:49] *** Joins: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr)
[14:13:57] *** Quits: xiongxin (~Thunderbi@2409:8954:3858:48bd:b2bb:297c:d465:c397) (Ping timeout: 240 seconds)
[14:13:57] *** xiongxin1 is now known as xiongxin
[14:14:02] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[14:14:17] <TinoDidriksen> If the library spawns threads, that's usually not something you need to worry about even if you also spawn threads.
[14:14:49] *** Joins: oknenavin (~nomo@95.87.208.95)
[14:18:57] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.5-dev)
[14:19:11] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[14:21:02] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[14:21:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:25:01] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[14:25:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:27:17] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:27:27] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[14:28:48] *** Quits: p|q (~plq@94.54.152.75) (Remote host closed the connection)
[14:29:58] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:30:15] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:33:52] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:34:04] *** Quits: waleid (~waleid@110.137.102.130) (Quit: Nettalk6 - www.ntalk.de)
[14:34:30] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:34:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[14:35:46] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[14:36:03] *** LordKalma_ is now known as LordKalma
[14:36:45] *** Joins: js0e0 (~ledneys@185.6.149.202)
[14:36:50] *** Parts: js0e0 (~ledneys@185.6.149.202) ()
[14:40:17] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Client Quit)
[14:40:24] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[14:41:02] *** Joins: cosimone (~user@93-44-186-112.ip98.fastwebnet.it)
[14:41:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:42:25] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[14:42:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[14:42:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[14:43:28] *** Joins: dv2 (~dv2@2a01:4f8:c0c:b9f4::1)
[14:47:53] *** Joins: toastloop (~toastloop@user/toastloop)
[14:48:33] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[14:58:19] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7)
[14:58:25] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[14:59:27] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[15:00:27] <Eelis> lockywolf: there are 2 key things to ensure: (1) that you don't concurrenty call lib functions that you're not allowed to, and (2) that you can handle your handlers being invoked concurrently by the lib if that's what it does
[15:02:32] <lockywolf> Eelis, the library does not announce which of its functions cannot be called concurrently :(
[15:03:19] <Eelis> then to be safe, technically you have to conservatively assume that none of the lib's functions can be called concurrently
[15:05:09] *** Joins: costanza (~i.am@user/heineken)
[15:05:27] <Eelis> because you don't know which of those functions share state, and so you would risk data races by calling them concurrently
[15:05:37] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:05:37] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[15:07:59] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[15:09:24] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[15:10:52] *** Joins: evelyette (~Eleanor@178.79.105.181)
[15:11:02] <lockywolf> hm... makes sense
[15:11:12] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[15:12:27] *** Joins: toastloop (~toastloop@user/toastloop)
[15:12:28] *** Quits: toastloop (~toastloop@user/toastloop) (Excess Flood)
[15:12:44] *** Joins: toastloop (~toastloop@user/toastloop)
[15:13:07] *** Quits: r-g (~r-g@163.172.58.132) (Read error: Connection reset by peer)
[15:17:14] *** Quits: toastloop (~toastloop@user/toastloop) (Remote host closed the connection)
[15:21:15] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[15:25:58] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 250 seconds)
[15:29:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[15:30:07] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[15:30:39] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[15:35:32] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[15:36:52] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[15:38:41] *** Quits: sebbu (~sebbu@user/sebbu) (Quit: reboot)
[15:43:40] *** Joins: walterwhip (~www@user/walterwhip)
[15:44:20] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600159947f198d35ec6.ipv6.abo.wanadoo.fr)
[15:47:51] *** Joins: Burgundy (~yomon@82.76.72.88)
[15:48:16] *** Joins: anandn (~anandn@2601:600:a27f:d92d:5c1d:96aa:95f6:7252)
[15:52:47] *** Quits: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr) (Remote host closed the connection)
[15:54:02] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[15:55:00] *** Joins: irrenhaus3 (~xenon@HSI-KBW-046-005-002-040.hsi8.kabel-badenwuerttemberg.de)
[15:58:39] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:00:44] *** Joins: PureSine (~PureSine@user/PureSine)
[16:01:30] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[16:02:24] *** Joins: clime (~clime@37-48-61-114.nat.epc.tmcz.cz)
[16:03:03] *** Joins: stonkey (~stonkey@user/stonkey)
[16:03:40] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[16:09:58] *** Joins: ethrl (~ethereal@user/doforlove33)
[16:11:55] *** Joins: george91 (~george91@103.137.204.24)
[16:13:11] *** Joins: george91_ (~george91@103.137.204.24)
[16:13:17] *** Quits: george91 (~george91@103.137.204.24) (Read error: Connection reset by peer)
[16:13:25] *** Joins: george91 (~george91@103.137.204.24)
[16:13:52] *** Joins: sebbu (~sebbu@user/sebbu)
[16:14:45] *** Parts: george91 (~george91@103.137.204.24) ()
[16:16:14] *** Quits: xiongxin (~Thunderbi@119.123.101.197) (Ping timeout: 250 seconds)
[16:16:27] *** Joins: plastico (~plastico@neomutt/plastico)
[16:17:02] *** Joins: xiongxin (~Thunderbi@2409:8954:3858:145a:fe2b:4502:d1c8:1231)
[16:17:32] *** Quits: george91_ (~george91@103.137.204.24) (Ping timeout: 240 seconds)
[16:18:27] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:18:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:20:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[16:20:43] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:22:42] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[16:25:05] *** Joins: markong (~kvirc@213.146.188.203)
[16:26:12] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[16:26:30] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[16:29:32] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:32:48] <AliceMeows> { apply(make_format_args, array{1, 2, 3}) }
[16:32:48] <geordi> error: 'make_format_args' was not declared in this scope
[16:32:53] <AliceMeows> Err
[16:37:27] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:38:04] *** Quits: PureSine (~PureSine@user/PureSine) (Quit: Leaving)
[16:38:55] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:40:28] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[16:42:23] *** Joins: PureSine (~PureSine@user/PureSine)
[16:43:32] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:44:55] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7) (Remote host closed the connection)
[16:45:21] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7)
[16:45:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:46:08] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:55:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7) (Remote host closed the connection)
[16:55:19] *** Joins: N4buc0 (~N4buc0@191.250.99.50)
[16:56:25] *** Joins: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr)
[17:03:30] *** Joins: xiongxin1 (~Thunderbi@119.123.101.197)
[17:03:56] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[17:04:46] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 250 seconds)
[17:04:57] *** Quits: xiongxin (~Thunderbi@2409:8954:3858:145a:fe2b:4502:d1c8:1231) (Ping timeout: 240 seconds)
[17:04:57] *** xiongxin1 is now known as xiongxin
[17:10:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:11:54] *** Joins: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29)
[17:14:47] *** Joins: pindumb (~pindumb@dslc-082-082-235-209.pools.arcor-ip.net)
[17:19:10] *** Quits: anandn (~anandn@2601:600:a27f:d92d:5c1d:96aa:95f6:7252) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:31:23] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[17:33:29] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[17:36:33] *** Joins: Pook (~Pook@2001:8a0:f996:1400:a51c:8049:bb7b:9dba)
[17:41:01] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:09] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:09] *** ChanServ sets mode: +v npaperbot
[17:43:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:43:17] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:47:02] *** Quits: costanza (~i.am@user/heineken) (Quit: I come down here for a fat woman and that's what I'm havin.)
[17:49:50] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[17:56:24] *** Quits: pindumb (~pindumb@dslc-082-082-235-209.pools.arcor-ip.net) (Quit: Nettalk6 - www.ntalk.de)
[18:01:27] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[18:06:55] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[18:10:12] *** Joins: pulse (~pulse@user/pulse)
[18:14:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527)
[18:16:36] *** Joins: jb-temp (~hehe@125.99.176.75)
[18:22:43] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:23:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:27:39] <jb-temp> Hi i have a question, value of const variable cannot be changed , right?
[18:30:31] <Eelis> why not ask your real question instead of trying to go step by step
[18:31:11] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[18:31:44] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:40:49] <jb-temp> but in a class we can change const variable value, why what constant should be constant ??
[18:42:36] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:44:26] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[18:45:28] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[18:45:32] *** Quits: cosimone (~user@93-44-186-112.ip98.fastwebnet.it) (Remote host closed the connection)
[18:45:56] *** Quits: roadt (~roadt@114.97.240.218) (Read error: Connection reset by peer)
[18:46:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:48:25] <Eelis> jb-temp: const is a matter of perspective. an object that is const from one perspective need not be const from another perspective
[18:49:33] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[18:52:40] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[18:59:48] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:00:30] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[19:00:43] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[19:04:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c0da:ab94:f145:24f4)
[19:04:01] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c0da:ab94:f145:24f4) (Changing host)
[19:04:01] *** Joins: skapata (~Skapata@user/skapata)
[19:06:27] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:3eb4:914f:5060:553a)
[19:06:28] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:3eb4:914f:5060:553a) (Changing host)
[19:06:28] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:08:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:12:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:15:30] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[19:15:55] *** Joins: orthoplex64 (~crm@70.120.0.94)
[19:17:30] *** Joins: chris64 (~chris@user/chris64)
[19:20:27] *** Joins: oknenavin (~nomo@95.87.208.95)
[19:21:00] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[19:22:12] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[19:22:38] <jb-temp> Eelis: please explain. i mean a constant variable was decalred, no body in main could change it. But a constructor with memberinitialization methos was able to change it. More on it , Like Why
[19:25:16] <ville> jb-temp: constructors run regardless* of whether the variable will end up being const. as in: int main() { aa const x{-1}; } the constructor of aa will run
[19:26:30] <ville> jb-temp: in the context of the constructor there is no "knowledge" whether the constructor was invoked for a variable which was marked const or not
[19:28:30] <Alipha> jb-temp: const means the variable's value cannot be changed after it's initialized. Even in a class, once you create the variable, you cannot change it
[19:29:05] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:29:30] *** Joins: xkuru (~xkuru@user/xkuru)
[19:35:13] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[19:36:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea) (Ping timeout: 240 seconds)
[19:37:00] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Client Quit)
[19:41:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[19:41:49] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[19:43:33] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[19:43:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:44:14] *** sven_ is now known as noent
[19:44:56] *** Joins: Betal (~Betal@user/betal)
[19:45:41] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[19:49:04] *** Joins: Sampuka (~Mathias@5.186.126.2.cgn.fibianet.dk)
[19:51:29] <jb-temp> Eelis: ville: Alipha: https://ezup.dev/p/8jfqbi heres the pastebin code , But the value changes and code runs fine no error. thats why im confused why
[19:52:24] <Eelis> !rule 50
[19:52:25] <nolyc> Many people here do not consider anything longer than 50 lines a testcase and will refuse to analyze it.
[19:53:53] <ville> jb-temp: let's put it this way. const is context-specific. during the construction of an object the object is not considered const
[19:54:40] <ville> (yea yea the object doesn't exist before one constructor finishes, but that detail is besides the point)
[19:55:25] <jb-temp> Eelis: not fair :(
[19:55:33] *** Joins: ipe (~ipe@dy6mtbblkhhxynjjspqyy-4.rev.dnainternet.fi)
[19:56:47] <jb-temp> ville: ohh, so apparently this means i can change value of const many times (during construction of new objects..) ?
[19:57:20] <ville> jb-temp: it's fair. it's your job to make testcases as succinct as possible
[19:58:07] <ville> jb-temp: if the memory the object will reside in was considered const during ctor, how could a ctor store any value there?
[19:58:38] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:59:23] <Eelis> jb-temp: it would have been unfair if i said 5 lines. 50 is extremely luxurious
[19:59:58] <jb-temp> ok, agreed Eelis Vill 50 good :)
[20:00:30] <ville> jb-temp: 50 is not what you should aim at, you should aim lower. it's just a number that's considered very long
[20:00:41] <jb-temp> ok
[20:01:16] <jb-temp> which znc bouncer you guys use ?
[20:01:26] <Eelis> offtopic
[20:01:31] <jb-temp> sorry
[20:01:33] <jb-temp> lol
[20:01:35] <jb-temp> my bad
[20:02:39] <pa> how to obtain an iterator to the last element of a std::list without having to start from the front?
[20:02:52] <Eelis> pa: .rbegin().base() or something along those lines
[20:02:59] <pa> ah thanks
[20:03:01] <Eelis> or .rend()
[20:03:03] <Oxyd> std::prev(.end())
[20:03:17] <Eelis> ah yeah, rend is no good
[20:03:19] <Oxyd> Or just grab .end() and then -- it.
[20:04:10] <pa> yea i was wondering how to turn rend into a forward iterator
[20:04:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:88f8:5844:198f:e3c2) (Ping timeout: 240 seconds)
[20:04:27] <Eelis> rend refers to the beginning, so that's no good
[20:04:40] <Oxyd> .rbegin().base() is going to be .end().
[20:04:44] <pa> ops sorry rbegin
[20:05:04] <pa> anyway -- or std::prev will do, thanks!
[20:05:11] <Eelis> rbegin is only useful if you intend to iterate in reverse
[20:08:07] *** Joins: cosimone` (~user@93-44-186-112.ip98.fastwebnet.it)
[20:09:27] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:09:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[20:10:36] *** Joins: seninha (~seninha@user/seninha)
[20:11:37] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e558:997e:112:92fe:0:7ca)
[20:13:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:14:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8cc6:12ce:bf8a:e847)
[20:15:51] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:15:52] *** Joins: Kerr (~Kerr@2601:602:ce01:1f0:aaf6:d7cf:bef:465d)
[20:20:49] *** Joins: NEYi (~NEYi@109.251.216.38)
[20:21:21] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[20:21:51] <pa> what does std::hash<size_t>()(someSizeTVar) do? returns its argument unchanged?
[20:26:01] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[20:26:33] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:26:42] *** Quits: jsbach (~jsbach@2a01:c22:b026:9600:b0d4:cea7:b488:c972) (Ping timeout: 250 seconds)
[20:26:51] *** Joins: cpuid (~cpuid@co5.at)
[20:26:52] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[20:26:52] *** Joins: cpuid (~cpuid@user/cpuid)
[20:28:12] *** Joins: pulse (~pulse@user/pulse)
[20:28:48] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[20:28:50] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[20:29:01] <Alipha> pa: it's actually implementation defined, but I'm not sure why an implementation would choose to do anything other than simply returning its argument unchanged
[20:29:15] <pa> roger, thanks!
[20:29:16] *** Quits: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[20:29:17] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[20:29:39] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e558:997e:112:92fe:0:7ca) (Quit: WeeChat 3.4)
[20:30:50] *** Quits: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[20:31:07] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[20:35:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:41:29] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[20:43:52] *** Joins: r-g (~r-g@163.172.58.132)
[20:45:20] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:46:29] *** Joins: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi)
[20:47:03] *** Joins: jsbach (~jsbach@2a01:c22:b026:9600:5a8b:db2:acf8:aa0f)
[20:49:42] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:50:49] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[20:52:38] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[20:58:34] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:02:25] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: Lost terminal)
[21:04:23] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:05:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:07:26] *** Quits: xiongxin (~Thunderbi@119.123.101.197) (Ping timeout: 250 seconds)
[21:07:35] *** Joins: xiongxin1 (~Thunderbi@2409:8954:3858:1eec:fe7a:ba16:cd66:348f)
[21:08:02] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 240 seconds)
[21:09:53] *** xiongxin1 is now known as xiongxin
[21:12:09] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[21:13:57] *** Joins: kit-ten (~u0_a391@2600:380:a42e:3294:8615:c04b:deb7:62aa)
[21:15:31] *** Quits: letto (~letto@86.120.81.105) (Quit: Konversation terminated!)
[21:16:13] *** Joins: letto (~letto@86.120.81.105)
[21:17:02] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[21:17:50] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[21:22:35] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:24:49] *** Quits: jb-temp (~hehe@125.99.176.75) (Quit: leaving)
[21:25:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[21:28:43] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:29:29] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[21:32:47] <AliceMeows> https://godbolt.org/z/4jPoGP9Kr what am I doing wrong here?
[21:33:50] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e8a0:e296:b425:f7ea)
[21:33:52] <Eelis> f<int,int,int> is a thing that takes 3 parameters. you only pass 1
[21:34:09] <Eelis> oh wait, it's apply. apply doesn't know about arrays
[21:35:01] <AliceMeows> Yet apply(<f<int, int, int>, array{1, 2, 3}); compiles fine
[21:35:20] <AliceMeows> If you replace f<int, int, int> with a lambda it works in either case
[21:35:45] <Eelis> https://en.cppreference.com/w/cpp/utility/apply says t must be a tuple
[21:35:46] *** Joins: Atque (~Atque@user/atque)
[21:36:02] <Eelis> ah the Notes say array is sufficiently tuple-like
[21:36:36] <kalven> f<int&,int&,int&> also makes it work, for some reason
[21:37:03] <AliceMeows> How strange
[21:37:33] <Eelis> makes sense, f<int,int,int> is a thing that takes rvalue refs. there's no reaosn why that would work for array
[21:38:04] <Eelis> because the array isn't an rvalue
[21:39:30] <AliceMeows> How is passing arr any different to passing array{1, 2, 3}?
[21:39:33] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:39:39] <Eelis> the former is an lvalue, the latter is an rvalue
[21:40:14] <Eelis> lvalue/rvalue-ness is called "value category" and dictates reference binding
[21:40:20] <AliceMeows> Makes sense
[21:40:32] <Eelis> http://eel.is/c++draft/basic.lval#def:value_category
[21:41:01] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:09] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:09] *** ChanServ sets mode: +v npaperbot
[21:46:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:49:06] *** Quits: lais (~lais@110.red-88-21-181.staticip.rima-tde.net) (Quit: Leaving)
[21:50:34] *** Quits: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net) (Ping timeout: 260 seconds)
[21:51:39] *** Joins: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net)
[21:51:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:57:16] *** Joins: seninha (~seninha@user/seninha)
[21:58:08] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[22:01:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:01:50] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[22:03:46] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:03:58] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:03:59] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[22:04:02] *** Joins: ferdna (~ferdna@user/ferdna)
[22:04:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:04:44] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:05:14] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:07:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:18:58] *** Quits: PureSine (~PureSine@user/PureSine) (Read error: Connection reset by peer)
[22:19:21] *** Joins: PureSine (~PureSine@user/PureSine)
[22:31:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[22:32:24] *** Joins: programmer (~programme@2a01:5ec0:b801:54b5:43ba:6670:c404:e129)
[22:37:01] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:41:04] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:41:54] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:42:20] *** Quits: programmer (~programme@2a01:5ec0:b801:54b5:43ba:6670:c404:e129) (Quit: Leaving)
[22:43:02] *** Quits: ethrl (~ethereal@user/doforlove33) (Ping timeout: 240 seconds)
[22:44:09] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[22:44:46] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:45:32] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:45:59] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:46:40] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:47:02] *** Quits: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:47:33] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:49:32] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:51:02] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:51:14] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[22:51:37] *** Quits: kit-ten (~u0_a391@2600:380:a42e:3294:8615:c04b:deb7:62aa) (Ping timeout: 240 seconds)
[22:52:44] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[22:53:44] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[22:54:21] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[22:54:31] *** Quits: Sampuka (~Mathias@5.186.126.2.cgn.fibianet.dk) (Read error: Connection reset by peer)
[22:54:49] *** Joins: Sampuka (~Sampuka@5.186.126.2.cgn.fibianet.dk)
[22:57:32] *** Quits: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:58:48] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[22:59:08] *** Joins: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[23:00:40] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-105.dsl.bell.ca)
[23:01:24] *** Joins: george91 (~george91@103.137.204.24)
[23:02:17] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[23:11:58] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[23:13:48] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e558:997e:112:92fe:0:7ca)
[23:19:51] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:20:23] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[23:22:25] *** Joins: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[23:23:14] *** Joins: pulse (~pulse@user/pulse)
[23:23:39] *** Quits: CinnamonFlavored (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[23:25:40] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[23:29:17] *** Joins: Imk0tter (~Imk0tter@172.58.228.46)
[23:30:01] *** Joins: vicfred (~vicfred@user/vicfred)
[23:36:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:37:42] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[23:38:28] *** Quits: PureSine (~PureSine@user/PureSine) (Read error: Connection reset by peer)
[23:39:18] *** Joins: PureSine (~PureSine@user/PureSine)
[23:44:24] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:45:34] *** Joins: chris64 (~chris@user/chris64)
[23:48:34] *** Joins: h4k1m0u (~h4k1m0u@2001:861:3146:5890:e8cb:68ce:7100:5c3f)
[23:49:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:55:49] *** Quits: ipe (~ipe@dy6mtbblkhhxynjjspqyy-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[23:57:28] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
