[00:30:42] <FromDiscord> <Ale_S> xnim
[00:39:39] *** Gustavo6046 is now known as Several
[00:39:44] *** Several is now known as Gustavo6046
[00:50:09] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[00:53:49] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 250 seconds)
[00:53:55] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 268 seconds)
[00:54:32] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:54:45] *** Joins: euantorano_ (sid180289@helmsley.irccloud.com)
[00:54:46] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 260 seconds)
[00:54:56] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[00:54:56] *** euantorano_ is now known as euantorano
[00:55:37] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[00:58:50] *** Joins: robertmeta (sid514@user/robertmeta)
[00:59:42] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[00:59:58] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[01:07:42] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[01:20:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:32:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[01:41:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:05:06] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[02:14:59] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[02:16:59] *** Joins: pch (~pch@66.49.131.33)
[02:17:34] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[02:28:41] *** Quits: max22- (~maxime@2a01cb088335980045db91cc5b38a3ac.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:52:46] *** Joins: pch (~pch@66.49.131.33)
[03:17:24] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 245 seconds)
[03:40:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:00:27] *** Quits: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:05:11] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:09:43] *** Joins: vicfred (~vicfred@user/vicfred)
[04:18:19] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:55:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[04:57:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:35:07] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[05:41:02] *** Joins: rockcavera (~rc@192.12.112.224)
[05:41:02] *** Quits: rockcavera (~rc@192.12.112.224) (Changing host)
[05:41:02] *** Joins: rockcavera (~rc@user/rockcavera)
[06:42:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:57:34] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[07:24:41] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:33:06] <NimEventer> New thread by Geekrelief: Suggestion on wrapping C union with anonymous struct?, see https://forum.nim-lang.org/t/8486
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:03] <FromDiscord> <gogolxdong (liuxiaodong)> https://github.com/hypercore-protocol/hypercore
[07:36:04] <nrds> <12R2D299> 4GitHub: 7"Hypercore is a secure, distributed append-only log."
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:56:41] *** Joins: xet7 (~xet7@user/xet7)
[07:58:16] <FromDiscord> <Rika> In reply to @gogolxdong (liuxiaodong) "https://github.com/hypercore-protocol/hypercore": ?
[08:39:02] <FromDiscord> <gogolxdong (liuxiaodong)> https://github.com/beakerbrowser/beaker
[08:39:03] <nrds> <12R2D299> 4GitHub: 7"An experimental peer-to-peer Web browser"
[08:39:21] <FromDiscord> <gogolxdong (liuxiaodong)> We need these!
[08:39:23] <FromDiscord> <Rika> ??
[08:39:24] <FromDiscord> <Rika> Oh
[08:39:45] <FromDiscord> <Rika> Well first we need a robust distributed framework library
[08:40:03] <FromDiscord> <Rika> Or components of such like message passing and coordination
[09:40:23] <FromDiscord> <NullCode> wtf LMFAO
[09:40:25] <FromDiscord> <NullCode>  https://media.discordapp.net/attachments/371759389889003532/895916019145642024/unknown.png
[09:40:41] <nrds> <06Prestige99> Lol
[09:40:42] <nrds> <06Prestige99> context?
[09:40:59] <FromDiscord> <NullCode> "windows declared but not used"↵"undeclared identifier: windows"
[09:41:10] <FromDiscord> <NullCode> In reply to @nrds "<Prestige> context?": context: im trying to get nim working on linux
[09:41:17] <FromDiscord> <NullCode> (edit) "In reply to @nrds "<Prestige> context?": context: im trying to get ... nimtool" 03added "a" | "anim ... working" 03added "tool"
[09:41:23] <FromDiscord> <impbox [ftsf]> they may be in different scopes
[09:41:25] <nrds> <06Prestige99> Can you show the code?
[09:42:39] <FromDiscord> <NullCode> sent a code paste, see https://play.nim-lang.org/#ix=3Baw
[09:42:53] <FromDiscord> <NullCode> heres the jist of thigns
[09:42:56] <nrds> <06Prestige99> ah yes
[09:42:57] <FromDiscord> <NullCode> (edit) "thigns" => "things"
[09:43:09] <FromDiscord> <impbox [ftsf]> `when defined(windows):`
[09:43:16] <FromDiscord> <impbox [ftsf]> doesn't create a new scope
[09:43:20] <FromDiscord> <impbox [ftsf]> if creates a new scope
[09:43:37] <FromDiscord> <impbox [ftsf]> if you use `let` inside an if block it only exists within that block
[09:43:47] <FromDiscord> <NullCode> oh on
[09:43:53] <FromDiscord> <NullCode> (edit) "on" => "no"
[09:44:03] <FromDiscord> <NullCode> man i feel stupid
[09:44:05] <FromDiscord> <impbox [ftsf]> `when defined(windows):`↵is the correct way to do different stuff depending on OS
[09:47:32] <FromDiscord> <NullCode> thank
[09:52:10] <FromDiscord> <NullCode> `
[09:52:32] <FromDiscord> <NullCode> i dont understand this
[09:52:33] <FromDiscord> <NullCode> (edit) "`" => "sent a code paste, see https://play.nim-lang.org/#ix=3Bax"
[09:52:43] <FromDiscord> <NullCode> whats a dso
[09:55:01] <FromDiscord> <Rika> The pthread dynamic shared object is missing
[09:55:08] <FromDiscord> <Rika> Do you use threading
[09:55:17] <FromDiscord> <NullCode> nope
[09:56:01] <FromDiscord> <impbox [ftsf]> compile with `--threads:on` ?
[09:56:25] <FromDiscord> <impbox [ftsf]> miniaudio whatever it is probably uses threads
[09:57:04] <FromDiscord> <NullCode> why didnt i need that on windows?
[09:57:26] <FromDiscord> <NullCode> on win i just did `nim c file.nim` for test builds
[09:57:40] <FromDiscord> <impbox [ftsf]> pthreads is a linux thing
[09:57:59] <FromDiscord> <impbox [ftsf]> (may not be entirely true)
[09:58:07] <FromDiscord> <impbox [ftsf]> pretty sure you can use pthreads on other things
[09:58:31] <FromDiscord> <NullCode> In reply to @impbox "pthreads is a linux": oh
[10:22:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:24:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:53:52] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:05:51] <FromDiscord> <Schelz> What's in nim (try:... except:...) ?
[11:05:59] <PMunch> try: catch:
[11:06:13] <FromDiscord> <Schelz> thx
[11:06:18] <PMunch> And finally:
[11:06:35] <FromDiscord> <Elegantbeef> Are you ok pmunch? https://nim-lang.org/docs/manual.html#exception-handling-except-clauses
[11:07:05] <PMunch> Wait.. shit
[11:07:29] <PMunch> I assumed it wasn't except since he asked
[11:07:54] <PMunch> But I guess now that his question might've been "what does try: except: mean in Nim", to which my answer still applies :P
[11:22:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[11:24:46] <FromDiscord> <Rika> Lol
[11:37:20] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:46:06] <nrds> <06Prestige99> Is there a way to alias a package name? E.g. I have `chipmunk7` but I want to `import chipmunk`
[11:46:37] <FromDiscord> <impbox [ftsf]> import chipmunk7 as chipmunk
[11:47:06] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/manual.html#modules-module-names-in-imports
[11:47:24] <nrds> <06Prestige99> Sorry I meant globally
[11:47:36] <FromDiscord> <impbox [ftsf]> what do you mean by globally?
[11:47:55] <FromDiscord> <impbox [ftsf]> import is as global as it gets
[11:47:55] <nrds> <06Prestige99> like I could just `import chipmunk` instead of `import x as y`
[11:48:08] <nrds> <06Prestige99> maybe I'll just symlink in my nimble cache
[11:48:09] <FromDiscord> <impbox [ftsf]> rename chipmunk7 to chipmunk?
[11:48:19] <FromDiscord> <impbox [ftsf]> but that'll be problematic for other users
[11:48:44] <nrds> <06Prestige99> basically - I had to change change chipmunk to chipmunk7 because of nimble having chipmunk as an alias to chipmunk6
[11:48:54] <nrds> <06Prestige99> https://github.com/nim-lang/packages/pull/2018
[11:49:08] <nrds> <06Prestige99> but locally I don't want to deal with the 7
[11:49:18] <FromDiscord> <impbox [ftsf]> why not?
[11:49:29] <FromDiscord> <impbox [ftsf]> chipmunk7 is the name of the package
[11:49:58] <nrds> <06Prestige99> Idk maybe I'm weird - I want chipmunk to be the most recent chipmunk version, instead of chipmunk version 6
[11:50:22] <FromDiscord> <impbox [ftsf]> you can have a `common.nim` which does `import chipmunk7 as chipmunk; export chipmunk` then `import common.nim`
[11:50:38] <nrds> <06Prestige99> Hm that's better, thanks
[11:50:39] <FromDiscord> <impbox [ftsf]> or call it chipmunk.nim if you like
[11:51:48] <nrds> <06Prestige99> Isn't there a way to sort of inject an import in all files with config.nims? 
[11:52:12] <nrds> <06Prestige99> ah yes, switch("import", "./foo")
[12:01:18] <PMunch> Hmm, I have a bit of a conundrum
[12:01:52] <PMunch> I have a DLL that sends me requests, so my code generally only runs when it gets called
[12:02:12] <PMunch> But I want to handle the requests as fast as possible, so I keep a cache of some web resources
[12:02:21] <PMunch> But I also need to refresh this cache
[12:03:08] <FromDiscord> <impbox [ftsf]> what's the invalidation criteria?
[12:03:30] <PMunch> They are invalidated by a 404 from the server
[12:03:50] <FromDiscord> <Rika> You need a different criteria
[12:03:58] <PMunch> But I re-check them in a round-robin fashion so that I check every entry every 24 hours
[12:04:07] <FromDiscord> <impbox [ftsf]> so you get a request to tell your it's invalid?
[12:04:39] <PMunch> Let's say I have 24 entries in my cache, that means I check one entry every hour. If I get a 404 back I invalidate it from the cache
[12:04:58] <FromDiscord> <Rika> Refresh after serving the last request
[12:05:11] <PMunch> The last request?
[12:05:18] <FromDiscord> <Rika> So on a request you serve then check if you need to refresh
[12:05:36] <PMunch> Hmm, that would be a lot of refreshes
[12:05:52] <FromDiscord> <impbox [ftsf]> well not if you have 24, but if it's 240000 maybe
[12:05:57] <FromDiscord> <Rika> The data may be staler than if you had a long running process but i don’t know a better way
[12:06:09] <FromDiscord> <impbox [ftsf]> cache invalidation is hard
[12:06:15] <PMunch> I might have 24 entries in my cache, but I get about 500k requests a day IIRC
[12:06:22] <FromDiscord> <Rika> In reply to @PMunch "Hmm, that would be": I mean put the “refresh cache” after serving a request
[12:06:49] <PMunch> That would mean that instead of refreshing 24 hours a day I now refresh 500k times a day..
[12:06:57] <PMunch> 24 times a day *
[12:06:57] <FromDiscord> <Rika> No
[12:07:07] <FromDiscord> <Rika> You have to check if it’s after 24 hours still of course
[12:07:42] <FromDiscord> <Rika> So: ↵Serve↵Check if invalidated↵If so, refresh
[12:07:42] <PMunch> Ah right
[12:07:51] <FromDiscord> <impbox [ftsf]> how often do these things become invalid?
[12:07:59] <PMunch> Very infrequently
[12:08:00] <FromDiscord> <impbox [ftsf]> if ever?
[12:08:00] <FromDiscord> <Rika> He did just say 24 hours
[12:08:09] <PMunch> Hence why 24 hours is chosen
[12:08:35] <FromDiscord> <impbox [ftsf]> how bad is it if someone gets a stale entry?
[12:08:40] <FromDiscord> <Rika> What is priority, fresh data or latency?
[12:08:47] <PMunch> latency for sure
[12:09:07] <FromDiscord> <Rika> Then yeah the refresh after serve should be good
[12:09:37] <FromDiscord> <impbox [ftsf]> oh the source data can change?
[12:09:40] <PMunch> The entries are keys which only get invalidated manually. So it's more a question about how much time after deactivation is it acceptable that they can still connect
[12:17:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:20:06] <PMunch> In a perfect world I would have a cache that I could share between the two threads
[12:20:37] <PMunch> The thread needing the entries just getting them, and the updating thread just adding them
[12:53:01] <FromDiscord> <Clonkk> Is there a way to use importcpp on C++ constexpr variable ?
[14:22:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[14:27:41] <FromDiscord> <tandy> juancarlos says cstring does work on js↵(<@709044657232936960_krux02=5b=49=52=43=5d>)
[14:28:38] <PMunch> Hmm, I have a macro in Futhark. I want to get the version of the Futhark library it comes from. How can I do that?
[14:29:54] <FromDiscord> <haxscramper> Is it a nim macro or C macro?
[14:29:59] <PMunch> Nim macro
[14:31:04] <FromDiscord> <tandy> apparently you just need to check if the cstring is nil first
[14:32:48] <FromDiscord> <haxscramper> I'm not sure what do you mean by "version of the library macro comes from".
[14:32:49] <FromDiscord> <haxscramper> You can add some defines so macro knows a version
[14:32:49] <FromDiscord> <haxscramper> but there is no built-in way to do this
[14:33:29] <PMunch> Ah okay, thanks
[14:39:45] <PMunch> Hm, can't I import things into a Nimble file?
[14:40:02] <FromDiscord> <haxscramper> you can, but you need a hack with realtive paths
[14:40:07] <PMunch> I tried to create a file with `const VERSION* = "0.3.0"`
[14:40:14] <PMunch> Aha, which hack?
[14:41:13] <FromDiscord> <haxscramper> `when exists("src"): import src/XXX else: import XXX`
[14:41:59] <PMunch> Hmm, still doesn't work
[14:42:47] <PMunch> http://ix.io/3BbA/
[14:42:52] <PMunch> Got a different error though
[14:43:33] <PMunch> Before it complained that `Error: expression 'version' has no type (or is ambiguous)`
[14:46:23] <FromDiscord> <haxscramper> image.png https://media.discordapp.net/attachments/371759389889003532/895993019243827240/image.png
[14:46:35] <FromDiscord> <haxscramper> i'm sorry, but this is unreadable
[14:46:46] <PMunch> Just remove the last / from the url
[14:49:23] <FromDiscord> <haxscramper> `import std/os`, `existsDir` then
[14:49:37] <FromDiscord> <haxscramper> I forgot that https://nim-lang.org/docs/nimscript.html#exists%2Cstring exists in nimscript is a completely different thing
[14:49:52] <PMunch> Aha :P
[14:49:59] <PMunch> I was wondering about that
[14:51:36] <PMunch> Error: expression 'version' has no type (or is ambiguous)
[14:51:37] <PMunch> Hmm
[14:52:01] <FromDiscord> <tandy> ok i think i did it a bit better now but, when i run my md5.js in the browser it says `charCodeAt` is not a function?
[14:52:16] <FromDiscord> <tandy> https://github.com/nim-lang/Nim/issues/14157
[14:52:17] <FromDiscord> <tandy> is it this bug?
[14:52:41] <FromDiscord> <tandy> https://github.com/tandy-1000/Nim/commit/6b9fe865053e3705c20181c54ce21967c6efa71f
[14:52:44] <FromDiscord> <tandy> my code
[14:53:49] <FromDiscord> <haxscramper> You have `VERSION` screamcase const↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[14:54:04] <FromDiscord> <haxscramper> and `version` is a module
[14:54:29] <PMunch> Ah shit
[14:54:33] <PMunch> Of course
[14:54:37] <FromDiscord> <haxscramper> Though I would suggest you use `futhartMajorVer = 0`, `futharkMinorVer = 3` etc
[14:54:50] <FromDiscord> <haxscramper> So users can actually use this without having to parse and re-parse
[14:55:12] <PMunch> There we go
[14:57:42] <PMunch> Hmm, still a bit broken
[14:58:00] <PMunch> It seems to have cached the old file somehow
[14:59:12] <PMunch> As you can see it says "Installing futhark@0.3.0" even though the versionFile is updated
[14:59:14] <PMunch> http://ix.io/3BbI
[14:59:27] <FromDiscord> <tandy> strange thing is, im not modifying a cstring, but i am modifying an aray...
[15:02:13] <FromDiscord> <haxscramper> because nimble uses git tabs↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[15:02:16] <FromDiscord> <haxscramper> tags\
[15:02:54] <FromDiscord> <haxscramper> also, please, please, is it that hard to update version manually?
[15:03:07] <FromDiscord> <haxscramper> You just went from manifest that can be statically parsed
[15:03:14] <FromDiscord> <haxscramper> to a one that requires whole compiler to read
[15:03:29] <FromDiscord> <haxscramper> because you need to resolve imports, read external files, resolve constants and so on
[15:03:32] <PMunch> I just don't want to forget to update it
[15:03:48] <PMunch> And if you're trying to statically read nimble files you're doing it wrong anyways..
[15:03:56] <PMunch> They are supposed to be read as NimScript
[15:04:10] <FromDiscord> <haxscramper> no, I'm not doing it wrong
[15:04:11] <FromDiscord> <haxscramper> "wrong" t
[15:04:21] <FromDiscord> <FastnFree> You think nim will someday be a major player for game dev like lua or other languages are?
[15:04:31] <FromDiscord> <haxscramper> almost all metadata in nimble manifest can be statically evaluated
[15:05:24] <FromDiscord> <haxscramper> Well, to be precise \~99.2%+ of all metadata fields in the ecosystem
[15:05:59] <FromDiscord> <haxscramper> https://github.com/nim-lang/RFCs/issues/398#issuecomment-874681058
[15:06:18] <PMunch> It can be, but it shouldn't
[15:06:29] <FromDiscord> <haxscramper> why it shouldn't be?
[15:06:43] <PMunch> Same reason I'm using libclang to read C files, because reading C files statically is wrong
[15:07:00] <FromDiscord> <haxscramper> Is it that bad to expect my tooling to not reach for the whole compiler infrastructure when reading data that is almost univers
[15:07:04] <FromDiscord> <haxscramper> haha funny↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[15:07:16] <FromDiscord> <haxscramper> C is not the same as .`nimble`, and we both know it
[15:07:27] <FromDiscord> <haxscramper> so this comparison makes absolutely no sense
[15:07:33] <PMunch> Well, it's not far from it
[15:07:38] <PMunch> .nimble files are NimScript
[15:07:45] <PMunch> And should be treated as NimScript
[15:07:47] <FromDiscord> <haxscramper> I'm trying to read strictly defined set of `key = value` assignments
[15:07:59] <FromDiscord> <haxscramper> vs parsing whole langauge with 50 years of hacks and API misuses
[15:08:01] <FromDiscord> <haxscramper> yeah, pretty close
[15:08:22] <PMunch> Throw on the Nimble header and a footer that exports all the fields to JSON or something and pass it through `nim e` if you want to read the data out
[15:08:26] <NimEventer> New thread by Jorjun_arch: Block-chain binary certification, see https://forum.nim-lang.org/t/8487
[15:08:33] <FromDiscord> <FastnFree> Does zetashift still come here?
[15:08:33] <PMunch> But don't try to read them without using the compiler
[15:09:02] <PMunch> .nimble files are probably touring complete, don't treat them like text
[15:09:13] <FromDiscord> <haxscramper> Number of nimble files that cannot be statically evaluated is within a margin of error
[15:09:32] <FromDiscord> <haxscramper> there are at most tens of them, and overwhelming majority of those use version hack
[15:10:16] <FromDiscord> <haxscramper> Like yeah, they might not be supposed to be read statically fully, but I'm not talking about doing it fully
[15:10:20] <PMunch> Still, they aren't text files, and shouldn't be read as text files
[15:10:26] <FromDiscord> <haxscramper> I'm talking about begin able to read `version = "string"`
[15:10:36] <FromDiscord> <haxscramper> that's all I'm talking about
[15:10:54] <PMunch> Sure if you want to read a format that looks like a Nim file but isn't really a Nim file, knock yourself out
[15:10:57] <FromDiscord> <haxscramper> `version = "string"` and some strictly defined set of metadata fields
[15:11:14] <PMunch> But if you want to read Nimble files then read Nimble files and not your own imagined text format
[15:11:48] <FromDiscord> <haxscramper> This is not "my own imagined text format", that's how everyone writes their nimble files
[15:11:54] <FromDiscord> <haxscramper> I'm not imagining anything
[15:12:04] <PMunch> It's like reading ASCII only because "most text doesn't need UTF-8"
[15:12:09] <PMunch> It's just a flawed logic
[15:13:04] <FromDiscord> <haxscramper> I'm saying that it is not that controversial to expect my tooling to be able to statically read metadata that needs to be static in the first place
[15:13:13] <PMunch> Hmm @FastnFree, haven't seen them in a while
[15:13:15] <FromDiscord> <haxscramper> Without jumping into whole code evaluation
[15:13:22] <FromDiscord> <haxscramper> there was a package whose version depended on a time of the day
[15:13:27] <FromDiscord> <haxscramper> or some other random crap
[15:13:53] <FromDiscord> <tandy> is there any reason not to do this?↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[15:14:00] <PMunch> I have written nimble files in the past that grabbed the version from Git tags
[15:14:04] <FromDiscord> <haxscramper> And I don't understand how this can be extended to "it is the same as using libclang for C" or "same as using ASCII instead of UTF8"
[15:14:19] <PMunch> @tandy, sorry on IRC I can't see what you replied to
[15:14:42] <FromDiscord> <tandy> > ↵> Throw on the Nimble header and a footer that exports all the fields to JSON or something and pass it through nim e if you want to read the data out↵>
[15:14:50] <PMunch> Because you're trying to read a complex thing assuming it's a simple thing
[15:15:01] <FromDiscord> <haxscramper> Is there any reason to prefer static subset of turing-complete language for your configuration?
[15:15:10] <FromDiscord> <haxscramper> well, I don't know
[15:15:13] <PMunch> @tandy, ah, no there isn't really a reason not to do that
[15:15:29] <FromDiscord> <haxscramper> It is not a complex thing↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[15:15:57] <FromDiscord> <haxscramper> I'm talking specifically about strictly defined set of `key = "value"` pairs
[15:15:58] <FromDiscord> <haxscramper> nothing more
[15:16:01] <FromDiscord> <haxscramper> that's it
[15:16:10] <FromDiscord> <haxscramper> everyone already writes it this way
[15:16:22] <PMunch> Of course, there is an argument to be made for whether Nimble files should use NimScript or not, but as it is now they are NimScript files and should be treated as NimScript files
[15:16:27] <PMunch> Anything else is simply incorrect
[15:16:39] <FromDiscord> <haxscramper> and by everyone I mean actually everyone as my nimble package analysis shows
[15:16:58] <PMunch> Yeah as I said, if you want to parse a format that looks like a Nimble file, but isn't a Nimble file be my guest
[15:17:08] <PMunch> But if you want to actually read Nimble files, then do it properly
[15:17:40] <FromDiscord> <haxscramper> well, there is a question about what is "properly" https://github.com/nim-lang/RFCs/issues/398#issuecomment-874681058
[15:17:56] <FromDiscord> <haxscramper> and I think "properly" would be a static `key = value`
[15:18:37] <PMunch> Linking to your own proposal on "improvements" for Nimble isn't proving anything
[15:19:54] <FromDiscord> <haxscramper> If I just copied it to you directly then, would it change something?
[15:20:17] <FromDiscord> <haxscramper> There is a stats in the main proposal with more elaborate explanation
[15:20:23] <FromDiscord> <haxscramper> And concrete numbers
[15:20:38] <PMunch> Yes, but it's still a proposal
[15:20:42] <FromDiscord> <haxscramper> And lengthy suggestion how it should function
[15:20:48] <FromDiscord> <haxscramper> and how it is going to be implemneted
[15:20:49] <FromDiscord> <haxscramper> and so on
[15:21:12] <PMunch> Sure, but I can write the same thing for having Nimble files be written in Brainfuck
[15:21:33] <PMunch> Doesn't make it less true that you should treat the current Nimble format as NimScript files
[15:22:01] <FromDiscord> <haxscramper> well, so your point is basically "for now I don't care"
[15:22:33] <FromDiscord> <haxscramper> and it does not matter unless this better solution would be actually accepted?
[15:23:09] <FromDiscord> <tandy> i think pmunch just wants stuff to work even in edge cases
[15:23:10] <FromDiscord> <tandy> where ppl do dum stuf
[15:23:33] <FromDiscord> <haxscramper> And I want to scale back edge cases so ecosyste would not end up in the infinite mantainance mode
[15:23:38] <PMunch> No, my point is that when faced with a file that has a well-defined format you should read that file according to the well defined format instead of making up your own rules
[15:23:48] <FromDiscord> <haxscramper> where we are forced to keep backward compat for \~20 ppl who use this "feature"
[15:24:14] <FromDiscord> <haxscramper> If you think that nimble is a well-defined format↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[15:24:29] <FromDiscord> <haxscramper> I mean there is no format
[15:24:29] <PMunch> Unless you're planning on killing NimScript any time soon there isn't really all that much to maintain
[15:24:36] <PMunch> It's NimScript
[15:24:41] <FromDiscord> <haxscramper> there is a way to just read it in a way that supposedly works
[15:24:57] <FromDiscord> <haxscramper> and nimble itself does multistage copy-paste-eval-read-back routine
[15:25:17] <FromDiscord> <haxscramper> just to read `version = "version"`
[15:27:32] <PMunch> https://github.com/nim-lang/nimble/blob/master/src/nimblepkg/nimscriptwrapper.nim#L80-L120 <- how you should handle Nimble files
[15:28:02] <FromDiscord> <haxscramper> What current approach promotes is just a backwards data flow, where package manager manifest cannot be used as a single source of truth
[15:28:38] <FromDiscord> <haxscramper> and the only real use case I've seen (that is used more than couple of times at least) for this is a version hack
[15:29:16] <FromDiscord> <haxscramper> there was a suggestion to deprecate version fields entirely actually
[15:29:23] <FromDiscord> <haxscramper> because it also duplicates information
[15:30:00] <FromDiscord> <Rika> In reply to @haxscramper "there was a suggestion": i'd like this but then again that would lock-in to git i assume
[15:30:11] <PMunch> Probably
[15:30:32] <PMunch> Now the question becomes, is locking the version number into a Version Control System a bad idea?
[15:30:44] <FromDiscord> <Rika> idk if subversion or mercurial or w/e other vcs nim supports has tags, not sure if its a git only thing actly
[15:30:55] <FromDiscord> <Rika> In reply to @PMunch "Now the question becomes,": id say it is yeah
[15:30:58] <FromDiscord> <haxscramper> we only support mercurial
[15:31:09] <FromDiscord> <haxscramper> nimble can only work with git and mercurial
[15:31:13] <FromDiscord> <Rika> i mean i gues stheyre an extreme minority
[15:31:20] <FromDiscord> <Rika> mercurial users, i mean
[15:31:33] <FromDiscord> <haxscramper> I would actually suggest using libgit
[15:31:44] <FromDiscord> <haxscramper> instead of relying on the git binary
[15:32:17] <PMunch> Why don't you just read the .git folder yourself directly and parse it statically? Instead of reading the format the way it's supposed to be read? :P
[15:32:38] <PMunch> Sorry, just messing with you
[15:33:33] <PMunch> I mean you can use `nimble dump` in order to get your nice statically readable list of data from a Nimble file
[15:33:36] <FromDiscord> <haxscramper> if .git was just as simple as `key = value` for 99% of cases and actually had specified format then why not?
[15:34:03] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[15:34:19] <PMunch> Probably works for both .nimble and the old .ini format as well
[15:34:52] <FromDiscord> <haxscramper> well, nimble first tries to parse it as `.ini`
[15:34:59] <FromDiscord> <haxscramper> if there is an exception it tries to eval it as nimscript
[15:35:08] <FromDiscord> <haxscramper> and both formats can be store in the `.babel`
[15:35:11] <FromDiscord> <haxscramper> `.nimble`
[15:35:27] <PMunch> But if you just want to read simple static keys, just use `nimble dump`
[15:35:38] <PMunch> It handles all the logic of Nimble for you
[15:35:46] <PMunch> In the way it is supposed to be handled
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:07] <FromDiscord> <haxscramper> if you think I'm trying to find a way to read nimble file metadaa
[15:36:19] <FromDiscord> <haxscramper> I'm not
[15:36:29] <FromDiscord> <haxscramper> And I'm aware of all ways to do this
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] <FromDiscord> <haxscramper> including `nimble dump --json`
[15:37:07] <FromDiscord> <haxscramper> where `--json` is undocumented as of 1.4.8 at least, but I think that's what you probably meant by how it supposed to be handled?
[15:37:44] <FromDiscord> <haxscramper> you know' static evaluation still implies I have to parse it, and this part can be done by compiler etc.
[15:37:58] <FromDiscord> <haxscramper> so I'm not going to run around with ad-hoc regexes
[15:38:45] <FromDiscord> <haxscramper> Araq also used compiler to parse nimble files in the atlas tool
[15:39:04] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/pull/18497/files#diff-8c33f91f01f7d86206dba0344835180d03954f29def8fd72197cb59b1f7d1f8a
[15:39:30] <FromDiscord> <haxscramper> so I'm not sure even about "supposed" part, I'd rather say that's just how it was implemented
[15:39:53] <FromDiscord> <haxscramper> and nobody exploits this anyway
[15:40:11] <FromDiscord> <haxscramper> also I'm not trying to take away precious `task` evaluation and try to substitute it with something else
[15:40:20] <FromDiscord> <haxscramper> and before/after hooks
[15:43:15] <FromDiscord> <haxscramper> So "supposed" is questionable, even if it wasn't (i.e. it was the original design goal, which is apparently not the case judging by generally welcome response when static toplevel was discussed) I would still question its necessity based on the real-world data (only extremely small minority of users actually exploit this) and general idea that static way of storing metadata is preferable to the one which requires whole compiler to eva
[15:45:06] <PMunch> This is all besides the point I was arguing though. I don't have a horse in the race for what .nimble files should look like. But the fact of the matter is that right now they are NimScript files and should be treated as such by anyone interfacing with them.
[15:45:57] <FromDiscord> <haxscramper> guess I need to make a PR into compiler then to fix atals
[15:45:58] <PMunch> And since a new spec would effectively introduce a third format I would still expect people to use something like `nimble dump --json` to actually read any data out of it
[15:46:57] <FromDiscord> <haxscramper> that one I have no argument against
[15:47:24] <FromDiscord> <haxscramper> I just object to making changes that force whole compiler infrastructure in the configuration file reading
[15:47:39] <FromDiscord> <haxscramper> make it mandatory\
[15:48:11] <PMunch> That's not a change though, that is how Nimble files already are
[15:48:30] <PMunch> You're a couple years late to object to that change :P
[15:49:20] <FromDiscord> <haxscramper> again, looking at the ecosystem, it is clear that I'm not late
[15:49:38] <FromDiscord> <haxscramper> since there is almost nobody who exploits this
[15:50:16] <FromDiscord> <haxscramper> so I won't break anything
[15:50:18] <FromDiscord> <dom96> In reply to @haxscramper "I would actually suggest": I saw a tweet recommending against libgit just today 🙂
[15:50:29] <FromDiscord> <haxscramper> in favor of git binary?
[15:50:32] <FromDiscord> <dom96> yes
[15:50:41] <FromDiscord> <dom96> apparently libgit is subtly crappier than git binary
[15:50:47] <FromDiscord> <haxscramper> well, it is easier to package at least, or something
[15:50:58] <FromDiscord> <haxscramper> well, it is a C library
[15:51:14] <FromDiscord> <haxscramper> certainly harder to use than `git` with some subcommands
[15:51:37] <FromDiscord> <dom96> meh, we're using `git` already, it works fine
[15:51:59] <FromDiscord> <dom96> btw PMunch, Nimble defines a `NIMBLE_VERSION` constant.
[15:52:03] <FromDiscord> <dom96> which you can use
[15:52:17] <FromDiscord> <haxscramper> it does?
[15:52:38] <PMunch> Yeah, but that is only when compiling the module right?
[15:52:56] <PMunch> So I can't use it from my macro, because that would pull the version of the project you're in
[15:53:32] <FromDiscord> <haxscramper> by the way, why do your macro need to know library version?
[15:53:55] <FromDiscord> <dom96> oh, you want library version, I see
[15:54:17] <PMunch> Because it caches its own output, and to ensure it gets rebuilt when you need to it hashes all the inputs and attaches that to the cache filename
[15:54:57] <FromDiscord> <dom96> sounds like you might want to use the path of the module
[15:55:00] <FromDiscord> <dom96> it'll include the version
[15:55:07] <FromDiscord> <dom96> (if it's installed via Nimble)
[15:55:27] <PMunch> So I would like to also add the version of the library because that obviously means the output might be different
[15:55:48] <PMunch> Yeah, problem is if it isn't installed via Nimble..
[15:56:00] <PMunch> I tried to create a version.nim file that exported a constant
[15:56:14] <PMunch> And then import than in both the nimble file and the file with the macro
[15:56:26] <PMunch> Which is the way I would expect it to work
[15:57:05] <PMunch> But since installing it flattens the library it was surprisingly tricky..
[15:58:42] <PMunch> I gave up when I had installed a version 0.3.0, updated the file to say 0.3.1 and trying to update and it said that 0.3.0 was already installed and saying yes to overwrite threw an error
[15:59:13] <PMunch> I guess I could get the module path and then go looking for the nimble file
[16:02:56] <FromDiscord> <dom96> maybe Nimble should also define a `NIMBLE_FUTHARK_VERSION` (and the same for each package) lol
[16:03:56] <FromDiscord> <dom96> but some people don't want to compile using `nimble` anyway which means this doesn't get defined
[16:04:15] <FromDiscord> <dom96> hm, could go into the nim.cfg file just like the --path's now though
[16:05:11] <PMunch> Doesn't nim.cfg have the same issue as the .nimble file?
[16:05:37] <FromDiscord> <dom96> what issue is that?
[16:06:07] <PMunch> That it would read the nim.cfg of the project you're building and not that of Futhark
[16:08:34] <FromDiscord> <dom96> well no, Nimble would add `NIMBLE_FUTHARK_VERSION` in there
[16:09:25] <PMunch> Ooh, so you're talking about having nimble add that when you're installing, and then the macro could grab it when it's run?
[16:11:05] <FromDiscord> <dom96> sure
[16:11:39] <FromDiscord> <dom96> When you compile with Nimble it calls `nim` with the `--path` and `-d:NimblePkgVersion=ver`
[16:12:21] <FromDiscord> <dom96> Now since some people don't want to use `nimble` to compile their code, the proposed solution was to just have Nimble put these flags into nim.cfg
[16:12:32] <FromDiscord> <dom96> (or .nims, can't remember where they go now tbh)
[16:12:43] <FromDiscord> <dom96> and Nimble now supports this when it's in a special mode
[16:12:47] *** Joins: Guest67 (~Guest67@58.69.114.228)
[16:12:53] <Guest67> hello :)
[16:12:59] <FromDiscord> <dom96> so I think putting the defines in there would make sense too
[16:13:15] <Guest67> Anyways where can i learn nim?
[16:13:23] <PMunch> But what do you do if you already have a .nims file?
[16:13:23] <Guest67> also you guys have discord?
[16:13:40] <PMunch> Yup, there is a Discord, but it's all linked to this IRC channel
[16:14:06] <PMunch> Here is a nice list of learning resources: https://nim-lang.org/documentation.html
[16:14:24] <Guest67> thanks 
[16:14:56] <Guest67> nim is underrated dont you agree?
[16:15:32] <PMunch> Definitely!
[16:15:43] <PMunch> Well around here it's rated pretty well :P
[16:15:54] <FromDiscord> <NullCode> yeah lmfao
[16:15:58] <Guest67> its also good for hacking ngl
[16:16:05] <FromDiscord> <NullCode> but aside from the nim underworld, very underrated
[16:16:11] <PMunch> What kind of hacking?
[16:16:24] <Guest67> making malware since usually it is undetectable
[16:16:31] <PMunch> Hacking like "haha, got your password" or hacking like "look at this cool thing I made"
[16:16:36] <PMunch> Ah right
[16:17:10] <PMunch> Yeah it has seen some utilization there, which unfortunately means that Nim an Nimble now sometimes gets flagged as a virus when people install it
[16:17:20] <PMunch> Because of poor fingerprinting
[16:18:46] <Guest67> where is it being flagged as a virus?
[16:19:13] <FromDiscord> <haxscramper> windows
[16:19:29] <Guest67> hmm 
[16:19:38] <FromDiscord> <haxscramper> It has been a recurssing problem since someone wrote a malware in nim seveal months ago
[16:19:39] <Guest67> oh right anyways i gotta learn nim
[16:20:09] <FromDiscord> <haxscramper> Windows defender and other 10^9 IQ antivirus vendors flag it (and nimble/choosenim) as a malware
[16:20:27] <PMunch> https://forum.nim-lang.org/t/7830
[16:20:43] <FromDiscord> <impbox [ftsf]> so it may not be as undetectable as you might imagine
[16:20:53] <FromDiscord> <impbox [ftsf]> but it is a great language
[16:21:23] <Guest67> hmm, yea but still its not as well known compared to other programming languages
[16:21:26] <PMunch> That's the problem though, I'm 99% sure that people writing malware in Nim could apply some sort of avoidance scheme..
[16:21:32] <Guest67> so making a malware on it is a good idea
[16:21:40] <Guest67> haha not that i encourage it
[16:23:02] <Guest67> FonderElite#1366
[16:23:07] <Guest67> discord
[16:23:30] <PMunch> I never really got that argument. I mean Nim does make a perfect language for writing malware, easy to use, small binaries, down to the metal, fast, flexible, etc. but the "hard to detect because it's not commonly used" isn't really that strong of an argument
[16:23:56] <FromDiscord> <NullCode> In reply to @Guest67 "making malware since usually": nah
[16:24:04] <FromDiscord> <NullCode> it was undetectable before i did my thing
[16:24:08] <FromDiscord> <NullCode> 3 detects back in the day
[16:24:21] <FromDiscord> <NullCode> now it's gotten to the point where fucking nim is being false +'d
[16:24:34] <FromDiscord> <haxscramper> what thing↵(@NullCode)
[16:24:51] <FromDiscord> <NullCode> yes
[16:25:32] <Guest67> Hmm so maybe obfuscating it will do the trick or encoding it in base64 then program it to decode itself 
[16:25:37] <FromDiscord> <NullCode> In reply to @Guest67 "oh right anyways i": you shouldnt learn a language just because you wanna hack
[16:25:41] <FromDiscord> <NullCode> just some advice
[16:25:47] <FromDiscord> <NullCode> hacking isn't good
[16:26:10] <Guest67> hacking depends on the person, i use it for research purposes
[16:26:14] <FromDiscord> <NullCode> In reply to @Guest67 "Hmm so maybe obfuscating": obf idk but base64 hella detects
[16:26:17] <Guest67> learn more about computer
[16:26:23] <Guest67> *Computers*
[16:26:26] <FromDiscord> <NullCode> base64 in any program will land you detects
[16:26:33] <FromDiscord> <NullCode> In reply to @Guest67 "*Computers*": yes definitely
[16:26:41] <FromDiscord> <NullCode> research purposes lmfao
[16:26:50] <Guest67> What?
[16:27:01] <FromDiscord> <NullCode> (edit) "base64 ... inlanguage" 03added "the program" | "program" => "language"
[16:27:08] <FromDiscord> <NullCode> (edit) "base64" => "base64'ing"
[16:27:13] <FromDiscord> <NullCode> nothing
[16:27:26] <FromDiscord> <NullCode> anyway i like editing a lot
[16:27:29] <FromDiscord> <NullCode> how does it look in irc
[16:27:37] <FromDiscord> <NullCode> (edit) "anyway i like editing ... a" 03added "messages in discord"
[16:27:43] <Guest67> cool
[16:27:54] <Guest67> ```py
[16:27:57] <FromDiscord> <NullCode> like, am i spamming the entire chat in irc land
[16:28:08] <FromDiscord> <NullCode> bridges are weird
[16:28:28] <Guest67> anyways whats your discord username?
[16:28:57] <FromDiscord> <NullCode> NullCode#0187
[16:29:37] *** Joins: arkurious (~arkurious@user/arkurious)
[16:29:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:31:00] <FromDiscord> <Rika> you two sus
[16:31:07] <FromDiscord> <NullCode> no
[16:31:11] <FromDiscord> <NullCode> wait, how am i sus
[16:31:27] <FromDiscord> <NullCode> I'm already glowing
[16:31:30] <FromDiscord> <Rika> mr "i have malware on my github but i totally didnt write it" or whatever your awful excuse was
[16:31:33] <Guest67> wrong username?
[16:31:52] <FromDiscord> <NullCode> In reply to @Guest67 "wrong username?": no https://media.discordapp.net/attachments/371759389889003532/896019563077050378/unknown.png
[16:32:04] <FromDiscord> <NullCode> In reply to @Rika "mr "i have malware": i was just fucking around are you serious
[16:32:16] <FromDiscord> <NullCode> lmfao
[16:32:28] <FromDiscord> <dom96> In reply to @NullCode "it was undetectable before": 🧐
[16:32:29] <FromDiscord> <Rika> dafuq do you even mean
[16:32:38] <FromDiscord> <NullCode> In reply to @Rika "dafuq do you even": i was kidding when i said that
[16:32:40] <Guest67> eh you have to add me lol
[16:32:53] <FromDiscord> <Rika> ah yes that excuse too
[16:33:00] <FromDiscord> <NullCode> which one
[16:33:23] <FromDiscord> <NullCode> In reply to @Guest67 "eh you have to": sent req
[16:33:24] <FromDiscord> <Rika> i seriously cant trust you when you've made so many remarks that would easily point to "ive tried making malware"
[16:33:32] *** Guest67 is now known as FonderElite
[16:33:50] <FromDiscord> <NullCode> ok so
[16:33:52] <FromDiscord> <NullCode> listen up
[16:34:02] <FromDiscord> <NullCode> no need to believe "I've tried making malware"
[16:34:10] <FromDiscord> <NullCode> i have made stuff, and theres no denying that
[16:34:13] <FromDiscord> <NullCode> it's on my github ffs
[16:34:26] <FromDiscord> <NullCode> i was just messing around when i said "oh i didn't do it" etc
[16:34:34] <FromDiscord> <dom96> tbf I've made some "hacking" tools too
[16:34:40] <FromDiscord> <NullCode> like?
[16:35:09] <FromDiscord> <dom96> 🙊
[16:35:26] <PMunch> https://github.com/nim-lang/packages/pull/2025
[16:35:33] <FromDiscord> <NullCode> In reply to @dom96 "🙊": guess we shall never know
[16:35:45] <FromDiscord> <Rika> okay
[16:35:53] <FromDiscord> <Rika> then what reason did you have for the malware
[16:36:03] <FromDiscord> <NullCode> um so
[16:36:04] <FromDiscord> <Rika> were you pentesting or what
[16:36:11] <FromDiscord> <NullCode> can't say here dm
[16:36:14] <FromDiscord> <Rika> what
[16:36:15] <FromDiscord> <Rika> why
[16:36:17] <FromDiscord> <Rika> why not
[16:36:18] <FromDiscord> <Rika> ratehr
[16:36:20] <FromDiscord> <Rika> (edit) "ratehr" => "rather"
[16:36:29] <FromDiscord> <dom96> In reply to @NullCode "guess we shall never": it is on my github, I'll leave it to you to find 😛
[16:36:33] <FromDiscord> <Rika> if you cant say here then just dont tell me
[16:36:55] <FromDiscord> <NullCode> ok won't tell you then
[16:37:02] <FromDiscord> <NullCode> In reply to @dom96 "it is on my": alright I'm on it
[16:37:13] <FromDiscord> <NullCode> too curious now
[16:37:19] <FromDiscord> <dom96> In reply to @NullCode "can't say here dm": Russian contract eh? 😄
[16:37:25] <FromDiscord> <NullCode> XD
[16:37:36] <FromDiscord> <NullCode> hired by the remnants of the soviet union
[16:37:48] <FromDiscord> <NullCode> with plans to take control of the world using NullCode Malware™️
[16:37:54] <FromDiscord> <dom96> Yes Comrade, bring us back to our former glory
[16:38:26] <FromDiscord> <NullCode> wait are you russian
[16:38:33] <PMunch> By the way NullCode, editing Discord messages looks pretty disgusting in the IRC chat :P
[16:38:35] <FromDiscord> <Rika> no
[16:38:42] <FromDiscord> <dom96> lol no
[16:38:44] <FromDiscord> <NullCode> In reply to @PMunch "By the way NullCode,": oh no i was scared of that
[16:39:07] <FromDiscord> <dom96> Not too far off though
[16:39:24] <FromDiscord> <NullCode> I see
[16:39:26] <PMunch> I mean it's not super terrible: https://irclogs.nim-lang.org/08-10-2021.html#12:57:01
[16:39:39] <PMunch> But it's not great
[16:39:47] <FromDiscord> <NullCode>  https://media.discordapp.net/attachments/371759389889003532/896021550552211456/unknown.png
[16:39:48] <FromDiscord> <NullCode> my god thats gross
[16:39:56] <FromDiscord> <NullCode> literally chat flooding lmfao
[16:40:06] <PMunch> Yup
[16:40:21] <PMunch> At least the bridge creates pastes from long messages now :P
[16:40:32] <PMunch> Always fun when someone pasted code into Discord..
[16:40:37] <FromDiscord> <dom96> come on, it ain't even that bad
[16:40:48] <FromDiscord> <dom96> props to @Yardanico for implementing it
[16:40:58] <PMunch> Oh for sure, it's not that bad
[16:41:18] <PMunch> But if you're changing a single letter or something I'd say it's best to just leave it
[16:41:29] <FromDiscord> <NullCode> is there an irc web client
[16:41:30] <FromDiscord> <Yardanico> In reply to @NullCode "": yeah, there are no edits on IRC, although there was a discussion about it
[16:41:34] <FromDiscord> <Yardanico> In reply to @NullCode "is there an irc": yes, multiple
[16:41:40] <PMunch> Then again, on IRC I can see ages back in the history without scrolling
[16:41:47] <FromDiscord> <Yardanico> also you can use matrix which might be a better experience if you've only used modern apps like discord or telegram
[16:41:58] <FromDiscord> <NullCode> i like old stuff lmao
[16:42:01] *** Joins: max22- (~maxime@2a01cb088335980097eb09a47970d526.ipv6.abo.wanadoo.fr)
[16:42:06] <FromDiscord> <dom96> yeah, we need irc logs for the other channels
[16:42:12] <FromDiscord> <dom96> really need to set that up
[16:42:13] <PMunch> First message on my screen right now is my comment saying I don't get the argument about the undetectability of Nim
[16:42:24] <FromDiscord> <NullCode> matrix is also alright, but I'd rather experiment with everything there is
[16:42:38] <FromDiscord> <impbox [ftsf]> I gave matrix a try, but it seemed suboptimal
[16:42:45] <FromDiscord> <NullCode> In reply to @PMunch "First message on my": your text gotta be hella small then
[16:42:46] <FromDiscord> <impbox [ftsf]> at least for this
[16:42:54] <PMunch> Oh yeah, always annoying when I need to reference something we discussed in #nim-offtopic :P
[16:43:03] <PMunch> Nah, not really
[16:43:26] <PMunch> Inconsolata at font size 13
[16:43:40] <FromDiscord> <Rika> 13 on what screen dpu]
[16:43:41] <FromDiscord> <Rika> (edit) "dpu]" => "dpi"
[16:43:42] <PMunch> My client just doesn't add a bunch of silly whitespace everywhere
[16:43:53] <PMunch> And this is a pretty big 4K monitor :P
[16:44:15] <PMunch> But it's perfectly legible from like a meter away
[16:44:16] <FromDiscord> <NullCode> yikes https://media.discordapp.net/attachments/371759389889003532/896022686743003156/unknown.png
[16:44:30] <FromDiscord> <NullCode> am i legally blind, or is this hard to read
[16:44:38] <FromDiscord> <NullCode> In reply to @PMunch "And this is a": oh makes sense
[16:44:49] <FromDiscord> <dom96> Yeah, I was just about to say
[16:44:51] <FromDiscord> <Rika> its hard to read
[16:44:56] <FromDiscord> <dom96> Discord supports condensed mode
[16:45:01] <FromDiscord> <Rika> but its not good
[16:45:01] <FromDiscord> <dom96> which is basically the same as IRC
[16:45:09] <FromDiscord> <dom96> It's good enough
[16:45:16] <FromDiscord> <Rika> its not
[16:45:18] <FromDiscord> <Rika> imo
[16:45:28] <FromDiscord> <NullCode> In reply to @Rika "but its not good": it works if you don't set it to 14 font scaling
[16:45:31] <FromDiscord> <dom96> although I do find it funny that it doesn't have a central margin like XChat
[16:45:41] <FromDiscord> <dom96> I remember trying to implement that myself in GTK for my own IRC client
[16:45:50] <FromDiscord> <dom96> and now I'm using Discord without it
[16:45:56] <FromDiscord> <NullCode> lmao
[16:47:10] <PMunch> Yeah those nicks being all over the place isn't great
[16:47:23] <FromDiscord> <NullCode> yeah
[16:47:32] <PMunch> I kinda want to create an IRC client that allows you to apply custom parsers to nicks
[16:47:52] <PMunch> So I could pull out the <dom96> part of the FromDiscord bot message and use that as the nick
[16:48:46] <FromDiscord> <dom96> you can easily do that with an XChat plugin
[16:48:56] <FromDiscord> <dom96> (and I'm guessing other IRC clients support it too)
[16:48:58] <FromDiscord> <NullCode> aight so what irc webclient should i use
[16:49:04] <FromDiscord> <dom96> wouldn't be surprised if plugins exist for this already
[16:50:06] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Read error: Connection reset by peer)
[16:50:10] *** Quits: nixfreak_nim[m]1 (~reversem3@2001:470:69fc:105::33d1) (Read error: Connection reset by peer)
[16:50:11] *** Quits: Theodore[m] (~h4n1virus@2001:470:69fc:105::f391) (Read error: Connection reset by peer)
[16:51:02] <FromDiscord> <tandy> use element.io with libera chat \:&)↵(@NullCode)
[16:51:34] <FromDiscord> <NullCode> oh i use element for matrix
[16:51:39] <FromDiscord> <NullCode> it has irc too?
[16:52:25] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[16:53:11] <FromDiscord> <Yardanico> @NullCode matrix has had a network-wide IRC bridge for a long time (so Matrix people appear as `Nick[m]` in IRC and IRC people appear as `Nick` in Matrix)
[16:53:18] <FromDiscord> <Yardanico> and after the freenode stuff they switched the bridge to libera.chat
[16:53:20] *** Joins: rockcavera (~rc@192.12.112.224)
[16:53:21] *** Quits: rockcavera (~rc@192.12.112.224) (Changing host)
[16:53:21] *** Joins: rockcavera (~rc@user/rockcavera)
[16:53:22] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[16:53:34] *** Joins: Theodore[m] (~h4n1virus@2001:470:69fc:105::f391)
[16:54:12] <FromDiscord> <Yardanico> ah actually they have multiple, yes
[16:54:28] <FromDiscord> <NullCode> oh
[16:54:39] <FromDiscord> <NullCode> so tandy's telling me to just use matrix?
[16:54:54] <FromDiscord> <Yardanico> yes
[16:54:59] <FromDiscord> <tandy> yes heheh
[17:11:39] <PMunch> Hmm XChat looks suspiciously much like HexChat
[17:11:58] <PMunch> Ah "HexChat is an IRC client based on XChat"
[17:12:03] *** Quits: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:12:10] <FromDiscord> <dom96> indeed
[17:12:23] *** Joins: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de)
[17:12:31] <PMunch> Hmm, apparently it is highly scriptable
[17:12:50] <PMunch> I guess I can just write a plug-in to HexChat then if it doesn't exist yet
[17:20:59] <PMunch> Hmm, can't find one
[17:21:28] <PMunch> Maybe this is what I should stream. Using Futhark to wrap the HexChat C plug-in library and create an .so addon that fixes nicks
[17:29:17] *** Quits: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:34:22] *** Quits: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Quit: Leaving)
[17:37:30] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[17:37:47] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[17:38:17] <PMunch> Think I might've found a plug-in that does it
[17:38:25] <PMunch> Someone from Discord, could you say something?
[17:39:01] <FromDiscord> <dom96> Foo
[17:39:16] <PMunch> Hmm, damn it. Didn't work
[17:41:03] <PMunch> Might've been an incorrect config. Could you try again?
[17:41:29] <FromDiscord> <pointystick> Bar
[17:41:39] <PMunch> Still no luc
[17:41:41] <PMunch> luck*
[17:41:53] <PMunch> Eh, I'll have to look at it later
[17:41:55] <FromDiscord> <Rika> stiww no wuck huh
[17:41:57] <PMunch> gotta go
[17:41:59] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Client Quit)
[17:42:02] <FromDiscord> <Rika> go where
[17:49:25] <FromDiscord> <tandy> lol
[18:04:22] <NimEventer> New Nimble package! futhark - Zero-wrapping C imports in Nim, see https://github.com/PMunch/futhark
[18:04:22] <NimEventer> New Nimble package! chipmunk7 - Bindings for Chipmunk, a fast and lightweight 2D game physics library., see https://github.com/avahe-kellenberger/nim-chipmunk
[18:04:24] <nrds> <12R2D299> 4GitHub: 7"Automatic wrapping of C headers in Nim"
[18:04:25] <nrds> <12R2D299> 4GitHub: 7"Nim bindings to Chipmunk, a fast and lightweight 2D game physics library"
[18:13:43] <FromDiscord> <NullCode> whats the best way to convert string to int?
[18:13:56] <FromDiscord> <NullCode> there are 2 modules with parseint
[18:15:34] <FromDiscord> <Rika> whichever fits your needs more
[18:15:38] <FromDiscord> <Rika> one time? strutils
[18:15:44] <FromDiscord> <Rika> for parsing? parseutils
[18:15:48] <FromDiscord> <enthus1ast> the one in parseutils is better when writing a parser imho
[18:16:03] <FromDiscord> <enthus1ast> for normal stuff i use the one in strutils
[18:16:36] <FromDiscord> <enthus1ast> its better for parsers because it hase the same interface as the other procs from parseutils
[18:16:42] <FromDiscord> <NullCode> oh i just wanted to convert a tainted str to int
[18:16:46] <FromDiscord> <NullCode> ill just go with strutils then
[18:17:00] <FromDiscord> <Rika> taint mode is deprecated
[18:17:15] <FromDiscord> <NullCode> execCmdEx still does it idk
[18:17:35] <FromDiscord> <NullCode> osproc modul
[18:17:37] <FromDiscord> <NullCode> (edit) "modul" => "module"
[18:18:07] <FromDiscord> <NullCode> dishes out a taintedstr instead of str
[18:18:33] <FromDiscord> <Yardanico> In reply to @NullCode "dishes out a taintedstr": TaintedString is just string
[18:18:39] <FromDiscord> <Yardanico> unless you use taintMode which is deprecated
[18:19:01] <FromDiscord> <NullCode> what does this tainted mode do tho
[18:19:23] <FromDiscord> <Yardanico> it forces you to handle strings from external sources properly
[18:19:26] <FromDiscord> <Rika> nothing that matters now
[18:19:29] <FromDiscord> <Yardanico> but yeah
[18:19:43] <FromDiscord> <NullCode> aight got it
[18:21:06] <FromDiscord> <enthus1ast> i actually liked the idea of tainted string, but in practice i was just converting them to str all the time \:)
[18:41:13] <FromDiscord> <gerwy> Hi hmm i tried using nimx, i wanted to try samples that they are and i just cloned the repo and run nake but i always get this error ↵`nimx/nimx/perform_on_main_thread.nim(83, 12) Error: cannot open file: sdl2`
[18:41:46] <FromDiscord> <gerwy> and i do have sdl2 installed
[18:44:04] <FromDiscord> <Yardanico> In reply to @Life Sucks "and i do have": which one
[18:44:21] <FromDiscord> <gerwy> hmm actually i it doesn't import it at all, even in some test script
[18:44:22] <FromDiscord> <gerwy> hmm
[18:44:29] <FromDiscord> <gerwy> In reply to @Yardanico "which one": both↵sdl2 and sdl2_nim
[18:44:36] <FromDiscord> <Yardanico> you can't have "both"
[18:44:39] <FromDiscord> <Yardanico> they overwrite files
[18:44:39] <FromDiscord> <gerwy> oh
[18:44:50] <FromDiscord> <gerwy> so remove the sdl2 and leave sdl2_nim?
[18:45:10] <FromDiscord> <Yardanico> other way
[18:45:27] <FromDiscord> <Yardanico> remove sdl2_nim and reinstall sdl2
[18:45:33] <FromDiscord> <gerwy> okaay
[18:45:46] <FromDiscord> <Yardanico> and don't forget to run nimble install to install all dependencies - https://github.com/yglukhov/nimx/blob/master/nimx.nimble
[18:46:09] <FromDiscord> <gerwy> In reply to @Yardanico "and don't forget to": yep did that, there is a lot of deps lol
[18:46:13] <FromDiscord> <gerwy> (edit) "is" => "are"
[18:47:30] <FromDiscord> <gerwy> okay after reinstalling it works thaanks :> also a question, because i didn't had luck with web app guis for nim, like neel or nimview, does nimx has ability to do like drag and drop for files?↵or is there a way to have file as input?
[18:49:42] <FromDiscord> <gerwy> doesn't look like it
[18:55:36] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[18:55:36] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[18:55:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[19:08:20] <FromDiscord> <FastnFree> Does nim have the ability to run scripts without compiling first?
[19:08:42] <FromDiscord> <Rika> nimscript only
[19:09:08] <FromDiscord> <Rika> or do you mean "without seeing the compiling part"
[19:09:29] <FromDiscord> <enthus1ast> nim r yourScript.nim
[19:09:31] <FromDiscord> <Rika> you can do `nim r <the nim file>` and it'll just compile and run
[19:09:38] <FromDiscord> <Rika> binary wont be in the dir
[19:09:45] <FromDiscord> <Rika> feels like a script
[19:12:30] <FromDiscord> <enthus1ast> and also\:↵↵nim e yourScript.nim
[19:13:02] <FromDiscord> <enthus1ast> r compiles and runs it, e evaluates it with nim vm, but e is limited
[19:19:35] <FromDiscord> <sebbe> Which language does nim compare to
[19:19:41] <FromDiscord> <sebbe> I know it’s a broad question
[19:24:00] <FromDiscord> <gerwy> In reply to @sebbe "Which language does nim": Pascal? If you mean by syntax, or python by some people↵In speed probably around C++, slower than Rust
[19:24:22] <FromDiscord> <Yardanico> "In speed probably around C++, slower than Rust" this is not really a good thing to say
[19:24:27] <FromDiscord> <Yardanico> comparing native language performance is hard
[19:24:30] <FromDiscord> <gerwy> But idk what langs you compare it with, they all have their own goals and they are used in different regions
[19:24:37] <FromDiscord> <Yardanico> they're all in the same ballpark
[19:24:44] <FromDiscord> <Yardanico> c/c++/nim/rust/zig
[19:24:45] <FromDiscord> <Yardanico> etc
[19:25:13] <FromDiscord> <gerwy> In reply to @Yardanico "comparing native language performance": Hehe just to clarify↵Its data from benchmarks↵Obviously real world examples may be different but it all depends on your skill
[19:25:39] <FromDiscord> <Yardanico> what benchmarks specifically? curious to check them out
[19:26:59] <FromDiscord> <gerwy> Hmm i saw one benchmark on github that had a few langs, comparing them in like 4 types of script but i need to find it on my pc and im on my phone now
[19:27:58] <FromDiscord> <gerwy> The other one was public project to try and make counting prime numbers script for popular languages and compare the results, with a lot of data and be able to reproduce it easily
[19:29:22] <FromDiscord> <dom96> Benchmarks are all just a function of how much time the person implementing the benchmark has
[19:29:24] <FromDiscord> <Yardanico> In reply to @Life Sucks "Hmm i saw one": You mean https://github.com/kostya/benchmarks ? Nim there is pretty close to Rust
[19:29:26] <nrds> <12R2D299> 4GitHub: 7"Some benchmarks of different languages"
[19:29:46] <FromDiscord> <dom96> A language has an effect on the time it takes to create a solution that wins benchmarks
[19:29:52] <FromDiscord> <dom96> but it always is all down to time
[19:30:02] <FromDiscord> <Yardanico> In reply to @dom96 "Benchmarks are all just": some benchmark repos have pretty strict rules on how benchmarks have to be implemented
[19:30:05] <FromDiscord> <dom96> important to keep that in mind
[19:30:27] <FromDiscord> <dom96> all rules can be bent
[19:30:39] <FromDiscord> <dom96> again, down to how much time the person has to look for ways to bend them 🙂
[19:31:00] <FromDiscord> <Yardanico> well yeah, some of these benchmarks even in kostya's repo are stupid
[19:31:06] <FromDiscord> <Yardanico> https://github.com/kostya/benchmarks/blob/master/brainfuck/bf.rs
[19:31:15] <FromDiscord> <Yardanico> like wtf is thisd https://media.discordapp.net/attachments/371759389889003532/896064705062387772/unknown.png
[19:31:16] <FromDiscord> <gerwy> In reply to @Yardanico "You mean https://github.com/kostya/benchmarks ?": Yes!↵And the other one is from that video↵https://www.youtube.com/watch?v=tQtFdsEcK_s
[19:31:18] <nrds> <12R2D299> 4Youtube: 7"E01: What is the FASTEST Computer Language?  45 Languages Tested!"
[19:31:19] <FromDiscord> <Yardanico> (edit) "thisd" => "this"
[19:31:30] <FromDiscord> <Yardanico> normal rust isn't written like that
[19:31:48] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[19:32:09] <FromDiscord> <gerwy> In reply to @dom96 "Benchmarks are all just": Thats why i like the other benchmark because people are allowed to make their own solutions and nim has 3
[19:33:01] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[19:33:01] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[19:33:01] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[19:33:37] <FromDiscord> <dom96> and what if nobody bothered to spend time on the 3 benchmarks?
[19:33:43] <FromDiscord> <dom96> you'd think Nim was slow
[19:36:23] <FromDiscord> <gerwy> I wouldn't but you can see how high nim is in those benchmarks↵Pretty interesting what you can pump out of it
[19:37:37] <FromDiscord> <dom96> yes, but a lot of it is to do with luck, Nim is lucky to have someone that knows how to write such highly efficient code
[19:37:55] <FromDiscord> <dom96> and I recall that person saying that it can be done in other languages too
[19:38:12] <FromDiscord> <dom96> maybe it's not as easy but it can be done, and then you'll see another language above Nim and think "oh, I guess Nim is slower"
[19:38:25] <FromDiscord> <dom96> and not know that this person spent a month full-time optimising their benchmark
[19:38:28] <FromDiscord> <dom96> vs. 1 week for Nim
[19:39:03] <FromDiscord> <gerwy> I checked Rust's solution source code and compared with Nim's one and well yeah i need to say Rust one looks like it required much less work
[19:39:25] <FromDiscord> <gerwy> And is still a little quicker
[19:40:06] <FromDiscord> <Yardanico> In reply to @dom96 "and not know that": yeah in this case (primes benchmark) I agree
[19:40:21] <FromDiscord> <Yardanico> as I said, generally native languages are in the same ballpark
[19:40:34] <FromDiscord> <dom96> yep
[19:40:36] <FromDiscord> <Yardanico> and for nim this is a big advantage as it feels like a scripting language
[19:43:17] <FromDiscord> <gerwy> Btw can someone on linux help  me with this?↵I wanted to use nimqml and i need to have dotherside for that↵The problem is that there are no binaries for dotherside for linux, only for windows↵And i tried to compile it multiple times and always failed, even using their dockerfile....
[19:43:21] <FromDiscord> <gerwy> https://github.com/filcuc/dotherside
[19:43:23] <nrds> <12R2D299> 4GitHub: 7"C language library for creating bindings for the Qt QML language"
[19:43:46] <FromDiscord> <Yardanico> In reply to @Life Sucks "Btw can someone on": how did you compile it?
[19:43:50] <FromDiscord> <Yardanico> it was really easy for me, I can try now again
[19:45:11] <FromDiscord> <IsaacPaul> Yea some benchmarks require you to do x a certain way unless it's builtin like an arena allocator in rust. So of course rust is going to out perform any language where you are not allowed to avoid allocations in the rules.
[19:45:27] <FromDiscord> <gerwy> I mean i just have errors all the time and if anyone could provide me with binary i would be soo thankful
[19:45:44] <FromDiscord> <IsaacPaul> (edit) "any" => "~~any~~ some"
[19:45:45] <FromDiscord> <Yardanico> @gerwy i can provide the binary, but it's much better if you actually fix compilation on your end
[19:45:48] <FromDiscord> <Yardanico> what's the error message?
[19:46:14] <FromDiscord> <IsaacPaul> (edit) "language" => "languages"
[19:46:19] <FromDiscord> <gerwy> Ugh im still on my phone, but i have a history of me ranting that it doesnt work i will look for it, im in store now
[19:46:22] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3Bdi
[19:47:16] <FromDiscord> <gerwy> In reply to @Yardanico "The build process is": Of course im not a moron, i always check for building instructions and do them exactly like they say ↵I think it was something with cmake
[19:47:23] <FromDiscord> <Yardanico> Of course you need Qt installed (with dev libraries), the compiler environment, and cmake itself
[19:47:34] <FromDiscord> <Yardanico> what distro are you on?
[19:51:17] <FromDiscord> <gerwy> I have Qt installed i thought it could be the problem too
[19:51:28] <FromDiscord> <gerwy> In reply to @Yardanico "what distro are you": PopOS, so basically Ubuntu
[19:51:31] <FromDiscord> <Yardanico> not just Qt, but Qt with development libraries
[19:51:45] <FromDiscord> <Yardanico> debian-based distros have separate packages for binaries and headers (for development) of packages
[19:52:08] <FromDiscord> <Yardanico> So yeah, when you get home, try `sudo apt-get install qtbase5-dev` and compiling again
[19:53:02] <FromDiscord> <Yardanico> Also might need `qtdeclarative5-dev`
[19:53:16] <FromDiscord> <gerwy> In reply to @Yardanico "not just Qt, but": Yeah, the one with -dev suffix
[19:53:30] <FromDiscord> <gerwy> In reply to @Yardanico "So yeah, when you": I will try thanks !
[19:53:41] <FromDiscord> <gerwy> In reply to @Yardanico "Also might need `qtdeclarative5-dev`": Thats more likely for me
[19:55:18] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[20:02:54] <FromDiscord> <gerwy> Oh btw i found my rant about it and what didnt worked
[20:02:58] <FromDiscord> <gerwy> Can i paste it?
[20:03:14] <FromDiscord> <gerwy> Or screenshot it
[20:04:05] <FromDiscord> <Yardanico> sure
[20:06:07] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/896073481328930876/Screenshot_2021-10-08-18-35-58-20.jpg
[20:10:35] <FromDiscord> <gerwy> So can be qt lib i guess
[20:10:45] <FromDiscord> <gerwy> (edit) "So can be qt ... lib" 03added "dev"
[20:11:09] <nixfreak_nim[m]> is there a  js backend repl for nim ? 
[20:14:47] <FromDiscord> <Rika> no
[20:18:07] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[20:19:39] <nixfreak_nim[m]> ok thanks 
[20:30:46] <FromDiscord> <Yardanico> In reply to @Life Sucks "": you need to install qtbase-dev itself for this command, yeah
[20:31:10] <FromDiscord> <gerwy> i installed qtdeclarative5-dev and it failed to cmake
[20:31:16] <FromDiscord> <gerwy> installing qtbase-dev now
[20:31:55] <FromDiscord> <gerwy> already installed
[20:32:08] <FromDiscord> <Yardanico> qtbase5-dev ?
[20:32:14] <FromDiscord> <gerwy> qtbase5-dev yeah
[20:32:23] <FromDiscord> <gerwy> so i guess its not that
[20:32:27] <FromDiscord> <gerwy> but i found something
[20:32:38] <FromDiscord> <Yardanico> can you show a screenshot of full error message
[20:32:47] <FromDiscord> <Yardanico> also yeah, you need to remove the cmake files so it's not cached
[20:32:49] <FromDiscord> <gerwy> it has github workflows and there is linux section, there are packages that this CI uses
[20:32:59] <FromDiscord> <gerwy> `sudo apt-get install -y build-essential cmake qt5-default qtbase5-dev qtdeclarative5-dev qtquickcontrols2-5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 xvfb lcov `
[20:33:18] <FromDiscord> <Yardanico> try this I guess, but you don't need xvfb
[20:33:27] <FromDiscord> <Yardanico> i assume you also already have build-essential installed
[20:34:05] <FromDiscord> <gerwy> okay trying to install them
[20:34:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:34:27] <FromDiscord> <gerwy> cmake without any errors 😳
[20:34:50] <FromDiscord> <gerwy> unless it used the previous one, i will delete everything in dir and try again
[20:35:34] <FromDiscord> <gerwy> 😳
[20:36:33] <FromDiscord> <gerwy> okay i did everything
[20:36:56] <FromDiscord> <gerwy> and it looks like it works... i mean it built and installed
[20:38:06] <FromDiscord> <gerwy> so i guess it was that↵thanks Yardanico! idk what i would do without you<3 and i wish this line of deps will be helpful for someone who will work with dotherside, because why put those deps in readme :) when you can hide them in CI
[20:45:12] <FromDiscord> <gerwy> okay i think everything is now good, it don't want to load a lib but its sure is just i didn't included it in PATH
[20:52:21] <FromDiscord> <gerwy> okay no i still have a problem
[21:04:32] *** Quits: FonderElite (~Guest67@58.69.114.228) (Ping timeout: 256 seconds)
[21:05:45] <FromDiscord> <IsaacPaul> In reply to @Life Sucks "so i guess it": Wait until you run into tools that only use CI for builds and have 0 support for doing it yourself. xD
[21:11:49] <FromDiscord> <gerwy> i made it work :DDD↵it was a lot of pain, installing Qt modules, searching for them but i made it work
[21:12:21] <FromDiscord> <NullCode> In reply to @IsaacPaul "Wait until you run": lmfao ikr
[21:13:00] <FromDiscord> <gerwy> now my only problems are↵-How to link libs statically, because i want to take the binary with me without needing libs↵-How to compile to Windows and compile it statically (fortunately i don't think to compile it again i think because they distribute dll files, at least i think so)
[21:13:25] <FromDiscord> <Rika> Static compilation is a pain in windows
[21:13:51] <FromDiscord> <gerwy> In reply to @IsaacPaul "Wait until you run": im still amazed that their own dockerfile didn't worked with it xD↵also i think the examples for that repo are so old they used `random()` function instead of `rand()` which i fixed
[21:14:34] <FromDiscord> <gerwy> In reply to @Rika "Static compilation is a": if i will be forced too... can i always do like, copy the .so or dll file into the same directory where binary is and make it use it?
[21:19:28] <FromDiscord> <NullCode> In reply to @Life Sucks "if i will be": yes
[21:19:36] <FromDiscord> <NullCode> but they need to be like
[21:19:40] <FromDiscord> <NullCode> right beside each other
[21:19:43] <FromDiscord> <NullCode> (aka same dir)
[21:19:44] <FromDiscord> <NullCode> to work
[21:19:59] <FromDiscord> <NullCode> I've wanted to static link some stuff myself tbh
[21:20:12] <FromDiscord> <NullCode> but found it was easier to just use pure Nim alternatives
[21:23:55] <FromDiscord> <gerwy> yeah i can have binary in the same dir as lib on windows its not a problem
[21:24:50] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[21:24:50] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[21:24:50] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:26:37] <FromDiscord> <gerwy> but i will in future need to know if i can use it like that
[21:26:47] <FromDiscord> <gerwy> other than that im done thank youuu for your precious time
[21:57:35] *** Quits: max22- (~maxime@2a01cb088335980097eb09a47970d526.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[22:18:47] *** Joins: tiorock (~rc@192.12.112.224)
[22:18:48] *** Quits: tiorock (~rc@192.12.112.224) (Changing host)
[22:18:48] *** Joins: tiorock (~rc@user/rockcavera)
[22:18:48] *** rockcavera is now known as Guest6566
[22:18:48] *** Quits: Guest6566 (~rc@user/rockcavera) (Killed (sodium.libera.chat (Nickname regained by services)))
[22:18:48] *** tiorock is now known as rockcavera
[22:26:49] *** Joins: max22- (~maxime@2a01cb0883359800e541236a3ab6432d.ipv6.abo.wanadoo.fr)
[22:32:29] *** Joins: vicfred (~vicfred@user/vicfred)
[22:47:18] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[22:58:16] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[22:58:35] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[23:20:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:21:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:50:59] <FromDiscord> <DMisener> sent a code paste, see https://play.nim-lang.org/#ix=3Beq
