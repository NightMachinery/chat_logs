[00:24:33] *** Quits: mattil (~mattil@87-92-63-124.bb.dnainternet.fi) (Quit: Leaving)
[07:12:33] <fzakaria[m]> Would JRuby welcome a patch to remove the hardcoded paths in         static {... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/46a73caccc78a7dd68e86a9e0a5dfe4d78df6d28)
[07:12:43] <fzakaria[m]>  * Would JRuby welcome a patch to remove the hardcoded paths in         https://github.com/jnr/jnr-ffi/blob/master/src/main/java/jnr/ffi/LibraryLoader.java#L498-L516
[07:13:26] <fzakaria[m]> My rationale:
[07:13:26] <fzakaria[m]> For a typical installation they are already included as part of `java.library.path`.
[07:13:26] <fzakaria[m]> For my usecase (NixOS), I've recently patched our JDK to have the default `java.library.path` to be empty to avoid impurity.
[07:13:26] <fzakaria[m]> This would also bubble up and work here.
[07:19:43] <fzakaria[m]> https://github.com/jnr/jnr-ffi/pull/264/files
[12:46:28] <headius> It is scary but may be acceptable
[17:24:19] *** Quits: venue (~venue@user/venue) (Quit: adios)
[19:56:37] *** Quits: fidothe (sid1130@highgate.irccloud.com) (Read error: Connection reset by peer)
[20:00:52] *** Joins: fidothe (sid1130@highgate.irccloud.com)
[21:59:06] <fzakaria[m]> I just don't see hardcoding paths to be ever a sensible approach especially when there are system properties from the JDK designed to provide this value (i.e. `java.library.path`)
[23:52:41] *** Joins: venue (~venue@user/venue)
