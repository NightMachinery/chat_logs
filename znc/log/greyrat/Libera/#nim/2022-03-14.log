[00:01:59] <FromDiscord> <soda> Yeah trying to get the hang of it. Doom emacs has some features i would like to emulate, but i really appreciate how minimal it is.
[00:16:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[00:37:59] <NimEventer> New thread by Planetis: Naylib - yet another raylib wrapper becomes available, see https://forum.nim-lang.org/t/9005
[00:49:25] <FromDiscord> <Forest> Does anyone have an example of a physics engine implemented in Nim? (Preferably with it being simple to use another engine)
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:18:55] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[02:00:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:19:32] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:20:12] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[02:30:59] <FromDiscord> <michaelb.eth> is there a way at compile-time in a normal `.nim` file (i.e. not NimScript) to get the path for the nimcache dir?
[02:32:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/UXj
[02:34:03] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[02:34:34] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[02:35:05] <FromDiscord> <Elegantbeef> Think that module is 1.6 so as you're probably on 1.2(damn status 😛 ) you may just have to assume it all and do `getCacheDir() / "nim"` with `getProjectPath` from `macros`
[02:39:54] <FromDiscord> <michaelb.eth> thanks!
[02:39:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[02:40:05] <FromDiscord> <auxym> hey beef, do you have docs or a quick getting started example for micros? Or still wip? I'm looking into implementing a tiny dsl with a macro and micros seems like it could help.
[02:40:26] <FromDiscord> <michaelb.eth> for many projects lately (e.g. standalone libs) we test against 1.2, 1.4, and 1.6
[02:40:38] <FromDiscord> <michaelb.eth> (edit) "for many projects lately (e.g. standalone libs) ... we" 03added "at Status"
[02:40:39] <FromDiscord> <Elegantbeef> Tests are the best way to see how to use micros
[02:41:13] <FromDiscord> <auxym> thanks, I'll have a look
[02:41:14] <FromDiscord> <Elegantbeef> The API is rather ok, some things might change slightly, but for the most part i have tests for the API which should show how to use i t
[02:42:24] <FromDiscord> <Elegantbeef> I do need to make a case statement macro still so i can allow dispatching on the NimNode
[02:44:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/XD6
[02:44:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S9Y
[02:45:11] <FromDiscord> <Elegantbeef> Hey i was just joking, dont bring facts here!↵(@michaelb)
[02:45:22] <FromDiscord> <michaelb.eth> lol
[02:47:44] <FromDiscord> <Elegantbeef> And auxym feel free to PR anything to micros that expands the API, it's relatively simple to expand
[02:47:55] <FromDiscord> <michaelb.eth> hey, nice, it's working the same on 1.2.18, 1.4.8 and 1.6.4
[02:48:02] <FromDiscord> <michaelb.eth> that makes life simpler
[02:48:15] <FromDiscord> <Elegantbeef> I basically just want to get away from `myNimNode[1][3][0][3]` shit
[02:48:20] <FromDiscord> <Elegantbeef> Congrats
[02:48:21] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[02:49:16] <FromDiscord> <Elegantbeef> Cause this API is nice and nifty 😛 https://github.com/beef331/micros/blob/master/tests/test1.nim#L66-L86
[02:54:24] <FromDiscord> <Elegantbeef> @auxym\: if you have any questions feel free to ask
[02:55:10] <FromDiscord> <auxym> ty!
[02:56:07] <FromDiscord> <auxym> and yes, I'm looking to get away from manually checking if every nimnode passed in is what I expected, and using {.error.} everywhere
[02:56:48] <FromDiscord> <Elegantbeef> Ah yea the `utils` module has some helpful templates
[02:57:10] <FromDiscord> <Elegantbeef> https://github.com/beef331/micros/blob/master/src/micros/definitions/routines.nim#L13-L20 for an api usage of them
[02:57:45] <FromDiscord> <Elegantbeef> You can also do like `n.checkit 1..3, {nnkStmtList, nnkIdent, nnkIntLit}` for instance
[03:00:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:01:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:03:06] <FromDiscord> <Elegantbeef> What's the DSL for anyway?
[03:12:36] <FromDiscord> <auxym> toying around with a macro that generates a cooperative scheduler (/ event queue-ish thing) for embedded applications
[03:13:08] <FromDiscord> <Elegantbeef> Ah
[03:29:51] *** Joins: vicfred (~vicfred@user/vicfred)
[03:30:17] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:42] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:42:36] *** Quits: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:30:26] <NimEventer> New thread by Exelotl: Using arc with C types?, see https://forum.nim-lang.org/t/9006
[04:34:02] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[04:38:48] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[05:00:12] <FromDiscord> <Equinox> hi
[05:00:18] <FromDiscord> <Elegantbeef> Hello
[05:01:19] <FromDiscord> <Equinox> I just started learning nim yesterday and I really like it so far
[05:01:37] <FromDiscord> <Equinox> I am more of a rust programmer
[05:01:39] <FromDiscord> <Elegantbeef> Nice, I assume there is a question coming up 😛
[05:01:46] <FromDiscord> <Equinox> nope
[05:02:04] <FromDiscord> <Elegantbeef> Damn, shame
[05:02:42] <FromDiscord> <Elegantbeef> Well anyway welcome, and have fun
[05:02:44] <FromDiscord> <Equinox> In reply to @Elegantbeef "Damn, shame": ok fine, how do I print goodbye world? I know how to print hello world but goodbye world seems far more difficult
[05:02:55] <FromDiscord> <Elegantbeef> It's vastyl more difficult
[05:02:59] <FromDiscord> <Elegantbeef> vastly\
[05:03:18] <FromDiscord> <Elegantbeef> You need to know how to leave to do it, so it's only an expert move
[05:03:27] <FromDiscord> <Equinox> In reply to @Elegantbeef "It's vastyl more difficult": Yeah that's why I was hoping someone with more experience with such topics could explain it
[05:05:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Sap
[05:05:01] <FromDiscord> <Elegantbeef> It's very complicated and techincal
[05:06:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/mwe
[05:06:37] <FromDiscord> <Elegantbeef> Cant win them all
[05:08:21] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3Saq
[05:08:50] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3Sar
[05:09:11] <FromDiscord> <Elegantbeef> As it should
[05:09:28] <FromDiscord> <Elegantbeef> @Equinox\: so what's your main focus?
[05:09:29] <FromDiscord> <Equinox> sent a code paste, see https://paste.rs/sHG
[05:09:35] <FromDiscord> <Elegantbeef> It echos then dereferences nil
[05:09:38] <FromDiscord> <Elegantbeef> So it errors
[05:09:51] <FromDiscord> <Equinox> In reply to @Elegantbeef "<@400159322333642752>\: so what's your": I don't have one
[05:09:59] <FromDiscord> <Equinox> I just do whatever sounds cool at the time
[05:10:12] <FromDiscord> <Equinox> recently I've been doing some graphics programming in rust and that's been pretty fun
[05:10:16] <FromDiscord> <Elegantbeef> `cast[ptr int](0)[]` is the C equivlent of `((int)(0))` or w/e
[05:10:50] <FromDiscord> <Elegantbeef> Exelotl will corrrect me on the dereferencing, I dont write C
[05:10:55] <FromDiscord> <Elegantbeef> Ah graphics programming is fun
[05:11:07] <FromDiscord> <Equinox> In reply to @Elegantbeef "`cast[ptr int](0)[]` is the": at least with nim you can read it when you error out the program
[05:11:18] <FromDiscord> <Equinox> C looks like gibberish to me
[05:11:19] <FromDiscord> <Elegantbeef> Indeed
[05:11:49] <FromDiscord> <Elegantbeef> In Nim you also know you're doing something "unsafe" since you use `cast` and `ptr` which are not "safe"
[05:12:26] <FromDiscord> <Equinox> In reply to @Elegantbeef "In Nim you also": Yeah that's nice
[05:12:38] <FromDiscord> <Elegantbeef> Have you made any basic programs in Nim you want to get screamed at about, I love crushing developers dreams
[05:13:06] <FromDiscord> <Equinox> In reply to @Elegantbeef "Have you made any": Oh I have, I wrote a tic tac toe game, it's probably the worst one I have ever written
[05:13:11] <FromDiscord> <Equinox> There is no error checking
[05:13:15] <FromDiscord> <Equinox> no dialog
[05:13:17] <FromDiscord> <Elegantbeef> Let's see it
[05:13:39] <FromDiscord> <Equinox> sent a code paste, see https://play.nim-lang.org/#ix=3Sau
[05:13:49] <FromDiscord> <Equinox> yes Board has a player and the win status
[05:13:54] <FromDiscord> <Elegantbeef> First mistake `method` is for dynamic dispatch
[05:14:00] <FromDiscord> <Elegantbeef> `proc` is what you want
[05:14:10] <FromDiscord> <Equinox> In reply to @Elegantbeef "`proc` is what you": wait does it work the same?
[05:14:15] <FromDiscord> <Elegantbeef> Yes
[05:14:18] <FromDiscord> <Equinox> oh
[05:14:19] <FromDiscord> <Equinox> that's cool
[05:14:26] <FromDiscord> <Elegantbeef> Nim has UFCS so a proc can be called `a.b()` or `b(a)`
[05:14:38] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#procedures-method-call-syntax
[05:14:42] <FromDiscord> <Equinox> In reply to @Elegantbeef "Nim has UFCS so": yeah that's really cool
[05:14:58] <FromDiscord> <Eshoe> I'm also new to nim. I like it so far, but the IDE experience is really hurting my progress so far. I usually use emacs for all languages, but for some reason `nimsuggest` is broken under emacs for me.
[05:15:01] <FromDiscord> <Elegantbeef> You also dont need to annotated `: void` for procs
[05:15:28] <FromDiscord> <Equinox> In reply to @Elegantbeef "You also dont need": ok
[05:16:09] <FromDiscord> <Elegantbeef> That check win is a funny proc
[05:16:19] <FromDiscord> <Equinox> In reply to @Elegantbeef "That check win is": it's beautiful
[05:16:37] <FromDiscord> <Equinox> solid block of else if statements
[05:17:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Saw
[05:18:25] <FromDiscord> <Equinox> that does look nicer
[05:20:35] <FromDiscord> <Elegantbeef> @Rika\: do you use emacs i dont recall?
[05:21:23] <FromDiscord> <whee> In reply to @Eshoe "I'm also new to": I had problems with nimsuggest and VSCode/Windows. Ended up using nimlsp instead, which seems to be working pretty well. Might be worth a shot if Emacs has LSP support
[05:21:40] <FromDiscord> <Elegantbeef> Which vscode extension did you use whee?
[05:21:57] <FromDiscord> <Equinox> I am just using the main nim extension and it works fine
[05:22:11] <FromDiscord> <Elegantbeef> NimSaem's is the best imo
[05:22:22] <FromDiscord> <Elegantbeef> It's the original ported to Nim and updated
[05:22:36] <FromDiscord> <whee> In reply to @Elegantbeef "Which vscode extension did": https://marketplace.visualstudio.com/items?itemName=nimsaem.nimvscode↵↵It was spawning a new nimsuggest process for every keypress
[05:22:57] <FromDiscord> <Elegantbeef> You do need to set it up properly
[05:23:01] <FromDiscord> <Elegantbeef> https://github.com/saem/vscode-nim#code-completion
[05:23:28] <FromDiscord> <Elegantbeef> There is also `nim.project` which you can list thee "entry" files
[05:23:37] <FromDiscord> <Elegantbeef> This prevents nimsuggest from eating your CPU
[05:24:51] <FromDiscord> <Eshoe> There is `LSP`support, but not with `eglot` mode which I prefer.↵The problem I have with `nimsuggest`, under `flycheck-mode`, is that it sometimes just stops working, or gets stuck on older messages until I restart `flycheck`, which is pretty annoying.
[05:29:44] <FromDiscord> <whee> In reply to @Elegantbeef "There is also `nim.project`": Is a nimble package enough to get it to work? I created one of those, but maybe it was after I gave up on VSCode/nimsuggest
[05:31:11] <FromDiscord> <Elegantbeef> @Equinox\: i couldnt help myself https://play.nim-lang.org/#ix=3Saz
[05:31:12] <FromDiscord> <Elegantbeef> Damn it i always include useless imports
[05:31:13] <FromDiscord> <Elegantbeef> `sequtils` isnt used
[05:31:37] <FromDiscord> <Elegantbeef> Personally i've been using kate + LSP recently and it's nice, though one downside is no error reporting
[05:32:12] <FromDiscord> <Elegantbeef> It might be enough, if it doesnt play nicely i generally give it an entry file and it then works
[05:32:13] <FromDiscord> <Elegantbeef> It depends on your file structure
[05:32:23] <FromDiscord> <Elegantbeef> It's hard to reason automatically what is the entry file at times
[05:32:26] <FromDiscord> <Equinox> In reply to @Elegantbeef "<@400159322333642752>\: i couldnt help": nice
[05:32:36] <FromDiscord> <Equinox> Thanks for the tips it helps a lot
[05:33:08] <FromDiscord> <Equinox> Should probably also add a checker to ensure the move is valid
[05:35:36] <FromDiscord> <Eshoe> I have kate + LSP set up. It is pretty nice and responsive. But relying just on the compiler to warn  me or give me errors is maybe too old school for me.
[05:36:46] <FromDiscord> <Elegantbeef> \I messed up and didnt do `currentPlayer: Ecks..Ooos` To really make it complete 😛
[05:36:46] <FromDiscord> <Elegantbeef> Current player can never be `None` so any attempt at assigning it to None should error!
[05:36:47] <FromDiscord> <Elegantbeef> @whee\: the project isnt open is it? Can see how it behaveshere
[05:38:18] <FromDiscord> <Elegantbeef> Yea that's a simple `x in 0..8 and board[x] == None`
[05:38:18] <FromDiscord> <Elegantbeef> Oh i agree Eshoe, it's a bug somewhere either Kate or NimLsp, pmunch(nimlsp author) thinks the Kate LSP might be sending a bad request
[05:38:27] <FromDiscord> <Elegantbeef> I looked at it briefly but didnt get anywhere, do want to try to get proper diagnostics
[05:38:32] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:39:35] <FromDiscord> <Elegantbeef> Nimlsp strictly adheres to the spec so kate might have something simple that needs fixed
[05:40:27] <FromDiscord> <Elegantbeef> you could always look into it aswell 😛
[05:46:24] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 268 seconds)
[05:58:48] *** Joins: xet7 (~xet7@user/xet7)
[06:11:02] <NimEventer> New Nimble package! naylib - Yet another raylib Nim wrapper, see https://github.com/planetis-m/naylib
[06:16:19] <FromDiscord> <michaelb.eth> sent a long message, see http://ix.io/3SaF
[06:16:34] <FromDiscord> <michaelb.eth> (edit) "http://ix.io/3SaF" => "http://ix.io/3SaG"
[06:16:46] <FromDiscord> <michaelb.eth> (edit) "http://ix.io/3SaG" => "http://ix.io/3SaH"
[06:18:39] <FromDiscord> <Elegantbeef> Are you only using that API and the `cAlloc`/`cFree`?
[06:18:52] <FromDiscord> <michaelb.eth> wdym?
[06:19:16] <FromDiscord> <Elegantbeef> You're not using anything that else that'd allocate?
[06:20:16] <FromDiscord> <Elegantbeef> The behaviour you're describing sounds like you're using Nim native collections with the API and the allocations of those arent getting returned to the OS
[06:21:08] <FromDiscord> <michaelb.eth> In my Nim program using my wrapper, I do create a lot of data on the fly in terms of `seq[seq[byte]]`. However, if I disable the calls to the wrapped lib so I'm just doing Nim stuff, the memory consumption is small, relatively speaking.
[06:21:13] <FromDiscord> <Elegantbeef> you can always try `-d:usueMalloc`
[06:21:20] <FromDiscord> <Elegantbeef> `-d:useMalloc`\
[06:21:51] <FromDiscord> <Elegantbeef> That doesnt use Nim's custom allocator so it should return resources instead of hold onto them
[06:24:52] <FromDiscord> <michaelb.eth> `-d:useMalloc` doesn't make any difference afaict
[06:24:59] <FromDiscord> <michaelb.eth> same steady growth of mem consumption
[06:29:54] <FromDiscord> <Elegantbeef> I can only imagine either the compiler has a bug or you didnt translate properly
[06:31:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[06:36:57] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[06:43:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[06:45:53] *** Joins: rockcavera (~rc@192.12.112.228)
[06:45:53] *** Quits: rockcavera (~rc@192.12.112.228) (Changing host)
[06:45:53] *** Joins: rockcavera (~rc@user/rockcavera)
[06:47:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:49:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:50:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:25:24] <termer> Elegantbuuf I wanna say thanks again for your advise the other day on using channels. It took me a long time, but I finally solved all of my threading issues and entirely eliminated transient Futures from threading code. I couldn't have done that without your advice so I'm very grateful
[07:25:40] <termer> I tested my server with 1k concurrent connections, and there were 0 issues
[07:26:15] <FromDiscord> <Elegantbeef> Nice!
[07:53:40] <retronav> hi, i'm trying to parse rfc3339 timestamps. how do i parse using multiple formats? is there a function for that or its trial-and-error?
[07:53:53] <FromDiscord> <Elegantbeef> Termer just realized the destruction of my name 😀
[07:54:16] <FromDiscord> <Elegantbeef> What's that timestamp look like?
[07:54:54] <retronav> Either 2022-03-11T13:15:25.320+00:00 or 2022-03-11T13:15:25+00:00
[07:55:14] <retronav> You may refer to https://datatracker.ietf.org/doc/html/rfc3339#section-5.8 for examples
[07:55:47] <FromDiscord> <Elegantbeef> Looks like one would need to use the times.parse for each possible version
[07:56:14] <retronav> ok
[07:56:27] <retronav> so a try except for each pattern?
[07:56:35] <FromDiscord> <Elegantbeef> Yea
[07:56:46] <retronav> makes sense
[07:59:18] <retronav> Elegantbeef I found a package that does what i want (https://nimble.directory/pkg/rfc3339) but looks like nimble says "Package not found"
[07:59:42] <FromDiscord> <Elegantbeef> It's still alive
[08:00:27] <FromDiscord> <Elegantbeef> Ugh i hate that package already `  ## Sets the month to a given amount, which must be within [1, 12]`
[08:01:22] <retronav> 😅
[08:01:26] <FromDiscord> <Elegantbeef> Apparently `month: 1..12` is too hard
[08:02:04] <FromDiscord> <Elegantbeef> And they manually do bitsets
[08:03:16] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:05:04] <FromDiscord> <Elegantbeef> Well i guess if the library works for you disregard my outrage 😛
[08:06:10] <retronav> Elegantbeef if i manage to install it in the first place; i'm trying to configure nimble
[08:06:22] <FromDiscord> <Elegantbeef> `nimble -v`?
[08:06:26] <retronav> if you have any other solutions/libs in mind please let me know :)
[08:06:35] <retronav> nimble v0.13.1
[08:06:46] <FromDiscord> <Elegantbeef> Hmm that's modern
[08:06:59] <FromDiscord> <Elegantbeef> I just installed it so you have something wrong
[08:07:31] <FromDiscord> <Elegantbeef> I mean the library seems fine, just not very idiomatic and does some weird things
[08:07:43] <retronav> added nimble.directory in the config but its not doing the job; maybe something wrong with my system
[08:07:46] <FromDiscord> <Elegantbeef> How are you trying to install it?
[08:08:01] <FromDiscord> <Elegantbeef> You dont need to add nimble.directory to the the config
[08:08:51] <FromDiscord> <Elegantbeef> `https://github.com/nim-lang/packages/raw/master/packages.json` is all you need
[08:09:01] <retronav> i'm trying by 3nimble install rfc333999 it would say "Package not found"
[08:09:18] <FromDiscord> <Elegantbeef> your `.config/nimble/nimble.ini` looks like?
[08:09:44] <retronav> wait i'll check
[08:11:59] <retronav> ah i don't have one lol
[08:12:13] <FromDiscord> <Elegantbeef> Well there you go
[08:12:36] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3SaX here's mine
[08:12:52] <FromDiscord> <Elegantbeef> Dont know why it's' so polluted, but yea
[08:13:08] <FromDiscord> <Elegantbeef> Anyway i'm going to fork and PR this time library so thanks for that 😛
[08:13:31] <retronav> :)
[08:15:47] <FromDiscord> <Elegantbeef> Ah nevermind, really feel like the `times` module works just aswell
[08:16:15] <FromDiscord> <Elegantbeef> Was going to but realized i was just replicating `times`
[08:19:37] <FromDiscord> <Elegantbeef> Like you can easily make your own parser then call `initDateTime` to prevent the try except method, seems more sane than making that package idiomatic to me
[08:20:50] <retronav> i'll probably do that, package seems to have no documentation
[08:21:04] <retronav> can't figure out what to use
[08:21:10] <retronav> but thanks for sticking around :D
[08:24:29] <FromDiscord> <Elegantbeef> There is a parse function somewhere in it
[08:25:02] <FromDiscord> <Elegantbeef> `toDate`
[08:29:11] <retronav> ah yes
[08:29:13] <retronav> got that
[08:34:33] <retronav> now converting its return type to `Time`
[08:35:33] <retronav> ah nvm i don't need to that
[08:38:40] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:40:05] <termer> <Elegantbeef> Termer just realized the destruction of my name 😀
[08:40:09] <termer> ahahaha I mistyped
[08:40:26] <FromDiscord> <Elegantbeef> I am buuf now
[08:40:36] <termer> I've been trying to fix my bad habits in typing accumulated over years so properly relearning has caused an uptick in typos
[08:40:51] <FromDiscord> <Elegantbeef> Oh trying to touch type properly?
[08:41:12] <termer> I could always touch type but my right fingers never were proper
[08:41:18] <FromDiscord> <Elegantbeef> I only properly type with my left hand, my right hand uses like the first two fingers
[08:41:23] <FromDiscord> <Elegantbeef> Aw shit, same!
[08:41:30] <termer> yeah I don't get why
[08:41:40] <termer> so I've been making a concerted effort to fix it
[08:42:32] <termer> Now that I've really gotten deep into Nim I keep wanting to rewrite all my little things in it lol
[08:42:53] <termer> particularly all the things I've got around running on javascript
[08:43:08] <termer> anything dynamically typed is really easy to begin with but maintenance down the road becomes difficult
[08:43:19] <termer> and I've continuously seen that with JS
[08:44:26] <FromDiscord> <Elegantbeef> I know the reason I do, too much playing competitive games, in a hurry not having to situate all fingers is quicker
[08:45:10] <FromDiscord> <Elegantbeef> Ah, never really been one for dynamic languages
[08:45:21] <FromDiscord> <Elegantbeef> Especially now with my love of distinct and subrange types i doubt i ever will be
[08:45:40] <FromDiscord> <Generic> dynamic languages are just a hotfix for bad generics
[08:46:09] <FromDiscord> <Elegantbeef> I agree with that sentiment
[08:47:01] <termer> pretty apt for someone with the name "Generic" to say
[08:47:03] <FromDiscord> <Elegantbeef> And i mean i generally dont find myself slowed down with the typesystem, it's never the reason i'm writing code slowly
[08:47:11] <FromDiscord> <Elegantbeef> I say they're a plant
[08:47:14] <termer> Nim generics have been like nothing I've ever used before
[08:47:17] <FromDiscord> <Elegantbeef> for the generic corp
[08:47:28] <termer> they feel like dynamic but are completely typesafe
[08:47:41] <FromDiscord> <Elegantbeef> I wrote C# before Nim, so I'm partially used to them, but C#'s generics are only for classes so are shite
[08:47:52] <FromDiscord> <Elegantbeef> Ideally you constrain generics with a concept imo
[08:47:54] <termer> I came from Java
[08:47:59] <FromDiscord> <Generic> the best thing are C++ies getting used to constexpr and auto etc.
[08:48:00] <termer> so similar situation
[08:48:17] <FromDiscord> <Generic> I find all those things super convoluted and limited in C++
[08:48:32] <termer> I never learned C++ cause everytime I started on it I found out the package system was shit
[08:48:48] <FromDiscord> <Generic> but they think they're inventing all that stuff
[08:49:03] <termer> C++ just sucks from every side I've looked at it
[08:49:09] <termer> C is ok but old
[08:49:17] <termer> I don't mind C for some limited scopes
[08:49:24] <FromDiscord> <Generic> C++ can be used pretty well as a better C
[08:49:36] <termer> whenever I write C++ I write it like C
[08:49:37] <FromDiscord> <Elegantbeef> I'd rather use Odin or Zig over C
[08:49:39] <FromDiscord> <Generic> or C with namespaces if you will so
[08:49:42] <termer> and use as little C++ as possible
[08:49:58] <FromDiscord> <Generic> obviously if I have free choice I don't write C++ either
[08:50:04] <FromDiscord> <Generic> but this is not the world we live in
[08:50:08] <termer> :)
[08:50:17] <termer> I write JavaScript all day
[08:50:19] <termer> it sucks
[08:50:24] <FromDiscord> <Elegantbeef> It's the one i live in, oh wait i dont write code professionally
[08:50:37] <FromDiscord> <Generic> me neither
[08:50:51] <termer> I write code professionally and you don't get to choose your tools in the vast majority of cases
[08:50:58] <FromDiscord> <Generic> but there are some existing projects I contribute to which are written in C+b
[08:51:13] <termer> I did meet one dude who sponsored one of my nim projects though which was awesome
[08:51:22] <FromDiscord> <Generic> cool
[08:51:27] <FromDiscord> <Generic> what was it?
[08:51:38] <termer> I'm writing a realtime video server
[08:51:43] <termer> a client and server
[08:51:59] <FromDiscord> <Generic> how much do you deal with video data yourself?
[08:52:26] <termer> Well I haven't gotten to handling the raw data yet but I'm going to need to parse MPEGTS segments myself most likely
[08:52:38] <termer> I'd love to use ffmpeg libraries but the documentation is just horrible so I'm a little limited with that
[08:52:45] <FromDiscord> <Generic> ah
[08:53:05] <FromDiscord> <Generic> I never worked with video data, but I would like to some day
[08:53:13] <termer> Video is really interesting
[08:53:16] <FromDiscord> <Generic> I'm just too stupid for all that signal theory stuff
[08:53:30] <termer> I've built several video sites like YT before but most of them just interface with ffmpeg
[08:53:54] <FromDiscord> <Elegantbeef> inb4 you didnt use libffmpeg but used the CLI application 😀
[08:54:01] <termer> the worst task is dealing with people who upload RETARDED BROKEN VIDEOS ALL THE TIME
[08:54:07] <termer> yeah I did
[08:54:13] <termer> you don't need to interface with the lib most of the time
[08:54:31] <FromDiscord> <Elegantbeef> Eh it's cleaner to not have to deal with a shell
[08:54:39] <termer> the CLI is really good but people are stupid and don't specify which version
[08:54:45] <termer> so you'll get conflicts from versions
[08:54:51] <termer> and nobody seems to build their own ffmpeg
[08:55:10] <termer> so between deployments you'll have people using different versions and running into old bugs that were fixed with newer versions
[08:55:31] <termer> I recently dealt with this and had to backport fixes specifically for the version they were using
[08:55:39] <FromDiscord> <Elegantbeef> lol
[08:56:33] <termer> steam has a really successful realtime video streaming system built on FFmpeg
[08:56:45] <termer> but it's all closed source so I can only guess what they're doing
[08:56:59] <FromDiscord> <Elegantbeef> I'd like to believe all streaming is based on ffmpepg
[08:57:04] <termer> most is
[08:57:17] <termer> sometimes more rudimentary things are based on gstreamer
[08:57:20] <termer> especially audio
[08:58:11] <termer> gstreamer is simpler and better documented but not as many features and supported codecs
[08:58:20] <termer> ffmpeg just supports everything basically if you compile with the right flags
[09:27:07] <NimEventer> New thread by Kaushalmodi: Blog post: Binding Nim to C++ std::list, see https://forum.nim-lang.org/t/9007
[09:35:29] <FromDiscord> <Rika> In reply to @Elegantbeef "<@259277943275126785>\: do you use": i do not
[09:35:35] <FromDiscord> <Rika> i use neovimm
[09:36:05] <FromDiscord> <Rika> i hope no one else pinged me so far up since im not reading all of that
[09:50:35] *** Joins: vicfred (~vicfred@user/vicfred)
[09:51:46] *** Joins: vicfred_ (~vicfred@user/vicfred)
[09:53:33] *** Quits: vicfred_ (~vicfred@user/vicfred) (Client Quit)
[09:55:06] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 252 seconds)
[10:11:16] <NimEventer> New Nimble package! niprefs -  A dynamic preferences-system with a table-like structure for Nim., see https://github.com/Patitotective/niprefs
[10:18:06] <nrds> <06Prestige99> @Rika do you have issues with nimsuggest with neovim? If you're using nimlsp like me
[10:18:29] <FromDiscord> <Rika> thats the thing, i pretty much dont use it; the plugin restarts it for me if it crashes though
[10:18:32] <FromDiscord> <Rika> i dont use nimlsp
[10:18:39] <FromDiscord> <Rika> i dont care what i use as long as it works better
[10:19:03] <nrds> <06Prestige99> Do you have any sort of error reporting while editing?
[10:19:17] <FromDiscord> <Rika> no
[10:19:18] *** Joins: Jjp137 (~Jjp137@2603-8000-1700-5881-02e9-3aff-fe42-7355.res6.spectrum.com)
[10:19:18] <FromDiscord> <Rika> i dont use that
[10:19:28] <FromDiscord> <Rika> nimsuggest is shoddy wit hthat
[10:19:30] <nrds> <06Prestige99> interesting
[10:19:38] <nrds> <06Prestige99> Yeah I get a lot of false errors
[10:20:09] <nrds> <06Prestige99> Well, since 1.6.0
[10:20:17] <FromDiscord> <Rika> nimsuggest is just a mess
[10:20:24] <FromDiscord> <Rika> dont use it at all i would really say
[10:20:56] <nrds> <06Prestige99> What are you using with neovim?
[10:20:57] <FromDiscord> <Rika> yall say "oh but if more people use it more bugs will be fixed" nah man the whole fuckin implementation is borked so unless some kind soul is willing to reimplement it
[10:21:00] <FromDiscord> <Rika> just dont bother
[10:21:03] <FromDiscord> <Rika> nim.nvim
[10:24:08] <nrds> <06Prestige99> I hear IC is supposed to greatly help editor support somehow, I pray that's the case
[10:24:23] <nrds> <06Prestige99> so many people don't adopt nim because of bad editor support
[10:30:34] <FromDiscord> <Phil> Didn't stop me, though good intellisense would've been liked
[10:30:54] <FromDiscord> <Phil> Having red squiggly lines where the compiler screams at me as a bare fundamental is really nice though
[10:31:25] <FromDiscord> <Elegantbeef> Comically I've had more issues with compiler bugs than nimsuggest
[10:31:30] <nrds> <06Prestige99> I've had a lot of people try nim and not continue because editor support, unfortunately
[10:40:48] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[10:43:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[10:45:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[11:03:09] <FromDiscord> <Equinox> Why is everyone here a bot?
[11:03:44] <FromDiscord> <Rika> because theyre bridged from another chat service by a bot
[11:04:19] <FromDiscord> <Equinox> Oh, I see, which one?
[11:04:38] <FromDiscord> <Rika> irc matrix gitter(not sure if this still exists)
[11:04:45] <FromDiscord> <Rika> the one from irc says irc
[11:04:49] <FromDiscord> <Rika> otherwise its matrix
[11:05:55] <FromDiscord> <Elegantbeef> gitter exists but is now matrix backed
[11:13:21] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[11:15:15] *** Joins: toulene (~toulene@user/toulene)
[11:23:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[11:26:12] *** Joins: toulene (~toulene@user/toulene)
[11:54:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:03:41] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[12:14:35] *** Joins: toulene (~toulene@user/toulene)
[12:24:24] <FromDiscord> <elaykph> any tips on making smaller binaries :>
[12:24:51] <FromDiscord> <Elegantbeef> Didnt i already give all the flags?
[12:25:06] <FromDiscord> <elaykph> ooh, like the `-d` flags?
[12:25:23] <FromDiscord> <Elegantbeef> `-d:lto -d:danger --gc:arc --opt:size --passC:"-march=native"`
[12:25:24] <FromDiscord> <Rika> yeah "release" "lto" etc
[12:25:28] <FromDiscord> <Rika> opt size
[12:25:29] <FromDiscord> <elaykph> nice
[12:25:30] <FromDiscord> <Rika> arc yeah
[12:25:32] <FromDiscord> <elaykph> thx :)
[12:25:32] <FromDiscord> <Elegantbeef> those in theory should make the smallest possible binary
[12:25:38] <FromDiscord> <Rika> -d:strip
[12:26:09] <FromDiscord> <Elegantbeef> Was it you or someone else that was asking this earlier?
[12:26:17] <FromDiscord> <elaykph> In reply to @Elegantbeef "Was it you or": im sure that wasnt me
[12:26:30] <FromDiscord> <elaykph> smol world lmao
[12:27:07] <FromDiscord> <enthus1ast> nim binaries are quite small already, why you need smaller ones?
[12:28:12] <FromDiscord> <enthus1ast> another option is to pack them via upx
[12:28:12] <FromDiscord> <enthus1ast> to also pack them via upx
[12:28:40] <FromDiscord> <Elegantbeef> I feel like UPX is how you get even more malware detection
[12:28:47] <FromDiscord> <enthus1ast> sure \:)
[12:28:57] <FromDiscord> <Rika> upx is not reliable
[12:29:16] <FromDiscord> <Rika> In reply to @Elegantbeef "I feel like UPX": no, there is something to mitigate that
[12:29:36] <FromDiscord> <Rika> https://en.wikipedia.org/wiki/Software_taggant
[12:29:39] <FromDiscord> <elaykph> In reply to @enthus1ast "nim binaries are quite": smoller sounds better
[12:29:45] <FromDiscord> <Rika> not that upx uses it, im not sure
[12:29:47] <FromDiscord> <elaykph> so i can dm my discord frens without reaching 8mb
[12:29:51] <FromDiscord> <Rika> In reply to @elaykph "smoller sounds better": smaller can imply slower
[12:29:59] <FromDiscord> <elaykph> In reply to @Rika "smaller can imply slower": sadge
[12:30:01] <FromDiscord> <enthus1ast> you have an 8mb binary??
[12:30:03] <FromDiscord> <Elegantbeef> If your binary is 8MB you have a fucking problem
[12:30:09] <FromDiscord> <elaykph> In reply to @Elegantbeef "If your binary is": lmao
[12:30:17] <FromDiscord> <Rika> the hell did you put in your binary
[12:30:18] <FromDiscord> <elaykph> time to learn how to not write shitcode
[12:30:20] <FromDiscord> <Rika> image data?
[12:30:27] <FromDiscord> <elaykph> In reply to @Rika "image data?": 3d models :>
[12:30:32] <FromDiscord> <Elegantbeef> I have an entire game assets and sdl2 and it's not 8MB
[12:30:48] <FromDiscord> <elaykph> In reply to @elaykph "3d models :>": but like in json
[12:30:53] <FromDiscord> <enthus1ast> compress these models before you store them into the executable↵(@elaykph)
[12:30:55] <FromDiscord> <Elegantbeef> Well there's your problem, quit shipping shitty formats
[12:31:03] <FromDiscord> <Elegantbeef> use gltf2 like a normal person
[12:31:14] <FromDiscord> <elaykph> true true true
[12:31:16] <FromDiscord> <Elegantbeef> glb is a binary compact format
[12:31:26] <FromDiscord> <elaykph> In reply to @enthus1ast "compress these models before": 👌
[12:31:46] <FromDiscord> <elaykph> In reply to @Elegantbeef "glb is a binary": oh nice, i'll keep that in my notebook
[12:31:54] <FromDiscord> <enthus1ast> or put your binary into a zip folder \:)
[12:32:12] <FromDiscord> <elaykph> In reply to @enthus1ast "or put your binary": ✍️
[12:32:53] <FromDiscord> <enthus1ast> OR in addition to use a better format like beef mentioned use an installer (like nsis), or do not pack all the sutff into the exe
[12:33:08] <FromDiscord> <Elegantbeef> Code is generally small so it's never going to be the reason you're binaries are large
[12:33:16] <FromDiscord> <Rika> your
[12:33:23] <FromDiscord> <Elegantbeef> Yes
[12:34:51] <FromDiscord> <enthus1ast> or maybe another option, if you already have nim types for the 3d models, maybe you can store these in a const (instead of the json)
[12:35:35] <FromDiscord> <Elegantbeef> Alternatively move your friends to matrix as elements' free server file limit is  100mb
[12:35:36] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3Sbp
[12:35:45] <FromDiscord> <elaykph> woah
[12:35:53] <FromDiscord> <elaykph> sounds great
[12:35:55] <FromDiscord> <elaykph> thanks guys
[12:36:54] <FromDiscord> <Elegantbeef> Enthus any idea if there is a private message size limit, seems like probably a homeserver setting?
[12:37:16] <FromDiscord> <enthus1ast> mh, must check my homeserver config
[12:37:20] <FromDiscord> <Elegantbeef> I've not used private messages in element really so no clue if there even is one
[12:38:21] <FromDiscord> <enthus1ast> well there is\:↵#max\_upload\_size\: 50M
[12:38:43] <FromDiscord> <Elegantbeef> Ah so probably the same for the default matrix homeserver then
[12:39:01] <FromDiscord> <Elegantbeef> 100mb file for DM or free public server i guess
[12:39:03] <FromDiscord> <enthus1ast> yeah could be
[13:42:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[13:50:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:57:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:39:27] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[14:44:27] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[14:58:42] *** Quits: mahlon_ (~mahlon@martini.nu) (Ping timeout: 252 seconds)
[16:07:42] <FromDiscord> <DevNugget> sent a code paste, see https://paste.rs/USy
[16:12:09] <FromDiscord> <Rika> `words[2..^1]`
[16:12:38] <FromDiscord> <Rika> it is required to specify the second index, but there is a shortcut for the last (or nth from last) index
[16:12:44] <FromDiscord> <Rika> ^1 is last, 2 is 2nd from last, etc
[16:21:32] <FromDiscord> <DevNugget> Ah I see thank you very much!
[16:23:32] <FromDiscord> <tandy> does anyone have a nice algorithm for diff updating seqs?
[16:32:27] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[16:34:23] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 256 seconds)
[16:44:36] *** Joins: rockcavera (~rc@192.12.112.228)
[16:44:36] *** Quits: rockcavera (~rc@192.12.112.228) (Changing host)
[16:44:36] *** Joins: rockcavera (~rc@user/rockcavera)
[16:44:49] <FromDiscord> <Phil> Question regarding unittesting and testament
[16:45:45] <FromDiscord> <Phil> How do I use both?↵Prologue uses testament to essentially throw all tests into a single file and compile + run that (as apparently that's super fast) through testament (which appears to be a package?) but that does very much not play nice with writing normal unittests with suite's containing tests etc.
[16:46:20] <FromDiscord> <Phil> Which is something I'd very much like to keep for I believe it to be a best practice, you can express in the suite which proc you're testing and whether it's an integration test, while the test description allows you to express "Given - When - Then" stuff
[16:46:23] <FromDiscord> <enthus1ast> you can combine it
[16:47:04] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/nimja/blob/master/tests/basic/test_if.nim
[16:47:13] <FromDiscord> <enthus1ast> i do it quite often in nimja
[16:47:22] <FromDiscord> <Phil> It's just that apparently testament creates "outputExpected" and "outputGotten"
[16:47:38] <FromDiscord> <enthus1ast> testament is the only way afaik to test macro errors
[16:48:27] <FromDiscord> <Phil> and that starts not matching up once I write a test suite, I'll. xflywind wrote something about "Imo, you need to specify the output of stdout:"↵Not sure what that's about
[16:48:28] <FromDiscord> <enthus1ast> "  joinable\: false"↵let testament do not combine the test in the megatest.nim
[16:49:28] <FromDiscord> <Phil> Ohhh so the discard """ """ stuff contains testament instructions
[16:49:36] <FromDiscord> <enthus1ast> yes
[16:52:16] <FromDiscord> <enthus1ast> and eg here\: https://github.com/enthus1ast/nimja/blob/master/tests/basic/test_tokens_before_extend_error.nim↵↵i test for a macro error
[16:52:22] <FromDiscord> <enthus1ast> only way to test them
[16:53:04] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[16:53:17] *** Joins: toulene (~toulene@user/toulene)
[16:55:57] <FromDiscord> <Phil> So I specify the printed output of the tests in the "output" section in the discarded string
[16:56:06] <FromDiscord> <Phil> (edit) "So I specify the ... printed" 03added "expected"
[16:56:49] <FromDiscord> <Phil> In reply to @enthus1ast "and eg here\: https://github.com/enthus1ast/nimja/b": Huh, I'd have solely checked with "compiles" proc
[16:57:02] <FromDiscord> <Phil> Wait, you do that there
[16:57:15] <FromDiscord> <Phil> Gnaaaaa maybe I shouldn't be coding atm to distract myself when I can barely thing
[16:57:16] <FromDiscord> <Phil> (edit) "thing" => "think"
[17:01:35] <FromDiscord> <Phil> Okay, after starting at your code examples and the example of that in the nim std and the docs I think I got it working
[17:01:46] <FromDiscord> <Phil> It's a bit odd to have to copy paste the terminal output into that discard-string
[17:02:20] <FromDiscord> <Phil> But I'll take it over just using "block" for tests. Suite + Test imo are a best practice to use
[17:02:26] <FromDiscord> <enthus1ast> you do not need to do this, a testament test is mark as failed when the return code is != 0
[17:02:51] <FromDiscord> <enthus1ast> i only must do it because i want to test for a macro error
[17:02:55] <FromDiscord> <Phil> If I don't then prologue running tests screams at me
[17:04:53] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Scu
[17:05:13] <FromDiscord> <Phil> If I use this, it doesn't explode in my face:
[17:05:26] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Scv
[17:06:38] <FromDiscord> <Phil> I think the issue stems from the test somehow printing into the outputGotten file while not being considered in the outputExpected file ?
[17:07:50] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[17:08:09] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 256 seconds)
[17:08:34] *** Joins: xet7 (~xet7@user/xet7)
[17:12:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[17:30:26] <NimEventer> New thread by Mros: Return cstringArray from C functions in Nim, see https://forum.nim-lang.org/t/9009
[18:08:52] *** Joins: arkurious (~arkurious@user/arkurious)
[18:34:07] <FromDiscord> <Tanguy> Is there something similar to https://nim-lang.org/docs/macros.html#sameType%2CNimNode%2CNimNode but that takes into account inheritance?↵eg, like `of`
[18:35:52] <FromDiscord> <Tanguy> (edit) "`of`" => "`is`"
[18:42:33] *** Quits: oprypin (~irc@pryp.in) (Remote host closed the connection)
[18:45:41] *** Joins: oprypin (~irc@pryp.in)
[18:56:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[19:03:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:04:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:04:37] <NimEventer> New thread by Mardiyah: Determine  the last line of the template's insertion, see https://forum.nim-lang.org/t/9010
[19:12:13] *** Quits: Schnouki (e7aa4cfb39@user/schnouki) (Remote host closed the connection)
[19:12:13] *** Quits: toothlessgear (2c15493d69@user/toothlessgear) (Remote host closed the connection)
[19:12:33] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[19:12:56] *** Joins: toothlessgear (2c15493d69@user/toothlessgear)
[19:19:20] *** Joins: mahlon (~mahlon@martini.nu)
[19:39:57] <FromDiscord> <System64 ~ Flandre Scarlet> Why do I have this error? https://media.discordapp.net/attachments/371759389889003532/952961794840862740/unknown.png
[19:49:12] <FromDiscord> <Rika> `ptr` is a generic. if you want a void pointer you write `pointer`
[19:49:16] <FromDiscord> <Rika> (edit) 
[19:49:35] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[20:15:46] <FromDiscord> <tandy> is it possible to iterate over an OrderedTable for an index range like with a seq?
[20:15:58] <FromDiscord> <tandy> say i only want the first 5 values
[20:24:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[20:33:01] <nrds> <06Prestige99> I don't think so, but you could just do it manually by iterating and breaking after 5 elements
[20:33:38] <nrds> <06Prestige99> there's also the toSeq proc that converts an iterator to a seq, but it will convert all of the values which you probably don't want
[20:35:11] <FromDiscord> <ynfle> You can do table.pairs.toseq.pairs
[20:39:36] <FromDiscord> <untoreh> sent a code paste, see https://play.nim-lang.org/#ix=3SdU
[20:51:59] <FromDiscord> <retkid> is there like a pipreqs for nim
[20:52:15] <FromDiscord> <retkid> i can just go "magic ." and it spits out a dependency file
[20:52:19] <FromDiscord> <Rika> what is that
[20:52:20] <FromDiscord> <Rika> no
[20:52:28] <FromDiscord> <retkid> sad
[20:52:39] <FromDiscord> <Rika> packages can be named differently from the module names
[20:52:50] <FromDiscord> <retkid> i guess I'll have to put in the hours of time to write out the 4 packages
[20:52:54] <FromDiscord> <retkid> my handsss
[20:53:04] <FromDiscord> <retkid> 😭
[20:53:20] <FromDiscord> <retkid> sorry the 2
[21:09:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:09:25] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[21:13:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[21:14:39] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[21:24:39] *** Joins: Figworm (FiggyWitIt@user/figworm)
[21:34:35] <FromDiscord> <spoon> sent a code paste, see https://paste.rs/onO
[21:35:00] <FromDiscord> <spoon> why does including 1 in the range make it to where it only prints the first line, but all other ranges it prints all the lines?
[21:35:45] <FromDiscord> <spoon> if i do `recite(1,12)` it only prints the first day of christmas, but if i do `recite(2,12)` it prints all the lines second through twelfth
[21:43:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:46:19] <FromDiscord> <Rika> `recite(1,12)` goes to `if versei == 1: return "On the first day of Christmas my true love gave to me: a Partridge in a Pear Tree."` and finishes because it returned
[21:47:37] <FromDiscord> <spoon> lines 2-12 also have a return statement in a different spot, the function calls itself
[21:49:29] <FromDiscord> <spoon> like if i called `recite(2,3)`, it will still reach a return statement on line 8 and continue just fine
[21:52:24] <FromDiscord> <spoon> ohhh
[21:52:29] <FromDiscord> <spoon> nvm, i see now
[21:52:47] <FromDiscord> <Rika> lol
[21:52:54] <FromDiscord> <spoon> got it ty
[21:53:17] <Amun-Ra> that indentation tho…
[21:54:20] <FromDiscord> <spoon> it's not that weird, is it?
[21:55:25] <FromDiscord> <spoon> it's always the stupid mistakes that get me lol
[21:58:56] <FromDiscord> <Rika> its not
[21:59:00] <FromDiscord> <Rika> indentation is completely fine
[21:59:07] <FromDiscord> <Rika> but your whitespace usage is kinda
[21:59:40] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3Sem
[22:00:24] <FromDiscord> <spoon> it won't exit after the first result?
[22:00:33] <FromDiscord> <Rika> where
[22:00:37] <FromDiscord> <spoon> result is like a substitute for return, right?
[22:01:10] <FromDiscord> <Rika> yes but they are not the same
[22:01:13] <FromDiscord> <Rika> result is a variable
[22:01:20] <FromDiscord> <Rika> and when your function ends its whats returned
[22:01:41] <FromDiscord> <spoon> huh.
[22:02:55] <FromDiscord> <spoon> it does work, weird
[22:04:20] <FromDiscord> <spoon> i don't think i've seen an equivalent to that in any other language...?
[22:04:43] <FromDiscord> <Rika> thats because from what i know its very rare 😉
[22:04:58] <FromDiscord> <Rika> its prolly unique to nim
[22:05:08] <FromDiscord> <qb> and great ❤️
[22:05:32] <FromDiscord> <Rika> there are some issues though like returning a half-finished object
[22:05:37] <FromDiscord> <Rika> if you forget, for example
[22:05:52] <FromDiscord> <Rika> but thats not inherent to result i guess
[22:06:29] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[22:06:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[22:06:44] <FromDiscord> <spoon> i've had a few cases where i tried to create a new variable called result to return but then i remembered it's a special thing, i almost called final result too
[22:07:02] <FromDiscord> <Rika> well now you know
[22:09:01] <NimEventer> New thread by Shirleyquirk: Wrapping C++ iterators: {.nodecl.} for non-constructible iterators?, see https://forum.nim-lang.org/t/9011
[22:11:49] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Ses
[22:12:03] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "https://play.nim-lang.org/#ix=3Ses" => "https://play.nim-lang.org/#ix=3Set"
[22:13:48] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Seu
[22:16:03] <FromDiscord> <kiell> https://www.reddit.com/r/fsharp/comments/jo42yt/why_i_dont_choose_f/gbtoj09/
[22:16:22] <FromDiscord> <kiell> "nim docs look like they were written over the weekend in between partying."  whyd they have to do nim like that 💀
[22:26:51] <FromDiscord> <Rika> `{}` is set
[22:26:56] <FromDiscord> <Rika> `[]` is array]
[22:30:24] <FromDiscord> <soda> When passing a string along, is it more efficient to do it by ref?
[22:32:00] <FromDiscord> <huantian> Nim will automatically pass by ref if the object is big enough
[22:32:09] <FromDiscord> <soda> cool
[22:39:53] <FromDiscord> <soda> is there a generic filesystem entry iterator?
[22:40:09] <FromDiscord> <soda> Basically a way to check if an entry exists whether or not it's a file or dir, etc.
[22:40:33] <FromDiscord> <soda> equivalent of std::filesystem::exists(path)
[22:44:30] <FromDiscord> <qb> https://nim-lang.org/docs/os.html#dirExists%2Cstring ?
[22:45:44] <FromDiscord> <soda> A more generic version of this that covers inode
[22:45:56] <FromDiscord> <soda> instead of caring whether it's a file or dir, etc.
[22:48:00] <FromDiscord> <soda> sent a code paste, see https://play.nim-lang.org/#ix=3SeI
[22:49:47] *** Joins: daanb (~daanb@user/daanb)
[22:49:51] <daanb> hello
[22:52:04] *** Quits: daanb (~daanb@user/daanb) (Client Quit)
[22:53:35] <FromDiscord> <soda> nvm im dumb
[22:53:40] <FromDiscord> <soda> or blind
[22:53:49] <FromDiscord> <Daan Breur> I have a question about Threading in nim can anybody help?
[22:54:26] <FromDiscord> <Daan Breur> I would like to make n threads depending on some variable, but i cant seem to get it working to initialize threads to a sequence
[22:55:10] <FromDiscord> <Elegantbeef> `var threads = newSeq[Thread[ThreadArgType]](threadCount)`
[22:55:24] <FromDiscord> <Elegantbeef> `for thread in threads.mitems: createThread(thread, threadArg)`
[22:57:35] <FromDiscord> <Daan Breur> will try thanks
[22:57:38] <FromDiscord> <d4rckh> hank you
[22:57:41] <FromDiscord> <d4rckh> (edit) "hank you" => "thank you!"
[22:57:51] <FromDiscord> <Daan Breur> why is my boss here
[22:57:52] <FromDiscord> <Daan Breur> @d4rckh
[22:57:55] <FromDiscord> <Daan Breur> :kappa:
[22:58:02] <FromDiscord> <d4rckh> lol
[22:58:15] <FromDiscord> <d4rckh> get back to work!!
[22:58:34] <FromDiscord> <Daan Breur> im asking questions for you otherwise work aint getting done
[22:59:08] <FromDiscord> <d4rckh> i asked same question yesterday but no success 😦
[22:59:53] *** Joins: daanb (~daanb@user/daanb)
[23:00:30] <daanb> Imma test it now, stay strong
[23:02:54] <FromDiscord> <Daan Breur> sent a code paste, see https://paste.rs/wgO
[23:03:01] <daanb> doesnt work
[23:04:34] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Rika "`{}` is set": Ah alright
[23:07:57] <daanb> Elegantbeef, Thank you I got it working in the end!
[23:09:00] <FromDiscord> <System64 ~ Flandre Scarlet> And that? https://media.discordapp.net/attachments/371759389889003532/953014405698834482/unknown.png
[23:09:59] <FromDiscord> <Rika> should wor
[23:10:00] <FromDiscord> <Rika> k
[23:10:36] <FromDiscord> <auxym> i think you have to use `for i in wavetable.mitems`
[23:10:57] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[23:11:09] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @auxym "i think you have": Doesn't work too
[23:11:16] <FromDiscord> <auxym> the default `items` iterator is not `var`, therefore immutable, even if the thing is var
[23:11:35] <FromDiscord> <System64 ~ Flandre Scarlet> aaah alright
[23:12:21] *** Joins: [R] (~rs@genoce.org)
[23:13:38] <FromDiscord> <auxym> works in playground, with `mitems`, what error do you get?
[23:37:31] <FromDiscord> <System64 ~ Flandre Scarlet> It works with mitems
[23:41:49] <FromDiscord> <retkid> In reply to @System64 "is it normal when": spot the java programmer
[23:46:17] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @retkid "spot the java programmer": Yeah I admit
[23:46:27] <FromDiscord> <System64 ~ Flandre Scarlet> I did some Java (and I'm not a fan of java)
[23:46:41] <FromDiscord> <Phil> Hm? I actually do develop java and I don't see the point here
[23:46:50] *** Joins: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de)
[23:47:12] <FromDiscord> <Phil> Did you expect just being given a memory address?
[23:47:18] *** Quits: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de) (Client Quit)
[23:47:40] <FromDiscord> <Phil> (edit) "Did you expect ... justbe" 03added "to" | "being" => "be"
[23:48:10] <FromDiscord> <System64 ~ Flandre Scarlet> no, the value of the index
[23:48:24] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://paste.rs/Ts2
[23:48:27] *** Joins: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de)
[23:48:52] <FromDiscord> <Phil> If you want them to be int 8 you just have to specify that in the type of the variable and nim will automatically ensure that it's that type for you
[23:48:57] <FromDiscord> <Phil> Otherwise it just uses the default int type
[23:49:07] <FromDiscord> <retkid> the default type is 32
[23:49:08] <FromDiscord> <retkid> iirc
[23:49:13] <FromDiscord> <retkid> (right)
[23:49:18] <FromDiscord> <retkid> (edit) "(right)" => "(right?)"
[23:49:20] <FromDiscord> <Phil> Generally nim tries to hide away specific bit sizes behind a general int type
[23:49:29] <FromDiscord> <System64 ~ Flandre Scarlet> can I do ``.int8`` ?
[23:49:47] <FromDiscord> <retkid> wavetable.apply(x=>int8(x))
[23:49:53] <FromDiscord> <Phil> I'd just do `var wavetable: seq[int8] = "lala"`
[23:50:16] <FromDiscord> <retkid> mine is cooler
[23:50:26] <FromDiscord> <retkid> In reply to @retkid "wavetable.apply(x=>int8(x))": from sequtils
[23:50:54] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/953024948526522438/unknown.png
[23:50:59] <FromDiscord> <Phil> Ehhhhhh I need to think more when you start applying because I need to comprehend why you're doing the conversion
[23:51:19] <FromDiscord> <Phil> I don't like having to think more than the absolute minimum required to comprehend the idea behind the code
[23:51:35] <FromDiscord> <retkid> it makes sense to me when i see it
[23:51:36] <FromDiscord> <Phil> I prescribe to the anti-thought school of programming. The dumber your code the better
[23:52:01] <FromDiscord> <retkid> but i com https://media.discordapp.net/attachments/371759389889003532/953025227858788423/unknown.png
[23:52:04] <FromDiscord> <retkid> is this hard for you
[23:52:09] <FromDiscord> <retkid> >:)
[23:52:12] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Isofruit "I prescribe to the": this is a wavetable, a short sample if you want
[23:52:17] <FromDiscord> <Rika> In reply to @Isofruit "I'd just do `var": i dont remember this working
[23:52:21] <FromDiscord> <Rika> !eval var wavetable: seq[int8] = "lala"
[23:52:21] <FromDiscord> <retkid> ^
[23:52:23] <NimBot> Compile failed: /usercode/in.nim(1, 28) Error: type mismatch: got 'string' for '"lala"' but expected 'seq[int8]'
[23:52:37] <FromDiscord> <Rika> this works
[23:52:48] <FromDiscord> <Phil> wait, right, that's a string, ugh my brain
[23:52:50] <FromDiscord> <Rika> !eval var wavetable = [23'i8, 31, 31, 28, 27, 26, 19, 15, 19, 23, 17, 10, 9, 11, 8, 10, 20, 29, 28, 22, 19, 17, 9, 5, 8, 13, 8, 3, 2, 6, 5, 9 ]; echo typeof wavetable
[23:52:54] <NimBot> array[0..31, int8]
[23:53:10] <FromDiscord> <Phil> In reply to @System64 "this is a wavetable,": fixed array or seq?
[23:53:11] <FromDiscord> <retkid> var wavetable: array[0 .. 2, int8] = [1,2,3]
[23:53:17] <FromDiscord> <retkid> fg;kmgh
[23:53:19] <FromDiscord> <Rika> In reply to @retkid "var wavetable: array[0 ..": will not work
[23:53:20] <FromDiscord> <retkid> not var
[23:53:25] <FromDiscord> <Rika> not that either
[23:53:33] <FromDiscord> <Rika> !eval let wavetable: array[0 .. 2, int8] = [1,2,3]
[23:53:33] <FromDiscord> <retkid> whats wrong with it?
[23:53:36] <NimBot> Compile failed: /usercode/in.nim(1, 38) Error: type mismatch: got 'array[0..2, int]' for '[1, 2, 3]' but expected 'array[0..2, int8]'
[23:53:43] <FromDiscord> <retkid> you gotta do the =
[23:53:44] <FromDiscord> <retkid> not the :
[23:53:46] <FromDiscord> <Rika> no
[23:53:59] <FromDiscord> <Rika> `[1,2,3]` should have the type in it somewhere in the first element
[23:53:59] <FromDiscord> <retkid> !eval let wavetable = array[0 .. 2, int8] [1,2,3]
[23:54:02] <NimBot> Compile failed: /usercode/in.nim(1, 37) Error: type mismatch: got 'array[0..2, int]' for '[1, 2, 3]' but expected 'array[0..2, int8]'
[23:54:07] <FromDiscord> <retkid> sad
[23:54:10] <FromDiscord> <Rika> that could work
[23:54:16] <FromDiscord> <Rika> !eval let wavetable = array[0 .. 2, int8]([1,2,3])
[23:54:19] <NimBot> Compile failed: /usercode/in.nim(1, 36) Error: type mismatch: got 'array[0..2, int]' for '[1, 2, 3]' but expected 'array[0..2, int8]'
[23:54:26] <FromDiscord> <retkid> 😭
[23:54:28] <FromDiscord> <Rika> i guess they cant be converted
[23:54:32] <FromDiscord> <Rika> use the one i wrote
[23:54:48] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Isofruit "fixed array or seq?": fixed
[23:55:00] <FromDiscord> <retkid> yea for a fixed length array use rikas
[23:55:04] <FromDiscord> <Phil> array it is then, makes more sense than seq
[23:55:24] <FromDiscord> <Phil> seq is specifically for variable length, think Array vs List interface
[23:55:26] <FromDiscord> <retkid> Rika always got the good solutions :)
[23:55:50] <FromDiscord> <retkid> can i make a set of non integers
[23:55:52] <FromDiscord> <System64 ~ Flandre Scarlet> it works
[23:55:55] <FromDiscord> <retkid> i would like an arbitrary type set
[23:56:10] <FromDiscord> <Phil> HashSets exist
[23:56:45] <FromDiscord> <Rika> hashset
[23:56:46] <FromDiscord> <Rika> yeah
[23:56:59] <FromDiscord> <Rika> requirement is that your type should be hashable ofc
[23:58:05] <FromDiscord> <retkid> now, what does hashable mean in this contxt
[23:58:11] <FromDiscord> <retkid> context
[23:58:13] <FromDiscord> <Rika> has a hash proc
[23:58:23] <FromDiscord> <retkid> so no complex types?
[23:58:33] <FromDiscord> <Rika> complex types work if you implement a hash proc
[23:58:43] <FromDiscord> <Rika> `hash(obj: T): Hash`
[23:58:46] <FromDiscord> <retkid> how annoying is that?
[23:58:51] <FromDiscord> <Rika> https://nim-lang.org/docs/hashes.html
[23:59:07] <FromDiscord> <Rika> you can make a macro for it if you just want to hash all fields and combine that
[23:59:09] <FromDiscord> <Phil> You can always define a custom hash proc, it's not really difficult, you just got to be aware of when you specifically want a hash collision to happen (aka when you consider 2 objects equal)
[23:59:11] <FromDiscord> <Rika> so not very i'd say
