[00:00:32] *** Joins: deksar_ (~deksar@user/deksar)
[00:00:32] *** Quits: deksar (~deksar@user/deksar) (Killed (NickServ (GHOST command used by deksar_)))
[00:00:42] *** deksar_ is now known as deksar
[00:00:46] *** Quits: deksar (~deksar@user/deksar) (Client Quit)
[00:01:31] *** Joins: deksar (~deksar@user/deksar)
[00:03:13] <deksar> Hi there. I'm receiving;  Fatal error: Allowed memory size of 2147483648 bytes exhausted (tried to allocate 20480 bytes) in /usr/local/www/gazete/wp-includes/meta.php on line 1085 even though I have enough amount of memory set in php.ini, any idea? (Using WordPress)
[00:04:12] <da_wunder> so what is your setting in  php.ini ?
[00:04:59] <da_wunder> and area you sure that you've set it on the proper php.ini ? - usually cli and webserver use different php.ini files
[00:06:53] <da_wunder> and if that is for webserver - you could just create simple `info.php` file to your public folder with content like `<?php phpinfo();`and then just open that file on your browser and check what that memory limit is
[00:08:29] <deksar> da_wunder:  just created a phpinfo(); page and checked; memory_limit = 8096M
[00:11:55] <Sammitch> devil's advocate: have you considered addressing the fact that your thing is trying to use multiple GB of ram?
[00:13:14] <da_wunder> deksar: ok, so that is ok on webserver side then - so where do you get that "Fatal error: Allowed memory size of 2147483648 bytes exhausted (tried to allocate 20480 bytes)" error exactly ?
[00:13:34] <deksar> da_wunder: I get it on my WordPress blog page. Homepage
[00:14:03] * da_wunder hates WP
[00:14:40] <da_wunder> but really if your phpinfo is showing different value, then that WP must be changing that
[00:15:36] <da_wunder> and really if your http request needs so much RAM you're most likely doing something wrong - and I mean _totally_ wrong...
[00:17:57] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:19:42] *** Quits: Poboy (~Poboy@user/poboy) (Ping timeout: 256 seconds)
[00:20:50] <fakuve> Hi guys , yet again perseverance is the key , php the goal :D (that sounded a bit cheesy) . Ok I was just checking `var_dump` on an object and it actually list it's `private` and `protected` properties . What is the point then on restricting the access with the `->` notation if it can be accessed this way?
[00:22:45] <Sammitch> private and protected only control from what scope the properties can be accessed, do not assume any security or privacy connotations.
[00:24:31] <da_wunder> and also understand that `var_dump` is basically for debug stuff - you won't use that on normal application code
[00:25:03] *** Quits: jbarton (~tmtowtdi@pool-108-48-30-133.washdc.fios.verizon.net) (Quit: Leaving)
[00:26:24] <fakuve> Alright I see thanks Sammitch da_wunder !
[00:29:24] <fakuve> I was actually thinking in some malicious actor, running code with 'var_dump' and parsing that string output into the actual data , but I bet malicious actors wont be able to run code directly into `php`
[00:29:29] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:32:47] <Sammitch> ideally no, but it's up to you to avoid writing code that would introduce such a vulnerability and/or keeping up with updates to your installed apps.
[00:36:22] *** pizzaiolo is now known as pizza
[00:36:48] <fakuve> yep ok , but I would have to be careful as you said as it cannot be assumed security or privacy . ok Thanks Sammitch !
[00:45:46] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[00:47:07] *** Quits: pmercado (~pmercado@186.107.35.198) (Ping timeout: 250 seconds)
[00:48:05] <fakuve> So Basically a `__destruct()` destructor is usefull for "Rubbish collection"
[00:49:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-d185-26e8-90b8-bec9.res6.spectrum.com)
[01:11:44] <Blondie101010> most of the time it's not needed, but it's to do something when the instance is destroyed
[01:20:18] <fakuve> ok so `php` would free-up the memory taken up from the Instance as soon as this will not be executed anymore , anyways (no need for a destructor , a destructor will actually let you do something when we reach that point)
[01:20:33] <fakuve> I think that was called rubbish collection in JS , which is automatic on there
[01:23:54] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:33:08] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[01:37:29] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:39:54] <Blondie101010> you're confusing something
[01:40:13] <Blondie101010> the destructor is meant to do things that are not automatic, otherwise that would be pointless
[01:41:26] <__adrian> What is the point then on restricting the access with the `->` notation if it can be accessed this way (via var_dump)?  ← this is not "access"
[01:41:47] <__adrian> property visibility is not a security feature.
[01:41:57] <__adrian> it's about enforcing how your code works.
[01:41:59] <Blondie101010> well it can be
[01:42:24] <__adrian> it can be used to help, but on its own it is not
[01:42:34] * Blondie101010 nod
[01:44:19] <__adrian> re: destructors: they're for tear-down work, not for garbage collection
[01:44:31] <__adrian> you generally don't do your own gc in code
[01:49:34] *** Quits: dix_ (~super@user/dix) (Ping timeout: 265 seconds)
[01:55:29] *** Joins: s17 (~nobody@user/s17)
[01:56:03] <Sammitch> eg: you have an object that contains a socket connection to talk to a service. you might want to use the destructor to gracefully terminate the connection as opposed to the socket simply going out of scope and closing unexpectedly.
[02:10:08] *** Quits: Junxter (~Junxter@222.95.221.25) (Ping timeout: 268 seconds)
[02:16:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[02:16:17] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:18:58] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:43:36] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-d185-26e8-90b8-bec9.res6.spectrum.com) (Quit: Leaving.)
[02:44:51] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[02:49:30] *** Joins: semeion (~semeion@user/semeion)
[02:49:34] *** Quits: deksar (~deksar@user/deksar) (Quit: Going offline, see ya!)
[02:49:43] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Client Quit)
[03:01:56] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[03:18:00] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[03:33:19] *** Joins: nicolai10 (~nicolai.f@xdsl-213-196-249-25.nc.de)
[03:33:24] *** Joins: Poboy (~Poboy@user/poboy)
[03:34:37] <fakuve> alrights I see
[03:35:29] *** Quits: nifr (~nicolai.f@xdsl-89-0-106-125.nc.de) (Ping timeout: 252 seconds)
[03:39:32] <fakuve> Sorry , thisone is throwing an error unexpected variable "$path" https://termbin.com/hat0y . I can't see nothing wrong on there , I'm actually copying from  a tutorial
[03:40:16] <fakuve> may it be that in the other document that calls the file `declare(strict_type = 1` ?
[03:40:51] <fakuve> Is this famous autoLoad mechanism which I don't know if it's really advisable
[03:46:59] <__adrian> ¦•••¦•••
[03:47:31] <fakuve> ohh
[03:47:33] <__adrian> re: autoloaders: learn how to use composer. composer comes with an autoloader that's better than any you'll build yourself.
[03:47:39] <fakuve> I copied it from vim
[03:48:13] <fakuve> Ok
[03:48:18] <fakuve> Chees
[03:48:55] <__adrian> don't know if that's really your issue, but if you remove those, there's no error  https://3v4l.org/oL2jX
[03:50:03] <__adrian> some other bits of advice: in most cases, you want to use fully qualified paths.
[03:50:04] <fakuve> __adrian: now yeah , thanks
[03:50:45] <fakuve> alright , but issue is that when you say , build something in your home laptop , then you post in in some server? you need to change all the paths
[03:51:26] <__adrian> generally, you'd solve that by making everything relative to your project's root directory. e.g., const PROJECT_ROOT_DIR = __DIR__;
[03:51:50] <__adrian> and then  require PROJECT_ROOT_DIR . "/classes/classname.php";
[03:51:59] <fakuve> ahh ok
[03:52:11] <__adrian> though there's another thing; * "classes/" is a smelly directory name
[03:52:34] <fakuve> as for a malicious actor?
[03:52:36] <__adrian> name your classes after what they do (their purpose). put them in directories that reflect that.
[03:52:50] <__adrian> no, it's just largely disorganized.
[03:53:10] <fakuve> so I sort the classes by categories
[03:53:17] <__adrian> it's like wadding up all of your clothes and dumping them in the same dresser drawer
[03:53:20] <fakuve> And I make directories out of them
[03:53:26] <__adrian> labeled "clothes"
[03:53:32] <fakuve> hehehm
[03:54:08] <fakuve> I still remember when I got laid with this Japanese haha , she took me to hers , she had all the clothes in this strange characters
[03:54:10] <fakuve> haha
[03:54:13] <__adrian> that autoloader also doesn't account for namespaces - which implies you're not using them
[03:54:48] <fakuve> __adrian: yep I will get into namespaces later , Is something I still havent checked properly
[03:55:07] <__adrian> it's worth getting into upfront. it's useful, and not complicated.
[03:55:20] <fakuve> alright
[03:55:46] <__adrian> it's just a way to organize things. the common pattern is  Vendor\Project\Classname
[03:56:14] <__adrian> so you might have something like Fakuve\Study\Foo.php
[03:57:03] <fakuve> oks
[03:57:52] <__adrian> and you might have more levels if needed for organization, but for smaller projects you might not
[03:58:10] <fakuve> yep , step by step hehem
[04:21:42] <mishehu> I've got a deb10 box that is running some code that I ported from 5.6, but the ver of php7.4 on the box is 7.4.0beta4.  Using pdo as I normally do to interact with a percona 5.7 server, the only query I'm attempting to do is a LOAD DATA INFILE type query with a csv file as the source.  But I get general error 2014 Cannot execute queries while other unbeffered queries are active, but there's no attempt at
[04:21:48] <mishehu> transactions and there are no other queries going on.  I'm not explicitly disabling buffered queries.  Is this a known case requiring special parameters?
[04:22:16] <__adrian> _beta_  ??
[04:22:47] <mishehu> __adrian: yes, sadly that's what the boss has in our local mirror.
[04:22:54] <__adrian> that error means there's an unbuffered query somewhere that you haven't completely fetched
[04:23:35] <__adrian> so either finish fetching, or use buffered queries (this is the default and probably fine, unless you know why it's being done)
[04:23:36] <mishehu> __adrian: there's no SELECT query at all in the script.  it's literally a watch on a dir for a csv file, if glob() finds files, then it iterates over them rerunning a LOAD DATA INFILE query.
[04:23:55] <__adrian> then maybe it's not done before the next one goes
[04:24:35] <mishehu> so the query won't block until completion?
[04:24:42] <__adrian> but i don't know of any way you'd get that error except on the same connection
[04:25:14] <__adrian> does more than one copy of this script run at once?
[04:25:35] <mishehu> __adrian: not at this time, I'm running it alone manually.
[04:25:43] <__adrian> does it fork?
[04:25:48] <mishehu> no, it does not
[04:26:39] <mishehu> it was meant to run as a single instance where the $argv[1] was the name of the server to connect to for processing the given dir of the same $argv[1] name.  thus it was to be controlled by systemd.
[04:26:54] <__adrian> but you're not using systemd now
[04:27:07] <mishehu> like "/usr/bin/php /path/to/foo.php server01"
[04:27:34] <__adrian> sounds like you have troubleshooting in front of you
[04:27:39] <mishehu> __adrian: correct, as there's bugs to be worked out, I'm trying to get the script working with me manually executing that to see where the breakage is.  if you need me to pb I can.
[04:28:14] <__adrian> honestly doesn't sound like something you'd be able to figure out over irc
[04:28:58] <__adrian> but that "Cannot execute queries while ..." error means there's another, unfetched/unfinished query on the same connection.
[04:29:19] <__adrian> check if your PDO is using buffered queries
[04:29:50] <mishehu> __adrian: according to the page, buffered queries is the default.  (this page https://www.php.net/manual/en/mysqlinfo.concepts.buffering.php)
[04:29:58] <__adrian> yes
[04:30:03] <__adrian> check if  that's actually happening
[04:30:13] <__adrian> the error says it's not
[04:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:04] <__adrian> how long between connecting and actually making the query?  e.g., do you connect, wait, and then sometime later try to query?
[04:31:22] <__adrian> or do you wait, then connect, query right away?
[04:33:48] <mishehu> __adrian: since there's files in the watched dir already, it immediately starts.  and the last param to the PDO ctor is a define()'ed constant with this:  array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_EMULATE_PREPARES => false, PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC, PDO::MYSQL_ATTR_LOCAL_INFILE => 1, PDO::ATTR_AUTOCOMMIT => true, PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true)
[04:34:21] <mishehu> and it does a foreach() loop on the array of files that glob() returns, so it only ever executes 1 query at a time.
[04:34:40] *** Joins: vlm (~vlm@user/vlm)
[04:35:49] <__adrian> are you actually using  $pdo->query()  ?
[04:36:50] <mishehu> __adrian: absolutely.
[04:36:50] <__adrian> try  ->exec()  instead, just to see
[04:36:54] <mishehu> ok sec
[04:37:15] <mishehu> yeah that works
[04:37:31] <__adrian> now try  ->query() but afterwards do  ->fetchAll();
[04:38:10] <mishehu> ok that would be retarded as there shouldn't be anything to fetch, but gimme a moment here, I don't want to stop this now that it's actually churning through data.
[04:38:30] <mishehu> I'll try in a moment.
[04:39:03] <__adrian> suspicion:  query() is intended to be used where there's a result, so might be hanging waiting to be fetched. exec() doesn't expect to have a result and so does not.
[04:39:55] <mishehu> __adrian: understood, I never actually realized there was a difference other than ::exec() iirc allows you to feed in an array of params instead of calling up ::bindParam() for each parameter.
[04:41:16] <__adrian> no, you're thinking of execute()
[04:41:41] <__adrian> exec() is like query() except for statements with no results
[04:41:55] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[04:41:58] <__adrian> https://php.net/pdo.exec
[04:42:24] <__adrian> BUT that does bring up the reason i wanted to see if ->query()->fetchAll() worked
[04:42:30] <mishehu> yeah I'm about to try that, sec.
[04:43:29] <mishehu> $stmt = $connTdb->query($query); followed by $stmt->fetchAll(); still results in the unbuffered query error.  but using ->exec() works fine.
[04:43:45] <__adrian> hm.
[04:43:48] <__adrian> weird
[04:44:42] <mishehu> indeed.  I'll see about getting the boss to allow me to update the php 7.4 on the systems.  but this whole attempt to get off of 5.6 and onto 7.4 or newer is making the boss cranky.
[04:44:49] <__adrian> hm, more bummer. apparently the filename can't be passed as a parameter.
[04:45:06] <__adrian> though i only read that, didn't try
[04:45:52] <mishehu> __adrian: it's ok, as there's no type safety that can be enforced with the LOAD DATA INFILE query, it's just a simple query string formed, executed, and discared.  at least I now know what the issue is and how to fix it.  I do appreciate the help.
[04:46:58] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:34] <fakuve> Sorry I may not reached the level to understand this yet
[04:51:51] *** Joins: ferdna (~ferdna@user/ferdna)
[04:51:55] <fakuve> but What is the `?` mean in here ? .`public __construct(string $message = "", int $code = 0, ?Throwable $previous = null)`
[04:52:13] <fakuve> I pretty much understand the rest .
[04:52:41] <fakuve> Is something to do with `Implements` ? cause I still need to check that if so
[04:53:41] <Blondie101010> the '?' is for nullable
[04:54:16] <fakuve> ok
[05:03:30] <fakuve> lol , I cannot compile this same code in my Computer (probably because of php8.0) https://www.php.net/manual/en/migration71.new-features.php
[05:03:48] <fakuve> That first snippet
[05:04:30] <fakuve> `Fatal error: Cannot redeclare testReturn() (previously declared in`
[05:05:21] *** Joins: Alex123 (~Adium@209.36.44.138)
[05:05:34] <__adrian> that means you're trying to make two functions with the same name (or the same function, twice)
[05:05:59] <fakuve> So I'm declaring the same function (same FunctionName) twice yeah
[05:06:17] <fakuve> But so they do in `php.net` and apparently it works for them
[05:06:27] <fakuve> (they may have a magic compiler them though :D)
[05:06:55] <Blondie101010> show the link so we can explain your apparent misunderstanding
[05:07:28] <fakuve> Blondie101010: :D the first code snippet in here https://www.php.net/manual/en/migration71.new-features.php
[05:07:38] <__adrian> no, that's just different examples
[05:07:57] <Blondie101010> ugh, yeah that won't work :)
[05:08:13] <fakuve> So its mean to be runned separatedly those lines hehem
[05:08:24] <Blondie101010> yes but I agree that it's misleading
[05:08:26] <__adrian> would be better if they had different names (or were at least in different example blocks)
[05:08:31] <fakuve> Or I just give them a ring to php.net , to get that bug bounty :d
[05:08:45] <__adrian> not a bug, but PRs _are_ welcome
[05:10:02] <fakuve> What are PRs ? whenever I'm ready to help I will surely do
[05:10:05] *** Quits: Alex123 (~Adium@209.36.44.138) (Ping timeout: 252 seconds)
[05:10:15] <fakuve> :D
[05:10:18] <__adrian> pull request
[05:10:26] <fakuve> oh yeah sure
[05:10:43] *** Joins: Hiccup (cHoy@user/hiccup)
[05:14:20] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:30:57] *** Joins: jargon (~jargon@184.101.212.50)
[05:32:14] <jargon> Why does this only capture the first card to disk? https://pastebin.com/XYyCnpqm
[05:33:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:35:43] <Blondie101010> considering that you decided not to follow any advice given, we should NOT waste time on this
[05:37:01] <__adrian> jargon: that's an extremely vague question. you need to do some troubleshooting, figure out a minimal example to reproduce it so you can ask a better question.
[05:37:27] <__adrian> note that the advice we've been giving for a few days would help with that - organized code is easier to reason about
[05:37:35] <jargon> Here is the sample data: https://pastebin.com/gAxf5Ej9
[05:37:46] <__adrian> that's not what i said
[05:38:23] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:38:27] <jargon> Blondie101010, I keep having to backtrack.
[05:39:16] <__adrian> organize, get rid of the globals, and you won't have to backtrack as much
[05:39:32] <jargon> I designed my project to base its behaviors off its own content.
[05:40:11] <__adrian> jargon: really feels like you're not listening. if you don't like the answers you get here, that's ok (you don't have to follow our advice), but that means you should stop asking.
[05:40:18] <jargon> For example (mk)(11|45|71)(ROE|CARDS|etc)
[05:40:19] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:40:55] <jargon> I know it is a lame way to do this, but it is just the route I am currently following.
[05:41:08] <__adrian> like i said, you can make your own choices
[05:41:23] <__adrian> but if you don't like our advice then stop asking for it
[05:42:09] <jargon> Right now, my code changes its behavior based off file/folder names.
[05:43:10] <jargon> Is this feature frowned upon?
[05:43:46] <__adrian> we've talked about the things that are "frowned upon," as you put it
[05:44:06] <__adrian> !+php first
[05:44:06] <php-bot> your PHP code can be sorted into two categories: code which _performs work_ (processing input, controller logic, database access, error handling, etc.), and code which  _produces output_ (header(), echo, <?= $var ?>, plain ol' <html>, etc.). work goes FIRST. output goes LAST. https://gist.github.com/adrian-enspired/9ed2542a695e2ebe30aa
[05:44:17] <__adrian> stop using globals, use function arguments + return values instead
[05:44:42] <__adrian> you'd be at a pretty good starting point, from there
[05:45:26] <__adrian> if you don't want to do those things, that's fine, don't. but you won't get much help here, as it's extremely difficult to help with code that's disorganized and relies on global state.
[05:45:51] <__adrian> it's also frustrating to continue helping someone who takes a lot of time with questions, gets lots of good advice, and then ignores it.
[05:46:30] <__adrian> *trying to help
[05:49:32] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[05:56:42] <__adrian> !+global state
[05:56:42] <php-bot> Relying on global variables makes your core harder to think about and keep track of how everything works; it leads to surprises and hard-to-troubleshoot bugs. Instead, use _dependency injection_: when your function needs a $value, provide it as an _argument_. When you need a $value from your function, _return_ it.
[05:56:49] <__adrian> !+global bad
[05:56:49] <php-bot> function bad() { global $x; $x = $x + 1; } $x = 1; bad();
[05:56:52] <__adrian> !+DI good
[05:56:53] <php-bot> function good(int $x) : int { return $x + 1; } $x = 1; $x = good($x);
[06:04:34] <ss23> !+DI bad
[06:08:29] <jargon> https://pastebin.com/ByN6d7uU Does this make you happy?
[06:09:12] <jargon> I followed all your advice and it only took me 20 some minutes.
[06:09:19] <__adrian> good start.   function nen_css() { $nen = nen_ini();  // $nen should be an argument here
[06:09:40] <__adrian> or more specifically, $root should be an argument.
[06:09:58] <jargon> What line is that on?
[06:10:03] <__adrian> $nen = nen_ini(); $css = nen_css($nen['root']);
[06:10:07] <__adrian> 39
[06:10:48] <__adrian> on 88, $config should not be taken by reference. you should make your changes and the  return $new_config
[06:10:57] <__adrian> same for some others
[06:11:04] <jargon> technically I should link the css not embed it.
[06:11:18] <__adrian> yes. i'm talking about args and returns
[06:12:29] <__adrian> that was just a quick skim
[06:13:17] <__adrian> but yes, it looks much better. once it's nailed down, you'll be able to look at each part in isolation. you'll be able to show just a few lines of code that are causing a problem instead of having to look at _everything_, _every time_.
[06:13:57] <__adrian> that's your next step. get that minimal test case.
[06:18:30] <Blondie101010> jargon:  I would add a few traces to see which conditions are hit
[06:19:21] <__adrian> aside - just make your templates html, don't echo html.
[06:20:04] <jargon> I am not sure that I even use trk_cleancfg anymore.
[06:20:48] <__adrian> little more useful aside: don't use abbreviations, use easy-to-understand -and-read names.
[06:23:31] <jargon> https://pastebin.com/PEeARwQk I don't even understand what this was for except to force bad coding practices into cooperating.
[06:24:25] <__adrian> looks like you're converting the config from one format to another
[06:24:49] <jargon> Yes, due to crappy use of preg.
[06:25:06] <__adrian> take pretty much the opposite approach: don't make a copy and then replace the original (by reference); make a $new_config and then return it.
[06:25:30] <Blondie101010> jargon: couldn't help myself when I saw your trk_styles() function...  look at this: https://3v4l.org/i4EP6
[06:25:37] <__adrian> also note you could have another function instead of that if() tree.
[06:25:43] <jargon> I am not even sure I want to include that code anymore rather than even consider it useful.
[06:26:28] *** Quits: junktext (~junktext@109.201.152.178) (Ping timeout: 252 seconds)
[06:26:48] <jargon> Blondie101010, is that something you made or a copy cat?
[06:26:53] <__adrian> re: blondie's trk_styles(): you might  ?? $default  or  ?? throw ...
[06:26:55] <Blondie101010> I just wrote it
[06:27:09] <Blondie101010> true, I thought about it then forgot
[06:27:43] <jargon> I am mediocre famous for writing part of the Predator Drone ai.
[06:27:51] <Blondie101010> https://3v4l.org/U2MXT
[06:27:57] <__adrian> that doesn't seem relevant to anything
[06:32:35] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[06:33:35] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[06:34:44] <jargon> Thanks, Blondie101010, I encorporated your addition to my code.
[06:35:35] <Blondie101010> np
[06:41:45] *** Joins: Rockwood (~Rocky@user/rocky)
[06:45:16] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[06:46:48] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Quit: Leaving)
[06:54:28] *** Quits: jargon (~jargon@184.101.212.50) (Ping timeout: 250 seconds)
[06:56:21] *** Joins: jargon (~jargon@184.101.200.51)
[06:57:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[06:57:42] <jargon> https://pastebin.com/TcL1RD9M
[06:57:46] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[06:57:58] <jargon> I don't know why my regex for ripping cards doesn't work right/.
[07:03:36] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[07:10:26] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[07:15:52] <jargon> Here is the isolated lines: https://pastebin.com/B3bAT2k9
[07:17:05] <__adrian> make a reduced test case. show _only_ the code you _absolutely need_ to show the error. include sample input. include an example of the result you want/expect. describe the differences/problem.
[07:17:07] <jargon> here is just the cards: https://pastebin.com/V1Phmbnj
[07:17:48] <Rockwood> more then 500 lines
[07:17:48] <jargon> ok
[07:17:50] <Rockwood> than
[07:20:11] <__adrian> limit that to just one "card"
[07:21:21] *** Quits: jgrim236 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[07:21:33] <__adrian> but i'll tell you now, the fact that this is code (not formatted data) is going to be a problem with this approach.
[07:22:35] *** Joins: jgrim2362 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[07:27:35] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:25] <jargon> OK, it works 100% now. thankers all!
[07:33:16] <jargon> __adrian, Blondie101010, how do I used your styles code to do a reverse lookup?
[07:33:56] <jargon> That is, to match potentially non-existant data?
[07:34:05] <jargon> (If that makes any sense)
[07:34:23] <__adrian> not quite sure what you're asking
[07:34:25] <jargon> Just use ?? right?
[07:34:40] <__adrian> ?? is the _null coalesce_ operator.
[07:34:59] <jargon> well it provides a default, right?
[07:35:03] <__adrian> if the LHS is not null, you get the LHS. else you get the RHS.
[07:35:17] <__adrian> you can use this to provide defaults for things, yes.
[07:35:23] <jargon> left/right hand side?
[07:35:26] <__adrian> yes
[07:35:41] <__adrian> "this" ?? "not this"
[07:35:45] <jargon> Well, that is very useful. Thank you!
[07:35:45] <__adrian> null ?? "this"
[07:35:53] <__adrian> $not_defined ?? "this"
[07:37:47] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[07:41:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:43:43] *** Joins: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp)
[07:46:24] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:09:35] <fakuve> soo a quick one before Im going to sleep one . Mmm I'm using composer , I have just created a fake project with the following tree structure . https://termbin.com/8hkr , the files which have inside classes to be loaded , they are quite similar such as for instance `./includes/pepe.php` https://termbin.com/hil90 , so they are all under that namespace `myWeb\includes` or `myWeb\Classes`
[08:11:05] <fakuve> Issue is that when doing the `composer.json` I dont know really how to instruct composer to look in both directories , I cannot actually do something like this https://termbin.com/d0i8
[08:11:05] <__adrian> organize based on function, not type
[08:11:24] <__adrian> generally you'd have a src/ directory that most of your code would go under.
[08:11:39] <__adrian> what are the "includes" for? e.g., are they templates?
[08:11:42] <fakuve> yeah thats what the guy is doing in the tutorial
[08:11:48] <fakuve> nah is just to try
[08:12:01] <__adrian> "try"?
[08:12:02] <fakuve> to wrap my head around `composer` `self-loading` classes
[08:12:14] <fakuve> Is not an actuall project
[08:12:45] <fakuve> I mean , the includes they have got one Class each
[08:12:46] <__adrian> it's ok that it's a "fake" project but it needs to have some actual design to be useful
[08:13:11] <fakuve> https://termbin.com/hil90
[08:13:28] <fakuve> yep I will have that in mind , the by function organization
[08:13:35] <__adrian> that is, if you don't know what those files in includes/ are for/what they do, you cannot know if they make sense being there or whether not being able to load them that way is actually a problem
[08:13:57] <fakuve> Nah at the moment I just want to load them all
[08:14:07] <__adrian> that's not what autoloading does  ;)
[08:14:16] <fakuve> There is no functionality behind it , I want to try this feature
[08:14:32] <__adrian> autoloading is based on usage. it does not load everything upfront.
[08:14:40] <fakuve> https://www.youtube.com/watch?v=xWgtKALpx9E
[08:15:02] <__adrian> do you understand  https://getcomposer.org/doc/04-schema.md#psr-4
[08:15:06] <fakuve> He is doing that , though he is complicating the file structure , so I did my own
[08:15:34] <fakuve> __adrian: ok let me read that
[08:15:35] <fakuve> :D
[08:16:18] <__adrian> you might also find this useful:  https://www.nikolaposa.in.rs/blog/2017/01/16/on-structuring-php-projects/
[08:16:33] <__adrian> note, many of the examples there are NEGATIVE examples  ;)
[08:17:37] <fakuve> It is always nice to point to naughty individuals isnt it ? :D
[08:18:13] <fakuve> Thanks for that resource
[08:18:16] <fakuve> thats rocking
[08:18:16] *** Joins: guido (~guido@host-79-23-86-147.retail.telecomitalia.it)
[08:18:36] <__adrian> i'm not saying the article is bad. it's good. i'm saying it has negative examples for comparison and contrast. many people skip to the examples and take them as gospel without reading the actual article.
[08:19:13] <fakuve> So I'm gonna read it now when I go home relaxdly
[08:19:24] <fakuve> so the writer does actually point the good design
[08:19:33] <fakuve> And he uses counterexamples
[08:20:13] *** Joins: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net)
[08:20:28] <fakuve> Ok chappies I save this links to check now at home , I'm shooting . See ya tomorrow!!
[08:20:30] *** Joins: stenno (~stenno@user/stenno)
[08:20:41] <fakuve> Thanks again btw
[08:20:45] <fakuve> :D
[08:20:45] <__adrian> so that guy is a bit disorganized, but the example he's building is sensible enough
[08:20:49] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[08:21:00] <__adrian> welcome
[08:21:28] <fakuve> gunait!
[08:22:15] <__adrian> and he's describing some things wrong but ...ok
[08:22:36] <fakuve> Everything will be better that what I do now I guess
[08:22:38] <fakuve> :D
[08:23:07] <__adrian> require, not require_once
[08:23:21] <__adrian> and realpath() is pointless there
[08:25:34] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[08:26:24] <jargon> nini ZZzz...
[08:26:32] *** Quits: jargon (~jargon@184.101.200.51) (Remote host closed the connection)
[08:31:01] <Rockwood> nn
[08:32:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:42:08] *** Joins: stenno (~stenno@user/stenno)
[08:43:20] *** Joins: tex (~super@user/dix)
[08:47:52] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[08:49:27] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:54:40] <CoJaBo> So this is fun. Our app using sqlite now needs to have replication. :/
[08:59:00] <TinoDidriksen> Moving from SQLite to another RDBM should be fairly trivial.
[09:12:03] <CoJaBo> The bigger problem is it also uses lots of flat-file databases lol
[09:29:25] *** Joins: deksar (~deksar@user/deksar)
[09:29:54] *** Quits: deksar (~deksar@user/deksar) (Client Quit)
[09:35:37] *** Joins: Nek5 (~Nek@62-210-157-90.rev.poneytelecom.eu)
[09:35:56] *** Joins: kenoba9 (~kenoba@user/kenoba)
[09:36:19] *** Joins: ekneuss_ (~ekneuss@box.croustillant.ch)
[09:36:19] *** ChanServ sets mode: +v ekneuss_
[09:36:22] *** Quits: guido (~guido@host-79-23-86-147.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[09:36:25] *** Joins: cosinetau (~cosine@vpn.mashio.net)
[09:36:36] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[09:36:51] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[09:37:08] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[09:37:16] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:37:30] *** Joins: Bencraft8 (~Bencraft@111.227.187.81.in-addr.arpa)
[09:37:39] *** Joins: connrs_ (~connrs@user/connrs)
[09:38:59] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[09:40:53] *** Joins: Florida (~FloridaMa@user/floridaman)
[09:40:54] *** Joins: petris_ (sid19918@user/petris)
[09:42:59] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[09:43:03] *** Joins: ikonia_ (~irc@user/ikonia)
[09:44:18] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:44:18] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (*.net *.split)
[09:44:19] *** Quits: Nek (~Nek@62-210-157-90.rev.poneytelecom.eu) (*.net *.split)
[09:44:19] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (*.net *.split)
[09:44:19] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[09:44:19] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (*.net *.split)
[09:44:19] *** Quits: connrs (~connrs@user/connrs) (*.net *.split)
[09:44:19] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:44:19] *** Quits: kenoba (~kenoba@user/kenoba) (*.net *.split)
[09:44:19] *** Quits: ekneuss (~ekneuss@box.croustillant.ch) (*.net *.split)
[09:44:19] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:44:19] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[09:44:19] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (*.net *.split)
[09:44:20] *** Quits: Termux (puracan@user/termux) (*.net *.split)
[09:44:20] *** Quits: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi) (*.net *.split)
[09:44:20] *** Quits: adsr (~adsr@45.58.35.250) (*.net *.split)
[09:44:20] *** Quits: ss23 (~ss23@irc.ss23.geek.nz) (*.net *.split)
[09:44:20] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:44:20] *** Quits: ikonia (~irc@user/ikonia) (*.net *.split)
[09:44:20] *** Quits: jrgilman (~jrgilman@67.205.178.139) (*.net *.split)
[09:44:20] *** Quits: petris (sid19918@user/petris) (*.net *.split)
[09:44:20] *** Quits: relipse (sid16131@tinside.irccloud.com) (*.net *.split)
[09:44:20] *** Quits: cosine (~cosine@vpn.mashio.net) (*.net *.split)
[09:44:20] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[09:44:20] *** Nek5 is now known as Nek
[09:44:20] *** connrs_ is now known as connrs
[09:44:21] *** Bencraft8 is now known as Bencraft
[09:44:21] *** kenoba9 is now known as kenoba
[09:44:23] *** Joins: CoJaBo_ (~aztec@user/CoJaBo)
[09:44:25] *** petris_ is now known as petris
[09:46:27] *** Joins: jrgilman (~jrgilman@67.205.178.139)
[09:46:27] *** Joins: glider (~glider@user/glider)
[09:49:32] *** Joins: adsr (~adsr@45.58.35.250)
[09:49:41] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[09:49:59] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[09:50:08] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[09:56:12] *** Joins: armeg (~jrgilman@67.205.178.139)
[09:56:24] *** Quits: jrgilman (~jrgilman@67.205.178.139) (Ping timeout: 252 seconds)
[09:56:24] *** armeg is now known as jrgilman
[09:58:18] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:58:20] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:02:55] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[10:14:03] *** Joins: ArchNoob (~maotora@user/archnoob)
[10:19:56] *** Joins: fahrradToken (~fahrradTo@212.7.190.34)
[10:20:28] *** Joins: glider_ (~glider@user/glider)
[10:20:32] *** Quits: glider (~glider@user/glider) (Ping timeout: 252 seconds)
[10:31:53] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[10:34:47] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 268 seconds)
[10:39:59] *** Quits: de-facto (~de-facto@user/de-facto) (Read error: Connection reset by peer)
[10:42:17] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (Ping timeout: 252 seconds)
[10:42:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[10:42:50] *** Quits: bobdobbs (~user@14.137.23.74) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: cisco87 (~quassel@lnxg33k.com) (Ping timeout: 252 seconds)
[10:42:59] *** Joins: de-facto (~de-facto@user/de-facto)
[10:42:59] *** Joins: cisco87_ (~quassel@lnxg33k.com)
[10:46:42] *** Quits: jtreminio (~jtreminio@198.199.111.164) (Quit: Ping timeout (120 seconds))
[10:46:50] *** Joins: jtreminio (~jtreminio@198.199.111.164)
[10:48:10] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[10:48:37] *** Joins: michele_ (~eraser@user/michele)
[10:49:06] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[10:50:38] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[10:51:12] *** Quits: ReimuHakurei_ (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: Viper-7 (~viper7@irc.viper-7.com) (Excess Flood)
[10:51:12] *** Quits: michele (~eraser@user/michele) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (Remote host closed the connection)
[10:51:30] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Client Quit)
[10:51:53] *** Quits: DCTWD (~dc@uz.utmappro.com) (Ping timeout: 252 seconds)
[10:52:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[10:52:21] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[10:52:47] *** Quits: barlas (~aqeel@user/barlas) (Ping timeout: 252 seconds)
[10:52:49] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[10:53:03] *** Joins: barlas (~aqeel@user/barlas)
[10:54:01] *** Joins: DCTWD (~dc@uz.utmappro.com)
[10:56:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: phlixi_ (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[10:58:10] *** Joins: semeion (~semeion@user/semeion)
[11:00:13] *** Joins: Termux (puracan@user/termux)
[11:13:17] *** Joins: Name (~clarjon1@user/clarjon1)
[11:13:25] *** Name is now known as Guest4024
[11:14:46] *** Joins: justache9 (~justache@user/justache)
[11:15:12] *** Quits: justache (~justache@user/justache) (Ping timeout: 250 seconds)
[11:15:12] *** justache9 is now known as justache
[11:16:28] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (Ping timeout: 250 seconds)
[11:16:39] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Ping timeout: 250 seconds)
[11:24:41] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Ping timeout: 264 seconds)
[11:24:53] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[11:29:42] *** Joins: stenno (~stenno@user/stenno)
[11:32:39] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[11:33:39] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[11:39:50] *** Guest4024 is now known as clarjon1
[11:45:12] *** Joins: paladox_ (sid373195@wikimedia/paladox)
[11:45:19] *** Quits: paladox (sid373195@wikimedia/paladox) (Ping timeout: 250 seconds)
[11:45:19] *** paladox_ is now known as paladox
[11:49:40] *** Joins: mnemonic (~semeion@user/semeion)
[11:50:55] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[11:56:30] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[11:56:30] *** Quits: jmpp (~jmpp@pool-71-105-225-118.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[11:56:45] *** Joins: jmpp (~jmpp@pool-71-105-225-118.nycmny.fios.verizon.net)
[11:56:52] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:58:58] *** Quits: ramsey (sid508214@phpc/ramsey) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 252 seconds)
[11:59:13] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 252 seconds)
[11:59:25] *** Joins: ramsey (sid508214@phpc/ramsey)
[11:59:52] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[12:00:17] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[12:02:03] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:10:55] *** Quits: mikemike (sid13297@id-13297.lymington.irccloud.com) (Ping timeout: 252 seconds)
[12:11:19] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Ping timeout: 252 seconds)
[12:12:35] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Read error: Connection reset by peer)
[12:12:41] *** Joins: mikemike (sid13297@2a03:5180:f:2::33f1)
[12:12:51] *** Quits: jgrim2362 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Read error: Connection reset by peer)
[12:12:58] *** Quits: steve (~steven@li677-71.members.linode.com) (Ping timeout: 252 seconds)
[12:12:58] *** Quits: nrr (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 252 seconds)
[12:13:16] *** Joins: jgrim2362 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[12:15:52] *** Joins: nrr (sid20938@id-20938.lymington.irccloud.com)
[12:34:23] *** Joins: ArchNoob (~maotora@user/archnoob)
[12:37:14] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 250 seconds)
[12:37:35] *** Quits: cisco87_ (~quassel@lnxg33k.com) (Read error: Connection reset by peer)
[12:37:40] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 252 seconds)
[12:38:38] *** Joins: cisco87 (~quassel@lnxg33k.com)
[12:39:05] *** Joins: de-facto_ (~de-facto@user/de-facto)
[12:40:48] *** Joins: mnemonic (~semeion@user/semeion)
[12:41:18] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[12:41:29] *** Joins: berndj-blackout (~berndj@ns2.linksynergy.co.za)
[12:44:39] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Ping timeout: 252 seconds)
[12:44:41] *** de-facto_ is now known as de-facto
[12:45:49] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[12:45:59] *** berndj-blackout is now known as berndj
[12:50:09] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Remote host closed the connection)
[12:50:31] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[12:52:08] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Ping timeout: 252 seconds)
[13:02:43] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Quit: The Lounge - https://thelounge.chat)
[13:03:46] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[13:10:04] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[13:14:39] *** Joins: mactron (~mactron@apn-123-214-101-gprs.simobil.net)
[13:31:44] *** Joins: PersonX (~PersonX@d66-183-55-27.bchsia.telus.net)
[13:32:34] <PersonX> Hey there, curious if I want to get an image extension, which would be preferred out of getimagesize or strtolower(pathinfo($file, PATHINFO_EXTENSION)) ? Or is there a better way? thank you.
[13:33:54] <biberu> PersonX: it depends on what you need, do you want to check if it's a valid image and if so what type, or do you just want to get some arbitrary characters from the end of the name?
[13:35:51] <PersonX> biberu: I guess that confuses me a bit, but I read a bit that I should be getting a mime type, then checking an extension as well? (sorry, new to PHP, trying to create an image upload script / site).
[13:36:45] <biberu> PersonX: there's nothing that says that a file called image.jpg is actually an image of that kind, it could be anything, and the uploader determines the name
[13:37:22] <biberu> that is another consideration ofc, you probably don't want to let them do that
[13:38:49] <PersonX> That makes sense.
[13:39:24] <PersonX> so, would checking a mime type, then using pathinfo be a safe bet?
[13:39:48] <PersonX> checking against an array of "allowed" extensions ie .png, etc when using pathinfo($file, PATHINFO_EXTENSION)?
[13:41:59] <biberu> if you want to ensure that it's a valid image you need to parse the data, but it's been a while and i don't remember how much checking getimagesize does
[13:42:38] <biberu> if you also want to check that it has a sane name you could do that, but it doesn't really concern the image itself
[13:42:43] <PersonX> biberu: I know it returns mime types
[13:42:49] <PersonX> getimagesize
[13:43:02] <biberu> it might just look at the first few bytes, don't know
[13:43:49] <biberu> e.g. a png starts with 89 50 4E 47 0D 0A 1A 0A
[13:45:06] <biberu> if you're saving this you should pick your own name too, the name chosen by the uploader may be taken, may be chosen with malicious intentions, may not be valid for your filesystem etc, and always treat it as untrusted
[13:47:17] <PersonX> I do plan on saving files uploaded. So in the upload process, would renaming the file when "move_upload_file" be the correct process?
[13:48:05] <biberu> you can give move_uploaded_file your chosen name
[13:50:07] <Blondie101010> "your chosen name" being different than the user provided file name
[13:50:23] <Blondie101010> typically closer to a random name
[13:55:59] <PersonX> Okay, that makes sense. Thank you both.
[13:56:43] <PersonX> Blondie101010, touching on my previous question, is getimagesize good to get mime type, then use pathinfo to get extension safe/recommended?
[13:56:45] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:ac3a:1f28:437:f98b)
[13:56:50] <delboy1978uk> morning o/
[13:59:35] <Blondie101010> PersonX:  as mentioned in the manual page yellow (caution) box, use Fileinfo for that
[13:59:49] <delboy1978uk> You guys seen this? :-P https://trongate.io/
[14:00:12] <delboy1978uk> "A brave new PHP framework for developers who hate PHP frameworks"
[14:00:40] <biberu> delboy1978uk: i think there was some drama on r/php about that
[14:00:56] <delboy1978uk> aye?
[14:00:59] <delboy1978uk> lol
[14:01:18] <biberu> https://www.reddit.com/r/PHP/comments/nzyu81/trongate_php_is_ready_to_drop_check_this_out_you/
[14:01:19] <delboy1978uk> that's my old bandmate Dave, who's in Glasgow :-P
[14:01:51] <delboy1978uk> OMG that top comment lol
[14:03:01] <delboy1978uk> red flags as features :P
[14:04:27] <freeman_h> Hi all just wondering in this use case how to bind the pdo https://3v4l.org/2Ordn
[14:05:17] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[14:08:52] *** Joins: mnemonic (~semeion@user/semeion)
[14:09:01] <AllenJB> freeman_h: As far as I know, you either use bindValue, or pass an array to execute - don't try to do both.
[14:09:26] <AllenJB> You may also want to look at using an existing query builder library such as Aura.SqlQuery
[14:09:36] <Blondie101010> also the +1 is obviously wrong
[14:10:09] <Blondie101010> which would be the cause for the commented error message
[14:10:42] <biberu> freeman_h: you're formatting your query string with $ci, didn't you mean $in?
[14:11:02] <Blondie101010> $ci seems to be data
[14:11:19] <freeman_h> Blondie101010, yeah sorry it should be IN($in)
[14:11:27] <freeman_h> still same error :)
[14:11:49] <Blondie101010> not what I told you for the reason
[14:12:01] <freeman_h> AllenJB, and Blondie101010 so if i should not use bindvalue and also pass the array into the execute
[14:12:01] <Blondie101010> the +1
[14:12:09] <freeman_h> if to pass the array into the execute method
[14:12:41] <Blondie101010> freeman_h:  you should get rid of the bindValue() but you should also understand that a count of 1 giving an offset of 2 is ridiculous
[14:12:42] <freeman_h> i am guessing i will just array merge 1 into $ci
[14:13:37] <freeman_h> like https://3v4l.org/HJpAf in line 13
[14:15:09] <Blondie101010> you're making less and less sense
[14:16:26] <Blondie101010> why would you add a fake value, and do you know how to use arrays?
[14:21:37] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[14:22:46] <freeman_h> Blondie101010, sorry if i am not making sense
[14:23:01] <freeman_h> but from what you and AllenJB are saying i cannot pass
[14:23:20] <freeman_h> execute($ci) and $stmt->bindValue at the same time
[14:23:48] <freeman_h> it has to be 1 or the other. using bindvalue for all of it or just put them in a single variable and pass it to execute
[14:25:30] <Blondie101010> that doesn't tell me why you add a 1 to your array or why you use array_merge() to add a single element!
[14:28:31] <freeman_h> Blondie101010, because  WHERE u.zone = ?
[14:28:34] <freeman_h> zone is 1
[14:29:24] <Blondie101010> ok that's good, so do you know how to add an element to an array?
[14:30:20] <freeman_h> Blondie101010, no i dont
[14:30:25] <freeman_h> haha
[14:31:15] <Blondie101010> $arr[] = $newValue;
[14:31:44] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:34:47] *** Joins: mnemonic (~semeion@user/semeion)
[14:36:00] <freeman_h> Blondie101010, i know :) thank you as always :)
[14:36:07] <freeman_h> cheers AllenJB :)
[14:42:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[14:42:33] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:50:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[14:52:13] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:52:17] <PersonX> Blondie101010: since we spoke earlier about mime types, would this be a safe way in achieving that? https://pastecode.io/s/63iuao37
[14:54:24] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2.1)
[14:56:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[14:59:26] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:05:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[15:06:29] <PersonX> sorry, this: https://pastecode.io/s/v0fmyv6q
[15:07:45] *** Joins: Junxter (~Junxter@222.95.221.25)
[15:08:11] <Naktibalda> PersonX: you have to call close before return
[15:08:20] <biberu> and you can't close if open fails
[15:10:02] <biberu> or use finfo_file for that matter
[15:14:57] <biberu> PersonX: you've also got to handle errors from finfo file
[15:20:17] <PersonX> biberu: looking for examples online, not sure how I would go about doing so. I am sifting through the manual, not finding too much. (new to PHP).
[15:20:38] <biberu> PersonX: for example, look at return types here: https://www.php.net/finfo_open
[15:20:47] *** Joins: bytestream (~bytestrea@cpc101298-bagu16-2-0-cust595.1-3.cable.virginm.net)
[15:20:50] <biberu> "Returns an finfo instance on success, or false on failure. "
[15:21:42] <biberu> so if it can't initialize the instance your $file_info will hold the value false
[15:22:17] <biberu> you've got to check for that, e.g. by if($file_info === false) { // handle error } else { // work with finfo }
[15:22:28] <PersonX> so can't I just if (!$file_info)
[15:22:47] <PersonX> ah, sorry, typed that when you did.
[15:23:07] <biberu> same for https://www.php.net/finfo_file, or any other function you're unfamiliar with, check what arguments it takes, what it returns, how it handles errors
[15:24:12] *** Joins: stenno (~stenno@user/stenno)
[15:25:32] <PersonX> Thank you. Will be reading up some more. Appreciate your help.
[15:25:35] *** Quits: bytestream (~bytestrea@cpc101298-bagu16-2-0-cust595.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[15:25:41] <biberu> np
[15:28:25] *** Joins: bytestream (~bytestrea@ec2-35-176-196-6.eu-west-2.compute.amazonaws.com)
[15:29:11] *** Quits: bytestream (~bytestrea@ec2-35-176-196-6.eu-west-2.compute.amazonaws.com) (Changing host)
[15:29:11] *** Joins: bytestream (~bytestrea@user/bytestream)
[15:29:16] *** Quits: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[15:36:35] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:ac3a:1f28:437:f98b) (Ping timeout: 252 seconds)
[15:36:57] <PersonX> biberu: last question before I hit the hay. https://pastecode.io/s/nuxaaaxf - would something like this work? I am also looking in to exceptions, new to me as well =/ Thanks again.
[15:37:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[15:37:44] *** Joins: stenno (~stenno@user/stenno)
[15:38:11] <Naktibalda> PersonX: style suggestion - you don't need  "else"  after throw because execution of this function ends at his poin
[15:38:24] <biberu> PersonX: finfo_file can also return false
[15:38:55] <Naktibalda> you could use return in_array(...) to make it return true/false based on match, it is unnecessary to use if
[15:38:58] <biberu> PersonX: and another style thing, array(1, 2, 3, ...) is just a longer way of typing [1, 2, 3, ...]
[15:39:23] <biberu> if you're learning from a resource that uses the array() syntax it's likely out of date
[15:40:20] <biberu> PersonX: also, there's a lot of things to learn in this world, just take care of one thing at a time and don't let it stress you
[15:40:24] *** Joins: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net)
[15:40:58] *** Joins: guido (~guido@host-79-23-86-147.retail.telecomitalia.it)
[15:41:45] <biberu> PersonX: i've been doing this for a very long time and i'm still learning, days where you get to learn new things are good days
[15:43:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[15:44:07] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[15:44:43] *** Quits: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[15:45:03] *** Joins: stenno (~stenno@user/stenno)
[15:47:05] <PersonX> Of course :) I am happy to be learning. So, if finfo_file or finfo_open fail, do I still need to close before that exception in the if (fail)? or is it not necessary, since open fails? I'm a tad confused, heh. But this is what I changed it to. https://pastecode.io/s/vw57p3dk - I'm not sure if finfo_close needs to be before the throw in that if? Or
[15:47:32] *** Joins: Viper-7 (~viper7@irc.viper-7.com)
[15:47:57] <biberu> PersonX: if finfo_file fails $file_info still needs to be closed before you leave the function
[15:48:42] <biberu> PersonX: your previous example was closer, just add a check for $file_mime after line 9
[15:50:00] <PersonX> ah is that because $file_mime will fail if $file_info fails?
[15:51:08] <biberu> the call to finfo_file() on line 8 could return false
[15:51:36] <biberu> regardless of what it returns you should close your finfo handle since you won't be needing it any longer
[15:51:50] <biberu> but then you have to check if finfo_file succeeded before using the result
[15:57:27] *** Joins: mnemonic (~semeion@user/semeion)
[15:58:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:00:47] *** Joins: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net)
[16:01:34] <PersonX> Heh, a lot of checking :P anyway, will be going to bed now, more to learn tomorrow. Left off here: https://pastecode.io/s/6yk9a217 - Cheers, thanks again, for the 3rd time.
[16:02:24] <biberu> PersonX: now you removed the check for finfo_open :)
[16:03:18] <PersonX> if ($file_mime === false || $file_info === false) { <-- I thought you said my previous example was closer.
[16:03:19] <PersonX> lol
[16:03:27] *** Quits: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:04:25] <biberu> that paste appears to be gone now
[16:04:47] <biberu> but just read your code as plain speech
[16:05:04] <biberu> get the info from finfo_open
[16:05:15] <biberu> use the result from finfo_open in finfo_file
[16:05:37] <biberu> that doesn't make sense, you're never checking if finfo_open worked
[16:05:57] *** Joins: willphd (~will@ni3.cotil.unicamp.br)
[16:06:09] *** Parts: willphd (~will@ni3.cotil.unicamp.br) (WeeChat 3.2.1)
[16:07:54] *** Joins: deksar (~deksar@user/deksar)
[16:08:21] <deksar> Hi. Both php80-pecl-imagick-3.4.4_2 and php80-pecl-imagick-im7-3.4.4_2 creates error on php-fpm daemon under FreeBSD 13.0-Release-p4. like; <b>Warning</b>:  Missing arginfo for Imagick::__tostring() in <b>Unknown</b> on line <b>0</b><br /> - any idea to a solution please? ("service php-fpm restart" gives such warnings)
[16:08:22] <__adrian> just for awareness, you don't really need to close it
[16:08:41] <PersonX> true, but adding two if's to check, is there a better, or more practical way? https://pastecode.io/s/33tcx2fu
[16:10:24] <PersonX> I'll get it one day, I swear! lol.
[16:10:58] <__adrian> if that's the amount of error wrapping you want, it's completely fine.
[16:11:44] <__adrian> (a) subclass Exception.  (b) throw a unique error for each failure mode.  (c) use error codes.
[16:11:58] <biberu> the class based interface would be cleaner
[16:12:23] <biberu> these are still things that have to be learned though
[16:12:23] <__adrian> yes, i like the oop version better, but that's not a huge deal
[16:12:27] <__adrian> $mime = (new Finfo(FILEINFO_MIME_TYPE))->info($filename)
[16:12:30] <Naktibalda> there is nothing to close in line 5
[16:12:53] <__adrian> also, practical suggestion: make $valid_types an argument
[16:13:38] <biberu> or just return the type, separate the responsibilities of getting it from checking it
[16:15:00] <__adrian> deksar: possible answer: https://bugs.php.net/bug.php?id=81020
[16:15:59] <__adrian> the solution is to use the official release; you can't fix it yourself (the package is broken)
[16:23:06] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[16:24:43] *** Joins: monohlu (~monohlu@87.116.164.205)
[16:25:39] *** Quits: monohlu (~monohlu@87.116.164.205) (Quit: Client closed)
[16:26:40] *** Joins: monohlu (~monohlu@87.116.164.205)
[16:35:55] *** Joins: stutz (~stutz@user/stutz)
[16:36:54] <stutz> is there a list of extension api timestamps for each php version? like "no-debug-non-zts-20200930" for 8.0
[16:36:54] *** Quits: monohlu (~monohlu@87.116.164.205) (Quit: Client closed)
[16:37:01] *** Joins: Poboy (~Poboy@user/poboy)
[16:37:47] *** Quits: fahrradToken (~fahrradTo@212.7.190.34) (Ping timeout: 240 seconds)
[16:41:37] <deksar> __adrian: it was official release (installed through pkg install on FreeBSD 13)
[16:44:50] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[16:45:34] <__adrian> "official" as in "official php," not "official FreeBSD"
[16:45:49] <__adrian> though i don't know that that's your problem, just sounds like the same issue
[16:46:39] <__adrian> the problem described there is that a FreeBSD package was not packaging the right extension
[16:53:36] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:c9c4:251e:1e89:6807)
[16:59:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[17:04:33] *** Joins: Anticom (~Anticom@87.190.49.75)
[17:14:28] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[17:24:46] *** Quits: mactron (~mactron@apn-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[17:28:10] *** Joins: stenno (~stenno@user/stenno)
[17:30:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:33:25] *** Joins: NakedKing (~NakedKing@user/nakedking)
[17:39:53] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[17:41:16] *** Florida is now known as FloridaMan
[17:43:45] *** Joins: keypusher (keypusher@user/keypusher)
[17:46:10] *** Joins: mnemonic (~semeion@user/semeion)
[17:50:12] *** Quits: kerunaru (~Jmcb@40.red-79-146-101.dynamicip.rima-tde.net) (Quit: leaving)
[18:08:18] *** Joins: olle_ (~olle@p5785bfee.dip0.t-ipconnect.de)
[18:08:37] <olle_> There's no way to express mocks in PHPUnit in JSON or XML or something? Mocking code can be hard to overview.
[18:09:18] <__adrian> what do you mean by a "way to express"?
[18:09:42] <olle_> Instead of $thing = $this->getMock()->setattributes, methods, etc etc, I can do that setup in JSON/XML instead.
[18:10:23] <__adrian> well, you can't put _code_ in json, so there's that at least
[18:10:51] <__adrian> the rest you could probably write something that does it. i don't think such a thing exists and not sure how valuable it would be
[18:11:05] <olle_> I found something like that for db fixtures.
[18:11:20] <olle_> But better is to not use db at all, I figured.
[18:11:36] <__adrian> do you mean, to mock the db?
[18:11:49] <__adrian> or to actually build a db for tests
[18:12:45] <olle_> No, I mean to build up mock objects. :)
[18:12:59] <olle_> https://phpunit.de/manual/6.5/en/test-doubles.html#test-doubles.stubs.examples.StubTest2.php
[18:13:02] <olle_> Like that
[18:13:17] <olle_> But when it gets longer, it gets hard to read
[18:13:24] <olle_> Two orders, two invoices, two different products, ...
[18:13:42] <__adrian> i meant the tool "for db fixtures" you mentioned
[18:14:10] <olle_> Oh
[18:14:43] <__adrian> but if you need multiple mocks, you should probably have a builder class (or similar) with multiple methods that build them
[18:14:50] <olle_> https://stackoverflow.com/questions/6675204/phpunit-database-testing-fixtures-not-set
[18:14:55] <__adrian> multiple *and/or complicated
[18:15:03] <olle_> Hmmm
[18:15:37] <__adrian> the need for many mocked objects might imply you need several, more focused tests, too
[18:15:53] <__adrian> or that you should refactor your code to narrow responsibilities
[18:15:59] *** Joins: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi)
[18:16:23] <olle_> Yeah, this is for one of the "top functions"
[18:16:56] <__adrian> sounds more like a functional/integration test
[18:17:30] <__adrian> might be more a candidate for an actual staging environment, with a working system
[18:17:31] <olle_> Yeah, but then I'd need to setup the db in the pipeline :(
[18:17:36] <__adrian> unit testing is meant to be small
[18:18:22] <__adrian> "unit" == one piece
[18:18:59] <olle_> I had a bug in my code AND in my test :|
[18:19:41] <olle_> Faulty mocking, like $invoice1->no = ..., then $invoice1 again, should be $invoice2
[18:19:42] <olle_> Bah
[18:19:47] <olle_> Anyway
[18:21:15] <olle_> __adrian: Yeah...
[18:21:48] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[18:25:19] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:c9c4:251e:1e89:6807) (Ping timeout: 252 seconds)
[18:27:51] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[18:28:37] *** Joins: semeion (~semeion@user/semeion)
[18:28:37] *** mnemonic is now known as Guest608
[18:31:28] *** Quits: Guest608 (~semeion@user/semeion) (Ping timeout: 252 seconds)
[18:32:49] <biberu> olle_: why does it have to be mocked?
[18:38:49] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[18:41:13] <olle_> biberu: instead of what?
[18:42:19] <olle_> I didn't want to bother with db fixture yet...
[18:42:24] <olle_> Buuuut maybe no choice in long run
[18:42:35] <olle_> This is just a smaller cronjob tool we're using, but of course it grows and grows...
[18:42:49] <olle_> And it's checking some critical economical data, so
[18:43:28] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[18:48:52] *** Quits: Anticom (~Anticom@87.190.49.75) (Quit: Leaving)
[18:50:24] <biberu> olle_: i don't know the context so this is very general, just a bit suspicious about *having* to mock since it can cover up design issues, i usually just supply an alternative implementation for tests
[18:50:44] <olle_> biberu: "alternative implementation" what?
[18:51:05] <olle_> We're using active record pattern, so I can't get around that
[18:51:17] <biberu> another function or class that fulfills the same interface
[18:51:49] <olle_> biberu: yeah sure, I've done that too, with anonymous classes
[18:56:02] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[19:10:15] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Quit: Leaving)
[19:12:55] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[19:15:14] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[19:15:33] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:17:31] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[19:35:40] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[19:38:21] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[19:45:22] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Read error: Connection reset by peer)
[19:46:14] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[19:49:35] *** Quits: olle_ (~olle@p5785bfee.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:50:38] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 252 seconds)
[19:51:03] *** Joins: genom (~g@37.214.30.134)
[19:59:50] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[20:01:32] *** Joins: magla (~gelignite@55d4bce1.access.ecotel.net)
[20:21:45] *** Joins: junktext (~junktext@77.247.181.216)
[20:22:06] *** Joins: Rockwood (~Rocky@user/rocky)
[20:24:42] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 260 seconds)
[20:24:52] *** Joins: kenoba1 (~kenoba@user/kenoba)
[20:28:33] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-583d-bbd0-681f-045b.res6.spectrum.com)
[20:28:55] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:30:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[20:36:56] *** Rockwood_ is now known as Rockwood
[20:37:47] *** Quits: ordos (~ordos@user/ordos) (Remote host closed the connection)
[20:38:04] *** Joins: ordos (~ordos@user/ordos)
[20:39:08] *** Joins: miklcct (quasselcor@miklcct.com)
[20:53:04] *** Joins: Poboy (~Poboy@user/poboy)
[20:55:07] *** Quits: junktext (~junktext@77.247.181.216) (Remote host closed the connection)
[20:56:18] *** Joins: junktext (~junktext@77.247.181.209)
[21:07:31] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:15:52] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e)
[21:17:18] *** Joins: Gamara (~Gamara@66-203-186-206.ded.execulink.com)
[21:20:13] *** Joins: semeion (~semeion@user/semeion)
[21:21:52] *** Quits: junktext (~junktext@77.247.181.209) (Ping timeout: 252 seconds)
[21:22:22] <Gamara> is PDO easy to do joins in? anyone know a good guide on how to do joins in PDO?
[21:22:38] <__adrian> joins have nothing to do with pdo
[21:22:43] <__adrian> that's SQL
[21:22:53] <Gamara> yeah but what if you have duplicate column names
[21:22:59] <__adrian> that's also SQL
[21:23:05] <__adrian> (you alias them)
[21:23:15] <Gamara> oh ok
[21:23:26] <AllenJB> Use column aliases (`column` AS `alias`) to avoid issues with duplicate column names in result sets
[21:23:27] <Gamara> so just use, "as"
[21:23:37] <Gamara> thank you :)
[21:23:47] <Gamara> The only other orm i used was dapper
[21:23:54] <__adrian> PDO is not an orm
[21:24:03] <Gamara> what is it then?
[21:24:08] <Gamara> just an interface?
[21:24:13] <__adrian> a database api
[21:24:14] <__adrian> yes
[21:24:32] <Gamara> it doesn't protect against sql injection?
[21:24:39] <Gamara> with parameter insertion?
[21:24:52] <AllenJB> Yes, it has parameterized / prepared queries.
[21:24:53] <__adrian> it supports paramterization, yes
[21:25:07] <__adrian> (that doesn't mean you can't do it wrong, of course)
[21:25:25] <Gamara> im still going to sanitize the heck out of my inputs lol
[21:25:28] <__adrian> no
[21:25:34] <AllenJB> You might want to read through https://phpdelusions.net/pdo which is a good tutorial on how to use PDO and its capabilities
[21:25:41] <__adrian> that's completely wrong and counterproductive
[21:26:06] <Gamara> you shouldnt check inputs to your server to make sure they are formatted correctly?
[21:26:18] <__adrian> parameterize. DO NOT quote() or try to "sanitize" in any way. at best you ruin your data; at worst you create your own sqli
[21:26:24] <__adrian> "formatted" ?
[21:26:35] <__adrian> you should validate inputs, yes. this has nothing to do with the DB.
[21:26:49] <Gamara> yeah sorry I am pretty scatter brained
[21:26:54] <Gamara> thank you so much for the help
[21:26:57] <Gamara> you guys are awesome
[21:27:07] <__adrian> do you understand the distinction?
[21:27:25] <Gamara> not really
[21:27:27] <Gamara> honestly
[21:27:35] <Gamara> you are saying just use the interface
[21:27:37] <__adrian> then ask  :)  don't say "ok thanks" and leave
[21:27:54] <__adrian> validation is about the data, and what you want to accept.
[21:28:41] <__adrian> e.g., if you ask for a "birth date" then you want a valid date, probably one in the past
[21:28:42] <Gamara> just use the api is what you are saying
[21:28:53] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 264 seconds)
[21:28:54] <__adrian> no
[21:29:03] <__adrian> i'm answering now
[21:29:29] <__adrian> validation has nothing to do with SQLi or with the database _at all_. it's only about your data. is it what you want? good. no? reject it.
[21:29:50] <__adrian> to prevent SQLi, you pass data as _parameters_.
[21:29:55] <__adrian> !+pdo_mysql prepare
[21:29:55] <php-bot> How to prepare a statement using PDO: https://gist.github.com/adrian-enspired/1ddd71511e01c1f609db
[21:30:25] <__adrian> this makes sure the SQL and the data are not mixed up and confused. it has nothing to do with whether the data is valid/what you want.
[21:30:34] <__adrian> two completely separate concerns.
[21:31:40] <Gamara> ok thank you so much that is really helpful
[21:31:43] <__adrian> note, in both cases, there is no "sanitize." you do not (ever) try to "fix" the data.
[21:31:59] <Gamara> you just separate the concerns
[21:31:59] <__adrian> if you don't like it, throw it away.
[21:32:11] <Gamara> validation is done upstream
[21:32:23] <Gamara> is what you are saying
[21:32:26] <__adrian> from the DB? yes. validation belongs to your app
[21:37:26] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[21:43:21] *** Joins: Rockwood (~Rocky@user/rocky)
[21:43:44] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:44:45] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[21:45:25] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[21:45:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:47:50] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[21:48:45] *** Joins: semeion (~semeion@user/semeion)
[21:48:48] *** Joins: Rockwood (~Rocky@user/rocky)
[21:48:49] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[21:49:19] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[21:50:03] *** Parts: Poboy (~Poboy@user/poboy) ()
[21:53:01] *** Joins: jess (~jess@libera/staff/jess)
[21:58:01] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[22:06:04] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:09:00] *** Joins: junktext (~junktext@109.201.152.179)
[22:13:51] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: There's nothing dirtier than a giant ball of oil)
[22:15:10] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Ping timeout: 252 seconds)
[22:15:59] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[22:16:58] *** Joins: pmercado (~pmercado@186.107.35.198)
[22:18:00] *** Quits: titus123 (~gsandroid@ip145-141.pris.ca) (Client Quit)
[22:29:36] *** Quits: Gamara (~Gamara@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[22:39:01] *** Joins: Simplar (~quassel@188.163.92.105)
[23:04:43] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Ping timeout: 252 seconds)
[23:05:33] *** Joins: Rockwood_ (~Rocky@user/rocky)
[23:08:01] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[23:08:55] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Read error: Connection reset by peer)
[23:35:31] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[23:35:45] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:38:20] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[23:51:13] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
