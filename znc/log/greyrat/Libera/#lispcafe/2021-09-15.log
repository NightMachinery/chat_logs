[00:07:48] <White_Flame> I only play age of empires (1)
[00:08:22] <lotuseater> White_Flame: oh cool, but II was my favorite in earlier days :) didn't also a remake came out?
[00:08:36] <White_Flame> either came out or is coming out
[00:08:42] <lotuseater> nice
[00:08:47] <White_Flame> hmm, I think it's actually age of empires 4, not a remake
[00:09:13] <lotuseater> and I heard of something similar for Diablo 2
[00:09:17] <lotuseater> ah okay
[00:12:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:16:09] <shka> ASL group D, cool first game https://www.youtube.com/watch?v=ciUxx2E7Lew
[00:16:10] -ixelp- [ENG] AfreecaTV StarLeague(ASL) S12 Ro.24 Group D (Tastosis) - YouTube
[00:19:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:40:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:50:57] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:10:09] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:15:46] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:18:13] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[01:26:40] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 252 seconds)
[01:44:10] <mfiano> shka, etc: How do you normally subscribe to changes in the model from the view, in a sophisticated CLOS-based application? I am mainly talking about "problem 1" in section 2.1 of beach's "Using Stealth Mixins to Achieve Modularity" paper. I have considered the observer pattern, but that loosely couples the view in the model, and such mutual dependency circularities make me upset, even if they are
[01:44:12] <mfiano> loose.
[01:45:43] <mfiano> (iirc, the paper only addresses "problem 2")
[01:47:17] <mfiano> White_Flame: Since you are active, and I enjoy reading your Lisp architecture responses whenever you have something to say, perhaps this question interests you enough to answer as well :)
[01:47:51] <White_Flame> I'm not familiar with the papr
[01:49:00] <White_Flame> I also don't use a lot of CLOS stuff :)
[01:49:50] <mfiano> in summary, the view layer needs to compute some information about the various objects of the model, and store this information for later use. problem 1 is the view subscribing to any modifications in the model, so that these annotations can be computed.
[01:51:00] <White_Flame> I like forward-chaining inference models for that
[01:54:51] <mfiano> I see. I'm not really familiar, but I think it might be orthogonal to the problem from the little bit I've read.
[01:55:11] <mfiano> No worries though. I've just been thinking a lot about how to make my code more modular
[01:55:39] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:06:02] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:14:43] <White_Flame> yeah, I normally don't take a closed OO approach, but break out the data per problem into something else more bespoke to the problem
[02:15:56] <White_Flame> OO is often premature composition
[02:17:03] <mfiano> class-centric OO is different from CLOS though, of course. And composition via mixins etc is often a good data representation
[02:17:08] <White_Flame> or I guess premature integration or whatever a proper word for being too tightly integrated together
[02:17:23] <White_Flame> things about an object shouldn't all reside in the same object
[02:19:28] <mfiano> Of course. We could replace "object" with a different abstraction, like "package" for the purposes of my question.
[02:20:30] <White_Flame> a forward chained inference system basically captures all changes to the information stored within it by its nature, as opposed to having to construct change capture on top of an existing object system
[02:22:12] <mfiano> Yeah the question is moreso about propagating those changes to interested parties in a non-circular way
[02:23:46] <mfiano> or rather, informing them of such
[02:25:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:32:40] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:40:08] *** Joins: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net)
[02:42:57] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1023-static.midco.net) (Ping timeout: 245 seconds)
[02:44:48] *** Quits: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net) (Remote host closed the connection)
[02:48:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:51:52] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net)
[02:55:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:02:28] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:15:43] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[03:23:14] <lotuseater> hayley: do you know that already? https://www.youtube.com/watch?v=5JJu-CTDLoc
[03:23:15] -ixelp- Claycat's DOOM ETERNAL | a Stop motion Animation - YouTube
[03:27:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:34:06] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:45:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[03:45:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:47:57] <aeth> https://old.reddit.com/r/LiminalSpace/top/
[03:47:58] -ixelp- top scoring links : LiminalSpace
[03:48:32] <aeth> So many of those pictures feel like my favorite kind of video game map. The kind you get from custom user-made maps, e.g. on Garry's Mod. Realistic textures, very unrealistic, abstract worlds
[03:48:52] * hayley walks in repeatedly muttering "The aim of alternate technology is to reject the logic of centralist technology, not to invert it. The aim of alternate technology..."
[03:49:14] <aeth> https://i.redd.it/1koq5y6vxtb71.jpg
[03:49:51] <aeth> https://i.redd.it/bo28cddybhi61.jpg
[03:50:12] <hayley> People don't seem to ever learn.
[03:51:07] <aeth> https://i.redd.it/pp7fbmvxh4i71.jpg
[03:52:27] <hayley> I haven't read all of The Ecology of Freedom but it goes hard right here: "Terms like "large," "small," or "intermediate," and "hard," "soft," or "mellow" are simply externals â€” the attributes of phenomena or things rather than their essentials. They may help us determine their dimensions and weights, but they do not explain the immanent qualities of technics, particularly as they relate to society."
[03:53:14] <mfiano> Sometimes I have a hard time finding hayley's context.
[03:53:25] <mfiano> This is one of those times.
[03:53:36] <hayley> Nothing.
[03:54:17] <hayley> I just woke up weird today. Best thing to do is not to think about it.
[03:54:58] <mfiano> I am good at not thinking about it, but usually good at not thinking good about it :/
[03:55:32] <mfiano> Still thinking about architecture
[03:55:48] <hayley> https://www.youtube.com/watch?v=XA3KTY--20g
[03:55:48] -ixelp- Architecture And Morality (2003 Digital Remaster) - YouTube
[03:56:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:58:04] <hayley> My ex still seems to be involved with "small technology". But she was always a sucker for the tyranny of small communities (as opposed to that of larger communities).
[03:59:35] <hayley> She used to help me publish things, so this is unfortunate.
[04:01:04] <mfiano> I'm still reading AMOP, but I'm curious how you would use it to modify stealth-mixin to store mixins in the victim class instead of a global hash table. Any ideas?
[04:02:09] <hayley> I'm not sure, given that you can't change the metaclass of a class.
[04:02:25] <mfiano> Well the comment beach left says it would be better to do that
[04:03:11] <mfiano> unless I interpret it wrong
[04:03:12] <mfiano> https://github.com/robert-strandh/Stealth-mixin/blob/master/stealth-mixin.lisp#L10-L11
[04:03:13] -ixelp- Stealth-mixin/stealth-mixin.lisp at master Â· robert-strandh/Stealth-mixin Â· GitHub
[04:03:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:03:38] <hayley> I guess so, but I am not sure how beach would plan to do it.
[04:14:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:32:01] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[04:45:09] <mfiano> Is the event queue part of the observer pattern what class-centric OO people refer to the "C" in MVC as?
[04:45:47] <hayley> Dunno, never did MVC. The lecturer said I did MVC once but I didn't see it.
[04:45:52] <mfiano> Me neither
[04:46:55] <White_Flame> MVC is a nebulous concept.  There is no hard division between layers, nor concrete infrastructure for one
[04:47:03] <hayley> All I know is CLIM (I guess controller = command translator, model = Lisp objects, view = presentation) and Morphic.
[04:47:18] <White_Flame> it's also extremely recursive.  each of the M, V, and C have a conceptual MVC running them as well
[04:48:10] <mfiano> I've just been readidng about the observer pattern, and even that seems nebulous.
[04:48:26] <hayley> But MVC looks synchronous to me, reading the Wikipedia page.
[04:49:16] <mfiano> I think the answer is, nobody knows how to program, but we all know how to tell people how to program.
[04:49:31] <hayley> Something like that.
[04:50:44] <White_Flame> I'd agree
[04:51:02] <White_Flame> everybody also wants silver bullets, they handwave something that sounds applicable to a problem, but it's never concretely solved
[04:51:12] <White_Flame> but hey, it sells books & training courses
[04:51:36] <mfiano> Yeah, that's my big issue with "patterns".
[04:51:55] <hayley> Unrelated, TIL https://archlinuxarm.org/platforms has a huge list of single board computers.
[04:51:56] -ixelp- Arch Linux ARM
[04:52:01] <mfiano> They're spoonfeed material for young and impressionable programmers that accept there is a general solution to every problem
[04:52:02] <White_Flame> well, patterns are something that exist and have been given a name
[04:52:12] <White_Flame> but that's just it, they're patterns of usage, not concrete tools
[04:52:34] <White_Flame> and the ability to name the type of thing you're doing is useful
[04:52:45] <White_Flame> but you can't just grab an "observer pattern" library and reuse it, for example
[04:53:19] <mfiano> Agreed
[05:00:02] <mfiano> But yeah, there is no silver bullets. Our trade-offs have trade-offs all the way down.
[05:01:16] <White_Flame> "Software is tradeoffs, highness.  Anyone who says differently is selling something."
[05:01:52] <mfiano> That is what separates a good programmer from the bad ones in my honest opinion; having the discipline to distinguish worthwhile changes that reduce to problem closer to its essence and within the bounds of acceptable trade-offs, from the pernicious changes.
[05:02:38] <mfiano> Otherwise there is this constant tug of war of "sideways" movements in the code
[05:06:18] <copec> I like the view of the programming language being really for other people to read.
[05:07:10] <White_Flame> I need it to be for _me_ to read :-P
[05:07:31] <White_Flame> I have too many projects, and it's so easy to go back to something and have no idea what it's doing or why
[05:07:36] <copec> So I like things that move towards capturing more information at a higher level
[05:09:48] <copec> I love that in CL you can get a house by essentially drawing a box in the dirt 
[05:09:59] <copec> And then you can fill in the details 
[05:10:08] <hayley> https://www.youtube.com/watch?v=zJW86h_CePw
[05:10:08] -ixelp- Back In Judy's Jungle (2004 Digital Remaster) - YouTube
[05:11:28] <mfiano> copec: Ha, yes
[05:14:38] <mfiano> I think CLOS, particularly the MOP, is the most attractive language feature in that regard. It's sort of amazing how much you can additively iterate on an idea with a programmable object system, intermixed with any other paradigms you need.
[05:15:10] <mfiano> Sadly it is the least understood/under-used feature (well okay, maybe beat by the condition system)
[05:25:54] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[05:38:51] <hayley> https://itnext.io/how-visual-studio-2022-ate-up-100-gb-of-memory-and-what-xml-bombs-had-to-do-with-it-3a92ed11c6cb
[05:58:12] *** Joins: ln43 (~ln43@user/ln43)
[06:14:47] <ln43> anyone here that has a working closer-mop ?
[06:15:21] <ln43> i'm quickloading it but doing closer-mop: and then tab there is no symbols completion
[06:28:04] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: Aurora_v_kosmose)
[06:47:43] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[07:05:07] *** Joins: phantomics (~phantomic@71-218-230-231.hlrn.qwest.net)
[07:05:14] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[07:15:53] <mfiano> #commonlisp seems a bit busy right now. Anyone know where AMOP's #'class-direct-methods is defined? I'm not seeing it in the book or in closer-mop...
[07:18:05] <hayley> You mean specializer-direct-methods?
[07:18:11] <mfiano> No
[07:19:04] <hayley> As a class is a specializer, class-direct-methods would be redundant.
[07:19:08] <mfiano> The book references both
[07:19:15] <mfiano> (class-direct-methods (class)) Returns a set of method metaobjects, each of which has the class metaobject (class) among its list of specializers.
[07:19:41] <hayley> Weird.
[07:23:42] <mfiano> Very
[07:29:19] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[07:30:23] <copec> nothing recursively greps under sbcl or closer-mop source
[07:32:12] <copec> https://www.google.com/search?q="class-direct-methods"
[07:33:20] <mfiano> Unfortunately google's search results have gone to shit and that was my last resort. It finds any occurence of those 3 words when quoted
[07:33:50] <lotuseater> mfiano: sorry for the business. i read your question and thought if i have an answer, but i don't :/
[07:34:41] <lotuseater> or you ask beach directly, i think he will be there in a few minutes or so
[07:35:10] <mfiano> As in now :)
[07:35:55] <copec> Here is beach's hyperspec of the amop: http://metamodular.com/CLOS-MOP/
[07:35:56] -ixelp- The Metaobject Protocol of the Common Lisp Object System
[07:38:01] <copec> https://www.google.com/search?q="class-direct-methods"+site%3Ametamodular.com
[07:53:05] <copec> https://blog.thea.codes/typefaces-i-love/
[07:53:05] -ixelp- A few of my favorite typefaces - Stargirl (Thea) Flowers
[07:54:03] <hayley> 1. Computer Modern Roman 2. Computer Modern Sans-Serif 3. Computer Modern Typewriter Text 4. Computer Modern Typewriter Text (Variable Width) 5. ...
[07:54:05] * mfiano begins to think there should be an #cl-april or whatever channel
[07:54:38] <moon-child> yeah, cmr is great
[07:54:54] <moon-child> I know curlicues are not so much in style anymore, but I like them
[07:55:16] <hayley> 1. Paper body font 2. Paper font (when serifs look too old) 3. Code font 4. Title font
[07:56:53] <kakuhen> my favorite font depends largely where it's used
[07:57:25] <kakuhen> hot take: if you use a monospace font for literature then you are literally the devil
[07:58:23] <kakuhen> but if you want something that can be easily censorable and not leak information (e.g. via kerning) then monospace fonts are great
[07:58:25] <mfiano> Absolutely. Comic Sans is a much better choice.
[07:58:38] <kakuhen> oh another controversial take i have is that uh
[07:58:41] <kakuhen> i dont get the hate towards comic sans
[07:58:47] <kakuhen> what do people find so appalling about it 
[07:59:05] <moon-child> monospace prose is fine.  What's really senseless, though, is _justified_ monospace
[07:59:27] <moon-child> I mean justified on the web, with variable-type spaces.  roff-style justification (with a varying number of fixed-width spaces) is fine
[07:59:39] <kakuhen> justified only sucks because not a single web browser can do it properly
[07:59:50] <kakuhen> if that weren't the case then it'd be decent typography for websites
[08:00:07] <moon-child> yeah, justified text is great.  Justified monospace on the web, though, no
[08:00:11] <kakuhen> oh also i cant stand how Chrome does font rendering
[08:00:28] <kakuhen> for some reason everything on my screen looks fine but then on chrome it just decides to use its own font and text rendering and it's awful
[08:00:34] <kakuhen> I need to take a picture so you can see; words can't describe
[08:07:30] <kakuhen> https://a.uguu.se/xLTRerAb.tiff
[08:07:38] <kakuhen> the one with the worst font rendering is chrome
[08:07:42] <kakuhen> the one with the best font rendering is firefox
[08:07:56] <kakuhen> safari is close to firefox but you wont tell the difference with european scripts
[08:08:15] <kakuhen> safari loses against firefox in edge cases like right-to-left text and CJK
[08:09:07] <kakuhen> the nice part about chrome is that it looks consistently bad across devices; firefox will only look good if your OS already has decent font rendering, otherwise firefox just looks even worse
[08:15:21] <copec> I really like this IBM Plex Mono
[08:16:21] <copec> I also hate Chrome rendering too
[08:18:10] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:18:23] <kakuhen> as far as monospace fonts go, IBM Plex is pretty good
[08:19:56] <kakuhen> for my terminal, I use it when neither SF Mono nor Monaco  are available
[08:21:38] <mfiano> I pretty much use a face in the Iosevka family for everything, depending on where it's used.
[08:24:29] <hayley> For my last "books" I ended up using Charter for body text. If I can get a pretty printer for TeX working, I may use some vaguely computer-y serif font for code in the next one.
[08:26:19] <hayley> https://tug.org/FontCatalogue/algolrevived/ even?
[08:26:20] -ixelp- The LaTeX Font Catalogue â€“ Algol Revived
[08:27:52] <hayley> To a close approximation, just print (A B C) as (\begin{minipage}A B C)\end{minipage} surely.
[08:30:38] *** Joins: semz (~none@user/semz)
[08:50:26] <copec> I'm down with algolrevived
[09:04:02] *** Quits: clothespin_ (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Quit: Leaving)
[09:05:09] <copec> What font do you use in your editors?
[09:06:02] <hayley> Computer Modern Typewriter Text
[09:07:06] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:08:09] <mfiano> This one https://i.lisp.cl/WfHzqS.png
[09:08:56] <dave0> maw
[09:14:29] <phantomics> Pragmata Pro, it costs but is worth every penny
[09:16:17] <hayley> https://github.com/no-defun-allowed/absolutely-not-cream 100/10 font
[09:16:18] -ixelp- GitHub - no-defun-allowed/absolutely-not-cream: "Cloning" the Smalltalk Cream font in Metafont
[09:26:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[09:37:44] *** Joins: lisp123 (~lisp123@45.130.83.212)
[09:42:19] *** Quits: lisp123 (~lisp123@45.130.83.212) (Ping timeout: 265 seconds)
[09:51:52] *** Joins: shka (~herr@109.231.62.239)
[10:08:06] <White_Flame> my font https://i.imgur.com/qy8KnKK.png
[10:08:29] <White_Flame> it's a bit big, I know I know
[10:34:23] <hayley> So I forgot that linear probing concurrent tables need more deletion logic than I can be bothered to implement. So I'll use a bucket table in order to keep it stupid.
[10:37:34] <shka> hayley: maybe double hashing?
[10:37:54] <hayley> shka: Maybe, but I don't want to ever resize; too messy.
[10:38:06] <shka> ok
[10:38:52] <hayley> As I have a fixed concurrent request limit (around 1000 by default?) so it wouldn't be hard to make a table with way too many buckets.
[10:41:28] <hayley> I found a stronghold underwater completely randomly in Minecraft. Yay.
[10:45:40] <White_Flame> my first mining foray in the last game that I started dropped me straight into an end portal
[10:45:43] <dave0> i liked the time you smelted your own tools
[10:46:04] *** Joins: vats (~vats@103.70.83.191)
[11:01:59] <moon-child> I ate half a pint of ice cream
[11:02:25] <moon-child> clearly excellent judgement on my part.  I shall do it again!
[11:06:55] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 268 seconds)
[11:11:14] *** Joins: selwyn (~selwyn@user/selwyn)
[11:32:50] <ck_> just eat "half of what you have", that way you won't run out
[11:34:45] <moon-child> zeno's ice cream
[11:49:36] *** Joins: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it)
[11:51:22] *** Quits: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[12:28:40] *** Joins: makomo_ (~makomo@user/makomo)
[12:49:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[12:52:16] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 265 seconds)
[12:52:58] *** Quits: makomo_ (~makomo@user/makomo) (Quit: WeeChat 3.2)
[13:17:01] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[13:46:42] <dave0> doing a little bit of coding each day is pretty awesome
[13:46:55] <dave0> things are getting done!
[13:49:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:52:16] <dave0> normally i think about coding instead of actually coding
[13:52:47] <dave0> then it's late and i say i'll do it tomrrow
[13:56:29] <ck_> put the Pro in Procrastination
[13:58:12] <dave0> yep i'm so lazy
[14:20:49] *** Joins: selwyn (~selwyn@user/selwyn)
[14:22:35] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:32:49] <gilberth> Good morning #lispcafe!
[14:33:33] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:35:52] <dave0> maw gilberth 
[14:37:22] <gilberth> Hello dave0! Out of space?
[14:37:49] <dave0> does a tab count as 8 spaces?
[14:38:10] <gilberth> Depends on where you put it.
[14:38:46] <dave0> ehehe
[14:38:57] <dave0> 	here!
[14:39:03] <selwyn> hi gilberth
[14:40:04] <gilberth> My .emacs says for ages: (setq-default indent-tabs-mode nil) ; Bruno says: "Tabs are anachronistic."
[14:47:30] <gilberth> I widened what is a word from 32-bit to 60-bit in TeX and it seems to work, which is nice as what would be a pointer is represented by a "half word" in TeX with 16-bit being a bit tight otherwise.
[14:50:44] <gilberth> As TeX has its own dynamic memory by keeping things in one big array of "memory words".
[14:55:29] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[14:57:43] <selwyn> speaking of tex, today i am starting to write my phd thesis
[14:58:48] *** Joins: notzmv (~zmv@user/notzmv)
[15:16:21] <mfiano> shka: Your comments really shoved my thinking in the right direction yesterday. Thanks!
[15:21:50] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[15:22:58] <hayley> gilberth: https://i.redd.it/op3a9ry0sjn71.jpg
[15:31:22] <gilberth> Hello hayley, I must confess that I don't get the point.
[15:33:49] <hayley> There was a kerfuffle about a news article saying Rust got its principles from Amazon corporate practices, as Amazon employees make up some amount of the leading organisation.
[15:34:42] *** Joins: hendursaga (~weechat@user/hendursaga)
[15:34:47] <hayley> Said principles notably include "No time for toilet breaks, do it in a bottle".
[15:35:29] <shka> mfiano: it brings me joy to hear that!
[15:35:53] <gilberth> hayley: I see, I didn't get the reference.
[15:35:56] <mfiano> I think I am just about ready to tackle redesigning this complicated protocol.
[15:36:42] <hayley> Ergo, Amazon is an average big Rust shop. Whereas our favourite milk dealer runs a big Lisp shop.
[15:38:14] <gilberth> Milk? How about a dealer offering fine and distinguished wines?
[15:40:02] <hayley> Though I am starting to think I'm in more trouble w.r.t having to compact more often with my concurrent GC design. At least, it is tricky to reuse a partly full region as a thread local allocation buffer while someone else marks it.
[15:40:31] <hayley> gilberth: No, legend has it he spent his wife's money on founding a milk distribution company.
[15:41:50] <gilberth> Heh.
[15:42:09] * hayley thinks.
[15:43:04] <gilberth> TAKE COVER! HIDE! QUICK!
[15:43:20] <hayley> It's possible a marking thread wants to mark objects in our region, which is okay but could cause cache ping-ponging. Sweeping is embarrasingly parallel, so each thread can sweep their buffers whenever they feel like it.
[15:45:06] <hayley> But if I had to guess, Java runtimes just guess everything in the TLAB is live, and mark from there. Though they always start with empty TLABs surely.
[15:45:08] <gilberth> hayley: Would that still cause ping pong, when the mark bits are set aside? And sure, everyone could sweep their own realm.
[15:45:31] <ck_> good luck with the authoring, selwyn 
[15:46:12] <hayley> Yes, it causes ping pong when we look at it ourselves, e.g. would we allocate black, we need to update the bitmap.
[15:46:14] *** Joins: vats (~vats@103.70.83.191)
[15:46:14] <selwyn> ty
[15:49:13] <hayley> At least I'm pretty sure that is necessary, idk. Depends on the marking design really.
[15:50:40] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 240 seconds)
[15:52:52] <hayley> DLG usually allocates black by my reading of it.
[15:55:26] <hayley> But recall that such regions are mostly free, and generally when we collect we expect to free something, so it would be uncommon.
[15:55:34] *** Joins: vats (~vats@103.70.83.191)
[16:00:50] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[16:02:23] <hayley> Fun how many "this usually doesn't happen" statements I've seen and made. Pauseless doesn't usually pause every thread when starting compacting and flipping to tospace; only it pauses threads which trip the barrier before cooperatively flipping. My weak reference processing should work as reading weak references isn't done frequently.
[16:04:18] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 260 seconds)
[16:09:14] *** Joins: Duuqnd (~Duuqnd@185.201.174.78)
[16:12:44] <hayley> One thing is that these GC papers assume a Java object layout, i.e. you have a header word with some bits to borrow for marking and things.
[16:13:48] *** Joins: X-Scale` (~ARM@92.250.99.192)
[16:16:29] *** Quits: X-Scale (~ARM@46.50.0.45) (Ping timeout: 268 seconds)
[16:16:29] *** X-Scale` is now known as X-Scale
[16:17:56] <hayley> That said, I can still use a mark bitmap (rather than bytemap) as we allocate in multiples of "lines", we have 8 byte alignment, and a line is 128 (16 * 8), so we can't race with byte addressing instructions.
[16:20:05] <hayley> And I found some benchmarks to port <http://dacapobench.sourceforge.net/>
[16:20:06] -ixelp- DaCapo Benchmarks Home Page
[16:21:20] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[16:38:09] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Quit: WeeChat 3.2)
[16:58:34] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3675)
[17:03:45] <hayley> https://www.youtube.com/watch?v=YhqmBRg2_rs
[17:03:45] -ixelp- The ID ( OMD ) - Electricity ( 1977 ) - YouTube
[18:16:57] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3675) (Ping timeout: 268 seconds)
[18:35:28] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:40:10] *** Quits: Duuqnd (~Duuqnd@185.201.174.78) (Ping timeout: 268 seconds)
[18:45:10] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[18:49:34] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net)
[18:52:43] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net) (Ping timeout: 268 seconds)
[19:06:28] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[19:07:24] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Client Quit)
[19:07:42] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[19:12:35] *** Joins: cranium (~cranium@user/cranium)
[20:02:52] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[20:30:09] *** Quits: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[20:31:49] *** Joins: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it)
[20:33:04] *** Quits: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it) (Excess Flood)
[20:41:55] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[20:50:19] *** Joins: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it)
[20:53:32] <selwyn> https://nitter.net/rockpapershot/status/1438136142700875790#m
[20:53:33] -ixelp- Rock Paper Shotgun (@rockpapershot): "This astonishing new Doom mod will let you send Margaret Thatcher back to Hell nex [...]
[21:06:27] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:14:59] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[21:30:09] <pjb> Wouah! I didn't know they made a black 370: https://youtu.be/Tb0cRL2mnbA?t=20
[21:30:09] -ixelp- 1970 IBM System/370 Mainframe Computer History Archives Project Original Films - YouTube
[21:32:52] *** Joins: vats (~vats@103.70.83.191)
[21:33:51] <shka> damn
[21:34:01] <shka> brits really do hate thatcher
[21:44:46] <shka> https://www.youtube.com/watch?v=CrC_dDCY4c8
[21:44:46] -ixelp- SpaceX Could Fire Up First Orbital Class Starship's Super Heavy Booster This Week - Elon Musk - YouTube
[21:45:11] * shka still can't get over the number of engines on that booster
[21:45:25] <shka> full throttle is gonna be fucking biblical 
[21:47:44] *** Quits: random-nick (~random-ni@87.116.165.220) (Quit: quit)
[21:57:10] <humasect> thats a game 
[21:58:04] *** Joins: random-nick (~random-ni@87.116.181.5)
[22:12:05] <ck_> think of it as a Pre-Regulation Destroyer Class Solid Fuel Recoil Booster
[22:23:25] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:25:00] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Read error: Connection reset by peer)
[22:25:37] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[22:28:21] *** Joins: retropikzel (~retropikz@2001:999:20e:11a2:fca1:dd88:ffbb:73b5)
[22:31:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:37:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[22:45:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:52:20] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:59:01] *** Quits: retropikzel (~retropikz@2001:999:20e:11a2:fca1:dd88:ffbb:73b5) (Quit: Leaving)
[22:59:13] *** Joins: retropikzel (~retropikz@2001:999:20e:11a2:fca1:dd88:ffbb:73b5)
[23:08:38] *** Quits: retropikzel (~retropikz@2001:999:20e:11a2:fca1:dd88:ffbb:73b5) (Remote host closed the connection)
[23:08:51] *** Joins: retropikzel (~retropikz@2001:999:20e:11a2:f40c:d2e0:4c4e:e45f)
[23:11:54] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 265 seconds)
[23:24:04] *** Quits: retropikzel (~retropikz@2001:999:20e:11a2:f40c:d2e0:4c4e:e45f) (Ping timeout: 252 seconds)
[23:30:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:37:30] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:55:50] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
