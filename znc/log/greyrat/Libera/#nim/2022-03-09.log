[00:00:34] <reversem3[m]> https://play.nim-lang.org/#ix=3RIJ
[00:01:17] <reversem3[m]> Not understand how int.high works since the strm is a string. 
[00:02:29] <FromDiscord> <michaelb.eth> In reply to @auxym "can't use osproc at": yeah, I need to do it at compile time 😦
[00:03:11] <FromDiscord> <michaelb.eth> I guess I can live with a pause + displaying output after gorgeEx finishes
[00:07:12] <FromDiscord> <michaelb.eth> so when dev'ing with Nim on Windows, I like to work in an MSYS2 environment. That's been working really nicely for me for some time. But now that I'm using `gorgeEx` (i.e. compile-time shell command) , I'm having a problem. I think `gorgeEx` is launching cmd.exe, not sure, even though the context in which nimble / `nim c` is invoked is MSYS2 Bash.↵↵Is there  a way to control how `gorgeEx` shells out?
[00:17:19] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:19:57] <FromDiscord> <ripluke> Wait so Nim compiles to c, and then that c is compiled with a c compiler?
[00:21:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:26:13] <FromDiscord> <michaelb.eth> In reply to @ripluke "Wait so Nim compiles": yes, though there are other backends available as well, e.g. "nim compiles to c++" or "nim compiles to javascript"
[00:26:30] <FromDiscord> <michaelb.eth> see: https://nim-lang.org/docs/backends.html
[00:27:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[00:31:50] <FromDiscord> <auxym> In reply to @michaelb.eth "so when dev'ing with": don't think so, nim's compile-time subprocess facilities are unfortunately pretty limited
[00:36:12] <FromDiscord> <auxym> In reply to @reversem3 "Not understand how int.high": not sure I understand the question. `setPosition` sets the position of the "cursor" in the byte stream. Ie. if you set the position to 3, then the next byte that will be returned by `read` is the third byte, then the 4th, etc.
[00:45:14] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3RIW
[00:45:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:46:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:46:31] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:47:36] <FromDiscord> <auxym> In reply to @Require Support "so i have a": you shouldn't need the cast, if `generateFunction` returns a proc that matches the signature of `abcType` then you should be able to do `let abcFunction = generateFunctio(...)`
[00:48:13] <FromDiscord> <auxym> or `let abcFunction: abcType = generateFunction(...)`
[00:50:53] <reversem3[m]> auxym  basically I want to read the file convert to hex and only print out the signature which is the last 5 lines 
[00:50:58] <FromDiscord> <Require Support> unfortunately i need the cast
[00:52:36] <FromDiscord> <auxym> In reply to @Require Support "unfortunately i need the": why?
[00:53:39] <FromDiscord> <auxym> c interop?
[00:53:44] <FromDiscord> <Require Support> yep
[00:54:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:56:16] <FromDiscord> <auxym> so `generateFunction` is a C function that you're importing?
[00:57:01] <FromDiscord> <auxym> in that case you need to annotate the proc type `abcType` with the correct calling convention, IIRC for C functions it's `cdecl`
[00:57:30] <FromDiscord> <auxym> so `type abcType = proc(letters: string): int {.cdecl.}`
[00:57:50] <FromDiscord> <auxym> but also if it's C then it's probably `cstring` and `cint` rather than the nim types
[00:59:28] <FromDiscord> <auxym> https://nim-lang.org/docs/manual.html#types-procedural-type
[01:00:06] <FromDiscord> <Require Support> but if im going to this process for multiple types and functions, is it possible to turn it into an object and create an array of these objects and just for loop to import the functions 🤔
[01:02:14] *** Joins: toulene (~toulene@user/toulene)
[01:02:33] <FromDiscord> <auxym> I don't think I understand. Do you have an example with the actual for loop and the `importc` stuff?
[01:05:13] <FromDiscord> <hmmm> beefzor u still awake? 🤔
[01:06:20] <FromDiscord> <auxym> In reply to @reversem3 "auxym  basically I": there's many ways to do that, if the whole file fits into ram easily then the easiest way is probably to use `readLine` repeatedly and store all the lines into a seq. Then get the last 5 elements of that seq
[01:09:07] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3RJ0
[01:10:56] <FromDiscord> <auxym> I mean, then yeah, I'm not sure what's stopping you. Nim has first class proc types, you can pass them around like any other value
[01:11:00] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3RJ1
[01:11:03] <FromDiscord> <auxym> @Require Support
[01:11:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:17:45] <FromDiscord> <morgan> so im working on a library for my own later use and i'd like a way to have a type that holds an array that can be like 1-8 dimensional and of variable size (but fixed size once declared). how should i go about that?
[01:18:50] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:31] <FromDiscord> <morgan> actually it would be probably be fine to have a different type for each dimensionality
[01:21:02] <FromDiscord> <morgan> so then my question is how to declare a type for an array that is fixed size once declared but can be declared at any size (tho very likely nothing past 64)
[01:35:54] <reversem3[m]> Ok so I put the whole binary file converted to hex into a seq but each line is separate though. Should I put this into a list instead ? 
[01:41:00] <reversem3[m]> says I'm getting index out of range but it should be -1  .. 4 https://play.nim-lang.org/#ix=3RJ9
[01:52:35] <FromDiscord> <Nick.> in nim is there a ror function?
[01:53:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:56:12] <FromDiscord> <konsumlamm> not everyone knows what ror means
[01:56:14] <FromDiscord> <konsumlamm> but yes: https://nim-lang.github.io/Nim/bitops.html#rotateRightBits%2CT%2Crange%5B%5D
[01:56:15] <FromDiscord> <auxym> whats ror?
[01:56:28] <FromDiscord> <konsumlamm> ^ see? it's "rotate right"
[01:56:29] <FromDiscord> <auxym> oh
[01:56:36] <FromDiscord> <Nick.> Ah, thanks. I was was looking for ror not for the complete sentence
[02:35:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:39:15] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[02:40:06] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3RJm
[02:40:44] <FromDiscord> <auxym> it keeps the original line break characters between each line
[02:42:38] <FromDiscord> <auxym> In reply to @MorganAlyssa "so im working on": is that for numerical stuff? did you check out arraymancer, it supports multi-dimensional arrays for number types
[02:45:17] <FromDiscord> <morgan> it's for generating multidimensional color palettes for future game use
[02:48:48] <FromDiscord> <morgan> i considered using nim-glm for colorspace stuff but ended up just writing my own of the math i needed so i could avoid the for loops it had
[02:50:35] <FromDiscord> <auxym> IIRC @mratsim had an implementation for simple strided arrays somewhere...
[02:51:35] <FromDiscord> <Elegantbeef> Well pmunch if interested i ditched the macro idea for checking nodes, and just am using a template now
[02:51:35] <FromDiscord> <Elegantbeef> https://github.com/beef331/micros/blob/master/src/micros/utils.nim#L5-L23 seems swell so far
[02:52:51] <FromDiscord> <auxym> @morgan this https://github.com/SimonDanisch/julia-challenge/blob/b8ed3b6/nim/nim_sol_mratsim.nim#L7-L64
[02:53:38] <FromDiscord> <morgan> ah cool
[02:53:50] <FromDiscord> <morgan> for now im just using seqs
[02:54:24] <FromDiscord> <morgan> ah so i see
[02:54:31] <FromDiscord> <auxym> nested seqs sounds painful for 8-D though 😄
[02:54:40] <FromDiscord> <morgan> it's a seq that it turns into whatever dimension
[02:54:45] <FromDiscord> <morgan> yeah
[02:54:50] <FromDiscord> <morgan> i dunno if i'll do 8d
[02:54:55] <FromDiscord> <auxym> yeah, that's the "strided" part
[02:55:12] <FromDiscord> <morgan> yea i had guessed that
[02:55:39] <FromDiscord> <morgan> maybe if i come up with a palette generator concept that outputs that many dimensions i'll do an 8d one, for now just 4d
[02:56:15] <FromDiscord> <morgan> (edit) "4d" => "1-4d"
[03:10:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:10:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:12:09] *** Quits: cyraxjoe (~joe@2806:109f:13:9477::2000) (Quit: No Ping reply in 180 seconds.)
[03:13:24] *** Joins: cyraxjoe (~joe@2806:109f:13:9477::2000)
[03:14:06] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 252 seconds)
[03:15:04] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[03:52:50] <FromDiscord> <Girvo> Morning all 🙂
[03:53:06] <FromDiscord> <Girvo> Can you destructure-assign a `ptr` to an anonymous tuple?
[03:54:04] <FromDiscord> <Elegantbeef> `res[]`
[03:54:04] <FromDiscord> <Girvo> sent a code paste, see https://paste.rs/zBh
[03:54:13] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RJD
[03:54:13] <FromDiscord> <Girvo> Yeah that does work. Only way?
[03:55:06] <FromDiscord> <Elegantbeef> you need to dereference it so either `[]` or a `proc unpack(data: ptr tuple): typeof data[] = data[]`
[03:55:16] <FromDiscord> <Girvo> Okay sweet
[03:55:18] <FromDiscord> <Girvo> Cheers!
[03:56:01] <FromDiscord> <Elegantbeef> well it doesnt implicitly call unpack i should note
[03:56:10] <FromDiscord> <Elegantbeef> you still need to manually do `res.unpack`
[03:56:11] <FromDiscord> <Girvo> Oh yeah I understood haha
[03:56:50] <FromDiscord> <Elegantbeef> I do want to make an rfc for making a `=unpack` procedure called implicitly
[03:57:15] <FromDiscord> <Girvo> That would be really nice. Add to the ergonomics
[04:03:03] <FromDiscord> <Girvo> I have a funny question about heap/stack, but I need to get this example into the right shape for. Basically trying to work out where variables defined outside of the app_main stuff lives in-memory, and whether an `addr` to them is safe or not, so I can pass a `ptr` to a tuple of a lock + guarded variable to `pthread_create`
[04:03:32] <FromDiscord> <Girvo> I can obviously `new` it, but thats a ref not a ptr and I can't really pass a ref to pthread_create
[04:03:56] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:06:19] <FromDiscord> <Elegantbeef> `create((Lock, Guard))` but idk what you mean
[04:06:20] <FromDiscord> <Elegantbeef> Afaik there is no definitive way to say "Safe to address"
[04:07:45] <FromDiscord> <Girvo> Yeah that's fair
[04:09:07] <FromDiscord> <Girvo> `create()` is what I was missing (and `dealloc`). Awesome, thanks
[04:12:42] <FromDiscord> <Elegantbeef> `create` is just syntax sugar for `cast[ptr T](alloc(sizeof(T)))`
[04:15:52] <FromDiscord> <Girvo> Nice, thats exactly what I'm after for this. Not going to be used for everything, in fact, barely used lol. But for certain bits where I need to cross this C boundary its handy
[04:21:49] <FromDiscord> <Girvo> Is there a generic type for a guarded variable? Or is that compiler magic more than anything else?
[04:22:03] <FromDiscord> <Girvo> `var t {.guard: lock.} = "Hello, from a locked variable"`↵what is the type of `t`?
[04:22:18] <FromDiscord> <Elegantbeef> `echo typeof(t)` 😛
[04:22:23] <FromDiscord> <Girvo> Oh lol
[04:25:49] <FromDiscord> <Girvo> Just a `string`
[04:26:03] <FromDiscord> <Elegantbeef> Then it's all compiler magic
[04:26:41] <FromDiscord> <Girvo> Yeah, damn. Oh well for this stuff I might ditch the gcsafe block around it. Its just for locking access to certain resources across multiple threads
[04:29:09] <FromDiscord> <Girvo> I think I gotta go stare at some -d:danger C output for a while to really understand the best way of achieving this. Trying to get the compile-time benefits of {.gcsafe.} in a straight `pthread` or FreeRTOS `Task` context, both of which are very much C "pass void pointers around" interfaces lol
[04:32:16] <FromDiscord> <Elegantbeef> And a gcsafe annotated proc doesnt work why?
[04:36:39] <FromDiscord> <Girvo> Oh no, it does!
[04:37:07] <FromDiscord> <Elegantbeef> So what's the issue?
[04:37:14] <FromDiscord> <Girvo> For this purpose 🙂 But I no longer need the `{.gcsafe.}` block as dereferencing a pointer to a guarded string breaks the compiler magic
[04:38:00] <FromDiscord> <Elegantbeef> Oh you dont get the guard error?
[04:38:33] <FromDiscord> <Girvo> Yeah, because it seems the compiler (which makes sense) can't trace that a `ptr` to a `(Lock, string)` tuple is referecing a guarded string in its second index
[04:39:12] <FromDiscord> <Elegantbeef> Yea the type erasure is going to be a bitch
[04:40:38] <FromDiscord> <Girvo> Still, `gcsafe` on the proc gets me enough of what I'm after, and there really aren't gonna be many locks/guarded vars anyway, so a decent trade off I think
[04:40:42] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 250 seconds)
[04:40:51] <FromDiscord> <Elegantbeef> Actually is the string even guarded?
[04:41:00] <FromDiscord> <Elegantbeef> Like how are you calling this?
[04:41:08] <FromDiscord> <Girvo> `var t {.guard: lock.} = "Hello, from a locked variable"`
[04:41:33] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RJK
[04:41:37] <FromDiscord> <Elegantbeef> Sure but you're doing `t` which is a copy
[04:41:58] <FromDiscord> <Girvo> Oh yeah
[04:42:01] <FromDiscord> <Girvo> (edit) "https://play.nim-lang.org/#ix=3RJK" => "https://play.nim-lang.org/#ix=3RJL"
[04:42:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RJM
[04:42:54] <FromDiscord> <Girvo> Lemme have a look
[04:42:55] <FromDiscord> <Elegantbeef> The above is probably what you want
[04:42:59] <FromDiscord> <Girvo> Yeah I think so too
[04:43:13] <FromDiscord> <Elegantbeef> Where the compiler knows `data` is guarded with `lock`
[04:43:42] <FromDiscord> <Girvo> Oh yeah then it should still pick up that its a guarded access to it. I'll give it a try
[04:43:47] <FromDiscord> <Elegantbeef> Guarding a global variable with lock only protects it on access of that variable
[04:44:06] <FromDiscord> <Girvo> Yeah so if a copy is triggering, it loses that (obviously)
[04:45:13] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:45:16] <FromDiscord> <Elegantbeef> Sequences and strings behave as value types, so `=` is a copy generally(move semantics  do apply)
[04:45:28] <FromDiscord> <Girvo> Yep makes sense
[04:46:04] <FromDiscord> <Girvo> The word `Guard` has lost all meaning to me and now doesn't look like a real word
[04:46:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:46:13] <FromDiscord> <Elegantbeef> Me writting `Guarded`
[04:47:21] <FromDiscord> <Girvo> Hahaha
[04:47:49] <FromDiscord> <Girvo> Okay yeah! It does work, at least it seems so. I get proper guarded access to `thing.data` nice
[04:48:06] <FromDiscord> <Elegantbeef> Yay!
[04:48:31] <FromDiscord> <Girvo> I'll have a play with this, but it should work nicely for what I'm after here! Cheers 🙂
[04:48:54] <FromDiscord> <Elegantbeef> Still need your `rtosThread` and `posixThread` macros 😛
[04:49:16] <FromDiscord> <Girvo> Hahaha I was literally just writing a message to say thats my next task 😂
[04:50:01] <FromDiscord> <Elegantbeef> Ah, well micros is now public, but subject to change, if you want a easy api 😛
[04:50:16] <FromDiscord> <Girvo> Oooooh! I'll check it out for sure
[04:50:29] <FromDiscord> <Elegantbeef> Cant really beat this imo https://github.com/beef331/micros/blob/master/tests/test1.nim#L37-L50
[04:50:47] <FromDiscord> <Girvo> See if I can't clean up the abstractions over all this. The developers who'll be working on the rest of the "app code" in firmware are... not professional C developers, so it'll go a long way if I can make it as foolproof as possible to work with all this
[04:51:00] <FromDiscord> <Elegantbeef> Ah sounds fun
[04:51:31] <FromDiscord> <Girvo> Our old firmware has race conditions, unsafe data access, and memory leaks all over the place haha. Electrical engineers make awesome boards, but write, uh, not the best software to run on them it seems
[04:52:34] <FromDiscord> <Elegantbeef> Yea my one friend is in that field and as a last year someone was making a clock and doing `sleep(1000)` for the seconds  and was confused why the entire program locked up
[04:52:41] <FromDiscord> <Elegantbeef> last year project\
[04:52:56] <FromDiscord> <Girvo> oh no haha
[04:53:22] <FromDiscord> <Elegantbeef> My other friend was there and suggest a main loop timer but the poor soul didnt understand how it worked so stuck to freezing the main thread
[04:53:34] <FromDiscord> <Girvo> The EE who built our prototype board and wrote the firmware has a hilarious mixture of `xTaskCreate` and Arduino-style `loop()` functions, which FreeRTOS/IDF tells you explicitly _not_ to do
[04:53:46] <FromDiscord> <Elegantbeef> Lol
[04:54:04] <FromDiscord> <Girvo> With everything accessing/storing shit in a heap of (shared) global C++ objects
[04:54:40] <FromDiscord> <Girvo> the only mutexes are what he was forced to do to get I2C and Serial working. Nothing else has them, so data randomly gets clobbered by other threads. Its fun 😄
[04:54:47] <FromDiscord> <Elegantbeef> Hey I mainly do game dev, and most of IO is global, dont knock it till you try it 😛
[04:55:53] <FromDiscord> <Girvo> Haha I know I know, I do too 😉 Would be fine if there was any sequencing at all, but theres random vTaskDelays everywhere to get everything to stop crashing/clobbering each other. Its hilarious/frustrating as some of our sensor data is stale in the packets that come back, and some isn't. yayyyyy
[04:56:19] <FromDiscord> <Elegantbeef> Well here's hoping that Nim's macros/compiler allows you to get good programs
[04:56:22] <FromDiscord> <Girvo> Hence why I've been tasked to re-do it, and I ain't using C++ even with a gun to my head lol (for this task anyway)
[04:56:32] <FromDiscord> <Girvo> Yeah thats the hope!
[04:57:21] <FromDiscord> <Girvo> It has in the past with other production stuff I worked on (a homomorphic encryption system for inter-company query results without ever sharing real data)
[04:57:32] <FromDiscord> <Elegantbeef> Now just if the EEs use distincts and sub range types
[04:58:38] <FromDiscord> <Elegantbeef> I'm only half joking, those two things seem very helpful in the world of embedded
[05:18:11] <FromDiscord> <Girvo> Haha no you're completely right. Nesper uses them a fair bit, and its great! Even just making sure you're using the right bytes/kb/mb types for the various APIs, auto conversion between them and so on. subrange types are gonna be super handy for some of the other APIs too
[05:19:13] *** Quits: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:19:24] <FromDiscord> <Girvo> I really do think that Nim has so much potential in the embedded space. Zephyr (and Nephyr the Nim bindings for it) have so much promise. Sadly ESP32 isn't working well with it with Nephyr yet, and I figured it was simpler to stick with ESP-IDF anyway for now, but when we move off ESP32 and on to ARM in the future we'll revisit it for sure.
[05:19:44] <FromDiscord> <Girvo> Ergonomic, hardware-constraint-aware APIs, safety, and speed. Whats not to love
[05:28:24] <FromDiscord> <Elegantbeef> As someone that has fixed many "X doesnt work but should" type compiler errors, the compiler errors 😛↵(@Girvo)
[05:30:44] <FromDiscord> <Girvo> hehehehe
[05:31:02] <FromDiscord> <Girvo> Though hey, it could always be worse. looks at the errors in our C++ firmware when building
[05:33:11] <FromDiscord> <Girvo> Oooooh. Elcritch (the Nesper/Nephyr dev) has a great thread on some of what I'm trying to do right now
[05:33:11] <FromDiscord> <Girvo> https://forum.nim-lang.org/t/6976
[05:36:30] <FromDiscord> <Girvo> Hah, yeah passing `ptr ref T` is exactly what he was doing too after all for cross-thread variables
[05:41:50] <FromDiscord> <Elegantbeef> Yea that's a complicated thing to do
[05:48:55] <FromDiscord> <sOkam!> Is this correct? Switch can accept variables, right? https://media.discordapp.net/attachments/371759389889003532/950940718095007784/unknown.png
[05:49:18] <FromDiscord> <Elegantbeef> Should probably be `const`
[05:49:28] <FromDiscord> <sOkam!> Also, does the "path" switch accept multiple folders in some way?
[05:49:59] <FromDiscord> <Elegantbeef> Think you can just do `--path"a"; --path"b"`
[05:53:28] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3RJT
[05:53:51] <FromDiscord> <Elegantbeef> I think so
[06:17:57] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:30:45] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RJY
[06:30:54] <FromDiscord> <Girvo> sent a code paste, see https://play.nim-lang.org/#ix=3RJZ
[06:31:32] <FromDiscord> <Girvo> But it _is_ working, unlike my attempts with xTaskCreate with that wrapper. And with more documentation on how to use pthreads than FreeRTOS tasks I think its the way to go
[06:33:20] <FromDiscord> <Girvo>  https://media.discordapp.net/attachments/371759389889003532/950951897131532368/unknown.png
[06:33:48] <FromDiscord> <Girvo> Locked/guarded access to a shared variable between thread, and talking over UART to a (real) SIM7000 2G/4G modem
[06:35:25] <FromDiscord> <Girvo> Now to add some stack-size stuff, esp_pthread extensions to control things, attributes, and pthread_join on the list of threads so I can remove the `while true: vTaskDelay(1)` in main lol
[06:43:32] <FromDiscord> <Girvo> Okay that was way easier than I thought it would be lol. Yay. Working pthreads with locks and guarded shared refs on an ESP32. Nice.
[06:46:55] <FromDiscord> <Elegantbeef> Congrats
[06:47:09] <FromDiscord> <Girvo> Thanks for your help beef, made a lot of things way clearer
[06:47:21] <FromDiscord> <Girvo> Now to wrap all this up in some nice macros/templates 😉
[06:47:27] <FromDiscord> <Elegantbeef> Clear like mud is what i say
[06:47:34] <FromDiscord> <Girvo> yeah haha
[06:48:03] <FromDiscord> <Girvo> Though sadly I have to put it down for a week and go back to Typescript land. But I'll be back on this soon enough!
[06:57:02] <FromDiscord> <Girvo> `{.global.}` is global life-time, not global visibility yeah?
[06:57:20] <FromDiscord> <Elegantbeef> it's equivlent to `static T name`
[06:57:34] <FromDiscord> <Elegantbeef> Yea global live span of course
[06:57:50] <FromDiscord> <Girvo> Perfect, cheers
[07:06:30] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:21:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[07:34:25] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:42:53] <NimEventer> New thread by Ethernaut: SDL in a M1 Mac - can't find dylib, see https://forum.nim-lang.org/t/8990
[07:44:25] <FromDiscord> <Valdar> Is there a native way "add" two seqs to a third, or do I have to iterate through them?
[07:45:45] <FromDiscord> <Valdar> I should say 'add the values of each' as opposed to adding one to the end of the other
[07:46:19] <FromDiscord> <Elegantbeef> What do you mean?
[07:48:00] <FromDiscord> <Valdar> I have two seqs, same size, and I want to add the values of one to the other
[07:48:08] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/sequtils.html#foldl.t%2C%2C%2C ?
[07:48:32] <FromDiscord> <Valdar> In this case, it's two layers of noise that I want to combine
[07:51:37] <FromDiscord> <Valdar> I don't think fold will help
[07:52:29] <FromDiscord> <huantian> sent a code paste, see https://paste.rs/WW3
[07:52:44] <FromDiscord> <huantian> (edit) "https://paste.rs/Atq" => "https://paste.rs/8iX"
[07:53:01] <FromDiscord> <huantian> wow all the typos
[07:53:09] <FromDiscord> <huantian> (edit) "https://play.nim-lang.org/#ix=3RKb" => "https://play.nim-lang.org/#ix=3RKa"
[07:57:03] <FromDiscord> <Valdar> yeah, that's the idea. I can iterate through them like that, but I thought maybe there was something in sequtils that would do it (maybe quicker than my looping through)
[07:57:59] <FromDiscord> <huantian> I don't think there's any way to do this faster
[07:58:17] <FromDiscord> <huantian> one thing that could be improved in my solution is using `newSeqOfCap` to avoid allocations
[07:59:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:59:38] <FromDiscord> <Valdar> Thx, I just wanted to be sure that I wasn't missing a better way. I haven't tried a loop yet. It may be plenty fast.
[08:20:11] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[08:22:56] <FromDiscord> <Elegantbeef> Nim's for loops are free, so it's going to be relatively fast
[08:57:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:20:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:23:52] <FromDiscord> <congusbongus> sent a code paste, see https://paste.rs/WnZ
[09:24:26] <FromDiscord> <Elegantbeef> Presently Nim does not allow this so you'd need to do `ref Foo`
[09:26:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:27:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RKu
[09:35:08] <FromDiscord> <Mysterysib> Hi, so I'm learning about macros and I see stuff being used like `newNimNode(nnkRecList)` and `newIdentNode("new" & $typeName)` Where are these calls, like `newNimNode`, `nnkRecList`, `newIdentNode`, eg eg coming from? Are there docs for this?
[09:35:39] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/macros.html
[09:36:10] <FromDiscord> <Valdar> In reply to @Elegantbeef "Nim's for loops are": It is plenty fast... Took 117 milliseconds to add 3 seqs of 1 million floats each, so I'm happy with that.
[09:36:15] <FromDiscord> <Mysterysib> Thanks!
[09:36:32] <FromDiscord> <Elegantbeef> Can go even faster with `-d:danger` 😛
[09:37:33] <FromDiscord> <Mysterysib> Is there any way to create a type object with a dynamic amount of variables?
[09:37:39] <FromDiscord> <Valdar> haha, now that you mention it, I forgot that I have my setting for debug build lol
[09:38:23] <FromDiscord> <Elegantbeef> I assume you mean fields?
[09:38:25] <FromDiscord> <Mysterysib> Like, if I want to add a new variable to say that example of mutable references, something like `append b.foo = z` and then `b.foo.z = 10`
[09:38:26] <FromDiscord> <Elegantbeef> If so use tuples
[09:38:45] <FromDiscord> <Mysterysib> What do you mean by fields?
[09:39:05] <FromDiscord> <Mysterysib> Ohhh
[09:39:08] <FromDiscord> <Mysterysib> Yeah, exactly
[09:39:42] <FromDiscord> <Valdar> Beef, 7 milliseconds on danger 🙂
[09:40:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[09:41:50] <FromDiscord> <Mysterysib> Are there docs for tuples?
[09:42:03] <FromDiscord> <Mysterysib> I found the docs for tuples in macros, but docs on tuples in general?
[09:45:28] <FromDiscord> <Valdar> https://nim-lang.org/docs/manual.html#types-tuples-and-object-types
[09:45:47] <FromDiscord> <Elegantbeef> Nim doesnt have dynamic objects by default
[09:46:37] <FromDiscord> <Mysterysib> if I make some fields of a sequence type, can I then append or remove values? Is there a list type?
[09:47:16] <FromDiscord> <Elegantbeef> There is `seq` but what you're after is dynamic it seems, and that's very much against Nim. You cannot add/remove fields
[09:47:21] <FromDiscord> <Mysterysib> or perhaps there is a sort of macro I can define for this use-case, something like the example of classes in the nim by example macros tutorial?
[09:47:45] <FromDiscord> <Mysterysib> In reply to @Elegantbeef "There is `seq` but": Would a dynamic sequence in an object work?
[09:48:29] <FromDiscord> <Elegantbeef> I dont know what you're after
[09:48:38] <FromDiscord> <Mysterysib> Basically I want a data structure similar to JsonObject, but one that is dynamic. And perhaps once the Datastructure is defined, then it can be made static
[09:48:41] <FromDiscord> <Elegantbeef> You could use a `Table[string, int]` if it's a single type
[09:49:04] <FromDiscord> <Elegantbeef> Json object is dynamic
[09:49:11] <FromDiscord> <Elegantbeef> It's the closest you can get to dynamic in Nim
[09:49:19] <FromDiscord> <Mysterysib> In reply to @Elegantbeef "You could use a": Yeah, something like that, and then I can define multiple table fields of different types, right?
[09:49:28] <FromDiscord> <Elegantbeef> You could
[09:49:48] <FromDiscord> <Mysterysib> Oooohh okay. Do you know the command to append or remove fields from a JsonObj? Couldn't figure that out when I was working with that.
[09:50:11] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/json.html#delete%2CJsonNode%2Cstring
[09:50:22] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/json.html#add%2CJsonNode%2Cstring%2CJsonNode
[09:50:34] <FromDiscord> <Elegantbeef> Or https://nim-lang.org/docs/json.html#%5B%5D%3D%2CJsonNode%2Cstring%2CJsonNode
[09:51:04] <FromDiscord> <Mysterysib> Thanks, that's pretty simple!
[09:52:02] <FromDiscord> <Mysterysib> What is the purpose of having a static object, versus say, simply defining a table or JsonObject as a dynamic variable?
[09:52:11] <FromDiscord> <Mysterysib> Is there a speed advantage?
[09:52:22] <FromDiscord> <Elegantbeef> Massive, plus static typing
[09:52:37] <FromDiscord> <Elegantbeef> tables are slow
[09:52:59] <FromDiscord> <Mysterysib> are sequences faster?
[09:53:08] <FromDiscord> <Elegantbeef> Yes
[09:53:17] <FromDiscord> <Elegantbeef> Tables are slow purely due to indexing being a hash procedure
[09:53:37] <FromDiscord> <Elegantbeef> Sequences are fast since indexing is a cheap `ptrToStart + index`
[09:54:11] <NimEventer> New Nimble package! logit - Dependency-free, cross-platform and small logging library for Nim, with a simple and comfortable API, see https://github.com/Miqueas/Logit
[09:54:28] <FromDiscord> <Mysterysib> Okay thanks, I think the best way to go then is to define a static table with regular fields for the static data types and sequence fields for the data that is dynamic
[09:54:40] <FromDiscord> <Mysterysib> (edit) "table" => "object"
[09:54:43] <FromDiscord> <Mysterysib> static object
[09:55:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:55:34] <FromDiscord> <Mysterysib> since accessing the dynamic data is all internal, indices in a sequence work without a problem
[09:55:46] <FromDiscord> <Elegantbeef> Sequence only really works if you want a key value relation
[09:55:58] <FromDiscord> <Elegantbeef> If you're iterating looking for a key it's going to be slower than a table
[09:56:12] <FromDiscord> <Elegantbeef> I mean "only really works if you dont want"
[09:56:28] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[09:56:35] <FromDiscord> <Mysterysib> oh, even if I leave the indices as numerical? like 0, 1, 2, etc
[09:57:12] <FromDiscord> <Elegantbeef> That's not really a key value relation
[09:57:25] <FromDiscord> <Elegantbeef> I'm talking about using a field
[09:57:28] <FromDiscord> <Elegantbeef> field name\
[09:58:13] <FromDiscord> <Mysterysib> it'd be cool if there was something that just allocated the same number of bytes to each value in the sequence, so say mydynamicdata[2].value would do something like `ptrToStart + valueBytes2`
[09:58:34] <FromDiscord> <Mysterysib> yeah, some extra memory used, but my data is small enough that the impact would be minimal
[09:58:40] <FromDiscord> <Elegantbeef> That's how a sequence works
[09:59:16] <FromDiscord> <Mysterysib> Oh okay, what I meant is defining the sequence as a field in the object, not the sequence values as fields in the sequence
[09:59:31] <FromDiscord> <Elegantbeef> I dont follow
[09:59:38] <FromDiscord> <Mysterysib> I'll write an example
[09:59:41] <FromDiscord> <Elegantbeef> Then again i dont get why someone wants this dynamism
[10:02:58] <FromDiscord> <Mysterysib> sent a code paste, see https://paste.rs/qQW
[10:03:44] <FromDiscord> <Mysterysib> So all the static data can be assigned right away, but the dynamic data depends on the amount and the data types of the responses in the JsonObj I filter
[10:03:47] <FromDiscord> <Elegantbeef> get the `union` package then you can do `dynamicResponses: seq[union(string, int)]`
[10:04:15] <FromDiscord> <Mysterysib> Yay, cool 🙂
[10:04:42] <FromDiscord> <Elegantbeef> Sorry it's `string | int` not `,`
[10:07:12] <FromDiscord> <Mysterysib> After I finish this proj I'm working on sort of just as a learning thing but it could also be a useful tool it'll be fun to work on a quant finance library for nim since I don't see any atm. I have this book on quant finance in R so I can use the math from there to write those functions in nim
[10:08:11] <FromDiscord> <Mysterysib> I used to do that in Python just for fun and made an API for a crypto exchange, although the trading algo I wrote was not profitable
[10:09:01] <FromDiscord> <Mysterysib> I wrote a backtest feature against historical data from scratch, but probably because of poor coding skills combined with Python being slow it would take hours to backtest a strategy against a year
[10:10:17] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[10:10:45] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[10:11:18] <FromDiscord> <Mysterysib> although that was against second data, not daily data
[10:11:34] <FromDiscord> <Mysterysib> so it was a lot data 😄
[10:11:39] <FromDiscord> <Mysterysib> (edit) "so it was a lot ... data" 03added "of"
[10:12:12] <NimEventer> New Nimble package! SLAP - A SLow And Powerless programming language written in Nim, see https://github.com/bichanna/slap/blob/master/docs/index.md#slap
[10:15:56] <FromDiscord> <sOkam!> Anyone here using neovim/vim?↵Any clue how to get this type of error checking in them?↵_(this sshot is the nim extension running in vscodium)_ https://media.discordapp.net/attachments/371759389889003532/951007916952010803/unknown.png
[10:16:53] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/951008155666640906/image.png
[10:16:53] <FromDiscord> <Elegantbeef> You can get stuff like
[10:17:05] <FromDiscord> <Elegantbeef> Just gotta get my config for you 🙂
[10:17:34] <FromDiscord> <Mysterysib> Perhaps this? https://github.com/PMunch/nimlsp
[10:17:39] <FromDiscord> <Elegantbeef> https://github.com/dense-analysis/ale think i'm using this
[10:18:04] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RKG
[10:18:32] <FromDiscord> <Mysterysib> You can use https://github.com/autozimu/LanguageClient-neovim with https://github.com/PMunch/nimlsp, but I'm not sure if that's any better
[10:19:30] <FromDiscord> <Mysterysib> but I use Jetbrains as my IDE, you get it for free with a .edu email and ever since I discovered it it's been my fav
[10:19:48] <FromDiscord> <Mysterysib> although I love vim
[10:21:20] <FromDiscord> <Mysterysib> @ElegantBeef is union in the official package repo, or do I have to pull it from github?
[10:21:23] <FromDiscord> <Elegantbeef> I've been using Kate with the LSP and it works pretty good, seems like there is an issue with diagnostics though so no errors
[10:21:30] <FromDiscord> <Elegantbeef> https://github.com/alaviss/union
[10:22:01] <FromDiscord> <Mysterysib> Oh yeah I'm using Kate with Jetbrains and I get no errors as well
[10:22:03] <FromDiscord> <Mysterysib> I wish that worked
[10:23:30] <FromDiscord> <Elegantbeef> "Kate with jetbrains"?
[10:24:31] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3RKH
[10:24:46] <FromDiscord> <sOkam!> (edit) "https://play.nim-lang.org/#ix=3RKH" => "https://paste.rs/Rwt"
[10:24:54] <FromDiscord> <Elegantbeef> You did install the plugin right?
[10:25:00] <FromDiscord> <sOkam!> 🤷‍♂️
[10:25:07] <FromDiscord> <sOkam!> im using vimplug
[10:25:10] <FromDiscord> <Mysterysib> Oh I confused Kite with Kate
[10:25:20] <FromDiscord> <Mysterysib> I think Kite just gives autocomplete
[10:25:22] <FromDiscord> <Elegantbeef> So you added the URL and then ran the install command?
[10:25:39] <FromDiscord> <sOkam!> i think so, yep. let me recheck just in case
[10:26:07] <FromDiscord> <Elegantbeef> I have been meaning to debug the NimLSP with kate
[10:26:10] <FromDiscord> <Mysterysib> This plugin (https://plugins.jetbrains.com/plugin/15128-nim) is really broken or I just need to set it up, because barely any of the features it lists work
[10:26:13] <FromDiscord> <Elegantbeef> Guess not time like the present
[10:26:18] <FromDiscord> <Mysterysib> (edit) "up," => "up properly somehow,"
[10:26:30] <FromDiscord> <Elegantbeef> Well it's a from scratch implementation
[10:26:37] <FromDiscord> <Elegantbeef> So it's behind nimsuggest/nimlsp
[10:26:50] <FromDiscord> <sOkam!>  https://media.discordapp.net/attachments/371759389889003532/951010656457461791/unknown.png
[10:28:09] <FromDiscord> <Mysterysib> I think the JB plugin was designed for Windows or something, because it has some really good reviews and then a few really bad ones, so it's likely not being set up properly on OSX
[10:28:33] <FromDiscord> <Elegantbeef> You say OSX like that's the most common Nim programmer OS 😛
[10:30:33] <FromDiscord> <Mysterysib> Well my desktop with openSUSE broke after trying to configure bios RAID0 on intel RST with NVMEs (I still have no idea what happened, but I've tried everything to flashing the bios, taking the thing apart and putting it back together, and it will not post) so I'm stuck programming on my 13inch macbook
[10:31:21] <FromDiscord> <Elegantbeef> I guess nowadays most motherboards have a clear cmos button eh?
[10:31:32] <FromDiscord> <Elegantbeef> Instead of having to remove the cr2032 or taking off a jumper
[10:32:03] <FromDiscord> <Mysterysib> It had a jumper pin that you could move from pos 1-2 to 2-3 to reset the bios, but that didn't work. And removing the CMOS battery hasn't worked either.
[10:32:59] <FromDiscord> <Mysterysib> Oh so CMOS battery = cr2032, learned smthn new
[10:33:17] <FromDiscord> <Elegantbeef> Yea it's the type of the battery
[10:34:17] <FromDiscord> <Mysterysib> I've had terrible luck with computers. I remember I build an ETH miner with 4 GPUs and I stayed up for 2 days to get it to work, and then the motherboard literally burns out with smoke and I ended up selling the rest of the parts.
[10:34:38] <FromDiscord> <Mysterysib> Then when i tried building my own computer the BIOS would not post either despite me triple checking all the components were compatible
[10:35:41] <FromDiscord> <Elegantbeef> Given the gpu shortage i can only say "Oh noes, what a shame" 😛
[10:36:42] <FromDiscord> <Mysterysib> with all this past trauma I might just go for a 16 inch M1 macbook when I can afford it
[10:38:18] <FromDiscord> <Mysterysib> I still prefer mac over windows because it's at least unix-based
[10:39:05] <FromDiscord> <Mysterysib> Some time ago it was possible to gain full access to the root filesystem, but ever since the last two major OSX versions you can't
[10:39:15] <FromDiscord> <Elegantbeef> PMUUUUUUNCH, what does a debug nimlsp give me, i see no outputs anywhere?!
[10:39:30] <FromDiscord> <Mysterysib> (edit) "Some time ago it was possible to gain full access to the root ... filesystem," 03added "/ system"
[10:40:07] <FromDiscord> <Elegantbeef> I think pmunch accidently left his IRC open again, even checked the logs to see if he logged out
[10:54:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[11:02:23] <FromDiscord> <retkid> can i use macros to modify other procs and add code to them?
[11:02:45] <FromDiscord> <Elegantbeef> Macros can only mutate downward
[11:03:25] <FromDiscord> <retkid> now, I don't quite know what you mean by that
[11:03:39] <FromDiscord> <Elegantbeef> You cannot use a macro to mutate something not inside the macro's scope
[11:04:16] <FromDiscord> <retkid> can I use a macro to take a proc, and mutate it within its scope and execute that modified verion?
[11:04:28] <FromDiscord> <Elegantbeef> You can emit a new procedure yes
[11:05:17] <NimEventer> New thread by Mohan24: Want Nim online code playground to be mobile and desktop friendly., see https://forum.nim-lang.org/t/8991
[11:06:12] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/CqU
[11:06:19] <FromDiscord> <retkid> obviously this is useless but still
[11:06:33] <FromDiscord> <retkid> (edit) "obviously this ... is" 03added "specific example"
[11:06:35] <FromDiscord> <Elegantbeef> Like i said you can do it inside the macro yes
[11:06:46] <FromDiscord> <Elegantbeef> You can emit a new procedure or type inside a macro
[11:06:47] <FromDiscord> <retkid> I shall learn more about macros
[11:07:03] <FromDiscord> <retkid> I am afraid of macros for some reason
[11:07:54] <FromDiscord> <retkid> maybe not today, I need to accept that this project is going nowhere and complete it before my bones age into dust
[11:08:29] <FromDiscord> <Rika> quick
[11:08:32] <FromDiscord> <Mysterysib> @retkid this helped me a bit on top of the official nim docs https://dev.to/beef331/demystification-of-macros-in-nim-13n8
[11:08:40] <FromDiscord> <Rika> every day you lose 24 hours of time
[11:08:44] <FromDiscord> <retkid> In reply to @Rika "every day you lose": I KNOW
[11:08:55] <FromDiscord> <Rika> every minute in africa, 60 seconds pass
[11:09:17] <FromDiscord> <Elegantbeef> Eh if i get micros to a usable state everyone should be 93.5% less scared of macros
[11:09:30] <FromDiscord> <Rika> ive never been scared of macros
[11:09:48] <FromDiscord> <Rika> newTree newTree newTree newTree newTree newTree newTree newTree newTree newTree newTree newTree newTree
[11:09:49] <FromDiscord> <Elegantbeef> But until then i'm ramming my face into trying to get kate to show errors with nimlsp
[11:10:20] <FromDiscord> <Mysterysib> if you ever figure out how to get kate or vim to show nim errors then please share that config on github
[11:10:33] <FromDiscord> <Elegantbeef> I mean i have vim showing errors
[11:10:47] <FromDiscord> <Elegantbeef> There's a whole post about getting Nim linting working with vim afaik
[11:11:08] <FromDiscord> <Mysterysib> oh that's great. There's some nice clients like OniVim that are more of an IDE but still use vim
[11:11:56] <FromDiscord> <retkid> I've just found i write the same threading code over and over again
[11:12:00] <FromDiscord> <retkid> I'm just gonna write threading macros
[11:12:45] <FromDiscord> <Rika> i honestly stopped trying to get errors on my editor
[11:12:53] <FromDiscord> <Rika> i just made myself know when something is wrong 👀
[11:13:57] <FromDiscord> <retkid> well
[11:14:00] <FromDiscord> <retkid> I wish i had that power
[11:14:11] <FromDiscord> <retkid> but sometimes because of dyslexia I cant see my spelling mistakes
[11:14:25] <FromDiscord> <Rika> my font size is like 32 or something
[11:14:32] <FromDiscord> <retkid> so i will not know why things aren't compiling, get angry, then copy code from somewhere else then it just suddenly works
[11:14:35] <FromDiscord> <retkid> and im so confused
[11:14:50] <FromDiscord> <retkid> this happens a lot with x.attters
[11:14:53] <FromDiscord> <retkid> (edit) "this happens a lot with x.attters ... " 03added "or x.attrs"
[11:14:55] <FromDiscord> <Mysterysib> In reply to @retkid "but sometimes because of": dyslexia font?
[11:15:05] <FromDiscord> <Elegantbeef> comicsans!
[11:15:07] <FromDiscord> <retkid> I dont know if that would help?
[11:15:11] <FromDiscord> <Mysterysib> Look
[11:15:20] <FromDiscord> <retkid> comicsans has been show to help dyslexics tho
[11:16:12] <FromDiscord> <retkid> I will install opendyslexic
[11:16:29] <FromDiscord> <Rika> closeddyslexic
[11:16:56] <FromDiscord> <Mysterysib> Yeah open dyslexic Nerd font
[11:17:08] <FromDiscord> <retkid> I've had this install for less than a week and its already bloated to shit https://media.discordapp.net/attachments/371759389889003532/951023317186404362/2022-03-09_02-46.png
[11:17:24] <FromDiscord> <Mysterysib> I don’t always use it but it helps https://media.discordapp.net/attachments/371759389889003532/951023384895041536/59D13EAB-0A2A-4FB5-84F7-071CC4DEC942.jpg
[11:17:38] <FromDiscord> <retkid> I dont always have dyslexia but when i do, it helps
[11:17:50] <FromDiscord> <Mysterysib> Pretty much that ^
[11:18:06] <FromDiscord> <Rika> tiny font
[11:18:17] <FromDiscord> <Rika> im blind as fuck ig
[11:18:36] <FromDiscord> <Mysterysib> I use a 13 inch Screen 😂 and my left eye doesn’t work
[11:18:50] <FromDiscord> <Mysterysib> But I have 20/20 vision nonetheless
[11:18:54] <FromDiscord> <Rika> beat me: my right eye is farsighted and my left eye is nearsighted
[11:18:58] <FromDiscord> <Mysterysib> I just have other vision problems
[11:19:02] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951023793701269514/2022-03-09_02-48.png
[11:19:09] <FromDiscord> <retkid> thats my font size
[11:19:12] <FromDiscord> <Mysterysib> Well I used to see the world in two separate images overlaying one another until I got surgery
[11:19:16] <FromDiscord> <Rika> 24 small
[11:19:16] <FromDiscord> <retkid> i zoom in with my DE
[11:19:23] <FromDiscord> <retkid> usually
[11:19:34] <FromDiscord> <retkid> but this works fine with glasses on
[11:19:41] <FromDiscord> <retkid> without glasses lemme see where it needs to be
[11:20:12] <FromDiscord> <Mysterysib> Oh wow I’m 11
[11:20:22] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951024127144255558/2022-03-09_02-50.png
[11:20:36] <FromDiscord> <Mysterysib> Which IDE is that?
[11:20:39] <FromDiscord> <retkid> this is almost comfortable without glasses
[11:20:48] <FromDiscord> <retkid> This is vscode
[11:20:51] <FromDiscord> <Mysterysib> And what font?
[11:20:54] <FromDiscord> <Mysterysib> Looks nice
[11:21:03] <FromDiscord> <Mysterysib> When I don’t use dyslexic I use MonaLisa
[11:21:13] <FromDiscord> <retkid> Fira Code
[11:21:23] <FromDiscord> <Mysterysib> That one’s good too
[11:21:33] <FromDiscord> <Mysterysib> MonoLisa
[11:21:33] <FromDiscord> <Elegantbeef> There is 0 information i can extract to understand why there LSP isnt reporting diagnostics
[11:21:34] <FromDiscord> <Elegantbeef> Shame
[11:21:57] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951024528295870464/js-dark.png
[11:22:00] <FromDiscord> <retkid> this looks like the fucki0n
[11:22:01] <FromDiscord> <retkid> uhhh
[11:22:06] <FromDiscord> <retkid> Inteliji font
[11:22:11] <FromDiscord> <retkid> (edit) "fucki0n" => "fuckin"
[11:22:27] <FromDiscord> <Mysterysib> This is MonoLisa https://media.discordapp.net/attachments/371759389889003532/951024652975751168/unknown.png
[11:22:43] <FromDiscord> <retkid> I like it but its not a lot of character
[11:23:26] <FromDiscord> <Mysterysib> Also this ones super cool, it's called DaddyTimeMono https://media.discordapp.net/attachments/371759389889003532/951024900343234630/unknown.png
[11:24:05] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951025066068541460/2022-03-09_02-53.png
[11:24:08] <FromDiscord> <retkid> something about thsi font
[11:24:11] <FromDiscord> <retkid> is much less readable to me
[11:24:20] <FromDiscord> <retkid> sure i can read it faster but its uhh
[11:24:23] <FromDiscord> <Mysterysib> it's not the ideal programming font
[11:24:28] <FromDiscord> <retkid> it feels claustrophobic
[11:24:37] <FromDiscord> <Mysterysib> Maybe you can adjust the kerning
[11:24:42] <FromDiscord> <Mysterysib> but the font itself isnt great for writing code
[11:24:48] <FromDiscord> <kiell> how do i quit nim secret?
[11:24:56] <FromDiscord> <retkid> ctrl-d
[11:25:46] <FromDiscord> <kiell> for mac?
[11:26:15] <FromDiscord> <retkid> for linux?
[11:26:20] <FromDiscord> <Elegantbeef> control + C?
[11:26:48] <FromDiscord> <retkid> ctrl-d works on mien
[11:27:00] <FromDiscord> <retkid> ctrl-c as well
[11:27:02] <FromDiscord> <retkid> and ctrl-z
[11:27:03] <FromDiscord> <Mysterysib> type quit()
[11:27:04] <FromDiscord> <Mysterysib> boom
[11:27:34] <FromDiscord> <kiell> omg ty
[11:28:52] <FromDiscord> <retkid> but yea i wanna learn haskell or something and learn opengl
[11:29:24] <FromDiscord> <Mysterysib> what does haskell have to do with opengl
[11:29:32] <FromDiscord> <retkid> because even though I don't do graphics programming I'd like to learn about how you can translate traditionally programming concepts to shaders
[11:29:57] <FromDiscord> <retkid> In reply to @Mysterysib "what does haskell have": Because I wonder if it would be better to learn a new language with a new form of programming together to associate it better in your brain-thingy
[11:29:58] <FromDiscord> <Mysterysib> when I was younger I used opengl to draw the wallhacks I used to code for CSGO lol
[11:30:27] <FromDiscord> <Mysterysib> It's not that difficult, it's like learning to use a library
[11:30:37] <FromDiscord> <Elegantbeef> Ehh, i kinda want to get into writing hacks for fun
[11:30:44] <FromDiscord> <Elegantbeef> Opengl is quite simple, just tedious
[11:30:44] <FromDiscord> <Mysterysib> what was more difficult was attaching to the CSGO application and reading memory and signatures
[11:30:48] <PMunch> @Elegantbeef, you are correct, I did leave my IRC open again :P
[11:30:55] <FromDiscord> <Mysterysib> It's really fun actually
[11:31:03] <FromDiscord> <Mysterysib> There's different ways you can go about it
[11:31:03] <FromDiscord> <retkid> In reply to @Mysterysib "what was more difficult": I know someone that does it
[11:31:07] <FromDiscord> <retkid> I don't really see the appeal
[11:31:10] <FromDiscord> <Elegantbeef> Opengl is nicer with distinct types
[11:31:28] <PMunch> Debug nimlsp logs more stuff to the nimlsp log file
[11:31:30] <FromDiscord> <Mysterysib> you can write internal hacks by injecting a library (dll) into an application, or external hacks just by reading memory
[11:31:35] <PMunch> Which by default is in /tmp
[11:31:37] <FromDiscord> <Mysterysib> with internal hacks you can use the game's own API
[11:31:41] <FromDiscord> <Elegantbeef> Yea i found it all out
[11:31:44] <FromDiscord> <retkid> "ah yes well i figured out how to replace the assembly goto lookup table and slightly modify the code with embedded C and now I can move 0.2% faster"
[11:31:44] <FromDiscord> <Elegantbeef> It didnt help me any
[11:31:58] <PMunch> So you're not getting errors?
[11:32:13] <PMunch> As in "write something with an error; save the file; no errors show up"?
[11:32:18] <FromDiscord> <Elegantbeef> In the log, there are some issues of "RequestMessage" not parsable
[11:32:32] <FromDiscord> <Elegantbeef> Yea it's not getting diagnostics
[11:32:47] <FromDiscord> <Elegantbeef> Kate is relatively easy to get if you care to test it yourself
[11:32:58] <FromDiscord> <Elegantbeef> Certainly in your package manager 😛
[11:33:25] <FromDiscord> <Mysterysib> @ElegantBeef did you put `let g:lsp_log_file = expand('/tmp/vim-lsp.log')` in your config?
[11:33:45] <FromDiscord> <Elegantbeef> Kate, i was testing kate
[11:33:46] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[11:33:57] <FromDiscord> <Mysterysib> Ohhhh
[11:34:34] <FromDiscord> <Mysterysib> How did you install the kate plugin? Maybe I can try it
[11:34:47] <FromDiscord> <Mysterysib> I never used kate before
[11:34:55] <FromDiscord> <Elegantbeef> Kate is a text editor!
[11:35:01] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3RKR
[11:35:04] <FromDiscord> <Mysterysib> Yeah, I know
[11:35:07] <FromDiscord> <Elegantbeef> it has a LSP toggle
[11:35:22] <FromDiscord> <Elegantbeef> No Nim doesnt return on assignment
[11:35:32] <FromDiscord> <Elegantbeef> you'd do `var on = (two = doThing(); two)`
[11:35:45] <FromDiscord> <Mysterysib> Was your Kate built with debug binaries?
[11:36:02] <FromDiscord> <Elegantbeef> It's from the ubuntu repo so i hope not
[11:36:35] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3RKS
[11:36:44] <FromDiscord> <Hamid_Bluri> https://github.com/hamidb80/iterrr#inline-reducer
[11:37:43] <FromDiscord> <Mysterysib> How did you install nim lsp in Kate?
[11:37:59] <FromDiscord> <Elegantbeef> It's on the nimlsp readme
[11:38:01] <PMunch> @Elegantbeef, sounds like Kate is sending messages which are technically not up to the LSP spec
[11:38:20] <PMunch> NimLSP is pretty strict about what it parses, it has already generated bug reports to more than one LSP client :P
[11:40:26] <FromDiscord> <enthus1ast> can i store a pragmas in a variable or  i want to combine multiple pragmas under one new pragma
[11:40:42] <FromDiscord> <Hamid_Bluri> pragma pragma
[11:40:49] <FromDiscord> <Mysterysib> I wonder why I get the error ` Error: cannot open file: /usr/local/Cellar/nim/HEAD-b2c5d7b/nim/nimsuggest/nimsuggest.nim` when trying to install nimlsp
[11:41:00] <FromDiscord> <enthus1ast> @Hamid_Bluri\: have a syntax example?
[11:41:02] <FromDiscord> <Hamid_Bluri> https://nim-lang.org/docs/manual.html#userminusdefined-pragmas-pragma-pragma
[11:41:08] <FromDiscord> <Mysterysib> do I have to install dependencies manually>?
[11:41:25] <PMunch> @Mysterysib, read the rest of the install instructions as well
[11:41:45] <PMunch> That is one of the most common issues and should be described in the README
[11:42:24] <FromDiscord> <Mysterysib> This might be because I installed nim on OSX using Homebrew, but I cannot build a single nim library
[11:42:45] <FromDiscord> <Mysterysib> Various errors for everything, including unions
[11:42:54] <PMunch> In general installing Nim via Homebrew is a bad idea
[11:42:59] <FromDiscord> <sOkam!> does each field/key in a new typed object need to be ``, even if the type itself is marked with ?
[11:43:03] <PMunch> What version of Nim does it ship with nowadays?
[11:43:17] <FromDiscord> <Elegantbeef> Nim allows you to specify each field's export so yes
[11:43:22] <madprops> 1.6.4
[11:43:40] <madprops> https://formulae.brew.sh/formula/nim
[11:43:42] <PMunch> madprops, in Homebrew?
[11:43:43] <FromDiscord> <Mysterysib> Should I just download the precompiled binary then?
[11:43:49] <PMunch> Nope, use choosenim
[11:44:11] <PMunch> Someone should have a look at the bots to figure out if there's a better way to do parsing: https://irclogs.nim-lang.org/09-03-2022.html#08:12:59
[11:44:25] <PMunch> I assume there are some stars there I can't see
[11:44:45] <FromDiscord> <Elegantbeef> Yes there are
[11:45:29] <FromDiscord> <Mysterysib> Is 1.6.4 the latest stable?
[11:45:48] <FromDiscord> <enthus1ast> @Hamid_Bluri\: thank you works
[11:50:43] <PMunch> @Mysterysib, yes it's the latest stable. But Homebrew tend to install it weirdly which breaks building of many projects
[11:57:00] *** Quits: rb (~augh@209.141.39.190) (Ping timeout: 240 seconds)
[11:57:19] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3RKV
[11:58:33] <PMunch> Yes, those three are equivalent. But neither of them follow the Nim style guide
[11:59:04] <PMunch> `let thing1* = 1` would probably be the most stylistically correct
[11:59:30] <PMunch> Or `let thing1*: int = 1` if you for some reason insist on declaring it with a type
[12:00:24] <FromDiscord> <Elegantbeef> Speaking of masochism 😛
[12:01:00] <PMunch> Haha, that's going to look super out of context for those who don't read #offtopic :P
[12:04:06] *** Joins: rwb (~augh@alogs.space)
[12:04:11] <FromDiscord> <sOkam!> In reply to @PMunch "Yes, those three are": yeah i imagine. the problem is symbols next to words are very distracting for me for whatever reason 🤷‍♂️ ↵Goal is to do something like this. I know its not nep, but... https://media.discordapp.net/attachments/371759389889003532/951035156297302016/unknown.png
[12:04:39] <FromDiscord> <Elegantbeef> Jesus the hardest code base to work with
[12:05:07] <FromDiscord> <sOkam!> with a simple skim i read:↵- all of these are const↵- they are all public const↵- these are their values
[12:05:16] <FromDiscord> <sOkam!> (edit) "const↵-" => "int↵-"
[12:05:36] <FromDiscord> <sOkam!> non-programmer-brain issues i guess 😔
[12:05:45] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Jesus the hardest code": wdym?
[12:06:05] <FromDiscord> <Elegantbeef> Horizontally aligned code with weird conventions
[12:07:24] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89) (Remote host closed the connection)
[12:15:30] <FromDiscord> <Rika> someones gonna get mad at you for not using enums
[12:15:48] <FromDiscord> <untoreh> typing `var out:` makes nimlsp crash
[12:16:22] <FromDiscord> <Rika> out is a keyword
[12:17:27] <FromDiscord> <untoreh> yeah...that's a good hint for debugging 😛 but other kws don't crash
[12:17:37] <FromDiscord> <Rika> pmunch ^ lol
[12:17:54] <FromDiscord> <fbpyr> sent a code paste, see https://play.nim-lang.org/#ix=3RKX
[12:18:22] <PMunch> Don't look at me, that's 95% certainly a nimsuggest bug
[12:19:40] <FromDiscord> <Rika> should lsp crash when suggest crash though
[12:23:02] <PMunch> Yup
[12:23:07] <PMunch> That's by design
[12:23:24] <PMunch> NimLSP is nimsuggest, it's just a different front-end
[12:23:58] <PMunch> We should fix bugs in nimsuggest, not put lipstick on a pig and build complex management systems into NimLSP
[12:24:08] <PMunch> Besides, your editor is supposed to restart NimLSP if it crashes
[12:25:17] <PMunch> Since it crashed we now know that something is wrong, @untoreh can create an issue in the nimsuggest bug tracker, and someone can fix the bug. If NimLSP had just silently restarted we wouldn't get anywhere
[12:40:02] <FromDiscord> <sOkam!> Is this incorrect in some way? 🤔 ↵I'm getting `.... /types.nim(2, 14) Error: cannot export: render / types` https://media.discordapp.net/attachments/371759389889003532/951044180359127091/unknown.png
[12:42:05] <FromDiscord> <Elegantbeef> `export types`
[12:42:52] <FromDiscord> <Elegantbeef> You're exporting a symbol not a path
[12:46:23] <FromDiscord> <retkid> I want to learn vulcan and start getting depressed by its verbose code but I dont have a gpu that supports it
[12:46:28] <FromDiscord> <retkid> 😭
[12:46:37] <FromDiscord> <Elegantbeef> Dont learn vulkan 😛
[12:47:31] <FromDiscord> <retkid> you cant stop me, {parental gender}
[12:47:37] <FromDiscord> <retkid> (edit) "{parental gender}" => "{parental.gender}"
[12:49:11] <FromDiscord> <retkid> how bad can vulkan really be
[12:49:25] <FromDiscord> <Elegantbeef> 2000 lines of code for a triangle 😛
[12:49:45] <FromDiscord> <retkid> then how do people...
[12:49:45] <FromDiscord> <retkid> like
[12:49:48] <FromDiscord> <retkid> use it?
[12:50:09] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:50:33] <FromDiscord> <Elegantbeef> They make abstractions over top the verbose compatibility code
[12:51:05] <FromDiscord> <retkid> I'm sure it wont be 2000 lines of code for gpu acceleration in my weird projects
[12:51:12] <FromDiscord> <retkid> famous last words
[12:51:51] <FromDiscord> <Elegantbeef> Well your gpu doesnt support vulkan
[12:51:58] <FromDiscord> <Elegantbeef> So why would you use it?
[12:52:03] <FromDiscord> <Rika> In reply to @PMunch "Since it crashed we": Unless that same bug has been there for years and no one has wanted to try to fix it 🙂
[12:52:28] <PMunch> @Rika, maybe some day someone will
[12:52:46] <PMunch> If they get fed up with NimLSP crashing on them
[12:52:57] <FromDiscord> <Rika> Or maybe some day it will be revamped as a rewrite which is more likely
[12:53:26] <FromDiscord> <Rika> In reply to @PMunch "If they get fed": They could just stop using LSP and move to a plugin that does the weird management shit
[12:53:27] <FromDiscord> <ripluke> In reply to @michaelb.eth "yes, though there are": Thats cool
[12:53:37] <FromDiscord> <retkid> In reply to @Elegantbeef "So why would you": because i wanna look at all of the data i can get from parallelization, the amount of dopamine could cure my depression
[12:53:45] <PMunch> @Rika, sure that's also an option
[12:53:50] <FromDiscord> <Rika> In reply to @retkid "because i wanna look": Parallelisation is not easy
[12:54:17] <FromDiscord> <retkid> its possible in Vulkan, and I want to see how far I'd get before giving up
[12:55:43] <FromDiscord> <Elegantbeef> Or you could use ogl and actually make something
[12:56:20] <FromDiscord> <retkid> but it may be 2% faster in certain hardware configurations with vulkan
[12:56:26] <FromDiscord> <Rika> Possible sure, how long will it take you to do it though, let alone properly
[12:56:53] <FromDiscord> <Rika> That extra 2% won’t get utilised if you make stuff wrong
[12:57:10] <FromDiscord> <Elegantbeef> Opengl is plenty fast if written well
[12:57:18] <FromDiscord> <sOkam!> In reply to @retkid "how bad can vulkan": everything new you have to code yourself. the structure gives you raw access, so starting to just draw something is a nightmare↵once you have that going, and you create your own interface/api for your architecture, I heard it becomes just like any other api↵problem is getting to that point is hell
[12:57:44] <FromDiscord> <retkid> well, I dont wanna draw things I want to do parallelized math and data processing
[12:57:58] <FromDiscord> <retkid> which is a whole separate field of pain
[12:58:03] <FromDiscord> <Rika> Then Vulcan isn’t your framework
[12:58:11] <FromDiscord> <Rika> Vulkan sorry
[12:58:32] <FromDiscord> <retkid> its ok its not an english word and English K rules suck
[12:58:48] <FromDiscord> <retkid> Italian only has a C and Its much better for it
[12:58:55] <FromDiscord> <sOkam!> i've been recommended to go gl4 until vulkan gets a "simpler" api, by a friend who has been working in the field for over a decade. so.... I will trust that and stick to gl4 for now myself
[12:59:32] <FromDiscord> <retkid> I was wondering if Cuda is good
[12:59:32] <FromDiscord> <sOkam!> he said that vulkan is not worth it, unless you plan on working specifically in graphics exclusively
[13:00:03] <FromDiscord> <Rika> It’s kinda like buying a Bugatti as your first car, sure it’s fast but do you know how to use it to its full potential
[13:00:04] <FromDiscord> <retkid> I think Cuda is what i'm really looking for
[13:00:22] <FromDiscord> <Rika> In reply to @retkid "I think Cuda is": Perhaps, that sounds more appropriate
[13:00:49] <FromDiscord> <retkid> however, Cuda is exclusive to Nvidia and opencl isn't really a perect alternative
[13:00:53] <FromDiscord> <pruno> sent a code paste, see https://play.nim-lang.org/#ix=3RL3
[13:00:58] <FromDiscord> <retkid> perfect
[13:01:10] <FromDiscord> <pruno> (edit) "https://play.nim-lang.org/#ix=3RL3" => "https://play.nim-lang.org/#ix=3RL4"
[13:01:28] <FromDiscord> <Rika> In reply to @retkid "however, Cuda is exclusive": Parallelisation is platform specific
[13:01:44] <FromDiscord> <retkid> https://tenor.com/view/pepe-why-pepe-pepehands-crying-gif-12683546
[13:02:32] <FromDiscord> <Rika> It’s not even just architecturally specific even
[13:02:49] <FromDiscord> <retkid> In reply to @pruno "Hello, i have an": are you having trouble compiling the proc or are you calling that proc thats the trouble
[13:02:59] <FromDiscord> <pruno> In reply to @retkid "are you having trouble": Compiling it
[13:03:43] <FromDiscord> <Elegantbeef> Are you attempting to call it at compile time?
[13:04:38] <FromDiscord> <Rika> In reply to @Rika "Parallelisation is platform specific": In the end, what’s your overarching goal?
[13:04:57] <FromDiscord> <Rika> You want to do parallelised data processing in what situation s
[13:05:15] <FromDiscord> <retkid> In reply to @Rika "In the end, what’s": learn more about executing code on a gpu to increase data throughput when the need arises \
[13:05:27] <FromDiscord> <Rika> Then what’s wrong with just going with CUDA?
[13:05:43] <FromDiscord> <retkid> func toByteSeq(str: string): seq[byte] {.inline.} =↵    ## Converts a string to the corresponding byte sequence.↵    @(str.toOpenArrayByte(0, str.high))
[13:05:55] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951050692586528768/2022-03-09_04-35.png
[13:06:36] <FromDiscord> <Rika> You literally have no choice but to get a GPU
[13:06:39] <FromDiscord> <Rika> Or rent one
[13:06:44] <FromDiscord> <Rika> Renting one is very expensive
[13:06:50] <FromDiscord> <retkid> also Nvidia platform exclusivity, a company which isn't the most driver friendly for linux
[13:07:01] <FromDiscord> <retkid> which is my goat in the race
[13:07:27] <FromDiscord> <Rika> Maybe this will interest you
[13:07:29] <FromDiscord> <Rika> https://github.com/ROCm-Developer-Tools/HIP
[13:07:35] <FromDiscord> <Elegantbeef> Well use an opengl compute shader 😛
[13:07:41] <FromDiscord> <demotomohiro> sent a long message, see http://ix.io/3RL5
[13:07:56] <FromDiscord> <pruno> In reply to @Elegantbeef "Are you attempting to": It was indeed the issue, thanks :)
[13:08:14] <FromDiscord> <retkid> In reply to @Rika "https://github.com/ROCm-Developer-Tools/HIP": this is the coolest thing since I discovered poc1 yesterday
[13:08:28] <FromDiscord> <Rika> In reply to @Elegantbeef "Well use an opengl": Hmm good point
[13:08:43] <FromDiscord> <Elegantbeef> Except i dont think that gpu supports it
[13:08:47] <FromDiscord> <retkid> pocl
[13:09:28] <FromDiscord> <Rika> In reply to @Elegantbeef "Except i dont think": It probably doesn’t since it’s old
[13:11:27] <FromDiscord> <demotomohiro> In reply to @retkid "": Try `glxinfo | grep compute_shader` to see if compute shader is supported
[13:11:48] <FromDiscord> <Rika> Seems like it might https://media.discordapp.net/attachments/371759389889003532/951052175067480064/IMG_6667.png
[13:11:49] <FromDiscord> <retkid> In reply to @Rika "https://github.com/ROCm-Developer-Tools/HIP": I like this quite a bit, now all i need to do is find bindings in usable language
[13:12:19] <FromDiscord> <Rika> But it’s DX
[13:12:27] <FromDiscord> <retkid> https://i.imgur.com/gA2qjGI.png
[13:12:34] <FromDiscord> <Rika> Ah says below GL compute
[13:13:08] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/951052511211577395/2022-03-09_04-43.png
[13:13:16] <FromDiscord> <retkid> looks like we have compute shaders, yes
[13:13:18] <FromDiscord> <Rika> Congrats
[13:15:38] <FromDiscord> <Rika> @retkid if you’re still on the fence https://media.discordapp.net/attachments/371759389889003532/951053137429557288/IMG_6668.png
[13:15:42] <FromDiscord> <Rika> https://shader-tutorial.dev/basics/introduction/
[13:16:26] <FromDiscord> <retkid> this is for opengl compute shaders, correct?
[13:16:30] <FromDiscord> <retkid> and the shady-nim stuff
[13:16:41] <FromDiscord> <retkid> or the RCOM-HIP you sent me
[13:16:53] <FromDiscord> <Rika> Uh shaders
[13:16:55] <FromDiscord> <Rika> It’s for shaders
[13:18:26] <FromDiscord> <sOkam!> shady looks dope af
[13:18:58] <FromDiscord> <retkid> shady does look very cool
[13:19:10] <FromDiscord> <retkid> I shall research this further and write code soon^tm
[13:30:19] <FromDiscord> <mratsim> In reply to @retkid "I shall research this": what do you want to do?
[13:30:56] <FromDiscord> <mratsim> otherwise you target LLVM IR and you have LLVM JIT code for Nvidia, AMD, DX12, OpenGL, Vulkan, Qualcomm Hexagon, ...
[13:31:08] <FromDiscord> <mratsim> but you need LLVM on the user machine.
[13:31:17] <FromDiscord> <mratsim> (edit) "but you need LLVM ... on" 03added "runtime"
[13:32:28] <FromDiscord> <retkid> DX12 and Vulken aren't really what I need
[13:32:36] <FromDiscord> <Rika> Oh really? You can do that? Cool
[13:33:19] <FromDiscord> <retkid> I am unable to focus on anything rn in order to properly understand stuff
[13:33:34] <FromDiscord> <retkid> I cant focus on anything and am searching for a podcast to help
[13:46:40] <FromDiscord> <Schelz> sent a code paste, see https://paste.rs/x1t
[13:47:20] <FromDiscord> <Schelz> ImDrawData is struct, so i have do make a type object and use it as an args in proc ?
[13:48:22] <FromDiscord> <Elegantbeef> What's the special args?
[13:48:50] <FromDiscord> <Elegantbeef> It's just a `ptr ImDrawData` you can use `create` and `dealloc` or use a stack value and pass the `addr` of it
[13:52:36] <FromDiscord> <Schelz> But if i want to import it from cpp it would be type ImDrawData {.importcpp ....} = object ?
[13:52:51] <FromDiscord> <Elegantbeef> I believe so
[13:53:26] <FromDiscord> <Schelz> Aha cause i search for examples and the only example was used to define the return type for proc
[13:53:32] <FromDiscord> <Schelz> (edit) "Aha" => "Aha,"
[13:53:37] <PMunch> Hmm, interesting issue with Futhark..
[13:54:51] <PMunch> So a header file which contains a `static inline` function will simply be inlined and won't be generated in e.g. a dynamic library
[13:55:06] <PMunch> So if I generate a definition for it there is no way to call it
[14:36:37] <FromDiscord> <Mysterysib> Why is awk so difficult
[14:52:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:58:00] <Amun-Ra> awk is awkward
[14:59:46] <FromDiscord> <Rika> Wrong channel? Hehe
[15:00:33] <Amun-Ra> ;>
[15:02:45] <FromDiscord> <retkid> could i theoretically get a nim program to run forever or would there be GC issues?
[15:03:54] <FromDiscord> <Rika> You can
[15:04:01] <FromDiscord> <Rika> How else do server programs work
[15:04:08] <FromDiscord> <retkid> look
[15:04:27] <FromDiscord> <Rika> I am looking 👀
[15:04:50] <FromDiscord> <retkid> sometimes I think about the story about Lisp at Nasa
[15:04:50] <Amun-Ra> GC issues? like some kind of cyclic deps resulting in growing memory usage?
[15:05:07] <FromDiscord> <retkid> something eventually leading to a segfault
[15:05:21] <Amun-Ra> I don't think segfaults are gc related
[15:05:21] <FromDiscord> <Rika> That wouldn’t be an issue unless a reference to such cycle was held unnecessarily
[15:05:31] <FromDiscord> <Rika> In reply to @Amun-Ra "I don't think segfaults": They can be in some way
[15:05:33] <FromDiscord> <retkid> sometimes they are
[15:05:40] <Amun-Ra> Rika: you know what I mean
[15:05:50] <FromDiscord> <Rika> No I do not, they can be
[15:05:55] <Amun-Ra> yes, but usually it's a dangling pointer
[15:05:59] <Amun-Ra> etc.
[15:06:01] <FromDiscord> <retkid> no
[15:06:17] <FromDiscord> <retkid> I'm not doing anything directly that does anything with pointers
[15:06:22] <FromDiscord> <Rika> Okay I guess I understand what you mean now
[15:06:29] <FromDiscord> <Rika> In reply to @retkid "I'm not doing anything": That’s not what he means
[15:06:34] <FromDiscord> <retkid> well I mean that
[15:06:36] <FromDiscord> <Rika> References are ultimately just pointers
[15:07:04] <FromDiscord> <retkid> sometimes things are freed unexpectedly and stuff just cascades unexpectedly
[15:07:30] <FromDiscord> <retkid> or something
[15:07:32] <FromDiscord> <retkid> brain hazey
[15:07:35] <FromDiscord> <Rika> That means your GC is misbehaving aka a bug
[15:07:43] <FromDiscord> <Rika> Or you did something wrong
[15:07:51] <FromDiscord> <Rika> A cast or a conversion that was improper
[15:08:07] <FromDiscord> <Rika> Conversions usually don’t break though so it’s usually a casts fault
[15:08:29] <FromDiscord> <Rika> In reply to @Rika "Or you did something": You or someone else in the case of a library
[15:11:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:11:55] <FromDiscord> <retkid> a good 15% of the time my code just breaks and i cant figure out why so i rewrite it to be better
[15:12:01] <FromDiscord> <retkid> or find a workaround
[15:12:13] <FromDiscord> <retkid> sometimes arbitrarily rewriting code makes it better
[15:20:42] <FromDiscord> <Require Support> sent a code paste, see https://paste.rs/EZh
[15:22:21] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[15:23:33] <FromDiscord> <Require Support> looks like it might be in std/tables
[15:26:11] <FromDiscord> <Papel> I think the nim equivalent are enum↵https://nim-by-example.github.io/types/enums/
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:43:20] <FromDiscord> <congusbongus> yes it's tables↵no it's not enums, they're different
[15:54:04] <FromDiscord> <enthus1ast> i've just released Hot Code Reloading for Nimja, please check it out and give feedback \:) ↵https://forum.nim-lang.org/t/8384↵https://github.com/enthus1ast/nimja
[15:54:31] *** Joins: arkurious (~arkurious@user/arkurious)
[16:03:19] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[16:08:34] <FromDiscord> <madman> sent a code paste, see https://play.nim-lang.org/#ix=3RLR
[16:36:20] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[16:39:58] <FromDiscord> <auxym> well does the z: path exist? Also what line is the stacktrace pointing to?
[16:41:00] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[16:46:46] *** Joins: rockcavera (~rc@192.12.113.76)
[16:46:46] *** Quits: rockcavera (~rc@192.12.113.76) (Changing host)
[16:46:46] *** Joins: rockcavera (~rc@user/rockcavera)
[16:57:49] <PMunch> @Require_Support, looks like you might want a tuple TBH
[16:58:08] <FromDiscord> <madman> In reply to @auxym "well does the z:": `Z:/` is a network drive. `xxx.yyy.zzz.aaa://Test/Art`
[17:03:37] <PMunch> What?! A new release of Futhark so soon after the last one? Crazy! https://github.com/PMunch/futhark/releases/tag/v0.5.0
[17:08:16] <FromDiscord> <System64 ~ Flandre Scarlet> Paths still not fixed :/
[17:09:36] <FromDiscord> <ajusa> Hey PMunch, have you seen my PR for the playground? Just confirming you know it exists, not rushing you to take a look at it
[17:17:56] <PMunch> @System64_~_Flandre_Scarlet, no unfortunately not. I still don't have Windows :(
[17:18:10] <PMunch> @ajusa, yup I've seen it, but I haven't had a chance to look at it yet
[17:18:20] <FromDiscord> <madman> sent a code paste, see https://play.nim-lang.org/#ix=3RM1
[17:18:31] <PMunch> But you mentioned that you weren't able to build the playground docker containers?
[17:18:36] <FromDiscord> <madman> prolly something with windows
[17:20:44] <FromDiscord> <Schelz> typedef struct in cpp imports the same in nim as simple struct ?
[17:20:55] <PMunch> Hmm, that line points at some windows file info structure to Nim file info object conversion logic
[17:20:59] <FromDiscord> <Schelz> (edit) "simple struct" => ""simple "struct"
[17:21:06] <PMunch> Please report that on GitHub
[17:21:15] <PMunch> If an issue doesn't exist for it already
[17:21:28] <PMunch> @Schelz, what do you mean?
[17:22:41] <FromDiscord> <Schelz> sent a code paste, see https://play.nim-lang.org/#ix=3RM3
[17:23:07] <FromDiscord> <Rika> looks right to me
[17:23:11] <FromDiscord> <Schelz> so for typedef struct its use the same method ?
[17:23:34] <FromDiscord> <Schelz> (edit) "its" => "do i"
[17:24:30] <FromDiscord> <Schelz> sent a code paste, see https://play.nim-lang.org/#ix=3RM4
[17:25:31] <PMunch> Yes, but then your `importcpp` becomes `struct IDirect3DDevice9`
[17:25:49] <FromDiscord> <ajusa> In reply to @PMunch "But you mentioned that": Yes, I was unable to get the containers working. The one with the nimble packages errors due to a package not building, and the one without nimble packages errors when installing Nim
[17:25:50] <PMunch> Well, it's probably typedef-ed to something else
[17:26:08] <PMunch> So you can choose whether or not you want the struct version or the typedefed version
[17:26:19] <FromDiscord> <Schelz> In reply to @PMunch "Yes, but then your": ok thx
[17:26:25] <PMunch> Do you have the error @ajusa?
[17:26:47] <PMunch> It's probably just that it is missing the required version file to pick the version it should build
[17:27:01] <PMunch> That container is built by a script which passes in the version to build through a file
[17:27:09] <FromDiscord> <ajusa> I did add the version file correctly
[17:27:22] <PMunch> And what was the error then?
[17:27:34] <FromDiscord> <ajusa> It fails after that, and I don't remember the error (it was last week)
[17:28:04] <PMunch> Should've created an issue so I could've fixed it for you
[17:30:45] <FromDiscord> <ajusa> Yeah, I'll do that. Would it be possible for you to confirm that the docker build without packages works?
[17:30:54] <FromDiscord> <ajusa> We need readme instructions on the setup anyway
[17:44:18] <FromDiscord> <exelotl> Say I'm wrapping a C library with a bunch of different init functions depending on what "mode" you want to use it in.
[17:45:12] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3RMc
[17:45:44] <FromDiscord> <exelotl> sent a code paste, see https://paste.rs/6BX
[17:46:42] <Amun-Ra> don't use int when importc, use cint
[17:46:48] <FromDiscord> <exelotl> sent a code paste, see https://paste.rs/Njn
[17:47:18] <FromDiscord> <Rika> ah yes that discussion
[17:47:23] <FromDiscord> <exelotl> this code is only targetting 32-bit ARM so it's safe to use `int`
[17:47:49] <FromDiscord> <Rika> sent a code paste, see https://paste.rs/ZYg
[17:48:03] <FromDiscord> <Rika> i personally think the nicest is the last, but the middle is ok too
[17:48:29] <FromDiscord> <exelotl> yeah, it's just that in this case the init is initialising the module, not an instance of a type 😅
[17:48:34] <FromDiscord> <Rika> either way can utilise passed typedescs like from generics or so
[17:48:39] <FromDiscord> <Rika> oh really
[17:48:45] <FromDiscord> <Rika> hmm
[17:48:48] <FromDiscord> <Rika> let me think about that then
[17:49:09] <FromDiscord> <Rika> maybe name it differently than just "init" then
[17:49:21] <FromDiscord> <Rika> maybe moduleInit or initModule whichever ya like
[17:50:14] <FromDiscord> <Rika> either way (initT vs init[T]) works imo, maybe first over second since theres (probably?) no benefit to generics
[18:00:28] <FromDiscord> <Mysterysib> Who's the maintainer of choosenim?
[18:01:35] <Amun-Ra> dom?
[18:01:55] <FromDiscord> <Rika> yes
[18:13:05] <PMunch> @ajusa, I've updated my machine since I started it. So I'd have to reboot my machine to try it
[18:13:20] <PMunch> And I'm done at work in 15 minutes and will go home
[18:13:44] <PMunch> And I'm going to be away in London until Tuesday, so I won't be able to check anything soon :P
[18:14:05] <FromDiscord> <ajusa> Alright, not a problem lol
[18:15:46] <PMunch> Hmm, it seems like the server hasn't auto-built the 1.6.4 version either. So maybe there is something wrong with the script
[18:15:56] <PMunch> I'm running the script on the server now to see if it errors out
[18:16:06] <FromDiscord> <Rika> inb4 enospc
[18:33:46] <PMunch> @ajusa, seems to build just fine on the server
[18:34:12] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 240 seconds)
[18:34:30] <FromDiscord> <ajusa> Well I'm stumped then, no clue why I can get it to work on my machine
[18:34:38] <FromDiscord> <ajusa> (edit) "can" => "can't"
[18:35:53] <PMunch> At least 1.2.14 bulids fine
[18:36:04] <PMunch> 1.6.0 seems to have some trouble with rand..
[18:38:52] <NimEventer> New thread by Mardiyah: On Warning: Deprecated since v1.4; there should not be high, see https://forum.nim-lang.org/t/8992
[18:39:17] <FromDiscord> <hotdog> In reply to @PMunch "And I'm going to": Welcome to London! 🏴󠁧󠁢󠁥󠁮󠁧󠁿 🥳
[18:45:05] <PMunch> Thank you :)
[18:46:11] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[19:08:16] <FromDiscord> <lantos> @dom96 is there anything special you need to do to get nim sdl2  working on m1?
[19:09:01] <FromDiscord> <lantos> sent a code paste, see https://play.nim-lang.org/#ix=3RMJ
[19:42:08] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[19:46:36] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[20:13:16] *** Joins: vicfred (~vicfred@user/vicfred)
[20:18:57] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:22:31] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[20:24:27] <FromDiscord> <gibson> If I declare a `var name: cstring` will that be GCed correctly? Is the only downside to using cstring the fact that there are fewer helper utilities? I ask because I'm using `seq[cstring]` so I can pass the underlying data around for read-only access cheaply to external libraries.
[20:28:53] <FromDiscord> <Rika> it will not be gced at all i believe
[20:32:28] <FromDiscord> <gibson> Ohhh. dang.
[20:34:37] <FromDiscord> <gibson> Confirmed: `GC_unref()` on cstring probably shows  `Error: type mismatch: got (cstring) but expected one of: system.GC_unref(x: seq[T]) system.GC_unref(x: string) system.GC_unref(x: ref T)`
[20:36:46] <FromDiscord> <Schelz> sent a code paste, see https://play.nim-lang.org/#ix=3RMZ
[20:37:04] <FromDiscord> <Schelz> cause its not a namespace and i have no clue 😄
[20:37:45] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89)
[20:54:59] <FromDiscord> <Rika> wdym? `{.importcpp: "::GetDeviceCaps".}`? idk
[20:57:26] *** rwb is now known as rb
[21:01:52] <FromDiscord> <Schelz> idk if that work hmmm
[21:02:10] <FromDiscord> <Rika> it was a guess, im not sure either
[21:02:35] <FromDiscord> <Schelz> first i thought its a namespace from other header but its not
[21:02:43] <FromDiscord> <Schelz> some cpp thingy
[21:04:11] <FromDiscord> <Rika> idk cpp that well so
[21:04:45] <FromDiscord> <Schelz> sent a code paste, see https://play.nim-lang.org/#ix=3RN2
[21:05:10] <FromDiscord> <Schelz> and thats weird cause its not used in the header but error me that its not defined
[21:05:34] <FromDiscord> <Schelz> example https://media.discordapp.net/attachments/371759389889003532/951171397273649182/unknown.png
[21:11:52] <FromDiscord> <Schelz> sent a code paste, see https://paste.rs/ODd
[21:13:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[21:24:04] <FromDiscord> <madman> In reply to @Schelz "so i found out": https://github.com/khchen/winim↵maybe this will help u make cpp bindings
[21:26:46] <FromDiscord> <Schelz> sent a code paste, see https://play.nim-lang.org/#ix=3RNa
[21:27:08] <FromDiscord> <Schelz> lame ik but i will remake it after i see some results
[21:28:15] <FromDiscord> <madman> binding to c is way easier
[21:28:23] <FromDiscord> <madman> fuck cpp
[21:28:33] <FromDiscord> <madman> (edit) "fuck" => "fk"
[21:28:58] <FromDiscord> <Schelz> ik but if you know that to bind and how its ez 😛
[21:29:04] <FromDiscord> <Schelz> (edit) "that" => "what "
[21:29:12] <FromDiscord> <Schelz> (edit) 04removed ""
[21:30:34] <FromDiscord> <madman> yeah sure, it also depends on if there is a build system to what ur binding to
[21:30:46] <FromDiscord> <madman> in my experience, that makes things way messier
[21:31:01] <FromDiscord> <madman> https://github.com/IbrahimHindawi/Knim
[21:31:58] <FromDiscord> <madman> i guess it is the oop stuff that makes binding to cpp a bit more convoluted, anw best of luck
[21:32:49] <FromDiscord> <Schelz> thx
[21:36:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:36:47] <FromDiscord> <madman> u can always go straight MASM64/DX11 ↵https://github.com/IbrahimHindawi/masm64dx<a:kirby_vibes:815995887750217859>
[21:56:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[22:00:19] <FromDiscord> <gibson> @Schelz Worth a shot to ask if you've tried one of the c++ helper wrappers? https://github.com/n0bra1n3r/cinterop
[22:01:25] <FromDiscord> <gibson> They apparently used it to wrap the Diligent 3D Engine
[22:03:33] <FromDiscord> <dom96> In reply to @lantos "<@!132595483838251008> is there anything": no idea, don't have an m1
[22:04:02] <FromDiscord> <lantos> ahh whoops thought you were using a mac
[22:05:08] <FromDiscord> <dom96> still running my 2014 boy 🙂
[22:05:33] <FromDiscord> <dom96> in any case, you should be able to find some answers online hopefully
[22:05:39] <FromDiscord> <dom96> this shouldn't be Nim-specific
[22:22:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:30:34] <FromDiscord> <lantos> snap nokia of laptops?↵↵mm yeah your right its not really nim specifi, nim is trying to dynamically link from /usr/local/lib /usr/lib but on mac brew installs librarys to /opt/homebrew/↵I just ln -s the two but not sure why nim isn't respecting LIBRARY_PATH envar which is set to /opt/homebrew
[22:30:38] <FromDiscord> <lantos> (edit) "specifi," => "specific,"
[22:30:56] <FromDiscord> <lantos> (edit) "snap nokia of laptops?↵↵mm yeah your right its not really nim specific, nim is trying to dynamically link from /usr/local/lib ... /usr/liblibrary's" 03added "or" | "librarys" => "library's"
[22:32:15] <FromDiscord> <lantos> (edit) 
[22:37:38] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89) (Remote host closed the connection)
[22:41:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[22:54:06] <FromDiscord> <Waldecir Santos> Do we have a tutorial explaining the diference between `ref object` and `object` when declaring an new object/type ?
[22:54:34] <FromDiscord> <Waldecir Santos> I've checked https://nim-lang.org/docs/tut1.html#advanced-types-reference-and-pointer-types but still some confusion
[22:54:59] <FromDiscord> <Phil> Wasn't "ref object" just a "pass any object of this type by reference and not by value" type of deal?
[22:57:10] <FromDiscord> <Waldecir Santos> I understand that ref is a traced pointer for GC to work, but I don't get what is the diference without it
[22:57:19] <FromDiscord> <Waldecir Santos> because my code works ok with or without it
[22:58:26] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:05:45] <FromDiscord> <huantian> Ref types essentially allow multiple variable to point to the same value (mutate one object -> each variable changes), and it’s also used whenever you need to have one object point to another
[23:06:48] <FromDiscord> <Waldecir Santos> Sure I got that, but for example how it behaves without it ?
[23:07:34] <FromDiscord> <Rika> in many situations there is no behavioural difference
[23:07:42] <FromDiscord> <Rika> aside from performance, perhaps
[23:08:39] <FromDiscord> <Waldecir Santos> You mean the code should be more performant with `ref` ?
[23:18:36] <FromDiscord> <Rika> no
[23:18:45] <FromDiscord> <Rika> the performance will differ depending on usage'
[23:29:27] <FromDiscord> <exelotl> non-ref objects have by-value semantics, same as integers and other primitive types
[23:32:26] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3RNL
[23:41:21] <FromDiscord> <exelotl> There are some subtleties: If the type is large (bigger than 3 ints, I believe) then Nim will still secretly pass it by reference to procedures. The semantics don't change though (since you can't mutate arguments unless they're `var` params) and you can use the {.bycopy.} and {.byref.} pragmas to control this optimisation. I guess it's important to note that passing by reference is not the same as 'ref' types.
[23:44:59] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[23:49:50] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[23:57:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:57:45] <FromDiscord> <Waldecir Santos> Perfect Thank you @exelotl I'll play around with it
