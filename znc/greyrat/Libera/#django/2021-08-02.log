[00:01:57] *** Joins: audio (~audio@2603-8081-1800-00ad-7807-e3d7-eb29-1997.res6.spectrum.com)
[00:08:00] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e)
[00:17:14] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e) (Remote host closed the connection)
[00:18:53] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e)
[00:23:07] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[00:23:24] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[00:32:56] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[00:45:56] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 272 seconds)
[01:01:01] <zamba> what is the best field for representing true/false?
[01:01:08] <zamba> .BooleanField()?
[01:02:18] <twomoon> where is blitzkraft ?
[01:11:22] *** Quits: audio (~audio@2603-8081-1800-00ad-7807-e3d7-eb29-1997.res6.spectrum.com) (Remote host closed the connection)
[01:11:40] *** Joins: audio (~audio@2603-8081-1800-00ad-6065-0196-b737-6970.res6.spectrum.com)
[02:36:47] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[02:45:23] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[02:47:22] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[03:09:32] <schinckel> zamba: Yeah, BooleanField is usually best for true/false. Unless you need to know "when something became true", in which case you can use a DateTimeField, and a boolean property/expression that is based on that (not) being null.
[03:10:05] <schinckel> (For instance, we have a "deactivated_at" field that we use for our Tenant model that stores that information)
[03:17:28] <zamba> schinckel: but i'm having issues with the default option to the booleanfield
[03:17:34] <zamba> can it have default=True?
[03:25:45] <schinckel> Sure. What sort of problem are you having?
[03:32:06] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 276 seconds)
[04:21:44] *** Joins: twinsignal (~twinsigna@68.235.43.20)
[04:23:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:24:31] *** Quits: twinsignal (~twinsigna@68.235.43.20) (Client Quit)
[04:27:10] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:36:59] *** Quits: jef79m (~jef79m@124-149-93-236.dyn.iinet.net.au) (Ping timeout: 256 seconds)
[04:41:20] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Read error: Connection reset by peer)
[04:41:59] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:44:17] *** Joins: Thanatos (~Thanatos@197.210.65.82)
[04:44:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[05:08:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:22:05] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:b9af:fce0:8189:2d74)
[05:38:28] *** Quits: Thanatos (~Thanatos@197.210.65.82) (Ping timeout: 272 seconds)
[05:43:11] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:47:46] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 240 seconds)
[06:11:46] *** Joins: dre (~dre@2001:8003:c932:c301:9993:49c7:7392:9609)
[06:19:19] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[06:22:14] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[07:13:19] *** Joins: djapo (~archangel@user/djapo)
[07:18:35] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[07:33:11] *** Joins: jess (~jess@libera/staff/jess)
[08:00:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:20:43] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[09:28:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[09:35:53] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:48:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Quit: Leaving...)
[10:02:00] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:02:01] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:02:26] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:08:11] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[10:14:40] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[10:28:03] *** Joins: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr)
[10:28:07] *** Parts: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr) ()
[10:40:17] *** Quits: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f) (Remote host closed the connection)
[10:40:19] *** Joins: kostkon_ (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f)
[10:41:36] *** kostkon_ is now known as kostkon
[10:52:12] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[11:02:34] <lalilulelo> how do I add a "following" relationship in Django? I've created a 'Profile' model with a OneToOneField to the Django User; now I'm wondering if (and I ask you: how) I should use a 'following' ManyToManyField in the Profile, or if I should have a separate Following model with foreign keys to two different users (if so, how to ensure the fk's ARE different?)
[11:04:15] *** Joins: CapnKernel (foobar@gromit.mixdown.ca)
[11:08:07] <CapnKernel> Hello, I'm using Django 3.2 under Ubuntu.  For my site I want three levels of access, one for unauthenticated users (a landing page), one for non-staff authenticated users (member portal) and one for staff (admin functions).  I'm using django stronghold so that by default, views require authentication, except for the landing page.  Is there a way to mark all views in a particular app as by-default needing an authorised user and is_staff?
[11:15:12] <CapnKernel> Or another way of being secure-by-default, but with three levels of access?
[11:30:40] *** Quits: audio (~audio@2603-8081-1800-00ad-6065-0196-b737-6970.res6.spectrum.com) (Ping timeout: 272 seconds)
[11:35:24] <dodo> CapnKernel: probably a middleware
[11:41:41] <CapnKernel> I'm already using django-stronghold, which works via middleware
[11:42:23] <CapnKernel> I did find this: https://stackoverflow.com/questions/23941518/django-permissions-checks-at-urlconf-level/23941831#23941831
[11:42:35] <CapnKernel> I haven't tried it yet though
[11:45:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:46:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:46:29] *** ChanServ sets mode: +v EvilDMP
[11:48:09] <dodo> that's at the urlconf/view level though, not what you asked
[11:48:25] <dodo> and nothing prevents you from using multiple middlewares
[11:52:24] <tm007> heyho
[11:53:12] <CapnKernel> dodo: thanks
[11:57:36] *** Quits: CapnKernel (foobar@gromit.mixdown.ca) (Quit: back soon)
[12:00:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[12:08:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:08:50] *** ChanServ sets mode: +v EvilDMP
[12:13:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:16:43] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[12:25:46] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 272 seconds)
[12:28:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:28:19] *** ChanServ sets mode: +v EvilDMP
[12:37:05] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 265 seconds)
[12:37:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:44:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:45:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:47:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:55:42] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[13:05:42] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[13:13:49] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[13:15:39] *** Joins: Judge (~judge@2a02:908:741:3ee0:91b8:7e53:405b:af04)
[13:16:10] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 240 seconds)
[13:17:05] <Judge> Hi everyone. I set up a model with setting a field as primary field. Now, I realise that was stupid and that I want to migrate to Django's default (creating an 'id' BigAutoField).
[13:17:47] <Judge> How can I achieve that? When I remove the 'primary_key' parameter from the former primary field, it expects a default for the existing records. How can I provide that best?
[13:18:34] <Judge> I thought of a function call as default value, which queries the model for existing PK's and return an incremented integer by 1
[13:18:36] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[13:18:46] <GinFuyou> if you don't mind losing db, it's easier to drop it
[13:18:49] <Judge> Is that valid or is there a better way?
[13:18:55] <GinFuyou> and restart migrations
[13:18:55] <Judge> No, I need the content.
[13:19:34] <GinFuyou> no function like that can't work I believe
[13:20:13] <GinFuyou> you could add a nullable field and then fill it with a data migration
[13:20:24] <GinFuyou> and then remove null=True
[13:22:08] <Judge> I do not understand how that works
[13:23:25] <Judge> How can a PK be null?
[13:23:28] *** Quits: dang`r`us (~eismann@pg.afoo.at) (Quit: WeeChat 3.2)
[13:24:26] <Judge> As I expected:
[13:24:37] <Judge> ERRORS:
[13:24:37] <Judge> cardmanager.RfidCard.id: (fields.E007) Primary keys must not have null=True.
[13:24:37] <Judge>         HINT: Set null=False on the field, or remove primary_key=True argument.
[13:28:23] <Kipe_> first create the field without primary key and with a default value, then write a migration (RunPython for example9 to fill the values, then create another migration to remove the default value and and set as primary key
[13:33:28] <Judge> Aaaah - and during that , the old field stays PK, I get it.
[13:34:51] <Judge> How do I write "a migration"? Is that just an arbitrary Python script, or is that some Django - technique just like the other migrations? Could you point me to the docs if so please?
[13:35:57] <Judge> Hmm ... Django says that "AutoFields must set primary_key=True"
[13:36:29] <Judge> So, do I set it as standard IntegerField first and later just have it be changed to AutoField?
[13:36:35] <Kipe_> yeah, most likely
[13:37:06] <Kipe_> here's the docs for writing the migrations for filling the initial data: https://docs.djangoproject.com/en/3.2/howto/writing-migrations/
[13:37:22] <Judge> Great! Thank you a lot!
[13:39:24] <Kipe_> although it might be worth just testing if you can just remove the custom field, it might create the new primary key automatically?
[13:41:38] <Judge> I can't completely remove the custom field, since that already contains data I need to preserve. Just removing the 'primary_key' from it, Django asks me to provide a default to the "added, non-nullable field 'id'"
[13:41:47] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:b9af:fce0:8189:2d74) (Quit: Leaving)
[13:42:40] <Kipe_> aah, ok
[14:15:33] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:27:56] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[14:42:25] *** Joins: dez (uid92154@user/dez)
[14:49:15] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:55:45] <Judge> Kipe_: It worked just as you suggested. Many thanks!!
[14:56:35] <Kipe_> Judge: great to hear, I've done similar operation couple of times, as I've changed to use UUIDs as PK later on in a project
[15:06:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:20:40] *** Quits: Judge (~judge@2a02:908:741:3ee0:91b8:7e53:405b:af04) ()
[15:24:21] *** Joins: hemebond (~james@240b:12:12e2:f00:5604:a6ff:fe2c:50df)
[15:31:00] *** Joins: thiras (~thiras@user/thiras)
[15:48:26] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 272 seconds)
[15:54:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[16:21:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:21:28] *** Quits: dre (~dre@2001:8003:c932:c301:9993:49c7:7392:9609) (Remote host closed the connection)
[16:26:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:35:04] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[16:35:50] *** Joins: serghei (~egrep@user/serghei)
[17:01:37] *** Joins: dhrv (~dhrv@user/dhrv)
[17:01:51] <dhrv> Hello
[17:03:31] <dhrv> I am to write a basic Django view to validate basic input data, that should respond GET and POST method, all other methods should be rejected, also, it has 4 params, which need to be passed but are not required parameters, can anyone help me with a code structure of this view?
[17:08:37] <GinFuyou> dhrv, what is the problem with view like that?
[17:08:50] <GinFuyou> Are you making a function-based or class-based view?
[17:11:14] <dhrv> function based
[17:11:27] <dhrv> I am beginner to it
[17:12:49] <GinFuyou> then you need to add an if statements for corresponding request methods and arguments with defaults for function definition
[17:21:15] <kezabelle> You can also use the require_http_methods decorator to limit to HEAD/GET/POST
[17:21:32] <dhrv> def test_view(request):     if request.method == 'GET':         return HttpResponse('This is a get request.');     elif request.method == 'POST':         // post request     else:                // else
[17:21:52] <dhrv> https://dpaste.org/C3yF
[17:21:59] <dhrv> ^ this is what I wrote
[17:23:07] <GinFuyou> good enough, just have to add args to the function if I got correctly what you want
[17:23:26] <dhrv> now, in POST method, I would be receiving 4 optional values of first_name, last_name, phone and email, for which I have write validations ... separately, these are optional parameters
[17:23:27] <kezabelle> else: return HttpResponseNotAllowed(['GET', 'POST']) or something IIRC
[17:23:31] <GinFuyou> there was something for method not allowed for else case
[17:24:03] <kezabelle> but you could just as easily do @require_http_methods(['GET', 'POST']) and not have the else at all.
[17:24:36] <dhrv> yes, kezabelle, I used it
[17:26:31] <dhrv> how to access those POST data in the this view?
[17:26:53] <GinFuyou> via form (django Form class)
[17:27:23] <dhrv> any references?
[17:27:30] <dhrv> or simple example to my context?
[17:27:55] <GinFuyou> https://docs.djangoproject.com/en/3.2/topics/forms/
[17:28:46] <dhrv> well in my case, i am not asked to use form
[17:28:56] <dhrv> just simple tests using Postman
[17:29:08] <GinFuyou> doesn't matter
[17:29:13] <dhrv> like, I will send a POST request to server
[17:29:22] <GinFuyou> you can just skip parts you don't need
[17:30:19] <GinFuyou> e.g. straight to https://docs.djangoproject.com/en/3.2/topics/forms/#building-a-form-in-django
[17:30:34] <GinFuyou> it has view snippet too
[17:32:43] <dhrv> yes, well I have a POST request like { first_name: "Name", last_name: "Name", phone: "7878", email: "i@u.o" }
[17:33:03] <dhrv> so, in the view using request object I can use it like
[17:33:44] <dhrv> if ("first_name" in request.POST):
[17:33:46] <kezabelle> depends on what content type you're sending. form data, json?
[17:33:55] <dhrv> Yes, it is json
[17:37:42] <kezabelle> then you'll need to faff with reading request.body IIRC
[17:39:43] <dhrv> faff?
[17:40:44] <kezabelle> sorry, fiddle around with, manually do the work (as opposed to just reading request.POST), etc.
[17:41:21] <dhrv> so, it would be at request.body?
[17:41:28] <GinFuyou> can't you just json.loads(request.POST) or something?
[17:42:22] <GinFuyou> ah,  json.loads(self.request.body.decode('utf-8'))
[17:42:38] <GinFuyou> - "self" for fbv
[17:44:34] <kezabelle> that would be the 'faffing' :) (and handling the exceptions, etc)
[17:45:10] <dhrv> this json.loads will return me a dict?
[17:45:39] <GinFuyou> I guess DRF handles it in middleware? It was from my old project that didn't use any side libs for api
[17:47:07] <kezabelle> I think technically DRF handles it inside the views themselves, based on the parsers/renderers and whatever else. I happily forget, but I don't _recall_ there being a required middleware for it
[17:48:32] <GinFuyou> I just don't remembering need to do something with it. Also I'm pretty sure it does modify request attributes from plain django
[17:52:33] <kezabelle> yup, request.data etc
[17:54:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 258 seconds)
[18:08:23] <dhrv> thanks a lot, I got it work
[18:08:32] <dhrv> working **
[18:11:44] *** Joins: y3k (~Thunderbi@user/y3k)
[18:21:58] *** Quits: y3k (~Thunderbi@user/y3k) (Quit: y3k)
[18:23:49] *** Joins: y3k (~Thunderbi@user/y3k)
[18:33:05] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 252 seconds)
[18:47:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:50:53] *** Quits: dhrv (~dhrv@user/dhrv) (Remote host closed the connection)
[19:01:44] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:01:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:01:47] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[19:02:17] *** Joins: audio (~audio@2603-8081-1800-00ad-fc9e-4a92-a17f-6cc3.res6.spectrum.com)
[19:07:36] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[19:11:08] *** Joins: primoz (~primoz@93-103-221-33.static.t-2.net)
[19:13:49] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:20:47] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:22:27] *** Quits: primoz (~primoz@93-103-221-33.static.t-2.net) (Quit: Leaving)
[19:36:33] *** Joins: bandit_za (~bandit@2c0f:ed28:b016:e80::1ed)
[19:36:42] <bandit_za> ahoy, djangonaughts
[19:37:35] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Quit: Leaving...)
[19:40:27] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:51:00] *** Quits: audio (~audio@2603-8081-1800-00ad-fc9e-4a92-a17f-6cc3.res6.spectrum.com) (Ping timeout: 272 seconds)
[20:02:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:37:01] *** Quits: blip2 (~blip2@blip2.net) (Quit: Bye)
[20:37:39] *** Joins: blip2 (~blip2@blip2.net)
[20:37:57] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[20:42:21] *** Joins: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com)
[20:47:22] *** Quits: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com) (Ping timeout: 272 seconds)
[20:52:04] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[21:12:57] *** Joins: Steve-Dusty (~Steve-Dus@user/steve-dusty)
[21:13:04] <Steve-Dusty> why frontend frameworks suck
[21:13:06] <Steve-Dusty> https://www.youtube.com/watch?v=k7n2xnOiWI8
[21:21:07] <Steve-Dusty> django's founder explains why frameworks suck
[21:29:07] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[21:30:13] *** Joins: audio (~audio@2603-8081-1800-00ad-df68-b045-38b9-154d.res6.spectrum.com)
[21:33:58] *** Joins: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com)
[21:34:13] *** Joins: y04nn (~y04nn@91.193.4.154)
[21:39:24] *** Quits: y3k (~Thunderbi@user/y3k) (Quit: y3k)
[21:47:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:48:57] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[21:49:25] *** Joins: rje (~rje@50.54.137.153)
[21:49:42] *** Joins: djapo (~archangel@user/djapo)
[21:51:25] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[22:11:32] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:21:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:21:08] *** ChanServ sets mode: +v EvilDMP
[22:22:59] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[22:23:40] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[22:43:11] *** Quits: jess (~jess@libera/staff/jess) ()
[22:47:57] *** Quits: bandit_za (~bandit@2c0f:ed28:b016:e80::1ed) (Quit: Client closed)
[23:02:21] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[23:04:19] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[23:05:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[23:19:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[23:31:17] *** Joins: Thanatos (~Thanatos@197.210.64.153)
[23:38:22] *** Quits: y04nn (~y04nn@91.193.4.154) (Ping timeout: 272 seconds)
[23:55:10] *** Quits: Thanatos (~Thanatos@197.210.64.153) (Read error: Connection reset by peer)
