[00:16:17] *** Joins: notzmv (~zmv@user/notzmv)
[00:37:31] <marler8997_> andrewrk curious what your thoughts are on how to improve the situation from #9989
[00:38:12] <marler8997_> and to clarity, that change would never remove the message that you showed as an example
[00:38:23] <marler8997_> since it was exit code 255, if that was the exit code then it would still be printed
[00:38:25] <andrewrk> sounds like I misunderstood the change
[00:38:58] <andrewrk> but I'm saying even if the custom error message is printed, it should still print "the following command failed ..." with the command that emitted the error message
[00:39:25] <marler8997_> but you don't do that when "prominent compiler errors" is enabled right?
[00:39:56] <marler8997_> so there are some cases where it's better not to pile on that information yes?
[00:39:59] <andrewrk> prominent compile errors is opt-in so you're specifically saying that you're ok with seeing only the compile errors
[00:40:33] <marler8997_> sure, I was just trying to clarify there are *some* cases, so the question then becomes what are those cases
[00:41:04] <marler8997_> this feature allows the builds themselves to give input on what may or may not be important
[00:41:46] <marler8997_> this means that if a build script feels it has found the source of the problem and has already reported it, then it can return a specific exit code to indicate it has done that
[00:42:05] <marler8997_> for example, if the user provided an invalid build option, no need to pile on extra errors after that
[00:43:00] <andrewrk> I disagree - in such case you *especially* want to see the command that caused the issue
[00:43:16] <marler8997_> disagree with what part?
[00:43:39] <andrewrk> in your patch you give the example of a bad option passed on the command line. if "got a bad build option!" is printed, then the user needs to see the command that was supplied to cause that error to be emitted
[00:43:42] <marler8997_> I was just stating what the feature was, what do you disagree with, my description?
[00:43:57] <andrewrk> I disagree with "no need to pile on extra errors after that"
[00:44:17] <marler8997_> oh gotcha
[00:44:27] <marler8997_> but we don't print the command that failed
[00:44:36] <marler8997_> we just say the build exited with a code
[00:45:01] <andrewrk> um no that's incorrect, we print "the following command exited with xyz:\n<full command line of what failed>"
[00:45:26] <marler8997_> ah that's true
[00:45:40] <marler8997_> one thought I had was that if the user didn't know what command failed, they could run it again with a -v
[00:45:54] <marler8997_> but that has cons to it as well
[00:46:07] <andrewrk> I don't think you should have to rummage around to find out how to learn what went wrong
[00:46:17] <marler8997_> I completely agree
[00:46:25] <marler8997_> but it's more of an art than a science here
[00:46:49] <marler8997_> for example, we could choose to print all the environment variables as well, but that adds alot of noise for questionable benefit
[00:47:16] <andrewrk> my position is that, at the very least, a full trace of command lines of sub-processes should be printed on failure, with the exception of opt-in flags such as --prominent-compile-errors
[00:47:19] <ifreund> Iâ€™m also strongly in favor of always printing the full command that failed by default
[00:47:26] <marler8997_> I think a feature that allow the build to give input on what may or may not be important can be helpfule
[00:47:57] <andrewrk> I'm going to revert this. let's discuss in a proposal
[00:48:04] <marler8997_> so why print at the command-level instead of the function level?
[00:48:24] <andrewrk> well we do print at function level for debug builds of the compiler
[00:48:34] <andrewrk> and in cases of compiler bugs it's extremely useful
[00:49:24] <andrewrk> if the goal is just to make the compile error experience better, I think the real end-game is editor integration with zig build
[00:49:34] <andrewrk> ideally what you want is a list of errors in your editor that jump you to the location
[00:49:40] <andrewrk> and squiggly lines
[00:50:06] <marler8997_> so in that case you could print alot of information and rely on some sort of filtering, so in that case you would support printing all environment variable for example?
[00:50:31] <andrewrk> printing all environment variables is a potential security issue
[00:50:38] <andrewrk> I don't think that is wise
[00:51:26] <marler8997_> ok but is that what you are wanting, as much info as possible?
[00:52:21] <marler8997_> my thoughts on that are we could make the default experience be meant for the command-line users, and have IDE enable extra information with some sort of flag
[00:53:28] <ifreund> what extra information? I already have nice jump to error location support in my editor
[00:54:18] <andrewrk> marler8997_, you're asking what I am wanting - what I want is for the zig build system be as simple as possible and yet still handle gracefully the most complex projects. I'm already uncomfortable with the existence of --prominent-compile-errors and I want to kill it someday
[00:56:08] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:56:38] <marler8997_> I think identifying what is noise in a build is not simple, so in that case it sounds like you're willing to just print everything and let the user (and IDE's) decide what's noise rather than adding that complexity into the build system itself?
[00:59:12] <andrewrk> yes
[00:59:34] <marler8997_> ok fair enough, then in that case I don't think we should create a proposal for this since it doesn't align with your vision
[01:00:29] <marler8997_> andrewrk these discussion really help me alot btw, thank for taking the time to explain
[01:00:39] <andrewrk> no problem, I'm sorry I don't take more time for it
[01:01:29] *** Joins: todo75 (~todo75@user/todo75)
[01:01:49] <marler8997_> nothing to be sorry for, keep making Zig awesome
[01:01:50] <andrewrk> sometimes the reasons a bunch of PRs pile up is that they each deserve a discussion
[01:02:23] <marler8997_> yeah, I didn't think that PR should have been merged, I wanted a discussion first so I was quite surprised it was merged all of a  sudden
[01:02:50] <marler8997_> I would have left is a draft but I know you don't look at drafts :)
[01:03:00] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 240 seconds)
[01:03:02] <andrewrk> haha you're not wrong
[01:03:22] <marler8997_> gotta draw the line somewhere, you can't do everything
[01:03:24] *** Quits: dch (sid1310@couchdb/committer/dch) (Ping timeout: 240 seconds)
[01:03:32] <andrewrk> Vexu is a good man who wants to help everyone get their patches landed, and I'm thankful that he's taken such an initiative 
[01:03:50] *** Joins: bw (sid2730@user/betawaffle)
[01:04:01] <andrewrk> as a natural consequence, I will have to make more reverts than I have in the past, and that is OK
[01:04:41] <andrewrk> most of the time I just think, oh, good, if Vexu thinks that PR should be merged then I agree
[01:05:12] <marler8997_> his situation is extremely difficult
[01:05:50] *** Joins: dch (sid1310@couchdb/committer/dch)
[01:10:46] *** Quits: todo75 (~todo75@user/todo75) (Quit: todo75)
[01:11:26] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a)
[01:11:53] *** Joins: HyLian_ (~meron@14.red-79-145-100.dynamicip.rima-tde.net)
[01:12:49] *** Quits: HyLian (~meron@147.red-79-145-106.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[01:13:39] <marler8997_> you looking forward to go to italy btw? pretty long flight :)
[01:14:08] *** Joins: daved (~daved@162.67.197.35.bc.googleusercontent.com)
[01:16:57] <daved> Is anyone able to share a current example of a tcp echo server/client (preferably using a socket file)?
[01:17:29] <daved> Or maybe, please, direct me to the correct lib(s)?
[01:18:09] <daved> I'm completely new to zig and am just playing/experimenting.
[01:21:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: Textual IRC Client: www.textualapp.com)
[01:26:00] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[01:26:01] <andrewrk> marler8997_, yes I am! I haven't been outside the states in quite a few years 
[01:34:55] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[01:39:57] <andrewrk> daved, I don't have an example handy but you might check if there are any unit tests in std.net (lib/std/net.zig)
[01:44:34] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[01:55:57] *** Joins: freshcoffee1 (~fresh@user/freshcoffee)
[01:57:24] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[01:58:43] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Ping timeout: 256 seconds)
[02:03:07] *** Joins: thaumavorio (~thaumavor@thaumavor.io)
[02:04:39] *** Quits: jemius (~imperator@200116b82de5ec001b733599ae75569c.dip.versatel-1u1.de) (Quit: Leaving)
[02:17:18] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 272 seconds)
[02:20:10] *** Joins: sebonirc (~sebonirc@8.9.88.219)
[02:22:42] *** Quits: tsmanner (~tsmanner@ool-182d23f9.dyn.optonline.net) (Remote host closed the connection)
[02:25:07] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[02:28:12] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[02:33:52] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[02:35:55] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[02:40:43] *** Quits: NickH (~hastings@aj158235.dynamic.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[02:43:22] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Ping timeout: 260 seconds)
[02:46:09] *** Joins: NickH (~hastings@y145235.dynamic.ppp.asahi-net.or.jp)
[02:50:32] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[03:10:39] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:21:48] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[03:22:13] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:f117:a7a8:6345:d55c) (Remote host closed the connection)
[03:23:05] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:f117:a7a8:6345:d55c)
[03:26:36] *** Quits: frmdstryr (~jrm@172.58.203.78) (Ping timeout: 240 seconds)
[03:30:49] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[03:30:51] *** Quits: Tekk_ (~tekk@cpe-76-182-45-53.nc.res.rr.com) (Remote host closed the connection)
[03:37:46] *** Joins: waleee (~waleee@h-98-128-229-110.na.cust.bahnhof.se)
[03:38:02] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[03:38:56] *** Joins: frmdstryr (~jrm@172.58.206.172)
[03:45:33] *** Quits: waleee (~waleee@h-98-128-229-110.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[04:05:33] *** Quits: cabal704 (~cabal704@user/cabal704) (Quit: WeeChat 3.4)
[04:15:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a) (Ping timeout: 252 seconds)
[04:33:48] *** Quits: Nulo (~Nulo@user/nulo) (Ping timeout: 240 seconds)
[04:40:11] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[04:42:01] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[04:42:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:25:53] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[05:28:57] <daved> andrewrk: Thanks!
[05:35:10] *** Joins: Tekk (~tekk@cpe-76-182-45-53.nc.res.rr.com)
[05:46:24] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Quit: Ping timeout (120 seconds))
[05:46:45] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[05:49:26] *** Joins: freshcoffee2 (~fresh@user/freshcoffee)
[05:51:22] *** Quits: freshcoffee1 (~fresh@user/freshcoffee) (Ping timeout: 272 seconds)
[05:51:37] *** Quits: sebonirc (~sebonirc@8.9.88.219) (Ping timeout: 256 seconds)
[06:02:33] *** Joins: sebonirc (~sebonirc@8.9.88.219)
[06:05:30] *** Joins: shirro (~shirro@user/shirro)
[06:13:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:18:20] *** Quits: Myth (~pi@173.233.125.203) (Quit: WeeChat 3.0)
[06:31:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:31:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:05:21] *** Joins: freshcoffee3 (~fresh@user/freshcoffee)
[07:07:48] *** Quits: freshcoffee2 (~fresh@user/freshcoffee) (Ping timeout: 240 seconds)
[07:23:12] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Ping timeout: 272 seconds)
[07:24:02] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[07:27:00] *** Quits: frmdstryr (~jrm@172.58.206.172) (Ping timeout: 240 seconds)
[07:27:00] *** Quits: sebonirc (~sebonirc@8.9.88.219) (Ping timeout: 272 seconds)
[07:31:04] *** Quits: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[07:35:05] *** Quits: shirro (~shirro@user/shirro) (Quit: Leaving)
[08:02:37] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[08:10:51] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:30:34] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[08:30:48] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[08:39:55] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[08:43:29] *** Joins: meekaale (~meekaale@node.town)
[08:55:02] <motiejus> noob question: is there a way to attach context to an error (e.g. "error message")?
[08:55:38] <plumeus> Should probably be done by documenting the error?
[08:55:56] <plumeus> Or you could do `return error.@"Some arbitrary text";`
[08:55:57] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[08:56:10] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[08:56:12] <plumeus> I think there was an open issue/proposal on this
[08:57:15] <motiejus> "Some arbitrary text" won't really work, as I want the callers to catch them. The guts of the library would return `error.InvalidVersion`, and then whoever uses the library could catch it and display a friendly message to the user ("supported versions: X, got: Y").
[08:58:04] <plumeus> Can't that be achieved with error handling?
[08:59:14] <motiejus> well, the only thing the caller knows is `error.InvalidVersion` (e.g. read an incompatible file), but there is no way to attach more information where the error was thrown
[08:59:42] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[08:59:51] <meekaale> I believe this is the relevant issue: https://github.com/ziglang/zig/issues/2647
[09:00:10] <plumeus> ah yes, the one I was looking for
[09:00:14] <motiejus> thanks, exactly. Will keep an eye on it
[09:00:21] <andrewrk> it's unlikely to be accepted fwiw
[09:00:59] <motiejus> we want to hear more :)
[09:02:04] <motiejus> you may hear crowd gathering :P
[09:06:22] <andrewrk> never mind what I said just now; I took a deeper look at CurtisFenner's last iteration on the proposal and I think it's worth considering
[09:10:45] <meekaale> right now there seem to be two main patterns: (1) writing the context into a pointer given by the caller, as in "fn foo(..., errorContext: *C) E!X"; or (2) using your own result type instead of Zig errors, as in "fn foo(...) C(X)"
[09:13:03] <plumeus> I love it when old proposals get the spotlight again
[09:14:59] <meekaale> [hi btw, I haven't been on IRC since like 2006, just got into Zig recently and I'm so delighted with it]
[09:16:07] <ifreund> welcome back to IRC!
[09:16:42] <plumeus> Zig is the only IRC channel I've joined
[09:17:05] <meekaale> I'm working on a little Lisp implementation in Zig with the intention of running in WebAssembly.  I wrote a first prototype in C because I'm more familiar with that, but now the Zig port is almost equivalent and Zig features are making the code nicer all over the place!
[09:18:26] <meekaale> especially nice is using compile-time type introspection to register builtin Zig functions as Lisp functions, which I was doing with obscure macros in C
[09:19:19] <meekaale> the test blocks encouraged me to use test-driven development for the whole thing so now I have a test suite almost by accident
[09:24:06] <meekaale> one thing I've been wondering is if it's possible to reference test blocks as functions, like say I want to have a button in my program that runs the program's own tests
[09:25:00] <meekaale> or just write my own test runner in some way, e.g. I want to run tests in the browser environment
[09:27:49] <plumeus> Make sure to spam `std.debug.assert` too.
[09:27:54] <andrewrk> welcome meekaale :)
[09:29:20] <andrewrk> here's the issue for a custom test runner: https://github.com/ziglang/zig/issues/6621
[09:29:22] <andrewrk> it'll happen eventually
[09:54:37] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:f117:a7a8:6345:d55c) (Ping timeout: 240 seconds)
[10:19:10] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[10:19:24] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[10:33:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:47:06] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:48:39] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9plitnrvijmcue874uqp.ipv6.telus.net)
[10:50:56] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:1c67:d9a9:1377:a510)
[11:04:36] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:07:15] *** Quits: cols (~cols@artemis.spensley.net) (Quit: Leaving)
[11:19:04] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[11:19:18] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[11:39:30] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:41:24] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[11:42:27] *** Joins: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl)
[11:45:13] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:46:49] *** Joins: masoudd (~masoudd@user/masoudd)
[12:07:34] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[12:20:12] *** Joins: cols (~cols@artemis.spensley.net)
[12:27:29] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[12:27:43] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[12:29:38] *** Joins: jemius (~imperator@200116b82d874f00d0910dd2486afb5e.dip.versatel-1u1.de)
[12:35:44] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:37:21] *** Quits: NickH (~hastings@y145235.dynamic.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[12:44:14] *** Joins: NickH (~hastings@o134092.dynamic.ppp.asahi-net.or.jp)
[12:57:33] <meekaale> oh... I'm realizing I probably ought to change my Lisp interpreter to store its values in a "data-oriented design" way... I've been using a traditional kind of garbage collected heap full of structs and pointers, but I think a data-oriented style could be really good
[12:59:30] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[13:00:55] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:03:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:11:56] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Quit: Ping timeout (120 seconds))
[13:12:11] *** Joins: poqomchi (~poqomchi@user/poqomchi)
[13:43:25] *** Quits: motiejus (~motiejus@2001:470:69fc:105::38fb) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: bfredl (~bfredl@2001:470:69fc:105::183) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: moats (~oats@user/oats) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: alethkit (~alethkitm@2001:470:69fc:105::1:6fa4) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: tleydxdy[m] (~tleydxdy@2001:470:69fc:105::16a3) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Levy[m] (~tauoverpi@2001:470:69fc:105::1:71a5) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: midi[m] (~justmidim@2001:470:69fc:105::c739) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: TianruiWei[m] (~tianruiwe@2001:470:69fc:105::1:601a) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: mikolajw (~mikolajtc@2001:470:69fc:105::3b02) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: josias (~mottmatri@2001:470:69fc:105::b6c) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Aren (~ar333matr@2001:470:69fc:105::39b2) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: gpanders (~gpanders@user/gpanders) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: coolshaurya (~coolshaur@2001:470:69fc:105::fac0) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: _javyre (~javyre@2001:470:69fc:105::2162) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: barath (~barath@2001:470:69fc:105::21a) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: polykernel (~polykerne@user/polykernel) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: AtomToast (~atomtoast@2001:470:69fc:105::8a5) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: siraben (~siraben@user/siraben) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: VictorMalov[m] (~malvikusm@2001:470:69fc:105::1:bb95) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: plumeus (~plumeus@user/plumeus) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: acd8 (~acd84c8cc@2001:470:69fc:105::916) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: Andy[m] (~anparrama@2001:470:69fc:105::1:6826) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: devast8a (~devast8a@2001:470:69fc:105::3f46) (Quit: Bridge terminating on SIGTERM)
[13:46:19] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[13:49:03] *** Joins: polykernel (~polykerne@user/polykernel)
[13:49:03] *** Joins: moats (~oats@user/oats)
[13:49:03] *** Joins: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011)
[13:49:04] *** Joins: bfredl (~bfredl@2001:470:69fc:105::183)
[13:49:04] *** Joins: siraben (~siraben@user/siraben)
[13:49:04] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[13:49:04] *** Joins: mikolajw (~mikolajtc@2001:470:69fc:105::3b02)
[13:49:04] *** Joins: tleydxdy[m] (~tleydxdy@2001:470:69fc:105::16a3)
[13:49:04] *** Joins: alethkit1 (~alethkitm@2001:470:69fc:105::1:6fa4)
[13:49:15] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[13:49:15] *** Joins: midi[m] (~justmidim@2001:470:69fc:105::c739)
[13:49:15] *** Joins: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c)
[13:49:15] *** Joins: josias (~mottmatri@2001:470:69fc:105::b6c)
[13:49:15] *** Joins: Aren (~ar333matr@2001:470:69fc:105::39b2)
[13:49:16] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[13:49:16] *** Joins: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521)
[13:49:16] *** Joins: Andy[m] (~anparrama@2001:470:69fc:105::1:6826)
[13:49:16] *** Joins: HenrikHenriksson (~hxctrl-cl@2001:470:69fc:105::e37b)
[13:49:17] *** Joins: VictorMalov[m] (~malvikusm@2001:470:69fc:105::1:bb95)
[13:49:17] *** Joins: Levy[m] (~tauoverpi@2001:470:69fc:105::1:71a5)
[13:49:17] *** Joins: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15)
[13:49:17] *** Joins: AtomToast (~atomtoast@2001:470:69fc:105::8a5)
[13:49:17] *** Joins: barath (~barath@2001:470:69fc:105::21a)
[13:49:18] *** Joins: acd8 (~acd84c8cc@2001:470:69fc:105::916)
[13:49:18] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[13:49:18] *** Joins: plumeus (~plumeus@user/plumeus)
[13:49:18] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[13:49:18] *** Joins: _javyre (~javyre@2001:470:69fc:105::2162)
[13:49:18] *** Joins: gpanders (~gpanders@user/gpanders)
[13:49:18] *** Joins: TianruiWei[m] (~tianruiwe@2001:470:69fc:105::1:601a)
[13:49:18] *** Joins: coolshaurya (~coolshaur@2001:470:69fc:105::fac0)
[13:51:44] *** Quits: poqomchi (~poqomchi@user/poqomchi) (Read error: Connection reset by peer)
[14:03:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[14:45:06] *** rwb is now known as rb
[14:50:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[15:09:00] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[15:14:39] *** Joins: cabal704 (~cabal704@user/cabal704)
[15:18:12] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Ping timeout: 240 seconds)
[15:19:24] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[15:21:48] *** Quits: cabal704 (~cabal704@user/cabal704) (Ping timeout: 250 seconds)
[15:34:48] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:48:08] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9plitnrvijmcue874uqp.ipv6.telus.net) ()
[16:05:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[16:06:00] *** Quits: jemius (~imperator@200116b82d874f00d0910dd2486afb5e.dip.versatel-1u1.de) (Quit: Leaving)
[16:17:29] *** Joins: notzmv (~zmv@user/notzmv)
[16:22:23] *** Joins: laserbeam (~laserbeam@89.34.73.18)
[16:54:05] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:06:35] *** Joins: sheb (~sheb@31.223.228.71)
[17:07:18] *** Quits: sheb (~sheb@31.223.228.71) (Remote host closed the connection)
[17:17:25] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:17:35] *** Quits: Pistahh (~pistahh@user/pistahh) (Ping timeout: 256 seconds)
[17:34:04] *** Joins: Pistahh (~pistahh@user/pistahh)
[17:36:27] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:41:16] *** Joins: arkurious (~arkurious@user/arkurious)
[17:42:27] *** Quits: meekaale (~meekaale@node.town) (Remote host closed the connection)
[18:09:14] *** Quits: laserbeam (~laserbeam@89.34.73.18) (Quit: Client closed)
[18:14:40] *** Joins: cabal704 (~cabal704@user/cabal704)
[18:25:47] *** Joins: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net)
[18:32:01] *** Joins: phaleth (~user@user/phaleth)
[18:33:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:34:52] *** Joins: tsmanner (~tsmanner@ool-182d23f9.dyn.optonline.net)
[18:39:37] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: WeeChat 3.4)
[18:51:37] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:00:25] *** Quits: lqd (uid15826@id-15826.helmsley.irccloud.com) (Read error: No route to host)
[19:00:34] *** Joins: lqd (uid15826@id-15826.helmsley.irccloud.com)
[19:00:50] *** Quits: tributarian (sid381145@id-381145.helmsley.irccloud.com) (Read error: Connection reset by peer)
[19:00:59] *** Joins: tributarian (sid381145@id-381145.helmsley.irccloud.com)
[19:01:00] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[19:01:56] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[19:21:58] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[19:34:43] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a)
[19:59:29] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Quit: Leaving)
[19:59:44] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:00:36] *** Quits: tributarian (sid381145@id-381145.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[20:01:51] *** Joins: tributarian (sid381145@id-381145.helmsley.irccloud.com)
[20:03:46] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:19:27] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[20:26:12] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[20:27:40] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:28:09] *** Quits: ltriant (~ltriant@118.102.122.246) (Read error: Connection reset by peer)
[20:28:25] *** Joins: ltriant (~ltriant@118.102.122.246)
[20:33:39] *** Quits: Pistahh (~pistahh@user/pistahh) (Ping timeout: 256 seconds)
[20:44:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:01:54] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:01:55] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[21:02:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[21:04:55] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:06:45] *** Joins: jemius (~imperator@200116b82d874f00d0910dd2486afb5e.dip.versatel-1u1.de)
[21:07:55] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:09:23] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:a0be:91d2:ac63:61de)
[21:10:08] *** Joins: xackus (~xackus@185.15.0.3)
[21:15:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:16:29] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Remote host closed the connection)
[21:18:04] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:19:22] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:20:29] *** Joins: trriplex (~trriplex@user/trriplex)
[21:33:32] *** Joins: moog_ (~moog@107.77.244.156)
[21:34:27] *** Quits: trriplex (~trriplex@user/trriplex) (Quit: Leaving)
[21:36:18] *** Quits: moog (~moog@107.77.244.68) (Ping timeout: 272 seconds)
[21:48:43] *** Quits: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[22:01:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:04:21] *** Joins: Pistahh (~pistahh@user/pistahh)
[22:06:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[22:09:18] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[22:11:09] *** Quits: Pistahh (~pistahh@user/pistahh) (Ping timeout: 272 seconds)
[22:19:45] *** Joins: notzmv (~zmv@user/notzmv)
[22:27:48] *** Joins: Pistahh (~pistahh@user/pistahh)
[22:32:59] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[22:47:45] <andrewrk> ifreund, if you have spare time would you mind reviewing the io_uring PRs we have open? I see a couple of them
[23:03:02] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:03:42] *** Quits: moog_ (~moog@107.77.244.156) (Ping timeout: 272 seconds)
[23:07:27] *** Joins: Nulo (~Nulo@user/nulo)
[23:07:30] *** Quits: yeti (~username@user/yeti) (Ping timeout: 272 seconds)
[23:09:57] *** Joins: yeti (~username@user/yeti)
[23:13:44] *** Joins: moog (~moog@107.126.48.23)
[23:29:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:41:48] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[23:49:41] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:58:25] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
