[00:11:01] <andrewrk> daurnimator, motiejus: we don't use -Denable-wine on the CI. so the CI does not have test coverage of running anything in wine
[00:15:05] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:18:16] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[00:26:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:27:40] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[00:32:31] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[00:32:49] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:37:01] *** Joins: danderson (~dave@tailscale/danderson)
[00:37:43] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:55] *** Quits: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu) (Ping timeout: 265 seconds)
[00:39:18] *** Joins: b_jonas (~x@catv-176-63-27-92.catv.broadband.hu)
[00:52:03] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[00:55:52] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:56:54] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[00:57:44] *** Quits: b_jonas (~x@catv-176-63-27-92.catv.broadband.hu) (Ping timeout: 265 seconds)
[00:59:23] *** Joins: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu)
[01:00:35] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:12:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:17:01] *** Quits: xackus (~xackus@9-164.w.knc.pl) (Ping timeout: 240 seconds)
[01:19:38] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[01:21:39] *** Joins: rgrinberg (~textual@187.223.144.204)
[01:25:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[01:30:53] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:32:19] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:47:45] *** Joins: frmdstryr (~jrm@172.58.206.179)
[01:51:25] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[01:55:59] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[02:04:04] *** Joins: jjido (~Denis@90.213.58.125)
[02:04:23] *** Joins: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com)
[02:07:43] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[02:16:38] *** Joins: pkap (~pkap@185.213.155.160)
[02:20:56] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[02:31:10] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:31:44] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[02:32:14] *** Joins: livoreno (~livoreno@user/notzmv)
[02:39:56] *** Quits: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com) (Quit: nyaa~)
[02:41:39] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 265 seconds)
[02:42:03] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[02:50:01] *** Joins: binarycat (~binarycat@35.24.192.117)
[02:51:06] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:58:53] *** Quits: binarycat (~binarycat@35.24.192.117) (Read error: Connection reset by peer)
[02:59:03] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:18] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 265 seconds)
[03:11:43] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[03:15:37] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:16:14] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:21:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:33:43] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 252 seconds)
[03:34:40] *** Joins: marcj (~marc@205.175.215.25)
[03:48:18] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[03:58:47] *** Joins: livoreno (~livoreno@user/notzmv)
[04:01:27] *** Quits: pkap (~pkap@185.213.155.160) (Quit: Client closed)
[04:13:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[04:21:31] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:25:05] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 265 seconds)
[04:27:14] *** Joins: marcj (~marc@205.175.215.25)
[04:46:04] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[04:53:42] *** Joins: qaph (~weechat@user/qaph)
[04:56:30] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 265 seconds)
[04:56:32] *** qaph is now known as kron
[05:14:13] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[05:44:01] <daurnimator> ah k, I thought we did
[06:01:13] *** Joins: freshcoffee1 (~fresh@user/freshcoffee)
[06:03:19] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Ping timeout: 252 seconds)
[06:05:56] *** Joins: moog (~moog@107.77.244.79)
[06:21:21] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:30:27] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[06:37:47] *** Joins: _moog (~moog@107.126.53.17)
[06:38:09] *** Quits: moog (~moog@107.77.244.79) (Ping timeout: 252 seconds)
[06:45:08] *** Quits: luuk (~luuk@user/luuk) (Ping timeout: 265 seconds)
[06:46:01] *** Joins: luuk (~luuk@user/luuk)
[06:46:37] *** Joins: __moog (~moog@107.242.124.64)
[06:49:32] *** Quits: _moog (~moog@107.126.53.17) (Ping timeout: 256 seconds)
[06:49:55] *** Joins: moog (~moog@107.242.124.118)
[06:52:22] *** Quits: __moog (~moog@107.242.124.64) (Ping timeout: 256 seconds)
[07:05:37] *** Joins: _moog (~moog@107.126.53.185)
[07:07:31] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[07:08:27] *** Quits: moog (~moog@107.242.124.118) (Ping timeout: 265 seconds)
[07:09:34] *** Quits: _moog (~moog@107.126.53.185) (Client Quit)
[07:09:48] *** Joins: _moog (~moog@107.126.53.185)
[07:09:50] *** Quits: _moog (~moog@107.126.53.185) (Remote host closed the connection)
[07:10:33] *** Joins: moog (~moog@107.126.53.185)
[07:15:32] *** Quits: moog (~moog@107.126.53.185) (Quit: Leaving)
[07:19:24] *** Quits: frmdstryr (~jrm@172.58.206.179) (Ping timeout: 268 seconds)
[07:22:59] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[07:23:29] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[07:28:47] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[07:29:53] *** Quits: Arw (~Arwalk@lfbn-dij-1-167-216.w109-215.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:44:31] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 252 seconds)
[08:23:38] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[08:24:06] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[08:57:25] *** Joins: livoreno (~livoreno@user/notzmv)
[09:24:21] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[09:24:49] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[09:42:35] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[09:45:54] *** Joins: Arw (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[09:47:28] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[10:01:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[10:17:11] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:24] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[10:19:28] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:da4:9ec6:5ef5:74d6) (Ping timeout: 268 seconds)
[10:25:03] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[10:25:38] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[10:30:35] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[10:34:35] *** Joins: Guest21 (~Guest21@75-172-125-149.tukw.qwest.net)
[10:35:48] *** Quits: Guest21 (~Guest21@75-172-125-149.tukw.qwest.net) (Client Quit)
[10:41:52] *** Quits: davidfet1er (~davidfett@xvm-110-146.dc2.ghst.net) (Ping timeout: 256 seconds)
[10:41:59] *** Joins: davidfetter (~davidfett@xvm-110-146.dc2.ghst.net)
[10:43:00] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Ping timeout: 256 seconds)
[10:43:22] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[10:47:58] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[11:04:06] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Quit: Pouf c'est tout !)
[11:04:27] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[11:08:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:11:23] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Remote host closed the connection)
[11:23:37] <chgr> Im trying to choose if I have to subtract or add during runtime using the following code:
[11:24:08] <chgr> `const addOp = switch (y > line.y2) {
[11:24:09] <chgr>     true => std.math.sub,
[11:24:11] <chgr>     false => std.math.add
[11:24:13] <chgr> };`
[11:25:13] <chgr> I saw this pattern in the std.fmt code. But when I try to use it, it does not compile: `error: cannot store runtime value in type 'fn(type,anytype,anytype) anytype'`. 
[11:25:38] <Arnavion> It won't work for functions that take anytype
[11:25:53] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:25:55] <Arnavion> You'll need to make your wrappers around add and sub that take the concrete type you're planning to add/sub
[11:26:09] <Arnavion> (Of course, at that point the wrappers can just use + and - instead of add and sub)
[11:26:21] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[11:27:16] <chgr> Thanks! 
[11:30:52] <Arnavion> And in case you didn't realize why, fn foo(x: anytype) is essentially equivalent to fn foo(comptime Type: type, x: Type) except that Type is automatically determined for you from x when foo is instantiated for that Type. So foo doesn't exist at runtime, only specific instantiations of it exist
[11:36:16] *** Quits: trainsley69 (~trainsley@c83-252-9-135.bredband.tele2.se) (Ping timeout: 256 seconds)
[11:36:24] <Arnavion> Oh, I'm wrong about the reason. `anytype` parameters do work. It's only `type` parameters that don't
[11:43:03] *** Joins: jjido (~Denis@90.213.58.125)
[11:43:58] *** Joins: outfox (~outfox@user/outfox)
[12:04:11] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:07:49] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 240 seconds)
[12:09:28] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[12:09:36] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:12:54] *** Joins: notzmv (~zmv@user/notzmv)
[12:17:00] <andrewrk> whew, that was a big task for 1 day: https://github.com/ziglang/zig/pull/10304
[12:35:46] <ikskuh> noice!
[13:06:11] <motiejus> Nitpick: given the recent trends in computing, you may want to name the blacklist as denylist instead
[13:06:35] <motiejus> ... could have commented on the pr
[13:17:00] *** Joins: jjido (~Denis@90.213.58.125)
[13:28:35] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[13:29:06] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[13:34:20] *** Quits: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[13:34:36] *** Joins: yelnah (~felix@60-242-60-179.tpgi.com.au)
[13:39:53] *** Joins: earnestly (~earnest@user/earnestly)
[13:39:59] <andrewrk> ok will do
[13:41:11] <andrewrk> "deny" is not quite what's happening here, perhaps "omit"
[13:44:12] <Franciman> good day or its leftovers. Just for an orientation, nothing more
[13:44:18] <Franciman> is there an eta for zig 0.9?
[13:44:32] <Franciman> I am pondering about moving to the new allocator interface
[13:45:42] <luuk> Franciman: 20th of December
[13:46:05] <Franciman> wo
[13:46:10] <Franciman> that's like my christmas gift then ahah
[13:46:13] <Franciman> thanks luuk 
[13:47:10] <luuk> You're welcome :)
[13:47:44] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:56:27] *** Joins: pkap (~pkap@185.213.155.232)
[13:59:46] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[14:06:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[14:06:57] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 252 seconds)
[14:17:07] *** Quits: pkap (~pkap@185.213.155.232) (Ping timeout: 256 seconds)
[14:29:21] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[14:30:00] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[15:00:53] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:02:15] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[15:19:38] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[15:30:14] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[15:30:36] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:45:35] *** Joins: breavyn (~breavyn@user/breavyn)
[15:46:19] *** Quits: breavyn_ (~breavyn@user/breavyn) (Ping timeout: 252 seconds)
[16:08:15] *** Joins: frmdstryr (~jrm@172.58.206.179)
[16:08:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:34:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:cd28:ecf9:b8a2:d95a)
[16:34:31] *** Piraty_ is now known as Piraty
[17:37:23] *** Joins: arkurious (~arkurious@user/arkurious)
[17:39:53] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[17:39:53] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:40:13] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:40:57] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[17:41:20] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[17:54:56] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[17:55:25] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[17:59:16] *** Joins: pkap (~pkap@185.209.196.147)
[17:59:43] *** Joins: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[18:01:33] *** Joins: nyah (~nyah@94.6.71.219)
[18:25:46] *** Joins: binarycat (~binarycat@35.24.192.117)
[18:32:51] *** Quits: binarycat (~binarycat@35.24.192.117) (Ping timeout: 265 seconds)
[18:43:48] *** Quits: pkap (~pkap@185.209.196.147) (Quit: Client closed)
[18:46:10] *** Joins: phaleth (~phaleth@user/phaleth)
[18:46:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cd28:ecf9:b8a2:d95a) (Ping timeout: 268 seconds)
[18:54:34] *** Joins: livoreno (~livoreno@user/notzmv)
[18:56:40] *** Joins: phaleth_ (~phaleth@user/phaleth)
[18:56:46] *** Quits: phaleth (~phaleth@user/phaleth) (Read error: Connection reset by peer)
[19:01:58] *** phaleth_ is now known as phaleth
[19:02:48] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[19:15:17] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:1b4:2cec:47c3:871e)
[19:20:59] *** Quits: yelnah (~felix@60-242-60-179.tpgi.com.au) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:24] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[19:29:17] *** Joins: nvmd (~nvmd@user/nvmd)
[19:34:09] *** Joins: xackus (~xackus@6-108.w.knc.pl)
[19:43:02] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 256 seconds)
[19:44:48] *** Joins: outfox (~outfox@213.144.147.16)
[19:44:48] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[19:44:48] *** Joins: outfox (~outfox@user/outfox)
[19:49:59] *** Quits: cot (~kiedtl@kisslinux/kiedtl) (Ping timeout: 250 seconds)
[19:50:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:57:05] *** Joins: cot (~kiedtl@kisslinux/kiedtl)
[20:03:18] *** cot is now known as kiedtl
[20:03:25] *** kiedtl is now known as cot
[20:05:10] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[20:05:36] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[20:06:05] *** Joins: xackus_ (~xackus@17z.knc.pl)
[20:09:31] *** Quits: xackus (~xackus@6-108.w.knc.pl) (Ping timeout: 265 seconds)
[20:22:42] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[20:54:53] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[20:57:23] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:10:38] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b) (Remote host closed the connection)
[21:10:56] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[21:11:14] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[21:15:42] <tgschultz> is there a better way than using a global to pass information in and out of an async frame? I suspect the answer is 'not really', but I rarely use async so I might be missing something.
[21:16:27] <tgschultz> I'm only using async now because it is easier than writing a traditional state machine in this case.
[21:19:28] <_javyre> tgschultz:  I allocate a little structure right after the frame bytes and pass a pointer to it when calling the async function. I then keep a pointer to the allocated memory and that is at the same time the allocated frame and the allocated shared state
[21:21:29] <tgschultz> yeah, but that's basically still a global. For instance if I'm creating and returning a struct instance in a `.init()`, I can't really do that because the pointer might not be valid after I return it. Unless I allocate in on the heap I guess, but I avoid heap allocation whenever possible and this program doesn't need it.
[21:22:39] <_javyre> You'd have to allocate your frame+shared state struct before calling init of course. It depends on your definition of a global variable I guess.
[21:22:44] <tgschultz> ...actually come to think of it it might be valid due to result location semantics...
[21:23:02] <_javyre> Could still be all allocated on the stack in a fixed buffer
[21:24:02] <_javyre> s/Could still be all allocated on the stack in a fixed buffer/Could still be all allocated on the stack/
[21:25:23] <tgschultz> I'd like to hide this particualr implementation detail from the caller if at all possible.
[21:25:33] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[21:26:01] <tgschultz> Come to think of it, result location semantics might mean I *can* pass a pointer to self...
[21:26:13] <tgschultz> I wish it were more explicit though
[21:27:53] *** Joins: cursey (~cursey@user/cursey)
[21:34:39] *** Quits: Tekk (~tekk@94.198.42.169) (Ping timeout: 252 seconds)
[21:35:08] <_javyre> Obvious thought: You can hide it by allocating the frame+state as fields of your main structure, but then of course the user can't copy it around. Either way you'd have all the same issues with just a frame and no state struct since it needs to be allocated somewhere
[21:37:08] <_javyre> There's not much loss in requiring the struct to exist before calling init on it. I'd see the API as equally elegant to returning the struct in init. The stdlib mixes both styles
[21:38:46] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[21:46:40] <tgschultz> this is true enough
[21:48:05] <tgschultz> it would be possible if there were a space in the @frame that could be accessed for things like this though. I think I'll just set it up so the struct has to exist before init. Thanks for talking it over with me.
[21:55:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[21:58:10] <_javyre> Np. Here's a recentish version of my code btw: https://github.com/Javyre/wf-lua/blob/impl-ipc/src/IpcServer.zig
[21:58:51] <_javyre> The main loop state and frame are allocated on the stack but not the client connection handlers
[22:04:04] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 265 seconds)
[22:05:57] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[22:36:53] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:39:57] *** Joins: jjido (~Denis@90.213.58.125)
[22:46:53] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 252 seconds)
[22:48:57] *** Joins: rgrinberg (~textual@187.223.58.12)
[22:58:03] *** Quits: rgrinberg (~textual@187.223.58.12) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:32:31] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:32:32] *** Quits: xackus_ (~xackus@17z.knc.pl) (Ping timeout: 256 seconds)
[23:40:39] *** Joins: zkanda9 (~zkanda@box.makean.art)
[23:41:25] *** Quits: zkanda (~zkanda@box.makean.art) (Ping timeout: 240 seconds)
[23:41:25] *** zkanda9 is now known as zkanda
[23:42:56] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[23:42:56] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[23:42:56] *** Joins: tane (~tane@user/tane)
[23:55:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[23:57:08] *** Joins: ur5us (~ur5us@203.86.198.200)
[23:59:06] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
