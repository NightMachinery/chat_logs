[00:03:04] *** Joins: coot_ (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[00:06:09] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Ping timeout: 268 seconds)
[00:11:13] *** Quits: arrowd (~arr@2.94.236.140) ()
[00:24:30] *** Joins: hololeap (~hololeap@user/hololeap)
[00:46:33] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[02:03:00] *** Quits: coot_ (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot_)
[02:20:41] *** Joins: kremovtort (~kremovtor@broadband-77-37-212-157.ip.moscow.rt.ru)
[02:32:11] *** Joins: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz)
[03:55:01] *** Quits: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz) (Quit: leaving)
[04:44:09] *** Quits: kremovtort (~kremovtor@broadband-77-37-212-157.ip.moscow.rt.ru) (Ping timeout: 256 seconds)
[04:56:18] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[04:56:27] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[04:56:31] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[05:00:53] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[06:07:50] *** Quits: teto (~teto@2a01:cb14:11ac:8200:b928:5a24:d5f:4e28) (Ping timeout: 252 seconds)
[06:31:31] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[07:22:35] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:24:03] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[08:44:44] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[09:29:08] *** Joins: hololeap (~hololeap@user/hololeap)
[09:58:01] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[09:58:50] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[10:11:41] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[11:00:08] *** Joins: arrowd (~arr@2.94.236.140)
[12:01:56] *** Joins: teto (~teto@2a01:cb14:11ac:8200:e346:3f21:c89:ec72)
[12:55:24] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[13:15:18] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[13:16:59] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[13:17:28] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:29:11] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[14:32:17] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[15:27:33] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[15:32:22] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Client Quit)
[15:33:00] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[16:38:33] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[17:21:21] *** Joins: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net)
[17:23:04] <mjrosenb> Does anyone have experience using hls with emacs? I just got it set up, but so far the only feature that I've found that works is reformatting a file.
[17:23:23] <mjrosenb> so clearly I've done something wrong (although correct enough that *that* works)
[17:30:27] <michaelpj[m]> mjrosenb: yep, use it daily
[17:30:42] <michaelpj[m]> how did you set it up? are you using lsp-mode+lsp-haskell?
[17:30:50] <michaelpj[m]> have you read the troubleshooting page?
[17:37:48] <mjrosenb> I am using lsp-mode + lsp-haskell.  I asked nix to install the packages for me.
[17:38:10] <mjrosenb> which project's troubleshooting page?
[17:38:45] <michaelpj[m]> HLS's for a start
[17:39:07] <michaelpj[m]> https://haskell-language-server.readthedocs.io/en/latest/troubleshooting.html
[17:39:09] <michaelpj[m]> lsp-mode also has one
[17:39:41] <mjrosenb> oh, that is one thing that does work... completion of 
[17:40:38] <mjrosenb> built in tokens, so it'll complete 'where' and 'case' quite readily, but not variables, datatypes or types.
[17:55:27] <mjrosenb> ok, I guess taking a step back, given that flycheck mode is enabled, and that it is running hlint, I expect most things that ghc will complain about will be reported to me in the buffer, underlining bad things in red.
[17:55:47] <mjrosenb> is this actually something that hls supports?
[17:56:55] <michaelpj[m]> yep
[17:57:07] <michaelpj[m]> error diagnostics is basic functionality
[17:57:09] <michaelpj[m]> your project is not working
[17:57:21] <michaelpj[m]> I encourage you to try the troubleshooting page
[17:59:39] <mjrosenb> doing that now.  Always a bit awkward trying out a new technology: is this broken, or is this not supposed to work :-p
[18:01:01] <michaelpj[m]> it sounds like you're just getting the functionality from haskell-mode or something
[18:01:09] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[18:02:41] <mjrosenb> I'm definitely getting some functionality from hls.  Like I said, reformatting code works, and autocompleting reserved keywords works.
[18:07:08] <michaelpj[m]> I think that could just be coming from the `haskell-mode` emacs major mode
[18:08:34] <mjrosenb> I don't think I've ever seen that before
[18:08:44] <mjrosenb> although, otoh, I've never had company-mode enabled before
[18:09:01] <mjrosenb> ok, so I'm looking at the log file, which has debug output in it already
[18:09:11] <teto[m]> good thing to check if the editor setup is broken or if it's hls is to run `haskell-language-server ` in the shell at the root of the project
[18:09:20] <mjrosenb> I'm not seeing any scary looking errors, 
[18:10:44] <mjrosenb> I added a new file, and there are logs saying that it is doing stuff because that file now exists.
[18:11:40] <mjrosenb>   ghcide compiled against GHC 8.10.7 but currently using 8.6.5
[18:11:40] <mjrosenb>   This is unsupported, ghcide must be compiled with the same GHC version as the project.
[18:11:47] <mjrosenb> I wonder if that's the problem
[18:15:59] <michaelpj[m]> almost certainly
[18:16:37] <michaelpj[m]> https://haskell-language-server.readthedocs.io/en/latest/troubleshooting.html#wrong-server-binary-being-used
[18:23:43] <mjrosenb> ok, I think I intentionally set this up wrong because I didn't see a haskell-language-server package bundled with ghc-8.6.5
[18:24:48] <michaelpj[m]> yeah, if you got this from Nix, you need to get `haskell-language-server` from the same `haskellPackages` as you got your compiler from
[18:25:23] <michaelpj[m]> I don't think there's a `haskell-language-server-wrapper` in nixpkgs that selects the right version
[18:25:31] <michaelpj[m]> so just do it project-locally in you shell.nix
[18:28:13] <mjrosenb> so, for example, ghcid is pkgs.haskell.packages.ghc865.ghcid, but there isn't a pkgs.haskell.packages.ghc865.haskell-language-server
[18:30:22] <michaelpj[m]> seems like you're on a pretty old nixpkgs
[18:30:32] <michaelpj[m]> I don't even have a ghc865 package set any more
[18:30:48] <michaelpj[m]> perhaps HLS hadn't been packaged for 865 on your nixpkgs
[18:33:49] <mjrosenb> seems like it.  I'm using the nix tree that is recommended by miso, since ghcjs is special.
[18:50:08] <mjrosenb> ooh
[18:50:12] <mjrosenb> # The recommended way to override this package is
[18:50:13] <mjrosenb> # pkgs.haskell-language-server.override { supportedGhcVersions = [ "901" ]; }
[18:50:15] <mjrosenb> # for example. Read more about this in the haskell-language-server section of the nixpkgs manual.
[18:50:23] <mjrosenb> this seems relevant to my interests
[18:56:10] <michaelpj[m]> reading the nixpkgs manual seems likely to be helpful, yes
[18:58:20] <mjrosenb> that being said, the official nixpkgs documentation doesn't seem to mention it
[18:58:24] <jneira[m]> <mpickering> "I glanced at the code for that..." <- sooch: I think that was about the number format plugin, not sure if you read it so just in case
[18:58:38] <mjrosenb> but https://haskell4nix.readthedocs.io/nixpkgs-users-guide.html does?
[19:05:34] <mjrosenb> oh, great, it attempts to install pkgs.haskell.ghc865.haskell-language-server, which is what I initially tried to install.
[20:55:36] *** Joins: kremovtort (~kremovtor@broadband-77-37-212-157.ip.moscow.rt.ru)
[21:15:24] <michaelpj[m]> anton-latukha jneira is it just me or do none of the build workflows call `cabal update` any more? 
[21:15:27] <michaelpj[m]> I think since https://github.com/haskell/haskell-language-server/commit/f47bb47e976539065f0a53c9d42b0ae0a78a5cf2
[21:24:52] <mjrosenb> whoo! I got haskell-language-server installed for ghc865
[21:25:19] <mjrosenb> now on to the next problem! hls-wrapper can't detect the version of ghc!
[21:26:07] <michaelpj[m]> mjrosenb: you don't have to use the wrapper, you can also configure `lsp-haskell` to set the binary name and just have it launch `haskell-language-server` directly, which is what I do. combine with `direnv` and `direnv-mode` ftw
[21:27:41] <mjrosenb> well, I only have one haskell-language-server installed.  I should probably set up something like direnv, I know I tried to write my own like a decade ago, then stoped because it just wasn't useful.
[21:28:44] <mjrosenb> anyhow, yeah. not using the wrapper sounds like the way to go.
[21:40:43] <mjrosenb> ok, that worked.  Now what is something that hlint should pick up on? x = 'a' + 15
[21:40:46] <mjrosenb> ?
[21:43:47] <mjrosenb> hrm, no dice
[21:43:51] <mjrosenb> https://gist.github.com/mjrosenb/c87674a1c7cd42bcac906e3f0982ade4
[21:43:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[21:44:08] <mjrosenb> that's the error that the wrapper script was giving me.
[21:44:12] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[21:44:28] <mjrosenb> but haskell-language-server-8.6.5 is giving me that error.
[22:35:48] <mjrosenb> is there a way to find out what command it is running and failing to parse?
[22:36:59] <mjrosenb> nm, just using strace.
[23:06:42] <mjrosenb> 85647 writev(2, [{iov_base="/nix/store/x0mlaj4z4ciycaycfwc36l1932mwywfj-bash-4.4-p23/bin/bash", iov_len=65}, {iov_base=": ", iov_len=2}, {iov_base="relocation error", iov_len=16}, {iov_base=": ", iov_len=2}, {iov_base="/usr/lib/libc.so.6", iov_len=18}, {iov_base=": ", iov_len=2}, {iov_base="symbol _dl_catch_error_ptr version GLIBC_PRIVATE not defined in file ld-linux-x86-64.so.2 with 
[23:06:48] <mjrosenb> link time reference", iov_len=114}, {iov_base="", iov_len=0}, {iov_base="", iov_len=0}, {iov_base="\n", iov_len=1}], 10) = 220
[23:06:54] <mjrosenb> that seems bad
[23:35:51] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 268 seconds)
[23:38:49] *** Joins: juhp (~juhp@128.106.188.82)
[23:45:48] <mjrosenb> ok, I think the ball is back in haskell-language-server's court.
[23:46:14] <mjrosenb> "LD_LIBRARY_PATH=/run/opengl-driver/lib:/run/opengl-driver-32/lib:/usr/lib:/usr/lib32" appears to be set by haskell-language-server
[23:57:57] <mjrosenb> mjrosenb@ultron:~$ grep LD_LIBRARY /nix/store/rl653zlch89wzgsmvkd6qx9llp2ikk55-haskell-language-server-1.5.0-wrapper-fhs/etc/profile
[23:58:00] <mjrosenb> export LD_LIBRARY_PATH="/run/opengl-driver/lib:/run/opengl-driver-32/lib:/usr/lib:/usr/lib32${LD_LIBRARY_PATH:+:}$LD_LIBRARY_PATH"
[23:58:03] <mjrosenb> by that, in fact.
