[00:01:43] <pjb> shka: when will the first nuclear power plant be built in Poland?
[00:01:51] <shka> lol
[00:01:53] <pjb> Prices will drop then.
[00:01:59] <shka> i mean
[00:02:15] <shka> rofl, this is P O L A N D
[00:02:22] <pjb> 2027
[00:02:22] <selwyn> are the prices high because of the coal subsidy
[00:02:26] <pjb> https://notesfrompoland.com/2021/09/02/agreement-to-build-polands-first-nuclear-plant-signed-by-two-of-countrys-richest-men/
[00:02:28] <gilberth> Furthermore browsers still don't tell you about syntax errors. Instead they always complain about a missing <META CHARSET=...> element, lulling you into false security about encoding as the transport protocol overrides this and HTTP still defaults to ISO-8859-1.
[00:03:11] <gilberth> Which prices? Energy prices? They won't drop here.
[00:03:25] <selwyn> i am asking about polish energy prices
[00:03:44] <shka> pjb: well, the issue is that this powerplant my be built but it will be one the first ones of the design in the world
[00:03:48] <pjb> Well, of course, you'd also have to get out of the EU to be able to sell nuclear electricity at its price, instead of selling it at the price of wind.
[00:03:55] <shka> in a country lacking serious technical expertise 
[00:04:24] <shka> and 2TW is simply not enough 
[00:04:34] <pjb> You have to start somewhere.
[00:04:37] <shka> but i guess high prices will make it at least a good investment 
[00:04:44] <gilberth> Hmm, we will eventually need that Polish power. So Poland better hurries.
[00:05:10] <shka> gilberth: Poland is net importer of the energy
[00:05:19] <shka> not exporter 
[00:05:31] <gilberth> I know. So it's French nuclear power, then.
[00:05:51] <shka> anyway, don't get me wrong, i would prefer to be optimistic
[00:05:57] <shka> but we are simply to late 
[00:06:10] <shka> 20 years at least!
[00:06:16] <gilberth> We are all way too late.
[00:07:08] <gilberth> Or outright stupid as in the case of Germany.
[00:08:09] <shka> yeah, seriously 
[00:08:32] <shka> i mean, it would make more sense to buy nuclear power from the Germany 
[00:08:50] <shka> because, well, you guys had a running nuclear power plants for decades now 
[00:08:58] <gilberth> We shut down our plants by next year or so.
[00:09:31] <shka> yes, right during the most brutal price increase of the energy 
[00:09:37] <gilberth> shka: Poland has no nuclear power at all?
[00:09:57] <shka> nope, only research reactors 
[00:10:08] <shka> and some medical 
[00:10:09] <selwyn> isn't 2tw a lot?
[00:10:20] <gilberth> The most brutal price increase is taxes.
[00:10:21] <shka> selwyn: depends on your needs 
[00:10:29] <shka> gilberth: not this time around
[00:10:58] <shka> gilberth: https://www.mining.com/chart-no-stopping-insane-coal-price-rally/
[00:11:00] -ixelp- CHART: No stopping insane coal price rally - MINING.COM
[00:11:04] <shka> same for the natural gas
[00:11:52] <gilberth> shka: Taxes are still the major part of my energy bill. You're not supposed to use energy unless you can afford it.
[00:12:30] <gilberth> shka: Yep, natural gas prices skyrocketed. And this will be a problem for many, many people.
[00:12:40] <shka> selwyn: wrong unit, not terra, but giga
[00:12:41] <shka> :P
[00:12:46] <selwyn> oh right
[00:13:13] <selwyn> was wondering about the size of a 2tw plant
[00:13:46] <shka> anyway 
[00:13:48] <shka> https://en.wikipedia.org/wiki/Energy_in_Poland
[00:13:52] <gilberth> Oh coal prices raise too? At times I wonder, if it isn't prices raising, but our currency falling. There is a reason I have little money.
[00:14:06] <shka> notice import
[00:15:00] <shka> and just 2GW is not that much compared to Bełchatów Power Station
[00:15:12] <shka> which has the capacity for 5GW
[00:15:14] <gilberth> Imports raised faster than demand? What happened?
[00:16:12] <shka> gilberth: domestic production uses old hardware, which may fail 
[00:16:14] <gilberth> I mean imports doubled in that table, while demand increased very little. Where is all the former Polish capacity?
[00:18:08] <gilberth> shka: Ok. So the plants are just fubar?
[00:18:12] <shka> gilberth: lack of investments, really outdated grid, periodical failures in some of the power plants
[00:18:29] <shka> not just that, it is also really crappy grid
[00:18:33] <shka> like, seriously 
[00:19:27] <selwyn> dumb question: why can't e.g. france produce all the electricity and sell it to europe
[00:19:30] <gilberth> A pity that nuclear power plants cannot be moved, we have plenty of spare ones in more or less well maintained order.
[00:19:31] <selwyn> using nukes
[00:19:49] <shka> selwyn: they do that 
[00:19:56] <shka> especially during winter
[00:20:09] <White_Flame> why can't north africa produce all the solar electricity and sell it to europe?
[00:20:18] <shka> but it is not like France has unlimited capacity 
[00:20:37] <shka> so they just sell to Germany 
[00:20:49] <shka> and btw, they also buy excess power from Germany during the summer
[00:20:54] <selwyn> and the uk
[00:21:20] <gilberth> Ever noticed that most French nuclear power plants are at the border to Germany? I guess it not only the westwards wind direction.
[00:21:50] <shka> well, don't complain about France being a bad neighbor 
[00:21:56] <shka> because, well Germany :P
[00:22:05] <selwyn> lol
[00:22:30] <gilberth> Though the mostly west wind are convenient for the French. If something bad happens we will get all the fallout.
[00:22:44] <shka> anyway, in Poland we don't even have large amounts of cheap coal or anything 
[00:23:02] <shka> running on it does not even make sense from the economical point of view
[00:23:22] <shka> it is just issue being ignored for over 30 years strait
[00:23:47] <shka> gilberth: WW3 defense strat
[00:23:57] <shka> :P
[00:24:32] <gilberth> shka: We have the 21st century, France was an enemy in early last century; these days we are on good term. At times I wonder when the treaty of Verdun (in 843) will be canceled.
[00:24:48] <selwyn> nuclear maginot line
[00:25:20] <pjb> gilberth: that's because the rivers flow toward Germany…  More inside France, there wouldn't be enough flow.
[00:25:21] <shka> selwyn: "let's just turn our borderline into nuclear wasteland"
[00:26:16] <pjb> And in any case, since we sold nuclear electricity to Germany, we benefited from them too.  With them closed, you pay full wind price now for electricity.
[00:27:07] <shka> well, perhaps Poland should build multiple nuclear power plants on both borders
[00:27:17] <gilberth> pjb: Yep. I guess the Rhine river is just convenient to dump waste heat.
[00:29:28] <gilberth> Germans are hypocrites. They protest against nuclear power and nuclear weapons and never had the latter and will not have the former soon, yet happily take both from France.
[00:29:50] <selwyn> i don't think its hypocritical to protest against nuclear weapons
[00:30:19] <shka> gilberth: i know that relationship between France and Germany progressed since 1945
[00:30:23] <shka> but that being said
[00:30:23] <pjb> Well, yes, I guess the Oder and the Bug could do, notably toward the estuaries.  On the South side, it's mountains, so it won't do.  On the North, it's the Baltic sea, there's matter for quite a few nuclear power plants. Otherwise Poland rivers are inside the country.
[00:30:34] <shka> you DONT have nuclear weapons from France :P
[00:30:37] <pjb> Rivers are often used as border, so no surprise there.
[00:30:58] <shka> you use american made nuclear bombs using NATO  nuclear sharing policy
[00:30:59] <gilberth> It's hypocritical to happily accept the nuclear protection France provides.
[00:31:02] <pjb> shka: not yet, and not for lack of asking…
[00:31:30] <shka> vide Tornado replacement shitshow
[00:31:55] <pjb> selwyn: Well, while it prevents the Germans to invade France, no, it's not hypocritical of them to protest against nuclear weapons…
[00:32:12] <shka> pjb: lol, there is no way in hell that France would lend nuke to luftwaffe
[00:32:18] <pjb> Look at how the US protest against North Korea nuclear weapons!
[00:32:41] <shka> it just sounds wrong xD
[00:32:42] <pjb> shka: don't bet on it, with treators like Macron…
[00:33:05] <gilberth> France promised to protect Germany with their nuclear weapons, too. I would need to look that up, but this was one side of a treaty saying Germany will never have its own nuclear weapons.
[00:33:16] <shka> does France participates in the NATO nuclear sharing policy anyway?
[00:33:29] <selwyn> uk france relationship seems set on returning to 1815
[00:33:33] <pjb> Yes, NATO. Hopefully we'll leave that too.
[00:33:36] <selwyn> shka: it doesnt iirc
[00:34:10] <shka> makes sense
[00:34:46] <shka> iirc most nato fighters can't even carry french nukes
[00:34:47] <gilberth> Anyhow, I don't like nuclear weapons. But I believe it saved us from a WWIII in the past.
[00:35:08] <shka> you gonna need mirage/rafale for that
[00:35:39] <shka> and although i love me some french delta wing aircrafts, most of the Europe does not share my enthusiasm 
[00:36:22] <shka> look at this sexy beast https://en.wikipedia.org/wiki/Dassault_Rafale#/media/File:Rafale_-_RIAT_2009_(3751416421).jpg
[00:36:54] <selwyn> it just looks french
[00:36:54] <hayley> https://www.youtube.com/watch?v=MAk6RdApGLs
[00:36:55] -ixelp- Deconstructing the Garbage-First Collector - YouTube
[00:37:37] <shka> selwyn: yeah, like mirage 2000 but better
[00:38:13] <gilberth> Apropos hypocritical. The so called Green party here has its roots in anti nuclear power and weapons protest and anti-war protests. Yet they are the party here, which wants the closest relationship to the US. That doesn't fit, if you ask me.
[00:38:43] *** Quits: dra (~dra@2a04:4540:6406:7f00:e129:4a92:f9f4:8dd4) (Remote host closed the connection)
[00:39:34] <gilberth> And they are very anti-Russian. And they don't like Nord Stream 2, which we will need because we will shutdown power plants on demand of that political direction.
[00:39:48] <gilberth> </rant>
[00:50:47] <shka> no sane person should like nord stream 2
[00:51:02] <gilberth> Why not?
[00:52:39] <shka> nord stream was signed just after Russians taking over Crimea
[00:53:03] <shka> by buying Russian gas, you sponsor such operations 
[00:53:14] <shka> so, this argument number 1
[00:53:20] <gilberth> ok
[00:54:10] <shka> secondly, Russia is no shy about throttling gas supply as a means of political influence in Belarus, and Ukraine
[00:54:43] <gilberth> Are they?
[00:54:51] <shka> yes, look it up
[00:55:08] <shka> Germany, by importing majority of gas from Russia will join this club
[00:55:26] <shka> and it is actually happening right now
[00:55:30] <selwyn> i don't think russia views germany like those other countries at all
[00:55:44] <shka> selwyn: oh, really, let me show you something 
[00:56:40] <gilberth> Well, for Germany Russia has always been a reliable "business" partner. Even during cold war.
[00:56:47] <selwyn> german russian cooperation was (maybe still is, idk) a strategic goal of russia
[00:57:04] <gilberth> Though I see some validity in shka's arguments.
[00:57:12] <pjb> Russia is an European country, so it's normal that we cooperate.
[00:57:19] <selwyn> exactly
[00:57:49] <selwyn> trade with russia is also a useful way of not keeping the relationship militarised
[00:58:02] <shka> pjb: no, Russia is completely alien to Europe
[00:58:14] <shka> it is just modern day mongols 
[00:58:30] <gilberth> me personally still believes in doing business is a good move and will make a military conflict less likely. Not that I ever feared Russia.
[00:58:57] <shka> selwyn: https://newsbeezer.com/germanyeng/crisis-in-the-energy-market-gazproms-storage-facilities-in-germany-unusually-empty/
[00:59:14] <shka> selwyn: a lot of gas storage depots in germany are actually owned by gazprom
[00:59:48] <shka> and yes, the intentionally made sure that they are dry 
[01:00:20] <shka> right when the prices are expected to soar
[01:00:38] <gilberth> I still would prefer Germany not depending on energy imports. And this is my point: You can't shutdown all nuclear and coal power and oppose Nord Stream 2 at the same time. Doesn't work. I mean there is such a thing called "reality".
[01:00:57] <shka> i don't argue about that part
[01:01:23] <shka> i am just pointing out that Russia is not your normal country 
[01:01:32] <shka> like, let's say Italy 
[01:02:01] <gilberth> And I argue that maintaining good relationship with Russia is a good thing for us, despite what happens in the Ukraine.
[01:02:19] <shka> good relationship, yes
[01:02:43] <shka> but not being dependent on that nation is critical
[01:02:56] <selwyn> it is certainly a turbulent place, but i don't think that the current situation is due to their mongol mentality, or whatever
[01:02:58] <shka> because they will leverage this dependency in an way they can
[01:03:21] <gilberth> Yes, but that is the consequence of shutting down our power plants.
[01:03:22] <selwyn> consider that modern russia reconciled with china and turkey, while in the ussr times relations were not good at all with those countries
[01:03:31] <selwyn> yet the same couldn't happen in eastern europe
[01:03:49] <selwyn> for lots of different reasons
[01:03:59] <selwyn> missed opportunity imo
[01:04:33] <shka> selwyn: not so much "reconciled" as admitted that they are in no position to enforce anything there 
[01:04:56] <shka> while they are in other places
[01:05:24] <shka> like in Georgia
[01:05:27] <shka> or Ukraine 
[01:05:31] <shka> or Moldova
[01:05:33] <shka> or Syria
[01:05:47] <shka> or currently, in Mali
[01:05:54] <shka> (of all places)
[01:06:51] <shka> modern Russia is, simply put, opportunistic predator 
[01:07:32] <selwyn> i don't agree with that, russia has a genuine trade and diplomatic relationship with china, and other countries around the world
[01:07:32] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[01:07:58] <selwyn> if you don't like it, fine, but call it what it is
[01:08:20] <shka> eh, it is not like that i don't like Russians
[01:08:28] <selwyn> its only zero sum in eastern europe
[01:10:01] <shka> it is that i know that Germany won't be so eager to act against Russia if they know that any action will be retaliated with lack of heat and power during the winter time 
[01:10:41] <shka> and i am not kidding, this is the real threat
[01:10:45] <pjb> Which should be absolutely no problem, thanks to climate change! 
[01:11:32] <gilberth> Winter time will not pass that fast.
[01:11:38] <pjb> When was the last time you had a night at -35 C in Lorraine?  1986 !!!
[01:11:53] <shka> also, you are making business with war criminals
[01:11:58] <hayley> https://www.youtube.com/watch?v=aU_zMvaX05Q
[01:11:58] -ixelp- Elvis Costello & The Attractions - Accidents Will Happen - YouTube
[01:13:06] <gilberth> We do business with the US, too. And the "green" party is all for it. So much for war criminals.
[01:13:36] <shka> gilberth: at least private companies in the US are really private 
[01:14:31] <shka> selwyn: in nutshell, it is about the balance of power 
[01:14:46] <selwyn> yes
[01:14:52] <shka> and this may be not a factor today, or tomorrow, but in next 10 years?
[01:14:55] <shka> who knows
[01:15:16] <shka> look at the China
[01:15:45] <shka> everybody ignored how every company in china is state owned
[01:15:55] <selwyn> idiots
[01:16:04] <shka> and now China is spreading military influence over the whole world 
[01:16:20] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[01:17:04] <shka> but during the 90s there was this awesome idea that you can democratize China by economical relationship
[01:17:36] <selwyn> pinnacle of liberal arrogance
[01:17:56] <shka> and right now they are free to perform genocide because we depend on them 
[01:17:57] <selwyn> such an idea is built off of the idea that there is simply no way to be rich without being liberal and democratic
[01:18:03] <selwyn> so liberalism is inevitable
[01:18:15] <shka> Russia is like that
[01:18:16] *** Joins: aeth (~aeth@user/aeth)
[01:18:28] <hayley> https://www.youtube.com/watch?v=yBRHKEoi0TA
[01:18:29] -ixelp- Virus.DOS.Pieces - YouTube
[01:19:04] <shka> in fact, in some ways, Russia may be even worse then China
[01:20:16] <shka> selwyn: so just keep that in mind, those trade deals will have long lasting impact 
[01:20:48] <shka> and it may take decade or two, but it may be used in one way or another
[01:22:07] <shka> and Gerhard Schröder is the chairman of Rosneft and Nord Stream
[01:22:22] <shka> which certainly smells a little bit fishy 
[01:23:18] <shka> or should i say
[01:23:22] <shka> bribery...
[01:23:31] <gilberth> It is. That person is just greedy for power and money.
[01:24:54] <shka> that said
[01:24:56] <shka> good night
[01:25:01] <selwyn> goodnight
[01:25:12] <shka> and don't trust Kremlin
[01:27:48] <gilberth> Take care!
[01:34:29] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:42:04] <gilberth> Printer experts around? How can I detect whether I should abbrev with "#" or "..."? w/o using PPRINT-LOGICAL-BLOCK?
[01:44:06] <moon-child> yitzi, perhaps
[01:44:31] <gilberth> yitzi? What's that?
[01:44:51] <moon-child> the irc nick of somebody who implemented a pretty-printer
[01:45:53] <gilberth> Ah ok. I'll have to test implementations. *print-level* is not decremented here, which might be a bug or not. idk. tl;dr
[01:46:54] <gilberth> pprint-logical-block does this automatically for me, as well as pprint-pop. But: I don't want to have a new logical block, but still descent in the printer sense.
[01:48:35] <gilberth> And, yes, as nice as the pretty printer is as hairy is the algorithm. Reading xp-print sources make my brain explode, it's not safe. I still dream of a JS implementation for HTML.
[01:50:04] <pjb> 65% of the wind turbine in France are owned by Germany companies, and 30% by Danish companies…
[01:50:46] <gilberth> Really? That's almost funny.
[01:50:50] <pjb> And of course, since they're intermitent, we have to buy eletricity to Germany which has Russian gas power plants…
[01:52:13] <gilberth> You have nuclear, don't you?
[01:56:53] <hayley> https://www.youtube.com/watch?v=WwFYy_Th7BA
[01:56:53] -ixelp- King Crimson - The Night Watch (OFFICIAL) - YouTube
[01:58:41] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[02:10:29] *** Joins: notzmv (~zmv@user/notzmv)
[02:13:59] <gilberth> ok. The :print-function of a structure defined with DEFSTRUCT has a contract with regard to the print level. So have a proxy structure type and go through it's print function?
[02:15:24] <gilberth> The extra single quote is for moon-child.
[02:27:14] <moon-child> ty
[02:33:03] <pjb> gilberth: no, since Germany forced us to close Fessenheim, we have 2.5% less nuclear power, and it was already less than 70% our electricity need. And now with electric cars, we'd have to triple that to replace gasoline.
[02:34:48] <mfiano> Anyone know what this "over" variable is being used for? It seems to be used everywhere, and this simple percentage calculation function isn't making it obvious: https://github.com/freebsd/freebsd-src/blob/c78ad207baed95dc3148632ab882d445acc39034/usr.bin/vmstat/vmstat.c#L1205
[02:34:49] -ixelp- freebsd-src/vmstat.c at c78ad207baed95dc3148632ab882d445acc39034 · freebsd/freebsd-src · GitHub
[02:36:32] <gilberth> However, using this :print-function works fine for getting a "#", but it does not increment the internal level value. Am I supposed to decrement *print-level*? /me reads dpANS.
[02:37:12] <gilberth> pjb: Forced? How could Germany force France to do anything?
[02:41:11] <gilberth> mfiano: That code makes my eyes hurt.
[02:41:50] * hayley tries to run AFL on Devault ware, gets afl-gcc working
[02:41:59] <hayley> "src/config.c:239:21: error: ‘strcmp’ of a string of length 7 and an array of size 6 evaluates to nonzero [-Werror=string-compare]" Great start.
[02:42:20] <moon-child> devault-ware?
[02:42:28] <moon-child> that's--alpine linux?
[02:43:11] <hayley> "c99 called with non ISO C99 option -std=c11"
[02:43:23] <mfiano> The code isn't that bad, but it punts documentation to the syscall manpages. Details like this variable are lost
[02:43:46] <mfiano> At least the code is fairly readable to me anyway.
[02:43:49] <moon-child> imagine having multiple versions of your spec!
[02:43:53] <moon-child> this post made by the cltl1 gang
[02:45:47] * hayley just removes the -std=c11 and it still works somehow.
[02:46:40] <gilberth> mfiano: It's bad. Begins with constructing a printf format control with printf. And this 'over' somehow tracks chars printed or such. I can't see what xo_emit does. No meta-dot for me.
[02:47:33] <mfiano> If you're a C programmer you'd use cscope or similar for that
[02:49:18] <gilberth> I am too lazy to download the code. Identifiers could have been links to click on. ;-)
[02:49:24] <hayley> Sadly I think I found the only bug of sending a NUL byte to the server.
[02:50:33] <hayley> Though it would be funny to see if I can make that config parser crash.
[02:50:53] <moon-child> 'Identifiers could have been links to click on'  that would be quite easy with a structured format (instead of text) and a network transparent, immutable language substrate.  Just sayin :)
[02:51:43] <gilberth> mfiano: over is incremented when the printed float need more than two characters, but decremented when it needs just one. This puzzles me and it's clamped, and I can't see where it is actually used. The author could have written a comment.
[02:52:21] <hayley> Whoa, it's crashing!
[02:52:37] <gilberth> moon-child: I wonder what you dream on at night.
[02:52:38] <mfiano> I encourage you to look at the Linux equivalent. Convolution is an understatement.
[02:52:39] <hayley> And it's producing a ton of shit directories.
[02:53:27] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 256 seconds)
[02:53:49] <gilberth> hayley: What the heck are you doing? Have you decided to be a REAL MAN(tm)? That would be a surprise.
[02:53:50] <mfiano> gilberth: but that leads me to believe it is some kind of accumulator for this application tabulated output
[02:54:02] <mfiano> ie; meaningless for my study
[02:54:29] <hayley> gilberth: I'm making a C program which parses a config file parse some pretty stupid files.
[02:55:24] <gilberth> mfinao: On characters written or not written perhaps for formatting purposes.
[02:55:32] <hayley> Oh, it's a pretty boring crash, the parser reads off the end of a string looking to close the ] in [blah].
[02:55:53] <gilberth> And that crashes the thing?
[02:56:18] <moon-child> 'testing can be used to show the presence of bugs, not their absence'.  And is there really any question of whether there are bugs in a c-written parser? :)
[02:56:23] <hayley> Segfaults, yes.
[02:56:49] <gilberth> All these ad-hoc parsers. The world should just use s-expressions everywhere; that would be a great time and hair saver.
[02:57:31] <moon-child> yeah, s-expressions are pretty good
[02:57:37] <MichaelRaskin> This includes Common Lisp that should have had quasiquote and unquote as standard symbols, right?
[02:57:38] <gilberth> hayley: Where there is a seg fault, there is a potential exploit. Congrats!
[02:57:57] <hayley> Aha, it calls strrchr to find the ], but that returns NULL. Thus nothing interesting, methinks.
[02:58:14] <moon-child> MichaelRaskin: imo, that would have been better
[02:58:43] <gilberth> You get in trouble doing that with nested use.
[02:59:12] <moon-child> hayley: do you index the null later?  That may be a problem, if the attacker can get the index high enough
[02:59:18] <MichaelRaskin> Would it be any different from trouble with nested reader-only use?
[02:59:26] <MichaelRaskin> Because the latter also exists
[02:59:33] <hayley> Nope, only *p.
[03:00:17] <gilberth> But, yes, having "`", "," and ",@" just turn into QUASI-QUOTE, COMMA, COMMA-AT or what ever would be way nicer. I hate SBCL for turning ",x" into a structure object. That's poison for a code walker.
[03:00:19] <hayley> Huh, there is a test to see if there is a missing ] but it's completely wrong.
[03:00:43] * hayley reads man page, replaces strrchr with strchrnul
[03:01:04] <hayley> The latter is GNU only. Of course.
[03:01:38] <gilberth> Because of SBCL I have this: <http://clim.rocks/gilbert/collect-all-symbols.lisp>
[03:01:44] <moon-child> gnu: the people that brought you strfry(3)
[03:01:55] <hayley> Okay, now there are fewer crashes.
[03:02:06] <hayley> FWIW it's this library that is broken: https://github.com/benhoyt/inih
[03:02:07] -ixelp- GitHub - benhoyt/inih: Simple .INI file parser in C, good for embedded systems
[03:02:35] <gilberth> moon-child: And memfrob(3).
[03:02:35] <hayley> gilberth, moon-child: Also note that one would have to control the configuration file, which seems unlikely.
[03:03:02] <gilberth> Control? What do you mean by control?
[03:03:08] <moon-child> 'download this config file to make your fps go up'
[03:03:16] <hayley> lol
[03:03:58] <hayley> "generating certificate for ,ocalhost" "src/tls.c:70: tls_host_gencert: Assertion `ext' failed. Aborted"
[03:04:04] <gilberth> Yes, "Get 400FPS!" One should mention that the display can't keep up. Or the link to the display rather.
[03:04:08] <hayley> Funny, but not useful.
[03:05:18] <hayley> AFL unfortunately doesn't fuzz the network layer, and it'd need to know SSL too.
[03:05:29] <gilberth> On should build a GPU, which sits right in the display panel and talks in X11 with you.
[03:05:32] <hayley> So I only have my toy random grammar generator for that.
[03:06:07] <hayley> But I do have a fair few hanging processes apparently. /me checks
[03:06:11] <MichaelRaskin> gilberth: I find the mess around defun and named-lambdas (why nobody loves labels) more annoying than quasiquotation
[03:06:48] <hayley> .oO(This is a server, it's supposed to hang surely.)
[03:08:04] * hayley just adds a "return 0;" to main before it goes into the serving loop, and the hangs disappear.
[03:08:59] <gilberth> MichaelRaskin: At least DEFUN doesn't try to hide things from you. I still wonder why SBCL does that.
[03:11:27] <hayley> And apparently the way you make AFL run in parallel is to run more processes, which sync over the file system. Weird.
[03:12:27] <moon-child> ‘how dare they not use fine-grained parallelism!’
[03:12:53] <MichaelRaskin> «for work including signals flying around in random directions»
[03:13:46] <hayley> How the fuck does strcmp segfault if gdb is happy showing the string "//"? I mean, it must be zero terminated.
[03:16:30] <hayley> Well, even strcmp("a", "b") is broken according to gdb, so I guess it broke some tables.
[03:20:20] <hayley> Maybe I can start another thread so the server connects to itself, and sends the test data?
[03:21:10] <gilberth> I punt on *print-level*. Implementations differ in whether the internal level counter is adjusted or not. Despite the spec saying it needs to adjusted with ~W. I too lazy or impatient now to dig the spec to figure out what really is supposed to happen.
[03:26:05] <gilberth> And besides where is a :recursivep argument to WRITE?
[03:33:49] * hayley puts https://www.youtube.com/watch?v=nx_GIji9EGw on jukebox
[03:34:24] <hayley> Todo list: learn how to use OpenSSL from C. Learn how to blit out entire file over SSL.
[03:35:17] <moon-child> openssl’s api is horrid, so I hear
[03:35:49] <hayley> "// TLS re-negotiation is a fucking STUPID idea // I'm gating this behind an #ifdef based on an optimistic assumption // that someday it will be removed from OpenSSL entirely because of how // fucking stupid this fucking godawful idea is"
[03:40:59] <hayley> Well, I could kick up any program I like in order to connect. So I'll just start a Lisp process which connects.
[03:44:24] <hayley> gilberth: If we have some flag run declared by "bool *run;" and a signal handler sets it false, would "do { ... } while (*run)" be required to actually ever observe *run == false?
[03:44:36] <hayley> I sort of suspect it should be volatile, but idk.
[03:47:14] <gilberth> hayley: Why not just use openssl s_client?
[03:47:43] <hayley> Cause idk how to set the cipher list for s_client, and apparently I have to pick a very specific one.
[03:52:39] <gilberth> Ah, and you know how to do that with the C library?
[03:53:19] <hayley> Nope, only the CL one sadly.
[03:54:02] <gilberth> Oh I forgot, you are on your route to become a REAL MAN and quit cheating.
[03:54:24] <hayley> How do I start another process from C? Must I do the fork and execl dance?
[03:54:37] <gilberth> Yes.
[03:54:48] <hayley> gilberth: Well, AFL needs to watch hardware counters for the C server, and I need to send data to the server to see if it blows up.
[03:55:15] <gilberth> You want to blow up a server?
[03:55:26] <hayley> Yes.
[03:56:01] <gilberth> And the pipe(2) dance. And the close(2) and dup(2) dance, if you care.
[03:57:21] <gilberth> "Welcome to UNIX, enjoy your ride."
[03:58:06] <moon-child> I remember a fun vulnerability.  Somebody forked, closed, and then mapped some shared memory.  Those fds were now available, so they were used: fd 2 corresponded to the newly mapped memory.  Then some logging code said fprintf(stderr, ...)
[03:58:08] <moon-child> boom
[03:58:37] <moon-child> ‘enjoy your ride’  I find it rather nauseating
[03:58:45] <gilberth> Hilarious!
[04:05:05] <gilberth> The spec says that ~W would maintain the print depth. Yet it doesn't. Not with any CL I tried. I must be missing something.
[04:06:00] <gilberth> Or I misread. However, when I decrement *print-level* it works fine.
[04:06:16] <hayley> "/usr/sbin/ld: src/client.o: undefined reference to symbol 'pthread_create@@GLIBC_2.2.5'"
[04:06:28] <gilberth> -lpthread
[04:06:32] <hayley> Thanks!
[04:06:39] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[04:09:01] <hayley> I can kick up another process, and wait for it to stop, but it doesn't stop the server yet.
[04:10:27] <hayley> Though run could be unset at that point. Hm.
[04:12:23] <hayley> Still nothing. Though I suspect poll() only return EINTR when the server gets SIGTERM, and then *run == false is handled after.
[04:12:39] <hayley> SIGTERM myself instead?
[04:13:36] <hayley> Yes, that works.
[04:18:53] <hayley> Now CL+SSL does not survive SAVE-LISP-AND-DIE though.
[04:19:36] * hayley forgot to make a new image, after making sure the context is made at runtime.
[04:29:30] <gilberth> hayley: That may depend on what you setup with sigaction.
[04:29:43] <hayley> It appears to work here.
[04:30:01] <gilberth> I am a selecter not a poller.
[04:30:06] * hayley now wonders why AFL is finding nothing for control flow.
[05:00:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[05:00:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:04:23] <hayley> lol, AFL sets a memory limit of 50MB and SBCL wouldn't start.
[05:06:29] <hayley> It figured out how to make the server hang (apparently it won't die if you haven't sent a complete request?) but that's uninteresting.
[05:12:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[05:14:11] <hayley> A bit like https://fishinabarrel.github.io/ though.
[05:14:12] -ixelp- Fish in a Barrel
[05:14:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:40:21] *** Joins: slyrus (~slyrus@192-184-223-165.static.sonic.net)
[05:58:48] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:02:00] <hayley> Better would be to fuzz a client, since they could hypothetically read any crap. But I don't know how to go about that.
[06:03:15] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Client Quit)
[06:05:24] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:30:27] <hayley> OTOH you can take out a server, but you can't meaningfully take out a client (unless you completely break it and get code execution, rather than just crashing).
[06:32:31] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[06:34:10] <hayley> Hm, someone lexes to parse a damn URL.
[06:34:59] <hayley> And the config file looks weirder. /me makes notes
[06:43:25] <hayley> Yet I can't break it by fuzzing. Nice.
[06:47:05] * hayley contemplates fuzzing her olde C++ programs for university, if she has any on her machine.
[06:47:47] <hayley> Seems I do not. Probably for the latter.
[06:51:17] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f767:b15a:e5b1:96f0) (Ping timeout: 268 seconds)
[06:52:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[07:22:22] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[07:58:22] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:00:35] <dave0> maw
[08:09:51] <hayley> maw
[08:10:09] <dave0> hi hayley 
[08:12:41] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:13:43] <gilberth> Hello dave0!
[08:14:04] <dave0> hey gilberth &nbsp; !
[08:14:36] <dave0> a slightly different space today
[08:15:01] <gilberth> A indestructible one! How nice. What is it made of?
[08:15:34] <dave0> hmm that's tricky
[08:15:46] <dave0> indestructible yet transparent
[08:16:02] <gilberth> A secret? Does it have to do with your invention?
[08:16:10] <dave0> oh invention
[08:16:18] <dave0> it is a tweak to mergesort
[08:16:48] <dave0> a little trick to make it go faster that i've never seen before
[08:17:09] <contrapunctus> Inventions... 🤔 https://www.youtube.com/watch?v=vQot-jM6FSw
[08:17:10] -ixelp- J.S.Bach Inventionen und Sinfonien [ G.Gould ] (1964) - YouTube
[08:17:21] <contrapunctus> SCNR
[08:17:31] <gilberth> dave0: Hmm. Now that sounds tricky.
[08:19:55] <dave0> gilberth: if microsoft can patent abs in amd64 machine code i should be able to patent my trick dammit    mov rax,rdi ; sar rdi,63 ; xor rax,rdi ; sub rax,rdi
[08:20:14] <hayley> What's that do?
[08:20:20] <dave0> abs
[08:20:34] <hayley> Why do you need abs in mergesort again?
[08:20:37] <gilberth> You can patent everything, even a progress bar.
[08:20:43] <dave0> no no that's what microsoft patented
[08:21:09] <dave0> i'm saying that's the silliest thing you could patent and yet microsoft did it
[08:21:30] <moon-child> gilberth: 'selecter not a poller'  why?
[08:22:17] <gilberth> moon-child: Because I grew up with select(2). Habits.
[08:23:03] <hayley> https://i.redd.it/bh09snps4u381.png
[08:23:17] *** Quits: Catie (~user@user/catie) (Quit: rcirc on GNU Emacs 29.0.50)
[08:23:38] <hayley> "Insight of the month: You typically have less than 5% of your week spent in meetings. That's about 0 hours each week. Few of your weekly meetings are recurring."
[08:24:29] <gilberth> dave0: A lot of patents also just state the problem and not the solution. And only because you have been granted a patent, does not imply that it is valid.
[08:25:32] <moon-child> dave0: I was planning to use that (except without the sub at the end) in my overflow-checked simd mul
[08:25:34] *** Joins: semz (~none@user/semz)
[08:26:11] <moon-child> clz to estimate log₂ of the magnitude of x/y
[08:26:14] <dave0> you might get sued by microsoft!
[08:26:16] <moon-child> (that is, x&y)
[08:26:35] <moon-child> dave0: does it help if I had no idea anyone else had patented or even invented that trick?
[08:26:58] <dave0> no idea
[08:27:19] <gilberth> That is the trouble with patents, they are granted to more or less obvious solutions.
[08:28:05] <gilberth> moon-child: And, no, it doesn't help.
[08:29:23] <dave0> i think you could do abs in simd with   max(n, -n)
[08:29:38] <dave0> patent pending
[08:30:33] <moon-child> 'obvious solutions' yeah.  For instance the slug algorithm is so simple that once I understood the problem space it seemed somewhat obvious.  And then my own method seemed like an obvious development.  Is it infringing, because it's a (to me) obvious derivative of slug?  But the algorithm itself has pretty much no steps in common with slug, and seems as different from slug as slug is from the
[08:30:35] <moon-child> strawman solution
[08:30:37] <moon-child> so...no idea
[08:31:27] <moon-child> dave0: x86 at least i don't think has integer max/min
[08:31:46] <dave0> oh ok :-/
[08:32:23] <hayley> https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html#text=max&techs=SSE,SSE2,AVX2
[08:32:59] <moon-child> oh, it does!
[08:56:28] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[08:56:28] *** Quits: nckx (~nckx@tobias.gr) (*.net *.split)
[08:56:29] *** Quits: eschaton (~eschaton@li541-49.members.linode.com) (*.net *.split)
[08:56:29] *** Quits: jurov (~jurov@rev-81-92-255-36.radiolan.sk) (*.net *.split)
[08:56:29] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c) (*.net *.split)
[08:56:29] *** Quits: notzmv (~zmv@user/notzmv) (*.net *.split)
[08:56:29] *** Quits: Alfr (~Alfr@user/alfr) (*.net *.split)
[08:56:29] *** Quits: sirufer (68f46fc7c3@user/sirufer) (*.net *.split)
[08:56:29] *** Quits: luis (~luis@lisp/luis) (*.net *.split)
[08:56:30] *** Quits: amazigh (~amirouche@user/amirouche) (*.net *.split)
[08:56:30] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[08:56:30] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (*.net *.split)
[08:56:30] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[08:56:30] *** Quits: mala (~mala@user/malaclyps) (*.net *.split)
[08:56:30] *** Quits: zbrown[m] (~zbrownm]@2001:470:69fc:105::1:33db) (*.net *.split)
[08:56:30] *** Quits: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354) (*.net *.split)
[08:56:31] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (*.net *.split)
[08:56:32] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (*.net *.split)
[08:56:32] *** Quits: gko (~user@user/gko) (*.net *.split)
[08:56:33] *** Quits: v3gajerusalem (~v3ga@2600:1702:ad0:3b90::40) (*.net *.split)
[08:56:33] *** Quits: pl (sid98063@helmsley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: derwolf (~DerWolf@2a01:4f8:c0c:554a::1) (*.net *.split)
[08:56:33] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[08:56:34] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[08:56:34] *** Quits: hayley (~theemacss@user/hayley) (*.net *.split)
[08:56:34] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[08:56:34] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (*.net *.split)
[08:56:34] *** Quits: sp (~sp@user/susam) (*.net *.split)
[08:56:35] *** Quits: copec (~copec@schrodbox.unaen.org) (*.net *.split)
[08:56:35] *** Quits: |3b| (bbb@user/3b/x-2324788) (*.net *.split)
[08:56:35] *** Quits: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net) (*.net *.split)
[08:56:35] *** Quits: mzan (~quassel@mail.asterisell.com) (*.net *.split)
[08:56:35] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[08:56:35] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[08:56:36] *** Quits: lagash (lagash@lagash.shelltalk.net) (*.net *.split)
[08:56:36] *** Quits: elflng (~elflng@5.28.137.182) (*.net *.split)
[08:56:36] *** Quits: Arcsech (~arcsechma@2001:470:69fc:105::1:797) (*.net *.split)
[08:56:36] *** Quits: APic (apic@apic.name) (*.net *.split)
[08:56:36] *** Quits: phoe (~phoe@user/phoe) (*.net *.split)
[08:56:36] *** Quits: ck_ (~ck@plskthx.org) (*.net *.split)
[08:56:37] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[08:56:37] *** Quits: trn (jhj@sourcehut/user/trn) (*.net *.split)
[08:56:38] *** Quits: hugo (znc@verdigris.lysator.liu.se) (*.net *.split)
[08:56:39] *** Quits: lonjil (~quassel@user/lonjil) (*.net *.split)
[08:56:39] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (*.net *.split)
[08:56:39] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (*.net *.split)
[08:56:40] *** Quits: sepanko (~sepanko@user/sepanko) (*.net *.split)
[08:56:40] *** Quits: contrapunctus (a75f5b1571@jabberfr.org) (*.net *.split)
[08:56:40] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[08:56:40] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (*.net *.split)
[08:56:41] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[08:58:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[08:58:12] *** Joins: notzmv (~zmv@user/notzmv)
[08:58:12] *** Joins: Alfr (~Alfr@user/alfr)
[08:58:12] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[08:58:12] *** Joins: sirufer (68f46fc7c3@user/sirufer)
[08:58:12] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:58:12] *** Joins: luis (~luis@lisp/luis)
[08:58:12] *** Joins: amazigh (~amirouche@user/amirouche)
[08:58:12] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[08:58:12] *** Joins: remexre (~remexre@user/remexre)
[08:58:12] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[08:58:12] *** Joins: Arcsech (~arcsechma@2001:470:69fc:105::1:797)
[08:58:12] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[08:58:12] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:58:12] *** Joins: mala (~mala@user/malaclyps)
[08:58:12] *** Joins: zbrown[m] (~zbrownm]@2001:470:69fc:105::1:33db)
[08:58:12] *** Joins: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354)
[08:58:12] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[08:58:12] *** Joins: copec (~copec@schrodbox.unaen.org)
[08:58:12] *** Joins: |3b| (bbb@user/3b/x-2324788)
[08:58:12] *** Joins: nckx (~nckx@tobias.gr)
[08:58:12] *** Joins: v3gajerusalem (~v3ga@2600:1702:ad0:3b90::40)
[08:58:12] *** Joins: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net)
[08:58:12] *** Joins: lagash (lagash@lagash.shelltalk.net)
[08:58:12] *** Joins: gko (~user@user/gko)
[08:58:12] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[08:58:12] *** Joins: hayley (~theemacss@user/hayley)
[08:58:12] *** Joins: pl (sid98063@helmsley.irccloud.com)
[08:58:12] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[08:58:12] *** Joins: derwolf (~DerWolf@2a01:4f8:c0c:554a::1)
[08:58:12] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[08:58:12] *** Joins: mzan (~quassel@mail.asterisell.com)
[08:58:12] *** Joins: contrapunctus (a75f5b1571@jabberfr.org)
[08:58:12] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[08:58:12] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[08:58:12] *** Joins: sepanko (~sepanko@user/sepanko)
[08:58:12] *** Joins: sp (~sp@user/susam)
[08:58:12] *** Joins: elflng (~elflng@5.28.137.182)
[08:58:12] *** Joins: eschaton (~eschaton@li541-49.members.linode.com)
[08:58:12] *** Joins: jurov (~jurov@rev-81-92-255-36.radiolan.sk)
[08:58:12] *** Joins: APic (apic@apic.name)
[08:58:12] *** Joins: phoe (~phoe@user/phoe)
[08:58:12] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[08:58:12] *** Joins: ck_ (~ck@plskthx.org)
[08:58:12] *** Joins: taeaad (~taeaad@user/taeaad)
[08:58:12] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[08:58:12] *** Joins: trn (jhj@sourcehut/user/trn)
[08:58:12] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[08:58:12] *** Joins: lonjil (~quassel@user/lonjil)
[08:58:12] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[08:58:12] *** Joins: ChanServ (ChanServ@services.libera.chat)
[08:58:12] *** strontium.libera.chat sets mode: +o ChanServ
[09:03:28] <sm2n> moon-child: should just publish it
[09:04:32] <moon-child> sm2n: I intend to.  Need to finish implementing it first
[09:05:02] <moon-child> (and, well, writing things up is a chore.  But I will get to it)
[09:05:02] <sm2n> best of luck!
[09:05:04] <moon-child> ty
[09:05:42] <sm2n> text rendering is in a sad state currently
[09:05:47] <moon-child> (also not yet 100% sure of the best way to do space partitioning.  But pretty sure I can do a better job than everybody else so far :P)
[09:06:36] <moon-child> 'sad state currently'  well, pathfinder is oss and probably ok; but the main reason no one is actually using any of these is lack of hinting
[09:07:33] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (*.net *.split)
[09:07:34] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (*.net *.split)
[09:07:36] <moon-child> if you ignore hinting, (m)sdfs are _fine_.  Just, I don't like them
[09:08:38] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[09:08:54] <moon-child> I intend to tackle hinting.  But it seems like an annoying kettle of sardines.  Not nearly as fun as O(1) binary search
[09:09:33] <sm2n> hinting is pretty much necessary unless you're on hidpi screens
[09:10:45] <moon-child> yeah
[09:13:20] <moon-child> I still do not know how hinting works.  I want good text rendering in vr.  I _suspect_ that applying perspective transform to the control points is the same as applying it to all the points on a curve.  If so it should be trivial to adapt the algorithms and get them to run in a compute shader.  Otherwise there will be additional complication
[09:14:31] <sm2n> isn't hinting part of font design? thought it was baked in
[09:15:12] <moon-child> no
[09:15:30] <moon-child> hinting is tweaking the outlines to better fit a particular pixel grid
[09:15:32] <sm2n> also you do stuff with vr? I've yet to do anything interesting with my hardware other than play around with xedesktop and stuff
[09:15:49] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[09:16:02] <sm2n> yeah, but I thought good fonts usually have hinting data baked in, and autohinting is suboptimal
[09:16:10] <sm2n> what I read somewhere anyway
[09:16:18] <sm2n> s/xedesktop/xrdesktop/
[09:16:31] <moon-child> some fonts come with bytecode programs to perform hinting
[09:16:44] <moon-child> but you still have to perform the hinting by running those programs, targeting some resolution
[09:17:14] <moon-child> I have yet to actually do anything with vr.  But it is interesting to me, and I know somebody who is doing things with it
[09:17:42] <sm2n> oh, I see
[09:17:53] <moon-child> (and the headsets are so expensive!)
[09:18:10] <sm2n> I assume you're talking about arcan
[09:18:21] <moon-child> yes
[09:18:38] <moon-child> (perchance you've seen me complaining about the lack of a protocol for non-rectangular framebuffers :)
[09:18:51] <sm2n> sadly my headset isn't supported and I don't have time to hack on it
[09:18:53] <sm2n> yeah
[09:20:28] *** Quits: sepanko (~sepanko@user/sepanko) (*.net *.split)
[09:20:29] *** Quits: contrapunctus (a75f5b1571@jabberfr.org) (*.net *.split)
[09:20:29] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[09:21:36] <sm2n> or maybe it is? it's unclear now
[09:21:49] *** Joins: minion (~minion@common-lisp.net)
[09:21:55] <sm2n> I really want to try out safespaces
[09:24:31] <sm2n> it's annoying how fiddly these things are
[09:27:31] *** Joins: sepanko (~sepanko@user/sepanko)
[09:58:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[10:11:08] <hayley> selwyn mentioned the idea of using metafonts to optimize for clarity in VR.
[10:12:15] <moon-child> that is an interesting idea
[10:12:50] <moon-child> I still need to look into metafont properly.  My recollection is it's paths on steroids?
[10:14:34] <moon-child> (or--a templating language for paths?  I don't think you can re-render a metafont every frame, unless you do so much preprocessing as to render re-parametrization impossible)
[10:17:27] <hayley> Something like that.
[10:17:54] <hayley> Rather than outlines of characters, you have a constraint solver working on the actual brush strokes used to draw characters.
[10:18:25] <moon-child> riight, i forgot there was a constraint solver
[10:18:41] <moon-child> that _definitely_ doesn't sound doable in real-time.  Especially given vr frames are smaller than traditional desktop
[10:19:21] <moon-child> especially since, given a page of text, you may have multiple instances of the same glyph, but you have to render them all separately
[10:19:29] <moon-child> since, post-perspective transform, they'll be different
[10:19:33] <hayley> I suppose you could produce a map of approximate distance -> bitmap and lerp through.
[10:20:03] <hayley> But for that to be smooth, your font can't change size based on distance, which might or might not be doable.
[10:23:00] <moon-child> you might as well give up and use msdfs, then
[10:23:17] <hayley> ¯\_(ツ)_/¯
[10:27:50] <|3b|> moon-child: i'm pretty sure hinting would be counterproductive in VR
[10:28:23] <moon-child> why?
[10:28:25] <|3b|> your "pixel grid" probably isn't a grid, and definitely isn't one after transformations
[10:28:54] <moon-child> you're still ultimately rendering to a collection of discrete pixels
[10:29:00] <|3b|> and you also would have mismatches between eyes
[10:29:13] <moon-child> and so it seems plausible you can increase the comprehensibility of text by aligning your curves more closely with those pixels
[10:29:36] <|3b|> you are usually rendering to a square texture that is then distorted to match inverse of distortion of lenses
[10:29:59] <|3b|> so the "grid" in text space is a bunch of curves on the actual device
[10:30:35] <moon-child> I see no reason why you can't apply the distortion transformation while rendering, instead of after
[10:30:42] <|3b|> and then you have reasonable odds that you aren't even drawing to something with a regular grid of "R,G,B" subpixels per element of the grid being sent to the device
[10:31:39] <|3b|> might be a rgbg or whatever pattern with fewer R and B subpixels than G (since that's what phones tend to have, which is what makes cheap displays available for VR)
[10:32:50] <|3b|> assuming you know the distortion transform, and can get the VR API to send pre-distorted images to the hardware, you could theoretically distort things yourself
[10:33:17] <|3b|> but no guarantee the transform is available in some nice format that would be convenient to use on a GPU
[10:34:27] <|3b|> and even if all that stuff magically did work, you'd still be shifting edges differently for each eye, which would be pushing things in and out perceptually. at best it would look odd, and wouldn't be surprised if it made people like me sick
[10:35:08] <moon-child> that is a good point about eye-differences
[10:35:24] <|3b|> also, you don't really need it as much as you might guess. VR has a lot of implicit temporal antialiasing just from running at 90+Hz combined with HMDs tracking micromovements of the head
[10:35:45] <|3b|> (or just noise in position measurements for that matter)
[10:35:54] <moon-child> re transform not being readily available--I have seen videos of people using vr, and it looks like they generally show a transformed image on the monitor.  Is that not what I think it is?
[10:35:56] <|3b|> amplified by angle vs distance
[10:36:28] <|3b|> the distorted VR videos are usually showing something like what is being sent to the hardwar
[10:36:54] <|3b|> but that doesn't tell you the transfer function you need to actually generate that from what you would render in user code :)
[10:36:56] <moon-child> hw applies an additional transform?
[10:37:17] <moon-child> (or transform is applied in a low-level driver as an implementation detail?)
[10:37:17] <|3b|> HW implies an analog transform in the form of lenses
[10:37:34] <moon-child> I mean, the headset, not specifically hardware
[10:37:35] <|3b|> API applies a transform to what you would get from normal opengl/dx/vk/whatever rendering
[10:39:20] <|3b|> and the combination of the transform in the API and the lenses makes the view through the lenses look like what you would expect
[10:41:32] <|3b|> http://3bb.cc/tmp/distortion-left.png is an example of what the transformation the API is doing might look like
[10:41:59] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:42:15] <|3b|> note the chromatic aberration, another reason it isn't a trivial thing to do on your own
[10:44:12] <moon-child> hmm, how does it do left/right eye?
[10:44:26] <moon-child> depth buffer somehow?  Or you give it two frames w/displacement yourself?
[10:44:44] <|3b|> and this is per HMD type (not sure if there is any per-device calibration on top of that, for example to adjust for any skew/shift in the placement of the display or whatever)
[10:44:50] <|3b|> which "it"?
[10:45:03] *** Joins: makomo (~makomo@user/makomo)
[10:45:23] <moon-child> ultimately, a separate image is shown to the left and right eyes.  How is that handled, and by which part of the stack?
[10:45:52] <|3b|> at the API level, it is usually pretty flexible... you ask the API for a transform matrix (one per eye), and render your scene to a texture for each eye as you normally would using that matrix, and pass the texture back to APic 
[10:46:02] <|3b|> API
[10:46:30] * |3b| grumbles about emacs autocompletion never working how i want it to
[10:47:01] <|3b|> if i remember right, you can configure things to use 1 texture per eye, both in 1 texture, or whatever
[10:47:23] <|3b|> then the API takes that, and does magic, and the HMD shows it to someone :)
[10:47:55] <|3b|> minimum amount of magic is distorting to match lenses and putting the result in the format expected by the device, which is completely arbitrary
[10:48:21] <|3b|> it might look like 2 displays (1 per eye) to the OS
[10:48:36] <|3b|> it might actually be 2 displays physically but look like 1 display to OS
[10:49:08] <|3b|> a fairly common case is 1 display (cheap phone panel for example), seen as 1 display by OS
[10:49:20] <|3b|> and it just puts one eye on one half, other eye on other half
[10:49:57] <|3b|> or it could be one eye on top, other on bottom (since phone displays are usually portrait)
[10:50:54] <|3b|> for the 2 displays shown as 1, it could act like the single panel case, or could be interleaving lines, or interleaving frames, or any random thing an HMD dev thought was a good idea
[10:51:44] <|3b|> (and some strange things might actually be good ideas, since those options all have different effects on latency)
[10:53:29] * moon-child looks at some openxr example code, is not enlightened.  Seems like it doesn't really care which eye is which
[10:55:08] <|3b|> from user code, you usually don't really care. API deals with the hard parts
[10:57:01] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[10:57:26] <moon-child> i mean, it's setting a transform matrix, but generating it itself, not getting it from the api
[10:57:56] <shka> https://media.discordapp.net/attachments/697424903858683947/917135555043672134/1638722083636.png?width=1015&height=761
[11:04:49] <|3b|> in the green box on right of first page of https://www.khronos.org/files/openxr-10-reference-guide.pdf it calls xrLocateViews per frame to get view/projection matrices
[11:05:19] <|3b|> SwapchainImage parts before that are to get the texture into which it should draw
[11:06:06] <|3b|> then it just uses those matrices and render targets and "Execute Graphics Work" is mostly just normal drawing like you would do for any 3d app
[11:07:25] <|3b|> (there are some effects that don't work well in VR, needs to be fast, etc, so it isn't just "throw in any rendering code", but still doing the same sorts of thing in general)
[11:08:24] *** Joins: notzmv (~zmv@user/notzmv)
[11:08:55] * |3b| thinks SDF-based rendering is much more useful for VR anyway
[11:10:15] <|3b|> modeling the shapes as a continuous function maps better to how things are displayed than trying to model it with a grid
[11:11:02] <moon-child> heh, 'sdf' is punned.  I was talking about signed distance fields, not signed distance functions
[11:11:26] <|3b|> well, the field is just a sampling of the function :)
[11:12:01] <moon-child> yea but that's a _lot_ less satisfying
[11:12:15] <|3b|> have you used any recent HMDs (or non-recent ones for that matter)?
[11:12:18] <moon-child> and something something, shannon sampling theorem need 2x samples to get a correct result
[11:12:44] <moon-child> |3b|: nope.  would like to, though
[11:13:40] <|3b|> and "correct" from the perspective of shannon sampling theorem may or may not be what you actually want anyway (see hinting, where we use the edges of our samples as an infinite frequency basis function so we can make sharp edges)
[11:14:03] <hayley> .oO(Ain't that Nyquist?)
[11:14:06] * |3b| would definitely advise not trying to do things "for VR" without actually trying the VR :)
[11:14:44] <|3b|> hayley: same thing i think?
[11:15:08] <moon-child> nyquist-shannon
[11:15:18] <|3b|> yeah
[11:15:25] *** Joins: treflip (~user@95.79.32.99)
[11:15:57] <hayley> Shannon's big one was "you want lb(n) bits to represent n states", Nyquist was 2f for representing a function with a maximum frequency component of f.
[11:16:05] <|3b|> very hard to predict how things behave in VR just from specs and screenshots on a normal display
[11:16:06] <hayley> s/component/harmonic/
[11:16:18] <hayley> Ah, it is Nyquist-Shannon.
[11:17:58] <|3b|> like how subpixels are actually pretty spread out when you stretch 1-2k pixels across a 90+degree field of view, but also how that doesn't matter as much as it seems like it might because the view is constantly moving and your brain focuses on the stuff it reconstructs
[11:19:28] <|3b|> like how 24 Hz, even flashed twice, is horrible for arbitrary video, but it doesn't matter because most of the time the content is not arbitrary, and was created to account for that limitation where needed, and also because you are paying attention to something else anyway 
[11:20:55] <|3b|> (24 example is watching physically projected movies in person, unrelated to VR in case that wasn't obvious)
[11:21:38] <|3b|> (just an example of something that is similarly hard to judge)
[11:42:58] <|3b|> actually, thinking about it, hinting wouldn't even be a good idea in one eye... if hinting tries to do something like "keep this stem at least 1 pixel wide and the gap next to it at least 1 pixel wide", those 2 pixels might represent a few mm in the center of the view and a few cm near the edges, and that's probably a lot more change than you want
[11:43:51] <|3b|> and in particular when the view is constantly moving, your text would look like it is boiling or something as it moved around the screen
[11:44:40] <|3b|> (and that's if you magically had hinting that would handle cases where the theoretically vertical stem was at a 3 degree angle from vertical because that's how your head happened to be oriented)
[11:50:53] <hayley> https://www.youtube.com/watch?v=kzMo7p-dd3Q
[11:50:54] -ixelp- The Misunderstanding (Peel Session 3) - YouTube
[12:18:39] * gilberth can't sleep, is bored, and in bad mood.
[12:26:55] <moon-child> :/
[12:28:14] <shka> gilberth: good morning :-)
[12:29:06] <gilberth> Morning, haha. Did I mention that I am in bad mood?
[12:30:06] <gilberth> With git, do I always have enumerate all modified files with 'git add', when I want to commit^Wpush?
[12:30:35] <hayley> git add .
[12:30:50] <moon-child> git commit -a
[12:31:01] <moon-child> usually I say  git commit -am '...'  and don't worry about anything more
[12:31:12] <gilberth> hayley: That would add any file, won't it? Also some junk files I may happen to have lying around?
[12:31:21] <hayley> Yes.
[12:31:28] <moon-child> (modal interfaces are awful most of the time because they require context-switching and human-computer synchronization)
[12:31:37] <moon-child> gilberth: git commit -a  will only commit files that are already checked in
[12:31:39] <moon-child> unliked git add .
[12:32:26] <gilberth> moon-child: Ok. Good to know. Thanks!
[12:33:14] * hayley wants to play with more GCs in the Racket language for that, but the heap visualiser uses decimal?
[12:33:16] <gilberth> So, do I get it right? "git commit -am 'hacked along'" is the best ersatz for "cvs commit"?
[12:33:53] * moon-child does not know what 'cvs commit' does
[12:33:58] * gilberth is still a git noob and his brain is hard-wired to CVS.
[12:34:42] <gilberth> moon-child: It would "push" all changes to file under vc to the repository.
[12:35:22] <hayley> Apparently we are in 1960 and the "mutator language" doesn't know MAP, SECOND, or even LIST.
[12:35:59] <gilberth> I am really having trouble with git, I would need a cheat sheet.
[12:36:17] <moon-child> yes, git really is a mess
[12:37:07] <gilberth> But as everyone uses it, I better learn to cope with it. Though I still use CVS, but that would be bad for possible collaboration, I guess.
[12:37:22] <moon-child> if you are tired and in a bad mood it may not be the best time to pick it up :P
[12:37:31] <moon-child> I think there may be some cvs-git proxies you can use.  But idk
[12:37:57] * moon-child also tired and in bad mood, latter may improve by eating but I don't feel like making food and have no leftovers
[12:38:02] <gilberth> I still don't speak git's language. What is a stage? A branch? Why does git give me an error message, I need to google, in 50% of the cases I talk to it?
[12:38:21] <hayley> It is also nice that Racket cannot tell me where I broke a contract in the GC, just where it was defined.
[12:38:30] <shka> gilberth: i recommend reading pro git
[12:38:35] <shka> as for details
[12:38:55] <shka> i think about branch as a forward linked list
[12:38:59] <shka> of commits
[12:39:17] <shka> well, and sometimes 3 way merge
[12:39:23] <gilberth> moon-child: When I am in bad mood, I have no appetite at all. And did I mention that preparing proper food for just yourself feels pointless. Yes, I should take more care of myself.
[12:39:34] <hayley> (eq? 'x 'x) ⇒ #f; Ah, good start.
[12:39:42] <shka> https://www.youtube.com/watch?v=ZH6V9CwV7B4
[12:39:43] -ixelp- Hyperdrive! - YouTube
[12:40:14] <moon-child> gilberth: i distinguish appetite from hunger.  I don't particularly _want_ to eat, but i still know i'll feel better if I do
[12:40:46] <moon-child> and, hmm, I had chocolate recently.  Caffeine has a tendency to drain my blood sugar
[12:41:01] <shka> https://git-scm.com/book/pl/v2
[12:41:01] -ixelp- Git - Book
[12:41:06] <gilberth> shka: I just want to have a central (yes, that the error in reasoning) repository of my projects with local, perhaps multiple, working copies. And ideally I want to somehow name what I would call stable versions. And some of my code is in production.
[12:41:07] <shka> very useful book
[12:41:11] * hayley spots multiple instances of the symbol X. Do they really want her to handle INTERN too now?
[12:41:17] <shka> it even has polish translation...?
[12:41:36] <moon-child> gilberth: stable versions usually are done with tagging, sometimes people use branches for those though
[12:41:58] <shka> gilberth: in your case, i would call the master/main branch STABLE
[12:42:38] <gilberth> moon-child: My problem is that I very good at ignoring my body. Helps with the pain I have once in a while, but not in general. Hence the tendency to neglect myself. I really need to work on the latter, it's not good.
[12:42:44] <shka> and you simply periodically merge into master
[12:43:14] <shka> and if you want to have release like v1.0.2 you simply create new tag v1.0.2 on master and call it a day
[12:44:26] <shka> gilberth: i also recommend installing magit in emacs, it is very handy interface for git
[12:44:29] <moon-child> gilberth: I have a tendency to dissociate.  Sometimes can overcome it with willpower or physical activity.  More often not :/
[12:44:33] <gilberth> Ok. And I can later checkout this particular tagged version?
[12:44:38] <shka> yes
[12:44:55] <shka> gilberth: that's the point
[12:45:22] <gilberth> shka: Emacs is nice, but for a start I would prefer to use the shell. So that I know what is going on.
[12:45:59] <gilberth> moon-child: We do too much thinking. That's the trouble. I guess, at least.
[12:46:16] <shka> gilberth: i see
[12:47:55] <gilberth> shka: Ok, and went I want to patch v1.0.2, but not the most recent version, what I'd do then? Branch? Commit changes and tag say 'v1.0.2pl1'?
[12:48:10] <gilberth> Or is that too much CVS thinking?
[12:48:15] <dave0> gilberth: thinking about stuff only ever got me in trouble :-p
[12:48:15] <moon-child> yes.  Too stuck in my head, not enough action.  Well, probably intellectual pursuits are harder that way...
[12:48:30] <moon-child> 'want to patch v1.0.2'  that's why people sometimes use branches for versions
[12:48:42] <shka> gilberth: checkout to tag v1.0.2, create new branch starting from that
[12:48:43] <moon-child> so instead of making a v1.0.2 tag, make a v1.0.2 branch and push new commits onto it
[12:48:53] <shka> apply your changes 
[12:49:02] <moon-child> nice thing about that is you can push the same commits to multiple versions with not too much manual effort
[12:49:08] <shka> create new tag v1.0.2
[12:49:19] * hayley writes INTERN herself and mumbles that interning symbols is not something a GC does.
[12:49:30] <hayley> At least now (eq? 'x 'x) works.
[12:49:48] <gilberth> moon-child: Yep. When I am in the middle of thinking/hacking all of the physical world disappears and I am deaf to what my body tries to tell me. Not good.
[12:50:39] <gilberth> moon-child: I see. Pushing changes to multiple versions or branches is a major pain with CVS.
[12:51:15] <hayley> (deriv '(+ (* x x) x) 'x) ⇒ Value at location 101: (+ (+ (* 1 x) (* 1 x)) 1)
[12:52:19] <moon-child> tell me there are canonicalizations to get rid of those
[12:52:21] <moon-child> ._.
[12:52:29] * gilberth has an old-school home:lisp;patches;**;*.*.* directory for ages. REQUIRE would look there.
[12:52:57] <shka> gilberth: i mean, git is not BAD, it is complex 
[12:52:59] <gilberth> hayley: Your DERIV lacks the symbol to derive over. And since when is * a binary operator?
[12:53:12] <shka> but if you work solo, most of it's complexity can be avoided
[12:53:18] <moon-child> gilberth: it does not
[12:53:29] <hayley> gilberth: What is the 'x at the end for? And it's because I have no pattern matching, nor MAP, so I am playing it stupid.
[12:53:30] <moon-child> (deriv '(+ (* x x) x) _'x_)  underliend symbol to derive over
[12:53:43] <gilberth> shka: Yes, and different and picky.
[12:53:51] * gilberth was blind. His bad.
[12:54:50] <shka> gilberth: but if you simply work solo you will gonna need git commit, git status, git checkout, git branch, git push, git add, git tag
[12:55:04] <hayley> Foo! I don't even have REQUIRE to import that shit from Racket.
[12:55:28] <hayley> (define (list . xs) xs) also doesn't work.
[12:55:49] <gilberth> shka: Yes, I figured that. And what ever dance you need to init a bare repository.
[12:56:13] <shka> and although it may feel weird, it makes sense once you have good grasp of git model as simply linked commits
[12:56:24] <shka> git commit is a little bit like cons cell
[12:56:34] <gilberth> ok.
[12:56:37] <ck_> yes, don't think of 'branch' and 'tag' as completely separate thigns
[12:57:12] <ck_> a git repository is a DAG of commits, a branch, tag and so on just points to a single commit hash
[12:57:17] <shka> and branch/tag are simply different ways to NAME a commit
[12:58:18] <shka> honestly, it would be completely trivial if not for the merge
[12:58:18] <gilberth> So there is no real difference between a branch and a tag? /me scratches head.
[12:58:43] <ck_> tags are more permanent, you can't just relink them without removing them as an intermediate step
[12:59:04] <moon-child> hmm, I thought j had a symbolic differentiator, but it seems to be kind of garbage
[12:59:19] <moon-child> I wrote most of a term-rewriter, I should really finish that
[12:59:36] <ck_> whereas you can just have a branch name identify something else by using git reset. That's not possible with tags
[12:59:38] <shka> gilberth: or in other words, branch is like lexical variable pointing to list, and you CL:PUSH to it
[13:00:01] <shka> so it mutates that variable ;-)
[13:00:16] <shka> tag can't be mutated
[13:00:21] <gilberth> ok. /me tries to rewire his brain.
[13:00:45] <semz> git's a great example of how a model masquerading as a different model causes all kinds of understanding problems imo
[13:01:05] <ck_> where's the masquerade?
[13:01:20] <shka> gilberth: think about git checkout HEAD
[13:02:16] <semz> well do you normally think about CVS as a DAG?
[13:02:17] <gilberth> What is that "HEAD"? A branch? Something else? What is "master"?
[13:02:45] <gilberth> semz: No, more of like a tree.
[13:02:46] <shka> gilberth: HEAD is just your current commit
[13:02:56] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[13:03:13] <shka> you may think of it as "the current cons"
[13:03:25] <shka> and then you can git checkout HEAD^
[13:03:26] * hayley gets a dereference error when she already tested the type.
[13:03:35] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[13:03:36] <gilberth> Is that always the cons I work on?
[13:03:48] <shka> which is, like, let's say CDR
[13:03:53] <shka> or rather: pop
[13:04:02] <shka> gilberth: if you are on commit, yes
[13:04:10] <shka> and you almost always are
[13:04:29] <gilberth> Ok. So my HEAD is not your HEAD, right?
[13:04:34] <ck_> why pop? "HEAD^" doesn't alter anything
[13:04:54] <shka> ck_: git checkout HEAD^ alters your current commit
[13:05:05] <shka> gilberth: yeah, HEAD is special
[13:05:12] <shka> so my point is
[13:05:30] <shka> you can point to a commit using hash, branch, tag or HEAD fuckery
[13:05:40] <shka> but it is all about commits
[13:05:54] <shka> just like in lisp, there is no list, there are only cons cells :-)
[13:06:21] <gilberth> Good, good. ok. And HEAD is of what nature? A branch? Something else? Does it matter? *puzzledlook*
[13:06:44] <shka> HEAD is magical word, i think that you can't name branch HEAD
[13:07:07] <gilberth> ok
[13:07:27] <gilberth> But it still names a node in the DAG, doesn't it?
[13:07:32] <shka> yeah
[13:07:33] <ck_> have you ever read some documentation on git, gilberth?
[13:07:52] <shka> gilberth: namely the current node
[13:08:02] <gilberth> ck_: Plenty. But somehow none really was enlightening.
[13:08:05] <shka> and from that you can go to parent
[13:08:13] <shka> or parent of a parent
[13:08:27] <shka> it is like cddddddddr stuff
[13:08:31] <ck_> I see
[13:08:51] <shka> gilberth: the main difference is that sometimes commit has two parents, not one
[13:09:35] <shka> which is needed to represent merges
[13:09:36] <hayley> lol, symbol? calls deref even when I checked that the value is not immediate.
[13:09:52] <gilberth> Good. So a tag is pointer to a specific node, that can't change. A branch is like a global variable pointing to some node? Or is that CVSish again?
[13:10:23] <shka> gilberth: branch also points to some node (commit) but you can move branch to a new commit
[13:10:40] <gilberth> This is what I meant.
[13:10:45] <shka> yeah
[13:11:09] <shka> and the point is that branch is supposed to point to the newest commit 
[13:11:15] <shka> given a context
[13:11:30] <shka> so let's say, you make a branch for a new feature 
[13:11:32] <gilberth> Like (defvar *foo-branch* ...) and you later Do (PUSH nada *foo-branch*)
[13:12:08] <shka> you work on that feature a bit, have a change of heart, think that it was a stupid idea
[13:12:36] <shka> and then you leave that branch hanging, thinking that you may go back to it someday
[13:12:55] <shka> while you create new branch for optimization
[13:13:01] <gilberth> Or perhaps never, I guess.
[13:13:11] <shka> hehe, this also happens ;-)
[13:13:32] <gilberth> May I rename branches?
[13:14:04] <gilberth> I mean from "best-since-sliced-bread" to "most-silly-idea-ever"? :-)
[13:15:38] <moon-child> git branch -m best-since-sliced most-silly-idea
[13:16:04] <ck_> because a branch is just a name for a commit hash, you can have as many as you want
[13:16:09] <shka> gilberth: i think so, but i never actually did that
[13:16:11] <moon-child> but afaik that is logically creating a new branch and erasing the old one, rather than changing some metadata; which matters for distributed
[13:16:12] <gilberth> moon-child: When you say that, it sounds so easy.
[13:16:40] <shka> i mean, even if not, you can make new branch starting from old and delete the old branch
[13:17:48] <hayley> There is nothing I can do, because the "FFI" between GC toy language and Racket is broken. It'll try to unbox GC language objects, even if they are not unboxable (i.e closures or cons cells).
[13:18:10] <gilberth> Thanks! I believe I now have a better mental model of what is happening and how misleading (to me) some terms are.
[13:18:19] <hayley> Well, except for testing CONS? before anything else, but that violates the SICL style guide and also that Racket class where they "trust the natural recursion".
[13:18:33] *** Joins: cranium (~cranium@user/cranium)
[13:18:53] <hayley> (IOW handle the base cases first, so numbers and symbols, then the inductive cases, i.e. cons cells.)
[13:41:08] <hayley> And now this visualiser is useless for visualising semispaces, cause it insists on splitting my heap into five shaded parts. But a semispace collector tends to have two parts.
[13:43:42] <hayley> Seems it just highlights every 50 words, so I have to have a 200 word heap.
[13:58:48] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:15:56] <hayley> Now my crappy semispace GC works. Though I need to generate more garbage.
[14:34:04] * hayley uploaded an image: (24KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/SBvuMjQouKQxvSidYVqOvMeE/cubic-deriv.png >
[14:35:38] <moon-child> 1 1 1∘⊥
[14:37:04] <moon-child> (wait no that's wrong.  idr how ⊥⊤ work)
[14:38:20] <gilberth> What is a semispace tip?
[14:39:27] <moon-child> presumably the current offset?
[14:40:12] <hayley> "Semispace flips". Blame LibreOffice font rendering.
[14:40:39] <moon-child> (alternately, it's advice on semispaces)
[14:40:48] * gilberth checks his glasses.
[14:40:59] <hayley> Semispace pro tips: use beach compacting GC lol
[14:41:17] <gilberth> Why compact a beach?
[14:41:28] <hayley> http://metamodular.com/SICL/sliding-gc.pdf
[14:41:37] <hayley> beach compacting GC, similar to beach dispatch.
[14:48:28] * hayley writes a program which runs out of memory with 666 words. Coincedence?
[14:48:50] <dave0> the number of the beast!
[14:49:13] <semz> we conjure the demons of the computer with our spells
[14:49:18] <gilberth> At least it is not "69" again.
[14:50:30] <dave0> sex-ty-nine
[14:50:43] <hayley> The working set is too large for that this time.
[14:50:46] <dave0> https://www.youtube.com/watch?v=WxnN05vOuSM
[14:50:47] -ixelp- Iron Maiden - The Number Of The Beast (Official Video) - YouTube
[14:51:12] * hayley asks for the first 3 derivatives of x³ + x² + x
[14:51:17] <gilberth> dave0: Right.
[14:53:02] * hayley uploaded an image: (22KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/EuZwjEqWhaBOmMtGPorGnRXG/three-derivatives.png >
[14:55:02] <gilberth> And wait a second! You use LibreOffice for plots?
[14:55:13] <hayley> When lazy, yes.
[14:55:24] <gilberth> Oh!
[14:55:28] <hayley> If I showed them outside #lispcafe, I would use gnuplot.
[14:56:12] <gilberth> Interesting how you think about us #lispcafeians.
[14:57:00] <gilberth> Or is it "of"? I'll never learn that.
[14:57:03] <hayley> I don't intend to get filthy rich and famous by posting about stupid semispace GCs in #lispcafe.
[14:57:16] <hayley> Either "of" or "about" would work there.
[14:58:31] <gilberth> ok. So you're plan is to get filthy rich by posting about fine semispace GCs exactly where? And is gnuplot the quick route to become rich? Questions, over questions.
[14:59:00] <hayley> 1. r/rust 2. If you can think of a sarcastic title, yes. [n=2]
[14:59:01] <gilberth> Extra single quote is for moon-child again.
[15:02:12] <hayley> Next I should do mark-compact, I guess.
[15:03:21] <gilberth> What do you plan? Collecting a nursery/stack?
[15:05:33] <gilberth> And btw doesn't beach have an implementation yet? Must have been some 20 years ago, he talked about that.
[15:06:27] <hayley> I can't test stacks in the Racket GC toy, sadly.
[15:07:03] <hayley> IIRC there is (approximately usable) code for beach's compacting GC in the paper.
[15:07:21] <hayley> But the Handbook says this is the Lisp 2 compacting algorithm, so it must be good.
[15:07:46] <gilberth> Nurseries?
[15:10:17] <hayley> I could do generational GC, yes.
[15:11:27] * hayley wonders if VACUUM on your favourite SQL database stops the world.
[15:12:05] <gilberth> Wouldn't a RE Nightmare be a good bechmark for a GC?
[15:12:33] <hayley> http://www.interdb.jp/pg/pgsql06.html suggests both, a concurrent one doesn't compact, and a STW one does compact.
[15:13:00] <hayley> Still derivatives, yes. But the OMRN derivative stuff is far too messy to do without structures and a pattern matcher IMO.
[15:16:10] <gilberth> Who needs structures? Conses all the way!
[15:16:45] <shka> gilberth: i hope that this helps, commits are like cons cells having two parents, branches are like setfable places where you can assign cons cell, and tags like uh, unsetfable places
[15:17:10] <shka> and everything else either creates, switches or modifies commit cell
[15:17:30] <shka> that's how i think about git anyway
[15:18:34] <gilberth> Two parents? What you mean by that? Who are those two?
[15:18:50] <shka> well, notice that there are merges in git
[15:19:04] <shka> and this will lead to a merge commit having two parents
[15:19:14] <gilberth> hayley: A hash table made from conses would be challenge. Don't you have vectors, too?
[15:19:37] <shka> gilberth: you can do critbit trie :-)
[15:19:48] <gilberth> shka: Sure. But is every commit a merge?
[15:19:53] <shka> no
[15:19:58] <gilberth> good.
[15:20:09] <gilberth> You puzzled me for a minute.
[15:20:24] <shka> but to simplify, two parents, but one is mostly NULL
[15:20:43] <shka> that's a git commit data structure let's say
[15:21:03] <gilberth> Only at most two?
[15:21:03] <hayley> gilberth: You could do a binary tree, I guess. But I don't have vectors.
[15:21:34] <shka> gilberth: yeah, only 3 way merge in git 
[15:21:50] <gilberth> hayley: With a binary tree, we could as well skip hashing in our case, I believe.
[15:22:02] <shka> so you can't merge more then two commits at the same time
[15:22:11] <shka> so only up to 2 parents
[15:23:22] <shka> and git uses SHA-128 hashes as "address" of commit 
[15:23:37] <gilberth> What is a "ref"? Is it that?
[15:24:03] <shka> uh, those are internals 
[15:24:24] <shka> but essentially, yeah
[15:24:32] <gilberth> I see those in error messages and the like.
[15:24:58] <gilberth> And git always complains when I talk to it. Almost.
[15:28:55] <selwyn> thinking of getting into magit
[15:29:03] <ck_> magit is very nice, you should
[15:29:18] <selwyn> is it a complete replacement for the command line?
[15:29:25] <ck_> yes
[15:30:44] <ck_> shka: there is no two commit limit for merges, you can have an arbitrary number of parents
[15:30:57] <shka> that's new
[15:31:01] <shka> well, here you go
[15:33:29] <ck_> gilberth: have you looked at graphical tools for visualization? I think it would clear some things up for you. Try "gitk --all"
[15:34:27] <mfiano> Hmmm. Now I'm trying to figure out if CFFI has a builtin was to deal with an annoying Unix design flaw^W^Widiom.
[15:34:40] <gilberth> ck_: No, I have not.
[15:34:54] <mfiano> s/was/way/
[15:35:05] <ck_> please do. you'll have a much better understanding of what your repository looks like
[15:35:10] <selwyn> hayley: you have a good memory
[15:35:43] <selwyn> working with metafont is a low priority atm though
[15:35:53] <hayley> Disagree, I need to tell if it is causing my computer to reboot every so often or not.
[15:36:29] <hayley> Guess you're still running the hot dog stand?
[15:36:37] <mfiano> re: Unix syscall return values: "Upon successful completion, the value 0 is returned; otherwise the value -1 is returned and the global variable errno is set to indicate the error."
[15:37:27] <hayley> I think not, but it's common enough that some libraries would have wrappers.
[15:37:45] <hayley> eazy-opencl does iirc.
[15:38:27] <mfiano> How can you be sure that the global has your error, and not some parallel process's?
[15:39:10] <hayley> errno is supposed to be thread local iirc.
[15:39:27] <gilberth> ck_: Ok. I can browse the DAG, although mine is a linear list.
[15:39:28] <hayley> The next question is if CFFI knows thread locals then.
[15:40:32] <mfiano> This is still annoying. Why can't they just use return error codes...
[15:40:53] <hayley> Seems errno should just work FWIW.
[15:40:57] <gilberth> Strictly speaking 'errno' is a libc thing and not a syscall thing.
[15:42:24] <hayley> w.r.t Lisp 2 GC: it wants another word per object for a forwarding pointer. Still better than two semispaces, given that all my objects are at least 2 words.
[15:42:34] <shka> gilberth: that's why i said that git is actually pretty easy to use when you are the only developer :D
[15:43:39] <hayley> IIRC any sensible malloc wants another word for lists too?
[15:44:56] <ck_> gilberth: all the branches and tag names will show up there, and seeing that will hopefully clear up any previous conceptions of how "a branch" should look like
[15:45:36] <selwyn> is it actually possible to learn git then?
[15:45:49] <ck_> I've never understood this stance
[15:47:25] <ck_> people at work come to me and ask me to "repair" their git state, I don't know how they get their understanding of what is the case so far away from what their tools tell them
[15:48:11] <ck_> I am of moderate intelligence, that can't be the reason. I used svn and cvs before, that can't be it either.
[15:48:48] <gilberth> ck_: Well, still doesn't help with git commands. And not with cryptic error messages which pop by out of thin air. Or at least it feels that way.
[15:49:19] <ck_> but the docs are so thorough though, aren't they?
[15:49:57] <ck_> if you use git like a single-branch svn repository, there's probably three things you need out of the very many commands git offers
[15:50:45] <gilberth> Yes, and I still get complains all the time. For what ever reason. Google is my best friend.
[15:51:01] <ck_> well, maybe we can find the reason
[15:51:15] <ck_> I'll try the other way by using svn again
[15:51:37] <ck_> $ svn make new repository
[15:51:38] <ck_> Unknown subcommand: 'make'
[15:52:07] <ck_> this error message comes out of thin air. I don't know how to use svn.  Such a bad source control system
[15:52:44] <gilberth> I needed three takes to create a new blank repository to work with.
[15:52:57] <ck_> what were the three takes
[15:54:05] <gilberth> Honestly I don't remember the exact commands. Key was that I needed a "bare" repository, which somehow is sth else which works.
[15:54:12] <ck_> https://git-scm.com/docs -> "Getting and Creating Projects" -> init -> EXAMPLES: "git init", "git add .", "git commit"
[15:54:12] -ixelp- Git - Reference
[15:54:35] <gilberth> Yes, and exactly that was not working for me.
[15:55:02] <ck_> ok
[15:55:10] <gilberth> I had painted me into a corner within no time.
[15:55:57] <ck_> ok yes, I understand
[15:56:33] <gilberth> It was pjb who helped me out and gave the advice to create a bare repo. And then it worked. And keeps working so far.
[15:58:24] <ck_> I'd have liked to understand the reasons, but it seems there's no way to do that here
[15:58:53] <shka> selwyn: not from a jedi
[16:07:32] <gilberth> ck_: Thing is I followed the instructions and said "git init" as mentioned. Then it said how to work with remote repos, easy. I switched to another machine and cloned there. I wanted to see changes made on one machine on the other. Didn't work, or at least not as I expected, git starting complaining about having lost an idea, where it is. And the more I tried to give git what it wanted, the worse all got.
[16:12:10] <ck_> I see, and can understand the confusion about "remote tracking branches" and so on. Thanks for expanding on it.
[16:19:17] <selwyn> shka: lol
[16:19:26] <shka> also
[16:19:38] <shka> common lisp is a pathway to many powers
[16:19:48] <shka> some considered, unnatural
[16:20:01] * hayley uploaded an image: (39KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/LpbjVmqksskJBhcrgHglaqrx/stack-allocation_thumbnail_1200.jpg >
[16:21:07] <shka> hayley: sounds like something what go programmer would say 
[16:22:08] <hayley> shka: I made the meme with a gopher too, but it'd have to be about how value types don't avoid producing garbage imo.
[16:23:50] <hayley> ...and furthermore that escape analysis is seen as a reason to not have generational GC. Tell me when my compiler IR follows LIFO I guess.
[16:24:58] <gilberth> Is escape analysis the best invention since sliced bread? The new hot s***?
[16:25:47] <gilberth> The savior?
[16:25:51] *** Joins: random-nick (~random-ni@87.116.181.93)
[16:26:08] <gilberth> The holy grail?
[16:29:08] <shka> gilberth: the final seal
[16:29:12] <shka> *seel
[16:29:22] <shka> jesus, it is not even funny anymore
[16:30:20] <gilberth> "seal" would work, too. The seventh.
[16:33:16] <shka> https://www.youtube.com/watch?v=PptHWHfnCnY
[16:33:17] -ixelp- Iron Maiden - "Seventh Son of a Seventh Son" - YouTube
[17:20:00] <selwyn> https://www.youtube.com/watch?v=EZQUVZKrH3I
[17:20:00] -ixelp- Highlander Music Video: Queen - Gimme the Prize - YouTube
[17:21:04] <selwyn> queen does metal
[17:35:53] *** Joins: Catie (~user@user/catie)
[18:55:44] <dave0> nite all
[18:56:08] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:15:57] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:18:39] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:34:04] <sm2n> |3b|, moon-child: I'm not too sure about the hinting stuff, but <https://github.com/SimulaVR/Simula> claims to have a shader for clearer text rendering in VR that I've been meaning to look into, and the output looks kind of like bad hinting
[19:34:06] -ixelp- GitHub - SimulaVR/Simula: Linux VR Desktop
[19:35:12] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[19:35:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:43:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[19:44:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:46:45] *** Joins: x88x88x- (~cheeg@gateway/vpn/pia/x88x88x)
[19:50:12] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:17:40] <ck_> selwyn is probably interested in this as well
[20:22:56] *** Joins: makomo (~makomo@user/makomo)
[20:31:43] *** Quits: x88x88x- (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 265 seconds)
[20:37:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:48:44] <selwyn> vr requires text to be thought of in a whole different way
[20:48:55] <selwyn> it is not just a technical matter of applying a filter
[20:49:43] <selwyn> every time there is a technical advance, you have to rethink how you do text
[20:50:23] <shka> eh, i finally figured out how to enable usbip
[20:51:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:51:20] <selwyn> e.g. once cars and trains were introduced, it became necessary to have signage that was visible at speed
[20:51:39] <selwyn> so they invented this classic font https://en.wikipedia.org/wiki/DIN_1451
[20:52:06] <selwyn> once computers were introduced, we had to think about how to render them nicely, which is a massive topic in and of itself
[20:52:37] <selwyn> which necessitated new fonts and new advances in typography
[20:53:33] <selwyn> now that there is virtual reality, you have the prospect of text that can be viewed either very close or relatively far away from the viewer
[20:53:48] <selwyn> it can also dynamically change its appearance depending on that distance, or other factors
[20:54:15] <White_Flame> those 2 specific issues aren't _that_ different than non-VR 3d graphics, are they?
[20:54:29] <selwyn> i would claim that they are
[20:55:29] <selwyn> for example, the terminal in https://github.com/SimulaVR/Simula looks nice enough, but i guarantee that that terminal would be difficult for anyone to look at in vr
[20:55:30] -ixelp- GitHub - SimulaVR/Simula: Linux VR Desktop
[20:55:35] <White_Flame> granted, most non-vr games actually communicate more with 2d text, or for instance put the camera to a fixed position to in-world 3d 'screens'
[20:55:46] <selwyn> there is just too much information there
[20:56:13] <selwyn> i do emacs in vr but it is a challenge, i usually have to double the point size and accept only having two buffers available
[20:56:21] <White_Flame> I would say it depends on the headset resolution
[20:56:28] <selwyn> well, maybe
[20:56:37] <selwyn> but we have to work with the headset resolutions that we have
[20:56:43] * edgar-rft wants a font to see text that is written at the other end of the universe
[20:57:11] <White_Flame> edgar-rft: then you need to wait past micro-LEDs into like femto-LEDs or smt
[20:57:30] <selwyn> anyway
[20:58:32] <selwyn> we need metafont for this reason - to describe parametric fonts that can change according to context
[20:59:15] <selwyn> otherwise your text user interfaces will inevitably be designed for a computer screen and fall flat
[20:59:52] <selwyn> although avoiding text is generally good vr user interface design advice, i believe its down to that reason
[20:59:59] <selwyn> text doesn't have to look shitty in vr
[21:00:12] <White_Flame> I find it hard to read text on 3d surfaces like street signs etc in non-vr 3d games as well
[21:00:42] <White_Flame> only in-world billboard sized things are generally legible without a lot of stopping & getting close
[21:01:06] <White_Flame> so it was that specific problem that I think affects both vr & non
[21:02:02] <selwyn> its more that text feels overwhelming
[21:02:26] <selwyn> not easy to explain
[21:02:55] <selwyn> looking at simulavr
[21:03:32] <selwyn> wow, its a whole window manager
[21:03:51] <White_Flame> I've only used PSVR, so I get the worst case scenario in terms of res
[21:04:07] <White_Flame> and yeah, it's hard to read generally speaking because it doesn't "stand still" with respect to the pixel grid
[21:04:28] <White_Flame> even if it's reasonably sized enough to not distort as those micromovements happen
[21:04:54] <selwyn> tfw no fireworks though
[21:05:06] <selwyn> https://www.youtube.com/watch?v=eMsMm_q-akI
[21:05:06] -ixelp- Trial VR - YouTube
[21:05:59] <selwyn> no, psvr is not the most fun in that respect
[21:10:58] <selwyn> again, the notion of window manager is something that we probably have to dump, or at least modify heavily in vr
[21:11:05] <selwyn> its built for a different world
[21:11:13] <White_Flame> right
[21:11:22] <White_Flame> replace "desktop" with "space"
[21:11:39] <White_Flame> even the notion of "window" is unnecessary
[21:11:55] <selwyn> i feel that while there are people who do think very hard about these design issues in vr, there are not that many of them, and they don't have close ties with the hobbyist community
[21:12:04] <White_Flame> but initial 3d members of the workspace can certainly be "legacy" 2d rectangles of pixels ;)
[21:12:12] <selwyn> yes, that is my approach
[21:12:21] <selwyn> great emacs quad in the sky
[21:12:57] <selwyn> with a repl to the lisp process that is rendering the whole experience
[21:12:59] <White_Flame> I definitely want to get more into PC VR, but I don't have the setup for it.  I think that's something to do after I move (hopefully) next year
[21:13:16] <selwyn> i am still ambivalent about the whole thing
[21:13:31] <White_Flame> I mean as a dev environment & virtual productive space
[21:13:57] <selwyn> to develop stuff that isn't necessarily vr?
[21:14:16] <White_Flame> either way, to have a 3d space as the default environment
[21:14:50] <White_Flame> and more importantly, a intuitively navigable local 3d space, as opposed to needing controls
[21:15:29] <selwyn> it would be nice to have a virtual reality version of my room that i could just walk around and interact with
[21:16:05] <selwyn> e.g. org files as posters on the walls that i can touch to expand, and so on
[21:18:16] <White_Flame> how long can you comfortably wear your headset?
[21:18:21] <selwyn> uh
[21:18:51] <selwyn> pretty sure i have gone over an hour while gaming
[21:19:02] <selwyn> but doing this, usually less
[21:19:38] <selwyn> i haven't got the experience down to the point where i can have the headset on for an hour
[21:19:51] <selwyn> without needing to take it off
[21:20:16] <selwyn> i can't really touch type so sometimes i have to just look at the keyboard
[21:20:40] <selwyn> if the render loop hangs while rendering, i might even have to restart the entire lisp image
[21:20:58] <selwyn> these issues can be solved but i need to actually get good at this shit
[21:21:47] <selwyn> bind debugger hook to keep the render loop going under all possible circumstances
[21:23:11] <White_Flame> a webcam facing your keyboard displaying in VR would be handy then
[21:23:17] <selwyn> i have a htc vive slightly older generation
[21:23:35] <selwyn> the vive has a front facing camera though i haven't really used it yet
[21:24:03] <selwyn> oh yeah - my other big idea is to do voice coding
[21:24:10] <selwyn> i concluded eventually that typing is just a hassle
[21:24:44] <selwyn> i can't move around the room, its too annoying to just leave the keyboard somewhere and not be able to see it
[21:24:58] <White_Flame> typing is _way_ faster than voice, though
[21:25:18] <White_Flame> especially for code, symbolic details, etc
[21:25:19] <selwyn> well
[21:25:27] <selwyn> if you are pro the difference is not too bad
[21:25:32] <selwyn> but the metric is not speed
[21:25:42] <selwyn> it is about having as sane a development environment as possible
[21:25:48] <White_Flame> the slowness & waiting for feedback with voice really hampers flow
[21:26:04] <selwyn> and to do that, i think you have to use one of the only remaining senses that you have in vr
[21:26:09] <selwyn> voice/hearing
[21:26:10] <White_Flame> a keyboard directly issues commands unambiguously and with a lot of immediate tactile feedback
[21:26:11] <ck_> they use the keyboard in Necromancer
[21:26:36] <selwyn> i certainly don't dispute that keyboards are probably the best input method to ever exist
[21:26:58] <selwyn> but i don't think they can work in vr
[21:27:21] <selwyn> what i envisage is creating objects, walking around to inspect them, issuing further commands to alter them, position them etc.
[21:27:27] <selwyn> programmer as designer
[21:27:28] <White_Flame> on psvr at least, a lot of interfaces show the actual ps4 controller floating in space, and that's a HUGE help
[21:27:38] <selwyn> yeah so you can track the keyboard as well
[21:27:55] <White_Flame> so if it could render your keyboard (not even hands, but that would be a bonus), you can anchor yourself well with your otherwise invisible physical apparati
[21:28:10] <selwyn> you can't really use your handheld controllers though
[21:28:15] <selwyn> if you are typing
[21:28:32] <selwyn> e.g. i turned one of the controllers into a pistol, and it was very difficult to hack it
[21:29:13] <selwyn> because i would have to put the controller down, switch to a keyboard i couldn't see, type, and then the same in reverse
[21:29:24] <White_Flame> that's the point, make the keyboard visible
[21:29:32] <selwyn> well
[21:29:51] <selwyn> hm
[21:30:02] <selwyn> still annoying to switch between controllers and keyboard
[21:30:07] <White_Flame> yep
[21:30:26] <White_Flame> hand tracking will eventually help a lot, too
[21:32:13] <selwyn> we ought to be able to just chat to the computer anyway
[21:32:17] <selwyn> as was promised in the 90s
[21:32:19] <selwyn> https://www.youtube.com/watch?v=kUJh7id0lK4
[21:32:20] -ixelp- Computer On Drugs: Star Trek: TNG - YouTube
[21:32:35] <selwyn> emacs is particularly given to voice coding anyway
[21:33:04] <selwyn> as is lisp
[21:33:24] <shka> eh
[21:33:24] <selwyn> and you don't need a massive vocabulary to encode slime, paredit, and a small number of other useful packages
[21:37:54] <selwyn> in vr, you simply don't have control over your senses in the same way
[21:38:05] <White_Flame> a command vocabulary does not equal "chat with"
[21:38:12] <selwyn> so it makes absolute sense to use solutions from the accessibility world imo
[21:38:23] <selwyn> well, i am joking about chatting with it a la tng
[21:38:38] <shka> it seems that those histogram gradient boost algorithm only work with the newtons method
[21:38:38] <selwyn> but you can certainly dictate emacs commands
[21:38:41] <White_Flame> I saw some guy I think doing python a few years back, and he had very tiny syllables he used to do basic commands, and it worked reasonbly quickly, with enough training & familiarity by him
[21:38:57] <selwyn> python also much harder than lisp
[21:39:10] <selwyn> minimal syntax is a major advantage in voice coding
[21:39:22] <selwyn> as are human readable symbols
[21:39:55] <selwyn> i won't lie it is much more frustrating than actually developing on the keyboard
[21:40:13] <selwyn> which is why i would only ever use it for virtual reality development, not as a general windowing system
[21:40:45] <White_Flame> https://youtu.be/8SkdfdXWYaI?t=544
[21:40:45] -ixelp- Using Python to Code by Voice - YouTube
[21:41:00] <selwyn> classic
[21:42:18] <selwyn> well, i think this video is a successful proof of concept
[21:42:42] <White_Flame> yep, but it gets its most power by being non-english
[21:48:19] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[21:49:18] *** Joins: Catie (~user@user/catie)
[21:51:09] *** Joins: robin (~robin@user/terpri)
[21:59:54] *** Quits: v3gajerusalem (~v3ga@2600:1702:ad0:3b90::40) (Quit: WeeChat 3.3)
[22:01:20] <sm2n> yeah, I mean, 3d text is hard to read in real life too
[22:01:58] <sm2n> so I'm not too optimistic about how usable text in vr will be
[22:02:48] <sm2n> faceberg's quest has some nice hand tracking
[22:03:15] <sm2n> https://www.youtube.com/watch?v=AK9UGsfWub4
[22:03:15] -ixelp- Oculus Quest VR Piano Training app demo with hand tracking - YouTube
[22:03:38] <sm2n> could probably be refined to a keyboard on any flat surface, if it hasn't already
[22:03:50] <sm2n> though it'd suck without force feedback
[22:05:10] <sm2n> I think something worth considering is gesture based communication
[22:05:13] <sm2n> like sign language
[22:05:43] <selwyn> i want to do gesture based stuff with the controllers
[22:05:53] <selwyn> like touch gestures on smartphones
[22:06:05] <sm2n> combined with steno/autocomplete you could probably do quite a bit
[22:06:15] <sm2n> those are coarse though
[22:07:15] <sm2n> btw, with the index controllers on, you can still type on a keyboard — it's just very uncomfortable
[22:07:21] <selwyn> yes
[22:08:05] <sm2n> the other issue of course is that it appears that no one other than evilcorp llc has the resources for hand tracking ML R&D
[22:09:07] <selwyn> another reason why i am not optimistic about vr is that failbook seems to be controlling its destiny so far
[22:09:25] <selwyn> i dont want to develop on something that will end up being the next avenue of tech slavery
[22:09:55] <White_Flame> pc vr is pretty big, though, but it just doesn't get media splash
[22:10:42] <sm2n> different asymptotic properties
[22:10:48] <White_Flame> (but I totally agree about the tech slavery avoidance tack)
[22:10:54] <sm2n> pcvr doesn't really have a low end market
[22:12:14] <sm2n> well, it does, but it boils down to "buy a quest and then hook it up to your computer"
[22:12:24] <sm2n> which I would say doesn't count
[22:13:22] <sm2n> anyway, something else to think about is a new programming language
[22:13:28] <sm2n> notation
[22:14:09] <sm2n> what does mathematical notation look like if it was designed with efficient 3d rendering and manipulation primitives
[22:14:27] <sm2n> basically, what would kenneth iverson do if he had access to a vr kit
[22:15:03] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:15:05] <sm2n> I think there is a whole frontier of ways of representing computations that hasn't been explored yet
[22:15:34] <sm2n> visual programming stuff is all nodes and boxes in 2d mostly, or ast based structural editing
[22:15:35] <selwyn> i guess pure mathematicians like diagrammatic stuff for that
[22:15:54] <sm2n> right, but mathematical notation is designed for paper and blackboard
[22:16:00] <sm2n> it's not a human limitation
[22:16:12] <sm2n> we internalize the tools we use
[22:16:35] <sm2n> the human restriction is that whatever the notation is, it must have an efficient vocal representation
[22:17:01] <sm2n> which is something that generally isn't true for programming languages
[22:17:22] <selwyn> i don't think mathematics can have a concise vocal representation
[22:17:28] <selwyn> thats why we have notation
[22:19:28] <sm2n> well, maybe efficient isn't the right word
[22:19:35] <sm2n> but it's serializable
[22:19:55] <sm2n> more or less all mathematical notation can be read aloud and people do it in practice
[22:21:04] *** Quits: treflip (~user@95.79.32.99) (Quit: good night!)
[22:22:03] <White_Flame> math is often spoken at the speed of chalkboard/whiteboard ;)
[22:22:16] <selwyn> i hate whiteboards
[22:22:21] <selwyn> blackboards are better in every single way
[22:24:47] <sm2n> the main issue is that 3d things feel weird if they don't obey the laws of physics
[22:25:05] <White_Flame> and if they're not tactile
[22:25:07] <sm2n> so the ways in which you can compose things are limited by that
[22:25:24] <sm2n> yeah
[22:25:36] <sm2n> tactile is fine though
[22:25:51] <sm2n> force feedback is surprisingly good
[22:25:57] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[22:26:02] <sm2n> if you play HL:A it's pretty convincing
[22:26:17] <sm2n> this is something we can already do somewhat
[22:27:03] <selwyn> would point out that not all laws of physics are respected in the hl universe :)
[22:27:27] *** Joins: aeth (~aeth@user/aeth)
[22:27:47] <sm2n> sure, but the basic idea of objects moving around continuously has to generally be respected
[22:27:55] <sm2n> you can still have weird geometries
[22:28:12] <sm2n> and maybe not fully accurate dynamical laws
[22:28:48] <White_Flame> need a vr pee simulator with proper fluid dynamics, and then see how many people soil their living room carpet accidentally
[22:29:42] <sm2n> the auditory component is probably the most convincing there
[22:29:56] <sm2n> too bad smell-o-vision will probably never be a thing
[22:38:30] <ck_> it could be, in a different literal sense
[22:39:37] <ck_> I saw some research for visualization of taste experience once, they were using the description of synaesthetes for it. I found it interesting
[22:40:14] *** Quits: slyrus (~slyrus@192-184-223-165.static.sonic.net) (Remote host closed the connection)
[22:40:29] <ck_> you've probably all seen the videos like "..and if you step forward now, you'll just float" -> vr person leaps into television
[22:40:32] *** Joins: slyrus (~slyrus@192-184-223-165.static.sonic.net)
[22:40:47] <White_Flame> yep
[22:44:19] <sm2n> ugh
[23:04:19] <GreaseMonkey> [07:59:56] <sm2n> too bad smell-o-vision will probably never be a thing <-- i know someone who's been working on exactly that
[23:04:35] <GreaseMonkey> and if something smells of "turd explosion" then that's your fault for installing that scent
[23:24:16] <moon-child> selwyn: what do you do about text viewed at a very oblique angle, such that certain parts of a glyph are near and certain parts are far?
[23:24:51] <selwyn> no idea
[23:25:56] <selwyn> i don't have the design abilities to do any of this stuff myself lol
[23:27:22] <edgar-rft> what if your smell-o-vision is broken and your whole appartment smells like poop?
[23:34:09] <White_Flame> moon-child: I'm not sure the renderer can or should do much there
[23:54:14] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[23:56:02] *** Joins: aeth (~aeth@user/aeth)
