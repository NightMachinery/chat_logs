[00:00:51] <Sqaure> So then you just do Main.hs and run it from that the shell? cabal new-run ... ?
[00:01:00] <Sqaure> -the*
[00:01:04] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[00:01:31] <Cale> Just ghc/ghci whatever or runghc I suppose (though I don't really use that much)
[00:02:05] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[00:02:15] *** Joins: Moyst_ (~moyst@user/moyst)
[00:02:16] <Cale> Whatever packages you specified will already be installed, so cabal is somewhat unnecessary, but you can use it also if you like.
[00:02:32] *** Joins: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com)
[00:03:15] <Sqaure> Ive got little experience working with ghc alone
[00:03:49] <Sqaure> i guess i need to learn 
[00:03:59] <dsal> I think I wrote a stack script once, but it didn't end up making any sense in the long term.
[00:04:57] <Sqaure> seems to work great
[00:06:12] <Sqaure> whenever i do small ad-hoc / data-mangling jobs i do some sloppy bash and then realize id be better of with haskell. And that happens quite often 
[00:06:44] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[00:07:26] <EvanR> the import list is often 5 times the size of your script xD
[00:07:36] <dsal> And then you need to make sure those libraries are available.
[00:07:48] <dsal> And somewhat stable the next time you run your script.
[00:07:54] *** Quits: alx741 (~alx741@186.178.108.244) (Ping timeout: 260 seconds)
[00:09:19] *** Quits: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com) (Remote host closed the connection)
[00:09:50] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186)
[00:10:00] *** Quits: phma (phma@2001:5b0:2172:a1f8:a2fb:22b6:7e7d:59c1) (Read error: Connection reset by peer)
[00:11:25] *** Joins: phma (phma@2001:5b0:212a:8778:d128:5f0e:1eb9:3baa)
[00:14:10] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:14:27] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:15:44] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[00:18:08] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:18:26] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:20:06] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:20:18] *** Quits: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5) (Quit: Leaving)
[00:20:24] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:20:37] *** Joins: alx741 (~alx741@186.178.109.248)
[00:20:57] *** Joins: pavonia (~user@user/siracusa)
[00:21:21] *** Joins: pfurla (~pfurla@201.17.118.230)
[00:22:27] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[00:22:52] *** Joins: _xft0 (~jaroslawj@185.234.208.208.r.toneticgroup.pl)
[00:24:32] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:24:46] <sm> Sqaure: i use stack scripts a lot
[00:24:50] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:26:08] <sm> I have found they aren't always justified though, and I am using bash more than ever
[00:28:54] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:29:11] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:31:17] *** Quits: td_ (~td@94.134.91.173) (Ping timeout: 250 seconds)
[00:32:57] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:33:01] *** Joins: td_ (~td@muedsl-82-207-238-097.citykom.de)
[00:33:15] *** Joins: jkaye (~jkaye@2601:281:8300:7530:2d14:c2ec:d957:4121)
[00:33:16] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:33:19] *** Joins: Cajun (~Cajun@user/cajun)
[00:34:07] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:35:08] <janus> sm: what your opinion on the oil shell?
[00:36:02] *** Joins: acidjnk (~acidjnk@p200300d0c7271e1745429fe452954a90.dip0.t-ipconnect.de)
[00:36:18] <sm> i have not tried it yet,
[00:36:18] <sm> but I'm a big fan of the writing and work 
[00:36:27] <sm> how about you ?
[00:37:37] <janus> havn't tried it, trying to find someone with an opinion on it :P
[00:37:58] <sm> its good , you should try it :)
[00:38:11] <dsal> I've heard of Shell Oil, but not oil shell.
[00:38:54] <sm> but are we talking about the project generally, or the bash-replacing osh language, or the more forward-looking oil language ?
[00:40:16] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[00:40:22] <janus> i guess all of it, since you'll need all of it to replace bash?
[00:40:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[00:41:08] <sm> no, the osh language is enough
[00:41:36] *** Quits: drdo (~drdo@roach0.drdo.eu) (Ping timeout: 245 seconds)
[00:41:44] <hololeap> I'm getting this when I try to run `./setup copy` for the integer-gmp package:
[00:41:49] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e17949910e638228d35.dip0.t-ipconnect.de)
[00:41:49] <hololeap> setup: can't find include file ghc-gmp.h
[00:41:56] <sm> I saw recently there's a serious discussion in nix of switching to osh
[00:42:11] <hololeap> it's referenced in integer-gmp.buildinfo.in ; what kind of file is this?
[00:42:42] <geekosaur> .in file is input to autoconf
[00:43:13] <geekosaur> which will generate integer-gmp.buildinfo which is used by Cabal build infrastructure
[00:43:34] <hololeap> oh ok
[00:43:35] <geekosaur> (and is normally generated by Setup.hs configure)
[00:45:22] <hololeap> I never learned how to use autoconf, but this should be an easy fix. thanks
[00:45:38] *** Quits: acidjnk (~acidjnk@p200300d0c7271e1745429fe452954a90.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:47:48] <maerwald> autoconf is a beauty of constantly changing macros
[00:48:20] <geekosaur> actually I'm wondering if it's being used by setup configure instead of autoconf
[00:48:41] <geekosaur> or cabal run-as-setup configure
[00:48:51] <maerwald> The only people who learn autoconf usually satisfy all of these constraints: 1. you love pain, 2. you love pain, 3. you're a student and have too much time, 4. you love obscure bash, 5. you enjoy complexity
[00:49:06] <unit73e> I was here thinking, is haskell jersey or mit style? as in "worse is better" or "the right thing". It's kind of both imo.
[00:49:34] <unit73e> certainly simple enough but tries to be correct
[00:49:42] <hololeap> maerwald: sounds fun
[00:49:59] <hololeap> I knew I avoided it for a reason
[00:50:12] <sm> I'd say more the right thing style at the core, for sure
[00:50:33] <unit73e> btw maven is a million times better than autoconf and maven is kind of crappy
[00:50:38] <maerwald> hololeap: you've watched one of those "slap contest" things on youtube? autoconf is like that
[00:50:48] <sm> devolving to worse is better at the edges ?
[00:51:37] <unit73e> if you compare to scala it's a lot more unnecessarily complex, for example
[00:51:39] <sm> ps can you link that paper/article for us
[00:52:19] <unit73e> even in scala channel they agree lol
[00:56:16] <maerwald> compare anything to scala and you come to the conclusion: ok, that was unnecessarily complex
[00:56:34] <sm> for anyone wondering: https://en.wikipedia.org/wiki/Worse_is_better, well worth reading the original articles linked there
[00:58:05] <int-e> oh the perils of multi-objective optimization
[00:59:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[01:00:19] <unit73e> scala is for java devs is what C++ was to C guys. I still find C++ unnecessarely complex, but I don't think neither scala or C++ are bad. It's like that because legacy support.
[01:00:30] *** Joins: drdo (~drdo@roach0.drdo.eu)
[01:01:15] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[01:01:56] *** Joins: Moyst_ (~moyst@user/moyst)
[01:02:28] *** Quits: cosimone (~user@93-47-230-47.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:04:15] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[01:04:40] *** Joins: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0)
[01:04:43] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:cdf3:eec1:2823:7459)
[01:10:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:10:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:10:40] *** Joins: wroathe (~wroathe@user/wroathe)
[01:10:48] <Sqaure> i found scala before haskell and did some years of that. Once i got to know haskell my scala interest disappeared completely. Around 2013/2014 scala had so many weird quirks. Haskell felt more consistent, simpler and clear. Once i got over the lazy eval / monadic IO part.
[01:10:57] *** Quits: pfurla (~pfurla@201.17.118.230) (Quit: gone to sleep. ZZZzzzâ€¦)
[01:12:33] <janus> Sqaure: i read it has gotten a lot better with scala 3 though
[01:13:52] <Sqaure> glad to hear. JVM needs that.
[01:14:14] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:18:26] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[01:18:29] *** Joins: gdown (~gavin@h69-11-248-109.kndrid.broadband.dynamic.tds.net)
[01:18:31] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[01:18:41] *** Joins: jakalx (~jakalx@base.jakalx.net)
[01:20:48] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[01:23:02] *** Joins: deadmarshal (~deadmarsh@95.38.114.216)
[01:24:32] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 240 seconds)
[01:24:39] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[01:24:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:26:07] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[01:27:02] *** Quits: deadmarshal (~deadmarsh@95.38.114.216) (Ping timeout: 240 seconds)
[01:27:21] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Read error: Connection reset by peer)
[01:28:06] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[01:28:43] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[01:29:34] *** Joins: RobotMicrowave (~user@2804:d41:c2b2:be00:2926:cba1:14b8:da8b)
[01:30:27] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[01:31:02] <RobotMicrowave> Wow, a lot of hackers here, many l33t speak users.
[01:31:20] <Cajun> scala has always seemed weird to me, i still dont entirely get the point of mixed functional langauges
[01:31:26] <Cajun> like F# or Scala
[01:32:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:33:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:33:16] *** Quits: Unhammer (~Unhammer@user/unhammer) (Ping timeout: 245 seconds)
[01:34:13] <zero> some people don't get the point of purely functional programming languages too so...
[01:34:44] <zero> i guesss it's good we have a choice
[01:37:37] <EvanR> haven't used F#, but I can imagine hoping something haskell-like would invade my horrible day to day language
[01:38:19] <EvanR> sometimes it would be nice if an imperative DSL could invade haskell, without making a mess that is
[01:41:32] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[01:44:33] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[01:44:41] *** Quits: michalz (~michalz@185.246.204.45) (Remote host closed the connection)
[01:45:02] <arahael> Cajun: i find that mixed languages get this weird situation where you have OOP design mixed in with a functional design.  especially when using code smells that are very much OOP in nature (eg, "everything has an interface")
[01:45:25] <arahael> Cajun: and devs keep trying to apply OOP good practices such as data hiding.
[01:45:29] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:46:20] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[01:47:38] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[01:48:41] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[01:48:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:48:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:48:54] *** Joins: wroathe (~wroathe@user/wroathe)
[01:49:19] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[01:49:40] *** Joins: alzgh (~alzgh@user/alzgh)
[01:50:11] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:53:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:53:36] <RobotMicrowave> Rust is a good example of "lets glue all of this together but with a little of OO"
[01:54:51] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186) (Remote host closed the connection)
[01:55:37] <Cajun> i dont like the names of things in rust just from hearing about it (like crates or whatever it is)
[01:55:52] <Cajun> but the language seems very cool
[01:58:30] <dolio> Yeah, what do 'cargo' and 'crate' have to do with rust? It's not even a related pun.
[01:58:34] *** Quits: _xft0 (~jaroslawj@185.234.208.208.r.toneticgroup.pl) (Quit: Lost terminal)
[01:58:59] <dolio> That's the true tragedy of epigram never coming to fruition.
[01:59:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[02:00:45] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[02:01:49] *** Joins: Moyst_ (~moyst@user/moyst)
[02:03:38] *** Joins: Pickchea (~private@user/pickchea)
[02:03:57] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:06:16] *** Joins: benin (~benin@183.82.179.164)
[02:08:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:11:36] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:13:08] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[02:13:47] *** Quits: drdo (~drdo@roach0.drdo.eu) (Ping timeout: 256 seconds)
[02:24:11] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:25:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:25:43] *** Joins: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9)
[02:25:48] <jackdk> What is this "epigram"? I can only find oblique references to it in the lens haddocks
[02:26:58] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[02:30:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:30:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:30:53] <dibblego> jackdk: http://www.e-pig.org/
[02:33:41] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Remote host closed the connection)
[02:35:53] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 250 seconds)
[02:37:41] *** Joins: machinedgod (~machinedg@142.169.78.187)
[02:37:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:41:39] <[itchyjunk]> I am now back where I left. I have partially figured out out, and the only issue is the last digit!
[02:42:02] <[itchyjunk]> g (f 1247)
[02:42:02] <[itchyjunk]> [7,4,2]
[02:42:33] <[itchyjunk]> idk how to adjoin the 1 to "the same list"
[02:42:37] *** Quits: max22- (~maxime@2a01cb0883359800180cddb567bc39f4.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:42:44] <[itchyjunk]> @where paste
[02:42:45] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[02:44:52] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 260 seconds)
[02:45:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:45:32] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[02:48:08] <monochrom> g (f 1247) ++ [1] ?
[02:49:57] <monochrom> I wonder if you're just missing how to design recursive algorithms, which is covered in my course notes: http://www.cs.utoronto.ca/~trebla/CSCC24-2021-Summer/01-haskell-basic.html#synev
[02:51:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:51:33] <monochrom> I wonder if you're just missing how to design recursive algorithms, which is covered in my course notes: http://www.cs.utoronto.ca/~trebla/CSCC24-2021-Summer/01-haskell-basic.html#synev
[02:51:39] <[itchyjunk]> Sorry, crappy computer.
[02:51:41] <[itchyjunk]> https://paste.tomsmeding.com/Sb6IPzLM
[02:52:13] <[itchyjunk]> In the case of (0,y), i wanted to adjoin y to the list the other case was working on, if that makes sense
[02:52:26] <monochrom> Why is it not "g (0,y) = [y]" very simply?
[02:53:02] <monochrom> And see my course notes mentioned above for creating recursive algorithms generally.
[02:53:09] <[itchyjunk]> that works /o\ idk why it works
[02:53:27] <[itchyjunk]> ah that link was for me, okay will check out now
[02:53:30] <RobotMicrowave> I have a question. Is it possible to recreate the IO monad? Like, making a custom IO monad and substitute the STD?
[02:53:49] <RobotMicrowave> The main would still be IO (), of course
[02:54:01] *** Quits: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk) (Remote host closed the connection)
[02:54:03] <int-e> > 1247 `divMod` 10
[02:54:04] <lambdabot>  (124,7)
[02:54:05] <monochrom> No, IO has to be provided by the compiler/interpreter, it is not user-definable in Haskell.
[02:54:08] <RobotMicrowave> Rephrasing: "Is the IO monad special to the compiler?"
[02:54:10] <int-e> > 1 `divMod` 10
[02:54:11] <lambdabot>  (0,1)
[02:54:18] <monochrom> Yes it has to be special.
[02:54:20] <dibblego> not the monad, the data type
[02:54:32] <c_wraith> RobotMicrowave: the monad instance is totally normal.  the data type is special
[02:54:33] *** Joins: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk)
[02:54:41] <RobotMicrowave> Damn! I've lost 1 week trying to implement my own IO
[02:54:51] <RobotMicrowave> >:(
[02:54:53] <monochrom> Well if the type is special then the monad instance is special too.
[02:54:57] <int-e> [itchyjunk]: so if you can't figure out for input 1247, maybe try figuring out what happens for 1.
[02:55:08] <c_wraith> RobotMicrowave: it's best to erase the phrase "IO monad" from your lexicon.  It makes you think the wrong thing is special.
[02:55:17] <c_wraith> RobotMicrowave: IO is special.  Monad is just normal haskell.
[02:55:20] *** Joins: srk_ (~sorki@user/srk)
[02:55:56] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Quit: Leaving)
[02:56:41] *** Quits: jkaye (~jkaye@2601:281:8300:7530:2d14:c2ec:d957:4121) (Ping timeout: 250 seconds)
[02:56:51] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:56:53] <RobotMicrowave> ok
[02:56:53] <monochrom> Anyway, if someone says "I want to use your algorithm to compute the digits of 4" then it's g (f 4) = g (0, 4) and "clearly" the desired answer is [4] so why not g (0, 4) = [4] as a base case.
[02:57:39] *** Quits: srk (~sorki@user/srk) (Ping timeout: 265 seconds)
[02:58:03] *** srk_ is now known as srk
[02:58:37] <monochrom> This is why I advocate that beginners should think algebra not control flow.
[02:59:01] <monochrom> In algebra, if the correct answer is sin(x+y), you write "sin(x+y)". THE END.
[02:59:07] *** Quits: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[02:59:13] <[itchyjunk]> for input 1, i want g ( f 1) to return [1]
[02:59:28] <[itchyjunk]> ah, i guess g (0,y) = [y] comes from the base case itself
[02:59:44] <dibblego> think algebra
[02:59:51] <monochrom> None of those "how do I initialize a variable to x then add y then sin it" control flow thinking.
[03:00:54] <monochrom> I mean, if you were in an assembly language course, sure.
[03:00:58] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[03:01:23] <int-e> now... do we want the digits of 0 to be [0] or []...
[03:01:28] <[itchyjunk]> Yes, i like this approach (i think). has the sideeffect to teaching me Coq along the way maybe :D
[03:01:34] <int-e> that's what would keep me up at night
[03:01:57] *** Quits: machinedgod (~machinedg@142.169.78.187) (Ping timeout: 256 seconds)
[03:02:03] <EvanR> humanity bumbled to this point for a long time thinking the digits of 0 are []
[03:02:07] <[itchyjunk]> i think I would? 01 = [0,1] seems okay
[03:02:20] <[itchyjunk]> oh
[03:02:48] *** Joins: Moyst_ (~moyst@user/moyst)
[03:07:37] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[03:07:42] <arahael> I've attempted to use a cabal.project to override a hackage package, with the following line: packages: *.cabal ../foundation/basement/*.cabal
[03:07:55] <arahael> However, when I rebuild my project, it still seems to use hackage's basement and not the local one I've checked out?
[03:08:05] <arahael> (That's the entire contents fo my cabal.project)
[03:10:11] <dsal> "I'm more in favor of following the standard."   "What's 'the standard'?"  [links to his own code which he defines as a standard]
[03:10:25] <RobotMicrowave> At least i learned haskell, I've failed to make my own IO because it was impossible. But it was fun
[03:10:46] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8)
[03:10:49] <geekosaur> dsal, that place is a trainwreck. bail.
[03:11:02] <c_wraith> you can make your own IO-like thing that happens to use IO behind the scenes
[03:11:19] <monochrom> I use recursion to define iteration.
[03:11:30] <monochrom> I use iteration to define recursion, too. >:)
[03:12:05] <monochrom> But Kleene trumped me. He used minimization to define recursion.
[03:12:22] <int-e> [itchyjunk]: well your g (f 0) produces [0] and the question is... is that the behavior you want or not?
[03:12:46] <monochrom> But Church trumped him. Church used untyped lambda calculus to get it all.
[03:12:56] <[itchyjunk]> It was till you questioned about him.. Now I have no idea @_@
[03:13:01] <int-e> [itchyjunk]: assuming you fixed it by defining g (0,y) = [y]
[03:13:08] <[itchyjunk]> not him, it! 
[03:13:17] <[itchyjunk]> Yes, i did that
[03:13:22] <monochrom> I think [0] is acceptable.
[03:13:57] <int-e> well, we're lacking a specification
[03:14:31] <monochrom> If you know who will be judging the correctness of your code, ask them.
[03:14:43] <[itchyjunk]> ah, god..
[03:14:54] <monochrom> If you don't know... why are you in this programming business in the first place?!
[03:15:17] <[itchyjunk]> I was trying to learn some math at somepoint and one thing lead to another 
[03:15:39] <monochrom> OK so you are the judge, so you decide.
[03:16:35] <monochrom> All conventions and standards are made by humans. You may as well be one such human for once.
[03:17:02] *** Quits: Jing (~hedgehog@2604:a840:3::105f) (Remote host closed the connection)
[03:17:09] * [itchyjunk] looks at int-e for judgement
[03:17:35] <int-e> way to shirk responsibility
[03:17:43] * int-e disapproves
[03:17:50] *** Joins: Jing (~hedgehog@2604:a840:3::105f)
[03:17:58] *** Joins: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk)
[03:17:59] <jackdk> a mathematically-literate colleague of mine once seriously entertained someone's "okay, let's say 1=2" quip by working through the consequences
[03:18:13] *** Quits: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[03:18:34] <geekosaur> isn't that the zero ring?
[03:18:50] <monochrom> Does it mean writing a PhD thesis on the zero ring? >:)
[03:19:09] <jackdk> quite possibly. any part of my maths education that couldn't be translated into typeclasses has rusted away
[03:19:19] <int-e> geekosaur: hey maybe it's just a semiring
[03:19:34] *** Quits: wagle (~wagle@quassel.wagle.io) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:19:44] <Axma59590> jackdk: surely it's the opposite of this: https://www.youtube.com/watch?v=lfP8dx2TdEM
[03:20:08] *** Joins: wagle (~wagle@quassel.wagle.io)
[03:20:20] <monochrom> Oh hey there is an xkcd for that, too!
[03:20:40] <monochrom> https://xkcd.com/816/
[03:21:06] <Axma59590> Classic
[03:21:10] *** Axma59590 is now known as Axman6
[03:21:15] <Axman6> oh my
[03:21:15] <monochrom> The hover line is golden.
[03:21:18] <jackdk> Axma59590: Who are you and what did you do with the real Axman6?
[03:21:28] <jackdk> Axman5.99999999
[03:21:47] <Axman6> interest rates man
[03:21:50] <monochrom> jackdk: The point is that 59590=6 so it's OK!
[03:22:11] <jackdk> monochrom: This is what happens when I IRC on one cup of tea. Time to fix that.
[03:22:17] <Axman6> I invested my 6 in bitcoin, it went up two ordered of magnitude, but when I cashed out it dropped and I broke even
[03:22:44] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:22:54] <Axman6> orders*
[03:25:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:25:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:25:07] *** Joins: wroathe (~wroathe@user/wroathe)
[03:25:29] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd) (Ping timeout: 250 seconds)
[03:25:35] *** Quits: hiredman (~hiredman@frontier1.downey.family) (Ping timeout: 264 seconds)
[03:32:00] *** Joins: nautical (~nautical@2601:602:900:1630::396f)
[03:35:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:38:05] <arahael> Hmm, still having difficulty overriding a hackage package using cabal. Is my only option to run a local hackage server?
[03:38:31] <arahael> I've tried specifying both packages, and optional-packages, in my cabal.project file.
[03:39:26] <sclv> the cabal.project route should work
[03:39:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:40:12] <arahael> Yeah, trouble is, it's not. I'm not sure why.  I mean, I've literally just created a cabal.project file that has "packages: ../foundation/basement/*.cabal" in it, it doesn't make any difference...
[03:40:13] <sclv> just unpack the repo in the same tarball as the project and add its cabal in the packages stanza
[03:40:32] <sclv> arahael: i suspect its the relative path causing the issue
[03:40:48] <geekosaur> relative paths work for me?
[03:40:55] <sclv> ok then nevermind?
[03:40:56] <arahael> sclv: Really? The docs use relative paths as an exmaple.
[03:41:06] <sclv> it was a shot in the dark
[03:41:08] <sclv> lmao
[03:41:13] <arahael> Ah, fair enough. :)
[03:41:14] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[03:41:18] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d22:12b7:6d7c:fb3c)
[03:41:28] <geekosaur> packages: ./ X11/ xmonad/ xmonad-contrib/
[03:41:33] <sclv> i do know there's some corners of cabal where we don't always have them working right
[03:41:35] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[03:41:41] <geekosaur> overriding all three from hackage because I use local checkouts
[03:41:55] <sclv> er by relative i meant with ..
[03:41:57] <geekosaur> (will need to add at least one more soonish)
[03:42:00] <geekosaur> ah
[03:42:21] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[03:42:26] <sclv> the default directory functions don't resolve that properly without some extra calls iirc
[03:42:52] <arahael> sclv: The provided example in the docs is literally: packages: */*.cabal ../{foo,bar}/
[03:43:19] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[03:43:21] <sclv> the other shot in the dark is to delete the *.cabal bit
[03:43:28] <sclv> all i can tell you is that its worked for me just fine
[03:43:49] <sclv> assuming A) a new enough cabal and B) using v2- commands, just to be clear
[03:44:25] <arahael> sclv: When I do that, "cabal build" stops working at all because the current project I'm in doesn't exist anymore.
[03:44:49] <sclv> arahael: did you add also _your project_ explicitly to the packages file?
[03:44:56] <sclv> or er stanza, you know what i mean
[03:45:09] <arahael> sclv: What does "explicit" mean in this case?
[03:45:27] <sclv> like geekosaur posted: you need a "./" in there or the like
[03:45:50] <arahael> sclv: It's picking up the local .cabal file just fine, though?
[03:46:08] <sclv> ok then what did you mean "the current project I'm in doesn't exist anymore"
[03:46:41] <arahael> Working: packages: *.cabal ../foundation/basement/*.cabal
[03:46:55] <arahael> Not working: packages: ../foundation/basement/*.cabal
[03:46:59] <sclv> right
[03:47:02] <sclv> that's as designed
[03:47:03] <arahael> Unfortunately, it's failing to prioritise the basement *over* the hackage.
[03:47:12] <arahael> basement also exists in hackage.
[03:47:22] <sclv> right, it should always prefer local
[03:47:27] <sclv> unless you have version bounds that prevent it
[03:47:41] <sclv> calling -v might give a hint
[03:47:52] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[03:48:38] <arahael> It's creating dist-newstyle/build/aarch64-osx/ghc-9.2.1/basement-0.0.12/build
[03:48:58] *** Quits: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9) (Ping timeout: 256 seconds)
[03:49:00] <sclv> ok, so it _is_ building it?
[03:49:12] <arahael> Yeah, but again, I'm 99.9999% certain it's creating it from hackage.
[03:49:28] <sclv> why
[03:49:37] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[03:50:25] <arahael> sclv: Because the specific bug I'm trying to avoid is still there.
[03:50:37] <arahael> (And the version I've checked out is supposed to fix it)
[03:50:39] <sclv> i suggest you change the local one in an incredibly obvious way
[03:50:44] <sclv> like make it build wrongly
[03:50:49] <sclv> or print some debug spew
[03:51:23] <arahael> I'll delete the function outright that causes the bug, then...
[03:52:07] <sclv> oh also if you're not using basement directly, but its some dep of a dep, i don't think the local one will get picked up by all your deps
[03:52:34] <sclv> like you can't just "patch in" a single package at the root of your dep tree with this approach
[03:52:37] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[03:53:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:53:16] <arahael> Yeah, it's a dep of a dep, but interestingly, deleting that function outright produced a warning that a function does not have an accompanying binding, which makes sense as I just deleted that binding.
[03:53:37] <sclv> so i think what'll happen is it'll still try to build it as part of your project
[03:53:38] <arahael> But it's a dep of a dep, why do you think that wouldn't be expected to work?
[03:53:41] <sclv> it just won't use it
[03:53:41] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[03:53:45] *** sm2n_ is now known as sm2n
[03:53:49] <sclv> just my understanding of how cabal innards work
[03:53:59] <arahael> Blegh.  So how do I tell cabal to just replace the darn thing?
[03:54:26] <sclv> you need to pull in everything in the transitive dep tree as well, or use a local repo to override
[03:54:34] <sclv> which is not necc a hackage server in full
[03:54:38] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:54:43] <sclv> you can do a "filesystem repo" which is much simpler to setup
[03:54:47] *** Joins: Moyst_ (~moyst@user/moyst)
[03:54:52] <arahael> I've literally cloned that basement repo.
[03:54:59] <arahael> "git clone", even.
[03:55:02] <sclv> right
[03:55:07] <sclv> i mean instead of a "local hackage server"
[03:55:15] <sclv> you can do a "filesystem package repository"
[03:55:31] <sclv> its still a pita to set up, but a bit less completely so
[03:55:38] <arahael> That sounds like quite a bit of work, yeah.
[03:55:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:56:02] <arahael> Especially for one package which, in all likelihood, is only temporarily broken. 
[03:56:32] <sclv> also if this is the patch for 9.2.1 then you can add the head.hackage repo which should have it fixed already
[03:56:56] <arahael> This is that patch!   How do I add the head.hackage repo?
[03:57:01] <sclv> https://ghc.gitlab.haskell.org/head.hackage/
[03:57:25] <arahael> Doesn't that replace all the other packages I happen to have as well, though?
[03:57:38] <arahael> Because I really only want that one package to be replaced...
[03:57:40] <sclv> it only replaces the other ones with head.hackage packates
[03:57:42] <sclv> er patches
[03:57:50] <sclv> but all those packages are for 9.2.1 compat as well
[03:58:15] *** Joins: Feuermagier_ (~Feuermagi@213.178.26.41)
[04:00:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[04:01:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:02:13] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:03:00] *** Joins: econo (uid147250@user/econo)
[04:03:39] <arahael> That does seem to work, so it sounds like cabal.project (alone) won't do what I want, I _have_ to use a different hackage instance, and I can either set up a local hackage, or use head.hackage since it has the changes I need?
[04:04:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:05:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:05:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[04:06:30] *** Lord_of_Life_ is now known as Lord_of_Life
[04:06:41] *** Joins: drdo (~drdo@roach0.drdo.eu)
[04:06:49] *** Joins: hiredman (~hiredman@frontier1.downey.family)
[04:09:14] <arahael> Yeah, now I have this bug: https://github.com/haskell/network/issues/497#issuecomment-840641725
[04:09:36] <arahael> I really only want that one package, so I think my last and only remaining option is to start a local hackage?
[04:09:55] <sclv> or vendor the full dep tree
[04:10:47] <arahael> Doesn't cabal flatten the package name namespace though? It feels a bit odd I have to vendor the whole tree.
[04:11:44] <arahael> I suppose if I'm vendoring the whole tree, I'm probably back to the point where I might as well have a local hackage. :(
[04:11:46] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a418:17da:6b4f:5fc3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:12:17] *** Joins: zebrag (~chris@user/zebrag)
[04:12:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:14:54] <monochrom> https://cabal.readthedocs.io/en/3.6/installing-packages.html#local-no-index-repositories
[04:15:30] <arahael> monochrom: I'd prefer to use .git repos instead of tarballs, how am I supposed to patch a tarball?
[04:16:08] *** Joins: zebrag (~chris@user/zebrag)
[04:16:42] <monochrom> I don't know. But I unpacked, patched, repacked.
[04:20:22] *** Joins: EvanR_ (~evan@2600:1700:ba69:10:5c7c:46a9:5e48:ea)
[04:21:27] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:23:22] <arahael> How do you keep track of your patches?  I'm not using haskell every day.
[04:23:44] <arahael> (My day-to-day job is in Swift, so when I'm doing this, I'm like: Ok, how do I build this thing again, this one's a cabal build, right...)
[04:24:02] *** Quits: EvanR (~evan@user/evanr) (Ping timeout: 240 seconds)
[04:24:45] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:25:03] <monochrom> I have only patched once. But I keep the patched source tree somewhere else.
[04:25:34] <arahael> Do you check out every git repo, and convert each of those to the corresonding .tar.gz?
[04:26:19] *** Joins: mvk (~mvk@2607:fea8:5cc1:fa00::4702)
[04:26:25] <monochrom> I downloaded once from hackage. It's just "cabal sdist" when I'm ready.
[04:26:41] *** Quits: atwm (~andrew@19-193-28-81.ftth.cust.kwaoo.net) (Ping timeout: 268 seconds)
[04:26:44] <Axman6> :t \f -> f <&> putStr
[04:26:45] <lambdabot> Functor f => f String -> f (IO ())
[04:26:56] <arahael> monochrom: Hmm?  I've never looked at 'cabal sdist'.
[04:27:10] <arahael> monochrom: Don't you have to download every single package that is touched by the project?
[04:27:30] <monochrom> I have only done one package.
[04:28:03] <arahael> monochrom: But as sclv was poitning out, I'd need to vendor the entire tree?
[04:28:17] <arahael> And if I'm using a local hackage, I'd need to have every package my project touches, right?
[04:28:45] <arahael> A hackage server is a repository of *all* packages you'd want to pull from hackage, right?
[04:28:47] <monochrom> "local no-index repo" â‰  "packages: foo.cabal etc" stanza
[04:29:14] *** Quits: drdo (~drdo@roach0.drdo.eu) (Ping timeout: 256 seconds)
[04:29:20] <sclv> a local repo can override only a single package
[04:29:42] *** Joins: iteratee_ (~kyle@162.218.222.107)
[04:29:43] <sclv> vendoring the whole tree is only for the packages stanza
[04:29:46] <monochrom> I am not setting up any "server".
[04:30:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[04:31:04] <arahael> monochrom: Oh, interesting, so you really only have the one .tar.gz (at least, you would in my scenario).  That's feasible.
[04:31:21] <arahael> How do I ensure that this "local no-index repo" gets prioritised over any other hackage server I might have?
[04:31:39] <monochrom> I don't imagine that s/1/10/ would make a big deal.
[04:32:02] <arahael> monochrom: I was worried it was more like 100 or 500 packages.
[04:32:34] <monochrom> I did this to tf-random.
[04:32:38] *** Quits: iteratee (~kyle@162.218.222.107) (Ping timeout: 256 seconds)
[04:33:03] <monochrom> And nothing needs to be done to things that tf-random depends on, or things that depend on tf-random.
[04:33:09] <monochrom> NOTHING.
[04:33:25] <arahael> That's exactly what I want!  So I think I indeed need to do that "local no-index repo" thing.
[04:33:50] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:37:00] <arahael> Needing an absolute path sucks slightly, but it's OK.
[04:38:53] *** Parts: RobotMicrowave (~user@2804:d41:c2b2:be00:2926:cba1:14b8:da8b) (ERC 5.4.1 (IRC client for GNU Emacs 27.2))
[04:39:31] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 245 seconds)
[04:39:34] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:39:55] <arahael> (I've assumed a cabal.project must be in the project's root)
[04:40:33] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:42:51] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e17949910e638228d35.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:46:13] <arahael> On reflection, that's probably even better because whatever bugs we want to fix should be upstreamed...  So once upstream has a new version, then depending on the version bounds I'd then automatically end up using that.
[04:46:33] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:46:40] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:46:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:52:03] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:52:15] <arahael> I think I'll generate the cabal.project file as part of my monorepo build script, so that it matches the current system filesystem, and to have it generate that .tar.gz file as well.
[04:54:26] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:54:52] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[05:01:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[05:03:02] *** Joins: Moyst_ (~moyst@user/moyst)
[05:14:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:20:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:25:24] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 260 seconds)
[05:27:23] *** Joins: Guest75 (~Guest75@host-176-37-53-221.b025.la.net.ua)
[05:28:07] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[05:28:57] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 268 seconds)
[05:29:37] *** Quits: mmhat (~mmh@55d43159.access.ecotel.net) (Quit: WeeChat 3.3)
[05:29:53] *** Joins: lechner (~lechner@debian/lechner)
[05:29:58] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[05:30:15] *** Quits: Guest75 (~Guest75@host-176-37-53-221.b025.la.net.ua) (Client Quit)
[05:30:48] <arahael> Hmm, so, I have: basement-0.0.12.tar.gz in my local packages dir, and I've modified this so that there's an extra space in the specific line that fails to build.
[05:31:11] <arahael> But when I build my project, even after explicitly running 'cabal update', and after ensuring that the local cabal.project exists and refers to the local packages dir,
[05:31:31] <arahael> it still has the _original_ line failing in the error message, so it's still not actually using my particular basement.
[05:32:58] <arahael> Yep, just unpacked the locally packaged file, it absolutely does have that space in it, yet that space is missing.
[05:33:15] <arahael> This means that my build is still, somehow, pulling in hackage's basement. (Not using that head.hackage thing anymore, though)
[05:34:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:35:21] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 245 seconds)
[05:35:52] <arahael> monochrom: So how did that work for you, with tf-random?
[05:37:53] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 250 seconds)
[05:39:07] *** Joins: lechner (~lechner@debian/lechner)
[05:42:26] *** Quits: mvk (~mvk@2607:fea8:5cc1:fa00::4702) (Ping timeout: 260 seconds)
[05:43:23] *** Joins: zebrag (~chris@user/zebrag)
[05:43:32] <arahael> Why is it "extracting" basement not from my local packages, but from .cabal/packages/hackage.haskell.org/basement/0.0.12/basement-0.0.12.tar.gz ?
[05:44:50] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[05:46:38] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:25] <hololeap>  /usr/lib64/x86_64-linux-ghc-9.2.1/libHSscientific-0.3.7.0-LT8myiDeJKLLdLSFvANXhn-ghc9.2.1.so
[05:47:38] <hololeap> what does this string signify? LT8myiDeJKLLdLSFvANXhn
[05:48:17] *** Quits: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk) (Remote host closed the connection)
[05:48:49] *** Joins: burnsidesLlama (~burnsides@client-8-72.eduroam.oxuni.org.uk)
[05:49:06] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[05:49:42] <arahael> What if I were to delete my cached package directly, manually?  How should I do this "properly"?
[05:50:21] <arahael> hololeap: I assume that's a hash of some sort - not sure what the hash is of, though.
[05:52:51] *** Quits: burnsidesLlama (~burnsides@client-8-72.eduroam.oxuni.org.uk) (Ping timeout: 245 seconds)
[05:56:18] * arahael can't find it specified anywhere, how cabal chooses a package where multiple repos have the same version.
[05:56:40] <arahael> I think I have two options: Manually delete the package from my cache of hackage.org, or bump the version in my local directory.
[05:57:00] <arahael> (And then specify: --allow-newer=basement in my build)
[05:57:25] *** Joins: pfurla_ (~pfurla@2804:14d:5c81:4104:65d6:5a05:6048:8ed9)
[05:57:49] <sclv> thereâ€™s a setting to order package repos. But if you have it built already i think it wonâ€™t kick in
[05:58:22] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[05:58:25] <monochrom> I put my "repository my-local-repository \n  url: file+noindex:///..." in my $HOME/.cabal/config.  I have not tried putting it in cabal.project.
[05:58:28] <arahael> Hmm, so if I'm adding or changing my repos, I should delete ~/.cabal and repeat 'cabal update'?
[05:58:41] <arahael> monochrom: Oh! So that's the global cabal.project?
[05:59:00] <monochrom> There is no global cabal.project.
[05:59:08] <monochrom> Since there is no global "project".
[05:59:10] <arahael> But this setting's only for cabal.projecct?
[05:59:11] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 268 seconds)
[05:59:37] <arahael> Ah, I see the docs not mentioning that, not sure where I made that mistake.
[05:59:44] <hololeap> geekosaur: do you know what that string I mentioned signifies?
[05:59:50] <monochrom> Obsession with "project"s?
[06:00:21] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[06:00:21] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d22:12b7:6d7c:fb3c) (Ping timeout: 245 seconds)
[06:00:30] <monochrom> I do notice that everyone is obsessed with "project"s when, really, the cabal user guide states very explicitly that the basic unit on hackage is package.
[06:00:49] <sclv> active-repositories is the stanza to order repo lookup https://cabal.readthedocs.io/en/3.4/cabal-project.html#cfg-field-active-repositories
[06:02:04] <arahael> monochrom: Well, it's now grabbing the correct package!
[06:02:38] <arahael> monochrom: I think it was because I was previously in https://cabal.readthedocs.io/en/3.6/cabal-project.html#specifying-the-local-packages
[06:03:00] <arahael> monochrom: And when I was shown the direct link to local no-index packages, I didn't scroll up to see that it was a different file.
[06:03:06] *** Joins: Moyst_ (~moyst@user/moyst)
[06:03:13] <arahael> (So my fault, really, but wow. Confusing.)
[06:03:50] *** Quits: pfurla_ (~pfurla@2804:14d:5c81:4104:65d6:5a05:6048:8ed9) (Quit: Textual IRC Client: www.textualapp.com)
[06:05:22] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:2061:ecca:f442:134c)
[06:09:16] *** Quits: xff0x (~xff0x@2001:1a81:5337:5300:b447:8c77:1877:d5ca) (Ping timeout: 260 seconds)
[06:09:44] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[06:11:04] *** Joins: xff0x (~xff0x@2001:1a81:5377:a800:360f:89df:3dda:3328)
[06:15:53] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:2061:ecca:f442:134c) (Quit: Textual IRC Client: www.textualapp.com)
[06:17:31] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:155f:731:f6ca:82cf)
[06:18:55] *** Quits: viluon (uid453725@id-453725.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:20:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:20:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:20:52] *** Joins: wroathe (~wroathe@user/wroathe)
[06:21:20] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[06:26:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:31:11] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 250 seconds)
[06:34:28] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[06:37:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[06:38:01] *** Quits: emf (~emf@2620:10d:c090:400::5:2b81) (Ping timeout: 268 seconds)
[06:38:22] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[06:40:42] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Client Quit)
[06:47:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:48:10] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:52:13] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:53:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:54:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:54:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:54:26] *** Joins: wroathe (~wroathe@user/wroathe)
[06:55:21] *** Quits: td_ (~td@muedsl-82-207-238-097.citykom.de) (Ping timeout: 245 seconds)
[06:57:27] *** Joins: td_ (~td@94.134.91.22)
[06:59:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:00:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:00:54] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[07:03:10] *** Joins: Moyst_ (~moyst@user/moyst)
[07:03:50] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[07:08:31] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:11:31] *** Joins: gaff (~gaff@49.207.202.59)
[07:11:37] *** Quits: gaff (~gaff@49.207.202.59) (Client Quit)
[07:12:42] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[07:15:39] *** Joins: benin2 (~benin@183.82.179.164)
[07:17:10] *** Quits: benin (~benin@183.82.179.164) (Ping timeout: 260 seconds)
[07:17:10] *** benin2 is now known as benin
[07:18:10] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:19:22] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:21:30] *** Joins: econo (uid147250@user/econo)
[07:24:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:32:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:32:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:32:21] *** Joins: wroathe (~wroathe@user/wroathe)
[07:33:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:33:47] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[07:39:18] *** Quits: vito (sid1962@user/vito) (Read error: Connection reset by peer)
[07:39:27] *** Joins: vito (sid1962@user/vito)
[07:46:38] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:49:58] *** Joins: Lycurgus (~juan@98.4.112.204)
[07:51:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:53:19] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:155f:731:f6ca:82cf) (Quit: gone to sleep. ZZZzzzâ€¦)
[07:56:49] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[08:00:40] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[08:02:17] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[08:02:34] *** Joins: mbuf (~Shakthi@122.174.170.222)
[08:03:18] *** Joins: Moyst_ (~moyst@user/moyst)
[08:05:58] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[08:07:23] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 250 seconds)
[08:12:49] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:155f:731:f6ca:82cf)
[08:20:57] *** Quits: slowButP1esent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:23:03] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[08:24:31] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:155f:731:f6ca:82cf) (Quit: gone to sleep. ZZZzzzâ€¦)
[08:29:07] <arahael> #haskell has been very quiet.  is it holidays somewhere?
[08:29:30] <dolio> Yeah, major holiday tomorrow in the US.
[08:29:33] <arahael> sclv: forgot to respond - thanks for that!
[08:29:40] <arahael> dolio: oh? which one?
[08:29:48] <dolio> Thanksgiving.
[08:30:32] <arahael> ah, interesting - harvest day.
[08:35:06] <dsal> It's the day we celebrate our white ancestors coming to the US by spreading plague to our families.
[08:35:31] *** Joins: octeep[m] (~octeepoct@2001:470:69fc:105::1:3dbf)
[08:36:26] *** Quits: mbuf (~Shakthi@122.174.170.222) (Quit: Leaving)
[08:37:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Remote host closed the connection)
[08:41:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:42:02] <arahael> oh? wikipedia seemed to suggest it was related to the harvest?  i only read the intro paragraphs though.
[08:43:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:46:28] *** Quits: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0) (Quit: ZNC - http://znc.in)
[08:49:09] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[08:52:22] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:55:01] *** Quits: statusbot (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com) (Remote host closed the connection)
[08:55:16] *** Joins: statusbot (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com)
[08:56:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:01:05] *** Quits: fr33domlover_ (~fr33@2.55.143.230) (Ping timeout: 268 seconds)
[09:02:11] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 250 seconds)
[09:03:08] *** Joins: Moyst_ (~moyst@user/moyst)
[09:03:20] *** Joins: reumeth (~reumeth@user/reumeth)
[09:08:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:09:06] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 245 seconds)
[09:12:48] *** Joins: Skyfire (~pyon@user/pyon)
[09:15:42] *** Joins: abraham (~abraham@143.244.185.86)
[09:23:46] *** Guest3953 is now known as spider
[09:24:16] *** spider is now known as Guest42
[09:24:20] *** Guest42 is now known as spider__
[09:30:18] *** Joins: mbuf (~Shakthi@122.174.170.222)
[09:30:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[09:33:09] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 268 seconds)
[09:36:18] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[09:38:02] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[09:39:36] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[09:43:46] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[09:44:56] *** Quits: monochrom (trebla@216.138.220.146) (Ping timeout: 245 seconds)
[09:47:31] *** Joins: monochrom (trebla@216.138.220.146)
[09:48:28] *** Quits: Moyst_ (~moyst@user/moyst) (Remote host closed the connection)
[09:49:03] <mjrosenb> Does ghcjs support HasCallStack?
[09:49:22] <mjrosenb> I added that into a function which should definitely be on the call stack when an error is thrown
[09:49:34] <mjrosenb> but the error message makes no mention of said function.
[09:54:55] *** Joins: Moyst (~moyst@user/moyst)
[09:56:45] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:59:57] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:02:13] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 250 seconds)
[10:03:27] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[10:03:39] *** Joins: Moyst (~moyst@user/moyst)
[10:04:46] *** Quits: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[10:05:00] *** Joins: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi)
[10:17:27] *** Joins: michalz (~michalz@185.246.204.58)
[10:24:44] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[10:32:20] *** Quits: theproffesor (~theproffe@user/theproffesor) (Quit: Leaving)
[10:33:17] <arahael> I assume it does.
[10:37:27] * arahael regrets using amazonka.
[10:37:34] <jackdk> hm?
[10:37:35] *** Joins: theproffesor (~theproffe@user/theproffesor)
[10:38:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:39:08] <arahael> jackdk: Yeah - I'm in conflict hell, it has a pretty narrow set of versions it likes for aeson, and does not work at all with aeson 2.x
[10:41:16] <jackdk> arahael: are you using the version from hackage? github master at least has a 1.6.2 upper bound. I haven't tried doing an allow-newer: on aeson to see if it works with 2.0 yet
[10:41:59] <arahael> jackdk: There's active tickets that show aeson 2.x isn't even on amazonka's radar.
[10:42:13] <arahael> jackdk: They'll get to 2.x once amazonka gets to 2.0
[10:43:00] <jackdk> arahael: I know. I've been driving it. If you want to test it with aeson-2.0 I can at least promise a prompt PR review
[10:43:36] <jackdk> but my first priority is helping get the past ~three years of service updates etc out the door
[10:43:51] <arahael> jackdk: Unfortunately I can't isolate it just yet.  I'm still just trying to get it to satisfy version bounds again.  I'm currently seeing messages like:
[10:43:58] <arahael> > Failed to build network-3.1.2.5 because it depends on network-3.1.2.5 which itself failed to build.
[10:43:59] <lambdabot>  <hint>:1:100: error:
[10:43:59] <lambdabot>      parse error (possibly incorrect indentation or mismatched brackets)
[10:44:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:44:46] * arahael keeps forgetting that lambdabot uses the email-form of quoting.
[10:44:52] <jackdk> @botsnack
[10:44:53] <lambdabot> :)
[10:45:05] <jackdk> can you constrain aeson < 1.6 for now or is that unacceptable?
[10:45:50] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:bdf3:903c:8a82:6328)
[10:47:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:48:01] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[10:49:15] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[10:49:43] <arahael> That may well be working.  Now for a failure in Attoparsec...
[10:50:02] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 256 seconds)
[10:52:08] <arahael> I guess this is what I get for being on a bleeding edge haskell!  :)  (Well, not really bleeding edge, but it seems 9.2.1 made quite some breaking changes.)
[10:52:15] *** Quits: gdown (~gavin@h69-11-248-109.kndrid.broadband.dynamic.tds.net) (Remote host closed the connection)
[10:52:33] <arahael> Finally I have it failing on aeson itself.  But it seems to be using aeson-1.2.1.0
[10:52:50] <arahael> Not sure why it's settled on such an old version - how do I find out why it selected that version?
[10:53:35] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[10:56:12] <jackdk> you could set a newer version in cabal.project.freeze and see why and how it fails to solve?
[10:56:29] <jackdk> is this a public project?
[10:56:42] *** Quits: Jing (~hedgehog@2604:a840:3::105f) (Remote host closed the connection)
[10:57:37] *** Joins: Jing (~hedgehog@115.207.50.95)
[10:57:49] <arahael> I can make it public, let me just check if I've put in any passwords... ;)
[10:57:57] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[10:58:21] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[10:59:05] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:59:32] <arahael> It's already public: https://github.com/arafangion/auslansocial
[10:59:38] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[11:00:12] <arahael> I'm attempting to randomly try a whole pile of --allow-newer stuff along with a few packages in a local hackage to apply patches manually.
[11:00:35] <arahael> Local package has 9.2.1 patches applied for: basement-0.0.12.tar.gz cryptonite-0.29.tar.gz memory-0.16.0.tar.gz
[11:01:29] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:02:07] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[11:03:21] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[11:03:45] <arahael> It previously worked fine, but I was using an x86_64 build of haskell, and an older ghc, at that.  But now I've switched to an arm64 version of ghc and all that - and sometime in the past 5 months I must've updated my local LLVM (part of xcode) so that it's version 13 - which is too new for the current haskell and makes me need to use 9.2.1
[11:05:09] <arahael> As you've probably surmised, I don't really know what I'm doing at the moment :)
[11:05:15] <jackdk> okay, so you're forced to use 9.2.1 because you're on aarch64 because you're on an M1 mac and your new xcode updated llvm?
[11:06:10] <arahael> Yes. :)
[11:07:13] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[11:07:17] <arahael> If this was a production build or if I was on a deadline, I'd have just grabbed an older xcode, I guess, and then xcode-select'ed that version.
[11:07:22] <jackdk> okay. I'm on x86_64-linux and I've got a couple of things I need to wrap up before I clock off work. Let me see if I can get a GHC 9.2.1 and have a play.
[11:07:29] <arahael> But I'm taking this as an opportunity to learn... Everything...
[11:07:29] *** Joins: fr33domlover (~fr33@2.55.21.191)
[11:08:01] <jackdk> complete with cross-architectural detours!
[11:08:03] <arahael> jackdk: Please don't make me make you be late for work! :)
[11:08:23] <jackdk> she'll be right mate
[11:09:07] <arahael> And yeah, indeed! Oh! And on top of all that, I'm learning Shake, which seeems to be a pretty nifty build system, I like it.  I was thinking that maybe I should make it so that I can build all my various unmaintained private crap in teh same way, consistently...
[11:10:10] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:12:43] <arahael> I suspect there's no way I can build this with all these packages until Amazonka updates to aeson 2.x
[11:13:04] *** Joins: Pickchea (~private@user/pickchea)
[11:13:15] <tomsmeding> more forks :)
[11:13:22] <jackdk> pls no
[11:14:19] <arahael> Heh, actually if I urgently needed to get this building, I'd probably more likely strip amazonka out, and maybe shell in aws-cli instead.
[11:14:53] <jackdk> I've done that too, in places >_>
[11:15:07] <arahael> I've never liked the various amazon SDK's :(
[11:15:15] <arahael> third party or otherwise. 
[11:15:23] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:15:23] <arahael> They're just too freaking huge.
[11:15:41] <jackdk> someone (probably me) is going to have to write proper sts:AssumeRole at some point
[11:16:36] <arahael> I don't think I've needed that.  In the past actually I just wrote my own binding to the specific AWS services I needed.
[11:16:43] <jackdk> like you can do it, but you have to do it manually. I'd love for it to be supported by the default env stuff
[11:17:27] <jackdk> and by manually I mean going through amazonka-sts, pulling the key/sessionid/etc from teh response and then constructing a new Env
[11:17:47] <arahael> THat's over my head a bit, I'm just doing dead simple S3. ;)
[11:18:34] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[11:18:38] <arahael> Well, plus cloudflare invalidations.
[11:23:10] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[11:27:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:28:54] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8)
[11:33:28] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:37:15] *** Joins: mvk (~mvk@2607:fea8:5cc1:fa00::4702)
[11:44:00] <arahael> Hmm, just opened a new ticket on an unrelated project: https://github.com/erikd/language-javascript/issues/132
[11:44:50] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[11:45:52] *** Quits: nautical (~nautical@2601:602:900:1630::396f) (Quit: WeeChat 3.3)
[11:47:46] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Remote host closed the connection)
[11:48:24] <arahael> How do I find out why I'm pulling in a particular dependency?
[11:48:25] <tomsmeding> arahael: there is a âˆ‰ in that file
[11:48:34] <tomsmeding> only non-ascii character I think
[11:48:45] <arahael> tomsmeding: Why don't they just fix it?
[11:48:50] <tomsmeding> Â¯\_(ãƒ„)_/Â¯
[11:49:12] <tomsmeding> shouldn't break though, looks like a normal utf8 encoded thing
[11:49:32] <arahael> Yeah, I'm not sure what's happening, I mean, I've set the locale. That fixed it for everyone else.
[11:49:48] <arahael> And it's why I explictly showed how I used the locale there.
[11:50:19] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:50:33] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 250 seconds)
[11:50:39] <arahael> I'm not even sure why this other project is using language-javascript in the first place, though.
[11:51:07] *** Joins: chele (~chele@user/chele)
[11:51:08] <tomsmeding> they thought their library was too stable
[11:52:05] <arahael> The last commit to that project is 2 years ago.
[11:53:02] <tomsmeding> see? they didn't have the manpower to actually change the code and thereby make it unstable, so they just used javascript instead
[11:53:10] <tomsmeding> /s obviously
[11:53:21] <arahael> Heh. :)
[11:53:31] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea)
[11:53:49] <arahael> Clearly the answer is to get rid of it - I think I might play some nethack for a while first, though.  Been pretty flat out with meetings and Swift code.
[11:53:55] *** Joins: Unhammer (~Unhammer@user/unhammer)
[11:54:15] <arahael> Then I should find out how to figure out why the project's pulling it in in the first place!
[11:54:38] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea) (Client Quit)
[11:54:44] <jackdk> there is a way to get cabal to cough up a plan.json, I can't remember what it is
[11:54:54] <tomsmeding> dist-newstyle/cache/plan.json
[11:55:41] <tomsmeding> lists configured dependencies of each package in your dependency tree; no nice graph but should at least show where language-javascript is coming from
[11:55:42] <dminuoso> jackdk: You can call cabal-lib I guess?
[11:56:03] <tomsmeding> also `cabal-plan dot`
[11:56:35] <dminuoso> Im not sure whether cabal-exe allows to do nothing but produce a build plan
[11:56:57] <arahael> Uhh? Nothing depends on it!
[11:57:03] <tomsmeding> :D
[11:57:41] <arahael> There's only one mention of 'language-javascript' in that entire file, which means nothing depends on it.
[11:58:01] <tomsmeding> lol
[11:58:12] <arahael> Weird.
[11:58:32] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[11:58:38] <tomsmeding> also no hits of lngg-jvscrpt?
[11:58:55] * arahael looks at tomsmeding weirdly.
[11:58:55] <tomsmeding> no idea why that would happen, but I saw it in your issue
[11:59:14] <arahael> There's several hits...
[11:59:25] <tomsmeding> but relevant ones?
[11:59:33] <arahael> That makes no sense, I thought you were being sarcastic, I mean, "of course javascript would chop off the vowels".
[11:59:40] <tomsmeding> :')
[12:00:16] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[12:01:24] <arahael> Why do so many of these chop off the vowels!?
[12:01:31] <tomsmeding> I have absolutely no idea
[12:01:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[12:01:56] <tomsmeding> also, â€½
[12:02:18] <arahael> It's being pulled in via yesod-static -> hjsmn -> lngg-jvscrpt
[12:02:31] <arahael> I guess that makes sense.
[12:02:41] <arahael> Another reason to chop off yesod, too!
[12:02:46] <arahael> (But not today)
[12:03:07] <tomsmeding> right
[12:04:42] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 260 seconds)
[12:05:26] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[12:07:49] * arahael hopes jackdk has gone to work.
[12:08:13] <jackdk> oh no I finished work for the day, I'm LARPing the cabal constraint solver
[12:08:20] *** Joins: max22- (~maxime@2a01cb0883359800d4d6b02a2c3bac5a.ipv6.abo.wanadoo.fr)
[12:09:01] <jackdk> I'm hitting packages that say "build-depends: base > 4.x && < 5", but then break on GHC9 :(
[12:09:43] <tomsmeding> send thanks to stack
[12:11:01] <arahael> Yeah, looking at all this has been *eyeopening* to me.
[12:11:29] <jackdk> I think it's really rude to build LTS snapshots based on a claim of "these packages build together", informed by dependency information on hackage, and then write tooling that defaults to generating crap dependency information
[12:12:42] <arahael> Maybe this is part of the reason I'm having so much trouble with GHC9.
[12:13:23] <arahael> Basically not one of my personal, unmaintained, bitrotten projects has survived the transition to GHC9. :(
[12:13:51] <arahael> (And most of them were originally stack projects, but...  I'm very tired of stack, and am basically trying to pretend I never used it)
[12:14:04] <jackdk> I use `cabal gen-bounds` and advance them carefully. But yeah GHC9 seems to be rough for a bunch of people
[12:14:39] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:14:49] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:14:51] <arahael> I also have an ffi bug as well, but I'm working around that by explicitly passing an -I include flag for a random libffi on the system.
[12:15:10] <arahael> I hope that'll be fixed in 9.2.2, or something.
[12:15:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:17:15] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e17949910e638228d35.dip0.t-ipconnect.de)
[12:19:17] <arahael> So I've been starting using Shake in a monorepo, hope that doesn't bite me.
[12:21:04] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[12:22:10] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[12:25:06] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[12:27:41] *** Quits: fr33domlover (~fr33@2.55.21.191) (Ping timeout: 268 seconds)
[12:28:44] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:31:37] <jackdk> arahael: I regret to say that you'll be genuinely stuck until amazonka support aeson-2.0: aeson-1.5.6 tries to declare an instance for Data.Semigroup.Option, which went away in base-4.16
[12:32:22] <arahael> jackdk: I'm had a hunch that was going to be the case, but I had no idea why. How on earth did you find that out?
[12:33:18] <jackdk> I gave up on aeson-1.5.6.0 for some reason that I forget, and tried to allow aeson ^>= 2.0 using allow-newer in cabal.project. Then I saw the aeson build failure
[12:33:37] <arahael> Ah, so you used painful experience.
[12:34:09] <arahael> i think in the next couple of months by which I'll probably need this, I'll either be lucky and amazonka then supports it - and hopefully that's not the only issue - or I strip out amazonka.
[12:35:04] <Hecate> we can petition amazonka and offer our help
[12:35:04] <jackdk> I have a cabal.project file that I'll pastebin to you because it'll show you some tricks for pinning/working around people being sloppy with bounds
[12:35:34] <arahael> jackdk: Thanks!
[12:35:44] *** Joins: rkrishnan (~user@122.172.141.170)
[12:36:01] <jackdk> arahael: why ghc 9.2.1? I know it's good to follow the latest to keep up to date, but is there anything you particularly need?
[12:36:19] <arahael> jackdk: It needs to support both aarch64 and llvm 13+.
[12:36:26] <jackdk> oh yeah that's right
[12:36:29] <Hecate> https://github.com/brendanhay/amazonka/issues/680
[12:36:48] <jackdk> Hecate: I wrote that issue.
[12:37:03] <Hecate> oh you are endgame!
[12:38:23] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[12:38:42] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[12:38:52] <arahael> Oh, btw, I really enjoyed using amazonka when I first discovered it.  I just don't today, but when I found it, I liked it.  I just wish AWS's SDK's weren't generally huge.
[12:39:12] <jackdk> tell jeff to stop releasing a zillion services every week
[12:39:23] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:39:25] <arahael> Right, and with subtle wacky variations.
[12:39:44] <arahael> Just make it so that we can feasibly write our own bindings or support *consistent* conventions or something!
[12:41:09] *** Joins: martin02 (~silas@141.84.69.76)
[12:42:12] <arahael> They shouldn't basically require a unique authentication system.  Even if it was slapping a Swagger interface on everything that'd be an improvement.
[12:42:34] <jackdk> cloud control api is an improvement in that regard, at least for CRUDL
[12:43:11] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:43:16] <arahael> I'm not familiar with that!
[12:43:54] <jackdk> only came out this year -- https://aws.amazon.com/blogs/aws/announcing-aws-cloud-control-api/
[12:45:17] <arahael> At a glance, that looks pretty good.
[12:45:56] <arahael> Any drawbacks that you forsee?
[12:46:04] <arahael> I notice they don't seem to have complete coverage.
[12:46:26] <jackdk> I haven't looked at it in depth but at a glance it seemed pretty close to CloudFormation property specifications, which are occasionally pretty frustrating to write
[12:46:54] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[12:47:04] <arahael> There's a lot of that across the stack, though.
[12:47:27] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:48:14] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8)
[12:49:31] <arahael> jackdk: Did I miss your cabal.project suggestions? I can't find them.
[12:50:01] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:50:03] <jackdk> no you didn't. I thought I'd have one more crack before giving up
[12:50:27] <jackdk> arahel: Drop this in teh root of your repo: https://www.irccloud.com/pastebin/gDUSgcxb/cabal.project
[12:50:43] <jackdk> Ignore the --sha256 comments -those are because I was using haskell.nix
[12:51:44] *** Joins: mmhat (~mmh@55d42d28.access.ecotel.net)
[12:51:45] <arahael> Ah, I also use nix, though not for this at the moment.  I'm in very much a love/hate situation with nix, and this week more on the hate side as you may have noticed.
[12:52:07] <jackdk> it can do that to you, yeah
[12:52:16] <arahael> This looks simpler, thanks for this.  I was using a local no-index hackage repo to override... Three of these.
[12:52:31] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Ping timeout: 250 seconds)
[12:52:36] <jackdk> yeah don't do that. source-repository-package stanzas are waaayyy easier
[12:53:23] <arahael> For sure - and more isolated to the specific project.
[12:53:29] <arahael> I like this, thanks heaps for that!
[12:54:07] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:54:25] <arahael> Incidentially, those sha256 lines... Is there a particular way you generate those?  Usually I'd just invent a sha256. ("aaa" - yep, that's a sha256. Lets try that), wait for nix to complain, "aaa is not sha256-r/fFlrgF3KbD/yaFKNW2ORJepUB2/UDEegYnV/WPodQ", then I copy that in and it's all good.
[12:55:04] <jackdk> that's exactly what I did. `M-: (dotimes (i 52) (insert ?0))` in emacs
[12:56:02] <arahael> Nice.
[12:56:09] <arahael> I'll stick with "aaa". :)
[12:56:23] <jackdk> because it makes you want to scream?
[12:56:34] * arahael reminds jackdk of his love-hate relationship with nix.
[13:01:24] <jackdk> mostly love, tbh.
[13:02:02] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:03:21] <arahael> Do you use it at work?
[13:03:35] <jackdk> yes
[13:03:40] <arahael> I think that might be why.
[13:03:55] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:03:59] <arahael> I basically fight with nix once every other week or so, and only ever on my home system, an hour after I should've gone to bed.
[13:04:27] <arahael> My big rant here the other day was basically 1-2 hours after I should've been in bed. :(
[13:04:44] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8)
[13:05:06] <arahael> (At work, we're always in xcode, so there's relatively little need for nix.  We've got a whole bunch of dependency problems, but nix won't solve those.)
[13:09:23] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[13:13:25] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[13:14:02] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[13:14:31] *** Quits: mvk (~mvk@2607:fea8:5cc1:fa00::4702) (Ping timeout: 245 seconds)
[13:17:14] *** Joins: cfricke (~cfricke@user/cfricke)
[13:18:52] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[13:19:06] *** Joins: fr33domlover (~fr33@2.55.21.191)
[13:26:24] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea)
[13:26:48] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea) (Client Quit)
[13:29:13] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea)
[13:29:41] *** Joins: ubert (~Thunderbi@p200300ecdf0ba227e6b318fffe838f33.dip0.t-ipconnect.de)
[13:34:02] <dminuoso> The main problem with nix is gaining the level of expertise that you dont mind the rough edges anymore.
[13:34:06] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[13:34:15] <dminuoso> It has a relatively deep initial investment cost
[13:34:18] *** Quits: fr33domlover (~fr33@2.55.21.191) (Ping timeout: 260 seconds)
[13:34:52] <dminuoso> If you intend to use nix at your job, you better have one or two experts that can deal with all the bizarre nonsense you might encounter.
[13:39:19] <arahael> That, too, yeah.
[13:39:42] <arahael> I'm super wary of introducing it for that reason.
[13:39:55] <arahael> (And besides, again, it wouldn't work for us, because we use macos)
[13:40:16] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Remote host closed the connection)
[13:40:41] <arahael> I should probably be more specific: We use xcode there, I don't think we can viably nixify the various xcode and dependencies for iOS projects.
[13:44:01] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[13:50:48] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 260 seconds)
[13:55:12] *** Joins: acidjnk (~acidjnk@p200300d0c7271e17fcc20a5d4f804d59.dip0.t-ipconnect.de)
[13:55:50] <dminuoso> You probably can *shrugs*
[13:57:16] <Franciman> dminuoso: have you had a chance to review guix too?
[13:58:28] <dminuoso> No.
[13:58:44] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e17949910e638228d35.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:58:57] <Franciman> I am no expert, but to me it seems it has a better UX
[13:59:00] <Franciman> and saner defaults
[13:59:21] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e1739bc3d1dda3deba6.dip0.t-ipconnect.de)
[13:59:27] <Franciman> and it encourages free software
[13:59:27] *** Quits: acidjnk (~acidjnk@p200300d0c7271e17fcc20a5d4f804d59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:59:59] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:a418:17da:6b4f:5fc3)
[14:00:00] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:00:40] <dminuoso> Not sure how NixOS does not encourage free software *shrug*
[14:00:56] <dminuoso> I havent heard many positive things from other NixOS users so far
[14:01:54] <dminuoso> Plus nix/nixos has matured really well in terms of integration, package availability and maintainership
[14:02:12] <dminuoso> Think nixpkgs is the most active repository on all of github right now?
[14:03:54] <Franciman> dminuoso: NixOS officially packages software that is non free
[14:03:58] <Franciman> that's encouraging its use
[14:04:08] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:04:36] <dminuoso> Im not sure about encouragement, to be honest.
[14:04:42] <dminuoso> This seems to be a religious topic for some I guess.
[14:05:00] <dminuoso> Absolutely nothing in all of nixos nudges you towards using it. In fact, you cant even install non-free software without explicitly enabling it.
[14:05:26] <Franciman> you are right
[14:05:36] <Franciman> I would have been best sayin: it does not discourage it
[14:05:39] <Franciman> that's a fact
[14:05:50] <Franciman> while guix actively discourages non free software
[14:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:05:53] <dminuoso> It discourages it by fact of not allowing you install it out of the box?
[14:05:58] <dminuoso> So its not a fact.
[14:06:08] <Franciman> and not allowing to talk about it in its mailing list, irc
[14:06:09] <Franciman> etc
[14:06:13] <Franciman> so you get no support for it
[14:06:26] *** Joins: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:06:30] <Franciman> they don't give support if you have problems with non free software 
[14:06:38] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[14:06:45] <dminuoso> not allowing to talk about proprietary software is getting quite religious now. :)
[14:07:32] <dminuoso> I think you're conflating "discouraging" with "making it as hard as possible"
[14:07:34] <Franciman> I don't care
[14:07:46] <Franciman> why?
[14:07:50] <dminuoso> NixOS discourages proprietary software by fact of not allowing you to install any unless you explicitly set an option.
[14:08:23] <Franciman> I see
[14:08:44] <Franciman> so, Guix works harder to make you use free software
[14:08:48] <Franciman> also
[14:08:52] <dminuoso> That sounds reasonable
[14:08:53] <Franciman> non free software is not propertary
[14:09:02] <dminuoso> Or rather not reasonable, but sounds more correct
[14:09:32] <dminuoso> Not sure what the distinction there is 
[14:09:59] <dminuoso> I always believed proprietary and non-free to be synonyms *shrugs*
[14:10:00] <Franciman> it's better discovered on your own
[14:10:13] <Franciman> when you sign for vscode things
[14:10:45] <dminuoso> If VSCode wants to attach special meaning to those words fine
[14:10:57] <dminuoso> But they're not the authority on the meaning of words
[14:11:11] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[14:12:39] <Franciman> I wouldn't say firefox is propertary
[14:12:47] <Franciman> yet it is not free software
[14:13:11] <dminuoso> What is the distinction you are trying to make?
[14:13:42] <dminuoso> What is non-free about firefox?
[14:13:53] <Franciman> I don't do the distinction 
[14:14:16] <dminuoso> You just did
[14:14:21] <dminuoso> 11:42:47       Franciman | yet it is not free software
[14:14:21] <Franciman> it's the Free Software Foundation definition
[14:14:24] <Franciman> *shrugs*
[14:14:53] <Hecate> free software or open governance?
[14:14:57] <Hecate> two very different things
[14:15:36] <dminuoso> You're just leaving bits for me to guess
[14:15:41] <dminuoso> So Im not sure what you are referring to
[14:15:47] <Franciman> I thought it was a common knowledge
[14:15:50] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[14:15:50] <Franciman> ok
[14:15:52] <Franciman> one second
[14:16:32] <Franciman> https://www.gnu.org/philosophy/free-sw.html.en
[14:16:55] <merijn> How is Firefox non-free according to that definition?
[14:16:59] <Franciman> the users have the freedom to run, copy, distribute, study, change and improve the software.
[14:17:09] <Franciman> roughly this is the meaning
[14:17:15] <Franciman> and firefox doesn't allow you to distribute firefox
[14:17:20] <merijn> Franciman: It does
[14:17:24] <Franciman> one second
[14:17:27] <Franciman> holy hell
[14:17:29] <Franciman> so fast
[14:17:30] <merijn> It doesn't allow you to use the *name* firefox
[14:17:35] <Franciman> indeed
[14:17:42] <Franciman> that's a violation
[14:17:48] <dminuoso> No its not.
[14:17:49] <merijn> No
[14:17:52] <Franciman> holy hell
[14:17:55] <Franciman> one second
[14:18:00] <dminuoso> Its about distributing the *software*, not the trademark.
[14:18:06] <merijn> The *software* can be distributed just fine
[14:18:25] <merijn> You cannot randomly take a trademark of someone else and use that.
[14:18:37] <merijn> That is, however, not a restriction on the software
[14:18:41] <dminuoso> While I agree that the mozilla foundation has a lot of highly questionable practices, and they're not the moral pillar of the software community by far, firefox is by all accounts free software.
[14:18:44] <Franciman> Mozilla has found a clever way to take away freedom 2 ("The freedom to redistribute copies so you can help your neighbor") using trademark law instead of using copyright law.
[14:18:55] <merijn> Franciman: Untruee
[14:18:55] <Franciman> so you can't redistribute copies
[14:19:05] <merijn> Franciman: You *can* distribute copies, just not using the name firefox
[14:19:11] <Franciman> that's not firefox then
[14:19:21] <dminuoso> You're being silly now.
[14:19:27] <Franciman> honstly
[14:19:29] <Franciman> I don't care
[14:19:35] <Franciman> I am explaing some others point of view
[14:19:48] <Franciman> it's free software foundation that is arguing this
[14:19:51] <Franciman> not me
[14:20:00] <dminuoso> Where does the FSF argue that firefox is not free software based on this?
[14:20:09] <merijn> Mozilla's doing *exactly* what trademark law was created for: Preventing user confusion by ensuring you know *who* is behind a product
[14:20:20] <merijn> Franciman: Citation of FSF arguing against firefox being free please
[14:20:41] <Franciman> I quoted you
[14:20:45] <dminuoso> Where is that quote from?
[14:20:52] <merijn> Franciman: You didn't?
[14:20:54] <Franciman> https://libreplanet.org/wiki/Libre_Browsers_Libre_Formats
[14:20:57] <Franciman> it's from here
[14:21:01] <dminuoso> That is not the FSF
[14:21:09] <dminuoso> That's some random authors opinion
[14:21:11] <Franciman> https://libreplanet.org/wiki/Libre_Browsers_Libre_Formats#Browsers_that_might_or_might_not_be_free
[14:21:25] <Franciman> lol dminuoso can you stop being ridiculous and watch the bottom of the website?
[14:21:27] <dminuoso> Or maybe
[14:21:29] <merijn> Franciman: That's not an FSF site
[14:21:29] <dminuoso> Mm
[14:21:34] <Franciman> same merijn 
[14:21:50] <Franciman> if you want to attack me 
[14:21:52] <Franciman> please say so
[14:22:05] <Franciman> you don't even seem to want to look at what I link
[14:22:15] <dminuoso> It's certainly an FSF funded project
[14:22:21] <dminuoso> But its not the same as being the FSF itself
[14:22:26] <Franciman> you just keep saying it's not true
[14:23:37] <jackdk> That page links to a statement by Brett Smith, who at time of posting was a "License Compliance Engineer" at the FSF, if his signature is to be believed: https://lists.nongnu.org/archive/html/gnu-linux-libre/2011-08/msg00014.html
[14:25:06] <dminuoso> Thanks, jackdk
[14:25:17] <Franciman> it's not trueee
[14:25:20] <Franciman> it's not trueee
[14:25:22] <Franciman> it's not trueee
[14:25:26] <Franciman> screw that
[14:25:29] <Franciman> bye
[14:25:37] <Franciman> thanks jackdk 
[14:26:41] <Franciman> where is merijn now?
[14:26:58] <Franciman> what do you think about this?
[14:27:32] <Hecate> I hope merijn is doing something more fulfilling
[14:27:32] <dminuoso> It's an interesting proposition, and I can see where they are coming from.
[14:27:54] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[14:28:31] <merijn> merijn is back in his video conference meeting for work, which probably doesn't quote as more fulfilling than arguing on the internet :p
[14:29:01] <Hecate> hahaha
[14:29:27] <Franciman> this explains why you didn't open the links
[14:29:34] <Franciman> and kept saying it's not fsf
[14:29:53] <dminuoso> No, the issue is just that you expected us to prove your point for you
[14:30:07] <Franciman> that's what you assumed, tbf
[14:30:15] <Franciman> I linked a website by fsf and you said, this is not fsf
[14:30:18] <dminuoso> If you had just started out with the link jackdk had shown, all would have been simpler.
[14:30:21] <dminuoso> It was not FSF
[14:30:25] <Franciman> yeah sure
[14:30:25] <merijn> I somehwat agree with Brett that re-distributing unmodified Firefox using the name could be fine, but I disagree with him that's sufficient to violate the free rights
[14:30:28] <Franciman> *shrugs*
[14:30:29] <dminuoso> It was a website of a project *funded* by FSF
[14:30:58] <merijn> I opened libreplanet, read the firefox part, but I can't be arsed to go over the entire page and see if they are or aren't funded by the FSF
[14:31:19] <Franciman> but you can be arsed to say it's not fsf
[14:31:22] <dminuoso> And even if they are funded, their opinion might not necessarily match the FSFs opinion
[14:31:27] <dminuoso> It's not FSF.
[14:31:30] <Franciman> it is
[14:31:32] <dminuoso> No its not.
[14:31:40] <Franciman> *shrugs* *shrugs*
[14:31:47] <Franciman> ok
[14:32:07] <dminuoso> If the FSF funds a project, that project is not automagically part of the FSF.
[14:32:16] <dminuoso> either way
[14:32:29] <dminuoso> Not interested in continuing here
[14:32:45] <merijn> Franciman: Yes, because saying that takes 5 seconds. Anyway, this discussion seems mostly pointless. Brett says "unmodified firefox should be allowed to be distributed under the Firefox name, but requiring a name change on modification is fine"
[14:33:01] <Franciman> it's not
[14:33:14] <Franciman> I mean
[14:33:17] <Franciman> it's not the FSF
[14:33:19] <Franciman> its libreplanet
[14:33:20] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[14:33:20] <merijn> Franciman: Well, Brett's email linked by jackdk literally says it is
[14:33:24] <Franciman> one second
[14:33:33] <Franciman> I was saying something different
[14:33:42] <Franciman> I was saying it is not the FSF they are just funded by them
[14:33:45] <merijn> So restricting name usage on modified versions is fine with the FSF
[14:33:46] <Franciman> i.e. dminuoso is right
[14:34:07] <jackdk> please stop beeping me about this
[14:34:22] <merijn> My view: Restricting name usage on unmodified versions is a reasonable compromise, because it's hard to track down and check whether copies are modified or not
[14:34:34] <Franciman> sorry jackd.k 
[14:34:41] <jackdk> thanks
[14:34:50] <Franciman> also time for offtopic
[14:35:00] <Franciman> or for merijn their conference
[14:36:05] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:37:26] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Quit: ZNC 1.8.2 - https://znc.in)
[14:37:53] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[14:40:41] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8)
[14:45:11] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d837:dc58:2ea7:10e8) (Ping timeout: 250 seconds)
[14:49:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:58:11] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 250 seconds)
[15:01:19] *** Joins: __monty__ (~toonn@user/toonn)
[15:04:31] *** Joins: neurocyte0132889 (~neurocyte@94.46.68.97)
[15:04:31] *** Quits: neurocyte0132889 (~neurocyte@94.46.68.97) (Changing host)
[15:04:31] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:06:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:11:58] *** Joins: fr33domlover (~fr33@2.55.42.98)
[15:12:16] *** Parts: royo (~royo@user/royo) ()
[15:13:28] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:13:30] *** Quits: Cajun (~Cajun@user/cajun) (Ping timeout: 256 seconds)
[15:13:36] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[15:15:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:15:32] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:15:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[15:16:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:49] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:22:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:22:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:42] <gentauro> are there only 3 employees at `well-typed`? https://www.dnb.com/business-directory/company-profiles.well-typed_llp.d4bf168abe3b4181d776efa2ad7dc49f.html
[15:23:27] <Hecate> gentauro: the rest are consultants 
[15:23:38] <gentauro> Hecate: aha
[15:23:43] <Hecate> gentauro: it's not a joke :')
[15:24:01] <gentauro> Hecate: so like `external freelancers` right?
[15:24:07] <Hecate> yeah
[15:24:10] <gentauro> just `body-shopped` for customers
[15:24:11] <gentauro> got it
[15:24:12] <gentauro> :)
[15:24:38] <Hecate> not necessarily body-shopped for customers, the consultants are long-term hires
[15:25:18] <gentauro> Hecate: but they are `sold` to `some company` right? Otherwise, how can WT pay the `freealnce` fee?
[15:25:44] <gentauro> I understood from Simon Marlow that FB + MS Research paid for two to work on GHC
[15:25:47] <gentauro> iirc
[15:26:11] *** Quits: phma (phma@2001:5b0:212a:8778:d128:5f0e:1eb9:3baa) (Read error: Connection reset by peer)
[15:27:05] *** Joins: phma (phma@2001:5b0:2144:5518:1989:d92a:fa65:167d)
[15:27:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:28:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:29:39] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[15:29:52] *** Joins: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9)
[15:33:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:33:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:41:30] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:42:44] *** Parts: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) ()
[15:44:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:44:36] *** Joins: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk)
[15:44:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:46:33] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[15:47:26] *** Joins: notzmv (~zmv@user/notzmv)
[15:47:26] *** Quits: max22- (~maxime@2a01cb0883359800d4d6b02a2c3bac5a.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[15:50:47] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[15:54:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:55:13] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:55:51] *** Joins: chomwitt (~chomwitt@94.69.34.153)
[15:56:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:56:46] *** Joins: sunarch (uid526836@user/sunarch)
[16:01:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:02:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:07:13] *** Quits: michalz (~michalz@185.246.204.58) (Ping timeout: 268 seconds)
[16:07:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:08:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:13:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:14:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:15:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 245 seconds)
[16:15:40] <jackdk> arahael: https://github.com/brendanhay/amazonka/pull/713
[16:16:59] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[16:18:17] <arahael> woohoo!  thanks jackdk!  i'll check it out later in the week :) (midnight here now)
[16:19:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:20:12] <dminuoso> Oh whats new in aeson 2.0?
[16:20:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:20:25] <dminuoso> Anything exciting?
[16:36:33] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 250 seconds)
[16:37:38] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[16:40:30] *** Nrmncr is now known as Neuromancer
[16:41:57] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[16:42:41] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[16:42:50] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 260 seconds)
[16:43:25] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[16:54:48] <arahael> dminuoso: works with ghc 9.2.1
[16:55:00] * arahael cant sleep
[16:55:47] *** Quits: mmhat (~mmh@55d42d28.access.ecotel.net) (Quit: WeeChat 3.3)
[17:06:33] *** Joins: Lycurgus (~juan@98.4.112.204)
[17:07:59] *** Joins: slack1256 (~slack1256@181.42.50.148)
[17:08:16] *** Joins: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de)
[17:08:29] <jumper149> Should I ever use `ReadP` or always stick to `ReadPrec`? I want to write a custom `Read` instance.
[17:11:11] <merijn> jumper149: honestly, neither if you wanna remain sane :p
[17:11:27] <merijn> Would also highly recommend not doing custom Read instances, tbh
[17:15:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk) (Remote host closed the connection)
[17:17:18] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:20:24] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[17:22:26] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 268 seconds)
[17:24:22] *** Quits: gentauro (~gentauro@user/gentauro) (Ping timeout: 260 seconds)
[17:26:24] *** Joins: hiruji (~hiruji@user/hiruji)
[17:26:32] *** Joins: gentauro (~gentauro@185.107.12.141)
[17:26:32] *** Quits: gentauro (~gentauro@185.107.12.141) (Changing host)
[17:26:32] *** Joins: gentauro (~gentauro@user/gentauro)
[17:28:42] *** Joins: _bo (~bo@217.18.216.247)
[17:29:56] *** Joins: michalz (~michalz@185.246.204.33)
[17:31:42] *** Joins: Pickchea (~private@user/pickchea)
[17:32:18] *** Joins: bo_ (~bo@217.18.216.247)
[17:32:27] *** Quits: _bo (~bo@217.18.216.247) (Client Quit)
[17:32:30] *** Quits: bo_ (~bo@217.18.216.247) (Client Quit)
[17:32:42] *** Joins: _bo (~bo@217.18.216.247)
[17:34:25] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[17:34:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[17:36:20] * Lycurgus thinks about what kind of of epistemic ops would attach to an attestation under "tbh"
[17:37:18] * Lycurgus a defeasor of some sort prolly
[17:38:18] *** Joins: max22- (~maxime@2a01cb088335980085c825298679dd8e.ipv6.abo.wanadoo.fr)
[17:40:15] <Unhammer> wow, perfecthash memory use is quite amazing
[17:40:43] *** Joins: reumeth (~reumeth@user/reumeth)
[17:40:52] <Unhammer> Weigh says "Live 8M" where hashmap.strict is 97M (1 million bytestrings)
[17:42:14] <[exa]> how long are the bytestrings? smashing 1M bytestrings into 8M memory sounds fishy.
[17:43:58] <[exa]> (also does the memory allocated by CMPH count into this?)
[17:44:18] <Unhammer> https://github.com/unhammer/dictionaries/blob/perfecthash/Space.hs#L75-L76
[17:44:23] <Unhammer> Hm, maybe not?
[17:45:17] <Unhammer> I should make an executable and look at RES
[17:48:32] *** Joins: Guest17 (~Guest17@68.171.185.81.rev.sfr.net)
[17:51:27] *** Joins: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk)
[17:54:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[17:54:24] *** Joins: rewq (~pc@102.184.117.46)
[17:55:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[17:56:16] *** Quits: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk) (Ping timeout: 260 seconds)
[17:56:29] *** Parts: rewq (~pc@102.184.117.46) ()
[18:01:28] <Unhammer> Heh, I end up with exactly the same 304M RES if I read /usr/share/dict/nynorsk into either PerfectHash or HashMap.Strict, performGC and interact 
[18:01:56] <Unhammer> no wait now perfecthash sunk to 225M :O
[18:03:01] *** Quits: Guest17 (~Guest17@68.171.185.81.rev.sfr.net) (Quit: Client closed)
[18:04:44] <Unhammer> â€¦ 95M
[18:05:01] <Unhammer> is there something a bit more reliable than System.Mem.performGC?
[18:08:13] <[exa]> no
[18:08:43] <[exa]> like, you can have a look at the implementation and relatively easily compute how much actual memory gets occupied, or spend half a century trying to invent a good method to measure RAM usage
[18:10:42] <Unhammer> hm, tough choices
[18:10:58] *** Joins: jippiedoe (~david@2a02-a44c-e14e-1-b210-1839-c8ac-8b46.fixed6.kpn.net)
[18:12:07] <[exa]> honestly If you're after data efficiency and matching power, just make a perfect trie and store it in an array
[18:12:38] <[exa]> I wouldn't say there's much to be gained by really having a perfect hash here
[18:14:09] <Unhammer> I would say 1/3 RES memory usage by simply switching from hashmap.strict to perfecthash is quite a bit to be gained
[18:16:35] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:16:39] *** Joins: jkaye (~jkaye@2601:281:8300:7530:1dd5:12e8:f7a8:958d)
[18:17:16] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 260 seconds)
[18:17:23] <[exa]> yeah if that helps your usecase
[18:17:57] <[exa]> I'm generally trying to avoid this kind of optimization because there's still 1000s of other things that may just explode the memory usage
[18:18:09] <[exa]> unless you know, you're sure that you can fit into 1000x less memory :D
[18:22:04] <Unhammer> I have a server that on startup reads a bunch of words into memory. It never adds/removes/changes anything after startup. It needs to be able to look them up fast and preferably not take too much memory. The word list is the main memory user, which I know because if I read less words I use less memory =P
[18:23:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:23:08] <Unhammer> so for me, less memory usage (while having good lookup speed) is the one optimization that would be worthwhile
[18:26:54] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[18:29:39] <Unhammer> https://github.com/unhammer/dictionaries/commit/b2f0e866d3f8d97d92df6215c8da79e9c5f89424 
[18:30:10] <Unhammer> https://hackage.haskell.org/packages/search?terms=perfect%20trie :(
[18:30:32] <Unhammer> though maybe the 3.0 branch of bytestring-trie has less memory usage, haven't found time to try that yet
[18:30:41] <Unhammer> apparently it's a complete rewrite of internals
[18:31:27] <merijn> Unhammer: If your lookup thing-y is of considerable size you might also wanna look into compact regions to get a nice GC speed up
[18:32:02] <merijn> (this doesn't help reduce the overall memory usage, but still...)
[18:33:34] <merijn> Unhammer: Also, are you aware of "+RTS -sstderr"?
[18:36:16] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[18:41:32] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Remote host closed the connection)
[18:41:50] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 260 seconds)
[18:46:40] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[18:48:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:48:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:48:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:32] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 260 seconds)
[18:50:46] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e1739bc3d1dda3deba6.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[18:51:08] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[18:51:48] *** Joins: jjw (~user@2600:1700:53b0:3d1f:8c2d:4169:3092:35c1)
[18:54:22] *** Quits: jjw (~user@2600:1700:53b0:3d1f:8c2d:4169:3092:35c1) (Quit: ERC (IRC client for Emacs 28.0.50))
[18:55:07] *** Quits: jippiedoe (~david@2a02-a44c-e14e-1-b210-1839-c8ac-8b46.fixed6.kpn.net) (Quit: Leaving)
[18:56:40] *** Joins: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net)
[18:58:07] *** Quits: srk (~sorki@user/srk) (Quit: ZNC 1.8.1 - https://znc.in)
[18:58:26] *** Joins: srk (~sorki@user/srk)
[18:58:27] *** Quits: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net) (Client Quit)
[18:58:38] <lortabac> speaking of which... is it normal that the time spent in the mutator increases when using compact regions? (the overall time goes down thanks to the reduced GC time)
[18:58:42] *** Joins: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net)
[18:59:05] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:59:13] <lortabac> or am I hitting some pathological case?
[18:59:18] <merijn> lortabac: I mean, if you spend less time on GC then obviously the fraction spent in the mutator seems obvious?
[18:59:24] *** Quits: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net) (Client Quit)
[18:59:27] <merijn> +increases
[18:59:29] <lortabac> merijn: :)
[18:59:40] *** Joins: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net)
[18:59:41] <lortabac> merijn: the absolute time increases
[18:59:59] <merijn> lortabac: "It Depends"
[19:00:06] <merijn> Creating the compact region takes mutator time
[19:00:33] <merijn> So if your measurement is short enough, that might increase the overall time
[19:03:00] <merijn> So I can certainly think of some cases where that might happen. But it depends on tons of factors like the size of the region you're creating, how long the rest of the workload is, etc.
[19:04:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[19:07:11] <lortabac> merijn: the increase in mutator time seems to be proportional to the total time, so it's probably not the creation alone
[19:07:49] <tomsmeding> is the size of the compact region also proportional to that?
[19:07:54] <lortabac> tomsmeding: no
[19:07:58] <lortabac> the size is fixed
[19:08:00] <tomsmeding> if so, creation might be linear in the size of the compact region
[19:08:01] <tomsmeding> ah
[19:10:56] *** Joins: cheater (~Username@user/cheater)
[19:14:32] *** Quits: Feuermagier_ (~Feuermagi@213.178.26.41) (Quit: Leaving)
[19:14:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:16:37] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[19:22:33] *** Joins: zava (~zava@ip5f5bdf0f.dynamic.kabel-deutschland.de)
[19:22:41] *** Quits: jkaye (~jkaye@2601:281:8300:7530:1dd5:12e8:f7a8:958d) (Ping timeout: 268 seconds)
[19:24:57] <merijn> lortabac: I'd be interested in seeing the GC summary and/or profiling data :)
[19:26:34] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[19:27:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[19:28:22] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea) (Quit: gone to sleep. ZZZzzzâ€¦)
[19:29:41] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[19:29:46] <lortabac> merijn: it's for an open-source project, if you are really curious I can push the two branches (with and without compact regions) to Github
[19:30:02] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:30:37] <lortabac> however I don't think I'll have time today, maybe tomorrow
[19:32:03] *** EvanR_ is now known as EvanR
[19:32:15] *** Quits: EvanR (~evan@2600:1700:ba69:10:5c7c:46a9:5e48:ea) (Changing host)
[19:32:15] *** Joins: EvanR (~evan@user/evanr)
[19:32:41] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[19:33:05] *** Joins: burnsidesLlama (~burnsides@dhcp168-032.wadham.ox.ac.uk)
[19:33:18] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea)
[19:36:04] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea) (Client Quit)
[19:36:08] <merijn> lortabac: tbh, I'm not curious enough to generate them myself :p But if you make them, feel free to ping me and I'll have a look :)
[19:36:43] <lortabac> merijn: is +RTS -t enough or do you want something else?
[19:36:48] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[19:37:05] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:37:13] <merijn> lortabac: +RTS -sstderr reports GC statistics
[19:37:21] <lortabac> ok
[19:37:23] <merijn> Not sure what -t does :p
[19:37:29] *** Quits: TMA (tma@twin.jikos.cz) (Ping timeout: 268 seconds)
[19:38:10] <merijn> Ah
[19:38:19] <merijn> -s is just the human readable version of -t :)
[19:38:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:39:18] <merijn> lortabac: Essentially this is the difference: https://paste.tomsmeding.com/w5NxWtcc
[19:40:31] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[19:41:10] <EvanR> compact regions are useful as like, a ROM sort of thing, right xD
[19:41:23] <EvanR> once forged you carry it around for a while and don't change it
[19:41:48] <lortabac> merijn: https://pastebin.com/Lp1gG0Cj
[19:42:09] <EvanR> so discussion about mutator sounds fnuny xD
[19:44:18] <lortabac> maybe there is some implementation detail that makes the mutator slightly slower
[19:47:01] <Unhammer> merijn, yeah i've been meaning to try compact regions, it looks like a great fit for my use case (lots of reading on startup, then just lookup and minor processing)
[19:49:37] <Unhammer> EvanR, yeah
[19:49:46] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[19:50:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:54:38] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 260 seconds)
[20:00:35] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:bdf3:903c:8a82:6328) (Quit: WeeChat 2.8)
[20:01:17] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[20:02:40] <dsal> I'm feeling extra dumb today.   Why can't something like this work:     `f :: (a -> [a]) -> Int  ; f g = length (g 'x')`
[20:03:36] <merijn> dsal: 'x' is not a list?
[20:03:44] <dsal> (I know *how* to make it work, I just don't quite understand why it doesn't)
[20:03:58] <dsal> g is the function (a -> [a])
[20:04:03] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[20:04:08] <merijn> oh, right
[20:04:09] <dsal> It doesn't like that 'x' isn't `a`
[20:04:17] <merijn> dsal: The 2nd bit is that the *caller* decides 'a'
[20:04:31] <merijn> dsal: I can call 'f' with (Int -> [Int])
[20:04:32] <dsal> The caller of `f`?
[20:04:38] <merijn> Which obviously doesn't work with your code
[20:04:42] <merijn> dsal: Yes
[20:04:48] <dsal> OK.  That makes sense.  Thanks.
[20:05:05] <merijn> dsal: The Rank2 version explicitly says the caller of 'f' *must* give a polymorphic function
[20:05:30] <merijn> dsal: So passing 'Int -> [Int]' becomes an error
[20:05:33] <dsal> Right, that makes sense.  I was just getting a bit confused as to how `a` was resolved in the default case.
[20:06:01] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[20:06:16] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[20:07:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:08:10] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 260 seconds)
[20:08:20] <dsal> Thanks for the clarity.  :)
[20:08:53] <EvanR> does a compact region improve performance of a big IntMap or Map you think?
[20:08:56] <dsal> I'm slightly confused as to how something like `f :: (a -> [a]) -> Int` could be useful.  I guess it's useful if there's another `a`
[20:08:57] <EvanR> due to being... compact
[20:09:19] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:09:32] <EvanR> I heard about this L1 L2 cache thing
[20:10:21] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[20:11:12] <EvanR> does improved locality make a measurable difference in lookups
[20:12:15] <dsal> This is pretty neat because I did a thing that was obvious to me how to do, but then someone else wanted me to explain it and I couldn't.  heh.
[20:12:32] *** Quits: zava (~zava@ip5f5bdf0f.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[20:14:26] <EvanR> forall . a -> [a] doesn't have too many possibilities
[20:14:29] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 268 seconds)
[20:15:02] <EvanR> and the Int can't really make use of it, whatever it is
[20:16:00] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[20:16:23] *** Joins: gdd (~gdd@129.199.146.230)
[20:17:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:17:14] *** Quits: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9) (Ping timeout: 256 seconds)
[20:17:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[20:17:44] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[20:18:03] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:19:59] <dsal> Yeah, this is the remaining bit of scoping that's not intuitive to me.  That just looks like `(:[])` to me.
[20:20:32] <EvanR> you could also do like \x -> [x,x]
[20:20:32] *** Quits: mbuf (~Shakthi@122.174.170.222) (Quit: Leaving)
[20:20:42] <EvanR> don't forget \x -> []
[20:22:20] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 260 seconds)
[20:22:21] <EvanR> I reread what you did. f :: (forall a . a -> [a]) -> Int does work xD
[20:22:52] <EvanR> forall a . (a -> [a]) -> Int doesn't
[20:26:45] <EvanR> inCompact :: Compact b -> a -> IO Bool   -- wait a minute...
[20:27:05] <EvanR> check if second argument "is inside the" compact region
[20:27:20] <EvanR> referential transparency sense tingling
[20:28:04] <EvanR> so if you pass two different second arguments with the "same value" it may give two answers? I'm not even sure how IO can excuse this
[20:28:10] <monochrom> The IO saves you from referential obligations.
[20:28:15] <hpc> IO excuses everything
[20:28:25] <hpc> except for unsafeInterleaveIO :D
[20:28:33] <EvanR> should we believe that for any type a, we have pointer to heap objects to play with
[20:28:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:28:53] <monochrom> https://ro-che.info/ccc/9
[20:29:26] <monochrom> Yes, a::* and * is boxed.
[20:30:01] <monochrom> Or rather, * requires/guarantees boxing.
[20:30:47] <EvanR> that's... I was just thinking how if you have an unknown a you don't have anything. Not even "ah ha, ObjectId"
[20:30:54] <EvanR> from OOP languages
[20:31:23] <EvanR> and how in haskell you can claim that there are no excepts to the rules xD
[20:31:38] <monochrom> OK, did you know that boxed Int and unboxed Int# have different kinds?
[20:31:44] <EvanR> yeah
[20:32:03] <EvanR> and e.g. StableNames only works on boxed?
[20:32:05] <monochrom> Did you know that so-called "a -> b" is implicitly a::* and b::* ?
[20:32:16] <monochrom> Did you know that * is the boxed kind?
[20:32:28] <EvanR> a -> b really being about *, I will have to digest
[20:32:41] <monochrom> "you don't have anything" is false. I have something, I know that there is a boxing constraint.
[20:32:59] <hpc> boxing is what gets you undefined as well, fwiw
[20:33:00] <EvanR> is that it? xD
[20:33:07] <monochrom> Yes.
[20:33:29] <EvanR> If I find something else, more hair on this black hole, I will be back
[20:33:47] <monochrom> Like you said yesterday. Physicis is full of stories. So is Haskell, or at least GHC's Haskell.
[20:33:49] <dsal> EvanR: Yeah, I understand how to make it work.  I'm just a bit confused about the outer scope case.  It feels like it should be resolvable because my brain still needs some rewiring to understand that.  I should perhaps make some more obviously incorrect proposals to the compiler.
[20:34:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[20:34:32] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[20:35:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 245 seconds)
[20:35:31] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:35:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:35:31] *** Joins: wroathe (~wroathe@user/wroathe)
[20:35:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[20:36:16] *** Joins: reumeth (~reumeth@user/reumeth)
[20:39:48] <EvanR> dang only 29 total closed cartesian comics
[20:40:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[20:42:21] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[20:43:51] *** Joins: pfurla (~pfurla@201.17.118.230)
[20:44:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:45:34] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[20:45:55] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:49:32] *** Quits: fr33domlover (~fr33@2.55.42.98) (Ping timeout: 240 seconds)
[20:50:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:53:50] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[21:01:16] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) The birds kept calling his name, thought Caw)
[21:01:36] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 245 seconds)
[21:03:51] *** Quits: pfurla (~pfurla@201.17.118.230) (Quit: gone to sleep. ZZZzzzâ€¦)
[21:04:13] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[21:05:32] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a418:17da:6b4f:5fc3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:06:18] <[itchyjunk]> Hmm
[21:07:26] *** Quits: rkrishnan (~user@122.172.141.170) (Ping timeout: 260 seconds)
[21:07:40] <[itchyjunk]> How come i can 2:[] but not []:2 ?
[21:08:09] <EvanR> well what is the type of :
[21:08:11] <yushyin> :t (:)
[21:08:12] <lambdabot> a -> [a] -> [a]
[21:08:38] <[itchyjunk]> ah
[21:09:49] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:11:52] <EvanR> :k 2
[21:11:53] <lambdabot> GHC.Types.Nat
[21:12:28] <[itchyjunk]> https://bpa.st/IQWQ
[21:12:32] <[itchyjunk]> behold!
[21:12:45] <[itchyjunk]> though it seems pointless now
[21:13:28] <EvanR> it takes a lot of effort to put something at the end of a list
[21:13:38] <EvanR> not very lazy
[21:13:58] <dsal> Nah, pointless is
[21:13:58] <dsal> :t flip (:) []
[21:13:59] <lambdabot> a -> [a]
[21:14:36] <dsal> Need to flip harder.
[21:14:44] <[itchyjunk]> Hey, my thing works. Any feed back?
[21:14:45] <[itchyjunk]> https://bpa.st/GP6Q
[21:15:03] <[itchyjunk]> I wasn't sure i needed to handle [] and [x] or not
[21:15:16] <[itchyjunk]> but that was my mental process so i put it in anyways
[21:15:27] <dsal> > pure 3   :: [Int]
[21:15:29] <lambdabot>  [3]
[21:15:33] <EvanR> if you remove the [] case, then it crashes on []
[21:15:37] <EvanR> so yeah
[21:16:25] <[itchyjunk]> ahh the [x] case was redundent
[21:16:31] <dsal> @src reverse
[21:16:31] <lambdabot> reverse = foldl (flip (:)) []
[21:16:39] <[itchyjunk]> ahh the [] case handles it
[21:16:42] <dsal> Well there's a "why don't you just"
[21:17:15] <[itchyjunk]> Right, i'll have to relearn all the inbuilt ways to do this at some point. but these are the simplest exercise i could think of
[21:17:24] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[21:17:43] <EvanR> try to understand how intensive your algorithm is by doing an example on like, a list of length 5
[21:17:51] <dsal> Sure.  The one thing that you might note is that this function doesn't care about `Int` at all.
[21:18:16] <[itchyjunk]> oh yeah it should take any type of list
[21:18:18] <EvanR> evaluate the steps of the algorithm (lazily)
[21:18:25] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:18:26] <EvanR> see it explode xD
[21:18:27] <[itchyjunk]> overloading aka ad hoc polymorphism thing
[21:18:47] <EvanR> s/ad hoc/parametric/
[21:19:01] *** Joins: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9)
[21:19:06] <[itchyjunk]> is this parametric?
[21:19:13] <EvanR> yeah, ad hoc is type classes
[21:19:14] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[21:19:40] <[itchyjunk]> "In programming languages, ad hoc polymorphism[1] is a kind of polymorphism in which polymorphic functions can be applied to arguments of different types, because a polymorphic function can denote a number of distinct and potentially heterogeneous implementations depending on the type of argument(s) to which it is applied."
[21:20:04] <[itchyjunk]> seems to fit the bill here no?
[21:20:12] <EvanR> note the heterogeneous part
[21:20:27] <EvanR> your reverse algorithm treats the payload of the list the same regardless of what it is
[21:20:35] <EvanR> not hetero
[21:20:55] <[itchyjunk]> hmm
[21:21:28] <EvanR> example of ad hoc is sorting :: Ord a => [a] -> [a]
[21:21:49] <EvanR> the a 1. has to come with comparison operation and 2. can be different for different a
[21:22:01] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[21:22:23] <[itchyjunk]> oh i think i kinda get it
[21:22:43] <[itchyjunk]> going back to my reverse funcction, how do i change my signature such that it doesn't care what's in the list?
[21:23:02] <EvanR> replace Int with a
[21:23:05] <[itchyjunk]> i tried f :: [a] -> [a] but getitng a not in scope error
[21:23:07] <[itchyjunk]> oh
[21:23:18] <monochrom> IMO that paragraphs used a lot of unnecessary long words to describe a very simple thing.
[21:23:40] <monochrom> Ad hoc means behaviour varies by type. Done.
[21:24:07] <[itchyjunk]> ah and parametric means behavior is the same regardless of type?
[21:24:16] <monochrom> The opposite of ad hoc is parametric. It means uniform over types. Done.
[21:24:31] <EvanR> reverse does the same thing regardless of a
[21:24:35] <[itchyjunk]> something weird happened, f ['a','b'] returns a `ba` instead of [
[21:24:38] <monochrom> And IMO a very simple example would complete it.
[21:24:45] <[itchyjunk]> ['b','a']
[21:25:04] <EvanR> > ['a', 'b', 'c', 'd']
[21:25:05] <lambdabot>  "abcd"
[21:25:14] <EvanR> syntactic sugar for list of Char
[21:25:15] <[itchyjunk]> hmm
[21:25:18] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[21:25:22] <[itchyjunk]> ah
[21:25:30] <monochrom> You are asked to write "f :: a -> a".  Can you write this? "f x = if x is an int then x+1 else if x is a string then ..."
[21:25:38] <monochrom> If yes, ad hoc. If no, parametric.
[21:26:25] <[itchyjunk]> hmm i guess i could write that if i figure out how to know what the type of a is
[21:26:40] <monochrom> No, you can't do it in Haskell.
[21:26:49] <monochrom> But you can do it in Java. Use instanceOf.
[21:27:18] <[itchyjunk]> Ah.. i am supposed to use instanceOf for my next hw set.. funny it came up here
[21:27:32] <[itchyjunk]> There is no way to ask haskell about the type of a ?
[21:27:38] <monochrom> No.
[21:27:47] <[itchyjunk]> hmmmmm
[21:27:53] <EvanR> that would violate parametricity
[21:28:01] <monochrom> If I relax the type sig to "f :: Typeable a => a -> a" then you can.  But I didn't.
[21:28:31] *** Quits: benin (~benin@183.82.179.164) (Quit: The Lounge - https://thelounge.chat)
[21:28:49] <[itchyjunk]> take a, get it's ascii value and if it's in the range to to numbers, add 1 else something else?
[21:28:56] <[itchyjunk]> to be*
[21:29:05] *** Joins: cheater (~Username@user/cheater)
[21:29:18] <monochrom> "get its ascii value" requires Show a.  But I didn't allow Show a.
[21:29:39] <[itchyjunk]> hmmmm
[21:29:57] <EvanR> if someone gives you a parametric type, you immediately know stuff about what it can and can't do
[21:30:07] <dsal> `a` by itself means "any type at all is relevant here" and all possible types is greater than "all types that can show themselves"
[21:30:10] <[itchyjunk]> Is this the monad stuff? try to add 1 and if it fails do nothing
[21:30:17] <[itchyjunk]> if it works, great, move on?
[21:30:24] <dsal> constraints reduce the types you can pass, but give you a bit of wiggle room for doing things with the values.
[21:30:54] <EvanR> if they say, never mind the parametric part isn't always honored, now you don't know things anymore
[21:31:03] <monochrom> Monad is irrelevant.
[21:31:05] <[itchyjunk]> Oh there are types that can show themselves and that can't show themsleves? @_@
[21:31:23] <dsal> No type can show itself unless granted that power.
[21:31:26] <dsal> :t show
[21:31:26] <lambdabot> Show a => a -> String
[21:31:38] <dsal> (well, show values of the type)
[21:31:42] <EvanR> yeah you can't print out of a function
[21:31:49] *** Quits: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de) (Quit: WeeChat 3.3)
[21:31:57] <EvanR> show (+1) ... doesn't work
[21:32:10] <[itchyjunk]> hmmm
[21:33:41] <EvanR> it would be nice to get debug info for any value whatever, but here we are xD
[21:33:55] <[itchyjunk]> Given `f :: a -> a` is it possible to write "f x = if x is an int then x+1 else if x is a string then ..." at all?
[21:34:03] <monochrom> No.
[21:34:06] <[itchyjunk]> ah
[21:34:44] <EvanR> but can write a f :: a -> a, it just can't do that
[21:35:10] <monochrom> But you can in Java generics.  <T> T f(T a) { if (a instanceOf Integer) { ...
[21:35:26] <monochrom> This shows that Java generics is still not parametric polymorphism.
[21:35:57] <monochrom> Or vice versa, Haskell parametric polymorphism is not Java generics.
[21:36:21] <[itchyjunk]> interesting!
[21:36:37] <[itchyjunk]> I know almost nothing about java generics though, but makes sense i think
[21:37:04] <monochrom> You don't hear that very often because in practice, people don't actually abuse Java generics that way, they use it as parametric polymorphism, so no one notices the difference.
[21:37:49] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[21:38:22] <[itchyjunk]> couldn't i overload it? f(int a) { return a + 1;} f( char a) { do char stuff}
[21:38:28] *** Joins: chisui (~chisui@2001:16b8:6636:e400:16e3:5e8c:67f1:d219)
[21:38:49] <monochrom> So we are in this Pareto/Nash equilibrium in which the older programmers don't abuse it, therefore the newer programmers don't know that they can abuse it. By induction it is a lost dark art.
[21:38:58] <hpc> that's not polymorphism
[21:39:10] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 260 seconds)
[21:39:23] <[itchyjunk]> hmm i thought overloading was polymorphism :s
[21:39:33] <EvanR> that's C++ style ad hoc polymorphism
[21:39:33] <hpc> it's type-directed name resolution, those fs are two different functions and it picks between them based on how you call it
[21:39:41] <monochrom> Haskell uses ad hoc polymorphism for overloading.
[21:39:54] <monochrom> But nothing says a language must.
[21:39:56] *** Quits: _bo (~bo@217.18.216.247) (Ping timeout: 245 seconds)
[21:40:12] <[itchyjunk]> in java, that's overloading aka ad hoc polymorphism no? using f with different signatures?
[21:40:19] <hpc> it's not the same f
[21:40:42] <monochrom> In Java, the point is exactly overloading is orthogonal to polymorphism.
[21:40:43] <hpc> it's two different functions with the same name
[21:40:47] <EvanR> go to a different language, get different conflicting terminology xD
[21:41:14] <[itchyjunk]> so overloading in haskell uses the same f somehow? huh interesting
[21:41:24] <[itchyjunk]> guess i shouldn't take things i learn in java too seriously then
[21:41:33] <[itchyjunk]> thought i understood polymorphism :D
[21:41:35] <monochrom> It's OK to take Java seriously.
[21:41:49] <monochrom> What's wrong is assuming that everyone solves problems the same way.
[21:42:16] <monochrom> or assuming that there is only one way.
[21:42:18] <hpc> iirc, if you wrote f(Object a) and f(SomethingElse a), g(Object a) {f(a)} is going to use the Object f, even if you do g(somethingElseValue)
[21:43:15] <monochrom> Terminology is a lost cause. Every echo chamber has its terminology.
[21:43:31] <monochrom> Echo chamber is human nature.
[21:43:54] <[itchyjunk]> Are polymorphisms implemented differently in different FP as well?
[21:43:56] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[21:44:07] <[itchyjunk]> or is it more or less consistent in FPs at least?
[21:44:34] *** Quits: chisui (~chisui@2001:16b8:6636:e400:16e3:5e8c:67f1:d219) (Quit: Client closed)
[21:45:05] <hpc> in the ML family it's more or less always parametric polymorphism
[21:45:23] <hpc> clojure is lisp on the jvm, so it takes after java even though it's functional
[21:45:37] *** Joins: chisui (~chisui@2001:16b8:6636:e400:16e3:5e8c:67f1:d219)
[21:45:38] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:45:50] <hpc> other lisps are completely untyped, lambda calculus comes in every typed and untyped variant you can think of
[21:45:55] <[itchyjunk]> ohh didn't know cloure was fp
[21:47:02] <EvanR> yeah it is
[21:47:12] <EvanR> despite itself xD
[21:47:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:47:48] <sshine> [itchyjunk], ML modules also encourage ad-hoc polymorphism, e.g. https://stackoverflow.com/questions/37694313/make-ocaml-function-polymorphic-for-int-lists-and-float-lists/37710287#37710287
[21:49:41] <monochrom> At that point, you are translating ad hoc polymorphism to parametric polymorphism and then you wonder why there is a line.
[21:50:03] <monochrom> sort :: Ord a => [a] -> [a] involves a bit of ad hoc polymorphism, yes.
[21:50:34] <monochrom> But in a language without Haskell type class, you could have gone sortBy :: (a -> a -> Bool) -> [a] -> [a].
[21:50:49] <monochrom> which is a low-tech version of the module approach.
[21:51:17] <monochrom> But then, technically, "(a -> a -> Bool) -> [a] -> [a]" is parametric polymorphism.
[21:51:30] <EvanR> seeing C++ overloading as type directed name resolution and not polymorphism is cool xD
[21:51:42] <EvanR> now I wonder what polymorphism even is
[21:52:15] <EvanR> using the same function for different types
[21:52:18] <sshine> yea, so you could have parametric polymorphism at the bottom. but you could also parameterise your higher-order modules, making it parametrically polymorphic at the module level, and at the value level it'd be ad-hoc.
[21:52:54] <sshine> I guess the difference comes down to book-keeping. :)
[21:53:17] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:53:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:53:17] *** Joins: wroathe (~wroathe@user/wroathe)
[21:54:44] <sshine> there was one talk about functional design patterns that had a comparison table between OO and FP, where the FP column just listed "functions" as the equivalent abstraction to most OO patterns. ;-P
[21:55:42] <[itchyjunk]> How come : isn't ad hoc then? so you could x:xs or xs:x ?
[21:55:50] <monochrom> https://www.slideshare.net/ScottWlaschin/fp-patterns-buildstufflt slide 13
[21:56:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:56:38] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:57:01] <EvanR> youre thinking : means ++ and should be symmetric
[21:57:02] <sshine> [itchyjunk], because lists are defined with a type parameter.
[21:57:02] <[itchyjunk]> maybe the answer to my question is also secretly functions
[21:57:09] <monochrom> a -> [a] -> [a] is clearly parametric
[21:57:17] <sshine> :t (:)
[21:57:18] <lambdabot> a -> [a] -> [a]
[21:57:30] <EvanR> but cons and snoc are not symmetric
[21:57:39] <EvanR> : is cons
[21:57:58] <monochrom> Also, [False, True] : False is clearly illegal.
[21:58:06] *** Quits: chisui (~chisui@2001:16b8:6636:e400:16e3:5e8c:67f1:d219) (Ping timeout: 256 seconds)
[21:58:08] <[itchyjunk]> hmm symmetric over mirror
[21:58:51] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:a418:17da:6b4f:5fc3)
[21:59:12] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:59:19] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 268 seconds)
[21:59:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:01:23] <EvanR> yeah the (singly) linked list is essentially asymmetric 
[22:01:52] <EvanR> that's reflected in the type of (:)
[22:02:38] *** Quits: mreh (~mreh@2a00:23c7:2803:ef00:841c:a322:61f5:4ad9) (Ping timeout: 256 seconds)
[22:02:50] <hololeap> how would a doubly linked list be expressed in haskell?
[22:03:12] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[22:03:33] <EvanR> a zipper! xD
[22:03:59] <hololeap> yeah that sort of makes sense actually
[22:04:00] <monochrom> ADT and GADT cannot say doubly-linked list per se. But you can have two fields and, during term construction, tie the knot.
[22:05:03] *** Joins: Guest|66 (~Guest|66@bl5-47-230.dsl.telepac.pt)
[22:05:33] <hololeap> I can never get over an uneasy feeling that "tying the knot" won't work the way I expect it to. I end up doing things explicitly with e.g. TVars just to be damn sure everything is talking about the same value
[22:08:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:09:06] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[22:09:46] <monochrom> Yeah, tying the knot is a very cute skill that although I get it, I don't want to inflict it on everyone.
[22:09:57] <monochrom> It's too mean.
[22:11:20] *** Joins: econo (uid147250@user/econo)
[22:11:52] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:13:11] <monochrom> The unreasonable universal relevance of https://ro-che.info/ccc/9 >:)
[22:14:33] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[22:16:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:16:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:16:08] *** Joins: wroathe (~wroathe@user/wroathe)
[22:17:41] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:19:10] *** Joins: chisui (~chisui@2001:16b8:6636:e400:e560:82ac:8599:d8d0)
[22:19:17] *** Quits: chisui (~chisui@2001:16b8:6636:e400:e560:82ac:8599:d8d0) (Client Quit)
[22:20:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:21:27] <EvanR> the mystery remains though
[22:21:57] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[22:21:58] <EvanR> how that wise monk lost his moustache half way through the story
[22:22:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:23:09] <monochrom> I don't think it was moustache in the first place.
[22:24:06] <monochrom> Just his beard pushed up but since it's projected on a 2D viewport the z depth is lost.
[22:25:57] *** Quits: Guest|66 (~Guest|66@bl5-47-230.dsl.telepac.pt) (Quit: Connection closed)
[22:26:11] *** Quits: sunarch (uid526836@user/sunarch) (Quit: Connection closed for inactivity)
[22:26:13] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[22:30:03] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[22:30:17] <[itchyjunk]> I am trying to test something but i forget how to use the thingy. say i have a list `[1]` and i wanted to do `(x:y:xs)` on this list and see what x and y and xs would be
[22:30:26] <[itchyjunk]> I can't figure out how to run this test :x
[22:31:37] <monochrom> case [1] of {x:y:xs -> (x, y, xs) ; _ -> error "not this droid" }
[22:32:19] <[itchyjunk]> hmm
[22:34:10] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Remote host closed the connection)
[22:34:47] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[22:38:13] <[itchyjunk]> oh ohh, infinite recursion
[22:39:23] *** Parts: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) ()
[22:39:44] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[22:40:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:42:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:47:21] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[22:48:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:56:10] <EvanR> I guess in this case "pattern matching" is a misnomer xD
[22:56:34] <EvanR> pattern discriminating
[22:57:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:57:16] <EvanR> more like
[22:58:49] *** Joins: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net)
[22:59:31] <[itchyjunk]> you know, i knew it was gonna be infinite regression
[22:59:34] *** Joins: _bo (~bo@217.18.216.247)
[22:59:35] <[itchyjunk]> but i wanted to run it anyways
[22:59:41] <[itchyjunk]> ended up force shutting down
[23:03:38] *** Quits: yauhsien (~yauhsien@61-231-30-221.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[23:05:28] *** Joins: deadmarshal (~deadmarsh@95.38.117.164)
[23:07:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:07:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:07:04] *** Joins: wroathe (~wroathe@user/wroathe)
[23:07:15] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:09:42] *** Quits: _bo (~bo@217.18.216.247) (Read error: Connection reset by peer)
[23:10:06] *** Quits: deadmarshal (~deadmarsh@95.38.117.164) (Ping timeout: 256 seconds)
[23:10:34] <[itchyjunk]> oh..
[23:10:40] <[itchyjunk]> i think it works.. i can't believe it
[23:11:01] <[itchyjunk]> https://bpa.st/ICOA
[23:11:02] <[itchyjunk]> Right?
[23:12:06] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:12:10] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:8d6b:77ca:adc:64ea)
[23:14:31] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 245 seconds)
[23:18:33] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[23:19:29] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:22:51] <dsal> [itchyjunk]: bumping those parens up against functions looks really funny to me. heh
[23:23:15] <[itchyjunk]> f( g) ?
[23:23:26] <[itchyjunk]> f (g n) then?
[23:23:37] <dsal> yeah.
[23:23:41] <[itchyjunk]> f (g (h n)) 
[23:23:42] <[itchyjunk]> okay
[23:24:14] <dsal> What is g for here?
[23:24:23] <dsal> It looks expensive.  :)
[23:24:39] <[itchyjunk]> my f was only sorting either the smallest or largest to the end of the list
[23:24:46] <dsal> Oh, that's your reverse?
[23:24:53] <[itchyjunk]> so i had to remove the last element and apply it again
[23:24:54] <[itchyjunk]> no
[23:25:12] <[itchyjunk]> [2,1,4,5] -> [2,4,5,1] by f
[23:25:39] <dsal> > let g n = last( f n) : g( init( f n)) in   g [1..10]
[23:25:40] <lambdabot>  error:
[23:25:41] <lambdabot>      â€¢ Could not deduce (FromExpr [Integer]) arising from a use of â€˜gâ€™
[23:25:41] <lambdabot>        from the context: FromExpr [a]
[23:25:43] <[itchyjunk]> and g take [2,4,5] and applys f again to get [4,5,2] then [4,5] etc
[23:26:01] <[itchyjunk]> i tried doing it with only f but wasn't sure so tried this and it worked out
[23:26:24] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:26:50] <[itchyjunk]> what about the x: f (y:xs), how would you format that?
[23:26:59] <[itchyjunk]> x:f (y:xs) maybe?
[23:27:22] <dsal> That one doesn't look as weird either way.
[23:27:28] <[itchyjunk]> ah
[23:28:50] <dsal> OK.  I see what you're doing here.  You're doing a lot of sorting, though.  g runs through the whole sort once to find the last thing and again to find the things that aren't the last thing.
[23:30:37] <[itchyjunk]> Right, i can kinda guess that this is all horribly inefficient
[23:30:50] <dsal> Sure, if you wanted something better, you'd just use `sort`  :)
[23:30:52] <[itchyjunk]> but i figured if it works, i'll worry about optimization later
[23:31:00] <[itchyjunk]> ah
[23:31:13] <dsal> Just toss a `where` in there and capture the sort once.
[23:31:39] <[itchyjunk]> hmmmmmm
[23:31:45] <[itchyjunk]> i'll read up on where next then
[23:31:47] <dsal> g n = last sorted : g (init sorted)   where sorted = f n
[23:32:09] <[itchyjunk]> oh
[23:32:22] <[itchyjunk]> i see!
[23:32:26] <dsal> "sorted" is probably not the right word.
[23:32:32] <dsal> bubbled
[23:32:37] <dsal> percolated
[23:33:01] <[itchyjunk]> neat!
[23:33:09] <[itchyjunk]> I'll file this under "works"
[23:33:36] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[23:34:51] <dsal> Yeah, exercises like this are good.
[23:35:18] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 260 seconds)
[23:35:20] <dsal> It's fun to do these without explicit recursion as well.
[23:36:41] *** Joins: juhp (~juhp@128.106.188.82)
[23:40:35] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[23:43:48] *** Franciman is now known as {Franciman}
[23:44:52] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 260 seconds)
[23:46:42] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[23:49:05] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[23:49:52] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Quit: leaving)
[23:50:28] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:52:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:54:36] <[itchyjunk]> Yes, comming up with them off the top of my head
[23:55:00] <[itchyjunk]> for some reason, googling for haskell exercise leads to much harder problem sets than expected :<
[23:55:19] *** Joins: remedan (~remedan@balak.me)
[23:55:38] <dsal> I rather like AoC.  It starts out pretty easy.
[23:55:48] <dsal> Then gets stupid hard sometimes, but by that point you're committed.
[23:56:11] <[itchyjunk]> Ah, advent of code? yeah i should skim through some of those problem sets
[23:56:14] *** Quits: remedan (~remedan@balak.me) (Client Quit)
[23:59:17] *** Joins: remedan (~remedan@balak.me)
[23:59:18] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[23:59:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[23:59:44] * [exa] looks at the calendar
[23:59:49] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[23:59:50] <[exa]> ah it's not december yet, phew
