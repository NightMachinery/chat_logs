[00:32:45] <headius> meh not changing it
[00:56:50] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[01:12:40] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[01:13:23] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Remote host closed the connection)
[01:14:02] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[01:21:25] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[05:42:16] *** Quits: subbu (~subbu@user/subbu) (Quit: Leaving)
[09:56:48] *** Quits: andreimaxim[m] (~andreimax@2001:470:69fc:105::1:6099) (Quit: Client limit exceeded: 20000)
[16:49:25] <puritylake[m]> Iâ€™ve never understood how jits work
[17:00:25] <headius> It's pretty basic at its core. Compile the code to something faster but do it after you run it slow for a while to learn what needs to be optimized
[18:56:42] <headius> basshelal: yo have you seen this: https://github.com/jnr/jnr-constants/pull/106
[18:56:43] <headius> good morning
[18:57:18] <headius> seems like this person might be interested in helping us set up cross-platform (linux, at least) JNR builds and testing
[19:03:41] <headius> enebo: you around?
[19:03:56] <headius> your E seems to be keeping up
[19:04:17] <enebo[m]> I am here but I also happen to have this as my current browser thread
[19:04:27] <enebo[m]> so it would have looked that way regardless
[19:04:28] <headius> https://github.com/jruby/jruby/pull/7022
[19:04:55] <headius> so mrnoname did this one for us but he also has managed to port the entire thing to sh
[19:05:21] <headius> he's finishing up a second pass to reduce the amount of eval needed but it already passes CI
[19:05:34] <headius> I believe he even tested it with dash to make sure it doesn't accidentally use any bash features
[19:06:39] <enebo[m]> how do we ignore whitespace on gh again
[19:06:51] <headius> ?w=1
[19:06:52] <headius> I think
[19:07:06] <headius> he was very annoyed by varying indentation throughout
[19:07:07] <enebo[m]> hmm yeah I did not use w=1
[19:07:18] <headius> which is fair
[19:07:47] <enebo[m]> There is a UI for I found
[19:08:23] <headius> yeah you can get to it from diff settings button I thkn
[19:08:29] <headius> I  thicken
[19:09:30] <headius> I don't see any reason not to merge the cleanup since it's mostly standardizing formatting and cleaning up some bashy things
[19:10:08] <enebo[m]> most of this is not really even significant changes but styling or removing unneeded bracket + ""
[19:10:21] <headius> yeah
[19:10:24] <enebo[m]> but I am fine with this either way
[19:10:31] <enebo[m]> and I can see there are substantive changes
[19:10:45] <headius> I think he needed to do this mostly to clean up things before attempting the posix sh version
[19:11:01] <enebo[m]> yeah getting pure sh support would be nice
[19:11:31] <headius> he has that PR ready to go as well but it continues from this point
[19:11:46] <headius> so if you are cool merging this then I will handle that and have him submit the second PR
[19:12:00] <headius> should we keep this on master or move to 9.3? I'm leaning toward master
[19:12:23] <enebo[m]> I think so.  master is much safer and gives us more time to tease out anything
[19:12:31] <headius> yeah at least give it some bake time
[19:12:44] <headius> we have some bleeding edge users that will give it a go as well
[19:12:44] <enebo[m]> if we get to releasing 9.4 and it is solid we can backport at that point
[19:12:51] <enebo[m]> but it should give us some time
[19:13:05] <headius> ok I will merge this and have him push the sh PR
[19:16:22] <headius> enebo: ok I just noticed this PR is against 9.3
[19:16:33] <headius> but maybe merging cleanup to 9.3 is fine and sh version to master
[19:16:59] <headius> this cleanup should be zero-sum so I think it's ok
[19:17:04] <headius> hell, cleanup could merge to 9.2 really
[19:19:00] <enebo[m]> I guess.  As long as we are sure nothing will break
[19:19:03] *** Joins: subbu (~subbu@user/subbu)
[19:19:14] <headius> running the CI gauntlet is pretty good
[19:19:46] <headius> I can have him retarget master for now if you are worried about merging the cleanup into release versions
[19:21:12] <enebo[m]> well if this was addressing something concerning it would be simpler to see the need
[19:21:47] <enebo[m]> being able to run in pure sh is a nice feature but something we have not supported for almost 20 years
[19:21:47] <headius> that's fair
[19:22:00] <headius> yeah I agree the new sh version should only be master for now
[19:22:08] <enebo[m]> but we can always backport it later and that would mean less possibility of something we did not expect breaking
[19:22:34] <enebo[m]> yeah and I know you said only cleanup but cleanup is not really all that important for 9.2 perhaps ever
[19:22:48] <headius> we do have limited tests specifically for the launcher, mostly just command line specs and tests that aren't too rigorous
[19:22:48] <enebo[m]> but I do like the idea of having the same script for all of them
[19:23:00] <headius> that was my thinking
[19:23:19] <headius> if we have bash fixes in the future they should go to 9.2 if it is still maintained, which would be harder if it has not had cleanup PR
[19:23:23] <enebo[m]> I guess we can reach that point after we gain confidence on master and hopefully people using us on master
[19:23:42] <headius> or maybe not harder because we are doing 9.2 changes separately now anyway
[19:24:19] <headius> it is pretty stable
[19:24:19] <headius> nothing to be fixed in existing bash script will be more than one-liner changes
[19:25:09] <headius> I'll have him retarget master and we'll let the cleanup bake while the sh version is under construction
[19:25:35] <enebo[m]> ok (and I think you can just pulldown to master and merge too)
[19:26:04] <headius> hmm yeah that might work
[20:04:42] <basshelal[m]> headius: Just saw what you sent me
[20:04:42] <basshelal[m]> That is interesting, would it be possibly used to build jffi
[20:04:42] <basshelal[m]> I wonder if the same process can be used to build for the other OSes too, even if we need a physical (or Virtual but not Docker) instance of it, for example for FreeBSD
[20:04:42] <basshelal[m]> I have exactly 0 knowledge of Docker other than it is essentially miniVMs but if what I'm  saying is possible, this could be pretty awesome, the niche OSes will be a problem though
[20:05:16] <headius> the base idea could be used for any number of platforms... the tricky part is getting something we can run in qemu for those platforms
[20:05:51] <headius> BSDs would be a good next step since it's still OSS but e.g. Solaris or AIX we have no way to run for free with or without qemu
[20:06:15] <headius> we do have a build based on qemu + docker running in jffi CI right now but it is not used to produce any artifacts currently
[20:06:21] <basshelal[m]> I was just about to mention Solaris and AIX, especially AIX
[20:06:21] <headius> I have just never hooked it up
[20:06:39] <headius> it builds for x86, arm64, ppc64, and s/390 I believe
[20:07:07] <headius> linux only of course
[20:07:16] <headius> I linked it in that jnr-constants PR
[20:13:59] <basshelal[m]> Does docker not run on AIX and Solaris?
[20:15:24] <basshelal[m]> I'm thinking of the same type script that runs on those OSes 
[20:15:38] <headius> well I don't even know if docker can host other OSes
[20:16:09] <basshelal[m]> Even if we need VMs for them, so it's not strictly automatable (not good for a CI) but good enough that we can get full builds in like 30 minutes manually
[20:16:20] <headius> doesn't look like it, or at least it can't do it well
[20:16:35] <basshelal[m]> No need for host, do it manually, I'm fairly certain docker is limited to the OS it runs on, though again I'm not very aware
[20:17:10] <headius> VMs would be fine but other than full emulation like qemu we can't VM host anything other than the host CPU
[20:17:27] <basshelal[m]> ahh
[20:17:29] <headius> yeah looks like the not great freebsd support for docker has to be run within freebsd
[20:17:54] <headius> so it isn't really a solution for cross-testing all CPU+OS combinations from Linux
[20:18:02] <basshelal[m]> why are there so many CPU archs!
[20:18:19] <headius> hah soon it will all be ARM
[20:18:40] <basshelal[m]> and qemu isn't on those OSes I'm guessing
[20:19:09] <basshelal[m]> Not before RISC-V comes too, things move so quickly in this goddamn industry
[20:22:51] <basshelal[m]> Ah this is a whole rabbit-hole
[20:23:07] <headius> qemu probably can run anywhere as it is full emulation
[20:24:15] <basshelal[m]> How bad do we need something like this, what would be the benefit?
[20:25:04] <headius> There are a number of improvements we could make in the JFFI binary if only we could quickly rebuild for all supported platforms
[20:25:38] <headius> For example there is an outstanding PR to add dlsym to the JNI binding so you can query for library symbols from Java
[20:26:01] <headius> We can't start publishing that feature unless we can rebuild the other binaries to support it
[20:28:26] <basshelal[m]> So we cannot move unless we have a system in place that can build for all supported platforms at once?
[20:28:34] <basshelal[m]> move as in like update jffi
[20:30:28] <headius> for the most part yes
[20:30:39] <headius> we can leave weird platforms behind until users can contribute a new build, but they'll have to do that before it works again
[20:31:09] <headius> making the Java part keep working across different revs of the binary would be really hard given some of these possible changes
[20:31:23] <headius> I was able to fake it for M1 because I could just pack some extra bits into an int and the older binaries ignore those bits
[20:31:35] <headius> we won't be so lucky for future changes
[20:33:17] <basshelal[m]> Damn, ok good we are on the same page then, I was hoping my assumptions were wrong
[20:34:44] <basshelal[m]> I'll look into it and see what I can do about it, looks insanely complicated but a fun challenge and worth the pain
[20:35:03] <basshelal[m]> I'll keep you updated, might create an issue on jffi to archive and log progress and notes etc
[20:36:19] <basshelal[m]> I think it's probably doable with some strange hackery, but god help me with the strange challenges that'll pop up
[20:36:21] <headius> ok sure... I'm hoping this contrib really does want to expand this work so we'll see how it goes
[20:37:20] <basshelal[m]> Yeah that would definitely be of help, but it would be better if we knew the process ourselves and clearly documented it for the future
[23:10:45] *** Joins: klobuczek[m] (~klobuczek@2001:470:69fc:105::1:24c)
[23:31:48] *** Quits: yosafbridge` (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[23:57:06] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
