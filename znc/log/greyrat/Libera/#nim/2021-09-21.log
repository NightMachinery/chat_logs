[00:00:13] <FromDiscord> <Gumber> a GUI library shouldn't handle eventing for me
[00:00:22] <FromDiscord> <Gumber> I shouldn't be tied to GLFW's event handling because I use your GUI library
[00:00:26] <FromDiscord> <Gumber> that's a bad side effect
[00:00:34] <FromDiscord> <Gumber> or SDL's or whatever
[00:00:44] <FromDiscord> <Gumber> I shoudl be able to use your GUI library with whatever windowing / event management library I want
[00:00:58] <FromDiscord> <Gumber> the only decent Nim GUI library I've seen that aims to be cross paltform is....
[00:01:03] <FromDiscord> <fae> i think most people want a ui library that does both, ie that is has batteries included to do drawing (with various backend plugins). But the design of the library and how you split up and export your modules etc is a different topic
[00:01:17] <FromDiscord> <Gumber> https://github.com/trustable-code/NiGui
[00:01:19] <nrds> <12R2D299> 4GitHub: 7"Cross-platform desktop GUI toolkit written in Nim"
[00:01:20] <FromDiscord> <Gumber> and it's still a long way off
[00:01:36] <FromDiscord> <fae> There is not reason you can't split up the lib to separate the responsibilities of UI and gfx
[00:01:41] <FromDiscord> <Gumber> most people is a pretty broad category
[00:01:43] <FromDiscord> <fae> WIth pluggable backends
[00:01:53] <FromDiscord> <Gumber> yes there is
[00:01:58] <FromDiscord> <Gumber> if you base your entire GUI library around GLFW
[00:02:08] <FromDiscord> <Gumber> then no one is goign to be able to use it without using GLFW
[00:02:13] <FromDiscord> <Gumber> (edit) "goign" => "going"
[00:02:16] <FromDiscord> <Gumber> what if I don't want to use GLFW?
[00:02:27] <FromDiscord> <Gumber> a UI library should handle managing the UI that's it
[00:02:35] <FromDiscord> <Gumber> it should manage the state of my ui
[00:02:46] <FromDiscord> <Gumber> and it should tell me when something happened in my UI so I can do something about it
[00:02:57] <FromDiscord> <Gumber> other than that I don't want my UI library to do anything but tell me what needs to be drawn and when
[00:03:10] <FromDiscord> <Gumber> it's also nice if it has built in widggets etc
[00:03:11] <FromDiscord> <fae> fidget has multiple backends already
[00:03:14] <FromDiscord> <Gumber> and a layout engine
[00:03:19] <FromDiscord> <Gumber> yeah but they're not reallyb ackends
[00:03:24] <FromDiscord> <Gumber> it can use opengl and glfw
[00:03:27] <FromDiscord> <Gumber> that's not a backend
[00:03:39] <FromDiscord> <Gumber> that's a requirement
[00:03:51] <FromDiscord> <fae> btw i dont completely disagree with you, which is why i was working on things like <https://github.com/farism/flex>
[00:03:53] <FromDiscord> <Gumber> I don't think you're understanding the nuance here
[00:03:56] <FromDiscord> <Gumber> okay
[00:04:00] <FromDiscord> <Gumber> like IMGUI is a good UI library
[00:04:01] <FromDiscord> <fae> i like the idea of smaller composable UI pieces
[00:04:03] <FromDiscord> <Gumber> Nuklear is a good ui library
[00:04:11] <FromDiscord> <Gumber> yes they're not retained, they are immediate mode
[00:04:13] <FromDiscord> <Gumber> but that's not the point
[00:04:22] <FromDiscord> <Gumber> you could do very similar things with a retained mode UI library
[00:04:43] <FromDiscord> <Gumber> what treeform has built is closer to something like Qt
[00:04:50] <FromDiscord> <Gumber> same thing with NimX
[00:05:01] <FromDiscord> <Gumber> neither of which I really want or need
[00:05:02] <FromDiscord> <fae> imgui has drawing capabilities built in though, they just happen to have implemented a ton of backends
[00:05:08] <FromDiscord> <Gumber> no it doesn't
[00:05:12] <FromDiscord> <Gumber> have you used IMGUI?
[00:05:21] <FromDiscord> <Gumber> it doesn't draw anything
[00:05:34] <FromDiscord> <Gumber> it gives you a bunch of information so you can submit your own draw commands to the API of your choosing
[00:05:39] <FromDiscord> <Gumber> but it doesn't do any drawing
[00:05:52] <FromDiscord> <Gumber> trust me - I've wrapped and used both libraries extensively
[00:05:55] <FromDiscord> <Gumber> imgui and nuklear
[00:07:29] <FromDiscord> <fae> i guess im confused because imgui ships with a ton of backends for drawing
[00:07:37] <FromDiscord> <Gumber> that doesn't mean it's a part of the library
[00:07:44] <FromDiscord> <Gumber> yes you are confused
[00:07:57] <FromDiscord> <Gumber> IMGUI and nuklear ar every simple libraries
[00:08:02] <FromDiscord> <Gumber> they don't do anyhint about events
[00:08:08] <FromDiscord> <Gumber> they don't do anything about drawing
[00:08:14] <FromDiscord> <Gumber> they basically track what's happening with the UI
[00:08:20] <FromDiscord> <Gumber> and give you enough data
[00:08:31] <FromDiscord> <Gumber> so that every frame you know what to draw and where and how to render your UI
[00:08:40] <FromDiscord> <Gumber> ANYONE can implement a backend for nuklear / imgui
[00:08:44] <FromDiscord> <Gumber> just because it ships with some out of the box
[00:08:47] <FromDiscord> <Gumber> doesn't mean they're a part of the library
[00:08:55] <FromDiscord> <Gumber> I've written backends for IMGUI and Nuklear for BGFX for instance
[00:09:00] <FromDiscord> <Gumber> that doesn't mean BGFX is a hard requirement
[00:09:02] <FromDiscord> <fae> sent a code paste, see https://play.nim-lang.org/#ix=3zu6
[00:09:06] <FromDiscord> <Gumber> okay stop and listen to what I"m saying please
[00:09:07] <FromDiscord> <fae> i don't see any drawing calls here in userland
[00:09:13] <NimEventer> New thread by Stefan_Salewski: FieldPairs iterator, see https://forum.nim-lang.org/t/8442
[00:09:15] <FromDiscord> <Gumber> yeah because nothing was drawn there
[00:09:34] <FromDiscord> <Gumber> there's an entire separate unit of code doing the drawing
[00:09:38] <FromDiscord> <Gumber> which is NOT a part of the library
[00:09:42] <FromDiscord> <Gumber> it is implemented IN userland
[00:09:59] <FromDiscord> <Gumber> libraries have tests and examples
[00:10:02] <FromDiscord> <Gumber> are they part of the library?
[00:10:08] <FromDiscord> <Gumber> same deal here
[00:10:23] <FromDiscord> <Gumber> if you want to use treeform's widget on a desktop application with hardeware accelerated rendering
[00:10:33] <FromDiscord> <Gumber> you don't have a choice EXCEPT to use GLFW and OpenGL
[00:10:40] <FromDiscord> <Gumber> and even if OpenGL becomes optional - GLFW won't
[00:10:48] <FromDiscord> <Gumber> and you don't have a choice on how to handle or respond to UI events
[00:10:53] <FromDiscord> <Gumber> fidget does all that for you
[00:11:04] <FromDiscord> <Gumber> again - it is way more opinionated / does more than just UI
[00:11:41] <FromDiscord> <Gumber> and I don't want to debate or argue about facts lol
[00:11:48] <FromDiscord> <fae> i guess i just dont really know what you meant by your original statement of "it doesnt solve the cross platform ui problem". If it's batteries included and it works on a bunch of different platforms that kind of solves the problem
[00:11:50] <FromDiscord> <Gumber> like this is the truth and you're not going to convince me otherwise
[00:11:56] <FromDiscord> <fae> it may just not be implemented in the way you want
[00:12:04] <FromDiscord> <Gumber> no it has nothing to do with the implementation
[00:12:12] <FromDiscord> <Gumber> but you're refusing to hear or listen to what I"m saying
[00:12:21] <FromDiscord> <Gumber> maybe I have different requirements than yuou
[00:12:24] <FromDiscord> <Gumber> (edit) "yuou" => "you"
[00:12:30] <FromDiscord> <fae> i feel like i hear pretty clearly what you are saying, you want something less coupled. its pretty clear haha
[00:12:33] <FromDiscord> <Gumber> for a cross platform UI library but I've been pretty clear and explicit in my explanation
[00:12:46] <FromDiscord> <Gumber> yeah so - that's why I don't think it's a good UI library
[00:12:52] <FromDiscord> <Gumber> because not everyone wants these decisions made for them
[00:12:55] <FromDiscord> <Gumber> for good reasons
[00:12:58] <FromDiscord> <Gumber> it's not just being pick or pedantic
[00:13:05] <FromDiscord> <Gumber> (edit) "pick" => "picky"
[00:14:28] <FromDiscord> <Goel> In reply to @fae "like https://nim-lang.org/docs/sequtils.html#count%": @fae Yes i was looking for that, thanks 🙂
[00:14:32] <FromDiscord> <fae> well my original point is that _Nim_ is well positioned to solve the cross platform UI issue, not necessarily fidget or nimx, i was just mentioning those as projects of interest
[00:14:45] <FromDiscord> <Gumber> I don't think it's any more well suited than any other language
[00:14:52] <FromDiscord> <Gumber> cross platform GUI is a difficult problem to solve
[00:15:04] <FromDiscord> <Gumber> unless operating system developers start embracing Nim
[00:15:07] <FromDiscord> <Gumber> I don't think the situation is going to change much
[00:15:19] <FromDiscord> <Gumber> there's a reason it's the way it is
[00:15:32] <FromDiscord> <fae> i would like to eventually get to a world where people do rewrite c/c++ libraries in higher level languages rather than just wrapping them
[00:15:33] <FromDiscord> <Gumber> and it's not because there's no well suited technology
[00:15:41] <FromDiscord> <Gumber> why?
[00:15:58] <FromDiscord> <fae> idk, just utopian thinking
[00:16:06] <FromDiscord> <Gumber> I mean it's completely transparent to you
[00:16:09] <FromDiscord> <Gumber> as a consumer of the library
[00:16:19] <FromDiscord> <Gumber> it's not even really utopian thinking
[00:16:26] <FromDiscord> <Gumber> it's a bit impractical
[00:16:35] <FromDiscord> <Gumber> it's nice to have pure implementations of certain libraries sure
[00:16:45] <FromDiscord> <Gumber> but some things you can't implement in Nim
[00:16:51] <FromDiscord> <Gumber> you need assembly
[00:17:01] <FromDiscord> <Gumber> and other things are better not to be implemented in a higher level language
[00:17:08] <FromDiscord> <Gumber> because reasons
[00:17:52] <FromDiscord> <fae> well i didnt mention assembly, i only talked about c/c++. and i know you have your opinions on rust, but apparently many people do think that its worth it to rewrite some of these long standing c++ libs in a safer more egonomic (lol) language
[00:18:08] <FromDiscord> <Gumber> anyone who things Rust is more ergonomic than C++ is silly af
[00:18:12] <FromDiscord> <Gumber> and / or on drugs
[00:18:14] <FromDiscord> <fae> hence the lol 🙂
[00:18:25] <FromDiscord> <Gumber> okay but like rust isn't really higher level than C++
[00:18:27] <FromDiscord> <fae> but ask the rustaceans 🙂
[00:18:30] <FromDiscord> <Gumber> so what you said is a bit of a misstatement
[00:18:37] <FromDiscord> <Gumber> it's pretty much at the same abstraction level of C++
[00:19:04] <FromDiscord> <Gumber> and higher level doesn't automatically mean safer
[00:19:10] <FromDiscord> <Gumber> soooo it was hard to parse what you were truly getting at
[00:19:16] <FromDiscord> <fae> true, i guess they have just codified some of the lower level aspects like memory management, giving a "higher level" feel to it
[00:19:27] <FromDiscord> <Gumber> but yes - there is, in some arenas, value in memory safety when it comes to computing
[00:19:39] <FromDiscord> <Gumber> in others it's pretty much a pointless pursuit (like game development)
[00:19:57] <FromDiscord> <Gumber> I mean C++ has memory management
[00:20:04] <FromDiscord> <Gumber> it has RAII
[00:20:23] <FromDiscord> <Gumber> `new` `delete`
[00:20:27] <FromDiscord> <Gumber> it's just not automatic memory management
[00:20:39] <FromDiscord> <Gumber> RAII is closer to it but not the same as garbage collection
[00:21:02] <FromDiscord> <Gumber> and in the grand scheme of things memory management is simple
[00:21:11] <FromDiscord> <Gumber> like - I could crank out a memory management subsystem for a game engine in two weeks
[00:21:26] <FromDiscord> <fae> it is one of the really impressive things about Nim though, that it does feel so high level
[00:21:26] <FromDiscord> <Gumber> and it would be perfect, production ready, and usable for the rest of my project's lifespan as well as future projects
[00:21:36] <FromDiscord> <fae> but you can really get down to the nitty gritty if you need to
[00:21:49] <FromDiscord> <Gumber> yeah well I find that those who praise its high level features
[00:21:52] <FromDiscord> <Gumber> rarely get into the nitty gritty
[00:22:03] <FromDiscord> <Gumber> I mean of course there are efforts to do so
[00:22:18] <FromDiscord> <Gumber> but currently, the only realistic way to do low level systems programming with Nim is to resort to unsafe means
[00:22:25] <FromDiscord> <Gumber> or slow abstractions like channels etc
[00:22:38] <FromDiscord> <Gumber> and most pepole who are all about safety and the gc and stuff don't like to do that stuff
[00:22:41] <FromDiscord> <fae> like using `pointer` everywhere?
[00:22:49] <FromDiscord> <Gumber> so their applications tend to be higher level
[00:22:52] <FromDiscord> <fae> and turning gc off lol
[00:22:58] <FromDiscord> <Gumber> right now if you want to use threads with Nim you're going to either have to use channels or `pointer`
[00:23:01] <FromDiscord> <Gumber> or `ptr`
[00:23:04] <FromDiscord> <Gumber> turning the GC off is extreme
[00:23:20] <FromDiscord> <Gumber> but if you're writing for SBCs or something or doing a lot of IoT work you might be doing that
[00:23:26] <FromDiscord> <Gumber> it's just you give up most of the stdlib in doing so
[00:23:39] <FromDiscord> <Gumber> and Nim basically becomes C with some better (subjective) syntax and types
[00:23:53] <FromDiscord> <fae> that is good enough for some people im sure
[00:23:58] <FromDiscord> <fae> especially with the metaprogramming capabilities
[00:24:08] <FromDiscord> <Gumber> yeah I mean don't get me wrong Nim is great I love Nim
[00:24:20] <FromDiscord> <Gumber> but it's rare I see folks who use it for like embedded / 3d gaming stuff etc
[00:24:31] <FromDiscord> <Gumber> using like ref objects etc
[00:24:38] <FromDiscord> <Gumber> like I use pointers A LOT
[00:25:04] <FromDiscord> <Gumber> only if I"m writing some code that I know doesn't need to be performant or I know will never execute on anything but a single thread will I start using GCd mem
[00:25:04] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:25:17] <FromDiscord> <Gumber> I mean of course like stack allocations and stuff I dont' care about
[00:25:41] <FromDiscord> <Gumber> but if I"m allocating anything on the heap and I know there's the potential for it to be accessed by another thread it's automatically going to be a manual allocation / free
[00:26:11] <FromDiscord> <Gumber> and one nice thing about Nim is I can always write my own allocator that uses `malloc` and `free` to implement my own allocator
[00:26:13] <FromDiscord> <fae> im looking forward to learning about threading
[00:26:21] <FromDiscord> <Gumber> and then I can track allocations and memory usage by subsystem
[00:26:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:26:55] <FromDiscord> <Gumber> Yeah well you might want to temper your excitement
[00:27:12] <FromDiscord> <Gumber> Concurrency in parallelism are some of the more complicated topics in computer science
[00:27:20] <FromDiscord> <fae> oh shit forgot i ordered food like 30 min ago lol afk
[00:27:23] <FromDiscord> <Gumber> And you don't get good at them overnight or in a year or even in two years
[00:27:59] <FromDiscord> <Gumber> You have to really have a solid understanding of your programming language it's memory model your operating system how system threads work and are implemented you need to understand concurrency primitive like what a mutex is what a semaphore is what a condition is what a lock is
[00:28:16] <FromDiscord> <Gumber> You need to understand the difference between I/o bound and CPU bound and be able to identify when a certain type of concurrency should be applied
[00:28:58] <FromDiscord> <Gumber> There is a ton to learn about when it comes to that topic and when you go to actually start practicing and implementing some multi-threaded code it requires a different mode of thinking versus how you might normally go about authoring a program that executes on a single system thread
[00:29:39] <FromDiscord> <Gumber> Like if you don't fully understand how you're operating system scheduler works you don't know enough to write good multithreaded code
[00:29:59] <FromDiscord> <Gumber> Because the operating system scheduler is what is going to be switching between thread contexts and just switching between two threads has side effects and implications
[00:30:28] <FromDiscord> <Gumber> So when someone starts talking about writing multithreaded code to someone who's been there and done that it's kind of a I wish you good luck scenario
[00:31:30] <FromDiscord> <Gumber> A lot of this would probably go over your head but either way it would give you a good introduction to some concepts in concurrency and multi-threading I shared it the other day but if you want to link all grab it
[00:31:44] <FromDiscord> <Gumber> But I highly recommend listening to the podcast by the guys that are building the machinery on their fiber-based job system
[00:41:04] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[01:02:22] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[01:07:33] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:08:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:10:02] *** Gustavo6046_ is now known as Gustavo6046
[01:57:40] *** Joins: arfy8820 (~arfy@1.127.108.200)
[02:00:26] *** Quits: arfy (~arfy@1.126.104.139) (Ping timeout: 260 seconds)
[02:00:36] *** arfy8820 is now known as arfy
[02:11:27] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zuE
[02:11:59] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 268 seconds)
[02:14:49] <FromDiscord> <enthus1ast> nice library
[02:14:51] *** Quits: max22- (~maxime@2a01cb0883359800f35acda3ecfc604d.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:16:26] <FromDiscord> <enthus1ast> https://github.com/kwhat/libuiohook/blob/1.2/demo/demo_hook.c
[02:16:37] <FromDiscord> <enthus1ast> hook\_run
[02:16:50] <FromDiscord> <enthus1ast> but you must supply the logger and dispatcher proc
[02:17:52] <FromDiscord> <Smarc> what do you mean by supply? Never worked with FFI's in Nim
[02:18:46] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3zuG
[02:19:19] <FromDiscord> <Smarc> Actually I have no clue how to work with those extern functions yet . . Are you keen to help me a little with my small project?
[02:19:43] <FromDiscord> <enthus1ast> this could be a pointer to a nim proc which has the {.cdecl.} pragma
[02:19:54] <FromDiscord> <enthus1ast> and implements the matching proc header
[02:20:07] <FromDiscord> <enthus1ast> and return oc.
[02:21:39] <FromDiscord> <enthus1ast> i would start by wrapping the uihook.h with c2nim
[02:22:10] <FromDiscord> <enthus1ast> then i guess you can use the compile pragma on the c code
[02:22:45] <FromDiscord> <enthus1ast> or link the compiled c code to your nim executable
[02:23:57] <FromDiscord> <enthus1ast> or maybe, depending on what you wanna do, there is another way, instead of global hooking
[02:24:37] <FromDiscord> <Smarc> well I want to simulate a mech keyboard, so I want a program running in the bg that reacts with a sound on every key pressed, regardless of the focused window
[02:24:59] <FromDiscord> <enthus1ast> for windows?
[02:25:06] <FromDiscord> <Smarc> I already made a program that is capable of that if it has focus, using BASS
[02:25:09] <FromDiscord> <Smarc> for linux
[02:25:56] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zuH
[02:27:33] <FromDiscord> <Smarc> just in a good programming language :P
[02:27:40] <FromDiscord> <Smarc> and ofc without electron-garbage
[02:29:37] <FromDiscord> <enthus1ast> yeah try to wrap uihook.h first (either manually, with c2nim or nimterop) then compile the c sources either with your program or build libuihook to a lib and link it to your nim program
[02:30:55] <FromDiscord> <Smarc> I actually don't know how to get nim to know those custom libraries. I followed the install guide on the uihook-github but nim gives me a "no such file or directory" if i want to import hook_run()
[02:31:37] <FromDiscord> <enthus1ast> you must first create a nim wrapper of the header
[02:32:00] <FromDiscord> <enthus1ast> so that your nim program knows how the functions must be called
[02:32:24] <FromDiscord> <Smarc> I don't exactly know what you mean by that
[02:32:36] <FromDiscord> <enthus1ast> have a look at this example\: https://github.com/OpenSystemsLab/xxhash.nim/blob/master/src/xxhash.nim
[02:32:39] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zuK
[02:33:00] <FromDiscord> <Smarc> (tried uiohook.h too)
[02:34:07] <FromDiscord> <enthus1ast> {.compile\: "private/xxHash/xxhash.c".}  # \<--- here the c is compiled alongside with the nim app
[02:34:29] <FromDiscord> <enthus1ast> then the function is declared\:↵`proc XXH32(input: ptr UncheckedArray[byte], length: csize_t, seed: uint32): uint32 {.cdecl, importc: "XXH32".} `
[02:35:32] <FromDiscord> <enthus1ast> you basically recreate a "nim header" file for the c library
[02:38:05] <FromDiscord> <enthus1ast> but i can imagine that the c library is easier to wrap when build with cmake as a lib, then just linked
[02:44:56] <nrds> <06Prestige99> Can I not modify values passed into a proc generated inside a macro?
[02:45:50] <nrds> <06Prestige99> e.g. https://play.nim-lang.org/#ix=3zuL line 14, I can't reassign `time`
[02:55:20] <nrds> <06Prestige99> ah nvm, it has to be a var...
[03:02:18] *** Joins: arfy8820 (~arfy@1.126.110.217)
[03:04:41] *** Quits: arfy (~arfy@1.127.108.200) (Ping timeout: 246 seconds)
[03:04:44] *** arfy8820 is now known as arfy
[03:11:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> This seemingly trivial nim snippet fails rather ungracefully...
[03:11:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://play.nim-lang.org/#ix=3zuM
[03:12:39] <FromDiscord> <dom96> do we have anything in stdlib (or as nimble package) that format floats to a certain number of significant figures?
[03:12:58] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/strutils.html#formatFloat%2Cfloat%2CFloatFormatMode%2Crange%5B%5D%2Cchar
[03:13:07] <FromDiscord> <Elegantbeef> There is also one that does sci notation
[03:13:35] <FromDiscord> <Elegantbeef> Actually that does it you just provide `ffScientific`
[03:13:46] <FromDiscord> <enthus1ast> ..... this i rolled myself two days ago
[03:13:51] <FromDiscord> <enthus1ast> nice to know
[03:14:08] <FromDiscord> <Elegantbeef> Bracket this is you failing to allocate a ref object
[03:14:14] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3zuN
[03:14:47] <FromDiscord> <Elegantbeef> Ref objects are by default initialized to a nil pointer, you must allocate either using the object constructor or by using `new` to use the fields
[03:14:50] <FromDiscord> <Elegantbeef> Otherwise you're derferencing nil
[03:14:54] <FromDiscord> <dom96> afaik scientific notation isn't the same as significant figures
[03:15:43] <FromDiscord> <Elegantbeef> I said also
[03:16:07] <FromDiscord> <dom96> well... formatFloat doesn't do it either lol
[03:16:23] <FromDiscord> <Elegantbeef> Scientific notation uses significant figures though
[03:17:06] <FromDiscord> <Elegantbeef> 5243 with 2 significant figures is `5.2  10^3` or `5.2e3`
[03:17:24] <nrds> <06Prestige99> Elegantbeef I finally got that animation system working just now.. lol
[03:17:33] <FromDiscord> <Elegantbeef> Congrats
[03:18:41] <nrds> <06Prestige99> Thanks, was a bear
[03:19:42] <FromDiscord> <dom96> I need it to give e0
[03:20:07] <FromDiscord> <Elegantbeef> You want to count the significant digits in a float?
[03:22:44] <FromDiscord> <Elegantbeef> There is also `formatEng`
[03:24:30] <FromDiscord> <dom96> hm, that might be good enough
[03:24:54] <FromDiscord> <dom96> but really I want: formSig(4000.42, precision=2) -> 4000.4
[03:24:58] <FromDiscord> <dom96> (edit) "formSig(4000.42," => "formatSig(4000.42,"
[03:25:34] <FromDiscord> <Elegantbeef> Ok so you dont want sig digits you want decimals
[03:26:17] <FromDiscord> <dom96> No, I want significant figures: https://en.wikipedia.org/wiki/Significant_figures
[03:26:18] <FromDiscord> <Elegantbeef> Wait... why would you get `4000.4` with 2 percision
[03:26:58] <FromDiscord> <dom96> 4000.4 has 2 significant figures/digits
[03:30:52] <FromDiscord> <dom96> oh well, formatEng will do
[03:31:24] <FromDiscord> <Elegantbeef> Well even that link agrees that `4000.42` may or may not be represented as `4.0e3`
[03:31:37] <FromDiscord> <Elegantbeef> There is ambiguity with sigdigs in that case
[03:33:54] <FromDiscord> <Elegantbeef> But then again i just dont want to admit i was never taught the case that 0's following integer values can be sig digs
[03:34:32] <FromDiscord> <Elegantbeef> So prestige what did you end with OOP or variants?\>
[03:34:58] <nrds> <06Prestige99> a converter
[03:35:00] <nrds> <06Prestige99> lol
[03:35:09] <FromDiscord> <Elegantbeef> That doesnt answer the question
[03:35:15] <FromDiscord> <Elegantbeef> Are you only using floats?
[03:35:38] <nrds> <06Prestige99> Yeah, converting int to floats, then back to ints later
[03:35:41] <nrds> <06Prestige99> https://git.einheit.tech/EinheitTechnologies/shade/src/commit/ed060db609ef4ec3cc890af79195f9f23295a57c/src/shadepkg/game/animation.nim
[03:37:02] <nrds> <06Prestige99> I didn't use either oop or variants so, yeah
[03:39:42] *** federico3 is now known as federico3_
[03:39:57] *** federico3[m] is now known as federico
[03:39:59] <FromDiscord> <Elegantbeef> Also damn you and varriount i've been thinking about concepts + vtable like stuff
[03:40:07] *** federico is now known as federico3
[03:40:19] <nrds> <06Prestige99> I imagine there's a cleaner way to do what I'm doing here but I couldn't figure it out, e.g. the template I use at the very bottom
[03:40:38] <nrds> <06Prestige99> bascially is just for `field is int`
[03:41:30] <FromDiscord> <Elegantbeef> i mean the macro has `T` so use `T is int` instead
[03:42:07] *** Quits: federico3 (~federicoc@2001:470:69fc:105::fb07) (Changing host)
[03:42:07] *** Joins: federico3 (~federicoc@debian/federico)
[03:42:07] <nrds> <06Prestige99> It wouldn't compile iirc
[03:42:09] <FromDiscord> <Elegantbeef> or `field is int`
[03:42:21] <FromDiscord> <Elegantbeef> dont lie to me
[03:42:36] <FromDiscord> <Elegantbeef> `typeof(field) is int`?
[03:42:43] <FromDiscord> <Elegantbeef> Dont make me go get my macro beating stick
[03:43:19] *** Parts: federico3_ (~quassel@debian/federico) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:43:27] <nrds> <06Prestige99> when `field` is int did work :) I just tried T before
[03:43:29] <nrds> <06Prestige99> Thanks
[03:43:45] <FromDiscord> <Elegantbeef> Well T should've also worked afaik
[03:44:02] <nrds> <06Prestige99> 🤷
[03:44:33] <nrds> <06Prestige99> it always expected a float when I tried that
[03:45:11] <nrds> <06Prestige99> https://git.einheit.tech/EinheitTechnologies/shade/src/commit/ed060db609ef4ec3cc890af79195f9f23295a57c/src/shadepkg/game/faketestentity.nim Here's an example of it in use, pretty neat
[03:45:54] <FromDiscord> <Elegantbeef> Now i have to wonder what this does better than my impl
[03:46:06] <nrds> <06Prestige99> The macro one?
[03:46:31] <FromDiscord> <Elegantbeef> Yea my macro impl vs this
[03:46:35] <nrds> <06Prestige99> Probably nothing better but I couldn't figure out how to work with yours
[03:46:52] <FromDiscord> <Elegantbeef> Ah you just defined a lerp for the type you wanted 😛
[04:03:21] <FromDiscord> <@bracketmaster-5a708063d73408ce4> can you pass a typedesc to a function as an argument?
[04:05:57] <FromDiscord> <auxym> yes, see as example: https://github.com/nim-lang/Nim/blob/version-1-4/lib/system/memalloc.nim#L121
[04:20:45] <FromDiscord> <@bracketmaster-5a708063d73408ce4> OK
[04:20:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I ended up going with a template\: https://play.nim-lang.org/#ix=3zuZ
[04:21:17] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Seems unhappy with me passing in a string though ^^
[04:21:39] <FromDiscord> <Elegantbeef> Nope
[04:22:05] <FromDiscord> <Elegantbeef> templates replace all instances that match parameters with that parameter
[04:22:06] <FromDiscord> <@bracketmaster-5a708063d73408ce4> nope?
[04:22:10] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3zv1
[04:22:31] <FromDiscord> <@bracketmaster-5a708063d73408ce4> oh yeah - not hygenic
[04:22:37] <FromDiscord> <Elegantbeef> It's hygenic
[04:23:00] <FromDiscord> <Elegantbeef> When looking for symbols it's preferential to passed in parameters
[04:26:24] <FromDiscord> <@bracketmaster-5a708063d73408ce4> hmm
[04:38:23] <FromDiscord> <niltok> where should I be able to find stdlib modules in the filesystem?
[04:38:33] <FromDiscord> <niltok> i search for hashes.nim and can't find anything
[04:38:58] <FromDiscord> <Elegantbeef> it should be in your `nim/lib/pure` directory
[04:39:21] <FromDiscord> <Elegantbeef> I use choosenim on linux so it's in `~/.choosenim/version/lib/pure`
[04:40:05] <FromDiscord> <niltok> thanks, I must have been searching wrong
[04:45:58] <FromDiscord> <HuskyHacks> hello 🙂
[04:46:05] <FromDiscord> <Elegantbeef> Hello
[04:48:17] <FromDiscord> <impbox [ftsf]> o/ ahoy there
[04:49:26] <FromDiscord> <HuskyHacks> I am a recent nim convert but for reasons that may be a little off the beaten path
[04:49:37] <FromDiscord> <Elegantbeef> `hacks` yep
[04:49:40] <FromDiscord> <HuskyHacks> 😉
[04:49:49] <FromDiscord> <HuskyHacks> but I'm here because I want to be a better programmer
[04:50:08] <FromDiscord> <Elegantbeef> Well we will almost certainly not aid in helping malware but general nim questions can be answered
[04:50:15] <FromDiscord> <HuskyHacks> nah I got that part covered
[04:50:36] <FromDiscord> <HuskyHacks> I have a long way to go from a basic CS/programming standpoint though
[04:50:57] <FromDiscord> <HuskyHacks> and Nim is the only language that has ever made sense to me so I figured it's my best shot
[04:51:07] <FromDiscord> <Papel> sent a long message, see http://ix.io/3zv9
[04:51:25] <FromDiscord> <Elegantbeef> Well then i welcome you to make non malicious programs 🙂
[04:51:53] * arfy is also a recent nim discoverer
[04:52:12] <FromDiscord> <impbox [ftsf]> welcome!
[04:54:13] <FromDiscord> <impbox [ftsf]> I've been using nim for over 5 years now, wow
[04:54:22] <arfy> wow
[04:54:38] <FromDiscord> <Elegantbeef> I've only used it for like a year and a half
[04:57:18] <FromDiscord> <HuskyHacks> It's getting very popular with red teamers/pentesters, along with Rust
[04:58:21] <FromDiscord> <HuskyHacks> and as far as I can tell, security products don't quite "get" the structure of Nim compiled binaries yet to the extent that they can hook and analyze others, so I have a feeling it will be popular for a while until the vendors catch up
[05:01:08] <FromDiscord> <Elegantbeef> Well Nim binaries are already blocked by multiple anti viruses afaik
[05:01:54] <arfy> :(
[05:04:03] <FromDiscord> <HuskyHacks> the compiler is for sure!
[05:04:10] <FromDiscord> <HuskyHacks> I was surprised by that
[05:12:10] <FromDiscord> <cabboose> Yes it is annoying
[05:12:19] <FromDiscord> <cabboose> I turn off my antivirus with frustration whenever I’m coding
[05:12:26] <FromDiscord> <impbox [ftsf]> >_> good to know
[05:12:48] <FromDiscord> <Elegantbeef> I just use a organic freerange OS
[05:13:02] <FromDiscord> <cabboose> Sounds like a hippy thing
[05:13:21] <FromDiscord> <Elegantbeef> Nah the hippy thing is me chaning myself to a goat that's chained to a tree
[05:16:21] <NimEventer> New thread by Elcritch: Thoughts on pure Nim api for SPI & I2C device access?, see https://forum.nim-lang.org/t/8443
[05:20:41] <arfy> ugh
[05:20:48] <FromDiscord> <Elegantbeef> hgu
[05:20:58] <arfy> trying to   figure out how to get notepad++ to play nice with nim in terms of spacing
[05:25:54] <FromDiscord> <impbox [ftsf]> i haven't used that since my quake2 modding days
[05:26:17] <arfy> yeah. good tgime to try vscode.
[05:26:19] <arfy> time
[05:33:46] <FromDiscord> <Gumber> vim + nimlsp is nice
[05:33:47] <FromDiscord> <Gumber> or emacs
[05:33:58] <FromDiscord> <Gumber> or spacemacs with evil mode
[05:49:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:56:33] *** Joins: neurocyte0133 (~neurocyte@212.232.95.106)
[05:56:33] *** Quits: neurocyte0133 (~neurocyte@212.232.95.106) (Changing host)
[05:56:33] *** Joins: neurocyte0133 (~neurocyte@user/neurocyte)
[05:58:54] *** Quits: neurocyte013 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[05:58:54] *** neurocyte0133 is now known as neurocyte013
[06:59:55] <FromDiscord> <treeform> In reply to @fae "also i havent really": My lib uses std/json ... so you been using it too 🙂
[07:00:17] <FromDiscord> <treeform> In reply to @Gumber "I disagree and have": do you have link?
[07:03:27] <FromDiscord> <treeform> More backends besides OpenGL would be cool. Its more work to make them happen though.
[07:04:22] <FromDiscord> <treeform> I really want to get Metal and Vulkan backends.
[07:05:02] <nrds> <06Prestige99> @Elegantbeef I've been thinking about ways to make this system more robust/handle any type. Was thinking I could generate a new type that had this information stored, and a proc to update them all (so the type wouldn't matter). What do you think? Probably just an adaptation of what you created, previously
[07:05:11] <FromDiscord> <treeform> I would like to finish glfw/gl backend first. Once that is done I'll make more.
[07:05:39] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:05:56] <arfy> lol. I just ran file on a nim file and it said. python script
[07:06:05] <nrds> <06Prestige99> :o
[07:06:25] <FromDiscord> <Elegantbeef> Hmm i dont know prestige
[07:06:50] <FromDiscord> <Elegantbeef> I was thinking it did need a key or something to allow calling different enimations
[07:07:19] <FromDiscord> <Elegantbeef> I dont know if it needs a type since i figure this stuff is all done at CT
[07:07:33] <nrds> <06Prestige99> So my thought is that an Animation would have multiple seq[tuple[T, float]]
[07:07:51] <nrds> <06Prestige99> where each is a different type, but found at compile time
[07:09:39] <nrds> <06Prestige99> e.g. https://play.nim-lang.org/#ix=3zvr but the Animation type is generated
[07:09:59] <FromDiscord> <Elegantbeef> I'm just wondering if this is need
[07:10:19] <FromDiscord> <Elegantbeef> Could it not just be a compile time string -\> animation?
[07:10:46] <nrds> <06Prestige99> wdym?
[07:10:55] <FromDiscord> <treeform> In reply to @tandy "what im doing is": In jsony to skip a key, you would have to override the dumpHook for the whole objet and check the keys type. A specific option dumpHook does not dump the key, so it can't skip it.
[07:11:00] <FromDiscord> <Elegantbeef> Well why does the animation object exist?
[07:11:11] <FromDiscord> <Elegantbeef> To hold data to get invoked upon right?
[07:11:17] <FromDiscord> <Elegantbeef> And to be able to use specific animators
[07:11:21] <FromDiscord> <Gumber> In reply to @treeform "do you have link?": I think we've hashed out the conversation before
[07:11:32] <nrds> <06Prestige99> Yeah
[07:11:39] <FromDiscord> <Gumber> we've talked about it at least twice I think in the past treeform
[07:11:49] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:11:54] <FromDiscord> <Gumber> my previous handle is Zachary Carter
[07:11:57] <FromDiscord> <Gumber> in case you weren't aware
[07:12:14] <FromDiscord> <Gumber> but I just have different requirements for my GUI libraries than you and I guess others do
[07:12:26] <FromDiscord> <Gumber> I want them to do the bare minimum for me
[07:12:28] <FromDiscord> <treeform> In reply to @tandy "what im doing is": I think this might do what you want: https://gist.github.com/treeform/b9ae82d583773dc77fd214df45d5d20c
[07:13:00] <FromDiscord> <treeform> In reply to @Gumber "my previous handle is": I was not aware sorry!
[07:13:12] <FromDiscord> <Gumber> ah no worries! I tried to do like a transition period with both names in my server nick
[07:13:27] <FromDiscord> <Gumber> but trying to get rid of my real name being associated with my discord after that whole incident last year
[07:13:43] <FromDiscord> <Elegantbeef> So i'm just wondering if there is any reason to have this leak or allow an api like https://play.nim-lang.org/#ix=3zvu
[07:15:10] <FromDiscord> <Elegantbeef> I dont know i might be missing something
[07:16:07] <nrds> <06Prestige99> that would be fine I think but needs to support any type
[07:16:08] <FromDiscord> <treeform> I was working on animations like a year ago. I found its too hard to manage in code, so I just did a json file with key frames.
[07:16:21] <FromDiscord> <Elegantbeef> Well my  method does support anytype
[07:16:43] <FromDiscord> <treeform> animation are hard to get right without an editor of some sort
[07:16:56] <FromDiscord> <treeform> so editor + simple keyframe format would be my vote
[07:17:27] <FromDiscord> <Elegantbeef> Yea something like that would be the best though he wants to animate fields so he needs to make the tooling in conjunction with the format
[07:17:28] <nrds> <06Prestige99> oh, hmm
[07:17:33] <nrds> <06Prestige99> I'll explore it more
[07:18:03] <FromDiscord> <Elegantbeef> The biggest issue with this format is it's just super hard to do anything, you really want an editor with this
[07:19:27] <FromDiscord> <Elegantbeef> Only issue is that for an editor you're pretty much forced to mark everything so you can view it's fields and actually animate it at runtime
[07:19:38] <FromDiscord> <Elegantbeef> No clue the best way to handle that/serialize that
[07:35:00] <FromDiscord> <impbox [ftsf]> I made an keyframe animation editor in nim, but each keyframe contains all the possible keys so it's a bit ugly
[07:35:42] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3zvB
[07:36:27] <FromDiscord> <impbox [ftsf]> would be nicer with each channel just being a seq[(time,value)]
[07:37:23] <nrds> <06Prestige99> Beef I was thinking of saving the anim data in a file and loading it in, later
[07:40:38] <FromDiscord> <impbox [ftsf]> Prestige, you could just use Vec4s for all channels and make them homogenous
[07:41:21] <nrds> <06Prestige99> why a Vec4?
[07:41:40] <FromDiscord> <impbox [ftsf]> since it should be able to handle all the things you want to animate
[07:41:51] <FromDiscord> <impbox [ftsf]> (not exactly sure what your requirements are)
[07:42:06] <FromDiscord> <impbox [ftsf]> but color, pos, rotation, scale, etc all fit in a vec4
[07:42:16] <nrds> <06Prestige99> I want to be able to "animate" any type - int, float, string, tuples of any data, custom types
[07:42:18] <FromDiscord> <impbox [ftsf]> as do any scalars
[07:42:27] <nrds> <06Prestige99> and also invoke function calls, eventually
[07:42:35] <FromDiscord> <impbox [ftsf]> animate strings? o_O
[07:42:38] <nrds> <06Prestige99> but I could handle that separately I suppose
[07:42:42] <FromDiscord> <impbox [ftsf]> how does it interpolate those?
[07:42:56] <nrds> <06Prestige99> that would depend on the function provided
[07:43:09] <FromDiscord> <impbox [ftsf]> ok, so you want it to be super generic
[07:43:15] <nrds> <06Prestige99> Yeah
[07:43:16] <FromDiscord> <impbox [ftsf]> but do you have a specific usecase?
[07:43:21] <nrds> <06Prestige99> Trying to replicate godot's system
[07:43:28] <FromDiscord> <impbox [ftsf]> maybe just focus on your usecase rather than making it overly generic
[07:43:30] <nrds> <06Prestige99> basically
[07:43:40] <FromDiscord> <Elegantbeef> It being super generic is hard to do given Nim type information is mostly gone at runtime
[07:43:53] <nrds> <06Prestige99> I want to recreate a game I made in godot, and it uses this system
[07:44:05] <FromDiscord> <impbox [ftsf]> well you can do it if you dynamic dispatch
[07:45:33] <FromDiscord> <impbox [ftsf]> it'll just be very heavy
[07:47:05] <FromDiscord> <impbox [ftsf]> https://docs.godotengine.org/en/stable/classes/class_animation.html this what you're basing it off?
[07:47:24] *** Joins: arfy8820 (~arfy@1.126.110.217)
[07:48:25] <nrds> <06Prestige99> basing it off using the ui
[07:48:53] <FromDiscord> <impbox [ftsf]> looks like there's a pretty limited set of track types
[07:49:17] <FromDiscord> <impbox [ftsf]> object variants seems fine
[07:49:42] <FromDiscord> <Elegantbeef> Yea object variant + method for handling lerps
[07:49:56] *** Quits: arfy (~arfy@1.126.110.217) (Ping timeout: 246 seconds)
[07:50:00] *** arfy8820 is now known as arfy
[07:50:06] <FromDiscord> <Elegantbeef> well procedure 😛
[07:50:22] <nrds> <06Prestige99> I was struggling to get variants working but your macro system seems to work
[07:50:56] <FromDiscord> <Elegantbeef> Well the macro system is hard to serialize
[07:51:00] <FromDiscord> <Elegantbeef> So no editor
[07:56:23] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[07:59:57] <nrds> <06Prestige99> I'll try getting variants to work
[08:11:25] <NimEventer> New post on r/nim by AccountDry2463: 🍭 Үoung Scнооl Роrn 🍭, see https://reddit.com/r/nim/comments/psap7p/үoung_scнооl_роrn/
[08:17:26] <FromDiscord> <Archion> Hi
[08:17:36] <FromDiscord> <Elegantbeef> Hello
[08:17:40] <nrds> <06Prestige99> That seems like a link I don't want to click
[08:19:54] <FromDiscord> <Yardanico> uff
[08:20:31] <FromDiscord> <Yardanico> seems like it's just generic spam, not aimed at r/nim specifically (so the person/bot who posted it didn't know it gets bridged to 2+ communities)
[08:22:42] <nrds> <06Prestige99> Elegantbeef: How would you go about variants here? I could make the AnimationTrack a variant, and depending on the type, pass a different generic to my seq[KeyFrame[T]]? Don't know if that'd even work
[08:25:48] *** Joins: sagax (~sagax_nb@user/sagax)
[08:26:57] <FromDiscord> <Elegantbeef> Well you just make a keyframe for each value so float, int, vector...
[08:27:05] <FromDiscord> <Elegantbeef> You cannot use a generic here since that's resolved to a concrete type
[08:27:38] <nrds> <06Prestige99> Hm yeah I suppose that'd work
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[08:36:17] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:57] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[08:51:49] <nrds> <06Prestige99> I can do something like when foo is int, but can't seem to be able to use a case statement for it?
[08:52:23] <nrds> <06Prestige99> eh maybe I'm still going about this the wrong way
[09:02:00] <nrds> <06Prestige99> or there isn't a way to check if a variable is a proc
[09:02:28] <FromDiscord> <Elegantbeef> `when T is proc` or have a proc that takes that parameter as a different type
[09:05:20] <nrds> <06Prestige99> seems to be complaining about when T is proc
[09:05:32] <nrds> <06Prestige99> like it expects a proc implementation or a type after the color
[09:05:36] <nrds> <06Prestige99> colon*
[09:06:02] <nrds> <06Prestige99> ah wrapping in parens worked
[09:27:37] <FromDiscord> <linux user> process goes defunt when kill or terminate
[09:27:51] <FromDiscord> <linux user> solution: discard waitforexit process
[09:28:00] <FromDiscord> <linux user> (edit) "defunt" => "zombie/defunt"
[09:32:26] <FromDiscord> <Gumber> In reply to @haxscramper "so `get_images` is declared": Soooo I tried out your suggestions and I'm still really confused. The `importcpp`s all seem correct. One fun thing is - when I remove the `vkb::detail::Result[std::vector[VkImage]]` from the equation so that only the `VkImageView` result vector is left - the code compiles and produces the correct `VkImageView` type
[09:32:59] <FromDiscord> <Gumber> and if I place the line with the `VkImageView` above the line with the `VkImage` then I get an error about `VkImage` and both lines have `VkImageView` as the type
[09:33:48] <FromDiscord> <Gumber> so I"m starting to think again that it's NOT that my `importcpp` s are incorrect somewhere but instead it's that I either haven't wrapped something I need to or there's something wrong with the cpp compiler backend
[09:55:50] <FromDiscord> <Gumber> I feel like it's because they're both just aliases to pointers to opaque types
[09:56:32] <FromDiscord> <Gumber> so the codegen is generating a typedef to alias `vkb::detail::Result[std::vector[VkImage]]`
[09:57:17] <FromDiscord> <Gumber> but I'm guessing what's happening is it goes to generate one for `vkb::detail::Result[std::vector[VkImageView]]` and is like - wait I already have that  essentially because `VkImage` and `VkImageView` are just aliases to `pointer`
[09:57:26] <FromDiscord> <Gumber> maybe I need to make them a distinct pointer? is that even a thing lol?
[10:00:59] <FromDiscord> <Gumber> if you use `distinct pointer` with `importcpp` it will generate a single type def still but this time it won't  even use the cpp type name it will just generate a random type name
[10:01:08] <FromDiscord> <Gumber> oh man so much weird shit with this backend
[10:01:52] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[10:06:36] <FromDiscord> <Gumber> I guess you can't make wandbox use the cpp backend?
[10:21:03] <FromDiscord> <Gumber> Okay
[10:23:13] <FromDiscord> <Gumber> that's what it is and I have a min reproducible example
[10:31:53] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 264 seconds)
[10:45:57] <NimEventer> New thread by Ingo: Socket questions. selectRead(fds), dispatcher., see https://forum.nim-lang.org/t/8444
[10:51:36] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwi
[10:54:10] <FromDiscord> <Elegantbeef> `nimble --version`?
[10:54:34] <FromDiscord> <Elegantbeef> Dont have arm and have never had this issue so no clue really just hoping something odd pops up
[10:55:05] <FromDiscord> <impbox [ftsf]> execption is mispelt too
[10:55:18] <FromDiscord> <Bren> I am typing it from another pc
[10:55:28] <FromDiscord> <impbox [ftsf]> oh ok
[10:56:12] <FromDiscord> <impbox [ftsf]> what are you passing to nimble when you get that error?
[10:56:19] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwk
[10:58:02] <FromDiscord> <Bren> Not sure why it is trying to get git hash when its compiled from the source tar
[10:58:34] <FromDiscord> <Elegantbeef> Well that's the hash that nimble was built with
[10:58:48] <FromDiscord> <Bren> but its not a git repo
[10:59:21] <FromDiscord> <Bren> it is from https://nim-lang.org/install_unix.html and https://nim-lang.org/download/nim-1.4.8.tar.xz
[11:01:24] *** Quits: neurocyte013 (~neurocyte@user/neurocyte) (Ping timeout: 246 seconds)
[11:03:19] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:04:20] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwm
[11:05:12] <FromDiscord> <impbox [ftsf]> and the error message is the only output?
[11:05:42] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3zwo
[11:06:14] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwp
[11:06:27] <FromDiscord> <xflywind> `nimble install illwill --verbose` ?
[11:06:41] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwq
[11:07:06] <FromDiscord> <impbox [ftsf]> can try `--debug` also
[11:07:36] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zwr
[11:08:00] <FromDiscord> <Rika> Do you have git installed and updated
[11:08:09] <FromDiscord> <Bren> yes
[11:09:15] <FromDiscord> <impbox [ftsf]> any more info with --debug?
[11:09:31] <FromDiscord> <Bren> sent a code paste, see https://paste.rs/F3t
[11:10:21] <FromDiscord> <Bren> should I just blow away the tarball and tryt again?
[11:10:28] <FromDiscord> <impbox [ftsf]> can you try `which git` ?
[11:10:32] <FromDiscord> <impbox [ftsf]> it may be an alias
[11:10:41] <FromDiscord> <Rika> Or another install
[11:10:58] <FromDiscord> <Bren> sent a code paste, see https://play.nim-lang.org/#ix=3zws
[11:11:08] <FromDiscord> <Rika> And the version of git is?
[11:11:16] <FromDiscord> <impbox [ftsf]> they already posted that
[11:11:18] <FromDiscord> <Rika> Oh
[11:11:21] <FromDiscord> <Rika> Okay
[11:11:25] <FromDiscord> <Bren> `git version 2.32.0`
[11:11:31] <FromDiscord> <Rika> Sorry
[11:11:38] <FromDiscord> <Bren> I can try 1.4.6
[11:11:52] <FromDiscord> <impbox [ftsf]> only thing i can think of is nimble can't find git, but that seems odd
[11:13:00] <FromDiscord> <impbox [ftsf]> presumably it's the same output when installing any other package via nimble
[11:13:14] <FromDiscord> <Bren> ya
[11:13:34] <FromDiscord> <Bren> for whatever reason nimble when it compiles trys to get the git hash
[11:13:43] <FromDiscord> <Bren> even though it is from a tarball
[11:13:51] <FromDiscord> <Elegantbeef> That's the stored git hash from when compiled
[11:14:02] <FromDiscord> <Bren> yea but its from a tarball
[11:14:05] <FromDiscord> <Bren> there is no git hash
[11:14:07] <FromDiscord> <Bren> or repo
[11:14:15] <FromDiscord> <impbox [ftsf]> it's normal
[11:14:21] <FromDiscord> <Bren> ok
[11:14:31] <FromDiscord> <Elegantbeef> It's supposed to be the hash from the repo when it built
[11:14:31] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3zwu
[11:14:47] <FromDiscord> <Bren> quality
[11:15:12] <FromDiscord> <Rika> I don’t think it is related nonetheless
[11:15:23] <FromDiscord> <Bren> ok I'll try blowing it all away
[11:15:26] <FromDiscord> <Bren> and trying again
[11:16:53] <FromDiscord> <Bren> takes ages to build on this host
[11:17:07] <FromDiscord> <Bren> trying to build static compiled apps for my kindle
[11:17:46] <PMunch> For your Kindle?
[11:17:52] <PMunch> I didn't think those could run apps
[11:18:02] <FromDiscord> <Bren> yup they are just linux
[11:18:10] <PMunch> Huh, cool
[11:18:14] <FromDiscord> <Bren> if you have jailbroken them you can do whatever
[11:18:32] <FromDiscord> <Bren> people have compiled KOReader to work on them
[11:18:37] <PMunch> And here I am building my own eInk laptop like a scrub :P
[11:18:41] <FromDiscord> <Bren> so native epub support
[11:18:56] <FromDiscord> <Bren> yea you can hook up a keyboard and mouse
[11:18:58] <PMunch> Ooh, that'd be handy
[11:19:00] *** Joins: pro (~pro@user/pro)
[11:19:10] <FromDiscord> <Bren> people even got full DE working
[11:19:16] <FromDiscord> <Bren> but the NAND is old
[11:19:19] <FromDiscord> <Bren> I have a PW1
[11:19:24] <FromDiscord> <Bren> so its has no RAM
[11:19:30] <FromDiscord> <Bren> so TUI is the way to go
[11:19:41] <FromDiscord> <Bren> but some crazy dude got chromium running on one
[11:19:41] <PMunch> I have the one from the same gen, but not paperwhite version
[11:19:53] <PMunch> Wow, that's impressive
[11:20:11] <PMunch> I'm using a single board computer and a much bigger 10.3" display
[11:20:20] <pro> is there a limit on number of tcp connections I can have open?
[11:20:21] <PMunch> Paired with an old laptop chassis that has a keyboard and mouse
[11:20:29] <PMunch> @pro, yes
[11:21:03] <pro> back to the drawing board
[11:21:15] <FromDiscord> <Rika> How many are you opening…?
[11:21:18] <PMunch> Now I'm writing my own compositor to do dithering and update windows on the panel :)
[11:21:30] <PMunch> Yeah there is a limit, but it is quite large..
[11:21:38] <FromDiscord> <Rika> By the way how’s that dithering thing going for you
[11:21:43] <pro> it caps somewhere between 340 and 680
[11:21:50] <PMunch> Typically if you hit it you've just forgotten to close some sockets
[11:21:54] <pro> I need to open 50000
[11:21:55] <PMunch> That's nowhere near the limit
[11:22:08] <PMunch> Ah, 50k will get you into the territory
[11:22:13] <PMunch> Why do you need that many?
[11:22:21] <PMunch> @Rika, pretty well
[11:22:21] <FromDiscord> <Rika> Isn’t the limit 65k or something or what
[11:22:26] <pro> simulating many clients
[11:22:42] <PMunch> I've been playing with a-dither and different magic numbers
[11:22:46] <PMunch> Promising stuff
[11:22:47] <pro> 65k is the hard limit because it's how many ports you have, but you need to deduct like 1k system ports, so the cap is somewhere around 63k ?
[11:23:06] <PMunch> And that's for your whole system
[11:23:13] <pro> correct
[11:23:17] <FromDiscord> <Rika> You can bind to system ports as non root given the capability
[11:23:47] <FromDiscord> <Bren> would not recommend on a PW1. On the newer ones its much better
[11:23:48] <FromDiscord> <Bren> Look up the mobileread forums if you want to know how
[11:23:48] <FromDiscord> <Bren> Would not recommend on a PW1. On the newer ones it's much better
[11:32:34] <FromDiscord> <Rika> In reply to @PMunch "I've been playing with": Nice what's the numbers you got so far? Anything better than the default ones
[11:34:41] <arfy> illwill experts. I'm using illwill successfully for most of the interface of a thing I'm writing, but want to have a section where a more Q and A like thing happens. the type of thing where you'd echo a prompt, then var answer = stdin.readLine() happens. this, surprisingly worked on windows, but on posix it bombed out. what's the propper way to do this mix-mode interface?
[11:35:30] <PMunch> @Rika, well better is a subjective term. Most of the number combinations seems to have some directionality to them, which causes what appears as lines
[11:35:42] <PMunch> I kinda like 137/119 though
[11:36:23] <PMunch> But I wouldn't say it's "better" than 237/119
[11:37:37] <PMunch> I have a 1.1Gb montage of the same image dithered with all the different algorithms if you have 43Gb of RAM and want to have a look if you can find some nice ones :P
[11:37:46] <PMunch> different magic numbers*
[11:38:08] <FromDiscord> <Rika> I do not have that much ram lol
[11:38:39] <FromDiscord> <Elegantbeef> Pmunch might aswell be running the tower of babel there
[11:39:51] <FromDiscord> <Elegantbeef> I meant library but too late now
[11:40:29] <PMunch> Library of Babel?
[11:40:38] <arfy> lol
[11:40:39] <FromDiscord> <Rika> Tower of library
[11:40:39] <FromDiscord> <Elegantbeef> https://babelia.libraryofbabel.info/slideshow.html
[11:41:13] <FromDiscord> <Elegantbeef> Endless stream of random images to look through
[11:42:46] <PMunch> Oh wait, they're supposed to just be random noise?
[11:44:17] <FromDiscord> <Elegantbeef> Well it's random images
[11:45:20] <PMunch> Define image
[11:45:34] <FromDiscord> <impbox [ftsf]> they're autostereograms
[11:45:36] <PMunch> Mine looks like every pixel is just rand(255), rand(255), rand(255)
[11:45:57] <FromDiscord> <Elegantbeef> That's pretty much it pmunch
[11:46:05] <FromDiscord> <Elegantbeef> The whole monkey on a type writer thing to images
[11:46:10] <FromDiscord> <impbox [ftsf]> you don't see the sailboat?
[11:46:15] <PMunch> Haha :P
[11:46:38] <PMunch> I have an anti-tracking extension that tends to do that to all canvas elements :P
[11:46:42] <PMunch> So it's hard to tell
[11:46:53] <PMunch> For example I had to turn it off to play linerino
[11:47:08] <FromDiscord> <Elegantbeef> Not worth it
[11:47:16] <FromDiscord> <Elegantbeef> Linerino could have trackers
[11:47:53] *** Joins: max22- (~maxime@2a01cb08833598000f1fa44417d80ccf.ipv6.abo.wanadoo.fr)
[11:50:21] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2.1)
[11:51:11] <FromDiscord> <impbox [ftsf]> PMunch, dither example?
[11:52:35] <PMunch> https://uploads.peterme.net/cube_dithered_m1-237_m2-119.png
[11:52:56] <FromDiscord> <impbox [ftsf]> nice!
[11:53:11] <FromDiscord> <impbox [ftsf]> i'm keen to add some nicer dithers to nico
[11:53:24] <PMunch> https://uploads.peterme.net/cube.png
[11:53:31] <PMunch> That's the images that's being dithered
[11:54:22] <PMunch> Floyd-Steinberg: https://uploads.peterme.net/cube_dithered_fs.png
[11:54:29] <PMunch> Atkinson: https://uploads.peterme.net/cube_dithered_at.png
[12:15:50] <FromDiscord> <Rika> Oh you're also using the cube lol
[12:17:43] <PMunch> Haha, yeah it was a nice test image :P
[12:23:28] <PMunch> Hmm, what is a good example C project to import for my automatic importing project?
[12:24:18] <FromDiscord> <Elegantbeef> `stb` stuffs?
[12:24:28] <FromDiscord> <impbox [ftsf]> good ... C ...
[12:25:10] <FromDiscord> <Yardanico> In reply to @PMunch "Hmm, what is a": llvm :DD
[12:25:16] <FromDiscord> <impbox [ftsf]> blender?
[12:25:25] <FromDiscord> <Elegantbeef> llvm is in C++ no?
[12:25:29] <FromDiscord> <Yardanico> they have a C API
[12:25:41] <FromDiscord> <Yardanico> that's how nlvm works
[12:25:49] <PMunch> Something simple where I can import it on one line and use some simple procedures
[12:26:08] <PMunch> I can't have a huge example in the README :P
[12:26:11] <FromDiscord> <Yardanico> yeah the beef's suggestion is pretty good
[12:26:21] <FromDiscord> <Elegantbeef> "the beef's"
[12:26:27] <FromDiscord> <Elegantbeef> Fuck i've been dehumanized
[12:26:35] <FromDiscord> <Yardanico> how beef can be human
[12:28:20] <FromDiscord> <Rika> PMunch have you tried the XOR a dither?
[12:28:37] <PMunch> Yeah I tried it, but wasn't too happy with the results.
[12:28:46] <PMunch> Maybe I should create another massive collage of all those..
[12:29:56] <FromDiscord> <Rika> It doesn't have the line issue
[12:30:00] <FromDiscord> <Rika> Of course
[12:30:04] <PMunch> Oh really?
[12:30:06] <PMunch> Interesting
[12:30:41] <PMunch> Ugh, a dither is such an annoying name..
[12:30:47] <FromDiscord> <Rika> Hahah
[12:30:50] <FromDiscord> <Rika> Yes
[12:31:34] <PMunch> Hmm, it seems to use different ranges for the magic numbers though..
[12:34:29] <FromDiscord> <pietroppeter> In reply to @PMunch "Hmm, what is a": something from here? https://github.com/oz123/awesome-c
[12:34:31] <nrds> <12R2D299> 4GitHub: 7"A curated list of awesome C frameworks, libraries, resources and other shiny things. Inspired by all the other awesome-... projects out there."
[12:35:25] <FromDiscord> <Yardanico> In reply to @pietroppeter "something from here? https://github.com/oz123/aweso": it's nice that they mention licenses
[12:48:32] <PMunch> Hmm, @Rika, it has less of an issue with lines, but it is very noisy..
[12:48:52] <FromDiscord> <Rika> Yeah that's the downside
[12:48:55] <FromDiscord> <Rika> Noisier
[12:49:24] <FromDiscord> <Rika> How many levels do you have for grays ale?
[12:49:34] <FromDiscord> <Rika> Greyscale
[12:50:16] <FromDiscord> <Rika> Add looks fine with 16 levels for example
[12:50:33] <FromDiscord> <Rika> 16 levels is also the usual amount of levels an e ink screen has
[12:51:30] <PMunch> Well I have 16 levels for the full mode
[12:51:38] <PMunch> But the fast mode is B/W
[12:51:42] <FromDiscord> <Rika> But you're doing B mode are you
[12:51:44] <FromDiscord> <Rika> I see
[12:51:51] <PMunch> And that's the one where I really need this
[12:52:11] <PMunch> The 16 colour mode is so slow to update I won't be doing any animations on it anyways
[12:52:12] <NimEventer> New thread by Kobi: How to enable incremental compilation?, see https://forum.nim-lang.org/t/8445
[12:52:13] <FromDiscord> <Rika> ~~I recommend using dithering on both modes anyway~~
[12:52:26] <PMunch> So I could just as well use something like Floyd Steinberg
[12:52:40] <PMunch> Oh for sure, I'll use it for both
[12:53:09] <PMunch> Man the xor version creates some really trippy results for some values :P
[12:57:59] <PMunch> https://pippin.gimp.org/a_dither/ <- In the first case statement, do ((x ^ y * 1) * 51& 511)/511.0. Then set pattern to 1 and levels to 1
[12:59:13] <FromDiscord> <impbox [ftsf]> beautiful https://media.discordapp.net/attachments/371759389889003532/889790354042273792/unknown.png
[13:00:55] <PMunch> I generate a bunch of them and flick through with feh, makes it kinda animated
[13:04:15] <FromDiscord> <Rika> In reply to @impbox "beautiful": Looks like an effect for a game
[13:04:44] <PMunch> 100/32 is pretty nice
[13:06:47] <PMunch> Lot of "artistic" ones, like 99/96
[13:34:07] *** Joins: pro (~pro@user/pro)
[13:46:43] <pro> there is no file descriptor limit in nim, right ?
[13:47:36] <FromDiscord> <dom96> your OS has one
[13:49:07] <pro> I removed the limit, but for example python is compiled with hard limit of 1024, so my python apps still can't have more than 1024 :(
[13:49:21] <FromDiscord> <cabboose> wot
[13:49:26] <FromDiscord> <cabboose> how do you remove a FD limit of your OS
[13:49:50] <pro> if you are on linux, open bash and type ulimit -a
[13:50:03] <pro> then raise the FD with ulimit -n 50000
[13:50:10] <pro> then verify with ulimit -a again
[13:50:34] <pro> then only in that terminal you will have (temporarily) raised the limit
[13:50:53] <FromDiscord> <cabboose> oh yeah
[13:50:55] <FromDiscord> <cabboose> i mean
[13:50:58] <FromDiscord> <cabboose> still limited
[13:51:04] <FromDiscord> <cabboose> its never unlimited
[13:51:42] <pro> you are limited by the number of free ports, so max 65k
[13:55:44] <FromDiscord> <linux user> unlimited
[14:14:00] <FromDiscord> <Yardanico> In reply to @richard stallmen(crazy GNU guy) "unlimited": this is not #memes btw
[14:14:27] <FromDiscord> <linux user> but i no post meme
[14:19:49] <FromDiscord> <impbox [ftsf]> I thought you only meme?
[14:36:15] <FromDiscord> <Yardanico> he does
[14:46:19] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 252 seconds)
[14:50:50] *** Joins: [R] (~rs@genoce.org)
[15:03:52] <nrds> <06Prestige99> Is there a way to use a case statement on a type of a field that's a sumtype? 
[15:06:27] <nrds> <06Prestige99> e.g. https://play.nim-lang.org/#ix=3zxi
[15:07:28] <FromDiscord> <Yardanico> no, you have to use when
[15:07:40] <FromDiscord> <Yardanico> so you have to write when/elif/else
[15:07:49] <nrds> <06Prestige99> Hm dang
[15:08:09] <nrds> <06Prestige99> Actually may be able to write a macro for this?
[15:16:15] <FromDiscord> <Rika> Maybe you can within a static block?
[15:16:36] <FromDiscord> <Yardanico> In reply to @Rika "Maybe you can within": no, when is different
[15:16:47] <FromDiscord> <Yardanico> if you do it in a static block then all code inside of it would be executed at compile time
[15:17:04] <FromDiscord> <Rika> Well I didn’t look at the code since my internet is bad
[15:17:10] <FromDiscord> <Yardanico> but you need the checks to be done at compile time and the code inside the branches at runtime
[15:17:12] <nrds> <06Prestige99> I think all I'd need is a way to disect the types of a sumtype
[15:17:13] <FromDiscord> <Rika> I was merely guessing what it would be
[15:17:22] <FromDiscord> <Yardanico> In reply to @Rika "Well I didn’t look": just view through the ix.io directly with ix.io/3zxi
[15:17:24] <FromDiscord> <Yardanico> it's plaintext
[15:30:21] <FromDiscord> <cabboose> holy shit I had no idea thats where that stuff was coming from
[15:30:39] <nrds> <06Prestige99> ?
[15:31:16] <FromDiscord> <cabboose> when people would link ix.io code
[15:31:40] <FromDiscord> <cabboose> I didn't know you can view playground code with that
[15:31:42] <FromDiscord> <cabboose> lit
[15:41:52] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2.1)
[16:28:15] *** kayabaNerve_ is now known as kayabanerve
[16:28:21] *** kayabanerve is now known as kayabaNerve
[16:34:35] *** Joins: pro (~pro@user/pro)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:45:49] *** Joins: rockcavera (~rc@192.12.113.204)
[16:45:49] *** Quits: rockcavera (~rc@192.12.113.204) (Changing host)
[16:45:49] *** Joins: rockcavera (~rc@user/rockcavera)
[17:44:52] *** Joins: arkurious (~arkurious@user/arkurious)
[17:57:25] <PMunch> How do I compile in a header only library in Nim?
[17:57:50] <PMunch> Without attaching a header pragma to a proc or an object
[18:10:19] <PMunch> Hmm, a `{.emit: staticRead("header_file.h").}` seems to have worked
[18:10:23] <FromDiscord> <haxscramper> Include it somewhere and it would compile all the functions in it.
[18:10:35] <PMunch> But now I ran into const char vs char..
[18:36:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[18:37:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:40:52] *** Joins: Onionhammer0 (~onionhamm@207-153-1-151.fttp.usinternet.com)
[18:41:43] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 252 seconds)
[18:42:49] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (Ping timeout: 252 seconds)
[18:42:49] *** Onionhammer0 is now known as Onionhammer
[18:43:29] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[18:45:49] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:57:16] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2.1)
[19:06:36] <FromDiscord> <iffy (Matt Haggard)> I'm going to give an Intro to Nim presentation at work and want to highlight some of the cool things people are doing with Nim. I'm planning to highlight nico and pixie (because they demo well). Any other favorites? Doesn't have to be graphics-related.
[19:07:40] <FromDiscord> <cabboose> status-desktop
[19:07:55] <FromDiscord> <cabboose> i mean they have actually deployed things
[19:08:07] <FromDiscord> <cabboose> if you're trying to sell nim to them
[19:17:38] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[19:18:40] *** Joins: xet7 (~xet7@user/xet7)
[19:19:09] <FromDiscord> <Papel> Does nim have an official or native GUI package? Something to make windowed applications
[19:32:46] <FromDiscord> <Gumber> In reply to @iffy (Matt Haggard) "I'm going to give": are you trying to get people to adopt Nim?
[19:32:56] <FromDiscord> <Gumber> like what is your goal for this demo?
[19:33:19] <FromDiscord> <Gumber> In reply to @Papel "Does nim have an": official? no... a lot of it depends on your use case / requirements as to which lib might be best suited for you
[19:33:39] <FromDiscord> <Gumber> does C have "an official" one?
[19:34:06] <FromDiscord> <Gumber> if you meant does the stdlib include some GUI rendering lib
[19:34:07] <FromDiscord> <Gumber> no
[19:34:15] <FromDiscord> <Gumber> (edit) "lib" => "module"
[19:34:33] <FromDiscord> <Papel> Got it, gonna take a look at the available ones
[19:34:39] <FromDiscord> <enthus1ast> @Smarc\: i have played with the library a little https://gist.github.com/enthus1ast/303ce18d918eeb31789cf075d16c1b94
[19:34:57] <FromDiscord> <enthus1ast> for your purpose it should be enough wrapping i guess
[19:34:58] <FromDiscord> <Gumber> In reply to @Papel "Got it, gonna take": if you tell me what you're trying to do, I can maybe recommend one
[19:35:11] <FromDiscord> <Gumber> but often times requirements for GUI libraries differ vastly based on use case
[19:35:37] <FromDiscord> <Gumber> like what are you building and what platforms are you targetting?
[19:35:46] <FromDiscord> <Papel> Crossplat simple text editor, akin to notepad
[19:35:53] <FromDiscord> <Gumber> okay thanks - that helps
[19:36:03] <FromDiscord> <Gumber> so @haxscramper is working on generating Qt bindings for Nim
[19:36:06] <FromDiscord> <Papel> Win/Linux/mac and maybe mobile
[19:36:08] <FromDiscord> <Gumber> but I don't know how far away that is
[19:36:18] <FromDiscord> <Gumber> and obviously it brings in a hard requirement on Qt which you may / may not like
[19:36:39] <FromDiscord> <Gumber> but I mean - you'd have Qt which is the crem de la crem of UI / app development frameworks in the native world
[19:36:44] <FromDiscord> <Papel> It's license, ok for open source, all weird for other things
[19:36:55] <FromDiscord> <Gumber> there's been a lot of work around enabling support for GTK with Nim
[19:37:03] <FromDiscord> <Gumber> so that's always an option too if you can deal with non native looking UIs
[19:37:34] <FromDiscord> <Gumber> there are quite a few options out there that leverage like GLFW or SDL2 if you don't care about your UI library being a bit overbearing and doing more than just UI stuff
[19:37:49] <FromDiscord> <Gumber> tmk most of them handle drawing the UI for you as well as eventing
[19:38:05] <FromDiscord> <Gumber> this is a deal breaker for me - and means really none of the xplat GUI libraries are options for me
[19:38:10] <FromDiscord> <Gumber> but for most applications this isn't a big deal
[19:38:12] <FromDiscord> <Papel> Going with SDL2 might be interesting, since it's gonna be useful for games and multimedia stuff
[19:38:32] <FromDiscord> <Gumber> there are some built on top of SDL2 and some on top of GLFW
[19:38:43] <FromDiscord> <Gumber> but yeah - if you need to be able to draw the GUI yourself or handl events yourself
[19:38:55] <FromDiscord> <iffy (Matt Haggard)> Gumber\: yes, I'm trying   to get people to try nim out and maybe adopt it for some things
[19:38:57] <FromDiscord> <Gumber> and you just want the GUI library to track these things and reporrt them to you
[19:39:10] <FromDiscord> <Gumber> then none of these libraries will be good choices
[19:39:32] <FromDiscord> <Gumber> your only real options are like DearIMGUI or Nuklear or one of the other simliar libraies out ther elike microgui or something
[19:39:37] <FromDiscord> <Gumber> (edit) "ther elike" => "there like"
[19:39:58] <FromDiscord> <Gumber> pretty much all the retained mode GUI libraries for Nim are quite opinionated / have hard dependencies and do more than just UI and layout
[19:40:28] <FromDiscord> <Gumber> I think the most promising one out there is - https://github.com/trustable-code/NiGui
[19:40:29] <nrds> <12R2D299> 4GitHub: 7"Cross-platform desktop GUI toolkit written in Nim"
[19:40:30] <FromDiscord> <HuskyHacks> In reply to @Papel "Does nim have an": I played around with wnim a little, it was coo! slight learning curve though
[19:40:32] <FromDiscord> <dom96> iffy: what's the audience like? what areas are they interested in?
[19:40:38] <FromDiscord> <Gumber> but it's  also the most ambitious and furthest from complete
[19:41:00] <FromDiscord> <HuskyHacks> (edit) "coo!" => "cool!"
[19:41:04] <FromDiscord> <Gumber> In reply to @iffy (Matt Haggard) "Gumber\: yes, I'm trying": okay then this strategy is not going to work TBH
[19:41:13] <FromDiscord> <Gumber> unless you really don't care if anyone actually checks it out or not
[19:41:37] <FromDiscord> <Gumber> and you just enjoy presenting about topics you're passionate about
[19:42:02] <FromDiscord> <Gumber> tech evangelism is hard, and almost always requires more than just showing a technology to someone
[19:42:23] <FromDiscord> <Gumber> it generally requires you to also convince them that whatever technology they're currently using is subpar or not as good as what you're presenting
[19:42:35] <FromDiscord> <Gumber> you have to give the audience a reason to want to go check it out
[19:42:38] <FromDiscord> <Gumber> beyond - hey it can do this cool thing
[19:42:55] <FromDiscord> <Gumber> because lots of technologies can do cool things - but people are only going to go look them up / research them if they have some motivation to
[19:43:08] <FromDiscord> <Gumber> beyond oh it's another technology I've never heard of before
[19:43:19] <FromDiscord> <Gumber> because for most people - there are lots of those floating in and out of their awareness on a daily basis
[19:43:31] <FromDiscord> <Gumber> Nim becomes just another name in a vast sea of buzz words
[19:44:09] <FromDiscord> <Gumber> if you show them that they're using Java for instance and they can write the same program in Nim and get it to execute N times faster with N less loc and cleaner abstractions or something
[19:44:20] <FromDiscord> <Gumber> now you might have some people interested
[19:44:55] <FromDiscord> <Gumber> but in my experience it's a very uphill battle - especially if you work in a enterprisey software shop that does agile / OOP / stuff like that where engineering decisions come second to business decisions
[19:45:05] <FromDiscord> <Gumber> and the tech is an afterthought compared to product
[19:45:28] <FromDiscord> <Gumber> they're concerned with making money and limiting tech sprawl and also having a huge pool of engineers at their disposal to hire from
[19:45:54] <FromDiscord> <Gumber> so you also need to think about that if you want to gain adoption at your workplace
[19:47:10] <FromDiscord> <Gumber> It's not an impossible task - like Nim's been approved at my company (although I haven't found a great use case yet - I'm sure one will arise eventually)
[19:47:47] <FromDiscord> <Gumber> but I work at an Elixir shop with a team of engineers and a CTO that are very tech savvy and don't mind taking risks on the engineering side to deliver the best tech possible
[19:48:42] <FromDiscord> <Gumber> not every company (and I'd posit most) don't have those same goals / aspirations and most of the time the tech is serving the business and CTOs / VPs / managers don't care that it can be made faster or better using some niche programming language it's going to be difficult to hire engineers for
[19:49:02] <FromDiscord> <Gumber> (edit) "not every company (and I'd posit most) don't have those same goals / aspirations and most of the time the tech is serving the business and CTOs / VPs / managers don't care that it can be made faster or better using some niche programming language ... it's" 03added "if"
[19:53:23] <FromDiscord> <dom96> Yeah, convincing people is tough
[19:53:42] <FromDiscord> <dom96> Honestly the best way is to probably try to get a CTO position at a company and just use Nim
[19:54:09] <FromDiscord> <dom96> (or a really senior position in a company with a CTO that is open to you doing things your way)
[19:58:37] <FromDiscord> <Gumber> Yeah I mean - how it happened for us is our former VP of engineering found Nim and wrote a torrent client lib in it
[19:58:48] <FromDiscord> <Gumber> Liked Nim so much they approved its use at work
[19:59:03] <FromDiscord> <Gumber> we didn't have our current CTO at the time, but I mean, same kind of thing @dom96 is talking about
[19:59:28] <FromDiscord> <Gumber> you also need a CTO that is tech savvy - a lot of CTOs are way more business minded / haven't really touched a programming language in decades
[20:00:14] <FromDiscord> <dom96> Huh, sounds like those CTOs wouldn't be great at their job
[20:00:25] <FromDiscord> <dom96> but what do I know, I guess business mind is good at those positions
[20:00:52] <FromDiscord> <IsaacPaul> I have free rein where I'm at :3 though I am the entire mobile department...
[20:01:57] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[20:02:16] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[20:02:49] <FromDiscord> <Gumber> That's the thing right
[20:02:54] <FromDiscord> <Gumber> when you become a CTO you're less involved in the technology
[20:02:54] <FromDiscord> <IsaacPaul> Though the only practical use from nim are scripts: https://gist.github.com/izackp/353e0f46964fef1fc75b5844b62594e5
[20:03:04] <FromDiscord> <IsaacPaul> (edit) "scripts:" => "scripts (in my field):"
[20:03:25] <FromDiscord> <Gumber> you're not doing any hands on work, most of the time, your position mandates that you serve the business really
[20:03:57] <FromDiscord> <Gumber> and your responsibilities shift from ensuring quality software is delivered on time to making sure you can deal with the management problems that engineering orgs often encounter
[20:04:09] <FromDiscord> <Gumber> you leave the former to the SMEs
[20:04:31] <FromDiscord> <Gumber> now there's exceptions to every rule - when I was at Ten Square Games, we had THE best CTO I've ever worked with (from an engineering point of view)
[20:04:59] <FromDiscord> <Gumber> he was just a genius when it came to unix based systems, backend development, infrastructure, CI/CD, networking, etc....
[20:05:20] <FromDiscord> <Gumber> like he literally wrote and scaled up the entire backend for TSG and it's not like it was substandard quality work - it was top notch - everything
[20:05:40] <FromDiscord> <Gumber> like best practices everywhere, software wasn't needlessly bloated and didn't try to pull in every dependency under the sun
[20:06:01] <FromDiscord> <Gumber> there were no huge frameworks like spring or anything like that - the best library was chosen for a particular job
[20:06:26] <FromDiscord> <Gumber> just stuff you tend not to see at big enterprisey software companies where frameworks and the lowest common denominator as far as engineering best practices go are the norm and good solid tech decisions are not
[20:07:19] <FromDiscord> <Gumber> our CTO at my current company is good too - he's not nearly as good on the tech side of things as the CTO of TSG was but he's still way more tech savvy / minded than any other CTO I've worked with in the past
[20:07:36] <FromDiscord> <Gumber> the majority of the CTO's I've worked with hadn't written a line of code in over a decade
[20:08:16] <FromDiscord> <Gumber> and I've been at a lot of companies throughout my 15 year programming career - my mom was also the CEO of a fortune five hundred software company, so I have some insight from that as well
[20:08:40] <FromDiscord> <Gumber> In reply to @IsaacPaul "I have free rein": being on an island is a blessing and a curse 😄
[20:09:46] <FromDiscord> <Gumber> (edit) "company," => "company that was bought out by EMC,"
[20:09:47] <FromDiscord> <IsaacPaul> I definitely agree. I feel I could be more productive and have cleaner code with pair programming / PR reviews.
[20:10:05] <FromDiscord> <Gumber> ooph you don't even have others reviewing your PRs?
[20:10:09] <FromDiscord> <Gumber> that's yikes territory
[20:10:18] <FromDiscord> <Gumber> not because I question your programming abilities
[20:10:24] <FromDiscord> <Gumber> but because I assume you're a human and not a robot
[20:10:33] <FromDiscord> <IsaacPaul> exactly lol
[20:12:07] <FromDiscord> <Gumber> I'm on an island but at least it's not deserted and there's one other engineer on there with me
[20:12:43] <FromDiscord> <Gumber> And we also bring in developers from other teams to code review work even if they don't work on the same product we do
[20:13:01] <FromDiscord> <Gumber> It's hard when it comes to mobile though because like I be terrible at reviewing Swift PRs because I haven't written a line of Swift in my life
[20:13:05] <FromDiscord> <iffy (Matt Haggard)> @dom96 security researchers, general-purpose programmers (managing servers), gamers. I'm not really trying to get people to start using it at work (though if they do, fine). I mostly just want them to check it out, maybe for their own stuff.
[20:13:13] <FromDiscord> <Gumber> And I imagine our mobile developers would be bad at reviewing elixir PRs so
[20:13:33] <FromDiscord> <Gumber> In reply to @iffy (Matt Haggard) "@dom96 security researchers, general-purpose": If that's your goal then I think your original presentation idea is fine
[20:14:01] <FromDiscord> <Gumber> Most of the time when people talk about showing Nim to people at work, they have this unspoken expectation that they'll be able to start using it at work
[20:14:37] <FromDiscord> <Gumber> And that just by seeing Nim in action everyone will be convinced that it is the greatest thing since sliced bread and will become the de facto programming language at work
[20:14:46] <FromDiscord> <Gumber> I mean I had that very naive expectation at one point in my career
[20:15:11] <FromDiscord> <Gumber> So I apologize for making assumptions about your situation but I elaborated for the greater benefit of the community and I wasn't trying to personalize it regarding your situation
[20:15:33] <FromDiscord> <cabboose> you're doing it wrong iffy
[20:15:35] <FromDiscord> <Gumber> This could actually be a good blog topic for anyone that blogs lol
[20:15:41] <FromDiscord> <cabboose> you show them `echo "hello world"`
[20:15:43] <FromDiscord> <cabboose> duh
[20:15:49] <FromDiscord> <Gumber> Like how to effectively evangelize a technology at your workplace
[20:15:57] <FromDiscord> <Gumber> Although I'm sure there's a myriad of blog articles out there already
[20:16:13] <FromDiscord> <IsaacPaul> hallo world↵😂
[20:16:37] <FromDiscord> <cabboose> show them hello world before you show them goodbye world which wipes the servers clean
[20:16:46] <FromDiscord> <Gumber> Another big challenge I had was just dealing with the fact that in today's world not that many people right native code anymore it's the exception rather than the rule
[20:17:27] <FromDiscord> <Gumber> So while some people might understand the benefits of a language that compiles to C clearly expressing those benefits to someone who was only ever worked in Java or C sharp or some other language with a managed runtime is challenging
[20:17:40] <FromDiscord> <cabboose> probably the shit learning curves and pitfalls when people just want to script phub sites↵(@Gumber aka Zachary Carter)
[20:17:45] <FromDiscord> <Gumber> Even explaining the benefits of something like static typing to a modern web developer can be a difficult prospect
[20:17:55] <FromDiscord> <Gumber> And I'm talking about modern web developers that use typescript
[20:18:17] <FromDiscord> <Gumber> They just don't have the knowledge of computer science fundamentals to realize that the reason type script is so great is because of the type safety half of the time they don't even understand what type safety is they just use TypeScript because they see it being used by everyone else
[20:18:49] <FromDiscord> <haxscramper> I stiff fail to understand how can people thing without types
[20:18:59] <FromDiscord> <haxscramper> (edit) "thing" => "think"
[20:19:40] <FromDiscord> <cabboose> Because numbers are words are the same thing; if i write them down you know what I mean
[20:19:43] <FromDiscord> <cabboose> why cant a program do the same thing
[20:19:43] <FromDiscord> <Gumber> I think it depends on the paradigm
[20:19:44] <FromDiscord> <cabboose> duh
[20:19:50] <FromDiscord> <cabboose> if I say divide i obviously mean its a number
[20:19:57] <FromDiscord> <cabboose> unless I want you to split the string
[20:19:58] <FromDiscord> <Gumber> It's not so bad in lisp or scheme or Erlang etccc
[20:20:00] <FromDiscord> <cabboose> in which case do that
[20:20:04] <FromDiscord> <cabboose> also why didnt you do what I thought you would
[20:20:22] <FromDiscord> <Gumber> Python or JS though are nightmares
[20:21:20] <FromDiscord> <haxscramper> In reply to @Gumber "so <@!608382355454951435> is working": Also I don't think it is correct to describe what I'm doing like this, qt bindings are not the end goal, they are just intermediate step for testing
[20:21:27] <FromDiscord> <Gumber> Ah okay
[20:21:32] <FromDiscord> <Gumber> My mistake
[20:21:49] <FromDiscord> <haxscramper> I'm okay, but someone might get their hopes up and wait for me to deliver this
[20:21:58] <FromDiscord> <haxscramper> I like qt as well, so eventually I will come to this,
[20:22:03] <FromDiscord> <Gumber> 🙂
[20:22:07] <FromDiscord> <haxscramper> But right now I'm too busty already
[20:22:12] <FromDiscord> <Gumber> yeah I feel you on that one
[20:22:25] <FromDiscord> <cabboose> Yeah that's me↵(@haxscramper)
[20:22:29] <FromDiscord> <cabboose> give me fucking qt
[20:22:29] <FromDiscord> <cabboose> bastard
[20:22:52] <FromDiscord> <cabboose> or just a less toothpick nimqml
[20:22:55] <FromDiscord> <haxscramper> Well, maybe I will
[20:23:04] <FromDiscord> <cabboose> 1 extra iota of meat on the body
[20:23:06] <FromDiscord> <haxscramper> I remembered your earlier offer with ninph
[20:23:10] <FromDiscord> <haxscramper> Nimph
[20:23:10] <FromDiscord> <cabboose> 1 atom
[20:23:19] <FromDiscord> <iffy (Matt Haggard)> cabboose\: that would be an awesome demo. See how fast Nim can delete this server? JavaScript would have taken much longer. Probably.
[20:23:22] <FromDiscord> <haxscramper> So maybe I could come up with 2 for 1 deal for you
[20:23:37] <FromDiscord> <cabboose> Precisely
[20:23:47] <FromDiscord> <cabboose> Aiya
[20:23:55] <FromDiscord> <cabboose> I can't sell you my soul
[20:24:01] <FromDiscord> <cabboose> I don't have one
[20:24:39] <FromDiscord> <cabboose> I am kidding though you do you baby
[20:24:53] <FromDiscord> <haxscramper> In reply to @cabboose "or just a less": Is nimqml that bad?
[20:24:55] <FromDiscord> <cabboose> I have so much uni to study in the next week and a half
[20:24:57] <FromDiscord> <cabboose> exams coming up
[20:24:59] <FromDiscord> <cabboose> yeah
[20:25:04] <FromDiscord> <cabboose> it has nothing
[20:25:23] <FromDiscord> <cabboose> status actually brought the thread safe signalling
[20:25:49] <FromDiscord> <cabboose> like status do more work on nimqml and dotherside than filcuc unfortunately
[20:25:56] <FromDiscord> <cabboose> which isn't anything wrong since filcuc is probably doing other things
[20:26:29] <FromDiscord> <haxscramper> Etf is filcuc
[20:26:47] <FromDiscord> <cabboose> he's the author of nimqml
[20:26:47] <FromDiscord> <cabboose> and dotherside
[20:26:58] <FromDiscord> <cabboose> which is just the qtqml bindings
[20:26:59] <FromDiscord> <cabboose> that are used by other languages
[20:27:07] <FromDiscord> <cabboose> \~it is a dll that exposes the magic\~
[20:28:18] <FromDiscord> <haxscramper> Well, I'm certainly going to be throwing a lot of shit in the qt bindings for things I find convenient
[20:28:30] <FromDiscord> <haxscramper> Maybe even make it work for the C backend
[20:29:45] <FromDiscord> <cabboose> image.png https://media.discordapp.net/attachments/371759389889003532/889903739211763722/image.png
[20:30:25] <FromDiscord> <Goel> Where can i read more about multiple returns for a proc? (a link)
[20:31:11] <FromDiscord> <cabboose> Like in a tuple?
[20:32:06] <FromDiscord> <Goel> `proc loadImage(imageDir: string): seq[byte], array[3, int] =`↵its possible to do something like this? If so how do i select the `return=` of the second return and not the first return?
[20:32:35] <FromDiscord> <haxscramper> But before all of that happens I need to (1) write the damn thing, (2) find someone and make them used it while it is not finished, because up until now this has been a ping-pong game where I tried to figure out correct APIs and workflows
[20:32:38] <FromDiscord> <Rika> return a tuple
[20:32:54] <FromDiscord> <Rika> `proc loadImage(imageDir: string): (a: seq[byte], b: array[3, int])`
[20:33:13] <FromDiscord> <cabboose> what part of qt are you binding though
[20:33:16] <FromDiscord> <Rika> `return (theseq, thearray)`
[20:33:17] <FromDiscord> <haxscramper> Discussion with arkanoid when they were trying to make c2nim just not die was really useful for that
[20:33:25] <FromDiscord> <haxscramper> Qt widgets ofc
[20:33:37] <FromDiscord> <haxscramper> Well, it does not matter really
[20:33:58] <FromDiscord> <haxscramper> With proper binding generator handling thousands of files is just as simple as 1
[20:34:23] <FromDiscord> <cabboose> you realise status would probably froth that
[20:34:29] <FromDiscord> <cabboose> hahaha
[20:35:33] <FromDiscord> <cabboose> Im already using nimqml so you've already got a user here
[20:35:41] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 252 seconds)
[20:35:44] <FromDiscord> <cabboose> well I'm redoing everything
[20:36:26] <FromDiscord> <cabboose> Don't know how you can do such magic though
[20:45:53] <FromDiscord> <Gumber> @haxscramper not sure if you saw my messages from last night / this morning but that whole cpp vector of pointers to opaque types thing actually did turn out to be a cpp codegen bug
[20:47:18] <FromDiscord> <Gumber> the type unification pass doesn't respect the aliases as one might hope for, and you end up with only the first alias to the generic type being generated and which one gets generated depends on which one is referenced first in the code
[20:47:42] <FromDiscord> <Gumber> we tried out a change in `compiler/sighashes.nim` last night but it didn't fix it in devel or 1.4.8
[20:47:53] <FromDiscord> <Gumber> (edit) "we tried out a ... change" 03added "singe loc"
[20:48:22] <FromDiscord> <Gumber> (edit) "we tried out a singe loc change in `compiler/sighashes.nim` ... last" 03added "on line 128 (I think) by adding `tyPointer` to the `case` discriminant"
[20:49:10] <FromDiscord> <Gumber> so I dunno - I was able to get around the compilation error by using `{.emit.}` to manually generate the aliases but this introduce a host of new problems - like now I have to wrap all of the `std::vector` interface I plan on using for each alias of it
[20:49:23] <FromDiscord> <Gumber> (edit) "so I dunno - I was able to get around the compilation error by using `{.emit.}` to manually generate the aliases but this introduce a host of new problems - like now I have to wrap all of the `std::vector` interface I plan on using for each alias of it ... " 03added "which is a PITA without the help of a macro"
[20:53:17] <FromDiscord> <Gumber> and then even when I do that I get conversion issues when I try to assign from the aliased opaque pointer type back to the opaque pointer type so like `ImageVector` which is an alias to `std::vector<VkImage>` needs:
[20:53:27] <FromDiscord> <Gumber> sent a code paste, see https://play.nim-lang.org/#ix=3zzj
[20:53:49] <FromDiscord> <Gumber> and `sw.images[i] = cast[Image](images[i])` for an asssignment to come even close to working
[20:54:54] <FromDiscord> <Gumber> so yeah - huge pain in the ass
[20:54:54] <FromDiscord> <Gumber> sent a code paste, see https://play.nim-lang.org/#ix=3zzk
[20:55:18] <FromDiscord> <Gumber> definitely going to have to cook up some macros for this because it's a pretty pervasive pattern in the Vulkan API
[20:55:29] <FromDiscord> <Gumber> and libraries that depend on it
[20:57:28] <FromDiscord> <haxscramper> Cpp codegen but of this type does really sound nasty, but to be honest I'm not surprised
[21:02:25] <FromDiscord> <Gumber> yeah me either
[21:02:30] <FromDiscord> <Gumber> it's probably a tricky problem to solve
[21:02:49] <FromDiscord> <Gumber> but I don't pretend to be a compiler dev or language designer
[21:03:15] <FromDiscord> <Gumber> my compiler dev skills are running `koch temp` and using `find in files`
[21:03:37] <FromDiscord> <Gumber> I can go about one level deep in the compiler call stack before I become completely useless
[21:03:42] <FromDiscord> <Gumber> backend I mean
[21:04:14] <FromDiscord> <Gumber> I at one point was spending some time trying to learn some of it along with the VM - but I decided it wasn't what I wanted to be doing, and my efforts were better spent working on R&D for my game
[21:06:46] *** Joins: yewscion (~yewscion@2604:ca00:149:479::60:4768)
[21:09:40] <FromDiscord> <haxscramper> Cpp backed is least tested and has more demands as it faces c++ world
[21:09:49] <FromDiscord> <Gumber> yeah! it's good stuff
[21:10:06] <FromDiscord> <Gumber> has been the read headed stepchild of the Nim backends for a while - I feel like even the JS backend has gotten more love
[21:10:14] <FromDiscord> <Gumber> okay - maybe it's the objective-c backend but
[21:10:34] <FromDiscord> <Gumber> at least that's workable and you don't need much more than what it already has most of the time
[21:10:59] <FromDiscord> <Gumber> (edit) "read" => "red"
[21:18:58] <FromDiscord> <haxscramper> we had PHP backend
[21:23:08] <FromDiscord> <tandy> in nim??
[21:23:33] * arfy can't sleep
[21:23:39] <FromDiscord> <tandy> oh sweet what game?↵(@Gumber aka Zachary Carter)
[21:23:50] <arfy> it's 00:54 here
[21:24:15] <FromDiscord> <cabboose> so how do you get to PNode
[21:24:47] <FromDiscord> <cabboose> I want to use these juicy isTyRef compiler procs etc
[21:25:07] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3zzr
[21:25:40] <FromDiscord> <tandy> are there any other datatypes for this? a seq maybe?
[21:26:16] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[21:26:35] <FromDiscord> <cabboose> there was some gypsy way to get to the memory when that error would happen
[21:26:39] <FromDiscord> <cabboose> i think it was a closure?
[21:26:56] <FromDiscord> <haxscramper> yes
[21:27:11] <FromDiscord> <tandy> bruh
[21:27:55] <FromDiscord> <tandy> when did it get dropped?
[21:28:37] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/commit/35b0cc67e89a929270e77c07ecbf06f7cced3668
[21:30:45] <FromDiscord> <tandy> wow
[21:33:14] <FromDiscord> <tandy> https://github.com/nim-lang/Nim/issues/17187
[21:35:29] <FromDiscord> <haxscramper> There are some weird 'cannot be captured' issues
[21:35:37] <FromDiscord> <haxscramper> Sometimes it errors out on `var ref T`
[21:35:56] <FromDiscord> <haxscramper> Also it can't correctly capture `var T` even if it is passed from enclosing arguments
[21:35:56] <FromDiscord> <tandy> https://github.com/nim-lang/Nim/issues/7831
[21:36:00] <FromDiscord> <tandy> this is my issue
[21:36:02] <FromDiscord> <tandy> it says use seq instead ol
[21:45:44] <FromDiscord> <tandy> is there a seq like thing with keys and values in nim?
[21:45:48] <FromDiscord> <tandy> that isnt varargs lol
[21:49:01] <FromDiscord> <haxscramper> you can do `openarray[(KeyType, ValueType)]` and call it with `{<key>: <value>}`
[21:49:09] <FromDiscord> <haxscramper> Otherwise you can do `Tables`
[21:50:38] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[21:51:41] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 246 seconds)
[21:54:11] <FromDiscord> <tandy> openarray has the same compiler error sadly
[21:56:38] <FromDiscord> <haxscramper> Then you can do `openarray[(KeyType, ValueType)]` and call it with `@{<key>: <value>}`
[21:56:51] <FromDiscord> <haxscramper> `@{}` is a seq constructor
[21:57:03] <FromDiscord> <Rika> You mean seq right
[21:57:06] <FromDiscord> <haxscramper> You might also write `@^` operator for `ref seq T`
[21:57:28] <FromDiscord> <haxscramper> I would assume `ref` anything won't trigger memory safety checking
[21:57:33] <FromDiscord> <haxscramper> because it is guaranteeed to outlive
[21:57:49] <FromDiscord> <haxscramper> IIRC closure capture increases lifetime
[21:57:50] <FromDiscord> <tandy> ohh nice
[21:57:55] <FromDiscord> <tandy> then i dont have to find and replace
[21:58:53] <FromDiscord> <haxscramper> what do you mean?
[21:59:31] <FromDiscord> <tandy> are u sure
[21:59:37] <FromDiscord> <tandy> i tried it it doesnt work
[22:01:03] <FromDiscord> <haxscramper> !eval echo typeof @{1\: 3}
[22:01:06] <NimBot> Compile failed: /usercode/in.nim(1, 16) Error: undeclared identifier: '\:'
[22:01:19] <FromDiscord> <haxscramper> https://wandbox.org/permlink/sOO8ZnGYnM9D2DVK
[22:05:40] <FromDiscord> <tandy> hm true it works
[22:05:42] <FromDiscord> <tandy> tyty
[22:27:26] <Pyautogui> Does anyone have any resources for building quick parsers in Nim?
[22:27:39] <Pyautogui> If so, could you please share them?
[22:30:03] <FromDiscord> <auxym> Depends on your needs. There's npeg, last I checked you can't use it to extract a full AST.
[22:31:30] <FromDiscord> <Archion> Hiiiiii
[22:31:33] <Pyautogui> As a learning experience, I am trying to build an interpreter for a simple language consisting of just variable assignment, some arithmetic and looping. 
[22:31:38] <FromDiscord> <auxym> If you want to write a hand-roll a recursive descent parser, the book "crafting interpreters" is available online for free and is a good introduction. The example code is java (in part 1, part 2 is pratt parsing in C iirc), but pretty easy to transpose to nim
[22:31:43] <FromDiscord> <Archion> I have a question about php
[22:32:08] <FromDiscord> <auxym> In reply to @Pyautogui "As a learning experience,": Then I definitely recommend Crafting Interpreters
[22:32:10] <FromDiscord> <Archion> I need a php compiler app or website to use php?
[22:32:14] <Pyautogui> Thanks
[22:32:37] <FromDiscord> <haxscramper> https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6
[22:32:58] <FromDiscord> <haxscramper> there are several languages written in nim, and three reimplmenetations of "crafting interpreters"
[22:32:59] <Pyautogui> Thanks 
[22:33:02] <FromDiscord> <haxscramper> or two
[22:33:13] <Pyautogui> I will go check them out.
[22:34:18] <FromDiscord> <Gumber> In reply to @tandy "oh sweet what game?": I'm making a 3d networked real time strategy game in Nim
[22:34:38] <FromDiscord> <Gumber> for Windows
[22:34:52] <FromDiscord> <Gumber> I don't think I'm going to support any other platforms besides Windows - cross platform determinism is a bitch
[22:35:00] <FromDiscord> <Gumber> maybe I can look into what the guy for Northgard did
[22:35:16] <FromDiscord> <Gumber> I should just PM the devs on discord and ask
[22:42:20] <FromDiscord> <Gumber> done and done - well I didn't PM them I just pinged them since I don't know them
[22:43:29] <FromDiscord> <Ricky Spanish> if i compile a c library from nim, do i always need the nim runtime linked to execute the code library i compiled with nim?
[22:44:40] <FromDiscord> <Ricky Spanish> i.e if i use no-gc for example etc, can i remove the runtime part and have it behave as though it is a regular static library compiled from c
[22:48:31] <FromDiscord> <Gumber> if you don't use anything in the stdlib
[22:48:35] <FromDiscord> <Gumber> I imagine so
[22:48:40] <FromDiscord> <Gumber> but don't quote me on it
[22:48:52] <FromDiscord> <Gumber> better to ask in #internals
[22:49:44] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 265 seconds)
[22:56:27] <FromDiscord> <Ricky Spanish> ok thanks @Gumber aka Zachary Carter
[23:07:19] *** Joins: neurocyte013 (~neurocyte@212.232.95.106)
[23:07:19] *** Quits: neurocyte013 (~neurocyte@212.232.95.106) (Changing host)
[23:07:19] *** Joins: neurocyte013 (~neurocyte@user/neurocyte)
[23:11:48] *** Quits: neurocyte013 (~neurocyte@user/neurocyte) (Client Quit)
[23:13:09] *** Joins: neurocyte013 (~neurocyte@212.232.95.106)
[23:13:09] *** Quits: neurocyte013 (~neurocyte@212.232.95.106) (Changing host)
[23:13:09] *** Joins: neurocyte013 (~neurocyte@user/neurocyte)
[23:20:09] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[23:22:53] <FromDiscord> <haxscramper> btw, speaking of Qt etc
[23:22:53] <FromDiscord> <haxscramper> https://doc.qt.io/qtcreator/creator-project-nimble.html
[23:23:16] <FromDiscord> <haxscramper> qt creator is shipped with nim/nimble support for the last several years if I recall correctly
[23:26:58] <FromDiscord> <Gumber> In reply to @Ricky Spanish "ok thanks <@!204328759715692544>": Np
[23:30:12] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[23:30:46] <FromDiscord> <Recruit_main707> In reply to @haxscramper "qt creator is shipped": yep, syntax highlight too, but thats it afaik
[23:30:48] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[23:35:12] *** Quits: yewscion (~yewscion@2604:ca00:149:479::60:4768) (Remote host closed the connection)
[23:39:52] <nrds> <06Prestige99> Is there a way to get the type implementation of a generic with a pragma? e.g. `proc foo[T: SomeType](t: T) = ...` I want to get the type impl of SomeType
[23:42:23] <FromDiscord> <auxym> In reply to @haxscramper "qt creator is shipped": Wait what? We can use Qt from Nim?
[23:43:37] <FromDiscord> <Recruit_main707> Qt creator, the ide
[23:44:39] <FromDiscord> <auxym> so... no creating qt GUIs in nim. Not familiar with QT Creator. Does it have anything to do with the library / UI toolkit or not at all?
[23:51:34] <FromDiscord> <Yardanico> In reply to @Recruit_main707 "yep, syntax highlight too,": It supports nimsuggest too
[23:52:03] <FromDiscord> <Yardanico> In reply to @auxym "so... no creating qt": You can use nimqml to create GUI apps with Nim and QML, but no, Qt Creator doesn't allow you to use Qt directly
[23:52:26] <FromDiscord> <Yardanico> Not with Nim, for Nim it's just an IDE
[23:02:14] <FromDiscord> <tandy> coool↵(@Gumber aka Zachary Carter)
[23:30:32] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 252 seconds)
[23:32:41] <FromDiscord> <tandy> is it possible to print the output of an async proc? im trying to debug the results of a http request
[23:36:01] <FromDiscord> <tandy> nvm i figured it
[23:36:08] <FromDiscord> <tandy> somehow it just started working
[23:37:24] <FromDiscord> <Yardanico> echo waitFor asyncProcCall()
[23:37:58] <FromDiscord> <tandy> mm, i think using asyncCheck instead of await helped
