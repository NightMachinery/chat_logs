[01:01:45] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[01:05:46] *** Quits: fendor_ (~fendor@178.115.49.60.wireless.dyn.drei.com) (Remote host closed the connection)
[02:26:02] <shapr> whoa, I just tried the fold and unfold with retrie plugin, and that is COOL
[08:03:37] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[09:39:58] *** Joins: fendor (~fendor@91.141.32.154.wireless.dyn.drei.com)
[10:14:03] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:8daf:444e:9c84:5148)
[10:27:42] *** Joins: arrowd (~arr@2.93.55.66)
[10:28:02] *** Joins: ikex1 (ash@user/ikex)
[10:39:03] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Read error: Connection reset by peer)
[10:39:50] *** Quits: ikex (~ash@user/ikex) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Franciman (~Franciman@mx1.fracta.dev) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e) (Ping timeout: 260 seconds)
[10:39:50] *** ikex1 is now known as ikex
[10:40:21] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[10:41:11] *** Joins: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e)
[10:44:31] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[12:08:46] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 260 seconds)
[14:04:30] *** Joins: libertyprime (~libertypr@118.149.81.11)
[15:09:40] *** Quits: libertyprime (~libertypr@118.149.81.11) (Read error: Connection reset by peer)
[16:18:15] *** Joins: libertyprime (~libertypr@118.149.81.11)
[17:36:58] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:8daf:444e:9c84:5148) (Quit: WeeChat 2.8)
[17:56:49] *** Joins: coot (~coot@37.30.49.107.nat.umts.dynamic.t-mobile.pl)
[18:30:19] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:e2c3:1bcc:edee:e9f1)
[18:55:33] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:e2c3:1bcc:edee:e9f1) (Quit: WeeChat 2.8)
[19:30:06] *** Quits: hjulle[m] (~hjullemat@2001:470:69fc:105::1dd) (Quit: You have been kicked for being idle)
[19:52:37] <shapr>  also, the call hierarchy plugin is REALLY AWESOME
[19:52:58] <shapr> so many cool features is HLS, I'm excited to shom them off in my talk
[19:56:05] <jneira[m]> nice, do you have a link for the talk?
[19:57:07] <shapr> first an internal talk at SimSpace this Friday at 4pm
[19:57:20] <shapr> then probably an internal talk at Recurse Center
[19:57:34] <shapr> and assuming Reed leaves me time after his refinery talk, also Boston Haskell on October 27th
[19:57:36] * shapr finds link
[19:57:47] <shapr> https://www.meetup.com/Boston-Haskell/events/281285037/
[19:58:27] <shapr> My approach is 1. demo every feature on  https://haskell-language-server.readthedocs.io/en/latest/features.html
[19:58:43] <shapr> and then 2. do the basic wingman things
[19:58:50] <shapr> and 3. do the scary custom tactics for wingman
[20:04:03] *** Quits: coot (~coot@37.30.49.107.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[20:08:20] <jneira[m]> sounds great
[20:08:46] <jneira[m]> not sure if the feature list is complete though
[20:13:54] <shapr> jneira[m]: if you know of others, please tell me!
[20:13:59] <shapr> I can add them to my talk and the docs
[20:14:27] <shapr> the two other devs on my team at work were at best mildly interested in hls
[20:14:40] <shapr> but I showed one of them the call hierarchy plugin and now they want to try hls!
[20:16:12] <jneira[m]> nice, I missed it since the hie days, but the lsp spec added it not so log ago
[20:16:25] <jneira[m]> s/log/long/
[20:17:14] <jneira[m]> I use it continuously in eclipse in my daily job
[20:22:24] <shapr> I also use lsp-find-defintion often
[20:22:51] <shapr> in emacs, lsp-treemacs-errors-list and lsp-treemacs-symbols are useful
[21:06:46] *** Quits: libertyprime (~libertypr@118.149.81.11) (Ping timeout: 252 seconds)
[21:36:50] *** Joins: coot (~coot@37.30.49.107.nat.umts.dynamic.t-mobile.pl)
[21:42:02] <shapr> jneira[m]: any idea how I'd look for features that aren't listed in the docs?
[21:42:38] <shapr> hm, I could look at the list of plugins and enumerate their, uh, commands?
[21:43:18] <shapr> I've been using weeder at work, I kinda want to try writing a plugin that reports weeds.
[22:17:21] <jneira[m]> <shapr> "jneira: any idea how I'd look..." <- hmm it suggests import missing definitions and export unused ones, suggests add missing language extensions
[22:17:43] <shapr> oh, I'll add those to my list
[22:18:26] <shapr> is that part of the warning and error diagnostics from GHC?
[22:21:34] <jneira[m]> it is from ghcide but they are code actions (wich may be quick fixes asociated with a diagnostics)
[22:21:39] <jneira[m]> the list is here
[22:21:41] <jneira[m]> https://github.com/haskell/haskell-language-server/blob/13a2cc20e6b38c36e689efa6b3a1017bb0ed74e4/ghcide/src/Development/IDE/Plugin/CodeAction.hs#L102-L135
[22:22:00] <jneira[m]> i think names are quite descriptive
[22:23:01] <jneira[m]> jneira[m]: but the usual way to use it is via quick fix (at least for me)
[22:59:34] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:5edd:2a99:160f:84d2)
[23:35:09] *** Quits: juhp (~juhp@128.106.188.220) (Ping timeout: 258 seconds)
[23:38:52] *** Joins: juhp (~juhp@128.106.188.220)
[23:41:01] *** Quits: fendor (~fendor@91.141.32.154.wireless.dyn.drei.com) (Remote host closed the connection)
[23:57:49] *** Quits: arrowd (~arr@2.93.55.66) ()
[23:57:54] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[23:58:21] *** Joins: hololeap (~hololeap@user/hololeap)
