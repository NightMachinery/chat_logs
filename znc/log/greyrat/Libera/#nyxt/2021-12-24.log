[00:36:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[00:48:15] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[01:35:47] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:36:11] *** Joins: ano (~ano@user/ano)
[01:44:12] <opalvaults[m]> before i go searching and hacking away, does anyone have a piece of code at hand that automatically enters vi-insert-mode upon arrival to a text field but reverts back to normal mode when outside of it?
[02:03:05] <lagash> opalvaults[m]: like, input-edit mode? no
[02:04:15] <lagash> I find it odd that my bookmarks don't appear in searches, just URL history..
[02:05:27] <waleee> lagash: as in the prompt-buffer when you execute set-url?
[02:06:17] <waleee> you might have to manually switch the source, in vi-mode this is done with J/K
[02:07:02] <waleee> (in the prompt)
[02:07:53] *** Joins: ardon (~user@user/ardon)
[02:14:03] <ardon> Hi Nyxt, sorry to nudge you guys again. I'm attempting to add auto-mode rules programmatically via `add-modes-to-auto-mode-rules', but when trying to pass a keyword argument to one of the modes, the resulting auto-mode-rules files ends up with a nested list instead of the equivalent keyword specifiers. To clarify, if I try to call (nyxt/auto-mode:add-modes-to-auto-mode-rules <SOURCES> :include (list (my-mode :my-mode-init-arg
[02:14:04] <ardon> <some-value>))) I would expect an entry to be created with ((<SOURCES> :included ((my-mode :my-init-arg <some-value>)))), but instead I get the following ((<SOURCES> :included ((my-mode (my-init-arg <some-value>))))), which makes the mode not be initialized appropriately.
[02:25:07] <lagash> waleee: huh, didn't know select-next-source was a thing.. how might I have bookmarks be listed before history, though?
[02:41:52] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::1061) (Remote host closed the connection)
[03:17:39] *** Joins: Jing (~hedgehog@2604:a840:3::1061)
[04:05:27] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[05:16:25] <opalvaults[m]> i am also interested in lagash 's question
[05:18:43] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[05:24:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[05:24:16] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[05:45:48] <opalvaults[m]> Upon digging, I've found a Select-Next-Source function for prompt-buffer but not anything related to the sources themselves
[05:47:13] <opalvaults[m]> You could hack together a hook after prompt-buffer that automatically selects next source, and do that for as many times as needed to get to bookmarks (I count two  times to get to 'bookmarks' proper)
[07:00:07] <opalvaults[m]> lagash: all that searching and hacking and the answer was staring me in the face
[07:00:21] <opalvaults[m]> if you want to search from bookmarks the keybinding (in vi) is 'm o'
[07:00:35] <opalvaults[m]> or C-x r j
[07:01:00] <opalvaults[m]> big derp energy
[07:03:34] <opalvaults[m]> as to how to make it the default source when setting URL ('o' in vim), i'm not sure you can as far as I can tell without creating a weird hook that uses nyxt/prompt-buffer-mode:select-next-source which is bound to 'J/K'.
[07:07:41] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 268 seconds)
[07:14:32] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[08:44:57] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:55:32] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[10:12:48] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[10:39:18] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[10:52:15] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[11:37:27] *** Joins: shka (~herr@109.231.0.226)
[16:29:34] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:36:29] <waleee> God Jul / Merry Christmas (even if you anglosaxon heathens celebrate a day late) / Happy holidays!
[17:00:27] <edgarvincent[m]> Merry Christmas!
[17:03:03] <waleee> ah, and Joyeux Noël
[17:04:06] *** Joins: tekakutli (~user@201.141.29.30)
[17:35:15] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[18:57:03] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[19:01:20] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:08:28] <edgarvincent[m]> Joyeux Noël :)
[20:10:24] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[20:19:38] <opalvaults[m]> merry xmas :)
[21:04:50] <lagash> Feliĉan Kristnaskan vespermanĝon! Merry Christmas EVE!
[21:06:09] <lagash> And yes, I'm an Anglosaxan heathen, apparently :P
[21:07:52] <waleee> Romanian?
[21:08:32] <waleee> ah, esperanto
[21:09:16] <lagash> Yeah, totally not like I'm in ##esperanto or anything ;P
[21:26:37] *** Quits: ardon (~user@user/ardon) (Remote host closed the connection)
[21:38:18] <lagash> Question: how do I use Serapeum's -> macro with define-parenscript?
[21:49:46] <aartaka> lagash: Simply use it on the name of the function that you define with define-parenscript. Note, however, that it won't speed up anything, and you'd need to guess the right lispy type. It doesn't make much sense, in other words.
[21:51:27] *** Quits: tekakutli (~user@201.141.29.30) (Remote host closed the connection)
[21:52:26] <lagash> aartaka: so it doesn't type check anything, just, like, annotate?
[21:52:54] <waleee> lagash: it's because of the parenscript I think
[21:54:19] <lagash> I suppose that's why I couldn't find any usage of it in the codebase..
[21:54:33] <aartaka> lagash: it will type-check, yes. But, given the unpredictability of JavaScript, it's really risky to typecheck things it returns.
[21:54:57] <opalvaults[m]> merry lispmas
[21:55:58] * aartaka realises that there were three forms of type+check in the latest set of messages and he was the one saying the two incorrect forms.
[21:56:10] <opalvaults[m]> aartaka: I was meaning to catch you yesterday. I'm not sure I understand how to create a hook after I press set-url (o in vim). If I just want to select-next-source after the set-url-after-hook, what is the syntax for that?
[21:56:52] <opalvaults[m]> Do I need to (define-configuration set-url (set-url-after-hook #'select-next-source)?
[21:57:22] <opalvaults[m]> or do I simply need a (hooks:add-hook set-url-after-hook #'select-next-source)?
[21:58:32] <opalvaults[m]> I'm botching the syntax and I can't seem to get a handle on what exactly I'm supposed to be executing. Basically I'm just to emulate pressing 'J' after executing set-url so that I'm at a different source instead of history
[22:01:09] <lagash> opalvaults[m]: it might be helpful to pastebin in what errors you're getting..
[22:01:23] <aartaka> opalvaults[m]: You're close with the idea of hooks:add-hook. One thing is missing, though: hooks accept handlers which are named abd typed wrappers for functions. What you need is (hooks:add-hook set-url-... (make-handler-void #'(lambda () (select-next...))))
[22:02:13] <aartaka> opalvaults[m]: Although I'm not near my machine and cannot tell you the exact syntax of it.
[22:10:36] <opalvaults[m]> lagash: good point. I'll try and see if I run into any i can't figure out. It seems as though aartaka was able to point me in the right direction.
[22:11:32] <opalvaults[m]> also aartaka demeter is awesome thanks to whomever created it. it's slowly being integrated with my elfeed feed
[22:12:40] <lagash> aartaka: I tried (hooks:add-hook set-url-after-hook (hooks:make-handler-void #'prompter:select-next-source)) to no luck, perhaps the lambda syntax then?
[22:12:48] <aartaka> opanvaults[m]: That's a pleasure to hear, even though I've not been involved with Demeter development :D
[22:13:41] <lagash> Nope, lambda syntax doesn't work because the handler needs a name..
[22:15:48] <opalvaults[m]> would it not be something like NYXT/PROMPT-BUFFER-MODE:SELECT-NEXT-SOURCE?
[22:16:09] *** Joins: aartaka` (~user@5.1.53.225)
[22:16:22] <opalvaults[m]> That's what I assumed anyways.
[22:16:32] <lagash> (hooks:add-hook set-url-after-hook (hooks:make-handler-void #'(lambda() (prompter:select-next-source)) :name :next-source-hack)) almost works, except I need a reference to the prompt buffer..
[22:17:20] <aartaka> lagash: You needn't, it's set to current prompt by default if you use what opalvaults[m] suggested.
[22:18:21] <aartaka> lagash: or use (current-prompt-buffer).
[22:18:38] *** Parts: aartaka` (~user@5.1.53.225) ()
[22:18:50] <lagash> aartaka: at any rate, it fails, even if the warning doesn't matter
[22:18:58] <lagash> Perhaps something with prompt-buffer-make-hook??
[22:19:04] <opalvaults[m]> In the repl I'm unable to even get a prompt buffer to arise
[22:19:32] <opalvaults[m]> prompt-buffer-make-hook was something I was playing with last night but it appears not to be executed where we assume it does
[22:19:54] <opalvaults[m]> Hook run after the `prompt-buffer'
[22:19:54] <opalvaults[m]> class is instantiated and before initializing the prompt-buffer modes.
[22:19:54] <opalvaults[m]> The handlers take the prompt-buffer as argument.
[22:20:42] <opalvaults[m]> From the documentation it seems to be executed before all of the other modes in the prompt buffer
[22:21:52] <opalvaults[m]> lagash: what syntax are you using to get the prompt buffer to pop up?
[22:22:36] <opalvaults[m]> I haven't quite grokked how to use this repl to execute behavior of certain elements of the browser
[22:23:30] <lagash> opalvaults[m]: what do you mean, get the buffer to pop up? I just use the key binding..
[22:23:40] <lagash> I'm using Emacs' Sly as a REPL here
[22:24:02] <opalvaults[m]> oh wait, how do I do that? lol
[22:24:08] <opalvaults[m]> Are you suing EXWM?
[22:24:08] <lagash> Are you an Emacs user?
[22:24:10] <opalvaults[m]> using*
[22:24:24] <lagash> No, I have no interest in EXWM, I'm a Wayland user :P
[22:24:41] <opalvaults[m]> Yeah, you're able to evaluate code in Emacs that causes the browser to execute functions?
[22:25:51] <lagash> More like, I start Slynk in Nyxt and connect to it using Sly..
[22:26:12] <opalvaults[m]> ahh! that's something I need to do
[22:26:20] <lagash> Yes indeed
[22:26:49] <opalvaults[m]> How does one connect sly/slynk to nyxt?
[22:26:59] <opalvaults[m]> I was thinking that repl-mode was nearly the same concepty.
[22:27:05] <opalvaults[m]> s/concepty/concept
[22:28:45] <lagash> repl-mode is within Nyxt, you don't get the benefit of using Emacs as your text editor, etc
[22:28:48] <opalvaults[m]> ohh I see, looks like sly-connect will connect to a running slynk server
[22:30:59] <opalvaults[m]> swank?
[22:31:09] <lagash> opalvaults[m]: I use this in my init.lisp: https://bpa.st/Z5GA
[22:31:37] <lagash> swank I recall was for SLIME, not Sly..
[22:33:57] <opalvaults[m]> oh weird
[22:34:15] <lagash> slightly different protocols, etc
[22:34:23] <opalvaults[m]> okay so it gave me this strange dashboard page when I started slynk
[22:34:24] <opalvaults[m]> this is cool
[22:34:39] <lagash> I naturally assume you're using QuickLisp, at least, outside of Nyxt..?
[22:34:54] <opalvaults[m]> uhh, I believe I've installed it already let me check sbcl
[22:35:13] <opalvaults[m]> the curses of a new GUIX install
[22:35:17] <lagash> Nyxt used to be compiled by default with QuickLisp, so chances are you might have it..
[22:36:27] <opalvaults[m]> Thanks for the help btw :) you had the same idea I had earlier with having bookmarks show up before history in set-url so i figured id try and help figure something out
[22:37:03] <opalvaults[m]> i'm newer to CL so still learning the ropes
[22:37:37] <lagash> I'm sure there's an easier way than hooks..
[22:38:39] <aartaka> lagash: There is — copy set-url definition and swap the order of sources :)
[22:39:04] <lagash> *that's also less ugly :P
[22:39:14] <opalvaults[m]> I was looking for that function aartaka! Where in the source code is it?
[22:39:46] <opalvaults[m]> I drowned in parenthesis trying to find out whether it was in bookmarks.lisp, prompt-buffer.lisp, etc.
[22:40:06] <opalvaults[m]> time 4 grep
[22:40:42] <lagash> opalvaults[m]: what do you use to navigate codebases? besides grep
[22:41:09] <opalvaults[m]> I should be using projectile lagash , but I haven't had a use for it until probably now lmao
[22:41:23] <opalvaults[m]> okay looks like set-url is defined in source/buffer.lisp
[22:42:44] <lagash> opalvaults[m]: https://github.com/atlas-engineer/nyxt/blob/master/source/buffer.lisp#L1444
[22:43:11] <opalvaults[m]> I spotted it just as you linked it :)
[22:43:11] <lagash> opalvaults[m]: you should look into git-link, it's a nice Emacs package I've contributed to :)
[22:43:16] <opalvaults[m]> Thanks!
[22:43:20] <opalvaults[m]> oo, i will do that
[22:43:55] <opalvaults[m]> does it have similar functionality to forge?
[22:44:05] <opalvaults[m]> I'll add it to my init.el, looks very handy thanks!
[22:46:49] <lagash> I haven't used forge yet, I don't think
[22:47:35] <opalvaults[m]> hmmm
[22:48:13] <opalvaults[m]> swapping the sources didn't appear to do anything when the commands were input into init.lisp
[22:49:25] <lagash> perhaps it needs to be after a (in-package :nyxt) ??
[22:49:32] <opalvaults[m]> but then again I'm not sure how I'd switch the sources otherwise. is there a good document explaining how to redefine functions so that they use the new procedures instead of the old one?
[22:50:08] <lagash> I'd suggest first getting that REPL up and running :P
[22:50:20] <opalvaults[m]> another good point
[22:51:06] <opalvaults[m]> but for some reason although I have ql installed when I input that snippet you gave me into init.lisp it can't load ql
[22:52:52] <opalvaults[m]> http://paste.debian.net/plain/1224672
[22:57:14] <lagash> You use SBCL right? Is it loaded in your .sbclrc file?
[22:57:50] <opalvaults[m]> yeah
[22:57:55] <opalvaults[m]> here ill paste it
[22:58:32] <lagash> Is QuickLisp loaded in your .sbclrc?
[22:58:47] <opalvaults[m]> http://paste.debian.net/plain/1224673
[22:59:07] <opalvaults[m]> like so?
[22:59:28] <lagash> Looks about right, provided ~/quicklisp exists
[22:59:49] <opalvaults[m]> opal@borges ~/quicklisp$ ls
[22:59:49] <opalvaults[m]> asdf.lisp         dists/           quicklisp/  tmp/
[22:59:49] <opalvaults[m]> client-info.sexp  local-projects/  setup.lisp
[23:01:06] <opalvaults[m]> https://github.com/opalvault/dotfiles/blob/master/Nyxt.org
[23:01:19] <opalvaults[m]> here's my init file for nyxt if that helps. maybe I'm inputting smoething wrong.
[23:02:09] <lagash> Hmm, run Nyxt and use their internal repl-mode, and try something Quicklisp related
[23:02:31] <opalvaults[m]> ok! one moment
[23:04:48] <opalvaults[m]> if I load quicklisp directly it evaluates to T, and then if I try and (ql:quickload 'slynk) it says
[23:04:48] <opalvaults[m]> WARN - Warning: Error on separate thread: Package QL does not exist. Stream #
[23:05:46] <lagash> Weird. I've gotta head out though
[23:05:57] <opalvaults[m]> alright, take care and thanks for the help lagash!
[23:09:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:10:10] *** Parts: lisp123 (~lisp123@5.30.23.247) (Leaving...)
[23:18:58] <opalvaults[m]> aartaka: Do I need to explicitly (load "~/quicklisp/setup.lisp") and then quickload packages? It looks like by default Nyxt doesn't use whatever .sbclrc has in its init file
[23:25:26] <aartaka> opalvaults[m]: Yes, we do so to ensure that quicklisp-loaded libraries don't interfere with the ones we depend on. There are two ways around it: either copy quicklisp setup from your .sbclrc or, if you Nyxt is recent enough, put (reset-asdf-registries) in your initfile and it will reset things to Quicklisp-friendly state.
[23:26:12] <opalvaults[m]> aartaka: i was just about to say that someone in #commonlisp guided me to that first option. I will do that until Guix packages the newest Nyxt
[23:26:19] <opalvaults[m]> thank you for your response :)
[23:29:23] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[23:35:29] <opalvaults[m]> hmm
[23:37:53] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[23:45:01] <opalvaults[m]> https://github.com/atlas-engineer/nyxt/blob/master/documents/README.org -- Still not having luck loading quicklisp
[23:45:28] <opalvaults[m]> I've tried using the documentation in there. Maybe I'm loading quicklisp incorrectly?
[23:45:49] <waleee> are you using guix? Then some gymnastics are needed to use quicklisp
[23:46:00] <opalvaults[m]> I am waleee
[23:46:25] <opalvaults[m]> I'm no building it from source though, only using the packaged version fwiw
[23:46:30] <opalvaults[m]> s/no/not
[23:47:07] <waleee> yes, but the regular etc (ql:quickload ... ) will not work since the paths are different
[23:48:03] <waleee> hm
[23:48:11] <opalvaults[m]> do I need to explicitely run (load "~/quicklisp/setup")?
[23:48:20] <waleee> opalvaults[m]: or did you install quicklisp from the guix repos?
[23:48:38] <opalvaults[m]> no, I installed it from quicklisp.lisp
[23:49:41] <opalvaults[m]> (load "~/Download/quicklisp.lisp"), and then I added it to my .sbclrc through the prompt therein. It appears that the only way I'm able to get Nyxt to use Quicklisp is by running (load "~/quicklisp/setup.lisp")
[23:51:43] <opalvaults[m]> but adding that to my nyxt configuration doesn't work
[23:51:56] <opalvaults[m]> only if I do it through the nyxt REPL
[23:52:32] <opalvaults[m]> for instal I get a QL package does not exist when running (ql:quickload 'slynk) after putting (load "~/quicklisp/setup.lisp") in init.lisp
[23:52:40] <opalvaults[m]> s/instal/instance
[23:53:00] <waleee> opalvaults[m]: the quicklisp installer didn't put something along (let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp" ...) in your .sbclrc?
[23:53:16] <opalvaults[m]> let me check
[23:53:37] <opalvaults[m]> ;;; The following lines added by ql:add-to-init-file:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/f15ca03415ab18aba57b97c51265bb9fa33cb376)
[23:53:50] <opalvaults[m]> that is the contents of .sbclrc
[23:54:03] <waleee> do you have a ~/quicklisp directory?
[23:54:46] <opalvaults[m]>  ls -la quicklisp/... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a2d508d3ebc946dd0e34aedb3b208dfac046ca9a)
[23:55:16] <waleee> oh. opalvaults[m] you haven't tried any other quicklisp package?
[23:55:27] *** Joins: lagash (lagash@lagash.shelltalk.net)
[23:55:31] <waleee> sly/slynk needs a component installed by emacs
[23:55:31] <opalvaults[m]> hm, can't say that I have.
[23:56:10] <waleee> (by doing M-x package-install sly)
[23:56:13] <opalvaults[m]> well slynk is installed just fine, it's quicklisp that Nyxt won't load
[23:56:20] <opalvaults[m]> I have sly installed
[23:56:27] <waleee> via emacs?
[23:56:34] <opalvaults[m]> in emacs, correct
[23:56:51] <opalvaults[m]> I have sly-connect and all that jazz that work perfectly
[23:57:17] <opalvaults[m]> let me push my nyxt config and maybe that will paint a better picture
[23:57:19] <waleee> opalvaults[m]: start nyxt with nyxt -vvv (max log level) in a terminal and check if you have a warning
[23:57:42] <opalvaults[m]> okay! one moment
[23:59:13] <opalvaults[m]> http://paste.debian.net/plain/1224679
