[00:02:42] <lru> what is the difference between a member function with and without a & ref-qualifier?
[00:03:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[00:03:44] <lru> { A a; a.a(); } struct A { int a() {} int a() & {} }
[00:03:45] <geordi> error: 'int A::a() &' cannot be overloaded with 'int A::a()'
[00:04:09] *** Quits: Cyp (~cyp@213.237.88.120) (Excess Flood)
[00:04:14] <lru> I assumed they were the same, so I expected that error, but then I tired:
[00:04:17] <lru> { A a; a.a(); } struct A { int a() {} int a() && {} }
[00:04:17] <geordi> error: 'int A::a() &&' cannot be overloaded with 'int A::a()'
[00:04:23] <lru> but this works:
[00:04:27] <lru> { A a; a.a(); } struct A { int a() & {} int a() && {} }
[00:04:27] <geordi> error: expected ';' after struct definition (fix known)
[00:04:34] *** Joins: Cyp (~cyp@213.237.88.120)
[00:04:37] <lru> { A a; a.a(); } struct A { int a() & {} int a() && {} };
[00:04:38] <geordi> warning: no return statement in function returning non-void
[00:04:48] <lru> you know what I mean :-)
[00:05:00] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[00:05:06] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[00:06:19] *** Joins: xkuru (~xkuru@user/xkuru)
[00:07:16] *** Joins: rvalue (~rvalue@user/rvalue)
[00:07:47] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[00:10:37] <ville> you can't have overload without ref-qualifier and then say &&
[00:11:07] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[00:11:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:11:40] *** Joins: stonkey (~stonkey@user/stonkey)
[00:11:45] <ville> the non-ref-qualifier version does both cases: & and &&
[00:15:15] <lru> that was the piece I was missing... without the qualifier, it's both
[00:15:20] <lru> thanks
[00:15:54] <lru> I wonder why that didn't occur to me before :-(
[00:20:56] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.4)
[00:23:53] *** Joins: lispy (~lispy4@84.69.59.93)
[00:23:57] *** Joins: john99 (~john99@138.246.103.34.bc.googleusercontent.com)
[00:25:29] *** Quits: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:27:06] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[00:27:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 250 seconds)
[00:29:17] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[00:29:23] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:31:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[00:32:05] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Read error: Connection reset by peer)
[00:32:56] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[00:34:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:35:15] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) ()
[00:39:37] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[00:39:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:46:57] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:49:23] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[00:53:23] *** Joins: proller (~p@2a02:6b8:b081:1213::1:16)
[00:58:33] *** gentooclimax is now known as climax
[01:00:49] *** Quits: Leo_V (~Leo@157.52.18.77) ()
[01:03:13] *** climax is now known as gentooclimax
[01:03:32] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:25:3430:6d5f:c01) (Ping timeout: 240 seconds)
[01:05:01] *** Quits: navyern (~navyern@157.122.175.254) (Quit: 离开)
[01:12:37] *** Quits: kit-ten (~u0_a391@2603-6010-a103-1f2e-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:16:16] *** Joins: kit-ten (~u0_a391@2603-6010-a103-1f2e-f44f-d859-cfd9-2a3c.res6.spectrum.com)
[01:19:20] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:20:08] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[01:20:26] *** Joins: useretail (~useretail@185.132.19.151)
[01:23:45] *** Joins: Crowley99 (~Crowley99@208.59.191.14)
[01:26:49] *** Quits: magla (~gelignite@55d42e32.access.ecotel.net) (Quit: Stay safe!)
[01:31:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:31:37] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 240 seconds)
[01:33:11] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[01:33:23] *** Joins: walterwhip (~www@user/walterwhip)
[01:33:41] *** Joins: CodeAgain (~codeagain@services.bruno.today)
[01:36:36] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:38:31] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:40:25] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[01:40:40] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[01:40:53] *** Quits: CodeAgain (~codeagain@services.bruno.today) (Changing host)
[01:40:53] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[01:41:26] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:33] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:33] *** ChanServ sets mode: +v npaperbot
[01:45:06] <welder> Is there a map emplace that will overwrite old data if key exists?
[01:45:16] <welder> because emplace does nothing if the key exists
[01:45:38] <welder> and i'd like to avoid operator []
[01:46:02] <welder> (because my type may be not copy/default constructible)
[01:46:14] <welder> i mean copy/move only, default no
[01:46:30] <PJBoy> insert_or_assign
[01:47:48] <welder> indeed, thanks
[01:48:15] *** gentooclimax is now known as climax
[01:51:08] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac)
[01:54:02] *** Quits: md618 (~md618@90.192.137.155) (Ping timeout: 240 seconds)
[01:54:53] *** Joins: md618 (~md618@90.192.135.131)
[01:57:08] *** climax is now known as gentooclimax
[02:04:18] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790:2c60:a960:306:b346)
[02:04:33] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[02:08:20] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[02:12:46] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:12:49] *** Joins: NotApplicable (~NotApplic@2603-6010-a103-1f2e-4e6d-cc75-dd88-8b0f.res6.spectrum.com)
[02:13:26] *** NotApplicable is now known as Kit
[02:13:42] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:13:43] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[02:15:18] *** Joins: walterwhip (~www@user/walterwhip)
[02:19:04] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[02:22:14] *** Joins: tdbo (~tdbo@188.147.33.71.nat.umts.dynamic.t-mobile.pl)
[02:22:19] <tdbo> hi
[02:22:37] <tdbo> what's the right channel? ##C++ or #C++ ?
[02:22:54] <Kit> this one i think
[02:23:12] <Kit> yeah
[02:23:27] <Kit> >* Topic for ##C++ is: <alkino> untakenstupidnic: change the topic to tell to move to #C++
[02:25:02] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[02:25:26] *** Joins: kevr (~kevr@user/kevr)
[02:27:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[02:33:30] *** Quits: pizdets (~pizdets@183.182.111.1) (Ping timeout: 250 seconds)
[02:33:51] *** Joins: pizdets_ (~pizdets@183.182.110.153)
[02:34:52] *** Quits: clime (~clime@78-80-113-95.customers.tmcz.cz) (Quit: WeeChat 3.3)
[02:44:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[02:47:12] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[02:47:14] *** gentooclimax is now known as climax
[02:49:10] <tdbo> How can I prevent a "<unresolved overloaded function type>" error using std::bind?
[02:49:18] <tdbo> I have no class, but namespace.
[02:49:57] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[02:49:59] <tdbo> going to sleep, nvm
[02:50:11] *** Quits: tdbo (~tdbo@188.147.33.71.nat.umts.dynamic.t-mobile.pl) (Quit: Client closed)
[02:50:21] *** climax is now known as gentooclimax
[02:55:45] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:55:53] *** Joins: sargon (~sargon@188.250.185.117)
[02:56:43] *** Quits: sargon (~sargon@188.250.185.117) (Remote host closed the connection)
[02:57:42] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:00:39] *** Quits: md618 (~md618@90.192.135.131) (Ping timeout: 256 seconds)
[03:06:36] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:07:47] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790:2c60:a960:306:b346) (Quit: Never gonna give you up, never gonna let you down...)
[03:08:57] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[03:13:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:14:32] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:19:38] *** Joins: seninha (~seninha@user/seninha)
[03:22:45] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:23:26] *** Quits: john99 (~john99@138.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[03:23:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[03:25:13] *** Joins: The_Seeker (~user@2405:6e00:317b:4e00:562:9963:e4d9:bcc)
[03:30:09] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:33] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:32:09] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Read error: Connection reset by peer)
[03:33:27] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:34:32] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:34:37] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:34:38] *** Quits: bobb_ (~bobb_@dslb-088-066-131-043.088.066.pools.vodafone-ip.de) (Quit: Client closed)
[03:35:17] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[03:37:10] *** Joins: AmR (~AmREiSa@156.199.9.4)
[03:37:42] *** Quits: The_Seeker (~user@2405:6e00:317b:4e00:562:9963:e4d9:bcc) (Quit: The_Seeker)
[03:42:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:43:40] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 250 seconds)
[03:45:01] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:45:28] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[03:45:38] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Client Quit)
[03:46:36] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:47:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[03:47:18] *** gentooclimax is now known as climax
[03:51:15] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:52:46] *** climax is now known as gentooclimax
[03:54:10] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:56:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[03:57:48] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[03:59:04] *** Joins: ethrl (~ethereal@user/doforlove33)
[04:01:17] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[04:02:53] *** Joins: xiongxin (~Thunderbi@2409:8954:38c4:44c4:53d0:6eda:c8cd:506c)
[04:04:11] *** Joins: The_Seeker (~user@2405:6e00:317b:4e00:1407:21e8:cd29:fedb)
[04:04:14] *** Quits: ethrl (~ethereal@user/doforlove33) (Quit: WeeChat 2.8)
[04:05:42] *** Joins: chozorho (~chozorho@2601:146:300:c30::708b)
[04:06:30] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 276 seconds)
[04:06:40] *** Joins: quartz (~quartz@user/quartz)
[04:07:30] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 268 seconds)
[04:07:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:10:51] *** Joins: Soni (~quassel@autistic.space)
[04:13:11] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[04:20:27] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:20:53] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:24:00] *** Joins: walterwhip (~www@user/walterwhip)
[04:24:59] *** Joins: frost (~frost@user/frost)
[04:25:34] *** Quits: furrymcgee (~devuan@cgn-89-1-211-103.nc.de) (Quit: leaving)
[04:26:05] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:26:35] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:28:01] *** Joins: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c)
[04:28:33] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[04:33:57] *** Quits: rgrinberg (~textual@2806:101e:7:2b:c529:c1df:ee97:1d4c) (Ping timeout: 240 seconds)
[04:36:28] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:38:17] *** Quits: xiongxin (~Thunderbi@2409:8954:38c4:44c4:53d0:6eda:c8cd:506c) (Ping timeout: 240 seconds)
[04:38:33] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[04:41:19] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[04:43:28] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 250 seconds)
[04:44:53] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[04:45:29] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:54:17] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[04:54:49] *** Joins: xiongxin (~Thunderbi@120.197.198.189)
[04:55:29] *** Quits: kst`` (~user@cpe-70-95-182-43.san.res.rr.com) (Remote host closed the connection)
[04:55:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:55:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:57:15] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:57:40] *** Parts: The_Seeker (~user@2405:6e00:317b:4e00:1407:21e8:cd29:fedb) ()
[04:57:58] *** Joins: vicfred (~vicfred@user/vicfred)
[05:00:25] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[05:02:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b988:430e:a589:fdf3) (Ping timeout: 240 seconds)
[05:03:40] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:04:11] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 256 seconds)
[05:04:55] *** Joins: xiongxin1 (~Thunderbi@120.197.198.177)
[05:06:15] *** Quits: xiongxin (~Thunderbi@120.197.198.189) (Ping timeout: 256 seconds)
[05:06:15] *** xiongxin1 is now known as xiongxin
[05:08:28] *** Joins: Yuzu02 (~Yuzu02@152.166.145.68)
[05:09:34] *** Quits: xiongxin (~Thunderbi@120.197.198.177) (Client Quit)
[05:15:19] *** Joins: Telvana (~capo@user/telvana)
[05:18:55] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:19:36] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[05:20:20] *** Joins: malloy (~jimery@116.30.223.163)
[05:20:44] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[05:20:52] *** Joins: Guest38 (~Guest38@202.81.231.204)
[05:21:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[05:23:21] *** Quits: jsbach (~jsbach@2a01:c23:6565:4d00:570e:ac61:35a8:83b7) (Ping timeout: 268 seconds)
[05:23:42] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[05:25:47] *** Quits: Yuzu02 (~Yuzu02@152.166.145.68) (Quit: Client closed)
[05:28:46] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[05:29:42] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:30:23] *** Quits: joomla5 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:30:49] *** Joins: rvalue (~rvalue@user/rvalue)
[05:32:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:35:14] *** Joins: kevr` (~kevr@user/kevr)
[05:35:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[05:37:30] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[05:40:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:41:26] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:36] *** ChanServ sets mode: +v npaperbot
[05:48:12] *** Joins: Atque (~Atque@user/atque)
[05:48:50] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[05:48:59] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:49:16] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[05:51:50] *** Joins: walterwhip (~www@user/walterwhip)
[05:52:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:53:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:55:16] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:58:08] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[06:03:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:04:03] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[06:04:56] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac) (Quit: Leaving)
[06:05:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[06:06:54] *** Joins: skapata (~Skapata@user/skapata)
[06:07:26] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[06:07:52] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:18] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:11:46] *** Joins: vicfred_ (~vicfred@user/vicfred)
[06:14:02] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 250 seconds)
[06:15:40] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[06:16:51] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:17:11] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[06:18:18] *** kevr` is now known as kevr
[06:31:26] *** Joins: Yuzu02 (~Yuzu02@152.166.145.68)
[06:33:13] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[06:35:40] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[06:39:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:42:17] *** Joins: ferdna (~ferdna@user/ferdna)
[06:54:46] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 250 seconds)
[06:56:38] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[07:01:19] *** Quits: Guest38 (~Guest38@202.81.231.204) (Quit: Connection closed)
[07:02:15] *** Joins: Guest38 (~Guest38@202.81.231.204)
[07:18:19] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:21:10] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:22:37] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:23:49] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:24:09] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:25:10] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:25:24] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[07:26:35] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:31:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:32:44] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:33:17] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[07:33:45] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:34:51] *** Quits: Yuzu02 (~Yuzu02@152.166.145.68) (Quit: Client closed)
[07:34:55] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:35:35] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:38:08] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:42:05] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:44:12] *** vinleod is now known as vdamewood
[07:44:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[07:45:06] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:45:23] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[07:45:32] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[07:45:52] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:46:40] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:47:59] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:55:53] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:56:08] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:59:42] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[07:59:45] *** Joins: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d)
[08:00:54] *** Joins: doric (~doric@24.210.188.186)
[08:02:45] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[08:05:33] *** Joins: indigaz (~Indigaz@c-73-168-117-231.hsd1.in.comcast.net)
[08:06:23] *** Quits: bpalmer (~user@user/bpalmer) (Remote host closed the connection)
[08:12:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[08:17:35] *** Quits: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d) (Quit: Leaving)
[08:17:48] *** Joins: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d)
[08:21:14] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[08:34:54] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:55:34] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:56:16] *** Quits: indigaz (~Indigaz@c-73-168-117-231.hsd1.in.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[08:58:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:05:47] *** Joins: indigaz (~Indigaz@user/indigaz)
[09:05:47] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:06:45] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:08:25] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 256 seconds)
[09:10:20] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[09:15:35] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 256 seconds)
[09:16:40] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[09:18:28] *** Joins: Telvana2 (~capo@user/telvana)
[09:18:51] *** Quits: Telvana (~capo@user/telvana) (Read error: Connection reset by peer)
[09:27:18] *** Quits: indigaz (~Indigaz@user/indigaz) (Quit: The Lounge - https://thelounge.chat)
[09:28:02] *** Quits: emerent (~quassel@p200300cd57044307ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:28:51] *** Joins: emerent (~quassel@p200300cd57044325ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:31:34] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:35] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:35] *** ChanServ sets mode: +v npaperbot
[09:44:20] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:48:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:52:48] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[09:54:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[09:57:12] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[10:00:24] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:04:08] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:07:16] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[10:08:26] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[10:09:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[10:09:54] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:21:10] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[10:26:22] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:26:37] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Read error: Connection reset by peer)
[10:31:04] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[10:34:34] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[10:35:25] *** Telvana2 is now known as Telvana
[10:36:30] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:44:54] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:47:58] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:50:05] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Remote host closed the connection)
[10:53:30] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:54:46] *** Joins: caramel (~caramel@user/caramel)
[10:54:59] *** Joins: jsbach (~jsbach@2a01:c22:a90b:a500:ea94:d29d:c08b:3a52)
[10:57:12] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[10:58:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[10:59:35] *** Joins: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr)
[10:59:52] *** Quits: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d) (Quit: Leaving)
[11:04:31] *** Joins: evelyette (~Eleanor@178.79.105.181)
[11:08:25] *** Joins: Uswald (~Uswald@2a04:cec0:118a:9088:0:63:1126:be01)
[11:08:37] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[11:10:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:16:05] *** Quits: Uswald (~Uswald@2a04:cec0:118a:9088:0:63:1126:be01) (Ping timeout: 268 seconds)
[11:16:57] *** Joins: Uswald (~Uswald@2a04:cec0:1198:f1ca:0:63:1174:e001)
[11:25:09] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:27:17] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[11:31:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[11:32:17] *** Quits: Uswald (~Uswald@2a04:cec0:1198:f1ca:0:63:1174:e001) (Ping timeout: 240 seconds)
[11:32:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:32:53] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:35:33] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 256 seconds)
[11:37:29] *** Joins: fengdaolong (~fengdaolo@58.48.87.13)
[11:39:02] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:39:14] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:40:12] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:40:12] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Client Quit)
[11:41:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:42:41] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[11:46:35] *** Quits: talisein (~talisein@user/talisein) (Ping timeout: 250 seconds)
[11:55:11] *** Joins: walterwhip (~www@user/walterwhip)
[11:57:04] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Remote host closed the connection)
[11:57:56] *** Joins: martiert_work (~martiert@173.38.220.45)
[12:00:27] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[12:00:39] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[12:03:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[12:06:37] *** Joins: Angs (~Angs@2.71.161.239.mobile.tre.se)
[12:07:18] *** Quits: Crowley99 (~Crowley99@208.59.191.14) (Quit: Connection closed)
[12:07:51] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:08:31] *** Joins: rendar (~rendar@user/rendar)
[12:13:58] *** Quits: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr) (Remote host closed the connection)
[12:13:58] *** Quits: Guest38 (~Guest38@202.81.231.204) (Remote host closed the connection)
[12:15:04] *** Joins: JohnMS_AWAY (~kvirc@user-5-173-136-38.play-internet.pl)
[12:16:31] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[12:16:55] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[12:17:05] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:17:05] *** Quits: JohnMS_AWAY (~kvirc@user-5-173-136-38.play-internet.pl) (Read error: Connection reset by peer)
[12:17:57] *** Joins: JohnMS_AWAY (~kvirc@185.73.229.242)
[12:19:37] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Ping timeout: 240 seconds)
[12:20:07] *** Quits: chozorho (~chozorho@2601:146:300:c30::708b) (Quit: WeeChat 3.0)
[12:21:45] <tesuji> geordi, { istream&(*fp)(istream&) = [](istream&is)->istream&{return is;}; }
[12:21:46] <geordi>  
[12:21:54] <tesuji> geordi, { istream&(*fp)(istream&) = [=](istream&is)->istream&{return is;}; }
[12:21:54] <geordi> error: cannot convert 'main(int, char**)::<lambda(istream&)>' to 'istream& (*)(istream&)' {aka 'istream& (*)(istream&)'} in initialization
[12:22:17] <tesuji> can someone explain to me, why the capture in the lambda makes a difference here?
[12:23:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:23:09] <kalven> because only non-capturing lambas convert to function pointers
[12:23:17] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[12:26:16] <ville> tesuji: lambdas are syntactic sugar for a class with an operator (). capturing lambdas also store data members for the things they captured. you can't sneak those through a pointer-to-function
[12:26:55] <tesuji> Thanks both of you
[12:28:06] <ville> tesuji: non-capturing lambdas also contain a conversion function to a pointer-to-function. it's unspecified how this is implemented. but one possibility is that if used the compiler synthesizes something like: void f() { auto l = lambda{}; l(); } and passes the pointer-to-f when the conversion is done
[12:28:45] <ville> of course it doesn't have to make the lambda object there, it can just copypasta the contents of the operator () from the lambda type and so on
[12:31:19] *** Quits: proller (~p@2a02:6b8:b081:1213::1:16) (Ping timeout: 268 seconds)
[12:33:16] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[12:37:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:55] *** Joins: Uswald (~leandre@37.35.6.200)
[12:52:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[12:55:25] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[12:57:32] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[13:03:24] *** zz is now known as anyone
[13:07:52] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 250 seconds)
[13:07:55] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 256 seconds)
[13:08:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:08:36] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:11:20] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[13:11:50] *** Quits: JohnMS_AWAY (~kvirc@185.73.229.242) (Read error: Connection reset by peer)
[13:12:58] *** Joins: furrymcgee (~devuan@cgn-89-1-211-103.nc.de)
[13:13:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:30] *** Joins: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d)
[13:16:20] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:18:17] *** Joins: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr)
[13:19:28] *** Joins: md618 (~md618@dyn3152-74.wlan.ic.ac.uk)
[13:21:43] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 256 seconds)
[13:26:34] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl)
[13:27:47] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:30:15] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:30:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:33:37] *** Quits: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d) (Ping timeout: 240 seconds)
[13:34:06] *** Joins: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d)
[13:34:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[13:34:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:36:48] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[13:38:37] *** Quits: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d) (Ping timeout: 240 seconds)
[13:38:49] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac)
[13:39:38] *** Joins: luizfrds (~Luiz@152.250.243.147)
[13:41:14] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[13:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:35] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:35] *** ChanServ sets mode: +v npaperbot
[13:41:37] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[13:41:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[13:42:15] *** Quits: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[13:44:05] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:44:32] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 240 seconds)
[13:44:34] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[13:48:19] *** Joins: seninha (~seninha@user/seninha)
[13:52:45] *** Joins: tmm88 (~tmm88@user/tmm88)
[13:53:09] *** Joins: stonkey (~stonkey@user/stonkey)
[13:54:33] *** Quits: Uswald (~leandre@37.35.6.200) (Quit: WeeChat 2.8)
[13:56:33] *** Joins: Uswald (~user@37.35.6.200)
[14:00:28] *** Joins: marlboro (~i.am@user/marlboro)
[14:06:09] *** Quits: Uswald (~user@37.35.6.200) (Read error: Connection reset by peer)
[14:06:58] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[14:06:59] *** Joins: Uswald (~user@37.35.6.200)
[14:09:57] *** Quits: Uswald (~user@37.35.6.200) (Client Quit)
[14:12:41] *** Joins: Uswald (~leandre@37.35.6.200)
[14:13:41] *** Quits: Angs (~Angs@2.71.161.239.mobile.tre.se) (Ping timeout: 268 seconds)
[14:15:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:15:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:17:03] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
[14:19:49] *** Joins: syrius (syrius@titan.stormtek.net)
[14:20:45] *** Quits: Uswald (~leandre@37.35.6.200) (Quit: WeeChat 2.8)
[14:21:23] *** Joins: Uswald (~leandre@37.35.6.200)
[14:22:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.135)
[14:22:56] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.135) (Max SendQ exceeded)
[14:23:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.135)
[14:30:17] *** Quits: letto (~letto@86.120.81.105) (Ping timeout: 240 seconds)
[14:30:20] *** Joins: Burgundy (~NA@86.121.143.206)
[14:32:04] <the_lanetly_052> Hi, could anyone explain that. why segfault happened? https://wandbox.org/permlink/7PS2GIxOqlUIQgYD
[14:32:44] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:52] <PJBoy> infinite recursion
[14:34:10] <Oxyd> Yes. *this = x; is equivalent to *this = BigEndian(x);, so your BigEndian(T x) constructor is calling itself.
[14:34:58] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[14:35:05] <PJBoy> tip #1, use explicit on your single argument constructors
[14:35:16] <PJBoy> which prevents this kind of implicit conversion on x
[14:35:28] <PJBoy> tip #2 is obviously not to assign to *this in a ctor
[14:35:37] <anyone> I could too, but someone beat me to it.
[14:35:48] <the_lanetly_052> Oxyd: thanks for explanation
[14:36:28] <the_lanetly_052> PJBoy: when I added &operator=(T x) { return *this; } it works
[14:36:43] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:37:34] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 250 seconds)
[14:37:37] <PJBoy> that's a surprising result
[14:37:52] <the_lanetly_052> https://wandbox.org/permlink/Z2qzfJrMeHJdaIGS
[14:38:02] <PJBoy> oh right it's operator=(T), right
[14:38:08] <PJBoy> rather than operator=(BigEndian)
[14:38:27] <PJBoy> so that avoid the implicit conversion to BigEndian by making an alternative that doesn't need that conversion
[14:38:29] <ville> the_lanetly_052: it then no longer tries to use the BigEndian(T) ctor as there is a better operator = match which does not require pick the operator =(BigEndian const&) version
[14:38:31] <Uswald> PJBoy: BigEndian(T x) is no more called because of the copy operator
[14:39:36] <PJBoy> I guess you're looking to write your ctor in terms of the assignment operation
[14:40:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:40:38] <PJBoy> I would add a delegate call to the default constructor if going this route
[14:41:02] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[14:41:19] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Quit: Leaving)
[14:41:21] <PJBoy> except it causes a segfault, :/
[14:41:43] <PJBoy> oh the default ctor already delegates to the one-arg ctor
[14:41:58] <the_lanetly_052> hah I got it because of BigEndian (*this=x) object assignment it calls operator=()
[14:41:58] <PJBoy> man this isn't your everyday kind of code hahaha
[14:42:21] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:43:09] *** Quits: furrymcgee (~devuan@cgn-89-1-211-103.nc.de) (Quit: leaving)
[14:43:23] <the_lanetly_052> I saw that code in mold repo (https://github.com/rui314/mold/blob/036fdf0b29277ec622f481cc3734bd522bf0eac3/byteorder.h)
[14:43:41] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[14:44:17] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[14:45:14] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[14:45:44] *** Joins: letto (~letto@86.120.81.105)
[14:46:46] <PJBoy> :/
[14:48:11] *** Joins: cursey (~cursey@user/cursey)
[14:48:44] *** Joins: proller (~p@2a02:6b8:0:40c:c30b:1605:e861:ef65)
[14:50:11] <PJBoy> that's a very hacky approach
[14:50:15] <PJBoy> but it seems to hold together
[14:50:37] *** Joins: constxd (~brad@142.167.170.88)
[14:50:47] *** Joins: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d)
[14:52:04] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.135) (Remote host closed the connection)
[14:54:02] <Eelis> that doesn't look like code that will actually perform well on big endian systems, because it makes no effort to align val
[14:54:51] <PJBoy> it's not actually a big endian class, it's an opposite endian class
[14:55:10] <Eelis> presumably the intent is that it's efficient on both big-endian and little-endian systems
[14:55:43] <PJBoy> I would assume it's equally efficient on either system
[14:55:50] <Eelis> i see no basis for such assumptions
[14:56:02] <PJBoy> I don't see anything endian specific in that code
[14:56:14] <PJBoy> alignment doesn't favour big endian AFAIK
[14:57:48] <Eelis> that operator= converts little to big endian if necessary. this is a BigEndian class for storing big-endian numbers, but it's unnecessarily inefficient because on actual big-endian systems, it doesn't have proper alignment
[14:58:19] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.135)
[14:58:19] <PJBoy> the operator= converts big to little endian on big endian systems
[14:58:24] <PJBoy> which is the same cost
[14:58:38] <Eelis> no it doesn't. on big-endian systems, the optimizer will see it's a no-op
[14:59:13] <PJBoy> oh wait, is it not unconditionally doing a byte swap
[15:00:38] <PJBoy> I see
[15:01:26] <PJBoy> and we're to assume the compiler won't load these values into a register
[15:04:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[15:05:13] <anyone> gee, just doing be64_to_cpu(x) would be a lot better
[15:05:45] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[15:05:51] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:06:08] <Eelis> one would hope that modern compilers are clever enough to recognize a big-to-little endian conversion and generate optimal machine code. there shouldn't be a need to fuck around with special intrinsics
[15:06:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[15:06:55] <the_lanetly_052> yes there is comment about that compiler can recognize that and generate bswap instruction
[15:07:04] <the_lanetly_052> https://github.com/rui314/mold/blob/036fdf0b29277ec622f481cc3734bd522bf0eac3/byteorder.h#L17
[15:07:09] <Eelis> right. this ain't the 90s anymore
[15:07:49] <anyone> But *open-coding* this is still soo 90s.
[15:08:01] <Eelis> what's "open-coding" ?
[15:08:42] <anyone> writing ((x&0xff)<<8)|((x&0xff00)<<24)|((x&0xff0000)>>8)|((x&0xff000000)>>24), or a loop, on your own, in place of using just htons/htonl/htonll/intrinsics.
[15:09:10] <Eelis> that htons/htonll family is just inadequate. that's why we have Boost.Endian
[15:09:19] *** Joins: walterwhip (~www@user/walterwhip)
[15:09:28] <Eelis> https://www.boost.org/doc/libs/1_78_0/libs/endian/doc/html/endian.html
[15:09:51] <PJBoy> visual studio still can't do some run of the mill optimisations
[15:10:26] <anyone> Visual Studio has completely other problems :D
[15:10:44] <PJBoy> for example https://gcc.godbolt.org/z/rvc66b4oc
[15:11:17] *** Joins: syrius (syrius@titan.stormtek.net)
[15:11:25] <PJBoy> conversion from little endian order byte array to an integer
[15:11:28] <Eelis> PJBoy: hehe yikes. oh well, nobody who cares about performance would use M$ junk
[15:12:51] <anyone> PJBoy: "mov r9d, ecx; mov eax, ecx;". I mean it can't even see it emitted a useless op.
[15:15:23] <PJBoy> does it emit that??
[15:17:24] <PJBoy> oh right at the start
[15:17:29] <PJBoy> that wasn't there last time I checked
[15:19:46] <PJBoy> I don't think it's a useless op though
[15:20:30] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:22:18] <PJBoy> r9d is modified later and cl is used after this modification
[15:26:20] <anyone> but ecx is overwritten right away, that's my point
[15:26:29] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:27:04] <PJBoy> oh you must be reading it backwards
[15:27:16] <PJBoy> mov d,s copies s to d
[15:29:36] <anyone> I hate ATT syntax for misleading me for so long.
[15:34:19] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:35:07] *** Joins: walterwhip (~www@user/walterwhip)
[15:36:54] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:38:07] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:39:21] <ville> how do i delay the resolution of &::f so that it resolves to the overload from line 17? can't* re-order the declarations
[15:40:51] *** Joins: frost (~frost@user/frost)
[15:42:03] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/01/23 UTC) 64 Bit)
[15:42:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:44:29] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[15:46:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:49:37] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34)
[15:49:45] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[15:49:58] <ville> there's this: http://coliru.stacked-crooked.com/a/5a6a0288a4edea15 but it's bit boilerplate-y
[15:50:59] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:51:47] <ville> hmm isn't this the same problem as unordered_map+hash? there were papers about nicer mechanism around that?
[15:52:57] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 240 seconds)
[15:55:49] *** Quits: rendar (~rendar@user/rendar) (Remote host closed the connection)
[15:56:51] *** Quits: Uswald (~leandre@37.35.6.200) (Quit: WeeChat 2.8)
[15:57:17] *** Joins: Uswald (~leandre@37.35.6.200)
[15:58:10] *** Quits: Uswald (~leandre@37.35.6.200) (Client Quit)
[15:59:41] <constxd> kings
[16:00:06] <constxd> std::vector<float> v(2); // are the elements of v initialized here?
[16:00:14] <Eelis> yes, to  0
[16:00:34] <constxd> ok wasn't sure if there was some special case for primitive types
[16:00:36] <constxd> based
[16:00:49] <Eelis> they're initialized to element_type(), and if element_type is float, that means float(), which is 0
[16:00:55] *** Joins: rendar (~rendar@user/rendar)
[16:01:15] <constxd> this is in C++98 btw
[16:01:36] <Eelis> are you being held hostage in a basement with only a computer from 2000 ?
[16:01:53] <constxd> feels that way sometimes
[16:01:57] <Eelis> yikes
[16:02:17] <constxd> i don't quite understand why we use C++98
[16:02:47] <bobb_> constxd it worked for the past 20 years, why risk any change?
[16:03:06] <Eelis> managers tend to not understand the reality of technical debt
[16:03:08] <constxd> i'm told it's because we depend on the matlab compiler runtime library and that requires C++98 but that doesn't sound quite right to me
[16:03:53] <bobb_> constxd they always find easy-to-say excuses
[16:04:28] <constxd> indeed
[16:04:31] <bobb_> have the same here, stuff was written for OS-9
[16:05:16] <bobb_> i was told they use C++17 and thats correct, but not in the area i work :>
[16:05:26] <constxd> ah the old bait and switch
[16:05:42] <PJBoy> should still be able to write C++17 for new code
[16:05:57] <Eelis> as project lead i choose whatever i want, but i choose C++17 because there's no Ubuntu LTS yet with a default compiler with good C++20 support
[16:06:18] <ville> why do you think it's an excuse? if they've some closed source part they can't easily recompile then that's what they're stuck with
[16:06:26] <bobb_> PJBoy that is correct as long as new code is wanted
[16:07:05] <bobb_> "fix bugs but try to change as little as possible", thats the strategy here
[16:07:20] *** Joins: Leone (~Leo@157.52.18.77)
[16:07:25] <ville> PJBoy: how are you going to make sure you don't cross an std::string from 98 to 17 or the other way?
[16:07:29] <Eelis> "change as little as possible" is a strategy that maximizes technical debt
[16:07:29] <constxd> ville: but surely whatever code interfaces directly with the matlab runtime stuff could be compiled separately and the rest of the codebase could be C++17
[16:07:49] *** Joins: Uswald (~leandre@37.35.6.200)
[16:07:53] <bobb_> Eelis full agree!
[16:08:03] <constxd> just stick to PODs at the boundary between 17 and 98
[16:08:41] <ville> if the original interface doesn't do that, and you're in a situation where you can't easily change and recompile it...
[16:08:47] <anyone> Then again, closedsource parts are often compiled in a very generic way (though C++ makes it a little harder)
[16:08:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:09:13] <constxd> no you write a wrapper around it
[16:09:35] <anyone> wrappers are technically more debt
[16:12:48] <bobb_> Eelis i believe one can compare their strategy with somebody that has to overhaul and repair a car but instead of doing it this person prefers to drive with 10 km/h and then this person claims to make constant progress
[16:12:52] <PJBoy> ville, make the old code talk to python and have python talk to the new code
[16:13:29] <ville> and be 64 times slower than javascript!
[16:13:52] <PJBoy> worth it
[16:15:35] <ville> no neat solutions to delaying the time overload is picked?
[16:15:42] <anyone> it's not like you have to pick *Python* in particular
[16:15:53] <PJBoy> I tried a few tricks and came up short
[16:16:18] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:16:45] <ville> with blinders on it seems odd the overload set isn't the one available at the time the template is instantiated
[16:17:01] *** Quits: md618 (~md618@dyn3152-74.wlan.ic.ac.uk) (Ping timeout: 268 seconds)
[16:18:31] *** Joins: md618 (~md618@dyn3149-152.wlan.ic.ac.uk)
[16:20:35] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34)
[16:20:47] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:22:51] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:22:59] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[16:24:36] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34) (Client Quit)
[16:26:27] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[16:26:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:27:21] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:28:44] *** Atque is now known as hammond
[16:28:47] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[16:28:55] *** hammond is now known as Atque
[16:32:58] *** Quits: hinata (~hinata@2405:204:9512:682d:ace9:ca9e:83a2:95d) (Quit: Leaving)
[16:33:08] *** Joins: frost (~frost@user/frost)
[16:38:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:39:18] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[16:42:43] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:42:47] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:42:59] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:45:58] <ville> PJBoy: http://coliru.stacked-crooked.com/a/4cecc5c99aab6095 probably closest i got. probably some funny corner cases
[16:47:57] *** Quits: md618 (~md618@dyn3149-152.wlan.ic.ac.uk) (Ping timeout: 240 seconds)
[16:48:09] *** Joins: md618 (~md618@dyn3152-65.wlan.ic.ac.uk)
[16:51:02] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[16:51:08] <PJBoy> ah did you not want a function pointer member
[16:52:08] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[16:52:12] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Read error: Connection reset by peer)
[16:53:49] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[16:55:18] <PJBoy> the template is excessive in that case
[16:55:34] <PJBoy> unless you wanted to also eliminate argument conversions
[16:58:42] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[16:58:57] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:58:59] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Remote host closed the connection)
[16:59:10] <ville> originally i did want a member and yeah just call to f() would suffice
[17:00:15] <ville> on review it looks like the fact it's a member has never been really used so suppose might as well not be
[17:00:23] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Read error: Connection reset by peer)
[17:00:48] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[17:05:20] <ville> as non-member you lose the ability to have different f with the same T
[17:07:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:14:07] *** Joins: davros (~davros@host86-184-180-214.range86-184.btcentralplus.com)
[17:14:14] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[17:16:32] *** Joins: marlboro (~i.am@191.248.124.154)
[17:16:32] *** Quits: marlboro (~i.am@191.248.124.154) (Changing host)
[17:16:32] *** Joins: marlboro (~i.am@user/marlboro)
[17:19:09] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[17:25:57] *** Parts: jplejacq (~jplejacq@24.224.90.176) (Leaving.)
[17:28:13] *** Quits: fengdaolong (~fengdaolo@58.48.87.13) (Ping timeout: 256 seconds)
[17:29:54] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[17:38:47] *** Joins: kit_ten (~u0_a391@2600:380:5e28:3b67:fd80:df22:a2b5:9a5)
[17:39:55] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:37] *** ChanServ sets mode: +v npaperbot
[17:42:09] *** Joins: frost (~frost@user/frost)
[17:42:32] *** Quits: kit-ten (~u0_a391@2603-6010-a103-1f2e-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Ping timeout: 240 seconds)
[17:45:54] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:53:39] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[17:54:28] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[17:54:43] *** Quits: calm-steam (~calm-stea@user/calm-steam) (Quit: WeeChat 2.8)
[17:55:06] <the_lanetly_052> which IDE is the best for C/C++ development (with easy LSP integration without creating some setting files)?
[17:55:37] <Uswald> I would dare say Emacs ;)
[17:55:52] <PJBoy> only VS Code has easy LSP integration
[17:55:59] <PJBoy> and emacs/vim possibly idk
[17:56:32] *** Quits: md618 (~md618@dyn3152-65.wlan.ic.ac.uk) (Ping timeout: 240 seconds)
[17:58:19] <Uswald> There exist lsp-mode for emacs.
[17:58:26] *** Joins: md618 (~md618@129.31.149.204)
[17:58:43] <the_lanetly_052> I do use vim with coc but it has a lot of cumbersome settings.
[17:59:01] <Uswald> You can find here someone confuguration for emacs using lsp http://nilsdeppe.com/posts/emacs-c++-ide2
[17:59:02] *** Joins: HvszrStykp (~X@81.171.62.81)
[17:59:13] <PJBoy> eclipse has beta LSP support
[18:00:02] <the_lanetly_052> what about Clion?
[18:00:12] <PJBoy> no idea
[18:00:20] <Uswald> Never use
[18:00:40] <PJBoy> being non-free I rarely even remember it exists
[18:01:15] <the_lanetly_052> i did try few times but when I tried to open linux kernel folder that started to use too much mem.
[18:01:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:02:23] <the_lanetly_052> iirc it tried to eat much more memory with small cpp project though.
[18:04:05] <ville> Uswald: emacs lsp-mode is not a zero-configuration deal at all
[18:05:59] *** Quits: Linux77 (~LinuMage@186.233.182.173) (Ping timeout: 256 seconds)
[18:06:35] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:07:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:07:46] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[18:08:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:10:39] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:12:06] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[18:17:20] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[18:17:20] *** Joins: judabuda (kowbunga@user/judabuda)
[18:19:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:20:57] <rpav> depends on what kind of config you expect
[18:22:01] <rpav> lsp-mode itself doesn't require a lot of configuration unless you need to make it do something weird
[18:22:03] <rpav> you will still have to write a CMakeLists.txt and export compile_commands.json, and _probably_ link that in the project root somehow, but those are all sortof things you'd have to do anyway
[18:22:09] *** Quits: nelubit (~nelubit@user/nelubit) (Read error: Connection reset by peer)
[18:22:28] *** Joins: nelubit (~nelubit@user/nelubit)
[18:23:36] <rpav> emacs definitely doesn't require "extra configuration" for "how to deal with cmake" a la vscode/VS, though i wrote a few minor extensions for "run cmake/task nicely"
[18:24:36] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:27:29] <rpav> err why is this #c++
[18:28:01] *** Quits: stonkey (~stonkey@user/stonkey) (Read error: Connection reset by peer)
[18:28:21] *** Joins: stonkey (~stonkey@user/stonkey)
[18:29:17] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[18:29:46] *** Joins: stonkey (~stonkey@user/stonkey)
[18:30:42] *** Quits: stonkey (~stonkey@user/stonkey) (Max SendQ exceeded)
[18:31:10] *** Joins: stonkey (~stonkey@user/stonkey)
[18:31:18] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[18:33:53] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:34:17] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:38:09] <anyone> cause C++ is a lot more sensible than some people would like to admit
[18:39:03] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[18:39:23] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[18:39:27] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:39:58] *** Joins: seninha (~seninha@user/seninha)
[18:44:37] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[18:44:59] *** Joins: seninha (~seninha@user/seninha)
[18:48:10] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[18:48:17] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:49:51] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[18:50:23] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[18:56:41] *** Joins: sonic (~sonic@user/sonic)
[19:01:32] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[19:02:20] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[19:03:07] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:04:07] *** Joins: Crowley99 (~Crowley99@208.59.191.14)
[19:04:59] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34)
[19:05:24] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[19:08:42] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:09:43] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:e928:2d70:ece:df34) (Client Quit)
[19:10:23] *** Joins: evelyette (~Eleanor@APN-123-241-73-gprs.simobil.net)
[19:10:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:11:36] <BurumaSerafuku> C++ is lovely
[19:14:37] *** Quits: kit_ten (~u0_a391@2600:380:5e28:3b67:fd80:df22:a2b5:9a5) (Ping timeout: 240 seconds)
[19:15:23] *** Joins: kit_ten (~u0_a391@2600:380:5e28:3b67:fd80:df22:a2b5:9a5)
[19:17:46] *** Joins: pulse (~pulse@user/pulse)
[19:22:37] *** Quits: dld (~davidlowr@2601:197:600:1210:88d:2354:617:54b5) (Ping timeout: 240 seconds)
[19:23:44] *** Joins: dld (~davidlowr@73.61.8.28)
[19:24:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:28:43] *** Quits: dld (~davidlowr@73.61.8.28) (Ping timeout: 256 seconds)
[19:29:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[19:30:05] *** Joins: dld (~davidlowr@2601:197:600:1210:5064:96c:65f6:1d79)
[19:35:23] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[19:36:32] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:37:10] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Quit: Client closed)
[19:37:21] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[19:43:12] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[19:45:04] *** Quits: evelyette (~Eleanor@APN-123-241-73-gprs.simobil.net) (Read error: Connection reset by peer)
[19:47:53] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:53:38] * Alipha marries c++
[19:53:44] *** Joins: chozorho (~chozorho@2601:146:300:c30::aec1)
[19:55:04] *** Joins: khanred (~khanred@user/khanred)
[19:55:38] *** Joins: lispy (~lispy4@84.69.59.93)
[19:59:46] *** Parts: khanred (~khanred@user/khanred) (Leaving)
[20:01:34] *** Joins: evelyette (~Eleanor@178.79.105.181)
[20:05:38] *** Quits: Uswald (~leandre@37.35.6.200) (Quit: WeeChat 2.8)
[20:07:41] *** Joins: dfkfs90 (~dfkfs@178.49.152.42)
[20:08:21] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[20:08:42] *** Joins: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf)
[20:09:51] *** Joins: Uswald (~Uswald@2a04:cec0:1198:f1ca:0:63:1174:e001)
[20:11:47] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Ping timeout: 256 seconds)
[20:13:19] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[20:13:29] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:14:08] *** Joins: cpuid (~cpuid@co5.at)
[20:14:08] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[20:14:08] *** Joins: cpuid (~cpuid@user/cpuid)
[20:14:25] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:17:13] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[20:18:39] *** Joins: seninha (~seninha@user/seninha)
[20:22:44] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:24:35] *** Joins: pnxs (~pnxs@p3ee3c1d0.dip0.t-ipconnect.de)
[20:27:42] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[20:28:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0)
[20:28:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0) (Changing host)
[20:28:32] *** Joins: skapata (~Skapata@user/skapata)
[20:29:20] *** Joins: magla (~gelignite@55d4d2c6.access.ecotel.net)
[20:29:25] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[20:32:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:32:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[20:35:10] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[20:35:35] *** Joins: Kerr (~Kerr@2601:602:ce01:1f0:5f13:9db7:2f2:5748)
[20:35:38] *** Joins: lispy (~lispy4@84.69.59.93)
[20:36:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:37:01] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:37:51] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:38:02] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[20:38:42] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:44:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2040:9516:dc69:4989)
[20:46:04] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:48:28] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:48:55] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:49:02] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[20:49:45] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[20:50:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:57:10] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[20:58:53] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[21:01:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:01:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[21:02:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:02:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:04:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:04:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:05:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:05:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:06:06] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[21:06:25] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:06:26] *** Joins: pulse (~pulse@user/pulse)
[21:07:40] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[21:09:41] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[21:11:28] *** Quits: kit_ten (~u0_a391@2600:380:5e28:3b67:fd80:df22:a2b5:9a5) (Ping timeout: 250 seconds)
[21:12:08] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[21:12:17] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[21:14:05] *** Quits: Uswald (~Uswald@2a04:cec0:1198:f1ca:0:63:1174:e001) (Quit: Quit)
[21:15:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:17:46] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[21:21:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:26:29] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[21:28:57] *** Quits: md618 (~md618@129.31.149.204) (Ping timeout: 240 seconds)
[21:30:33] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:36:34] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:39:22] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[21:39:36] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[21:40:36] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:41:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:37] *** ChanServ sets mode: +v npaperbot
[21:44:55] *** Joins: Betal (~Betal@user/betal)
[21:45:42] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 268 seconds)
[21:48:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[21:54:01] *** Joins: gamaliel (~gamaliel@24.171.221.75)
[21:54:11] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[21:54:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:54:36] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[21:55:16] <pippijn> !fun
[21:55:18] <nolyc> #C++ is a topical channel. There is No Fun Allowed in #C++.
[21:57:11] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 256 seconds)
[22:00:23] <rpav> ^ do not take by mouth
[22:04:26] <constxd> kings
[22:04:35] <constxd> is there a word for non-virtual
[22:04:51] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.167)
[22:07:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.135) (Ping timeout: 268 seconds)
[22:08:06] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[22:08:49] *** Parts: gamaliel (~gamaliel@24.171.221.75) ()
[22:13:25] <Alipha> constxd: we just use "non-virtual". using any other word would just cause confusion
[22:13:59] <constxd> ok
[22:14:01] <constxd> thank you king
[22:17:09] *** Quits: proller (~p@2a02:6b8:0:40c:c30b:1605:e861:ef65) (Ping timeout: 268 seconds)
[22:17:20] *** Joins: r3z (~r3z@85.101.190.254)
[22:17:21] *** Joins: tmm88 (~tmm88@user/tmm88)
[22:18:09] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[22:20:48] *** Quits: r3z (~r3z@85.101.190.254) (Read error: Connection reset by peer)
[22:22:49] <ville> final?
[22:23:10] <ville> oh wait. nevermind
[22:23:11] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:25:25] <Alipha> yeah, i'm sitting here thinking of antonyms of "virtual". i think "concrete" would be most appropriate, but i would imagine you would immediately get asked what you mean if you used that
[22:27:05] <ville> completely misread what he asked for
[22:27:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:31:30] *** Quits: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf) (Quit: Konversation terminated!)
[22:32:50] *** Quits: dfkfs90 (~dfkfs@178.49.152.42) (Quit: Client closed)
[22:35:14] <pippijn> concrete member function?
[22:35:47] <anyone> in computing, "virtual" is """ "not physically existing as such but made by software to appear to do so" e.g. virtual images"""
[22:35:56] <anyone> the antonym of that would be.. "real", I suppose!?
[22:36:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:36:42] <PJBoy> would agree that "real" is the paired antonym of "virtual"
[22:36:46] <Alipha> with "real" or "concrete", i could interpret that to mean that if foo is a pure virtual member function in the base class, then the real/concrete foo is implemented in the derived class
[22:37:30] <anyone> the more closer observation however reveals that not the function is virtual, but the function _call_.
[22:37:31] <PJBoy> "concrete" I'd pair with "abstract"
[22:37:39] <Alipha> struct base { virtual void foo() = 0; }; struct derived : base { void foo() override {} }; // base::foo is virtual and derived::foo is real/concrete, is what i mean
[22:38:07] <anyone> Base::foo is just as real as Derived::foo would be, whether or not either of them are marked for 'virtual'
[22:39:18] <anyone> it's funny - with the virtual qualifier, you get an upcall. Call base->foo, have Derived::foo (possibly) invoked. With inheritance (and no override) you get a downcall. deriv->foo calls Base::foo.
[22:39:29] <anyone> So "which one is virtual NOW?" one might be inclined to rhetorically ask ;)
[22:39:53] <anyone> "dispatch" might have been a better word
[22:40:10] <anyone> after all, that's what dispatch table (vtable) is all about
[22:49:22] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:c2b8:b157:be3f:ced2)
[22:52:41] *** Joins: peoliye (~peoliye@205.251.233.50)
[22:54:37] *** Quits: nshire (~nshire@user/nshire) (Ping timeout: 240 seconds)
[22:56:14] *** Joins: nshire (~nshire@user/nshire)
[23:00:09] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:00:57] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Ping timeout: 240 seconds)
[23:03:49] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Quit: Connection reset by peep)
[23:07:00] *** Joins: Jackii (~Jackiii@93-41-0-216.ip79.fastwebnet.it)
[23:07:23] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[23:07:34] <Jackii> a uninitialized string will take memory ?
[23:08:30] <ville> Jackii: what is an uninitialized string?
[23:08:53] <Jackii> like: string mystring;
[23:09:10] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:09:18] <ville> the object will of course take up some memory, it is unspecified whether there's anything allocated in addition
[23:09:45] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[23:09:58] <kalven> (but mostly likely not)
[23:11:03] <Alipha> And that string is not uninitialized. It's a default constructed std::string
[23:12:22] <Alipha> And indeed, there will most likely not be any dynamic allocation to hold the char data. Only the automatic allocation of the std::string object itself.
[23:13:09] <Jackii> like 1 byte or 2
[23:13:37] <Alipha> << sizeof(std::string)
[23:13:38] <geordi> 32
[23:13:42] <kalven> find out with sizeof, but typically 3x pointer
[23:14:39] <Jackii> 32 byte ?
[23:15:45] *** Joins: kit_ten (~u0_a391@2600:380:886b:ff6b:20c0:d6e2:b860:cf0d)
[23:16:06] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[23:16:13] <Jackii> howmuch memory takes a pointer ?
[23:16:24] <anyone> who said anything about it being a pointer?
[23:16:43] <Alipha> Jackii: yes, 24 or 32 bytes would be common on 64-bit systems and 12 or 16 bytes on 32-bit systems. pointers on 64-bit systems are 64 bits (8 bytes) and 32 bits on 32-bit systems, typically
[23:17:45] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:17:58] <Alipha> a std::string needs to keep track of 3 things: a pointer to the char array, the size of the string, and the capacity of the char array buffer. and so, that's typically stored as either a pointer and 2 integers, or 3 pointers.
[23:18:53] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:18:57] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Ping timeout: 240 seconds)
[23:19:06] *** Joins: proller (~p@2a02:6b8:b081:a415::1:10)
[23:19:43] <Jackii> wow
[23:19:49] <Jackii> thats a lot of memory
[23:20:08] <kalven> yeah
[23:20:17] <kalven> it hasn't been popular on c64
[23:21:09] <Alipha> Jackii: on what system or for what application is that "a lot of memory"?
[23:21:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[23:21:48] <Jackii> however, if I make a char array also a pointer is created internally ?
[23:23:19] <Alipha> Jackii: you mean like, `char foo[20];`?
[23:23:32] <Jackii> yeah
[23:23:44] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[23:23:50] <anyone> foo[20] is 20 chars, not a pointer
[23:24:17] <Jackii> it will take 20 bytes but somewhere the memory addres must be stored
[23:24:18] <Alipha> foo is an array, not a pointer. There's no pointer there. Arrays will decay to pointers to their first element in most contexts, which leads to the confusion
[23:25:00] <Jackii> somewhere the memory address must be stored
[23:25:08] <anyone> Jackii: if you store the address (or anything else), then the address would have... an address
[23:26:03] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[23:29:49] <Alipha> The address is fixed (for global variables) or has a fixed offset from the current stack frame (for local variables). Same as for an int variable, eg, `int x;`. Arrays are not special in this regard
[23:30:18] <anyone> %rip-relative addressing to the rescue :o
[23:35:29] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[23:35:52] *** Joins: seninha (~seninha@user/seninha)
[23:36:57] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[23:37:56] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[23:38:36] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
[23:39:55] <Jackii> even an int must have the address somewhere
[23:42:10] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:43:40] <InPhase> Jackii: That "storage" for a plain int is mashed into the machine code as a relative offset from the stack frame, so it is not typically stored as a pointer.
[23:46:00] <Jackii> ok
[23:49:50] <InPhase> A lot of the structure of C++ is based around this requirement that in all sections of code, the stack register must be at the same value each time it passes through that section of code, so that these relative offsets continue to function properly.
[23:51:32] *** Parts: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Leaving)
[23:52:40] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[23:53:13] <imMute> InPhase: "the stack register must be at the same value each time it passes through that section of code"   eehhhh, not really.  but I can't think of a better way to word it.  not without going into function prolouge stuff
[23:53:52] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:57] <anyone> the offset is the same though, that's why pc-rel works
[23:57:57] <Jackii> tnx guys
