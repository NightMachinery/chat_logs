[00:05:06] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 260 seconds)
[00:12:04] *** Quits: chripell (~chripell@host-79-20-15-48.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[00:13:18] *** Joins: tdidrfyls^ (~tdidrfyls@68.101.54.227)
[00:13:58] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[00:18:54] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[00:19:15] *** Quits: normen (~normen@p200300d7173dc9002ddd763df57766f3.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:26:11] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[00:27:57] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.242)
[00:29:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:29:50] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 260 seconds)
[00:46:58] <Seirdy> when splitting a go package into multiple files, is there an optional convention for adding a comment to each file to describe what subset of the package it accounts for?
[00:47:51] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[00:48:06] <Seirdy> was thinking it could be handy for other devs who want to edit internals (contributions, forks, etc).
[00:48:41] <A_Dragon> I think vet might complain (if you put it above the package statement, anyway)
[00:48:55] <A_Dragon> but it'd be helpful if you feel the organisation is difficult to follow
[00:49:24] <Seirdy> i was thinking i'd put the comment below the package statement
[00:51:58] <A_Dragon> then everything should be happy, wont end up in godoc I dont think
[00:52:06] *** Quits: entropygain (levitate@2600:3c01::f03c:91ff:fecc:c443) (Changing host)
[00:52:06] *** Joins: entropygain (levitate@user/entropygain)
[00:52:14] <A_Dragon> you can also use a doc.go to write comments for the package instead?
[00:55:25] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[00:55:28] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[00:56:38] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[00:58:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:59:08] <Seirdy> this shouldn't end up in godoc since knowing about individual files inside a package only seems useful to people hacking on the code, not importing it.
[01:00:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:02:42] *** Joins: fikran (~fikran@user/fikran)
[01:05:32] <fizzie> Only a comment immediately adjacent to the package statement gets picked up by godoc, so you *could* also put it in front, as long as it's separated by a blank line. But feels like right after the package clause would be the more reasonable place for an internal comment like that.
[01:05:55] <A_Dragon> fizzie: not sure how happy godoc would be
[01:05:59] <A_Dragon> s/doc/fmt
[01:06:32] <fizzie> I think it should be happy about it. The standard library code has a license comment there, and I don't think that's special-cased.
[01:06:39] <fizzie> Well, a copyright comment, anyway.
[01:07:04] <Seirdy> gofumpt and wsl don't complain.
[01:08:24] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[01:08:55] *** Quits: Kyros (~kyros@user/kyros) (Quit: WeeChat 2.8)
[01:09:00] <fizzie> "encoding/gob" is used as an example of a well-documented piece of code in the godoc blog post, and it does that thing where doc.go contains both external (lines 5-279) and internal (282-415) documentation: https://cs.opensource.google/go/go/+/refs/tags/go1.17.1:src/encoding/gob/doc.go
[01:11:58] *** Joins: pts33 (~pts33@2603-8000-9103-a43f-b067-1e4e-3d17-1ede.res6.spectrum.com)
[01:13:26] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[01:14:31] *** Quits: hikhvar796073809 (~thelounge@x4db589bc.dyn.telefonica.de) (Ping timeout: 265 seconds)
[01:14:43] <b0nn> Seirdy: Most of the time the naming of the file is what infers which subset of the domain that that individual file is handling
[01:19:04] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 268 seconds)
[01:20:58] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[01:22:34] *** Quits: mmfood (~mmfood@45.135.187.158) (Ping timeout: 260 seconds)
[01:23:43] *** Joins: khrbt (~znc@user/khrbt)
[01:28:51] <b0nn> implies not infers
[01:28:57] <girafe> https://www.theguardian.com/technology/2021/sep/16/home-computing-pioneer-sir-clive-sinclair-dies-aged-81
[01:29:55] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:30:07] *** Joins: mmfood (~mmfood@45.135.187.99)
[01:31:02] *** Joins: jpw (~jpw@user/jpw)
[01:31:55] *** Joins: k0ta (~k0ta@103.108.94.37)
[01:31:58] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[01:35:40] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:35:47] *** Quits: mmfood (~mmfood@45.135.187.99) (Ping timeout: 265 seconds)
[01:37:18] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[01:37:26] *** Joins: mmfood (~mmfood@45.135.187.99)
[01:45:54] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:54:52] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[01:55:08] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[01:56:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:03:41] *** Quits: tdidrfyls^ (~tdidrfyls@68.101.54.227) (Ping timeout: 268 seconds)
[02:06:07] *** Quits: pts33 (~pts33@2603-8000-9103-a43f-b067-1e4e-3d17-1ede.res6.spectrum.com) (Quit: Leaving)
[02:09:12] *** Joins: hexfive (~eric@50.35.83.177)
[02:09:39] *** Joins: pi1 (~pi@177.223.162.41)
[02:10:20] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[02:13:54] *** Quits: andlabs (~andlabs@70.107.171.168) (Ping timeout: 260 seconds)
[02:15:42] *** Joins: andlabs (~andlabs@70.107.171.168)
[02:19:19] <Tv_> Seirdy: frankly, if what's inside a file is not obvious-enough from filename and quick glance, a comment isn't the right fix
[02:20:23] <Tv_> w00t my frame.work laptop is shipping
[02:21:00] <Tv_> first time since 2012 that a new computer is actually beefier than the tower i fittingly named "brute"
[02:24:28] *** Quits: darkapex_ (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[02:26:35] *** Joins: darkapex (~darkapex@user/darkapex)
[02:34:30] <foobaz> to be fair 2012 was an incredible time to buy pc hardware
[02:35:15] <foobaz> i still do most of my work on a quad core sandy bridge development server from 2012
[02:35:17] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:36:15] <foobaz> i must have written over 100,000 lines of code on that single machine
[02:43:27] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[02:47:20] *** Joins: rek2 (~ReK2@static-141-25-231-77.ipcom.comunitel.net)
[02:54:49] <Tv_> you're making my hatred of intel product naming strategy flare up
[02:58:13] <Torr> Any idea on how to stop this https://github.com/golang/go/issues/37576 ?
[02:58:31] <braxas> is there something like https://jazzband.co/about for golang?
[03:02:16] <b0nn> Torr: Are you asking for a way to stop the command from being actioned?
[03:02:34] <Torr> Yes, to stop autofilling.
[03:02:46] <Tv_> Torr: blame your IDE
[03:03:11] <b0nn> Torr: so, it's a per IDE configuration
[03:03:26] <b0nn> For example, in VS Code you would be changing a settings.json
[03:03:44] <b0nn> eg. https://github.com/theia-ide/go-language-server/blob/master/.vscode/settings.json
[03:04:19] <b0nn> So, which IDE/editor are you using?
[03:05:19] <Torr> Neovim
[03:07:49] <b0nn> I /think/ but you will need to confirm with a neovim poweruser (and a gopls poweruser) neither of which I am... that you need to look at https://github.com/golang/tools/blob/master/gopls/doc/vim.md#neovim-config
[03:09:05] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:10:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:11:29] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[03:12:04] *** Joins: fikran (~fikran@user/fikran)
[03:12:24] <Torr> Nah, it's not these.
[03:13:51] <Torr> It's inside Gopls, I'll see what I can do.
[03:14:12] <b0nn> ...
[03:14:30] <b0nn> Gopls is a server that receives commands from your client (IDE)
[03:14:43] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:14:50] <b0nn> You configure your client on what commands to send (or not)
[03:15:20] <b0nn> Gopls is a jsonrpc server IIRC (or used to be)
[03:20:40] *** Quits: foobaz (~oofabz@199.58.97.156) (Quit: ZNC 1.8.2 - https://znc.in)
[03:20:59] *** Joins: foobaz (~oofabz@199.58.97.156)
[03:21:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:23:16] <Torr> Pretty much.
[03:29:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2fb2:77a5:f08a:8f1f) (Remote host closed the connection)
[03:29:40] *** Quits: mmfood (~mmfood@45.135.187.99) (Ping timeout: 252 seconds)
[03:30:58] <Tv_> and it only provides your IDE with the autofill info when your IDE asks for it
[03:31:19] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[03:35:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:35:55] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[03:37:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:37:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:37:21] *** Joins: wroathe (~wroathe@user/wroathe)
[03:39:51] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:41:46] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[03:42:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 260 seconds)
[03:42:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[03:43:22] *** Joins: Atque (~Atque@user/atque)
[03:43:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:43:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:43:56] *** Joins: wroathe (~wroathe@user/wroathe)
[03:44:19] <b0nn> Torr: Dr my arm hurts when I do this; Dr: Then stop doing that (Your IDE tells gopls something, gopls reacts according to that command, so the way to stop it happeniong is to not send the command)
[03:50:47] <Torr> That specfic command wasn't being requested, it's on by default. The thing is that it's part of a class of commands called "actions", which when enabled, entails the former command.
[03:52:08] <b0nn> Wait, "It's not being requested" - you're saying that gopls just out of the blue says "here's some defaults for a struct I have no idea that you are dealing with"?
[03:56:26] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:01:45] <Tv_> Torr: your editor requested it, based on its config, where it apparently is on by default
[04:01:51] <Tv_> Torr: -> blame your IDE
[04:04:24] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.2.1)
[04:06:25] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[04:07:40] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:08:52] *** Quits: yama (~yama@097-090-153-102.biz.spectrum.com) (Ping timeout: 252 seconds)
[04:11:05] *** Joins: tdidrfyls^ (~tdidrfyls@68.101.54.227)
[04:17:32] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:25:26] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.242) (Ping timeout: 265 seconds)
[04:30:38] *** Quits: pots59 (~pots@20.51.220.66) (Remote host closed the connection)
[04:35:02] *** Quits: Memory (sid459764@id-459764.lymington.irccloud.com) (Changing host)
[04:35:02] *** Joins: Memory (sid459764@user/memory)
[04:36:36] *** Quits: tdidrfyls^ (~tdidrfyls@68.101.54.227) (Remote host closed the connection)
[04:41:06] *** Quits: pi1 (~pi@177.223.162.41) (Read error: Connection reset by peer)
[04:42:52] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:39] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:02] *** Joins: pots59 (~pots@20.51.220.66)
[05:00:21] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[05:06:04] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[05:19:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:21:26] *** Joins: fikran (~fikran@user/fikran)
[05:31:55] *** Quits: crazymax (~crazymax@user/crazymax) (Remote host closed the connection)
[05:44:51] *** Quits: yelnah (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7) (Ping timeout: 268 seconds)
[05:46:32] *** Joins: yelnah (~felix@110-175-177-164.static.tpgi.com.au)
[05:51:14] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[05:56:15] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[05:58:28] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[06:01:06] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:01:06] *** neurocyte0 is now known as neurocyte
[06:03:56] *** Joins: califax- (~califax@user/califx)
[06:06:42] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:06:43] *** califax- is now known as califax
[06:07:33] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[06:09:54] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-9d8a-015d-7a23-d445.inf6.spectrum.com)
[06:10:03] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[06:12:52] *** Joins: pi1 (~pi@177.223.162.41)
[06:13:10] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:b82a:8800:bc2d:696e) (Ping timeout: 252 seconds)
[06:15:53] *** Joins: yama_ (~yama@097-090-153-102.biz.spectrum.com)
[06:17:30] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[06:19:21] *** Joins: rockyh (~rockyh@user/rockyh)
[06:30:43] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:39:57] *** Quits: yelnah (~felix@110-175-177-164.static.tpgi.com.au) (Ping timeout: 268 seconds)
[06:40:38] *** Joins: yelnah (~felix@220.240.238.12)
[06:52:13] *** Joins: cskr (~cskr@49.207.218.133)
[06:52:24] *** Quits: cskr (~cskr@49.207.218.133) (Client Quit)
[06:55:51] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1001)
[07:07:54] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-9d8a-015d-7a23-d445.inf6.spectrum.com) (Read error: Connection reset by peer)
[07:07:56] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1001) (Quit: ZNC 1.8.2 - https://znc.in)
[07:07:59] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[07:08:18] *** Joins: thing (~thing@user/thing)
[07:08:55] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[07:09:20] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:1c5f:e9b1:6dd5:a47f)
[07:29:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:30:47] *** Joins: fikran (~fikran@user/fikran)
[07:47:03] *** Joins: cskr (~cskr@49.207.218.133)
[07:49:01] *** Joins: frost (~frost@59.71.243.104)
[07:50:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[07:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:01:58] *** Quits: frost (~frost@59.71.243.104) (Ping timeout: 265 seconds)
[08:03:34] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 252 seconds)
[08:04:19] *** Joins: rockyh (~rockyh@user/rockyh)
[08:13:20] *** Quits: cskr (~cskr@49.207.218.133) (Quit: Leaving)
[08:24:39] *** Joins: fdan (~fdan@192.146.154.3)
[08:42:48] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[08:45:36] *** Joins: amolith (~amolith@nixnet/founder/amolith)
[08:52:34] *** Joins: jpw (~jpw@user/jpw)
[08:53:43] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[08:57:08] *** Joins: iluxa (~iliaf@user/iluxa)
[08:58:17] *** Quits: iliaf (~iliaf@user/iluxa) (Ping timeout: 260 seconds)
[09:27:26] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.251)
[09:28:40] *** Quits: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4) (Ping timeout: 240 seconds)
[09:31:10] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:31:58] *** Quits: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc) (Changing host)
[09:31:58] *** Joins: mjorgensen (mjorgensen@sourcehut/users/mjorgensen)
[09:38:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:38:43] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.251) (Ping timeout: 252 seconds)
[09:39:03] <Seirdy> foobaz: hope you're not running anything security-sensitive on a cpu with EOL'd microcode updates
[09:39:53] <Seirdy> i hope intel doesn't abandon haswell anytime soon or imma have to hunt for a new lappie. been eyeing the MNT Reform
[09:40:10] *** Joins: fikran (~fikran@user/fikran)
[09:41:58] <Seirdy> if you want to configure gopls in neovim+nvim-lsp, check https://github.com/neovim/nvim-lspconfig. my lsp.lua contains this: https://termbin.com/8tun
[09:47:13] <hackinghorn> does tab matter in golang like in python?
[09:47:25] <hackinghorn> I suppose no?
[09:47:26] <KirkMcDonald> hackinghorn: Identation is not significant.
[09:47:30] <KirkMcDonald> Indentation*
[09:47:38] <hackinghorn> ah thanks
[09:48:10] <KirkMcDonald> Newlines, however, can be, in the context of how semicolons are inserted in order to terminate statements.
[09:48:39] <KirkMcDonald> https://golang.org/ref/spec#Semicolons
[09:50:44] <hackinghorn> yeah, I notice there is no semicolon, it looks like newline replaces semicolon
[09:51:22] <KirkMcDonald> There's a little more to it than that; the section of the spec that I linked explains it.
[09:51:53] <hackinghorn> interesting
[09:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[09:55:13] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:01:51] *** Joins: normen (~normen@p200300d7173dc9002ddd763df57766f3.dip0.t-ipconnect.de)
[10:04:17] <Seirdy> hackinghorn: just let gofmt or gofumpt take care of formatting.
[10:05:34] <hackinghorn> ahh I see
[10:07:08] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:10:07] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 252 seconds)
[10:18:10] *** Quits: normen (~normen@p200300d7173dc9002ddd763df57766f3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:19:57] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Remote host closed the connection)
[10:22:58] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 268 seconds)
[10:24:48] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[10:27:27] *** Joins: darkapex (~darkapex@user/darkapex)
[10:27:58] *** Joins: chripell (~chripell@host-79-20-15-48.retail.telecomitalia.it)
[10:37:17] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[10:38:40] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[10:46:20] *** Joins: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4)
[10:49:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[10:50:18] *** Joins: mrig (~mrig@user/mrig)
[10:58:56] *** Joins: normen (~normen@p200300d7173dc9002ddd763df57766f3.dip0.t-ipconnect.de)
[11:02:20] *** Joins: seebs (~seebs@24.196.59.174)
[11:03:12] *** Joins: jcajka (~jcajka@ip-86-49-255-219.net.upcbroadband.cz)
[11:03:48] *** Joins: shka (~herr@109.231.62.239)
[11:05:13] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[11:05:33] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[11:07:01] *** Quits: zwindl (~abc@user/abc) (Ping timeout: 250 seconds)
[11:07:46] *** Joins: abc_ (~abc@user/abc)
[11:09:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[11:13:24] *** Joins: kodah (~kodah@user/kodah)
[11:16:45] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[11:18:59] *** Quits: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4) (Quit: WeeChat 3.2)
[11:31:31] *** Quits: normen (~normen@p200300d7173dc9002ddd763df57766f3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:35:19] *** iskarian is now known as Guest5838
[11:35:19] *** Quits: Guest5838 (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (cadmium.libera.chat (Nickname regained by services)))
[11:35:28] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[11:40:22] *** Joins: Giedrius (~giedrius@5.133.65.65)
[11:41:29] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[11:44:57] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[11:47:39] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[11:47:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:49:11] *** Joins: darkapex (~darkapex@user/darkapex)
[11:49:42] *** Joins: fikran (~fikran@user/fikran)
[11:57:32] *** Joins: chard (~chard@114.247.25.166)
[12:00:00] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 268 seconds)
[12:01:44] *** Joins: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4)
[12:07:48] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[12:10:56] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:12:00] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[12:12:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:18:18] *** Joins: x28girl (~x28girl@181.46.32.25)
[12:18:30] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 268 seconds)
[12:25:29] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[12:30:26] *** Quits: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4) (Quit: WeeChat 3.2)
[12:33:56] *** Joins: Atque (~Atque@user/atque)
[12:35:30] *** Quits: Giedrius (~giedrius@5.133.65.65) (Quit: Leaving)
[12:36:39] *** Joins: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4)
[12:38:45] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:50:20] *** Quits: seebs (~seebs@24.196.59.174) (Quit: Leaving)
[12:50:39] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:24aa:212:ed47:a149) (Read error: Connection reset by peer)
[12:50:43] *** Joins: rockyh (~rockyh@user/rockyh)
[12:53:54] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[13:01:03] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[13:06:32] *** Joins: haliucinas (~haliucina@5.20.153.21)
[13:14:20] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:15:32] *** Quits: Gnuman (~gnuman@user/gnuman) (Ping timeout: 252 seconds)
[13:17:35] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 265 seconds)
[13:19:53] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[13:20:36] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[13:23:20] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[13:26:48] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:27:15] *** Quits: clee (~clee@tali.t0k.org) (Ping timeout: 265 seconds)
[13:27:24] *** Joins: clee (~clee@tali.t0k.org)
[13:28:27] *** Quits: jespada (~jespada@2803:9800:9842:7a62:95e0:d2b5:ae88:676) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:30:09] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Quit: You have been kicked for being idle)
[13:31:17] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:32:20] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 260 seconds)
[13:33:48] *** Joins: shtirlic_ (~shtirlic@178.71.174.138)
[13:34:13] *** Joins: thing_ (~thing@user/thing)
[13:35:12] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[13:35:50] *** thing_ is now known as thing
[13:35:55] *** Quits: shtirlic (~shtirlic@95-55-26-114.dynamic.avangarddsl.ru) (Ping timeout: 252 seconds)
[13:40:13] *** Joins: shtirlic (~shtirlic@pppoe.178-65-240-63.dynamic.avangarddsl.ru)
[13:40:18] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:43:41] *** Quits: shtirlic_ (~shtirlic@178.71.174.138) (Ping timeout: 265 seconds)
[13:43:52] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907)
[13:57:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:59:05] *** Joins: fikran (~fikran@user/fikran)
[14:00:25] *** Joins: fef (~thedawn@user/thedawn)
[14:05:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:06:58] *** Joins: Gnuman (~gnuman@user/gnuman)
[14:07:31] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:08:16] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:2487:e856:4a33:3ecf:f907) (Ping timeout: 252 seconds)
[14:09:31] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[14:21:58] *** Joins: k0ta (~k0ta@103.108.94.37)
[14:22:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[14:23:33] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[14:23:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:25:07] *** Joins: usil (~krneki@244.193.71.34.bc.googleusercontent.com)
[14:28:53] *** Joins: neurocyte0 (~neurocyte@185.238.253.211)
[14:28:53] *** Quits: neurocyte0 (~neurocyte@185.238.253.211) (Changing host)
[14:28:53] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[14:29:28] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:30:43] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:30:51] <usil> hello. anyone knows how to parse this datetime format 2014-11-22D17:51:38.948471000
[14:35:27] <b0nn> what's the meaning of the 'd'?
[14:35:30] <k0ta> usil: that looks very similar to RFC3339Nano which is a constant in the time package
[14:35:45] <k0ta> usil: but RFC3339Nano uses T where the D is
[14:40:43] <usil> k0ta: thanks
[14:41:56] <fizzie> It also has a "Z07:00" at the end.
[14:44:04] <dostoyevsky2> > The project was later rewritten entirely in C because of performance problems due to the way Go interoperates with C: Go considers a function call into C that lasts more than ~20 microseconds as a blocking system call, in that case it will put the goroutine running that C call in waiting queue and resuming it will effectively cause a context switch, degrading performance
[14:44:52] <dostoyevsky2> This is from the FAQ of dqlite: https://dqlite.io/docs/faq
[14:45:15] <dostoyevsky2> But it's from a couple of years ago -- does this still hold true?
[14:46:53] *** Joins: jespada (~jespada@host244.190-3-30.dynamic.telmex.net.ar)
[14:49:05] <dostoyevsky2> > The added benefit of the rewrite in C is that it’s now easy to embed dqlite into project written in effectively any language since all major languages have provisions to create C bindings.
[14:49:34] <dostoyevsky2> From my experience it wasn't difficult to create c symbols from a Go program... e.g. for a libc interposer
[14:55:15] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:5992:e512:3ba2:7a52)
[14:56:50] <arahael> dostoyevsky2: Go is probably not the best choice if you're doing a lot of C interop, iirc.
[14:57:22] <arahael> dostoyevsky2: It's optimised towards not doing any C interop at all, and on most systems, there is no C code when running a Go application.
[14:59:06] <dostoyevsky2> arahael: how about calling go code via a C api?
[15:00:04] <arahael> dostoyevsky2: I've never done that, however I don't normally write Go code.  But the best way to use Go is to basically pretend C doesn't exist. The moment you start using C, you start drawing in a lot of the drawbacks of C.
[15:00:16] <arahael> dostoyevsky2: Eg, you make cross compilation much harder, and you become much less portable.
[15:00:42] <arahael> And also, the afforementioned performance problems because doing things the way C wants it is at odds with how Go wants it.
[15:02:28] <dostoyevsky2> arahael: yeah, but it's also interesting to switch out a subsystem in a C application with something quickly written in Go for writing a proof of concept or the like
[15:02:42] *** Joins: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de)
[15:02:50] <arahael> dostoyevsky2: Yeah, you can certainly do that. It just isn't the most optimal use of Go.
[15:03:03] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[15:03:56] <dostoyevsky2> Also you have companies like dynatrace: Dynatrace uses LD_PRELOAD to inject an agent into the Golang process.
[15:04:10] <arahael> Eh, that's quite normal.
[15:04:24] <dostoyevsky2> LD_PRELOAD applies to any program not necessarily written in go
[15:04:40] <arahael> Applies to anything using the dynamic loader, yes.
[15:05:40] *** Joins: Torro (Torro@gateway/vpn/protonvpn/torro)
[15:06:49] *** Quits: pi1 (~pi@177.223.162.41) (Ping timeout: 265 seconds)
[15:09:02] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[15:14:23] *** Quits: k0ta (~k0ta@103.108.94.37) (Quit: leaving)
[15:15:04] *** Joins: k0ta (~k0ta@103.108.94.37)
[15:15:17] *** Quits: k0ta (~k0ta@103.108.94.37) (Client Quit)
[15:15:43] *** Joins: k0ta (~k0ta@103.108.94.37)
[15:20:35] <iivvoo> Just reviewed some code with `for x, _ := range([5]int{}) ` - a trick to get 5 iterations. Creative, but I don't like it, since writing it out completely is just as long
[15:23:09] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[15:30:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[15:30:52] <A_Dragon> reads like someone just came from python
[15:31:42] <A_Dragon> arahael: you forgot the giant * for any network access and user usage
[15:31:53] <A_Dragon> if you dont request netgo your networking goes though libc
[15:31:57] <A_Dragon> user stuff always does, IIRC
[15:32:06] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[15:32:32] <fizzie> for x := range([5]struct{}{}) {...}  // "optimized" that for you ;)
[15:32:46] <A_Dragon> I mean its more optimal than the int example
[15:32:53] <A_Dragon> by about 5 bytes
[15:37:41] <fizzie> I don't see any differences in the generated code, so probably not really. Just on paper.
[15:38:17] *** Quits: chard (~chard@114.247.25.166) (Quit: WeeChat 2.8)
[15:38:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 250 seconds)
[15:46:42] *** Joins: gggp (~textual@60.10.194.42)
[15:46:45] *** Quits: gggp (~textual@60.10.194.42) (Read error: Connection reset by peer)
[15:55:44] *** Joins: frost (~frost@59.71.243.104)
[15:57:30] <A_Dragon> fizzie: struct{} is compiled to 0 bytes
[15:57:47] <A_Dragon> as opposed to a int which is at minimum 1 byte
[15:57:57] *** Joins: leah2 (~leah@vuxu.org)
[15:58:15] <A_Dragon> so when compiling a predefined array, other optimisations notwithstanding, the compiler *must* provide space for 5 ints
[15:58:40] <fizzie> Like I said, there's no difference in the generated code.
[15:58:52] <A_Dragon> really? interesting
[15:58:55] <fizzie> The compiler doesn't need to provide space for something that's not used.
[15:58:57] <A_Dragon> wonder if the array is used that changes
[15:59:02] <A_Dragon> yeah
[15:59:10] <fizzie> (Also, an int is either 4 or 8 bytes.)
[15:59:27] *** Joins: ofh (~felix@61.69.201.10)
[16:00:40] *** Quits: yelnah (~felix@220.240.238.12) (Ping timeout: 240 seconds)
[16:06:45] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 265 seconds)
[16:07:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:08:46] *** Joins: fikran (~fikran@user/fikran)
[16:10:10] *** Quits: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de) (Ping timeout: 260 seconds)
[16:12:51] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[16:22:13] <A_Dragon> fizzie: does it not try and go for the smallest? I cant remember Im still waking up :D
[16:22:27] <A_Dragon> or do you HAVE to use int8 if you want a byte
[16:32:17] *** Joins: [X-Scale] (~ARM@31.22.160.28)
[16:32:34] *** Quits: X-Scale (~ARM@83.223.226.16) (Ping timeout: 260 seconds)
[16:33:28] <fizzie> At least in terms of abstract semantics, it's always (spec quote) "uint: either 32 or 64 bits; int: same size as uint". Of course I imagine the compiler's allowed to do anything it likes if it can prove that wouldn't make a difference for the program.
[16:33:29] *** [X-Scale] is now known as X-Scale
[16:47:31] *** Joins: zwr (~zwr@191.47.94.157)
[16:48:42] <A_Dragon> yeah
[16:52:33] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100a)
[16:57:51] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 268 seconds)
[17:01:01] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[17:01:15] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[17:11:55] *** Joins: Torr (~Torr@user/torr)
[17:18:46] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5992:e512:3ba2:7a52) (Ping timeout: 260 seconds)
[17:20:39] *** Joins: llorllale (~llorllale@97.108.193.189)
[17:31:44] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:38:25] *** Joins: Compy_ (~compy@user/compy)
[17:48:04] *** Quits: Torro (Torro@gateway/vpn/protonvpn/torro) (Quit: leaving)
[17:50:02] *** Quits: llorllale (~llorllale@97.108.193.189) (Ping timeout: 260 seconds)
[17:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:54:53] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:04:45] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:05:05] *** Quits: Jmainguy1 (~Jmainguy@phy01.standouthost.com) (Remote host closed the connection)
[18:05:11] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:05:32] *** Joins: Jmainguy (~Jmainguy@phy01.standouthost.com)
[18:06:49] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:07:13] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:09:02] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:09:21] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:09:21] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:11:03] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:12:02] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:12:24] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:12:45] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:13:25] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:16:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[18:18:10] *** Joins: fikran (~fikran@user/fikran)
[18:34:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:34:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:34:09] *** Joins: wroathe (~wroathe@user/wroathe)
[18:40:49] *** Joins: marler8997 (~marler899@204.229.3.4)
[18:43:05] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[18:43:08] <arahael> A_Dragon: Interesting.  Actually when I did go it was mostly building and compiling on macos, then distributing and cross compiling to windows.  Because of course the target system is windows.
[18:43:18] <arahael> A_Dragon: And I do knwo that everything does go through C on windows.
[18:43:35] <arahael> I thought on linux by default it didn't use the libc at all, though?
[18:44:01] <A_Dragon> it'll use libc for name resolution (unless you set NETGO) and for user stuff (as in passwd)
[18:44:19] <A_Dragon> you can test this pretty easily, compile a program that uses neither and ldd it, then add networking etc
[18:45:08] <A_Dragon> using the system resolver is a good idea, it means that you obey /etc/hosts and co
[18:49:32] <arahael> Fair enough, and shouldn't be that frequent either.
[18:50:12] *** Joins: PlaydohPlato (~playdohpl@23-88-157-194.fttp.usinternet.com)
[18:50:36] <PlaydohPlato> Is there any known weirdness with HMAC-SHA1 signing?
[18:51:48] <PlaydohPlato> I'm calculating a hash in go and Go Playground and getting the same values, but using the same components (content and secret key) on various online HMAC-SHA1 generators I get different results
[18:51:59] <A_Dragon> arahael: https://github.com/golang/go/blob/master/src/net/net.go#L44
[18:52:03] <PlaydohPlato> And the various online generators all line up, same value
[18:52:19] <A_Dragon> oh actually that appears to have changed?
[18:52:30] <A_Dragon> PlaydohPlato: it those all likely have different whitespace
[18:52:59] <PlaydohPlato> Whitespace? In the content or?
[18:53:04] <arahael> A_Dragon: Says the default is pure go. :)
[18:53:11] <A_Dragon> arahael: yeah
[18:53:18] <A_Dragon> theres ...something that isnt default
[18:57:05] *** Joins: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4)
[18:58:17] <PlaydohPlato> I'm certain I'm doing the signing corrent according to all the hmac-sha1 examples and whatnot, it just produces a different result
[18:58:41] <PlaydohPlato> Trying to hit an API using one-legged oauth 1.0, and this signature might be the source of my woes
[18:58:59] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:59:20] <Sam> Maybe you can post a MWE showing what you're doing? I have done a lot of HMAC-SHA1 and it works fine, so I suspect there's something wrong with how you're writing it. Eg. using fmt.Println which is adding an extra "\n" to the end.
[19:01:00] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:01:08] <PlaydohPlato> https://pst.klgrth.io/paste/bvqmmx4j8ndxae2ez6d24u6d
[19:02:29] <PlaydohPlato> I've frozen the things that would vary (timestamp, nonce, etc) so I do get the same hash each time, and I'm dumping values and feeding them into other implementations which just give different results
[19:03:05] <Sam> For future reference, the playground is a better place for pastes. On IRC it's generally wise not to click through links to random domains that you're not familiar with, and you can run the examples on the playground :)
[19:03:23] <PlaydohPlato> Ah right! I have multiple playground tabs open and totally forgot it existed
[19:05:23] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[19:06:26] <PlaydohPlato> https://play.golang.org/p/9ht0xDePn99
[19:06:28] <PlaydohPlato> Corrected
[19:06:50] <Sam> What site are you comparing against?
[19:07:09] *** Joins: seebs (~seebs@24.196.59.174)
[19:08:02] <PlaydohPlato> Various, I'll post a few: https://www.freeformatter.com/hmac-generator.htm https://codebeautify.org/hmac-generator https://wtools.io/generate-hmac-hash
[19:09:00] <PlaydohPlato> They produce the same HMAC-SHA1, but the output from the playground is different
[19:10:16] <Sam> The first one appears to output the exact same thing, are you just forgetting that you append "&" to the secret or something?
[19:10:34] <PlaydohPlato> Which one, the first paste?
[19:10:41] <Sam> well, it's in hex format and yours is in base64 ,maybe that's the difference you're seeing?
[19:10:46] <Sam> But yes, the first one in that list you provided
[19:11:00] *** Joins: edrocks (~Ed@user/edrocks)
[19:11:03] <PlaydohPlato> That first one is straight from my code
[19:12:48] <Sam> Just ran the second one, it outputs the same thing too.
[19:12:51] <PlaydohPlato> And the OAuth 1.0 spec specifies using base64 encoding
[19:13:04] <PlaydohPlato> Same thing as the first or second golang example?
[19:13:25] <Sam> Your playground example outputs the same thing as the first two links you sent to web HMAC-SHA1 calculators
[19:13:36] <Sam> Your encoding is different than theirs (and that's fine), but the results are the same.
[19:14:44] <PlaydohPlato> Is the base64 encoding is why it's different?
[19:15:10] <Sam> Yes, the actual bytes underneath are the same
[19:15:26] <PlaydohPlato> Ahh the online ones use hex then?
[19:15:31] <Sam> Yes, that's correct.
[19:15:37] <PlaydohPlato> Looking at it now that makes more sense
[19:16:37] <Sam> Here is a modified version of your playground example to show both outputs, for comparison: https://play.golang.org/p/nUZQj9M89Pt
[19:18:09] <PlaydohPlato> I see! Let me run some tests with my real code
[19:20:45] <PlaydohPlato> Ok! Dumping the hex encoded version I see the underlying bytes ARE the same!
[19:20:58] <PlaydohPlato> I thought I was going crazy, thank you for the help
[19:21:19] <PlaydohPlato> One thing checked off the list of "things to debug about my oauth request"
[19:21:44] <ikke> Oauth 1?
[19:22:02] *** Joins: christophergray (~christoph@190.148.53.200)
[19:22:23] <PlaydohPlato> Yep
[19:22:26] <PlaydohPlato> One-legged
[19:22:30] <ikke> I feel you
[19:22:39] <ikke> years ago I had to debug oauth 1 as well
[19:22:51] <PlaydohPlato> The service "Postman" can hit the endpoint right, but their signature is different in their request
[19:23:05] <PlaydohPlato> Doesn't help my response is a whopping "500 Error, contact the admin"
[19:23:41] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:24:41] *** Joins: badmap (~badmap@user/badmap)
[19:25:30] <badmap> How does it make sense that a go function can return a pointer to a variable created inside of that function's scope, for use outside of the function's scope?
[19:25:42] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[19:25:56] <badmap> I didn't think much of it before... but I've since learned Rust.
[19:27:08] <Sam> badmap: Go performs escape analysis and sees that the pointer is returned, so it allocates the original thing on the heap so that it can be accessed later. As long as there is a pointer to it, it won't be garbage collected.
[19:28:16] <marler8997> I'm working on getting go cross-compilation to aarch64-windows via "zig cc".  I'm able to build/call into simple dlls.  However the larger application were testing runs into an "abort" call in runtime.morestack.  It's the first abort in the assembly.  Could this be caused by a stack overflow?
[19:28:31] <badmap> Sam: makes sense, thanks.  Just out of curiosity: would the original assignment have generally been on the stack?
[19:29:31] *** Quits: christophergray (~christoph@190.148.53.200) (Quit: WeeChat 3.2.1)
[19:30:07] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[19:30:10] <badmap> A bit of Googling looks like that is the case
[19:30:47] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[19:32:29] <Sam> badmap: yes, there are a number of factors that can make something be heap allocated instead, but in general things will go on the stack unless they need to be accessed from somewhere else
[19:33:00] <Sam> Go's philosophy is that this generally isn't worth bothering with. Just let Go do what it does and it will be okay for 99.9% of use cases. It's rare that you'd have to optimize that.
[19:33:26] <Sam> (although for libraries where I don't know how they'll be used I generally try to make sure the API doesn't force heap allocations if possible and leave it up to the user)
[19:33:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:37:26] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:37:50] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[19:38:53] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[19:39:31] *** Joins: rockyh (~rockyh@user/rockyh)
[19:43:07] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[19:46:12] *** Joins: FUZxxl (~fuz@fuz.su)
[19:46:15] <FUZxxl> Hello!
[19:46:32] <FUZxxl> How can I provide a -X argument through -ldflags where the value of the symbol has a space?
[19:47:08] <FUZxxl> I tried -ldflags="-X main.builtBy='FreeBSD ports'" but go didn't like that.
[19:48:37] <edrocks> FUZxxl -ldflags="-X \"somepkg.Branch=$BRANCH\"
[19:48:40] <edrocks> escape with `\"`
[19:48:49] <FUZxxl> uh oh
[19:48:52] <FUZxxl> I'll try that.
[19:49:10] <edrocks> oh sorry use `-ldflags="-X \"somepkg.Branch=$BRANCH\""` there is another " at the end
[19:49:16] <edrocks> was pulling from my scripts
[19:49:20] <FUZxxl> ok
[19:49:34] <FUZxxl> so basically just " instead of ' and ofc you need to escape that from the shell
[19:49:48] <edrocks> yea
[19:50:39] <edrocks> might not be correct explanation but that's the correct way. Not a shell guru(wrote this many years ago at this point)
[19:50:52] <Sam> That's only needed if you're using a variable. If you're just building as in the original example you can just surround the whole argument in quotes: -ldflags="-X 'main.builtBy=FreeBSD ports'"
[19:51:02] <Sam> (note the first ' that was moved)
[19:51:21] <FUZxxl> hm ok
[19:51:23] <FUZxxl> I'll try that
[19:54:43] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[19:55:02] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:56:14] <FUZxxl> yeah that worked, nice!
[19:56:19] <FUZxxl> Thanks Sam, edrocks
[20:03:06] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[20:06:59] <telemachus> This came up a few weeks ago here, but are other people still unable to view source code links from pkg.go.dev in Chrome? (If it matters, I'm on macOS Big Sur, and Chrome is 93.0.4577.82). I can see source code in Firefox on the same machine, but not in Chrome.
[20:08:13] <telemachus> To clarify, the links are (e.g.) https://cs.opensource.google/go/go/+/master:src/container/list/list.go
[20:08:24] *** Quits: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4) (Ping timeout: 268 seconds)
[20:08:51] <telemachus> If I try to visit that link in Chrome, I see "Permission denied: Please contact the administrator"
[20:10:01] <PlaydohPlato> Man I swear I'm following the OAuth spec, I just don't get it
[20:10:02] <edrocks> telemachus works for me on latest macos/chrome
[20:10:42] <telemachus> edrocks: Thanks. I have an adblocker and Ghostery, but I've definitely turned both off in Chrome.
[20:11:04] <telemachus> The day it came up, I wasn't the only one having the problem, but I still can't imagine what it is.
[20:11:06] <edrocks> telemachus im using adblockplus if that helps. Have you tried in incognito or by creating a new chrome profile?
[20:11:43] <edrocks> i had issues with chrome service workers last week randomly
[20:11:54] <telemachus> edrocks: thanks for the suggestion. Incognito works.
[20:12:08] <telemachus> Which, okay, now I am going to have to take it somewhat personally, lol.
[20:18:15] <telemachus> edrocks: And creating a new profile works. Thank you. I'm not really sure I know what this means, but it's a start.
[20:19:12] <edrocks> telemachus Try right click inspect, go to application, storage, clear site data
[20:19:17] <edrocks> in your main profile
[20:21:03] *** Joins: bkircher (~bkircher@2001:a61:2444:eb01:b074:a8a9:4db6:bbaa)
[20:22:29] *** Joins: saml (~saml@38.122.227.210)
[20:24:22] *** Quits: saml (~saml@38.122.227.210) (Client Quit)
[20:24:51] *** Joins: saml (~saml@38.122.227.210)
[20:24:59] <saml> hello
[20:25:11] <edrocks> saml how are you?
[20:25:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[20:26:03] <saml> i'm good
[20:26:04] *** Quits: chripell (~chripell@host-79-20-15-48.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[20:27:33] *** Joins: fikran (~fikran@user/fikran)
[20:29:12] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[20:30:05] <badmap> myStruct.mutex.Lock(); defer myStruct.mutex.Unlock()   vs   myStruct.mutex.Lock(); ...; myStruct.mutex.Unlock(); return x
[20:30:18] <badmap> Why does the latter deadlock, but not the first?
[20:30:26] <badmap> I thought there were semantically similar enough
[20:30:31] <badmap> s/there/they/
[20:30:50] <saml> probably due to ...;  part
[20:31:11] <saml> do you ever return in ...;  without Unlock() ?
[20:31:16] <edrocks> a lot of people forget to unlock during the error conditions
[20:31:18] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[20:31:45] <badmap> homer_going_back_into_the_bush.gif
[20:32:01] <badmap> thanks both ;)
[20:34:01] <telemachus> edrocks: Thanks for the sugestion. Clearing site data didn't help, but I will likely nuke the profile and start over. Thanks.
[20:34:22] <edrocks> telemachus you can try clearing your entire cache
[20:34:46] <edrocks> telemachus also try restarting the browser or os. I was having weird issues with chrome 93 on several computers last week
[20:36:30] <badmap> Is there a means to _prevent_ clients from using your library concurrently/in goroutines, if it's not concurrency-safe?
[20:36:41] <badmap> (Besides actually implementing such safety, or writing a note in the docs)
[20:37:09] <edrocks> badmap usually just documentation however you could do some magic with a blocking channel/select to return an error maybe
[20:37:23] <edrocks> haven't ever seen it done nor would I recommend it
[20:37:50] <badmap> edrocks: yeah, was thinking more theoretically in case it led to me discovering something new :)
[20:38:02] <edrocks> badmap the promoted way is to just document it
[20:38:03] <badmap> I shall steer clear of magic in the course of my engineering
[20:38:18] <edrocks> stdlib uses docs in several places for this
[20:38:19] *** Quits: znpy (~znpy@user/znpy) (Read error: Connection reset by peer)
[20:38:44] <edrocks> i think non global math random funcs not being goroutine safe is one of the biggest examples
[20:39:01] <edrocks> also the largest complaint :)
[20:40:14] <FUZxxl> edrocks: but making them goroutine safe is a huge performance impact
[20:40:17] *** Joins: znpy (~znpy@user/znpy)
[20:40:21] <FUZxxl> when you usually don't need that
[20:40:34] <edrocks> FUZxxl I meant making several of the backing implementations public
[20:40:59] <edrocks> math/rand has little for options and there has been several calls to upgrade it. There is a version in /x but they basically halted progress on it some time ago
[20:41:39] <FUZxxl> ah yes
[20:41:42] <FUZxxl> maybe that would work
[20:42:05] <badmap> It seems a shame that concurrency safety isn't codified in some manner beyond an informal note, across libraries
[20:42:52] <edrocks> badmap in practice it doesn't come up too often
[20:42:56] <FUZxxl> Yes.  The documentation could really use concurrency information
[20:43:13] <edrocks> it is quite a pain when it does though
[20:43:34] <FUZxxl> badmap?
[20:44:25] <telemachus> edrocks:  I found the culprit: duckduckgo. I use it as my default search engine, and it installs a privacy blocker as well. When I disabled the privacy blocker, everything was fine again.
[20:44:44] <telemachus> So, in case someone else brings up the problem, ask them about duckduckgo
[20:44:56] <edrocks> telemachus nice! Happy you got it fixed
[20:45:07] <badmap> As long as the docs note down when it's NOT safe.. better than nothing!
[20:45:11] <telemachus> edrocks: Yup. Thanks again for your help.
[20:45:39] <badmap> edrocks: I'd have thought it _would_ come up often; concurrency isn't a rare thing these days
[20:46:30] <edrocks> badmap it is but usually you are already in a request handler or something doing it sync from there on out. If you are using concurrency it's usually passing around some local variables most of which are safe
[20:46:46] <edrocks> guess it depends if you are making web apps or something else though
[20:47:45] *** Joins: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de)
[20:47:56] <badmap> edrocks: yeah I see what you're getting at
[20:48:18] <edrocks> it's very much a pain and more common in anything lower level like network protocols/the underlying server code. I've done that and it definitely gets complicated
[20:48:46] *** Joins: arcatech (~arcatech@user/arcatech)
[20:48:48] <edrocks> connection handling and processing can require a lot of concurrency/channels/mutexes/etc
[20:50:40] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:51:07] <Alina-malina> Set $GOROOT_BOOTSTRAP to a working Go tree >= Go 1.4.  i am trying to compile go for my specific architecture but i am getting this error, do i have to do this to my go binary file?
[20:51:57] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Quit: Leaving.)
[20:52:04] <FUZxxl> Alina-malina: you need to compile a boostrap toolchain to build Go
[20:52:11] <FUZxxl> what architecture and operating system are you on?
[20:52:16] <Alina-malina> armv7
[20:52:20] <FUZxxl> OS?
[20:52:27] <Alina-malina> armbian
[20:52:45] <FUZxxl> https://golang.org/dl/go1.17.1.linux-armv6l.tar.gz
[20:52:53] <Alina-malina> its not working
[20:52:55] <FUZxxl> ^ you can use this toolchain as a bootstrap
[20:52:59] <FUZxxl> it is not?
[20:53:07] <Alina-malina> no i am getting error
[20:53:33] <PlaydohPlato> I did it! So the API documentation linked to a github ReadMe.md for the various OAuth flow specs, and their description for OAuth 1.0 One Legged specified oauth_token as "Empty string". What ACTUALLY needed to happen, was to just not include oauth_token at all!
[20:54:20] <FUZxxl> Alina-malina: what error do you get?
[20:56:09] <Alina-malina> oh sheesh it worked
[20:57:07] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[20:57:53] <Alina-malina> so weird, i download you tar.gz file and it worked, but before that it was giving error
[20:57:58] *** Quits: l2dy (~l2dy@user/l2dy) (Ping timeout: 252 seconds)
[20:58:02] <Alina-malina> anyways thanks FUZxxl
[21:02:03] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[21:05:08] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[21:09:35] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:13:31] *** Quits: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de) (Ping timeout: 252 seconds)
[21:14:27] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[21:17:18] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:21:07] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:21:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:21:35] *** Joins: novns (~novns@user/novns)
[21:25:40] *** Joins: zkanda (~zkanda@box.makean.art)
[21:26:14] *** Quits: badmap (~badmap@user/badmap) (Ping timeout: 265 seconds)
[21:33:11] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:36:44] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[21:38:50] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:41:57] *** Joins: spm (~spm@204.75.143.6)
[21:45:40] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[21:46:46] <kodah> PlaydohPlato: fwiw, oauth is tricky
[21:51:07] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:51:08] *** Joins: tnez_ (~el@179.50.90.141)
[21:52:12] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
[21:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:55:07] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:56:41] *** Quits: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com) (Ping timeout: 265 seconds)
[21:58:39] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
[21:59:45] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:02:55] *** Quits: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com) (Ping timeout: 252 seconds)
[22:13:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:15:59] *** Joins: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de)
[22:17:15] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
[22:17:21] *** Joins: src (~src@user/src)
[22:18:48] *** Quits: jcajka (~jcajka@ip-86-49-255-219.net.upcbroadband.cz) (Quit: Leaving)
[22:18:55] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[22:21:20] *** Quits: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de) (Ping timeout: 265 seconds)
[22:21:34] *** Quits: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com) (Ping timeout: 252 seconds)
[22:29:20] <Tv_> i've given up on the idea that there would be such a thing as oauth. there's just google-oauth, facebook-oauth, and so on
[22:33:34] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2.1)
[22:35:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:36:55] *** Joins: fikran (~fikran@user/fikran)
[22:39:29] *** Joins: plasticmae (~plasticma@cpe-172-249-151-214.socal.res.rr.com)
[22:39:31] <saml> o in oauth is only. google only auth
[22:43:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:45:17] *** Joins: fikran (~fikran@user/fikran)
[22:45:46] <saml> so i have a table. instead of adding new columns to the table, I created a similar table (actually a different database and http service). now i'm in trouble
[22:46:35] <saml> migrating data from old table to the new table. + migrating traffic to old service to new service.  in the wild, there are many older version of mobile apps running
[22:47:43] <saml> old app hitting old service hitting old table.  I could change old service to hit new table. but risk is that old app will break
[22:47:48] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
[22:48:25] <saml> so i created new service that new apps use. old apps use old service.  so now i need to replicate old table updates to new table
[22:52:16] *** Quits: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com) (Ping timeout: 265 seconds)
[22:54:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:56:04] <eric_hill> saml, welcome to the v1/v2 problem :)
[23:09:07] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[23:09:50] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[23:10:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:10:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:10:48] *** Joins: wroathe (~wroathe@user/wroathe)
[23:13:28] *** Joins: hikhvar796073809 (~thelounge@x4dbe6818.dyn.telefonica.de)
[23:15:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[23:17:00] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
[23:21:49] *** Quits: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com) (Ping timeout: 268 seconds)
[23:24:18] <saml> only if it's easy to write high quality DB replication plugin
[23:24:51] <saml> people end up replicating to kafka and have consumers process the log
[23:35:25] *** Joins: internut_ (~internut@98.38.226.136)
[23:39:06] *** Quits: internut (~internut@2601:280:4e00:7b70:9dfa:d458:d9ab:7ddd) (Ping timeout: 260 seconds)
[23:39:37] <Tv_> and many of those people claim nosql is inferior because it's not ACID, while their mutation-ingest queue can have a wait time of a minute...
[23:40:08] <Tv_> that or reading from stale sql replicas while foaming at the mouth about ACID
[23:42:11] <Tv_> saml: is there a reason you can't make the "old service" use the new database?
[23:42:45] <Tv_> apart from microservices self-flagellation, that is
[23:44:30] <saml> old app depend on old service. and switch DB and maintaining backward compatibility isn't so easy. But that should be doable
[23:44:41] <saml> switching*
[23:45:20] <saml> business logic changed a bit as well. :P  it's a mess.   s/mess/webscale/
[23:45:22] <Tv_> you're complicating things with multiple separate databases, apart from that it sounds like "just" a sql migration
[23:46:47] <saml> yeah i lost most of my hair. :(
[23:47:34] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[23:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[23:56:22] *** Joins: badmap (~badmap@host81-148-249-18.range81-148.btcentralplus.com)
