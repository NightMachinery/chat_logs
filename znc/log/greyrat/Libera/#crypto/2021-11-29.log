[00:03:38] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[00:08:41] *** Quits: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[00:10:39] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[00:10:46] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[00:11:00] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:ca0:b92a:b174:90a0)
[00:11:05] <neiluj> Hello!
[00:11:18] <Alipha> neiluj: hi
[00:14:07] <neiluj> A question about CBC. Say you encrypt with AES-128 in CBC mode (block size of 128 bits), then you need the initial vector to decrypt it.
[00:14:15] <neiluj> Correct?
[00:14:34] <iz> yup
[00:15:14] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[00:15:16] <iz> well, to decrypt the first block
[00:15:21] <iz> any other block and you don't need it
[00:15:26] <Alipha> neiluj: typically, people just prefix the IV (or nonce) to the ciphertext when they send/store it. no, the IV (nor nonce) needs to be encrypted--it's not sensitive information
[00:16:46] <int-e> . o O ( warning: mangled negations detected )
[00:17:25] <neiluj> Thanks. So now I'm trying to define a Diffie Hellman key exchange protocol between two peers in a peer-to-peer network. One peer sends a DHKeyRequest(g) with g in a suitable DH group. Then the other peer replies back with a DHKey(g^s1) with its private key, the other one replies with DHKey(g^s1^s2), thereby forming a symetric key.
[00:17:48] <neiluj> But anyway, my question was about if the IV should be given along with the encrypted message.
[00:18:06] <neiluj> which it should, otherwise the first block cannot be decrypted
[00:18:25] <iz> yup
[00:18:39] <Alipha> neiluj: correct. and note that each message should have a different randomly-generated IV
[00:19:03] <neiluj> *DHKey(g^s2) oops
[00:19:32] <neiluj> (not DHKey(g^s1^s2), that's the secret)
[00:20:00] <neiluj> Alipha: thanks, this clears things up!
[00:20:20] <int-e> a^b^c typically means a^(b^c) by convention, (g^s1)^s2 = (g^s2)^s1 will be the key
[00:20:49] <neiluj> Is it mandatory to follow an existing protocol defined in an RFC? For instance 2631?
[00:20:58] <neiluj> int-e: indeed, thanks for pointing it out
[00:21:32] <neiluj> Or is the one described above sufficient for low sensitive info?
[00:22:45] <int-e> Hmm. Well if you follow a standard you have a better chance of avoiding subtle mistakes (because those standards are detailled and reviewed by the community)
[00:23:13] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:23:25] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:23:49] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[00:31:20] <neiluj> Indeed, thanks
[00:33:59] <neiluj> Oh, if the message contains a its signature at the end, should we encrypt it as well?
[00:35:54] <iz> depends on if you want to keep who sent it secret or not
[00:36:07] <iz> but i think usually you would
[00:36:25] <iz> because otherwise it's confusing if the signature is meant for the ciphertext or the plaintext after you decrypt
[00:36:32] <MacGyver> Are we reinventing surreptitious forwarding again?
[00:37:49] <MacGyver> neiluj: Did you mean "encrypt at all" or "encrypt the signature"?
[00:38:59] <MacGyver> neiluj: Not encrypting the signature sounds an awful lot like "encrypt-and-MAC" which is the most iffy of the EtM, MtE, E&M constructions.
[00:39:54] <neiluj> yeah, not encrypting the signature
[00:40:05] <neiluj> ok:)
[00:40:07] <neiluj> oh
[00:40:18] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Quit: Pouf c'est tout !)
[00:40:20] <Alipha> if you don't encrypt the signature, then you should make sure that something in the message associates the sender with the signature. otherwise, an attacker could remove the signature on a message, attach their own signature, and claim they wrote the message
[00:40:43] <yawkat> A signature can also leak the message. 
[00:41:16] <neiluj> speaking of signature, it could be created using a hmac function since we got a shared key
[00:41:43] <neiluj> Alipha: indeed
[00:42:03] <MacGyver> Then it's not a signature.
[00:42:05] <Alipha> neiluj: you should refer to that a MAC then, not a signature, as to not confuse people :-)
[00:42:25] <MacGyver> Note that there's a distinct difference between "signature" and "MAC" precisely because of the whole "shared key" business.
[00:42:42] <Alipha> neiluj: also, using HMAC with a key generated from DH does not prevent MITM attacks
[00:43:09] <MacGyver> A signature proves which one of you could've generated the message -- a MAC only proves *any* one of you generated the message.
[00:43:18] <neiluj> Alipha: you'd need a nonce?
[00:43:44] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:43:45] <Alipha> neiluj: you need previously-shared knowledge or a third party to validate who you say you are
[00:44:41] <neiluj> a certificate?
[00:45:08] <MacGyver> That's often how that's done, yes.
[00:45:31] <MacGyver> There's other options like sharing public key (fingerprints) out-of-band.
[00:45:32] <neiluj> argh, if the protocol can be attacked through MITM then the DH key exchange is pointless
[00:45:38] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[00:45:44] <MacGyver> It's not pointless -- it'
[00:46:00] <MacGyver> It's not pointless -- it's required to establish an authenticated symmetric key for that conversation.
[00:46:21] <MacGyver> But it doesn't magically impart identification / authenticity properties.
[00:46:43] <neiluj> oh yeah, but you need authenticity
[00:46:51] <Alipha> which then you'd sign the DH exchange using public/private keys
[00:46:52] <MacGyver> Welcome to the wondrous world of the most difficult problem in cryptography.
[00:46:59] <Alipha> typically
[00:47:10] <edk> well, because identity is a problem outside cryptography, really :P
[00:47:18] <MacGyver> Figuring out how to ensure you're actually talking to the person you want to talk to.
[00:47:28] <iz> yeah, basically DH solves what it solves and doesn't solve what it doesn't solve :b
[00:47:29] <neiluj> Ouch, I'm a bit lost (and that's from someone studying crypto :s)
[00:47:46] <MacGyver> Yeah this is what they don't tell you.
[00:47:50] <MacGyver> The maths're easy.
[00:47:59] <MacGyver> (For some definitions of easy)
[00:48:21] <MacGyver> The social/technical problem is (too) often brushed under the rug until after you've graduated :P
[00:48:54] <neiluj> :)
[00:48:59] <edk> but yeah unauthenticated key agreement isn't pointless; once you've established a secure channel you can use digital signatures to figure out if it's connected to the right thing
[00:49:02] <MacGyver> So you *can* do an authenticated DH key exchange, again, there's standard protocol formats for that.
[00:49:03] <int-e> broaden your horizons, read spy novels
[00:49:44] <MacGyver> The trick is getting that initial piece of data you need to use for the authentication to both parties.
[00:49:45] <iz> i still can't believe there are multiple spy novels and movies starring tom cruise about a spy called jack reacher
[00:49:58] <int-e> (I'm kidding, but mistaken identities and various kinds of social engineering are often a feature in those)
[00:50:21] <Alipha> neiluj: if alice wants to talk to bob, mallory can easily be in the middle if you don't provide some kind of identity verification, like a certificate. when alice tries to set up a communication with bob, mallory intercepts it. so then alice <-> mallory end up doing DH, and then mallory does his own DH with bob. now alice has a shared secret with mallory, thinking she's talking to bob, and mallory has his own
[00:50:23] <Alipha> different shared secret with bob, where bob thinks he's talking with alice
[00:50:27] <MacGyver> TLS uses a tree with 150 certificate authorities where trust is rooted; Signal uses Trust-on-first-use with optional fingerprint checking; so does whatsapp.
[00:53:14] <edk> i think all those things separate the key agreement problem from the authentication problem
[00:53:55] <neiluj> Alipha: very clear explanation of MITM, thanks!
[00:56:07] <int-e> Cryptography is full of four-letter words (well, acronyms) like PAKE
[00:56:12] <neiluj> Just read about MAC vs HMAC - HMAC takes a hash function to derive a MAC (a signature)
[00:56:33] <neiluj> So I guess with my above protocol I'd need a HMAC(sha128)
[00:56:42] <neiluj> since the block size is 128 bits
[00:57:01] <Alipha> no, block size is irrelevant to hmac
[00:57:31] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[00:58:20] <neiluj> Oh yeah, it's just the size of the signature. So any hash function would do the job fine, no?
[00:58:39] <MacGyver> s/signature/MAC/
[00:58:59] <Alipha> we reserve the term "signature" for specifically public key signatures
[00:59:03] <edk> normally when we talk about signatures we mean something that can be verified by more people than can create it
[00:59:08] *** Quits: CryptoClub (~fafs@54.red-83-58-70.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[00:59:08] <neiluj> ah, good to know
[00:59:13] <iz> yeah, anything can go in, hash output is the mac
[01:02:02] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[01:03:57] <mats1> http://www.loper-os.org/?p=3969#11-what-is-pest "Pest is a peer-to-peer network protocol intended for IRC-style chat. It is designed for decentralization of control, resistance to natural and artificial interference, and fits-in-head mechanical simplicity -- in that order."
[01:04:55] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[01:05:56] *** Joins: d1cor (~diego@179.63.242.100)
[01:07:02] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[01:07:46] <iz> the unfortunate fate of decentralized crypto chat networks, is they inevitably get used for stuff you wouldn't approve of
[01:08:04] <iz> like the fate of freenet
[01:08:28] *** Joins: holgersson (~quassel@user/holgersson)
[01:08:54] <sonOfRa> iz: tell me about it :D
[01:09:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:09:14] <iz> once i realized that, i kinda got less enthused about making something like that
[01:09:42] <sonOfRa> Used to run a tox bootstrap node because I also contributed, someone being investigated for csam connected to my node, I got my home searched
[01:11:04] <iz> yeah, freenet eventually turned into a csam haven
[01:11:17] <sonOfRa> 0/10 experience, would not recommend having the cops knock at your door at 630 in the morning on a monday and take all your electronics
[01:11:38] <iz> uhg, yeah, that sounds terrible
[01:12:35] *** Quits: Doraemon (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[01:12:56] *** Joins: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de)
[01:13:07] <edk> i feel like that was always going to happen to freenet
[01:13:18] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:13:45] <iz> i think it's inevitable for things like that, as time goes on
[01:14:26] <edk> yeah, but freenet specifically was very bad at doing most of the things you'd want an anonymous communication network for other than very illegal content distribution
[01:26:09] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:54] <iz> it turns out to be the same design goals, even if you think it's meant just for trading mp3s or movies and protecting ppl from the RIAA or MPAA
[01:31:07] <iz> or whatever else you had intended
[01:35:23] *** Quits: d1cor (~diego@179.63.242.100) (Ping timeout: 256 seconds)
[01:42:45] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 256 seconds)
[01:47:16] <mats1> well, you can just unpeer the guilty parties
[01:48:14] <neiluj> oh just a question out of curiosity
[01:48:49] <neiluj> are the algorithms used in for instance whatsapp for end-to-end encryption really secure?
[01:49:15] <neiluj> like, governments can sometimes decrypt conversations, so how do they do?
[01:49:36] <neiluj> computing power is enough, or does it also involve social engineering of any sort?
[01:50:34] <neiluj> it's a bit dumb since governments keep these techniques secret obviously :)
[01:51:20] <ericonr> I don't actually trust whatsapp e2e lol
[01:51:35] <ericonr> since it's an update away from leaking my keys to their server
[01:53:31] <neiluj> oh yeah it's closed source, they control the keys if they want
[01:53:59] <Alipha> neiluj: governments certainly aren't brute force decrypting conversations--the computing power required is more than all computers in the world combined.
[01:55:09] <neiluj> timing attacks maybe
[01:55:26] <neiluj> since those are actually practical in a network
[01:55:40] <Alipha> neiluj: conversations might be getting recorded before or after they're sent, via screen recording or keylogging software or such. or, since key management is done for you with whatsapp, they could be asking facebook to add their own keys to conversations they want to listen to
[01:56:09] <neiluj> Oh yeah
[01:56:38] <neiluj> It's ridiculous how you can hack phones -- had once a demo from a friend: pretty scary
[02:07:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[02:08:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:13:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:14:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:15:29] <neiluj> regarding the man in the middle attack on my DH key exchange: if the messages containing the intermediate keys g^s are signed using asymmetric crypto, there's no MITM possible, no?
[02:16:00] <neiluj> and I read that encrypt-then-MAC is actually theoretically better and thus recommended over MAC-then-encrypt
[02:17:13] *** Quits: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[02:17:38] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[02:23:38] *** Quits: mouseghost (~draco@user/mouseghost) (Ping timeout: 268 seconds)
[02:29:25] <Alipha> neiluj: correct, you sign the DH messages to prevent MITM
[02:30:39] <ericonr> So, if someone were using btrfs over LUKS, which means the plain text contains data+checksums, can that be considered an "authenticate then encrypt" algo? If not, what does the checksum lack to fully protect the data?
[02:30:43] <Alipha> neiluj: and yes, do encrypt-then-MAC. Moxie Marlinspike coined the term "Cryptographic Doom Principle": https://moxie.org/2011/12/13/the-cryptographic-doom-principle.html
[02:31:02] <ericonr> Lol it seems my question was topical :p
[02:31:04] <MacGyver> ericonr: A key.
[02:31:18] <MacGyver> ericonr: The data in your case isn't authenticated, just integrity-protected.
[02:32:03] <Alipha> also note that, again, signatures are different than MACs, so "sign then encrypt" and such is a different question. also note that you *should* still MAC your encrypted messages even if they are signed.
[02:33:10] <Alipha> ericonr: checksums only protect from accidental modification, not malicious modification
[02:34:11] <ericonr> Like "2 bit flips in the correct position to make the check pass for fake data are unlikely"  but if you have an adversary it's quite possible to do it?
[02:34:33] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[02:35:00] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[02:35:47] <ericonr> I'm mostly wondering what *sort* of manipulations can happen when you're using a cryptographic hash, since presumably you can't predict the effects of your bit flips in the stream
[02:36:47] <ericonr> I understand it's not good crypto practice either way, but I don't particularly understand what an attack would look like 
[02:37:12] <Alipha> ericonr: if you're using a cryptographic hash, then no manipulations are possible without the key
[02:37:15] <ericonr> Alipha: also, can you explain what a MAC is still necessary even with signatures? Cheaper to check or something else?
[02:39:43] <neiluj> Alipha: why should we still MAC encrypted messages even if they are signed?
[02:40:07] <neiluj> the DH exchange was signed with the same keys as the signature
[02:40:22] <neiluj> so we don't even need the MAC
[02:40:37] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 265 seconds)
[02:40:44] <neiluj> well, I have nothing to back up this claim
[02:40:47] <neiluj> :)
[02:43:31] <Alipha> neiluj: ericonr: so, there's a few different scenarios depending upon if you're encrypting the signature and whether the signature is a signature of the plaintext or the ciphertext. so, let's consider a problem with each different scenario
[02:44:33] <Alipha> if you're encrypting both the plaintext and the signature, then you have to decrypt first before verifying the signature, which falls under the cryptographic doom principle i mentioned above. specifically, something like a padding oracle attack would be possible if you're using a block cipher
[02:45:13] <ericonr> That one I can see
[02:45:20] <Alipha> if you're encrypting just the plaintext and the signature is of the plaintext, then again you have to decrypt first before verifying the signature => cryptographic doom
[02:46:27] <Alipha> if you're encrypting the plaintext and the signature is of the ciphertext, then you may be vulnerable to an attacker replacing the signature with his own signature and claiming the message came from him instead of you
[02:47:16] <ericonr> So for something like a backup software, signing ciphertext would be fine
[02:47:55] <Alipha> sure
[02:47:57] <ericonr> Though at that point just using MAC might be simpler
[02:48:07] <ericonr> Since you're the sender and the receiver 
[02:49:31] <neiluj> Alipha: argh, I was suggesting c=encrypt-then-MAC(or the other way round) then apply c||ECDSASign(c)
[02:50:00] <neiluj> which is what you describe as unsecure
[02:50:19] <MacGyver> Note that signing a ciphertext is a somewhat weird operation, because the security properties it has aren't what many people think it has.
[02:50:43] <MacGyver> Alipha already pointed out the case where an attacker can replace the signature.
[02:50:52] <MacGyver> But there's also the loss of non-repudiation on the plaintext.
[02:50:57] <neiluj> omg
[02:51:07] <Alipha> neiluj: you can sign the ciphertext, but you then have you make sure that the plaintext is somehow tied to that signature (e.g., the plaintext might contain the fingerprint of the public key)
[02:54:51] <MacGyver> The "sensible" way of getting all of confidentiality, authenticity, non-repudiation when both MAC and sign operations are available is m = (message, sender, receiver), s = m || sign(m), e = encrypt(s), etm = e || mac(e). I.e. you embed sender and receiver in the message that you sign (because of $reasons), then encrypt that message + signature, then MAC that ciphertext.
[02:55:20] <MacGyver> $reasons are much better explained by Don Davis @ https://theworld.com/~dtd/sign_encrypt/sign_encrypt7.html
[02:56:05] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Ping timeout: 265 seconds)
[02:56:59] *** Quits: Han-chan (~Han@172.58.171.240) (Ping timeout: 256 seconds)
[02:57:10] *** Joins: Han-chan (~Han@172.58.171.240)
[02:57:26] *** Han-chan is now known as coolaid
[02:57:38] *** coolaid is now known as Han-chan
[02:58:54] <neiluj> Alipha: so if the attacker replaces the signature with his own, you cannot correlate the signature and the MAC?
[02:58:58] <neiluj> that's the problem?
[03:00:57] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 256 seconds)
[03:00:58] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[03:03:35] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:35] <neiluj> huh, I'm mixing things
[03:03:37] <Alipha> neiluj: i'm not sure what you mean by "you cannot correlat the signature and the MAC"
[03:04:10] <Alipha> an attacker being able to claim he sent a message instead of you is just generally a bad idea and doesn't have to do with MACs :-)
[03:05:01] <neiluj> ah okay, understand your point
[03:05:52] <Alipha> though if you follow my advise of putting a fingerprint of the public key inside the plaintext, if you don't MAC your ciphertext, then an attacker could potentially replace that fingerprint with their own fingerprint
[03:05:59] <neiluj> now since the DH key exchange established a key, you can associate it to the private key of the other person for the signature (ECDSA)
[03:06:15] <neiluj> a public key
[03:06:49] <neiluj> so that you can check if the signature corresponds to the same person as the MAC
[03:07:08] <neiluj>  you can associate it to the public key*
[03:07:31] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[03:09:40] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[03:09:44] <neiluj> because I did not state this, but there's a central server which maps persons (peers) to a public ECDSA key
[03:10:07] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:11:33] <neiluj> so if an attacker appends its signature of the ciphertext, then you can see that it was not signed with the private key of the person you're communicating with
[03:12:16] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[03:12:36] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[03:15:01] <Alipha> yes, signing the ciphertext would ensure that the person you did DH with matches the person with the public key
[03:15:51] <neiluj> ah, but that doesn"t solve the DH MITM attack indeed
[03:16:44] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (Quit: FreeZNC - Visit us! Server: irc.libera.chat Channel: #bnc4you)
[03:16:44] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Quit: Stable ZNC provider #bnc4you)
[03:18:27] <neiluj> but, if we know with who we did DH (network address+name, all registered on a central server along with a public key), we know that the signature should be verified with his public key
[03:18:47] <neiluj> so we could detect an invalid signature
[03:24:00] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[03:25:16] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[03:29:31] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 245 seconds)
[03:30:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[03:30:10] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:32:20] *** BadWolf is now known as azerty
[03:41:56] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 268 seconds)
[03:49:05] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[03:56:35] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[03:58:01] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[04:00:34] *** Joins: Soni (~quassel@autistic.space)
[04:00:48] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[04:01:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:02:19] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[04:02:43] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:57] <ericonr> MacGyver: thanks for the reference link!
[04:05:13] <ericonr> (and the short explanation :)
[04:05:16] *** Joins: igemnace (~ian@user/igemnace)
[04:11:38] *** Joins: jkk (~jkk@213.180.39.162)
[04:11:58] <jkk> do many people nowadays encrypt their emails with pgp?
[04:18:48] <jkk> ok
[04:19:39] <jkk> i sense older generation such as pgp creator were amorals and they created tools knowing that they can be used in many ways, nowadays people are overthinking :)
[04:19:47] <jkk> *amoral
[04:23:44] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[04:26:50] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[04:29:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[04:41:47] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:41:47] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:09] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:09] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:31] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:32] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:42:53] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:42:54] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:43:16] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[04:43:17] *** Quits: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[04:43:17] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (K-Lined)
[05:19:44] *** Quits: TahitianTreat (~TahitianT@ip70-179-140-190.fv.ks.cox.net) (Remote host closed the connection)
[05:51:03] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 265 seconds)
[05:54:31] *** Quits: jkk (~jkk@213.180.39.162) (Ping timeout: 245 seconds)
[06:00:04] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 268 seconds)
[06:00:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:14:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:32:27] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[06:32:27] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[06:32:27] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[06:53:55] *** Quits: osi (~osi@5.53.148.124) (Quit: q)
[07:04:41] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:10:46] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 245 seconds)
[07:11:37] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[07:12:44] *** Joins: Brnocrist (~spartak@user/brnocrist)
[07:26:09] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 256 seconds)
[07:51:09] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.3)
[07:53:50] *** Joins: rtypo (~alex@user/rtypo)
[07:56:29] *** Joins: mononote (~mononote@user/mononote)
[08:07:05] *** Joins: Malvolio (~Malvolio@user/malvolio)
[08:13:26] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:26:12] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[08:26:13] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:40:13] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:ca0:b92a:b174:90a0) (Ping timeout: 265 seconds)
[08:41:12] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:b59e:688f:69b6:d7fe)
[08:44:22] *** Joins: internalsplit_of (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[08:44:22] *** internalsplit_of is now known as givemeyourpies
[08:44:22] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Excess Flood)
[08:44:44] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[08:54:17] *** Joins: SixelaNomae (~SixelaNom@207.151.52.63)
[08:55:13] *** Quits: SixelaNomae (~SixelaNom@207.151.52.63) (Client Quit)
[08:56:38] *** Joins: System_Error (~SystemErr@user/systemerror)
[09:03:11] *** Joins: reumeth (~reumeth@user/reumeth)
[09:11:36] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 245 seconds)
[09:32:02] *** Quits: royaljelly (~royaljell@user/royaljelly) (*.net *.split)
[09:32:02] *** Quits: jtdowney (~jtdowney@user/jtdowney) (*.net *.split)
[09:32:02] *** Quits: kept (~kept@user/kept) (*.net *.split)
[09:32:03] *** Quits: meyer (~nunyuh@user/cosanostra) (*.net *.split)
[09:32:03] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[09:32:03] *** Quits: jhed9 (~jhed9@113.189.225.35.bc.googleusercontent.com) (*.net *.split)
[09:32:03] *** Quits: Dan0maN_bncr (~Dan0maN@user/dan0man) (*.net *.split)
[09:32:03] *** Quits: haskal (~haskal@tilde.town) (*.net *.split)
[09:32:03] *** Quits: rqsd (~rqsd@user/rqsd) (*.net *.split)
[09:32:03] *** Quits: iz (~tv@user/xiz) (*.net *.split)
[09:32:03] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[09:32:03] *** Quits: zinc (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[09:32:10] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[09:32:17] *** Joins: royaljelly (~royaljell@sodiumlamp.xyz)
[09:32:19] *** Joins: kept (~kept@2a01:4f8:241:541:2d::29)
[09:32:20] *** Quits: royaljelly (~royaljell@sodiumlamp.xyz) (Changing host)
[09:32:20] *** Joins: royaljelly (~royaljell@user/royaljelly)
[09:32:23] *** Joins: iz (~tv@157-131-220-165.fiber.dynamic.sonic.net)
[09:32:26] *** Quits: kept (~kept@2a01:4f8:241:541:2d::29) (Changing host)
[09:32:26] *** Joins: kept (~kept@user/kept)
[09:32:40] *** Joins: AkechiShiro (~licht@2a01:e0a:5f9:9681:1473:3dff:fe42:56a9)
[09:32:41] *** Joins: rqsd (~rqsd@user/rqsd)
[09:32:54] *** Joins: jhed9 (~jhed9@113.189.225.35.bc.googleusercontent.com)
[09:32:57] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[09:33:01] *** Joins: undeclared (nullx@user/undeclared)
[09:33:24] *** Joins: Dan0maN (~Dan0maN@user/dan0man)
[09:33:41] *** Joins: meyer (~nunyuh@user/cosanostra)
[09:34:28] *** Joins: haskal (~haskal@tilde.town)
[09:36:24] *** Quits: dusk (~quassel@suki.ds7s.nl) (*.net *.split)
[09:36:24] *** Quits: kulak (~kulak@user/kulak) (*.net *.split)
[09:36:24] *** Quits: enick_937 (~timmcmatr@user/timmc) (*.net *.split)
[09:36:24] *** Quits: nocando[m] (~nocandoma@2001:470:69fc:105::1:2b22) (*.net *.split)
[09:36:24] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (*.net *.split)
[09:36:25] *** Quits: PsyZeus (~TheLight@user/psyzeus) (*.net *.split)
[09:36:25] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:36:25] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[09:36:34] *** Joins: PsyZeus (~TheLight@37.48.95.134)
[09:36:38] *** Joins: dusk (~quassel@suki.ds7s.nl)
[09:36:40] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[09:36:41] *** Quits: PsyZeus (~TheLight@37.48.95.134) (Changing host)
[09:36:41] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[09:36:46] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:37:01] *** Joins: kulak (~kulak@user/kulak)
[09:37:21] *** Joins: enick_937 (~timmcmatr@2001:470:69fc:105::a90)
[09:38:49] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[09:40:38] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 265 seconds)
[09:43:23] *** Joins: namkeleser (~namkelese@101.175.102.188)
[09:43:49] *** Joins: nocando[m] (~nocandoma@2001:470:69fc:105::1:2b22)
[09:44:07] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[09:51:55] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:b59e:688f:69b6:d7fe) (Ping timeout: 260 seconds)
[09:52:32] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:dd06:ad0d:306:d874)
[09:53:56] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:54:03] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[09:55:12] <neiluj> Alipha: thanks for taking the time to answer to my questions
[09:55:59] <neiluj> it was my first exposure to these questions, and it was late at night, so I'm going to read again your answers and think about them more
[09:57:15] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:dd06:ad0d:306:d874) (Client Quit)
[10:06:57] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[10:07:29] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[10:10:43] *** Joins: Bacta (~Bacta@om126237026159.9.openmobile.ne.jp)
[10:11:58] *** Quits: Bacta (~Bacta@om126237026159.9.openmobile.ne.jp) (Client Quit)
[10:12:45] *** Quits: Han-chan (~Han@172.58.171.240) (Ping timeout: 256 seconds)
[10:25:32] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:27:05] *** Quits: Pythayr (~pither195@64.42.181.50) (Ping timeout: 268 seconds)
[10:35:44] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 265 seconds)
[10:45:33] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[10:45:42] *** Joins: Irc2PGuest71530 (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se)
[10:46:14] *** Quits: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se) (Ping timeout: 256 seconds)
[10:46:20] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[10:48:17] *** Joins: gproto23 (~gproto23@user/gproto23)
[10:58:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:04:48] *** Joins: frost (~frost@user/frost)
[11:10:10] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[11:23:45] *** Joins: Pythayr (~pither195@64.42.181.50)
[11:30:16] *** Quits: Pythayr (~pither195@64.42.181.50) (Ping timeout: 264 seconds)
[11:48:29] *** Joins: qbt (~qbt@user/edun)
[11:49:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:51:15] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[12:02:30] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Quit: Leaving)
[12:02:45] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[12:02:59] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[12:03:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[12:05:58] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:06:18] *** Joins: andreasbuhr (~quassel@p548ddf1c.dip0.t-ipconnect.de)
[12:10:55] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:20:26] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[12:27:31] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:29:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:43:02] *** Joins: mononote (~mononote@user/mononote)
[13:07:36] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:07:59] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 265 seconds)
[13:08:11] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[13:08:18] *** Joins: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[13:12:57] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[13:15:38] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:26:21] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:26:36] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[13:32:36] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:32:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:33:02] *** Joins: akaWolf (~akaWolf@akawolf.org)
[13:33:54] *** Lord_of_Life_ is now known as Lord_of_Life
[13:38:52] *** Quits: aliosablack (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[13:45:41] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[13:51:15] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[13:56:40] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[14:02:52] *** Joins: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[14:13:57] *** Joins: mouseghost (~draco@user/mouseghost)
[14:26:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:29:31] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[14:29:45] *** Joins: madage (~madage@user/madage)
[14:46:05] *** Joins: Nimrodel (~Nimrodel@athedsl-56022.home.otenet.gr)
[14:47:38] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:56:24] *** Quits: Nimrodel (~Nimrodel@athedsl-56022.home.otenet.gr) (Quit: Leaving)
[15:16:31] *** Joins: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru)
[15:24:36] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[15:44:36] *** Joins: sav (~savio@177.12.48.155)
[15:44:59] *** sav is now known as Guest7878
[15:47:22] *** Quits: Guest7878 (~savio@177.12.48.155) (Client Quit)
[15:57:18] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[16:09:04] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[16:13:25] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[16:16:10] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:21:49] *** Joins: yewscion (~yewscion@72-21-196-67.amazon.com)
[16:34:21] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Remote host closed the connection)
[16:56:46] *** Joins: rtypo (~alex@user/rtypo)
[16:58:31] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:02:26] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:03:35] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 256 seconds)
[17:06:41] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:08:02] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[17:12:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:14:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:18:39] *** Joins: aqua (~sid742412@user/aqua)
[17:18:44] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[17:18:55] *** aqua is now known as monkish
[17:18:55] *** Quits: monkish (~sid742412@user/aqua) (Remote host closed the connection)
[17:19:12] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[17:19:15] *** Joins: aqua (~sid742412@user/aqua)
[17:19:34] *** aqua is now known as kish`
[17:20:07] *** Joins: ses (uid38151@id-38151.hampstead.irccloud.com)
[17:24:11] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[17:29:58] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:4c2f:f9c9:ddfd:a47) (Ping timeout: 260 seconds)
[17:31:39] *** Joins: llorllale (~llorllale@97.108.193.189)
[17:34:23] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Ping timeout: 252 seconds)
[17:35:27] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[17:39:19] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[17:47:53] *** Joins: reumeth (~reumeth@user/reumeth)
[17:48:51] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[17:51:35] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:52:28] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 264 seconds)
[17:53:49] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[17:54:08] *** Joins: madage (~madage@user/madage)
[17:58:28] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[17:58:45] *** Joins: yewscion (~yewscion@52.94.133.128)
[18:02:26] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:09:36] *** Joins: d1cor (~diego@179.63.242.100)
[18:21:29] *** Quits: enick_937 (~timmcmatr@2001:470:69fc:105::a90) (Changing host)
[18:21:29] *** Joins: enick_937 (~timmcmatr@user/timmc)
[18:22:07] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[18:22:14] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 252 seconds)
[18:23:18] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[18:23:45] *** JTL is now known as JLT
[18:23:51] *** JLT is now known as JTL
[18:33:50] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[18:34:29] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[18:44:16] *** Joins: yewscion (~yewscion@52.94.133.128)
[18:53:19] *** Joins: cwebber (~user@user/cwebber)
[19:03:55] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:04:44] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[19:06:28] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[19:06:44] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:07:26] <ioxzev1z> Does gpg -c limit password guesses in some way?
[19:08:35] <sonOfRa> I wouldn't expect it to, no
[19:08:44] <ms7821> how could it?
[19:09:15] <ioxzev1z> I mean does it use some technique to generate a key such that an attacker will need time and/or memory per guess on a -c file?
[19:10:24] *** Parts: royaljelly (~royaljell@user/royaljelly) ()
[19:10:45] <sonOfRa> It probably does something that exceeds piping the password bytes directly into AES, but it wouldn't be GPG if it didn't do something wacky :D
[19:11:02] <ioxzev1z> Referring to s2k options specifically
[19:11:39] *** Quits: d1cor (~diego@179.63.242.100) (Ping timeout: 256 seconds)
[19:14:44] <sonOfRa> Looks like the basic ones in the standard are pretty weak. You can specify your own private implementations, but then noone will be able to talk to you
[19:19:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:23:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:24:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:25:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:26:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:27:01] *** Quits: andreasbuhr (~quassel@p548ddf1c.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:27:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:28:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:29:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:30:21] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 256 seconds)
[19:30:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:31:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:32:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:33:36] *** Joins: zro (~zro@user/zro)
[19:33:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:34:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:36:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:37:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:38:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:39:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:40:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:41:12] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:d69a:3270:8b6:16b2)
[19:41:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:42:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:43:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:44:04] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[19:44:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:45:47] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:46:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:47:55] <riv> https://ehash.iaik.tugraz.at/wiki/SHA-0 I didn't know sha0 was a thing
[19:48:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:49:25] <MacGyver> It was the original SHA.
[19:49:28] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:d69a:3270:8b6:16b2) (Ping timeout: 264 seconds)
[19:49:35] <MacGyver> And to avoid confusion with SHA-1, it was renamed SHA-0.
[19:49:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:50:31] <riv> ah!
[19:50:40] <riv> and apparently MD started at 2, skipped 3, then did 4 and 5?
[19:50:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:51:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:52:08] <MacGyver> Well it probably started as MD(1) in a lab somewhere.
[19:52:18] <MacGyver> And MD3 probably failed in a lab somewhere.
[19:52:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:52:59] <MacGyver> So it's not that they "skipped" them, but rather never published them.
[19:53:42] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[19:53:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[19:54:23] <riv>  makes sense :)
[19:54:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:55:31] <MacGyver> You won't see that happen nowadays with things like SHA, though.
[19:55:51] <MacGyver> Because those are public competitions where a differently-named algorithm is selected to *become* SHA{3,4,5}
[19:55:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:55:59] <riv> because cryptographers dont make mistakes anymore
[19:56:01] <MacGyver> So there's no lab failure to skip a number.
[19:56:38] <Haohmaru> so if i invent some hash function it might be selected and become SHA-4 ;P~
[19:56:51] * Haohmaru jiggles some bytes
[19:56:51] <MacGyver> If there ever is a SHA-4-competition, yes.
[19:57:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:57:05] *** ChanServ sets mode: +o Peng
[19:57:09] *** betelgeuse9 was kicked by Peng (Please fix your connection)
[19:57:32] <Haohmaru> MacGyver can you please  close your eyes and jiggle these bytes for 3 seconds?
[19:58:15] <MacGyver> bw: Oh yeah that reminds me, can you set up flags s.t. Peng, sarnold, and I also have chanserv akick rights? That allows us to set expiring bans rather than having to remember.
[19:58:44] <MacGyver> bw: (I don't know which chanserv flags are required for that though, haven't done a documentation dive yet >.<)
[19:59:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[19:59:14] *** Peng sets mode: +b *!*@94-225-47-8.access.telenet.be
[19:59:16] <Haohmaru> i wouldn't think chanserv has timing capability
[19:59:18] *** Joins: Malvolio (~Malvolio@user/malvolio)
[19:59:25] <MacGyver> It does.
[19:59:42] *** Joins: mononote (~mononote@user/mononote)
[19:59:56] <Haohmaru> then it must be a new thing.. usually you'd use custom bots for that sort of thing
[20:00:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:00:04] *** Peng sets mode: -o Peng
[20:00:05] <Peng> MacGyver, bw: From "/msg chanserv help flags", I guess it's +b
[20:00:09] <MacGyver> Nah, chanserv ackick functionality is much older.
[20:00:12] <MacGyver> akick*
[20:00:16] *** Quits: llorllale (~llorllale@97.108.193.189) (Ping timeout: 264 seconds)
[20:00:23] <MacGyver> But good point, I think we could also just invite litharge into the channel and use that.
[20:01:21] <Haohmaru> i don't remember akick having timing stuff, when i used it
[20:01:28] <Haohmaru> but a lot changed since then
[20:02:42] <MacGyver> I've been using atheme since at least 2005 and akick has always had an optional !T parameter for expiring bans. 
[20:03:26] <Haohmaru> in 2005 i've probably only seen hybrid-ircd and whatever services it used typically
[20:03:35] <Haohmaru> altho it was modified afaik
[20:04:54] <MacGyver> Oh actually, might've been 2008 I started using it, but either way, it always had a !T.
[20:04:59] <MacGyver> Anyway.
[20:05:06] *** ChanServ sets mode: +o MacGyver
[20:05:43] <MacGyver> Yep, as I thought.
[20:05:48] *** ChanServ sets mode: -o MacGyver
[20:06:02] <MacGyver> Only bw can set up litharge.
[20:08:54] *** Joins: Pythayr (~pither195@64.42.181.51)
[20:10:35] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[20:23:14] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[20:23:49] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Read error: Connection reset by peer)
[20:23:59] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[20:24:02] *** Malvolio is now known as Guest8344
[20:24:02] *** Quits: Guest8344 (~Malvolio@user/malvolio) (Killed (osmium.libera.chat (Nickname regained by services)))
[20:24:57] *** Joins: Malvolio (~Malvolio@user/malvolio)
[20:30:44] *** Joins: reumeth (~reumeth@user/reumeth)
[20:38:39] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:40:03] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:43:23] *** Joins: arjun (~user@user/arjun)
[20:44:02] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[20:49:28] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[20:50:10] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:15:30] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[21:23:37] <bw> I can help, what do we need?
[21:26:02] <bw> I have a work meeting, but I’ll help after that.
[21:33:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:00] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-ddb3-cd8f-aeab-5219.res6.spectrum.com)
[21:45:03] *** Joins: aleck (~aleck@user/aleck)
[21:46:11] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 245 seconds)
[21:46:32] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[22:06:43] *** Quits: arjun (~user@user/arjun) (Remote host closed the connection)
[22:08:00] *** Joins: skyl4rk (~tlvb@user/tlvb)
[22:12:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:14:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:15:35] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[22:16:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:18:42] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:28:11] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:46:16] *** Joins: mei (~mei@user/mei)
[22:50:52] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[22:51:14] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[22:52:33] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Quit: Leaving)
[22:54:21] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Remote host closed the connection)
[22:58:13] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:00:12] *** Joins: d1cor (~diego@179.63.242.100)
[23:00:18] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:03:05] *** Quits: iz (~tv@157-131-220-165.fiber.dynamic.sonic.net) (Changing host)
[23:03:05] *** Joins: iz (~tv@user/xiz)
[23:04:10] *** Quits: Elzington (~Elzington@static-68-235-44-76.cust.tzulo.com) (Quit: Leaving)
[23:04:38] <bw> ok, meetings done. MacGyver, what do you need?
[23:04:47] *** Joins: kish` (~sid742412@user/aqua)
[23:05:48] <bw> MacGyver: i think if i were to add +b for you, it would kickban you. don't want that
[23:08:44] <MacGyver> bw: No, not channel modes, I was talking about chanserv flags. But it'll work if you set the +o flag on litharge and then invite it (that's a ban management bot).
[23:08:56] <MacGyver> bw: Or, just invite litharge and see what it tells you.
[23:10:43] *** ChanServ sets mode: +o bw
[23:10:49] *** Joins: litharge (litharge@libera/bot/litharge)
[23:11:02] <bw> how's that?
[23:11:14] <MacGyver> Cool, now, let's see.
[23:11:18] *** ChanServ sets mode: +o MacGyver
[23:11:41] *** MacGyver sets mode: -b *!*@94-225-47-8.access.telenet.be
[23:14:44] *** MacGyver sets mode: +b $a:betelgeuse
[23:16:11] <bw> are we banning people for shitty connections, or did betelgeuse do something?
[23:16:36] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[23:16:47] <MacGyver> Well the whole point of getting litharge in here was to not have it be indefinite.
[23:18:13] <MacGyver> Though I fat-fingered the m for an h on my test.
[23:18:33] <MacGyver> So let's try that again.
[23:18:41] *** MacGyver sets mode: -b $a:betelgeuse
[23:18:50] *** MacGyver sets mode: +b $a:betelgeuse
[23:19:47] <MacGyver> Peng: So, next time, litharge will PM you asking for a duration and a reason -- I think it's reasonable to do this in terms of an hour at a time if it's actively disrupting channel traffic.
[23:20:04] *** ChanServ sets mode: +o litharge
[23:20:04] *** litharge sets mode: -bo $a:betelgeuse litharge
[23:20:11] <ms7821> neat
[23:22:52] *** ChanServ sets mode: -o MacGyver
[23:22:58] <MacGyver> bw: Thanks.
[23:25:13] <Peng> bw: I did it 100% because their connection was kind of disrupting a conversation. 
[23:25:25] <Peng> I think I saw them get banned in another channel yesterday. :(
[23:25:30] <Peng> (for the same reason)
[23:25:42] <int-e> they got k-lined earlier today
[23:26:09] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:26:18] <MacGyver> And honestly, frankly, if your IRC bouncer has been reboot-cycling or connection-cycling for multiple days in a row, odds are you aren't actually actively on IRC anyway.
[23:27:16] <MacGyver> So as long as the bans are timed, it's not as though we're really limiting anyone from participating here.
[23:28:28] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:28:32] <int-e> . o O ( when you're responsible for 75% of the join and parts in a channel with 100s of users, expect consequences )
[23:29:29] <Peng> I don't mind when no one's talking, but...
[23:31:30] *** Quits: holgersson (~quassel@user/holgersson) (Remote host closed the connection)
[23:32:45] *** Joins: holgersson (~quassel@user/holgersson)
[23:32:56] *** Quits: enick_937 (~timmcmatr@user/timmc) (Ping timeout: 265 seconds)
[23:32:56] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[23:33:25] *** Quits: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004) (Ping timeout: 265 seconds)
[23:34:12] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[23:38:12] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:39:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:40:01] <ericonr> <3 weechat smart filters
[23:40:08] <ericonr> I had no idea anything was even happening :p
[23:40:56] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[23:44:39] *** Quits: armin (~armin@unix.porn) (Quit: leaving)
[23:44:52] <bw> Same, basically
[23:45:28] *** Joins: voices- (~voices_@84.238.197.28)
[23:45:33] *** Joins: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004)
[23:47:14] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[23:47:54] *** Quits: sm2n (~sm2n@user/sm2n) (Quit: Leaving)
[23:48:23] *** Joins: enick_937 (~timmcmatr@2001:470:69fc:105::a90)
[23:49:00] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[23:52:58] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[23:53:57] <Hash> Owning property is nice
[23:54:05] <Hash> Even digital property
[23:54:08] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[23:54:19] <Hash> New term starts Dec 1
[23:54:24] *** Joins: voices- (~voices_@84.238.197.28)
[23:54:31] <Hash> Going to take the rest of the boring courses first. 
[23:54:43] <Hash> Then focus on all the cryptography and security related courses
[23:54:53] <Hash> statistics, algebra, ethics, etc. etc. I will take first
[23:54:57] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
