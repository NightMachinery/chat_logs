[00:29:21] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[00:29:27] *** Joins: bomb (~bomb@user/bomb)
[00:39:30] *** Joins: tektik (~said@68.33.69.0)
[00:42:05] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[00:57:31] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0400-7900-01f8-e430-5571-03e9.dyn.netcomnetz.de) (Ping timeout: 252 seconds)
[01:01:35] *** Quits: Munto (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 264 seconds)
[01:14:14] *** Joins: Munto (~Munto@87-88-168-174.abo.bbox.fr)
[01:36:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[02:32:52] *** Quits: pizdets_ (~pizdets@183.182.115.35) (Ping timeout: 250 seconds)
[02:33:46] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Ping timeout: 252 seconds)
[02:33:50] *** Joins: pizdets (~pizdets@183.182.114.240)
[02:40:40] *** Joins: furq (~furq@b23.be)
[02:50:43] *** Joins: unclutter (~gentoo@60.81-166-246.customer.lyse.net)
[03:02:17] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-48d0-0004-7e9c-d196.res6.spectrum.com) (Read error: Connection reset by peer)
[03:26:49] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[03:32:51] *** Quits: Munto (~Munto@87-88-168-174.abo.bbox.fr) (Ping timeout: 265 seconds)
[03:43:48] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[03:45:59] *** Joins: Munto (~Munto@120.51.3.93.rev.sfr.net)
[03:50:02] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1830-41.w90-91.abo.wanadoo.fr) (Quit: bye)
[04:05:47] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Ping timeout: 264 seconds)
[04:17:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[04:22:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[04:24:13] *** Quits: Elw3 (~Elw3@x59cc9a53.dyn.telefonica.de) (Quit: Leaving)
[04:26:26] *** Parts: tektik (~said@68.33.69.0) (Leaving)
[04:47:35] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:59:33] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[05:00:38] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.2)
[05:03:23] *** Quits: ratchet_freak (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be) (Ping timeout: 265 seconds)
[05:11:21] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[05:11:32] *** Joins: kiril (~kiril@85.91.153.163)
[05:15:23] *** Quits: fcr (~fran@r186-48-99-250.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[05:19:22] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[05:23:11] *** Joins: fcr (~fran@r167-60-60-171.dialup.adsl.anteldata.net.uy)
[05:26:00] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[05:35:52] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[05:39:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:33:58] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:37:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:49:34] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Ping timeout: 265 seconds)
[06:54:36] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[07:10:46] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Remote host closed the connection)
[07:20:49] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[07:33:00] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Remote host closed the connection)
[07:33:35] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[07:35:52] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[07:39:48] <xaltsc> Hey, I'm trying to move the .luarocks to a more XDG compliant directory. I've setup the user rock tree to another folder, however, luarocks keeps installing packages in ~/.luarocks. Any idea on how to fix that ?
[07:44:37] <xaltsc> This is my config.lua https://paste.debian.net/1215819/
[08:00:37] *** Quits: ShadowNinja (quasselcor@user/shadowninja) (*.net *.split)
[08:00:37] *** Quits: yalb (xsbot@user/mniip/bot/yalb) (*.net *.split)
[08:00:37] *** Quits: q66 (~q66@q66.moe) (*.net *.split)
[08:00:37] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[08:00:37] *** Quits: rjek (~rjek@godforsaken.horse) (*.net *.split)
[08:00:37] *** Quits: Habbie (peter@lorentz.7bits.nl) (*.net *.split)
[08:00:37] *** Quits: fingercomp (fingercomp@95.216.163.96) (*.net *.split)
[08:00:46] *** Joins: ShadowNinja (quasselcor@user/shadowninja)
[08:00:47] *** Joins: q66 (~q66@q66.moe)
[08:00:51] *** Joins: rjek (~rjek@godforsaken.horse)
[08:00:52] *** Joins: yalb (xsbot@user/mniip/bot/yalb)
[08:01:02] *** Joins: Habbie (peter@lorentz.7bits.nl)
[08:01:30] *** Joins: phryk (~totallyno@user/phryk)
[08:02:05] *** Joins: fingercomp (fingercomp@fomalhaut.me)
[08:37:49] *** Quits: ghoti (~paul@198.23.196.224) (Ping timeout: 252 seconds)
[08:41:13] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[08:42:39] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:49:01] *** Joins: ghoti (~paul@198.23.196.224)
[09:06:16] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:32] *** Joins: dvx (~dvx@185.63.97.64)
[09:11:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[09:21:36] *** Joins: password (~password@user/password2)
[09:23:35] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[09:24:26] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[09:25:21] *** Joins: bjne (~bjne@194.19.11.44)
[09:28:05] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[09:28:28] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[09:42:35] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[10:18:26] *** Parts: ksynwa (~ksynwa@5.45.111.57) (WeeChat 2.8)
[10:19:31] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.0.1)
[10:25:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[10:29:15] *** Joins: pony (~ed@smol/hors)
[10:30:56] *** Quits: Munto (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 265 seconds)
[10:40:24] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[11:00:55] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-257b-0369-7af4-f94a.dyn.netcomnetz.de)
[11:21:26] *** Joins: Munto (~Munto@120.51.3.93.rev.sfr.net)
[11:29:47] *** Quits: Munto (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 264 seconds)
[11:33:03] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32)
[11:33:18] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[11:35:50] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:21] *** Joins: Munto (~Munto@87-88-164-178.abo.bbox.fr)
[11:45:46] *** Joins: pflo (~pflo@dslb-002-206-030-196.002.206.pools.vodafone-ip.de)
[11:47:53] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Ping timeout: 246 seconds)
[12:07:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[12:08:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:10:22] *** Joins: Munto_ (~Munto@80.215.164.165)
[13:13:50] *** Quits: Munto (~Munto@87-88-164-178.abo.bbox.fr) (Ping timeout: 260 seconds)
[13:32:39] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[13:32:50] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:44:41] *** Joins: cursey (~cursey@user/cursey)
[13:55:56] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[14:17:47] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-257b-0369-7af4-f94a.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[14:18:30] *** Quits: password (~password@user/password2) (Quit: Ping timeout (120 seconds))
[14:19:31] *** Joins: password (~password@user/password2)
[14:27:32] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[14:27:46] *** Quits: Munto_ (~Munto@80.215.164.165) (Ping timeout: 258 seconds)
[14:28:03] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-2c04-a047-e532-0b08.dyn.netcomnetz.de)
[14:31:55] *** Quits: password (~password@user/password2) (Quit: Ping timeout (120 seconds))
[14:33:59] *** Joins: password (~password@user/password2)
[14:40:54] *** Joins: Munto_ (~Munto@120.51.3.93.rev.sfr.net)
[14:57:59] *** Quits: bjne (~bjne@194.19.11.44) (Ping timeout: 264 seconds)
[15:19:04] *** pflo is now known as pflo_
[15:19:50] *** Quits: Munto_ (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 260 seconds)
[15:22:01] *** Quits: pflo_ (~pflo@dslb-002-206-030-196.002.206.pools.vodafone-ip.de) (Quit: Leaving)
[15:22:21] *** Joins: pflo (~pflo@dslb-002-206-030-196.002.206.pools.vodafone-ip.de)
[15:22:55] *** Quits: pflo (~pflo@dslb-002-206-030-196.002.206.pools.vodafone-ip.de) (Changing host)
[15:22:55] *** Joins: pflo (~pflo@user/pflo)
[15:24:40] *** Quits: pflo (~pflo@user/pflo) (Client Quit)
[15:24:57] *** Joins: pflo (~pflo@user/pflo)
[15:42:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[15:42:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:47:37] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:547a:a00b:38d:bc41)
[15:47:37] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:547a:a00b:38d:bc41) (Changing host)
[15:47:37] *** Joins: skapata (~Skapata@user/skapata)
[15:53:29] *** Joins: Munto (~Munto@120.51.3.93.rev.sfr.net)
[16:01:21] *** Quits: kurfen_ (~kurfen@37.120.204.67) (Ping timeout: 245 seconds)
[16:04:10] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-193.2.247.pool.telefonica.de)
[16:09:45] *** Joins: Guest15 (~Guest15@146.56.100.202)
[16:16:33] *** Joins: bjne (~bjne@2a01:799:a9e:3400:3822:913b:bd1:1d0e)
[16:23:47] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-2c04-a047-e532-0b08.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[16:44:07] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:56:53] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[16:57:14] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:01:30] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Read error: Connection reset by peer)
[17:01:50] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[17:04:00] *** Quits: password (~password@user/password2) (Quit: Ping timeout (120 seconds))
[17:05:21] *** Quits: Guest15 (~Guest15@146.56.100.202) (Quit: Client closed)
[17:05:52] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Client Quit)
[17:06:10] *** Joins: password (~password@user/password2)
[17:07:13] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[17:14:16] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 245 seconds)
[17:14:48] *** Quits: password (~password@user/password2) (Quit: Ping timeout (120 seconds))
[17:17:36] *** Quits: Munto (~Munto@120.51.3.93.rev.sfr.net) (Ping timeout: 245 seconds)
[17:17:38] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[17:19:49] *** Quits: fcr (~fran@r167-60-60-171.dialup.adsl.anteldata.net.uy) (Ping timeout: 252 seconds)
[17:24:43] *** Joins: fcr (~fran@r186-48-22-63.dialup.adsl.anteldata.net.uy)
[17:25:01] *** Joins: password (~password@user/password2)
[17:26:18] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-193.2.247.pool.telefonica.de) (Ping timeout: 260 seconds)
[17:26:47] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[17:27:49] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[17:28:29] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[17:28:36] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b157-81d2-c247-f7c3.res6.spectrum.com)
[17:30:16] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[17:30:26] *** Joins: Munto (~Munto@120.51.3.93.rev.sfr.net)
[17:31:57] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:34:44] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-b0d7-86a9-1129-80ab.dyn.netcomnetz.de)
[17:36:56] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[17:58:44] *** Quits: pflo (~pflo@user/pflo) (Quit: Leaving)
[18:02:47] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[18:03:41] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[18:10:13] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[18:10:20] *** Parts: tertu2 (~tertu@c-73-242-8-176.hsd1.mn.comcast.net) ()
[18:10:40] *** Joins: tertu (~tertu@c-73-242-8-176.hsd1.mn.comcast.net)
[18:15:02] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[18:15:36] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[18:28:51] *** Quits: bjne (~bjne@2a01:799:a9e:3400:3822:913b:bd1:1d0e) (Ping timeout: 245 seconds)
[18:41:45] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 260 seconds)
[18:42:04] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[18:53:46] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[18:55:36] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[18:57:33] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[19:19:24] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[19:20:57] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[19:29:12] *** Joins: Elw3 (~Elw3@x59cc9a79.dyn.telefonica.de)
[19:31:27] <Elw3> so i have X=(A>B and 1) or (A=<B and -1); and X sometimes becomes false, with A and B being numbers, how can that happen? 
[19:37:37] <TsT> what is "and 1" and "and -1" ?
[19:38:18] <TsT> oh it is a real sample ...
[19:38:27] <TsT> 1 and -1 should always be true
[19:39:02] <TsT> then it should be (A>B) or (A<=B) then it should always be true
[19:39:20] <TsT> in pure boolean think
[19:40:33] <TsT> I immagine it should happens if A or B becomes different type and any kind of comparaison returns false ?
[19:41:00] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[19:41:16] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[19:42:25] <Elw3> 1 is not checked but assigned to x. With A and B a number, < and => should booth together always return true thus assign 1. 
[19:43:33] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:43:40] <TsT> oh
[19:43:50] <TsT> non it is a special syntax of lua
[19:44:07] <TsT> (boolean condition ...) and "foo" or "bar"
[19:44:18] <TsT> like ternary operator
[19:44:26] <TsT> ( ... ) ? "foo" : "bar"
[19:44:45] <Elw3> I have no idea what you talk about :D
[19:45:02] <TsT> X=(A>B and 1) or (A=<B and -1) will return 1 or -1
[19:45:31] <TsT> what is your expected result ?
[19:47:04] <Elw3> 1 or -1 obviously
[19:47:22] <Elw3> It says false. *scratches head*
[19:47:51] <TsT> what is your A and B value when it's happened ?
[19:49:24] <TsT> and what says false ?
[19:50:34] <Elw3> X is false, A is (A+X) and then its looped till A is close to B.
[19:51:49] <TsT> can you add an assert(type(A)=="number","A is not a number, it is a "..type(A)) somewhere ? :)
[19:52:27] <Elw3> I have a print in there now, but i need to find a seed on which it faials
[19:52:34] <TsT> sure
[19:52:52] <TsT> I checked with special values near math limits
[19:53:34] <TsT> like A=math.huge or A=1/0 ... but it still return expected result (1 or -1) never false
[19:54:11] <TsT> what is your lua version ?
[19:54:25] <avih> Elw3: add a print/log thing that if it's false then print A and B? i don't _think_ it should be possible.
[19:55:09] <Elw3> its luajit from within löve.
[19:55:30] <TsT> your variable A and B are not global of course ? ;)
[19:55:44] <TsT> there are local ?
[19:56:06] <Elw3> sure, would not matter anyway.
[19:56:25] <TsT> just in case ;)
[19:56:25] <Elw3> Its just a 20 lines script, there is nothing fancy going on
[19:57:47] <TsT> if you want share this lines we can also try on our side
[19:59:26] <Elw3> let me try to reproduce it first
[19:59:45] <TsT> sure
[19:59:58] <TsT> (I will left soon :P)
[20:00:34] *** Joins: bomb (~bomb@user/bomb)
[20:02:11] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 245 seconds)
[20:02:20] *** Joins: bjne (~bjne@2a01:799:a9e:3400:1cd3:7f89:d92c:a586)
[20:03:15] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[20:05:48] <kakolainen[m]> it can be a floating point comparison error in some certain CPU model, easy fix is to use simpler code like: X=(A>B and 1) or -1
[20:06:45] <bomb> easy peasy lemon squeezy
[20:07:51] <Elw3> Right, i dont see why i even have a second comparison.
[20:08:18] <kakolainen[m]> also calculations with inf / nan result might depend on CPU model
[20:09:51] <Elw3> Funny tho, i had this several times but now i am unable to reproduce it.
[20:09:59] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[20:11:15] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[20:12:40] <kakolainen[m]> actually most CPUs don't have comparison operation but it's always done by comparing with zero like (A-B)>0
[20:14:07] <bomb> most CPUs don't have comparison operation?
[20:14:49] <Elw3> makes sense
[20:15:01] <kakolainen[m]> so with some floating point errors (A-B)>0 and (B-A)<0 can return different result
[20:17:16] *** Joins: tuvok- (tuvok@Photography.tuvok.eu)
[20:18:45] <Elw3> as long as i am not insane and imagine things :D
[20:19:35] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[20:19:38] *** tuvok- is now known as tuvok
[20:20:32] <kakolainen[m]> bomb: yes no need an artihmetic comparison functionality when comparing with 0 the CPU can just check if the negative flag is true or false with floating points, with integers the first bit is the negativity flag
[20:21:59] *** Quits: bjne (~bjne@2a01:799:a9e:3400:1cd3:7f89:d92c:a586) (Ping timeout: 264 seconds)
[20:32:09] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 268 seconds)
[20:33:22] *** Joins: ratchet_freak (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be)
[20:35:00] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[20:35:50] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[20:49:58] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:56:28] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 258 seconds)
[20:57:41] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:00:18] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Ping timeout: 258 seconds)
[21:11:59] <Elw3> is there a less akward way of accessing ... than this ‣ y={...} x=y[8] ? I dont want to create y....
[21:13:35] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[21:15:37] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:18:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:19:30] *** Joins: tuvok- (tuvok@Photography.tuvok.eu)
[21:20:02] *** Joins: magla (~gelignite@55d45a4d.access.ecotel.net)
[21:21:23] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[21:21:24] *** tuvok- is now known as tuvok
[21:30:35] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 258 seconds)
[21:32:04] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:38:33] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Read error: Connection reset by peer)
[21:39:29] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:43:38] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Client Quit)
[21:43:58] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:45:20] <Elw3> You got to be kidding me, i removed the print thinking the error is solved. Happened again.
[21:45:42] <bomb> remove the entire program this time? :P
[21:47:13] <Elw3> No, my code is the bomb
[21:51:57] <kakolainen[m]> x=( select(8,...) )
[21:54:00] <Elw3> thanks kakolainen[m] 
[21:57:04] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Read error: Connection reset by peer)
[21:57:19] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[21:59:05] <avih> are they the same? y[8] returns one element, while select returns all of them from 8 onward, no?
[22:01:04] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Client Quit)
[22:03:23] <Elw3> Luckily it is the last anyway. But i think select allows a range?
[22:03:41] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[22:16:35] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[22:18:43] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[22:21:49] <avih> from the 5.1 manual: "select (index, ···) If index is a number, returns all arguments after argument number index. Otherwise, index must be the string "#", and select returns the total number of extra arguments it received. "
[22:22:06] *** Quits: magla (~gelignite@55d45a4d.access.ecotel.net) (Quit: Stay safe!)
[22:22:57] <avih> "after", so it should be 9 onward
[22:24:37] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[22:25:20] *** Joins: bomb (~bomb@user/bomb)
[22:25:35] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 264 seconds)
[22:27:06] *** Joins: tuvok (~tuvok@Photography.tuvok.eu)
[22:28:08] <avih> not sure if it's a wording issue, but this:  print(select(2, 1,2,3))  prints 2 4, so it seems it's FROM the index, not after the index
[22:28:26] <avih> prints 2 3  (not 2 4)
[22:28:46] <avih> (5.4 docs say the same - after index)
[22:29:16] <furq> probably just imprecise translation from portuguese
[22:29:48] <furq> the way it works is what you'd expect anyway 
[22:30:29] <avih> yeah, that's indeed what i would have expected. i'm not a native english speaker, but i think the wording should be fixed.
[22:31:38] <avih> i mean, other than this, i don't think i've encountered english/translation/correctness issues at the manuals
[22:32:20] <Elw3> actually if you look at x=(select(8,...)) it doesnt matter, it WILL only return the 8th item.
[22:32:50] <avih> according to the docs it should return 9th 10th... till the end
[22:33:00] <furq> it does, but you only assign the first one
[22:33:08] <avih> right
[22:34:02] <avih> well, it will have all the values, but all of them except the first will be discarded due to the parenthesis
[22:34:14] <furq> you don't need the parens there
[22:34:31] <avih> (i forgot the lua term for this.. "list adjustment" :) )
[22:34:46] <avih> right, because there's only one assignee
[22:35:15] <furq> but yeah in that case it's the parens that drop the other values not the lack of assignee
[22:35:41] <kakolainen[m]> also  x,y=select(8,...),Y   would return 8 and all elemnts after it but the comma discards the rest so y will be Y
[22:35:55] <avih> yeah
[22:36:29] <Elw3> Ah such lovely language, *sips tea*
[22:37:19] <avih> every language has its quirks
[22:40:25] *** Quits: nmz1 (~nmz@adsl-64-237-239-136.prtc.net) (Ping timeout: 250 seconds)
[22:40:49] *** Joins: nmz1 (~nmz@24.137.228.140)
[22:40:52] <avih> i think it's very nice for what it is. very small, fast and useful. sure, things could always be improved, but nothing is perfect, and it does get improved.
[22:40:56] <Elw3> This was not meant to be sarcastical. 
[22:41:01] <Elw3> It is a fine language
[22:41:32] <avih> (i still prefer js, but lua is great too)
[22:42:14] <Elw3> how dare you
[22:42:23] <avih> easily
[22:42:56] <avih> but the more the merrier.
[22:43:00] *** Quits: tuvok (~tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[22:43:25] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[22:44:10] <kakolainen[m]> does js even have goto?
[22:44:22] <avih> i think not
[22:44:29] <furq> useless
[22:44:44] <avih> you do have a point there...
[22:45:05] <technomancy> lua should add five blades^H^H^H^H^H equals signs to prove its superiority over js
[22:46:18] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:46:33] <avih> but the most painful thing in lua IMHO is not in the language itself. it's the lack of standard and lack of commitment to not break scripts. or even define some strict subset and commit to keeping this sub-dialect to always work, or some such.
[22:46:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:46:52] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 258 seconds)
[22:47:05] <avih> js would have never succeeded the way it did if every new version broke existing scripts.
[22:47:11] <Albright_> You mean like coding standards?
[22:47:20] <Albright_> Oh, ABI/
[22:47:24] <technomancy> well of course; that's because you can't embed a JS implementation in your web page
[22:47:32] <avih> no, like c99, but for lua. or ES262 for js
[22:47:43] <technomancy> context is completely different
[22:48:22] <avih> maybe originally, but not anymore (different context).
[22:48:43] <kakolainen[m]> avih is right, compatibility is the key for all succesfull technologies, incompatible trash usually dies sooner or later
[22:49:59] <avih> technomancy: also, the context is different in part exactly because scripts break - you can't rely on it for anything except embedding it and getting stuck with that version.
[22:50:44] <technomancy> that's a good point, as we all know lua is dead and useless, which is why we're in a channel on libera discussing it.
[22:51:36] <avih> i never said that, so please don't put words in my mouth.
[22:51:47] <technomancy> no that was a reply to kakolainen[m] 
[22:52:48] <avih> i think lua is great, but i also think the compatibility issue is one of its biggest drawbacks.
[22:53:16] <technomancy> well I for one am extremely glad that we don't have to put up with 5.1's shitty metatable semantics for all time and things can improve over time
[22:53:18] <kakolainen[m]> technomancy: do you guess which language has gained most in web development last two years, it's php, pure trash but I guess compatibility made it gain ground, Python probably killed compatibility between 2.0 and 3.0 and lost
[22:54:38] <Elw3> How do ppl even start using php? Do they just wake up one day thinking "oh today i gonna start learning a shitty language"
[22:55:02] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1830-41.w90-91.abo.wanadoo.fr)
[22:55:10] <bomb> it was more tolerable than others for web thing back in 1990s
[22:55:49] <Albright_> Elw3: As someone who has been making a living from PHP development since 2007, ouch
[22:56:18] <avih> php initially was a great replacement to the alternative at the time.it then became trashy, but it started very useful.
[22:56:20] <Elw3> But is it accurate?
[22:57:03] <Albright_> It has its advantages. Very fast, very broad compatibility, some very well-established ecosystems around WP and Drupal and the like, proper OOP model and improvements around things like type safety recently.
[22:58:22] <avih> overall, it depends on the developer. most languages, even "all over the place" ones can be used to produce maintainable code. it's just that some languages make it easier to create bad code.
[22:58:28] <Elw3> I guess lua is the only language that works with my chaotic throw 2000 lines in a file writing style.
[22:58:48] <Elw3> I learned python as a kid but got annoyed by indent errors.
[22:58:52] <kakolainen[m]> Python in web development peaked in 2016 and gone down from there, was 2016 when they broke compatibility?
[22:59:08] <avih> sounds about right
[22:59:40] <Albright_> avih: Yes, I agree with that. Writing good, safe PHP code is definitely possible if you have sufficient discipline and experience.
[22:59:46] <avih> so what python did once (so far), lua kinda does with every new version (not bugfixes)
[22:59:46] <bomb> amateurs are floating into Python, that created an ecosystem like NodeJS, where library maintainers feel like stars on GitHub
[23:00:05] <bomb> so they have been focusing on quantity instead of quality in the last few years
[23:01:52] <avih> that's the price of popularity, there's much more noise than with some elite language which only some few geeks use
[23:02:04] <Elw3> No one forces you to upgrade lua tho
[23:02:27] <avih> that depends. as a user, your distro can definitely force you to do just that.
[23:02:34] <bomb> upgrade it or I'll mess you up
[23:03:23] <kakolainen[m]> avih: what has Lua broken for you? 
[23:03:55] <avih> kakolainen[m]: it hasn't, because we haven't upgraded past 5.2
[23:04:05] <Elw3> Not really true for lua. I mean i am stuck to luijit in löe here anyway...
[23:05:04] <technomancy> no distro is going to drop 5.2 support
[23:05:12] <avih> kakolainen[m]: the point is that we support 3rd party scripts which we have no control over. it's like like we maintain all out scripts. so we can't afford to upgrade and just keep breaking user scripts.
[23:05:27] <avih> it's not* like we maintain...
[23:06:13] <kakolainen[m]> kind of same for me stuck in 5.1 and would be huge benefits upgrading to 5.4 but way too much work
[23:06:19] <avih> kind the same as redis (stuck with 5.1), neovim (5.1 and jit), nginix (luajit), mpv (5.1, 5.2, jit), etc.
[23:06:37] *** Joins: magla (~gelignite@55d45a4d.access.ecotel.net)
[23:10:41] <kakolainen[m]> my upgrade problem is only half caused by Lua's own incompatibility and mostly caused by custom hacks to the which would need to be imported to 5.4
[23:10:53] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 265 seconds)
[23:11:35] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[23:12:31] <bomb> proud 5.1er here
[23:12:47] <Elw3> Done. I have now wonderful nonsense function that renders anything as if drawn with a pencil
[23:13:20] <Elw3> Or sharpy if you prefer.
[23:16:13] <Tricycle> 5.3 is my blub.
[23:16:27] <avih> no 5.4? :)
[23:16:33] <Tricycle> I really like binary operators.
[23:17:09] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Ping timeout: 258 seconds)
[23:17:12] <Tricycle> I'm not saying 5.4 is bad.
[23:17:37] <avih> it basically depends on which version was latest when one starts using it. then they might upgrade to the next version (maybe), but they're unlikely to keep fixing thing again once yet another version comes out. so you stick either with the first version you started, or at most the next one.
[23:17:48] <Tricycle> But I don't feel the need for what it offers.
[23:18:08] <Elw3> Whats your opinion on publishing libs to the public? I always hear its a waste of time and noone cares from all sites.
[23:18:25] <Tricycle> And yes, it's quite precisely because I started wondering about which version of Lua I was using when 5.3 is current.
[23:18:59] <Tricycle> Personnaly I prefer to reinvent the wheel every time, and like Lua for its lack of batteroes.
[23:19:15] <technomancy> you're never going to have a python2 situation with lua because the ongoing maintenance costs of old versions are orders of magnitude lower than they are with python
[23:19:26] <Elw3> I know right. But drop in replacements for funny stuff are kinda cool.
[23:19:45] <avih> 5.1 was very popular, good, and lived long, so many projects started using lua seriously with 5.1. and... they still use the same version...
[23:19:46] <Tricycle> But if you want to publish libs, don't forget: what matter is not the lib itself, but the quality of the documentation around.
[23:20:40] <Elw3> So basically: Forget about it...
[23:21:23] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-0459-8d00-b0d7-86a9-1129-80ab.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[23:22:10] <avih> and it's a shame that people don't upgrade, because the language does become better. but it's also entirely understandable why they don't upgrade.
[23:22:56] <Tricycle> Of the changes I noticed, I don't like how 5.4 makes more explicity the difference between ints and floats.
[23:23:04] <Tricycle> I'd use C or something if I cared about types.
[23:24:05] <Tricycle> Lua 5.1 is still much used because of LuaJit I believe.
[23:24:06] <Albright_> I prefer explicit typing. Diff'rent strokes I guess.
[23:24:26] <avih> yeah, luajit definitely keeps 5.1 alive too
[23:25:00] <Tricycle> I'm not saying explicit typing is bad, but it's not what I'm looking for when I use Lua.
[23:25:43] <Tricycle> Heck, Lua is the only language I know where lists/array and dictionary/hastable are the same type!
[23:26:15] <kakolainen[m]> introducing integers to Lua it should have been done the full way like in Python arbitrary precision bignum integers by default
[23:26:17] <avih> they're not really the same type :) just two types stuck into one :)
[23:26:31] <Tricycle> Once I wrote a Lua code that added numbers to string and it just worked, before I even had to think about it!
[23:26:48] <Albright_> PHP arrays are kinda analogous.
[23:26:58] <bomb> it'd work on Java/C# too
[23:26:59] <Tricycle> Sure sometimes it's better to control type ... but then I don't use Lua.
[23:27:29] <Albright_> They can either be "indexed arrays" (normal arrays) or "associative arrays" (dictionaries)
[23:27:52] <Albright_> But the former is basically just the latter with special handling.
[23:28:30] <Tricycle> Yes, I fully expected to exists other languages I wasn't aware of that also didn't make this distinction.
[23:31:13] <avih> though in js arrays are also objects with numeric keys. they do have few methods specific to arrays, but internally arrays can be entirely normal objects, and in some implementations they really are
[23:31:14] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[23:31:47] <Albright_> Huh, didn't know that.
[23:32:23] <Tricycle> https://wiki.c2.com/?BlubParadox
[23:32:53] <technomancy> I know some people who view lua with suspicion because "only one data structure type" makes them think of JS and PHP which do the same thing, but worse
[23:33:22] <technomancy> which is pretty understandable at first glance
[23:35:38] <Albright_> Well, PHP has proper OOP, so not just one complex type.
[23:36:48] <technomancy> sure but I'm talking more about peoples' perception of PHP than the actual details of how it works nowadays
[23:37:36] <Albright_> Is that peoples' perception of PHP? That it doesn't have objects?
[23:38:04] <technomancy> I'm just talking about regular data structures
[23:38:48] <technomancy> I try to avoid conversations about OOP because everyone ends up talking in circles because they use the same terminology to mean different things
[23:39:00] <technomancy> like "proper OOP" does that mean it copies smalltalk?
[23:39:06] <technomancy> if not, what's proper about it?
[23:39:44] <Tricycle> Anyway, it's delusive to pretend programmers get to choose their language.
[23:39:46] <Tricycle> In the near future, it only depends on which megacorp you work for.
[23:39:53] <Tricycle> Googler use go.
[23:39:54] <Tricycle> At Seattle, people use C#
[23:39:54] <Tricycle> At Cupertino, they use Objective C
[23:39:54] <Tricycle> In the Amazon, live the Rustacean.
[23:39:54] <Tricycle> And at Facebook, it's php all the way down.
[23:39:58] <Albright_> Fair enough, I guess. My definition of "proper OOP" is classes, inheritance, access levels (public/private). Interfaces are almost a must-have but I guess I could go without
[23:40:20] <technomancy> Albright_: without message passing many people would say it misses the point
[23:40:32] <technomancy> but for me personally, I just give up and use better terminology that isn't so ambiguous
[23:40:34] <Albright_> Cupertino is Swift now (which is really nice. Probably my ideal language)
[23:40:35] *** Quits: Elw3 (~Elw3@x59cc9a79.dyn.telefonica.de) (Quit: Leaving)
[23:41:06] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Quit: Lebe lange und in Frieden)
[23:41:08] <technomancy> Tricycle: only the shadowrunners get to choose for themselves
[23:41:13] <Albright_> technomancy: Okay, what terminology do you prefer?
[23:41:30] <technomancy> Albright_: talk about inheritance all you want, talk about message passing, talk about encapsulation
[23:41:34] <technomancy> but don't pretend they're all the same thing
[23:43:58] <Albright_> So the objection is using OOP to refer to all of those ideas?
[23:44:17] <Albright_> I guess I'm using it more to refer to how it's used in practice than the theoretical ideals behind it.
[23:44:25] <technomancy> more that everyone has a different set of ideas that they mean when they use the term
[23:44:51] <Tricycle> What's message passing and what has it got to do with Object Orientation?
[23:45:04] <bomb> Objective C, SmallTalk
[23:45:10] <technomancy> Tricycle: Alan Kay (who invented OOP) says that message passing is the main point
[23:45:34] <technomancy> he said he wished he hadn't called it OOP because everyone got the wrong idea that it's all about objects
[23:46:15] <technomancy> each object communicates with other objects by sending messages to them rather than directly reaching inside the object, finding a function, and calling it
[23:46:27] <technomancy> (the latter is what most lua "OOP" solutions look like)
[23:47:03] <technomancy> according to the inventor of OOP, erlang is more object-oriented than java
[23:47:29] <technomancy> but if you use the term that way you will just make everyone confused. so! better not to use it at all.
[23:48:13] <Albright_> I guess that's idealistic. You could just use OOP the way that everybody else uses OOP. :P But if it really bothers you, then whatever.
[23:48:56] <technomancy> sure but then you get into arguments with pedantic people who actually know about the history of the language
[23:49:07] <technomancy> *languages
[23:49:23] <technomancy> and even in mainstream usage you get disagreements
[23:49:41] <Tricycle> So you could have OO without classes, as long as you only call functions and not change other's states?
[23:49:51] <Albright_> I guess? I think you're the first person I've met who has had this sort of objection. But maybe I'm not running in the right circles.
[23:49:54] <technomancy> rubyists say that message passing is a core part of OOP; other people say it requires classes and some say you can do it with prototypes
[23:50:09] <bomb> many ways to interpret OOP ideas
[23:50:23] <technomancy> Tricycle: according to whom? that's the problem. according to me the answer is 無.
[23:50:28] <technomancy> there is no right answer
[23:50:49] <Tricycle> Maybe if OOP was more clearly defined, it wouldn't be as succesful, as a concept.
[23:51:06] <Tricycle> The fuziness is what allows everybody to project their dreams and hopes!
[23:51:28] <kakolainen[m]> my conclusion about OOP it's mostly rules coming from human psychology to prevent them doing spaghetti code and nothing to do with hard computer science
[23:51:32] <Tricycle> And the constant flamewars keep it alive in the minds and hearts.
[23:51:40] <technomancy> Tricycle: sloppy thinking is extremely popular, it's true
[23:52:13] <Tricycle> I enjoy Lua because it lets me code sloppily!
[23:52:29] <Tricycle> Sloppy is comfy (when I'm the one who write).
[23:53:23] <bomb> strict is comfier. you can lean on the compiler
[23:53:24] <technomancy> not every problem requires mathematical precision
[23:54:02] <kakolainen[m]> anyway neural networks and functional programming is the future, OOP is the past
[23:55:23] <Tricycle> Functional Programming is more like uchronian fiction atm.
[23:55:31] <Albright_> Functional programming has been the future for the past 25 years or so
[23:55:41] <Tricycle> I'm not looking up, but I bet functional programming is older than OO
[23:55:43] <bomb> lol
[23:56:11] <technomancy> lambda calculus is older than computers
[23:56:26] <Tricycle> It's the future that never was.
[23:56:36] <kakolainen[m]> you can think of the neural network as one function
[23:57:49] <bomb> we're all applied mathematicians here
[23:58:03] <Tricycle> I think of neural network as the magic that allows skipping thinking about how to program the solution
