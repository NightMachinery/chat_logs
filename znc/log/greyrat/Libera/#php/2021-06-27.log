[00:41:29] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:44:17] *** Quits: DaNeenjah (~jake@102.129.152.150) (Ping timeout: 268 seconds)
[00:45:39] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[00:53:09] *** Joins: ziper (~deamon@212.237.171.46)
[00:55:10] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[01:07:37] *** Joins: fabienwang (~fabienwan@user/fabienwang)
[01:10:40] *** chao is now known as stenno
[01:48:25] *** Quits: seand (~seand@69.54.136.33) (Ping timeout: 258 seconds)
[01:49:18] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[01:49:44] *** Quits: ziper (~deamon@212.237.171.46) (Quit: ziper)
[01:56:14] *** Quits: fabienwang (~fabienwan@user/fabienwang) (Quit: fabienwang)
[01:56:47] <celphi> Why am i not getting an error? https://bpa.st/FKAA
[02:01:06] <tw2113> var_dump doesn't throw exceptions?
[02:01:36] <celphi> the catch never fires
[02:01:39] <celphi> tw2113:
[02:02:03] <tw2113> yeah cause there's no exception thrown
[02:02:40] <celphi> 4 isnt a strig though
[02:03:02] <tw2113> i would imagine a fatal error would happen
[02:03:07] <tw2113> try doing it outside of a try/catch
[02:03:27] <celphi> Nope- no error
[02:04:00] <tw2113> https://3v4l.org/qtmqD
[02:04:24] <celphi> yeah no error.
[02:04:49] <celphi> either way. shouldnt there be an error since it has `String $first`
[02:04:58] <celphi> and im passing `4`
[02:07:49] <tw2113> dunno
[02:07:59] <wovixo> Did you enable strict types?
[02:08:46] <celphi> No. I was assuming this would be the default behavior
[02:09:08] <tw2113> https://3v4l.org/o6dhY
[02:09:16] <tw2113> strict types version gives errors
[02:09:25] <wovixo> Bingo
[02:09:46] <celphi> k, so i guess i shouldnt count on using type hinting
[02:10:13] <celphi> bc it seems it will coerce it to the type needed
[02:12:43] <wovixo> Right. Type 'hinting' is an accurate description. Without strict mode PHP is going to helpfully try to cast for you, since it assumes you know what you're doing if you pass an int to a string function param.
[02:15:13] <celphi> wovixo: is it a bad idea to make all your files strict_type=1?
[02:16:36] <celphi> if my file example.php has strict_types=1 and it require_once another file- does that file enforce strict_types too?
[02:16:52] <tw2113> my opinion is if you are, do it knowingly and be prepared to handle all the potential things coming from the state
[02:17:04] <tw2113> i think it has to be declared in each file
[02:21:18] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) ()
[02:22:04] <celphi> k
[02:22:25] <celphi> i just tested- it seems to be a file by file basis
[02:24:52] <celphi> oh wait
[02:25:27] <celphi> so- it does effect classes you instantiate from the file you add strict_types
[02:25:55] <Byteflux> for your own code strict types is great, but can't really trust other libraries to be 100% honest with their return types so beware of that when using third party code with your own
[02:26:11] <ordos> Byteflux++
[02:27:56] <ordos> Byteflux, I once had to convince another company (a competitor in fact) to adopt a scrict type library for their API that we had no choice but to cooperate with as we both sought to monopolise the customer's business
[02:28:56] *** Joins: seand (~seand@69.54.136.33)
[02:29:07] <wovixo> Yeah, what Byteflux said. Realistically, you can only guarantee strict mode in your own code, so you really have to decide if it's worth the trouble versus putting time into writing tests that will expose type issues.
[02:30:04] <celphi> Byteflux: i just made an example and it seems to enforce it
[02:30:06] <celphi> https://bpa.st/W6QQ
[02:31:37] * ordos gets back to slinging PHP cURL hooks with zero type-checking
[02:41:28] *** Quits: genom (~g@37.214.83.249) (Remote host closed the connection)
[02:41:36] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:41:59] <Byteflux> celphi: yeah, just gotta beware that third party libs might do things like return a string where your type hint expects an int, so you need to vet the type. if the library declares a return type hint, then it's less of a problem because the value will be coerced
[02:44:52] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Ping timeout: 272 seconds)
[02:45:50] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[02:46:15] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[02:47:17] <Byteflux> celphi: for example you might have a thirdparty func like `function getSomeUsefulNumber() { return '1234'; }` which you need to pass to your own func (with strict types) `function doSomethingWithNumber(int $num) ...` you need to vet the result of getSomeUsefulNumber() before passing it into your own func.
[02:48:52] <Byteflux> in a fully strict typed language, return types are also declared so you know exactly what you're getting. in this situation where it's mixed between dynamic and strict typing, it's a bit harder
[02:53:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:56:18] <celphi> k
[02:56:39] <celphi> Byteflux: so you recommend whenevr workign with third party functions to not use it?
[02:57:30] <Byteflux> Depends on the library. If you're calling into it from a file that has strict types declared, you have an increased burden to ensure you're getting the right types.
[02:59:03] <Byteflux> If the library is properly type hinted and declares all of its function/method return types, then it's probably hassle-free to use with strict types enabled.
[03:09:55] *** Quits: magla (~gelignite@55d467e5.access.ecotel.net) (Quit: Stay safe!)
[03:16:30] *** Quits: wovixo (~wovixo@066-168-055-092.biz.spectrum.com) (Quit: Leaving)
[03:19:15] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[03:19:40] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[03:23:10] *** Quits: burrows (burrows@user/burrows) (Quit: Quitting)
[03:24:35] *** Joins: burrows (burrows@user/burrows)
[03:36:00] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:38:59] *** Joins: P1RATEZ (piratez@user/p1ratez)
[03:41:21] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[03:42:36] *** Quits: seand (~seand@69.54.136.33) (Ping timeout: 265 seconds)
[03:48:29] *** LSD is now known as acidsys
[03:53:51] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[03:54:16] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[04:00:46] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[04:22:20] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[04:29:34] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[04:29:59] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[04:39:35] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[04:41:39] *** Joins: stenno (~stenno@user/stenno)
[04:46:43] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[04:47:41] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:48] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[05:03:59] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[05:04:24] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[05:04:40] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: leaving)
[05:26:07] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[05:31:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:35:45] *** Joins: vlm (~vlm@user/vlm)
[05:35:45] *** Joins: stenno (~stenno@user/stenno)
[05:38:25] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[05:38:50] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[05:40:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[05:41:10] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[05:49:31] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:04:52] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[06:06:32] *** Quits: Xgc (~Xgc@user/xgc) (Read error: Connection reset by peer)
[06:07:50] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 252 seconds)
[06:09:11] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Client Quit)
[06:29:51] *** Joins: stenno (~stenno@user/stenno)
[06:34:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[06:41:33] *** Quits: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[06:45:43] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:56:13] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[07:06:31] *** Joins: Rockwood (~Rocky@user/rocky)
[07:09:44] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[07:11:14] *** Joins: Rockwood (~Rocky@user/rocky)
[07:13:21] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[07:13:37] *** Joins: Rockwood (~Rocky@user/rocky)
[07:23:51] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[07:23:57] *** Joins: stenno (~stenno@user/stenno)
[07:24:16] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[07:27:56] *** Joins: AMG (ghebo@user/amg)
[07:29:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[07:42:52] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[07:53:11] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[08:02:14] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[08:09:46] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:09:51] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:11:15] *** Joins: stenno (~stenno@user/stenno)
[08:26:05] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:26:17] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:36:37] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[08:37:02] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[08:38:50] *** Quits: Tempesta (Tempesta@user/tempesta) (Ping timeout: 245 seconds)
[08:41:20] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:41:25] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[08:43:32] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:47:31] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:50:14] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[08:50:14] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Ping timeout: 250 seconds)
[08:52:45] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[08:54:34] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[09:09:01] *** Joins: Rockwood (~Rocky@user/rocky)
[09:11:02] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[09:11:27] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[09:42:25] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[09:50:11] *** Quits: kssm (~kssm@88.215.67.144) (Quit: Lost terminal)
[10:06:40] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:10:14] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[10:20:11] *** Quits: alcume (~alcume@35.16.60.213.dynamic.reverse-mundo-r.com) (Read error: Connection reset by peer)
[10:50:34] *** Joins: verynoo2php (~verynoo2p@185.108.105.42)
[10:52:46] *** Parts: hexoroid (~null@5.43.69.229) ()
[10:55:43] <verynoo2php> hi guys can anyone tell me if there is anything immediately wrong with any of this code?
[10:55:46] <verynoo2php> https://pastebin.com/2w6Faj15
[10:56:01] <verynoo2php> I don't get any errors but the DB is not being updated
[10:59:26] <Blondie101010> verynoo2php: the main flaw in your code, which is likely not allowing you to know there was an error, is not checking return values
[11:00:27] <Blondie101010> if you have proper error reporting, and get no warning at all, then you'd probably see it in the return value from execute()
[11:02:30] *** Joins: verynoo2php65 (~verynoo2p@cpc83049-enfi23-2-0-cust77.20-2.cable.virginm.net)
[11:03:00] <Blondie101010> if not, there are other less common possibilities like having autocommit disabled
[11:03:16] *** Quits: verynoo2php (~verynoo2p@185.108.105.42) (Ping timeout: 246 seconds)
[11:09:57] <celphi> is there a way to assign variables from arrays?
[11:11:03] <celphi> ie. $array = [ 'john', 'doe' ]; $first = $array[0]; $last = $array[1]; is there a cleaner way?
[11:19:15] *** Quits: verynoo2php65 (~verynoo2p@cpc83049-enfi23-2-0-cust77.20-2.cable.virginm.net) (Quit: Client closed)
[11:21:14] <celphi> so i found this: `[$id, $name] = $data; // short-hand (recommended)` but what happens if $data only has 1 element
[11:21:34] <Blondie101010> that's a 2 second test
[11:22:14] <Blondie101010> https://3v4l.org/stLEG
[11:24:12] <celphi> Blondie101010: is there a way to assign null to $name as a default when $data has only 1 element?
[11:25:46] <celphi> `[$a, $b] = count($arr) < 2 ? [$arr[0], null] : $arr;` work?
[11:25:58] <celphi> or too sloppy?
[11:26:48] <Blondie101010> https://3v4l.org/QSF0j
[11:27:20] <Blondie101010> but expecting that means you have SERIOUS design issues
[11:27:31] <celphi> k
[11:27:33] <Blondie101010> that's not how you handle input
[11:29:50] <celphi> Blondie101010: i was thinking for something where i would use preg_match and $matches
[11:30:07] <celphi> when I dont know the # of matches
[11:30:25] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[11:30:50] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[11:30:54] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[11:32:43] <Blondie101010> number of matches?
[11:33:33] <Blondie101010> all I know is that you have an array which seems some kind of misorganized input
[11:36:18] <celphi> Blondie101010: yes. preg_match(PATTERN, STRING, MATCHES_ARRAY)
[11:36:36] <celphi> could be a variable # of matches
[11:36:56] <Rockwood> celphi, hi
[11:37:01] <celphi> hi Rockwood
[11:37:16] <Rockwood> celphi, that problem is solved
[11:37:21] <celphi> great job
[11:37:42] <Rockwood> i removed that lib and made own in simple
[11:38:54] <Rockwood> cya
[11:38:58] <Rockwood> good day all
[11:39:00] <Rockwood> cyta
[11:39:04] <Rockwood> have a good one
[11:39:08] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[11:40:39] <Blondie101010> showing the preg_match() syntax does not provide any useful information on how you use it
[11:40:51] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[11:41:13] *** Joins: genom (~g@37.214.83.249)
[11:41:16] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[11:42:16] <Blondie101010> but it does confirm my comment about a serious design issue
[11:42:46] <Blondie101010> you should require well defined data
[12:08:02] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:15:17] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[12:15:42] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[12:20:50] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Quit: Leaving)
[12:20:53] *** Joins: magla (~gelignite@55d41c60.access.ecotel.net)
[12:25:20] *** Joins: fabienwang (~fabienwan@user/fabienwang)
[12:27:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:45:43] *** Joins: dimi1947 (~dimi1947@2a02:1388:2092:e872:c4e3:730e:c7f4:72f0)
[12:50:43] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[12:51:08] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[13:02:31] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[13:03:30] *** Quits: ody (~user@88.97.100.148) (Ping timeout: 240 seconds)
[13:18:53] *** Quits: Derick (~derickr@Xdebug/derick) (*.net *.split)
[13:19:30] *** Joins: Derick (~derickr@Xdebug/derick)
[13:20:59] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[13:32:08] *** Joins: Sammitch_ (~Jerkface@159.203.29.159)
[13:32:08] *** Quits: cosine (~cosine@vpn.mashio.net) (*.net *.split)
[13:32:08] *** Quits: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4) (*.net *.split)
[13:32:09] *** Quits: starz (starz@ns378512.ip-37-59-36.eu) (*.net *.split)
[13:32:09] *** Quits: Sammitch (~Jerkface@159.203.29.159) (*.net *.split)
[13:32:15] *** Joins: cosinetau (~cosine@vpn.mashio.net)
[13:50:35] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[13:56:55] *** Joins: Akimb (~Akimb@86.100.13.100)
[13:58:58] *** Joins: tex (~super@user/dix)
[13:59:10] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[13:59:35] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[14:04:36] *** Joins: stenno (~stenno@user/stenno)
[14:06:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 244 seconds)
[14:26:16] <celphi> is it possible to get back reference with preg_replace_callback?
[14:53:45] <TinoDidriksen> The callback gets all capture groups, so capture it.
[15:02:26] *** Joins: mr_gant (~mr_gant@144.48.37.132)
[15:02:29] *** Quits: dimi1947 (~dimi1947@2a02:1388:2092:e872:c4e3:730e:c7f4:72f0) (Quit: Leaving)
[15:07:36] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[15:08:01] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[15:22:28] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 265 seconds)
[15:34:15] *** Joins: entuland (~entuland@user/entuland)
[15:36:33] *** Quits: fabienwang (~fabienwan@user/fabienwang) (Quit: fabienwang)
[15:44:25] <burrows> In bash I could redirect stdout/stderr to files and prepend each line with the current time and date using pipes.
[15:44:25] <burrows> In PHP8 (CLI) I've figured out how to redirect both output streams to files, however, I can't prepend time and date to each line, in real time, after calling system(). Is it possible?
[15:46:23] <AllenJB> As I understand it you should be able to do (almost) anything you can on the commandline from shell_exec(). Alternative you could write a bash script, then have PHP execute that
[15:49:36] <burrows> so there's no callback function for fwrite?
[15:52:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[15:52:43] <AllenJB> No, but where on earth has fwrite come from (there was nothing about it in your original problem description, from which I gathered you were using output redirection to write to files)? Now I am confused. It may help if you show us (pastebin) your current code, or a simplified version of it.
[15:59:16] <burrows> this is theory because I haven't started scripting anything yet so this is non-working code: https://pastebin.com/4hxysAzH
[16:00:01] <burrows> ...but I'm thinking about rewriting some of my more complicated bash scripts in PHP.
[16:16:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[16:19:31] <AllenJB> It's unclear to me what you're trying to achieve here (there's some apparent obvious errors - like declaring $STDERR as a variable, then using STDERR as a constant later). I would suggest you start writing some code, and look at logging libraries such as monolog and possibly output buffering ( https://php.net/ob )
[16:21:32] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[16:21:57] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[16:33:00] <burrows> STDERR is a built-in constant and I rushed that hypothetical example.
[16:33:16] <burrows> thanks, anyway, I'll find a way
[16:42:49] *** Joins: stenno (~stenno@user/stenno)
[17:22:57] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[17:23:22] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[17:29:01] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:31:31] *** Joins: NChief (~nchief@user/nchief)
[17:54:15] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:20:56] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:36:33] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Read error: Connection reset by peer)
[18:39:23] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Remote host closed the connection)
[18:39:48] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[19:34:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:05:32] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[20:06:45] *** Joins: LSD (~LSD@2.lsd.systems)
[20:22:55] *** Joins: ferdna (~ferdna@user/ferdna)
[20:24:22] *** Joins: Rockwood (~Rocky@user/rocky)
[20:39:01] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:40:37] *** LSD is now known as acidsys
[20:47:52] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:50:23] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Ping timeout: 244 seconds)
[20:59:17] *** Joins: seand (~seand@69.54.132.6)
[21:44:27] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[21:51:39] *** Joins: brickfat (~brickfat@user/brickfat)
[21:56:46] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[21:58:04] *** Joins: starz (starz@ns378512.ip-37-59-36.eu)
[21:58:22] *** Joins: Oclair (~Oclair@www.aventia.pw)
[22:38:05] *** Quits: seand (~seand@69.54.132.6) (Ping timeout: 258 seconds)
[22:38:41] *** Joins: seand (~seand@69.54.132.6)
[22:43:16] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[22:43:34] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[22:55:11] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[23:06:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:09:59] *** Quits: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:11:32] *** Joins: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[23:26:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[23:27:12] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[23:27:26] *** Joins: stenno (~stenno@user/stenno)
[23:27:33] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:47:26] *** Quits: seand (~seand@69.54.132.6) (Remote host closed the connection)
[23:58:52] *** Joins: seand (~seand@69.54.132.6)
