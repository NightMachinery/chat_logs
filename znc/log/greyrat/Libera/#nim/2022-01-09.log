[00:03:50] <FromDiscord> <Solitude> just echo the object
[00:03:57] <FromDiscord> <Solitude> `$` it
[00:04:29] <FromDiscord> <haxscramper> In reply to @krisppurg "Is there anyway in": with runtime strings - no, unless you overload `[]`, with compile-time strings you can write `[]` with `static[string]` argument and `when` over specific value
[00:04:29] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[00:04:42] <FromDiscord> <haxscramper> Pretty sure that's not what you need though
[00:04:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:04:48] <FromDiscord> <Patitotective> In reply to @Solitude "`$` it*": strings seems to be unquotes though
[00:04:53] <FromDiscord> <Patitotective> (edit) "unquotes" => "unquoted"
[00:05:40] <FromDiscord> <Solitude> !eval echo ("test",)
[00:05:43] <NimBot> ("test",)
[00:05:47] <FromDiscord> <Solitude> zamn
[00:06:14] <FromDiscord> <Solitude> or do you mean you want to outputs the string itself quoted?
[00:06:24] <FromDiscord> <Patitotective> yes
[00:06:28] <FromDiscord> <Solitude> .
[00:07:53] <FromDiscord> <Solitude> there is addQuoted, which append to string
[00:08:24] <FromDiscord> <Solitude> i guess this works too https://nim-lang.org/docs/strutils.html#escape%2Cstring%2Cstring%2Cstring
[00:10:34] <FromDiscord> <Patitotective> doesn't work with all types like repr but i guess its enough
[00:16:48] *** Quits: cyraxjoe (~joe@201.150.10.60) (Quit: I'm out!)
[00:18:43] <FromDiscord> <krisppurg> In reply to @haxscramper "with runtime strings -": actually what about? https://play.nim-lang.org/#ix=3Ly1
[00:18:50] <FromDiscord> <krisppurg> (edit) "about?" => "about this?"
[00:20:17] <FromDiscord> <krisppurg> although I have no idea how to convert a string to untyped
[00:22:02] <FromDiscord> <haxscramper> `.strVal()`, but it is similar to `static[]`, in the end you still hardcode string value
[00:22:19] <FromDiscord> <haxscramper> you want to dynamically select field to set value to, right?
[00:22:52] <FromDiscord> <haxscramper> With compiler language it is harder, you need to have some sort of dispatching system that would give you access to different fields
[00:25:06] <FromDiscord> <krisppurg> I want `f["abcdefg"]` to be `f.abcdefg`
[00:31:21] <FromDiscord> <krisppurg> Actually is there a reverse of `astToStr`?
[00:38:27] <FromDiscord> <hugogranstrom> In reply to @krisppurg "Actually is there a": If you make a macro you can do `ident(static string)` to transform it into an identifier
[00:39:50] <FromDiscord> <huantian> https://play.nim-lang.org/#ix=3Ly8↵something like this works, just use ``[]``
[00:39:56] <FromDiscord> <huantian> (edit) "use" => "switch it to"
[00:40:10] <FromDiscord> <hugogranstrom> sent a code paste, see https://play.nim-lang.org/#ix=3Ly9
[00:41:07] <FromDiscord> <krisppurg> In reply to @huantian "https://play.nim-lang.org/#ix=3Ly8 something like t": ty
[00:41:29] <FromDiscord> <krisppurg> In reply to @hugogranstrom.nim "If you make a": isnt ident deprecated since 0.18.1?
[00:41:54] <FromDiscord> <krisppurg>  https://media.discordapp.net/attachments/371759389889003532/929482569823682560/unknown.png
[00:42:44] <FromDiscord> <hugogranstrom> In reply to @krisppurg "isnt ident deprecated since": Don't think so https://nim-lang.org/docs/macros.html#ident%2Cstring
[00:43:14] <FromDiscord> <hugogranstrom> It's `ident=` which is depreacted
[00:44:05] <FromDiscord> <hugogranstrom> Because there was a special `NimIdent` type which they removed which was used in `ident=`
[00:45:04] <FromDiscord> <hugogranstrom> Nevermind, `ident(NimNode)` is depreacted
[00:45:10] <FromDiscord> <hugogranstrom> But not `ident(string)`
[00:47:53] <FromDiscord> <hugogranstrom> If you use `static string` instead of string as input you don't have to do `.strVal` to get the actual string
[00:48:53] <FromDiscord> <krisppurg> alright
[00:49:06] <FromDiscord> <krisppurg> In reply to @huantian "https://play.nim-lang.org/#ix=3Ly8 something like t": What about assigning?
[00:49:10] <FromDiscord> <huantian> on huh `newIdentNode(string)` is just the same as `ident(string)`
[00:49:36] <FromDiscord> <krisppurg> (edit) "In reply to @huantian "https://play.nim-lang.org/#ix=3Ly8 something like t": What about assigning? ... " 03added "with `[]=`"
[00:49:42] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3Lye
[00:49:51] <FromDiscord> <huantian> (edit) "https://play.nim-lang.org/#ix=3Lye" => "https://play.nim-lang.org/#ix=3Lyf"
[00:49:52] <FromDiscord> <huantian> (edit) "https://play.nim-lang.org/#ix=3Lyf" => "https://play.nim-lang.org/#ix=3Lyg"
[01:02:01] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3Lyk
[01:02:25] <FromDiscord> <krisppurg> @huantian
[01:02:37] *** Joins: sagax (~sagax_nb@user/sagax)
[01:02:45] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3Lyl
[01:02:50] <FromDiscord> <huantian> it's not really possible since it's not known at compile time
[01:03:01] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[01:03:33] <FromDiscord> <huantian> you can make your variable a `const`, but it's all done at compile time
[01:04:01] *** Quits: lain (~lain@172.16.254.xxx) (Ping timeout: 250 seconds)
[01:04:25] <FromDiscord> <krisppurg> still errors with `const`
[01:04:52] *** Joins: lain (~lain@172.16.254.xxx)
[01:05:29] <FromDiscord> <huantian> working for me↵https://play.nim-lang.org/#ix=3Lyn
[01:07:04] <FromDiscord> <krisppurg> this was mine↵https://play.nim-lang.org/#ix=3Lyp
[01:07:36] <FromDiscord> <huantian> change the `[]=` macro to static string
[01:08:56] <FromDiscord> <krisppurg> ah i didnt notice lol
[01:16:08] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[01:51:08] <FromDiscord> <krisppurg> holy
[01:51:09] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3LyI
[01:51:49] <FromDiscord> <krisppurg> (edit) "sent a" => "I dont know why but when I write this" | "paste, see https://play.nim-lang.org/#ix=3LyI" => "(https://play.nim-lang.org/#ix=3LyH) I get this error https://play.nim-lang.org/#ix=3LyJ"
[01:52:48] <FromDiscord> <krisppurg> @huantian
[01:55:10] <FromDiscord> <Elegantbeef> The macro isnt going to work
[01:55:28] <FromDiscord> <Elegantbeef> You're attempting to assign fields at runtime using a macro it's not going to work
[01:57:11] <FromDiscord> <Elegantbeef> You need to make a case statement or nested if to set fields based off `$val`
[01:57:23] <FromDiscord> <Elegantbeef> sorry `n`
[01:58:06] <FromDiscord> <krisppurg> example?
[01:59:14] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3LyN
[01:59:34] <FromDiscord> <Elegantbeef> That still will probably not work
[01:59:52] <FromDiscord> <Elegantbeef> Since the tree will not be contiguous
[02:00:31] <FromDiscord> <Elegantbeef> the `[]` isnt really implementable without using a union
[02:00:52] <FromDiscord> <Elegantbeef> Cause the return type can change based of the input string
[02:01:11] <FromDiscord> <Elegantbeef> In one case it could be a string in another it could be an int, so you either need to box it or have overloads
[02:02:11] <FromDiscord> <Elegantbeef> Atleast i assume this is for runtime logic
[02:03:58] <FromDiscord> <krisppurg> it does not work
[02:04:37] <FromDiscord> <Elegantbeef> Oh wait we can do this
[02:04:53] <FromDiscord> <krisppurg> (edit) "it does not work ... " 03added "- same error"
[02:05:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/wox
[02:05:37] <FromDiscord> <Elegantbeef> Remove the `[]`
[02:05:42] <FromDiscord> <Elegantbeef> `[]` will not work
[02:06:03] <FromDiscord> <krisppurg> what about the other []=?
[02:06:39] <FromDiscord> <Elegantbeef> The other `[]=` will not work either
[02:06:45] <FromDiscord> <Elegantbeef> It's a macro it's expanded at compile time
[02:06:55] <FromDiscord> <Elegantbeef> `n` is got from runtime data
[02:08:02] <FromDiscord> <Elegantbeef> The one i just provided should work
[02:08:48] <FromDiscord> <Elegantbeef> Though i dont get why you have `($val).fromJson`
[02:09:02] <FromDiscord> <Elegantbeef> Isnt the json node going to be exactly what you need so `val.fromJson` should work
[02:09:20] <FromDiscord> <krisppurg> im using jsony to parse objects
[02:09:41] <FromDiscord> <krisppurg> and jsony doesnt support jsonnode in fromJson as first argument
[02:09:46] <FromDiscord> <Elegantbeef> I see
[02:12:49] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3LyP
[02:14:43] <FromDiscord> <Elegantbeef> What's Guild?
[02:15:00] <FromDiscord> <Elegantbeef> is it a `ref object`?
[02:15:56] <FromDiscord> <krisppurg> yes it is a ref object
[02:16:17] <FromDiscord> <Elegantbeef> `obj[].fieldPairs`
[02:16:41] <FromDiscord> <krisppurg> didnt know you could do that lol
[02:16:52] <FromDiscord> <Elegantbeef> Well `obj[]` is a lvalue
[02:17:03] <FromDiscord> <krisppurg> ik but didnt think of that
[02:30:42] *** Joins: Bager170 (~Bager170@212.252.136.37)
[02:31:11] <Bager170> Can you mark individual fields in an object as acyclic instead of the whole object?
[02:32:14] <FromDiscord> <Elegantbeef> You cannot
[02:33:05] <FromDiscord> <Elegantbeef> Marking acyclic is just an optimization for  Orc iirc so a single field being cyclical causes the same issue
[02:34:26] *** Quits: Bager170 (~Bager170@212.252.136.37) (Client Quit)
[02:35:16] <FromDiscord> <Schelz> Can somebody provide me a doc for how to wrap up a c++ file for nim ?
[02:36:30] <FromDiscord> <Elegantbeef> Have you seen everything below https://nim-lang.org/docs/manual.html#implementation-specific-pragmas-importcpp-pragma ?
[03:22:16] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:26:22] <FromDiscord> <enthus1ast> the case object semantic is nearly usesless \:/
[03:26:32] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[03:29:34] <FromDiscord> <enthus1ast> real bummer
[03:45:49] <FromDiscord> <Elegantbeef> Does anyone know if it's possible to have the `static` scope run as if it was running inside a `nim e` instead of for the OS you're compiling for?
[04:11:38] *** Quits: dithpri (~dithpri@gateway/tor-sasl/dithpri) (Quit: '); DROP TABLE Users;--)
[04:29:11] *** Joins: Figworm (~inoor@user/figworm)
[04:47:13] *** Joins: cyraxjoe (~joe@2806:109f:13:79ff:aeed:5cff:fe8e:738f)
[04:47:25] *** Quits: algae (~algernon@170.10.246.117) (Ping timeout: 240 seconds)
[04:47:40] <FromDiscord> <demotomohiro> I don't know how to do it but this code do similar thing↵`const foo = staticExec("nim e mycode.nim")`
[04:53:16] <FromDiscord> <Patitotective> Can I get the nim filename in this command? I want to add an extension to the output files https://media.discordapp.net/attachments/371759389889003532/929545829147107388/unknown.png
[04:54:11] <FromDiscord> <Patitotective> Like
[04:54:47] <FromDiscord> <Patitotective> (edit) "Like" => "sent a code paste, see https://play.nim-lang.org/#ix=3LzA"
[04:55:46] *** Quits: Figworm (~inoor@user/figworm) (Quit: Figworm)
[04:59:34] <FromDiscord> <impbox [ftsf]> In reply to @Patitotective "Can I get the": using config.nims you can
[05:00:21] <FromDiscord> <Patitotective> how?
[05:00:22] *** Joins: MightyJoe (~joe@2806:109f:13:79ff:201:2eff:fe80:7df4)
[05:00:26] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3LzC
[05:00:50] <FromDiscord> <impbox [ftsf]> -o is optional, so i default to using the projectName
[05:01:17] *** Quits: cyraxjoe (~joe@2806:109f:13:79ff:aeed:5cff:fe8e:738f) (Ping timeout: 240 seconds)
[05:03:09] <FromDiscord> <Patitotective> hmm
[05:03:15] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LzD
[05:03:27] <FromDiscord> <impbox [ftsf]> ahh import std/compilesettings
[05:03:42] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/compilesettings.html
[05:05:52] *** Quits: MightyJoe (~joe@2806:109f:13:79ff:201:2eff:fe80:7df4) (Quit: I'm out!)
[05:07:31] *** Joins: cyraxjoe (~joe@2806:109f:13:79ff:201:2eff:fe80:7df4)
[05:10:22] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LzE
[05:13:33] <FromDiscord> <Patitotective> yea, it works if i do tht
[05:13:35] <FromDiscord> <Patitotective> (edit) "tht" => "that"
[05:29:54] *** Joins: algae (~algernon@170.10.246.117)
[05:33:47] *** Joins: bkay (~beshr@c-5a80e355.09-52-616c6b1.bbcust.telenor.se)
[05:34:23] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 256 seconds)
[05:35:07] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:59:38] *** Joins: neurocyte09172 (~neurocyte@user/neurocyte)
[06:01:25] *** Quits: neurocyte0917 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:01:25] *** neurocyte09172 is now known as neurocyte0917
[06:56:13] <FromDiscord> <gogolxdong (liuxiaodong)> Does anyone know Brave Browser?
[07:01:48] <FromDiscord> <Rika> Yes, why
[07:05:38] <FromDiscord> <gogolxdong (liuxiaodong)> Just curious and want to say it's a good production , I'm migrating from chrome to brave across the board.
[07:06:51] <FromDiscord> <Rika> I personally dislike the company
[07:07:06] <FromDiscord> <Rika> I would really just recommend Firefox over anything…
[07:07:07] <FromDiscord> <gogolxdong (liuxiaodong)> We'd like to make a similiar one but support IPFS natively especially on mobile phone.
[07:07:10] <FromDiscord> <Elegantbeef> I like the many issues they have
[07:07:18] <FromDiscord> <Rika> In reply to @Elegantbeef "I like the many": What lol
[07:07:30] <FromDiscord> <Elegantbeef> "Privacy first browser" which requires phoning home
[07:07:53] <FromDiscord> <Rika> Yeah lol
[07:08:23] <FromDiscord> <Rika> That weird currency thing they have too
[07:08:33] <FromDiscord> <Elegantbeef> https://github.com/brave/brave-browser/issues/19125 is a fun github issue
[07:09:11] <FromDiscord> <Elegantbeef> Yea i'm just using firefox
[07:11:45] <FromDiscord> <Rika> How fun
[07:20:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[07:23:11] <FromDiscord> <gogolxdong (liuxiaodong)> Though our testing of decentralized sharing cases for  Brave desktop shows it did good job, there is only public IPFS gateway to open file files/directories on mobile phone which is somewhat slower than native IPFS protocol.
[07:27:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:32:21] *** Quits: anadahz (~user@gateway/tor-sasl/anadahz) (Remote host closed the connection)
[07:32:40] *** Joins: anadahz (~user@gateway/tor-sasl/anadahz)
[07:39:43] <FromDiscord> <gogolxdong (liuxiaodong)> Most of public gateway are blocked by GFW.
[07:42:58] *** Quits: algae (~algernon@170.10.246.117) (Quit: WeeChat 3.4)
[08:05:01] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:56:15] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[09:11:38] <NimEventer> New Nimble package! conventional_semver - Calcualte the next semver version given the git log and previous version, see https://gitlab.com/SimplyZ/conventional_semver
[09:46:06] <FromDiscord> <Bung> @PMunch please check this when you feel free https://github.com/PMunch/nimlsp/pull/109
[12:28:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:44:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[13:29:54] <NimEventer> New post on r/nim by TheDarkMode: How to use JS to make a front end, see https://reddit.com/r/nim/comments/rzofbm/how_to_use_js_to_make_a_front_end/
[13:57:52] *** Joins: lumo_e (~enrico@151.29.77.175)
[14:21:54] <FromDiscord> <Isofruit> In reply to @Rika "I would really just": I use firefox on desktop any time of the week.↵Firefox mobile though feels hard-core like an abandoned product with how badly it performs on my (admittedly potato) phone
[14:22:07] <FromDiscord> <Rika> Ah mobile yeah
[14:22:11] <FromDiscord> <Rika> Pretty eh
[14:22:23] <FromDiscord> <Rika> Performance aside even, it just feels dated
[14:22:41] <FromDiscord> <Isofruit> If my side-project loads 3 times faster on brave than it does on FF then there are some fundamental engine issues
[14:23:07] <FromDiscord> <Rika> Probably
[14:24:25] <FromDiscord> <Isofruit> I've been contemplating which Chromium Browser to use on mobile until FF performance rises, so far brave seems alright
[14:24:51] <FromDiscord> <Isofruit> Then again, I don't do anything even remotely important on my phone if I can help it, particularly over the browser
[14:27:07] <FromDiscord> <Rika> I’m almost always outside the apartment so I use my phone mega heavily
[14:27:18] <FromDiscord> <Rika> I have two power banks always in my bag usually charged
[14:32:22] <FromDiscord> <Isofruit> Active a lot?↵Yeah not quite the same on my end, since the HO days I'm only on mobile on my way to sports or visiting someone
[14:34:00] *** Joins: PMunch (~PMunch@user/pmunch)
[14:36:32] <FromDiscord> <Rika> In reply to @Isofruit "Active a lot? Yeah": Yeah
[14:36:40] <FromDiscord> <Rika> I don’t really like staying in the house
[14:36:54] <FromDiscord> <Rika> You can imagine how COVID was for me when it was still lockdown for me
[14:39:05] <FromDiscord> <Isofruit> In reply to @Rika "You can imagine how": Ooooooooff, that must've been really damn rough, my condolences.
[14:39:34] <FromDiscord> <Isofruit> What you normally doing? Going for walks/coffee?
[14:40:02] <FromDiscord> <Isofruit> Are you the stock foto of a developer sitting on a lawn in a sunny day, back against the tree, enjoying the life? 😄
[14:40:26] <FromDiscord> <Rika> A lot of things, cycling around, going to the same malls I usually go to, parks, river sides, literally “throw a dart at the map and let’s see”
[14:40:50] <FromDiscord> <Rika> In reply to @Isofruit "Are you the stock": Nah I don’t develop in these places, too depressing to do
[14:45:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:52:31] <FromDiscord> <Rika> Ah, but I do read documentation like a book
[14:52:34] <FromDiscord> <Rika> Yes I’m a weirdo
[14:53:35] <FromDiscord> <Isofruit> That is legitimately a habit I envy you for, when I try reading docs without already having some level of connection to a given library, my brain doesn't comprehend the words fully. I see them, I get a rough idea, but it's not clicking anywhere
[14:58:04] <FromDiscord> <Isofruit> On a more channel related note:↵Is anyone else using prologue? If so, do you guys also have the issue that, when there is an exception and Prologue hands you the exception traceback, you don't see the exception-type ?
[15:08:45] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[15:19:57] <PMunch> @Isofruit, just wait until I have my eEink laptop up and running. I'll be chilling in the sun programming like a damn maniac!
[15:20:32] <FromDiscord> <Isofruit> Too much power!
[15:20:47] <FromDiscord> <Isofruit> He will be able to code and charge up with some Vitamin D
[15:21:18] <FromDiscord> <Isofruit> The world can not endure somebody developing and being in a healthy environment!
[15:24:51] <PMunch> Jokes on you, I already drink my Tran so I'm full of vitamin D despite not seeing the sun for half the year!
[15:24:53] <FromDiscord> <Isofruit> ...if I have an error, is there a way to see which package/module its defined in so I can import it and use it in a catch statement?
[15:25:07] <FromDiscord> <Isofruit> (edit) "error," => "Exception,"
[15:25:08] <PMunch> grep?
[15:25:34] <FromDiscord> <Isofruit> curses, the one linux tool I have not yet acclimatized to despite knowing it is useful
[15:25:39] <PMunch> :P
[15:25:59] <PMunch> `grep -Hnr "MyCoolException" ~/.nimble/pkgs`
[15:26:05] <PMunch> That should show you where it is
[15:26:11] <PMunch> Or rather everywhere it is mentioned
[15:26:41] <PMunch> I guess you might want to throw on a "MyCoolExcption =" to find the definition
[15:26:45] <FromDiscord> <Isofruit> Ahah! "NotFoundError" stems from norm!
[15:27:08] <PMunch> Some times the most basic tools will yield you the greatest power
[15:28:18] <FromDiscord> <Isofruit> Thanks for the command! I'll... one of these days I'll invest the time to actually learn grep
[15:28:46] <PMunch> Once you get used to it you will wonder how you ever got by without it
[15:29:10] <FromDiscord> <congusbongus> rg is pretty cool
[15:29:42] <PMunch> By the way, that command explained is "H: with filenames, n: with line numbers, r: recursive through folder"
[15:30:22] <PMunch> @congusbongus, rg?
[15:30:30] <FromDiscord> <Rika> Ripgrep
[15:38:51] <FromDiscord> <planetis> Hey, is it safe for c code generated by nim to do this\: `int test(int x) { return &x }` ?
[15:41:48] <FromDiscord> <federico3> is there a way to show the code generated by templates?
[15:43:25] <FromDiscord> <planetis> if not expandmacros then you could get it if you use it wrong and the compiler outputs an error with the expanded code
[15:44:47] <FromDiscord> <el__maco> that code doesn't look particularly "safe"
[15:46:12] <FromDiscord> <planetis> well ok sure but can it lead to undefined behavior if used incorrectly
[15:46:55] <FromDiscord> <el__maco> what would be a correct use of that 🤔
[15:47:06] <FromDiscord> <planetis> well its nim compilers job to make sure the code is safe but I am trying to figure if lent return type with .bycopy pragma produce faulty code
[15:48:14] <FromDiscord> <el__maco> `x` doesn't exist anymore when the function returns. Using that pointer would be a problem
[15:48:36] <FromDiscord> <planetis> ok thank you, thats what i thought as well
[15:49:32] <FromDiscord> <el__maco> not sure what compilers do in this situation, since depending on the calling convention `x` might not be anywhere in the memory to begin with
[15:49:34] <FromDiscord> <planetis> btw I ran that code with asan and it didn't complain, it confused me...
[15:50:21] <FromDiscord> <planetis> i had -fsanitize=address,undefined
[15:52:04] <FromDiscord> <Rika> It’s probably some hacky specification that says that it’s valid
[15:54:27] <FromDiscord> <planetis> ill report a bug anyway
[15:55:25] *** Quits: lumo_e (~enrico@151.29.77.175) (Ping timeout: 240 seconds)
[15:57:56] <FromDiscord> <el__maco> sent a code paste, see https://play.nim-lang.org/#ix=3LD2
[15:58:37] <FromDiscord> <el__maco> seems like the default calling convention puts arguments on stack then 🤔
[16:05:20] <FromDiscord> <Isofruit> Is there a lazy way around defining init procs?
[16:05:53] <FromDiscord> <Rika> Third party package
[16:06:04] <FromDiscord> <Rika> Beef made it because of course he did
[16:06:22] <FromDiscord> <Isofruit> sent a long message, see http://ix.io/3LD5
[16:07:15] <FromDiscord> <Isofruit> What's the name?
[16:07:19] <FromDiscord> <Isofruit> (edit) "long message," => "code paste," | "http://ix.io/3LD5" => "https://play.nim-lang.org/#ix=3LD7"
[16:07:28] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3LD7" => "https://play.nim-lang.org/#ix=3LD8"
[16:07:49] <FromDiscord> <Rika> Constructor
[16:08:10] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3LD8" => "https://play.nim-lang.org/#ix=3LD9"
[16:08:37] <FromDiscord> <Isofruit> Let me pray silently that he doesn't view Constructor like a child
[16:08:41] <FromDiscord> <Isofruit> (edit) "a" => "his own"
[16:09:01] <FromDiscord> <Isofruit> (edit) "like" => "as if it were"
[16:09:06] <FromDiscord> <Isofruit> There, better expressed
[16:11:23] <FromDiscord> <Isofruit> That looks really nice, and saves me writing like 50+ boilerplate constructors
[16:38:25] <FromDiscord> <Isofruit> Another question, is there perhaps a way to print the exception's package?↵I'm in an issue with xflywind about the thing with printing an error type. I think it'd be even more helpful to not just log the exception's type as a string, but also the package it comes from for easy importing, saves the user having to grep their nimble repo themselves.
[16:38:36] <FromDiscord> <Isofruit> (edit) "print the" => "echo an"
[16:57:58] *** Joins: lumo_e (~enrico@151.29.77.175)
[17:05:06] <FromDiscord> <xflywind> Sorry, I have no idea. But you can echo the package of specific type at compile time.
[17:05:36] <FromDiscord> <krisppurg> Is it weird to have a case statement inside a case statement?
[17:06:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[17:06:40] <FromDiscord> <xflywind> In reply to @flywind "Sorry, I have no": https://play.nim-lang.org/#ix=3LDs
[17:07:45] <FromDiscord> <xflywind> I don't know a way to detect that at runtime.
[17:18:44] <FromDiscord> <Isofruit> Hmm not without making an entire package out of it that makes a map of exceptiontype-package name at compile time and calls that at runtime, which would be shooting with cannons on sparrows
[17:26:44] <FromDiscord> <xflywind> I agree
[17:43:59] <FromDiscord> <Patitotective> How can I make Nim generates a file with extension on Linux? Like, what's the proper extension? `.so`, `.lib`?
[17:52:43] <FromDiscord> <federico3> is there any line profiler that generates charts & similar?
[17:54:50] <FromDiscord> <planetis> https://github.com/KDAB/hotspot ?
[17:54:54] <FromDiscord> <Rika> In reply to @Patitotective "How can I make": linux binaries do not have extensions
[17:56:43] <FromDiscord> <Patitotective> But it says it is a shared library, and shared libraries do have extensions (i think)
[17:58:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:00:41] <FromDiscord> <Rika> .so
[18:00:48] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LDN
[18:00:54] <FromDiscord> <Rika> yes
[18:02:13] *** Quits: lumo_e (~enrico@151.29.77.175) (Ping timeout: 240 seconds)
[18:25:22] *** Joins: lumo_e (~enrico@151.29.77.175)
[18:26:26] *** Joins: arkurious (~arkurious@user/arkurious)
[18:29:22] *** Joins: SebastianM (~seba@user/sebastianm)
[18:29:28] <FromDiscord> <federico3> thanks [planetis](https://matrix.to/#/@planetis:matrix.org)
[18:33:43] <SebastianM> Guys, I found that the latest build of nim in nightlies repo is from December 14. Whats going on?
[18:35:49] <FromDiscord> <federico3> [planetis](https://matrix.to/#/@planetis:matrix.org)\: do you use perf with it? Any way to add descriptive proc names to the output?
[18:36:46] <FromDiscord> <leorize> `--call-graph dwarf`
[18:37:21] <FromDiscord> <leorize> if hotspot's UI is not your jam, checkout FF profiler too\: https://profiler.firefox.com/docs/#/./guide-perf-profiling
[18:39:14] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[18:39:28] <FromDiscord> <planetis> Works with perf, I compile with -g at the end. The names are mangled but I generally don't mind. Only problem are [] procs which I need to find out which one is which at the C file.
[18:43:25] <FromDiscord> <federico3> any way to do line profiling?
[18:47:29] <FromDiscord> <Saptak> what is the difference between ``div`` and ``/``
[18:50:39] <FromDiscord> <Rosen> div is integer division
[18:57:58] <PMunch> SebastianM, hmm that is a bit peculiar
[18:59:41] <FromDiscord> <Saptak> In reply to @Rosen "div is integer division": what's the diffrence
[19:01:07] <FromDiscord> <Rosen>  https://media.discordapp.net/attachments/371759389889003532/929759198563143700/unknown.png
[19:01:23] <FromDiscord> <Rosen> div outputs the integer division result while / will give you a float result
[19:02:39] <FromDiscord> <Saptak> Oo
[19:09:11] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LEe
[19:11:44] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LEg
[19:21:33] <FromDiscord> <Patitotective> it worked that way LOL↵im super smart or nim's super intuitive
[19:30:48] <FromDiscord> <Rika> why not both
[20:20:52] <FromDiscord> <leorize> it's due to github sorting, check these tags instead\: https://github.com/nim-lang/nightlies/releases?q=latest&expanded=true↵(<@709044657232936960_=53ebastian=4d=5b=49=52=43=5d>)
[20:39:18] <FromDiscord> <exelotl> I'm I'm doing a PR to fix a bug introduced in Nim 1.6, do I need to include [backport:1.6] ?
[20:39:24] <FromDiscord> <exelotl> (edit) "I'm" => "if"
[20:39:47] <FromDiscord> <Elegantbeef> Nah
[20:41:57] <FromDiscord> <exelotl> even though it's a PR into devel and the current "in progress" changelog says 1.8.x ?
[20:43:47] <FromDiscord> <Elegantbeef> Yes, you can ask for it to be backported
[20:46:51] <FromDiscord> <xflywind> In reply to @exelotl "if I'm doing a": it is recommended to do so.
[20:47:41] <FromDiscord> <xflywind> https://nim-lang.github.io/Nim/contributing.html#the-cmdgit-stuff-general-commit-rules
[20:48:52] <FromDiscord> <exelotl> so I say [backport:1.6] and add an entry to the 1.8 changelog, and somebody will correctly move it into the 1.6.4 changelog when the time comes?
[20:49:20] <FromDiscord> <xflywind> true
[20:50:14] <FromDiscord> <xflywind> that's what has been happening
[20:50:52] <FromDiscord> <exelotl> ok, thanks!
[20:53:07] <FromDiscord> <xflywind> the changelog will appear on tge release artcile: https://nim-lang.org/blog/2021/12/17/version-162-released.html
[20:53:10] <FromDiscord> <xflywind> you are welcome
[20:53:23] <FromDiscord> <Patitotective> Should I export a std library or should I re-import it? (Like from the submodule to the main module of a nimble package)
[20:53:36] <FromDiscord> <Elegantbeef> Purely up to you
[20:54:05] <FromDiscord> <Patitotective> But it doesn't affect efficiency, right?
[20:54:22] <FromDiscord> <Elegantbeef> It does not
[20:56:30] <FromDiscord> <Elegantbeef> The module should be typed once then reused, and code generated is non duplicated, so it should be good all round
[20:58:43] *** Quits: qwr (~qwr@182-83-235-80.dyn.estpak.ee) (Read error: Connection reset by peer)
[21:33:54] <nrds> <10Wabby/freenode99> Is there a reason why issues are rarely labeled on the Nim repository?
[21:51:03] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/zL5
[21:51:42] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3LF8" => "https://play.nim-lang.org/#ix=3LF7"
[21:54:24] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LF9
[21:54:49] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3LF9" => "https://play.nim-lang.org/#ix=3LFa"
[21:54:55] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3LFa" => "https://play.nim-lang.org/#ix=3LFb"
[21:55:18] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3LFb" => "https://paste.rs/DC6"
[21:56:39] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LFe
[22:01:21] <FromDiscord> <Elegantbeef> `newCall(ident"PTable", ident"()", ident"as", ident"PTableTypes")` is just wrong in all regards
[22:01:34] <FromDiscord> <Elegantbeef> What is the code you want to generate written out as?
[22:02:25] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LFh
[22:02:32] <FromDiscord> <Patitotective> But those parenthesis doesn't seem to work in `newCall`
[22:02:41] <FromDiscord> <Elegantbeef> So then `nnkObjectConstr.newTree(ident"Ptable")`
[22:02:42] <FromDiscord> <Elegantbeef> Well of course not that's not a call
[22:03:06] <FromDiscord> <Patitotective> In reply to @Elegantbeef "`newCall(ident"PTable", ident"()", ident"as", ident": Yea, I'm not sure where to read about those procedures, docs doesn't seem to help
[22:03:19] <FromDiscord> <Patitotective> In reply to @Elegantbeef "So then `nnkObjectConstr.newTree(ident"Ptable")`": I'll try it later, thanks, I gtg
[22:03:49] <FromDiscord> <Elegantbeef> https://dev.to/beef331/demystification-of-macros-in-nim-13n8
[22:03:50] <FromDiscord> <Elegantbeef> Read what i linked when you have time
[22:03:52] <FromDiscord> <Elegantbeef> It'll give you a basis on how to write macros
[22:19:50] <FromDiscord> <Professor Actual Factual> How does one create a memory aligned seq in nim like cpp `_mm_malloc`?
[22:26:44] <FromDiscord> <ynfle (ynfle)> @Patitotective Try using `macros.dumpTree` to see the ast (which is basically what it says in the article beef linked/wrote)
[22:45:01] *** Quits: bkay (~beshr@c-5a80e355.09-52-616c6b1.bbcust.telenor.se) (Ping timeout: 240 seconds)
[22:56:22] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[23:11:17] <FromDiscord> <auxym> Anyone know if c2nim is supposed to support stdint types, eg `uint8_t`? It seems to be generating them as `uint8T` in nim, which isn't even valid nim...
[23:29:01] <FromDiscord> <Recruit_main707> afaik you can just do `type uint8T = uint8` and it should be fine
[23:30:59] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3LFK
[23:31:53] <FromDiscord> <auxym> also c2nim seems to choke on `attribute ((packed))` annotations to struct typedefs
[23:32:06] <PMunch> @auxym, have you tried Futhark?
[23:33:00] <FromDiscord> <auxym> not yet, I do remember reading about it on the forums... how well does it handle a huge soup of macros? 😛 Trying to make minimal bindings for tinyusb
[23:34:48] <PMunch> Better than any of the alternatives in my testing
[23:35:01] <PMunch> It's the only C wrapper I've managed to wrap huge codebases in
[23:35:51] <PMunch> It doesn't do a great job at exposing macros you're supposed to be able to call yourself though. But it handles all the macros uses internally.
[23:38:20] <FromDiscord> <auxym> great! might give it a try!
[23:40:50] <PMunch> Just to be clear, I'm also the person who wrote Futhark, so my views of the library are obviously a bit coloured by that
[23:41:03] <PMunch> But just let me know if you need help :)
[23:41:20] <FromDiscord> <Elegantbeef> My biggest issue with futhark is it's biggest benefit 😛
[23:41:31] <PMunch> Which is?
[23:41:35] <PMunch> That it requires Clang?
[23:41:50] <FromDiscord> <Elegantbeef> No that it doesnt emit `.nim` files
[23:41:57] <PMunch> It does though
[23:42:05] <FromDiscord> <Elegantbeef> I thought it didnt
[23:42:13] <PMunch> Just in a cache folder, because you're not supposed to ever have to look at them
[23:42:23] <FromDiscord> <Elegantbeef> Ah there we go
[23:42:27] <PMunch> It puts them in your nimcache :)
[23:42:36] <PMunch> So you can go have a look at them if you want to
[23:42:42] <FromDiscord> <Elegantbeef> So then i might use futhark on things more often
[23:42:52] <PMunch> But you shouldn't have to for what it's worth
[23:43:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:43:15] <PMunch> At least not once you're comfortable with how it wraps things
[23:43:18] <FromDiscord> <Elegantbeef> I prefer concrete definitions and if possible applying the idiomatic nim conventions on the imported procs
[23:44:58] <PMunch> Well Futhark is more about just making the C imports transparent
[23:45:41] <FromDiscord> <Elegantbeef> Yea i know easiest/fastest way to get the C-api into Nim
[23:45:46] <FromDiscord> <Elegantbeef> Not the most idiomatic one
[23:45:50] <PMunch> So you should build your stuff on top to give it better types and stuff. But that should call the underlying C procedures (you can make it zero-cost by using templates) so that if the underlying C code changes or updates you will have type conflicts
[23:47:45] <FromDiscord> <Elegantbeef> I know I know, I'm just odd and do not like that way
[23:48:15] <PMunch> Why not?
[23:49:06] <PMunch> What's better than just having the C types exactly as they appear in the C code and then get proper type mismatch error messages if the underlying code changes?
[23:50:26] <PMunch> I had a project that I had wrapped manually because I couldn't get c2nim or nimterop to work on it, even after about a week of trying with both (at work, so 8 hours a day). I wrote Futhark and wrapped it in minutes, and I was shocked(!) by the fact that my manual wrapper still worked because the type definitions had drifted a *lot* more than I had expected
[23:57:05] <PMunch> Futhark now keeps my types true to the C library, so if I have a type mismatch I will know. And Nim will generate objects that are actually the right size and fields at the correct offsets
[23:57:20] <PMunch> That's what I'm looking for in a C wrapper, a tool that wraps C
[23:57:40] <PMunch> And then I can build abstractions on top of the C library
