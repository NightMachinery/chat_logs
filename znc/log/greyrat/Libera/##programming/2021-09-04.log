[00:00:01] <GeDaMo> Forth! :P
[00:00:20] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[00:00:37] <MrMobius> C is a good place to start and also might be a good place to end if youre doing embedded
[00:01:22] <deniska> arduino is popular in that place, and it uses C++
[00:01:48] <gladys> yeah people have recommended python. but I feel like C is intimately attached to the things that made me interested in expanding my knowledge on the subject to begin with
[00:02:05] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[00:02:27] *** Joins: Auron (~Auron956@user/auron)
[00:02:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:02:45] <deniska> gladys: you can always switch things around
[00:03:12] <deniska> gladys: or even combine languages, e.g. using python to inspect/modify various binary artifacts, generate weird headers or whaever :)
[00:03:13] <gladys> how much harder is real programming compared to just shell scripting?
[00:03:24] <gladys> like in bash
[00:03:38] <deniska> gladys: I'd argue that shell scripting is real programming too
[00:03:53] <GeDaMo> You'll probably get more segfaults with C :P
[00:04:07] <deniska> gladys: any kind programming is real I'd think? Well, zachtronics has some programming themed games, that might be not so real programming :P
[00:05:19] *** Joins: humanface (~humanface@20014C4E1C473D00F09548BCDEF4C917.dsl.pool.telekom.hu)
[00:05:29] <edgar-rft> simple programs aren't more difficult to write than shell scripts, and shell scrpts can be pretty complicated, too
[00:05:39] <gladys> oh my bad i was under the impression shell scripting was not programming
[00:05:51] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[00:05:58] <deniska> gladys: programming is a process of writing programs
[00:06:03] <gladys> since it is translated and talsks to hardware indirectly
[00:06:18] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[00:06:26] <deniska> gladys: many common language runtimes are also fairly indirect
[00:07:57] <edgar-rft> writing an OS kernel *is* more complicated than shell scripting just because you need to care about a *lot* more details, but not because programming itself is more complicated than shell scripting
[00:09:39] <gladys> oh okay. i think im more interested in being able to look at an understand linux kernel than making kernel myself
[00:09:55] <gladys> and execute scripts from bash
[00:10:39] <gladys> thatr are maybe a little more complex because i seem to have hit a wall where someone said to me why the hell are you doing that in bash 
[00:11:40] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 240 seconds)
[00:11:51] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[00:11:52] <gladys> i was told it was inefficient 
[00:12:03] <deniska> gladys: that's why people switched to perl and later to python for their scripting needs
[00:12:36] <deniska> gladys: shell makes it quite complicated to do a lot of stuff correctly which shouldn't be that hard
[00:12:48] *** Joins: Spydar007 (~spydar007@user/spydar007)
[00:12:57] <deniska> gladys: like iterating over list of files which may contain weird characters
[00:13:44] <deniska> I personally write a thing in python as soon as I know it'll need a loop or a condition :)
[00:16:21] <gladys> how do you sed in python
[00:16:35] <gladys> i read python doesnt have array which is my favorite thing
[00:17:02] <gladys> perhaps im mistaken
[00:17:07] <pyzozord> is fortran interesting language to learn?
[00:18:01] <GeDaMo> Python has regular expressions
[00:18:15] <GeDaMo> Also lists (which are really arrays)
[00:18:32] <deniska> yeah, python ppl just call their arrays "lists"
[00:19:30] <DPA> Lists do have automatic resizing, though. Tuple may be more like arrays.
[00:21:29] <deniska> tuples, while technically being immutable variant of a list, are typically used as an adhoc struct with enumerated items
[00:21:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:21:41] *** Joins: flynn (~mcbloch@user/flynn)
[00:22:44] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[00:23:04] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[00:23:04] *** Joins: khanred (~khanred@user/khanred)
[00:23:06] *** Parts: khanred (~khanred@user/khanred) ()
[00:24:07] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com)
[00:24:52] *** Joins: dcand (~dcand@user/dcand)
[00:25:26] *** Quits: dcand (~dcand@user/dcand) (Remote host closed the connection)
[00:26:13] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[00:26:13] <edgar-rft> pyzozord: fortran is mainly used in professional math, but not because it's the best language for that. The main reason it that fortran has the best-debugged libraries just simply because they are older, so there was more time for finding bugs.
[00:26:32] *** Joins: dcand (~dcand@user/dcand)
[00:27:18] *** Joins: inky_ (~inky@188.115.242.135)
[00:27:19] <gladys> can i use sed in python?
[00:27:24] <gladys> or something analogous
[00:27:31] <gladys> stream editor
[00:27:43] *** Joins: kodah (~kodah@user/kodah)
[00:28:06] <edgar-rft> sed is a known thing, but I have no idea about python
[00:28:52] <dcand> gladys you can just exec sed
[00:29:07] <GeDaMo> I'm pretty sure you can use regex to replace
[00:29:27] <GeDaMo> https://docs.python.org/3/howto/regex.html#search-and-replace
[00:29:28] <bayaz> Title: Regular Expression HOWTO â€” Python 3.9.7 documentation 
[00:30:14] <pyzozord> What sounds interesting to me in fortran that it's kind of the lisp of imperative languages. It's the first one. And it's still used today.
[00:30:21] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[00:30:32] <GeDaMo> Was COBOL not before that? :P
[00:30:44] <pyzozord> I've herad it was after, but I don't know for sure
[00:30:53] *** Joins: zaher (~zaher@37.48.181.25)
[00:31:38] <dcand> look what i found https://dl.acm.org/doi/book/10.5555/2737838
[00:31:39] <bayaz> Title: Engineering a Compiler | Guide books 
[00:31:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[00:32:17] <deniska> edgar-rft: didn't people try rewriting these libraries in C and C++ and rewrites just turned out to be slower?
[00:32:20] <pyzozord> oh, cool
[00:32:24] *** Quits: gtc (~gtc@200.40.87.165) (Quit: Leaving)
[00:32:32] <edgar-rft> Fortran is a few years older than Cobol (but not much)
[00:32:45] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:32:47] <GeDaMo> https://archive.org/details/bitsavers_ibm704704F56_6414147/mode/2up
[00:32:47] <bayaz> Title: ibm :: 704 :: 704 FortranProgRefMan Oct56 : Free Download, Borrow, and Streaming : Internet Archive 
[00:33:10] <pyzozord> ooh nice!
[00:33:50] <pyzozord> question is, is it interesting enough to learn. I heard fortran was before dijkstra and the structured programming, and it was more "open"
[00:34:41] <pyzozord> I think I tend to like the more "powerful" languages, less restrictive ones
[00:35:18] *** Joins: zaher_ (~zaher@37.48.183.220)
[00:35:58] <pyzozord> In that sense I think C is more "powerful" than c++. C++ is more defined, so also more limited. In C you can pretty much make your own objects and other things as you need them
[00:36:22] <gladys> cool. can you calculate/verify hash like sha1sum for conditional if/then lines ?  
[00:37:01] <edgar-rft> deniska: Fortran is a very *simple* language (because computers in the 1950s were pretty simple machines compared to today's CPUs) and Fortran's infamous GOTO loops are very colose to assembly instructions. There had been many attempts to rewrite Fortran's LAPACK and BLAS in different languages but they always turned out as either slower and in most cases as *way* more buggy :-)
[00:37:02] <gladys> i wont keep asking all these specific things i know that progeamming languages are versatile and you can usually find a way ive been told
[00:37:03] <MrMobius> i didnt think fortran was anything special when i learned it but i already knew C and basic by then. i dont think youll find anything interesting if you already know any languages along those lines
[00:37:21] *** Quits: dcand (~dcand@user/dcand) (Quit: Client closed)
[00:37:43] <pyzozord> I'd imagine it has more unrestricted goto
[00:37:54] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 244 seconds)
[00:37:54] *** Quits: zaher (~zaher@37.48.181.25) (Ping timeout: 244 seconds)
[00:38:16] <pyzozord> I'm actually a bit tempted to write some code with goto. I never really did.
[00:38:47] <pyzozord> I don't really subscribe to dijkstra's ideas about provability of programs and all that stuff
[00:38:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:38:55] <GeDaMo> pyzozord: you really should learn some Forth :P
[00:39:12] *** Joins: kariosfox (~kariosfox@176.221.124.69)
[00:39:19] <pyzozord> heheh. Yes I should. It does sound quite interesting
[00:42:14] <pyzozord> the RPN will require some effort to get used to
[00:42:35] <pyzozord> but lisp does the same thing
[00:43:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:43:18] *** Joins: zaher__ (~zaher@178.171.181.8)
[00:43:25] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[00:44:00] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:44:32] <gladys> im really interested in learning how to make my computer do things more than like software or anything. (Whic is why Ive read a bunch of books on shell but none on programming language)
[00:45:51] <gladys> thats why im really into th arrays defined by conditional statements that consist of another array of variables 
[00:46:03] <gladys> thats kinda what i do in bash
[00:46:10] *** Quits: zaher_ (~zaher@37.48.183.220) (Ping timeout: 244 seconds)
[00:47:05] <gladys> if theres anyone who possibly has logged on since i asked. 
[00:47:24] <gladys> are there any books on C that compare to the Linux Bible by Christopher Negus
[00:47:28] <gladys> ?
[00:47:33] <gladys> which is a book on shell
[00:47:50] <gladys> or The Linux CLI by William Shotts. those were my two favorites
[00:49:35] <bjs> gladys: shell scripting to C is quite a leap,  but I guess the canonical "The C programming language" by K&R is good.  Not sure what "kind" of book you are looking for
[00:49:52] <gladys> like a textbook. that doesnt cost as much as a textbook
[00:50:32] <edgar-rft> you could try the Holy Bible written by Moses :-)
[00:51:02] *** Joins: inky (~inky_@46.36.119.19)
[00:53:14] <edgar-rft> my heretic suggestion is reading Peter Seibel's "Practical Common Lisp" instead -> https://gigamonkeys.com/book/
[00:53:14] <bayaz> Title: Practical Common Lisp 
[00:53:22] <gladys> I was also thinking of reading Think Python by Allen Downey, i know they say python is better to start with,
[00:53:53] <pyzozord> I've bough Fluent Python as I heard it assumes some basics and focuses on more advanced subjects
[00:54:08] <bjs> gladys: well, it's certainly a very different language to C and possibly has more in common with bash
[00:54:57] <pyzozord> gladys: the C bible is of course K&R. Modern C is also often recommented.
[00:56:10] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e) (Ping timeout: 240 seconds)
[00:56:29] <oldlaptop> some of the #c people like King better (e.g. https://www.amazon.com/C-Programming-Modern-Approach-2nd/dp/0393979504/)
[00:56:41] <mrig> gladys: it really depend upon the type of person that your are too.
[00:57:02] <pyzozord> gladys: it sounds like K&R will be perfect for you, it really open the door to programming wide open, you'll be equipped to start learning any subject about computers you wish
[00:57:22] <oldlaptop> K&R has the shining virtue of being concise
[00:57:30] <gladys> correct me if im mistaken, im interested in writing scripts to supplant the tedious wall ive hit in bash.that is to say im interested in shaping the function of  my own local machine.  and i read that python is not geared toward conditional kind of things for being the arbiter of metabolic flow of my computer
[00:57:45] <pyzozord> the con of K&R is that is a bit old now and not all things are relevant 
[00:57:55] * oldlaptop tries to work out what on earth the "metabolic flow of my computer" is
[00:58:08] <bjs> gladys: well the "arbiter of metabolic flow" of your computer is your operating system if I guess even remotely correctly what you were trying to convey
[00:58:15] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Quit: Leaving)
[00:58:22] <mrig> gladys: go is also an interesting language.
[00:58:32] <gladys> i define how my computer works and fucntions. what daemons are active, i define what "homeostasis" is for my own serrver
[00:58:49] <pyzozord> gladys: if you are interesting writing scripts and you know bash, python will be ideal. It is the next logical step and also big leap into general purpose programming
[00:59:04] <oldlaptop> That definitely does sound like operating system development, not scripting.
[00:59:07] <gladys> thats what i do in bash. thats why i didnt really go into this thinking "i want to programming"
[00:59:23] <oldlaptop> (Unless you mean systems administration, and not programming at all)
[00:59:52] <pyzozord> yeah they might mean sys admin stuff
[01:00:18] <oldlaptop> some operating systems tend to give you more control in practice than others (e.g. common linuxes give you more control than windows or macos, the BSDs and certain less-common linuxes give you more control than those in turn)
[01:00:20] <pyzozord> in that case python is still the right choice, but also general linux sysadmin education
[01:00:30] <gladys> no not sysadmin. i write scripts in shell but they get tedious and someone was like why are you doing that in bash its so inefficient
[01:00:43] <mrig> go is far nicer than python though.
[01:00:48] <mrig> much  closer to C
[01:00:49] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:01:01] *** Joins: flynn (~mcbloch@user/flynn)
[01:01:02] <pyzozord> mrig: are you prepared to fight me for that claim! :)
[01:01:06] <mrig> many systems admins are turning to go now.
[01:01:07] <gladys> i didnt go into this thinking i was programming.
[01:01:23] <bjs> gladys: bash is a programming language,  you already program
[01:01:26] <oldlaptop> gladys: I would enthusiastically recommend tcl as a better shell than the shell, so to speak. (Many of the fundamental metaphors are similar to Bourne family shells, particularly the reliance on string substitution.)
[01:01:41] <gladys> but it doesnt talk to the hardware directly
[01:01:46] <pyzozord> mrig: I do agre go is nice. But I think of go and python as equals, just different pros and cons
[01:01:47] <oldlaptop> particularly if python seems to be impedance-mismatched with you
[01:01:52] <bjs> gladys: really nor does any other language
[01:02:02] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e)
[01:02:04] <bjs> gladys: or at least, they talk the same amount more or less
[01:02:29] <pyzozord> gladys: you can think of go as something between c and python
[01:02:38] <gladys> i dont know anything about python. or programming beyone using bash to make my computer do things
[01:02:51] <mrig> pyzozord: I'm not sure that python could match go in many circumstances :)
[01:02:58] <gladys> i heard it is not "process oriented" does thjat matter for me
[01:03:02] <pyzozord> gladys: you can think of python as bash on really really ton of steroids
[01:03:28] <bjs> gladys: Some languages like C are going to let you get a lot closer but very little of what you'll do day-to-day is really talking very closely to the hardware.  All programming languages are basically just like bash,  you write text that represents a program and the tool runs it and it does stuff. 
[01:03:39] <mrig> gladys: take a look at 'The go programming language' it is a wonderful book, the first chapter is on line for free, see how you get on with it.
[01:03:47] <bjs> gladys: what kind of "things" do you want to make your computer do that you cannot get with bash?
[01:03:55] <oldlaptop> The trouble with Bourne-family shell scripts (bash is a Bourne-family shell) is that the Bourne shell language (and it is a programming language) is optimized for interactive use, as a shell, not for writing programs ("scripts" are programs).
[01:04:15] <gladys> i want to define how much data is defined by a single character in binary
[01:04:27] <gladys> but thats way over my head
[01:04:38] <mrig> gladys: http://www.gopl.io/  <- K'n'R on C is also fantastic, this is by one of the same authors and is similar.
[01:04:39] <bayaz> Title: The Go Programming Language 
[01:04:40] <oldlaptop> I'm not even sure what you mean by that.
[01:04:42] <gladys> i just want to make my shell sutomation less clsutered
[01:04:44] <bjs> gladys: well, it depends on which character surely :)
[01:05:10] <pyzozord> less "clustered"?
[01:05:19] <bjs> gladys: Python is a good language to do that kind of thing.
[01:05:23] * edgar-rft has a bad character
[01:05:25] <gladys> okay thats all i wanted to know
[01:05:26] <mrig> writing using pipes is easy as are flags and command line arguments :)
[01:05:40] <oldlaptop> gladys: You may enjoy looking at https://wiki.tcl-lang.org/page/Tcl+Tutorial+Lesson+0
[01:05:40] <bayaz> Title: Tcl Tutorial Lesson 0 
[01:05:48] <mrig> program start up is very fast so excellent in your .bin folder.
[01:06:17] <pyzozord> gladys: you kind of can't go too wrong with any of the choices we offered, they are all great languages
[01:06:19] <oldlaptop> Tcl fills more or less the same sort of role as python, but is a *very* different kind of language. If one doesn't fit the way your mind works, maybe the other one will. (It's probably not very likely that both will...)
[01:06:28] <gladys> okay thats all i wanted to know. someone told me i was wasting time  and that a real programming language  i could do what i write in .sh faster
[01:06:30] <oldlaptop> It's definitely closer to the way Bourne-family shells work.
[01:06:52] <pyzozord> gladys: no that's not true, knowing shell scripting is very useful, and many programmers don't know it
[01:06:52] <gladys> okay ill check out tvl
[01:06:55] <gladys> TCL
[01:07:02] <oldlaptop> The rule of thumb I would use is that if the script actually uses any bash-specific features, it probably should not be a shell script.
[01:07:15] *** Joins: pavonia (~user@user/siracusa)
[01:07:25] <gladys> but programmers MAKE things. im more into modulating things that already exist
[01:07:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:07:36] <pyzozord> just staying in bash if it works for you is perfectly ok
[01:07:41] <bjs> gladys: you write bash, you are also a programmer
[01:07:50] <gladys> yea but is it easier to do python
[01:07:51] <pyzozord> don't let anyone tell you bash is somehow inferior
[01:07:57] <gladys> id imagine its harder to learn
[01:08:11] <gladys> but to do the same tasks in pyhton faster?
[01:08:15] <moose> I second that. Anyone who writes bash or tcl or perl or anything is still a programmer. Heck even if it's a domain-specific language for a video game.
[01:08:21] <oldlaptop> That depends on what the tasks are.
[01:08:39] <mrig> gladys: there is a really nice example of why concurrent code is interesting in that first chapter, and it is very easy to use.
[01:08:41] <pyzozord> not really, difficulty wise python and bash are similar. Python has just a bit more things. Speed wise python will be somewhat faster but not by a lot
[01:08:47] <oldlaptop> Bourne-family shells make some things much, much harder to do correctly than they would be in "real" languages.
[01:08:55] <moose> Speed is irrelevant, pyzozord. A language does not have speed.
[01:09:16] *** Quits: rexar89_ (~alexi5@208.83.82.234) ()
[01:09:22] <Juliu> moose, well, actually ...
[01:09:23] <oldlaptop> (Quoting and field splitting, for example, is an absolute rat's nest. And it needs to be, or it would be much less convenient to use as an interactive shell.)
[01:09:27] <pyzozord> moose: I don't think the question asker is a the level where they want to be concerned about the niuances like that
[01:09:35] *** saribro is now known as swinnenb
[01:09:55] <moose> pyzozord: But it's kind of short changing them to compare languages by speed.
[01:10:08] <oldlaptop> moose: A language could be easy or difficult to write a fast implementation for. (Things like python and tcl are relatively difficult to write fast implementations for, and C is relatively easy to write fast implementations for.)
[01:10:19] <moose> oldlaptop: 100000% agree with you there.
[01:10:39] <pyzozord> moose: you can't be perfectly precise, or you will overwhelm the begginer with highly irrelevant to them information
[01:10:52] <moose> But what I was trying to steer away from is "language x is faster than language y but they're about the same so go with x"
[01:11:02] <oldlaptop> You also have to consider the degree to which people confuse languages with their most common implementations; how many people who casually say "lol python is slow" realize they're talking abou CPython (as opposed to PyPy or something)?
[01:11:17] <moose> And advocating a language based on theoretical performance in an implementation is blah.
[01:11:30] <mrig> If all you have been doing with a shell script is sticking different programs that are written in C together, python could be shockingly underwhelming.
[01:11:31] <pyzozord> moose: that a kind of consideration you might be able to reason about when you know at least two languages
[01:11:40] <oldlaptop> bash is more or less perfectly identical with its one implementation, bash :|
[01:11:42] <mrig> it was for me
[01:12:09] <gladys> appreciate the help guys. I just really need to read things to learn things. I cant just watch online lectures. at least not by themselves. but i was under the impression real programming was way harder than bash. thats why I love the william shotts and Christopher negus books on shell
[01:12:20] <moose> oldlaptop: I've seen an implementation of a subset of bash in a video game :p
[01:12:22] <gladys> which is why im askign aorund
[01:12:41] <deniska> gladys: bash scripting is arguably harder whatever you may call "real programming" :)
[01:12:56] <moose> gladys: Real programming, if you're talking about for most jobs, is shockingly simple for the most part.
[01:13:05] <oldlaptop> moose: There's lots of implementations of "subsets" of bash! but the definition of bash-the-language (as opposed to, say, POSIX sh, which is actually defined by the POSIX standard) is basically bash-the-program
[01:13:11] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[01:13:16] <moose> But most people in the real world, where I work, they are very underexposed to bash and find it difficult. But they develop web apps in Java, C#, C++, etc.
[01:13:56] <pyzozord> moose: https://pbs.twimg.com/media/EOw8aroWkAASiyq.jpg
[01:13:56] <bayaz> Type: image/jpeg Size: 184.2 kB 
[01:14:00] <oldlaptop> gladys: It's easy to use simple shell scripts to duct tape other, bigger programs together, in large part because that's exactly what they're for.
[01:14:17] <oldlaptop> It's possible to use them to do more complex things, but it gets harder to work with very quickly.
[01:14:21] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[01:14:22] <moose> pyzozord: haha
[01:14:41] <pyzozord> moose: it's more important to help actual person than to show of your understanding of the field
[01:15:06] <oldlaptop> bash, specifically, provides a lot of added features (like arrays) to try and make that easier, but it still is fundamentally a Bourne-family shell, and that brings with it lots of added difficulties that cannot be solved without making it not a Bourne-family shell anymore.
[01:15:08] <moose> Your idea of help is different than mine probably. I saw your comments misleading.
[01:15:13] <moose> That's why I piped up.
[01:15:14] *** Quits: zaher__ (~zaher@178.171.181.8) (Ping timeout: 252 seconds)
[01:15:25] *** Joins: zaher (~zaher@188.160.136.150)
[01:15:36] <mrig> there is no misleading, only different directions.
[01:15:36] <gladys> @ oldlaptop yes thats exactly what i had in mind. im trying to do everything in bash, when i was told it couild be a lot smoother and neater to use bash as the glue between scripts in full languages
[01:15:38] <oldlaptop> (and as I've already said I think any shell script that "needs" bash-specific features probably shouldn't be a shell script in the first place)
[01:15:46] <moose> It's important, in my opinion, that multiple perspectives are given when someone is learning something new.
[01:15:56] <gladys> you articulated that so much better than i coul
[01:16:00] <moose> You have yours, I have mine, that's why IRC is here. We're a community of different perspectives. It's glorious.
[01:16:06] <pyzozord> moose: that's fair
[01:16:10] *** Joins: zaher_ (~zaher@188.160.148.200)
[01:16:16] <moose> pyzozord: I was not saying you were wrong, just to level set :)
[01:16:24] <moose> But more like "Hey also think about ____"
[01:16:33] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[01:16:33] <moose> Apologies if it came off argumentative!
[01:16:58] <pyzozord> no no it's fine, and you do bring up a solid argument about providing multipe perspectives
[01:17:05] <oldlaptop> Tcl and Python (and Lua, and Perl, and probably others) are also designed to work with other languages - for example Tcl was originally used only as an embedded interpreter inside application programs, it came as a surprise to its author that it was useful for writing standalone programs
[01:17:33] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[01:17:34] <moose> Tcl support for scripting used to be included in almost everything.
[01:17:57] <oldlaptop> but they're designed to integrate with code written in C (mostly) a bit more intimately, usually by calling functions directly instead of by executing other completely separate programs
[01:18:08] <mrig> I've not come across Tcl before, interesting to hear about it in this context.
[01:18:20] *** Joins: Pickchea (~private@user/pickchea)
[01:18:30] <oldlaptop> Probably more importantly they're not designed with such a strong emphasis on being used as an interactive shell, so they don't have the same pitfalls that the Bourne shell does.
[01:18:34] <pyzozord> although I'm not sure how much smoother calling programs and scripts will be in python. Bash is great as being a script-glue.
[01:18:41] <oldlaptop> (even though Tcl in particular is conceptually quite similar)
[01:19:10] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Remote host closed the connection)
[01:19:29] <pyzozord> python wants you to program in python, it's more selfish then bash. Bash is more happy to call other things
[01:19:30] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[01:19:30] <oldlaptop> moose: nowadays it seems to mostly live in the EDA world it came from :P
[01:19:36] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Ping timeout: 256 seconds)
[01:20:04] <mrig> gladys: what kind of things do your scripts do; What do you do on your computer?
[01:20:05] <oldlaptop> in the sense that EDA is the most important commercial application, at any rate
[01:20:07] *** Quits: zaher (~zaher@188.160.136.150) (Ping timeout: 252 seconds)
[01:20:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:21:12] <oldlaptop> #tcl on Free - uh, Libera - does get the occasional eggdrop person asking a question. That's a completely, utterly, entirely different culture/group/whatever than the ordinary tcl people. :P
[01:21:32] <pyzozord> gladys: learning a general purpose language will increase your ability and teach you a lot. It's a great way to expand your programming horizons. But don't take that misguided advice about bash being a bad choice seriously.
[01:22:13] <pyzozord> gladys: depending on what exactly you do it might be a bad choice, but it kind of sounds like it is a good choice in your case
[01:22:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:22:24] <mrig> The language choice is ultimately down to what you want to achieve.
[01:22:47] <oldlaptop> bash/Bourne-shell is a bad choice for some things, just as python would be a bad choice for some things, or C would be a bad choice for some things, or java or go or *any other language ever invented* is a bad choice for some things
[01:22:53] <oldlaptop> every tool has its job
[01:23:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:24:21] <gladys> just define processes of varying complexity. but sometimes I want to do something like make a cronjob that is dependent upon an array consisting of variables that are themselves arrays of if then statements.not the msot complex but it just gets a little messy
[01:24:32] <gladys> influenced by various other factors coming inonthe equation
[01:24:46] <gladys> thats just an aexample. its generally the arrays that get messy
[01:24:55] *** Lord_of_Life_ is now known as Lord_of_Life
[01:25:14] <oldlaptop> I'm not sure I understand what you mean. It does sound like it's probably something you shouldn't be doing with a Bourne-ish shell, at least not in that way.
[01:25:27] <oldlaptop> You shouldn't store code in variables, in Bourne-family shells
[01:25:39] <gladys> strings*\
[01:25:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:25:41] <oldlaptop> even though you *could* :P
[01:25:47] <oldlaptop> code is strings, and strings are code
[01:25:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:25:56] <oldlaptop> (in Bourne shells, and tcl, and maybe a few others?)
[01:26:13] <oldlaptop> in lisp code is lists, and lists are code.
[01:26:50] <mrig> gladys: could be time to start investigating databases?
[01:27:10] <gladys> like i wanted to calculate and verify a hash function and for use in an if then condition, that would conditionally be fed into sed and used in another array. that was for the network attached storage
[01:27:13] <moose> oldlaptop: Ah yes true.
[01:27:17] <moose> RE: EDA world
[01:27:20] <gladys> i guess thats kind of sys admin
[01:27:22] <oldlaptop> Ooh, let me drag in my other dead horse: sqlite is a marvelous and wonderful thing, and tcl just happens to be the best language to talk to it from :D
[01:27:35] <gladys> mostle simmple things
[01:28:02] <gladys> its just gets a little messy and i was told it could be easier witht the scripts that have a lot of conditonal factos and executiosns
[01:28:05] <oldlaptop> (which is a good thing because tcl is a little weak for data structures on its own)
[01:28:08] <pyzozord> sqlite is alive and kicking from what I saw
[01:28:15] <moose> sqlite is indeed alive
[01:28:19] <oldlaptop> sqlite runs the world
[01:28:39] <moose> Every kiosk out there has a local sqlite database, every ATM has one.
[01:28:41] <user51> i am not trapped in the world full of sqlite. sqlite is trapped in here with ME!
[01:28:42] <moose> Lots of embedded stuff.
[01:28:57] *** Quits: DasBrain (DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[01:28:58] <moose> I am sorry I just said kiosks were embedded though, they really aren't anymore.
[01:28:59] <oldlaptop> it is surely the most widely-deployed relational database by a mile, probably the second most widely-deployed software system of any description or so (after zlib)
[01:29:04] *** Joins: DasBrain_ (DasBrain@user/dasbrain)
[01:29:05] <pyzozord> I suspect it's in many more programs, we just don't notice it so much, because it's so embeddable
[01:29:15] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:29:33] <moose> oldlaptop: zlib is... e v e r y w h e r e
[01:29:40] <moose> I am always shocked when I see someone not using zlib.
[01:30:38] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[01:31:02] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[01:31:40] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e) (Ping timeout: 252 seconds)
[01:31:50] <oldlaptop> moose: it is perhaps a testament to the importance of marketing glitz that this is the webpage for the most widely-deployed piece of software on the planet: http://zlib.net/
[01:31:51] <bayaz> Title: One moment, please... 
[01:32:10] * oldlaptop stabs cloudflare with a rusty railroad spike
[01:32:21] <moose> oldlaptop: Yeah. If you build it, they will come.
[01:32:44] <moose> oldlaptop: Also one thing I like is their FAQ. #1 is the most important. Is zlib Y2K compliant? haha
[01:33:40] <mrig> I don't know, the spot highlight on the logo is a little flamboyant :P
[01:33:59] *** ochronus- is now known as ochronus[away]
[01:34:22] <moose> Remember when everything had sunburst effects?
[01:34:26] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:34:56] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e)
[01:35:11] <moose> or I guess it was more of a lens flare effect
[01:36:00] <pyzozord> I like that early iphon ui style where it was immitating real world materials and objects
[01:36:03] <Caffeinated> because of adobe premier :P
[01:39:07] <mrig> is zlib used in tar compression in Linux?
[01:39:43] <LjL> pyzozord, it's funny how Google's "Material" UI is pretty much the opposite of that
[01:39:55] <mrig> ah yes for gz, with the z flag I suppose.
[01:40:43] <pyzozord> mrig: no, just checked with ldd. I think tar maybe just calls external programs
[01:40:53] <mrig> I like having real world lighting effects on graphic tools, audio plugins are superb for this.
[01:40:57] <moose> I really feel like material design is almost the same as fluent design
[01:41:30] <pyzozord> LjL: yeah, but I understand them. It's kind of flat/material design era we are in
[01:41:50] <moose> Why can't we have a fluent material reactive social-mobile web 3.0 asynchronous experience in the cloud?
[01:41:59] <moose> I am just so tired of this web 2.0 life.
[01:42:07] *** Quits: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0) (Ping timeout: 252 seconds)
[01:42:29] <pyzozord> all the logos lost their depth, got streamlined and simplified. Even the pringles guy lost the sparkle in his eye
[01:42:53] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:43:41] <mrig> pyzozord: oh cool, I just ran ldd on the tar.so :D
[01:44:08] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[01:44:34] <pyzozord> It looks good though, I am not denying this design trend we are in looks good and is more streamlined
[01:44:52] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:45:02] <gladys> is there a way to go to school for like Linux servers  but not for like hardware IT stuff
[01:45:03] <pyzozord> But there was something cool and tactile about immitating real life objects
[01:45:21] <mrig> right -z filters thought gzip
[01:45:34] <gladys> because sys admins your like setting up a raid server and configuring it and overseeing persmissions for nodes and stuff
[01:45:36] <pyzozord> mrig: cool good to know that
[01:46:06] <pyzozord> gladys: get interested in "devops" those guys make tons of money right now
[01:46:34] <mrig> and love docker :|
[01:46:52] <mrig> docker is written in go, this is why it is loved by system admins.
[01:47:00] <mrig> they make companies with it.
[01:47:10] <pyzozord> docker, kubernetes, aws/gcp, ci/cd, lots of bash and other scripting
[01:47:20] <mrig> yep
[01:47:33] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:48:09] <deniska> and yaml farming
[01:48:18] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[01:49:43] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Remote host closed the connection)
[01:49:50] <davros> wasm in a web-page.. it'll always need some minimal JS stub to load it and call it? (kind of reminds me of the situation with Java android apps + the NDK)
[01:50:05] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[01:50:14] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[01:50:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:50:31] <deniska> davros: as it stands now, yes
[01:50:36] *** Joins: flynn (~mcbloch@user/flynn)
[01:51:02] <pyzozord> there was that wasmos or whatever that project was called. Some kind of standard that allowed for standarized io and stuff
[01:51:05] <deniska> davros: wasm was intentionally left without any implicit way to manipulate the web page
[01:51:34] <deniska> davros: well, to manupulate anything really, besides memory blocks, and calling externally provided functions
[01:51:38] <mrig> davros. yes its a bit of a shame that you cant use it straight from a HTTP request some how, pretty minimal JS though.
[01:52:00] <mrig> easy to get your readers machines mining bitcoins for you :|
[01:52:21] <pyzozord> WASI
[01:52:22] <davros> eventually android got this "native activity", but that would be yet another standard to wait for in the browser, i guess
[01:53:00] * mrig is ldd'ing everything
[01:53:06] <pyzozord> mrig: heheh
[01:53:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:53:15] <davros> well there will be  a bunch of other resources anyway. "the stub web-page" + "the main wasm program" + "a bunch of other assets it must read in"
[01:53:59] <mrig> I suppose ldd reads the elf headers.
[01:54:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[01:54:43] <mrig> oh and anything linked to from that file.
[01:54:54] <deniska> mrig: ldd may actually run arbitrary code
[01:55:26] <pyzozord> mrig: few more programs you might be interested in https://en.wikipedia.org/wiki/GNU_Binutils
[01:55:26] <bayaz> Title: GNU Binutils - Wikipedia 
[01:55:27] <deniska> mrig: so it shouldn't be run on untrusted input
[01:56:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Quit: Quit)
[01:56:04] <mrig> oh object dump is cool!
[01:56:15] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[01:56:18] <mrig> right yes i was just reading about that.
[01:56:20] <davros> are you using c++ ->wasm or rust -> wasm
[01:56:29] <davros> do i recognise your nick from #rust
[01:56:34] <gladys> wow devops is like spot on. Someone else had told me pentesting but thats not what im into. its very networking focused, and is involved more with the disruption of homeostasis rathere than the maintenence opf it
[01:56:36] <deniska> pfft, not even writing WAT files manually
[01:57:03] <mrig> gladys: cool :)
[01:57:20] <mrig> deniska: WAT?
[01:57:21] <pyzozord> mrig: few more interesting programs dpkg -L libc-bin | grep bin
[01:57:23] <mrig> :P
[01:57:40] <phogg> mrig: see also readelf(1)
[01:58:11] <deniska> mrig: it's wasm's, uhm, assembly language
[01:58:29] *** Joins: rexar89 (~alexi5@208.83.82.234)
[01:58:32] <deniska> mrig: https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format
[01:58:32] <bayaz> Title: Understanding WebAssembly text format - WebAssembly | MDN 
[01:58:34] <davros> oh they made that naming a bit messy lmao
[01:58:47] <davros> wasmasm compiles to wasm
[01:58:50] <gladys> i like to define and facilitate cohesion on my home server. not disrupt it on others, no disrespect to pentesters but hacking is lame
[01:59:20] <gladys> but juist not with the hardware IT. so devops is like im gona look into this
[01:59:22] <Juliu> I never understood why some people have servers at home
[01:59:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:59:34] <Caffeinated> tell that to Steven Levy and all the folks in his book(s)
[01:59:36] *** Joins: flynn (~mcbloch@user/flynn)
[01:59:44] <deniska> gladys: "define and facilitate cohesion" sounds like something Overwatch from HL2 would say :D
[02:00:18] <mrig> deniska: Ah right yes.
[02:00:54] <mrig> phogg: oh thanks!
[02:00:55] <pyzozord> deniska: sounded to me like they just like to keep stuff neat and tidy
[02:01:05] <deniska> Juliu: cheaper than to put them to datacenter, also easier to access in an emergency
[02:01:59] <Juliu> I just have a laptop and never needed anything more than that
[02:02:09] * edgar-rft invites you all to his home for becoming his servants
[02:02:20] <Caffeinated> haha
[02:02:21] <Juliu> edgar-rft, how much do you pay?
[02:02:52] <edgar-rft> servants can be happy if they don't get punished
[02:02:58] *** Quits: Akuli (~Akuli@87-94-108-135.bb.dnainternet.fi) (Quit: Leaving)
[02:03:05] <gladys> so correct me if im wrong? programming languages are directly translatable into binary bits? is the metric by which individual characters in programming correspond to bits universal. so that one could translate code (obviously not for real since its millions of 01, but maybe teeny wee bits) it into source code if they knew the source
[02:03:50] <gladys> in programming LANGUAGES*
[02:03:57] <webNET4> a decompiler?
[02:04:04] <Juliu> gladys, are you joking?
[02:04:22] <gladys> yes but im wonder abnout the data stored in each character
[02:04:27] <gladys> is universal for each language
[02:04:36] <gladys> maybe differeing betweeen characters
[02:04:47] <bjs> gladys: it's not,  and that's not quite how a programming language works
[02:04:53] <pyzozord> gladys: compilers translate programming language into binary. Programming languages do not need to be compiled. Programming languages can be interpreted. Bash and python are interpreted.
[02:04:59] <gladys> im not a programmer i want to know how the cpu gets fed the thread from source
[02:05:03] <bjs> gladys: it's like translating English to German, you can't do it character-by-character
[02:05:43] <edgar-rft> programming languages are translated into binary bits as soon as you save the file on some disk.
[02:06:08] <moose> edgar-rft: before then actually
[02:06:08] <gladys> i know if a program knows the langhuage it can translate the 1 and 0 into code. but what makes it so that somebody who knows the language of closed source software could not make a program to reveal the sourcve code of it
[02:06:13] <davros> anyone know much about networking through emscripten:  i've heard the equivalent of UDP isn't available , if true what would it take to workaround, add support 
[02:06:13] <moose> as soon as you push the keys man, they're in memory as bits
[02:06:21] <bjs> gladys: nothing stops them
[02:06:26] <bjs> gladys: except how complicated it is to actually do :)
[02:06:28] <gladys> a compiler*
[02:06:28] <webNET4> a decompiler.
[02:06:31] <davros> i hear theres some thing called "webtransport" and sometihng else for the equiv of UDP
[02:06:37] <gladys> sorry other way around
[02:06:42] <gladys> code into executable
[02:06:57] <gladys> is it like a hash?
[02:07:03] <moose> no
[02:07:10] <gladys> like how its only one way
[02:07:19] <mrig> oh wow readelf gives you the placement of every function call in the binary
[02:07:22] <edgar-rft> moose: okay, characters get translated into binary bits as soon as they are stored in some form of computer memory. Is that more correct? :-)
[02:07:24] <pyzozord> gladys: it's literally bit numbers representing cpu instructions
[02:07:24] <moose> compilers turn source code into binaries, decompilers turn binaries into source code that represents it but the two source codes may not be similar at all
[02:07:30] <gladys> yeah in cache?
[02:07:36] <moose> edgar-rft: maybe they're in your mind as bits! :P
[02:07:43] <Juliu> gladys, first you had to define the measure that you use to determine the "data stored in each character", as you called it
[02:07:47] <gladys> bits are how much data
[02:07:48] <gladys> 4 
[02:07:49] <gladys> ?
[02:07:51] <moose> 1 bit.
[02:07:54] <moose> A bit is one bit.
[02:08:01] <moose> A byte is probably 8 bits, but not always :p
[02:08:13] <bjs> gladys: you can't ask how many bits per character in the same way you can't ask "how many German letters for each English letter?"
[02:08:16] <moose> An octet, that's always 8 bits I believe.
[02:08:23] <gladys> each digit in binary corresponds to 4 bit
[02:08:25] <gladys> *byte\
[02:08:27] *** Joins: arcatech_ (~arcatech@user/arcatech)
[02:08:32] <webNET4> deeeeee commmmm pile er
[02:08:56] <edgar-rft> moose: true, there might be a bit of characters in my mind. I totally forgot that. Thank you!
[02:09:07] <pyzozord> gladys: it's more complex, there are multiple ways of representing numbers and letters in binary. All have different pros and cons and are used in different situations
[02:09:10] <moose> I wonder if our brains are like that D:
[02:09:16] <mrig> the character may be a bitmap though :P
[02:09:17] <moose> Are there biological caches
[02:09:26] <Juliu> gladys, do you think there is mor information for the compiler if you call a variable "extremelyUsefulObjectHandlerHelperClassObject" instead of just "x" ?
[02:09:34] <gladys> yes but im wondering why you cant just use a decompiler on any closed source program in C if it know the "key" by which binary corresponds to sourcve
[02:09:36] <mrig> moose: mines not, mines more like a firewall.
[02:09:43] <pyzozord> gladys: cpus usually can understand binary representations of integers and floating point fractions
[02:09:45] <deniska> bjs: (about 1.136)
[02:09:45] <bjs> gladys: you can
[02:09:47] <mrig> often stops a lot of traffic :|
[02:09:47] <moose> mrig: it lets the NSA in?
[02:10:00] <mrig> moose: na, keeps the rubbish out.
[02:10:00] <webNET4> whaaaaaat
[02:10:05] <moose> aaah
[02:10:10] <bjs> gladys: it's just very complicated to do,  and the output isn't very readable.
[02:10:13] *** Joins: Samian (~Sami@2620:10d:c091:480::1:77bb)
[02:10:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[02:10:37] <Juliu> gladys, you CAN re-convert a binary into code, but it will of course not look like the original code
[02:10:40] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[02:10:58] <pyzozord> gladys: letters are higher level abstractions, cpu doesn't know anything about letters. Usually letters are just assigned with numbers. Often A is assigned number 65. That's ASCII encoding.
[02:10:58] <webNET4> the decompiler generates the source, if the binary has debugging symbols thats going to be more readable if the decompiler is worth it's weight in bits
[02:11:07] <deniska> gladys: a typical C compiler loses a bunch of information about the original C source which would be really important for a human to make sense of a program, but not important to a computer to execute it
[02:11:40] <gladys> yeah cpu knows binary. but binary corresponds to the language (which is how it can be translated)?
[02:11:43] <deniska> gladys: most names and identifiers, what different files/modules there were etc
[02:12:08] <gladys> likee is a programming language like a "key" to the """encryption"" of the binary
[02:12:14] <bjs> gladys: yes,  the CPU Speaks German but we speak English
[02:12:15] <gladys> obiouslty a bad example
[02:12:24] <bjs> gladys: no it's not like that,  you can go backwards if you want
[02:12:29] <pyzozord> gladys: there are of course very many different letter around the word. Unicode has a list of most characters you may need. Unicode can be encoded with different schemes, the most popular is called UTF-8, 8 because it uses 8 bits (0-255 integers) for the first 256 symbols
[02:12:34] <deniska> gladys: decompilers are a thing, they just produce C code which is really hard to read, compared to the original source
[02:12:45] *** Quits: arcatech_ (~arcatech@user/arcatech) (Quit: Bye.)
[02:12:53] <Juliu> webNET4, you can creat code even without debug symbols
[02:13:00] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:13:06] <pyzozord> gladys: sorry it's not exactly 256 I think it's less. It uses some of the bits for the encoding meta information
[02:13:12] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:13:13] <deniska> gladys: because the original code contains a bunch of data which was lost in the translation because it's not important to a coputer
[02:13:31] * mrig just found a dwarf inside an elf and is a little bit confused by the whole thing.
[02:13:39] <edgar-rft> gladys: in shell programming macro generators like m4 can expand text into some totally different text. Is there a way to get the original text back from the expansion? The same problems wil appear when trying to reverse-engineer binary code back into C source code.l
[02:13:42] <webNET4> RIP if it's built with -O3
[02:13:46] <pyzozord> mrig: oh no! :D
[02:13:58] <Juliu> deniska, are you saying a computer does not care that I called my variable ""extremelyUsefulObjectHandlerHelperClassObject" ? I put that much efford into coming up with that name :(
[02:14:20] <mrig> I never had elf's pegged as dwarf eaters, but you live and you learn.
[02:14:26] <pyzozord> mrig: don't look inside elfs, I think they might consider it rude...
[02:14:33] <gladys> oh so its more like google translate where you can send it to the cpu and itll understand well enough. but try to retranslate and itll be reaaal messy
[02:14:36] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85)
[02:14:37] <gladys> lamoo?
[02:14:56] <bjs> gladys: yes it's like that but for different reasons than Google Translate
[02:15:06] <gladys> yeah i get what you mean
[02:15:08] <bjs> well sort of similar reasons
[02:15:15] <gladys> google transkate is messy the first time
[02:15:15] <deniska> gladys: it's like you describing a painting to someone, and than someone trying to paint it back :)
[02:15:24] <gladys> cpu prtobably gets exact the first time 
[02:15:26] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9)
[02:15:35] <bjs> deniska: that's a nice one,  you get back "the same" painting but of course it's never quite the same :)
[02:15:57] <pyzozord> mrig: strace is also fun
[02:16:40] <edgar-rft> deniska: that painting idea sounds like a really great experiment I will try as soon as possible :-)
[02:17:07] <deniska> edgar-rft: there're plenty of games around that idea
[02:17:22] <mrig> pyzozord: yes i've played a little with that in the past.
[02:17:26] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[02:18:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[02:19:00] <gladys> cpu prtobably gets exact the first time 
[02:19:04] <gladys> so does the way in while a language represents a universal standard to communicate to the CPU in binary, does each character in the language  correspond tot a quanitity of data \\
[02:19:12] <gladys> ?
[02:19:20] <bjs> gladys: well the painter gets it right the first time
[02:19:24] <gladys> in which*
[02:19:33] <pyzozord> gladys: no
[02:19:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:19:50] <gladys> so how does a language represent a universal standard to communicate the same things to the cpu
[02:19:58] <bjs> gladys: no again it's not about characters,  think about Google translate it's not translating characters into other charcters
[02:20:09] <pyzozord> gladys: it gets simplified multiple times down to very simple instructions of "move 4 bits from this address to this address"
[02:20:17] <gladys> arent bits and bytes datsa?
[02:20:24] <bjs> gladys: it's turning ideas and phrases in one language into the same ideas but with different phrases expressed in a different language.  This is what a compiler does.
[02:20:31] <gladys> i thought the language translated words into quantities of data
[02:20:36] <bjs> gladys: yes the output of the compiler is bits
[02:20:40] <pyzozord> gladys: https://en.wikipedia.org/wiki/Assembly_language
[02:20:40] <bayaz> Title: Assembly language - Wikipedia 
[02:20:48] <bjs> gladys: like how the output of Google Translate is a bunch of letters
[02:20:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:21:08] <bjs> gladys: but you can't ask how many German letters come from each English letter... right?
[02:21:28] <Juliu> bjs, 26
[02:21:31] <gladys> yeah. oh my bad you said that earlier but i thought you meant between langyuages
[02:21:36] <gladys> not between language and binary
[02:21:54] <bjs> gladys: well the CPU assembly/binary stuff is just another language
[02:21:56] <bjs> and its letters are bits
[02:22:06] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:22:18] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:22:43] <bjs> gladys: a compiler isn't just taking print("hello") and turning each character into bits. it's taking that whole sentence and "translating" it into CPU speak and re-writing it in the CPUs own language (which happens to use bits)
[02:22:57] <bjs> the bits are like the letters
[02:23:17] <gladys> so is that why software must be made for diffferent microarchitectures 
[02:23:18] <gladys> ?
[02:23:20] <bjs> you put them together to make words and sentences (programs) but a compiler (or translator) really deals with the *meaning* 
[02:23:31] <Juliu> bjs, you know gladys is joking, right?
[02:23:43] <pyzozord> It translates "make dinner" to "prepare table; prepare food;" to "wash utensils; put utensils on table; take pizza out of freezer; put pizza in the overk" and even futher to "move your arm 10 centemeters up; make grabing motion with your hand;"
[02:23:46] <gladys> im actually not im actually this stupid
[02:24:01] <gladys> im not a programmer i just use bash to make the box go beep
[02:24:08] <Juliu> gladys, you said you were joking, and no one is that stupid
[02:24:33] <deniska> we all started somewhere
[02:24:47] <Juliu> gladys, how does bash make the box go beep? Is there a letter in bash that  gets translated to beep ?
[02:25:04] <Amadiro> "is that why software must be made for diffferent microarchitectures" yes but you can add another layer of intermediate abstraction to avoid this, like java does
[02:25:05] <gladys> i just am very confused what determines the threads of data,
[02:25:10] <pyzozord> gladys: sorry if it sounded wrong to you, this is honestly how I understand it
[02:25:27] <Juliu> gladys, how many bits does beeping contain? If zero, does that mean that a letter from bash just disappears?
[02:25:52] <pyzozord> gladys: what do you mean by "threads of data"?
[02:26:00] <gladys> the threads of data must in some way be directly corresponding to source. and im still a bit confused what is it that makes that not perfectly "retranslatable"
[02:26:09] <gladys> i underdtand the german to english analogy
[02:26:14] <gladys> but i want to know the mechanism
[02:26:41] <gladys> like the cpu translates 10 in threads right?
[02:26:47] <gladys> one at a time
[02:26:54] <pyzozord> I told you, it breaks down instructions to simpler and simpler until it gets to instructions that the cpu understands, which is "move bits from memory a to memory b"
[02:26:55] <gladys> thats what clock speeds are?
[02:27:03] <deniska> gladys: your use of word "threads" is confusing
[02:27:05] <gladys> in hZ
[02:27:07] *** Quits: kariosfox (~kariosfox@176.221.124.69) (Quit: Leaving)
[02:27:20] <bjs> gladys: the compiler is a translator.  It reads the source language and builds an "understanding" of what it is doing, and then outputs the right code for each "sentence" of the input.
[02:27:29] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:27:54] <Amadiro> gladys, the CPU doesn't do translation when the program is running (generally), it just executes the program (which likely involves manipulating numbers, moving data around etc)
[02:28:06] <Juliu> gladys, for example a for-loop in your code might be translated to a conditional jump in the binary executable, so if you want to translate that back, how do you know if it was a for-loop or just an   if(...) goto 10;   in your code earlier?
[02:28:06] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[02:28:10] <gladys> but when they invented programming languages, they were initially fed inot the processer by hand?
[02:28:10] <deniska> gladys: pretty much all programming languages have details which are important to a human reading the code, but not important to a computer running a translated program, so compilers emit it in the translation
[02:28:28] <Amadiro> gladys, yes, do a google image search for "punch cards"
[02:28:30] *** Joins: oft_gegong (~k@70.90.132.249)
[02:28:30] <pyzozord> gladys: Hertz is just measure of frequency. It's a measure of cpu "clock cycles". It used to mean how many basic instructions, but it's more complex then that. Some instructions take hundreds of cpu clock cycles. Some take fraction of clock cycle because cpu is capable for executing multiple of that instruction in one cycle.
[02:28:33] <deniska> gladys: so when you try to translate it back, it just doesn't have enough data to translate it back to the exact same form
[02:28:36] <gladys> and they had 101000 corresponding in some way to code that humans could write
[02:28:45] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:28:52] <gladys> sorry the screen is flashing fast my laptop is trash
[02:28:55] <bjs> gladys: yes,  people wrote the bits out themselves in the past
[02:29:03] <gladys> i apologize if some oif you find yourselves reiterating
[02:29:03] <deniska> s/emit/omit/ of course
[02:29:03] <pyzozord> gladys: essentially Hz is a measure of heart beat of a cpu. In one heart beat different cpu can do different things
[02:29:06] <oft_gegong> <new topic> I've got something to say to everyone: fuck you. you get on your computer and tell ME how to live my LIFE. Fuck you.
[02:29:40] <mrig> oft_gegong: that is pretty uncalled for.
[02:29:47] <oft_gegong> mrig, it's justice
[02:29:57] <gladys> binary represents different states in On and off yes? and one cycle is one Hert?
[02:30:03] <mrig> lets take this to a PM shall we?
[02:30:08] <oft_gegong> k
[02:30:16] <gladys> like sine waves?
[02:30:20] <deniska> gladys: also we're discussing many different layers of abstractions at once here
[02:30:57] <deniska> gladys: it's best to peel them one by one (or build them on top of each other)
[02:31:05] <gladys> can i have irssi let me see previous messages
[02:31:12] <gladys> sorry if youre repeating yourselbes
[02:31:33] <deniska> gladys: if you want to filter out by nick/word: /lastlog
[02:32:01] <deniska> and then to get rid of it /lastlog -clear
[02:32:19] <pyzozord> gladys: this video will be very helpful https://www.youtube.com/watch?v=cNN_tTXABUA
[02:32:20] <bayaz> Title: ðŸ’» - See How a CPU Works 
[02:32:40] <oft_gegong> I talked to mrig and I'm clear of anger.
[02:32:49] <Amadiro> impressive.
[02:33:29] <pyzozord> That is... curious.
[02:33:31] <gladys> deniska /lastlog
[02:33:51] <deniska> gladys: it'd be /lastlog deniska
[02:34:13] <gladys> im used to the / being the argument lmao sorry
[02:34:20] <gladys> rather than cmd
[02:34:29] <Juliu> gladys, how do you compile a compiler?
[02:34:35] <deniska> in typical irc clients commands start with /
[02:34:57] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[02:35:05] <webNET4> assembler macros
[02:35:28] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:37:07] <gladys> \
[02:37:13] *** Quits: gladys (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (Quit: leaving)
[02:37:20] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:37:28] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[02:38:30] <oft_gegong> aw christ. 10 gb world of warcraft update. I wish the programmers could lower that somehow.
[02:38:39] <jackiee> so when you say a compiler loses a bunch of data about the original c source that are only relevant in human eyes. the language is like the punch card. and so when you get the punch card back you can kind make out what kind of puncher was used. but the punches is just a tool for humans?
[02:38:50] <jackiee> the puncher******
[02:38:56] <jackiee> the language is like the puncher
[02:39:06] <pyzozord> still curious.
[02:39:11] <jackiee> ?\
[02:39:31] <Amadiro> jackiee, one (trivial) example is that variable names would be lost, because the CPU has no use for them. To the CPU, all your data is just in various memory slots (or registers) which are numbered.
[02:39:37] <deniska> if we're making analogues to punch cards, imagine punch cards having handwritten notes on them
[02:39:41] <bjs> jackiee: the compiler keeps the meaning but it looses the fluff.  The exact order you wrote things, the nice layout you had, the abstractions and datatypes you carefully built, the names, the comments and documentation
[02:39:44] <jackiee> obviosuly punch card like in the binary days of like 50s
[02:39:47] <jackiee> is different
[02:39:57] <jackiee> more like a stamo\
[02:39:59] <jackiee> with ink
[02:40:04] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e) (Ping timeout: 256 seconds)
[02:40:11] <webNET4> it's like you trying to write the exact recipe for the meal you just ate
[02:40:11] <jackiee> like you dip it in the ink
[02:40:34] <Amadiro> but in reality compilers can do much more sophisticated transformations that aren't easy or possible to undo, for instance if the compiler detects that a certain piece of code can never be executed, it will simply remove it
[02:40:36] <bjs> jackiee: these are all just fluff that make the code easier to read or follow but don't actually change the meaning of things and the compiler can throw them away
[02:40:47] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:41:06] <Amadiro> or it can sometimes even change fundamentally what algorithm is used to compute something
[02:41:31] <bjs> jackiee: if you point a C decompiler at a binary you'll get back a C program that does the same thing but it might look very different to the one you used to generate the original binary.
[02:42:39] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:60f9:ffc0:b80a:de8f) (Quit: Textual IRC Client: www.textualapp.com)
[02:42:44] <webNET4> thats about as far as i can simplify it without just typing "reverse engineering"
[02:43:53] <jackiee> yeah. the source code is more like an ink blotter stamp. it renders the ink in a way the CPU can read, but if you get it back you can only see the color. you have no idea what the original blotter looked like. could have been 2 inches 6 inches you can see what color was used
[02:43:55] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:44:03] <jackiee> >?
[02:44:48] *** Joins: mrig (~mrig@user/mrig)
[02:44:52] <jackiee> the color and marking for the cpu. you cant see the handle, the metal or wood used to fashion it
[02:44:55] <jackiee> etc
[02:45:03] <bjs> jackiee: to be specific here I could write a C program and could write it very carefully, I could make lots of functions and variables and give them all nice names and make structs with helpful fields and then pass those around and do some fancy calculations and write lots of comments.  But the compiler can just throw away all the fancy dress here and just make one big blob of horrible code that does the same thing
[02:45:04] <jackiee> "color and marking"
[02:45:16] <webNET4> if you zoom in you might see some unique imperfections or damages that can identify the exact stamp
[02:45:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:45:36] <webNET4> so no, not IMO like a stamp
[02:45:45] <bjs> jackiee: and then the decompiler would make a C program that was just one big blob
[02:46:08] <Juliu> bjs, that is how all my C programs look like
[02:46:15] <jackiee> i know a stamp is a bad analogy because ink blotters arent the actual message?
[02:46:21] <Juliu> So the decompiler did a perfect job
[02:46:22] <jackiee> but like a whole punch
[02:46:26] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[02:46:38] <jackiee> ion a """"punch card""""
[02:46:46] <jackiee> hole
[02:46:52] <jackiee> god whole lmaoo\
[02:47:20] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:48:00] <jackiee> like with the assembler 
[02:48:06] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 244 seconds)
[02:48:27] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 245 seconds)
[02:48:32] <jackiee> ookay thanks bjs
[02:48:39] <jackiee> sorry your msg just popped up
[02:49:01] <jackiee> thanks all you guys for your patience with my ineptitude
[02:49:07] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[02:49:14] <oft_gegong> you're welcome. *salutes jackiee *
[02:49:32] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[02:50:12] <oft_gegong> I just realized I'm a raging nerd.
[02:50:16] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 256 seconds)
[02:50:44] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[02:50:56] <jackiee> i have the unfortunate predicament of being very nerdy but without any kind of expertise or particularly exceptional intelligence to back it up
[02:51:10] <oft_gegong> ooo that's interesting jackiee .
[02:51:15] <jackiee> lmaoo
[02:51:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:51:39] <jackiee> its hard being interested in things you arent smart enough to understand lmfao
[02:52:13] <oft_gegong> but what if you are smart enough to delve in the depths? that could only mean one thing: computers are nefarious.
[02:52:49] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[02:52:53] <jackiee> in soviet russia the evolutionary algorithm program you
[02:53:36] <oft_gegong> so we are slaves to an algorithm?
[02:53:47] <jackiee> yeah man *hits blunt*
[02:54:18] <pyzozord> oh so this was a troll all along? :|
[02:54:21] <webNET4> it's all a secret plan hatched by the mitochondria
[02:54:47] <oft_gegong> life is a troll victim
[02:54:57] <jackiee> its interesting how much computer science, biology, and social science mirror one another
[02:55:25] <jackiee> peopel talk about the latter two but the former not enough
[02:56:03] <Juliu> jackiee, because people have no clue about it
[02:56:47] <jackiee> dna is a string a data kinda
[02:56:51] <jackiee> a thread
[02:57:10] <mrig> jackiee: it is a model though
[02:58:00] <jackiee> yeah and the genes hold the data
[02:58:05] <mrig> cant be seen without some way of visualising particle spin.
[02:58:08] <jackiee> in blocks
[02:58:19] <mrig> so what is holding that data?
[02:59:10] <mrig> oft_gegong: what do you think?
[02:59:42] <oft_gegong> mrig, what is holding the data? what data?
[02:59:53] <oft_gegong> oh the genes?
[02:59:55] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:00:04] <jackiee> its insane how much ive managed to get this far in bash with no intro to comp sci  lmfaooo
[03:00:28] <jackiee> i just read the books tho and did what they told eme and used that as the blocks to make the snap circuits contraptions i want
[03:00:30] <oft_gegong> mrig, genes are just a lie. there is no data. everything holding everyone's stuff is a manifestation of saving everyone from the depths.
[03:00:49] <mrig> oft_gegong: you are really not making sense there.
[03:01:05] <oft_gegong> mrig, I believe in the Imagination. not science.
[03:01:07] <Caffeinated> c-174-55-240-240.hsd1.pa.comcast.net
[03:01:09] <Caffeinated> oops
[03:01:17] <oft_gegong> Caffeinated, CAUGHT
[03:01:30] <mrig> oft_gegong: well sure and?
[03:01:31] <jackiee> i wanna go to school tbh
[03:01:49] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[03:01:49] <jackiee> i feel like i can only get so far by self taught
[03:01:49] <oft_gegong> mrig, and there's not much to live outside of the Imagination.
[03:01:55] <oft_gegong> *to life
[03:02:25] <jackiee> im only 22 but i stright up am  GED holder with no diploma
[03:02:42] <oft_gegong> jackiee, bash is HUGE. if you can learn bash you've got a good education.
[03:02:43] <mrig> oft_gegong: sure there is.
[03:02:57] <Caffeinated> lol
[03:04:07] <oft_gegong> I've gotta confess something you guys. I'm just an a-hole that wants to ruin peoples' lives because I can't go any further in computer science.
[03:04:17] <jackiee> nothing uses bash though except servers. and until that guy told me about devops i was convinced the only linux paths would be an sys admin overseeing permissions and setting up raid and shit OR being like a pentester which is not getting to control things
[03:04:32] <Caffeinated> oft_gegong: we know
[03:04:51] <jackiee> i like the software focus of pentesting. but i like the focus on maintenence and facilitating homeostasis of sysadmin
[03:05:13] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[03:05:13] <jackiee> so neither are for me
[03:05:19] <oft_gegong> jackiee, bash allows you to be a super-power-user by executing files in formation.
[03:05:34] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Quit: Stay safe!)
[03:05:43] *** Quits: dan01 (~dan01@109.100.108.171) (Ping timeout: 252 seconds)
[03:05:58] <jackiee> yeah i like the parts of sysadmin where im chmodding and crontabbing. not all the sata and cords and thermal compound type shur
[03:06:15] <oft_gegong> jackiee, shur?
[03:06:17] *** Quits: Guest524 (~Guest5@public-gprs227132.centertel.pl) (Quit: Client closed)
[03:06:21] <jackiee> shizzle my dizzle
[03:06:28] <oft_gegong> lol
[03:07:07] <oft_gegong> I know the future you guys. Once we hit a certain point all we're gonna do is try to troll the whole universe.
[03:07:19] <moose> musk is doing that
[03:07:24] <jackiee> and i like the use of shell in pentesting but god networking is boring from the outside and you arent facilitating anything
[03:07:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:07:50] <Juliu> moose, lol
[03:09:07] <oft_gegong> I know the future you guys. I'm an a-hole forever.
[03:09:21] <mrig> oft_gegong: are you sure about that?
[03:09:22] <mrig> :P
[03:09:37] <oft_gegong> 110%sure. and I'm 96% sure of that. and I'm 99%sure of that.
[03:10:04] <mrig> ah all very mathematical.
[03:10:08] <mrig> fugures.
[03:10:11] <mrig> figures
[03:10:28] <oft_gegong> I wish there was some way I could destroy the Internet
[03:10:51] <Caffeinated> </BLOG>
[03:10:58] <oft_gegong> Caffeinated, lol true
[03:11:11] <mrig> oft_gegong: you have wrecked the conversation here well enough.
[03:11:25] <oft_gegong> mrig, I've done enough demolition for a day's work
[03:11:50] <mrig> oft_gegong: I hope you got sufficient source to keep you going for quite some time :P
[03:11:56] * mrig offers up a vein
[03:12:07] <mrig> I have plenty :D
[03:12:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[03:12:17] <oft_gegong> I will do my best, sir. *salutes mrig *
[03:12:21] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[03:12:41] *** Joins: anton (anton@tloks.com)
[03:14:57] *** Joins: DefiantN (~DefiantN@user/defiantn)
[03:14:58] *** Quits: inky_ (~inky@188.115.242.135) (Ping timeout: 244 seconds)
[03:15:12] *** Quits: Inari (~Pinkishu@p4fe7eb2c.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:15:52] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:58] *** Joins: inky_ (~inky@46.36.119.19)
[03:16:22] <mrig>  oft_gegong Im not the military type myself.
[03:16:27] *** jackiee is now known as gladys
[03:16:32] <gladys> sorry this is gladys
[03:16:39] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:16:41] <gladys> thats the nice i was using on my laptop
[03:16:42] *** Joins: zaher__ (~zaher@37.48.155.211)
[03:16:45] <mrig> prefer the quite life, no need of thrills to fill an empty void.
[03:16:53] <gladys> nick
[03:16:57] *** Joins: webNET4 (~0x100@32.211.211.39)
[03:17:30] *** gladys is now known as jackiee
[03:17:49] <jackiee> ill just use jackiee since im not on the support irc for troubleshotting some issues
[03:17:54] <jackiee> lkike i was earlier
[03:18:01] <jackiee> this is my regular nick
[03:18:06] <oft_gegong> k
[03:18:12] <jackiee> i know you were dying to know
[03:18:27] <oft_gegong> xD
[03:18:58] <jackiee> i had my desktop on irc but i was sitting in a dorm room earlier so i couldnt shut it off\
[03:19:13] <oft_gegong> you guys. what if I wanted to be a programmer. but I already had experience with 20 languages. What do I do?
[03:19:18] <jackiee> since you cant ssh from iphone
[03:19:20] <jackiee> wth\
[03:19:32] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e)
[03:20:01] *** Quits: zaher_ (~zaher@188.160.148.200) (Ping timeout: 252 seconds)
[03:21:36] <Juliu> oft_gegong, how about you apply for a job?
[03:21:43] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Remote host closed the connection)
[03:22:20] <webNET4> program somethin
[03:23:00] <webNET4> job means nothin
[03:23:02] <oft_gegong> Juliu, OH YEAH. Let me apply for a job! *applies to HP* *get interview*: "so why do you want to work for HP?" "So I can troll the system and gain respect and edit text files and BLAH BLAH BLH BLAAAA" *explodes*
[03:23:15] <Juliu> hello_world( "print" );     Done. Almost no errors
[03:23:17] <mrig> Juliu: I am not sure that oft_gegong would be to good for the community ambiance.
[03:23:37] <mrig> seems to suffer from turrets or something, the poor soul.
[03:23:50] <Juliu> mrig, I can totally relate. Other people are the worst
[03:24:11] <oft_gegong> yeah. poor me. mrig . *fluffs into a ball of fluffiness and falls into a deep sleep*
[03:24:20] <mrig> no not really, they are a reflection :)
[03:24:33] <Juliu> oft_gegong, all you have to say is "So I can be a good programmer"
[03:24:37] <mrig> oft_gegong: I doubt that you feel to much.
[03:24:42] <mrig> to be poor.
[03:25:04] <mrig> oft_gegong: I am sure that you could feign it though :P
[03:25:05] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[03:25:15] <Juliu> mrig, that is bullshit. People are not a reflection, they are basically almost always just idiots
[03:26:01] <mrig> Juliu: no they are not, they reflect back at you what you put out.
[03:26:32] <mrig> Juliu: if you are being an idiot that is all that you will see.
[03:26:36] <Juliu> mrig, if someone does not discover by a certain age that he is surrounded by mostly idiots, than this has a reason
[03:26:38] <mrig> everywehre
[03:26:39] <Juliu> *then
[03:27:11] <mrig> Juliu: perhaps if someone has not understood by a certain age that everything is interconnected, they are a fool.
[03:27:22] *** Joins: arcatech (~arcatech@user/arcatech)
[03:27:26] <mrig> which is worse?
[03:27:42] <mrig> Juliu: you do get E=mc^2 right?
[03:27:43] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 252 seconds)
[03:27:48] <mrig> all energy.
[03:27:49] <Juliu> mrig, you are a fool by thinking that idiot would not be idiots just because you behaved differently
[03:28:08] <mrig> Juliu: it is a reflection, most just want to fit in somewhere.
[03:28:22] <Juliu> Yes, most are idiots
[03:28:23] <mrig> Be that by trolling or by copying.
[03:28:25] <mrig> Be that by trolling or by copying.
[03:28:30] <mrig> both are idiotic
[03:28:33] <oft_gegong> I'm too much of an a-hole to want to fit into life.
[03:28:52] <mrig> oft_gegong: you were born that way, I am sure of that.
[03:29:00] <Juliu> oft_gegong, I think that says something positive about your personality
[03:29:01] <mrig> so o/
[03:29:05] <mrig> \o/
[03:29:10] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[03:29:29] <mrig> Juliu: positive is a perspective.
[03:29:32] *** Joins: dan01 (~dan01@109.98.132.45)
[03:29:37] <Juliu> mrig, shut up
[03:29:53] <oft_gegong> hey hey. Let's keep it real.
[03:30:17] <mrig> |warn Juliu if you do not grow up, you may find yourself quieted.
[03:30:32] <mrig> :P
[03:30:43] *** Joins: hexingb (~hexingb@111.30.225.74)
[03:30:59] <mrig> real is good :)
[03:31:07] <oft_gegong> when I grow up I want to create a family where I can be an a-hole to children and wife. amen/
[03:31:10] <Juliu> mrig, dude, I am grown up, which is why I dont care if some childish fascists mute or ban me
[03:32:01] <Juliu> oft_gegong, you can be an asshole to children or a wife easily, especially if they are not your own
[03:32:27] <oft_gegong> Juliu, so I just marry into-it? that sounds easier than normal.
[03:32:45] <mrig> !q Juliu
[03:32:46] *** bayaz sets mode: +q *!*@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60
[03:32:57] <mrig> !q oft_gegong 
[03:32:58] *** bayaz sets mode: +q *!*@70.90.132.249
[03:33:13] <moose> Thank you kindly.
[03:33:37] <mrig> I do apologise for that, we do try to accommodate for all types, but it is not easy.
[03:33:42] *** Joins: pizdets_ (~pizdets@183.182.114.102)
[03:33:58] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[03:34:05] *** Quits: pizdets (~pizdets@183.182.111.16) (Ping timeout: 244 seconds)
[03:34:10] *** Quits: dan01 (~dan01@109.98.132.45) (Ping timeout: 240 seconds)
[03:34:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:35:44] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:36:08] *** Joins: Cashlin (~hp@user/cashlin)
[03:36:19] *** Parts: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) ()
[03:38:30] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:40:04] *** Joins: Lochnair (Lochnair@wireguard/contributor/lochnair)
[03:40:22] *** Joins: mrig (~mrig@user/mrig)
[03:41:10] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e) (Ping timeout: 240 seconds)
[03:44:43] *** Quits: Lochnair (Lochnair@wireguard/contributor/lochnair) (Client Quit)
[03:45:58] *** Quits: Ox151 (~user@user/ox151) (Ping timeout: 244 seconds)
[03:47:10] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:1cb6:8e98:1417:37a1)
[03:50:16] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 252 seconds)
[03:50:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:53:22] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:1cb6:8e98:1417:37a1) (Quit: Quit)
[03:55:28] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[03:57:02] *** Quits: swagneko (~bit@user/nekobit) (Quit: needs more desu!)
[04:00:46] *** Joins: Lochnair (~Lochnair@wireguard/contributor/lochnair)
[04:03:22] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[04:04:01] <pulse> so what're we coding tonight lads
[04:04:56] <mrig> late this end of the wire.
[04:05:28] <pulse> my sleep schedule is non existent anyway
[04:06:07] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 244 seconds)
[04:06:21] <edgar-rft> pulse: morse code
[04:06:39] <Caffeinated> how many licks to get to the centre
[04:07:19] <pulse> i find an average of 28 licks gets the job done most of the time
[04:07:55] *** Parts: oft_gegong (~k@70.90.132.249) ()
[04:08:28] <mrig> !uq Juliu
[04:08:29] *** bayaz sets mode: -q Juliu!*@*
[04:08:32] *** Joins: zaher (~zaher@37.48.154.22)
[04:08:56] <mrig> !uq oft_gegong
[04:08:56] *** bayaz sets mode: -q oft_gegong!*@*
[04:09:03] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:10:27] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[04:10:46] *** Quits: zaher__ (~zaher@37.48.155.211) (Ping timeout: 244 seconds)
[04:15:53] <Caffeinated> lol, quiets the ip, then removes the nick
[04:17:52] <pulse> yeah that seems ... uh
[04:17:55] <pulse> not intended
[04:18:15] *** ChanServ sets mode: +o pulse
[04:18:23] *** pulse sets mode: -q *!*@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60
[04:18:30] *** pulse sets mode: -q *!*@70.90.132.249
[04:18:36] *** pulse sets mode: -o pulse
[04:18:53] *** Quits: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de) (Quit: leaving)
[04:18:57] * arahael glares at bayaz.
[04:19:09] <arahael> pulse: Lets discuss bayazs behaviour in the ops, I have a suspicion.
[04:19:27] <beaky> rewrite bayaz in rust
[04:19:46] <Caffeinated> its got nothing to do with the bot
[04:19:58] <beaky> but i like rewrites
[04:20:03] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[04:20:16] *** Joins: flynn (~mcbloch@user/flynn)
[04:20:22] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:22:12] <arahael> Caffeinated: The behaviour we're finding curious is how bayaz switched from using the IP host format, to using the account name - which is fine. But then when the un-quiet (!uq) was done, it unquieted the wrong form.
[04:23:17] <arahael> beaky: The bot's in Clojure. :)
[04:24:31] <beaky> nice i like clojure
[04:24:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:25:14] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 244 seconds)
[04:25:39] <beaky> clojure is the simplest lagnuage according to rich hickey
[04:26:15] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:71b7:bdff:34f7:41d7)
[04:29:33] *** Joins: Tazmainian (~Tazmainia@102.39.90.151)
[04:29:56] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-3861-b031-6b93-c510.inf6.spectrum.com) (Ping timeout: 252 seconds)
[04:30:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[04:30:03] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (*.net *.split)
[04:30:03] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[04:30:03] *** Quits: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (*.net *.split)
[04:30:03] *** Quits: inky (~inky_@46.36.119.19) (*.net *.split)
[04:30:03] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[04:30:03] *** Quits: pulse (~pulse@user/pulse) (*.net *.split)
[04:30:03] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[04:30:03] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (*.net *.split)
[04:30:03] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (*.net *.split)
[04:30:03] *** Quits: zivoni (~tomas@user/zivoni) (*.net *.split)
[04:30:03] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (*.net *.split)
[04:30:03] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (*.net *.split)
[04:30:03] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (*.net *.split)
[04:30:03] *** Quits: Leone (~Leo@24.140.234.189) (*.net *.split)
[04:30:03] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (*.net *.split)
[04:30:03] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[04:30:03] *** Quits: SmokenatorZ (~Smokenato@152.249.182.2) (*.net *.split)
[04:30:03] *** Quits: Thedarkb1-Work (~Thedarkb@62.232.253.82) (*.net *.split)
[04:30:03] *** Quits: Rounin (~david@84.212.130.215) (*.net *.split)
[04:30:03] *** Quits: sicelo (~sicelo@user/sicelo) (*.net *.split)
[04:30:03] *** Quits: kaivai (~kaivai@user/kaivai) (*.net *.split)
[04:30:03] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[04:30:03] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (*.net *.split)
[04:30:03] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: byanka (~byanka@185.176.110.253) (*.net *.split)
[04:30:03] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (*.net *.split)
[04:30:03] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[04:30:03] *** Quits: menace (~someone@user/menace) (*.net *.split)
[04:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[04:30:03] *** Quits: Lyn (~Lyn@user/law) (*.net *.split)
[04:30:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[04:30:03] *** Quits: CP-400 (~sjw@69.206.48.64) (*.net *.split)
[04:30:03] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[04:30:03] *** Quits: rtur (~weechat@mail.rtur.org) (*.net *.split)
[04:30:03] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[04:30:03] *** Quits: Haxxa (~Haxxa@122.199.45.213) (*.net *.split)
[04:30:03] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (*.net *.split)
[04:30:03] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[04:30:03] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[04:30:04] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (*.net *.split)
[04:30:04] *** Quits: blahblah441 (~blahblah4@89.45.224.24) (*.net *.split)
[04:30:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[04:30:04] *** Quits: jmft2 (~JMFT@82.3.54.26) (*.net *.split)
[04:30:04] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[04:30:04] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[04:30:04] *** Quits: caramel (~caramel@user/caramel) (*.net *.split)
[04:30:04] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (*.net *.split)
[04:30:04] *** Quits: password (~password@user/password2) (*.net *.split)
[04:30:04] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) (*.net *.split)
[04:30:04] *** Quits: blaklistd (~blaklistd@user/blaklistd) (*.net *.split)
[04:30:04] *** Quits: BenLand100 (~bland@user/benland100) (*.net *.split)
[04:30:04] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[04:30:04] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[04:30:04] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[04:30:04] *** Quits: novns (~novns@user/novns) (*.net *.split)
[04:30:04] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[04:30:14] *** Joins: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[04:30:16] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[04:30:16] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:30:19] *** Joins: PlanckWalk (~Planck@ppp105-115.static.internode.on.net)
[04:30:20] *** Joins: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de)
[04:30:21] *** Quits: PlanckWalk (~Planck@ppp105-115.static.internode.on.net) (Changing host)
[04:30:21] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[04:30:24] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[04:30:25] *** Joins: jmft2 (~JMFT@82.3.54.26)
[04:30:25] *** Joins: byanka (~byanka@185.176.110.253)
[04:30:26] *** Joins: Leone (~Leo@24.140.234.189)
[04:30:27] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:30:27] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[04:30:28] *** Joins: Jigsy (~Jigsy@88-111-2-172.dynamic.dsl.as9105.com)
[04:30:31] *** Joins: Geronimo (~Geronimo@user/geronimo)
[04:30:34] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[04:30:40] *** Joins: zivoni (~tomas@v2202104118411149666.quicksrv.de)
[04:30:40] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:30:42] *** BenLand100 is now known as Guest4127
[04:30:44] *** Joins: novns (~novns@188.120.225.53)
[04:30:44] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[04:30:48] *** Joins: jinsun (~quassel@user/jinsun)
[04:30:51] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[04:30:52] *** Quits: Jigsy (~Jigsy@88-111-2-172.dynamic.dsl.as9105.com) (Changing host)
[04:30:52] *** Joins: Jigsy (~Jigsy@user/jigsy)
[04:30:58] *** Joins: rtur (~weechat@mail.rtur.org)
[04:31:05] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[04:31:11] *** Quits: Guest4127 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[04:31:11] *** Joins: Guest4127 (~bland@user/benland100)
[04:31:12] *** Quits: novns (~novns@188.120.225.53) (Changing host)
[04:31:12] *** Joins: novns (~novns@user/novns)
[04:31:14] *** Joins: CP-400 (~sjw@69.206.48.64)
[04:31:53] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[04:31:55] *** Joins: Lyn (~Lyn@user/law)
[04:31:56] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[04:31:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[04:32:00] *** Joins: caramel (~caramel@user/caramel)
[04:32:02] *** Joins: webstrand (~webstrand@user/webstrand)
[04:32:02] *** Joins: kaivai (~kaivai@user/kaivai)
[04:32:03] *** Joins: Telvana (~capo@user/telvana)
[04:32:06] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[04:32:08] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[04:32:08] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[04:32:14] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[04:32:14] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[04:32:20] *** Joins: pulse (~pulse@user/pulse)
[04:32:21] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[04:32:23] *** Joins: blahblah441 (~blahblah4@89.45.224.24)
[04:32:40] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Ping timeout: 240 seconds)
[04:32:41] *** Guest4127 is now known as BenLand100
[04:32:44] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[04:33:03] *** Joins: DefiantN (~DefiantN@user/defiantn)
[04:33:06] *** Joins: akselmo (~akselmo@user/akselmo)
[04:33:17] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[04:33:18] *** Joins: inky (~inky_@46.36.119.19)
[04:33:31] *** Joins: sicelo (~sicelo@vm8.ganeti.dyne.org)
[04:33:31] *** Quits: sicelo (~sicelo@vm8.ganeti.dyne.org) (Changing host)
[04:33:31] *** Joins: sicelo (~sicelo@user/sicelo)
[04:33:40] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[04:35:17] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[04:35:46] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[04:36:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:36:43] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-4d20-c6a4-d08c-1eac.res6.spectrum.com)
[04:36:57] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0534-c68d-e38c-6e43.res6.spectrum.com)
[04:37:17] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[04:37:56] *** Joins: birkoff (birkoff@thunderirc.net)
[04:38:07] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:38:19] *** birkoff is now known as Guest7317
[04:39:42] *** Joins: TazmianianDevil (~Tazmainia@102.39.90.151)
[04:41:29] *** Joins: arcatech (~arcatech@user/arcatech)
[04:42:10] *** Quits: Tazmainian (~Tazmainia@102.39.90.151) (Ping timeout: 240 seconds)
[04:42:12] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[04:43:39] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[04:43:43] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[04:44:17] *** Quits: TazmianianDevil (~Tazmainia@102.39.90.151) (Ping timeout: 245 seconds)
[04:44:41] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:45:59] *** Joins: systemmessages (~systemmes@pa49-179-13-71.pa.nsw.optusnet.com.au)
[04:46:14] *** Joins: TazmianianDevil (~Tazmainia@102.39.90.151)
[04:48:02] *** Joins: Tazmainian (~Tazmainia@102.39.90.151)
[04:48:34] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Ping timeout: 252 seconds)
[04:50:11] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[04:51:40] *** Quits: TazmianianDevil (~Tazmainia@102.39.90.151) (Ping timeout: 240 seconds)
[04:53:41] *** Quits: systemmessages (~systemmes@pa49-179-13-71.pa.nsw.optusnet.com.au) (Quit: Leaving)
[04:55:21] *** Joins: BUSY (~BUSY@user/busy)
[04:55:57] <beaky> so in place merge is meant to be O(1) but because the in place merge is recursive it is actually O(log n) is there a way to make it O(1)
[04:56:18] <beaky> O(1) memory and O(log n) memory
[05:00:32] <pulse> #algorithms may be a better place to ask such questions
[05:00:34] *** Quits: humanface (~humanface@20014C4E1C473D00F09548BCDEF4C917.dsl.pool.telekom.hu) (Quit: Client closed)
[05:00:40] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:00:57] <beaky> ncie thanks ill also ask there then
[05:01:06] <arahael> Yeah, that question went way over my head. :)
[05:01:37] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7435:d465:48ce:7317) (Read error: Connection reset by peer)
[05:02:37] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[05:02:42] *** Joins: Quacc (~youbuntoe@user/quacc)
[05:02:58] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[05:04:03] *** Joins: brabrax (~brabrax@user/brabrax)
[05:06:35] *** Quits: Tazmainian (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[05:07:27] *** Joins: Tazmainian (~Tazmainia@102.39.90.151)
[05:08:35] *** Joins: gggp_ (~gggp@111-251-124-128.dynamic-ip.hinet.net)
[05:09:13] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:13:30] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce)
[05:13:46] *** Joins: numsima (~numsima@101.175.64.73)
[05:15:02] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[05:15:30] <beaky> ncie so according to https://en.wikipedia.org/wiki/In-place_algorithm turns out 'in place' has many meanings the most general of which (for thigns like in-place sorting or in-place merge) has it mean like O(log n) in general for the algorithm itself (like recursive calls or bits to store the data about the size of the input) 
[05:15:31] <bayaz> Title: In-place algorithm - Wikipedia 
[05:15:32] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[05:16:02] <beaky> thanks to rust's move semantics in-place algorithms are now my fodder
[05:19:17] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[05:19:18] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:20:47] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:24:52] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[05:26:31] *** Joins: TazmianianDevil (~Tazmainia@102.39.90.151)
[05:30:04] *** Quits: Tazmainian (~Tazmainia@102.39.90.151) (Ping timeout: 256 seconds)
[05:30:27] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[05:30:32] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 245 seconds)
[05:30:56] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[05:30:59] *** Quits: TazmianianDevil (~Tazmainia@102.39.90.151) (Ping timeout: 252 seconds)
[05:31:23] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:31:59] *** Joins: mrig (~mrig@user/mrig)
[05:36:32] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[05:36:59] <CoderGuy> i'm not used to packaging things
[05:37:59] <beaky> nice what package manager are you using
[05:38:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:38:40] *** Joins: Tazmainian (~Tazmainia@102.39.90.151)
[05:38:41] *** Quits: elgraz (~elgraz@151.65.9.160) (Quit: Leaving)
[05:38:52] *** Quits: aliosablack (~chomwitt@ppp-94-69-12-184.home.otenet.gr) (Ping timeout: 245 seconds)
[05:39:27] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[05:39:42] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Ping timeout: 245 seconds)
[05:40:15] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[05:40:37] <droid3> hey guys the topic tonight is about arbitrary precision floating point libraries aka BigDecimal. I know how to implement BigInteger or BigRationals wit BigIntegers.
[05:41:31] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[05:41:35] <droid3> But the issue to talk about tonight is implementing BigDecimal based libraries to approximate not just rationals but real number approximations.
[05:42:35] <droid3> The issue i am having is we talked about how fpu work and the standards for exponents/significand bits
[05:42:42] <computerquip> Frankly, I think BigDecimal and BigInteger is working together against our best interest
[05:42:47] *** Joins: mrig (~mrig@user/mrig)
[05:43:02] *** Joins: kmh (~kmh@p200300df5f306000bc2a0488d71d046a.dip0.t-ipconnect.de)
[05:43:05] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Ping timeout: 252 seconds)
[05:43:53] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[05:43:54] <droid3> But when one deals with arbitrary precision floating point do you just keep one vector/array for the exponent and one for the significand part.
[05:43:57] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[05:44:36] <droid3> That how i was thinking about it but there is one issue with this. 
[05:44:44] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[05:44:48] *** Quits: kmh_ (~kmh@p200300df5f102900bc2a0488d71d046a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:44:55] <PlanckWalk> Usually the exponent is just a single (fixed precision) integer
[05:45:07] <droid3> That is how do you know what precision to store a number at like say even for a rational 1/3 = .3333333333 ....
[05:45:18] <PlanckWalk> You make a choice
[05:45:50] <PlanckWalk> It's arbitrary-precision, not infinite-precision.
[05:45:53] <droid3> How does these arbitrary precision floating point libraries like BigDecimal or mpq do it.
[05:46:01] <InPhase> You make a choice.  And it will be the wrong one.
[05:46:03] <PlanckWalk> The user chooses the precision.
[05:46:40] <droid3> That means he has to know the precision to choose before he does math operations on them.
[05:46:46] <PlanckWalk> Yes
[05:47:13] <droid3> Unlike with BigInteger 
[05:47:17] <PlanckWalk> Yep
[05:47:32] <InPhase> droid3: There are two methods, choose a number of bits to store, or work with rationals of arbitrary length.  The latter falls apart though as soon as you touch something like a trig function.
[05:48:08] <droid3> Because working with Integers can dynamically grow to any size your computer can hold. But with decimal/floating point you have the additional issue of having to know the end precision needed. You cannt really dynamically increase precision. 
[05:48:37] <droid3> Well even if you could you lose the exact calculation thru around off precision errors in the partial calculations.
[05:48:49] <PlanckWalk> You can dynamically increase precision for some operations but not all.
[05:49:02] <droid3> Unless ofcourse you always knew the precision you wouldnt ever exceed in the first place.
[05:49:25] <PlanckWalk> There are some highly specialized libraries around for things like algebraic fields.
[05:49:28] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:50:05] <droid3> well algebraic fields and other things can be done like mathematica does somethings aka symbolically. 
[05:50:17] <PlanckWalk> Like integers, yes.
[05:51:09] <PlanckWalk> As soon as you bring in a couple of transcendental functions it all goes to crap.
[05:51:23] <droid3> ya because algebraic fields have defined equation properties to calculate so sure it boils down to equations with BigIntegers or quotients of them
[05:51:44] <droid3> Ya it transcendental functions and even some just irrational functions do it.
[05:52:09] <droid3> WHen that happens all you got to work with is with BigDecimal not BigInteger at that point.
[05:52:48] <droid3> Curious by default what does a the like new BigDecimal()  create for its default precision limits?
[05:52:58] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Quit: Have a groovy one)
[05:53:04] <PlanckWalk> Depends upon the library.  Some don't allow that.
[05:53:57] <PlanckWalk> E.g. Java's BigDecimal has no no-arg constructor.
[05:54:07] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[05:54:27] <InPhase> droid3: 0
[05:54:44] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[05:55:16] <PlanckWalk> It does allow  new BigDecimal(0),  in which case you get zero decimal places.
[06:00:28] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:00:55] <audiocat> how do i open up a "launch application" dialog with js from the browser so that when  users click "ok" it opens a desktop application, like discord does?
[06:01:10] *** Quits: xff0x (~xff0x@2001:1a81:5362:1000:c47d:ed82:441b:712b) (Ping timeout: 252 seconds)
[06:02:53] *** Joins: xff0x (~xff0x@2001:1a81:5399:4e00:f397:598c:9bde:b2ba)
[06:03:05] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:03:05] <droid3> well ya you can setScale and get scale with BigDecimal even get the precision/ digit count that makes up the complete number. 
[06:03:53] <droid3> But when you do add, sub , mult,...etc operations with BigDecimal your given back a BigDecimal of the same scale.
[06:04:27] <droid3> So you really need to know what to set the scale to before you do calculation if you want more exact precision to some many decimal places.
[06:04:43] <droid3> Regardless of the RoundMode you choose.
[06:07:53] *** Joins: newpy_ (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[06:08:03] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[06:08:07] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Ping timeout: 240 seconds)
[06:08:20] *** Joins: TazmianianDevil (~Tazmainia@102.39.90.151)
[06:09:17] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[06:09:45] *** Joins: justsomeguy (~justsomeg@24.96.241.90)
[06:09:47] *** Quits: utunbu_ (~utunbu@user/utunbu) (Ping timeout: 240 seconds)
[06:09:47] *** Quits: ksham (Kays@user/kays) (Ping timeout: 240 seconds)
[06:10:07] *** Quits: backslash (~backslash@user/backslash) (Ping timeout: 240 seconds)
[06:10:41] *** Joins: backslash (~backslash@user/backslash)
[06:10:52] *** Quits: Tazmainian (~Tazmainia@102.39.90.151) (Ping timeout: 256 seconds)
[06:11:10] *** Parts: homura (root@user/homura) ()
[06:11:52] *** Joins: ksham (Kays@user/kays)
[06:12:40] *** Quits: justsomeguy (~justsomeg@24.96.241.90) (Quit: WeeChat 3.2)
[06:13:54] <audiocat> how do i open up a "launch application" dialog with js from the browser so that when  users click "ok" it opens a desktop application, like discord does?
[06:14:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:14:44] *** Joins: gggp (~textual@60.10.194.45)
[06:15:18] *** Joins: utunbu_ (~utunbu@user/utunbu)
[06:16:10] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:18:04] *** Joins: gggp (~textual@60.10.194.45)
[06:18:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:77bb) (Ping timeout: 240 seconds)
[06:19:37] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:19:38] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:20:42] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[06:21:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:21:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:21:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:21:47] *** brabrax_ is now known as brabrax
[06:22:21] <audiocat> how do i open up a "launch application" dialog with js from the browser so that when  users click "ok" it opens a desktop application, like discord does?
[06:22:24] <audiocat> droid3, 
[06:23:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[06:24:09] *** Joins: xsperry (~as@cpe-188-129-103-235.dynamic.amis.hr)
[06:24:09] *** Quits: xsperry (~as@cpe-188-129-103-235.dynamic.amis.hr) (Changing host)
[06:24:09] *** Joins: xsperry (~as@user/xsperry)
[06:25:51] <gggp_> windows portable format "pe" , saying portable to what
[06:26:25] <webNET4> loool
[06:26:48] <webNET4> to DOS?
[06:30:36] <webNET4> APPLE???
[06:30:57] <webNET4> werent they apple app devs in the early days
[06:32:47] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:33:07] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:33:07] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:33:22] *** Joins: LydiaDickerton (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[06:35:01] <PlanckWalk> gggp_: It was supposed to be portable between every format that any version of Windows ran on.
[06:35:20] <gggp_> oh,
[06:35:34] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[06:35:46] <gggp_> PlanckWalk, win -> linux is portal
[06:35:47] <PlanckWalk> At the time it was devised I think that was just 95 and NT on x86
[06:35:53] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[06:36:03] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[06:38:24] <PlanckWalk> Oh okay, apparently it also included the ability to have a MS-DOS version of a program in the same binary as Windows ones.
[06:39:58] <PlanckWalk> But this was hardly ever used.
[06:41:08] <[itchyjunk]> hmm
[06:42:08] <[itchyjunk]> i'm gonna do it.. fuck it
[06:42:27] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:42:41] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[06:43:13] <[itchyjunk]> fuck
[06:43:24] *** Joins: zaher_ (~zaher@37.48.178.247)
[06:45:15] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:45:18] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85)
[06:45:43] *** Quits: zaher (~zaher@37.48.154.22) (Ping timeout: 252 seconds)
[06:48:28] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85) (Ping timeout: 252 seconds)
[06:48:38] *** Joins: hexfive (~eric@50.35.83.177)
[06:49:06] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:49:08] <[itchyjunk]> does coq have a channel here
[06:49:09] <[itchyjunk]> ?
[06:50:20] <beaky> yes there is #coq 
[06:50:25] <[itchyjunk]> oh thanks
[06:51:27] <[itchyjunk]> I want to do hello world in it
[06:51:32] <[itchyjunk]> but looks a bit too complciated
[06:51:35] *** Quits: LydiaDickerton (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: No route to host)
[06:51:58] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[06:53:04] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[06:53:44] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85)
[06:55:08] <[itchyjunk]> What does "identifier" mean in programming languages?
[06:55:41] <arahael> [itchyjunk]: That's too generic a quesetion to answer, but you could use a dictionary
[06:55:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:55:45] <arahael> *question
[06:56:02] <webNET4> possibly the name of a thing
[06:56:10] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9) (Ping timeout: 240 seconds)
[06:56:14] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85) (Ping timeout: 252 seconds)
[06:56:24] <jinsun_> the name of a variable usually
[06:57:16] <arahael> [itchyjunk]: At best, it's talking about the broad topic of something that is identifiable, in some way.
[06:57:26] <beaky> [itchyjunk]: the hello world of proof assistants is formalizing the natural numbers and arithmetic for an introduction to what coq is all about check out volume 1 of software foundations https://softwarefoundations.cis.upenn.edu/
[06:57:27] <bayaz> Title: Software Foundations 
[06:57:32] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9)
[06:57:54] <[itchyjunk]> ah it might be variables yes
[06:59:05] <[itchyjunk]> wow
[06:59:12] *** Joins: Samian (~Sami@174.27.107.153)
[06:59:12] <[itchyjunk]> upenn offers a course on coq?
[06:59:20] <[itchyjunk]> with my uni had something like that
[07:00:11] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:00:24] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:02:14] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:02:22] <jinsun_> beaky: what is the best editor for coq? (don't say Emacs)
[07:02:35] <CoJaBo> vim, obviously
[07:02:43] <CoJaBo> (for everything :P)
[07:02:46] <[itchyjunk]> "The exposition is intended for a broad range of readers, from advanced undergraduates to PhD students and researchers."
[07:02:51] <[itchyjunk]> lol i am not the target audience
[07:03:03] <arahael> CoJaBo: I'd say neovim. ;)
[07:03:11] <[itchyjunk]> notepad
[07:03:26] <CoJaBo> I only got one texas-related support ticket today
[07:03:46] <CoJaBo> lolnotepad
[07:05:46] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:05:58] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:06:22] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9) (Ping timeout: 245 seconds)
[07:06:58] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e5d6:c2e5:838a:8f85) (Ping timeout: 256 seconds)
[07:08:25] *** Joins: gggp (~textual@111.63.14.116)
[07:09:32] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[07:10:42] *** Quits: gggp (~textual@111.63.14.116) (Client Quit)
[07:11:08] *** Quits: addc182 (~addc182@host109-158-74-189.range109-158.btcentralplus.com) (Remote host closed the connection)
[07:11:12] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:14:46] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[07:15:24] <[itchyjunk]> failed to launch coq. destop file didn't specify exec
[07:15:26] <[itchyjunk]> it says
[07:15:28] <[itchyjunk]> wtf
[07:15:51] *** Quits: newpy_ (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[07:15:57] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 245 seconds)
[07:16:34] <jinsun> how did you install?
[07:18:03] <[itchyjunk]>  sudo snap install coq-prover
[07:18:16] <[itchyjunk]> wth, i did /snap/bin/coqide
[07:18:18] <[itchyjunk]> and it ran
[07:18:32] <beaky> yes i recommend emacs
[07:18:34] <[itchyjunk]> but when i click the gui button that says "coqide" i get that error
[07:19:05] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 250 seconds)
[07:19:53] *** Quits: TazmianianDevil (~Tazmainia@102.39.90.151) (Ping timeout: 252 seconds)
[07:20:03] <jinsun> noooo, why do these proof assistants prefer emacs always? I die when I try to use it
[07:20:05] <[itchyjunk]> i can't find the run button on coqide xD
[07:20:20] <[itchyjunk]> yeah i don't have the energy to learn emacs for now
[07:20:33] <[itchyjunk]> I wanna run the code `Check O.`
[07:20:39] <[itchyjunk]> but idk how to "run" it
[07:21:17] <[itchyjunk]> oh there we go
[07:21:25] <[itchyjunk]> i can run it one line at a time i seems
[07:21:46] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[07:23:40] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:23:53] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:24:15] *** Joins: sebbu (~sebbu@user/sebbu)
[07:24:59] <[itchyjunk]> man this is getting hard quickly
[07:25:19] <webNET4> yeah that language is ... different
[07:25:53] <webNET4> can you read C code?
[07:26:40] <[itchyjunk]> no :(
[07:26:47] <[itchyjunk]> i can barely read english
[07:26:48] <webNET4> awwww man
[07:27:09] <[itchyjunk]> i uses the -> notations similar to haskell
[07:27:13] <[itchyjunk]> that always throws me off
[07:27:20] <[itchyjunk]> nat -> nat -> Prop
[07:27:24] <[itchyjunk]> how do i read that
[07:27:29] <[itchyjunk]> -> is maps right?
[07:27:50] <[itchyjunk]> natural numebers are getting mapped to natural numbers are getting mapped to Prop?
[07:28:17] <[itchyjunk]> "What happens here is similar to what we are used to in a functional programming language:"
[07:28:19] <[itchyjunk]> damn it
[07:28:48] <cis> I don't know what language, but that looks like some kind of function notation
[07:28:53] *** Joins: gggp (~textual@60.10.23.169)
[07:29:05] <[itchyjunk]> it's coq
[07:29:40] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:29:53] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:31:37] <cis> I don't know coq, but I'd think it means you're passing a natural number to a function, which returns another function that takes a natural number and returns a "Prop"
[07:32:52] <jinsun> yes F# also has that (not nat, but those arrows)
[07:33:45] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[07:33:46] <cis> a so-called "higher-order function"
[07:35:26] <[itchyjunk]> ohh
[07:35:34] <[itchyjunk]> okay that makes sense to me then
[07:36:02] <[itchyjunk]> nat gets mapped to nat by some function and this nat gets mapped to Prop by another
[07:36:19] <[itchyjunk]> here i assume `nat` and `Prop` should be thought of as types..
[07:36:26] <[itchyjunk]> damn.. type theory is important too
[07:36:30] <[itchyjunk]> FP is important too
[07:36:41] <[itchyjunk]> proof assistance are important too /o
[07:36:59] <[itchyjunk]> while(true) { existential dread; }
[07:37:29] *** Quits: hexingb (~hexingb@111.30.225.74) (Ping timeout: 252 seconds)
[07:40:01] <cis> until the cosmOS terminates our process, and our memory is free'd
[07:40:03] <beaky> yes nat and Prop are types indeed (nat the type of natural numbers, Prop the impredicative universe of propositions)
[07:40:13] *** Joins: hexingb (~hexingb@2409:8902:7bc5:4c3a:c2:3372:d5c2:fba)
[07:40:58] <beaky> the book is a set of coq scripts that you run and step through line-by-line, working through the exercises and looking at the state in each proof step 
[07:42:12] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:42:26] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 252 seconds)
[07:46:06] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:47:39] <beaky> i love rust i wish python had move semantics
[07:47:50] <beaky> friendship ended with python rust is my new best friend
[07:48:27] *** Quits: hexingb (~hexingb@2409:8902:7bc5:4c3a:c2:3372:d5c2:fba) (Ping timeout: 245 seconds)
[07:48:57] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[07:49:10] *** Joins: hexingb (~hexingb@111.30.225.74)
[07:50:18] <beaky> in rust i trust
[07:50:53] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[07:51:35] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[07:52:02] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[07:52:03] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[07:52:27] <cis> how often do rust developers make jokes about being rusty?
[07:53:22] <leduyquang753> If anything those people who make those jokes are from other languages.
[07:53:57] <leduyquang753> I haven't found anything to like from Rust though, C++ has been serving me quite well.
[07:54:50] <cis> so you think rust is a bust
[07:57:13] *** Joins: TazmianianDevil (~Tazmainia@102.39.90.151)
[07:57:23] *** Quits: TazmianianDevil (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[07:59:29] *** Joins: lalitmee__ (~lalitmee@180.94.32.196)
[07:59:29] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[08:01:38] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[08:03:23] <[itchyjunk]> beaky, can you help understand how Prop is a type?
[08:03:37] <[itchyjunk]> i guess i need to learn type theory to understand that type of stuff
[08:05:12] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:06:06] <jinsun> https://www.youtube.com/watch?v=SknxggwRPzU
[08:06:07] <bayaz> Title: Propositions as Types - Computerphile 
[08:06:27] <[itchyjunk]> damn they have a video for everything
[08:09:37] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:10:56] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[08:15:38] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e844:dda7:91e7:a04b)
[08:16:06] <[itchyjunk]> ;_;
[08:16:19] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9)
[08:27:59] <beaky> yes coq's theory (the calculus of inductive constructions implemented as gallina) follows the 'types as propositions' paradigm, the idea is that you have a type theory (a kind of logic) and you get to interpret the types as propositions and the terms (i.e. programs) of the type theory that have that type as proofs of the proposition. so for example gallina's functions correspond to dependent
[08:28:02] <beaky> product types and that is universal quantification in logic. the benefit is that rather than having proofs be some abstract kind of thing you get to operate with them as programs and build logical propositions by just building those programs, computing with them (normalization i.e. reducing them to a normal form) and following the judgments of the type system to produce proofs of a thereom,
[08:28:04] <beaky> where the resulting object's type is the theorem's proposition
[08:29:44] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[08:30:16] *** Quits: zaher_ (~zaher@37.48.178.247) (Ping timeout: 256 seconds)
[08:31:00] <beaky> the correspondence between logic formulas/rules and a type theory types/computation as a table (with category theory in the middle of the table) https://ncatlab.org/nlab/show/computational+trilogy#rosetta_stone
[08:31:01] <[itchyjunk]> program having a specific type is the proof of the type?
[08:31:01] <bayaz> Title: computational trilogy in nLab 
[08:31:07] <[itchyjunk]> that part went over my head
[08:31:15] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:31:20] <[itchyjunk]> oh ohh.. cat theory
[08:31:34] <[itchyjunk]> that's another think i wanted to learn but couldn't
[08:31:47] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[08:32:52] <beaky> yes one feature of coq's type theory is 'dependent types' where you have types that depend on values, for example the type of propositional equality "x = x" depends on the value x
[08:33:33] <[itchyjunk]> hm
[08:33:35] <beaky> and through propositions as types (and programs as proofs) the proof of that is 'reflexivity' (a single object eq_refl in coq taking the value of x)
[08:35:59] <[itchyjunk]> hmmmmmmmmm
[08:36:37] <[itchyjunk]> so you have a program which is eq_refl
[08:36:48] <beaky> while stepping through a coq proof you can do 'Show Proof' and see the intermediate proof object being constructed by the proof tactics
[08:36:54] <beaky> (and its type)
[08:37:00] <[itchyjunk]> this program returns the type of x on the rhs
[08:37:10] <[itchyjunk]> which matches the type of lhs
[08:37:13] <beaky> the proposition shown in the 'Goals' window shows the type
[08:37:31] <[itchyjunk]> hmm
[08:37:50] *** Joins: gggp (~textual@60.10.194.45)
[08:38:41] <beaky> eq_refl returns a value of type "forall x, x = x"
[08:38:52] <beaky> ("eq_refl" itself is the value)
[08:39:08] <jackiee> is there anyway to scroll up the screen to read older messages
[08:39:17] <jackiee> like /lastlog but for the whole thing
[08:40:19] <[itchyjunk]> that depends on your clients buffer
[08:40:24] <[itchyjunk]> if it logs or not
[08:40:25] <jackiee> irssi
[08:40:40] <[itchyjunk]> yes but the settings, how much you set to log etc
[08:40:48] <[itchyjunk]> there is no buffering server side
[08:41:01] <jackiee> /var/log or to /etc/irssi.cfg
[08:41:02] <jackiee> ?
[08:41:04] <jinsun_> beaky: you know Agda also right? how do Coq and Agda proofs differ? (I haven't used any proof assistant so I have no idea why there are so many)
[08:41:15] <[itchyjunk]> hmm i don't remember where irssi logs it actually
[08:41:33] <jackiee> ext4 linux
[08:41:43] <[itchyjunk]> so tired but still watching this computerphile video
[08:41:49] <[itchyjunk]> seems to be a nice channel
[08:41:58] <[itchyjunk]> there is an #irssi channel i think
[08:42:01] <[itchyjunk]>  you could ask there
[08:42:02] <jackiee> i bought a oneplus 6t for like a hundred bucks is that a horrid deal
[08:42:16] <jackiee> great condition
[08:44:35] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[08:44:39] <beaky> they are based on similar theories and ideas (like having a dependent type theory, using propositions as types to be able to formalize and prove theorems) but the main difference is that coq is more designed to be a proof assistant first and foremost, and has features like a big interactive command-oriented environment (with a vernacular command langauage) to query and control the proof
[08:44:41] <beaky> state, lots of proof tactics (imperative programs that build the proof objects), extensions, etcetera, whereas agda is more designed like a dependently-typed programming language
[08:44:52] <[itchyjunk]> wtf
[08:45:00] <[itchyjunk]> oh i'd heard about homotopy type theory
[08:45:06] <[itchyjunk]> and had completly forgotten about it..
[08:45:56] *** Joins: JasonBourne (~itsis@8.17.206.205)
[08:46:37] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:47:29] <jinsun_> beaky: okay cool, so which way do you like more?
[08:48:05] <beaky> yes the idea of homotopy type theory is that in dependent type theory there is a type of propositional equality x=x (the same one we discused earlier) but that it is actualyl a very inflexbile way to work with equality usually in maths everyone talks about equality 'up to an equivalence relation' and the idea of homotopy type theory is to introduce univalence to reconcile equality and
[08:48:07] <beaky> equivalence
[08:49:20] <beaky> rite now i like agda more because it uses cool unicode and unlike coq all the proofs dont use a different imperative language, everything is just 100% agda and the agda emacs mode makes everything feel like interactive programming, but i think coq is more practical for actual theorem proving
[08:49:48] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[08:50:42] <[itchyjunk]> yeah two function being homotopic means there is a cts transformation from one to another
[08:51:09] <[itchyjunk]> so equal up to homotopy meaning they aren't literally equal but they can be (continuously) transformed from one to another
[08:51:19] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:51:32] <[itchyjunk]> so how would you have equivalent types then?
[08:51:42] <[itchyjunk]> if this is what homotopy type theory is getting at
[08:51:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:51:53] <[itchyjunk]> you can't have different types be equivalent, can  you?
[08:54:42] <jackiee> 17:00
[08:54:53] <jinsun_> so if I want to start with proofs and dependent types should I start with Agda? or Coq will be better because of better tutorials or something maybe?
[08:54:58] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[08:55:42] <beaky> you can in basic type theory (without the homotopy type theory stuff) if the types have decidable equaility (or if you cheat and use extensionality i think), but i think in homotopy type theory you get to use those path equality types to define equalities between types
[08:56:29] <jinsun_> will have to learn Emacs also I guess, what do about that?
[08:56:39] <beaky> you can start with either one there is a similar book to softwarefoundations in agda https://plfa.github.io/
[08:56:40] <bayaz> Title: Programming Language Foundations in Agda â€“ Table of Contents 
[08:56:58] <jinsun_> nice
[08:57:29] <beaky> coq uses emacs with a Proof General mode you install on top of emacs https://proofgeneral.github.io/ , and agda uses emacs with 'agda mode' that i think gets installed with agda 
[08:57:29] <bayaz> Title: Proof General 
[08:57:56] <beaky> i think you install both with the emacs package management system (through MELPA)
[08:58:46] <beaky> and then install coq or agda through your os package manager or lagnuage-specific package managers (like opam for coq or cabal/stack for agda)
[08:59:26] <beaky> agda install instructions https://plfa.github.io/GettingStarted/
[08:59:27] <bayaz> Title: Programming Language Foundations in Agda â€“ Getting Started 
[08:59:44] <jinsun_> why are all of these related to OCaml somehow?
[08:59:46] *** Joins: LarryDick (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[09:01:12] <beaky> i think ocaml was invented to implement coq 
[09:01:59] <beaky> and agda itself was inspired by haskell (not really related to ocaml though haskell and ocaml have similar features in terms of both being about functional programming)
[09:03:41] <jinsun_> oh so Agda so so directly related
[09:03:50] <jinsun_> I remembered F* was also bootstrapped with OCaml
[09:04:10] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-4d20-c6a4-d08c-1eac.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:04:53] <jinsun_> I was interested in that also because I've used F# and it is cool (and F# is also inspired by OCaml)
[09:06:48] <[itchyjunk]> yeah several different proof assistant are written in FP i think
[09:06:53] <[itchyjunk]> there was some written in haskell
[09:09:44] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-00fd-de4a-ab18-4740.res6.spectrum.com)
[09:10:00] <jinsun_> proof general is a nice anime girl, which is nice, so I think I'll start with Coq :D
[09:10:30] *** Joins: lalitmee_ (~lalitmee@180.94.33.3)
[09:12:13] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[09:12:46] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 256 seconds)
[09:12:53] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[09:13:20] *** Quits: lalitmee__ (~lalitmee@180.94.32.196) (Ping timeout: 256 seconds)
[09:19:07] *** Quits: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (Quit: leaving)
[09:19:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[09:21:35] <jinsun> oh new Agda video from computerphile today https://www.youtube.com/watch?v=U5i2VQj5jPk
[09:21:36] <bayaz> Title: Programming with Proofs - Computerphile 
[09:23:10] *** Quits: LarryDick (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: No route to host)
[09:23:56] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:25:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[09:26:45] *** Joins: LarryDickerson (~jessiesgi@S01069050ca4e3573.cg.shawcable.net)
[09:27:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:30] <beaky> nice i like computerphile
[09:30:42] * enyc meows
[09:30:55] * enyc thinks C/C++ supervision whatnot
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:34:45] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[09:35:31] *** Joins: CableNinja (~Accidenta@user/cableninja)
[09:35:35] <beaky> friendship ended with rust agda is my new best friend
[09:36:24] <CableNinja> hey all, I'm having a big dumb... I was doing some work on my (C) project, and went to recompile. I was blasted with 'multiple definition of {thing}' for multiple things all of a sudden. I cannot seem to figure out what exactly caused this problem. how can I start digging for this?
[09:37:26] <beaky> i think the error messages tell you where the multiple definitions are coming from by line number or whether they are from an included file
[09:37:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:38:06] <CableNinja> Severity	Code	Description	File	Line
[09:38:06] <CableNinja> Error		multiple definition of `config_mount'	E:\Projects\...\data_control\data_config.c	188
[09:38:20] <CableNinja> I go there but theres nothing useful
[09:38:45] <CableNinja> I feel like I messed up with some brackets or something, but I cant seem to find where
[09:41:22] <LarryDickerson> isnt that Severity Description Code File Line? 
[09:41:38] <CableNinja> 'Severity Code'
[09:41:40] <CableNinja> single column
[09:44:18] *** Joins: Atque (~Atque@user/atque)
[09:45:17] *** Joins: user51 (~user51@176.228.90.248)
[09:50:18] <CableNinja> hm, interesting... seems one of my functions I added is indeed the cause of the problem but its not throwing any syntax errors >.>
[09:50:49] *** Joins: DavidWebb (~itsis@8.17.206.205)
[09:53:39] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[09:53:53] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[09:54:22] *** Quits: JasonBourne (~itsis@8.17.206.205) (Ping timeout: 252 seconds)
[09:55:11] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[09:59:48] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 256 seconds)
[09:59:57] *** Joins: mei (~mei@user/mei)
[10:01:43] *** CinderellaMan is now known as TheArchitect
[10:02:22] *** Joins: gggp (~textual@60.10.23.169)
[10:05:26] <PlanckWalk> CableNinja: The compilers I'm familiar with tell you where the previous definition was
[10:06:12] <CableNinja> yeah, it does, but it says 'first defined here' and then references line 1 of the .o file
[10:06:16] <CableNinja> which is super unhelpful
[10:06:18] <PlanckWalk> But anyway yes, sometimes a typo can accidentally still be valid (but very unintended) syntax
[10:07:36] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[10:07:39] <PlanckWalk> A compiler can't tell what you meant, only what you typed.
[10:08:29] <PlanckWalk> (Lacking full AI)
[10:09:22] <whatsupdoc> Career is going great, but now the rest of me is fading slowly
[10:09:30] *** Parts: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) ()
[10:10:09] <PlanckWalk> Missing a } or something might lead to everything following it being part of some definition according to the language's syntax, for example.
[10:10:15] <CableNinja> PlanckWalk, what do you mean the compiler cant tell me I'm a moron and cant type?!
[10:10:20] <CableNinja> it does it all the time!
[10:10:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:10:35] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:10:44] <InPhase> PlanckWalk: On the list of my worst typos, paraphrased:  grep -v removeme foo >temp & mv temp foo
[10:10:48] <CableNinja> sadly, I stupidly changed a metric fuck ton of code between my previous commit and this one so finding exactly what I broke is impossible
[10:10:55] <leduyquang753> The compiler can tell but not in all cases.
[10:11:13] <InPhase> PlanckWalk: But of course I did it recursively across an entire massive directory structure.
[10:11:26] <PlanckWalk> InPhase: Wheeeeee
[10:11:28] <beaky> yes typos are scary
[10:11:55] <CableNinja> InPhase, 'just remove apparmor' me: ok... `apt purge -y apparmor`
[10:12:08] <PlanckWalk> "rm FilesToRemove*"  means one thing,  "rm FileToRemove *" means quite another.
[10:12:26] <CableNinja> heh
[10:12:31] <CableNinja> even better when you're at /
[10:12:46] * PlanckWalk did that a couple of weeks ago.  Dig out the backups.
[10:13:15] <CableNinja> I used to work for a hosting company. we had people fuck up their permissions so frequently, that we built a utility to restore permissions from another known good system
[10:14:48] * PlanckWalk was nervous about even typing  "rm FilesToRemove *" and double-checked that this was definitely the IRC line and not a terminal.
[10:15:12] <PlanckWalk> I mean, the quotes are also a safety measure
[10:15:16] <PlanckWalk> But still...
[10:15:16] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (Ping timeout: 252 seconds)
[10:15:53] <CableNinja> hahah
[10:16:04] <CableNinja> tfw you panic and wonder if you're in a terminal or in irc
[10:16:13] <InPhase> Once many years ago I attempted a recursive permissions change of all hidden files, which I executed on .*   which did not expand as desired.  I counted my blessings that it was a remove of hidden files that I was attempting.
[10:16:33] <InPhase> s/that it was a/that it was not a/
[10:16:46] <PlanckWalk> Haha
[10:17:29] <PlanckWalk> Yes, . and .. would be included there.
[10:18:18] *** Joins: gggp (~textual@60.10.194.45)
[10:19:04] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[10:19:13] <CableNinja> not so fun fact... I once had a compromised system, and it took me 3 days to find a dir called '...'
[10:19:26] <CableNinja> (yes, you can make that dir... mkdir \.\.\.)
[10:20:45] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[10:20:54] <InPhase> You don't need the slashes for that one.
[10:21:02] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[10:21:19] *** Joins: zyweo (~kvirc@user/zyweo)
[10:21:20] <CableNinja> true, though the hack script I found that made it, did use backslashes, probably to ensure there were no problems
[10:22:31] *** Joins: lunarkitty (uid501895@user/pyra)
[10:24:35] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:24:50] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:26:39] <beaky> if haskell was not lazy evaluation would it be possible for haskell to have zero gc runtime and move semantics
[10:26:49] <beaky> and zero-cost abstraction
[10:29:22] <pikapika> Haskell is very obscure
[10:32:14] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[10:32:17] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:32:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:34:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:34:22] *** Joins: flynn (~mcbloch@user/flynn)
[10:34:30] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:34:37] *** Joins: Mija (~Mija@user/mija)
[10:34:56] *** Quits: gggp_ (~gggp@111-251-124-128.dynamic-ip.hinet.net) (Quit: Leaving)
[10:35:09] *** Joins: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net)
[10:35:37] *** Quits: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:35:40] *** Joins: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net)
[10:36:05] <gggpkm> imperative code is hard
[10:37:28] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving)
[10:37:41] <pikapika> Imperative is easy
[10:40:25] *** Joins: LiftLeft (~LiftLeft@172.83.47.113)
[10:41:11] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[10:42:45] <Atque> pikapika: Lol, maybe, it depends on your skills for it. ><
[10:42:57] <pikapika> Atque, nobody understands declarative
[10:43:15] <pikapika> Only imperative is real
[10:44:42] *** Quits: zyweo (~kvirc@user/zyweo) (Ping timeout: 245 seconds)
[10:44:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:45:13] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[10:45:15] <Atque> pikapika: So you never use SQL? Oo
[10:45:30] <pikapika> Atque, sql is very complex
[10:45:55] <Atque> pikapika: Yes... and one of the most widely used languages in the world.
[10:46:19] *** Parts: CableNinja (~Accidenta@user/cableninja) (Leaving)
[10:46:28] <pikapika> Atque, what I meant is its very difficult to gain a proper understanding
[10:47:51] <Atque> pikapika: Equating proper understanding with understanding the control flow, I would agree I guess; it's a declarative language.
[10:54:28] *** Quits: Mija (~Mija@user/mija) (Read error: Connection reset by peer)
[10:57:14] <beaky> nice i like sql
[10:57:14] *** Quits: LarryDickerson (~jessiesgi@S01069050ca4e3573.cg.shawcable.net) (Read error: Connection reset by peer)
[10:57:42] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:11:02] *** Quits: DavidWebb (~itsis@8.17.206.205) (Quit: Leaving)
[11:12:37] <Valware> https://valware.uk/Valeyard
[11:12:52] <Valware> is PHP & SQL bot
[11:12:53] <Valware> :D
[11:12:55] <Valware> or
[11:13:00] <Valware> https://valware.uk/Dalek
[11:13:04] <bayaz> Title: PathWeb Dalek IRC Services 
[11:13:14] <Valware> is PHP & SQL IRC Services
[11:13:16] <Valware> if ya like
[11:13:55] *** Joins: palasso (~palasso@user/palasso)
[11:15:16] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:15:35] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:15:45] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:16:49] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce) (Remote host closed the connection)
[11:17:12] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce)
[11:17:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:18:52] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d)
[11:19:30] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d) (Client Quit)
[11:20:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce) (Read error: Connection reset by peer)
[11:20:43] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[11:22:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:23:22] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[11:25:40] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[11:32:11] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:35:01] *** Joins: lalitmee__ (~lalitmee@180.94.33.214)
[11:37:12] *** Quits: lalitmee_ (~lalitmee@180.94.33.3) (Ping timeout: 245 seconds)
[11:37:15] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[11:37:29] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:40:07] *** Joins: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de)
[11:46:27] *** Joins: gggp (~textual@60.10.194.45)
[11:47:21] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[11:54:00] *** Joins: lalitmee_ (~lalitmee@180.94.33.33)
[11:56:10] *** Quits: lalitmee__ (~lalitmee@180.94.33.214) (Ping timeout: 240 seconds)
[11:56:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[12:00:30] *** Joins: DasBrain (DasBrain@user/dasbrain)
[12:00:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:01:12] *** Joins: guest29348769876 (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de)
[12:02:01] *** Joins: frost (~frost@59.71.240.119)
[12:03:02] *** Quits: DasBrain_ (DasBrain@user/dasbrain) (Ping timeout: 245 seconds)
[12:03:27] *** Quits: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[12:06:40] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[12:06:52] *** Joins: flynn (~mcbloch@user/flynn)
[12:07:19] *** Joins: foozle (~foozle@2001-b011-c001-16ef-eb07-082b-2ebb-6ce6.dynamic-ip6.hinet.net)
[12:07:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:07:53] *** Quits: guest29348769876 (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de) (Quit: guest29348769876)
[12:08:03] *** Joins: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de)
[12:08:20] *** Joins: mrig (~mrig@user/mrig)
[12:12:59] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[12:13:36] *** Joins: Samian (~Sami@2620:10d:c091:480::1:e369)
[12:15:27] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Ping timeout: 245 seconds)
[12:19:40] *** Joins: orondo (~orondo@user/orondo)
[12:23:57] <mrig> Does tar replace ar on modern systems, is ar still used more as a protocol by compilers?
[12:24:25] <mrig> when making libraries say.
[12:26:17] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:26:34] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:26:50] <deniska> ar is used in unixy world for .a static libraries
[12:27:33] <mrig> I was just taking a look on my system and it doesn't seem to be installed, which was why I ask.
[12:28:05] <mrig> I suppose it could be gcc that does the same job as it these days.
[12:29:45] <deniska> it's provided by binutils
[12:31:45] *** Joins: Pickchea (~private@user/pickchea)
[12:31:50] <Caffeinated> anyone know of a decent Amiga c compiler?
[12:33:04] <mrig> ah ok, that makes sense deniska, right I'll take a look at that package.
[12:33:29] <deniska> Caffeinated: any which supports m68k?
[12:34:52] <Caffeinated> i've searched aminet.net and found sort of demos of a couple of Amiga compilers but no fully functional ones
[12:34:57] <Caffeinated> deniska: incorrect
[12:35:11] <Caffeinated> thanks anyways
[12:35:47] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[12:38:29] <Caffeinated> hah wow...found a couple that might be fully functional.... all in good old .lha format :D
[12:38:43] <Caffeinated> even an IDE
[12:39:19] <Caffeinated> seems they were all hiding in the misc section
[12:39:26] <mrig> Sounds like fun coding for an amiga :)
[12:39:37] <pyzozord> that's pretty cool, the amiga stuff
[12:40:12] <pyzozord> I think if any older device, I'd actually like to write games for ps1
[12:40:36] <JanC> maybe https://github.com/bebbo/amiga-gcc
[12:40:38] <bayaz> Title: GitHub - bebbo/amiga-gcc: The GNU C-Compiler with Binutils and other useful tools for cross development for Amiga 
[12:41:08] <Caffeinated> my bro in law loaned me his amiga kernel devices, drivers, etc, etc book...it's huge like a textbook heh
[12:41:19] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:41:35] <Caffeinated> but the OS gui, nicknamed Intuition, is soooo elegant
[12:42:02] <Caffeinated> it makes me wonder when OOP/C++ was first used...
[12:42:25] <Caffeinated> i THINK this book is for the older kernels..like workbench 1.3 stuff
[12:42:31] <mrig> I'd be interested to see how it is structured, something from that early on.
[12:42:33] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[12:42:38] <JanC> Caffeinated: in the 1970s
[12:42:41] <Caffeinated> which is the iconic blue background orange pointer
[12:42:46] <Caffeinated> ah ok then it fits
[12:43:05] <Caffeinated> it kind of reminds me of programming for OS/2
[12:43:21] <Caffeinated> only with custom chips heh
[12:43:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:43:42] <beaky> nice i like classic programming wish i was alive back then so i would have lived in the golden age of programming
[12:44:04] <JanC> Xerox had laptops with ethernet networking and Smalltalk-based GUIs in the 1970s...  :)
[12:44:14] <Caffeinated> the only downside is I only have an Amiga A500 with single disk drive so disk swapping is a big thing hehe
[12:44:27] <Caffeinated> gosh I remember Smarttalk
[12:44:46] *** Joins: aradesh (~aradesh@user/aradesh)
[12:44:52] <Caffeinated> was it IBM who was marketting UNIX business workstations and servers back then?
[12:45:02] <JanC> IIRC those laptops costed something like $1mln/piece though
[12:45:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-00fd-de4a-ab18-4740.res6.spectrum.com) (Quit: jarthur)
[12:45:31] *** Joins: lalitmee__ (~lalitmee@180.94.33.37)
[12:45:35] <mrig> I bet 16bit was a bit of a sweet spot for games somehow.
[12:45:38] <JanC> those that weren't used in-house were all sold to the DoD & such
[12:45:45] <Caffeinated> I remember seeing on Computer Chronicles IBM workstations that were pretty impressive
[12:45:54] *** Joins: addc182 (~addc182@host109-158-74-189.range109-158.btcentralplus.com)
[12:46:25] <mrig> that era, freed somewhat from the constrains of 8 bit but still required massive amounts of thought about resources.
[12:46:27] <JanC> only low double digits were built  :)
[12:46:37] *** Quits: foozle (~foozle@2001-b011-c001-16ef-eb07-082b-2ebb-6ce6.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:46:51] <mrig> I remember how vector graphic games took off then.
[12:47:04] <^-^hi> Caffeinated: do you have links to documentation on the amiga gui? (the soooo elegant one)
[12:47:42] <Caffeinated> ^-^hi: nope.  just this 800 page kernel reference one.  search engines work though
[12:48:02] *** Quits: lalitmee_ (~lalitmee@180.94.33.33) (Ping timeout: 245 seconds)
[12:48:44] <Caffeinated> JanC: i also remember seeing those slick GRID laptops that used 'secure' telecoms...
[12:53:41] <JanC> 1970s era Xerox OS: https://upload.wikimedia.org/wikipedia/en/e/e7/A_screenshot_of_Smalltalk-76.png
[12:53:42] <bayaz> Type: image/png Size: 22.3 kB 
[12:54:56] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[12:55:10] <Caffeinated> hah wow amazing how much that looks like a cross between xwindows (motif or something) and early macos
[12:55:28] <pikapika> The b/w looks very neat
[12:55:33] <JanC> their laptops back then weighed 22kg or so, so it's probably more correct to call them a "luggable computer" than a "laptop"  ;)
[12:55:36] <pikapika> Like looking at a paper on the screen
[12:55:57] <Caffeinated> ah yes the luggables...Compaq had those too
[12:55:58] <pikapika> I'll happily carry a 22kg laptop if it has features I want
[12:56:03] <JanC> unless you want to restrict the blood circulation to your legs  :P
[12:56:25] <Caffeinated> weren't they just big enough to fit as carry-on for airlines?
[12:56:35] <Caffeinated> i remember it was a selling feature
[12:57:15] <JanC> Caffeinated: something like that, although in this case they were so expensive that that wasn't even a requirement I'm sure
[12:57:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:58:00] <Caffeinated> heh
[12:58:03] <JanC> just someone needed to be able to carry it onto Air Force One or some other military/CIA plane
[12:58:46] <JanC> as those were literally the only customers able to afford buying them
[12:59:14] <Caffeinated> Native Developer Kit for AmigaOS 3.2 (NDK 3.2 Release 3)
[12:59:16] <Caffeinated> oops
[12:59:25] <Caffeinated> middle-click paste
[12:59:49] <JanC> from what I understand, there is a GCC port for Amiga, including cross-compiling
[12:59:57] *** Andrew is now known as AhkilKumar
[13:00:05] <JanC> cross-compiling might be faster  :)
[13:00:26] *** AhkilKumar is now known as Andrew
[13:00:40] <Caffeinated> yes I found that on aminet
[13:01:23] <JanC> cross-compiling = compile on a modern linux (or other OS) system, run it on the old Amiga
[13:01:26] <Caffeinated> surprising how many commercial c compilers there were for Amiga back in it's day...there are a lot of demo versions on there
[13:01:45] <JanC> there used to be lots of commercial compilers for the PC too
[13:02:07] <JanC> especially C compilers
[13:02:38] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[13:02:41] <JanC> C++ is so much more complex that it became less profitable...
[13:03:06] <JanC> Pascal & BASIC also had lots of implementations
[13:03:11] <pikapika> Its just that everyone is writing python and js today
[13:03:15] <beaky> vim was originally on amiga i think
[13:03:17] <pikapika> C++ is a well liked language
[13:03:20] <beaky> the iconic text editor
[13:03:28] <Caffeinated> yes I saw a lot of different BASIC implementations on aminet
[13:03:38] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[13:03:44] <JanC> well, even most C++ experts don't really like it  ;)
[13:04:22] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:04:45] <JanC> it solved some issues, and introduced a lot of new ones  :)
[13:05:53] <beaky> yes we have rust now a language that is well liked even by those that do not use rust
[13:06:01] <JanC> IIRC Rexx was also intensively used on Amiga
[13:06:19] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[13:06:31] <JanC> as a scripting language
[13:06:48] <pikapika> JanC, its a well liked language
[13:06:54] <pikapika> There are always a bunch of haters of any lang
[13:07:02] <JanC> ARexx
[13:07:02] <pikapika> Its trendy these days to hate well established langs
[13:07:33] <JanC> but C++ has (or had) lots of very serious issues
[13:07:43] <pikapika> As have any other language
[13:07:46] <JanC> I think it improved a bit 
[13:08:00] *** Joins: lalitmee_ (~lalitmee@180.94.32.14)
[13:08:13] <arahael> C++ is so super freaking crazy complex.
[13:08:23] <pikapika> Its a very elegant language
[13:08:41] <arahael> That might depend on what you mean by "elegant".
[13:08:59] <pikapika> Its just a trend among certain circles to shit on well established languages
[13:09:04] <pikapika> Don't listen to those idiots
[13:09:23] <Valware> if you don't code in the language because of a small reason, it automatically means that language is shit
[13:09:24] <Valware> Â¯\_(ãƒ„)_/Â¯
[13:09:30] <JanC> I have an semi-oldish book about C++ co-written by Stroustrup; in the foreword he says he doesn't understand C++
[13:10:13] <JanC> are you saying Stroustrup is an idiot?
[13:10:18] <pikapika> JanC, that was just a joke
[13:10:25] <JanC> it wasn't a joke
[13:10:32] *** Quits: lalitmee__ (~lalitmee@180.94.33.37) (Ping timeout: 245 seconds)
[13:10:39] <JanC> he really didn't understand some aspects of C++
[13:10:48] <pyzozord> for some reason most programmers get very tribal and attach their identity to a language/technology
[13:10:50] <pikapika> And a language being large is a separate issue from a language being good or bad
[13:11:03] <arahael> JanC: I believe that.
[13:11:07] * Valware likes PHP, C, mIRC Script Language, Python, etc
[13:11:10] <Valware> I have no hate
[13:11:10] <Valware> :D
[13:11:10] *** Joins: gitgood (~gitgood@host-78-145-139-165.as13285.net)
[13:11:11] <mrig> If we all had the same notions of aesthetics, it would be a pretty drab world; That is certainly not the case.
[13:11:17] <pikapika> arahael, C++ just has a lot of interactions between its features
[13:11:20] <pikapika> thats all
[13:11:38] <Caffeinated> hahaha mirc
[13:11:43] <Valware> if we all coded the same languages, it'd be boring
[13:11:46] <Valware> yeah mIRC ;) :P
[13:11:49] <JanC> and a huge number of undefined interactions
[13:11:53] <arahael> pikapika: C++ has deformed and evolved over the years.  It is certainly not a pretty language.
[13:11:54] <Caffeinated> a broken hap-hazard halfass scripting system
[13:12:06] <Valware> Caffeinated: it's actually not terrible ;)
[13:12:12] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[13:12:14] <Valware> but there is another example ;)
[13:12:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[13:12:20] <Valware> it can do sockets which is good enough for me
[13:12:21] <pikapika> arahael, its a very elegant language. It lets you do a lot at compile time that would require run time in other langs.
[13:12:48] <arahael> pikapika: Eh, Rust lets you do that too. Even Haskell lets you do that.
[13:12:49] <Caffeinated> yeah, it is.  I wrote a script called sMIRC, and gave up after kahled woobsie or w/e his name was butchered the scripting
[13:12:50] <Valware> make mIRC connect as an irc server to my actual irc server, use some of the mIRC GUI dialogs and shit, and I've got myself a pretty decent IRC monitor
[13:13:03] <pikapika> arahael, I can believe about rust
[13:13:09] <pikapika> I dont know about haskell
[13:13:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:13:54] <Valware> the only thing I don't really like about mIRC scripting is you can't make an argument and have { on a newline
[13:14:04] <Valware> if (boobs == boobs)
[13:14:05] <Valware> {
[13:14:08] <Valware> etc
[13:14:12] <mrig> Didn't C++ result in Barne Stroustrup being awarded the Royal Society of London Michael Faraday Prize or some such?
[13:14:18] <Caffeinated> classy
[13:14:26] <Caffeinated> kinda of defines your intent here
[13:14:28] <Caffeinated> good luck
[13:14:32] <mrig> I doubt those come inside a cereal packet?
[13:15:02] <JanC> obviously C++ had some improvements on C
[13:15:13] <JanC> so did Objective-C
[13:15:24] <arahael> pikapika: I was slightly disingenious in the case of Haskell, basically it has a means of doing compile-time metaprogramming, which is regularly taken advantage of.
[13:15:34] <mrig> different tool sets really it would seem.
[13:16:09] <Valware> [09:44:26] <Caffeinated> kinda of defines your intent here <- means what
[13:16:26] <arahael> JanC: Unlike C++, though, ObjectiveC is a perfect superset of C.
[13:16:32] <mrig> Valware: you have to use all caps to make that one play out on a pocket calculator :D
[13:16:46] <Valware> lol
[13:16:49] * mrig turns laptop upside down to check all is well.
[13:16:53] <JanC> arahael: perfect supersets don't exist  :)
[13:16:53] <Valware> 5158008
[13:17:00] <Valware> 5318008*
[13:17:02] <arahael> JanC: ObjC is a perfect superset.
[13:17:26] <arahael> JanC: You can also apply that superset to C++, and get a truely unholy monster often referred to as ObjC++.
[13:17:37] <arahael> JanC: Where you have not one, but TWO incompatible object systems.
[13:18:34] *** Quits: Lyn (~Lyn@user/law) (Read error: Connection reset by peer)
[13:18:44] <JanC> perfect supersets can only exist if a language is designed to allow extensions really
[13:19:24] <mrig> It is a curious starting point for a language really, a fork.
[13:19:45] <JanC> ObjC is closer to it than C++ though
[13:19:57] <arahael> JanC: Regardless, it's a perfect superset, though I wonder if there's a particular academic definition of "perfect superset" that you might be using.
[13:20:14] <arahael> JanC: But I do mean in in the sense that C++ is *not* a superset of C.
[13:20:18] <pyzozord> I just wanted to mention Objective C. It's a very interesting language.
[13:20:58] <arahael> pyzozord: It's also perhaps the most common OO api that is used when interfacing languages, particularly on apple systems. I'm not sure why other languages don't use this as their FFI.
[13:21:20] <arahael> pyzozord: As an example, Kotlin uses ObjC to expose their code to apple languages.
[13:21:31] <^-^hi> C++ is subjective C. every one develops their own language.
[13:22:06] *** Quits: orondo (~orondo@user/orondo) (Ping timeout: 256 seconds)
[13:23:32] <arahael> What i want to see are languages generating bindings for other languages, that includes at least some of their OO api.
[13:23:46] <arahael> Eg, I'd like it if C++ could be bound to an API that can then be used by, say, Python.
[13:24:16] <arahael> Without using Swig, I mean.
[13:24:43] <JanC> well, therewould always have to be something
[13:24:53] <JanC> be it SWIG or something else
[13:25:19] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[13:25:21] <JanC> maybe OLE or CORBA, or whatever
[13:25:25] <arahael> Well, Swig has to have the binding generated on a per langauge, and sometimes per framework basis.
[13:26:04] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:26:09] <arahael> I'm not terribly familiar with OLE.  But CORBA... Hmm, that's a possibility.
[13:26:14] <JanC> the more generic you get, the slower and more complicated it gets usually  :)
[13:26:37] <arahael> Kotlin does this by using ObjC.
[13:26:45] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 276 seconds)
[13:26:55] <arahael> And most languages on apple have good bindings to ObjC, so that's a common API, effectively.
[13:26:58] <arahael> Works quite well.
[13:27:11] <arahael> But I wish more languages did it like that.
[13:27:29] <JanC> obviously that only works where ObjC is the default
[13:28:11] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[13:28:12] <arahael> It's possible to use ObjC in other places, but yeah, it's considered esoteric in those other places.
[13:28:30] <JanC> for GNOME you'd need GObject (C) or for KDE you'd need something based on C++
[13:28:58] <JanC> the Apple stuff is also not pure random ObjC, I'm sure
[13:29:11] <Caffeinated> that always got me, the upper-case C versus C++...
[13:29:27] <Caffeinated> er .C
[13:30:16] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Quit: You have been kicked for being idle)
[13:30:28] <JanC> C++ could also use .cxx
[13:30:39] <arahael> C++'s a difficult option, because the language comittee is not interested in defining an ABI.
[13:30:47] *** Joins: wei2912 (~wei2912@112.199.250.21)
[13:31:18] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[13:31:49] <JanC> arahael: is there an ABI for ObjC? (is there even a language committee for it?)
[13:32:12] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[13:32:21] <arahael> JanC: You can use ObjC via C, though it does technically use undefined behaviour.
[13:32:32] <arahael> JanC: But Apple ensures it's well defined for the platforms they use it.
[13:32:53] *** Joins: CinderellaMu (~GodMode@user/h4x0r)
[13:33:07] <JanC> right, it's well-defined on Apple, but that basically a proprietary thing
[13:33:23] <arahael> JanC: Perhaps, but clang and gcc both support it.
[13:33:30] <JanC> C++ on Windows is practically in the same way
[13:33:52] *** CinderellaMu is now known as CinderellaMan
[13:34:35] <arahael> JanC: Indeed, the ABI is _arguably_ somewhat stable on windows.
[13:34:43] * JanC needs to get some sleep
[13:34:50] <Caffeinated> o/
[13:34:55] <arahael> Sleep well, JanC!
[13:35:05] <Caffeinated> to quote Blade Runner "Have a better one"
[13:37:05] <JanC> then again, why not use Pascal or derivatives more?  :)
[13:38:00] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[13:38:30] <Caffeinated> I really loved using Delphi back in the day
[13:39:27] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 240 seconds)
[13:40:17] *** Joins: esran (~esran@vps.conical-effort.net)
[13:40:50] <JanC> after using BASIC, I started using Turbo Pascal
[13:41:06] <beaky> delphi is the best programming environment ever made
[13:41:45] *** xeno__ is now known as xeno
[13:41:46] <JanC> but e.g. FreePascal has a pretty good compiler, even if it has very limited optimizations
[13:42:10] <arahael> Still a bunch of people using that, it's nice.e  There is lots i like about Delphi.
[13:42:23] <Caffeinated> hah I remember turbo pascal and turbo c...boreland introduced what i used to call "Borelandisms" to the languages like kbhit() on turbo c..which wasn't proper c but a shortcut to wait for a throw-away key press
[13:42:23] <arahael> Can't say the same about the owners of Delphi, though. :( They really have ruined it.
[13:42:24] <beaky> in delphi everything worked so fast it set the standard for gui application development and two decades later  modern web frameworks have not even begun to recapture the idea of rapid app development like in delphi
[13:42:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:43:26] <pyzozord> ^
[13:43:37] <JanC> maybe you should work on Lazarus or so  ;)
[13:43:55] *** Joins: Teacup (~teacup@user/teacup)
[13:45:26] <pyzozord> Can't find on wiki, does pascal have has heap/dynamic memory allocations?
[13:45:36] <arahael> pyzozord: Yes.
[13:45:36] <JanC> yes
[13:45:55] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:46:04] <JanC> at least modern incarnations like FreePascal do
[13:46:15] <JanC> or Turbo/Borland
[13:46:35] <beaky> pascal lacks move semantics unlike rust so i think i will stick to rust and wait for the several rust gui projects to bear fruit
[13:46:54] <JanC> sure...
[13:47:35] <JanC> you could try to add them as a Pascal dialect too  ;)
[13:48:27] <arahael> JanC: There's another incarnation as well, I think Oxygen.
[13:48:37] <arahael> Oxygene, rather.
[13:48:44] <arahael> https://elementscompiler.com/elements/oxygene/ 
[13:48:46] <bayaz> Title: Oxygene: Modern Cross-platform Object Pascal | Elements 
[13:48:48] <arahael> I haven't tried it, though.
[13:48:51] <Caffeinated> i loved pascal and what we had on our Commodore PET's in ROM which was Waterloo Structured BASIC...no goto statements
[13:48:59] <JanC> interesting
[13:49:19] *** CinderellaMan is now known as TheArchitect
[13:49:27] <beaky> oxygene that rhymes with rust
[13:49:36] <JanC> Sinclair ZX Spectrum BASIC had both GOTO & GOSUB
[13:49:45] <beaky> since rust is iron oxide (although rust is actually named after the fungus)
[13:50:11] <arahael> beaky: The fungus!?
[13:50:23] <Caffeinated> all the embedded BASIC's had goto and gosub.  Waterloo Structured Basic was put out by the university of waterlook and was an add-on ROM for the PET computer
[13:50:28] <JanC> (that's where I learned BASIC)
[13:50:35] <beaky> yes graydon hoare creator of rust named it after the fugnus tho i dont know why
[13:50:36] <Caffeinated> it had no goto
[13:50:49] <Caffeinated> haha i bet i know why
[13:51:32] <beaky> from an irc convo https://old.reddit.com/r/rust/comments/27jvdt/internet_archaeology_the_definitive_endall_source/
[13:51:33] <bayaz> Title: Internet archaeology: the definitive, end-all source for why Rust is named "Rust" 
[13:52:21] <beaky> and the rusted cogwheel logo is because the rust devs rode bikes and bikes had cogwheels
[13:52:47] <JanC> not all bikes have cogwheels  ;)
[13:52:51] <Caffeinated> i had to deal with so many other people's BASIC programs which were so badly written it's amazing they didn't crash...coming out of GOSUB's with goto's (hence pushing more and more return addresses onto the stack) and then arbitrarily popping the stack of everything
[13:53:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:53:25] <Caffeinated> it helps to know both the good and really REALLY bad side of coding from the getgo :D
[13:53:33] <beaky> yes i like basic tho it traumatized me as an 8yo when school forcd me to program basic and i had no idea what was going on in the black screen
[13:53:56] <beaky> turned me away from programming until my 20s when i was introduced to python by freenode irc
[13:53:59] <Caffeinated> all screens are black until you turn them on
[13:54:32] <Caffeinated> lol when I was a little older than 8 I was learning asm
[13:54:48] <Caffeinated> self learning more like
[13:54:50] <JanC> you can do that in C too (in fact, it's quite common inside the linux kernel), but obviously you need to understand how GOTO/GOSUB interact to use it appropriately
[13:55:08] <Caffeinated> writing raster interrupts on the C64
[13:58:10] *** Joins: Twipply (~Twipply@user/twipply)
[13:58:31] *** Joins: pulse (~pulse@user/pulse)
[13:58:33] <beaky> nice i like c64
[14:06:14] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:06:14] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:06:14] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:06:47] *** Joins: orondo (~orondo@user/orondo)
[14:07:30] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[14:07:37] *** Quits: gitgood (~gitgood@host-78-145-139-165.as13285.net) (Ping timeout: 245 seconds)
[14:07:55] *** Joins: chomwitt (~chomwitt@ppp-94-69-12-184.home.otenet.gr)
[14:09:15] <user51> beaky: is there esomething you don't like? :P
[14:09:32] *** Joins: gitgood (~gitgood@host-78-145-139-165.as13285.net)
[14:09:44] <arahael> user51: I don't think beaky will say, but I'll point out I've *never* ever heard of beaky saying that he likes coffee.
[14:10:16] <Caffeinated> user51: it's an involuntary OCD reaction
[14:10:49] <Caffeinated> kind of like how someone who has tourettes has a psychological need to shout out certain words or phrases
[14:11:13] <Caffeinated> i don't think they can help it :(
[14:12:03] <arahael> Caffeinated: In case you're not joking, it's a bit impolite to try to diagnose in public.
[14:12:21] <arahael> (And we like beaky)
[14:14:55] *** Joins: Atque (~Atque@user/atque)
[14:16:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:16:47] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[14:20:27] <pyzozord> I've looked at forth yesterday very briefly. Seems like it has many of the same ideas I have. It's very powerful and unrestrictive. It's both high and low level and it focuses on stack.
[14:21:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[14:21:49] <user51> pyzozord: wait until you see how it handles if()
[14:21:56] <Caffeinated> I found forth interesting...it took a while to get used to using the stack the way it does..FILO (unless you perform stack swapping, etc) but very cool.
[14:22:12] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:24:41] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[14:24:42] *** Quits: lalitmee_ (~lalitmee@180.94.32.14) (Ping timeout: 245 seconds)
[14:26:08] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[14:26:13] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:26:25] *** Joins: flynn (~mcbloch@user/flynn)
[14:27:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:28:49] <GeDaMo> "A language that doesn't affect the way you think about programming is not worth knowing."
[14:30:16] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[14:30:33] <user51> we need a lisp of languages which will could change people's way of thinking about programming, then
[14:30:42] <GeDaMo> That's Forth! :P
[14:31:16] <user51> let's settle for rpn++ :P
[14:31:38] <GeDaMo> pyzozord: RPN is the least weird thing about Forth :P
[14:31:46] *** Joins: lalitmee (~lalitmee@180.94.32.213)
[14:32:04] <user51> coincidentally i have been thking of a silly forth implementation
[14:32:15] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[14:32:21] <user51> which is inspired by lists, and written in awk :D
[14:32:46] <GeDaMo> I think HP calculators had a language which was a cross between Forth and Lisp
[14:33:16] <GeDaMo> https://en.wikipedia.org/wiki/RPL_(programming_language)
[14:33:18] <bayaz> Title: RPL (programming language) - Wikipedia 
[14:33:45] <user51> oh yeah, the core idea was basically inspired by c pointers, and it kind of owkrs around awk's weakness
[14:34:50] <user51> you can concatenative IDs (pointers) as strings then perform operations on them, as they have a fixed size
[14:35:22] <pyzozord> what's the size of a memory block/page on modern OSes? Was it 4-8Kb?
[14:35:47] <GeDaMo> 4KB is usually the smallest
[14:36:31] <GeDaMo> https://en.wikipedia.org/wiki/Page_(computer_memory)#Multiple_page_sizes
[14:36:31] <bayaz> Title: Page (computer memory) - Wikipedia 
[14:37:17] *** Joins: Raguile (~Raguile@user/raguile)
[14:37:22] <pyzozord> I'm thinking about a language that does not have dynamic allocation at all. But it has unrestricted stack size. In this language programmer would be forced to always preallocate the memory by declaring variables of specific, known, size.
[14:37:28] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Quit: WeeChat 2.3)
[14:37:44] <GeDaMo> That's Forth! :P
[14:38:01] <pyzozord> :D
[14:38:29] <GeDaMo> Well, you can allocate memory at run time in the dictionary but releasing involves releasing everything that was allocated after it
[14:38:47] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[14:38:54] <GeDaMo> The Forth dictionary holds all the definitions and works like a stack
[14:39:06] <user51> asm?
[14:39:12] *** Quits: chomwitt (~chomwitt@ppp-94-69-12-184.home.otenet.gr) (Quit: Leaving)
[14:39:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc07:8000:12c3:7bff:fe6d:d374)
[14:39:30] <GeDaMo> asm what?
[14:39:38] <pyzozord> That would be an interesting thing except I was worried that since each program preallocates all memory it ever needs that means there is much much less space to run more programs. But I think since operating system work with virual memory, they will not actually give me the memomry pages I haven't used yet. So maybe that's not a problem
[14:40:18] <user51> GeDaMo: i imagined a flat address space with some asm could also fit, but maybe not
[14:40:25] <GeDaMo> Yeah, it could
[14:45:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:22] <GeDaMo> https://gamesfromwithin.com/start-pre-allocating-and-stop-worrying
[14:47:23] <bayaz> Title: Start Pre-allocating And Stop Worrying â€“ Games from Within 
[14:47:55] *** Joins: sedeki (~textual@user/sedeki)
[14:49:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:49:57] *** Joins: mickey (~user@user/mickey)
[14:54:30] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[14:56:17] *** Joins: NEYi (~NEYi@109.251.216.38)
[14:58:36] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[14:59:07] *** Joins: Pickchea (~private@user/pickchea)
[15:02:37] *** Quits: Samian (~Sami@2620:10d:c091:480::1:e369) (Ping timeout: 245 seconds)
[15:02:57] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[15:06:59] <pyzozord> Pre-ansi C allowed to declare variables only at the top of the function before any other code. That makes sense, function is being called, and it allocates as much memory as it needs. Later version allow declaring varialbes in the middle of the code. How does that work?
[15:07:47] <GeDaMo> It just allocates it at the beginning of the block anyway
[15:08:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6)
[15:08:29] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[15:09:08] <pyzozord> What about variables that are declared inside a condition? Does it calculate maximum amount of memory the function will ever need, no matter which branches are executed and allocates that?
[15:10:27] <pyzozord> As I understand it allocating more stack during function execution should be pretty normal right? I can bump the stack pointer at any point
[15:10:49] <GeDaMo> Yeah, you can but it still takes instructions
[15:11:13] <GeDaMo> If you allocate it in a single block at the beginning, you can just move values back and forth between registers and stack
[15:11:21] *** Joins: zaher (~zaher@37.48.147.168)
[15:11:29] *** Quits: magla (~gelignite@55d416bb.access.ecotel.net) (Quit: Stay safe!)
[15:11:37] <pyzozord> ah ok, so the answer is: "compilers will do whatever they find is the most optimal"
[15:12:09] <GeDaMo> That's the ideal, yes :P
[15:12:30] *** Joins: lalitmee_ (~lalitmee@180.94.33.117)
[15:13:18] <pyzozord> I forgot that stack can be allocated at any time, and then remembered it mid sentese
[15:14:02] <GeDaMo> There's a difference between when the memory for a variable is allocated and where it's visible in the source
[15:15:01] *** Quits: lalitmee (~lalitmee@180.94.32.213) (Ping timeout: 252 seconds)
[15:15:41] <GeDaMo> For example, if you have a static variable in a function, it's only visible inside the function but it could be allocated at the start of the program, on the heap
[15:21:15] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[15:24:12] *** Joins: zaher_ (~zaher@37.48.150.99)
[15:25:15] *** Quits: orondo (~orondo@user/orondo) (Remote host closed the connection)
[15:27:07] *** Quits: zaher (~zaher@37.48.147.168) (Ping timeout: 252 seconds)
[15:29:37] *** Quits: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de) (Quit: menace)
[15:30:58] *** Joins: TCZ (~tcz@91.150.165.88)
[15:56:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:58:48] *** Joins: zaher (~zaher@37.48.144.177)
[16:00:40] *** Quits: zaher_ (~zaher@37.48.150.99) (Ping timeout: 252 seconds)
[16:01:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:04:10] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 240 seconds)
[16:07:19] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[16:08:47] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[16:10:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[16:11:42] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:15:16] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[16:15:31] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[16:17:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:19:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6)
[16:20:36] *** Joins: lalitmee__ (~lalitmee@180.94.33.231)
[16:21:55] *** Quits: TCZ (~tcz@91.150.165.88) (Quit: ...)
[16:23:13] *** Quits: lalitmee_ (~lalitmee@180.94.33.117) (Ping timeout: 252 seconds)
[16:23:32] <pyzozord> Looks like SDL is great for everything except graphics :D I'll need to just do this in opengl.
[16:26:00] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:28:43] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:31:52] *** Joins: xiongxin8802 (~manjaro-u@119.123.100.23)
[16:33:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:34:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:35:27] *** Quits: Endust (leggt@iceland.sdf.org) (Ping timeout: 245 seconds)
[16:35:36] <[itchyjunk]> you know how for some windows, you had 64GB max ram possible
[16:35:45] <[itchyjunk]> and other Windows, you could get more
[16:35:47] *** Joins: mishugana (~mishugana@user/mishugana)
[16:35:49] <[itchyjunk]> where does that come from?
[16:35:55] <[itchyjunk]> some type of hardware limitation?
[16:36:00] <[itchyjunk]> OS limitation?
[16:37:14] <beaky> yes it is a software limit imposed by microsoft to segment windows
[16:37:33] <[itchyjunk]> that's weird, right?
[16:37:43] <[itchyjunk]> why would they care how much ram you have
[16:39:57] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[16:45:15] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:45:49] *** Quits: xiongxin8802 (~manjaro-u@119.123.100.23) (Quit: Konversation terminated!)
[16:48:08] *** Joins: aliosablack (~chomwitt@ppp-94-69-12-184.home.otenet.gr)
[16:48:30] *** Quits: chomwitt (~chomwitt@2a02:587:dc07:8000:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[16:48:47] *** Joins: xiongxin8802 (~xiongxin@113.116.35.211)
[16:51:26] *** Joins: dbr^ (~dbr@wsip-98-188-244-188.mc.at.cox.net)
[16:51:57] *** Joins: archie (~archie@host-87-10-157-117.retail.telecomitalia.it)
[16:56:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:58:08] *** Parts: D-04 (~D-04@45.87.212.70) (?)
[16:59:11] *** Parts: mishugana (~mishugana@user/mishugana) ()
[17:00:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[17:00:19] *** Quits: xiongxin8802 (~xiongxin@113.116.35.211) (Remote host closed the connection)
[17:00:42] *** Joins: xiongxin8802 (~xiongxin@119.123.103.227)
[17:00:47] *** Joins: codemin (~codemin@69.167.43.33)
[17:01:17] *** Quits: archie (~archie@host-87-10-157-117.retail.telecomitalia.it) (Quit: Client closed)
[17:02:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[17:03:56] <[itchyjunk]> is "strongly typed" and "statistically typed" used interchangably?
[17:04:05] <pyzozord> isn't that just the address limit in 32 bit systems?
[17:04:51] *** Joins: Atque (~Atque@user/atque)
[17:05:29] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[17:07:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:07:21] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[17:08:02] *** Quits: hexingb (~hexingb@111.30.225.74) (Ping timeout: 245 seconds)
[17:10:13] *** Joins: hexingb (~hexingb@180.212.209.155)
[17:12:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[17:13:01] *** Joins: plastico (~plastico@neomutt/plastico)
[17:13:31] <pyzozord> Ok I figured out how to drastically decrease the cpu usage it's fine to just loop around if I don't call any of the SDL functions so I have now flag shouldRender that gets reset to 0 on each iteration and then set to 0 if the tty fds changed
[17:14:10] *** Quits: hexingb (~hexingb@180.212.209.155) (Ping timeout: 240 seconds)
[17:14:51] *** Joins: hexingb (~hexingb@2409:8902:7bc5:8cb4:462:79b4:dc8f:b48a)
[17:15:02] <TJ-> [itchyjunk]: 64GiB was the limit with 32-bit and PAE (Physical Address Extension)
[17:17:24] <[itchyjunk]> oh so it's actual limite of hardware
[17:17:30] <[itchyjunk]> interesting
[17:19:10] *** Quits: hexingb (~hexingb@2409:8902:7bc5:8cb4:462:79b4:dc8f:b48a) (Ping timeout: 240 seconds)
[17:19:37] *** Joins: hexingb (~hexingb@111.30.225.74)
[17:19:40] *** Joins: EmOwl- (~EmOwl-@202.150.113.111)
[17:19:50] <bjs> [itchyjunk]: strongly typed is often different to static.  The common-est use I see is that: Strong means you'll get an error, and static means you'll get the error before you run it
[17:20:24] <bjs> [itchyjunk]: i.e. imagine the code  "Hello" + 42   # a strong type system gives an error, a weak one does not. a static one gives an error at compile time, a dynamic one gives one when you run it.
[17:20:56] <bjs> but there is no 100% accepted definition of any of those terms,  just feelings
[17:21:10] *** Joins: V (~v@anomalous.eu)
[17:21:59] <user51> what about stringly typed? :P
[17:22:22] <[itchyjunk]> bjs, ohh that makes good sense
[17:22:35] *** Joins: lalitmee_ (~lalitmee@180.94.32.182)
[17:23:48] *** Joins: gggp (~textual@60.10.23.169)
[17:24:42] *** Quits: lalitmee__ (~lalitmee@180.94.33.231) (Ping timeout: 245 seconds)
[17:24:56] <pyzozord> Hah! I did not expect this on 9gag https://9gag.com/gag/a9ExjZD
[17:26:54] *** Quits: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:27:15] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[17:30:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[17:30:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:33:08] *** Joins: masber (~masber@213.55.220.185)
[17:35:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:35:42] *** Quits: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de) (Quit: rsx)
[17:36:07] *** Joins: snake (~snake@user/snake)
[17:36:58] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[17:36:59] * [itchyjunk] wonders if it's the spanish inquisition
[17:37:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:38:43] *** Joins: jamea (~jamea@187.185.190.209)
[17:39:24] <pyzozord> Hah! And limiting fps to 30 actually drops the cpu usage to 5% with full screen gif animation. And without the animation I get 0-1%.
[17:39:30] <jamea> hi all html question: Bootstrap i display a dialog form.. how to do: when form was displayed i want the focus on a certain input text how to do?  (note aautofocus not worked).. thanks
[17:40:09] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:47] <pyzozord> Looks like chromium takes more cpu to animate that gif than I do. I'm happy with that.
[17:41:14] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[17:41:19] <pyzozord> jamea: you'll probably need to use javascript
[17:42:51] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:43:14] <jamea> i try  $("xCbPosicion3").focus();  $("#DFMLecturaCBCuadros").modal('toggle');
[17:43:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[17:43:25] *** Joins: TCZ (~tcz@91.150.165.88)
[17:43:29] <jamea> not work too try:  $("#DFMLecturaCBCuadros").modal('toggle'); $("xCbPosicion3").focus();  not work
[17:44:34] <pyzozord> jamea: can you share the code?
[17:46:10] <jamea> https://paste.debian.net/1210375/   none of these 3 methods worked
[17:46:14] <bayaz> Title: debian Pastezone 
[17:48:08] <pyzozord> jamea: no no I meant entire page/project so I can run it locally
[17:50:46] <pyzozord> jamea: also have you tried this https://getbootstrap.com/docs/4.0/components/modal/ there is example with focus right at the top of th epage
[17:50:47] <bayaz> Title: Modal 
[17:52:39] <jamea> ooo 
[17:53:12] <jamea> Due to how HTML5 defines its semantics, the autofocus HTML attribute has no effect in Bootstrap modals. 
[17:53:50] <pyzozord> yep, use some custom JavaScript
[17:55:57] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:56:49] <[itchyjunk]> i understand that it might get too spammy but i wonder if i can convience someone to have a definition bot in here :P
[17:57:28] <[itchyjunk]> InPhase, would a definition bot be too spammy? like plato.stanford.edu but for CS
[17:58:59] <jamea> MUCH THANKS WORKED
[17:59:05] <jamea> sorry for caps
[17:59:36] <[itchyjunk]> string.toLower();
[18:00:07] <pyzozord> jamea: no worries :)
[18:01:44] *** Joins: rtypo (~alex@user/rtypo)
[18:03:09] <pyzozord> What are the easiest/most lightweight methods of ipc?
[18:03:59] <pyzozord> I feel like using sockets for ipc is an overkill, those seem to be for networking
[18:04:07] <TJ-> 2 bean cans and a piece of damp string :D
[18:04:53] <pyzozord> yelling really loud to each other :P
[18:05:41] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[18:05:45] <mrig> closely followed by telnet?
[18:05:58] <pyzozord> I see files, unix sockets, message queues, pipes, shared memory... I also learned about eventfs, I guess that would fall under files though
[18:06:47] * oldlaptop mutters something about dragging in all of jquery for a fancy getElementById
[18:06:55] <pyzozord> s/eventfs/eventfd/
[18:07:01] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[18:08:02] *** Joins: Pickchea (~private@user/pickchea)
[18:08:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:09:08] *** Joins: Cashlin (~hp@user/cashlin)
[18:13:17] *** Joins: zaher_ (~zaher@37.48.179.235)
[18:15:53] *** Joins: swagneko (~bit@user/nekobit)
[18:15:58] *** Quits: zaher (~zaher@37.48.144.177) (Ping timeout: 252 seconds)
[18:16:45] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Remote host closed the connection)
[18:16:45] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[18:16:45] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[18:16:45] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (Remote host closed the connection)
[18:17:20] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 256 seconds)
[18:18:02] *** Quits: EmOwl- (~EmOwl-@202.150.113.111) (Ping timeout: 245 seconds)
[18:19:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:19:13] *** Joins: EmOwl- (~EmOwl-@2404:4402:17b3:bc00:2fed:62a0:e176:c11d)
[18:20:02] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:20:15] *** Joins: flynn (~mcbloch@user/flynn)
[18:20:44] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[18:24:00] *** Joins: xcombelle (~xavie@abordeaux-655-1-118-144.w92-146.abo.wanadoo.fr)
[18:25:16] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:25:59] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[18:26:07] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:26:44] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[18:29:35] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[18:29:55] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[18:29:55] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Changing host)
[18:29:55] *** Joins: astroid (astroid@user/astroid)
[18:31:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:31:40] *** Joins: flynn (~mcbloch@user/flynn)
[18:33:55] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:34:37] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 252 seconds)
[18:37:20] *** Joins: zaher__ (~zaher@37.48.149.163)
[18:39:05] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[18:40:43] *** Quits: zaher_ (~zaher@37.48.179.235) (Ping timeout: 252 seconds)
[18:41:26] *** Quits: codemin (~codemin@69.167.43.33) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:41:27] *** Joins: Cashlin (~hp@user/cashlin)
[18:41:46] *** Joins: paulo (paulo@user/paulo/x-9032687)
[18:42:01] *** Joins: sandman13 (sandman13@jujube.ircnow.org)
[18:42:09] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[18:42:14] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:43:44] *** Quits: Cashlin (~hp@user/cashlin) (Client Quit)
[18:45:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[18:47:19] *** Joins: codemin (~codemin@69.167.43.33)
[18:49:53] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:50:35] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[18:52:28] *** Quits: codemin (~codemin@69.167.43.33) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:53:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:56:10] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:57:11] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:00:58] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 256 seconds)
[19:03:02] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 245 seconds)
[19:04:45] *** Joins: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[19:06:30] *** Quits: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[19:07:11] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[19:10:02] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 256 seconds)
[19:10:10] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[19:11:53] *** Joins: inky_ (~inky@46.162.252.178)
[19:12:48] *** Quits: masber (~masber@213.55.220.185) (Quit: Client closed)
[19:14:46] *** Joins: masber (~masber@213.55.220.185)
[19:15:42] *** Joins: snake (~snake@user/snake)
[19:15:43] *** Quits: snake (~snake@user/snake) (Client Quit)
[19:17:23] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[19:17:41] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Remote host closed the connection)
[19:18:15] *** Quits: swagneko (~bit@user/nekobit) (Quit: needs more desu!)
[19:19:50] *** Joins: codemin (~codemin@32.209.50.178)
[19:22:18] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[19:24:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:24:33] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:26:30] *** Quits: codemin (~codemin@32.209.50.178) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:26:48] *** zaher__ is now known as zaher
[19:28:27] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[19:28:29] *** Joins: Guest16 (~Guest16@103.240.170.209)
[19:28:55] <Guest16> what is it called? a background paper/board with a rotatable window/slit on top of it.
[19:29:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:29:09] *** Joins: codemin (~codemin@45.74.35.61)
[19:29:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:32:50] <GeDaMo> https://en.wikipedia.org/wiki/Code_wheel ?
[19:32:52] <bayaz> Title: Code wheel - Wikipedia 
[19:33:12] <GeDaMo> https://www.oldgames.sk/codewheel/
[19:33:13] <bayaz> Title: Code Wheels online 
[19:33:39] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:34:06] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:35:44] *** Quits: codemin (~codemin@45.74.35.61) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:36:36] *** Joins: codemin (~codemin@45.74.35.61)
[19:37:00] *** Joins: zaher_ (~zaher@37.48.192.255)
[19:38:10] *** Quits: zaher (~zaher@37.48.149.163) (Ping timeout: 240 seconds)
[19:38:28] *** Quits: xiongxin8802 (~xiongxin@119.123.103.227) (Ping timeout: 252 seconds)
[19:40:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[19:41:22] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[19:41:36] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:41:40] *** Quits: codemin (~codemin@45.74.35.61) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:42:52] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:44:33] *** Joins: codemin (~codemin@45.74.35.61)
[19:44:48] *** Quits: edk (edk@libera/staff/edk) (Remote host closed the connection)
[19:44:57] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:45:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:45:53] *** Joins: edk (edk@libera/staff/edk)
[19:46:26] *** Quits: TCZ (~tcz@91.150.165.88) (Quit: ...)
[19:48:13] *** Quits: codemin (~codemin@45.74.35.61) (Client Quit)
[19:48:30] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[19:48:57] *** Joins: codemin (~codemin@45.74.35.61)
[19:49:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Remote host closed the connection)
[19:50:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:50:38] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 252 seconds)
[19:50:55] <Guest16> what is a general term for all kind of cards like fortune wheel?
[19:51:08] <Guest16> spinning/rotatable window
[19:51:13] <pyzozord> I'm doing something wrong with make. I made this rule $(OBJ): $(SRC) and it seems like it's now compiling some .c files more than once
[19:51:39] *** Quits: codemin (~codemin@45.74.35.61) (Client Quit)
[19:51:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:52:13] <pyzozord> I think I made it to be "each .o files depends on all .c files" but I wanted just "each .o depends on the related .c"
[19:52:36] *** Joins: inky (~inky_@37.252.82.78)
[19:53:26] <GeDaMo> Something like %.o: %.c ?
[19:53:40] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[19:55:03] <pyzozord> Oh yes I think that will work. That means I cannot do something like $(OBJ): %.c right?
[19:55:03] <GeDaMo> Maybe ask in ##workingset
[19:55:07] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[19:55:52] <GeDaMo> https://www.gnu.org/software/make/manual/html_node/Substitution-Refs.html#Substitution-Refs
[19:55:53] <bayaz> Title: Substitution Refs (GNU make) 
[19:56:50] *** Quits: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (Client Quit)
[19:57:09] <pyzozord> Make is still tricky to me. Need to learn more of it
[19:57:19] *** Joins: codemin (~codemin@2602:252:d13:2b20:3029:d55:d9be:a135)
[19:59:52] *** Quits: codemin (~codemin@2602:252:d13:2b20:3029:d55:d9be:a135) (Client Quit)
[19:59:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:01:10] <[itchyjunk]> all kind of cards?
[20:01:23] <[itchyjunk]> do you mean group of permutations, Guest16 ?
[20:02:10] *** Joins: swagneko (~bit@user/nekobit)
[20:02:12] <Guest16> yes, i mean both. i mean i am eager to hear your sugggetions for both queries
[20:02:15] <Guest16> [itchyjunk]
[20:02:20] *** Joins: codemin (~codemin@45.74.35.61)
[20:02:36] <[itchyjunk]> both?
[20:02:53] <Guest16> 1) all kind of cards? & 2)group of permutations, 
[20:03:08] <[itchyjunk]> idk what all kind of cards mean
[20:03:22] <[itchyjunk]> i am asking if you mean symmetric group or permutation groups or something along that line
[20:03:50] <mrig> :qa
[20:04:01] <Guest16> are there any tool which randomly presents a quiz/questions to user : with one or more column from database/table. considering columns:A,B,C,D,E,F in database/spreadsheet/table. each containing list of unique words. A tool should present output as below: A-B or AA or AC or EC or EA or AAB etc. (automaticaly all possible logic developed by tool)
[20:04:01] <Guest16> furthermore/OR, there should be a provision to define relationships by a coder/builder. i.e. A-B-but not C, A-C-but not B, A-A-B, A-B-but not C & D etc..
[20:04:03] <mrig> oh :)
[20:04:12] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[20:04:32] <Guest16> [itchyjunk] i mean both 1) symmetric &/or 2) permutation
[20:04:56] *** Quits: inky_ (~inky@46.162.252.178) (Ping timeout: 252 seconds)
[20:05:07] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 245 seconds)
[20:05:53] *** Joins: inky_ (~inky@37.252.82.78)
[20:06:17] *** Joins: mrig (~mrig@user/mrig)
[20:06:44] <[itchyjunk]> you mean both and/or?
[20:07:06] <Guest16> let us say any one of them at a time
[20:07:13] *** Joins: jamea (~jamea@187.185.190.209)
[20:07:22] <[itchyjunk]> I can't make sense of what you are saying, in that case
[20:11:55] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:12:34] *** Joins: byanka (~byanka@185.176.110.253)
[20:15:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[20:15:55] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:17:08] *** Joins: byanka (~byanka@185.176.110.253)
[20:19:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[20:20:07] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[20:20:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6)
[20:20:25] *** Quits: byanka (~byanka@185.176.110.253) (Remote host closed the connection)
[20:25:04] <[itchyjunk]> eclipse is adding a werid comment to new files
[20:25:09] <[itchyjunk]> and i can't fine where it is
[20:25:26] *** Joins: newpy (~newpy@206.168.231.90)
[20:25:41] <[itchyjunk]> /** * @params args */ it says right under new class
[20:26:03] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[20:26:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:27:39] <GeDaMo> https://en.wikipedia.org/wiki/Javadoc
[20:27:39] <bayaz> Title: Javadoc - Wikipedia 
[20:28:56] *** Joins: zaher (~zaher@37.48.186.48)
[20:29:19] *** Quits: Guest16 (~Guest16@103.240.170.209) (Quit: Connection closed)
[20:31:16] *** Quits: zaher_ (~zaher@37.48.192.255) (Ping timeout: 252 seconds)
[20:31:23] *** Joins: node1 (~Guest30@user/node1)
[20:31:43] <node1> Have anyone used boto3  here?
[20:32:20] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Read error: Connection reset by peer)
[20:32:32] <GeDaMo> Maybe ask in ##aws
[20:32:53] <[itchyjunk]> i deleted all the generator code though
[20:32:58] <[itchyjunk]> and added my name and date
[20:33:04] <[itchyjunk]> since i needed that in every file
[20:33:10] <[itchyjunk]> too much effort.. :(
[20:33:14] <[itchyjunk]> so i know Math.pow() works
[20:33:20] <[itchyjunk]> but sometimes, there are shortcuts
[20:33:39] <[itchyjunk]> like 2^^2 = 4 or something right?
[20:33:44] <[itchyjunk]> i know some languages have shortcuts
[20:33:51] <[itchyjunk]> is there a thing like that for java?
[20:33:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:33:56] <[itchyjunk]> or Math.pow() is it?
[20:34:00] <GeDaMo> I don't think it has a power operator
[20:35:00] <GeDaMo> I don't see one https://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html
[20:35:00] <bayaz> Title: Operators (The Javaâ„¢ Tutorials > Learning the Java Language > Language Basics) 
[20:35:10] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:35:21] <node1> Is it possible to list/access s3 bucket  without `access key` using boto3 python. which is hosted publically 
[20:35:37] <[itchyjunk]> hmmm
[20:36:24] <[itchyjunk]> i am also a little confused bout this problem. my solutions is just for(int i=0; i<= 17; i++) { System.out.println(Math.pow(2,i)); }
[20:37:06] <GeDaMo> You could just multiply by 2 every loop
[20:37:10] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 240 seconds)
[20:37:30] <node1> Do aws s3 bucket policy allow programmatically to access it's bucket without the access key?
[20:37:54] <[itchyjunk]> https://i.ibb.co/chpxQfx/image.png
[20:37:54] <bayaz> Type: image/png Size: 87.5 kB 
[20:37:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:38:02] <[itchyjunk]> oh
[20:38:07] <[itchyjunk]> maybe that's what the instruction means
[20:38:17] <[itchyjunk]> c *= 2; type thing
[20:38:23] <[itchyjunk]> and print c each time
[20:38:33] <GeDaMo> That's what the hint says :P
[20:38:42] <[itchyjunk]> hmm but i think my solution doesn't violate the rules
[20:38:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:38:49] <[itchyjunk]> yeah i couldn't understand the hint lol
[20:38:56] <[itchyjunk]> i thought it meant add something
[20:40:25] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[20:41:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:42:15] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[20:42:45] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[20:42:49] <[itchyjunk]> omg
[20:42:58] <[itchyjunk]> next one needs me to get positive integer from user
[20:43:04] <[itchyjunk]> but i can't turn it into positive value lol
[20:43:21] <GeDaMo> You could check if it's positive and if not then ask again
[20:44:45] <[itchyjunk]> yes that's what i am doing, just feels odd
[20:44:52] <[itchyjunk]> while (input < 0) { }
[20:44:56] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:45:00] <[itchyjunk]> hopefully 0 counts as positive 
[20:45:11] <[itchyjunk]> it's supposed to be positive in java
[20:45:51] <[itchyjunk]> i'll do < 1 ..
[20:46:49] <oldlaptop> You'll sometimes see "nonnegative" used to avoid this ambiguity.
[20:47:28] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[20:48:25] *** Joins: pulse (~pulse@user/pulse)
[20:48:39] *** Quits: node1 (~Guest30@user/node1) (Quit: Client closed)
[20:48:55] *** Joins: Guest94 (~Guest94@203.189.249.184)
[20:49:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[20:49:34] *** Joins: aradesh (~aradesh@user/aradesh)
[20:50:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:50:23] *** Joins: flynn (~mcbloch@user/flynn)
[20:50:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:51:07] *** Guest94 is now known as hkjg
[20:51:55] *** Parts: hkjg (~Guest94@203.189.249.184) ()
[20:51:55] <[itchyjunk]> yeah 0 would be included in non negative
[20:52:25] <[itchyjunk]> but the algo i am supposed to implement makes sense for 1 and greater so positive mean 1 and up it seems
[20:53:04] *** Joins: luckyxxl (~luckyxxl@185.209.196.148)
[20:53:12] *** Joins: arcatech (~arcatech@user/arcatech)
[20:53:36] *** Joins: zaher_ (~zaher@37.48.185.47)
[20:55:34] <[itchyjunk]> woha
[20:55:48] <[itchyjunk]> apparently package packagename; has to appear before import
[20:55:50] *** Quits: codemin (~codemin@45.74.35.61) (Quit: Textual IRC Client: www.textualapp.com)
[20:55:52] <[itchyjunk]> else it gives errors
[20:55:59] <[itchyjunk]> interesting feature
[20:56:10] *** Quits: zaher (~zaher@37.48.186.48) (Ping timeout: 240 seconds)
[20:58:00] <pikapika> [itchyjunk], what algorithm
[20:58:24] <[itchyjunk]> he calls it hailstone
[20:58:34] <[itchyjunk]> it's that one conjecture from math that hasn't been proven yet
[20:58:41] <[itchyjunk]> if n is even, n = n/2
[20:58:49] <[itchyjunk]> if odd, n = (n*3) + 1
[20:59:02] <[itchyjunk]> all n eventually turns to 1
[20:59:19] <[itchyjunk]> for n 
[20:59:22] <[itchyjunk]> in N
[20:59:35] <pikapika> collatz?
[21:01:18] <[itchyjunk]> oh right
[21:01:27] <[itchyjunk]> that one, it's unproven iirc, right?
[21:01:39] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:01:49] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[21:01:50] *** Joins: flynn (~mcbloch@user/flynn)
[21:02:26] <jackiee> whats good.
[21:03:18] <pikapika> jackiee, only death is real
[21:03:48] <[itchyjunk]> hmm question
[21:04:05] <[itchyjunk]> println() adds \n, is there a way to print() such that it add a space after what it prints?
[21:04:18] <[itchyjunk]> i can + " " just wondering if there is a "better" way
[21:04:46] <[itchyjunk]> i python you can do weird stuff like print (variables , seperator) or somesuch
[21:04:47] <pikapika> [itchyjunk], yes
[21:04:49] <pikapika> end=''
[21:04:56] <[itchyjunk]> end=' ' ?
[21:04:58] <[itchyjunk]> or '' ?
[21:05:11] <pikapika> ''
[21:05:47] <GeDaMo> pikapika: are you talking about Python or Java?
[21:05:57] <[itchyjunk]> gives error in java
[21:05:58] <GeDaMo> [itchyjunk] is writing Java
[21:06:08] <pikapika> oh
[21:06:17] <[itchyjunk]> "Invalid character constant"
[21:06:18] <pikapika> [itchyjunk], System.out.print
[21:06:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[21:06:24] <[itchyjunk]> that doesn't add space
[21:06:43] <pikapika> [itchyjunk], just +" "
[21:06:48] <pikapika> or manually write the space
[21:06:53] <pikapika> in your string
[21:07:39] <[itchyjunk]> i am printing ints that get computed
[21:07:49] <[itchyjunk]> there seems to be format thingy but looks messy
[21:07:50] <pikapika> [itchyjunk], +" "
[21:07:52] <[itchyjunk]> sigh
[21:08:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:08:09] <mrig> Does anyone have a nice set of terminal colours that go well with gruvbox in vim?
[21:08:15] *** Joins: Auron (~Auron956@user/auron)
[21:08:32] <pikapika> [itchyjunk], PrintStream also seems to have printf
[21:08:40] <mrig> My eyes are bleeding at the moment with the default ones, I'm using a different terminal.
[21:08:52] <pikapika> I like printf when there are a lot of ints to print
[21:09:12] *** Quits: Enitin (~Enitin@82.102.22.85) (Read error: Connection reset by peer)
[21:09:48] *** Joins: snake (~snake@user/snake)
[21:10:04] <[itchyjunk]> i used + " "
[21:10:07] <[itchyjunk]> looks good enough
[21:10:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:10:32] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 245 seconds)
[21:11:00] <mrig> OH I can just but the base colours in, right that is simple enough :D
[21:11:25] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[21:12:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:12:37] *** Quits: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (Quit: leaving)
[21:13:11] *** Joins: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[21:13:23] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:13:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:13:59] *** Joins: flynn (~mcbloch@user/flynn)
[21:15:55] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[21:17:24] *** Joins: qbt (~edun@user/edun)
[21:18:34] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[21:24:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:29:03] *** Quits: OverCoder (~OverCoder@user/overcoder) (Remote host closed the connection)
[21:30:06] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[21:31:25] <pyzozord> Any idea why is my makefile rebuilding all object files each time? https://termbin.com/acc2
[21:31:26] <bayaz> Type: text/plain; charset=utf-8 
[21:33:17] <GeDaMo> Each time you do what?
[21:33:53] *** Joins: mrig (~mrig@user/mrig)
[21:34:21] <pyzozord> I just type make then it builds everything, then without doing anything else I type again and it rebuilds everything
[21:34:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:35:30] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[21:35:36] <bjs> pyzozord: because build_dir exists as a prerequesite
[21:35:47] <bjs> pyzozord: try   $(BUILD_DIR)/%.o: src/%.c | build_dir
[21:35:48] <bjs> or something
[21:35:49] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[21:35:51] <pyzozord> ooh
[21:36:25] <bjs> pyzozord: see https://www.gnu.org/software/make/manual/html_node/Prerequisite-Types.html order-only prerequisites 
[21:36:26] <bayaz> Title: Prerequisite Types (GNU make) 
[21:36:43] <pyzozord> yeah that was it, | build_dir solved it
[21:38:00] *** Joins: xavie1 (~xavie@abordeaux-655-1-118-144.w92-146.abo.wanadoo.fr)
[21:40:20] *** Joins: Krematorium (~Kremator@user/kremator)
[21:40:40] *** Quits: xcombelle (~xavie@abordeaux-655-1-118-144.w92-146.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:42:50] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[21:43:44] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:44:05] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:44:16] *** Joins: flynn (~mcbloch@user/flynn)
[21:45:24] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:31] *** Joins: zaher (~zaher@37.48.190.95)
[21:48:27] *** Quits: lalitmee_ (~lalitmee@180.94.32.182) (Ping timeout: 245 seconds)
[21:49:23] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:50:28] *** Quits: zaher_ (~zaher@37.48.185.47) (Ping timeout: 252 seconds)
[21:50:55] *** Joins: zaher_ (~zaher@37.48.188.249)
[21:51:34] *** Quits: tiwEllien (~tiwEllien@host-79-34-247-87.business.telecomitalia.it) (Ping timeout: 252 seconds)
[21:52:48] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[21:53:00] *** Quits: zaher (~zaher@37.48.190.95) (Ping timeout: 250 seconds)
[21:53:06] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[21:54:01] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:54:11] *** Joins: mrig (~mrig@user/mrig)
[21:54:13] *** Joins: flynn (~mcbloch@user/flynn)
[21:54:56] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[21:56:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[21:56:51] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:59:04] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:02:55] *** Joins: TheWild (~Thunderbi@apn-31-0-25-213.dynamic.gprs.plus.pl)
[22:03:20] <TheWild> hello
[22:03:23] <TheWild> folks, I have a puzzle (no, I don't know the solution but if you know, I think it would let me better understand one concept).
[22:03:42] <TheWild> a lottery. The machine picks 16 out of 255 numbers (set A). However, it doesn't show me which numbers have been chosen. I can choose 32 numbers (set B) and the machine only tells whether all the numbers that were chosen by machine are also the ones I have chosen. In other words, the machine only tells whether A is subset of B.
[22:04:03] <TheWild> For a single machine shuffle, There's no limit of chooses I can take.
[22:04:19] <TheWild> Whats the optimal way to win the game?
[22:04:19] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:04:29] <TheWild> (btw, do you notice the analogy of something?)
[22:04:38] *** xavie1 is now known as xcombelle
[22:07:24] <GeDaMo> Reminds me vaguely of https://en.wikipedia.org/wiki/Mastermind_(board_game)
[22:07:24] <bayaz> Title: Mastermind (board game) - Wikipedia 
[22:10:20] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[22:11:26] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:11:44] *** Joins: flynn (~mcbloch@user/flynn)
[22:13:40] <[itchyjunk]> my code is doing something weird
[22:13:42] <[itchyjunk]> https://bpa.st/VPDQ
[22:13:43] <bayaz> Title: View paste VPDQ 
[22:13:51] <[itchyjunk]> when i = 2
[22:13:54] <[itchyjunk]> it sets reduce = 2
[22:14:01] <[itchyjunk]> but 2 doesn't get reduced
[22:14:14] <[itchyjunk]> but it should if (reduce % 2 == 0) should be true
[22:14:25] <[itchyjunk]> so reduce = reduce/2 should happen and should be 1
[22:14:32] <[itchyjunk]> this same code worked fine in another context
[22:16:03] <[itchyjunk]> like 3 becomes 10 oky
[22:16:08] <[itchyjunk]> but 10 has to be 5 next step
[22:16:12] <GeDaMo> Line 30 should maybe print out reduce instead of i?
[22:16:15] <InPhase> [itchyjunk]: System.out.print(i + " "); vs System.out.print(reduce+ " ");
[22:17:30] <InPhase> [itchyjunk]: When you've checked everything, check the part you assumed you couldn't screw up.  :-P
[22:17:31] <[itchyjunk]> arghhhhhhhhhhhhhhhhh
[22:17:42] <[itchyjunk]> when i copy pasted, i was supposed to change those i to reduce
[22:18:39] <[itchyjunk]> wiat another god damn second
[22:18:43] <[itchyjunk]> 24 is valid solution
[22:18:59] <[itchyjunk]> give a length, i am supposed to find the smallest N that gets reduced to 1 with the algo
[22:19:02] <[itchyjunk]> actually it is..
[22:19:12] <[itchyjunk]> omg my prof's note said 26 was the smallest
[22:19:23] <[itchyjunk]> i bet my original codeworked too
[22:19:28] <[itchyjunk]> but i will not bother with the optimization
[22:19:47] <[itchyjunk]> i had is so that if the number of steps exceeded the one specified by the user, it would break
[22:20:22] <InPhase> [itchyjunk]: Two questions:  Are you sure you got the algorithm correct?  And, is this the first year your professor gave this exercise?
[22:21:15] <InPhase> Students usually expect professor notes to be flawless.  And they typically are, the second year of running anything.
[22:21:17] <[itchyjunk]> he's been teachingg for 24 years. not idea what he taught
[22:21:26] <[itchyjunk]> "Advanced students may use additional public static methods. (We'll talk about this soon, and this problem is designed to motivate methods next week.)"
[22:21:31] <[itchyjunk]> damn i didn't use any methods..
[22:22:18] *** Joins: Pickchea (~private@user/pickchea)
[22:22:32] <[itchyjunk]> i guess i could..
[22:22:40] <[itchyjunk]> i think i got the algo correct
[22:23:04] <[itchyjunk]> if (a % 2 == 0) { a = a/2;} else { a = (a*3)+1;}
[22:23:09] <[itchyjunk]> not much going on there
[22:23:30] <InPhase> This algorithm seems familiar...
[22:23:43] <[itchyjunk]> yeah its that one unproved conjecture
[22:24:44] <InPhase> Yeah, there it is.  The Collatz conjecture.
[22:25:40] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[22:25:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:25:58] *** Joins: cichiro (~cichiro@93-44-194-15.ip98.fastwebnet.it)
[22:26:04] <cichiro> !list
[22:26:06] *** Joins: flynn (~mcbloch@user/flynn)
[22:26:28] <GeDaMo> You could memoize that, right?
[22:26:42] <cichiro> yes
[22:26:59] <cichiro> !list
[22:27:46] <GeDaMo> No bot here ( or at least no bot that's going to respond to that)
[22:28:18] *** Parts: cichiro (~cichiro@93-44-194-15.ip98.fastwebnet.it) ()
[22:33:27] <InPhase> GeDaMo: No need to memoize, as within the range of 68 bit numbers, there will be no repetitions in the sequence.
[22:33:32] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:34:03] <[itchyjunk]> hey i redid my code to use method
[22:34:04] <[itchyjunk]> https://bpa.st/YVJA
[22:34:05] <bayaz> Title: View paste YVJA 
[22:34:07] <[itchyjunk]> what do you think?
[22:34:15] <[itchyjunk]> i have one warning about something but it works
[22:35:29] <[itchyjunk]> https://bpa.st/S3TA
[22:35:30] <bayaz> Title: View paste S3TA 
[22:35:32] <[itchyjunk]> this is the wraning
[22:35:39] <[itchyjunk]> how do i use it "in a static way"
[22:35:51] <GeDaMo> Why are you creating an instance of the class?
[22:37:25] <GeDaMo> I suspect you don't need 'length' at all, you can just do seqLength == steps(i)
[22:37:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:01] <GeDaMo> If that doesn't work, try seqLength == HailstoneSearch.steps(i)
[22:40:11] <[itchyjunk]> doesn't i need to create an object to access mehtods?
[22:40:14] <[itchyjunk]> thought that's how it was done
[22:40:40] <[itchyjunk]> oh because this is all in the same class?
[22:40:42] <[itchyjunk]> hmmmmmmmmm
[22:41:13] <GeDaMo> Yeah
[22:41:22] <[itchyjunk]> hmmmmm that does make sense
[22:41:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:41:37] <[itchyjunk]> idk why i thought i HAD to create an object before i can access methods
[22:41:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Client Quit)
[22:47:21] <jinsun_> for non static methods you do need an instance
[22:47:59] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[22:49:12] *** Joins: mrig (~mrig@user/mrig)
[22:54:24] <[itchyjunk]> ahh
[22:54:39] <[itchyjunk]> i don't really know what static and non static means 
[22:54:52] <[itchyjunk]> i kinda understand the public/private part and the return type
[22:55:54] <GeDaMo> static means it's a class method/variable, it's attached to the class
[22:56:14] <GeDaMo> Non-static means it's an instance method/variable, you need to create an instance with a constructor
[22:57:55] <[itchyjunk]> h,,
[22:58:11] *** Quits: jackiee (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[23:07:43] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[23:09:18] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[23:09:18] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:13:01] *** Joins: brickfat (~brickfat@user/brickfat)
[23:15:55] *** Quits: zivoni (~tomas@v2202104118411149666.quicksrv.de) (Quit: WeeChat 3.0)
[23:16:37] *** Joins: zivoni (~tomas@user/zivoni)
[23:16:39] *** Joins: Twipply (~Twipply@user/twipply)
[23:17:26] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[23:18:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:19:56] *** Quits: swagneko (~bit@user/nekobit) (Quit: needs more desu!)
[23:20:32] *** Lemniscate is now known as Sauvin
[23:21:15] <user51> almost good nigth, everyone
[23:21:22] <user51> how are you doing? :)
[23:23:31] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[23:23:53] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[23:29:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6)
[23:32:19] *** Joins: webNET4 (~0x100@32.211.211.39)
[23:32:38] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:36:08] *** Quits: brickfat (~brickfat@user/brickfat) (Ping timeout: 250 seconds)
[23:36:49] *** Joins: Tempus (~ROG@84.215.195.24)
[23:37:12] *** Quits: inky (~inky_@37.252.82.78) (Ping timeout: 245 seconds)
[23:38:35] <Tempus> Hello. I have a game that uses AIL 2.0 (Miles Sound System), but it doesn't let me select port, so I was going to try to recomile the files for the AIL on my own. AIL 2.0 comes with msmake.exe, but I can't seem to find any documentation for this file. Do anyone know where I can find this information?
[23:38:52] *** Quits: inky_ (~inky@37.252.82.78) (Ping timeout: 245 seconds)
[23:39:05] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[23:39:37] *** Joins: inky_ (~inky@5.77.199.203)
[23:39:47] *** Joins: jamea (~jamea@200.68.141.24)
[23:41:08] <webNET4> port?
[23:41:54] <Tempus> Yeah, I have a sound card at 300, 330 and 332.
[23:42:08] <Tempus> It selects the sound card at 330, but I want it to select the one at 332.
[23:42:10] <webNET4> is this like an amiga or somethin
[23:42:25] <Tempus> It's a 486 DX2 66Mhz.
[23:42:33] <webNET4> jfc
[23:42:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[23:43:02] <webNET4> so like an amiga*5
[23:43:05] <Tempus> AIL 2.0 uses TASM to compile.
[23:43:20] <webNET4> *3
[23:43:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:43:40] <webNET4> i think they went up to twenty em H z's
[23:44:55] <Tempus> Pretty advanced for their time though. The Amigas that is.
[23:45:03] <webNET4> true
[23:45:06] <Tempus> Especially sound wise.
[23:45:21] <webNET4> what year
[23:46:05] <Tempus> 1987
[23:46:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:47:20] <webNET4> wow 6 bits per pixel
[23:48:21] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[23:48:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:48:47] <webNET4> eight bits for audio 28khz so no ultra crisp high frequencies
[23:48:50] <GeDaMo> Aren't there environment variables you can set for sound card parameters?
[23:49:34] <Tempus> No drivers for these two soundcards at 330 and 332
[23:49:36] <LjL> webNET4, you can go further than 8 bit per channel with an Amiga if that's what you're talking about
[23:49:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[23:49:50] <GeDaMo> set blaster=A220 I5 D1 P330 T4 H7
[23:49:54] <LjL> there are 4 channels, two on the left and two on the right, each of them is 8 bit, by combining them you can get to around 14 bits
[23:49:56] <webNET4> https://en.wikipedia.org/wiki/Amiga_500
[23:49:57] <bayaz> Title: Amiga 500 - Wikipedia 
[23:49:59] <LjL> it's kinda CPU intensive
[23:50:19] <LjL> yes  have an Amiga 500+ right here, i kind of know about it
[23:50:22] <LjL> also an A1200
[23:50:24] <Tempus> GeDaMo, the Sound Blaster works nice. It's the one at 332 I can't fetch.
[23:50:58] <Tempus> The Sound Blaster uses both drivers and environmental variable.
[23:51:01] <webNET4> oh so you can have one sixteen bit stereo output   or two eight bit stereos
[23:51:04] <GeDaMo> Could you try setting that environment variable before running the program?
[23:51:10] <webNET4> or four mono?
[23:51:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:51:25] <Tempus> There's no environmental variable for the sound card in question.
[23:51:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:51:53] *** Joins: zaher (~zaher@37.48.189.63)
[23:51:55] <GeDaMo> Are you sure it's not using the blaster variable?
[23:52:02] <Tempus> The Miles Sound System checks for valid cards at addresses, and it selects the one at 330 automatically.
[23:52:20] <Tempus> While I can use that, I want to use the one at 332.
[23:52:35] <LjL> webNET4, no, you can't get to 16, it's not as simple as 8+8. you can get between 12 and 14 effective bits
[23:52:46] <LjL> AHI provides that capability
[23:53:07] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:53:26] <Tempus> The Blaster environment is set to 300 which provide FM synthesis by a OPL3-chip. That's not the sound I want.
[23:54:10] *** Quits: zaher_ (~zaher@37.48.188.249) (Ping timeout: 240 seconds)
[23:54:56] <Tempus> I want to do something with this: https://github.com/Tronix286/AIL2
[23:54:57] <bayaz> Title: GitHub - Tronix286/AIL2: IBM Audio Interface Library (AIL2) by John Miles / Miles Design, Inc. CMS/Game blaster support 
[23:55:48] <Tempus> The original author provides an msmake.exe with the source, which is supposed to work, but it doesn't have any documentation.
[23:55:51] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:56:21] <Tempus> I want to make AIL.MAK
[23:56:26] *** Joins: Guest007 (~k@c-73-67-203-220.hsd1.or.comcast.net)
[23:56:30] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:56:47] <Guest007> the more powerful 80%sytax/20%semantics is the less effective you can be as a programmer.
[23:56:52] <Guest007> *syntax
[23:57:25] <Guest007> ** the more powerful 80%syntax/20%semantics is, then the less effective you can be as a programmer.
[23:57:37] <^-^hi> ?
[23:57:46] <^-^hi> URL encoding?
[23:58:09] <Guest007> take for example C's printf. It's such a powerful tool, but acts as a power blackhole.
[23:58:30] *** Joins: brickfat (~brickfat@user/brickfat)
[23:58:31] <Guest007> imagine if C didn't have printf. we'd be better off.
[23:58:46] <webNET4> just puts
[23:58:47] <user51> putchar() :)
[23:59:02] <webNET4> witha size param
[23:59:08] <webNET4> but it would still probably block
[23:59:22] <webNET4> which is annoying possibility to consider
[23:59:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
