[00:13:13] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[00:34:40] *** Joins: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net)
[00:46:55] <oriba> flatcap: there is a test directory with a lot of subdirs, but no hook-dir. But a parse-dir. but without files for the hook-parser.
[00:47:13] <oriba> maybe it makes sense to aff tests for the hook-parser...
[00:48:16] <oriba> which tool does perform the tests?
[01:45:09] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Quit: Bye)
[02:03:23] <flatcap> hi oriba 
[02:03:41] <flatcap> yes, that makes sense, but I'm not sure if it'll be possible...
[02:03:43] <oriba> hi flatcap :-)
[02:04:03] <flatcap> we started the unit tests with libmutt (all the string functions, etc)
[02:04:05] <oriba> if what will be possible... write tests?
[02:04:14] <flatcap> because they had zero deps on other libraries
[02:04:43] <flatcap> we've added a load more as we managed to break up the code into libraries
[02:05:08] <flatcap> but a lot of the config-reading code depends on some ugly functions in the main dir
[02:05:33] <oriba> I only have the hook-parser in mind for now
[02:05:43] <flatcap> it might be possible to cut out the bits we need
[02:05:53] <flatcap> I'll have a look
[02:06:14] <oriba> is the testing self-written or is there a tool for these tests?
[02:06:15] <flatcap> if we *can* write unit tests, then we can also hook up the coverage code
[02:06:31] <flatcap> `./configure --testing` && `make test`
[02:06:48] <flatcap> it's built around test/acutest.h 
[02:07:26] <oriba> don't know acutest. 
[02:07:33] <oriba> is meant to be general, it seems
[02:07:36] <flatcap> see also: `./configure --testing --coverage` && `make coverage`
[02:07:56] <flatcap> yeah, it's a small self-contained and pretty flexible unit-testing framework
[02:07:57] <oriba> hmh
[02:08:13] <oriba> 1837 lines, crazy :-)
[02:09:22] <flatcap> yeah, but we don't have to install libaries or anything, just compile
[02:10:14] <oriba> nice.
[02:10:17] <oriba> https://github.com/mity/acutest
[02:10:35] <oriba> could use that for my own programs too... will try it definitely :-)
[02:10:37] <flatcap> yes, that's the one
[02:11:07] <flatcap> the author's been open to improvements that gahr and I have made :-)
[02:11:41] <oriba> nice :-)
[02:11:52] <flatcap> thinking about mutt_parse_hook()...
[02:12:19] <flatcap> if we skip the leading "hook " part and just fed you the remainder
[02:12:31] <flatcap> it would be fairly easy to drive
[02:13:01] <flatcap> but we'd need to replicate any globals that parse_hook() uses
[02:13:15] * flatcap tries to remember where the hooks are actually stored
[02:14:04] <flatcap> hmm... `struct Hook` and `struct HookList Hooks` are both private to hook.c
[02:14:34] <flatcap> we'd need to shift them, hook.h perhaps
[02:15:57] <oriba> well, when thinking about the code I also had a question popping up to my mind: why is this done with self-written parser? 
[02:16:02] <oriba> why not lex/yacc?
[02:16:12] <oriba> or a regex-lib?
[02:17:12] <oriba> when using the long example rc-file (mentioned in the hookparser-ticket), I wondered ahy the parsing takes so long
[02:17:32] *** Quits: ngortheone (~ngortheon@199.36.90.74) (Remote host closed the connection)
[02:20:35] <flatcap> I guess simplicity, originally
[02:20:55] <flatcap> I have little experience of lex and yacc, but they seem complicated
[02:21:13] <flatcap> as for regex... that's more plausible
[02:21:33] <flatcap> gahr's was behind a big push to use regex for parsing
[02:22:08] <flatcap> originally mutt bundled some very old regex library, now we use the system regex lib or pcre2
[02:22:34] <oriba> lex and yacc are for more complex things, like parsing a complete dsl, not just some lines. but could be used for it too
[02:22:45] <flatcap> yeah
[02:22:55] <oriba> regex-libs for the rc-parser might be a good fit
[02:23:12] <flatcap> we'd have to work out the grammar (and probably make it consistent)
[02:23:18] <oriba> yes
[02:23:54] <oriba> using lex/yacc is here in advantage, because the grammer is explicit.
[02:24:06] <oriba> with regex or a hand-coded parser it is implict
[02:24:33] <oriba> the step of making things explicit is a step for cleaner code anyway
[02:24:46] <flatcap> indeed
[02:27:54] <flatcap> when you're done with the "simple" hooks challenge, you can rewrite the entire parser in a modern, modular fashion :-)
[02:27:55] <oriba> would be a thing to keep n mind (or make an issue from? ;-))
[02:28:06] <oriba> hehe, yes
[02:28:24] <flatcap> just a sec, let me tweak the org settings...
[02:28:26] <oriba> I also think, for now just the refactoring should be done
[02:30:40] <flatcap> I like github, but it's got SO MANY SETTINGS!
[02:31:32] <oriba> hehe
[02:31:38] <oriba> featuritis
[02:32:28] *** Quits: reset (~reset@user/reset) (Quit: reset)
[02:32:50] <oriba> it's M$. maybe they add clippy one day: https://en.wikipedia.org/wiki/Office_Assistant#/media/File:Clippy-letter.PNG
[02:33:09] <flatcap> argh!!!
[02:33:19] <oriba> hehe
[02:33:38] <oriba> Clippy just want to help you! ;-)
[02:33:41] <flatcap> you should now have privs to start a discussion topic
[02:33:50] <oriba> ok, thanks
[02:34:03] <oriba> but never used that feature ... just opened issue
[02:34:05] <oriba> issues
[02:34:07] <flatcap> if you want to put down your parsing ideas
[02:34:12] <oriba> ok
[02:34:26] <oriba> does this appear as Issue or what?
[02:34:35] <flatcap> discussions are a fairly new feature
[02:34:41] <oriba> ah ok
[02:34:41] <flatcap> https://github.com/neomutt/neomutt/discussions
[02:35:00] <oriba> so I'm not too outdated
[02:35:03] <flatcap> they work just like issues, without the stigma of being an *issue*
[02:35:34] <oriba> hehe, thats good
[02:35:35] <flatcap> I'll probably open up a "Q&A" section at some point
[02:35:57] <oriba> there are already a lot of discussions, wow
[02:36:45] <flatcap> hehe, mostly just me wittering on (English colloquialism for talking without any direction) about some crazy ideas
[02:37:15] <oriba> aha, hehe
[02:37:33] <oriba> Technical Glossary :-)
[02:37:52] <oriba> I like that
[02:37:52] <flatcap> :-)
[02:37:54] <oriba> go on!
[02:38:02] <flatcap> works in progress
[02:38:14] <flatcap> when they're done, I'll promote them to docs
[02:38:24] <oriba> ok.
[02:39:47] <oriba> I doubt I have so much to write there... is the parsing issue worth a discussion? I can write three sentences about the issue...
[02:40:13] <oriba> ok, but maybe the answers will make more out of it
[02:40:47] * oriba looking for a discussion topic to elaborate on
[02:41:18] <flatcap> well... make the suggestion and pick a couple of non-trivial config cases to parse
[02:41:35] <oriba> ...with the parsing thing I will wait until the refactoring is done... 
[02:41:42] <flatcap> we can make as many discussions as we like
[02:41:52] <flatcap> yeah, it's a place for ideas
[02:41:54] <oriba> ok
[02:42:30] <oriba> on the Panel thing in the Technical Glossary: panels are a ftuutre dream? Or are they already available?
[02:43:35] <flatcap> the glossary all exists
[02:44:11] <flatcap> that post is to clear up all the possible names I give to `struct MuttWindow`
[02:45:18] <flatcap> (in a modern world they'd all be classes derived from MuttWindow)
[02:45:38] <oriba> I mean my layout does not look like this: https://raw.githubusercontent.com/neomutt/gfx/main/screenshots/window/dlg-index-pager-sidebar.svg
[02:46:12] <oriba> did I missed a feature?
[02:47:28] <flatcap> that layout shows: `sidebar_visible=yes` and `pager_index_lines=10` (so the index is visible from the pager)
[02:48:03] <flatcap> (and `help=yes`, but few people need _that_)
[02:48:41] <oriba> ok, moment ...
[02:48:47] <flatcap> only the blue bits are visible, of course.  the rest of the windows are structural
[02:50:58] <oriba> crazy... a totally different view ...
[02:51:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:52:50] <oriba> but I like the classic view
[02:53:03] <flatcap> ok :-)
[02:53:04] <oriba> I have not so much folders/mailboxes to view
[02:56:27] <oriba> ...now as I just looked at my rc-file I wonder how my set up can detect the IMAP folders at all... I have commented out the file, where they are set... hmmhhh
[02:56:29] <oriba> spooky
[02:56:51] <flatcap> do you have imap_check_subscribed=yes?
[02:57:04] <flatcap> that asks the server for a list of mailboxes
[02:57:18] <oriba> oh I hadlooked in the wrong file... maybe it was a backup... 
[02:57:40] <flatcap> oh
[02:57:51] <oriba> I have a mess here, it seems ;-)
[02:58:27] <oriba> Ithink that was from testing, when I had problems with the settings, a while ago
[02:58:40] <flatcap> ah
[03:00:41] <oriba> hey I documented the reason! I had commented out the mailbox settings because I had problems when only reading local files with -f that I had to give my password for all IMAP-folders
[03:01:11] <flatcap> ok
[03:01:33] <oriba> I think I solved the issue with potting the imap_user and imap_pass into the file - and at the right point
[03:02:09] <oriba> ah, yes, just right before the mailboxes-setting
[03:02:15] <flatcap> aha
[03:02:38] <oriba> as far as I remember, I had no problems until one day
[03:02:59] <oriba> but looking at it now it makes sense to have the settings in this order
[03:03:45] <oriba> $ rm .mutt_minimal_rc
[03:03:56] <flatcap> :-)
[03:04:51] <oriba> just tested again afterwards, that it was not th wrong file,  hehe
[03:15:39] <oriba> OK, messed up the test-rc-file. and did not find the parser to work differently than with a correct hook-line
[03:16:03] *** Joins: ngortheone (~ngortheon@199.36.90.74)
[03:17:33] <oriba> aha, at the end it differs
[03:17:51] <oriba> NT_COMMAND vs unknwon command
[03:18:13] <flatcap> ok
[03:18:32] <oriba> but the same if-statements triggered.
[03:19:15] <oriba> or I have forgotten some log-entries somewhere...
[03:32:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:32:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:35:14] <oriba> how much of neomutt is mutt-legacy code?
[03:36:04] <flatcap> hmm...
[03:37:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:37:42] <flatcap> I'm not sure I could guess a percentage...
[03:37:59] <flatcap> quite a bit, but you'd have to look carefully to see the similarities
[03:38:31] <oriba> muttseems still under development
[03:38:39] <flatcap> after clang-formatting the code, we've renamed and moved a LOT of stuff (for consistency and dependency reasons)
[03:38:53] <oriba> just shifting around?
[03:39:00] <flatcap> slowly (and their maintainer just stepped down)
[03:39:36] <flatcap> then we've added lots of APIs which meant more refactoring
[03:40:18] <flatcap> when we split, ~7 years ago, the repo had ~6K commits. today:
[03:40:26] <flatcap> mutt: 8222 commits
[03:40:36] <flatcap> neomutt: 14998 commits
[03:40:39] <flatcap> (not a typo :-)
[03:42:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:42:46] <flatcap> our config system is entirely new.  all the regex code too.
[03:43:03] <flatcap> notmuch, several header cache backends
[03:43:26] <flatcap> a metric ****-ton of code documentation
[03:43:45] <flatcap> unit tests, coverage tests, fuzzing
[03:43:57] <flatcap> we've not been idle :-)
[03:45:13] <oriba> so, what does your percentage estimation spit out?
[03:47:03] <flatcap> I'd guess 75% of neomutt is new
[03:47:25] <flatcap> 15% heavily modified mutt
[03:47:51] <flatcap> 10% not very modified mutt
[03:48:34] <oriba> interesting
[03:49:27] <oriba> and how much  of neomutt appeared in mutt? was there something flowing back?
[03:49:46] <flatcap> very little
[03:49:58] <flatcap> before we split, I managed to get the sidebar merged
[03:50:59] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[03:53:44] <flatcap> and a few of our smaller features have suspiciously appeared in mutt without our help :-)
[03:54:27] <oriba> hehe
[03:57:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:58:07] *** Joins: dcpurton (~dcpurton@130.220.8.115)
[03:58:57] <dcpurton> hi flatcap, just trying out your screen redraw changes!
[03:59:07] <flatcap> hi dcpurton 
[03:59:09] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[03:59:29] <flatcap> how's it going?
[04:00:00] <dcpurton> I notice one thing. Is there somewhere you'd like to note them?
[04:00:28] <flatcap> big or small?
[04:01:17] <dcpurton> small and doesn't always happen
[04:01:35] <dcpurton> when I resize my window (tiling WM)
[04:01:53] <dcpurton> the screen is not always redrawn to the correct width
[04:02:21] <flatcap> ok. is that in the index, or a particular dialog?
[04:02:37] <dcpurton> in the index is where I have noticed so far
[04:02:56] <flatcap> the latest changes rework 14 "simple" dialogs
[04:03:02] <dcpurton> ah
[04:03:08] <flatcap> ah, ok
[04:03:20] <flatcap> please can you raise an issue
[04:03:21] <dcpurton> it has made some difference though to the index. That never used to redraw
[04:03:55] <flatcap> the menu part should be better, but the index does some custom repainting
[04:04:02] <flatcap> i'll see what I can do
[04:04:17] <flatcap> back in a sec -- need to reboot
[04:04:19] *** Quits: flatcap (flatcap@neomutt/flatcap) (Quit: WeeChat 3.4)
[04:04:19] *** Quits: neo-bot (~neo-bot@flatcap.org) (Remote host closed the connection)
[04:04:22] <dcpurton> OK
[04:05:10] *** Joins: neo-bot (~neo-bot@flatcap.org)
[04:05:31] *** Joins: flatcap (flatcap@neomutt/flatcap)
[04:05:49] <flatcap> re
[04:08:02] *** Quits: zmo (~guyzmo@2001:bc8:6010:211:5054:ff:fe00:e941) (Ping timeout: 240 seconds)
[04:08:53] *** Quits: dcpurton (~dcpurton@130.220.8.115) (Ping timeout: 256 seconds)
[04:09:13] *** Joins: zmo (~guyzmo@2001:bc8:6010:211:5054:ff:fe00:e941)
[04:32:13] *** Quits: oriba (~oriba@dynamic-089-014-251-097.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:53:28] *** Joins: Seirdy0 (~Seirdy@sourcehut/user/seirdy)
[04:55:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:11:17] *** Quits: bluejaypop2 (~7f000001@72.52.80.246) (Quit: Ping timeout (120 seconds))
[05:11:31] *** Joins: bluejaypop2 (~7f000001@72.52.80.246)
[05:12:01] *** Quits: pooby (~pooby@167.99.100.8) (Ping timeout: 245 seconds)
[05:23:34] *** Joins: pooby (~pooby@167.99.100.8)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:54:38] <aplund> does anyone have an suggestions for how to render a single email file that's been copied out of a maildir box?
[05:57:05] <zsw> ?  cat /path/to/file.  Or if it's html, somethine like, firefox /path/to/file.html
[05:59:55] <aplund> zsw: Just get lots of headers and a quoted-printable output.  Can't I just open it in mutt?
[06:02:58] <aplund> neomutt -f file   doesn't work
[06:03:16] <zsw> sure, just copy it into one of your maildirs, maybe /path/to/mail/search/cur/
[06:30:02] *** Joins: rgrinberg (~textual@177.244.18.30)
[06:36:44] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[06:39:03] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Client Quit)
[06:54:58] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:02:34] *** Joins: rgrinberg (~textual@177.244.18.30)
[07:13:10] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:11] *** Joins: rgrinberg (~textual@177.244.18.30)
[07:15:26] *** Joins: dcpurton (~dcpurton@113.197.13.151)
[07:15:30] *** Quits: noex (~null@user/noex) (Ping timeout: 252 seconds)
[07:16:41] *** Joins: noex (~null@user/noex)
[07:41:03] *** Quits: dcpurton (~dcpurton@113.197.13.151) (Ping timeout: 256 seconds)
[08:17:09] *** Joins: gabriel1_ (~gabriel1@37.164.5.208)
[08:19:46] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 250 seconds)
[08:34:35] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Ping timeout: 240 seconds)
[08:34:54] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[09:02:24] *** Quits: inak (~justme@209-112-220-139-radius.dynamic.acsalaska.net) (Quit: Leaving)
[09:15:26] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[09:34:18] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[09:39:10] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[09:39:57] *** Joins: rgrinberg (~textual@177.244.18.30)
[09:41:34] *** Joins: sbach (~sbach@user/sbach)
[10:14:10] *** Quits: gabriel1_ (~gabriel1@37.164.5.208) (Ping timeout: 250 seconds)
[10:15:16] <gahr> away
[10:15:22] <gahr> morning
[10:35:41] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[10:38:06] *** Joins: rgrinberg (~textual@177.244.18.30)
[10:40:39] *** Quits: rossyrg_ (~rossyrg@cordelia.uberspace.de) (Ping timeout: 252 seconds)
[10:40:50] *** Joins: feliix42_ (~felix@gibbs.uberspace.de)
[10:41:45] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (Ping timeout: 252 seconds)
[10:42:56] *** Joins: rossyrg (~rossyrg@cordelia.uberspace.de)
[10:52:39] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[10:53:05] *** Joins: madage (~madage@user/madage)
[11:00:45] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[11:01:39] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:31] *** Joins: rgrinberg (~textual@177.244.18.30)
[11:04:18] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Ping timeout: 252 seconds)
[11:08:27] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 256 seconds)
[11:23:32] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[12:05:17] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Ping timeout: 250 seconds)
[12:07:31] *** Joins: rgrinberg (~textual@177.244.18.30)
[12:13:03] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[12:16:11] *** Joins: rgrinberg (~textual@177.244.18.30)
[12:21:17] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 240 seconds)
[13:01:08] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:17] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[13:14:07] *** Joins: redgloboli (~redglobol@user/redgloboli)
[13:19:24] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[13:40:03] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[14:03:24] <flatcap> morning all
[14:05:14] <gahr> hi flatcap 
[14:05:22] <flatcap> hi gahr 
[14:22:50] *** Joins: darkbit (~db@136.158.8.67)
[14:50:06] <gahr> ssup?
[14:53:44] <flatcap> just refactoring the alias/query dialogs to match the recent discussions
[14:53:59] <dcpurton> oh ah
[14:54:10] <flatcap> hi dcpurton, thanks for the issue
[14:55:29] <dcpurton> hope it's clear an reproducible
[14:55:53] <flatcap> I haven't tried yet, but I think I understand
[14:56:16] <dcpurton> the old code used to do this too, so maybe you just haven't dealt with it yet
[14:57:53] <flatcap> ok, good to know
[15:07:38] *** Joins: strajder (~strajder@user/strajder)
[15:13:49] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[15:16:12] *** Joins: polve (~polve@user/polve)
[15:26:12] *** Quits: polve (~polve@user/polve) (Quit: WeeChat 3.0)
[15:27:41] *** Joins: polve (~polve@user/polve)
[15:29:11] *** Joins: rgrinberg (~textual@177.244.18.30)
[15:33:43] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[16:39:33] *** Joins: azed (~azed@197.23.130.142)
[17:11:24] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Quit: WeeChat 3.4)
[17:37:32] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 252 seconds)
[17:45:53] *** Joins: plastico (~plastico@neomutt/plastico)
[17:51:04] *** Joins: rsaavedra (~rodrigo@user/rsaavedra)
[17:51:05] *** Quits: rsaavedra (~rodrigo@user/rsaavedra) (Client Quit)
[18:07:14] *** Quits: qub411 (~user@118.209.248.55) (Ping timeout: 272 seconds)
[18:08:41] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[18:15:30] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Ping timeout: 252 seconds)
[18:49:57] *** Joins: rgrinberg (~textual@177.244.18.30)
[19:06:24] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[19:09:00] *** Joins: blatant (~blatant@90.212.141.102)
[19:10:18] *** Joins: azed (~azed@197.23.130.142)
[19:10:25] *** Quits: blatant (~blatant@90.212.141.102) (Client Quit)
[19:43:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:46:14] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[19:59:01] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[20:05:15] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:10:56] *** Joins: inak (~justme@209-112-220-139-radius.dynamic.acsalaska.net)
[20:11:00] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 252 seconds)
[20:30:14] *** Joins: Pali (~pali@user/pali)
[20:47:48] *** Quits: inak (~justme@209-112-220-139-radius.dynamic.acsalaska.net) (Quit: Leaving)
[21:15:05] *** Joins: b2ag (~quassel@dynamic-078-054-166-018.78.54.pool.telefonica.de)
[21:16:54] *** Quits: b2ag (~quassel@dynamic-078-054-166-018.78.54.pool.telefonica.de) (Client Quit)
[21:46:00] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[22:06:38] *** Quits: weirdsmiley (~weirdsmil@103.25.231.102) (Ping timeout: 272 seconds)
[22:25:12] *** Quits: elshize (elshize@gateway/vpn/protonvpn/elshize) (Ping timeout: 252 seconds)
[22:27:01] *** Joins: elshize (elshize@gateway/vpn/protonvpn/elshize)
[23:23:18] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:31:52] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:40:48] *** Joins: strajder (~strajder@user/strajder)
[23:41:32] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:49:04] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[23:55:59] *** Quits: rgrinberg (~textual@177.244.18.30) (Read error: Connection reset by peer)
[23:57:44] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:59:22] *** Quits: earthnative (~nemo@119-18-37-212.771225.bne.static.aussiebb.net) (Ping timeout: 272 seconds)
