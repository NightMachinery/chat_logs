[00:03:10] <gordonfish> farnsworth 38.0TiB/(240MiB/s)
[00:03:15] <crashmatrix> /nick dangercube
[00:03:24] <buu> johnny dangerously
[00:03:30] <gordonfish> Almost read that as rick dangerous
[00:03:31] <buu> (... isn't that an adverb?)
[00:03:39] <buu> that movie is great
[00:04:02] <gordonfish> perlbot: farnsworth 38.0TiB/(240MiB/s)
[00:04:04] <perlbot> gordonfish:  PARI:          ***   division by zero at /home/ryan/farnsworth/oldreleases/r0.7/trunk/lib/Language/Farnsworth/Value/Pari.pm line 272. 
[00:04:08] <gordonfish> simcop2387: ^
[00:05:02] <crashmatrix> 2 days btw
[00:05:06] <Grinnz> Paperbot: wolfram  38.0TiB/(240MiB/s)
[00:05:08] <Paperbot> Grinnz: Input interpretation: (38. TiB (tebibytes))/(240 MiB/s (mebibytes per second)) || Result: 166000 seconds [ 5 more results ]
[00:05:13] <buu> SHIT BOT
[00:05:15] <Grinnz> Paperbot: more
[00:05:15] <Paperbot> Grinnz: Unit conversions: 1 day 22 hours 7 minutes; 2767 minutes; 46.12 hours; 1.922 days [ 4 more results ]
[00:05:55] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:06:38] * GumbyPAN CPAN Upload: Open-This-0.000025 by OALDERS https://metacpan.org/release/OALDERS/Open-This-0.000025
[00:08:26] <gordonfish> perlbot: farnsworth s=1
[00:08:28] <perlbot> gordonfish:  1 
[00:08:29] <gordonfish> perlbot: farnsworth 38.0TiB/(240MiB/s)
[00:08:31] <perlbot> gordonfish:  166024.533333333 
[00:08:33] <gordonfish> woo!
[00:08:59] <gordonfish> perlbot: farnsworth 38.0TiB/(240MiB/s) -> hours
[00:09:01] <perlbot> gordonfish:  Conformance error, can't convert from dimensionless value to time 
[00:09:05] <gordonfish> wtf
[00:09:07] <v`> Paperbot: wolfram  38.0TiB/(240MiB/s) in minutes
[00:09:19] <v`> sorry, copy pasted the bold by accident...
[00:09:26] <v`> Paperbot: wolfram  38.0TiB/(240MiB/s) in minutes
[00:09:29] <ology> Calling Dr Hawking
[00:09:29] <Paperbot> v`: Input interpretation: convert (38. TiB (tebibytes))/(240 MiB/s (mebibytes per second)) to minutes || Result: 2767 minutes [ 5 more results ]
[00:09:53] <gordonfish> perlbot: farnsworth 38.0TiB/(240MiB/s) -> hours
[00:09:55] <perlbot> gordonfish:  Conformance error, can't convert from dimensionless value to time 
[00:16:17] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[00:17:29] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[00:20:20] <gchristensen> (minor update on the prometheus bits from before) I spent a bit of time looking at IO::Async and IO::Async::Function/Routine as a way to fit my existing code in to a model with an async io loop for serving Net::Prometheus, however unfortunately I don't think that'll work on the basis that metrics incremented inside the IO::Async::Function blocks won't have their metrics exported. 
[00:21:25] <gordonfish> perlbot: farnsworth var s = 1 seconds /* time */
[00:21:27] <perlbot> gordonfish:  1 s /* time */
[00:21:32] <gordonfish> perlbot: farnsworth 38.0TiB/(240MiB/s) -> hours
[00:21:34] <perlbot> gordonfish:  46.1179259259259 
[00:21:39] <gordonfish> weeee
[00:23:27] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[00:25:56] *** Quits: magla (~gelignite@55d4d9a3.access.ecotel.net) (Quit: Stay safe!)
[00:32:10] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 240 seconds)
[00:32:20] *** Joins: GEttR (~GEttR@user/gettr)
[00:51:16] *** Quits: mattil (~mattil@78-27-110-179.bb.dnainternet.fi) (Quit: Leaving)
[00:54:27] *** Joins: gloin (~gloin@user/gloin)
[00:55:33] *** Joins: lucasb (uid333435@id-333435.stonehaven.irccloud.com)
[00:58:25] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[00:59:07] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[00:59:34] *** Joins: Couture (~Couture@pppoe247h3.ppp.kmv.ru)
[00:59:58] *** Couture is now known as Guest883
[01:00:13] *** Guest883 is now known as dimbag
[01:01:49] <LeoNerd> gchristensen: Yeah, so don't do that. Put the *code* in the Function blocks and have the metrics outside
[01:02:06] <LeoNerd> The only thing that IaFunction blocks can do is take arguments and return values. Encode *everything* else in that
[01:02:10] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[01:02:17] <LeoNerd> E.g. maintain a list of the names of metrics that need incrementing, then do that in the controller outside
[01:02:46] <mst> .oO "tied metric values with automatic propagation"
[01:02:48] <LeoNerd> But likely the thing to do is only put the smallest, CPU-intensive, slow bits of code into those IaFunction objects. The rest of the "glue logic" can be in the main program, and thus can access all the metrics
[01:03:00] <LeoNerd> Break it into *small* pieces
[01:04:34] <tm604> ... or don't use polled metrics: emit via UDP instead
[01:05:38] <mst> tm604: I believe that option was previously considered and rejected because of the amount of additional complication it would introduce given the rest of the infrastructure is already polled
[01:06:25] <tm604> that seems odd, prometheus already has statsd_exporter built-in
[01:06:44] * GumbyPAN CPAN Upload: GFX-Enhancer-0.1.15 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/GFX-Enhancer-0.1.15
[01:06:44] * GumbyPAN CPAN Upload: Game-Entities-0.011 by JJATRIA https://metacpan.org/release/JJATRIA/Game-Entities-0.011
[01:07:49] <LeoNerd> Yah there's at least 3 good ways to solve this
[01:10:27] <mst> tm604: I don't recall the exact contours of the conversation except that it definitely happened in here somewhere in scrollback, sorry
[01:10:48] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-25-184-147-14-206.dsl.bell.ca) (Quit: Konversation terminated!)
[01:21:45] * GumbyPAN CPAN Upload: Plasp-1.09 by SLEUNG https://metacpan.org/release/SLEUNG/Plasp-1.09
[01:23:06] *** Joins: anthk_ (~anthk_@92.176.105.30)
[01:25:15] *** Quits: jplesnik (~jplesnik@83.240.61.208) (Quit: Leaving)
[01:35:18] *** Joins: whynot (~whynot@37.73.86.69)
[01:37:45] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 248 seconds)
[01:40:36] *** Quits: pucara (~i@181.95.206.171) (Quit: Lost terminal)
[01:48:49] <lucasb> Hello. Given the *foo{THING} syntax, I can write map *foo{$_}, qw/ARRAY HASH CODE .../. How do I get all the keys that have a value set in the typeglob slot without I have to write a fixed list of keys?
[01:50:07] <lucasb> IOW, how do I query the interpreter for the list of known keys for a given typeglob. I want something like: 'my @keys = keys *someglob{*}'
[01:51:22] <LeoNerd> It's a fixed list
[01:51:58] <LeoNerd> Also they're not really hashlike, ... it's just a really annoying abuse of syntax
[01:53:53] <lucasb> ok, that cleared things, thanks :)
[01:54:40] <lucasb> I'm maintaing the list 'my @SLOT_KEYS = qw( SCALAR ARRAY HASH CODE IO GLOB FORMAT NAME PACKAGE )'... I didn't want to keep it hard coded, I'd rather query for this list the same I do with a regular hash
[01:54:59] <LeoNerd> Right; but it isn't a "regular hash". It's not a hash at all
[01:57:44] <lucasb> understood. At least, this hash-like interface for typeglob slot access is convenient
[01:59:39] <LeoNerd> Given how rarely it's used, it would have been much nicer for core to provide a little module like Glob::Util
[01:59:45] <LeoNerd> with named functions
[02:00:19] <LeoNerd> Ohdear. I appear to have accidentally volunteered myself
[02:01:49] * GumbyPAN CPAN Upload: GFX-Enhancer-0.1.16 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/GFX-Enhancer-0.1.16
[02:03:46] <Grinnz> typeglob access has always basically been second-class, with just enough syntax for it to work
[02:04:25] <Grinnz> a real interface would allow you to access and assign to specific parts of the typeglob without a hashlike access
[02:04:32] <Grinnz> or without depending on the ref type
[02:04:34] <LeoNerd> A real interface would also allow you to delete slots ;)
[02:05:03] <Grinnz> like right now, you can't assign to the IO slot of a glob with normal glob assignment
[02:05:15] <Grinnz> well maybe you could, if it's an IO ref? i dunno
[02:05:18] <LeoNerd> Right now you can't delete the scalar slot
[02:05:45] <Grinnz> sweval: *foo = \v1.2.3; our $foo
[02:05:46] <perlbot> Grinnz: 
[02:05:58] <Grinnz> sweval: *foo = \v40; our $foo
[02:06:00] <perlbot> Grinnz: (
[02:06:05] <Grinnz> yeah that just assigns to SCALAR
[02:07:40] <Grinnz> most uses of typeglobs other than the structure of the package hierarchy should be abandoned tbh
[02:15:06] <crashmatrix> yeah thats fair
[02:15:41] <gloin> If I didn't have a large pile of reasons to hate on the devops movement already, trying to get Python to do obvious things would more than make up for it. Jeebus!
[02:16:02] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[02:16:07] <gloin> my $foo = `lspci | grep -i net`; <-- WHY IS THIS NOT EASY TO DO IN PYTHON?
[02:16:38] <LeoNerd> Isn't it something from `subprocess` ?
[02:17:08] <gloin> no, we have to do subprocess.getoutput(eatabagga([youknowwhat]).strip() and don't you dare put an extra whitespace char in someplace
[02:17:17] <gloin>  /rant
[02:17:37] <gloin> oh I forgot a paren, heh
[02:17:45] <crashmatrix> i'm not too sure I like having `shell | voodoo` sprinked throughout my codebase either
[02:18:07] <gloin> crashmatrix: sure, but the thing Python is supposedly so amazing at is systems automation
[02:18:17] <crashmatrix> i doth contest
[02:18:20] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[02:18:25] <gloin> I said supposedly 
[02:18:43] <ehuelsmann[m]> gloin: it's not. that's why they developed Ansible on top of it.
[02:18:52] <gloin> lol
[02:19:07] * gloin quickly hides his directory full of yaml files
[02:19:10] <crashmatrix> "ansible? oh yeah, we had that back in the day, some thing called perl"
[02:19:13] <ehuelsmann[m]> if you have a choice, though, I'd advise Rex (https://rexify.org)
[02:19:45] <gloin> We did the rex vs ansible discussion, and the only reason ansible came out ahead is community activity level
[02:19:57] <gloin> Rex is great but not very active.
[02:20:01] <ehuelsmann[m]> yup. I understand.
[02:20:06] <gloin> Ansible is dreadful but it's got tons of sponsors etc.
[02:20:07] <Grinnz> gloin: my $foo = join '', grep { m/net/i } `lspci`; :D
[02:20:09] <ehuelsmann[m]> it doesn't need to be.
[02:20:41] <ehuelsmann[m]> In ansible you have tons of roles which all do-mostly-what-I-need-but-not-quite.
[02:20:48] <ehuelsmann[m]> so you end up developing your own.
[02:21:10] <ehuelsmann[m]> Rex recognizes that and doesn't fake to deliver stuff you think you might be able to re-use.
[02:21:23] <gloin> actually ansible's a good example of this - one of our pain points is getting ansible working with iptables in a useful (for us) way
[02:21:38] <gloin> their expectation is that everyone is using firewalld from the looks of it
[02:22:05] * Grinnz never learned iptables, so makes other people deal with it unless it's using firewalld
[02:22:07] <ehuelsmann[m]> yes. Rex provides the necessary primitives to manage iptables your way.
[02:22:30] <gloin> Grinnz: all you ever need to know is "iptables -P INPUT DROP"
[02:22:44] <Grinnz> i mean, i have to know a lot more than that :P
[02:22:46] <gloin> set that and nobody will ever be able to do anything to your machine
[02:22:55] <gloin> heh
[02:23:01] <ehuelsmann[m]> don't get me started on firewalld.
[02:23:20] <Grinnz> i see firewalld as just an iptables settings manager
[02:23:24] <gloin> who here among us has never set that without first adding an ACCEPT rule
[02:23:29] <Grinnz> with syntax i actually understand
[02:23:56] <gloin> Grinnz: it can be but I think it uses nftables or some new squids on the block stuff by default
[02:23:58] <ehuelsmann[m]> Grinnz: it is. As soon as you switch to nftables, that becomes painfully clear: 99.9% of what nftables can do, firewalld can't.
[02:24:17] <Grinnz> shrug, as long as it can do the 3 things i ever need to do with firewalls
[02:25:06] <Grinnz> block traffic to ports, open traffic to ports, and drop traffic based on source :P
[02:25:27] <gloin> firewalld reminds me a lot of 'netsh advfirewall' and this is probably not a design accident. Just another step on the road to having to do 'systemctl regedit HKLM/LocalMachine' instead of editing a file in /etc. Thanks Lennart!
[02:26:11] <Adura> No SystemD for me, thanks.
[02:26:46] <ehuelsmann[m]> hmm. yea. I need it a bit more complex than that. I'm using the nftables instance I manage as a true router: it's actually policing traffic between zones and ports.
[02:27:07] <Grinnz> that's what the cloud/a router is for :D
[02:27:11] <ehuelsmann[m]> so it's not a matter of "manage the firewall on this machine".
[02:27:49] <Grinnz> yeahi can see how firewalld would be insufficient for that
[02:28:17] <buZz> just ask your networkmonkey to manage that for you
[02:28:19] <buZz> :)
[02:28:20] <gloin> It still boggles that firewalld doesn't have an equivalent to "-m comment"
[02:28:50] <Grinnz> like, commit messages? or is that an iptables thing
[02:28:55] <gloin> iptables thing
[02:29:21] <gloin> iptables -A SSH -s 1.2.3.4/32 -m comment --comment 'my admin box' -j ACCEPT
[02:29:47] <gloin> so that way when you see 1.2.3.4 being allowed in via SSH in the ruleset you immediately know what that IP is
[02:29:51] <gloin> even if DNS is horked
[02:29:55] <Grinnz> ah well, you can just name your zones and services
[02:30:00] <gloin> haha
[02:30:15] <gloin> ever try adding 50 IP addresses to a zone
[02:30:19] <LeoNerd> iptables isn't really supposed to be interacted with directly by humans
[02:30:28] <LeoNerd> iptables is supposed to be like x86 assembly code, or perl optrees
[02:30:34] <ehuelsmann[m]> neither is firewalld.
[02:30:35] <LeoNerd> The generated output from some translation process
[02:30:37] <gloin> LeoNerd: s/is/was
[02:30:57] <gloin> also does firewalld support ipset? Can't remember
[02:31:02] <Grinnz> i would say firewalld is limited, but definitely interactive :P
[02:31:42] <Grinnz> gloin: no mention of that in the docs
[02:31:58] <Grinnz> unless the syntax would be something else
[02:32:06] <gloin> https://firewalld.org/documentation/ipset/
[02:32:06] <Paperbot> Link title(s): [ Documentation - IPSet | firewalld ]
[02:32:14] <gloin> so I guess it does
[02:32:18] <Grinnz> ah
[02:32:27] <Grinnz> maybe a new thing
[02:33:20] <Grinnz> so you can name your zones, services, and ipsets :)
[02:34:15] *** Quits: bmeneg (~bmeneg@2001:1284:f016:c77f:a0a2:51e8:3acb:a2a5) (Remote host closed the connection)
[02:34:30] <Grinnz> i still like how the manpages link to http://fedoraproject.org/wiki/FirewallD as it has the most examples
[02:34:31] <Paperbot> Link title(s): [ Firewalld - Fedora Project Wiki <https://fedoraproject.org/wiki/Firewalld?rd=FirewallD> ]
[02:35:05] <Grinnz> probably in need of some updates at this point
[02:35:14] <Grinnz> some parts of that page havent been touched in years
[02:35:44] <Grinnz> you can tell when they talk about some experimental feature which people have been using for years
[02:40:20] *** Joins: gast0n (~g4570n@user/gast0n)
[02:42:00] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:55:05] *** Quits: jabberwok (~wlindley@75.105.20.104) (Ping timeout: 248 seconds)
[02:58:50] *** Quits: Pali (~pali@user/pali) (Ping timeout: 268 seconds)
[03:02:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:06:56] * GumbyPAN CPAN Upload: String-Copyright-0.003008 by JONASS https://metacpan.org/release/JONASS/String-Copyright-0.003008
[03:08:22] *** Joins: jabberwok (~wlindley@75.105.20.104)
[03:11:27] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:15:34] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:16:57] * GumbyPAN CPAN Upload: App-Licensecheck-v3.2.10 by JONASS https://metacpan.org/release/JONASS/App-Licensecheck-v3.2.10
[03:20:39] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net)
[03:21:58] * GumbyPAN CPAN Upload: Proc-ProcessTable-0.61 by JWB https://metacpan.org/release/JWB/Proc-ProcessTable-0.61
[03:22:05] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Remote host closed the connection)
[03:41:52] *** Joins: holyghost_ (~smIRCle@109.136.39.83)
[03:52:28] *** Joins: holly_ (~goon@2a02:a03f:64c8:9200:6d38:10eb:c49a:e445)
[03:56:01] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[04:04:15] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:06:58] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[04:07:32] *** Quits: holyghost_ (~smIRCle@109.136.39.83) (Ping timeout: 245 seconds)
[04:24:12] *** Parts: jabberwok (~wlindley@75.105.20.104) ()
[04:32:01] *** Joins: furincleavagesit (~textual@45.144.113.151)
[04:34:31] *** Quits: whynot (~whynot@37.73.86.69) (Quit: leaving)
[05:02:08] * GumbyPAN CPAN Upload: Alien-libtickit-0.11 by PEVANS https://metacpan.org/release/PEVANS/Alien-libtickit-0.11
[05:02:08] * GumbyPAN CPAN Upload: App-RouterColorizer-1.212300 by JMASLAK https://metacpan.org/release/JMASLAK/App-RouterColorizer-1.212300
[05:22:42] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[05:37:12] * GumbyPAN CPAN Upload: Number-MuPhone-1.01-TRIAL by CHOLLOWAY https://metacpan.org/release/CHOLLOWAY/Number-MuPhone-1.01-TRIAL
[05:37:12] * GumbyPAN CPAN Upload: DB-Object-v0.9.14 by JDEGUEST https://metacpan.org/release/JDEGUEST/DB-Object-v0.9.14
[05:44:51] *** Quits: Darkcoal_ (~user@130.164.128.242) (Quit: Darkcoal_)
[05:46:34] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[05:48:26] *** Joins: _73`` (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[05:50:02] *** Quits: _73` (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[05:50:23] *** Parts: _73`` (~user@pool-96-252-123-136.bstnma.fios.verizon.net) ()
[06:02:15] * GumbyPAN CPAN Upload: Number-MuPhone-1.02-TRIAL by CHOLLOWAY https://metacpan.org/release/CHOLLOWAY/Number-MuPhone-1.02-TRIAL
[06:12:50] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:15:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:16:57] *** Joins: Su-Shee_ (~Susanne@p4ff49594.dip0.t-ipconnect.de)
[06:20:02] *** Quits: Su-Shee (~Susanne@p4ffc7eae.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:26:10] *** Quits: bs338 (~pi@host109-155-146-154.range109-155.btcentralplus.com) (Ping timeout: 256 seconds)
[06:27:55] *** Joins: bs338 (~pi@host217-44-163-209.range217-44.btcentralplus.com)
[06:30:52] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 245 seconds)
[06:39:24] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:52:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:52:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zinc.libera.chat (Nickname regained by services)))
[06:52:05] *** finn_elija is now known as FinnElija
[06:58:21] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[07:04:23] *** Joins: anthk_ (~anthk_@92.176.105.30)
[07:21:17] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[07:24:25] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 248 seconds)
[07:24:59] *** Quits: lucasb (uid333435@id-333435.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:41:26] * GumbyPAN CPAN Upload: Module-Generic-v0.15.6 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.15.6
[07:46:26] * GumbyPAN CPAN Upload: App-RouterColorizer-1.212301 by JMASLAK https://metacpan.org/release/JMASLAK/App-RouterColorizer-1.212301
[08:26:14] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:28:10] *** Joins: Martchus_ (~martchus@dynamic-095-114-041-129.95.114.pool.telefonica.de)
[08:29:12] *** Quits: Martchus (~martchus@dynamic-077-009-064-234.77.9.pool.telefonica.de) (Ping timeout: 245 seconds)
[08:31:06] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:55:05] *** Quits: perldoc (~perldoc@71.76.76.1) (Ping timeout: 248 seconds)
[08:55:05] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 248 seconds)
[08:55:32] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Read error: Connection reset by peer)
[08:55:33] *** Quits: kaitlyn (~kaitlyn@user/kaitlyn) (Read error: Connection reset by peer)
[08:55:37] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 248 seconds)
[08:55:46] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 256 seconds)
[08:55:49] *** Joins: kaitlyn (~kaitlyn@user/kaitlyn)
[08:56:11] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[08:56:11] *** ChanServ sets mode: +v perlbot
[08:56:41] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[08:58:10] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[08:58:41] *** Joins: perldoc (~perldoc@71.76.76.1)
[08:59:41] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[09:03:25] *** Quits: furincleavagesit (~textual@45.144.113.151) (Remote host closed the connection)
[09:09:19] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[09:13:48] <Jonno_FTW> I have this line: `my @addr = map {inet_ntoa($_->address)} grep {$_->address} Net::Interface->interfaces;` but it fails when I have an ipv6 interface with this message: Bad arg length for NetAddr::IP::Util::inet_ntoa, length is 16, should be 4 
[09:13:54] <Jonno_FTW> how do I only get ipv4 interfaces?
[09:16:17] <shlomif> Jonno_FTW: hi
[09:16:20] <Jonno_FTW> hi
[09:16:38] <shlomif> Jonno_FTW: use another grep{}?
[09:16:59] <Jonno_FTW> ok
[09:17:26] <Jonno_FTW> guess I want just those with length($_->address) == 4
[09:17:28] <Adura> Could test length in the current grep.
[09:17:50] <shlomif> Adura: right
[09:29:34] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[09:31:05] <shlomif> Jonno_FTW: any luck?
[09:37:53] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[09:37:53] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Quit: leaving)
[09:38:17] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 248 seconds)
[09:41:18] *** Joins: johnjay (~pi@38.120.10.99)
[09:41:49] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:42:00] <simcop2387> perlbot: farnsworth pretty_out[123456s, ["hours", "minutes", "seconds"]]
[09:42:01] *** Quits: gryphn (~gryphon@191.96.106.177) (Quit: kthxbye)
[09:42:02] <perlbot> simcop2387:  Undefined symbol 'pretty_out' 
[09:42:04] <simcop2387> hrm
[09:43:30] <simcop2387> perlbot: farnsworth prettyout[123456s, ["hours", "minutes", "seconds"]]
[09:43:32] <mst> Jonno_FTW: Net::Interface describes at length how to handle v4 versus v6 addresses and NetAddr::IP::Util has functions for each
[09:43:32] <perlbot> simcop2387:  " 34 hours 17 minutes 36.0 seconds"
[09:43:38] <simcop2387> gordonfish: ^^
[09:43:48] <simcop2387> perlbot: farnsworth &prettyout
[09:43:50] <perlbot> simcop2387:  {`dome , _measures isa []` var measures = sort[ {`a , b` var a1 = eval[ mkstr[ a ] ]; var b1 = eval[ mkstr[ b ] ]; b1 <=> a1; }, _measures ]; var i = 0; var ret = ""; map[ {`x` var val = eval[ mkstr[ x ] ]; var size = 1.0 * dome / val; i = i + 1; if ((i == length[ measures ]) && (size > 0)) { ret = ret + " $size" + mkstr[ x ]; ;  } else { if (size... [Output truncated. http://perl.bot/p/crfvzu ]
[09:43:58] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[09:44:07] <mst> Jonno_FTW: your code is faling because you didn't bother to read the fine manual, please do that first and then ask for help
[09:44:12] <gordonfish> simcop2387: Nice
[09:45:16] <gordonfish> perlbot: farnsworth prettyout[38.0TiB/(240MiB/s), ["days", "hours", "minutes", "seconds"]]
[09:45:18] <perlbot> gordonfish:  " 1 days 22 hours 7 minutes 4.53333333333333 seconds"
[09:45:49] <gordonfish> simcop2387: only issue is can't do rounding on the seconds part. That's why I was constructing that string by hand
[09:46:01] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:46:07] <simcop2387> perlbot: farnsworth prettyout[eta[38TiB+8TiB, 120MiB/s, (9TiB)/(38TiB+8TiB)] - now[], ["days", "hours", "minutes", "seconds"]]
[09:46:09] <perlbot> simcop2387:  " 3 days 17 hours 48 minutes 30.0 seconds"
[09:46:12] <gordonfish> perlbot: farnsworth round[(38.0TiB/(240MiB/s))%(60 s),3]
[09:46:14] <perlbot> gordonfish:  Unable to process different units in addition 
[09:46:21] <simcop2387> based on the average speed now
[09:46:23] <gordonfish> perlbot: farnsworth round[(38.0TiB/(240MiB/s))%(60 s),3.0]
[09:46:25] <perlbot> gordonfish:  Unable to process different units in addition 
[09:46:37] <simcop2387> perlbot: farnsworth (38.0TiB/(240MiB/s))%(60 s)
[09:46:39] <perlbot> simcop2387:  4.53333333333333 s /* time */
[09:46:52] <simcop2387> it's likely a bug due to the units with the round function
[09:46:57] <simcop2387> perlbot: farnsworth &round
[09:46:58] <perlbot> simcop2387:  {`x , d isa 1 ` var m = x * 10 ^ d; rint[ m ] * 10 ^ d * -1 + 0.0; }
[09:47:29] <simcop2387> it'd be that last + 0.0
[09:47:40] <gordonfish> hmmm
[09:47:57] <simcop2387> perlbot: farnsworth defun round = {`x , d isa 1 ` var m = x * 10 ^ d; rint[ m ] * 10 ^ d * -1.0 }
[09:47:58] <perlbot> simcop2387:  {`x , d isa 1` var m = x * 10 ^ d; rint[ m ] * 10 ^ d * 1.0 * -1; }
[09:48:10] <simcop2387> perlbot: farnsworth round[(38.0TiB/(240MiB/s))%(60 s),3.0]
[09:48:12] <perlbot> simcop2387:  (-4533000.00000000) s /* time */
[09:48:13] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:48:19] <simcop2387> ok so that does the rounding then
[09:48:29] <gordonfish> perlbot: farnsworth round[(38.0TiB/(240MiB/s))%(60 s),3] -> s
[09:48:31] <perlbot> gordonfish:  (-4533000.00000000) 
[09:48:37] <gordonfish> Expected 4.533
[09:48:46] <simcop2387> yea something still isn't right with it
[09:48:57] <gordonfish> You multipled by -1 for one
[09:49:00] <simcop2387> order of operations duh
[09:49:06] <simcop2387> perlbot: farnsworth defun round = {`x , d isa 1 ` var m = x * 10 ^ d; rint[ m ] * 10 ^ (d * -1.0) }
[09:49:08] <perlbot> simcop2387:  {`x , d isa 1` var m = x * 10 ^ d; rint[ m ] * 10 ^ (d * 1.0 * -1); }
[09:49:19] <simcop2387> that's probably a bug in the debug output above where it didn't put the parens in it
[09:49:20] <gordonfish> perlbot: farnsworth round[(38.0TiB/(240MiB/s))%(60 s),3] -> s
[09:49:23] <perlbot> gordonfish:  4.533 
[09:49:26] <gordonfish> Nice
[09:49:58] <simcop2387> the +0.0 was originally to kill rational numbers so that the rounding would actually happen.
[09:50:15] <simcop2387> forcing another part to be a "float" is a better way
[09:51:53] <simcop2387> i might try to rewrite the parser for farnsworth one day using leonerd's parser combinator stuff.  should be able to solve the bugs i kept running into using an LALR parser.
[09:53:04] <simcop2387> then i could seriously consider making some optimization steps to flatten the AST and turn it into SSA and speed it up considerably.  either that or go "fuck it do it in rust"
[09:54:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:54:51] <gordonfish> perlbot: farnsworth eta_dhms[38.0TiB, 240MiB/s]
[09:54:53] <perlbot> gordonfish:  "1 d, 22 h, 7 m, 4.533 s | 1.922 d; 46.118 h; 2767.076 m; 166024.533 s | # 2021-08-20 03:31:56.000 UTC #"
[09:54:57] <gordonfish> :)
[09:55:22] <gordonfish> Eat that, wolfram
[09:56:31] <simcop2387> ha nice
[09:57:23] <simcop2387> yay! the 8TiB of recovered disks copied, now i can put the redundant disk into place.
[09:58:05] <simcop2387> just gotta let it sit and copy for the next couple of days
[09:58:08] <gordonfish> Yeah sure takes a while to move that much data
[09:58:36] <simcop2387> i imagine it'll really be a week in the end since it's not going to stay full speed on a lot of it (tons of small files).  but then i'll have a proper backup copy of my server.
[09:59:16] <gordonfish> Hope that goes well. Once had a powersupply up and die (cap exploded) when doing a complete back up of around 5 TiB at a client about a year ago
[09:59:59] <simcop2387> yikes.  yea all this stuff is still in good order and high quality so i don't expect that kind of failure.  the disks i'm copying from though are about 6 years old and have been online 24/7 basically the whole time.
[10:00:02] <gordonfish> (I swear you'd think those huge caps were fool of soot and gunpower)
[10:00:07] <gordonfish> full*
[10:00:11] <simcop2387> gordonfish: it's called magic smoke
[10:00:16] <gordonfish> Yeah that
[10:00:54] <simcop2387> that said, the old disks have shown *zero* sign of issues.  i've had more cable and controller issues than disk issues.
[10:02:02] <gordonfish> New isn't always guarentee. I computer I built in 2010 had a PSU just fail (no explosion, just sorta farted and went silent) in less to two hours from first turn on. Nothing wrong with the hardware, a spare PSU worked and loaded the OS and everything just fine.
[10:03:08] <simcop2387> yea bathtub curves suck.  part of why i'm doing this to stress and test the new disks and setup before i get the rest of them.  i've only got half of the amount i want (12x 14TB disks for the zpool, plus 2 spares eventually)
[10:03:28] <gordonfish> (And yes, it literally made a sound that I can only describe as a short harley fart, like something got in the fan or something briefly as it croaked.)
[10:03:55] <simcop2387> i turned an old server case into a SAS2 disk shelf (easily upgradable to SAS3 if i end up wanting it)
[10:05:08] <gordonfish> simcop2387: Funny you mention controller issues, had a controller just randomly die a few weeks ago in my main home server, giving random ATA errors. Thankfully the drives were perfectly fine after swapping to a new controller and fsck'ed the lot.
[10:05:18] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[10:06:16] <gordonfish> I had backups of everthing, but it was still unnerving seeing all of that. But I knew what hard drive errors looked like and knew this had to be the controller (lack of "input/output" and similar errors tend to be a good clue)
[10:06:42] <gordonfish> And it never ceases to amaze me with just how resilient Linux is
[10:06:44] <simcop2387> gordonfish: basically same situation for me too, that's when i decided to switch to HBA sas controllers, worked well since aside from a stupid fucking PCIe issue with the original one i had.  first gen threadripper cpu and mb plus that pcie2.0 hba sas card cause the whole thing to go nuts.
[10:07:06] <gordonfish> ouch
[10:07:54] <simcop2387> after i get new disks in place i'm going to probably spend the $350 to get a sas3 expander and sell my SAS2 expander, so that i can get some more ports for output and daisy chain to an LTO7 tape drive for long term proper backups since i'm not going to spend $5k in disks to backup such a large server.
[10:09:50] <simcop2387> probably one of these or similar, https://www.amazon.com/Adaptec-Expander-82885T-Single-2283400-R/dp/B00O1A8K1Q
[10:09:50] <gordonfish> Re: i've only got half of the amount i want (12x 14TB disks for the zpool, plus 2 spares eventually)
[10:09:53] <Paperbot> Link title(s): [ Amazon.com: Adaptec Expander Card 82885T Single 2283400-R : Electronics ]
[10:09:57] <gordonfish> Holu hell, like 12 14TB disks is small, hah. I think released enough drool to fill a kiddie pool
[10:10:23] <gordonfish> That is some really nice set up you've got
[10:10:53] <simcop2387> i'm replacing a set of 6x 4TB + 6x 88TB, and they'll end up some kind of other storage that i don't know what to do with yet
[10:11:54] <simcop2387> it's running a small personal cloud, gaming vm/cad workstation, media server, and a lot of other random stuff
[10:12:00] <gordonfish> 6 88TB? Now I'm completely soaked
[10:12:27] <gordonfish> Or was that meant to be 8TB?
[10:12:29] <simcop2387> bah just 8TB :)
[10:12:37] <simcop2387> nobody makes 88TB disks, yet.
[10:12:52] <gordonfish> Maybe with some well crafted RAID
[10:13:07] <simcop2387> can't even buy the fabled 20TB disks that were announced a few years ago.
[10:14:11] <simcop2387> i'll have 126TB usable in a raidz3 once this is done, and then probably 20TB+40TB on the old disks for some kind of scratch space (with one disk redundancy on each set)
[10:15:02] * gordonfish can remember when 20 GB was like a holy grail... hell, I still have a working ST225 20 MB hard disk in my XT, that thing was huge back in the day with 360KiB floppies around
[10:16:02] <simcop2387> one of my favorite memories was getting my first 2+GB drive (or there abouts) and immediately doing a *FULL* install of Elder Scrolls: Daggerfall
[10:16:22] <simcop2387> All 450MB of it.  no more waiting on the cd to spin up when entering a dungeon
[10:16:35] <gordonfish> Got my first 2GB in a P1 133 with win 98 SE
[10:17:23] <gordonfish> (or probably first win 98, before SE, at first)
[10:17:26] <simcop2387> i had a 13gb disk that kept running for almost 20 years.  we just kept using it in random machines because we had it and kept it going.  ran a pirate radio station until it's death
[10:17:42] <simcop2387> it finally just stopped spinning up one day sadly
[10:19:04] <gordonfish> I had a 13 GB drive too, originally as a my main drive in my PIII around 2000-ish, which became my first Linux server when I got a P4. That drive finally started erroring out around 2017.
[10:19:58] <gordonfish> Like an actual radio station (FM/AM) ?
[10:21:00] <simcop2387> pirate FM station yea
[10:21:03] *** Joins: gggp (~gggp@123.113.187.31)
[10:21:56] <gordonfish> Sweet. I wonder if they ever rally found out who did that max headroom-style TV signal take over back in the 80s.
[10:21:57] <simcop2387> gordonfish: some of my older perl code, https://github.com/simcop2387/MediaSched needs a decent amount of modernizing though.  requires a caldav server somewhere to work properly
[10:21:58] <Paperbot> Link title(s): [ GitHub - simcop2387/MediaSched: An advanced jukebox software capable of controlling a media playe... ]
[10:22:24] <simcop2387> it works with mpd for music too
[10:23:18] <simcop2387> it ran an internal tv station on the tv cable in the house that wasn't hooked up to anything, so that the old analog tuners could show something when we got rid of cable
[10:24:16] <gordonfish> Haven't had cable for a while now too
[10:25:34] <simcop2387> i've been meaning to make something similar to that perl script but using OBS and putting it onto RTMP instead, then i can point plex and other stuff at it over the network instead.
[10:25:59] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[10:27:32] <gordonfish> One of the strange radio experiences I can remember was when I was around 12-ish and I was playing around with a hand-held CB on my bed, and when the antenna about touch the clock radio, which was on, I was suddenly hearing the cordless phone, which my older sister was using. It was really weird
[10:27:59] <gordonfish> This was early 90s so cordless phones didn't have any kind of encryption then
[10:28:24] <gordonfish> And I don't think I've ever told anyone about that til now
[10:29:34] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[10:31:55] <gordonfish> Yeah RTMP is pretty standard, just feed the address to VLC and you're gold
[10:32:09] <gordonfish> (and RTSP too)
[10:35:43] <simcop2387> yea, rtmp + xetv (or a few other similar projects) make for some interesting and neat things with plex and other similar programs.
[10:36:27] <simcop2387> i think it was xetv anyway.  been a while since i last played with it.
[10:37:30] <simcop2387> my goal was to get live antenna tv for recording + a nice way to live view some random streams nicely.  plex's live tv features make that rather fun, since it can then go to basically any platform like a phone, game console, computer, etc.
[10:37:50] <shlomif> gordonfish: hi, how are you?
[10:38:04] <simcop2387> alright back to sleep hopefully
[10:38:26] <shlomif> simcop2387: sleep hard! ;)
[10:38:54] <simcop2387> sleeping better, so much $WORK stuff solved and taken off as problems.
[10:40:12] <simcop2387> i'll just leave you guys with this random youtube video, https://www.youtube.com/watch?v=5ARP2BdycT4
[10:40:12] <Paperbot> YouTube video linked by simcop2387: my pet fish ft tea review - published by Mr Streamer's Professional Channel
[10:47:34] * shlomif is now playing: 11Cover Tune Grab Bag - 'Ob-La-Di, Ob-La-Da'-i6BKhvhSehc.mp4 [0802:03/0703:27]
[10:56:45] <lopid> oh jees
[10:59:25] *** Joins: horsepatat (~horsepata@212.3.196.247)
[11:02:49] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:06:50] *** Joins: pucara (~i@181.95.206.171)
[11:08:32] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:11:19] *** Quits: smitop (~smitop@user/smitop) (Remote host closed the connection)
[11:12:07] *** Joins: smitop (~smitop@user/smitop)
[11:25:47] *** Quits: randir (~randir@95-25-151-74.broadband.corbina.ru) (Remote host closed the connection)
[11:31:50] * GumbyPAN CPAN Upload: Proc-ProcessTable-0.611 by JWB https://metacpan.org/release/JWB/Proc-ProcessTable-0.611
[11:32:02] *** Joins: art1 (~romeyke@p200300ccdf04ea0097d238b2ad67f5bd.dip0.t-ipconnect.de)
[11:35:59] *** Joins: Pali (~pali@user/pali)
[11:36:09] *** Joins: gggp_ (~gggp@123.113.184.187)
[11:39:55] *** Quits: gggp (~gggp@123.113.187.31) (Ping timeout: 268 seconds)
[11:41:09] *** Joins: randir (~randir@93.159.239.42)
[11:49:46] *** Quits: Pali (~pali@user/pali) (Ping timeout: 268 seconds)
[11:51:52] * GumbyPAN CPAN Upload: Net-Whois-Raw-2.99032 by NALOBIN https://metacpan.org/release/NALOBIN/Net-Whois-Raw-2.99032
[11:52:11] *** Quits: amnesiac (~marco@c-73-189-251-48.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:02:06] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[12:07:05] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[12:10:59] *** Quits: justache (~justache@user/justache) (Ping timeout: 252 seconds)
[12:13:00] *** Joins: justache (~justache@user/justache)
[12:17:10] *** Quits: justache (~justache@user/justache) (Ping timeout: 240 seconds)
[12:22:08] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[12:22:14] *** Joins: justache (~justache@user/justache)
[12:27:42] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[12:27:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:28:11] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:28:27] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[12:29:15] *** Joins: justache (~justache@user/justache)
[12:31:01] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:32:28] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[12:34:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[12:34:34] *** Joins: Su-Shee (~Susanne@p4ffc78d6.dip0.t-ipconnect.de)
[12:34:38] *** Joins: mattil (~mattil@airio.portalify.com)
[12:36:42] *** Quits: Su-Shee_ (~Susanne@p4ff49594.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[12:37:56] <Ovid> If anyone here has been following the Corinna project, Damian Conway has come out strongly in favor of it http://blogs.perl.org/users/damian_conway/2021/08/a-dream-realized.html
[12:37:56] <Paperbot> Link title(s): [ A dream realized | Damian Conway [blogs.perl.org] ]
[12:43:56] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:44:14] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:44:17] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[12:44:46] *** Joins: mattil (~mattil@airio.portalify.com)
[12:46:03] <quesker> what is this stuff?    :param :reader :writer
[12:47:04] <haarg> the variable by default is entirely private - the code in the class itself can access it but nothing else can
[12:47:31] <haarg> :reader generates a method allowing users to read the variable
[12:47:44] <haarg> :writer generates a method allowing users to set the variable
[12:48:30] <haarg> and :param allows the constructor to be given a value which will set the variable on instantiation
[12:51:06] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:53:14] *** Quits: gggp_ (~gggp@123.113.184.187) (Read error: Connection reset by peer)
[12:53:37] *** Joins: gggp_ (~gggp@60.10.194.45)
[12:53:47] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 245 seconds)
[12:54:19] <quesker> I have never understood why you need a setter and getter instead of just accessing the variable
[12:59:08] <lopid> :getter and :setter would have been more conventional, imho
[12:59:11] *** Joins: gggp__ (~gggp@123.113.178.232)
[13:00:18] <quesker> what is so great about it.  it is just the oop way for convention
[13:00:25] *** Joins: Kloi (~Kloi@89.151.178.115)
[13:00:28] <quesker> missed the ? at the end there
[13:00:54] <lopid> you can do both, here. just add :reader and :writer
[13:01:15] *** Quits: Kloi (~Kloi@89.151.178.115) (Client Quit)
[13:02:07] *** Quits: gggp_ (~gggp@60.10.194.45) (Ping timeout: 245 seconds)
[13:04:53] <haarg> if external code can make arbitrary changes to your object's internal state, then it becomes significantly harder to reason about the behavior of your code
[13:05:43] <lopid> i think quesker's referring to a method that is both a getter and a setter, versus separate methods for each
[13:06:10] <haarg> part of the idea with Corinna is that inside the class, you can just access the variable directly. this is different from systems like Moose which encourage you to use getters/setters inside the class as well.
[13:06:16] <quesker> no sorry I was asking the religious question, I just did some googling about it
[13:07:05] <haarg> corinna will likely have :accessor as well which will provide a single method for read+write
[13:07:47] <haarg> just some of the people talking about it don't like that style so they aren't using it in examples
[13:08:46] <Ovid> haarg: :accessor would imply read-only. I think LeoNerd has gone with :mutator for that?
[13:09:14] <haarg> i dunno, i don't really care about the spelling of those
[13:12:00] * GumbyPAN CPAN Upload: Unisyn-Parse-20210818 by PRBRENAN https://metacpan.org/release/PRBRENAN/Unisyn-Parse-20210818
[13:12:00] * GumbyPAN CPAN Upload: Nasm-X86-20210818 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210818
[13:12:36] <Ovid> They're common terms in the OO world, so we need to not surprise people too much with them.
[13:22:01] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9913 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9913
[13:22:21] *** Quits: pucara (~i@181.95.206.171) (Quit: Lost terminal)
[13:27:56] *** Joins: pucara (~i@181.95.206.171)
[13:42:03] * GumbyPAN CPAN Upload: Data-Table-Text-20210818 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210818
[13:47:04] * GumbyPAN CPAN Upload: App-Licensecheck-v3.2.11 by JONASS https://metacpan.org/release/JONASS/App-Licensecheck-v3.2.11
[13:55:24] <horsepatat> any suggestinos which module I should use to convert bunch of Markdown to HTML?
[13:57:05] * GumbyPAN CPAN Upload: Data-Table-Text-20210819 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210819
[13:59:55] <vague> horsepatat, there's some old module from 2010 in cpan, no idea how good it is, this was on github: https://github.com/brxfork/md2html
[13:59:55] <Paperbot> Link title(s): [ GitHub - brxfork/md2html: Perl converter from markdown to html, using Text::Markdown module ]
[14:02:35] <LeoNerd> Ohdear.. Have we accidentally made something even DCONWAY likes?
[14:08:09] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[14:11:35] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[14:12:06] * GumbyPAN CPAN Upload: Data-Table-Text-20210820 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210820
[14:14:46] <haarg> horsepatat: https://metacpan.org/pod/CommonMark is probably the best option
[14:14:47] <Paperbot> Link title(s): [ CommonMark - metacpan.org ]
[14:16:30] *** Joins: txtsd (~txtsd@user/txtsd)
[14:17:13] <horsepatat> yea that needs libcmark library
[14:17:26] <haarg> yes
[14:30:53] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:32:08] * GumbyPAN CPAN Upload: Alien-libtickit-0.12 by PEVANS https://metacpan.org/release/PEVANS/Alien-libtickit-0.12
[14:33:01] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:47] *** Joins: csrf (~csrf@user/csrf)
[15:13:58] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:14:07] <xenu> https://news.ycombinator.com/item?id=28219068
[15:14:08] <Paperbot> Link title(s): [ Hash collision in Apple NeuralHash model | Hacker News ]
[15:14:31] <xenu> according to apple there is "1 in 1 trillion probability" that happens
[15:15:32] <daemon> a trillion is not that massive of a number, so what they really are saying is 'we hope it does not happen - but we know it will and have prepared an excuse' :)
[15:17:36] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:18:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:18:22] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 245 seconds)
[15:20:46] *** Quits: jaguart (~jaguart@178.171.187.81.in-addr.arpa) (Remote host closed the connection)
[15:21:04] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[15:26:32] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[15:26:40] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[15:27:46] <shlomif> horsepatat: i used and contributed to https://metacpan.org/dist/Markdent
[15:27:47] <Paperbot> Link title(s): [ Markdent-0.40 - An event-based Markdown parser toolkit - metacpan.org ]
[15:29:46] <shlomif> horsepatat: I use git because, while popular, it is very good and the alternatives are not much better (& often worse). I prefer DocBook/XML 5 or asciidoctor over the markdowns ( https://en.wikipedia.org/wiki/A_language_is_a_dialect_with_an_army_and_navy ) despite being less popular
[15:29:47] <Paperbot> Link title(s): [ A language is a dialect with an army and navy - Wikipedia ]
[15:30:07] *** Joins: gggp_ (~gggp@114.245.108.247)
[15:30:37] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:33:37] *** Quits: gggp__ (~gggp@123.113.178.232) (Ping timeout: 268 seconds)
[15:36:26] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 258 seconds)
[15:37:50] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:42:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:43:52] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:44:04] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:44:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[15:45:46] *** Joins: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de)
[15:55:48] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[16:11:19] * GumbyPAN CPAN Upload: Tickit-0.72 by PEVANS https://metacpan.org/release/PEVANS/Tickit-0.72
[16:16:20] * GumbyPAN CPAN Upload: Time-Zone-Olson-0.39_06 by DDICK https://metacpan.org/release/DDICK/Time-Zone-Olson-0.39_06
[16:17:52] *** Quits: pucara (~i@181.95.206.171) (Quit: Lost terminal)
[16:21:20] * GumbyPAN CPAN Upload: ClearPress-v2021.1.5 by RPETTETT https://metacpan.org/release/RPETTETT/ClearPress-v2021.1.5
[16:27:17] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:27:40] <jabberwok> regards Corinna, O::P, et al:  Are the sets of terms setter/getter versus reader/writer interchangeable or is there a shade of semantic difference?
[16:28:10] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 240 seconds)
[16:28:29] *** Joins: jplesnik_ (~jplesnik@nat-pool-brq-t.redhat.com)
[16:28:43] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 268 seconds)
[16:31:05] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Ping timeout: 248 seconds)
[16:31:15] <haarg> they are essentially interchangeable when being discussed
[16:32:09] <haarg> but corinna itself calls them reader and writer
[16:32:51] <LeoNerd> I prefer reader/writer, I just thing "getter" and "setter" are a) somewhat babyish words and b) both already have other technical meanings
[16:34:05] <jabberwok> Excellent.  Thanks haarg and I agree entirely LeoNerd.  Reading the latest Corinna RFC all my slight hesitations seem to have vanished.
[16:34:50] <LeoNerd> :)
[16:37:01] *** Joins: gggp__ (~gggp@123.113.178.232)
[16:40:04] *** Quits: gggp_ (~gggp@114.245.108.247) (Ping timeout: 258 seconds)
[16:46:36] <jabberwok> One wonders: Would O'Reilly still be the one to print "Programming Perl, Fifth Edition" ... and: will Knuth's Volume 5 beat it to press ... hmm
[16:48:10] <perlbot> Mandevil pasted a new file at https://l.perl.bot/p/u68zga - 
[16:48:26] *** jplesnik_ is now known as jplesnik
[16:48:46] <Mandevil> Anyone sees what's wrong with the above? I just want to give default attribute value that is a coderef.
[16:50:12] <shlomif> Mandevil: it will be what ->new() returns
[16:50:35] <perlbot> Mandevil pasted a new file at https://l.perl.bot/p/fok7hr - 
[16:50:43] <LeoNerd> I believe if you want the default value to be a coderef, you'll have to double-wrap it
[16:50:47] <Mandevil> This is more complete, with error message.
[16:50:49] <LeoNerd> default => sub { code to generate the default value }
[16:51:00] <LeoNerd> default => sub { sub { the code that is default } }
[16:51:06] <Mandevil> LeoNerd: But it _is_ double wrapped.
[16:51:35] <LeoNerd> Ah. I'll admit I didn't read it in great detail. I mostly looked to see "is this an Object::Pad question? -- no"
[16:51:44] <Mandevil> Hehe
[16:52:42] <Mandevil> I guess this needs manufacturing a test case
[16:53:32] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[16:55:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 248 seconds)
[16:55:41] *** Joins: pajamian (~pj@ghettoforge/pj)
[16:55:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[16:57:22] *** pajamian is now known as pj
[16:59:19] <haarg> it's not obvious what you are trying to do
[16:59:21] *** Quits: gggp__ (~gggp@123.113.178.232) (Ping timeout: 268 seconds)
[16:59:22] *** Quits: pj (~pj@ghettoforge/pj) (Excess Flood)
[16:59:43] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:59:53] *** Joins: pj (~pj@ghettoforge/pj)
[17:00:00] <Mandevil> I'm trying to give the ::SNMP's attribute 'mesg' as a coderef.
[17:00:12] <Mandevil> But wait, I'm crafting a more clear example.
[17:00:21] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[17:00:53] *** Joins: randir (~randir@93.159.239.42)
[17:04:10] *** Quits: subie (~subie@2601:4c0:4080:bc0:51d5:67b9:fbec:f45c) (Ping timeout: 240 seconds)
[17:05:26] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/9v192l - 
[17:05:43] <Mandevil> OK, this should be more understandable.
[17:06:11] <Mandevil> Funny enough, perl.bot gives _different_ error message.
[17:06:21] <Mandevil> I get...Usage: TestRole::msg(self) at t.pl line 37.
[17:06:22] *** Joins: subie (~subie@2601:4c0:4080:bc0:407a:ace2:58e8:29c8)
[17:07:27] <Mandevil> Wait, there's missing arrow.
[17:07:59] <haarg> msg => sub { _m(@_) }
[17:08:07] <haarg> $t->msg->(qw(aaa bbb ccc));
[17:08:27] <Mandevil> Didn't you say that coderef must be double wrapped?
[17:08:31] <haarg> the 'double wrap' thing only applies to attribute defaults
[17:08:37] <Mandevil> Oh right
[17:09:09] <haarg> a default can be either a non-reference, which will be copied, or a coderef, which will be executed as a method and is expected to return the default value
[17:09:36] <haarg> so if you want your default value to be a reference, like a hashref or a coderef, you need to wrap it in a sub
[17:10:05] <Mandevil> Ah, got confused by all those sub{}'s
[17:10:05] <haarg> default => sub { +{ foo => "bar" } }  or default => sub { sub { warn @_ } }
[17:10:17] <Mandevil> +{} ?
[17:10:40] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[17:11:56] <haarg> it's a hashref, forced to be an expression rather than a block
[17:12:14] <haarg> habit from dealing with ambiguous cases
[17:12:40] <Mandevil> Oh right, by adding unary +
[17:13:30] <Mandevil> Yeah, fixed... it was really that double mistake of missing arrow to invoke a coderef and unwanted double wrap
[17:14:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:16:25] * GumbyPAN CPAN Upload: URI-tel-v0.801.0 by JDEGUEST https://metacpan.org/release/JDEGUEST/URI-tel-v0.801.0
[17:18:15] <Mandevil> BTW, I was reading through the Corinna rfc... I wanted to know, does it support lazy attributes like Moo has?
[17:18:45] <LeoNerd> I'm experimenting with the idea of them, in Object::Pad::SlotAttr::LazyInit
[17:19:00] <LeoNerd> The main trouble is that they're surprising
[17:19:12] <LeoNerd> Simply reading a variable that looks like a lexical suddenly results in active behaviour that happens
[17:19:47] <haarg> they are not currently part of the corinna rfc-in-progress
[17:19:48] <LeoNerd> If instead you restrict it to only applying to reader methods and not via actual slot var access, then most of the advantages and use-cases for them disappear
[17:20:23] <Mandevil> I guess, wasn't thinking about it too much.
[17:20:34] <Mandevil> I was just wondering how would my code look like with Corinna
[17:20:42] <LeoNerd> So try it with Object::Pad
[17:20:49] * LeoNerd getting bored of saying this now ... :/
[17:21:23] <Altreus> I'm not sure I'd consider that surprising
[17:21:27] <Altreus> I mean
[17:21:36] <Altreus> It gives you scope to do surprising things, but so does 'no strict'
[17:21:58] <Altreus> Lazy attributes sounds like just enough rope to hang yourself is very 
[17:22:01] <Altreus> oops
[17:22:07] <Altreus> which is very Perly
[17:22:24] <Mandevil> What's the relation between the RFC and Object::Pad?
[17:22:27] <daemon> Always need bigger and bigger guns to make sure you hit your foot :)
[17:22:48] <haarg> i really like lazy attributes in Moo/se but the idea of lazy slot variables i despise
[17:23:19] <haarg> Object::Pad is the current testing grounds for many of the features proposed for corinna
[17:23:51] <Mandevil> Ah, ok
[17:23:52] <haarg> it doesn't implement everything in the rfc, and it implements several things that are not in the rfc
[17:24:11] <LeoNerd> Yah; it's more of a "related, similar" setting
[17:24:17] <Altreus> haarg: can you articulate the difference?
[17:24:35] <haarg> Moo/se attributes are methods
[17:24:37] *** jinky is now known as jink
[17:24:38] <LeoNerd> I have a google doc I wrote to maintain it
[17:24:44] <haarg> when you call them, you are running code
[17:25:00] <haarg> the fact that they can set up defaults at that time is unsurprising
[17:25:09] <haarg> slots are variables
[17:25:09] <Altreus> Of course, but that seems to me to be (correctly) abstracting away from the consumer the requirement to know whether a thing is a property or not
[17:25:19] <LeoNerd> Yah; accessor methods make it obvious that you are running code. There's a method call, right there...
[17:25:27] <Altreus> I feel like we've now gone backwards, because having to know whether it's a slot or a method is anti-OO
[17:25:36] <LeoNerd> Whereas simply reading a slot variable, is just reading from a variable. It's surprising to have it *do things* at that time
[17:25:39] <haarg> running code when you access a variable is one of the worst things you could put into a design
[17:25:52] *** Quits: jink (mrjink@chat.jink.net) (Quit: reboot)
[17:26:03] <haarg> a method is spelled like this: $self->foo
[17:26:10] <haarg> a slot is spelled like this: $foo
[17:26:16] <haarg> they are very different
[17:26:17] <Altreus> Sure, but a variable and an object's property shouldn't be conflated
[17:26:27] <LeoNerd> In fact, lazy init is probably *the* topmost reason why I made the Object::Pad 3rdparty attribute support, so I could make Object::Pad::SlotAttr::LazyInit as a separate module, not within the O:P core -itself-
[17:26:39] <LeoNerd> Altreus: *headdesk* the variable _is_ the object storage
[17:26:50] <haarg> making object properties into variables is the essential point of corinna
[17:26:57] <Altreus> well I'm talking philosophically
[17:27:03] <haarg> if you don't want that, corinna serves no purpose
[17:27:10] *** Quits: horsepatat (~horsepata@212.3.196.247) (Ping timeout: 240 seconds)
[17:27:13] <LeoNerd> So this is, in my mind, another plus point on the "Twigils" argument
[17:27:20] *** Joins: pj (~pj@ghettoforge/pj)
[17:27:25] <Mandevil> Does it mean Corinna should be faster than Moo/se?
[17:27:30] <LeoNerd> If slot vars look different to lexicals, then you might not be so surprised that reading from them still causes code to run
[17:27:33] <Altreus> Requesting of an object an item of data should be either a) disallowed or b) method calls
[17:27:48] <Altreus> or c) something new entirely
[17:27:49] <LeoNerd> Mandevil: Go see benchmarks between Object::Pad and Moose then
[17:27:55] *** Joins: jink (mrjink@chat.jink.net)
[17:28:04] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net) (Quit: zzzz)
[17:28:14] <haarg> why should an object need to use a method to access its own data?
[17:28:29] <Altreus> The pure philosophy, of course, says you should not need to know from outside what properties the object has, so the class can happily call a method if it wants a lazy thing
[17:28:33] <Altreus> Right
[17:28:35] <haarg> also, that method has to access the object's data, so i guess it shouldn't be allowed?
[17:28:51] <haarg> slot variables are internal only
[17:29:01] <haarg> outsiders cannot access them
[17:29:11] <haarg> they will need to use an accessor method
[17:29:16] <Altreus> oh! my mistake then
[17:29:24] <Altreus> For some reason I thought it allowed that
[17:29:47] <Altreus> internally it makes perfect sense not to bother with lazy attributes when you can just use a method
[17:29:47] <LeoNerd> slots are lexically scoped to the code body of the class itself. nobody else can see them
[17:29:58] <LeoNerd> Not users, not subclasses, not parent classes or roles or anything
[17:30:05] <Altreus> in fact maybe this will convince people to use OO a bit better
[17:31:18] <haarg> Moo/se encourage very struct-y objects everything is public by default, and can be passed in by users
[17:32:30] <haarg> corinna goes the other way - slots are entirely private by default, and you have to request accessors and the ability for users to pass them in
[17:32:38] *** Joins: bmeneg (~bmeneg@2001:1284:f016:c77f:a0a2:51e8:3acb:a2a5)
[17:33:07] <Altreus> Feels like the old "ask politely" philosphy of Perl OO has been overturned
[17:35:05] <Mandevil> haarg: That seems very nice approach to me.
[17:35:33] <haarg> turns out nobody is polite in large code bases
[17:35:41] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:35:52] <Altreus> well they have to write perl, what do you expect? :trollface:
[17:36:11] <LeoNerd> A deliciously self-circular argument ;)
[17:37:29] <Altreus> of course you like Circles!
[17:40:12] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[17:40:19] * revhippie tries to make a deal w/ LeoNerd...  https://static.wikia.nocookie.net/muppet/images/c/c1/Buyano.jpg/revision/latest/scale-to-width-down/605?cb=20061029233636
[17:42:47] *** Joins: Juerd (juerd@computervrede.nl)
[17:43:08] <xenu> corinna should exit(1) when it detects a competing OOP system, AnyEvent style
[17:44:18] <revhippie> "Alternative OO models deprecated at line 53."
[17:44:43] <Mandevil> :-)
[17:46:28] * GumbyPAN CPAN Upload: URI-tel-v0.801.1 by JDEGUEST https://metacpan.org/release/JDEGUEST/URI-tel-v0.801.1
[17:50:13] <Mandevil> Um I'm bit slow, but... can anyone explain to me what is this about? https://github.com/Ovid/Cor/issues/29
[17:50:15] <Paperbot> Link title(s): [ To Twigil or Not To Twigil · Issue #29 · Ovid/Cor · GitHub ]
[17:50:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:50:26] <Mandevil> Why can't the move metod set $x $y when it can increment them?
[17:50:37] <Mandevil> That makes no sense to me.
[17:51:28] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:51:35] <xenu> in the first example the method takes arguments named $dx and $dy, that is they don't share names with slots
[17:51:37] <haarg> if you want a move method that sets the slot values, the natural signature is: method move ($x, $y) { ... }
[17:52:07] <haarg> but you've just used $x and $y as parameters. your slots are also spelled $x and $y. how do you set the slots?
[17:52:17] <Mandevil> Oh, so just a name collision.
[17:52:25] <Mandevil> Got it
[17:52:40] <haarg> the ticket focuses a bit too much on the collision/shadowing aspect imo
[17:53:07] <haarg> it's just a general problem that $x doesn't obviously refer to object data
[17:57:40] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:58:17] <Altreus> This is an interesting debate actually
[17:58:36] <Altreus> Obviously you can already do that overshadowing thing with signatures and lexicals right now
[17:58:44] <Altreus> The answer is, don't do that
[17:59:21] <Altreus> (You can do it with lexicals and lexicals but at least that's a bit more clear because there's a new 'my')
[17:59:45] <haarg> it feels more likely to happen with object data though
[17:59:53] <Ovid> In practice, I don't see this shadowing happen much in code with signatures because most codebases generally don't define tons of variables outside of the subroutines. I suspect this will be more common with methods.
[18:00:07] <haarg> i can't really say concretely how much of a problem that is though
[18:01:29] * GumbyPAN CPAN Upload: Minion-Backend-Redis-0.003 by DFUG https://metacpan.org/release/DFUG/Minion-Backend-Redis-0.003
[18:09:53] <Altreus> I think $# gives us enough precedent for twigils in Perl5 that another use of them is not unwarranted. Plus I like them.
[18:10:20] *** Joins: pj (~pj@ghettoforge/pj)
[18:13:01] *** Parts: art1 (~romeyke@p200300ccdf04ea0097d238b2ad67f5bd.dip0.t-ipconnect.de) ()
[18:16:09] *** Joins: proller (~p@2a02:6b8:0:40c:d2d0:3e9b:b5cb:efe3)
[18:16:22] *** Quits: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com) (Ping timeout: 245 seconds)
[18:18:25] *** Joins: gryphn (~gryphon@191.96.106.177)
[18:26:09] *** Joins: rorx_ (~rorx@cpe-65-24-160-111.columbus.res.rr.com)
[18:26:56] *** rorx_ is now known as rorx
[18:30:28] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:41:34] * GumbyPAN CPAN Upload: Catmandu-AlephX-1.073 by NJFRANCK https://metacpan.org/release/NJFRANCK/Catmandu-AlephX-1.073
[18:43:25] *** Joins: swenssen (~martin@83.223.235.98)
[18:46:28] *** Quits: swenssen (~martin@83.223.235.98) (Client Quit)
[18:48:19] <simcop2387> Looks like someone broke apples neuralhash with a preimage attack.  you can now generate images that'll trigger the csam detection (if yoy have a hhash to start with)
[18:48:46] <simcop2387> https://news.ycombinator.com/item?id=28219068
[18:48:48] <Paperbot> Link title(s): [ Hash collision in Apple NeuralHash model | Hacker News ]
[18:49:47] *** Quits: dwxreape1 (~quinn@192.155.91.76) (Remote host closed the connection)
[18:51:56] <LeoNerd> Hash collision? Oh no... bits of hash strewn about all over the track
[18:52:00] <LeoNerd> That'll take ages for them to clean up again
[18:52:45] <xenu> of course even if that hash was working perfectly there's a much simpler attack - just send CP to the person you want arrested
[18:53:57] *** Joins: nibjc (~nibjc@77.77.164.38.client.entry.bg)
[18:54:08] <Altreus> LeoNerd: does that mean all my trains of thought are cancelled?
[18:55:02] <LeoNerd> Can anyone explain Slack to me? In particular, the fact that the UI just looks *different* for different.. er.. organisations? servers? I don't know what they are
[18:55:17] <LeoNerd> I have three of the things, and little bits of the UI are just in different places, or named different, or just plain missing between them all
[18:55:29] <LeoNerd> This is same browser, three separate tabs, all reloaded right now
[18:55:32] <alh> Slack rolls out their changes slowly to different workspaces 
[18:56:07] <LeoNerd> Hrm.. these differences have been stable for months now
[18:56:41] <alh> Maybe the workspace owner can theme the slack and you can change your own? I've never played with that
[18:56:46] <LeoNerd> The topmost "channel name" thing on the lefthand bar for example. One of my orgs has "All unreads", "Threads", "All DMs"; but one has only "All DMs" and not the first two
[18:56:49] <xenu> perhaps you're guest on some of the workspaces
[18:57:02] <xenu> a guest*
[18:57:22] <nibjc> is this pearl progrem chanel ?
[18:57:23] <LeoNerd> Oh and some of them differ in Enter vs Shift-Enter for send vs. insert linefeed
[18:57:48] <LeoNerd> And that one /really/ annoys me, because the one where I accidentally Send all the time instead of inserting linefeeds doesn't let me "delete" the message so I can't retract it
[18:58:06] <LeoNerd> nibjc: Perl, not Pearl. clue's in the name ;)
[18:58:28] <xenu> shift-enter is configurable
[18:58:31] <LeoNerd> I think there was a programming language called PEARL in the 1970s somewhere, but I don't think that's been used for a few decades now
[18:58:55] <LeoNerd> https://en.wikipedia.org/wiki/PEARL_(programming_language)
[18:58:55] <xenu> i guess preferences are per workspace, i'm not sure
[18:58:56] <Paperbot> Link title(s): [ PEARL (programming language) - Wikipedia ]
[18:59:27] <nibjc> wow i thought it was only a drums brand
[18:59:30] <LeoNerd> Mmm... very 1970s mainframe feel. It's ALL SHOUTY
[19:00:15] <xenu> sidebars apparently are configurable too
[19:00:53] <LeoNerd> Ah, ... maybe there's some config options that are set in a weird way. Perhaps aren't common across all orgs.
[19:01:20] <Altreus> Can't believe you thought Slack could be explained!
[19:01:44] <LeoNerd> I suppose I shouldn't expect much from a system whose name is a synonym for "loose" or "sloppy"
[19:01:59] <LeoNerd> ill-fitting
[19:02:03] <xenu> well slackware is a pretty good system
[19:03:50] <haarg> i think most slack settings are per-workspace
[19:30:17] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[19:37:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:43:22] *** Joins: thrig (~thrig@65.113.153.50)
[19:46:10] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[19:46:12] *** Joins: RandalSchwartz (~Adium@2601:1c0:6200:1082:58e8:5f46:de31:e5a2)
[19:46:58] <Grinnz> i'm sure i'm jinxing it, but no negative comments on https://www.reddit.com/r/perl/comments/p6o6r0/making_taint_support_optional_in_perl/ so far
[19:46:59] <Paperbot> Link title(s): [ Making Taint support optional in Perl : perl ]
[19:49:01] <shlomif> RandalSchwartz: hi, is Adium still maintained?
[19:49:35] *** Joins: pj (~pj@ghettoforge/pj)
[19:51:18] *** Joins: gast0n (~g4570n@user/gast0n)
[19:51:29] *** Quits: GEttR (~GEttR@user/gettr) (Remote host closed the connection)
[19:51:45] <haarg> Grinnz: if you want some pain: https://www.perlmonks.org/?node_id=11135810
[19:51:48] <Paperbot> Link title(s): [ Proposed change regarding "Taint" support ]
[19:51:54] *** Joins: GEttR (~GEttR@user/gettr)
[19:52:33] <haarg> although it shouldn't be a surprise that there are a bunch of people on perlmonks that care about taint mode
[19:53:02] <thrig> from when godwanaland was a thing
[19:54:06] *** Joins: tkr (tkr@pi.ip.fi)
[19:55:07] <xenu> perlmonks? there are still some people on p5p who are fans of it
[19:55:17] <xenu> i'm surprised davem didn't try to shoot down neilb's proposal
[19:57:48] <xenu> i guess the old guard is becoming less active which means less opposition to changes
[19:59:55] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:01:53] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[20:03:35] *** Quits: RandalSchwartz (~Adium@2601:1c0:6200:1082:58e8:5f46:de31:e5a2) (Quit: Leaving.)
[20:05:07] <xenu> some discussion, both on reddit and p5p from year ago: https://www.reddit.com/r/perl/comments/d5kg62/formal_request_discourage_taint_p5p/
[20:05:08] <Paperbot> Link title(s): [ Formal Request - Discourage Taint [p5p] : perl ]
[20:05:08] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[20:08:44] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:14:40] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[20:17:05] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[20:18:29] *** Joins: randir (~randir@95-25-151-74.broadband.corbina.ru)
[20:18:57] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:26:44] * GumbyPAN CPAN Upload: App-RouterColorizer-1.212302 by JMASLAK https://metacpan.org/release/JMASLAK/App-RouterColorizer-1.212302
[20:29:27] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[20:30:08] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[20:31:49] *** Joins: diskin (~diskin@87.117.56.205)
[20:32:06] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Ping timeout: 268 seconds)
[20:35:52] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:37:44] *** Joins: mattil (~mattil@87-92-48-230.bb.dnainternet.fi)
[20:40:37] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 252 seconds)
[20:41:40] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[20:43:51] <genio> Ugh. Point people on Perlmonks to a page where I list huge reasons why it’s broken and they choose to ignore all that because someone else also said it’s broken without repeating every single point that was already made.
[20:45:01] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[20:49:04] <genio> “One scenario where taint checking is relevant are setuid scripts which might still exist.”  Ugh
[20:50:00] <LeoNerd> taint-checking those is really easy. Everything is possibly insecure, so just quit immediately. ;)
[20:50:07] <thrig> ... rewrite with a C wrapper that has the setuid bit on it, instead
[20:50:59] <genio> FFS people. *tosses a random pile of papers in the air and walks out*
[20:52:33] *** Joins: Pali (~pali@user/pali)
[20:53:47] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 245 seconds)
[20:55:47] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[20:57:48] <haj> thrig: Yes, a C wrapper is needed (suidperl isn't readily available any more)
[20:59:20] <thrig> in theory you could do it with sudo or something but PAM or whatever on RedHat linux might put a kibosh on that
[21:00:10] *** Quits: subie (~subie@2601:4c0:4080:bc0:407a:ace2:58e8:29c8) (Ping timeout: 240 seconds)
[21:02:01] *** Joins: amnesiac (~marco@c-73-189-251-48.hsd1.ca.comcast.net)
[21:02:15] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[21:02:20] <haj> You can do it with sudo quite fine, this takes care of the problem by not propagating the environment.  The issue is that you need to be aware that a change in Perl will heavily affect the security of your long forgotten scripts
[21:03:03] *** Joins: subie (~subie@2601:4c0:4080:bc0:407a:ace2:58e8:29c8)
[21:03:03] <thrig> maybe sudo would work, but I gave up and wrote a setuid C wrapper instead on RedHat
[21:05:25] <haj> So yeah, if Perl doesn't keep dropping PERL5LIB when under setuid, you need to clean the environment in your wrapper.
[21:08:38] <haj> All the other taint things can be covered by a carefully written script, but PERL5LIB will bite you before the script takes control.
[21:11:49] * GumbyPAN CPAN Upload: Regexp-Pattern-License-v3.9.3 by JONASS https://metacpan.org/release/JONASS/Regexp-Pattern-License-v3.9.3
[21:12:11] <Altreus> other people forgetting about scripts and then upgrading the system they're running on is not a p5p problem
[21:20:20] *** Joins: Kloi (~Kloi@85.140.6.14)
[21:22:31] *** Quits: Kloi (~Kloi@85.140.6.14) (Client Quit)
[21:26:33] *** Joins: magla (~gelignite@55d4a2ba.access.ecotel.net)
[21:27:33] *** Joins: gast0n (~g4570n@user/gast0n)
[21:30:21] <Grinnz> it would be nice if initgroups was available from POSIX.pm, but it's not portable enough
[21:30:41] <Grinnz> initgroups is basically a requirement for a script to safely change users internally
[21:31:13] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[21:38:27] *** Joins: komunista (~slavko@2001:470:5b81:10::1:1)
[21:38:35] <komunista> hi all
[21:39:06] <komunista> please i know very little about perl, but i need to extend the logwatch's dovecot script
[21:40:00] <komunista> i found in it syntax, which doesn't works for me, see https://bpa.st/LHCQ
[21:40:00] <Paperbot> Link title(s): [ View paste LHCQ ]
[21:40:14] <komunista> please what i did wrong in it?
[21:40:41] <shlomif> komunista: hi
[21:40:58] <Grinnz> komunista: declaring $User and $Host twice in one expression is a problem
[21:41:18] <Grinnz> you could declare them before, and remove the 'my' from the expression
[21:42:29] <komunista> yes, this i tried and it works, it works without strict and my too, then this syntax in dovecot logwatch script is wrong?
[21:42:31] <thrig> or put the matches into %+
[21:42:45] <Grinnz> you should always use strict and warnings
[21:43:05] <Grinnz> yes, declaring the same variable twice in one expression is wrong
[21:43:33] <komunista> yes, i mean declaring it twice in logwatch script is wrong
[21:43:38] <Grinnz> if "use warnings" is active, you should get a warning about shadowing
[21:43:53] <komunista> please, what is %+?
[21:44:14] <Grinnz> it's for named captures, if your regexes use them; they probably don't
[21:44:48] <komunista> no, i have no named groups
[21:45:15] <komunista> thanks, i will try to declare them before use
[21:46:26] <komunista> many thanks, i was lost
[21:46:52] * GumbyPAN CPAN Upload: Script-Singleton-0.02 by STEVEB https://metacpan.org/release/STEVEB/Script-Singleton-0.02
[21:47:57] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 245 seconds)
[21:51:21] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[21:57:38] *** Quits: mattil (~mattil@87-92-48-230.bb.dnainternet.fi) (Read error: Connection reset by peer)
[22:02:12] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[22:12:59] *** Joins: clscott (~clscott@184.147.147.88)
[22:14:20] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 258 seconds)
[22:16:15] *** Joins: txtsd (~txtsd@user/txtsd)
[22:18:36] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 272 seconds)
[22:29:49] *** Joins: logioniz (~logioniz@94.190.31.65)
[22:30:25] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[22:31:29] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[22:31:54] <mjgardner> I dimly recall someone here mentioning a project they're working on using Object::Pad. Who/what was it?
[22:35:10] *** Joins: slopey (~slopey@user/slopey)
[22:46:59] * GumbyPAN CPAN Upload: Excel-ValueReader-XLSX-1.02 by DAMI https://metacpan.org/release/DAMI/Excel-ValueReader-XLSX-1.02
[22:47:14] <ilmari> https://metacpan.org/dist/Myriad is the only non-exampl/benchmark of the non-LeoNerd reverse depenencies of it
[22:47:14] <Paperbot> Link title(s): [ Myriad-0.010 - async microservice framework - metacpan.org ]
[22:47:28] *** Joins: pizdets_ (~pizdets@183.182.111.5)
[22:47:32] <ilmari> well, non-PEVANS
[22:47:46] *** Quits: pizdets (~pizdets@183.182.115.82) (Ping timeout: 268 seconds)
[22:48:00] <ilmari> it has his fingerprints: microservice coördination
[22:48:20] <ilmari> ooh, and "rôles", even fancier
[22:50:17] <mjgardner> ilmari: I believe that's the $work client that LeoNerd mentioned on p5p.
[22:50:22] <ilmari> yeah
[22:51:59] * GumbyPAN CPAN Upload: Rex-Hook-File-Diff-v0.4.0 by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Diff-v0.4.0
[22:52:06] *** Joins: wilk_ (~wilk@user/wilk)
[22:53:56] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[22:55:16] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 272 seconds)
[22:55:16] *** wilk_ is now known as wilk
[22:58:32] <LeoNerd> Yeah that's tm604's
[22:58:40] *** Quits: subie (~subie@2601:4c0:4080:bc0:407a:ace2:58e8:29c8) (Ping timeout: 240 seconds)
[23:02:48] *** Joins: subie (~subie@2601:4c0:4080:bc0:407a:ace2:58e8:29c8)
[23:04:04] *** Joins: R2robot_ (~R2robot@user/r2robot)
[23:05:27] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 245 seconds)
[23:06:50] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[23:06:50] *** diskin is now known as Guest4811
[23:06:50] *** diskin_ is now known as diskin
[23:09:07] *** Quits: Guest4811 (~diskin@87.117.56.205) (Ping timeout: 252 seconds)
[23:09:44] *** Joins: R2robot (~R2robot@user/r2robot)
[23:12:10] *** Quits: R2robot_ (~R2robot@user/r2robot) (Ping timeout: 240 seconds)
[23:27:45] *** Joins: qw_ (~santi@93-160-66-247-static.dk.customer.tdc.net)
[23:30:17] *** Quits: nibjc (~nibjc@77.77.164.38.client.entry.bg) (Ping timeout: 248 seconds)
[23:34:53] <dimbag> Hi, is this option "result_class => 'DBIx::Class::ResultClass::HashRefInflator'" in Dbix::Class makes the response slow ?
[23:37:57] *** Quits: proller (~p@2a02:6b8:0:40c:d2d0:3e9b:b5cb:efe3) (Ping timeout: 245 seconds)
[23:41:40] <Grinnz> that should make it faster, since it doesn't need to create objects for the results
[23:42:01] *** Parts: komunista (~slavko@2001:470:5b81:10::1:1) (Leaving.)
[23:47:24] <dimbag> Grinnz, thank you very much
[23:49:10] *** Quits: logioniz (~logioniz@94.190.31.65) (Quit: Leaving)
[23:55:15] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
